void *SetupContext.Builder._proximitySetupClientIntercept()@<X0>(void *a1@<X8>)
{
  uint64_t v1;

  sub_2364984F8(*(void **)(v1 + 48), *(id *)(v1 + 56), *(_QWORD *)(v1 + 64));
  *(_OWORD *)(v1 + 48) = xmmword_2365B7D00;
  *(_QWORD *)(v1 + 64) = 0xC000000000000000;
  *(_WORD *)(v1 + 76) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  return memcpy(a1, (const void *)v1, 0x101uLL);
}

void *SetupContext.Builder._context(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id *v2;
  id *v3;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v18[5];
  _BYTE v19[616];
  _BYTE v20[616];
  _BYTE __src[616];
  _BYTE v22[24];
  uint64_t v23;
  _OWORD __dst[40];

  v3 = v2;

  v3[16] = a1;
  sub_2364D9430((uint64_t)(v3 + 17), (uint64_t)v22);
  if (v23)
  {
    v6 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8998);
    if ((swift_dynamicCast() & 1) != 0)
    {
      memcpy(__dst, __src, 0x268uLL);
      if (qword_2563E42D0 != -1)
        swift_once();
      v7 = sub_2365AFC00();
      __swift_project_value_buffer(v7, (uint64_t)qword_2563E60D8);
      v8 = sub_2365AFBE8();
      v9 = sub_2365B038C();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = swift_slowAlloc();
        v18[0] = v11;
        *(_DWORD *)v10 = 136315138;
        swift_beginAccess();
        memcpy(v20, __dst, sizeof(v20));
        memcpy(v19, __dst, sizeof(v19));
        sub_23649255C((uint64_t)v20);
        v12 = sub_2365B0080();
        *(_QWORD *)v19 = sub_236468D88(v12, v13, v18);
        sub_2365B04A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23644B000, v8, v9, "Applying main queue override on exchange: %s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B7F5254](v11, -1, -1);
        MEMORY[0x23B7F5254](v10, -1, -1);
      }

      sub_2364985A8();
      v14 = sub_2365B03E0();
      swift_beginAccess();
      v15 = *(void **)&__dst[10];
      *(_QWORD *)&__dst[10] = v14;

      *(_OWORD *)v19 = __dst[0];
      *(_OWORD *)&v19[16] = __dst[1];
      *(_OWORD *)&v19[32] = __dst[2];
      *(_OWORD *)&v19[48] = __dst[3];
      *(_OWORD *)&v19[64] = __dst[4];
      *(_OWORD *)&v19[80] = __dst[5];
      *(_OWORD *)&v19[96] = __dst[6];
      *(_OWORD *)&v19[112] = __dst[7];
      *(_OWORD *)&v19[128] = __dst[8];
      *(_OWORD *)&v19[144] = __dst[9];
      *(_OWORD *)&v19[168] = *(_OWORD *)((char *)&__dst[10] + 8);
      *(_OWORD *)&v19[184] = *(_OWORD *)((char *)&__dst[11] + 8);
      *(_OWORD *)&v19[200] = *(_OWORD *)((char *)&__dst[12] + 8);
      *(_OWORD *)&v19[216] = *(_OWORD *)((char *)&__dst[13] + 8);
      *(_OWORD *)&v19[232] = *(_OWORD *)((char *)&__dst[14] + 8);
      *(_OWORD *)&v19[248] = *(_OWORD *)((char *)&__dst[15] + 8);
      *(_QWORD *)&v19[160] = v14;
      *(_QWORD *)&v19[264] = *((_QWORD *)&__dst[16] + 1);
      *(_OWORD *)&v19[272] = __dst[17];
      *(_OWORD *)&v19[288] = __dst[18];
      *(_OWORD *)&v19[304] = __dst[19];
      *(_OWORD *)&v19[320] = __dst[20];
      *(_OWORD *)&v19[336] = __dst[21];
      *(_OWORD *)&v19[352] = __dst[22];
      *(_OWORD *)&v19[368] = __dst[23];
      *(_OWORD *)&v19[384] = __dst[24];
      *(_OWORD *)&v19[400] = __dst[25];
      *(_OWORD *)&v19[416] = __dst[26];
      *(_OWORD *)&v19[432] = __dst[27];
      *(_OWORD *)&v19[448] = __dst[28];
      *(_OWORD *)&v19[464] = __dst[29];
      *(_OWORD *)&v19[480] = __dst[30];
      *(_OWORD *)&v19[496] = __dst[31];
      *(_OWORD *)&v19[512] = __dst[32];
      *(_OWORD *)&v19[528] = __dst[33];
      *(_OWORD *)&v19[544] = __dst[34];
      *(_OWORD *)&v19[560] = __dst[35];
      *(_OWORD *)&v19[576] = __dst[36];
      *(_OWORD *)&v19[592] = __dst[37];
      *(_QWORD *)&v19[608] = *(_QWORD *)&__dst[38];
      v18[3] = (uint64_t)&type metadata for AutomaticSetupModelExchange;
      v18[4] = (uint64_t)&protocol witness table for AutomaticSetupModelExchange;
      v18[0] = swift_allocObject();
      memcpy((void *)(v18[0] + 16), v19, 0x268uLL);
      sub_23649255C((uint64_t)v19);
      sub_2364D9478((uint64_t)(v3 + 17));
      sub_2364D94B8((uint64_t)v18, (uint64_t)(v3 + 17));
      memcpy(v20, __dst, sizeof(v20));
      sub_2364927FC((uint64_t)v20);
    }
  }
  else
  {
    v16 = a1;
    sub_2364D9478((uint64_t)v22);
  }
  return memcpy(a2, v3, 0x101uLL);
}

void *SetupContext.Builder.modelExchange<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  const void *v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10[5];

  v10[3] = a2;
  v10[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  sub_2364D9478((uint64_t)v4 + 136);
  sub_2364D94B8((uint64_t)v10, (uint64_t)v4 + 136);
  return memcpy(a4, v4, 0x101uLL);
}

uint64_t SetupContext.Builder.build()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[264];

  v2 = v1;
  v4 = *(void **)(v1 + 128);
  if (!v4)
  {
    sub_2364D9500(v1, (uint64_t)v9);
    v7 = sub_2364D5458();
    goto LABEL_5;
  }
  v5 = v4;
  v6 = AISSetupContext.into(relaxed:)(1);
  if (v6)
  {
    v7 = v6;

LABEL_5:
    sub_2364D9430(v2 + 136, (uint64_t)v9);
    sub_2364D9534(v2);
    *a1 = v7;
    return sub_2364D94B8((uint64_t)v9, (uint64_t)(a1 + 1));
  }
  sub_2364D9560();
  swift_allocError();
  swift_willThrow();

  return sub_2364D9534(v2);
}

uint64_t sub_2364D5458()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  int v51;
  int v52;
  int v53;
  char *v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  _BYTE v70[11];
  __int16 v71;
  int v72;
  __int16 v73;

  v62 = type metadata accessor for SetupModel.ModelData(0);
  MEMORY[0x24BDAC7A8](v62);
  v2 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (int *)type metadata accessor for SignInModel();
  MEMORY[0x24BDAC7A8](v3);
  v54 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for AuthenticationModel();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v69 = (uint64_t)&v48 - v12;
  v13 = *(void **)(v0 + 48);
  v14 = *(void **)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 64);
  v16 = *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int16 *)(v0 + 76) << 32);
  v67 = v14;
  v68 = v13;
  v65 = v16;
  v66 = v15;
  v60 = (v15 >> 62) >= 2;
  v53 = *(unsigned __int8 *)(v0 + 41);
  v61 = v53 ^ 1u | 0x200;
  v17 = *(_QWORD *)(v0 + 80);
  v18 = *(_QWORD *)(v0 + 88);
  v55 = *(_QWORD *)(v0 + 96);
  v63 = *(_QWORD *)(v0 + 104);
  v64 = v18;
  v58 = *(_QWORD *)(v0 + 112);
  v59 = v17;
  LODWORD(v17) = *(unsigned __int8 *)(v0 + 120);
  v56 = *(unsigned __int8 *)(v0 + 121);
  v57 = v17;
  v19 = type metadata accessor for IdMSAccount();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v50 = v20;
  v20(v7, 1, 1, v19);
  v20(v11, 1, 1, v19);
  v21 = &v11[v8[5]];
  *((_OWORD *)v21 + 3) = 0u;
  *((_OWORD *)v21 + 4) = 0u;
  *((_OWORD *)v21 + 1) = 0u;
  *((_OWORD *)v21 + 2) = 0u;
  *(_OWORD *)v21 = 0u;
  v22 = &v11[v8[8]];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = v8[9];
  *(_QWORD *)&v11[v23] = MEMORY[0x24BEE4AF8];
  v24 = v8[10];
  v11[v24] = 0;
  v25 = &v11[v8[11]];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  sub_236499054(v68, v67, v66);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v49 = v7;
  sub_23644F344((uint64_t)v7, (uint64_t)v11);
  v11[v8[6]] = 1;
  v26 = &v11[v8[7]];
  *((_OWORD *)v26 + 3) = 0u;
  *((_OWORD *)v26 + 4) = 0u;
  *((_OWORD *)v26 + 1) = 0u;
  *((_OWORD *)v26 + 2) = 0u;
  *(_OWORD *)v26 = 0u;
  v26[80] = 8;
  swift_bridgeObjectRelease();
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v11[v24] = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[v23] = MEMORY[0x24BEE4AF8];
  sub_236499BE8((uint64_t)v11, v69);
  v27 = v50;
  v50(v7, 1, 1, v19);
  v29 = *(_QWORD *)v0;
  v28 = *(_QWORD *)(v0 + 8);
  v30 = *(unsigned __int8 *)(v0 + 16);
  v31 = *(_QWORD *)(v0 + 24);
  v32 = *(_QWORD *)(v0 + 32);
  LOBYTE(v24) = *(_BYTE *)(v0 + 40);
  v51 = v24;
  v52 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2364D941C(v31, v32, v24);
  sub_2364D9534(v0);
  v33 = (uint64_t)v54;
  v27(v54, 1, 1, v19);
  v34 = v33 + v3[5];
  *(_OWORD *)(v34 + 64) = 0u;
  *(_OWORD *)(v34 + 80) = 0u;
  *(_OWORD *)(v34 + 32) = 0u;
  *(_OWORD *)(v34 + 48) = 0u;
  *(_OWORD *)v34 = 0u;
  *(_OWORD *)(v34 + 16) = 0u;
  v35 = v33 + v3[10];
  *(_OWORD *)v35 = 0u;
  *(_OWORD *)(v35 + 16) = 0u;
  *(_QWORD *)(v33 + v3[11]) = 0;
  v36 = (_QWORD *)(v33 + v3[13]);
  *v36 = 0;
  v36[1] = 0;
  *(_BYTE *)(v33 + v3[14]) = 0;
  sub_23644F344((uint64_t)v49, v33);
  sub_236499C2C(*(_QWORD *)v34, *(_QWORD *)(v34 + 8), *(_QWORD *)(v34 + 16), *(_QWORD *)(v34 + 24), *(_QWORD *)(v34 + 32), *(_QWORD *)(v34 + 40), *(_QWORD *)(v34 + 48), *(_QWORD *)(v34 + 56), *(_QWORD *)(v34 + 64), *(_QWORD *)(v34 + 72), *(_QWORD *)(v34 + 80), *(_QWORD *)(v34 + 88));
  *(_OWORD *)(v34 + 64) = 0u;
  *(_OWORD *)(v34 + 80) = 0u;
  *(_OWORD *)(v34 + 32) = 0u;
  *(_OWORD *)(v34 + 48) = 0u;
  *(_OWORD *)v34 = 0u;
  *(_OWORD *)(v34 + 16) = 0u;
  *(_QWORD *)(v33 + v3[6]) = v29;
  *(_QWORD *)(v33 + v3[7]) = v28;
  *(_BYTE *)(v33 + v3[8]) = 0;
  *(_BYTE *)(v33 + v3[9]) = v52;
  v37 = v33 + v3[12];
  *(_QWORD *)v37 = v31;
  *(_QWORD *)(v37 + 8) = v32;
  *(_BYTE *)(v37 + 16) = v51;
  v38 = v33 + v3[15];
  *(_BYTE *)(v38 + 32) = 0;
  *(_OWORD *)v38 = 0u;
  *(_OWORD *)(v38 + 16) = 0u;
  sub_23648DD50(*(_QWORD *)v35, *(_QWORD *)(v35 + 8));
  type metadata accessor for SetupModel(0);
  *(_OWORD *)v35 = 0u;
  *(_OWORD *)(v35 + 16) = 0u;
  v39 = swift_allocObject();
  sub_2365AFA50();
  v40 = v62;
  v41 = v69;
  sub_23648DFF8(v69, (uint64_t)&v2[*(int *)(v62 + 32)], (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationModel);
  sub_23648DFF8(v33, (uint64_t)&v2[*(int *)(v40 + 36)], (uint64_t (*)(_QWORD))type metadata accessor for SignInModel);
  *v2 = v53;
  v42 = v67;
  *((_QWORD *)v2 + 1) = v68;
  *((_QWORD *)v2 + 2) = v42;
  v43 = v65;
  *((_QWORD *)v2 + 3) = v66;
  *((_WORD *)v2 + 18) = WORD2(v43);
  *((_DWORD *)v2 + 8) = v43;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  v2[88] = -1;
  v2[96] = 0;
  v2[97] = v60;
  *(_DWORD *)(v2 + 98) = v72;
  *((_WORD *)v2 + 51) = v73;
  v44 = v63;
  *((_QWORD *)v2 + 13) = v55;
  *((_QWORD *)v2 + 14) = v44;
  v45 = v64;
  *((_QWORD *)v2 + 15) = v59;
  *((_QWORD *)v2 + 16) = v45;
  *((_QWORD *)v2 + 17) = v58;
  v2[144] = v57;
  v2[145] = v56;
  *(_DWORD *)(v2 + 146) = *(_DWORD *)&v70[7];
  *((_WORD *)v2 + 75) = v71;
  *((_QWORD *)v2 + 19) = 0;
  *((_QWORD *)v2 + 20) = 0;
  *((_QWORD *)v2 + 21) = v61;
  *((_QWORD *)v2 + 22) = 0;
  *((_QWORD *)v2 + 23) = 0;
  *((_QWORD *)v2 + 24) = 0;
  *(_OWORD *)(v2 + 200) = xmmword_2365B7D10;
  v2[216] = 0;
  *(_DWORD *)(v2 + 217) = *(_DWORD *)v70;
  *((_DWORD *)v2 + 55) = *(_DWORD *)&v70[3];
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6AC8);
  v46 = swift_allocObject();
  *(_DWORD *)(v46 + ((*(unsigned int *)(*(_QWORD *)v46 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_23648DFF8((uint64_t)v2, v46 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v46 + 16), type metadata accessor for SetupModel.ModelData);
  sub_236465A18(v33, (uint64_t (*)(_QWORD))type metadata accessor for SignInModel);
  sub_236465A18(v41, (uint64_t (*)(_QWORD))type metadata accessor for AuthenticationModel);
  sub_236465A18((uint64_t)v2, type metadata accessor for SetupModel.ModelData);
  *(_QWORD *)(v39 + 16) = v46;
  return v39;
}

uint64_t sub_2364D5A74@<X0>(uint64_t *a1@<X8>)
{
  return SetupContext.Builder.build()(a1);
}

AppleIDSetup::SetupModel::LocalRole __swiftcall AISSetupContextLocalRole.into()()
{
  uint64_t v0;
  BOOL *v1;

  *v1 = v0 != 0;
  return (char)v0;
}

void AISSetupContextRemoteRole.into(with:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint8_t *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  id v27;
  unsigned int v28;
  id v29;

  switch(a2)
  {
    case 0:
      v4 = 0;
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v5 = 0xC000000000000000;
      goto LABEL_32;
    case 1:
      v11 = objc_msgSend(a1, sel_bleDevice);
      if (v11)
      {
        v12 = v11;
        v13 = objc_msgSend(v11, sel_identifier);
        if (v13)
        {
          v14 = v13;
          v15 = sub_2365B005C();
          v17 = v16;

        }
        else
        {
          v15 = 0;
          v17 = 0;
        }
        v26 = objc_msgSend(v12, sel_proximityServicePSM);
        v27 = objc_msgSend(v12, sel_nearbyActionType);
        v28 = objc_msgSend(v12, sel_nearbyActionFlags);
        v29 = objc_msgSend(v12, sel_nearbyActionDeviceClass);

        v5 = v26 | ((_QWORD)v27 << 32);
        v4 = v28 | ((_QWORD)v29 << 32);
        *(_QWORD *)a3 = v15;
        *(_QWORD *)(a3 + 8) = v17;
        goto LABEL_32;
      }
      if (qword_2563E42D0 != -1)
        swift_once();
      v20 = sub_2365AFC00();
      __swift_project_value_buffer(v20, (uint64_t)qword_2563E60D8);
      v7 = sub_2365AFBE8();
      v21 = sub_2365B0398();
      if (os_log_type_enabled(v7, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        v23 = "Failed to convert bleClient into SetupModel.RemoteRole: missing BLE Device on context";
        goto LABEL_27;
      }
      goto LABEL_29;
    case 2:
      v4 = 0;
      *(_OWORD *)a3 = xmmword_2365B48C0;
      v5 = 0xC000000000000000;
      goto LABEL_32;
    case 3:
      v18 = objc_msgSend(a1, sel_messageSessionTemplate);
      if (v18)
      {
        v4 = 0;
        *(_QWORD *)a3 = v18;
        *(_OWORD *)(a3 + 8) = xmmword_2365BC320;
        goto LABEL_33;
      }
      if (qword_2563E42D0 != -1)
        swift_once();
      v24 = sub_2365AFC00();
      __swift_project_value_buffer(v24, (uint64_t)qword_2563E60D8);
      v7 = sub_2365AFBE8();
      v21 = sub_2365B0398();
      if (!os_log_type_enabled(v7, v21))
        goto LABEL_29;
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      v23 = "Failed to convert preEstablishedClient into SetupModel.RemoteRole: missing messageSessionTemplate on context";
      goto LABEL_27;
    case 4:
      v19 = objc_msgSend(a1, sel_messageSessionTemplate);
      if (v19)
      {
        v4 = 0;
        *(_QWORD *)a3 = v19;
        *(_OWORD *)(a3 + 8) = xmmword_2365BC310;
      }
      else
      {
        if (qword_2563E42D0 != -1)
          swift_once();
        v25 = sub_2365AFC00();
        __swift_project_value_buffer(v25, (uint64_t)qword_2563E60D8);
        v7 = sub_2365AFBE8();
        v21 = sub_2365B0398();
        if (os_log_type_enabled(v7, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          v23 = "Failed to convert preEstablishedServer into SetupModel.RemoteRole: missing messageSessionTemplate on context";
LABEL_27:
          _os_log_impl(&dword_23644B000, v7, v21, v23, v22, 2u);
          v10 = v22;
LABEL_28:
          MEMORY[0x23B7F5254](v10, -1, -1);
        }
LABEL_29:

        v4 = 0;
        *(_QWORD *)a3 = 0;
        *(_QWORD *)(a3 + 8) = 0;
        v5 = 0xFFFF00FFFF0000;
LABEL_32:
        *(_QWORD *)(a3 + 16) = v5;
      }
LABEL_33:
      *(_DWORD *)(a3 + 24) = v4;
      *(_WORD *)(a3 + 28) = WORD2(v4);
      return;
    default:
      if (qword_2563E42D0 != -1)
        swift_once();
      v6 = sub_2365AFC00();
      __swift_project_value_buffer(v6, (uint64_t)qword_2563E60D8);
      v7 = sub_2365AFBE8();
      v8 = sub_2365B0398();
      if (!os_log_type_enabled(v7, v8))
        goto LABEL_29;
      v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v9 = 134217984;
      sub_2365B04A0();
      _os_log_impl(&dword_23644B000, v7, v8, "Failed to convert unknown AISSetupContextRemoteRole into SetupModel.RemoteRole: %lu", v9, 0xCu);
      v10 = v9;
      goto LABEL_28;
  }
}

id AISSetupContextDeviceUserKind.into(with:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id result;
  uint64_t v6;
  char v7;

  result = objc_msgSend(a1, sel_shouldCreateDeviceUser);
  v6 = result ^ 1;
  switch(a2)
  {
    case 0:
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v7 = 3;
      goto LABEL_6;
    case 1:
      *(_QWORD *)a3 = v6;
      *(_QWORD *)(a3 + 8) = 0;
      v7 = 1;
      goto LABEL_6;
    case 2:
      *(_OWORD *)a3 = xmmword_2365B48C0;
      v7 = 3;
      goto LABEL_6;
    case 3:
      *(_QWORD *)a3 = v6;
      *(_QWORD *)(a3 + 8) = 0;
      v7 = 2;
LABEL_6:
      *(_BYTE *)(a3 + 16) = v7;
      break;
    default:
      result = (id)sub_2365B068C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t AISSetupContextDeviceUserKind.into(onlyPersona:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;

  switch(a2)
  {
    case 0:
      *(_QWORD *)a3 = 0;
      *(_QWORD *)(a3 + 8) = 0;
      v3 = 3;
      goto LABEL_6;
    case 1:
      *(_QWORD *)a3 = result & 1;
      *(_QWORD *)(a3 + 8) = 0;
      v3 = 1;
      goto LABEL_6;
    case 2:
      *(_OWORD *)a3 = xmmword_2365B48C0;
      v3 = 3;
      goto LABEL_6;
    case 3:
      *(_QWORD *)a3 = result & 1;
      *(_QWORD *)(a3 + 8) = 0;
      v3 = 2;
LABEL_6:
      *(_BYTE *)(a3 + 16) = v3;
      break;
    default:
      result = sub_2365B068C();
      __break(1u);
      break;
  }
  return result;
}

void sub_2364D6078(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_2365B04A0();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_2364D6128@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_2364D6150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2542A82D0;
  if (!qword_2542A82D0)
  {
    type metadata accessor for AIDAServiceType(255);
    result = MEMORY[0x23B7F5164](&unk_2365B23B4, v1);
    atomic_store(result, (unint64_t *)&qword_2542A82D0);
  }
  return result;
}

void sub_2364D6198(void *a1, id a2, unint64_t a3)
{
  if ((a3 & 0xFFFFFF00FFFF0000) != 0xFFFF00FFFF0000)
    sub_2364984F8(a1, a2, a3);
}

uint64_t sub_2364D61B8(unint64_t *a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD v18[9];

  v3 = v2;
  v6 = *v2;
  sub_2365B09E0();
  switch(a2)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_2365B09F8();
      swift_bridgeObjectRetain();
      break;
    default:
      sub_2365B09F8();
      swift_bridgeObjectRetain();
      sub_2364830F0((uint64_t)v18, a2);
      break;
  }
  v7 = sub_2365B0A34();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_236487E58(a2);
    sub_2364D74EC(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v18[0];
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v10 = ~v8;
  while (2)
  {
    v11 = *(_QWORD *)(v6 + 48);
    v12 = *(_QWORD *)(v11 + 8 * v9);
    switch(v12)
    {
      case 0uLL:
        if (a2)
          goto LABEL_16;
        sub_236487E68(0);
        v16 = 0;
        goto LABEL_22;
      case 1uLL:
        if (a2 != 1)
          goto LABEL_16;
        sub_236487E68(1uLL);
        v16 = 1;
        goto LABEL_22;
      case 2uLL:
        if (a2 != 2)
          goto LABEL_16;
        sub_236487E68(2uLL);
        v16 = 2;
        goto LABEL_22;
      case 3uLL:
        if (a2 != 3)
          goto LABEL_16;
        sub_236487E68(3uLL);
        v16 = 3;
LABEL_22:
        sub_236487E68(v16);
        swift_bridgeObjectRelease();
        goto LABEL_23;
      default:
        if (a2 < 4)
        {
LABEL_16:
          sub_236487E58(a2);
          sub_236487E58(v12);
          sub_236487E68(v12);
          sub_236487E68(a2);
LABEL_17:
          v9 = (v9 + 1) & v10;
          if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
            goto LABEL_21;
          continue;
        }
        sub_236487E58(*(_QWORD *)(v11 + 8 * v9));
        sub_236487E58(a2);
        sub_236487E58(v12);
        v13 = sub_2365A28C4(v12, a2);
        sub_236487E68(v12);
        sub_236487E68(a2);
        sub_236487E68(v12);
        if ((v13 & 1) == 0)
          goto LABEL_17;
        swift_bridgeObjectRelease();
        sub_236487E68(a2);
LABEL_23:
        v17 = *(_QWORD *)(*(_QWORD *)(*v3 + 48) + 8 * v9);
        *a1 = v17;
        sub_236487E58(v17);
        return 0;
    }
  }
}

uint64_t sub_2364D6474(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  void *v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  sub_2365B005C();
  sub_2365B09E0();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  v7 = sub_2365B0A34();
  swift_bridgeObjectRelease();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    v24 = a2;
    sub_2364D7780((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  v10 = sub_2365B005C();
  v12 = v11;
  if (v10 == sub_2365B005C() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = ~v8;
      do
      {
        v9 = (v9 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_15;
        v17 = sub_2365B005C();
        v19 = v18;
        if (v17 == sub_2365B005C() && v19 == v20)
          goto LABEL_16;
        v22 = sub_2365B08CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v26 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  v27 = v26;
  return 0;
}

uint64_t sub_2364D669C(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  __int128 v25;
  __int128 v26;
  _QWORD *v27;
  uint64_t v28;
  char v29;
  int v30;
  uint64_t v31;
  _QWORD v32[9];
  _OWORD v33[6];

  v5 = *v2;
  sub_2365B09E0();
  v6 = *(_OWORD *)(a2 + 16);
  v33[0] = *(_OWORD *)a2;
  v33[1] = v6;
  v7 = *(_OWORD *)(a2 + 48);
  v33[2] = *(_OWORD *)(a2 + 32);
  v33[3] = v7;
  v33[4] = *(_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  v9 = v33[0];
  swift_bridgeObjectRetain();
  sub_2364A7000((uint64_t)v33);
  sub_2365B008C();
  sub_2364A7068((uint64_t)v33);
  v28 = a1;
  v27 = v2;
  switch(v8)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      swift_bridgeObjectRetain();
      sub_2364830F0((uint64_t)v32, v8);
      sub_236487E68(v8);
      break;
  }
  v30 = *(unsigned __int8 *)(a2 + 88);
  sub_2365B0A04();
  v10 = sub_2365B0A34();
  v11 = -1 << *(_BYTE *)(v5 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v31 = ~v11;
    while (1)
    {
      v14 = *(_QWORD *)(v5 + 48) + 96 * v12;
      v13 = *(_QWORD *)(v14 + 80);
      v15 = *(unsigned __int8 *)(v14 + 88);
      v16 = *(_QWORD *)v14 == (_QWORD)v9 && *(_QWORD *)(v14 + 8) == *((_QWORD *)&v9 + 1);
      if (!v16 && (sub_2365B08CC() & 1) == 0)
        goto LABEL_9;
      switch(v13)
      {
        case 0uLL:
          if (!v8)
            goto LABEL_24;
          goto LABEL_7;
        case 1uLL:
          if (v8 == 1)
            goto LABEL_24;
          goto LABEL_7;
        case 2uLL:
          if (v8 == 2)
            goto LABEL_24;
          goto LABEL_7;
        case 3uLL:
          if (v8 != 3)
            goto LABEL_7;
LABEL_24:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_236487E58(v13);
          sub_236487E68(v13);
          sub_236487E68(v13);
          goto LABEL_25;
        default:
          if (v8 < 4)
          {
LABEL_7:
            sub_236487E58(v8);
            sub_236487E58(v13);
            sub_236487E68(v13);
            v13 = v8;
LABEL_8:
            sub_236487E68(v13);
            goto LABEL_9;
          }
          sub_236487E58(v8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_236487E58(v13);
          sub_236487E58(v13);
          v29 = sub_2365A28C4(v13, v8);
          sub_236487E68(v13);
          sub_236487E68(v8);
          if ((v29 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_236487E68(v13);
          if (v15 == v30)
          {
            swift_bridgeObjectRelease();
            sub_2364D9EF8(a2);
            v17 = *(_QWORD *)(*v27 + 48) + 96 * v12;
            v18 = *(_QWORD *)(v17 + 8);
            v19 = *(_QWORD *)(v17 + 16);
            v20 = *(_QWORD *)(v17 + 72);
            v21 = *(_QWORD *)(v17 + 80);
            v22 = *(_BYTE *)(v17 + 88);
            *(_QWORD *)v28 = *(_QWORD *)v17;
            *(_QWORD *)(v28 + 8) = v18;
            *(_QWORD *)(v28 + 16) = v19;
            *(_OWORD *)(v28 + 24) = *(_OWORD *)(v17 + 24);
            *(_OWORD *)(v28 + 40) = *(_OWORD *)(v17 + 40);
            *(_OWORD *)(v28 + 56) = *(_OWORD *)(v17 + 56);
            *(_QWORD *)(v28 + 72) = v20;
            *(_QWORD *)(v28 + 80) = v21;
            *(_BYTE *)(v28 + 88) = v22;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_236487E58(v21);
            return 0;
          }
LABEL_9:
          v12 = (v12 + 1) & v31;
          if (((*(_QWORD *)(v5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
            goto LABEL_27;
          break;
      }
    }
  }
LABEL_27:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32[0] = *v27;
  *v27 = 0x8000000000000000;
  sub_2364AA5B0(a2);
  sub_2364D79AC(a2, v12, isUniquelyReferenced_nonNull_native);
  *v27 = v32[0];
  swift_bridgeObjectRelease();
  v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v28 + 48) = v25;
  *(_OWORD *)(v28 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v28 + 73) = *(_OWORD *)(a2 + 73);
  v26 = *(_OWORD *)(a2 + 16);
  result = 1;
  *(_OWORD *)v28 = *(_OWORD *)a2;
  *(_OWORD *)(v28 + 16) = v26;
  return result;
}

uint64_t sub_2364D6B34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  char v29[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E89E0);
  v3 = sub_2365B0560();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_40;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = (_QWORD *)(v2 + 56);
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_41;
    if (v15 >= v9)
      break;
    v16 = v6[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v9)
        break;
      v16 = v6[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v9)
          break;
        v16 = v6[v11];
        if (!v16)
        {
          v17 = v15 + 3;
          if (v17 >= v9)
            break;
          v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              v11 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_42;
              if (v11 >= v9)
                goto LABEL_36;
              v16 = v6[v11];
              ++v17;
              if (v16)
                goto LABEL_23;
            }
          }
          v11 = v17;
        }
      }
    }
LABEL_23:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_2365B09E0();
    switch(v18)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        sub_2365B09F8();
        break;
      default:
        sub_2365B09F8();
        sub_2364830F0((uint64_t)v29, v18);
        break;
    }
    v19 = sub_2365B0A34();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    v23 = 0;
    v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x2364D6E4CLL);
      }
      v25 = v22 == v24;
      if (v22 == v24)
        v22 = 0;
      v23 |= v25;
      v26 = *(_QWORD *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
LABEL_36:
  swift_release();
  v1 = v0;
  v27 = 1 << *(_BYTE *)(v2 + 32);
  if (v27 > 63)
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v6 = -1 << v27;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2364D6E5C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563E89F0);
  v3 = sub_2365B0560();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28)
          goto LABEL_33;
        v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v28)
            goto LABEL_33;
          v15 = v29[v10];
          if (!v15)
          {
            v10 = v14 + 2;
            if (v14 + 2 >= v28)
              goto LABEL_33;
            v15 = v29[v10];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                v1 = v27;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v10 >= v28)
                    goto LABEL_33;
                  v15 = v29[v10];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v10 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      sub_2365B005C();
      sub_2365B09E0();
      sub_2365B008C();
      v18 = sub_2365B0A34();
      result = swift_bridgeObjectRelease();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_2364D716C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  _OWORD v19[4];
  _OWORD v20[2];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E89E8);
  v3 = sub_2365B0560();
  if (*(_QWORD *)(v2 + 16))
  {
    v4 = 1 << *(_BYTE *)(v2 + 32);
    v5 = (_QWORD *)(v2 + 56);
    v6 = -1;
    if (v4 < 64)
      v6 = ~(-1 << v4);
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v15 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v15 >= v8)
          goto LABEL_22;
        v16 = v5[v15];
        ++v9;
        if (!v16)
        {
          v9 = v15 + 1;
          if (v15 + 1 >= v8)
            goto LABEL_22;
          v16 = v5[v9];
          if (!v16)
          {
            v9 = v15 + 2;
            if (v15 + 2 >= v8)
              goto LABEL_22;
            v16 = v5[v9];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_22:
                swift_release();
                v18 = 1 << *(_BYTE *)(v2 + 32);
                if (v18 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v5 = -1 << v18;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v5[v17];
              if (!v16)
              {
                while (1)
                {
                  v9 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_28;
                  if (v9 >= v8)
                    goto LABEL_22;
                  v16 = v5[v9];
                  ++v17;
                  if (v16)
                    goto LABEL_21;
                }
              }
              v9 = v17;
            }
          }
        }
LABEL_21:
        v7 = (v16 - 1) & v16;
        v11 = __clz(__rbit64(v16)) + (v9 << 6);
      }
      v12 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 96 * v11);
      v13 = v12[3];
      v19[2] = v12[2];
      v19[3] = v13;
      v20[0] = v12[4];
      *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v12 + 73);
      v14 = v12[1];
      v19[0] = *v12;
      v19[1] = v14;
      sub_2364D7364((uint64_t)v19, v3);
    }
  }
  swift_release();
  *v1 = v3;
}

__n128 sub_2364D7364(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  unint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  __int128 v9;
  __n128 result;
  __int128 v11;
  _BYTE v12[72];
  _OWORD v13[5];

  sub_2365B09E0();
  v4 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v4;
  v5 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v5;
  v13[4] = *(_OWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 80);
  sub_2364A7000((uint64_t)v13);
  sub_2365B008C();
  sub_2364A7068((uint64_t)v13);
  switch(v6)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      swift_bridgeObjectRetain();
      sub_2364830F0((uint64_t)v12, v6);
      sub_236487E68(v6);
      break;
  }
  sub_2365B0A04();
  sub_2365B0A34();
  v7 = sub_2365B050C();
  *(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v7;
  v8 = (_OWORD *)(*(_QWORD *)(a2 + 48) + 96 * v7);
  v9 = *(_OWORD *)(a1 + 48);
  v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v9;
  v8[4] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)((char *)v8 + 73) = *(_OWORD *)(a1 + 73);
  result = *(__n128 *)a1;
  v11 = *(_OWORD *)(a1 + 16);
  *v8 = *(_OWORD *)a1;
  v8[1] = v11;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_2364D74EC(unint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _BYTE v18[72];

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_2364D6B34();
    }
    else
    {
      if (v8 > v7)
      {
        result = (unint64_t)sub_2364D7DF0();
        goto LABEL_26;
      }
      sub_2364D8388();
    }
    v9 = *v3;
    sub_2365B09E0();
    switch(v6)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        sub_2365B09F8();
        break;
      default:
        sub_2365B09F8();
        sub_2364830F0((uint64_t)v18, v6);
        break;
    }
    v3 = (uint64_t *)v18;
    result = sub_2365B0A34();
    v10 = -1 << *(_BYTE *)(v9 + 32);
    a2 = result & ~v10;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v11 = ~v10;
      while (1)
      {
        v12 = *(_QWORD *)(v9 + 48);
        v3 = *(uint64_t **)(v12 + 8 * a2);
        switch((unint64_t)v3)
        {
          case 0uLL:
            if (!v6)
              goto LABEL_29;
            goto LABEL_14;
          case 1uLL:
            if (v6 == 1)
              goto LABEL_29;
            goto LABEL_14;
          case 2uLL:
            if (v6 != 2)
              goto LABEL_14;
            goto LABEL_29;
          case 3uLL:
            if (v6 == 3)
              goto LABEL_29;
            goto LABEL_14;
          default:
            if (v6 < 4)
            {
LABEL_14:
              sub_236487E58(*(_QWORD *)(v12 + 8 * a2));
              sub_236487E58(v6);
              sub_236487E68((unint64_t)v3);
              result = sub_236487E68(v6);
            }
            else
            {
              sub_236487E58(*(_QWORD *)(v12 + 8 * a2));
              sub_236487E58((unint64_t)v3);
              sub_236487E58(v6);
              v13 = sub_2365A28C4((uint64_t)v3, v6);
              sub_236487E68((unint64_t)v3);
              sub_236487E68(v6);
              result = sub_236487E68((unint64_t)v3);
              if ((v13 & 1) != 0)
                goto LABEL_30;
            }
            a2 = (a2 + 1) & v11;
            if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
              goto LABEL_26;
            break;
        }
      }
    }
  }
LABEL_26:
  v14 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * a2) = v6;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
LABEL_29:
    sub_236487E68((unint64_t)v3);
    sub_236487E68((unint64_t)v3);
LABEL_30:
    sub_2365B0938();
    __break(1u);
    JUMPOUT(0x2364D7760);
  }
  *(_QWORD *)(v14 + 16) = v17;
  return result;
}

uint64_t sub_2364D7780(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_2364D6E5C();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_2364D7F98();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_2364D8684();
  }
  v9 = *v3;
  sub_2365B005C();
  sub_2365B09E0();
  sub_2365B008C();
  v10 = sub_2365B0A34();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = sub_2365B005C();
  v14 = v13;
  if (v12 == sub_2365B005C() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_2365B08CC();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = sub_2365B005C();
      v21 = v20;
      if (v19 == sub_2365B005C() && v21 == v22)
        goto LABEL_25;
      v24 = sub_2365B08CC();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for AIDAServiceType(0);
  result = sub_2365B0938();
  __break(1u);
  return result;
}

unint64_t sub_2364D79AC(unint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  char v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  _OWORD *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[72];
  _OWORD v34[6];

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v28 = (_OWORD *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_2364D716C();
    }
    else
    {
      if (v7 > v6)
      {
        result = (unint64_t)sub_2364D8140();
        goto LABEL_33;
      }
      sub_2364D8960();
    }
    v8 = *v3;
    sub_2365B09E0();
    v9 = *(_OWORD *)(v5 + 16);
    v34[0] = *(_OWORD *)v5;
    v34[1] = v9;
    v10 = *(_OWORD *)(v5 + 48);
    v34[2] = *(_OWORD *)(v5 + 32);
    v34[3] = v10;
    v34[4] = *(_OWORD *)(v5 + 64);
    v11 = *(_QWORD *)(v5 + 80);
    v12 = v34[0];
    sub_2364A7000((uint64_t)v34);
    sub_2365B008C();
    sub_2364A7068((uint64_t)v34);
    switch(v11)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        sub_2365B09F8();
        break;
      default:
        sub_2365B09F8();
        swift_bridgeObjectRetain();
        sub_2364830F0((uint64_t)v33, v11);
        sub_236487E68(v11);
        break;
    }
    v29 = *(unsigned __int8 *)(v5 + 88);
    sub_2365B0A04();
    result = sub_2365B0A34();
    v13 = -1 << *(_BYTE *)(v8 + 32);
    a2 = result & ~v13;
    v32 = v8 + 56;
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v30 = v8;
      v31 = ~v13;
      while (1)
      {
        v15 = *(_QWORD *)(v8 + 48) + 96 * a2;
        v14 = *(_QWORD *)(v15 + 80);
        v16 = *(unsigned __int8 *)(v15 + 88);
        if (*(_QWORD *)v15 != (_QWORD)v12 || *(_QWORD *)(v15 + 8) != *((_QWORD *)&v12 + 1))
        {
          result = sub_2365B08CC();
          if ((result & 1) == 0)
            goto LABEL_15;
        }
        switch(v14)
        {
          case 0uLL:
            if (v11)
              goto LABEL_13;
            goto LABEL_27;
          case 1uLL:
            if (v11 == 1)
              goto LABEL_27;
            goto LABEL_13;
          case 2uLL:
            if (v11 == 2)
              goto LABEL_27;
            goto LABEL_13;
          case 3uLL:
            if (v11 != 3)
              goto LABEL_13;
LABEL_27:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_236487E58(v14);
            sub_236487E68(v14);
            sub_236487E68(v14);
            goto LABEL_28;
          default:
            if (v11 < 4)
            {
LABEL_13:
              sub_236487E58(v11);
              sub_236487E58(v14);
              sub_236487E68(v14);
              v14 = v11;
LABEL_14:
              result = sub_236487E68(v14);
              goto LABEL_15;
            }
            sub_236487E58(v11);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_236487E58(v14);
            sub_236487E58(v14);
            v18 = sub_2365A28C4(v14, v11);
            sub_236487E68(v14);
            sub_236487E68(v11);
            if ((v18 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v8 = v30;
              goto LABEL_14;
            }
LABEL_28:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = sub_236487E68(v14);
            v8 = v30;
            if (v16 == v29)
              goto LABEL_37;
LABEL_15:
            a2 = (a2 + 1) & v31;
            if (((*(_QWORD *)(v32 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
              goto LABEL_33;
            break;
        }
      }
    }
  }
LABEL_33:
  v19 = *v27;
  *(_QWORD *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v20 = (_OWORD *)(*(_QWORD *)(v19 + 48) + 96 * a2);
  v21 = v28[1];
  *v20 = *v28;
  v20[1] = v21;
  *(_OWORD *)((char *)v20 + 73) = *(_OWORD *)((char *)v28 + 73);
  v22 = v28[4];
  v23 = v28[2];
  v20[3] = v28[3];
  v20[4] = v22;
  v20[2] = v23;
  v24 = *(_QWORD *)(v19 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
LABEL_37:
    sub_2365B0938();
    __break(1u);
    JUMPOUT(0x2364D7DD0);
  }
  *(_QWORD *)(v19 + 16) = v26;
  return result;
}

void *sub_2364D7DF0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E89E0);
  v2 = *v0;
  v3 = sub_2365B0554();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_236487E58(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_2364D7F98()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563E89F0);
  v2 = *v0;
  v3 = sub_2365B0554();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2364D8140()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  void *__src;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E89E8);
  v28 = v0;
  v1 = *v0;
  v2 = sub_2365B0554();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v28 = v3;
    return result;
  }
  result = (void *)(v2 + 56);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5)
    result = memmove(result, __src, 8 * v5);
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    v25 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v11)
      goto LABEL_28;
    v26 = *((_QWORD *)__src + v25);
    ++v7;
    if (!v26)
    {
      v7 = v25 + 1;
      if (v25 + 1 >= v11)
        goto LABEL_28;
      v26 = *((_QWORD *)__src + v7);
      if (!v26)
      {
        v7 = v25 + 2;
        if (v25 + 2 >= v11)
          goto LABEL_28;
        v26 = *((_QWORD *)__src + v7);
        if (!v26)
          break;
      }
    }
LABEL_27:
    v10 = (v26 - 1) & v26;
    v13 = __clz(__rbit64(v26)) + (v7 << 6);
LABEL_12:
    v14 = 96 * v13;
    v15 = *(_QWORD *)(v1 + 48) + v14;
    v16 = *(_QWORD *)(v15 + 8);
    v17 = *(_QWORD *)(v15 + 16);
    v18 = *(_QWORD *)(v15 + 72);
    v19 = *(_QWORD *)(v15 + 80);
    v20 = *(_BYTE *)(v15 + 88);
    v21 = *(_QWORD *)(v3 + 48) + v14;
    v22 = *(_OWORD *)(v15 + 24);
    v23 = *(_OWORD *)(v15 + 40);
    v24 = *(_OWORD *)(v15 + 56);
    *(_QWORD *)v21 = *(_QWORD *)v15;
    *(_QWORD *)(v21 + 8) = v16;
    *(_QWORD *)(v21 + 16) = v17;
    *(_OWORD *)(v21 + 24) = v22;
    *(_OWORD *)(v21 + 40) = v23;
    *(_OWORD *)(v21 + 56) = v24;
    *(_QWORD *)(v21 + 72) = v18;
    *(_QWORD *)(v21 + 80) = v19;
    *(_BYTE *)(v21 + 88) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)sub_236487E58(v19);
  }
  v27 = v25 + 3;
  if (v27 >= v11)
    goto LABEL_28;
  v26 = *((_QWORD *)__src + v27);
  if (v26)
  {
    v7 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    v7 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v7 >= v11)
      goto LABEL_28;
    v26 = *((_QWORD *)__src + v7);
    ++v27;
    if (v26)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2364D8388()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  char v28[72];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E89E0);
  v3 = sub_2365B0560();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
    goto LABEL_38;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= v9)
      break;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v9)
        break;
      v16 = *(_QWORD *)(v6 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v9)
          break;
        v16 = *(_QWORD *)(v6 + 8 * v11);
        if (!v16)
        {
          v17 = v15 + 3;
          if (v17 >= v9)
            break;
          v16 = *(_QWORD *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              v11 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_40;
              if (v11 >= v9)
                goto LABEL_36;
              v16 = *(_QWORD *)(v6 + 8 * v11);
              ++v17;
              if (v16)
                goto LABEL_23;
            }
          }
          v11 = v17;
        }
      }
    }
LABEL_23:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_2365B09E0();
    switch(v18)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        sub_2365B09F8();
        break;
      default:
        sub_2365B09F8();
        swift_bridgeObjectRetain();
        sub_2364830F0((uint64_t)v28, v18);
        break;
    }
    v19 = sub_2365B0A34();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    v23 = 0;
    v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x2364D8674);
      }
      v25 = v22 == v24;
      if (v22 == v24)
        v22 = 0;
      v23 |= v25;
      v26 = *(_QWORD *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(_QWORD *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
LABEL_36:
  result = swift_release_n();
  v1 = v0;
LABEL_38:
  *v1 = v4;
  return result;
}

uint64_t sub_2364D8684()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563E89F0);
  v3 = sub_2365B0560();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v13);
    sub_2365B005C();
    sub_2365B09E0();
    v18 = v17;
    sub_2365B008C();
    v19 = sub_2365B0A34();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_2364D8960()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _OWORD v20[4];
  _BYTE v21[25];

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E89E8);
  v3 = sub_2365B0560();
  if (!*(_QWORD *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *v1 = v3;
    return;
  }
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = v2 + 56;
  v6 = -1;
  if (v4 < 64)
    v6 = ~(-1 << v4);
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  v9 = 0;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v8)
      goto LABEL_22;
    v18 = *(_QWORD *)(v5 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v8)
        goto LABEL_22;
      v18 = *(_QWORD *)(v5 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v8)
          goto LABEL_22;
        v18 = *(_QWORD *)(v5 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_21:
    v7 = (v18 - 1) & v18;
    v11 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_6:
    v12 = (_OWORD *)(*(_QWORD *)(v2 + 48) + 96 * v11);
    v13 = v12[1];
    v20[0] = *v12;
    v20[1] = v13;
    v15 = v12[3];
    v14 = v12[4];
    v16 = v12[2];
    *(_OWORD *)&v21[9] = *(_OWORD *)((char *)v12 + 73);
    v20[3] = v15;
    *(_OWORD *)v21 = v14;
    v20[2] = v16;
    sub_2364AA5B0((uint64_t)v20);
    sub_2364D7364((uint64_t)v20, v3);
  }
  v19 = v17 + 3;
  if (v19 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  v18 = *(_QWORD *)(v5 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v8)
      goto LABEL_22;
    v18 = *(_QWORD *)(v5 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_26:
  __break(1u);
}

void sub_2364D8B2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v7)
      goto LABEL_24;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_24;
      v14 = *(_QWORD *)(v3 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v7)
          goto LABEL_24;
        v14 = *(_QWORD *)(v3 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v7)
            goto LABEL_24;
          v14 = *(_QWORD *)(v3 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    v11 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v12 = (void *)sub_2364D8CAC();

  }
  v15 = v13 + 4;
  if (v15 >= v7)
  {
LABEL_24:
    swift_release();
    return;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v7)
      goto LABEL_24;
    v14 = *(_QWORD *)(v3 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_2364D8CAC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v1 = v0;
  v2 = *v0;
  sub_2365B005C();
  sub_2365B09E0();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  v3 = sub_2365B0A34();
  swift_bridgeObjectRelease();
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = v3 & ~v4;
  if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  v6 = sub_2365B005C();
  v8 = v7;
  if (v6 == sub_2365B005C() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      do
      {
        v5 = (v5 + 1) & v12;
        if (((*(_QWORD *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          goto LABEL_15;
        v13 = sub_2365B005C();
        v15 = v14;
        if (v13 == sub_2365B005C() && v15 == v16)
          goto LABEL_16;
        v18 = sub_2365B08CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v1;
  v23 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2364D7F98();
    v21 = v23;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v5);
  sub_2364D8EBC(v5);
  *v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_2364D8EBC(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_2365B0500();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v6);
        sub_2365B005C();
        sub_2365B09E0();
        v11 = v10;
        sub_2365B008C();
        v12 = sub_2365B0A34();

        swift_bridgeObjectRelease();
        v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9)
            goto LABEL_5;
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(v3 + 48);
          v15 = (_QWORD *)(v14 + 8 * v2);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2364D909C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563E89F0);
    v3 = sub_2365B056C();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_2365B005C();
      sub_2365B09E0();
      v7 = v6;
      sub_2365B008C();
      v8 = sub_2365B0A34();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_2365B005C();
        v17 = v16;
        if (v15 == sub_2365B005C() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_2365B08CC();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_2365B005C();
          v24 = v23;
          if (v22 == sub_2365B005C() && v24 == v25)
            goto LABEL_3;
          v27 = sub_2365B08CC();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2364D92C8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2364D941C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_2364D9430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2364D9478(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8990);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2364D94B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2364D9500(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SetupContext.Builder(a2, a1);
  return a2;
}

uint64_t sub_2364D9534(uint64_t a1)
{
  destroy for SetupContext.Builder(a1);
  return a1;
}

unint64_t sub_2364D9560()
{
  unint64_t result;

  result = qword_2563E89A0;
  if (!qword_2563E89A0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BC498, &type metadata for SetupContext.Builder.Failure);
    atomic_store(result, (unint64_t *)&qword_2563E89A0);
  }
  return result;
}

_UNKNOWN **sub_2364D95A4()
{
  return &protocol witness table for SetupContext.Builder;
}

ValueMetadata *type metadata accessor for SetupContext()
{
  return &type metadata for SetupContext;
}

uint64_t destroy for SetupContext.Builder(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_236498C2C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  sub_2364984F8(*(void **)(a1 + 48), *(id *)(a1 + 56), *(_QWORD *)(a1 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(a1 + 160))
    __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  result = *(_QWORD *)(a1 + 184);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for SetupContext.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  void *v9;
  unint64_t v10;
  __int16 v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2364D941C(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v8 = *(void **)(a2 + 48);
  v9 = *(void **)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_WORD *)(a2 + 76);
  v12 = *(_DWORD *)(a2 + 72);
  sub_236499054(v8, v9, v10);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_WORD *)(a1 + 76) = v11;
  *(_DWORD *)(a1 + 72) = v12;
  v13 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v13;
  v14 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  v15 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v15;
  v16 = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v15;
  if (!v16)
  {
    v24 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v24;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    v19 = *(_QWORD *)(a2 + 184);
    if (v19)
      goto LABEL_3;
LABEL_5:
    v25 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v25;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    v26 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v26;
    goto LABEL_6;
  }
  v18 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = v16;
  *(_QWORD *)(a1 + 168) = v18;
  (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 136, a2 + 136, v16);
  v19 = *(_QWORD *)(a2 + 184);
  if (!v19)
    goto LABEL_5;
LABEL_3:
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v19;
  v20 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v20;
  v21 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v21;
  v22 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v22;
  v23 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  return a1;
}

uint64_t assignWithCopy for SetupContext.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  void *v11;
  unint64_t v12;
  __int16 v13;
  int v14;
  void *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  _OWORD *v25;
  _OWORD *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  sub_2364D941C(v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  v9 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v6;
  sub_236498C2C(v7, v8, v9);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v10 = *(void **)(a2 + 48);
  v11 = *(void **)(a2 + 56);
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_WORD *)(a2 + 76);
  v14 = *(_DWORD *)(a2 + 72);
  sub_236499054(v10, v11, v12);
  v15 = *(void **)(a1 + 48);
  v16 = *(void **)(a1 + 56);
  v17 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  *(_DWORD *)(a1 + 72) = v14;
  *(_WORD *)(a1 + 76) = v13;
  sub_2364984F8(v15, v16, v17);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  v19 = *(void **)(a1 + 128);
  v20 = *(void **)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v20;
  v21 = v20;

  v22 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160))
  {
    if (v22)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 136), (uint64_t *)(a2 + 136));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  }
  else if (v22)
  {
    *(_QWORD *)(a1 + 160) = v22;
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 136, a2 + 136);
    goto LABEL_8;
  }
  v23 = *(_OWORD *)(a2 + 136);
  v24 = *(_OWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 136) = v23;
  *(_OWORD *)(a1 + 152) = v24;
LABEL_8:
  v25 = (_OWORD *)(a1 + 176);
  v26 = (_OWORD *)(a2 + 176);
  v27 = *(_QWORD *)(a2 + 184);
  if (*(_QWORD *)(a1 + 184))
  {
    if (v27)
    {
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236460568(a1 + 176);
      *v25 = *v26;
      v28 = *(_OWORD *)(a2 + 240);
      v30 = *(_OWORD *)(a2 + 192);
      v29 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v28;
      *(_OWORD *)(a1 + 192) = v30;
      *(_OWORD *)(a1 + 208) = v29;
    }
  }
  else if (v27)
  {
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v25 = *v26;
    v31 = *(_OWORD *)(a2 + 192);
    v32 = *(_OWORD *)(a2 + 208);
    v33 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v33;
    *(_OWORD *)(a1 + 192) = v31;
    *(_OWORD *)(a1 + 208) = v32;
  }
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  return a1;
}

void *__swift_memcpy257_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x101uLL);
}

uint64_t assignWithTake for SetupContext.Builder(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int16 v9;
  int v10;
  void *v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_236498C2C(v5, v6, v7);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_WORD *)(a2 + 76);
  v10 = *(_DWORD *)(a2 + 72);
  v11 = *(void **)(a1 + 48);
  v12 = *(void **)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v8;
  *(_DWORD *)(a1 + 72) = v10;
  *(_WORD *)(a1 + 76) = v9;
  sub_2364984F8(v11, v12, v13);
  v14 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  v16 = *(void **)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);

  if (*(_QWORD *)(a1 + 160))
    __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  v17 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v17;
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  if (!*(_QWORD *)(a1 + 184))
    goto LABEL_7;
  v18 = *(_QWORD *)(a2 + 184);
  if (!v18)
  {
    sub_236460568(a1 + 176);
LABEL_7:
    v23 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v23;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    v24 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v24;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v22;
  swift_bridgeObjectRelease();
LABEL_8:
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupContext.Builder(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 257))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetupContext.Builder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 248) = 0;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 256) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 257) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 257) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupContext.Builder()
{
  return &type metadata for SetupContext.Builder;
}

ValueMetadata *type metadata accessor for SetupContext.Builder.MissingExpectedValue()
{
  return &type metadata for SetupContext.Builder.MissingExpectedValue;
}

uint64_t storeEnumTagSinglePayload for SetupContext.Builder.Failure(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2364D9E54 + 4 * byte_2365BC34C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2364D9E74 + 4 * byte_2365BC351[v4]))();
}

_BYTE *sub_2364D9E54(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2364D9E74(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2364D9E7C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2364D9E84(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2364D9E8C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2364D9E94(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SetupContext.Builder.Failure()
{
  return &type metadata for SetupContext.Builder.Failure;
}

unint64_t sub_2364D9EB4()
{
  unint64_t result;

  result = qword_2563E89D8;
  if (!qword_2563E89D8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BC470, &type metadata for SetupContext.Builder.Failure);
    atomic_store(result, (unint64_t *)&qword_2563E89D8);
  }
  return result;
}

uint64_t sub_2364D9EF8(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_236487E68(v2);
  return a1;
}

uint64_t sub_2364D9F68(uint64_t a1)
{
  void **v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *v1;
  v2[7] = v2 + 15;
  v2[2] = v2;
  v2[3] = sub_2364DA00C;
  v5 = swift_continuation_init();
  v2[10] = MEMORY[0x24BDAC760];
  v6 = v2 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_2364DA0F4;
  v6[3] = &block_descriptor_5;
  v6[4] = v5;
  objc_msgSend(v4, sel_authenticateWithContext_completion_, a1, v6);
  return swift_continuation_await();
}

uint64_t sub_2364DA00C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 120));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t dispatch thunk of AKAppleIDAuthenticationControllerProtocol.authenticate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2364CBB44;
  return v9(a1, a2, a3);
}

uint64_t sub_2364DA0F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_2563E9CC0);
      v8 = sub_2365AFF60();
    }
    else
    {
      v8 = 0;
    }
    v9 = v8;
    sub_2364DA1C4((uint64_t)&v9, *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_2364DA1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2563E8A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of static CommandProtocol.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_2364DA214(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(v1, sel_accountsUsingService_, a1);
  sub_2364DB7F8();
  sub_2364DB834();
  v3 = sub_2365B0320();

  return v3;
}

id sub_2364DA278(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_isManagedAppleIDForAccount_, a1);
}

uint64_t sub_2364DA29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2563E8B00 + dword_2563E8B00);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_236477420;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_2364DA324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = a4;
  if (!a2)
  {
    v7 = 0;
    v5[15] = 0;
    if (!a4)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = sub_2365B0038();
  v5[15] = v7;
  if (v6)
LABEL_3:
    v6 = sub_2365B0038();
LABEL_4:
  v5[16] = v6;
  v5[2] = v5;
  v5[3] = sub_2364DA3FC;
  v8 = swift_continuation_init();
  v5[10] = MEMORY[0x24BDAC760];
  v9 = v5 + 10;
  v9[1] = 0x40000000;
  v9[2] = sub_2364C2530;
  v9[3] = &block_descriptor_6;
  v9[4] = v8;
  objc_msgSend(v4, sel_performCheckInForAccountWithAltDSID_event_completion_, v7, v6, v9);
  return swift_continuation_await();
}

uint64_t sub_2364DA3FC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *v0;
  v2 = *(void **)(v1 + 120);
  v3 = *(void **)(v1 + 128);
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();

  return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *AISCheckInHelper.__allocating_init(with:authenticationController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

_QWORD *AISCheckInHelper.init(with:authenticationController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t sub_2364DA4C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2364DA4DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v1 = v0[2];
  v2 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(1, ObjectType, v2);
  swift_retain();
  sub_2364DB3EC(v4, v1);
  v6 = v5;
  v0[3] = v5;
  swift_release();
  v7 = (_QWORD *)swift_task_alloc();
  v0[4] = v7;
  *v7 = v0;
  v7[1] = sub_2364DA594;
  v8 = v0[2];
  v7[3] = v6;
  v7[4] = v8;
  return swift_task_switch();
}

uint64_t sub_2364DA594()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2364DA5E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_2364DA5FC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  uint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_2365B0698();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 < 1)
  {
    if (qword_2542A79D8 != -1)
      swift_once();
    v7 = sub_2365AFC00();
    __swift_project_value_buffer(v7, (uint64_t)qword_2542A79C0);
    v8 = sub_2365AFBE8();
    v9 = sub_2365B03B0();
    if (!os_log_type_enabled(v8, v9))
      goto LABEL_18;
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "No accounts to check in, we're done";
    goto LABEL_17;
  }
  if (qword_2542A79D8 != -1)
    swift_once();
  v3 = sub_2365AFC00();
  __swift_project_value_buffer(v3, (uint64_t)qword_2542A79C0);
  swift_bridgeObjectRetain();
  v4 = sub_2365AFBE8();
  v5 = sub_2365B03B0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 134217984;
    *(_QWORD *)(v0 + 16) = v2;
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23644B000, v4, v5, "Checking in %ld account(s)", v6, 0xCu);
    MEMORY[0x23B7F5254](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (objc_msgSend(*(id *)(*(_QWORD *)(v0 + 32) + 32), sel_respondsToSelector_, sel_performCheckInForAccountWithAltDSID_event_completion_))
  {
    v12 = swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v12;
    *(_OWORD *)(v12 + 16) = *(_OWORD *)(v0 + 24);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v13;
    *v13 = v0;
    v13[1] = sub_2364DA91C;
    return sub_2365B05E4();
  }
  v8 = sub_2365AFBE8();
  v9 = sub_2365B0398();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    v11 = "Method unavailable. Cannot continue to check in accounts.";
LABEL_17:
    _os_log_impl(&dword_23644B000, v8, v9, v11, v10, 2u);
    MEMORY[0x23B7F5254](v10, -1, -1);
  }
LABEL_18:

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364DA91C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364DA978()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364DA980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[15] = a3;
  v4[16] = a4;
  v4[14] = a2;
  return swift_task_switch();
}

uint64_t sub_2364DA99C()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;

  v1 = v0[15];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_2365B0698();
    v2 = result;
    if (!result)
      goto LABEL_18;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v2)
      goto LABEL_18;
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  v4 = 0;
  v23 = v1 & 0xC000000000000001;
  v21 = v0[15] + 32;
  v22 = v0 + 7;
  v24 = v2;
  v25 = v0;
  do
  {
    if (v23)
      v5 = (id)MEMORY[0x23B7F45A0](v4, v0[15]);
    else
      v5 = *(id *)(v21 + 8 * v4);
    v6 = v5;
    v7 = v0[16];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
    v8 = swift_task_alloc();
    v9 = sub_2365B0218();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v6;
    v11[5] = v7;
    v12 = swift_task_alloc();
    v27 = v8;
    sub_2364DB978(v8, v12);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v9);
    v26 = v6;
    swift_retain();
    if (v13 == 1)
    {
      sub_236495B38(v12);
    }
    else
    {
      sub_2365B020C();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
    swift_task_dealloc();
    v0 = v25;
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v14 = sub_2365B01AC();
      v16 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      v14 = 0;
      v16 = 0;
    }
    v17 = *(_QWORD *)v25[14];
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = &unk_2563E8B30;
    *(_QWORD *)(v18 + 24) = v11;
    v19 = (_QWORD *)(v16 | v14);
    if (v16 | v14)
    {
      v19 = v22;
      *v22 = 0;
      v22[1] = 0;
      v25[9] = v14;
      v25[10] = v16;
    }
    ++v4;
    v25[11] = 1;
    v25[12] = v19;
    v25[13] = v17;
    swift_task_create();
    swift_release();
    sub_236495B38(v27);

    swift_task_dealloc();
  }
  while (v24 != v4);
LABEL_18:
  swift_bridgeObjectRelease();
  if (!__isPlatformVersionAtLeast(2, 18, 0, 0))
    return swift_task_switch();
  v20 = (_QWORD *)swift_task_alloc();
  v0[17] = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8B40);
  *v20 = v0;
  v20[1] = sub_2364DAD0C;
  return sub_2365B01DC();
}

uint64_t sub_2364DAD0C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2364DAD54()
{
  return swift_taskGroup_wait_next_throwing();
}

uint64_t sub_2364DAD70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = v0;
  if (v0 || (*(_BYTE *)(v1 + 152) & 1) == 0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_2364DADAC()
{
  return swift_unexpectedError();
}

uint64_t sub_2364DADC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 72) = a4;
  *(_QWORD *)(v5 + 80) = a5;
  return swift_task_switch();
}

uint64_t sub_2364DADE0()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD *v9;
  void *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint8_t *v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t (*v26)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v27;

  v1 = objc_msgSend(*(id *)(v0 + 72), sel_aa_altDSID);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 80);
    v4 = sub_2365B005C();
    v6 = v5;

    *(_QWORD *)(v0 + 88) = v6;
    v7 = *(_QWORD *)(v3 + 40);
    ObjectType = swift_getObjectType();
    v26 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v7 + 8) + *(_QWORD *)(v7 + 8));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v9;
    *v9 = v0;
    v9[1] = sub_2364DB074;
    return v26(v4, v6, 0xD000000000000013, 0x80000002365CC600, ObjectType, v7);
  }
  else
  {
    if (qword_2542A79D8 != -1)
      swift_once();
    v11 = *(void **)(v0 + 72);
    v12 = sub_2365AFC00();
    __swift_project_value_buffer(v12, (uint64_t)qword_2542A79C0);
    v13 = v11;
    v14 = sub_2365AFBE8();
    v15 = sub_2365B0398();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(void **)(v0 + 72);
    if (v16)
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v27 = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = objc_msgSend(v17, sel_username);
      if (v20)
      {
        v21 = v20;
        v22 = sub_2365B005C();
        v24 = v23;

      }
      else
      {
        v22 = 0;
        v24 = 0xE000000000000000;
      }
      v25 = *(void **)(v0 + 72);
      *(_QWORD *)(v0 + 40) = sub_236468D88(v22, v24, &v27);
      sub_2365B04A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_23644B000, v14, v15, "Skipping checking for account %s, account has no altDSID", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v19, -1, -1);
      MEMORY[0x23B7F5254](v18, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_2364DB074()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2364DB0E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;

  swift_bridgeObjectRelease();
  if (qword_2542A79D8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 72);
  v2 = *(void **)(v0 + 104);
  v3 = sub_2365AFC00();
  __swift_project_value_buffer(v3, (uint64_t)qword_2542A79C0);
  v4 = v1;
  v5 = v2;
  v6 = v4;
  v7 = v2;
  v8 = sub_2365AFBE8();
  v9 = sub_2365B0398();
  if (os_log_type_enabled(v8, v9))
  {
    v25 = v9;
    v10 = *(void **)(v0 + 72);
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v27 = v12;
    *(_DWORD *)v11 = 136315394;
    v13 = objc_msgSend(v10, sel_username);
    v26 = v12;
    if (v13)
    {
      v14 = v13;
      v15 = sub_2365B005C();
      v17 = v16;

    }
    else
    {
      v15 = 0;
      v17 = 0xE000000000000000;
    }
    v20 = *(void **)(v0 + 104);
    v21 = *(void **)(v0 + 72);
    *(_QWORD *)(v0 + 48) = sub_236468D88(v15, v17, &v27);
    sub_2365B04A0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2080;
    swift_getErrorValue();
    v22 = sub_2365B098C();
    *(_QWORD *)(v0 + 64) = sub_236468D88(v22, v23, &v27);
    sub_2365B04A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23644B000, v8, v25, "Account %s checked in with error: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v26, -1, -1);
    MEMORY[0x23B7F5254](v11, -1, -1);

  }
  else
  {
    v18 = *(void **)(v0 + 104);
    v19 = *(void **)(v0 + 72);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AISCheckInHelper.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AISCheckInHelper.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void sub_2364DB3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_2365B0518();
    sub_2364DB7F8();
    sub_2364DB834();
    sub_2365B0344();
    v3 = v22;
    v20 = v23;
    v4 = v24;
    v5 = v25;
    v6 = v26;
  }
  else
  {
    v5 = 0;
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v20 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
  }
  v10 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_2365B0524())
      goto LABEL_35;
    sub_2364DB7F8();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v21;
    swift_unknownObjectRelease();
    v13 = v5;
    v11 = v6;
    if (!v21)
      goto LABEL_35;
LABEL_33:
    v18 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(id, uint64_t, uint64_t))(v18 + 16))(v14, ObjectType, v18) & 1) != 0)
    {
      sub_2365B05F0();
      sub_2365B0614();
      sub_2365B0620();
      sub_2365B05FC();
    }
    else
    {

    }
    v5 = v13;
    v6 = v11;
  }
  if (v6)
  {
    v11 = (v6 - 1) & v6;
    v12 = __clz(__rbit64(v6)) | (v5 << 6);
    v13 = v5;
LABEL_32:
    v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_35;
    goto LABEL_33;
  }
  v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v10)
      goto LABEL_35;
    v16 = *(_QWORD *)(v20 + 8 * v15);
    v13 = v5 + 1;
    if (!v16)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v10)
        goto LABEL_35;
      v16 = *(_QWORD *)(v20 + 8 * v13);
      if (!v16)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v10)
          goto LABEL_35;
        v16 = *(_QWORD *)(v20 + 8 * v13);
        if (!v16)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v10)
            goto LABEL_35;
          v16 = *(_QWORD *)(v20 + 8 * v13);
          if (!v16)
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v10)
              goto LABEL_35;
            v16 = *(_QWORD *)(v20 + 8 * v13);
            if (!v16)
            {
              v17 = v5 + 6;
              while (v10 != v17)
              {
                v16 = *(_QWORD *)(v20 + 8 * v17++);
                if (v16)
                {
                  v13 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_23646C39C();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t dispatch thunk of AISAccountsProviderProtocol.accounts(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AISAccountsProviderProtocol.isManagedAppleID(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AISAKAppleIDAuthenticationControllerProtocol.performCheckInForAccount(withAltDSID:event:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 8)
                                                                                     + *(_QWORD *)(a6 + 8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_236477420;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for AISCheckInHelper()
{
  return objc_opt_self();
}

uint64_t method lookup function for AISCheckInHelper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AISCheckInHelper.__allocating_init(with:authenticationController:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AISCheckInHelper.checkinMAIDAccountsOnDevice()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 104) + *(_QWORD *)(*(_QWORD *)v0 + 104));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23647E274;
  return v4();
}

unint64_t sub_2364DB7F8()
{
  unint64_t result;

  result = qword_2563E6C80;
  if (!qword_2563E6C80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563E6C80);
  }
  return result;
}

unint64_t sub_2364DB834()
{
  unint64_t result;
  unint64_t v1;

  result = qword_2563E8B08;
  if (!qword_2563E8B08)
  {
    v1 = sub_2364DB7F8();
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, &qword_2563E8B08);
  }
  return result;
}

uint64_t sub_2364DB87C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;

  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v5;
  *(_QWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = sub_236477420;
  *(_OWORD *)(v5 + 120) = v6;
  *(_QWORD *)(v5 + 112) = a2;
  return swift_task_switch();
}

uint64_t sub_2364DB8E4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2364DB918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_23647E274;
  *(_OWORD *)(v2 + 72) = v3;
  return swift_task_switch();
}

uint64_t sub_2364DB978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2364DB9C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2364DB9E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23647E274;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2563E8B28 + dword_2563E8B28))(a1, v4);
}

uint64_t sub_2364DBA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2365AFC00();
  __swift_allocate_value_buffer(v0, qword_2563E8B48);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2563E8B48);
  if (qword_2542A8238 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2542A8218);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

BOOL sub_2364DBAE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2364B5C9C(*a1, *a2);
}

uint64_t sub_2364DBAF0()
{
  return sub_2364B5D98();
}

uint64_t sub_2364DBAF8()
{
  return sub_2364B5CAC();
}

uint64_t sub_2364DBB00()
{
  sub_2365B09E0();
  sub_2364B5CAC();
  return sub_2365B0A34();
}

id RapportTransport.client.getter()
{
  id *v0;

  return *v0;
}

uint64_t RapportTransport.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id RapportTransport.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t RapportTransport.init(client:identifier:queue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  v12 = type metadata accessor for RapportTransport(0, a5, a6, a4);
  *(_OWORD *)(a7 + 32) = 0u;
  *(_OWORD *)(a7 + 48) = 0u;
  *(_OWORD *)(a7 + 64) = 0u;
  v13 = a7 + *(int *)(v12 + 56);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(a7 + *(int *)(v12 + 60), 1, 1, v14);
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  return result;
}

uint64_t type metadata accessor for RapportTransport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RapportTransport);
}

uint64_t RapportTransport.onReceive(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;

  sub_236450690(v4[4]);
  v4[4] = a1;
  v4[5] = a2;
  v9 = v4[6];
  swift_retain();
  sub_236450690(v9);
  v4[6] = 0;
  v4[7] = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, v4, a3);
}

{
  uint64_t *v4;

  sub_236450690(v4[4]);
  v4[4] = 0;
  v4[5] = 0;
  sub_236450690(v4[6]);
  v4[6] = a1;
  v4[7] = a2;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, v4, a3);
  return swift_retain();
}

uint64_t RapportTransport.onInvalidation(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_236450690(*(_QWORD *)(v4 + 64));
  *(_QWORD *)(v4 + 64) = a1;
  *(_QWORD *)(v4 + 72) = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, v4, a3);
  return swift_retain();
}

uint64_t RapportTransport.incomingSigningIdentity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2364DBE3C(a1, (uint64_t)v9);
  v10 = v3 + *(int *)(a2 + 56);
  sub_236465998(v10, &qword_2563E4DD8);
  sub_2364DBE84((uint64_t)v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, v3, a2);
}

uint64_t sub_2364DBE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2364DBE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RapportTransport.outgoingSigningIdentity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2364DBE3C(a1, (uint64_t)v9);
  v10 = v3 + *(int *)(a2 + 60);
  sub_236465998(v10, &qword_2563E4DD8);
  sub_2364DBE84((uint64_t)v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, v3, a2);
}

uint64_t RapportTransport.build()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _QWORD v26[4];
  _BYTE v27[16];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  unsigned __int8 v35;
  __int128 v36;
  unsigned __int8 v37;
  uint64_t v38;

  v3 = v2;
  v38 = a2;
  v5 = v2[6];
  if (v5)
    v6 = v2[7];
  else
    v6 = 0;
  v32 = v2[6];
  v33 = v6;
  v8 = *(_QWORD *)(a1 + 24);
  v28 = *(_QWORD *)(a1 + 16);
  v7 = v28;
  v29 = v8;
  sub_23645063C(v5);
  v30 = v28;
  type metadata accessor for RapportTransport.MessageInfo(255, v28, v8, v9);
  v31 = sub_2365B047C();
  swift_getFunctionTypeMetadata();
  sub_2365B047C();
  v11 = type metadata accessor for RapportTransport.TypedReceiver(0, v28, v8, v10);
  sub_2364B17EC((void (*)(char *, char *))sub_2364DC2A0, (uint64_t)v27, MEMORY[0x24BEE4078], v11, v12, (uint64_t)&v34);
  sub_236450690(v32);
  v13 = v35;
  if (v35 != 255)
  {
    v36 = v34;
LABEL_7:
    v17 = v36;
    sub_2364DC314(v36, *((uint64_t *)&v36 + 1), v13 & 1, a1, v38);
    return sub_2364E10A4(v17, *((uint64_t *)&v17 + 1), v13);
  }
  v14 = v2[5];
  v32 = v2[4];
  v33 = v14;
  v15 = MEMORY[0x24BDAC7A8](v32);
  v26[2] = v7;
  v26[3] = v8;
  sub_23645063C(v15);
  v30 = v7;
  swift_getFunctionTypeMetadata();
  sub_2365B047C();
  sub_2364B17EC((void (*)(char *, char *))sub_2364DC2D0, (uint64_t)v26, MEMORY[0x24BEE4078], v11, v16, (uint64_t)&v36);
  sub_236450690(v32);
  v13 = v37;
  if (v37 != 255)
    goto LABEL_7;
  if (qword_2563E4310 != -1)
    swift_once();
  v19 = sub_2365AFC00();
  __swift_project_value_buffer(v19, (uint64_t)qword_2563E8B48);
  v20 = sub_2365AFBE8();
  v21 = sub_2365B0398();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_23644B000, v20, v21, "Failed to build rapport transport, missing receiver", v22, 2u);
    MEMORY[0x23B7F5254](v22, -1, -1);
  }

  v24 = type metadata accessor for RapportTransport.Failure(0, v7, v8, v23);
  MEMORY[0x23B7F5164](&unk_2365BC9E0, v24);
  swift_allocError();
  *v25 = 0;
  swift_willThrow();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
}

uint64_t sub_2364DC2A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2364DC2E8(a1, 1, a2);
}

uint64_t type metadata accessor for RapportTransport.MessageInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RapportTransport.MessageInfo);
}

uint64_t type metadata accessor for RapportTransport.TypedReceiver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RapportTransport.TypedReceiver);
}

uint64_t sub_2364DC2D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2364DC2E8(a1, 0, a2);
}

uint64_t sub_2364DC2E8@<X0>(uint64_t *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  v3 = a1[1];
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 16) = a2;
  return swift_retain();
}

uint64_t type metadata accessor for RapportTransport.Failure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RapportTransport.Failure);
}

uint64_t sub_2364DC314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  NSObject **v5;
  NSObject **v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  void (*v49)(char *);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, char *, uint64_t);
  void *v56;
  _QWORD *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  uint64_t result;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  char *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  NSObject **v89;
  uint64_t v90;
  uint64_t aBlock;
  uint64_t v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;

  v6 = v5;
  v79 = a3;
  v78 = a2;
  v77 = a1;
  v67 = a5;
  v8 = *(_QWORD *)(*(_QWORD *)(a4 - 8) + 64);
  v82 = *(_QWORD *)(a4 - 8);
  v83 = v8;
  MEMORY[0x24BDAC7A8](a1);
  v80 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v10 + 24);
  v75 = type metadata accessor for MessageUnpacker(0, v11, v12, v10);
  v74 = *(_QWORD *)(v75 - 8);
  v76 = *(_QWORD *)(v74 + 64);
  v13 = MEMORY[0x24BDAC7A8](v75);
  v73 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v64 - v15);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v11;
  v71 = type metadata accessor for MessagePacker(0, v11, v12, v21);
  v87 = *(_QWORD *)(v71 - 8);
  v72 = *(_QWORD *)(v87 + 64);
  v22 = MEMORY[0x24BDAC7A8](v71);
  v70 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (uint64_t *)((char *)&v64 - v24);
  v88 = *v5;
  v81 = sub_2364DC9F8(v88);
  sub_2365AF81C();
  swift_allocObject();
  v85 = sub_2365AF810();
  sub_2365AF7F8();
  swift_allocObject();
  v84 = sub_2365AF7EC();
  swift_allocObject();
  v26 = sub_2365AF810();
  v69 = a4;
  sub_2364DBE3C((uint64_t)v6 + *(int *)(a4 + 60), (uint64_t)v19);
  v90 = v12;
  MessagePacker.init(encoder:signingIdentity:topicIdentifier:)(v26, (uint64_t)v19, 0, 0, v20, v12, v25);
  swift_allocObject();
  v27 = sub_2365AF7EC();
  sub_2364DBE3C((uint64_t)v6 + *(int *)(a4 + 56), (uint64_t)v19);
  v28 = v27;
  v29 = v20;
  MessageUnpacker.init(decoder:signingIdentity:topicIdentifier:)(v28, (uint64_t)v19, 0, 0, v20, v12, v16);
  -[NSObject setDispatchQueue:](v88, sel_setDispatchQueue_, v6[3]);
  v89 = v6;
  v68 = sub_2365B0038();
  v30 = v74;
  v31 = *(void (**)(char *, _QWORD *, uint64_t))(v74 + 16);
  v32 = v73;
  v66 = v16;
  v33 = v75;
  v31(v73, v16, v75);
  v34 = v87;
  v35 = *(void (**)(char *, _QWORD *, uint64_t))(v87 + 16);
  v36 = v70;
  v65 = v25;
  v37 = v71;
  v35(v70, v25, v71);
  v38 = v30;
  v39 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v40 = (v76 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  v41 = (*(unsigned __int8 *)(v34 + 80) + v40 + 17) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  v42 = swift_allocObject();
  v43 = v90;
  *(_QWORD *)(v42 + 16) = v29;
  *(_QWORD *)(v42 + 24) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v42 + v39, v32, v33);
  v44 = v42 + v40;
  v45 = v78;
  *(_QWORD *)v44 = v77;
  *(_QWORD *)(v44 + 8) = v45;
  *(_BYTE *)(v44 + 16) = v79 & 1;
  v86 = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v87 + 32))(v42 + v41, v36, v37);
  v95 = sub_2364E9A30;
  v96 = v42;
  aBlock = MEMORY[0x24BDAC760];
  v92 = 1107296256;
  v93 = sub_2364DF104;
  v94 = &block_descriptor_18;
  v46 = _Block_copy(&aBlock);
  sub_2364E9440();
  swift_release();
  v47 = (void *)v68;
  -[NSObject registerRequestID:options:handler:](v88, sel_registerRequestID_options_handler_, v68, 0, v46);
  _Block_release(v46);

  v88 = *v89;
  v48 = v82;
  v49 = *(void (**)(char *))(v82 + 16);
  v50 = v80;
  v51 = v69;
  v49(v80);
  v52 = *(unsigned __int8 *)(v48 + 80);
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = v29;
  v54 = v90;
  *(_QWORD *)(v53 + 24) = v90;
  v55 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
  v55(v53 + ((v52 + 32) & ~v52), v50, v51);
  v95 = sub_2364E9DB4;
  v96 = v53;
  aBlock = MEMORY[0x24BDAC760];
  v92 = 1107296256;
  v93 = sub_2364BF6CC;
  v94 = &block_descriptor_24_0;
  v56 = _Block_copy(&aBlock);
  swift_release();
  -[NSObject setInvalidationHandler:](v88, sel_setInvalidationHandler_, v56);
  _Block_release(v56);
  v88 = v89[3];
  v49(v50);
  v57 = (_QWORD *)swift_allocObject();
  v57[2] = v86;
  v57[3] = v54;
  v58 = v81;
  v57[4] = v81;
  v59 = (uint64_t)v50;
  v55((uint64_t)v57 + ((v52 + 40) & ~v52), v50, v51);
  v60 = swift_allocObject();
  *(_QWORD *)(v60 + 16) = sub_2364EA0B0;
  *(_QWORD *)(v60 + 24) = v57;
  v95 = sub_2364EA114;
  v96 = v60;
  aBlock = MEMORY[0x24BDAC760];
  v92 = 1107296256;
  v93 = sub_236527978;
  v94 = &block_descriptor_33;
  v61 = _Block_copy(&aBlock);
  v62 = v58;
  swift_retain();
  swift_release();
  dispatch_sync(v88, v61);
  swift_release();
  swift_release();
  _Block_release(v61);
  LOBYTE(v54) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v54 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v55(v59, (char *)v89, v51);
    sub_2364DF2C0(v59, (uint64_t)v62, (uint64_t)v65, (uint64_t)v66, v86, v90, v67);
    return swift_release();
  }
  return result;
}

id sub_2364DC9F8(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v3 = *(void **)(v1 + 24);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE297D8]), sel_init);
  objc_msgSend(v4, sel_setDispatchQueue_, v3);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = v3;
  v22 = sub_2364EA784;
  v23 = v5;
  v6 = MEMORY[0x24BDAC760];
  v18 = MEMORY[0x24BDAC760];
  v19 = 1107296256;
  v20 = sub_2364DF824;
  v21 = &block_descriptor_50;
  v7 = _Block_copy(&v18);
  v8 = a1;
  v9 = v3;
  swift_release();
  objc_msgSend(v4, sel_setRegisterRequestHandler_, v7);
  _Block_release(v7);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  v22 = sub_2364EA7B0;
  v23 = v10;
  v18 = v6;
  v19 = 1107296256;
  v20 = sub_2364DFA08;
  v21 = &block_descriptor_56;
  v11 = _Block_copy(&v18);
  v12 = v8;
  swift_release();
  objc_msgSend(v4, sel_setDeregisterRequestHandler_, v11);
  _Block_release(v11);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v9;
  v22 = sub_2364EA7F4;
  v23 = v13;
  v18 = v6;
  v19 = 1107296256;
  v20 = sub_2364DFE7C;
  v21 = &block_descriptor_62;
  v14 = _Block_copy(&v18);
  v15 = v12;
  v16 = v9;
  swift_release();
  objc_msgSend(v4, sel_setSendRequestHandler_, v14);
  _Block_release(v14);
  return v4;
}

uint64_t sub_2364DCBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a8;
  v49 = a6;
  v50 = a7;
  v52 = a3;
  v53 = a4;
  v47 = a1;
  v48 = a2;
  v45 = a10;
  v43 = a5;
  v44 = a11;
  v11 = type metadata accessor for MessagePacker(0, a10, a11, a4);
  v12 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  v14 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v40 - v15;
  v42 = (char *)&v40 - v15;
  v18 = type metadata accessor for MessageUnpacker(0, a10, a11, v17);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v40 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v25;
  v26 = sub_2365B0218();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v43, v18);
  v27 = v14;
  v40 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a9, v11);
  v28 = (*(unsigned __int8 *)(v19 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v29 = (v20 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  v31 = (*(unsigned __int8 *)(v27 + 80) + v30 + 17) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v32 = (v13 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject();
  *((_QWORD *)v33 + 2) = 0;
  *((_QWORD *)v33 + 3) = 0;
  v34 = v44;
  *((_QWORD *)v33 + 4) = v45;
  *((_QWORD *)v33 + 5) = v34;
  *((_QWORD *)v33 + 6) = v47;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v33[v28], v22, v18);
  *(_QWORD *)&v33[v29] = v48;
  v35 = &v33[v30];
  v36 = v50;
  *(_QWORD *)v35 = v49;
  *((_QWORD *)v35 + 1) = v36;
  v35[16] = v51 & 1;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v33[v31], v42, v41);
  v37 = &v33[v32];
  v38 = v53;
  *(_QWORD *)v37 = v52;
  *((_QWORD *)v37 + 1) = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2364E9440();
  swift_retain();
  sub_23649225C((uint64_t)v46, (uint64_t)&unk_2563E8E08, (uint64_t)v33);
  return swift_release();
}

uint64_t sub_2364DCE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 744) = v14;
  *(_QWORD *)(v8 + 736) = v13;
  *(_QWORD *)(v8 + 728) = v12;
  *(_OWORD *)(v8 + 712) = v11;
  *(_BYTE *)(v8 + 145) = v10;
  *(_QWORD *)(v8 + 704) = a8;
  *(_QWORD *)(v8 + 696) = a7;
  *(_QWORD *)(v8 + 688) = a6;
  *(_QWORD *)(v8 + 680) = a5;
  *(_QWORD *)(v8 + 672) = a4;
  *(_QWORD *)(v8 + 752) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 760) = swift_task_alloc();
  *(_QWORD *)(v8 + 768) = swift_task_alloc();
  *(_QWORD *)(v8 + 776) = swift_task_alloc();
  *(_QWORD *)(v8 + 784) = swift_task_alloc();
  *(_QWORD *)(v8 + 792) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2364DCF60()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t type;
  NSObject *v47;
  uint64_t v48[2];

  v48[1] = *MEMORY[0x24BDAC8D0];
  if (qword_2563E4310 != -1)
    swift_once();
  v1 = sub_2365AFC00();
  *(_QWORD *)(v0 + 800) = __swift_project_value_buffer(v1, (uint64_t)qword_2563E8B48);
  swift_bridgeObjectRetain_n();
  v2 = sub_2365AFBE8();
  v3 = sub_2365B038C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v48[0] = v5;
    *(_DWORD *)v4 = 136315138;
    swift_bridgeObjectRetain();
    v6 = sub_2365AFF6C();
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 664) = sub_236468D88(v6, v8, v48);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23644B000, v2, v3, "Received incoming request to unpack: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v5, -1, -1);
    MEMORY[0x23B7F5254](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = *(_QWORD *)(v0 + 792);
  v10 = *(_QWORD *)(v0 + 672);
  v12 = type metadata accessor for MessageUnpacker(0, *(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744), v11);
  MessageUnpacker.unpack(_:)(v10, v12, v9);
  v45 = v0 + 424;
  v13 = *(_QWORD *)(v0 + 744);
  v14 = *(_QWORD *)(v0 + 736);
  *(_QWORD *)(v0 + 608) = *(_QWORD *)(v0 + 688);
  v15 = swift_task_alloc();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7E70);
  v17 = type metadata accessor for RapportTransport.MessageInfo(0, v14, v13, v16);
  sub_2364B17EC((void (*)(char *, char *))sub_2364EA5C0, v15, MEMORY[0x24BEE4078], v17, v18, v0 + 288);
  swift_task_dealloc();
  v19 = v0 + 424;
  v20 = sub_2365B047C();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v0 + 424, v0 + 288, v20);
  sub_2364E9440();
  sub_2364EA674(v0 + 424, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2364EA5F4);
  sub_2364E9440();
  sub_2364EA674(v0 + 424, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2364EA5F4);
  v22 = sub_2365AFBE8();
  v23 = sub_2365B038C();
  if (os_log_type_enabled(v22, v23))
  {
    v47 = v22;
    v24 = v21;
    v25 = *(_QWORD *)(v0 + 744);
    v26 = *(_QWORD *)(v0 + 736);
    v27 = *(_QWORD *)(v0 + 704);
    v28 = *(_QWORD *)(v0 + 696);
    type = v23;
    v29 = *(_BYTE *)(v0 + 145) & 1;
    v30 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v48[0] = v44;
    *(_DWORD *)v30 = 136315394;
    *(_QWORD *)(v0 + 560) = v28;
    *(_QWORD *)(v0 + 568) = v27;
    *(_BYTE *)(v0 + 576) = v29;
    sub_2364E9440();
    v31 = v25;
    v21 = v24;
    type metadata accessor for RapportTransport.TypedReceiver(0, v26, v31, v32);
    v33 = sub_2365B0080();
    *(_QWORD *)(v0 + 640) = sub_236468D88(v33, v34, v48);
    sub_2365B04A0();
    v19 = v0 + 424;
    swift_bridgeObjectRelease();
    sub_2364E10BC();
    sub_2364E10BC();
    *(_WORD *)(v30 + 12) = 2080;
    v24(v0 + 16, v45, v20);
    sub_2364EA674(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2364EA5F4);
    v35 = sub_2365B0080();
    *(_QWORD *)(v0 + 656) = sub_236468D88(v35, v36, v48);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_2364EA674(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2364EA6D8);
    sub_2364EA674(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2364EA6D8);
    v22 = v47;
    _os_log_impl(&dword_23644B000, v47, type, "Handling incoming request with receiver (%s) and inMessageInfo: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v44, -1, -1);
    MEMORY[0x23B7F5254](v30, -1, -1);
  }
  else
  {
    sub_2364E10BC();
    sub_2364E10BC();
    sub_2364EA674(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2364EA6D8);
    sub_2364EA674(v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2364EA6D8);
  }

  v37 = *(_QWORD *)(v0 + 792);
  v38 = *(_QWORD *)(v0 + 776);
  v39 = *(_QWORD *)(v0 + 736);
  v40 = *(_BYTE *)(v0 + 145);
  v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 752) + 16);
  *(_QWORD *)(v0 + 808) = v41;
  v41(v38, v37, v39);
  v21(v0 + 152, v19, v20);
  v42 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 816) = v42;
  *v42 = v0;
  v42[1] = sub_2364DDA2C;
  return sub_2364DEDB4(*(_QWORD *)(v0 + 784), *(_QWORD *)(v0 + 776), v0 + 152, *(_QWORD *)(v0 + 696), *(_QWORD *)(v0 + 704), v40 & 1, *(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744));
}

uint64_t sub_2364DDA2C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 824) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364DDAD4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];

  v45[1] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 808))(*(_QWORD *)(v0 + 768), *(_QWORD *)(v0 + 784), *(_QWORD *)(v0 + 736));
  v1 = sub_2365AFBE8();
  v2 = sub_2365B038C();
  if (os_log_type_enabled(v1, v2))
  {
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 808);
    v3 = *(_QWORD *)(v0 + 768);
    v42 = v3;
    v4 = *(_QWORD *)(v0 + 760);
    v43 = *(_QWORD *)(v0 + 752);
    v5 = *(_QWORD *)(v0 + 736);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v45[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v40(v4, v3, v5);
    v8 = sub_2365B0080();
    *(_QWORD *)(v0 + 624) = sub_236468D88(v8, v9, v45);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    v10 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v10(v42, v5);
    _os_log_impl(&dword_23644B000, v1, v2, "Processed and ready to pack outMessage: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v7, -1, -1);
    MEMORY[0x23B7F5254](v6, -1, -1);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 752) + 8);
    v10(*(_QWORD *)(v0 + 768), *(_QWORD *)(v0 + 736));
  }

  v11 = *(void **)(v0 + 824);
  v12 = *(_QWORD *)(v0 + 784);
  v14 = type metadata accessor for MessagePacker(0, *(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 744), v13);
  v15 = MessagePacker.pack(_:)(v12, v14);
  v16 = *(_QWORD *)(v0 + 792);
  v17 = *(_QWORD *)(v0 + 736);
  v10(*(_QWORD *)(v0 + 784), v17);
  v10(v16, v17);
  if (v11)
  {
    swift_bridgeObjectRetain();
    v18 = v11;
    swift_bridgeObjectRetain();
    v19 = v11;
    v20 = sub_2365AFBE8();
    v21 = sub_2365B0398();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v41 = (_QWORD *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v45[0] = v44;
      *(_DWORD *)v22 = 136315394;
      swift_bridgeObjectRetain();
      v23 = sub_2365AFF6C();
      v25 = v24;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 592) = sub_236468D88(v23, v25, v45);
      sub_2365B04A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2112;
      v26 = v11;
      v27 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 584) = v27;
      sub_2365B04A0();
      *v41 = v27;

      _os_log_impl(&dword_23644B000, v20, v21, "Failed to handle incoming request: %s with error: %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v41, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v44, -1, -1);
      MEMORY[0x23B7F5254](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
    v15 = 0;
  }
  swift_bridgeObjectRetain();
  v28 = v11;
  swift_bridgeObjectRetain();
  v29 = v11;
  v30 = sub_2365AFBE8();
  v31 = sub_2365B0380();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v45[0] = v34;
    *(_DWORD *)v32 = 136315394;
    *(_QWORD *)(v0 + 648) = v15;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7E70);
    v35 = sub_2365B0080();
    *(_QWORD *)(v0 + 632) = sub_236468D88(v35, v36, v45);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2112;
    if (v11)
    {
      v37 = v11;
      v38 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 600) = v38;
      sub_2365B04A0();
    }
    else
    {
      *(_QWORD *)(v0 + 616) = 0;
      sub_2365B04A0();
      v38 = 0;
    }
    *v33 = v38;

    _os_log_impl(&dword_23644B000, v30, v31, "Sending outResponse: %s, outError: %@", (uint8_t *)v32, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v33, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v34, -1, -1);
    MEMORY[0x23B7F5254](v32, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  (*(void (**)(uint64_t, _QWORD, void *))(v0 + 720))(v15, 0, v11);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364DE190()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26[2];

  v26[1] = *MEMORY[0x24BDAC8D0];
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 752) + 8))(*(_QWORD *)(v0 + 792), *(_QWORD *)(v0 + 736));
  v1 = *(void **)(v0 + 824);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = sub_2365AFBE8();
  v5 = sub_2365B0398();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26[0] = v25;
    *(_DWORD *)v6 = 136315394;
    swift_bridgeObjectRetain();
    v7 = sub_2365AFF6C();
    v9 = v8;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 592) = sub_236468D88(v7, v9, v26);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 584) = v11;
    sub_2365B04A0();
    *v24 = v11;

    _os_log_impl(&dword_23644B000, v4, v5, "Failed to handle incoming request: %s with error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v25, -1, -1);
    MEMORY[0x23B7F5254](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  v12 = v1;
  v13 = v1;
  v14 = sub_2365AFBE8();
  v15 = sub_2365B0380();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = (_QWORD *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v26[0] = v18;
    *(_DWORD *)v16 = 136315394;
    *(_QWORD *)(v0 + 648) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7E70);
    v19 = sub_2365B0080();
    *(_QWORD *)(v0 + 632) = sub_236468D88(v19, v20, v26);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2112;
    if (v1)
    {
      v21 = v1;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 600) = v22;
      sub_2365B04A0();
    }
    else
    {
      *(_QWORD *)(v0 + 616) = 0;
      sub_2365B04A0();
      v22 = 0;
    }
    *v17 = v22;

    _os_log_impl(&dword_23644B000, v14, v15, "Sending outResponse: %s, outError: %@", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v17, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v18, -1, -1);
    MEMORY[0x23B7F5254](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  (*(void (**)(_QWORD, _QWORD, void *))(v0 + 720))(0, 0, v1);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364DE68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t result;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[40];
  __int128 v67;
  __int128 v68;

  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v4;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v5 = sub_2364685F8((uint64_t)v66), (v6 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_23646A464((uint64_t)v66);
  if (!*((_QWORD *)&v68 + 1))
  {
    sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v62 = 0;
    v63 = 1;
    goto LABEL_10;
  }
  v62 = v64;
  v63 = 0;
LABEL_10:
  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v7;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v8 = sub_2364685F8((uint64_t)v66), (v9 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_23646A464((uint64_t)v66);
  if (*((_QWORD *)&v68 + 1))
  {
    v10 = swift_dynamicCast();
    if (v10)
      v11 = v64;
    else
      v11 = 0;
    if (v10)
      v12 = v65;
    else
      v12 = 0;
    v60 = v12;
    v61 = v11;
  }
  else
  {
    sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    v60 = 0;
    v61 = 0;
  }
  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v13;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v14 = sub_2364685F8((uint64_t)v66), (v15 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v14, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_23646A464((uint64_t)v66);
  if (*((_QWORD *)&v68 + 1))
  {
    v16 = swift_dynamicCast();
    if (v16)
      v17 = v64;
    else
      v17 = 0;
    if (v16)
      v18 = v65;
    else
      v18 = 0;
    v58 = v18;
    v59 = v17;
  }
  else
  {
    sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    v58 = 0;
    v59 = 0;
  }
  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v19;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v20 = sub_2364685F8((uint64_t)v66), (v21 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v20, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_23646A464((uint64_t)v66);
  if (*((_QWORD *)&v68 + 1))
  {
    v22 = swift_dynamicCast();
    if (v22)
      v23 = v64;
    else
      v23 = 0;
    if (v22)
      v24 = v65;
    else
      v24 = 0;
    v56 = v24;
    v57 = v23;
  }
  else
  {
    sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    v56 = 0;
    v57 = 0;
  }
  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v25;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v26 = sub_2364685F8((uint64_t)v66), (v27 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v26, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_23646A464((uint64_t)v66);
  if (*((_QWORD *)&v68 + 1))
  {
    v28 = swift_dynamicCast();
    v29 = v64;
    if (!v28)
      v29 = 0;
    v55 = v29;
    if (v28)
      v30 = v65;
    else
      v30 = 0;
  }
  else
  {
    sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    v55 = 0;
    v30 = 0;
  }
  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v31;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v32 = sub_2364685F8((uint64_t)v66), (v33 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v32, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_23646A464((uint64_t)v66);
  if (*((_QWORD *)&v68 + 1))
  {
    v34 = swift_dynamicCast();
    if (v34)
      v35 = v64;
    else
      v35 = 0;
    if (v34)
      v36 = v65;
    else
      v36 = 0;
  }
  else
  {
    sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    v35 = 0;
    v36 = 0;
  }
  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v37;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v38 = sub_2364685F8((uint64_t)v66), (v39 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v38, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_23646A464((uint64_t)v66);
  if (*((_QWORD *)&v68 + 1))
  {
    v40 = swift_dynamicCast();
    if (v40)
      v41 = v64;
    else
      v41 = 0;
    if (v40)
      v42 = v65;
    else
      v42 = 0;
  }
  else
  {
    sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    v41 = 0;
    v42 = 0;
  }
  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v43;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v44 = sub_2364685F8((uint64_t)v66), (v45 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v44, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  sub_23646A464((uint64_t)v66);
  if (*((_QWORD *)&v68 + 1))
  {
    v46 = swift_dynamicCast();
    if (v46)
      v47 = v64;
    else
      v47 = 0;
    if (v46)
      v48 = v65;
    else
      v48 = 0;
  }
  else
  {
    sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    v47 = 0;
    v48 = 0;
  }
  *(_QWORD *)&v67 = sub_2365B005C();
  *((_QWORD *)&v67 + 1) = v49;
  sub_2365B0548();
  if (*(_QWORD *)(a1 + 16) && (v50 = sub_2364685F8((uint64_t)v66), (v51 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(a1 + 56) + 32 * v50, (uint64_t)&v67);
  }
  else
  {
    v67 = 0u;
    v68 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_23646A464((uint64_t)v66);
  if (!*((_QWORD *)&v68 + 1))
  {
    result = sub_236465998((uint64_t)&v67, (uint64_t *)&unk_2542A8320);
    goto LABEL_104;
  }
  result = swift_dynamicCast();
  if (!(_DWORD)result)
  {
LABEL_104:
    v54 = 0;
    v53 = 1;
    goto LABEL_105;
  }
  v53 = 0;
  v54 = v64;
LABEL_105:
  *(_DWORD *)a2 = v62;
  *(_BYTE *)(a2 + 4) = v63;
  *(_QWORD *)(a2 + 8) = v61;
  *(_QWORD *)(a2 + 16) = v60;
  *(_QWORD *)(a2 + 24) = v59;
  *(_QWORD *)(a2 + 32) = v58;
  *(_QWORD *)(a2 + 40) = v57;
  *(_QWORD *)(a2 + 48) = v56;
  *(_QWORD *)(a2 + 56) = v55;
  *(_QWORD *)(a2 + 64) = v30;
  *(_QWORD *)(a2 + 72) = v35;
  *(_QWORD *)(a2 + 80) = v36;
  *(_QWORD *)(a2 + 88) = v41;
  *(_QWORD *)(a2 + 96) = v42;
  *(_QWORD *)(a2 + 104) = v47;
  *(_QWORD *)(a2 + 112) = v48;
  *(_QWORD *)(a2 + 120) = v54;
  *(_BYTE *)(a2 + 128) = v53;
  return result;
}

uint64_t sub_2364DEDB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  *(_BYTE *)(v8 + 145) = a6;
  *(_QWORD *)(v8 + 440) = a4;
  *(_QWORD *)(v8 + 448) = a5;
  *(_QWORD *)(v8 + 424) = a1;
  *(_QWORD *)(v8 + 432) = a2;
  type metadata accessor for RapportTransport.MessageInfo(255, a7, a8, a4);
  v10 = sub_2365B047C();
  *(_QWORD *)(v8 + 456) = v10;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  *(_QWORD *)(v8 + 464) = v11;
  v11(v8 + 16, a3, v10);
  v11(v8 + 152, v8 + 16, v10);
  return swift_task_switch();
}

uint64_t sub_2364DEE60()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  _QWORD *v4;
  int *v5;
  int *v6;

  v1 = *(int **)(v0 + 440);
  if ((*(_BYTE *)(v0 + 145) & 1) != 0)
  {
    v6 = (int *)((char *)v1 + *v1);
    swift_retain();
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v4;
    *v4 = v0;
    v4[1] = sub_2364DEFC0;
    return ((uint64_t (*)(_QWORD, _QWORD, uint64_t))v6)(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 432), v0 + 152);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD))(v0 + 464))(v0 + 288, v0 + 152, *(_QWORD *)(v0 + 456));
    sub_2364EA674(v0 + 288, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2364EA6D8);
    v5 = (int *)((char *)v1 + *v1);
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v2;
    *v2 = v0;
    v2[1] = sub_2364DEF5C;
    return ((uint64_t (*)(_QWORD, _QWORD))v5)(*(_QWORD *)(v0 + 424), *(_QWORD *)(v0 + 432));
  }
}

uint64_t sub_2364DEF5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364DEFC0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 496) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364DF024()
{
  uint64_t v0;

  sub_2364E10BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364DF05C()
{
  uint64_t v0;

  sub_2364E10BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364DF094()
{
  uint64_t v0;

  sub_2364E10BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364DF0CC()
{
  uint64_t v0;

  sub_2364E10BC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364DF104(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  void (*v6)(uint64_t, uint64_t, void (*)(uint64_t, void *, uint64_t), uint64_t);
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v6 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, void *, uint64_t), uint64_t))(a1 + 32);
  v7 = sub_2365AFF60();
  if (a3)
    a3 = sub_2365AFF60();
  v8 = _Block_copy(a4);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain();
  v6(v7, a3, sub_2364EA140, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_2364DF1F0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;

  v6 = a2;
  if (a1)
  {
    v7 = (void *)sub_2365AFF48();
    if (!v6)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = 0;
  if (a2)
LABEL_3:
    v6 = (void *)sub_2365AFF48();
LABEL_4:
  if (a3)
    v8 = sub_2365AF8E8();
  else
    v8 = 0;
  v9 = (id)v8;
  (*(void (**)(uint64_t, void *, void *))(a4 + 16))(a4, v7, v6);

}

uint64_t sub_2364DF2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v14 = (int *)type metadata accessor for RapportTransport.Activated(0, a5, a6, a4);
  *(_BYTE *)(a7 + v14[11]) = 0;
  v15 = v14[12];
  v17 = type metadata accessor for RapportTransport(0, a5, a6, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a7, a1, v17);
  *(_QWORD *)(a7 + v15) = a2;
  v18 = a7 + v14[9];
  v20 = type metadata accessor for MessagePacker(0, a5, a6, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, a3, v20);
  v21 = a7 + v14[10];
  v23 = type metadata accessor for MessageUnpacker(0, a5, a6, v22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, a4, v23);
}

void sub_2364DF3BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v16[6];

  v12 = (void *)sub_2365B0038();
  if (a3)
    a3 = (void *)sub_2365AFF48();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a4;
  v13[3] = a5;
  v13[4] = a7;
  v16[4] = sub_2364EA93C;
  v16[5] = v13;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_2364DF104;
  v16[3] = &block_descriptor_89;
  v14 = _Block_copy(v16);
  swift_retain();
  v15 = a7;
  swift_release();
  objc_msgSend(a6, sel_registerRequestID_options_handler_, v12, a3, v14);
  _Block_release(v14);

}

uint64_t sub_2364DF4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t (*)(int a1, uint64_t a2, uint64_t a3), _QWORD *), uint64_t a6, void *a7)
{
  _QWORD *v13;
  id v14;

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a7;
  v13[3] = a3;
  v13[4] = a4;
  v14 = a7;
  swift_retain();
  a5(a2, a1, sub_2364EA978, v13);
  return swift_release();
}

uint64_t sub_2364DF574(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD *v25;
  void *v26;
  id v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v36 = a4;
  v11 = sub_2365AFD38();
  v34 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_2365AFD74();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v35 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_2365B005C();
    v33 = v15;
    v31 = a1;
    v17 = a5;
    v18 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v19 = sub_2365B0038();
    v32 = a3;
    v20 = a6;
    v21 = a2;
    v22 = (void *)v19;
    v15 = v33;
    swift_bridgeObjectRelease();
    v23 = v18;
    a5 = v17;
    v24 = objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v22, v31, 0);

    a2 = v21;
    a6 = v20;
    a3 = v32;
  }
  else
  {
    v24 = 0;
  }
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = a5;
  v25[3] = a6;
  v25[4] = a3;
  v25[5] = a2;
  v25[6] = v24;
  aBlock[4] = sub_2364EA9C0;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2364BF6CC;
  aBlock[3] = &block_descriptor_98;
  v26 = _Block_copy(aBlock);
  v27 = v24;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v35;
  sub_2365AFD5C();
  v37 = MEMORY[0x24BEE4AF8];
  sub_2364EA874();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_2364EA8BC();
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v28, v13, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v28, v14);
  return swift_release();
}

uint64_t sub_2364DF824(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  v7 = sub_2365B005C();
  v9 = v8;
  if (a3)
    a3 = sub_2365AFF60();
  v10 = _Block_copy(a4);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  swift_retain();
  v6(v7, v9, a3, sub_2364EA908, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2364DF904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  void *v10;
  void (*v11)(uint64_t, void *, void *, void *);
  _QWORD v13[6];

  if (a1)
    v8 = (void *)sub_2365AFF48();
  else
    v8 = 0;
  v9 = (void *)sub_2365AFF48();
  v13[4] = a3;
  v13[5] = a4;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_236510098;
  v13[3] = &block_descriptor_83_0;
  v10 = _Block_copy(v13);
  v11 = *(void (**)(uint64_t, void *, void *, void *))(a5 + 16);
  swift_retain();
  v11(a5, v8, v9, v10);
  _Block_release(v10);

  return swift_release();
}

uint64_t sub_2364DFA08(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = sub_2365B005C();
  v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_2364DFA5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD v18[6];

  v13 = (void *)sub_2365B0038();
  v14 = (void *)sub_2365AFF48();
  if (a3)
    a3 = (void *)sub_2365AFF48();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a8;
  v15[3] = a5;
  v15[4] = a6;
  v18[4] = sub_2364EA808;
  v18[5] = v15;
  v18[0] = MEMORY[0x24BDAC760];
  v18[1] = 1107296256;
  v18[2] = sub_2364DFDB0;
  v18[3] = &block_descriptor_71;
  v16 = _Block_copy(v18);
  v17 = a8;
  swift_retain();
  swift_release();
  objc_msgSend(a7, sel_sendRequestID_request_options_responseHandler_, v13, v14, a3, v16);
  _Block_release(v16);

}

uint64_t sub_2364DFBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v23 = a4;
  v11 = sub_2365AFD38();
  v22 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_2365AFD74();
  v14 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v17 = (void *)sub_2365AF8E8();
    LODWORD(a3) = NSErrorToOSStatus();

  }
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  *(_QWORD *)(v18 + 24) = a6;
  *(_DWORD *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a2;
  *(_QWORD *)(v18 + 48) = a1;
  aBlock[4] = sub_2364EA848;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2364BF6CC;
  aBlock[3] = &block_descriptor_77;
  v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2365AFD5C();
  v24 = MEMORY[0x24BEE4AF8];
  sub_2364EA874();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_2364EA8BC();
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v16, v13, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_2364DFDB0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, void *);
  uint64_t v7;
  id v8;

  v5 = a3;
  v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (!a2)
  {
    v7 = 0;
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = sub_2365AFF60();
  if (v5)
LABEL_3:
    v5 = sub_2365AFF60();
LABEL_4:
  swift_retain();
  v8 = a4;
  v6(v7, v5, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2364DFE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  v8 = sub_2365B005C();
  v10 = v9;
  if (a3)
    a3 = sub_2365AFF60();
  v11 = sub_2365AFF60();
  v12 = _Block_copy(a5);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  swift_retain();
  v7(v8, v10, a3, v11, sub_2364EA7FC, v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2364DFF94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RapportTransport.build()(a1, a2);
}

uint64_t RapportTransport.Activated.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = type metadata accessor for RapportTransport(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v3, v5);
}

Swift::Void __swiftcall RapportTransport.Activated.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  uint64_t v3;

  v3 = v0;
  sub_2364E10EC(v2, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v1);
  (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_2364E001C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = *(_QWORD *)(a3 + 16);
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2364E0098()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35[2];

  if (qword_2563E4310 != -1)
    swift_once();
  v1 = v0[14];
  v3 = v0[10];
  v2 = v0[11];
  v4 = v0[7];
  v5 = sub_2365AFC00();
  v0[15] = __swift_project_value_buffer(v5, (uint64_t)qword_2563E8B48);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[16] = v6;
  v6(v1, v4, v3);
  v7 = sub_2365AFBE8();
  v8 = sub_2365B038C();
  v9 = os_log_type_enabled(v7, v8);
  v10 = v0[14];
  if (v9)
  {
    v11 = v0[13];
    v12 = v0[10];
    v34 = v0[11];
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v35[0] = v14;
    *(_DWORD *)v13 = 136315138;
    v6(v11, v10, v12);
    v15 = sub_2365B0080();
    v0[5] = sub_236468D88(v15, v16, v35);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    v17 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v17(v10, v12);
    _os_log_impl(&dword_23644B000, v7, v8, "Performing unicast send of outMessage: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v14, -1, -1);
    MEMORY[0x23B7F5254](v13, -1, -1);
  }
  else
  {
    v17 = *(void (**)(uint64_t, uint64_t))(v0[11] + 8);
    v17(v0[14], v0[10]);
  }

  v0[17] = v17;
  v18 = v0[10];
  v19 = v0[7];
  v20 = *(_QWORD *)(v0[8] + 24);
  v0[18] = v20;
  v22 = type metadata accessor for MessagePacker(0, v18, v20, v21);
  v23 = MessagePacker.pack(_:)(v19, v22);
  v0[19] = v23;
  v24 = v23;
  swift_bridgeObjectRetain_n();
  v25 = sub_2365AFBE8();
  v26 = sub_2365B038C();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v35[0] = v28;
    *(_DWORD *)v27 = 136315138;
    swift_bridgeObjectRetain();
    v29 = sub_2365AFF6C();
    v31 = v30;
    swift_bridgeObjectRelease();
    v0[4] = sub_236468D88(v29, v31, v35);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23644B000, v25, v26, "Packed message into outRequest: %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v28, -1, -1);
    MEMORY[0x23B7F5254](v27, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v32 = swift_task_alloc();
  v0[20] = v32;
  *(_QWORD *)v32 = v0;
  *(_QWORD *)(v32 + 8) = sub_2364E04AC;
  *(_OWORD *)(v32 + 32) = *((_OWORD *)v0 + 4);
  *(_QWORD *)(v32 + 24) = v24;
  return swift_task_switch();
}

uint64_t sub_2364E04AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2364E0520()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t (*v13)(void);
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30[2];

  swift_bridgeObjectRetain_n();
  v1 = sub_2365AFBE8();
  v2 = sub_2365B038C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    *(_DWORD *)v3 = 136315138;
    v30[0] = v4;
    swift_bridgeObjectRetain();
    v5 = sub_2365AFF6C();
    v7 = v6;
    swift_bridgeObjectRelease();
    v0[3] = sub_236468D88(v5, v7, v30);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23644B000, v1, v2, "Sent message and received inResponse: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v4, -1, -1);
    MEMORY[0x23B7F5254](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = v0[21];
  v8 = v0[22];
  v10 = v0[6];
  v12 = type metadata accessor for MessageUnpacker(0, v0[10], v0[18], v11);
  MessageUnpacker.unpack(_:)(v9, v12, v10);
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v14 = (void (*)(uint64_t, uint64_t, uint64_t))v0[16];
    v15 = v0[12];
    v16 = v0[10];
    v17 = v0[6];
    swift_bridgeObjectRelease();
    v14(v15, v17, v16);
    v18 = sub_2365AFBE8();
    v19 = sub_2365B038C();
    if (os_log_type_enabled(v18, v19))
    {
      v28 = (void (*)(uint64_t, uint64_t, uint64_t))v0[16];
      v20 = v0[12];
      v21 = v0[13];
      v22 = v0[10];
      v29 = (void (*)(uint64_t, uint64_t))v0[17];
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v30[0] = v24;
      *(_DWORD *)v23 = 136315138;
      v28(v21, v20, v22);
      v25 = sub_2365B0080();
      v0[2] = sub_236468D88(v25, v26, v30);
      sub_2365B04A0();
      swift_bridgeObjectRelease();
      v29(v20, v22);
      _os_log_impl(&dword_23644B000, v18, v19, "Unpacked response into inMessage: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v24, -1, -1);
      MEMORY[0x23B7F5254](v23, -1, -1);
    }
    else
    {
      ((void (*)(_QWORD, _QWORD))v0[17])(v0[12], v0[10]);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
  }
  return v13();
}

uint64_t sub_2364E08AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364E0904(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_2364E0920()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = *(_QWORD *)(v2 + 16);
  v4[3] = *(_QWORD *)(v2 + 24);
  v4[4] = v1;
  v4[5] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF0);
  *v5 = v0;
  v5[1] = sub_2364E09F4;
  return sub_2365B0914();
}

uint64_t sub_2364E09F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364E0A60()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_2364E0A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = *v3;
  v10 = (void *)sub_2365B0038();
  v11 = (void *)sub_2365AFF48();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a3 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_2364E96A4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2364DFDB0;
  aBlock[3] = &block_descriptor_7;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_sendRequestID_request_options_responseHandler_, v10, v11, 0, v14);
  _Block_release(v14);

}

uint64_t sub_2364E0BFC(uint64_t a1, int a2, id a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  _BYTE *v9;
  id v10;

  if (a1)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8);
    return sub_2365B01C4();
  }
  else
  {
    if (!a3)
    {
      v8 = type metadata accessor for RapportTransport.Activated.Failure(0, a5, a6, a4);
      MEMORY[0x23B7F5164](&unk_2365BC9A0, v8);
      swift_allocError();
      *v9 = 1;
    }
    v10 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8);
    return sub_2365B01B8();
  }
}

id RapportTransport.Activated.messageSessionTemplate.getter(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + *(int *)(a1 + 48)), sel_templateSession);
}

uint64_t RapportTransport.Activated.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2364E0D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v9;

  v5 = *(_QWORD *)(v4 + 32);
  if ((*(_BYTE *)(*(_QWORD *)(v4 + 40) + *(int *)(v5 + 44)) & 1) != 0)
  {
    v6 = type metadata accessor for RapportTransport.Activated.Failure(0, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a4);
    MEMORY[0x23B7F5164](&unk_2365BC9A0, v6);
    swift_allocError();
    *v7 = 2;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 48) = v9;
    *v9 = v4;
    v9[1] = sub_236478150;
    return sub_2364E001C(*(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
  }
}

uint64_t sub_2364E0DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_236477420;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

void sub_2364E0E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;

  sub_2364E10EC(v4, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
}

unint64_t RapportTransport.MessageInfo.linkType.getter()
{
  unsigned int *v0;

  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t RapportTransport.MessageInfo.peerAddressString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.verifiedIdentity.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerAltDsid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerDsid.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerDeviceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerModel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerStatusFlags.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t sub_2364E0FB4()
{
  uint64_t v0;

  v0 = sub_2365AFC00();
  __swift_allocate_value_buffer(v0, qword_2542A8218);
  __swift_project_value_buffer(v0, (uint64_t)qword_2542A8218);
  return sub_2365AFBF4();
}

uint64_t static AISLogger.rpTransport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2542A8238 != -1)
    swift_once();
  v2 = sub_2365AFC00();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2542A8218);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_2364E10A4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_2364E10BC();
  return result;
}

uint64_t sub_2364E10BC()
{
  return swift_release();
}

uint64_t sub_2364E10C4(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return _swift_stdlib_bridgeErrorToNSError();
  return result;
}

void sub_2364E10EC(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v5 = type metadata accessor for RapportTransport.Activated(0, a2, a3, a4);
  *((_BYTE *)a1 + *(int *)(v5 + 44)) = 1;
  v6 = *(int *)(v5 + 48);
  v7 = *(id *)((char *)a1 + v6);
  objc_msgSend(v7, sel_invalidate);
  objc_msgSend(*a1, sel_invalidate);

  *(id *)((char *)a1 + v6) = 0;
}

uint64_t type metadata accessor for RapportTransport.Activated.Failure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RapportTransport.Activated.Failure);
}

void sub_2364E115C()
{
  JUMPOUT(0x23B7F5164);
}

uint64_t sub_2364E116C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x23B7F5164](&protocol conformance descriptor for RapportTransport<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2364E1198()
{
  return swift_allocateGenericValueMetadata();
}

void sub_2364E11A0()
{
  unint64_t v0;

  sub_23646AA94();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

char *sub_2364E1230(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  _OWORD *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD, _QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *__dst;
  unsigned int (*v72)(_QWORD, _QWORD, _QWORD);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a2 + 4;
    v9 = a2[4];
    v10 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v10;
    v11 = a2[3];
    *((_QWORD *)a1 + 3) = v11;
    v12 = v5;
    swift_bridgeObjectRetain();
    v13 = v11;
    if (v9)
    {
      v14 = a2[5];
      *((_QWORD *)a1 + 4) = v9;
      *((_QWORD *)a1 + 5) = v14;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *v8;
    }
    v15 = a2[6];
    if (v15)
    {
      v16 = a2[7];
      *((_QWORD *)a1 + 6) = v15;
      *((_QWORD *)a1 + 7) = v16;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    }
    v17 = a2[8];
    if (v17)
    {
      v18 = a2[9];
      *((_QWORD *)a1 + 8) = v17;
      *((_QWORD *)a1 + 9) = v18;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    }
    v19 = *(int *)(a3 + 56);
    v20 = &a1[v19];
    v21 = (char **)((char *)a2 + v19);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v23 + 48);
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v72 = v24;
      v73 = v22;
      v74 = v23;
      v26 = v21[1];
      *(_QWORD *)v20 = *v21;
      *((_QWORD *)v20 + 1) = v26;
      v20[16] = *((_BYTE *)v21 + 16);
      v27 = *(int *)(v22 + 36);
      __dst = &v20[v27];
      v28 = (char *)v21 + v27;
      v29 = sub_2365AFE1C();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      if (v31(v28, 1, v29))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
      }
      v22 = v73;
      v33 = *(int *)(v73 + 40);
      v34 = &v20[v33];
      v35 = (char *)v21 + v33;
      v36 = sub_2365AFE4C();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = *(int *)(v73 + 44);
      v40 = &v20[v39];
      v41 = (char *)v21 + v39;
      v42 = sub_2365AFE88();
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v24 = v72;
      v23 = v74;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v20, 0, 1, v73);
    }
    v45 = *(int *)(a3 + 60);
    v46 = &a1[v45];
    v47 = (char **)((char *)a2 + v45);
    if (v24(v47, 1, v22))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v75 = v23;
      v49 = v47[1];
      *(_QWORD *)v46 = *v47;
      *((_QWORD *)v46 + 1) = v49;
      v46[16] = *((_BYTE *)v47 + 16);
      v50 = v22;
      v51 = *(int *)(v22 + 36);
      v52 = &v46[v51];
      v53 = (char *)v47 + v51;
      v54 = sub_2365AFE1C();
      v55 = *(_QWORD *)(v54 - 8);
      v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      swift_bridgeObjectRetain();
      if (v56(v53, 1, v54))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      v58 = *(int *)(v50 + 40);
      v59 = &v46[v58];
      v60 = (char *)v47 + v58;
      v61 = sub_2365AFE4C();
      v62 = *(_QWORD *)(v61 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      v64 = *(int *)(v50 + 44);
      v65 = &v46[v64];
      v66 = (char *)v47 + v64;
      v67 = sub_2365AFE88();
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v46, 0, 1, v50);
    }
  }
  return a1;
}

uint64_t sub_2364E1788(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  unsigned int (*v6)(uint64_t, uint64_t, int *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    swift_release();
  if (*(_QWORD *)(a1 + 48))
    swift_release();
  if (*(_QWORD *)(a1 + 64))
    swift_release();
  v4 = a1 + *(int *)(a2 + 56);
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v7 = v4 + v5[9];
    v8 = sub_2365AFE1C();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v10 = v4 + v5[10];
    v11 = sub_2365AFE4C();
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    v13 = v4 + v5[11];
    v14 = sub_2365AFE88();
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  v16 = a1 + *(int *)(a2 + 60);
  result = ((uint64_t (*)(uint64_t, uint64_t, int *))v6)(v16, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v18 = v16 + v5[9];
    v19 = sub_2365AFE1C();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v16 + v5[10];
    v22 = sub_2365AFE4C();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v16 + v5[11];
    v25 = sub_2365AFE88();
    v26 = *(_QWORD *)(v25 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  return result;
}

_QWORD *sub_2364E19FC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _OWORD *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int *v21;
  uint64_t v22;
  unsigned int (*v23)(_QWORD, _QWORD, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *__dst;
  unsigned int (*v70)(_QWORD, _QWORD, _QWORD);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = *(void **)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  v10 = (_OWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  v11 = v6;
  swift_bridgeObjectRetain();
  v12 = v8;
  if (v9)
  {
    v13 = *(_QWORD *)(a2 + 40);
    a1[4] = v9;
    a1[5] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v10;
  }
  v14 = *(_QWORD *)(a2 + 48);
  if (v14)
  {
    v15 = *(_QWORD *)(a2 + 56);
    a1[6] = v14;
    a1[7] = v15;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  }
  v16 = *(_QWORD *)(a2 + 64);
  if (v16)
  {
    v17 = *(_QWORD *)(a2 + 72);
    a1[8] = v16;
    a1[9] = v17;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  }
  v18 = *(int *)(a3 + 56);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v22 + 48);
  if (v23(v20, 1, v21))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v70 = v23;
    v71 = a3;
    v72 = v22;
    v25 = v20[1];
    *v19 = *v20;
    v19[1] = v25;
    *((_BYTE *)v19 + 16) = *((_BYTE *)v20 + 16);
    v26 = v21[9];
    __dst = (char *)v19 + v26;
    v27 = (char *)v20 + v26;
    v28 = sub_2365AFE1C();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    v32 = v21[10];
    v33 = (char *)v19 + v32;
    v34 = (char *)v20 + v32;
    v35 = sub_2365AFE4C();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v23 = v70;
    v38 = v21[11];
    v39 = (char *)v19 + v38;
    v40 = (char *)v20 + v38;
    v41 = sub_2365AFE88();
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    a3 = v71;
    v22 = v72;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v72 + 56))(v19, 0, 1, v21);
  }
  v44 = *(int *)(a3 + 60);
  v45 = (_QWORD *)((char *)a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  if (v23(v46, 1, v21))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v73 = v22;
    v48 = v46[1];
    *v45 = *v46;
    v45[1] = v48;
    *((_BYTE *)v45 + 16) = *((_BYTE *)v46 + 16);
    v49 = v21[9];
    v50 = (char *)v45 + v49;
    v51 = (char *)v46 + v49;
    v52 = sub_2365AFE1C();
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    if (v54(v51, 1, v52))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    v56 = v21[10];
    v57 = (char *)v45 + v56;
    v58 = (char *)v46 + v56;
    v59 = sub_2365AFE4C();
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    v62 = v21[11];
    v63 = (char *)v45 + v62;
    v64 = (char *)v46 + v62;
    v65 = sub_2365AFE88();
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
    {
      v67 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v73 + 56))(v45, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_2364E1F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, int *);
  int v27;
  int v28;
  uint64_t v29;
  const void *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(const void *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(void *, uint64_t, uint64_t);
  int v42;
  size_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  const void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(void *, uint64_t, uint64_t);
  int v63;
  size_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(void *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  void *v81;
  const void *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int (*v85)(const void *, uint64_t, uint64_t);
  uint64_t v86;
  size_t v87;
  void *v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(void *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  void *v98;
  const void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  const void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(void *, uint64_t, uint64_t);
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(void *, uint64_t, uint64_t);
  int v125;
  int v126;
  void *v127;
  void *v128;
  void *__dst;
  uint64_t (*v130)(uint64_t, uint64_t, int *);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(void **)(a2 + 24);
  v10 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v11 = v9;

  v12 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v12)
    {
      v13 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v12;
      *(_QWORD *)(a1 + 40) = v13;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v12)
  {
    v14 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v14;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_8:
  v15 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v15)
    {
      v16 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v15;
      *(_QWORD *)(a1 + 56) = v16;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v15)
  {
    v17 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v15;
    *(_QWORD *)(a1 + 56) = v17;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_15:
  v18 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v18)
    {
      v19 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v18;
      *(_QWORD *)(a1 + 72) = v19;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v18)
  {
    v20 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v18;
    *(_QWORD *)(a1 + 72) = v20;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_22:
  v21 = *(int *)(a3 + 56);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_236465998(v22, &qword_2563E4DE0);
      goto LABEL_28;
    }
    v130 = v26;
    v132 = a3;
    v134 = v25;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
    v36 = v24[9];
    v37 = (void *)(v22 + v36);
    v38 = (void *)(v23 + v36);
    v39 = sub_2365AFE1C();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v40 + 48);
    v127 = v37;
    LODWORD(v37) = v41(v37, 1, v39);
    v42 = v41(v38, 1, v39);
    if ((_DWORD)v37)
    {
      if (v42)
      {
        v43 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v44 = v127;
LABEL_42:
        memcpy(v44, v38, v43);
        goto LABEL_45;
      }
      (*(void (**)(void *, void *, uint64_t))(v40 + 16))(v127, v38, v39);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v127, 0, 1, v39);
    }
    else
    {
      if (v42)
      {
        (*(void (**)(void *, uint64_t))(v40 + 8))(v127, v39);
        v43 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v44 = v127;
        goto LABEL_42;
      }
      (*(void (**)(void *, void *, uint64_t))(v40 + 24))(v127, v38, v39);
    }
LABEL_45:
    v57 = v24[10];
    v58 = (void *)(v22 + v57);
    v59 = (void *)(v23 + v57);
    v60 = sub_2365AFE4C();
    v61 = *(_QWORD *)(v60 - 8);
    v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
    v128 = v58;
    LODWORD(v58) = v62(v58, 1, v60);
    v63 = v62(v59, 1, v60);
    if ((_DWORD)v58)
    {
      if (v63)
      {
        v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
        v65 = v128;
LABEL_50:
        memcpy(v65, v59, v64);
        goto LABEL_53;
      }
      (*(void (**)(void *, void *, uint64_t))(v61 + 16))(v128, v59, v60);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v128, 0, 1, v60);
    }
    else
    {
      if (v63)
      {
        (*(void (**)(void *, uint64_t))(v61 + 8))(v128, v60);
        v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
        v65 = v128;
        goto LABEL_50;
      }
      (*(void (**)(void *, void *, uint64_t))(v61 + 24))(v128, v59, v60);
    }
LABEL_53:
    v26 = v130;
    v66 = v24[11];
    v67 = (void *)(v22 + v66);
    v68 = (void *)(v23 + v66);
    v69 = sub_2365AFE88();
    v70 = *(_QWORD *)(v69 - 8);
    v71 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v70 + 48);
    v72 = v71(v67, 1, v69);
    v73 = v71(v68, 1, v69);
    if (v72)
    {
      a3 = v132;
      if (!v73)
      {
        (*(void (**)(void *, void *, uint64_t))(v70 + 16))(v67, v68, v69);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
LABEL_59:
        v25 = v134;
        goto LABEL_60;
      }
    }
    else
    {
      a3 = v132;
      if (!v73)
      {
        (*(void (**)(void *, void *, uint64_t))(v70 + 24))(v67, v68, v69);
        goto LABEL_59;
      }
      (*(void (**)(void *, uint64_t))(v70 + 8))(v67, v69);
    }
    v74 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_59;
  }
  if (v28)
  {
LABEL_28:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v22, (const void *)v23, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_60;
  }
  v131 = a3;
  v133 = v25;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = *(_QWORD *)(v23 + 8);
  *(_BYTE *)(v22 + 16) = *(_BYTE *)(v23 + 16);
  v29 = v24[9];
  __dst = (void *)(v22 + v29);
  v30 = (const void *)(v23 + v29);
  v31 = sub_2365AFE1C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48);
  swift_bridgeObjectRetain();
  if (v33(v30, 1, v31))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(__dst, v30, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  v45 = v24[10];
  v46 = (void *)(v22 + v45);
  v47 = (const void *)(v23 + v45);
  v48 = sub_2365AFE4C();
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  a3 = v131;
  v51 = v24[11];
  v52 = (void *)(v22 + v51);
  v53 = (const void *)(v23 + v51);
  v54 = sub_2365AFE88();
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  v25 = v133;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v133 + 56))(v22, 0, 1, v24);
LABEL_60:
  v75 = *(int *)(a3 + 60);
  v76 = a1 + v75;
  v77 = a2 + v75;
  v78 = v26(a1 + v75, 1, v24);
  v79 = v26(v77, 1, v24);
  if (!v78)
  {
    if (v79)
    {
      sub_236465998(v76, &qword_2563E4DE0);
      goto LABEL_66;
    }
    *(_QWORD *)v76 = *(_QWORD *)v77;
    *(_QWORD *)(v76 + 8) = *(_QWORD *)(v77 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v76 + 16) = *(_BYTE *)(v77 + 16);
    v89 = v24[9];
    v90 = (void *)(v76 + v89);
    v91 = (void *)(v77 + v89);
    v92 = sub_2365AFE1C();
    v93 = *(_QWORD *)(v92 - 8);
    v94 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v93 + 48);
    v95 = v94(v90, 1, v92);
    v96 = v94(v91, 1, v92);
    if (v95)
    {
      if (!v96)
      {
        (*(void (**)(void *, void *, uint64_t))(v93 + 16))(v90, v91, v92);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v96)
      {
        (*(void (**)(void *, void *, uint64_t))(v93 + 24))(v90, v91, v92);
LABEL_83:
        v111 = v24[10];
        v112 = (void *)(v76 + v111);
        v113 = (void *)(v77 + v111);
        v114 = sub_2365AFE4C();
        v115 = *(_QWORD *)(v114 - 8);
        v116 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v115 + 48);
        v117 = v116(v112, 1, v114);
        v118 = v116(v113, 1, v114);
        if (v117)
        {
          if (!v118)
          {
            (*(void (**)(void *, void *, uint64_t))(v115 + 16))(v112, v113, v114);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
LABEL_89:
            v120 = v24[11];
            v121 = (void *)(v76 + v120);
            v77 += v120;
            v122 = sub_2365AFE88();
            v123 = *(_QWORD *)(v122 - 8);
            v124 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v123 + 48);
            v125 = v124(v121, 1, v122);
            v126 = v124((void *)v77, 1, v122);
            if (v125)
            {
              if (!v126)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v123 + 16))(v121, v77, v122);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v121, 0, 1, v122);
                return a1;
              }
            }
            else
            {
              if (!v126)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v123 + 24))(v121, v77, v122);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v123 + 8))(v121, v122);
            }
            v87 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68) - 8) + 64);
            v88 = v121;
            goto LABEL_67;
          }
        }
        else
        {
          if (!v118)
          {
            (*(void (**)(void *, void *, uint64_t))(v115 + 24))(v112, v113, v114);
            goto LABEL_89;
          }
          (*(void (**)(void *, uint64_t))(v115 + 8))(v112, v114);
        }
        v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
        goto LABEL_89;
      }
      (*(void (**)(void *, uint64_t))(v93 + 8))(v90, v92);
    }
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
    goto LABEL_83;
  }
  if (v79)
  {
LABEL_66:
    v87 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8) - 8) + 64);
    v88 = (void *)v76;
LABEL_67:
    memcpy(v88, (const void *)v77, v87);
    return a1;
  }
  v135 = v25;
  *(_QWORD *)v76 = *(_QWORD *)v77;
  *(_QWORD *)(v76 + 8) = *(_QWORD *)(v77 + 8);
  *(_BYTE *)(v76 + 16) = *(_BYTE *)(v77 + 16);
  v80 = v24[9];
  v81 = (void *)(v76 + v80);
  v82 = (const void *)(v77 + v80);
  v83 = sub_2365AFE1C();
  v84 = *(_QWORD *)(v83 - 8);
  v85 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48);
  swift_bridgeObjectRetain();
  if (v85(v82, 1, v83))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v84 + 16))(v81, v82, v83);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
  }
  v97 = v24[10];
  v98 = (void *)(v76 + v97);
  v99 = (const void *)(v77 + v97);
  v100 = sub_2365AFE4C();
  v101 = *(_QWORD *)(v100 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
  {
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v101 + 16))(v98, v99, v100);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
  }
  v103 = v24[11];
  v104 = (void *)(v76 + v103);
  v105 = (const void *)(v77 + v103);
  v106 = sub_2365AFE88();
  v107 = *(_QWORD *)(v106 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
  {
    v108 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v107 + 16))(v104, v105, v106);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v135 + 56))(v76, 0, 1, v24);
  return a1;
}

uint64_t sub_2364E2ABC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  int *v15;
  uint64_t v16;
  unsigned int (*v17)(_BYTE *, uint64_t, int *);
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;

  v3 = a3;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  v8 = *(_QWORD *)(a2 + 48);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v8;
    *(_QWORD *)(a1 + 56) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  v10 = *(_QWORD *)(a2 + 64);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v11;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  v12 = *(int *)(a3 + 56);
  v13 = (_BYTE *)(a1 + v12);
  v14 = (_BYTE *)(a2 + v12);
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v60 = v3;
    v61 = v16;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v13[16] = v14[16];
    v19 = v15[9];
    v20 = &v13[v19];
    v21 = &v14[v19];
    v22 = sub_2365AFE1C();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v25 = v15[10];
    v26 = &v13[v25];
    v27 = &v14[v25];
    v28 = sub_2365AFE4C();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v16 = v61;
    v31 = v15[11];
    v32 = &v13[v31];
    v33 = &v14[v31];
    v34 = sub_2365AFE88();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v3 = v60;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v61 + 56))(v13, 0, 1, v15);
  }
  v37 = *(int *)(v3 + 60);
  v38 = (_BYTE *)(a1 + v37);
  v39 = (_BYTE *)(a2 + v37);
  if (v17(v39, 1, v15))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    v41 = v15[9];
    v42 = &v38[v41];
    v43 = &v39[v41];
    v44 = sub_2365AFE1C();
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v47 = v15[10];
    v48 = &v38[v47];
    v49 = &v39[v47];
    v50 = sub_2365AFE4C();
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v53 = v15[11];
    v54 = &v38[v53];
    v55 = &v39[v53];
    v56 = sub_2365AFE88();
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 32))(v54, v55, v56);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v16 + 56))(v38, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_2364E2FA4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(_BYTE *, uint64_t, int *);
  int v24;
  int v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_BYTE *, uint64_t, uint64_t);
  int v40;
  size_t v41;
  void *v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_BYTE *, uint64_t, uint64_t);
  int v61;
  size_t v62;
  void *v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(_BYTE *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  int v76;
  int v77;
  uint64_t v78;
  void *v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  size_t v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  void *v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(void *, uint64_t, uint64_t);
  int v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(void *, uint64_t, uint64_t);
  int v123;
  int v124;
  void *v125;
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (*v130)(_BYTE *, uint64_t, int *);
  uint64_t (*v131)(_BYTE *, uint64_t, int *);

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v9 = a2[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v9)
    {
      v10 = a2[5];
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = a2[5];
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_8:
  v12 = a2[6];
  if (*(_QWORD *)(a1 + 48))
  {
    if (v12)
    {
      v13 = a2[7];
      *(_QWORD *)(a1 + 48) = v12;
      *(_QWORD *)(a1 + 56) = v13;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    v14 = a2[7];
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v14;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_15:
  v15 = a2[8];
  if (*(_QWORD *)(a1 + 64))
  {
    if (v15)
    {
      v16 = a2[9];
      *(_QWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 72) = v16;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v15)
  {
    v17 = a2[9];
    *(_QWORD *)(a1 + 64) = v15;
    *(_QWORD *)(a1 + 72) = v17;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
LABEL_22:
  v18 = *(int *)(a3 + 56);
  v19 = (_BYTE *)(a1 + v18);
  v20 = (char *)a2 + v18;
  v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (v25)
    {
      sub_236465998((uint64_t)v19, &qword_2563E4DE0);
      goto LABEL_28;
    }
    v129 = a3;
    v131 = v23;
    v127 = v22;
    v33 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v33;
    swift_bridgeObjectRelease();
    v19[16] = v20[16];
    v34 = v21[9];
    v35 = &v19[v34];
    v36 = &v20[v34];
    v37 = sub_2365AFE1C();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v38 + 48);
    v125 = v35;
    LODWORD(v35) = v39(v35, 1, v37);
    v40 = v39(v36, 1, v37);
    if ((_DWORD)v35)
    {
      if (v40)
      {
        v41 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v42 = v125;
LABEL_42:
        memcpy(v42, v36, v41);
        goto LABEL_45;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v38 + 32))(v125, v36, v37);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v125, 0, 1, v37);
    }
    else
    {
      if (v40)
      {
        (*(void (**)(void *, uint64_t))(v38 + 8))(v125, v37);
        v41 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v42 = v125;
        goto LABEL_42;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v38 + 40))(v125, v36, v37);
    }
LABEL_45:
    v55 = v21[10];
    v56 = &v19[v55];
    v57 = &v20[v55];
    v58 = sub_2365AFE4C();
    v59 = *(_QWORD *)(v58 - 8);
    v60 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v59 + 48);
    v126 = v56;
    LODWORD(v56) = v60(v56, 1, v58);
    v61 = v60(v57, 1, v58);
    if ((_DWORD)v56)
    {
      if (v61)
      {
        v62 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
        v63 = v126;
LABEL_50:
        memcpy(v63, v57, v62);
        goto LABEL_53;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v59 + 32))(v126, v57, v58);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v126, 0, 1, v58);
    }
    else
    {
      if (v61)
      {
        (*(void (**)(void *, uint64_t))(v59 + 8))(v126, v58);
        v62 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
        v63 = v126;
        goto LABEL_50;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v59 + 40))(v126, v57, v58);
    }
LABEL_53:
    v22 = v127;
    v64 = v21[11];
    v65 = &v19[v64];
    v66 = &v20[v64];
    v67 = sub_2365AFE88();
    v68 = *(_QWORD *)(v67 - 8);
    v69 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v68 + 48);
    v70 = v69(v65, 1, v67);
    v71 = v69(v66, 1, v67);
    if (v70)
    {
      v23 = v131;
      if (!v71)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 32))(v65, v66, v67);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_59:
        a3 = v129;
        goto LABEL_60;
      }
    }
    else
    {
      v23 = v131;
      if (!v71)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 40))(v65, v66, v67);
        goto LABEL_59;
      }
      (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v65, v67);
    }
    v72 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_59;
  }
  if (v25)
  {
LABEL_28:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_60;
  }
  v128 = a3;
  v130 = v23;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  v26 = v21[9];
  v27 = &v19[v26];
  v28 = &v20[v26];
  v29 = sub_2365AFE1C();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v43 = v21[10];
  v44 = &v19[v43];
  v45 = &v20[v43];
  v46 = sub_2365AFE4C();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 32))(v44, v45, v46);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v23 = v130;
  v49 = v21[11];
  v50 = &v19[v49];
  v51 = &v20[v49];
  v52 = sub_2365AFE88();
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v53 + 32))(v50, v51, v52);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  a3 = v128;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
LABEL_60:
  v73 = *(int *)(a3 + 60);
  v74 = a1 + v73;
  v75 = (char *)a2 + v73;
  v76 = v23((_BYTE *)(a1 + v73), 1, v21);
  v77 = v23(v75, 1, v21);
  if (!v76)
  {
    if (v77)
    {
      sub_236465998(v74, &qword_2563E4DE0);
      goto LABEL_66;
    }
    v86 = *((_QWORD *)v75 + 1);
    *(_QWORD *)v74 = *(_QWORD *)v75;
    *(_QWORD *)(v74 + 8) = v86;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v74 + 16) = v75[16];
    v87 = v21[9];
    v88 = (void *)(v74 + v87);
    v89 = &v75[v87];
    v90 = sub_2365AFE1C();
    v91 = *(_QWORD *)(v90 - 8);
    v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
    v93 = v92(v88, 1, v90);
    v94 = v92(v89, 1, v90);
    if (v93)
    {
      if (!v94)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v91 + 32))(v88, v89, v90);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v94)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v91 + 40))(v88, v89, v90);
LABEL_83:
        v109 = v21[10];
        v110 = (void *)(v74 + v109);
        v111 = &v75[v109];
        v112 = sub_2365AFE4C();
        v113 = *(_QWORD *)(v112 - 8);
        v114 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v113 + 48);
        v115 = v114(v110, 1, v112);
        v116 = v114(v111, 1, v112);
        if (v115)
        {
          if (!v116)
          {
            (*(void (**)(void *, _BYTE *, uint64_t))(v113 + 32))(v110, v111, v112);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
LABEL_89:
            v118 = v21[11];
            v119 = (void *)(v74 + v118);
            v75 += v118;
            v120 = sub_2365AFE88();
            v121 = *(_QWORD *)(v120 - 8);
            v122 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v121 + 48);
            v123 = v122(v119, 1, v120);
            v124 = v122(v75, 1, v120);
            if (v123)
            {
              if (!v124)
              {
                (*(void (**)(void *, _BYTE *, uint64_t))(v121 + 32))(v119, v75, v120);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v119, 0, 1, v120);
                return a1;
              }
            }
            else
            {
              if (!v124)
              {
                (*(void (**)(void *, _BYTE *, uint64_t))(v121 + 40))(v119, v75, v120);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v121 + 8))(v119, v120);
            }
            v84 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68) - 8) + 64);
            v85 = v119;
            goto LABEL_67;
          }
        }
        else
        {
          if (!v116)
          {
            (*(void (**)(void *, _BYTE *, uint64_t))(v113 + 40))(v110, v111, v112);
            goto LABEL_89;
          }
          (*(void (**)(void *, uint64_t))(v113 + 8))(v110, v112);
        }
        v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
        goto LABEL_89;
      }
      (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
    }
    v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    goto LABEL_83;
  }
  if (v77)
  {
LABEL_66:
    v84 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8) - 8) + 64);
    v85 = (void *)v74;
LABEL_67:
    memcpy(v85, v75, v84);
    return a1;
  }
  *(_OWORD *)v74 = *(_OWORD *)v75;
  *(_BYTE *)(v74 + 16) = v75[16];
  v78 = v21[9];
  v79 = (void *)(v74 + v78);
  v80 = &v75[v78];
  v81 = sub_2365AFE1C();
  v82 = *(_QWORD *)(v81 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
  {
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v82 + 32))(v79, v80, v81);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  }
  v95 = v21[10];
  v96 = (void *)(v74 + v95);
  v97 = &v75[v95];
  v98 = sub_2365AFE4C();
  v99 = *(_QWORD *)(v98 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
  {
    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v99 + 32))(v96, v97, v98);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
  }
  v101 = v21[11];
  v102 = (void *)(v74 + v101);
  v103 = &v75[v101];
  v104 = sub_2365AFE88();
  v105 = *(_QWORD *)(v104 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
  {
    v106 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v105 + 32))(v102, v103, v104);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v22 + 56))(v74, 0, 1, v21);
  return a1;
}

uint64_t sub_2364E3AB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2364E3ABC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 56)], a2, v8);
  }
}

uint64_t sub_2364E3B3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2364E3B48(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 56)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2364E3BC0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2364E3BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  result = type metadata accessor for RapportTransport(319, v4, v5, a4);
  if (v8 <= 0x3F)
  {
    result = type metadata accessor for MessagePacker(319, v4, v5, v7);
    if (v10 <= 0x3F)
    {
      result = type metadata accessor for MessageUnpacker(319, v4, v5, v9);
      if (v11 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

char *sub_2364E3CA0(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  _OWORD *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  unsigned int (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int (*v148)(_QWORD, _QWORD, _QWORD);
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2;
    v8 = a2 + 4;
    v9 = a2[4];
    v10 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v10;
    v11 = a2[3];
    *((_QWORD *)a1 + 3) = v11;
    v12 = v5;
    swift_bridgeObjectRetain();
    v13 = v11;
    if (v9)
    {
      v15 = v7[5];
      *((_QWORD *)a1 + 4) = v9;
      *((_QWORD *)a1 + 5) = v15;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *v8;
    }
    v16 = v7[6];
    if (v16)
    {
      v17 = v7[7];
      *((_QWORD *)a1 + 6) = v16;
      *((_QWORD *)a1 + 7) = v17;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)v7 + 3);
    }
    v18 = v7[8];
    if (v18)
    {
      v19 = v7[9];
      *((_QWORD *)a1 + 8) = v18;
      *((_QWORD *)a1 + 9) = v19;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 4) = *((_OWORD *)v7 + 4);
    }
    v20 = *(_QWORD *)(v6 + 16);
    v150 = *(_QWORD *)(v6 + 24);
    v21 = type metadata accessor for RapportTransport(0, v20, v150, v14);
    v22 = *(int *)(v21 + 56);
    v23 = &a1[v22];
    v24 = (_QWORD *)((char *)v7 + v22);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
    v146 = *(_QWORD *)(v25 - 8);
    v26 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v146 + 48);
    v147 = v6;
    v148 = v26;
    v152 = v25;
    v145 = v20;
    if (v26(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v143 = v21;
      v28 = v24[1];
      *(_QWORD *)v23 = *v24;
      *((_QWORD *)v23 + 1) = v28;
      v23[16] = *((_BYTE *)v24 + 16);
      v29 = *(int *)(v25 + 36);
      v30 = &v23[v29];
      v31 = (char *)v24 + v29;
      v32 = sub_2365AFE1C();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      swift_bridgeObjectRetain();
      if (v34(v31, 1, v32))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v25 = v152;
      v36 = *(int *)(v152 + 40);
      v37 = &v23[v36];
      v38 = (char *)v24 + v36;
      v39 = sub_2365AFE4C();
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      v42 = *(int *)(v152 + 44);
      v43 = &v23[v42];
      v44 = (char *)v24 + v42;
      v45 = sub_2365AFE88();
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      v21 = v143;
      v20 = v145;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v23, 0, 1, v152);
      v6 = v147;
      v26 = v148;
    }
    v48 = *(int *)(v21 + 60);
    v49 = &a1[v48];
    v50 = (_QWORD *)((char *)v7 + v48);
    if (v26((char *)v7 + v48, 1, v25))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v53 = v50[1];
      *(_QWORD *)v49 = *v50;
      *((_QWORD *)v49 + 1) = v53;
      v49[16] = *((_BYTE *)v50 + 16);
      v54 = *(int *)(v25 + 36);
      v55 = &v49[v54];
      v56 = (char *)v50 + v54;
      v57 = sub_2365AFE1C();
      v58 = *(_QWORD *)(v57 - 8);
      v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
      swift_bridgeObjectRetain();
      if (v59(v56, 1, v57))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      }
      v25 = v152;
      v61 = *(int *)(v152 + 40);
      v62 = &v49[v61];
      v63 = (char *)v50 + v61;
      v64 = sub_2365AFE4C();
      v65 = *(_QWORD *)(v64 - 8);
      v6 = v147;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      v67 = *(int *)(v152 + 44);
      v68 = &v49[v67];
      v69 = (char *)v50 + v67;
      v70 = sub_2365AFE88();
      v71 = *(_QWORD *)(v70 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      v20 = v145;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v49, 0, 1, v152);
      v26 = v148;
    }
    v73 = *(int *)(v6 + 36);
    v74 = &a1[v73];
    v75 = (char *)v7 + v73;
    *(_QWORD *)&a1[v73] = *(_QWORD *)((char *)v7 + v73);
    v142 = type metadata accessor for MessagePacker(0, v20, v150, v52);
    v144 = v74;
    v76 = *(int *)(v142 + 36);
    v77 = &v74[v76];
    v78 = &v75[v76];
    swift_retain();
    if (v26(v78, 1, v25))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      v140 = v7;
      v81 = *((_QWORD *)v78 + 1);
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *((_QWORD *)v77 + 1) = v81;
      v77[16] = v78[16];
      v82 = *(int *)(v25 + 36);
      v83 = &v77[v82];
      v84 = &v78[v82];
      v85 = sub_2365AFE1C();
      v86 = *(_QWORD *)(v85 - 8);
      v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
      swift_bridgeObjectRetain();
      if (v87(v84, 1, v85))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v83, v84, v85);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
      }
      v89 = *(int *)(v152 + 40);
      v90 = &v77[v89];
      v91 = &v78[v89];
      v92 = sub_2365AFE4C();
      v93 = *(_QWORD *)(v92 - 8);
      v7 = v140;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
      {
        v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v90, v91, v92);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
      }
      v95 = *(int *)(v152 + 44);
      v96 = &v77[v95];
      v97 = &v78[v95];
      v98 = sub_2365AFE88();
      v99 = *(_QWORD *)(v98 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
      {
        v100 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v96, v97, v98);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
      }
      v20 = v145;
      v25 = v152;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v77, 0, 1, v152);
      v6 = v147;
    }
    v101 = *(int *)(v142 + 40);
    v102 = &v144[v101];
    v103 = &v75[v101];
    v104 = *((_QWORD *)v103 + 1);
    *(_QWORD *)v102 = *(_QWORD *)v103;
    *((_QWORD *)v102 + 1) = v104;
    v105 = *(int *)(v6 + 40);
    v106 = &a1[v105];
    v107 = (char *)v7 + v105;
    *(_QWORD *)&a1[v105] = *(_QWORD *)((char *)v7 + v105);
    v151 = type metadata accessor for MessageUnpacker(0, v20, v150, v80);
    v108 = *(int *)(v151 + 36);
    v109 = &v106[v108];
    v110 = &v107[v108];
    swift_bridgeObjectRetain();
    swift_retain();
    if (v148(v110, 1, v25))
    {
      v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      v149 = v107;
      v141 = v7;
      v112 = *((_QWORD *)v110 + 1);
      *(_QWORD *)v109 = *(_QWORD *)v110;
      *((_QWORD *)v109 + 1) = v112;
      v109[16] = v110[16];
      v113 = *(int *)(v25 + 36);
      v114 = &v109[v113];
      v115 = &v110[v113];
      v116 = sub_2365AFE1C();
      v117 = *(_QWORD *)(v116 - 8);
      v118 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48);
      swift_bridgeObjectRetain();
      if (v118(v115, 1, v116))
      {
        v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v114, v115, v116);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
      }
      v120 = *(int *)(v152 + 40);
      v121 = &v109[v120];
      v122 = &v110[v120];
      v123 = sub_2365AFE4C();
      v124 = *(_QWORD *)(v123 - 8);
      v7 = v141;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
      {
        v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v121, v122, v123);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
      }
      v6 = v147;
      v126 = *(int *)(v152 + 44);
      v127 = &v109[v126];
      v128 = &v110[v126];
      v129 = sub_2365AFE88();
      v130 = *(_QWORD *)(v129 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v128, 1, v129))
      {
        v131 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v127, v128, v129);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
      }
      v107 = v149;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v109, 0, 1, v152);
    }
    v132 = *(int *)(v151 + 40);
    v133 = &v106[v132];
    v134 = &v107[v132];
    v135 = *((_QWORD *)v134 + 1);
    *(_QWORD *)v133 = *(_QWORD *)v134;
    *((_QWORD *)v133 + 1) = v135;
    v136 = *(int *)(v6 + 48);
    a1[*(int *)(v6 + 44)] = *((_BYTE *)v7 + *(int *)(v6 + 44));
    v137 = *(void **)((char *)v7 + v136);
    *(_QWORD *)&a1[v136] = v137;
    swift_bridgeObjectRetain();
    v138 = v137;
  }
  return a1;
}

void sub_2364E470C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  unsigned int (*v10)(uint64_t, uint64_t, int *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    swift_release();
  if (*(_QWORD *)(a1 + 48))
    swift_release();
  if (*(_QWORD *)(a1 + 64))
    swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v7 = type metadata accessor for RapportTransport(0, v6, v5, v4);
  v8 = a1 + *(int *)(v7 + 56);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48);
  v58 = a2;
  if (!v10(v8, 1, v9))
  {
    v11 = v5;
    v12 = v6;
    swift_bridgeObjectRelease();
    v13 = v8 + v9[9];
    v14 = sub_2365AFE1C();
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    v16 = v8 + v9[10];
    v17 = sub_2365AFE4C();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v19 = v8 + v9[11];
    v20 = sub_2365AFE88();
    v21 = *(_QWORD *)(v20 - 8);
    v6 = v12;
    v5 = v11;
    a2 = v58;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  v22 = a1 + *(int *)(v7 + 60);
  if (!v10(v22, 1, v9))
  {
    swift_bridgeObjectRelease();
    v23 = v22 + v9[9];
    v24 = sub_2365AFE1C();
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    v26 = v22 + v9[10];
    v27 = sub_2365AFE4C();
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    v29 = v22 + v9[11];
    v30 = sub_2365AFE88();
    v31 = *(_QWORD *)(v30 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  }
  v32 = a1 + *(int *)(a2 + 36);
  swift_release();
  v33 = v5;
  v35 = v32 + *(int *)(type metadata accessor for MessagePacker(0, v6, v5, v34) + 36);
  if (!v10(v35, 1, v9))
  {
    v57 = v6;
    swift_bridgeObjectRelease();
    v36 = v35 + v9[9];
    v37 = sub_2365AFE1C();
    v38 = *(_QWORD *)(v37 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    v39 = v35 + v9[10];
    v40 = sub_2365AFE4C();
    v41 = *(_QWORD *)(v40 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
    v42 = v35 + v9[11];
    v43 = sub_2365AFE88();
    v44 = *(_QWORD *)(v43 - 8);
    v6 = v57;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
  }
  swift_bridgeObjectRelease();
  v45 = a1 + *(int *)(v58 + 40);
  swift_release();
  v47 = v45 + *(int *)(type metadata accessor for MessageUnpacker(0, v6, v33, v46) + 36);
  if (!v10(v47, 1, v9))
  {
    swift_bridgeObjectRelease();
    v48 = v47 + v9[9];
    v49 = sub_2365AFE1C();
    v50 = *(_QWORD *)(v49 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
    v51 = v47 + v9[10];
    v52 = sub_2365AFE4C();
    v53 = *(_QWORD *)(v52 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
    v54 = v47 + v9[11];
    v55 = sub_2365AFE88();
    v56 = *(_QWORD *)(v55 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
  }
  swift_bridgeObjectRelease();

}

_QWORD *sub_2364E4BF8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _OWORD *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD, _QWORD, _QWORD);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  id v137;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(_QWORD, _QWORD, _QWORD);
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  v4 = (_QWORD *)a2;
  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = *(void **)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  v10 = (_OWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  v11 = v6;
  swift_bridgeObjectRetain();
  v12 = v8;
  if (v9)
  {
    v14 = v4[5];
    a1[4] = v9;
    a1[5] = v14;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v10;
  }
  v15 = v4[6];
  if (v15)
  {
    v16 = v4[7];
    a1[6] = v15;
    a1[7] = v16;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)v4 + 3);
  }
  v17 = v4[8];
  if (v17)
  {
    v18 = v4[9];
    a1[8] = v17;
    a1[9] = v18;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)v4 + 4);
  }
  v19 = *(_QWORD *)(a3 + 16);
  v149 = *(_QWORD *)(a3 + 24);
  v20 = type metadata accessor for RapportTransport(0, v19, v149, v13);
  v21 = *(int *)(v20 + 56);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)v4 + v21);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v145 = *(_QWORD *)(v24 - 8);
  v25 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v145 + 48);
  v146 = a3;
  v147 = v25;
  v151 = v24;
  v144 = v19;
  if (v25(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v142 = v20;
    v27 = v23[1];
    *v22 = *v23;
    v22[1] = v27;
    *((_BYTE *)v22 + 16) = *((_BYTE *)v23 + 16);
    v28 = *(int *)(v24 + 36);
    v29 = (char *)v22 + v28;
    v30 = (char *)v23 + v28;
    v31 = sub_2365AFE1C();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    swift_bridgeObjectRetain();
    if (v33(v30, 1, v31))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v24 = v151;
    v35 = *(int *)(v151 + 40);
    v36 = (char *)v22 + v35;
    v37 = (char *)v23 + v35;
    v38 = sub_2365AFE4C();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v41 = *(int *)(v151 + 44);
    v42 = (char *)v22 + v41;
    v43 = (char *)v23 + v41;
    v44 = sub_2365AFE88();
    v45 = *(_QWORD *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    v20 = v142;
    v19 = v144;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v22, 0, 1, v151);
    a3 = v146;
    v25 = v147;
  }
  v47 = *(int *)(v20 + 60);
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)((char *)v4 + v47);
  if (v25((char *)v4 + v47, 1, v24))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    v52 = v49[1];
    *v48 = *v49;
    v48[1] = v52;
    *((_BYTE *)v48 + 16) = *((_BYTE *)v49 + 16);
    v53 = *(int *)(v24 + 36);
    v54 = (char *)v48 + v53;
    v55 = (char *)v49 + v53;
    v56 = sub_2365AFE1C();
    v57 = *(_QWORD *)(v56 - 8);
    v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
    swift_bridgeObjectRetain();
    if (v58(v55, 1, v56))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    v24 = v151;
    v60 = *(int *)(v151 + 40);
    v61 = (char *)v48 + v60;
    v62 = (char *)v49 + v60;
    v63 = sub_2365AFE4C();
    v64 = *(_QWORD *)(v63 - 8);
    a3 = v146;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    }
    v66 = *(int *)(v151 + 44);
    v67 = (char *)v48 + v66;
    v68 = (char *)v49 + v66;
    v69 = sub_2365AFE88();
    v70 = *(_QWORD *)(v69 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v68, 1, v69))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
    }
    v19 = v144;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v48, 0, 1, v151);
    v25 = v147;
  }
  v72 = *(int *)(a3 + 36);
  v73 = (char *)a1 + v72;
  v74 = (char *)v4 + v72;
  *(_QWORD *)((char *)a1 + v72) = *(_QWORD *)((char *)v4 + v72);
  v141 = type metadata accessor for MessagePacker(0, v19, v149, v51);
  v143 = v73;
  v75 = *(int *)(v141 + 36);
  v76 = &v73[v75];
  v77 = &v74[v75];
  swift_retain();
  if (v25(v77, 1, v24))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    v139 = v4;
    v80 = *((_QWORD *)v77 + 1);
    *(_QWORD *)v76 = *(_QWORD *)v77;
    *((_QWORD *)v76 + 1) = v80;
    v76[16] = v77[16];
    v81 = *(int *)(v24 + 36);
    v82 = &v76[v81];
    v83 = &v77[v81];
    v84 = sub_2365AFE1C();
    v85 = *(_QWORD *)(v84 - 8);
    v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
    swift_bridgeObjectRetain();
    if (v86(v83, 1, v84))
    {
      v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
    }
    v88 = *(int *)(v151 + 40);
    v89 = &v76[v88];
    v90 = &v77[v88];
    v91 = sub_2365AFE4C();
    v92 = *(_QWORD *)(v91 - 8);
    v4 = v139;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
    {
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v89, v90, v91);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
    }
    v94 = *(int *)(v151 + 44);
    v95 = &v76[v94];
    v96 = &v77[v94];
    v97 = sub_2365AFE88();
    v98 = *(_QWORD *)(v97 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    {
      v99 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v96, v97);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
    }
    v19 = v144;
    v24 = v151;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v76, 0, 1, v151);
    a3 = v146;
  }
  v100 = *(int *)(v141 + 40);
  v101 = &v143[v100];
  v102 = &v74[v100];
  v103 = *((_QWORD *)v102 + 1);
  *(_QWORD *)v101 = *(_QWORD *)v102;
  *((_QWORD *)v101 + 1) = v103;
  v104 = *(int *)(a3 + 40);
  v105 = (char *)a1 + v104;
  v106 = (char *)v4 + v104;
  *(_QWORD *)((char *)a1 + v104) = *(_QWORD *)((char *)v4 + v104);
  v150 = type metadata accessor for MessageUnpacker(0, v19, v149, v79);
  v107 = *(int *)(v150 + 36);
  v108 = &v105[v107];
  v109 = &v106[v107];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v147(v109, 1, v24))
  {
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
  }
  else
  {
    v148 = v106;
    v140 = v4;
    v111 = *((_QWORD *)v109 + 1);
    *(_QWORD *)v108 = *(_QWORD *)v109;
    *((_QWORD *)v108 + 1) = v111;
    v108[16] = v109[16];
    v112 = *(int *)(v24 + 36);
    v113 = &v108[v112];
    v114 = &v109[v112];
    v115 = sub_2365AFE1C();
    v116 = *(_QWORD *)(v115 - 8);
    v117 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
    swift_bridgeObjectRetain();
    if (v117(v114, 1, v115))
    {
      v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v113, v114, v115);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v113, 0, 1, v115);
    }
    v119 = *(int *)(v151 + 40);
    v120 = &v108[v119];
    v121 = &v109[v119];
    v122 = sub_2365AFE4C();
    v123 = *(_QWORD *)(v122 - 8);
    v4 = v140;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
    {
      v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v120, v121, v122);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
    }
    a3 = v146;
    v125 = *(int *)(v151 + 44);
    v126 = &v108[v125];
    v127 = &v109[v125];
    v128 = sub_2365AFE88();
    v129 = *(_QWORD *)(v128 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
    {
      v130 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v126, v127, v128);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
    }
    v106 = v148;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v108, 0, 1, v151);
  }
  v131 = *(int *)(v150 + 40);
  v132 = &v105[v131];
  v133 = &v106[v131];
  v134 = *((_QWORD *)v133 + 1);
  *(_QWORD *)v132 = *(_QWORD *)v133;
  *((_QWORD *)v132 + 1) = v134;
  v135 = *(int *)(a3 + 48);
  *((_BYTE *)a1 + *(int *)(a3 + 44)) = *((_BYTE *)v4 + *(int *)(a3 + 44));
  v136 = *(void **)((char *)v4 + v135);
  *(_QWORD *)((char *)a1 + v135) = v136;
  swift_bridgeObjectRetain();
  v137 = v136;
  return a1;
}

uint64_t sub_2364E5638(uint64_t a1, void **a2, uint64_t a3)
{
  void **v4;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t (*v28)(uint64_t, uint64_t, int *);
  int v29;
  int v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(void *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  int v82;
  int v83;
  uint64_t v84;
  void *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(void *, uint64_t, uint64_t);
  int v98;
  int v99;
  uint64_t v100;
  void *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(void *, uint64_t, uint64_t);
  int v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(void *, uint64_t, uint64_t);
  int v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  int v138;
  int v139;
  uint64_t v140;
  void *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(void *, uint64_t, uint64_t);
  int v154;
  size_t v155;
  void *v156;
  uint64_t v157;
  void *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(void *, uint64_t, uint64_t);
  int v175;
  size_t v176;
  void *v177;
  uint64_t v178;
  void *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t (*v183)(void *, uint64_t, uint64_t);
  int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  int v197;
  int v198;
  uint64_t v199;
  void *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  unsigned int (*v204)(char *, uint64_t, uint64_t);
  uint64_t v205;
  size_t v206;
  void *v207;
  char *v208;
  uint64_t v209;
  void *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t (*v214)(void *, uint64_t, uint64_t);
  int v215;
  int v216;
  uint64_t v217;
  void *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  char *v231;
  uint64_t v232;
  void *v233;
  void *v234;
  id v235;
  uint64_t v237;
  uint64_t v238;
  void *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t (*v243)(void *, uint64_t, uint64_t);
  int v244;
  int v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t (*v252)(void *, uint64_t, uint64_t);
  int v253;
  int v254;
  void *v255;
  void *v256;
  int *v257;
  int *v258;
  int *v259;
  uint64_t v260;
  int *__src;
  uint64_t v262;
  char *v263;
  void *v264;
  void **v265;
  uint64_t (*v266)(uint64_t, uint64_t, int *);
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  int *v271;

  v4 = a2;
  v6 = *a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = v4[1];
  *(_QWORD *)(a1 + 16) = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = v4[3];
  v10 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v9;
  v11 = v9;

  v13 = v4[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v13)
    {
      v14 = v4[5];
      *(_QWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 40) = v14;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = v4[5];
    *(_QWORD *)(a1 + 32) = v13;
    *(_QWORD *)(a1 + 40) = v15;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v4 + 2);
LABEL_8:
  v16 = v4[6];
  if (*(_QWORD *)(a1 + 48))
  {
    if (v16)
    {
      v17 = v4[7];
      *(_QWORD *)(a1 + 48) = v16;
      *(_QWORD *)(a1 + 56) = v17;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v16)
  {
    v18 = v4[7];
    *(_QWORD *)(a1 + 48) = v16;
    *(_QWORD *)(a1 + 56) = v18;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
LABEL_15:
  v19 = v4[8];
  if (*(_QWORD *)(a1 + 64))
  {
    if (v19)
    {
      v20 = v4[9];
      *(_QWORD *)(a1 + 64) = v19;
      *(_QWORD *)(a1 + 72) = v20;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v19)
  {
    v21 = v4[9];
    *(_QWORD *)(a1 + 64) = v19;
    *(_QWORD *)(a1 + 72) = v21;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)v4 + 4);
LABEL_22:
  v22 = *(_QWORD *)(a3 + 16);
  v269 = *(_QWORD *)(a3 + 24);
  v271 = (int *)a3;
  v23 = type metadata accessor for RapportTransport(0, v22, v269, v12);
  v24 = *(int *)(v23 + 56);
  v25 = a1 + v24;
  v26 = (char *)v4 + v24;
  v27 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v260 = *((_QWORD *)v27 - 1);
  v28 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v260 + 48);
  v29 = v28(v25, 1, v27);
  v30 = v28((uint64_t)v26, 1, v27);
  v265 = v4;
  v266 = v28;
  v264 = (void *)v22;
  if (!v29)
  {
    if (v30)
    {
      sub_236465998(v25, &qword_2563E4DE0);
      goto LABEL_28;
    }
    v262 = v23;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *(_QWORD *)(v25 + 8) = *((_QWORD *)v26 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v25 + 16) = v26[16];
    v40 = v27[9];
    v41 = (void *)(v25 + v40);
    v42 = &v26[v40];
    v43 = sub_2365AFE1C();
    v44 = *(_QWORD *)(v43 - 8);
    v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
    v46 = v45(v41, 1, v43);
    v47 = v45(v42, 1, v43);
    if (v46)
    {
      if (!v47)
      {
        (*(void (**)(void *, char *, uint64_t))(v44 + 16))(v41, v42, v43);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        goto LABEL_43;
      }
    }
    else
    {
      if (!v47)
      {
        (*(void (**)(void *, char *, uint64_t))(v44 + 24))(v41, v42, v43);
LABEL_43:
        v61 = v27[10];
        v62 = (void *)(v25 + v61);
        v63 = &v26[v61];
        v64 = sub_2365AFE4C();
        v65 = *(_QWORD *)(v64 - 8);
        v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
        v67 = v66(v62, 1, v64);
        v68 = v66(v63, 1, v64);
        if (v67)
        {
          if (!v68)
          {
            (*(void (**)(void *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
            goto LABEL_49;
          }
        }
        else
        {
          if (!v68)
          {
            (*(void (**)(void *, char *, uint64_t))(v65 + 24))(v62, v63, v64);
LABEL_49:
            v70 = v27[11];
            v71 = (void *)(v25 + v70);
            v72 = &v26[v70];
            v73 = sub_2365AFE88();
            v74 = *(_QWORD *)(v73 - 8);
            v75 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v74 + 48);
            v76 = v75(v71, 1, v73);
            v77 = v75(v72, 1, v73);
            v4 = v265;
            if (v76)
            {
              if (!v77)
              {
                (*(void (**)(void *, char *, uint64_t))(v74 + 16))(v71, v72, v73);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
LABEL_55:
                v39 = v271;
                v23 = v262;
                v22 = (uint64_t)v264;
                v28 = v266;
                goto LABEL_56;
              }
            }
            else
            {
              if (!v77)
              {
                (*(void (**)(void *, char *, uint64_t))(v74 + 24))(v71, v72, v73);
                goto LABEL_55;
              }
              (*(void (**)(void *, uint64_t))(v74 + 8))(v71, v73);
            }
            v78 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
            memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
            goto LABEL_55;
          }
          (*(void (**)(void *, uint64_t))(v65 + 8))(v62, v64);
        }
        v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        goto LABEL_49;
      }
      (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
    }
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_43;
  }
  if (v30)
  {
LABEL_28:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v25, v26, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    v39 = v271;
    goto LABEL_56;
  }
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_QWORD *)(v25 + 8) = *((_QWORD *)v26 + 1);
  *(_BYTE *)(v25 + 16) = v26[16];
  v31 = v27[9];
  v32 = (void *)(v25 + v31);
  v33 = &v26[v31];
  v34 = sub_2365AFE1C();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain();
  if (v36(v33, 1, v34))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v48 = v27[10];
  v49 = (void *)(v25 + v48);
  v50 = &v26[v48];
  v51 = sub_2365AFE4C();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v4 = v265;
  v54 = v27[11];
  v55 = (void *)(v25 + v54);
  v56 = &v26[v54];
  v57 = sub_2365AFE88();
  v58 = *(_QWORD *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  v28 = v266;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v260 + 56))(v25, 0, 1, v27);
  v39 = v271;
  v22 = (uint64_t)v264;
LABEL_56:
  v79 = *(int *)(v23 + 60);
  v80 = a1 + v79;
  v81 = (char *)v4 + v79;
  v82 = v28(a1 + v79, 1, v27);
  v83 = v28((uint64_t)v81, 1, v27);
  if (!v82)
  {
    if (v83)
    {
      sub_236465998(v80, &qword_2563E4DE0);
      goto LABEL_62;
    }
    *(_QWORD *)v80 = *(_QWORD *)v81;
    *(_QWORD *)(v80 + 8) = *((_QWORD *)v81 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v80 + 16) = v81[16];
    v92 = v27[9];
    v93 = (void *)(v80 + v92);
    v94 = &v81[v92];
    v95 = sub_2365AFE1C();
    v96 = *(_QWORD *)(v95 - 8);
    v97 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v96 + 48);
    v98 = v97(v93, 1, v95);
    v99 = v97(v94, 1, v95);
    if (v98)
    {
      if (!v99)
      {
        (*(void (**)(void *, char *, uint64_t))(v96 + 16))(v93, v94, v95);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
        goto LABEL_77;
      }
    }
    else
    {
      if (!v99)
      {
        (*(void (**)(void *, char *, uint64_t))(v96 + 24))(v93, v94, v95);
LABEL_77:
        v113 = v27[10];
        v114 = (void *)(v80 + v113);
        v115 = &v81[v113];
        v116 = sub_2365AFE4C();
        v117 = *(_QWORD *)(v116 - 8);
        v118 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v117 + 48);
        v119 = v118(v114, 1, v116);
        v120 = v118(v115, 1, v116);
        if (v119)
        {
          v4 = v265;
          if (!v120)
          {
            (*(void (**)(void *, char *, uint64_t))(v117 + 16))(v114, v115, v116);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
            goto LABEL_83;
          }
        }
        else
        {
          v4 = v265;
          if (!v120)
          {
            (*(void (**)(void *, char *, uint64_t))(v117 + 24))(v114, v115, v116);
LABEL_83:
            v122 = v27[11];
            v123 = (void *)(v80 + v122);
            v124 = &v81[v122];
            v125 = sub_2365AFE88();
            v126 = *(_QWORD *)(v125 - 8);
            v127 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v126 + 48);
            v128 = v127(v123, 1, v125);
            v129 = v127(v124, 1, v125);
            if (v128)
            {
              if (!v129)
              {
                (*(void (**)(void *, char *, uint64_t))(v126 + 16))(v123, v124, v125);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
LABEL_89:
                v39 = v271;
                v22 = (uint64_t)v264;
                v28 = v266;
                goto LABEL_90;
              }
            }
            else
            {
              if (!v129)
              {
                (*(void (**)(void *, char *, uint64_t))(v126 + 24))(v123, v124, v125);
                goto LABEL_89;
              }
              (*(void (**)(void *, uint64_t))(v126 + 8))(v123, v125);
            }
            v130 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
            memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
            goto LABEL_89;
          }
          (*(void (**)(void *, uint64_t))(v117 + 8))(v114, v116);
        }
        v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
        goto LABEL_83;
      }
      (*(void (**)(void *, uint64_t))(v96 + 8))(v93, v95);
    }
    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    goto LABEL_77;
  }
  if (v83)
  {
LABEL_62:
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v80, v81, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_90;
  }
  *(_QWORD *)v80 = *(_QWORD *)v81;
  *(_QWORD *)(v80 + 8) = *((_QWORD *)v81 + 1);
  *(_BYTE *)(v80 + 16) = v81[16];
  v84 = v27[9];
  v85 = (void *)(v80 + v84);
  v86 = &v81[v84];
  v87 = sub_2365AFE1C();
  v88 = *(_QWORD *)(v87 - 8);
  v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
  swift_bridgeObjectRetain();
  if (v89(v86, 1, v87))
  {
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v88 + 16))(v85, v86, v87);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
  }
  v100 = v27[10];
  v101 = (void *)(v80 + v100);
  v102 = &v81[v100];
  v103 = sub_2365AFE4C();
  v104 = *(_QWORD *)(v103 - 8);
  v4 = v265;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v104 + 16))(v101, v102, v103);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
  }
  v106 = v27[11];
  v107 = (void *)(v80 + v106);
  v108 = &v81[v106];
  v109 = sub_2365AFE88();
  v110 = *(_QWORD *)(v109 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
  {
    v111 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v110 + 16))(v107, v108, v109);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
  }
  v28 = v266;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v260 + 56))(v80, 0, 1, v27);
  v39 = v271;
  v22 = (uint64_t)v264;
LABEL_90:
  v131 = v39[9];
  v132 = a1 + v131;
  v133 = (char *)v4 + v131;
  *(_QWORD *)(a1 + v131) = *(void **)((char *)v4 + v131);
  swift_retain();
  swift_release();
  __src = (int *)type metadata accessor for MessagePacker(0, v22, v269, v134);
  v263 = v133;
  v135 = __src[9];
  v136 = v132 + v135;
  v137 = &v133[v135];
  v138 = v28(v132 + v135, 1, v27);
  v139 = v28((uint64_t)v137, 1, v27);
  if (v138)
  {
    if (!v139)
    {
      *(_QWORD *)v136 = *(_QWORD *)v137;
      *(_QWORD *)(v136 + 8) = *((_QWORD *)v137 + 1);
      *(_BYTE *)(v136 + 16) = v137[16];
      v257 = v27;
      v140 = v27[9];
      v141 = (void *)(v136 + v140);
      v142 = &v137[v140];
      v143 = sub_2365AFE1C();
      v144 = *(_QWORD *)(v143 - 8);
      v145 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48);
      swift_bridgeObjectRetain();
      if (v145(v142, 1, v143))
      {
        v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v144 + 16))(v141, v142, v143);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
      }
      v27 = v257;
      v157 = v257[10];
      v158 = (void *)(v136 + v157);
      v159 = &v137[v157];
      v160 = sub_2365AFE4C();
      v161 = *(_QWORD *)(v160 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48))(v159, 1, v160))
      {
        v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v161 + 16))(v158, v159, v160);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v158, 0, 1, v160);
      }
      v4 = v265;
      v163 = v257[11];
      v164 = (void *)(v136 + v163);
      v165 = &v137[v163];
      v166 = sub_2365AFE88();
      v167 = *(_QWORD *)(v166 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
      {
        v168 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v167 + 16))(v164, v165, v166);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v260 + 56))(v136, 0, 1, v257);
      goto LABEL_134;
    }
LABEL_96:
    v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v136, v137, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
    goto LABEL_135;
  }
  if (v139)
  {
    sub_236465998(v136, &qword_2563E4DE0);
    goto LABEL_96;
  }
  *(_QWORD *)v136 = *(_QWORD *)v137;
  *(_QWORD *)(v136 + 8) = *((_QWORD *)v137 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v136 + 16) = v137[16];
  v148 = v27[9];
  v149 = (void *)(v136 + v148);
  v150 = &v137[v148];
  v151 = sub_2365AFE1C();
  v152 = *(_QWORD *)(v151 - 8);
  v153 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v152 + 48);
  v255 = v149;
  LODWORD(v149) = v153(v149, 1, v151);
  v154 = v153(v150, 1, v151);
  if ((_DWORD)v149)
  {
    if (v154)
    {
      v155 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v156 = v255;
LABEL_111:
      memcpy(v156, v150, v155);
      goto LABEL_120;
    }
    (*(void (**)(void *, char *, uint64_t))(v152 + 16))(v255, v150, v151);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v255, 0, 1, v151);
  }
  else
  {
    if (v154)
    {
      (*(void (**)(void *, uint64_t))(v152 + 8))(v255, v151);
      v155 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v156 = v255;
      goto LABEL_111;
    }
    (*(void (**)(void *, char *, uint64_t))(v152 + 24))(v255, v150, v151);
  }
LABEL_120:
  v169 = v27[10];
  v170 = (void *)(v136 + v169);
  v171 = &v137[v169];
  v172 = sub_2365AFE4C();
  v173 = *(_QWORD *)(v172 - 8);
  v174 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v173 + 48);
  v256 = v170;
  LODWORD(v170) = v174(v170, 1, v172);
  v175 = v174(v171, 1, v172);
  if ((_DWORD)v170)
  {
    if (v175)
    {
      v176 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v177 = v256;
LABEL_125:
      memcpy(v177, v171, v176);
      goto LABEL_128;
    }
    (*(void (**)(void *, char *, uint64_t))(v173 + 16))(v256, v171, v172);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v256, 0, 1, v172);
  }
  else
  {
    if (v175)
    {
      (*(void (**)(void *, uint64_t))(v173 + 8))(v256, v172);
      v176 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v177 = v256;
      goto LABEL_125;
    }
    (*(void (**)(void *, char *, uint64_t))(v173 + 24))(v256, v171, v172);
  }
LABEL_128:
  v178 = v27[11];
  v179 = (void *)(v136 + v178);
  v180 = &v137[v178];
  v181 = sub_2365AFE88();
  v182 = *(_QWORD *)(v181 - 8);
  v183 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v182 + 48);
  v184 = v183(v179, 1, v181);
  v185 = v183(v180, 1, v181);
  v4 = v265;
  if (!v184)
  {
    if (!v185)
    {
      (*(void (**)(void *, char *, uint64_t))(v182 + 24))(v179, v180, v181);
      goto LABEL_134;
    }
    (*(void (**)(void *, uint64_t))(v182 + 8))(v179, v181);
    goto LABEL_133;
  }
  if (v185)
  {
LABEL_133:
    v186 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
    goto LABEL_134;
  }
  (*(void (**)(void *, char *, uint64_t))(v182 + 16))(v179, v180, v181);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v182 + 56))(v179, 0, 1, v181);
LABEL_134:
  v39 = v271;
  v22 = (uint64_t)v264;
LABEL_135:
  v187 = __src[10];
  v188 = (_QWORD *)(v132 + v187);
  v189 = &v263[v187];
  *v188 = *(_QWORD *)v189;
  v188[1] = *((_QWORD *)v189 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v190 = v39[10];
  v191 = a1 + v190;
  v192 = (char *)v4 + v190;
  *(_QWORD *)(a1 + v190) = *(void **)((char *)v4 + v190);
  swift_retain();
  swift_release();
  v270 = type metadata accessor for MessageUnpacker(0, v22, v269, v193);
  v194 = *(int *)(v270 + 36);
  v195 = v191 + v194;
  v196 = &v192[v194];
  v197 = v266(v191 + v194, 1, v27);
  v198 = v266((uint64_t)v196, 1, v27);
  if (!v197)
  {
    if (v198)
    {
      sub_236465998(v195, &qword_2563E4DE0);
      goto LABEL_141;
    }
    v268 = v192;
    *(_QWORD *)v195 = *(_QWORD *)v196;
    *(_QWORD *)(v195 + 8) = *((_QWORD *)v196 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v195 + 16) = v196[16];
    v259 = v27;
    v209 = v27[9];
    v210 = (void *)(v195 + v209);
    v211 = &v196[v209];
    v212 = sub_2365AFE1C();
    v213 = *(_QWORD *)(v212 - 8);
    v214 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v213 + 48);
    v215 = v214(v210, 1, v212);
    v216 = v214(v211, 1, v212);
    if (v215)
    {
      if (!v216)
      {
        (*(void (**)(void *, char *, uint64_t))(v213 + 16))(v210, v211, v212);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v213 + 56))(v210, 0, 1, v212);
        goto LABEL_158;
      }
    }
    else
    {
      if (!v216)
      {
        (*(void (**)(void *, char *, uint64_t))(v213 + 24))(v210, v211, v212);
LABEL_158:
        v238 = v259[10];
        v239 = (void *)(v195 + v238);
        v240 = &v196[v238];
        v241 = sub_2365AFE4C();
        v242 = *(_QWORD *)(v241 - 8);
        v243 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v242 + 48);
        v244 = v243(v239, 1, v241);
        v245 = v243(v240, 1, v241);
        if (v244)
        {
          if (!v245)
          {
            (*(void (**)(void *, char *, uint64_t))(v242 + 16))(v239, v240, v241);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v242 + 56))(v239, 0, 1, v241);
LABEL_164:
            v247 = v259[11];
            v248 = (void *)(v195 + v247);
            v249 = &v196[v247];
            v250 = sub_2365AFE88();
            v251 = *(_QWORD *)(v250 - 8);
            v252 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v251 + 48);
            v253 = v252(v248, 1, v250);
            v254 = v252(v249, 1, v250);
            v4 = v265;
            v192 = v268;
            if (v253)
            {
              v39 = v271;
              if (!v254)
              {
                (*(void (**)(void *, char *, uint64_t))(v251 + 16))(v248, v249, v250);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v248, 0, 1, v250);
                goto LABEL_154;
              }
            }
            else
            {
              v39 = v271;
              if (!v254)
              {
                (*(void (**)(void *, char *, uint64_t))(v251 + 24))(v248, v249, v250);
                goto LABEL_154;
              }
              (*(void (**)(void *, uint64_t))(v251 + 8))(v248, v250);
            }
            v206 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68) - 8) + 64);
            v207 = v248;
            v208 = v249;
            goto LABEL_142;
          }
        }
        else
        {
          if (!v245)
          {
            (*(void (**)(void *, char *, uint64_t))(v242 + 24))(v239, v240, v241);
            goto LABEL_164;
          }
          (*(void (**)(void *, uint64_t))(v242 + 8))(v239, v241);
        }
        v246 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v239, v240, *(_QWORD *)(*(_QWORD *)(v246 - 8) + 64));
        goto LABEL_164;
      }
      (*(void (**)(void *, uint64_t))(v213 + 8))(v210, v212);
    }
    v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
    goto LABEL_158;
  }
  if (v198)
  {
LABEL_141:
    v206 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8) - 8) + 64);
    v207 = (void *)v195;
    v208 = v196;
LABEL_142:
    memcpy(v207, v208, v206);
    goto LABEL_154;
  }
  v267 = v192;
  *(_QWORD *)v195 = *(_QWORD *)v196;
  *(_QWORD *)(v195 + 8) = *((_QWORD *)v196 + 1);
  *(_BYTE *)(v195 + 16) = v196[16];
  v258 = v27;
  v199 = v27[9];
  v200 = (void *)(v195 + v199);
  v201 = &v196[v199];
  v202 = sub_2365AFE1C();
  v203 = *(_QWORD *)(v202 - 8);
  v204 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v203 + 48);
  swift_bridgeObjectRetain();
  if (v204(v201, 1, v202))
  {
    v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v200, v201, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v203 + 16))(v200, v201, v202);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v203 + 56))(v200, 0, 1, v202);
  }
  v217 = v258[10];
  v218 = (void *)(v195 + v217);
  v219 = &v196[v217];
  v220 = sub_2365AFE4C();
  v221 = *(_QWORD *)(v220 - 8);
  v39 = v271;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v219, 1, v220))
  {
    v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v221 + 16))(v218, v219, v220);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v221 + 56))(v218, 0, 1, v220);
  }
  v4 = v265;
  v223 = v258[11];
  v224 = (void *)(v195 + v223);
  v225 = &v196[v223];
  v226 = sub_2365AFE88();
  v227 = *(_QWORD *)(v226 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v227 + 48))(v225, 1, v226))
  {
    v228 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v227 + 16))(v224, v225, v226);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v227 + 56))(v224, 0, 1, v226);
  }
  v192 = v267;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v260 + 56))(v195, 0, 1, v258);
LABEL_154:
  v229 = *(int *)(v270 + 40);
  v230 = (_QWORD *)(v191 + v229);
  v231 = &v192[v229];
  *v230 = *(_QWORD *)v231;
  v230[1] = *((_QWORD *)v231 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + v39[11]) = *((_BYTE *)v4 + v39[11]);
  v232 = v39[12];
  v233 = *(void **)(a1 + v232);
  v234 = *(void **)((char *)v4 + v232);
  *(_QWORD *)(a1 + v232) = v234;
  v235 = v234;

  return a1;
}

uint64_t sub_2364E6CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  unsigned int (*v19)(_QWORD, _QWORD, _QWORD);
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *__dst;
  _BYTE *__dsta;
  uint64_t v114;
  uint64_t v115;
  int *v116;
  uint64_t v117;
  unsigned int (*v118)(_QWORD, _QWORD, _QWORD);
  uint64_t v119;
  void *v120;
  _BYTE *v121;
  _BYTE *v122;

  v4 = (int *)a3;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  v9 = *(_QWORD *)(a2 + 48);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  v11 = *(_QWORD *)(a2 + 64);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v11;
    *(_QWORD *)(a1 + 72) = v12;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  v13 = *(_QWORD *)(a3 + 16);
  v120 = *(void **)(a3 + 24);
  v14 = type metadata accessor for RapportTransport(0, v13, (uint64_t)v120, a4);
  v15 = *(int *)(v14 + 56);
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v117 = *((_QWORD *)v18 - 1);
  v19 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v117 + 48);
  v115 = v13;
  v116 = v4;
  v118 = v19;
  if (v19(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
    v16[16] = v17[16];
    v21 = v18[9];
    v22 = &v16[v21];
    v23 = &v17[v21];
    v24 = sub_2365AFE1C();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 32))(v22, v23, v24);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v27 = v18[10];
    v28 = &v16[v27];
    v29 = &v17[v27];
    v30 = sub_2365AFE4C();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = v18[11];
    v34 = &v16[v33];
    v35 = &v17[v33];
    v36 = sub_2365AFE88();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v37 + 32))(v34, v35, v36);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    v13 = v115;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v117 + 56))(v16, 0, 1, v18);
    v4 = v116;
    v19 = v118;
  }
  v39 = *(int *)(v14 + 60);
  v40 = (_BYTE *)(a1 + v39);
  v41 = (_BYTE *)(a2 + v39);
  if (v19(a2 + v39, 1, v18))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v40 = *(_OWORD *)v41;
    v40[16] = v41[16];
    v44 = v18[9];
    v45 = &v40[v44];
    v46 = &v41[v44];
    v47 = sub_2365AFE1C();
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    v50 = v18[10];
    v51 = &v40[v50];
    v52 = &v41[v50];
    v53 = sub_2365AFE4C();
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v54 + 32))(v51, v52, v53);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    v56 = v18[11];
    v57 = &v40[v56];
    v58 = &v41[v56];
    v59 = sub_2365AFE88();
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 32))(v57, v58, v59);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    v13 = v115;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v117 + 56))(v40, 0, 1, v18);
    v19 = v118;
  }
  v62 = v4[9];
  v63 = a1 + v62;
  v64 = a2 + v62;
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(a2 + v62);
  v114 = type metadata accessor for MessagePacker(0, v13, (uint64_t)v120, v43);
  v65 = *(int *)(v114 + 36);
  v66 = (_BYTE *)(v63 + v65);
  v67 = (_BYTE *)(v64 + v65);
  if (v19(v64 + v65, 1, v18))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v66 = *(_OWORD *)v67;
    v66[16] = v67[16];
    v70 = v18[9];
    __dst = &v66[v70];
    v71 = &v67[v70];
    v72 = sub_2365AFE1C();
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(__dst, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v73 + 32))(__dst, v71, v72);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v72);
    }
    v75 = v18[10];
    __dsta = &v66[v75];
    v76 = &v67[v75];
    v77 = sub_2365AFE4C();
    v78 = *(_QWORD *)(v77 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(__dsta, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v78 + 32))(__dsta, v76, v77);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v78 + 56))(__dsta, 0, 1, v77);
    }
    v80 = v18[11];
    v81 = &v66[v80];
    v82 = &v67[v80];
    v83 = sub_2365AFE88();
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v84 + 32))(v81, v82, v83);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
    }
    v13 = v115;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v117 + 56))(v66, 0, 1, v18);
    v4 = v116;
  }
  *(_OWORD *)(v63 + *(int *)(v114 + 40)) = *(_OWORD *)(v64 + *(int *)(v114 + 40));
  v86 = v4[10];
  v87 = a1 + v86;
  v88 = a2 + v86;
  *(_QWORD *)(a1 + v86) = *(_QWORD *)(a2 + v86);
  v89 = type metadata accessor for MessageUnpacker(0, v13, (uint64_t)v120, v69);
  v90 = *(int *)(v89 + 36);
  v91 = (_BYTE *)(v87 + v90);
  v92 = (_BYTE *)(v88 + v90);
  if (v118(v88 + v90, 1, v18))
  {
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v91 = *(_OWORD *)v92;
    v91[16] = v92[16];
    v94 = v18[9];
    v119 = v89;
    v121 = &v91[v94];
    v95 = &v92[v94];
    v96 = sub_2365AFE1C();
    v97 = *(_QWORD *)(v96 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
    {
      v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v121, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v97 + 32))(v121, v95, v96);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v121, 0, 1, v96);
    }
    v99 = v18[10];
    v122 = &v91[v99];
    v100 = &v92[v99];
    v101 = sub_2365AFE4C();
    v102 = *(_QWORD *)(v101 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
    {
      v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v122, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v102 + 32))(v122, v100, v101);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v122, 0, 1, v101);
    }
    v104 = v18[11];
    v105 = &v91[v104];
    v106 = &v92[v104];
    v107 = sub_2365AFE88();
    v108 = *(_QWORD *)(v107 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
    {
      v109 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v108 + 32))(v105, v106, v107);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
    }
    v4 = v116;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v117 + 56))(v91, 0, 1, v18);
    v89 = v119;
  }
  *(_OWORD *)(v87 + *(int *)(v89 + 40)) = *(_OWORD *)(v88 + *(int *)(v89 + 40));
  v110 = v4[12];
  *(_BYTE *)(a1 + v4[11]) = *(_BYTE *)(a2 + v4[11]);
  *(_QWORD *)(a1 + v110) = *(_QWORD *)(a2 + v110);
  return a1;
}

uint64_t sub_2364E7694(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t (*v24)(uint64_t, uint64_t, int *);
  int v25;
  int v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void *, uint64_t, uint64_t);
  int v41;
  size_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(void *, uint64_t, uint64_t);
  int v62;
  size_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void *, uint64_t, uint64_t);
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  int v77;
  int v78;
  uint64_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(void *, uint64_t, uint64_t);
  int v93;
  int v94;
  uint64_t v95;
  void *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(void *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(void *, uint64_t, uint64_t);
  int v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  int v133;
  int v134;
  uint64_t v135;
  void *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(void *, uint64_t, uint64_t);
  int v149;
  size_t v150;
  void *v151;
  uint64_t v152;
  void *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  char *v166;
  uint64_t v167;
  uint64_t (*v168)(void *, uint64_t, uint64_t);
  int v169;
  size_t v170;
  void *v171;
  uint64_t v172;
  void *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(void *, uint64_t, uint64_t);
  int v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  int v194;
  int v195;
  uint64_t v196;
  void *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  size_t v202;
  void *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  void *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t (*v211)(void *, uint64_t, uint64_t);
  int v212;
  size_t v213;
  void *v214;
  uint64_t v215;
  void *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  void *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  void *v233;
  uint64_t v235;
  void *v236;
  char *v237;
  uint64_t v238;
  uint64_t (*v239)(void *, uint64_t, uint64_t);
  int v240;
  size_t v241;
  void *v242;
  uint64_t v243;
  void *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t (*v248)(void *, uint64_t, uint64_t);
  int v249;
  int v250;
  char *v251;
  uint64_t v252;
  void *v253;
  void *v254;
  void *v255;
  void *v256;
  uint64_t v257;
  int *__src;
  char *__srca;
  _QWORD *__srcb;
  _QWORD *v261;
  void *v262;
  uint64_t v263;
  void *v264;
  void *v265;
  uint64_t v266;
  uint64_t (*v267)(uint64_t, uint64_t, int *);
  uint64_t v268;
  uint64_t v269;

  v4 = a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = v4[2];
  *(_QWORD *)(a1 + 8) = v4[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4[3];

  v10 = v4[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v10)
    {
      v11 = v4[5];
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v11;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = v4[5];
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v12;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v4 + 2);
LABEL_8:
  v13 = v4[6];
  if (*(_QWORD *)(a1 + 48))
  {
    if (v13)
    {
      v14 = v4[7];
      *(_QWORD *)(a1 + 48) = v13;
      *(_QWORD *)(a1 + 56) = v14;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = v4[7];
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v15;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
LABEL_15:
  v16 = v4[8];
  if (*(_QWORD *)(a1 + 64))
  {
    if (v16)
    {
      v17 = v4[9];
      *(_QWORD *)(a1 + 64) = v16;
      *(_QWORD *)(a1 + 72) = v17;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v16)
  {
    v18 = v4[9];
    *(_QWORD *)(a1 + 64) = v16;
    *(_QWORD *)(a1 + 72) = v18;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)v4 + 4);
LABEL_22:
  v262 = *(void **)(a3 + 24);
  v263 = *(_QWORD *)(a3 + 16);
  v19 = type metadata accessor for RapportTransport(0, v263, (uint64_t)v262, v9);
  v20 = *(int *)(v19 + 56);
  v21 = a1 + v20;
  v22 = (char *)v4 + v20;
  v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v257 = *((_QWORD *)v23 - 1);
  v24 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v257 + 48);
  v25 = v24(v21, 1, v23);
  v267 = v24;
  v26 = v24((uint64_t)v22, 1, v23);
  v261 = v4;
  v266 = a3;
  if (v25)
  {
    if (!v26)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *(_BYTE *)(v21 + 16) = v22[16];
      v27 = v23[9];
      v28 = (void *)(v21 + v27);
      v29 = &v22[v27];
      v30 = sub_2365AFE1C();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v44 = v23[10];
      v45 = (void *)(v21 + v44);
      v46 = &v22[v44];
      v47 = sub_2365AFE4C();
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      v4 = v261;
      v50 = v23[11];
      v51 = (void *)(v21 + v50);
      v52 = &v22[v50];
      v53 = sub_2365AFE88();
      v54 = *(_QWORD *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v257 + 56))(v21, 0, 1, v23);
      goto LABEL_60;
    }
LABEL_28:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v21, v22, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_61;
  }
  if (v26)
  {
    sub_236465998(v21, &qword_2563E4DE0);
    goto LABEL_28;
  }
  v34 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_QWORD *)(v21 + 8) = v34;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v21 + 16) = v22[16];
  v35 = v23[9];
  v36 = (void *)(v21 + v35);
  v37 = &v22[v35];
  v38 = sub_2365AFE1C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
  v253 = v36;
  LODWORD(v36) = v40(v36, 1, v38);
  v41 = v40(v37, 1, v38);
  if ((_DWORD)v36)
  {
    if (v41)
    {
      v42 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v43 = v253;
LABEL_43:
      memcpy(v43, v37, v42);
      goto LABEL_46;
    }
    (*(void (**)(void *, char *, uint64_t))(v39 + 32))(v253, v37, v38);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v253, 0, 1, v38);
  }
  else
  {
    if (v41)
    {
      (*(void (**)(void *, uint64_t))(v39 + 8))(v253, v38);
      v42 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v43 = v253;
      goto LABEL_43;
    }
    (*(void (**)(void *, char *, uint64_t))(v39 + 40))(v253, v37, v38);
  }
LABEL_46:
  v56 = v23[10];
  v57 = (void *)(v21 + v56);
  v58 = &v22[v56];
  v59 = sub_2365AFE4C();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
  v254 = v57;
  LODWORD(v57) = v61(v57, 1, v59);
  v62 = v61(v58, 1, v59);
  if ((_DWORD)v57)
  {
    if (v62)
    {
      v63 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v64 = v254;
LABEL_51:
      memcpy(v64, v58, v63);
      goto LABEL_54;
    }
    (*(void (**)(void *, char *, uint64_t))(v60 + 32))(v254, v58, v59);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v254, 0, 1, v59);
  }
  else
  {
    if (v62)
    {
      (*(void (**)(void *, uint64_t))(v60 + 8))(v254, v59);
      v63 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v64 = v254;
      goto LABEL_51;
    }
    (*(void (**)(void *, char *, uint64_t))(v60 + 40))(v254, v58, v59);
  }
LABEL_54:
  v65 = v23[11];
  v66 = (void *)(v21 + v65);
  v67 = &v22[v65];
  v68 = sub_2365AFE88();
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v69 + 48);
  v71 = v70(v66, 1, v68);
  v72 = v70(v67, 1, v68);
  v4 = v261;
  if (!v71)
  {
    if (!v72)
    {
      (*(void (**)(void *, char *, uint64_t))(v69 + 40))(v66, v67, v68);
      goto LABEL_60;
    }
    (*(void (**)(void *, uint64_t))(v69 + 8))(v66, v68);
    goto LABEL_59;
  }
  if (v72)
  {
LABEL_59:
    v73 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_60;
  }
  (*(void (**)(void *, char *, uint64_t))(v69 + 32))(v66, v67, v68);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
LABEL_60:
  a3 = v266;
LABEL_61:
  v74 = *(int *)(v19 + 60);
  v75 = a1 + v74;
  v76 = (char *)v4 + v74;
  v77 = v267(a1 + v74, 1, v23);
  v78 = v267((uint64_t)v76, 1, v23);
  if (v77)
  {
    if (!v78)
    {
      *(_OWORD *)v75 = *(_OWORD *)v76;
      *(_BYTE *)(v75 + 16) = v76[16];
      v79 = v23[9];
      v80 = (void *)(v75 + v79);
      v81 = &v76[v79];
      v82 = sub_2365AFE1C();
      v83 = *(_QWORD *)(v82 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
      {
        v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
      }
      v95 = v23[10];
      v96 = (void *)(v75 + v95);
      v97 = &v76[v95];
      v98 = sub_2365AFE4C();
      v99 = *(_QWORD *)(v98 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
      {
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v99 + 32))(v96, v97, v98);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
      }
      v101 = v23[11];
      v102 = (void *)(v75 + v101);
      v103 = &v76[v101];
      v104 = sub_2365AFE88();
      v105 = *(_QWORD *)(v104 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
      {
        v106 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v105 + 32))(v102, v103, v104);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v257 + 56))(v75, 0, 1, v23);
      goto LABEL_95;
    }
LABEL_67:
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v75, v76, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    goto LABEL_96;
  }
  if (v78)
  {
    sub_236465998(v75, &qword_2563E4DE0);
    goto LABEL_67;
  }
  v86 = *((_QWORD *)v76 + 1);
  *(_QWORD *)v75 = *(_QWORD *)v76;
  *(_QWORD *)(v75 + 8) = v86;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v75 + 16) = v76[16];
  v87 = v23[9];
  v88 = (void *)(v75 + v87);
  v89 = &v76[v87];
  v90 = sub_2365AFE1C();
  v91 = *(_QWORD *)(v90 - 8);
  v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
  v93 = v92(v88, 1, v90);
  v94 = v92(v89, 1, v90);
  if (v93)
  {
    if (!v94)
    {
      (*(void (**)(void *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      goto LABEL_83;
    }
    goto LABEL_82;
  }
  if (v94)
  {
    (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
LABEL_82:
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    goto LABEL_83;
  }
  (*(void (**)(void *, char *, uint64_t))(v91 + 40))(v88, v89, v90);
LABEL_83:
  v108 = v23[10];
  v109 = (void *)(v75 + v108);
  v110 = &v76[v108];
  v111 = sub_2365AFE4C();
  v112 = *(_QWORD *)(v111 - 8);
  v113 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v112 + 48);
  v114 = v113(v109, 1, v111);
  v115 = v113(v110, 1, v111);
  if (v114)
  {
    v4 = v261;
    if (!v115)
    {
      (*(void (**)(void *, char *, uint64_t))(v112 + 32))(v109, v110, v111);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
      goto LABEL_89;
    }
    goto LABEL_88;
  }
  v4 = v261;
  if (v115)
  {
    (*(void (**)(void *, uint64_t))(v112 + 8))(v109, v111);
LABEL_88:
    v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
    goto LABEL_89;
  }
  (*(void (**)(void *, char *, uint64_t))(v112 + 40))(v109, v110, v111);
LABEL_89:
  v117 = v23[11];
  v118 = (void *)(v75 + v117);
  v119 = &v76[v117];
  v120 = sub_2365AFE88();
  v121 = *(_QWORD *)(v120 - 8);
  v122 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v121 + 48);
  v123 = v122(v118, 1, v120);
  v124 = v122(v119, 1, v120);
  if (!v123)
  {
    if (!v124)
    {
      (*(void (**)(void *, char *, uint64_t))(v121 + 40))(v118, v119, v120);
      goto LABEL_95;
    }
    (*(void (**)(void *, uint64_t))(v121 + 8))(v118, v120);
    goto LABEL_94;
  }
  if (v124)
  {
LABEL_94:
    v125 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
    goto LABEL_95;
  }
  (*(void (**)(void *, char *, uint64_t))(v121 + 32))(v118, v119, v120);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
LABEL_95:
  a3 = v266;
LABEL_96:
  v126 = *(int *)(a3 + 36);
  v127 = a1 + v126;
  v128 = (char *)v4 + v126;
  *(_QWORD *)(a1 + v126) = *(_QWORD *)((char *)v4 + v126);
  swift_release();
  __src = (int *)type metadata accessor for MessagePacker(0, v263, (uint64_t)v262, v129);
  v130 = __src[9];
  v131 = v127 + v130;
  v132 = &v128[v130];
  v133 = v267(v127 + v130, 1, v23);
  v134 = v267((uint64_t)v132, 1, v23);
  if (v133)
  {
    if (!v134)
    {
      *(_OWORD *)v131 = *(_OWORD *)v132;
      *(_BYTE *)(v131 + 16) = v132[16];
      v135 = v23[9];
      v136 = (void *)(v131 + v135);
      v137 = &v132[v135];
      v138 = sub_2365AFE1C();
      v139 = *(_QWORD *)(v138 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138))
      {
        v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v139 + 32))(v136, v137, v138);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
      }
      v152 = v23[10];
      v153 = (void *)(v131 + v152);
      v154 = &v132[v152];
      v155 = sub_2365AFE4C();
      v156 = *(_QWORD *)(v155 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
      {
        v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v156 + 32))(v153, v154, v155);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
      }
      v4 = v261;
      v158 = v23[11];
      v159 = (void *)(v131 + v158);
      v160 = &v132[v158];
      v161 = sub_2365AFE88();
      v162 = *(_QWORD *)(v161 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
      {
        v163 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v162 + 32))(v159, v160, v161);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v162 + 56))(v159, 0, 1, v161);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v257 + 56))(v131, 0, 1, v23);
      goto LABEL_138;
    }
LABEL_102:
    v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v131, v132, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
    goto LABEL_139;
  }
  if (v134)
  {
    sub_236465998(v131, &qword_2563E4DE0);
    goto LABEL_102;
  }
  v251 = v128;
  v142 = *((_QWORD *)v132 + 1);
  *(_QWORD *)v131 = *(_QWORD *)v132;
  *(_QWORD *)(v131 + 8) = v142;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v131 + 16) = v132[16];
  v143 = v23[9];
  v144 = (void *)(v131 + v143);
  v145 = &v132[v143];
  v146 = sub_2365AFE1C();
  v147 = *(_QWORD *)(v146 - 8);
  v148 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v147 + 48);
  v255 = v144;
  LODWORD(v144) = v148(v144, 1, v146);
  v149 = v148(v145, 1, v146);
  if ((_DWORD)v144)
  {
    if (v149)
    {
      v150 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v151 = v255;
LABEL_117:
      memcpy(v151, v145, v150);
      goto LABEL_124;
    }
    (*(void (**)(void *, char *, uint64_t))(v147 + 32))(v255, v145, v146);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v147 + 56))(v255, 0, 1, v146);
  }
  else
  {
    if (v149)
    {
      (*(void (**)(void *, uint64_t))(v147 + 8))(v255, v146);
      v150 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v151 = v255;
      goto LABEL_117;
    }
    (*(void (**)(void *, char *, uint64_t))(v147 + 40))(v255, v145, v146);
  }
LABEL_124:
  v128 = v251;
  v164 = v23[10];
  v165 = (void *)(v131 + v164);
  v166 = &v132[v164];
  v167 = sub_2365AFE4C();
  v252 = *(_QWORD *)(v167 - 8);
  v168 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v252 + 48);
  v256 = v165;
  LODWORD(v165) = v168(v165, 1, v167);
  v169 = v168(v166, 1, v167);
  if ((_DWORD)v165)
  {
    if (v169)
    {
      v170 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v171 = v256;
LABEL_129:
      memcpy(v171, v166, v170);
      goto LABEL_132;
    }
    (*(void (**)(void *, char *, uint64_t))(v252 + 32))(v256, v166, v167);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v252 + 56))(v256, 0, 1, v167);
  }
  else
  {
    if (v169)
    {
      (*(void (**)(void *, uint64_t))(v252 + 8))(v256, v167);
      v170 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v171 = v256;
      goto LABEL_129;
    }
    (*(void (**)(void *, char *, uint64_t))(v252 + 40))(v256, v166, v167);
  }
LABEL_132:
  v172 = v23[11];
  v173 = (void *)(v131 + v172);
  v174 = &v132[v172];
  v175 = sub_2365AFE88();
  v176 = *(_QWORD *)(v175 - 8);
  v177 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v176 + 48);
  v178 = v177(v173, 1, v175);
  v179 = v177(v174, 1, v175);
  if (!v178)
  {
    v4 = v261;
    if (!v179)
    {
      (*(void (**)(void *, char *, uint64_t))(v176 + 40))(v173, v174, v175);
      goto LABEL_138;
    }
    (*(void (**)(void *, uint64_t))(v176 + 8))(v173, v175);
    goto LABEL_137;
  }
  v4 = v261;
  if (v179)
  {
LABEL_137:
    v180 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
    goto LABEL_138;
  }
  (*(void (**)(void *, char *, uint64_t))(v176 + 32))(v173, v174, v175);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
LABEL_138:
  a3 = v266;
LABEL_139:
  v181 = __src[10];
  v182 = (_QWORD *)(v127 + v181);
  v183 = &v128[v181];
  v185 = *(_QWORD *)v183;
  v184 = *((_QWORD *)v183 + 1);
  *v182 = v185;
  v182[1] = v184;
  swift_bridgeObjectRelease();
  v186 = *(int *)(a3 + 40);
  v187 = a1 + v186;
  v188 = (char *)v4 + v186;
  *(_QWORD *)(a1 + v186) = *(_QWORD *)((char *)v4 + v186);
  swift_release();
  v190 = type metadata accessor for MessageUnpacker(0, v263, (uint64_t)v262, v189);
  v191 = *(int *)(v190 + 36);
  v192 = v187 + v191;
  v193 = &v188[v191];
  v194 = v267(v187 + v191, 1, v23);
  v195 = v267((uint64_t)v193, 1, v23);
  if (!v194)
  {
    if (v195)
    {
      sub_236465998(v192, &qword_2563E4DE0);
      goto LABEL_145;
    }
    __srca = v188;
    v269 = v190;
    v205 = *((_QWORD *)v193 + 1);
    *(_QWORD *)v192 = *(_QWORD *)v193;
    *(_QWORD *)(v192 + 8) = v205;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v192 + 16) = v193[16];
    v206 = v23[9];
    v207 = (void *)(v192 + v206);
    v208 = &v193[v206];
    v209 = sub_2365AFE1C();
    v210 = *(_QWORD *)(v209 - 8);
    v211 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v210 + 48);
    v264 = v207;
    LODWORD(v207) = v211(v207, 1, v209);
    v212 = v211(v208, 1, v209);
    if ((_DWORD)v207)
    {
      if (v212)
      {
        v213 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v214 = v264;
LABEL_161:
        memcpy(v214, v208, v213);
        goto LABEL_165;
      }
      (*(void (**)(void *, char *, uint64_t))(v210 + 32))(v264, v208, v209);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v210 + 56))(v264, 0, 1, v209);
    }
    else
    {
      if (v212)
      {
        (*(void (**)(void *, uint64_t))(v210 + 8))(v264, v209);
        v213 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v214 = v264;
        goto LABEL_161;
      }
      (*(void (**)(void *, char *, uint64_t))(v210 + 40))(v264, v208, v209);
    }
LABEL_165:
    v188 = __srca;
    v235 = v23[10];
    v236 = (void *)(v192 + v235);
    v237 = &v193[v235];
    v238 = sub_2365AFE4C();
    __srcb = *(_QWORD **)(v238 - 8);
    v239 = (uint64_t (*)(void *, uint64_t, uint64_t))__srcb[6];
    v265 = v236;
    LODWORD(v236) = v239(v236, 1, v238);
    v240 = v239(v237, 1, v238);
    if ((_DWORD)v236)
    {
      if (!v240)
      {
        ((void (*)(void *, char *, uint64_t))__srcb[4])(v265, v237, v238);
        ((void (*)(void *, _QWORD, uint64_t, uint64_t))__srcb[7])(v265, 0, 1, v238);
        goto LABEL_173;
      }
      v241 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v242 = v265;
    }
    else
    {
      if (!v240)
      {
        ((void (*)(void *, char *, uint64_t))__srcb[5])(v265, v237, v238);
        goto LABEL_173;
      }
      ((void (*)(void *, uint64_t))__srcb[1])(v265, v238);
      v241 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v242 = v265;
    }
    memcpy(v242, v237, v241);
LABEL_173:
    v4 = v261;
    v243 = v23[11];
    v244 = (void *)(v192 + v243);
    v245 = &v193[v243];
    v246 = sub_2365AFE88();
    v247 = *(_QWORD *)(v246 - 8);
    v248 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v247 + 48);
    v249 = v248(v244, 1, v246);
    v250 = v248(v245, 1, v246);
    if (v249)
    {
      v190 = v269;
      if (!v250)
      {
        (*(void (**)(void *, char *, uint64_t))(v247 + 32))(v244, v245, v246);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v244, 0, 1, v246);
        goto LABEL_158;
      }
    }
    else
    {
      v190 = v269;
      if (!v250)
      {
        (*(void (**)(void *, char *, uint64_t))(v247 + 40))(v244, v245, v246);
        goto LABEL_158;
      }
      (*(void (**)(void *, uint64_t))(v247 + 8))(v244, v246);
    }
    v202 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68) - 8) + 64);
    v203 = v244;
    v204 = v245;
    goto LABEL_146;
  }
  if (v195)
  {
LABEL_145:
    v202 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8) - 8) + 64);
    v203 = (void *)v192;
    v204 = v193;
LABEL_146:
    memcpy(v203, v204, v202);
    goto LABEL_158;
  }
  v268 = v190;
  *(_OWORD *)v192 = *(_OWORD *)v193;
  *(_BYTE *)(v192 + 16) = v193[16];
  v196 = v23[9];
  v197 = (void *)(v192 + v196);
  v198 = &v193[v196];
  v199 = sub_2365AFE1C();
  v200 = *(_QWORD *)(v199 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v198, 1, v199))
  {
    v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v200 + 32))(v197, v198, v199);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
  }
  v215 = v23[10];
  v216 = (void *)(v192 + v215);
  v217 = &v193[v215];
  v218 = sub_2365AFE4C();
  v219 = *(_QWORD *)(v218 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v219 + 48))(v217, 1, v218))
  {
    v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v219 + 32))(v216, v217, v218);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v219 + 56))(v216, 0, 1, v218);
  }
  v4 = v261;
  v221 = v23[11];
  v222 = (void *)(v192 + v221);
  v223 = &v193[v221];
  v224 = sub_2365AFE88();
  v225 = *(_QWORD *)(v224 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v225 + 48))(v223, 1, v224))
  {
    v226 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v225 + 32))(v222, v223, v224);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v225 + 56))(v222, 0, 1, v224);
  }
  v190 = v268;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v257 + 56))(v192, 0, 1, v23);
LABEL_158:
  v227 = *(int *)(v190 + 40);
  v228 = (_QWORD *)(v187 + v227);
  v229 = &v188[v227];
  v231 = *(_QWORD *)v229;
  v230 = *((_QWORD *)v229 + 1);
  *v228 = v231;
  v228[1] = v230;
  swift_bridgeObjectRelease();
  v232 = *(int *)(v266 + 48);
  *(_BYTE *)(a1 + *(int *)(v266 + 44)) = *((_BYTE *)v4 + *(int *)(v266 + 44));
  v233 = *(void **)(a1 + v232);
  *(_QWORD *)(a1 + v232) = *(_QWORD *)((char *)v4 + v232);

  return a1;
}

uint64_t sub_2364E8CAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2364E8CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  int v22;

  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = type metadata accessor for RapportTransport(0, v7, v8, a4);
  v11 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
  {
    v12 = v9;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    v14 = a1;
    return v13(v14, a2, v12);
  }
  v15 = type metadata accessor for MessagePacker(0, v7, v8, v10);
  v17 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v17 + 84) == (_DWORD)a2)
  {
    v12 = v15;
    v18 = *(int *)(a3 + 36);
LABEL_7:
    v14 = a1 + v18;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    return v13(v14, a2, v12);
  }
  v19 = type metadata accessor for MessageUnpacker(0, v7, v8, v16);
  v17 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v17 + 84) == (_DWORD)a2)
  {
    v12 = v19;
    v18 = *(int *)(a3 + 40);
    goto LABEL_7;
  }
  v21 = *(_QWORD *)(a1 + *(int *)(a3 + 48));
  if (v21 >= 0xFFFFFFFF)
    LODWORD(v21) = -1;
  v22 = v21 - 1;
  if (v22 < 0)
    v22 = -1;
  return (v22 + 1);
}

uint64_t sub_2364E8DB8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2364E8DC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v8 = *(_QWORD *)(a4 + 16);
  v9 = *(_QWORD *)(a4 + 24);
  v10 = type metadata accessor for RapportTransport(0, v8, v9, a4);
  v12 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v12 + 84) == a3)
  {
    v13 = v10;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v15 = a1;
    return v14(v15, a2, a2, v13);
  }
  v16 = type metadata accessor for MessagePacker(0, v8, v9, v11);
  v18 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v18 + 84) == a3)
  {
    v13 = v16;
    v19 = *(int *)(a4 + 36);
LABEL_7:
    v15 = a1 + v19;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    return v14(v15, a2, a2, v13);
  }
  result = type metadata accessor for MessageUnpacker(0, v8, v9, v17);
  v18 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v18 + 84) == a3)
  {
    v13 = result;
    v19 = *(int *)(a4 + 40);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 48)) = a2;
  return result;
}

uint64_t type metadata accessor for RapportTransport.Activated(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RapportTransport.Activated);
}

uint64_t sub_2364E8EC0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2364E8EC8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2364E8F18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2364E8FDC(uint64_t a1, int *a2)
{
  int v4;
  uint64_t v5;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)a2 + 15);
  *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
  *(_QWORD *)(a1 + 120) = v5;
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_2364E913C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  return a1;
}

uint64_t sub_2364E91F0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 129))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_2364E924C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 129) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_2364E92C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2364E9310 + 4 * byte_2365BC6C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2364E9344 + 4 * byte_2365BC6C0[v4]))();
}

uint64_t sub_2364E9344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364E934C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2364E9354);
  return result;
}

uint64_t sub_2364E9360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2364E9368);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2364E936C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364E9374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364E9380(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2364E93CC + 4 * byte_2365BC6CF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2364E9400 + 4 * byte_2365BC6CA[v4]))();
}

uint64_t sub_2364E9400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364E9408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2364E9410);
  return result;
}

uint64_t sub_2364E941C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2364E9424);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2364E9428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364E9430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364E9440()
{
  return swift_retain();
}

uint64_t sub_2364E9448()
{
  return sub_2364E10BC();
}

uint64_t sub_2364E9458(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2364E9440();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_2364E94A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_2364E9440();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_2364E10BC();
  return a1;
}

uint64_t sub_2364E94F4(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_2364E10BC();
  return a1;
}

uint64_t sub_2364E9538(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_2364E9580(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2364E95C4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2364E95CC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

void sub_2364E95D8()
{
  JUMPOUT(0x23B7F5164);
}

void sub_2364E95E8()
{
  JUMPOUT(0x23B7F5164);
}

void sub_2364E95F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = v4[2];
  v7 = v4[3];
  v8 = v4[5];
  v9 = type metadata accessor for RapportTransport.Activated(0, v6, v7, a4);
  sub_2364E0A6C(v8, a1, v9);
}

uint64_t sub_2364E9640()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_2364E96A4(uint64_t a1, int a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8) - 8) + 80);
  return sub_2364E0BFC(a1, a2, a3, v3 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_2364E9728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int *v13;
  unsigned int (*v14)(unint64_t, uint64_t, int *);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for MessageUnpacker(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = type metadata accessor for MessagePacker(0, v5, v6, v11);
  v36 = (v10 + *(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80);
  swift_release();
  v12 = v4 + v9 + *(int *)(v7 + 36);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v14 = *(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48);
  if (!v14(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    v15 = v12 + v13[9];
    v16 = sub_2365AFE1C();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v12 + v13[10];
    v19 = sub_2365AFE4C();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v12 + v13[11];
    v22 = sub_2365AFE88();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  swift_bridgeObjectRelease();
  sub_2364E10BC();
  swift_release();
  v24 = v4 + v36 + *(int *)(v35 + 36);
  if (!v14(v24, 1, v13))
  {
    swift_bridgeObjectRelease();
    v25 = v24 + v13[9];
    v26 = sub_2365AFE1C();
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v25, v26);
    v28 = v24 + v13[10];
    v29 = sub_2365AFE4C();
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(unint64_t, uint64_t))(v30 + 8))(v28, v29);
    v31 = v24 + v13[11];
    v32 = sub_2365AFE88();
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      (*(void (**)(unint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2364E9A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(v4 + 24);
  v11 = *(_QWORD *)(type metadata accessor for MessageUnpacker(0, v9, v10, a4) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MessagePacker(0, v9, v10, v14) - 8) + 80);
  return sub_2364DCBF4(a1, a2, a3, a4, v4 + v12, *(_QWORD *)(v4 + v13), *(_QWORD *)(v4 + v13 + 8), *(unsigned __int8 *)(v4 + v13 + 16), v4 + ((v13 + v15 + 17) & ~v15), v9, v10);
}

uint64_t sub_2364E9B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  unsigned int (*v10)(uint64_t, uint64_t, int *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for RapportTransport(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 32))
    swift_release();
  if (*(_QWORD *)(v7 + 48))
    swift_release();
  if (*(_QWORD *)(v7 + 64))
    swift_release();
  v8 = v7 + *(int *)(v5 + 56);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v11 = v8 + v9[9];
    v12 = sub_2365AFE1C();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v8 + v9[10];
    v15 = sub_2365AFE4C();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v8 + v9[11];
    v18 = sub_2365AFE88();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = v7 + *(int *)(v5 + 60);
  if (!v10(v20, 1, v9))
  {
    swift_bridgeObjectRelease();
    v21 = v20 + v9[9];
    v22 = sub_2365AFE1C();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v20 + v9[10];
    v25 = sub_2365AFE4C();
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v20 + v9[11];
    v28 = sub_2365AFE88();
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  return swift_deallocObject();
}

uint64_t sub_2364E9DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t (*v7)(void);

  result = type metadata accessor for RapportTransport(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
  v7 = *(uint64_t (**)(void))(v4 + ((v6 + 32) & ~v6) + 64);
  if (v7)
    return v7();
  return result;
}

uint64_t sub_2364E9DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  unsigned int (*v10)(uint64_t, uint64_t, int *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for RapportTransport(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);

  v7 = v4 + ((v6 + 40) & ~v6);
  swift_bridgeObjectRelease();

  if (*(_QWORD *)(v7 + 32))
    swift_release();
  if (*(_QWORD *)(v7 + 48))
    swift_release();
  if (*(_QWORD *)(v7 + 64))
    swift_release();
  v8 = v7 + *(int *)(v5 + 56);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v11 = v8 + v9[9];
    v12 = sub_2365AFE1C();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v8 + v9[10];
    v15 = sub_2365AFE4C();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v8 + v9[11];
    v18 = sub_2365AFE88();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = v7 + *(int *)(v5 + 60);
  if (!v10(v20, 1, v9))
  {
    swift_bridgeObjectRelease();
    v21 = v20 + v9[9];
    v22 = sub_2365AFE1C();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v20 + v9[10];
    v25 = sub_2365AFE4C();
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v20 + v9[11];
    v28 = sub_2365AFE88();
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  return swift_deallocObject();
}

id sub_2364EA0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RapportTransport(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  v6 = (v5 + 40) & ~v5;
  objc_msgSend(*(id *)(v4 + 32), sel_activate);
  return objc_msgSend(*(id *)(v4 + v6), sel_activateWithCompletion_, 0);
}

uint64_t sub_2364EA104()
{
  return swift_deallocObject();
}

uint64_t sub_2364EA114()
{
  uint64_t v0;

  return sub_236468C14(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2364EA11C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_2364EA140(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  sub_2364DF1F0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_2364EA148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int *v13;
  unsigned int (*v14)(unint64_t, uint64_t, int *);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  uint64_t v36;

  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(v4 + 40);
  v7 = type metadata accessor for MessageUnpacker(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = type metadata accessor for MessagePacker(0, v5, v6, v11);
  v35 = (*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) + v10 + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v12 = v4 + v9 + *(int *)(v7 + 36);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v14 = *(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48);
  if (!v14(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    v15 = v12 + v13[9];
    v16 = sub_2365AFE1C();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v12 + v13[10];
    v19 = sub_2365AFE4C();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v12 + v13[11];
    v22 = sub_2365AFE88();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2364E10BC();
  swift_release();
  v24 = v4 + v35 + *(int *)(v36 + 36);
  if (!v14(v24, 1, v13))
  {
    swift_bridgeObjectRelease();
    v25 = v24 + v13[9];
    v26 = sub_2365AFE1C();
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v25, v26);
    v28 = v24 + v13[10];
    v29 = sub_2365AFE4C();
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(unint64_t, uint64_t))(v30 + 8))(v28, v29);
    v31 = v24 + v13[11];
    v32 = sub_2365AFE88();
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      (*(void (**)(unint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2364EA488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = v4[4];
  v7 = v4[5];
  v8 = *(_QWORD *)(type metadata accessor for MessageUnpacker(0, v6, v7, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for MessagePacker(0, v6, v7, v12);
  v20 = v4[3];
  v21 = v4[2];
  v18 = (uint64_t)v4 + v9;
  v19 = v4[6];
  v13 = *(_QWORD *)((char *)v4 + v10);
  v14 = *(_QWORD *)((char *)v4 + v11);
  v15 = *(_QWORD *)((char *)v4 + v11 + 8);
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v16;
  *v16 = v5;
  v16[1] = sub_236477420;
  return sub_2364DCE74(a1, v21, v20, v19, v18, v13, v14, v15);
}

uint64_t sub_2364EA5C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = swift_bridgeObjectRetain();
  return sub_2364DE68C(v2, a1);
}

uint64_t sub_2364EA5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2364EA674(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 128);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_2364EA6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2364EA758()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2364EA784(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_2364DF3BC(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(void **)(v5 + 24));
}

uint64_t sub_2364EA78C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2364EA7B0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = (id)sub_2365B0038();
  objc_msgSend(v1, sel_deregisterRequestID_, v2);

}

void sub_2364EA7F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_2364DFA5C(a1, a2, a3, a4, a5, a6, *(void **)(v6 + 16), *(void **)(v6 + 24));
}

void sub_2364EA7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_236510158(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_2364EA808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_2364DFBB0(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_2364EA814()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2364EA848()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 16))(*(unsigned int *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

unint64_t sub_2364EA874()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563E8E18;
  if (!qword_2563E8E18)
  {
    v1 = sub_2365AFD38();
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_2563E8E18);
  }
  return result;
}

unint64_t sub_2364EA8BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563E8E28;
  if (!qword_2563E8E28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563E8E20);
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2563E8E28);
  }
  return result;
}

uint64_t sub_2364EA908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_2364DF904(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_2364EA910()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_2364EA93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_2364DF4E0(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t (*)(int, uint64_t, uint64_t), _QWORD *))(v4 + 16), *(_QWORD *)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t objectdestroy_67Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2364EA978(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_2364DF574(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_2364EA984()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_2364EA9C0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t static FeatureManager.shared.getter()
{
  type metadata accessor for FeatureManager();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for FeatureManager()
{
  return objc_opt_self();
}

uint64_t sub_2364EAA8C(char *a1)
{
  char v1;
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v1 = *a1;
  v5 = &type metadata for AppleIDSetupFeature;
  v6 = sub_2364EAAE0();
  v4[0] = v1;
  v2 = sub_2365AFA98();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_2364EAAE0()
{
  unint64_t result;

  result = qword_2542A7990;
  if (!qword_2542A7990)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for AppleIDSetupFeature, &type metadata for AppleIDSetupFeature);
    atomic_store(result, (unint64_t *)&qword_2542A7990);
  }
  return result;
}

uint64_t FeatureManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FeatureManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t FeatureFlagsKey.isFeatureEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v6[5];

  v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
  LOBYTE(v3) = sub_2365AFA98();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3 & 1;
}

uint64_t dispatch thunk of FeatureManagerProtocol.isFeatureEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for FeatureManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureManager.isFeatureEnabled(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t static ObjcUnarchiver.unarchivedObject<A>(assumingType:from:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 16))(a1, a2, a3, a4, a6, a5);
}

uint64_t dispatch thunk of ObjcArchiver.encoder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static ObjcArchiver.archivedData<A>(for:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of static ObjcUnarchiver.unarchivedObject<A>(ofType:from:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t AppleIDSetupFeature.isFeatureEnabled.getter()
{
  char *v0;
  char v1;
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v1 = *v0;
  v5 = &type metadata for AppleIDSetupFeature;
  v6 = sub_2364EAAE0();
  v4[0] = v1;
  v2 = sub_2365AFA98();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

const char *AppleIDSetupFeature.domain.getter()
{
  _BYTE *v0;

  if (*v0 == 6)
    return "AuthKit";
  else
    return "AppleIDSetup";
}

uint64_t AppleIDSetupFeature.feature.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_2364EACC4 + 4 * byte_2365BCAC0[*v0]))("PersonalizedChildSetupBuddy", 27);
}

const char *sub_2364EACC4()
{
  return "PersonalizedChildSetupSpyglass";
}

const char *sub_2364EACD8()
{
  return "ChildSetupSignIn";
}

const char *sub_2364EACEC()
{
  return "ProxAdvertisementOverride";
}

const char *sub_2364EAD00()
{
  return "Sandstone";
}

const char *sub_2364EAD14()
{
  return "SandstoneRepair";
}

const char *sub_2364EAD28()
{
  return "Dogfish";
}

BOOL static AppleIDSetupFeature.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AppleIDSetupFeature.hash(into:)()
{
  return sub_2365B09F8();
}

uint64_t AppleIDSetupFeature.hashValue.getter()
{
  sub_2365B09E0();
  sub_2365B09F8();
  return sub_2365B0A34();
}

unint64_t sub_2364EADC0()
{
  unint64_t result;

  result = qword_2563E8ED0;
  if (!qword_2563E8ED0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for AppleIDSetupFeature, &type metadata for AppleIDSetupFeature);
    atomic_store(result, (unint64_t *)&qword_2563E8ED0);
  }
  return result;
}

const char *sub_2364EAE04()
{
  _BYTE *v0;

  if (*v0 == 6)
    return "AuthKit";
  else
    return "AppleIDSetup";
}

uint64_t sub_2364EAE34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_2364EAE5C + 4 * byte_2365BCAC7[*v0]))("PersonalizedChildSetupBuddy", 27);
}

const char *sub_2364EAE5C()
{
  return "PersonalizedChildSetupSpyglass";
}

const char *sub_2364EAE70()
{
  return "ChildSetupSignIn";
}

const char *sub_2364EAE84()
{
  return "ProxAdvertisementOverride";
}

const char *sub_2364EAE98()
{
  return "Sandstone";
}

const char *sub_2364EAEAC()
{
  return "SandstoneRepair";
}

const char *sub_2364EAEC0()
{
  return "Dogfish";
}

uint64_t getEnumTagSinglePayload for AppleIDSetupFeature(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AppleIDSetupFeature(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2364EAFB0 + 4 * byte_2365BCAD3[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2364EAFE4 + 4 * byte_2365BCACE[v4]))();
}

uint64_t sub_2364EAFE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364EAFEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2364EAFF4);
  return result;
}

uint64_t sub_2364EB000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2364EB008);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2364EB00C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364EB014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppleIDSetupFeature()
{
  return &type metadata for AppleIDSetupFeature;
}

uint64_t storeEnumTagSinglePayload for AppleAccountFeature(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2364EB070 + 4 * byte_2365BCAD8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2364EB090 + 4 * byte_2365BCADD[v4]))();
}

_BYTE *sub_2364EB070(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2364EB090(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2364EB098(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2364EB0A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2364EB0A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2364EB0B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AppleAccountFeature()
{
  return &type metadata for AppleAccountFeature;
}

unint64_t sub_2364EB0D0()
{
  unint64_t result;

  result = qword_2563E8ED8;
  if (!qword_2563E8ED8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BCC14, &type metadata for AppleAccountFeature);
    atomic_store(result, (unint64_t *)&qword_2563E8ED8);
  }
  return result;
}

const char *sub_2364EB114()
{
  return "AppleAccount";
}

const char *sub_2364EB128()
{
  return "AABranding";
}

void static DiscoveryModel.CodeType.platformDefault.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 2;
}

__n128 DiscoveryModel.Discovering.init(allowsManual:selectedManual:pairingState:)@<Q0>(char a1@<W0>, char a2@<W1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4;
  unsigned __int8 v5;
  __n128 result;

  v4 = a3[1].n128_u64[0];
  v5 = a3[1].n128_u8[8];
  *(_BYTE *)a4 = a1;
  *(_BYTE *)(a4 + 1) = a2;
  result = *a3;
  *(__n128 *)(a4 + 8) = *a3;
  *(_QWORD *)(a4 + 24) = v4;
  *(_BYTE *)(a4 + 32) = v5;
  return result;
}

__n128 DiscoveryModel.init(role:flowKind:state:fixedPin:targetAuthTag:codeType:altDSID:symptomReport:shouldSkipConfirmation:name:)@<Q0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15)
{
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __n128 result;
  __int128 v22;

  v15 = *a1;
  v16 = *a2;
  v17 = *(_BYTE *)(a3 + 48);
  v18 = *a8;
  v19 = *((_BYTE *)a8 + 8);
  *(_BYTE *)a9 = v16;
  *(_BYTE *)(a9 + 1) = v15;
  *(_QWORD *)(a9 + 8) = a6;
  *(_QWORD *)(a9 + 16) = a7;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = v18;
  *(_BYTE *)(a9 + 48) = v19;
  *(_BYTE *)(a9 + 49) = a13;
  *(_QWORD *)(a9 + 56) = a10;
  *(_QWORD *)(a9 + 64) = a11;
  v20 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 72) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 88) = v20;
  *(_OWORD *)(a9 + 104) = *(_OWORD *)(a3 + 32);
  *(_BYTE *)(a9 + 120) = v17;
  result = *(__n128 *)a12;
  v22 = *(_OWORD *)(a12 + 16);
  *(_OWORD *)(a9 + 128) = *(_OWORD *)a12;
  *(_OWORD *)(a9 + 144) = v22;
  *(_QWORD *)(a9 + 160) = a14;
  *(_QWORD *)(a9 + 168) = a15;
  return result;
}

void sub_2364EB1E0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v23 = a3;
  v5 = type metadata accessor for IdMSAccount();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  v12 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  v16 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    sub_236487DD0(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v6 + 72) * i, (uint64_t)v11);
    sub_236487E14((uint64_t)v11, (uint64_t)v9);
    if ((sub_2364EF5E0((uint64_t)a2, *(_QWORD *)&v9[*(int *)(v5 + 28)]) & 1) != 0)
    {
      swift_release();
      v22 = v23;
      sub_236487E14((uint64_t)v9, v23);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v22, 0, 1, v5);
LABEL_26:

      return;
    }
    sub_2364A533C((uint64_t)v9);
    if (v15)
      goto LABEL_4;
LABEL_5:
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v19 >= v24)
      goto LABEL_25;
    v20 = *(_QWORD *)(v12 + 8 * v19);
    ++v16;
    if (v20)
      goto LABEL_20;
    v16 = v19 + 1;
    if (v19 + 1 >= v24)
      goto LABEL_25;
    v20 = *(_QWORD *)(v12 + 8 * v16);
    if (v20)
      goto LABEL_20;
    v16 = v19 + 2;
    if (v19 + 2 >= v24)
      goto LABEL_25;
    v20 = *(_QWORD *)(v12 + 8 * v16);
    if (v20)
      goto LABEL_20;
    v16 = v19 + 3;
    if (v19 + 3 >= v24)
      goto LABEL_25;
    v20 = *(_QWORD *)(v12 + 8 * v16);
    if (v20)
      goto LABEL_20;
    v21 = v19 + 4;
    if (v21 >= v24)
    {
LABEL_25:
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v23, 1, 1, v5);
      goto LABEL_26;
    }
    v20 = *(_QWORD *)(v12 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v16 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_28;
        if (v16 >= v24)
          goto LABEL_25;
        v20 = *(_QWORD *)(v12 + 8 * v16);
        ++v21;
        if (v20)
          goto LABEL_20;
      }
    }
    v16 = v21;
LABEL_20:
    v15 = (v20 - 1) & v20;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void DiscoveryModel.flowKind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DiscoveryModel.flowKind.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DiscoveryModel.flowKind.modify())()
{
  return nullsub_1;
}

void DiscoveryModel.role.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

uint64_t DiscoveryModel.targetAuthTag.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryModel.fixedPin.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void DiscoveryModel.codeType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t DiscoveryModel.shouldSkipConfirmation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t DiscoveryModel.altDSID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryModel.altDSID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*DiscoveryModel.altDSID.modify())()
{
  return nullsub_1;
}

void DiscoveryModel.state.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_QWORD *)(v1 + 104);
  v7 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(unsigned __int8 *)(v1 + 120);
  *(_BYTE *)(a1 + 48) = v8;
  sub_236499B30(v2, v3, v4, v5, v6, v7, v8);
}

__n128 DiscoveryModel.state.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v4 = *((_BYTE *)a1 + 48);
  sub_236498B50(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(unsigned __int8 *)(v1 + 120));
  *(_OWORD *)(v1 + 72) = v7;
  result = v6;
  *(__n128 *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 104) = v2;
  *(_QWORD *)(v1 + 112) = v3;
  *(_BYTE *)(v1 + 120) = v4;
  return result;
}

uint64_t (*DiscoveryModel.state.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.symptomReport.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[16];
  v3 = v1[17];
  v4 = v1[18];
  v5 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_236485214(v2, v3);
}

__n128 DiscoveryModel.symptomReport.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_236484E1C(v1[16], v1[17]);
  result = v5;
  *((__n128 *)v1 + 8) = v5;
  v1[18] = v2;
  v1[19] = v3;
  return result;
}

uint64_t (*DiscoveryModel.symptomReport.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryModel.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = a2;
  return result;
}

uint64_t (*DiscoveryModel.name.modify())()
{
  return nullsub_1;
}

BOOL static DiscoveryModel.FlowKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL static DiscoveryModel.Role.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DiscoveryModel.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(unsigned __int8 *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 88);
  v13 = *(_QWORD *)(v1 + 80);
  v14 = *(unsigned __int8 *)(v1 + 120);
  v15 = *(_QWORD *)(v1 + 72);
  v16 = *(_QWORD *)(v1 + 136);
  v12 = *(_QWORD *)(v1 + 128);
  v11 = *(_QWORD *)(v1 + 152);
  v17 = *(_QWORD *)(v1 + 168);
  sub_2365B09F8();
  sub_2365B09F8();
  if (v3)
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    sub_2365B0A04();
    if (v4)
    {
LABEL_3:
      sub_2365B0A04();
      swift_bridgeObjectRetain();
      sub_2365B008C();
      swift_bridgeObjectRelease();
      if (v5)
        goto LABEL_4;
LABEL_8:
      sub_2365B09F8();
      v8 = v16;
      goto LABEL_10;
    }
  }
  sub_2365B0A04();
  if (!v5)
    goto LABEL_8;
LABEL_4:
  if (v5 == 1)
    goto LABEL_8;
  v8 = v16;
LABEL_10:
  sub_2365B09F8();
  sub_2365B0A04();
  sub_2365B0A04();
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
  }
  v9 = (v14 >> 3) & 3;
  if (!v9)
  {
    sub_2365B09F8();
    sub_2365B0A04();
    if ((v15 & 0xFF00) == 0x200)
      goto LABEL_22;
LABEL_21:
    sub_2365B0A04();
    goto LABEL_22;
  }
  if (v9 != 1)
  {
    sub_2365B09F8();
    if (v8)
      goto LABEL_23;
    goto LABEL_19;
  }
  sub_2365B09F8();
  swift_bridgeObjectRetain();
  sub_236483294(a1, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2364830F0((uint64_t)a1, v13);
  swift_bridgeObjectRelease();
  if (v7 != 2)
    goto LABEL_21;
LABEL_22:
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
  if (v8)
  {
LABEL_23:
    sub_2365B0A04();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    sub_236483B50((uint64_t)a1, v11);
    sub_236484E1C(v12, v8);
    if (v17)
      goto LABEL_24;
    return sub_2365B0A04();
  }
LABEL_19:
  sub_2365B0A04();
  if (!v17)
    return sub_2365B0A04();
LABEL_24:
  sub_2365B0A04();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2364EBACC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2364EBB00 + 4 * byte_2365BCC70[a1]))(0x646E694B776F6C66, 0xE800000000000000);
}

uint64_t sub_2364EBB00()
{
  return 1701605234;
}

uint64_t sub_2364EBB10()
{
  return 0x7541746567726174;
}

uint64_t sub_2364EBB34()
{
  return 0x6E69506465786966;
}

uint64_t sub_2364EBB48()
{
  return 0x6570795465646F63;
}

unint64_t sub_2364EBB5C()
{
  return 0xD000000000000016;
}

uint64_t sub_2364EBB78()
{
  return 0x44495344746C61;
}

uint64_t sub_2364EBB90()
{
  return 0x6574617473;
}

uint64_t sub_2364EBBA4()
{
  return 0x526D6F74706D7973;
}

uint64_t sub_2364EBBC8()
{
  return 1701667182;
}

uint64_t sub_2364EBBD8()
{
  unsigned __int8 *v0;

  return sub_2364EBACC(*v0);
}

uint64_t sub_2364EBBE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2364F6B80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2364EBC04()
{
  sub_2364F30BC();
  return sub_2365B0AD0();
}

uint64_t sub_2364EBC2C()
{
  sub_2364F30BC();
  return sub_2365B0ADC();
}

uint64_t DiscoveryModel.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  int v44;
  char v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8EE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v44 = v1[1];
  v8 = *((_QWORD *)v1 + 1);
  v34 = *((_QWORD *)v1 + 2);
  v35 = v8;
  v9 = *((_QWORD *)v1 + 3);
  v32 = *((_QWORD *)v1 + 4);
  v33 = v9;
  v29 = *((_QWORD *)v1 + 5);
  v30 = v1[48];
  v28 = v1[49];
  v10 = *((_QWORD *)v1 + 8);
  v26 = *((_QWORD *)v1 + 7);
  v27 = v10;
  v19 = *((_QWORD *)v1 + 9);
  v20 = *((_QWORD *)v1 + 10);
  v21 = *((_QWORD *)v1 + 11);
  v22 = *((_QWORD *)v1 + 12);
  v11 = *((_QWORD *)v1 + 13);
  v24 = *((_QWORD *)v1 + 14);
  v25 = v11;
  v23 = v1[120];
  v15 = *((_QWORD *)v1 + 16);
  v16 = *((_QWORD *)v1 + 17);
  v17 = *((_QWORD *)v1 + 18);
  v18 = *((_QWORD *)v1 + 19);
  v12 = *((_QWORD *)v1 + 21);
  v31 = *((_QWORD *)v1 + 20);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F30BC();
  sub_2365B0AAC();
  LOBYTE(v37) = v7;
  v45 = 0;
  sub_2364F3100();
  v13 = v36;
  sub_2365B0824();
  if (!v13)
  {
    v36 = v12;
    LOBYTE(v37) = v44;
    v45 = 1;
    sub_2364F3144();
    sub_2365B0824();
    LOBYTE(v37) = 2;
    sub_2365B07C4();
    LOBYTE(v37) = 3;
    sub_2365B07C4();
    v37 = v29;
    LOBYTE(v38) = v30;
    v45 = 4;
    sub_2364F3188();
    sub_2365B0824();
    LOBYTE(v37) = 5;
    sub_2365B080C();
    LOBYTE(v37) = 6;
    sub_2365B07C4();
    v37 = v19;
    v38 = v20;
    v39 = v21;
    v40 = v22;
    v41 = v25;
    v42 = v24;
    v43 = v23;
    v45 = 7;
    sub_2364F31CC();
    sub_2365B0824();
    v37 = v15;
    v38 = v16;
    v39 = v17;
    v40 = v18;
    v45 = 8;
    sub_23648518C();
    sub_2365B07E8();
    LOBYTE(v37) = 9;
    sub_2365B07C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DiscoveryModel.hashValue.getter()
{
  __int128 v1[4];

  sub_2365B09E0();
  DiscoveryModel.hash(into:)(v1);
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  char v79;
  int v80;
  __int16 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  _BYTE v90[7];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  _BYTE v98[11];
  __int16 v99;
  uint64_t v100;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2364F30BC();
  sub_2365B0A7C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    v100 = v2;
    swift_bridgeObjectRelease();
    v13 = 0;
    v14 = 0;
LABEL_4:
    sub_236484E1C(v13, v14);
    return swift_bridgeObjectRelease();
  }
  LOBYTE(v62) = 0;
  sub_2364F3210();
  sub_2365B0770();
  v10 = v73;
  LOBYTE(v62) = 1;
  sub_2364F3254();
  sub_2365B0770();
  v11 = v73;
  LOBYTE(v73) = 2;
  v52 = sub_2365B0710();
  v53 = v11;
  LOBYTE(v73) = 3;
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_2365B0710();
  v59 = v16;
  v51 = v17;
  LOBYTE(v62) = 4;
  v19 = v18;
  sub_2364F3298();
  swift_bridgeObjectRetain();
  sub_2365B0770();
  v58 = v19;
  v50 = v73;
  LODWORD(v19) = v74;
  LOBYTE(v73) = 5;
  v48 = sub_2365B0758();
  v49 = v19;
  LOBYTE(v73) = 6;
  v20 = sub_2365B0710();
  v22 = v21;
  v47 = v20;
  LOBYTE(v62) = 7;
  sub_2364F32DC();
  swift_bridgeObjectRetain();
  sub_2365B0770();
  v43 = v10;
  v45 = v22;
  v23 = v77;
  LODWORD(v22) = v78;
  LOBYTE(v62) = 8;
  v56 = v73;
  v57 = v74;
  v46 = v75;
  v44 = v76;
  sub_236499B30(v73, v74, *((uint64_t *)&v74 + 1), v75, v76, v77, v78);
  sub_2364854A0();
  sub_2365B0734();
  v54 = v22;
  v55 = v23;
  v100 = 0;
  v13 = v73;
  v24 = *((_QWORD *)&v74 + 1);
  v14 = v74;
  v97 = 9;
  v60 = v75;
  sub_236485214(v73, v74);
  v25 = v100;
  v42 = sub_2365B0710();
  v100 = v25;
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_236484E1C(v13, v14);
    v27 = v46;
    v28 = v44;
    sub_236498B50(v56, v57, *((uint64_t *)&v57 + 1), v46, v44, v55, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_236498B50(v56, v57, *((uint64_t *)&v57 + 1), v27, v28, v55, v54);
    goto LABEL_4;
  }
  v29 = v26;
  v48 &= 1u;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  LOBYTE(v62) = v43;
  BYTE1(v62) = v53;
  *((_QWORD *)&v62 + 1) = v52;
  *(_QWORD *)&v63 = v59;
  *((_QWORD *)&v63 + 1) = v51;
  *(_QWORD *)&v64 = v58;
  *((_QWORD *)&v64 + 1) = v50;
  LOBYTE(v65) = v49;
  BYTE1(v65) = v48;
  v30 = v44;
  *((_QWORD *)&v65 + 1) = v47;
  *(_QWORD *)&v66 = v45;
  *((_QWORD *)&v66 + 1) = v56;
  v67 = v57;
  *(_QWORD *)&v68 = v46;
  *((_QWORD *)&v68 + 1) = v44;
  *(_QWORD *)&v69 = v55;
  v31 = v54;
  BYTE8(v69) = v54;
  *(_QWORD *)&v70 = v13;
  *((_QWORD *)&v70 + 1) = v14;
  *(_QWORD *)&v71 = v24;
  *((_QWORD *)&v71 + 1) = v60;
  *(_QWORD *)&v72 = v42;
  *((_QWORD *)&v72 + 1) = v29;
  v41 = v29;
  sub_236499A64((uint64_t)&v62);
  swift_bridgeObjectRelease();
  sub_236484E1C(v13, v14);
  sub_236498B50(v56, v57, *((uint64_t *)&v57 + 1), v46, v30, v55, v31);
  v32 = v59;
  swift_bridgeObjectRelease();
  v33 = v58;
  swift_bridgeObjectRelease();
  v34 = v45;
  swift_bridgeObjectRelease();
  v35 = v71;
  a2[8] = v70;
  a2[9] = v35;
  a2[10] = v72;
  v36 = v67;
  a2[4] = v66;
  a2[5] = v36;
  v37 = v69;
  a2[6] = v68;
  a2[7] = v37;
  v38 = v63;
  *a2 = v62;
  a2[1] = v38;
  v39 = v65;
  a2[2] = v64;
  a2[3] = v39;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  LOBYTE(v73) = v43;
  BYTE1(v73) = v53;
  *(_QWORD *)&v74 = v52;
  *((_QWORD *)&v74 + 1) = v32;
  v75 = v51;
  v76 = v33;
  v77 = v50;
  v78 = v49;
  v79 = v48;
  v80 = *(_DWORD *)&v98[7];
  v81 = v99;
  v82 = v47;
  v83 = v34;
  v84 = v56;
  v85 = v57;
  v86 = v46;
  v87 = v30;
  v88 = v55;
  v89 = v54;
  *(_DWORD *)&v90[3] = *(_DWORD *)&v98[3];
  *(_DWORD *)v90 = *(_DWORD *)v98;
  v91 = v13;
  v92 = v14;
  v93 = v24;
  v94 = v60;
  v95 = v42;
  v96 = v41;
  return sub_236498A84((uint64_t)&v73);
}

uint64_t sub_2364EC860@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return DiscoveryModel.init(from:)(a1, a2);
}

uint64_t sub_2364EC874(_QWORD *a1)
{
  return DiscoveryModel.encode(to:)(a1);
}

uint64_t sub_2364EC88C()
{
  __int128 v1[4];

  sub_2365B09E0();
  DiscoveryModel.hash(into:)(v1);
  return sub_2365B0A34();
}

uint64_t sub_2364EC8CC()
{
  __int128 v1[4];

  sub_2365B09E0();
  DiscoveryModel.hash(into:)(v1);
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.Role.hash(into:)()
{
  return sub_2365B09F8();
}

uint64_t sub_2364EC92C()
{
  sub_2364F33A8();
  return sub_2365B0AD0();
}

uint64_t sub_2364EC954()
{
  sub_2364F33A8();
  return sub_2365B0ADC();
}

uint64_t sub_2364EC97C()
{
  _BYTE *v0;

  if (*v0)
    return 0x726576726573;
  else
    return 0x746E65696C63;
}

uint64_t sub_2364EC9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2364F6FA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2364EC9CC()
{
  sub_2364F3320();
  return sub_2365B0AD0();
}

uint64_t sub_2364EC9F4()
{
  sub_2364F3320();
  return sub_2365B0ADC();
}

uint64_t sub_2364ECA1C()
{
  sub_2364F3364();
  return sub_2365B0AD0();
}

uint64_t sub_2364ECA44()
{
  sub_2364F3364();
  return sub_2365B0ADC();
}

uint64_t DiscoveryModel.Role.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F38);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F40);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F48);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F3320();
  sub_2365B0AAC();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_2364F3364();
    sub_2365B07B8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_2364F33A8();
    sub_2365B07B8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t DiscoveryModel.Role.hashValue.getter()
{
  sub_2365B09E0();
  sub_2365B09F8();
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.Role.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F68);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F70);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F78);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F3320();
  v11 = v33;
  sub_2365B0A7C();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_2365B07A0();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_2365B05B4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v21 = &type metadata for DiscoveryModel.Role;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_2364F3364();
    sub_2365B06F8();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_2364F33A8();
    v22 = v6;
    sub_2365B06F8();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_2364ECFDC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DiscoveryModel.Role.init(from:)(a1, a2);
}

uint64_t sub_2364ECFF0(_QWORD *a1)
{
  return DiscoveryModel.Role.encode(to:)(a1);
}

uint64_t DiscoveryModel.FlowKind.hash(into:)()
{
  return sub_2365B09F8();
}

uint64_t sub_2364ED02C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726961706572;
  if (*v0 != 1)
    v1 = 0x646578696DLL;
  if (*v0)
    return v1;
  else
    return 0x7075746573;
}

uint64_t sub_2364ED07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2364F7088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2364ED0A0()
{
  sub_2364F33EC();
  return sub_2365B0AD0();
}

uint64_t sub_2364ED0C8()
{
  sub_2364F33EC();
  return sub_2365B0ADC();
}

uint64_t sub_2364ED0F0()
{
  sub_2364F3430();
  return sub_2365B0AD0();
}

uint64_t sub_2364ED118()
{
  sub_2364F3430();
  return sub_2365B0ADC();
}

uint64_t sub_2364ED140()
{
  sub_2364F3474();
  return sub_2365B0AD0();
}

uint64_t sub_2364ED168()
{
  sub_2364F3474();
  return sub_2365B0ADC();
}

uint64_t sub_2364ED190()
{
  sub_2364F34B8();
  return sub_2365B0AD0();
}

uint64_t sub_2364ED1B8()
{
  sub_2364F34B8();
  return sub_2365B0ADC();
}

uint64_t DiscoveryModel.FlowKind.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F80);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F88);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F90);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8F98);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F33EC();
  sub_2365B0AAC();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2364F3474();
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_2364F3430();
      v16 = v21;
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_2364F34B8();
    sub_2365B07B8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t DiscoveryModel.FlowKind.hashValue.getter()
{
  sub_2365B09E0();
  sub_2365B09F8();
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.FlowKind.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8FC0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8FC8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8FD0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8FD8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F33EC();
  v13 = v41;
  sub_2365B0A7C();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_2365B07A0();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_2365B05B4();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v25 = &type metadata for DiscoveryModel.FlowKind;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2364F3474();
      v20 = v9;
      sub_2365B06F8();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_2364F3430();
      v28 = v15;
      sub_2365B06F8();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_2364F34B8();
    sub_2365B06F8();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_2364ED8CC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DiscoveryModel.FlowKind.init(from:)(a1, a2);
}

uint64_t sub_2364ED8E0(_QWORD *a1)
{
  return DiscoveryModel.FlowKind.encode(to:)(a1);
}

void DiscoveryModel.State.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = (*(unsigned __int8 *)(v1 + 48) >> 3) & 3;
  if (!v6)
  {
    sub_2365B09F8();
    sub_2365B0A04();
    if ((v4 & 0xFF00) == 0x200)
      goto LABEL_9;
    goto LABEL_8;
  }
  if (v6 != 1)
  {
    sub_2365B09F8();
    return;
  }
  sub_2365B09F8();
  swift_bridgeObjectRetain();
  sub_236483294(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2364830F0((uint64_t)a1, v3);
  swift_bridgeObjectRelease();
  if (v5 != 2)
LABEL_8:
    sub_2365B0A04();
LABEL_9:
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
}

uint64_t sub_2364EDA50()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646572696170;
  if (*v0 == 1)
    v1 = 0x7265766F63736964;
  if (*v0)
    return v1;
  else
    return 0x7265766F63736964;
}

uint64_t sub_2364EDAA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2364F71C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2364EDAC8()
{
  sub_2364F34FC();
  return sub_2365B0AD0();
}

uint64_t sub_2364EDAF0()
{
  sub_2364F34FC();
  return sub_2365B0ADC();
}

uint64_t sub_2364EDB18()
{
  sub_2364F3584();
  return sub_2365B0AD0();
}

uint64_t sub_2364EDB40()
{
  sub_2364F3584();
  return sub_2365B0ADC();
}

uint64_t sub_2364EDB68()
{
  sub_2364F360C();
  return sub_2365B0AD0();
}

uint64_t sub_2364EDB90()
{
  sub_2364F360C();
  return sub_2365B0ADC();
}

uint64_t sub_2364EDBB8()
{
  sub_2364F3540();
  return sub_2365B0AD0();
}

uint64_t sub_2364EDBE0()
{
  sub_2364F3540();
  return sub_2365B0ADC();
}

void DiscoveryModel.State.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;

  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8FE0);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v39 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8FE8);
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v44 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8FF0);
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8FF8);
  v51 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)v1;
  v11 = *(_QWORD *)(v1 + 8);
  v12 = *(_QWORD *)(v1 + 24);
  v48 = *(_QWORD *)(v1 + 16);
  v49 = v12;
  v47 = *(_QWORD *)(v1 + 32);
  v50 = *(_QWORD *)(v1 + 40);
  v13 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F34FC();
  v14 = v13;
  sub_2365B0AAC();
  v15 = (v13 >> 3) & 3;
  if (!v15)
  {
    v46 = v10 >> 8;
    v38 = v10;
    LOBYTE(v52) = 0;
    v29 = v11;
    v30 = v11;
    v37 = v11;
    v32 = v48;
    v31 = v49;
    v33 = v47;
    sub_236499BC0(v29, v48, v49, v47);
    sub_2364F360C();
    sub_2365B07B8();
    LOBYTE(v52) = v10 & 1;
    BYTE1(v52) = v46;
    v53 = v30;
    v54 = v32;
    v55 = v31;
    LOBYTE(v56) = v33;
    sub_2364F3650();
    v34 = v42;
    sub_2365B0824();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v34);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v59);
    v23 = v38;
    v24 = v37;
    v25 = v32;
    v26 = v31;
    v27 = v33;
    v28 = v50;
    goto LABEL_5;
  }
  if (v15 == 1)
  {
    v16 = v13 & 0xE7;
    LOBYTE(v52) = 1;
    v38 = v10;
    swift_bridgeObjectRetain();
    v37 = v11;
    swift_bridgeObjectRetain();
    v17 = v49;
    v18 = v47;
    sub_236499BC0(v49, v47, v50, v13 & 0xE7);
    sub_2364F3584();
    v19 = v44;
    sub_2365B07B8();
    v52 = v10;
    v53 = v11;
    v20 = v48;
    LOBYTE(v54) = v48;
    v55 = v17;
    v56 = v18;
    v21 = v50;
    v57 = v50;
    v58 = v16;
    sub_2364F35C8();
    v22 = v46;
    sub_2365B0824();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v22);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v59);
    v23 = v38;
    v24 = v37;
    v25 = v20;
    v26 = v49;
    v27 = v18;
    v28 = v21;
LABEL_5:
    sub_236498B50(v23, v24, v25, v26, v27, v28, v14);
    return;
  }
  LOBYTE(v52) = 2;
  sub_2364F3540();
  v35 = v39;
  v36 = v59;
  sub_2365B07B8();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v43);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v36);
}

uint64_t DiscoveryModel.State.hashValue.getter()
{
  uint64_t v0;
  char v1;
  __int128 v2;
  _QWORD v4[15];
  char v5;

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  *(_OWORD *)&v4[11] = v2;
  *(_OWORD *)&v4[13] = *(_OWORD *)(v0 + 32);
  v5 = v1;
  sub_2365B09E0();
  DiscoveryModel.State.hash(into:)((__int128 *)v4);
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char v53;
  uint64_t v54;

  v43 = a2;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9030);
  v41 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9038);
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9040);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9048);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_2364F34FC();
  v14 = v54;
  sub_2365B0A7C();
  if (v14)
    goto LABEL_7;
  v38 = v5;
  v39 = v6;
  v16 = v44;
  v15 = v45;
  v17 = v46;
  v54 = v10;
  v18 = sub_2365B07A0();
  v19 = v9;
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v22 = sub_2365B05B4();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v24 = &type metadata for DiscoveryModel.State;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v19);
LABEL_7:
    v25 = (uint64_t)v47;
    return __swift_destroy_boxed_opaque_existential_1(v25);
  }
  v20 = v54;
  if (*(_BYTE *)(v18 + 32))
  {
    if (*(_BYTE *)(v18 + 32) == 1)
    {
      LOBYTE(v48) = 1;
      sub_2364F3584();
      v21 = v12;
      sub_2365B06F8();
      sub_2364F3694();
      v29 = v40;
      sub_2365B0770();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v29);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v19);
      v31 = v48;
      v30 = v49;
      v32 = v50;
      v33 = v51;
      v34 = v52;
      v35 = v53 | 8;
    }
    else
    {
      LOBYTE(v48) = 2;
      sub_2364F3540();
      sub_2365B06F8();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v17);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v19);
      v31 = 0;
      v30 = 0;
      v32 = 0;
      v33 = 0;
      v34 = 0uLL;
      v35 = 16;
    }
    v25 = (uint64_t)v47;
    v28 = v43;
  }
  else
  {
    LOBYTE(v48) = 0;
    sub_2364F360C();
    v27 = v8;
    sub_2365B06F8();
    v28 = v43;
    sub_2364F36D8();
    v36 = v38;
    sub_2365B0770();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v36);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v19);
    v35 = 0;
    v30 = v49;
    v32 = v50;
    v33 = v51;
    v31 = v48 | ((unint64_t)BYTE1(v48) << 8);
    v34 = v52;
    v25 = (uint64_t)v47;
  }
  *(_QWORD *)v28 = v31;
  *(_QWORD *)(v28 + 8) = v30;
  *(_QWORD *)(v28 + 16) = v32;
  *(_QWORD *)(v28 + 24) = v33;
  *(_OWORD *)(v28 + 32) = v34;
  *(_BYTE *)(v28 + 48) = v35;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

uint64_t sub_2364EE5A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.State.init(from:)(a1, a2);
}

void sub_2364EE5BC(_QWORD *a1)
{
  DiscoveryModel.State.encode(to:)(a1);
}

uint64_t sub_2364EE5D4()
{
  uint64_t v0;
  char v1;
  __int128 v2;
  _QWORD v4[15];
  char v5;

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  *(_OWORD *)&v4[11] = v2;
  *(_OWORD *)&v4[13] = *(_OWORD *)(v0 + 32);
  v5 = v1;
  sub_2365B09E0();
  DiscoveryModel.State.hash(into:)((__int128 *)v4);
  return sub_2365B0A34();
}

uint64_t sub_2364EE630()
{
  uint64_t v0;
  char v1;
  __int128 v2;
  _QWORD v4[15];
  char v5;

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  *(_OWORD *)&v4[11] = v2;
  *(_OWORD *)&v4[13] = *(_OWORD *)(v0 + 32);
  v5 = v1;
  sub_2365B09E0();
  DiscoveryModel.State.hash(into:)((__int128 *)v4);
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.Discovering.allowsManual.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DiscoveryModel.Discovering.selectedManual.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t DiscoveryModel.Discovering.selectedManual.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*DiscoveryModel.Discovering.selectedManual.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.Discovering.pairingState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_236499BC0(v2, v3, v4, v5);
}

__n128 DiscoveryModel.Discovering.pairingState.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  sub_236498BE0(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  result = v5;
  *(__n128 *)(v1 + 8) = v5;
  *(_QWORD *)(v1 + 24) = v2;
  *(_BYTE *)(v1 + 32) = v3;
  return result;
}

uint64_t (*DiscoveryModel.Discovering.pairingState.modify())()
{
  return nullsub_1;
}

void static DiscoveryModel.PairingState.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

BOOL sub_2364EE784()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _BOOL8 result;

  if (v1 < 0x20)
  {
    if (v5 == v4 && v6 == v7)
    {
      sub_236499BC0(v5, v6, v0, v1);
      sub_236499BC0(v5, v6, v2, v3);
      sub_236498BE0(v5, v6, v2, v3);
      sub_236498BE0(v5, v6, v0, v1);
    }
    else
    {
      v9 = sub_2365B08CC();
      sub_236499BC0(v4, v7, v0, v1);
      sub_236499BC0(v5, v6, v2, v3);
      sub_236498BE0(v5, v6, v2, v3);
      sub_236498BE0(v4, v7, v0, v1);
      result = 0;
      if ((v9 & 1) == 0)
        return result;
    }
    if (v3)
    {
      if (v3 != 1)
      {
        if (v2)
        {
          if (v2 == 1)
          {
            if (v1 != 2 || v0 != 1)
              return 0;
          }
          else if (v1 != 2 || v0 != 2)
          {
            return 0;
          }
        }
        else if (v1 != 2 || v0)
        {
          return 0;
        }
        return 1;
      }
      if (v1 != 1)
        return 0;
    }
    else if (v1)
    {
      return 0;
    }
    return v2 == v0;
  }
  swift_bridgeObjectRetain();
  sub_236499BC0(v4, v7, v0, v1);
  sub_236498BE0(v5, v6, v2, v3);
  sub_236498BE0(v4, v7, v0, v1);
  return 0;
}

void DiscoveryModel.Discovering.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 1);
  sub_2365B0A04();
  if (v1 != 2)
    sub_2365B0A04();
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
}

uint64_t sub_2364EEE38()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x64657463656C6573;
  if (*v0 != 1)
    v1 = 0x53676E6972696170;
  if (*v0)
    return v1;
  else
    return 0x614D73776F6C6C61;
}

uint64_t sub_2364EEEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2364F732C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2364EEED4()
{
  sub_2364F3744();
  return sub_2365B0AD0();
}

uint64_t sub_2364EEEFC()
{
  sub_2364F3744();
  return sub_2365B0ADC();
}

uint64_t DiscoveryModel.Discovering.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9060);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(unsigned __int8 *)(v1 + 1);
  v8 = *(_QWORD *)(v1 + 8);
  v16 = *(_QWORD *)(v1 + 16);
  v17 = v8;
  v15 = *(_QWORD *)(v1 + 24);
  HIDWORD(v14) = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F3744();
  sub_2365B0AAC();
  LOBYTE(v18) = 0;
  sub_2365B080C();
  if (!v2)
  {
    v9 = BYTE4(v14);
    v11 = v15;
    v10 = v16;
    v12 = v17;
    LOBYTE(v18) = 1;
    sub_2365B07D0();
    v18 = v12;
    v19 = v10;
    v20 = v11;
    v21 = v9;
    v23 = 2;
    sub_2364F3788();
    sub_2365B0824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DiscoveryModel.Discovering.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 1);
  sub_2365B09E0();
  sub_2365B0A04();
  if (v1 != 2)
    sub_2365B0A04();
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.Discovering.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  _QWORD v17[3];
  unsigned __int8 v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9078);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F3744();
  sub_2365B0A7C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v17[0]) = 0;
  v9 = sub_2365B0758();
  LOBYTE(v17[0]) = 1;
  v10 = sub_2365B071C();
  v19 = 2;
  sub_2364F37CC();
  sub_2365B0770();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v9 & 1;
  v12 = v17[0];
  v13 = v17[1];
  v14 = v17[2];
  v15 = v18;
  *(_BYTE *)a2 = v11;
  *(_BYTE *)(a2 + 1) = v10;
  *(_QWORD *)(a2 + 8) = v12;
  *(_QWORD *)(a2 + 16) = v13;
  *(_QWORD *)(a2 + 24) = v14;
  *(_BYTE *)(a2 + 32) = v15;
  sub_236499BC0(v12, v13, v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_236498BE0(v12, v13, v14, v15);
}

uint64_t sub_2364EF33C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.Discovering.init(from:)(a1, a2);
}

uint64_t sub_2364EF350(_QWORD *a1)
{
  return DiscoveryModel.Discovering.encode(to:)(a1);
}

void sub_2364EF36C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 1);
  sub_2365B0A04();
  if (v1 != 2)
    sub_2365B0A04();
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
}

uint64_t sub_2364EF408()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 1);
  sub_2365B09E0();
  sub_2365B0A04();
  if (v1 != 2)
    sub_2365B0A04();
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.Discovered.accounts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DiscoveryModel.Discovered.services.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DiscoveryModel.Discovered.connectionDecision.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DiscoveryModel.Discovered.connectionDecision.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*DiscoveryModel.Discovered.connectionDecision.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.Discovered.pairingState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_236499BC0(v2, v3, v4, v5);
}

__n128 DiscoveryModel.Discovered.pairingState.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  sub_236498BE0(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48));
  result = v5;
  *(__n128 *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 40) = v2;
  *(_BYTE *)(v1 + 48) = v3;
  return result;
}

uint64_t (*DiscoveryModel.Discovered.pairingState.modify())()
{
  return nullsub_1;
}

__n128 DiscoveryModel.Discovered.init(accounts:services:connectionDecision:pairingState:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v5;
  unsigned __int8 v6;
  __n128 result;

  v5 = a4[1].n128_u64[0];
  v6 = a4[1].n128_u8[8];
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = a3;
  result = *a4;
  *(__n128 *)(a5 + 24) = *a4;
  *(_QWORD *)(a5 + 40) = v5;
  *(_BYTE *)(a5 + 48) = v6;
  return result;
}

uint64_t DiscoveryModel.Discovered.account(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = a1;
  v4 = swift_bridgeObjectRetain();
  sub_2364EB1E0(v4, v3, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2364EF5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_2365B005C();
    sub_2365B09E0();
    sub_2365B008C();
    v3 = sub_2365B0A34();
    swift_bridgeObjectRelease();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    v6 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v7 = sub_2365B005C();
      v9 = v8;
      if (v7 == sub_2365B005C() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v12 = sub_2365B08CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
LABEL_18:
        v20 = 1;
        return v20 & 1;
      }
      v13 = ~v4;
      v14 = (v5 + 1) & v13;
      if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        while (1)
        {
          v15 = sub_2365B005C();
          v17 = v16;
          if (v15 == sub_2365B005C() && v17 == v18)
            break;
          v20 = sub_2365B08CC();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v14 = (v14 + 1) & v13;
            if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
              continue;
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v20 = 0;
  return v20 & 1;
}

void DiscoveryModel.Discovered.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(unsigned __int8 *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_236483294(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2364830F0((uint64_t)a1, v4);
  swift_bridgeObjectRelease();
  if (v5 != 2)
    sub_2365B0A04();
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
}

uint64_t sub_2364EF878()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2364EF8A8 + 4 * byte_2365BCC7F[*v0]))(0x73746E756F636361, 0xE800000000000000);
}

uint64_t sub_2364EF8A8()
{
  return 0x7365636976726573;
}

unint64_t sub_2364EF8BC()
{
  return 0xD000000000000012;
}

uint64_t sub_2364EF8D8()
{
  return 0x53676E6972696170;
}

uint64_t sub_2364EF8F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2364F74D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2364EF91C()
{
  sub_2364F3810();
  return sub_2365B0AD0();
}

uint64_t sub_2364EF944()
{
  sub_2364F3810();
  return sub_2365B0ADC();
}

uint64_t DiscoveryModel.Discovered.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  char v27;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9088);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v26 = *((unsigned __int8 *)v1 + 16);
  v20 = v1[3];
  v21 = v8;
  v10 = v1[4];
  v18 = v1[5];
  v19 = v10;
  v17 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F3810();
  sub_2365B0AAC();
  v22 = v9;
  v27 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9098);
  sub_2364F3854(&qword_2563E90A0, &qword_2563E45F8, (uint64_t)&protocol conformance descriptor for IdMSAccount, MEMORY[0x24BEE1700]);
  sub_2365B0824();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = v18;
  v12 = v19;
  v14 = v5;
  v15 = v20;
  v22 = v21;
  v27 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5E50);
  sub_2364A52B8((unint64_t *)&qword_2563E5E58, &qword_2563E4630, (uint64_t)&protocol conformance descriptor for AIDAServiceType, MEMORY[0x24BEE1700]);
  sub_2365B0824();
  LOBYTE(v22) = 2;
  sub_2365B07D0();
  v22 = v15;
  v23 = v12;
  v24 = v13;
  v25 = v17;
  v27 = 3;
  sub_2364F3788();
  sub_2365B0824();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v7, v4);
}

uint64_t DiscoveryModel.Discovered.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  __int128 v5[4];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  sub_2365B09E0();
  swift_bridgeObjectRetain();
  sub_236483294(v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2364830F0((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (v3 != 2)
    sub_2365B0A04();
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.Discovered.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  int v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E90A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F3810();
  sub_2365B0A7C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9098);
  v24 = 0;
  sub_2364F3854(&qword_2563E90B0, &qword_2563E4640, (uint64_t)&protocol conformance descriptor for IdMSAccount, MEMORY[0x24BEE1720]);
  sub_2365B0770();
  v9 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5E50);
  v24 = 1;
  sub_2364A52B8((unint64_t *)&qword_2563E5ED0, &qword_2563E4660, (uint64_t)&protocol conformance descriptor for AIDAServiceType, MEMORY[0x24BEE1720]);
  swift_bridgeObjectRetain();
  sub_2365B0770();
  v18 = v9;
  v10 = v19;
  LOBYTE(v19) = 2;
  swift_bridgeObjectRetain();
  v23 = sub_2365B071C();
  v24 = 3;
  sub_2364F37CC();
  sub_2365B0770();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  v15 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236499BC0(v11, v12, v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v15;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v12;
  *(_QWORD *)(a2 + 40) = v13;
  *(_BYTE *)(a2 + 48) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_236498BE0(v11, v12, v13, v14);
}

uint64_t sub_2364EFFEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.Discovered.init(from:)(a1, a2);
}

uint64_t sub_2364F0000(_QWORD *a1)
{
  return DiscoveryModel.Discovered.encode(to:)(a1);
}

uint64_t sub_2364F0020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  __int128 v5[4];

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  sub_2365B09E0();
  swift_bridgeObjectRetain();
  sub_236483294(v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2364830F0((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (v3 != 2)
    sub_2365B0A04();
  sub_2365B0A04();
  DiscoveryModel.PairingState.hash(into:)();
  return sub_2365B0A34();
}

void DiscoveryModel.PairingState.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_2364F013C()
{
  unsigned int v0;

  sub_2365B09F8();
  sub_2365B008C();
  if (v0 < 2)
    sub_2365B09F8();
  return sub_2365B09F8();
}

uint64_t sub_2364F0288()
{
  sub_2364F3960();
  return sub_2365B0AD0();
}

uint64_t sub_2364F02B0()
{
  sub_2364F3960();
  return sub_2365B0ADC();
}

uint64_t sub_2364F02D8()
{
  sub_2364F39A4();
  return sub_2365B0AD0();
}

uint64_t sub_2364F0300()
{
  sub_2364F39A4();
  return sub_2365B0ADC();
}

uint64_t sub_2364F0328()
{
  sub_2364F391C();
  return sub_2365B0AD0();
}

uint64_t sub_2364F0350()
{
  sub_2364F391C();
  return sub_2365B0ADC();
}

uint64_t sub_2364F0378()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2364F03AC + 4 * byte_2365BCC88[*v0]))(0x7472617453746F6ELL, 0xEA00000000006465);
}

uint64_t sub_2364F03AC()
{
  return 2003789939;
}

uint64_t sub_2364F03BC()
{
  return 7041889;
}

uint64_t sub_2364F03CC()
{
  return 0x6465726577736E61;
}

uint64_t sub_2364F03E4()
{
  return 0x656C6C65636E6163;
}

uint64_t sub_2364F0400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2364F769C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2364F0424()
{
  sub_2364F38D8();
  return sub_2365B0AD0();
}

uint64_t sub_2364F044C()
{
  sub_2364F38D8();
  return sub_2365B0ADC();
}

uint64_t sub_2364F0474()
{
  sub_2364F3A2C();
  return sub_2365B0AD0();
}

uint64_t sub_2364F049C()
{
  sub_2364F3A2C();
  return sub_2365B0ADC();
}

uint64_t sub_2364F04C4()
{
  sub_2364F39E8();
  return sub_2365B0AD0();
}

uint64_t sub_2364F04EC()
{
  sub_2364F39E8();
  return sub_2365B0ADC();
}

void DiscoveryModel.PairingState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _QWORD v11[7];
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E90B8);
  v11[2] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v15 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E90C0);
  v14 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v13 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E90C8);
  v11[5] = *(_QWORD *)(v5 - 8);
  v11[6] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v11[3] = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E90D0);
  v11[1] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v11[4] = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E90D8);
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E90E0);
  v19 = *(_QWORD *)(v9 - 8);
  v20 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v18 = *(_QWORD *)(v1 + 8);
  v11[0] = *(_QWORD *)(v1 + 16);
  v10 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F38D8();
  sub_2365B0AAC();
  __asm { BR              X10 }
}

uint64_t sub_2364F072C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v2 - 120) = 1;
  sub_2364F39E8();
  v3 = *(_QWORD *)(v2 - 224);
  v4 = *(_QWORD *)(v2 - 136);
  sub_2365B07B8();
  *(_BYTE *)(v2 - 120) = 0;
  v5 = *(_QWORD *)(v2 - 200);
  v6 = *(_QWORD *)(v2 - 128);
  sub_2365B0800();
  if (!v6)
  {
    *(_QWORD *)(v2 - 120) = *(_QWORD *)(v2 - 256);
    *(_BYTE *)(v2 - 112) = v0;
    *(_BYTE *)(v2 - 65) = 1;
    sub_2364F3188();
    sub_2365B0824();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 248) + 8))(v3, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v4);
}

uint64_t DiscoveryModel.PairingState.hashValue.getter()
{
  sub_2365B09E0();
  DiscoveryModel.PairingState.hash(into:)();
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.PairingState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;

  v29 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9118);
  v35 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v31 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9120);
  v28 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9128);
  v24[4] = *(_QWORD *)(v5 - 8);
  v24[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9130);
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v32 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9138);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9140);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_2364F38D8();
  v18 = v37;
  sub_2365B0A7C();
  if (!v18)
  {
    v24[2] = v9;
    v24[3] = v12;
    v24[1] = v10;
    v37 = v14;
    v19 = sub_2365B07A0();
    if (*(_QWORD *)(v19 + 16) == 1)
      __asm { BR              X10 }
    v20 = sub_2365B05B4();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v22 = &type metadata for DiscoveryModel.PairingState;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v13);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_2364F1318@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.PairingState.init(from:)(a1, a2);
}

void sub_2364F132C(_QWORD *a1)
{
  DiscoveryModel.PairingState.encode(to:)(a1);
}

uint64_t sub_2364F1344()
{
  sub_2365B09E0();
  DiscoveryModel.PairingState.hash(into:)();
  return sub_2365B0A34();
}

uint64_t sub_2364F13A0()
{
  sub_2365B09E0();
  DiscoveryModel.PairingState.hash(into:)();
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.CodeType.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  if (*((_BYTE *)v0 + 8) && *((_BYTE *)v0 + 8) != 1)
  {
    v3 = 0x6F436C6175736976;
    if (v1 != 1)
      v3 = 0x65646F437271;
    if (v1)
      return v3;
    else
      return 0x6E776F6E6B6E75;
  }
  else
  {
    sub_2365B0578();
    swift_bridgeObjectRelease();
    sub_2365B0860();
    sub_2365B00B0();
    swift_bridgeObjectRelease();
    return 0xD000000000000015;
  }
}

uint64_t DiscoveryModel.CodeType.hash(into:)()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 8) || *(_BYTE *)(v0 + 8) == 1)
    sub_2365B09F8();
  return sub_2365B09F8();
}

uint64_t sub_2364F1574()
{
  return 0x6874676E656CLL;
}

uint64_t sub_2364F158C()
{
  sub_2364F3BB4();
  return sub_2365B0AD0();
}

uint64_t sub_2364F15B4()
{
  sub_2364F3BB4();
  return sub_2365B0ADC();
}

uint64_t sub_2364F15DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2364F160C + 4 * byte_2365BCC97[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_2364F160C()
{
  return 0x646F436168706C61;
}

uint64_t sub_2364F1638()
{
  return 0x6F436C6175736976;
}

uint64_t sub_2364F1654()
{
  return 0x65646F437271;
}

uint64_t sub_2364F1668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2364F78B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2364F168C()
{
  sub_2364F3AA4();
  return sub_2365B0AD0();
}

uint64_t sub_2364F16B4()
{
  sub_2364F3AA4();
  return sub_2365B0ADC();
}

uint64_t sub_2364F16DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2365B08CC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2364F1768()
{
  sub_2364F3B70();
  return sub_2365B0AD0();
}

uint64_t sub_2364F1790()
{
  sub_2364F3B70();
  return sub_2365B0ADC();
}

uint64_t sub_2364F17B8()
{
  sub_2364F3AE8();
  return sub_2365B0AD0();
}

uint64_t sub_2364F17E0()
{
  sub_2364F3AE8();
  return sub_2365B0ADC();
}

uint64_t sub_2364F1808()
{
  sub_2364F3BF8();
  return sub_2365B0AD0();
}

uint64_t sub_2364F1830()
{
  sub_2364F3BF8();
  return sub_2365B0ADC();
}

uint64_t sub_2364F1858()
{
  sub_2364F3B2C();
  return sub_2365B0AD0();
}

uint64_t sub_2364F1880()
{
  sub_2364F3B2C();
  return sub_2365B0ADC();
}

uint64_t DiscoveryModel.CodeType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9148);
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9150);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9158);
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9160);
  v38 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9168);
  v30 = *(_QWORD *)(v14 - 8);
  v31 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9170);
  v42 = *(_QWORD *)(v17 - 8);
  v43 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *v2;
  v20 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2364F3AA4();
  sub_2365B0AAC();
  if (v20)
  {
    if (v20 == 1)
    {
      v46 = 2;
      sub_2364F3B70();
      v21 = v43;
      sub_2365B07B8();
      v22 = v40;
      sub_2365B0818();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v22);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v21);
    }
    else
    {
      if (v41)
      {
        if (v41 == 1)
        {
          v47 = 3;
          sub_2364F3B2C();
          v25 = v32;
          v26 = v43;
          sub_2365B07B8();
          v28 = v33;
          v27 = v34;
        }
        else
        {
          v48 = 4;
          sub_2364F3AE8();
          v25 = v35;
          v26 = v43;
          sub_2365B07B8();
          v28 = v36;
          v27 = v37;
        }
        (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
      }
      else
      {
        v44 = 0;
        sub_2364F3BF8();
        v26 = v43;
        sub_2365B07B8();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v31);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v26);
    }
  }
  else
  {
    v45 = 1;
    sub_2364F3BB4();
    v24 = v43;
    sub_2365B07B8();
    sub_2365B0818();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v24);
  }
}

uint64_t DiscoveryModel.CodeType.hashValue.getter()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2365B09E0();
  if (v1 <= 1)
    sub_2365B09F8();
  sub_2365B09F8();
  return sub_2365B0A34();
}

uint64_t DiscoveryModel.CodeType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD v25[9];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  char *v34;

  v28 = a2;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E91A8);
  v25[6] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v32 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E91B0);
  v25[3] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E91B8);
  v25[7] = *(_QWORD *)(v5 - 8);
  v25[8] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E91C0);
  v25[4] = *(_QWORD *)(v7 - 8);
  v25[5] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v29 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E91C8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E91D0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_2364F3AA4();
  v18 = v34;
  sub_2365B0A7C();
  if (!v18)
  {
    v34 = v12;
    v25[1] = v10;
    v25[2] = v9;
    v19 = sub_2365B07A0();
    if (*(_QWORD *)(v19 + 16) == 1)
      __asm { BR              X10 }
    v20 = v16;
    v21 = sub_2365B05B4();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v23 = &type metadata for DiscoveryModel.CodeType;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
}

uint64_t sub_2364F22FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.CodeType.init(from:)(a1, a2);
}

uint64_t sub_2364F2310(_QWORD *a1)
{
  return DiscoveryModel.CodeType.encode(to:)(a1);
}

uint64_t sub_2364F232C()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 8) || *(_BYTE *)(v0 + 8) == 1)
    sub_2365B09F8();
  return sub_2365B09F8();
}

uint64_t sub_2364F238C()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_2365B09E0();
  if (v1 <= 1)
    sub_2365B09F8();
  sub_2365B09F8();
  return sub_2365B0A34();
}

uint64_t _s12AppleIDSetup14DiscoveryModelV11DiscoveringV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;
  int v3;
  __int128 v4;
  uint64_t v5;
  unsigned __int8 v6;
  int v7;
  _BOOL4 v8;
  __int128 v10;
  uint64_t v11;
  unsigned __int8 v12;

  if (*a1 != *a2)
    goto LABEL_2;
  v3 = a1[1];
  v4 = *(_OWORD *)(a1 + 8);
  v5 = *((_QWORD *)a1 + 3);
  v6 = a1[32];
  v7 = a2[1];
  if (v3 == 2)
  {
    if (v7 != 2)
    {
LABEL_2:
      v2 = 0;
      return v2 & 1;
    }
LABEL_8:
    v10 = v4;
    v11 = v5;
    v12 = v6;
    static DiscoveryModel.PairingState.== infix(_:_:)((uint64_t)&v10);
    return v2 & 1;
  }
  v2 = 0;
  v8 = (v3 & 1) == 0;
  if (v7 != 2 && ((v8 ^ v7) & 1) != 0)
    goto LABEL_8;
  return v2 & 1;
}

uint64_t _s12AppleIDSetup14DiscoveryModelV10DiscoveredV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  char v8;
  int v10;
  uint64_t v11;
  _QWORD v12[3];
  char v13;

  v11 = *(_QWORD *)(a1 + 8);
  v10 = *(unsigned __int8 *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if ((sub_2365A3164(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0 || (sub_2365A28C4(v11, v6) & 1) == 0)
    goto LABEL_5;
  if (v10 == 2)
  {
    if (v7 != 2)
    {
LABEL_5:
      v8 = 0;
      return v8 & 1;
    }
LABEL_9:
    v12[0] = v2;
    v12[1] = v3;
    v12[2] = v4;
    v13 = v5;
    static DiscoveryModel.PairingState.== infix(_:_:)((uint64_t)v12);
    return v8 & 1;
  }
  v8 = 0;
  if (v7 != 2 && ((((v10 & 1) == 0) ^ v7) & 1) != 0)
    goto LABEL_9;
  return v8 & 1;
}

uint64_t _s12AppleIDSetup14DiscoveryModelV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(unsigned __int8 *)(a1 + 48);
  v10 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v11 = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = (v8 >> 3) & 3;
  v16 = *(unsigned __int8 *)(a2 + 48);
  if (!v15)
  {
    if ((v16 & 0x18) == 0)
    {
      LOWORD(v64) = v2 & 0xFF01;
      v65 = v3;
      v66 = v5;
      v67 = v4;
      LOBYTE(v68) = v6;
      LOWORD(v57) = v10 & 0xFF01;
      v58 = v9;
      v59 = v11;
      v49 = v10;
      v60 = v12;
      LOBYTE(v61) = v13;
      v29 = v10;
      v30 = v6;
      v44 = v6;
      v45 = v14;
      v31 = v14;
      v46 = v8;
      v55 = v16;
      v32 = v9;
      v43 = v9;
      sub_236499B30(v29, v9, v11, v12, v13, v31, v16);
      v50 = v7;
      sub_236499B30(v2, v3, v5, v4, v30, v7, v46);
      sub_236499B30(v2, v3, v5, v4, v30, v7, v46);
      sub_236499B30(v49, v32, v11, v12, v13, v45, v55);
      v41 = v12;
      v21 = _s12AppleIDSetup14DiscoveryModelV11DiscoveringV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v64, (unsigned __int8 *)&v57);
      sub_236498B50(v2, v3, v5, v4, v44, v7, v46);
      sub_236498B50(v49, v43, v11, v41, v13, v45, v55);
      v24 = v11;
      v22 = v49;
      v23 = v43;
      v25 = v41;
      v26 = v13;
      v27 = v45;
      v28 = v55;
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  if (v15 != 1)
  {
    if ((v16 & 0x18) == 0x10 && !(v9 | v10 | v11 | v12 | v13 | v14) && v16 == 16)
    {
      sub_236498B50(*(_QWORD *)a1, v3, v5, v4, v6, v7, v8);
      sub_236498B50(0, 0, v11, v12, v13, v14, 0x10u);
      v21 = 1;
      return v21 & 1;
    }
    goto LABEL_13;
  }
  if ((v16 & 0x18) != 8)
  {
LABEL_13:
    v53 = *(_QWORD *)(a1 + 24);
    v56 = *(_QWORD *)(a1 + 16);
    v51 = *(_QWORD *)a1;
    v52 = *(_QWORD *)(a1 + 8);
    v34 = *(_QWORD *)(a1 + 32);
    v35 = *(_QWORD *)(a2 + 16);
    v36 = *(unsigned __int8 *)(a1 + 48);
    v37 = *(unsigned __int8 *)(a2 + 48);
    v38 = *(_QWORD *)(a2 + 8);
    sub_236499B30(*(_QWORD *)a1, v52, v56, v53, v6, v7, v8);
    sub_236499B30(v10, v38, v35, v12, v13, v14, v37);
    sub_236498B50(v51, v52, v56, v53, v34, v7, v36);
    sub_236498B50(v10, v38, v35, v12, v13, v14, v37);
    v21 = 0;
    return v21 & 1;
  }
  v64 = *(_QWORD *)a1;
  v65 = v3;
  LOBYTE(v66) = v5;
  v67 = v4;
  v68 = v6;
  v48 = v10;
  v50 = v7;
  v69 = v7;
  v70 = v8 & 0xE7;
  v57 = v10;
  v58 = v9;
  LOBYTE(v59) = v11;
  v60 = v12;
  v61 = v13;
  v62 = v14;
  v63 = v16 & 0xE7;
  v17 = v10;
  v47 = v11;
  v18 = v6;
  v19 = v8;
  v54 = v16;
  v42 = v9;
  sub_236499B30(v17, v9, v11, v12, v13, v14, v16);
  sub_236499B30(v2, v3, v5, v4, v18, v50, v19);
  v44 = v18;
  v46 = v19;
  sub_236499B30(v2, v3, v5, v4, v18, v50, v19);
  sub_236499B30(v48, v42, v11, v12, v13, v14, v54);
  v20 = v12;
  v40 = v12;
  v21 = _s12AppleIDSetup14DiscoveryModelV10DiscoveredV2eeoiySbAE_AEtFZ_0((uint64_t)&v64, (uint64_t)&v57);
  sub_236498B50(v2, v3, v5, v4, v18, v50, v19);
  sub_236498B50(v48, v42, v47, v20, v13, v14, v54);
  v22 = v48;
  v23 = v42;
  v24 = v47;
  v25 = v40;
  v26 = v13;
  v27 = v14;
  v28 = v54;
LABEL_7:
  sub_236498B50(v22, v23, v24, v25, v26, v27, v28);
  sub_236498B50(v2, v3, v5, v4, v44, v50, v46);
  return v21 & 1;
}

BOOL _s12AppleIDSetup14DiscoveryModelV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  _BOOL8 result;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  char v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  unsigned __int8 v100;
  unsigned __int8 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  _OWORD v132[3];
  unsigned __int8 v133;
  _OWORD v134[3];
  unsigned __int8 v135;

  result = 0;
  if (*a1 != *a2 || ((a1[1] ^ a2[1]) & 1) != 0)
    return result;
  v4 = *((_QWORD *)a1 + 2);
  v5 = *((_QWORD *)a1 + 5);
  v130 = *((_QWORD *)a1 + 4);
  v6 = a1[49];
  v7 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v9 = *(_OWORD *)(a1 + 72);
  v10 = *(_OWORD *)(a1 + 88);
  v11 = *(_OWORD *)(a1 + 104);
  v12 = a1[120];
  v14 = *((_QWORD *)a1 + 16);
  v13 = *((_QWORD *)a1 + 17);
  v16 = *((_QWORD *)a1 + 18);
  v15 = *((_QWORD *)a1 + 19);
  v17 = *((_QWORD *)a1 + 20);
  v18 = *((_QWORD *)a1 + 21);
  v19 = *((_QWORD *)a2 + 2);
  v129 = *((_QWORD *)a2 + 3);
  v21 = *((_QWORD *)a2 + 4);
  v20 = *((_QWORD *)a2 + 5);
  v22 = a2[48];
  v23 = a2[49];
  v25 = *((_QWORD *)a2 + 7);
  v24 = *((_QWORD *)a2 + 8);
  v26 = *(_OWORD *)(a2 + 72);
  v27 = *(_OWORD *)(a2 + 88);
  v28 = *(_OWORD *)(a2 + 104);
  v29 = a2[120];
  v31 = *((_QWORD *)a2 + 16);
  v30 = *((_QWORD *)a2 + 17);
  v32 = *((_QWORD *)a2 + 18);
  v127 = *((_QWORD *)a2 + 19);
  v34 = *((_QWORD *)a2 + 20);
  v33 = *((_QWORD *)a2 + 21);
  if (!v4)
  {
    v128 = *((_QWORD *)a1 + 3);
    v126 = a1[48];
    if (v19)
      return 0;
    goto LABEL_10;
  }
  if (!v19)
    return 0;
  v128 = *((_QWORD *)a1 + 3);
  v126 = a1[48];
  if (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && v4 == v19)
    goto LABEL_10;
  v99 = a2[120];
  v120 = *((_QWORD *)a2 + 16);
  v123 = *((_QWORD *)a2 + 18);
  v89 = *((_QWORD *)a1 + 16);
  v81 = *((_QWORD *)a1 + 19);
  v82 = *((_QWORD *)a2 + 7);
  v93 = *((_QWORD *)a2 + 20);
  v96 = *((_QWORD *)a1 + 21);
  v91 = *((_QWORD *)a1 + 20);
  v35 = *((_QWORD *)a1 + 17);
  v36 = *((_QWORD *)a2 + 21);
  v83 = *((_QWORD *)a1 + 5);
  v85 = *((_QWORD *)a2 + 5);
  v37 = *((_QWORD *)a2 + 17);
  v114 = *(_OWORD *)(a1 + 88);
  v117 = *(_OWORD *)(a1 + 72);
  v108 = *(_OWORD *)(a2 + 72);
  v111 = *(_OWORD *)(a1 + 104);
  v38 = a1[120];
  v39 = *((_QWORD *)a1 + 7);
  v40 = *((_QWORD *)a1 + 8);
  v102 = *(_OWORD *)(a2 + 104);
  v105 = *(_OWORD *)(a2 + 88);
  v41 = *((_QWORD *)a2 + 8);
  v87 = a2[49];
  v42 = a1[49];
  v43 = sub_2365B08CC();
  v6 = v42;
  v23 = v87;
  v24 = v41;
  v29 = v99;
  v28 = v102;
  v27 = v105;
  v26 = v108;
  v11 = v111;
  v8 = v40;
  v7 = v39;
  v25 = v82;
  v5 = v83;
  v12 = v38;
  v10 = v114;
  v9 = v117;
  v30 = v37;
  v20 = v85;
  v33 = v36;
  v17 = v91;
  v34 = v93;
  v31 = v120;
  v32 = v123;
  v13 = v35;
  v14 = v89;
  v18 = v96;
  v15 = v81;
  v44 = v43;
  result = 0;
  if ((v44 & 1) != 0)
  {
LABEL_10:
    if (v130)
    {
      if (!v21)
        return 0;
      if (v128 != v129 || v130 != v21)
      {
        v100 = v29;
        v121 = v31;
        v124 = v32;
        v88 = v16;
        v90 = v14;
        v45 = v15;
        v94 = v34;
        v97 = v18;
        v92 = v17;
        v46 = v13;
        v47 = v33;
        v48 = v30;
        v115 = v10;
        v118 = v9;
        v109 = v26;
        v112 = v11;
        v84 = v5;
        v86 = v20;
        v49 = v12;
        v50 = v7;
        v51 = v8;
        v103 = v28;
        v106 = v27;
        v52 = v24;
        v53 = v25;
        v131 = v6;
        v54 = sub_2365B08CC();
        v6 = v131;
        v25 = v53;
        v24 = v52;
        v29 = v100;
        v28 = v103;
        v27 = v106;
        v26 = v109;
        v11 = v112;
        v8 = v51;
        v7 = v50;
        v12 = v49;
        v5 = v84;
        v20 = v86;
        v10 = v115;
        v9 = v118;
        v30 = v48;
        v31 = v121;
        v32 = v124;
        v33 = v47;
        v17 = v92;
        v34 = v94;
        v13 = v46;
        v18 = v97;
        v15 = v45;
        v16 = v88;
        v14 = v90;
        v55 = v54;
        result = 0;
        if ((v55 & 1) == 0)
          return result;
      }
    }
    else if (v21)
    {
      return 0;
    }
    if (v126)
    {
      if (v126 != 1)
      {
        if (v5)
        {
          if (v5 == 1)
          {
            result = 0;
            if (v22 != 2 || v20 != 1)
              return result;
          }
          else
          {
            result = 0;
            if (v22 != 2 || v20 != 2)
              return result;
          }
        }
        else
        {
          result = 0;
          if (v22 != 2 || v20)
            return result;
        }
LABEL_34:
        if (((v6 ^ v23) & 1) != 0)
          return result;
        if (v8)
        {
          if (!v24)
            return 0;
          if (v7 != v25 || v8 != v24)
          {
            v101 = v29;
            v122 = v31;
            v125 = v32;
            v56 = v15;
            v57 = v13;
            v58 = v34;
            v59 = v33;
            v60 = v30;
            v116 = v10;
            v119 = v9;
            v110 = v26;
            v113 = v11;
            v61 = v12;
            v104 = v28;
            v107 = v27;
            v62 = sub_2365B08CC();
            v29 = v101;
            v28 = v104;
            v27 = v107;
            v26 = v110;
            v11 = v113;
            v12 = v61;
            v10 = v116;
            v9 = v119;
            v30 = v60;
            v31 = v122;
            v32 = v125;
            v33 = v59;
            v34 = v58;
            v13 = v57;
            v15 = v56;
            v63 = v62;
            result = 0;
            if ((v63 & 1) == 0)
              return result;
          }
        }
        else if (v24)
        {
          return 0;
        }
        v80 = v33;
        v64 = v30;
        v65 = v32;
        v66 = v13;
        v67 = v15;
        v134[0] = v9;
        v134[1] = v10;
        v134[2] = v11;
        v135 = v12;
        v132[0] = v26;
        v132[1] = v27;
        v132[2] = v28;
        v133 = v29;
        if ((_s12AppleIDSetup14DiscoveryModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)v134, (uint64_t)v132) & 1) == 0)
          return 0;
        if (v66)
        {
          v68 = v66;
          if (v64)
          {
            v69 = v64;
            if (v14 == v31 && v66 == v64 || (v70 = sub_2365B08CC(), v69 = v64, v68 = v66, (v70 & 1) != 0))
            {
              v71 = v14;
              v95 = v34;
              v98 = v18;
              v72 = v17;
              v73 = v14;
              v74 = v68;
              v75 = v69;
              sub_236485214(v71, v68);
              sub_236485214(v73, v74);
              sub_236485214(v31, v75);
              v76 = sub_23651F4EC(v65, v127, v16, v67);
              sub_236484E1C(v31, v75);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              v77 = v73;
              v17 = v72;
              v34 = v95;
              v18 = v98;
              sub_236484E1C(v77, v74);
              if ((v76 & 1) == 0)
                return 0;
              goto LABEL_51;
            }
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            v78 = v14;
            v79 = v66;
LABEL_59:
            sub_236484E1C(v78, v79);
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else if (!v64)
        {
LABEL_51:
          if (v18)
            return v80 && (v17 == v34 && v18 == v80 || (sub_2365B08CC() & 1) != 0);
          return !v80;
        }
        sub_236485214(v31, v64);
        sub_236484E1C(v14, v66);
        v78 = v31;
        v79 = v64;
        goto LABEL_59;
      }
      if (v22 != 1)
        return 0;
    }
    else if (v22)
    {
      return 0;
    }
    result = 0;
    if (v5 != v20)
      return result;
    goto LABEL_34;
  }
  return result;
}

uint64_t _s12AppleIDSetup14DiscoveryModelV8CodeTypeO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((_BYTE *)a1 + 8))
  {
    if (!*((_BYTE *)a2 + 8))
      return v2 == v3;
    return 0;
  }
  if (*((_BYTE *)a1 + 8) == 1)
  {
    if (v4 == 1)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 == 1)
    {
      if (v4 != 2 || v3 != 1)
        return 0;
    }
    else if (v4 != 2 || v3 != 2)
    {
      return 0;
    }
  }
  else if (v4 != 2 || v3 != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_2364F30BC()
{
  unint64_t result;

  result = qword_2563E8EE8;
  if (!qword_2563E8EE8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BED14, &type metadata for DiscoveryModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E8EE8);
  }
  return result;
}

unint64_t sub_2364F3100()
{
  unint64_t result;

  result = qword_2563E8EF0;
  if (!qword_2563E8EF0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.FlowKind, &type metadata for DiscoveryModel.FlowKind);
    atomic_store(result, (unint64_t *)&qword_2563E8EF0);
  }
  return result;
}

unint64_t sub_2364F3144()
{
  unint64_t result;

  result = qword_2563E8EF8;
  if (!qword_2563E8EF8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Role, &type metadata for DiscoveryModel.Role);
    atomic_store(result, (unint64_t *)&qword_2563E8EF8);
  }
  return result;
}

unint64_t sub_2364F3188()
{
  unint64_t result;

  result = qword_2563E8F00;
  if (!qword_2563E8F00)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.CodeType, &type metadata for DiscoveryModel.CodeType);
    atomic_store(result, (unint64_t *)&qword_2563E8F00);
  }
  return result;
}

unint64_t sub_2364F31CC()
{
  unint64_t result;

  result = qword_2563E8F08;
  if (!qword_2563E8F08)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.State, &type metadata for DiscoveryModel.State);
    atomic_store(result, (unint64_t *)&qword_2563E8F08);
  }
  return result;
}

unint64_t sub_2364F3210()
{
  unint64_t result;

  result = qword_2563E8F18;
  if (!qword_2563E8F18)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.FlowKind, &type metadata for DiscoveryModel.FlowKind);
    atomic_store(result, (unint64_t *)&qword_2563E8F18);
  }
  return result;
}

unint64_t sub_2364F3254()
{
  unint64_t result;

  result = qword_2563E8F20;
  if (!qword_2563E8F20)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Role, &type metadata for DiscoveryModel.Role);
    atomic_store(result, (unint64_t *)&qword_2563E8F20);
  }
  return result;
}

unint64_t sub_2364F3298()
{
  unint64_t result;

  result = qword_2563E8F28;
  if (!qword_2563E8F28)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.CodeType, &type metadata for DiscoveryModel.CodeType);
    atomic_store(result, (unint64_t *)&qword_2563E8F28);
  }
  return result;
}

unint64_t sub_2364F32DC()
{
  unint64_t result;

  result = qword_2563E8F30;
  if (!qword_2563E8F30)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.State, &type metadata for DiscoveryModel.State);
    atomic_store(result, (unint64_t *)&qword_2563E8F30);
  }
  return result;
}

unint64_t sub_2364F3320()
{
  unint64_t result;

  result = qword_2563E8F50;
  if (!qword_2563E8F50)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BECC4, &type metadata for DiscoveryModel.Role.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E8F50);
  }
  return result;
}

unint64_t sub_2364F3364()
{
  unint64_t result;

  result = qword_2563E8F58;
  if (!qword_2563E8F58)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BEC74, &type metadata for DiscoveryModel.Role.ServerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E8F58);
  }
  return result;
}

unint64_t sub_2364F33A8()
{
  unint64_t result;

  result = qword_2563E8F60;
  if (!qword_2563E8F60)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BEC24, &type metadata for DiscoveryModel.Role.ClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E8F60);
  }
  return result;
}

unint64_t sub_2364F33EC()
{
  unint64_t result;

  result = qword_2563E8FA0;
  if (!qword_2563E8FA0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BEBD4, &type metadata for DiscoveryModel.FlowKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E8FA0);
  }
  return result;
}

unint64_t sub_2364F3430()
{
  unint64_t result;

  result = qword_2563E8FA8;
  if (!qword_2563E8FA8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BEB84, &type metadata for DiscoveryModel.FlowKind.MixedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E8FA8);
  }
  return result;
}

unint64_t sub_2364F3474()
{
  unint64_t result;

  result = qword_2563E8FB0;
  if (!qword_2563E8FB0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BEB34, &type metadata for DiscoveryModel.FlowKind.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E8FB0);
  }
  return result;
}

unint64_t sub_2364F34B8()
{
  unint64_t result;

  result = qword_2563E8FB8;
  if (!qword_2563E8FB8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BEAE4, &type metadata for DiscoveryModel.FlowKind.SetupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E8FB8);
  }
  return result;
}

unint64_t sub_2364F34FC()
{
  unint64_t result;

  result = qword_2563E9000;
  if (!qword_2563E9000)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BEA94, &type metadata for DiscoveryModel.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9000);
  }
  return result;
}

unint64_t sub_2364F3540()
{
  unint64_t result;

  result = qword_2563E9008;
  if (!qword_2563E9008)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BEA44, &type metadata for DiscoveryModel.State.PairedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9008);
  }
  return result;
}

unint64_t sub_2364F3584()
{
  unint64_t result;

  result = qword_2563E9010;
  if (!qword_2563E9010)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE9F4, &type metadata for DiscoveryModel.State.DiscoveredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9010);
  }
  return result;
}

unint64_t sub_2364F35C8()
{
  unint64_t result;

  result = qword_2563E9018;
  if (!qword_2563E9018)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Discovered, &type metadata for DiscoveryModel.Discovered);
    atomic_store(result, (unint64_t *)&qword_2563E9018);
  }
  return result;
}

unint64_t sub_2364F360C()
{
  unint64_t result;

  result = qword_2563E9020;
  if (!qword_2563E9020)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE9A4, &type metadata for DiscoveryModel.State.DiscoveringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9020);
  }
  return result;
}

unint64_t sub_2364F3650()
{
  unint64_t result;

  result = qword_2563E9028;
  if (!qword_2563E9028)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Discovering, &type metadata for DiscoveryModel.Discovering);
    atomic_store(result, (unint64_t *)&qword_2563E9028);
  }
  return result;
}

unint64_t sub_2364F3694()
{
  unint64_t result;

  result = qword_2563E9050;
  if (!qword_2563E9050)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Discovered, &type metadata for DiscoveryModel.Discovered);
    atomic_store(result, (unint64_t *)&qword_2563E9050);
  }
  return result;
}

unint64_t sub_2364F36D8()
{
  unint64_t result;

  result = qword_2563E9058;
  if (!qword_2563E9058)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Discovering, &type metadata for DiscoveryModel.Discovering);
    atomic_store(result, (unint64_t *)&qword_2563E9058);
  }
  return result;
}

uint64_t sub_2364F371C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu)
    return sub_236499BC0(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_2364F3730(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu)
    return sub_236498BE0(a1, a2, a3, a4);
  return a1;
}

unint64_t sub_2364F3744()
{
  unint64_t result;

  result = qword_2563E9068;
  if (!qword_2563E9068)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE954, &type metadata for DiscoveryModel.Discovering.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9068);
  }
  return result;
}

unint64_t sub_2364F3788()
{
  unint64_t result;

  result = qword_2563E9070;
  if (!qword_2563E9070)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.PairingState, &type metadata for DiscoveryModel.PairingState);
    atomic_store(result, (unint64_t *)&qword_2563E9070);
  }
  return result;
}

unint64_t sub_2364F37CC()
{
  unint64_t result;

  result = qword_2563E9080;
  if (!qword_2563E9080)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.PairingState, &type metadata for DiscoveryModel.PairingState);
    atomic_store(result, (unint64_t *)&qword_2563E9080);
  }
  return result;
}

unint64_t sub_2364F3810()
{
  unint64_t result;

  result = qword_2563E9090;
  if (!qword_2563E9090)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE904, &type metadata for DiscoveryModel.Discovered.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9090);
  }
  return result;
}

uint64_t sub_2364F3854(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563E9098);
    v10 = sub_23644F0B8(a2, (uint64_t (*)(uint64_t))type metadata accessor for IdMSAccount, a3);
    result = MEMORY[0x23B7F5164](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2364F38D8()
{
  unint64_t result;

  result = qword_2563E90E8;
  if (!qword_2563E90E8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE8B4, &type metadata for DiscoveryModel.PairingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E90E8);
  }
  return result;
}

unint64_t sub_2364F391C()
{
  unint64_t result;

  result = qword_2563E90F0;
  if (!qword_2563E90F0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE864, &type metadata for DiscoveryModel.PairingState.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E90F0);
  }
  return result;
}

unint64_t sub_2364F3960()
{
  unint64_t result;

  result = qword_2563E90F8;
  if (!qword_2563E90F8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE814, &type metadata for DiscoveryModel.PairingState.AnsweredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E90F8);
  }
  return result;
}

unint64_t sub_2364F39A4()
{
  unint64_t result;

  result = qword_2563E9100;
  if (!qword_2563E9100)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE7C4, &type metadata for DiscoveryModel.PairingState.AskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9100);
  }
  return result;
}

unint64_t sub_2364F39E8()
{
  unint64_t result;

  result = qword_2563E9108;
  if (!qword_2563E9108)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE774, &type metadata for DiscoveryModel.PairingState.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9108);
  }
  return result;
}

unint64_t sub_2364F3A2C()
{
  unint64_t result;

  result = qword_2563E9110;
  if (!qword_2563E9110)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE724, &type metadata for DiscoveryModel.PairingState.NotStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9110);
  }
  return result;
}

uint64_t sub_2364F3A70()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 <= 0xFB)
    sub_236498BE0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject();
}

unint64_t sub_2364F3AA4()
{
  unint64_t result;

  result = qword_2563E9178;
  if (!qword_2563E9178)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE6D4, &type metadata for DiscoveryModel.CodeType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9178);
  }
  return result;
}

unint64_t sub_2364F3AE8()
{
  unint64_t result;

  result = qword_2563E9180;
  if (!qword_2563E9180)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE684, &type metadata for DiscoveryModel.CodeType.QrCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9180);
  }
  return result;
}

unint64_t sub_2364F3B2C()
{
  unint64_t result;

  result = qword_2563E9188;
  if (!qword_2563E9188)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE634, &type metadata for DiscoveryModel.CodeType.VisualCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9188);
  }
  return result;
}

unint64_t sub_2364F3B70()
{
  unint64_t result;

  result = qword_2563E9190;
  if (!qword_2563E9190)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE5E4, &type metadata for DiscoveryModel.CodeType.DigitCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9190);
  }
  return result;
}

unint64_t sub_2364F3BB4()
{
  unint64_t result;

  result = qword_2563E9198;
  if (!qword_2563E9198)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE594, &type metadata for DiscoveryModel.CodeType.AlphaCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9198);
  }
  return result;
}

unint64_t sub_2364F3BF8()
{
  unint64_t result;

  result = qword_2563E91A0;
  if (!qword_2563E91A0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE544, &type metadata for DiscoveryModel.CodeType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E91A0);
  }
  return result;
}

uint64_t sub_2364F3C3C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364F3C58, (uint64_t (*)(void))sub_2364F3C9C, (uint64_t (*)(void))sub_2364F3CE0);
}

unint64_t sub_2364F3C58()
{
  unint64_t result;

  result = qword_2563E91D8;
  if (!qword_2563E91D8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel, &type metadata for DiscoveryModel);
    atomic_store(result, (unint64_t *)&qword_2563E91D8);
  }
  return result;
}

unint64_t sub_2364F3C9C()
{
  unint64_t result;

  result = qword_2563E91E0;
  if (!qword_2563E91E0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel, &type metadata for DiscoveryModel);
    atomic_store(result, (unint64_t *)&qword_2563E91E0);
  }
  return result;
}

unint64_t sub_2364F3CE0()
{
  unint64_t result;

  result = qword_2563E91E8;
  if (!qword_2563E91E8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel, &type metadata for DiscoveryModel);
    atomic_store(result, (unint64_t *)&qword_2563E91E8);
  }
  return result;
}

unint64_t sub_2364F3D28()
{
  unint64_t result;

  result = qword_2563E91F0;
  if (!qword_2563E91F0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel, &type metadata for DiscoveryModel);
    atomic_store(result, (unint64_t *)&qword_2563E91F0);
  }
  return result;
}

unint64_t sub_2364F3D70()
{
  unint64_t result;

  result = qword_2563E91F8;
  if (!qword_2563E91F8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Role, &type metadata for DiscoveryModel.Role);
    atomic_store(result, (unint64_t *)&qword_2563E91F8);
  }
  return result;
}

uint64_t sub_2364F3DB4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364F3254, (uint64_t (*)(void))sub_2364F3144, (uint64_t (*)(void))sub_2364F3DD0);
}

unint64_t sub_2364F3DD0()
{
  unint64_t result;

  result = qword_2563E9200;
  if (!qword_2563E9200)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Role, &type metadata for DiscoveryModel.Role);
    atomic_store(result, (unint64_t *)&qword_2563E9200);
  }
  return result;
}

unint64_t sub_2364F3E18()
{
  unint64_t result;

  result = qword_2563E9208;
  if (!qword_2563E9208)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.FlowKind, &type metadata for DiscoveryModel.FlowKind);
    atomic_store(result, (unint64_t *)&qword_2563E9208);
  }
  return result;
}

uint64_t sub_2364F3E5C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364F3210, (uint64_t (*)(void))sub_2364F3100, (uint64_t (*)(void))sub_2364F3E78);
}

unint64_t sub_2364F3E78()
{
  unint64_t result;

  result = qword_2563E9210;
  if (!qword_2563E9210)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.FlowKind, &type metadata for DiscoveryModel.FlowKind);
    atomic_store(result, (unint64_t *)&qword_2563E9210);
  }
  return result;
}

uint64_t sub_2364F3EBC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364F32DC, (uint64_t (*)(void))sub_2364F31CC, (uint64_t (*)(void))sub_2364F3ED8);
}

unint64_t sub_2364F3ED8()
{
  unint64_t result;

  result = qword_2563E9218;
  if (!qword_2563E9218)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.State, &type metadata for DiscoveryModel.State);
    atomic_store(result, (unint64_t *)&qword_2563E9218);
  }
  return result;
}

unint64_t sub_2364F3F20()
{
  unint64_t result;

  result = qword_2563E9220;
  if (!qword_2563E9220)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.State, &type metadata for DiscoveryModel.State);
    atomic_store(result, (unint64_t *)&qword_2563E9220);
  }
  return result;
}

uint64_t sub_2364F3F64(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364F36D8, (uint64_t (*)(void))sub_2364F3650, (uint64_t (*)(void))sub_2364F3F80);
}

unint64_t sub_2364F3F80()
{
  unint64_t result;

  result = qword_2563E9228;
  if (!qword_2563E9228)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Discovering, &type metadata for DiscoveryModel.Discovering);
    atomic_store(result, (unint64_t *)&qword_2563E9228);
  }
  return result;
}

unint64_t sub_2364F3FC8()
{
  unint64_t result;

  result = qword_2563E9230;
  if (!qword_2563E9230)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Discovering, &type metadata for DiscoveryModel.Discovering);
    atomic_store(result, (unint64_t *)&qword_2563E9230);
  }
  return result;
}

uint64_t sub_2364F400C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364F3694, (uint64_t (*)(void))sub_2364F35C8, (uint64_t (*)(void))sub_2364F4028);
}

unint64_t sub_2364F4028()
{
  unint64_t result;

  result = qword_2563E9238;
  if (!qword_2563E9238)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Discovered, &type metadata for DiscoveryModel.Discovered);
    atomic_store(result, (unint64_t *)&qword_2563E9238);
  }
  return result;
}

unint64_t sub_2364F4070()
{
  unint64_t result;

  result = qword_2563E9240;
  if (!qword_2563E9240)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.Discovered, &type metadata for DiscoveryModel.Discovered);
    atomic_store(result, (unint64_t *)&qword_2563E9240);
  }
  return result;
}

uint64_t sub_2364F40B4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364F37CC, (uint64_t (*)(void))sub_2364F3788, (uint64_t (*)(void))sub_2364F40D0);
}

unint64_t sub_2364F40D0()
{
  unint64_t result;

  result = qword_2563E9248;
  if (!qword_2563E9248)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.PairingState, &type metadata for DiscoveryModel.PairingState);
    atomic_store(result, (unint64_t *)&qword_2563E9248);
  }
  return result;
}

unint64_t sub_2364F4118()
{
  unint64_t result;

  result = qword_2563E9250;
  if (!qword_2563E9250)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.PairingState, &type metadata for DiscoveryModel.PairingState);
    atomic_store(result, (unint64_t *)&qword_2563E9250);
  }
  return result;
}

uint64_t sub_2364F415C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364F3298, (uint64_t (*)(void))sub_2364F3188, (uint64_t (*)(void))sub_2364F4178);
}

unint64_t sub_2364F4178()
{
  unint64_t result;

  result = qword_2563E9258;
  if (!qword_2563E9258)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.CodeType, &type metadata for DiscoveryModel.CodeType);
    atomic_store(result, (unint64_t *)&qword_2563E9258);
  }
  return result;
}

unint64_t sub_2364F41C0()
{
  unint64_t result;

  result = qword_2563E9260;
  if (!qword_2563E9260)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for DiscoveryModel.CodeType, &type metadata for DiscoveryModel.CodeType);
    atomic_store(result, (unint64_t *)&qword_2563E9260);
  }
  return result;
}

uint64_t destroy for DiscoveryModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_236498B50(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(unsigned __int8 *)(a1 + 120));
  if (*(_QWORD *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DiscoveryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unsigned int v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 96);
  v11 = *(_QWORD *)(a2 + 104);
  v12 = *(_QWORD *)(a2 + 112);
  v18 = *(unsigned __int8 *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236499B30(v7, v8, v9, v10, v11, v12, v18);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 96) = v10;
  *(_QWORD *)(a1 + 104) = v11;
  *(_QWORD *)(a1 + 112) = v12;
  *(_BYTE *)(a1 + 120) = v18;
  v13 = *(_QWORD *)(a2 + 136);
  if (v13)
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v13;
    v14 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
  }
  v16 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 112);
  v11 = *(_BYTE *)(a2 + 120);
  sub_236499B30(v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 72) = v5;
  *(_QWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 88) = v7;
  *(_QWORD *)(a1 + 96) = v8;
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v10;
  v18 = *(unsigned __int8 *)(a1 + 120);
  *(_BYTE *)(a1 + 120) = v11;
  sub_236498B50(v12, v13, v14, v15, v16, v17, v18);
  v19 = (_OWORD *)(a1 + 128);
  v20 = (_OWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136))
  {
    if (v21)
    {
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_2364BF0AC(a1 + 128);
      v22 = *(_OWORD *)(a2 + 144);
      *v19 = *v20;
      *(_OWORD *)(a1 + 144) = v22;
    }
  }
  else if (v21)
  {
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v23 = *(_OWORD *)(a2 + 144);
    *v19 = *v20;
    *(_OWORD *)(a1 + 144) = v23;
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for DiscoveryModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 120);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(_QWORD *)(a1 + 96);
  v12 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v14 = *(unsigned __int8 *)(a1 + 120);
  *(_BYTE *)(a1 + 120) = v7;
  sub_236498B50(v8, v9, v10, v11, v12, v13, v14);
  if (!*(_QWORD *)(a1 + 136))
    goto LABEL_5;
  v15 = *(_QWORD *)(a2 + 136);
  if (!v15)
  {
    sub_2364BF0AC(a1 + 128);
LABEL_5:
    v16 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_release();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_release();
LABEL_6:
  v17 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 176))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 176) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel()
{
  return &type metadata for DiscoveryModel;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Role()
{
  return &type metadata for DiscoveryModel.Role;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind()
{
  return &type metadata for DiscoveryModel.FlowKind;
}

void destroy for DiscoveryModel.State(uint64_t a1)
{
  sub_236498B50(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

uint64_t initializeWithCopy for DiscoveryModel.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 48);
  sub_236499B30(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 48);
  sub_236499B30(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(unsigned __int8 *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_236498B50(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DiscoveryModel.State(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned int v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(unsigned __int8 *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_236498B50(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 6 && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 6);
  v3 = (*(_BYTE *)(a1 + 48) & 4 | (*(unsigned __int8 *)(a1 + 48) >> 3) & 3) ^ 7;
  if (v3 >= 5)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 5)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 6;
    if (a3 >= 6)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 6)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 48) = 4 * ((((-a2 & 4) != 0) - 2 * a2) & 7);
    }
  }
  return result;
}

uint64_t sub_2364F4A48(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 48);
  if (((v1 >> 3) & 2) != 0)
    return (*(_DWORD *)a1 + 2);
  else
    return (v1 >> 3) & 3;
}

uint64_t sub_2364F4A68(uint64_t result)
{
  *(_BYTE *)(result + 48) &= 0xE7u;
  return result;
}

uint64_t sub_2364F4A78(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 48) = *(_BYTE *)(result + 48) & 0xE3 | (8 * (a2 & 3));
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    *(_BYTE *)(result + 48) = 16;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State()
{
  return &type metadata for DiscoveryModel.State;
}

uint64_t destroy for DiscoveryModel.Discovering(uint64_t a1)
{
  return sub_236498BE0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for DiscoveryModel.Discovering(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_236499BC0(v3, v4, v5, v6);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel.Discovering(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 32);
  sub_236499BC0(v3, v4, v5, v6);
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v10 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v6;
  sub_236498BE0(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DiscoveryModel.Discovering(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  v8 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  sub_236498BE0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.Discovering(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[33])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.Discovering(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Discovering()
{
  return &type metadata for DiscoveryModel.Discovering;
}

uint64_t destroy for DiscoveryModel.Discovered(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_236498BE0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for DiscoveryModel.Discovered(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236499BC0(v4, v5, v6, v7);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = v7;
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel.Discovered(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *((_BYTE *)v2 + 16);
  v4 = v2[3];
  v5 = v2[4];
  v6 = v2[5];
  LOBYTE(v2) = *((_BYTE *)v2 + 48);
  sub_236499BC0(v4, v5, v6, v2);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v10 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = (_BYTE)v2;
  sub_236498BE0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DiscoveryModel.Discovered(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v9 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  sub_236498BE0(v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.Discovered(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.Discovered(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Discovered()
{
  return &type metadata for DiscoveryModel.Discovered;
}

uint64_t destroy for DiscoveryModel.PairingState(uint64_t a1)
{
  return sub_236498BE0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for DiscoveryModel.PairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_236499BC0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel.PairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_236499BC0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_236498BE0(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DiscoveryModel.PairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_236498BE0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.PairingState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3C && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 60);
  v3 = ((*(unsigned __int8 *)(a1 + 24) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 24) >> 2) & 7))) ^ 0x3F;
  if (v3 >= 0x3B)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.PairingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 60;
    if (a3 >= 0x3C)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x3C)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_2364F5130(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 24);
  v2 = (char)v1;
  v3 = v1 >> 5;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_2364F5150(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0x1Fu;
  return result;
}

uint64_t sub_2364F5160(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 3 | (32 * a2);
  }
  else
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 4;
    *(_BYTE *)(result + 24) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState()
{
  return &type metadata for DiscoveryModel.PairingState;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.CodeType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.CodeType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_2364F5240(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2364F5258(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType()
{
  return &type metadata for DiscoveryModel.CodeType;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.CodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.UnknownCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.AlphaCodeCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.AlphaCodeCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.DigitCodeCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.DigitCodeCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.VisualCodeCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.VisualCodeCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.QrCodeCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.QrCodeCodingKeys;
}

uint64_t _s12AppleIDSetup14DiscoveryModelV8CodeTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2364F5334 + 4 * byte_2365BCCA6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2364F5368 + 4 * byte_2365BCCA1[v4]))();
}

uint64_t sub_2364F5368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F5370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2364F5378);
  return result;
}

uint64_t sub_2364F5384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2364F538CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2364F5390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F5398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.CodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.NotStartedCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.NotStartedCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.ShowCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.ShowCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.AskCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.AskCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.AnsweredCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.AnsweredCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.CancelledCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.CancelledCodingKeys;
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.Discovered.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2364F5450 + 4 * byte_2365BCCB0[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2364F5484 + 4 * byte_2365BCCAB[v4]))();
}

uint64_t sub_2364F5484(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F548C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2364F5494);
  return result;
}

uint64_t sub_2364F54A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2364F54A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2364F54AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F54B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Discovered.CodingKeys()
{
  return &type metadata for DiscoveryModel.Discovered.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Discovering.CodingKeys()
{
  return &type metadata for DiscoveryModel.Discovering.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State.CodingKeys()
{
  return &type metadata for DiscoveryModel.State.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State.DiscoveringCodingKeys()
{
  return &type metadata for DiscoveryModel.State.DiscoveringCodingKeys;
}

uint64_t _s12AppleIDSetup14DiscoveryModelV8CodeTypeO19AlphaCodeCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2364F5540 + 4 * byte_2365BCCB5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2364F5560 + 4 * byte_2365BCCBA[v4]))();
}

_BYTE *sub_2364F5540(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2364F5560(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2364F5568(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2364F5570(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2364F5578(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2364F5580(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State.DiscoveredCodingKeys()
{
  return &type metadata for DiscoveryModel.State.DiscoveredCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State.PairedCodingKeys()
{
  return &type metadata for DiscoveryModel.State.PairedCodingKeys;
}

uint64_t _s12AppleIDSetup14DiscoveryModelV8FlowKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2364F55F8 + 4 * byte_2365BCCC4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2364F562C + 4 * byte_2365BCCBF[v4]))();
}

uint64_t sub_2364F562C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F5634(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2364F563CLL);
  return result;
}

uint64_t sub_2364F5648(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2364F5650);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2364F5654(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F565C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind.CodingKeys()
{
  return &type metadata for DiscoveryModel.FlowKind.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind.SetupCodingKeys()
{
  return &type metadata for DiscoveryModel.FlowKind.SetupCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind.RepairCodingKeys()
{
  return &type metadata for DiscoveryModel.FlowKind.RepairCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind.MixedCodingKeys()
{
  return &type metadata for DiscoveryModel.FlowKind.MixedCodingKeys;
}

uint64_t _s12AppleIDSetup14DiscoveryModelV4RoleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2364F56F4 + 4 * byte_2365BCCCE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2364F5728 + 4 * byte_2365BCCC9[v4]))();
}

uint64_t sub_2364F5728(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F5730(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2364F5738);
  return result;
}

uint64_t sub_2364F5744(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2364F574CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2364F5750(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F5758(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Role.CodingKeys()
{
  return &type metadata for DiscoveryModel.Role.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Role.ClientCodingKeys()
{
  return &type metadata for DiscoveryModel.Role.ClientCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Role.ServerCodingKeys()
{
  return &type metadata for DiscoveryModel.Role.ServerCodingKeys;
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2364F57E0 + 4 * byte_2365BCCD8[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2364F5814 + 4 * byte_2365BCCD3[v4]))();
}

uint64_t sub_2364F5814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F581C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2364F5824);
  return result;
}

uint64_t sub_2364F5830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2364F5838);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2364F583C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2364F5844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodingKeys()
{
  return &type metadata for DiscoveryModel.CodingKeys;
}

unint64_t sub_2364F5864()
{
  unint64_t result;

  result = qword_2563E9268;
  if (!qword_2563E9268)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD734, &type metadata for DiscoveryModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9268);
  }
  return result;
}

unint64_t sub_2364F58AC()
{
  unint64_t result;

  result = qword_2563E9270;
  if (!qword_2563E9270)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD88C, &type metadata for DiscoveryModel.Role.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9270);
  }
  return result;
}

unint64_t sub_2364F58F4()
{
  unint64_t result;

  result = qword_2563E9278;
  if (!qword_2563E9278)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDA34, &type metadata for DiscoveryModel.FlowKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9278);
  }
  return result;
}

unint64_t sub_2364F593C()
{
  unint64_t result;

  result = qword_2563E9280;
  if (!qword_2563E9280)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDB3C, &type metadata for DiscoveryModel.State.DiscoveredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9280);
  }
  return result;
}

unint64_t sub_2364F5984()
{
  unint64_t result;

  result = qword_2563E9288;
  if (!qword_2563E9288)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDBF4, &type metadata for DiscoveryModel.State.DiscoveringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9288);
  }
  return result;
}

unint64_t sub_2364F59CC()
{
  unint64_t result;

  result = qword_2563E9290;
  if (!qword_2563E9290)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDCAC, &type metadata for DiscoveryModel.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9290);
  }
  return result;
}

unint64_t sub_2364F5A14()
{
  unint64_t result;

  result = qword_2563E9298;
  if (!qword_2563E9298)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDD64, &type metadata for DiscoveryModel.Discovering.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9298);
  }
  return result;
}

unint64_t sub_2364F5A5C()
{
  unint64_t result;

  result = qword_2563E92A0;
  if (!qword_2563E92A0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDE1C, &type metadata for DiscoveryModel.Discovered.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92A0);
  }
  return result;
}

unint64_t sub_2364F5AA4()
{
  unint64_t result;

  result = qword_2563E92A8;
  if (!qword_2563E92A8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDED4, &type metadata for DiscoveryModel.PairingState.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92A8);
  }
  return result;
}

unint64_t sub_2364F5AEC()
{
  unint64_t result;

  result = qword_2563E92B0;
  if (!qword_2563E92B0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDF8C, &type metadata for DiscoveryModel.PairingState.AnsweredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92B0);
  }
  return result;
}

unint64_t sub_2364F5B34()
{
  unint64_t result;

  result = qword_2563E92B8;
  if (!qword_2563E92B8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE044, &type metadata for DiscoveryModel.PairingState.AskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92B8);
  }
  return result;
}

unint64_t sub_2364F5B7C()
{
  unint64_t result;

  result = qword_2563E92C0;
  if (!qword_2563E92C0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE0FC, &type metadata for DiscoveryModel.PairingState.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92C0);
  }
  return result;
}

unint64_t sub_2364F5BC4()
{
  unint64_t result;

  result = qword_2563E92C8;
  if (!qword_2563E92C8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE204, &type metadata for DiscoveryModel.PairingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92C8);
  }
  return result;
}

unint64_t sub_2364F5C0C()
{
  unint64_t result;

  result = qword_2563E92D0;
  if (!qword_2563E92D0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE35C, &type metadata for DiscoveryModel.CodeType.DigitCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92D0);
  }
  return result;
}

unint64_t sub_2364F5C54()
{
  unint64_t result;

  result = qword_2563E92D8;
  if (!qword_2563E92D8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE414, &type metadata for DiscoveryModel.CodeType.AlphaCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92D8);
  }
  return result;
}

unint64_t sub_2364F5C9C()
{
  unint64_t result;

  result = qword_2563E92E0;
  if (!qword_2563E92E0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE51C, &type metadata for DiscoveryModel.CodeType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92E0);
  }
  return result;
}

unint64_t sub_2364F5CE4()
{
  unint64_t result;

  result = qword_2563E92E8;
  if (!qword_2563E92E8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE43C, &type metadata for DiscoveryModel.CodeType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92E8);
  }
  return result;
}

unint64_t sub_2364F5D2C()
{
  unint64_t result;

  result = qword_2563E92F0;
  if (!qword_2563E92F0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE464, &type metadata for DiscoveryModel.CodeType.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92F0);
  }
  return result;
}

unint64_t sub_2364F5D74()
{
  unint64_t result;

  result = qword_2563E92F8;
  if (!qword_2563E92F8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE384, &type metadata for DiscoveryModel.CodeType.AlphaCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E92F8);
  }
  return result;
}

unint64_t sub_2364F5DBC()
{
  unint64_t result;

  result = qword_2563E9300;
  if (!qword_2563E9300)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE3AC, &type metadata for DiscoveryModel.CodeType.AlphaCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9300);
  }
  return result;
}

unint64_t sub_2364F5E04()
{
  unint64_t result;

  result = qword_2563E9308;
  if (!qword_2563E9308)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE2CC, &type metadata for DiscoveryModel.CodeType.DigitCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9308);
  }
  return result;
}

unint64_t sub_2364F5E4C()
{
  unint64_t result;

  result = qword_2563E9310;
  if (!qword_2563E9310)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE2F4, &type metadata for DiscoveryModel.CodeType.DigitCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9310);
  }
  return result;
}

unint64_t sub_2364F5E94()
{
  unint64_t result;

  result = qword_2563E9318;
  if (!qword_2563E9318)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE27C, &type metadata for DiscoveryModel.CodeType.VisualCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9318);
  }
  return result;
}

unint64_t sub_2364F5EDC()
{
  unint64_t result;

  result = qword_2563E9320;
  if (!qword_2563E9320)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE2A4, &type metadata for DiscoveryModel.CodeType.VisualCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9320);
  }
  return result;
}

unint64_t sub_2364F5F24()
{
  unint64_t result;

  result = qword_2563E9328;
  if (!qword_2563E9328)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE22C, &type metadata for DiscoveryModel.CodeType.QrCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9328);
  }
  return result;
}

unint64_t sub_2364F5F6C()
{
  unint64_t result;

  result = qword_2563E9330;
  if (!qword_2563E9330)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE254, &type metadata for DiscoveryModel.CodeType.QrCodeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9330);
  }
  return result;
}

unint64_t sub_2364F5FB4()
{
  unint64_t result;

  result = qword_2563E9338;
  if (!qword_2563E9338)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE48C, &type metadata for DiscoveryModel.CodeType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9338);
  }
  return result;
}

unint64_t sub_2364F5FFC()
{
  unint64_t result;

  result = qword_2563E9340;
  if (!qword_2563E9340)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE4B4, &type metadata for DiscoveryModel.CodeType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9340);
  }
  return result;
}

unint64_t sub_2364F6044()
{
  unint64_t result;

  result = qword_2563E9348;
  if (!qword_2563E9348)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE124, &type metadata for DiscoveryModel.PairingState.NotStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9348);
  }
  return result;
}

unint64_t sub_2364F608C()
{
  unint64_t result;

  result = qword_2563E9350;
  if (!qword_2563E9350)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE14C, &type metadata for DiscoveryModel.PairingState.NotStartedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9350);
  }
  return result;
}

unint64_t sub_2364F60D4()
{
  unint64_t result;

  result = qword_2563E9358;
  if (!qword_2563E9358)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE06C, &type metadata for DiscoveryModel.PairingState.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9358);
  }
  return result;
}

unint64_t sub_2364F611C()
{
  unint64_t result;

  result = qword_2563E9360;
  if (!qword_2563E9360)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE094, &type metadata for DiscoveryModel.PairingState.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9360);
  }
  return result;
}

unint64_t sub_2364F6164()
{
  unint64_t result;

  result = qword_2563E9368;
  if (!qword_2563E9368)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDFB4, &type metadata for DiscoveryModel.PairingState.AskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9368);
  }
  return result;
}

unint64_t sub_2364F61AC()
{
  unint64_t result;

  result = qword_2563E9370;
  if (!qword_2563E9370)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDFDC, &type metadata for DiscoveryModel.PairingState.AskCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9370);
  }
  return result;
}

unint64_t sub_2364F61F4()
{
  unint64_t result;

  result = qword_2563E9378;
  if (!qword_2563E9378)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDEFC, &type metadata for DiscoveryModel.PairingState.AnsweredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9378);
  }
  return result;
}

unint64_t sub_2364F623C()
{
  unint64_t result;

  result = qword_2563E9380;
  if (!qword_2563E9380)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDF24, &type metadata for DiscoveryModel.PairingState.AnsweredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9380);
  }
  return result;
}

unint64_t sub_2364F6284()
{
  unint64_t result;

  result = qword_2563E9388;
  if (!qword_2563E9388)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDE44, &type metadata for DiscoveryModel.PairingState.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9388);
  }
  return result;
}

unint64_t sub_2364F62CC()
{
  unint64_t result;

  result = qword_2563E9390;
  if (!qword_2563E9390)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDE6C, &type metadata for DiscoveryModel.PairingState.CancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9390);
  }
  return result;
}

unint64_t sub_2364F6314()
{
  unint64_t result;

  result = qword_2563E9398;
  if (!qword_2563E9398)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE174, &type metadata for DiscoveryModel.PairingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9398);
  }
  return result;
}

unint64_t sub_2364F635C()
{
  unint64_t result;

  result = qword_2563E93A0;
  if (!qword_2563E93A0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BE19C, &type metadata for DiscoveryModel.PairingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93A0);
  }
  return result;
}

unint64_t sub_2364F63A4()
{
  unint64_t result;

  result = qword_2563E93A8;
  if (!qword_2563E93A8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDD8C, &type metadata for DiscoveryModel.Discovered.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93A8);
  }
  return result;
}

unint64_t sub_2364F63EC()
{
  unint64_t result;

  result = qword_2563E93B0;
  if (!qword_2563E93B0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDDB4, &type metadata for DiscoveryModel.Discovered.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93B0);
  }
  return result;
}

unint64_t sub_2364F6434()
{
  unint64_t result;

  result = qword_2563E93B8;
  if (!qword_2563E93B8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDCD4, &type metadata for DiscoveryModel.Discovering.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93B8);
  }
  return result;
}

unint64_t sub_2364F647C()
{
  unint64_t result;

  result = qword_2563E93C0;
  if (!qword_2563E93C0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDCFC, &type metadata for DiscoveryModel.Discovering.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93C0);
  }
  return result;
}

unint64_t sub_2364F64C4()
{
  unint64_t result;

  result = qword_2563E93C8;
  if (!qword_2563E93C8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDB64, &type metadata for DiscoveryModel.State.DiscoveringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93C8);
  }
  return result;
}

unint64_t sub_2364F650C()
{
  unint64_t result;

  result = qword_2563E93D0;
  if (!qword_2563E93D0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDB8C, &type metadata for DiscoveryModel.State.DiscoveringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93D0);
  }
  return result;
}

unint64_t sub_2364F6554()
{
  unint64_t result;

  result = qword_2563E93D8;
  if (!qword_2563E93D8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDAAC, &type metadata for DiscoveryModel.State.DiscoveredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93D8);
  }
  return result;
}

unint64_t sub_2364F659C()
{
  unint64_t result;

  result = qword_2563E93E0;
  if (!qword_2563E93E0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDAD4, &type metadata for DiscoveryModel.State.DiscoveredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93E0);
  }
  return result;
}

unint64_t sub_2364F65E4()
{
  unint64_t result;

  result = qword_2563E93E8;
  if (!qword_2563E93E8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDA5C, &type metadata for DiscoveryModel.State.PairedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93E8);
  }
  return result;
}

unint64_t sub_2364F662C()
{
  unint64_t result;

  result = qword_2563E93F0;
  if (!qword_2563E93F0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDA84, &type metadata for DiscoveryModel.State.PairedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93F0);
  }
  return result;
}

unint64_t sub_2364F6674()
{
  unint64_t result;

  result = qword_2563E93F8;
  if (!qword_2563E93F8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDC1C, &type metadata for DiscoveryModel.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E93F8);
  }
  return result;
}

unint64_t sub_2364F66BC()
{
  unint64_t result;

  result = qword_2563E9400;
  if (!qword_2563E9400)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BDC44, &type metadata for DiscoveryModel.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9400);
  }
  return result;
}

unint64_t sub_2364F6704()
{
  unint64_t result;

  result = qword_2563E9408;
  if (!qword_2563E9408)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD954, &type metadata for DiscoveryModel.FlowKind.SetupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9408);
  }
  return result;
}

unint64_t sub_2364F674C()
{
  unint64_t result;

  result = qword_2563E9410;
  if (!qword_2563E9410)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD97C, &type metadata for DiscoveryModel.FlowKind.SetupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9410);
  }
  return result;
}

unint64_t sub_2364F6794()
{
  unint64_t result;

  result = qword_2563E9418;
  if (!qword_2563E9418)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD904, &type metadata for DiscoveryModel.FlowKind.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9418);
  }
  return result;
}

unint64_t sub_2364F67DC()
{
  unint64_t result;

  result = qword_2563E9420;
  if (!qword_2563E9420)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD92C, &type metadata for DiscoveryModel.FlowKind.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9420);
  }
  return result;
}

unint64_t sub_2364F6824()
{
  unint64_t result;

  result = qword_2563E9428;
  if (!qword_2563E9428)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD8B4, &type metadata for DiscoveryModel.FlowKind.MixedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9428);
  }
  return result;
}

unint64_t sub_2364F686C()
{
  unint64_t result;

  result = qword_2563E9430;
  if (!qword_2563E9430)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD8DC, &type metadata for DiscoveryModel.FlowKind.MixedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9430);
  }
  return result;
}

unint64_t sub_2364F68B4()
{
  unint64_t result;

  result = qword_2563E9438;
  if (!qword_2563E9438)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD9A4, &type metadata for DiscoveryModel.FlowKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9438);
  }
  return result;
}

unint64_t sub_2364F68FC()
{
  unint64_t result;

  result = qword_2563E9440;
  if (!qword_2563E9440)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD9CC, &type metadata for DiscoveryModel.FlowKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9440);
  }
  return result;
}

unint64_t sub_2364F6944()
{
  unint64_t result;

  result = qword_2563E9448;
  if (!qword_2563E9448)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD7AC, &type metadata for DiscoveryModel.Role.ClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9448);
  }
  return result;
}

unint64_t sub_2364F698C()
{
  unint64_t result;

  result = qword_2563E9450;
  if (!qword_2563E9450)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD7D4, &type metadata for DiscoveryModel.Role.ClientCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9450);
  }
  return result;
}

unint64_t sub_2364F69D4()
{
  unint64_t result;

  result = qword_2563E9458;
  if (!qword_2563E9458)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD75C, &type metadata for DiscoveryModel.Role.ServerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9458);
  }
  return result;
}

unint64_t sub_2364F6A1C()
{
  unint64_t result;

  result = qword_2563E9460;
  if (!qword_2563E9460)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD784, &type metadata for DiscoveryModel.Role.ServerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9460);
  }
  return result;
}

unint64_t sub_2364F6A64()
{
  unint64_t result;

  result = qword_2563E9468;
  if (!qword_2563E9468)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD7FC, &type metadata for DiscoveryModel.Role.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9468);
  }
  return result;
}

unint64_t sub_2364F6AAC()
{
  unint64_t result;

  result = qword_2563E9470;
  if (!qword_2563E9470)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD824, &type metadata for DiscoveryModel.Role.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9470);
  }
  return result;
}

unint64_t sub_2364F6AF4()
{
  unint64_t result;

  result = qword_2563E9478;
  if (!qword_2563E9478)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD6A4, &type metadata for DiscoveryModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9478);
  }
  return result;
}

unint64_t sub_2364F6B3C()
{
  unint64_t result;

  result = qword_2563E9480;
  if (!qword_2563E9480)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BD6CC, &type metadata for DiscoveryModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563E9480);
  }
  return result;
}

uint64_t sub_2364F6B80(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646E694B776F6C66 && a2 == 0xE800000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7541746567726174 && a2 == 0xED00006761546874 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E69506465786966 && a2 == 0xE800000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6570795465646F63 && a2 == 0xE800000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002365CC950 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x526D6F74706D7973 && a2 == 0xED000074726F7065 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_2364F6FA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E65696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726576726573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2364F7088(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7075746573 && a2 == 0xE500000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726961706572 && a2 == 0xE600000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646578696DLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2364F71C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265766F63736964 && a2 == 0xEB00000000676E69;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265766F63736964 && a2 == 0xEA00000000006465 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646572696170 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2364F732C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x614D73776F6C6C61 && a2 == 0xEC0000006C61756ELL;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEE006C61756E614DLL || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53676E6972696170 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2364F74D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73746E756F636361 && a2 == 0xE800000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365636976726573 && a2 == 0xE800000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002365CC970 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53676E6972696170 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2364F769C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7472617453746F6ELL && a2 == 0xEA00000000006465;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2003789939 && a2 == 0xE400000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7041889 && a2 == 0xE300000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465726577736E61 && a2 == 0xE800000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_2364F78B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F436168706C61 && a2 == 0xE900000000000065 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646F437469676964 && a2 == 0xE900000000000065 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F436C6175736976 && a2 == 0xEA00000000006564 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65646F437271 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t static ObjcArchivable.unarchive(from:backing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_getAssociatedTypeWitness();
  v11 = sub_2365B047C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v18[-v13];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, a3, a4);
  v19 = a3;
  v20 = a4;
  v21 = v5;
  v22 = a2;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
  sub_2364B17EC((void (*)(char *, char *))sub_2364F7C2C, (uint64_t)v18, v15, a3, (uint64_t)&v23, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_2364F7C2C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v2[3] + 32))(a1, v2[5], v2[2]);
  if (v3)
    *a2 = v3;
  return result;
}

uint64_t sub_2364F7C68()
{
  return 1;
}

uint64_t static ObjcArchivableWrapper.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t ObjcArchivableWrapper.encoder.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_23646C4B0((uint64_t)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x60), a1, &qword_2563E9488);
}

uint64_t ObjcArchivableWrapper.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x68);
  swift_beginAccess();
  v4 = sub_2365B047C();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ObjcArchivableWrapper.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x68);
  swift_beginAccess();
  v4 = sub_2365B047C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*ObjcArchivableWrapper.wrappedValue.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

BOOL ObjcArchivableWrapper.needsUnarchivalDevelopment.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  _BOOL8 v8;
  uint64_t v10;

  v1 = *MEMORY[0x24BEE4EA0] & *v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = sub_2365B047C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - v5;
  v7 = (char *)v0 + *(_QWORD *)(v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v6, 1, AssociatedTypeWitness) != 1;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

id ObjcArchivableWrapper.__allocating_init(encoder:wrappedValue:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  id v11;
  uint64_t v12;
  _BYTE v15[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_2365B047C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v15[-v8 - 8];
  sub_23648D710(a1, (uint64_t)v15);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);
  v10 = objc_allocWithZone(v2);
  v11 = sub_2364F8EDC((uint64_t)v15, a2, (uint64_t)v9);
  (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  v12 = sub_2365B047C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v11;
}

id ObjcArchivableWrapper.__allocating_init(wrappedValue:)(uint64_t a1)
{
  id v2;
  uint64_t v3;

  v2 = sub_2364F90A0(a1);
  v3 = sub_2365B047C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

id ObjcArchivableWrapper.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return ObjcArchivableWrapper.init(coder:)(a1);
}

id ObjcArchivableWrapper.init(coder:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;

  v3 = *MEMORY[0x24BEE4EA0] & *v1;
  v4 = *(_QWORD *)(v3 + 0x50);
  v5 = (_QWORD *)sub_2365B047C();
  v27 = *(v5 - 1);
  v28 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)&v24 - v6;
  v7 = *(_QWORD *)(v3 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_2365B047C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - v14;
  v16 = v1;
  v17 = (void *)sub_2365B0038();
  v29 = a1;
  LODWORD(a1) = objc_msgSend(a1, sel_decodeBoolForKey_, v17);

  if (!(_DWORD)a1)
  {
    swift_getObjectType();

    v21 = (uint64_t)v25;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v25, 1, 1, v4);
    v20 = sub_2364F90A0(v21);
    (*(void (**)(uint64_t, id))(v27 + 8))(v21, v28);

LABEL_6:
    swift_deallocPartialClassInstance();
    return v20;
  }
  v28 = v16;
  v18 = v29;
  (*(void (**)(id, uint64_t, uint64_t))(v7 + 24))(v29, v4, v7);
  v19 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v13, 1, AssociatedTypeWitness) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v13, AssociatedTypeWitness);
    v22 = v28;
    swift_getObjectType();

    v20 = sub_2364F9188((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v15, AssociatedTypeWitness);
    goto LABEL_6;
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_2364F8380(uint64_t a1, uint64_t a2, void *a3)
{
  return ObjcArchivableWrapper.init(coder:)(a3);
}

Swift::Void __swiftcall ObjcArchivableWrapper.encode(with:)(NSCoder with)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Class v17;
  char *v18;
  int v19;
  void *v20;
  void *v21;
  void *v22;
  _QWORD v23[2];
  uint64_t v24;
  Class isa;
  __int128 v26;
  uint64_t v27;
  _BYTE v28[40];

  isa = with.super.isa;
  v2 = *MEMORY[0x24BEE4EA0] & *v1;
  v3 = sub_2365AF7C8();
  MEMORY[0x24BDAC7A8](v3);
  v23[1] = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2365AF7D4();
  v24 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + 80);
  v9 = sub_2365B047C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v23 - v12;
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v23 - v15;
  v23[0] = v2;
  sub_23646C4B0((uint64_t)v1 + *(_QWORD *)(v2 + 96), (uint64_t)&v26, &qword_2563E9488);
  if (v27)
  {
    v17 = isa;
    sub_23646A440(&v26, (uint64_t)v28);
    v18 = (char *)v1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v1) + 0x68);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v18, v9);
    v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8);
    if (v19 == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v8);
      (*(void (**)(Class, _BYTE *, uint64_t))(*(_QWORD *)(v23[0] + 88) + 16))(v17, v28, v8);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v8);
    }
    v22 = (void *)sub_2365B0038();
    -[objc_class encodeBool:forKey:](v17, sel_encodeBool_forKey_, v19 != 1, v22);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    sub_2364F92FC((uint64_t)&v26);
    sub_2365AF7BC();
    sub_2364F8C00(MEMORY[0x24BEE4AF8]);
    sub_2364F933C();
    sub_2365AF8DC();
    v20 = (void *)sub_2365AF7B0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    v21 = (void *)sub_2365AF8E8();

    -[objc_class failWithError:](isa, sel_failWithError_, v21);
  }
}

void sub_2364F86A0(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  ObjcArchivableWrapper.encode(with:)((NSCoder)v4);

}

uint64_t ObjcArchivableWrapper.developingUnarchive(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a1;
  v38 = a2;
  v3 = (_QWORD *)(*MEMORY[0x24BEE4EA0] & *v2);
  v4 = v3[10];
  v5 = sub_2365B047C();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v31 - v6;
  v7 = v3[11];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_2365B047C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v32 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v31 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v31 - v18;
  v20 = v3[14];
  v33 = v2;
  v21 = (char *)v2 + v20;
  v22 = v17;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v21, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v22);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v38, 1, 1, v4);
  }
  else
  {
    v31 = v22;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v15, AssociatedTypeWitness);
    v24 = v39;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 32))(v19, v36, v4, v7);
    if (v24)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
      v25 = v37;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v37, 0, 1, v4);
      v26 = (char *)v33 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v33) + 0x68);
      swift_beginAccess();
      v27 = v34;
      v28 = v25;
      v29 = v35;
      (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v26, v28, v35);
      swift_endAccess();
      v30 = v32;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v32, 1, 1, AssociatedTypeWitness);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v21, v30, v31);
      swift_endAccess();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 16))(v38, v26, v29);
    }
  }
}

id ObjcArchivableWrapper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ObjcArchivableWrapper.init()()
{
  sub_2364F9384();
}

void sub_2364F8A3C()
{
  sub_2364F9384();
}

uint64_t sub_2364F8A5C(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  sub_2364F92FC((uint64_t)a1 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *a1) + 0x60));
  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x68);
  v4 = sub_2365B047C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x70);
  swift_getAssociatedTypeWitness();
  v6 = sub_2365B047C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t static ObjcArchivableWrapperClassProducer.classForNSXPCListenerEndpoint()()
{
  return __swift_instantiateConcreteTypeFromMangledName(qword_2563E9498);
}

id ObjcArchivableWrapperClassProducer.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id _s12AppleIDSetup21ObjcArchivableWrapperCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_2364F8C00(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5000);
  v2 = sub_2365B06BC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_23646C4B0(v6, (uint64_t)&v15, (uint64_t *)&unk_2563E9550);
    v7 = v15;
    v8 = v16;
    result = sub_2364F8D34(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_23646C38C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2364F8D34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2365B09E0();
  sub_2365B008C();
  v4 = sub_2365B0A34();
  return sub_2364F8D98(a1, a2, v4);
}

unint64_t sub_2364F8D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_2365B08CC() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_2365B08CC() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_2365B08CC() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

id sub_2364F8EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  objc_class *ObjectType;
  _QWORD *v9;
  char *v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v10 = (char *)v4 + *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x68);
  (*(void (**)(char *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4)
                                                                                   + 0x50)
                                                                       - 8)
                                                           + 56))(v10, 1, 1, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + 0x50));
  v11 = (char *)v4 + *(_QWORD *)((*v9 & *v4) + 0x70);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v11, 1, 1, AssociatedTypeWitness);
  sub_23646C4B0(a1, (uint64_t)v4 + *(_QWORD *)((*v9 & *v4) + 0x60), &qword_2563E9488);
  swift_beginAccess();
  v13 = sub_2365B047C();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v15 = v4;
  v14(v10, a2, v13);
  swift_endAccess();
  swift_beginAccess();
  v16 = sub_2365B047C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v11, a3, v16);
  swift_endAccess();

  v19.receiver = v15;
  v19.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v19, sel_init);
  sub_2364F92FC(a1);
  return v17;
}

id sub_2364F90A0(uint64_t a1)
{
  objc_class *v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  _OWORD v11[2];
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_2365B047C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - v6;
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))((char *)v11 - v6, 1, 1, AssociatedTypeWitness);
  v8 = objc_allocWithZone(v1);
  v9 = sub_2364F8EDC((uint64_t)v11, a1, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

id sub_2364F9188(uint64_t a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  id v15;
  _OWORD v17[2];
  uint64_t v18;

  v3 = *((_QWORD *)v1 + 10);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_2365B047C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v17 - v7;
  v9 = sub_2365B047C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v17 - v11;
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))((char *)v17 - v11, 1, 1, v3);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, a1, AssociatedTypeWitness);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, AssociatedTypeWitness);
  v14 = objc_allocWithZone(v1);
  v15 = sub_2364F8EDC((uint64_t)v17, (uint64_t)v12, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t sub_2364F92FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9488);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2364F933C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563E9490;
  if (!qword_2563E9490)
  {
    v1 = sub_2365AF7D4();
    result = MEMORY[0x23B7F5164](MEMORY[0x24BDCAEE0], v1);
    atomic_store(result, (unint64_t *)&qword_2563E9490);
  }
  return result;
}

void sub_2364F9384()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t dispatch thunk of ObjcArchivable.archive(with:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of static ObjcArchivable.intermediateUnarchive(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static ObjcArchivable.developedUnarchive(from:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_2364F93D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2365B047C();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_2365B047C();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ObjcArchivableWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObjcArchivableWrapper);
}

uint64_t method lookup function for ObjcArchivableWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ObjcArchivableWrapper.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for ObjcArchivableWrapperClassProducer()
{
  return objc_opt_self();
}

id ModernAppleIDAuthenticationContext.__allocating_init(_:signInModelModifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = (uint64_t *)&v7[OBJC_IVAR___AKModernAppleIDAuthenticationContext_signInModelModifier];
  *v8 = 0;
  v8[1] = 0;
  *(_QWORD *)&v7[OBJC_IVAR___AKModernAppleIDAuthenticationContext_model] = a1;
  v9 = *v8;
  *v8 = a2;
  v8[1] = a3;
  swift_retain();
  sub_23645063C(a2);
  sub_236450690(v9);
  v12.receiver = v7;
  v12.super_class = v3;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_236450690(a2);
  swift_release();
  return v10;
}

id ModernAppleIDAuthenticationContext.init(_:signInModelModifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v5 = (uint64_t *)&v3[OBJC_IVAR___AKModernAppleIDAuthenticationContext_signInModelModifier];
  *v5 = 0;
  v5[1] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___AKModernAppleIDAuthenticationContext_model] = a1;
  v6 = *v5;
  *v5 = a2;
  v5[1] = a3;
  swift_retain();
  sub_23645063C(a2);
  sub_236450690(v6);
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for ModernAppleIDAuthenticationContext();
  v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_236450690(a2);
  swift_release();
  return v7;
}

uint64_t type metadata accessor for ModernAppleIDAuthenticationContext()
{
  return objc_opt_self();
}

id ModernAppleIDAuthenticationContext.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ModernAppleIDAuthenticationContext.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ModernAppleIDAuthenticationContext.__allocating_init(authenticatedServerRequestContext:)(uint64_t a1)
{
  return sub_2364F97A4(a1, (SEL *)&selRef_initWithAuthenticatedServerRequestContext_);
}

void ModernAppleIDAuthenticationContext.init(authenticatedServerRequestContext:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ModernAppleIDAuthenticationContext.__allocating_init(context:)(uint64_t a1)
{
  return sub_2364F97A4(a1, (SEL *)&selRef_initWithContext_);
}

id sub_2364F97A4(uint64_t a1, SEL *a2)
{
  objc_class *v2;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v2), *a2, a1);
  swift_unknownObjectRelease();
  return v3;
}

void ModernAppleIDAuthenticationContext.init(context:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2364F982C()
{
  swift_unknownObjectRetain();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ModernAppleIDAuthenticationContext.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModernAppleIDAuthenticationContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ModernAppleIDAuthenticationContext.presentBasicLoginUI()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v1;
  return swift_task_switch();
}

uint64_t sub_2364F98EC()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(id *)(v0 + 64);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_2364F9980;
  v3 = *(_QWORD *)(v0 + 64);
  v2[16] = v0 + 16;
  v2[17] = v3;
  v4 = (_QWORD *)swift_task_alloc();
  v2[18] = v4;
  *v4 = v2;
  v4[1] = sub_2364FFB80;
  return sub_2364F99FC((uint64_t)(v2 + 9), v3);
}

uint64_t sub_2364F9980()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *v1;
  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  swift_task_dealloc();
  if (!v0)
  {
    v8 = *(_QWORD **)(v2 + 56);
    *v8 = v3;
    v8[1] = v4;
    v8[2] = v5;
    v8[3] = v6;
    v8[4] = v7;
  }
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_2364F99FC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[6] = a1;
  v2[7] = a2;
  v2[8] = type metadata accessor for AuthenticationModel();
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2364F9A58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  return swift_task_switch();
}

uint64_t sub_2364F9A7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;

  v1 = v0[10];
  v3 = *(_QWORD *)(v1 + 112);
  v2 = *(_QWORD *)(v1 + 120);
  ObjectType = swift_getObjectType();
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_2364F9AF0;
  return sub_2364778C8(v0[9], v3, v0[8], ObjectType, v2);
}

uint64_t sub_2364F9AF0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364F9B44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  *(_BYTE *)(v0 + 192) = *(_BYTE *)(v1 + *(int *)(*(_QWORD *)(v0 + 64) + 40));
  sub_236503BA8(v1);
  return swift_task_switch();
}

uint64_t sub_2364F9B90()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;

  v1 = v0[10];
  v3 = *(_QWORD *)(v1 + 112);
  v2 = *(_QWORD *)(v1 + 120);
  ObjectType = swift_getObjectType();
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_2364F9C04;
  return sub_2364778C8(v0[9], v3, v0[8], ObjectType, v2);
}

uint64_t sub_2364F9C04()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364F9C58()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = *(_BYTE *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(void **)(v0 + 56);
  v4 = *(_QWORD *)(v2 + *(int *)(*(_QWORD *)(v0 + 64) + 36));
  *(_QWORD *)(v0 + 104) = v4;
  swift_bridgeObjectRetain();
  sub_236503BA8(v2);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = v1;
  *(_QWORD *)(v5 + 32) = v4;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v6 + 16) = v3;
  v7 = v3;
  return swift_task_switch();
}

uint64_t sub_2364F9CFC()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[10] + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = (uint64_t)v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A00);
  *v2 = v0;
  v2[1] = sub_2364F9DA0;
  return sub_236478B70((uint64_t)(v0 + 2), v1, (uint64_t)sub_236503BE4, v0[14], (uint64_t)&unk_2563E99F8, v0[15], v0[8], v3);
}

uint64_t sub_2364F9DA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364F9E08()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364F9E58()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 168) = *(_QWORD *)(v0 + 40);
  return swift_task_switch();
}

uint64_t sub_2364F9E84()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;

  v1 = v0[10];
  v3 = *(_QWORD *)(v1 + 112);
  v2 = *(_QWORD *)(v1 + 120);
  ObjectType = swift_getObjectType();
  v5 = (_QWORD *)swift_task_alloc();
  v0[22] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_2364F9F00;
  return sub_236478198(v3, (uint64_t)sub_2364FAB64, 0, v0[8], ObjectType, v2);
}

uint64_t sub_2364F9F00()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364F9F64()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364F9FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 160);
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 48);
  *(_OWORD *)v3 = *(_OWORD *)(v0 + 144);
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v3 + 32) = 0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FA000()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2364FA048(uint64_t a1, id a2, char a3, uint64_t a4)
{
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = objc_msgSend(a2, sel_username);
  if (v8)
  {
    v9 = v8;
    v10 = sub_2365B005C();
    v36 = v11;
    v37 = v10;

  }
  else
  {
    v36 = 0;
    v37 = 0;
  }
  v12 = objc_msgSend(a2, sel__password);
  if (v12)
  {
    v13 = v12;
    v14 = sub_2365B005C();
    v34 = v15;
    v35 = v14;

  }
  else
  {
    v34 = 0;
    v35 = 0;
  }
  v16 = objc_allocWithZone(MEMORY[0x24BE0ACB8]);
  v17 = a2;
  v18 = objc_msgSend(v16, sel_initWithContext_, v17);
  if (v18)
  {
    v33 = v18;
    objc_msgSend(v18, sel__updateWithValuesFromContext_, v17);

    v19 = 514;
    if ((a3 & 1) != 0)
      v19 = 66050;
    v32 = v19;
    v20 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28);
    v21 = *(void **)v20;
    v22 = *(void **)(v20 + 8);
    v23 = *(void **)(v20 + 16);
    v24 = *(void **)(v20 + 24);
    v30 = *(_QWORD *)(v20 + 40);
    v31 = *(_QWORD *)(v20 + 32);
    v25 = *(_QWORD *)(v20 + 56);
    v29 = *(_QWORD *)(v20 + 48);
    v27 = *(void **)(v20 + 64);
    v26 = *(void **)(v20 + 72);
    v28 = *(_BYTE *)(v20 + 80);
    swift_bridgeObjectRetain();
    sub_23644F8BC(v21, v22, v23, v24, v31, v30, v29, v25, v27, v26, v28);
    *(_QWORD *)v20 = v37;
    *(_QWORD *)(v20 + 8) = v36;
    *(_QWORD *)(v20 + 16) = v35;
    *(_QWORD *)(v20 + 24) = v34;
    *(_QWORD *)(v20 + 32) = v32;
    *(_QWORD *)(v20 + 40) = v33;
    *(_QWORD *)(v20 + 48) = a4;
    *(_QWORD *)(v20 + 56) = 0;
    *(_QWORD *)(v20 + 64) = 0;
    *(_QWORD *)(v20 + 72) = 0;
    *(_BYTE *)(v20 + 80) = 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2364FA1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2364FA214()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  int v4;
  void **v5;
  void **v6;
  void **v7;
  uint64_t *v8;
  void **v9;
  uint64_t *v10;
  uint64_t *v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _OWORD *v23;
  uint64_t (*v24)(void);
  uint64_t v26;
  int *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _OWORD *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  void *v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;

  v1 = v0[3];
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v3 = *v2;
  v4 = *((unsigned __int8 *)v2 + 80);
  if (v4 == 7)
  {
    v5 = (void **)(v3 + 24);
    v6 = (void **)(v3 + 32);
    v7 = (void **)(v3 + 40);
    v8 = (uint64_t *)(v3 + 48);
    v9 = (void **)(v3 + 56);
    v10 = (uint64_t *)(v3 + 64);
    v11 = (uint64_t *)(v3 + 72);
    v12 = (void **)(v3 + 80);
    v13 = (void **)(v3 + 88);
    v4 = *(unsigned __int8 *)(v3 + 96);
    v3 = *(_QWORD *)(v3 + 16);
  }
  else
  {
    v5 = (void **)(v2 + 1);
    v6 = (void **)(v2 + 2);
    v7 = (void **)(v2 + 3);
    v8 = v2 + 4;
    v9 = (void **)(v2 + 5);
    v10 = v2 + 6;
    v11 = v2 + 7;
    v12 = (void **)(v2 + 8);
    v13 = (void **)(v2 + 9);
  }
  v0[5] = v3;
  v14 = *v13;
  v0[6] = *v13;
  v15 = *v12;
  v0[7] = *v12;
  v16 = *v11;
  v0[8] = *v11;
  v17 = *v10;
  v0[9] = v17;
  v18 = *v9;
  v0[10] = *v9;
  v19 = *v8;
  v0[11] = *v8;
  v20 = (unint64_t)*v7;
  v0[12] = *v7;
  v21 = (unint64_t)*v6;
  v0[13] = *v6;
  v22 = (unint64_t)*v5;
  v0[14] = *v5;
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9970);
    sub_236503A68();
    swift_allocError();
    *v23 = xmmword_2365B48F0;
    swift_willThrow();
LABEL_6:
    v24 = (uint64_t (*)(void))v0[1];
    return v24();
  }
  v55 = v17;
  if ((v19 & 0x1000000) == 0
    || (v26 = v0[4] + OBJC_IVAR___AKModernAppleIDAuthenticationContext_signInModelModifier,
        v27 = *(int **)v26,
        v0[15] = *(_QWORD *)v26,
        v0[16] = *(_QWORD *)(v26 + 8),
        !v27))
  {
    v53 = v16;
    v29 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 && v20)
    {
      v30 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0)
        v30 = v3 & 0xFFFFFFFFFFFFLL;
      if (v30)
      {
        v31 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0)
          v31 = v21 & 0xFFFFFFFFFFFFLL;
        if (v31)
        {
          v32 = (_QWORD *)v0[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_23644F8BC((void *)v3, (void *)v22, (void *)v21, (void *)v20, v19, (uint64_t)v18, v55, v53, v15, v14, 0);
          *v32 = v3;
          v32[1] = v22;
          v32[2] = v21;
          v32[3] = v20;
LABEL_23:
          v24 = (uint64_t (*)(void))v0[1];
          return v24();
        }
      }
    }
    if ((v19 & 0x100) != 0)
    {
      if (qword_2563E42D0 != -1)
        swift_once();
      v34 = sub_2365AFC00();
      __swift_project_value_buffer(v34, (uint64_t)qword_2563E60D8);
      v35 = sub_2365AFBE8();
      v36 = sub_2365B0380();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v37 = 0;
        _os_log_impl(&dword_23644B000, v35, v36, "Client decided to skip basic login, means they are cancelling", v37, 2u);
        MEMORY[0x23B7F5254](v37, -1, -1);
      }
      v54 = (void *)v0[13];
      v56 = (void *)v0[14];
      v38 = v0[11];
      v51 = (void *)v0[12];
      v40 = v0[9];
      v39 = v0[10];
      v41 = (void *)v0[7];
      v42 = v0[8];
      v43 = (void *)v0[5];
      v44 = (void *)v0[6];

      sub_2364858F4();
      swift_allocError();
      v46 = 3;
    }
    else
    {
      if ((v19 & 1) == 0)
      {
        v33 = (_OWORD *)v0[2];
        sub_23644F8BC((void *)v3, (void *)v22, (void *)v21, (void *)v20, v19, (uint64_t)v18, v55, v53, v15, v14, 0);
        *v33 = 0u;
        v33[1] = 0u;
        goto LABEL_23;
      }
      if (qword_2563E42D0 != -1)
        swift_once();
      v47 = sub_2365AFC00();
      __swift_project_value_buffer(v47, (uint64_t)qword_2563E60D8);
      v48 = sub_2365AFBE8();
      v49 = sub_2365B0380();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_23644B000, v48, v49, "Client decided to cancel basic login", v50, 2u);
        MEMORY[0x23B7F5254](v50, -1, -1);
      }
      v54 = (void *)v0[13];
      v56 = (void *)v0[14];
      v38 = v0[11];
      v51 = (void *)v0[12];
      v40 = v0[9];
      v39 = v0[10];
      v41 = (void *)v0[7];
      v42 = v0[8];
      v43 = (void *)v0[5];
      v44 = (void *)v0[6];

      sub_2364858F4();
      swift_allocError();
      v46 = 2;
    }
    *(_QWORD *)v45 = v46;
    *(_OWORD *)(v45 + 8) = 0u;
    *(_OWORD *)(v45 + 24) = 0u;
    *(_QWORD *)(v45 + 40) = 0;
    *(_BYTE *)(v45 + 48) = 4;
    swift_willThrow();
    sub_23644F8BC(v43, v56, v54, v51, v38, v39, v40, v42, v41, v44, 0);
    goto LABEL_6;
  }
  sub_23644F6A4((id)v3, (void *)v22, (void *)v21, (void *)v20, (void *)v19, v18, v17, v16, v15, v14, 0);
  sub_23645063C((uint64_t)v27);
  v52 = (uint64_t (*)(uint64_t))((char *)v27 + *v27);
  v28 = (_QWORD *)swift_task_alloc();
  v0[17] = v28;
  *v28 = v0;
  v28[1] = sub_2364FA73C;
  return v52(v55);
}

uint64_t sub_2364FA73C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (!v0)
    sub_236450690(*(_QWORD *)(v2 + 120));
  return swift_task_switch();
}

uint64_t sub_2364FA7A8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unint64_t *v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;

  v1 = *(_QWORD *)(v0 + 112);
  if (!v1)
    goto LABEL_10;
  v2 = *(_QWORD *)(v0 + 96);
  if (!v2)
    goto LABEL_10;
  v3 = *(_QWORD *)(v0 + 40);
  v4 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0)
    v4 = v3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    goto LABEL_10;
  v5 = *(_QWORD *)(v0 + 104);
  v6 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v6 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
LABEL_10:
    v12 = *(_QWORD *)(v0 + 88);
    if ((v12 & 0x100) != 0)
    {
      if (qword_2563E42D0 != -1)
        swift_once();
      v15 = sub_2365AFC00();
      __swift_project_value_buffer(v15, (uint64_t)qword_2563E60D8);
      v16 = sub_2365AFBE8();
      v17 = sub_2365B0380();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_23644B000, v16, v17, "Client decided to skip basic login, means they are cancelling", v18, 2u);
        MEMORY[0x23B7F5254](v18, -1, -1);
      }
      v35 = *(void **)(v0 + 104);
      v37 = *(void **)(v0 + 112);
      v19 = *(_QWORD *)(v0 + 88);
      v33 = *(void **)(v0 + 96);
      v21 = *(_QWORD *)(v0 + 72);
      v20 = *(_QWORD *)(v0 + 80);
      v22 = *(void **)(v0 + 56);
      v23 = *(_QWORD *)(v0 + 64);
      v24 = *(void **)(v0 + 40);
      v25 = *(void **)(v0 + 48);

      sub_2364858F4();
      swift_allocError();
      v27 = 3;
    }
    else
    {
      if ((v12 & 1) == 0)
      {
        v13 = *(_OWORD **)(v0 + 16);
        sub_23644F8BC(*(void **)(v0 + 40), (void *)v1, *(void **)(v0 + 104), *(void **)(v0 + 96), v12, *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), *(void **)(v0 + 56), *(void **)(v0 + 48), 0);
        *v13 = 0u;
        v13[1] = 0u;
        goto LABEL_13;
      }
      if (qword_2563E42D0 != -1)
        swift_once();
      v28 = sub_2365AFC00();
      __swift_project_value_buffer(v28, (uint64_t)qword_2563E60D8);
      v29 = sub_2365AFBE8();
      v30 = sub_2365B0380();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v31 = 0;
        _os_log_impl(&dword_23644B000, v29, v30, "Client decided to cancel basic login", v31, 2u);
        MEMORY[0x23B7F5254](v31, -1, -1);
      }
      v35 = *(void **)(v0 + 104);
      v37 = *(void **)(v0 + 112);
      v19 = *(_QWORD *)(v0 + 88);
      v33 = *(void **)(v0 + 96);
      v21 = *(_QWORD *)(v0 + 72);
      v20 = *(_QWORD *)(v0 + 80);
      v22 = *(void **)(v0 + 56);
      v23 = *(_QWORD *)(v0 + 64);
      v24 = *(void **)(v0 + 40);
      v25 = *(void **)(v0 + 48);

      sub_2364858F4();
      swift_allocError();
      v27 = 2;
    }
    *(_QWORD *)v26 = v27;
    *(_OWORD *)(v26 + 8) = 0u;
    *(_OWORD *)(v26 + 24) = 0u;
    *(_QWORD *)(v26 + 40) = 0;
    *(_BYTE *)(v26 + 48) = 4;
    swift_willThrow();
    sub_23644F8BC(v24, v37, v35, v33, v19, v20, v21, v23, v22, v25, 0);
    v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
  v7 = *(_QWORD *)(v0 + 72);
  v34 = *(_QWORD *)(v0 + 80);
  v36 = *(_QWORD *)(v0 + 88);
  v9 = *(void **)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 64);
  v10 = *(void **)(v0 + 48);
  v11 = *(unint64_t **)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23644F8BC((void *)v3, (void *)v1, (void *)v5, (void *)v2, v36, v34, v7, v8, v9, v10, 0);
  *v11 = v3;
  v11[1] = v1;
  v11[2] = v5;
  v11[3] = v2;
LABEL_13:
  v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_2364FAB00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  sub_23644F8BC(*(void **)(v0 + 40), *(void **)(v0 + 112), *(void **)(v0 + 104), *(void **)(v0 + 96), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 64), *(void **)(v0 + 56), *(void **)(v0 + 48), 0);
  sub_236450690(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FAC84(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 56) = a2;
  *(_QWORD *)(v2 + 64) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_2364FACCC()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(id *)(v0 + 56);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_2364FAD60;
  v3 = *(_QWORD *)(v0 + 56);
  v2[16] = v0 + 16;
  v2[17] = v3;
  v4 = (_QWORD *)swift_task_alloc();
  v2[18] = v4;
  *v4 = v2;
  v4[1] = sub_2364FFB80;
  return sub_2364F99FC((uint64_t)(v2 + 9), v3);
}

uint64_t sub_2364FAD60()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  __int128 v3;

  v2 = *v1;
  v3 = *(_OWORD *)(*v1 + 32);
  *(_OWORD *)(v2 + 88) = *(_OWORD *)(*v1 + 16);
  *(_QWORD *)(v2 + 80) = v0;
  *(_OWORD *)(v2 + 104) = v3;
  *(_QWORD *)(v2 + 120) = *(_QWORD *)(v2 + 48);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FADD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void (**v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 64);

  if (v1)
  {
    if (*(_QWORD *)(v0 + 96))
    {
      v2 = (void *)sub_2365B0038();
      if (*(_QWORD *)(v0 + 112))
        goto LABEL_4;
    }
    else
    {
      v2 = 0;
      if (*(_QWORD *)(v0 + 112))
      {
LABEL_4:
        v3 = (void *)sub_2365B0038();
        if (*(_QWORD *)(v0 + 120))
        {
LABEL_5:
          v4 = (void *)sub_2365AFF48();
LABEL_10:
          v5 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v0 + 64);
          ((void (**)(_QWORD, void *, void *, void *, _QWORD))v5)[2](v5, v2, v3, v4, 0);
          _Block_release(v5);

          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
LABEL_9:
        v4 = 0;
        goto LABEL_10;
      }
    }
    v3 = 0;
    if (*(_QWORD *)(v0 + 120))
      goto LABEL_5;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FAF00()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (**v3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void *v4;

  v1 = *(_QWORD *)(v0 + 64);

  v2 = *(void **)(v0 + 80);
  if (v1)
  {
    v3 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v0 + 64);
    v4 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, _QWORD, _QWORD, void *))v3)[2](v3, 0, 0, 0, v4);
    _Block_release(v3);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModernAppleIDAuthenticationContext.dismissBasicLoginUI()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2364FAFA4()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_236503C8C;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FB12C(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_2364FB174()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_2364FB1E0;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FB1E0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 40) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t ModernAppleIDAuthenticationContext.presentLoginAlertWithError(_:title:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[12] = a6;
  v7[13] = v6;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  return swift_task_switch();
}

uint64_t sub_2364FB274()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 64);
  v2 = *(id *)(v0 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v4;
  *v4 = v0;
  v4[1] = sub_2364FB300;
  return sub_2365000EC(v0 + 16, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64));
}

uint64_t sub_2364FB300()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v2 = *(void **)(*v1 + 64);
  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 40);
  v8 = *(_QWORD *)(v3 + 48);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (!v0)
  {
    v9 = *(_QWORD **)(v3 + 56);
    *v9 = v4;
    v9[1] = v5;
    v9[2] = v6;
    v9[3] = v7;
    v9[4] = v8;
  }
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_2364FB39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[25] = a6;
  v7[26] = a7;
  v7[23] = a4;
  v7[24] = a5;
  v7[21] = a2;
  v7[22] = a3;
  v7[20] = a1;
  return swift_task_switch();
}

uint64_t sub_2364FB3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 208);
  v4 = *(_OWORD *)(v0 + 176);
  v5 = *(_OWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 216) = *(_QWORD *)(*(_QWORD *)(v0 + 168) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v2;
  *(_OWORD *)(v2 + 16) = v4;
  *(_OWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 48) = v1;
  return swift_task_switch();
}

uint64_t sub_2364FB43C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[27] + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v0[29] = v2;
  v3 = type metadata accessor for AuthenticationModel();
  *v2 = v0;
  v2[1] = sub_2364FB4D8;
  return sub_236478B70(v3, v1, (uint64_t)sub_236503B98, v0[28], (uint64_t)&unk_2563E99E0, 0, v3, MEMORY[0x24BEE4AE0] + 8);
}

uint64_t sub_2364FB4D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FB540()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FB57C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[21];
  v0[7] = v0 + 10;
  v0[2] = v0;
  v0[3] = sub_2364FB610;
  v2 = swift_continuation_init();
  v0[15] = MEMORY[0x24BDAC760];
  v3 = v0 + 15;
  v3[1] = 0x40000000;
  v3[2] = sub_2364FBA60;
  v3[3] = &block_descriptor_272;
  v3[4] = v2;
  objc_msgSend(v1, sel_presentBasicLoginUIWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_2364FB610()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 248) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_2364FB670()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FB6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 32) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FB6C4()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2364FB700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[3];
  char v40;
  uint64_t v41;

  if (!a3)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!a5)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (!a6)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v11 = swift_allocObject();
  swift_getErrorValue();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Error.into()(v41, (uint64_t)v39);
  v12 = v40;
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  *(_QWORD *)(v11 + 32) = a4;
  *(_QWORD *)(v11 + 40) = a5;
  v13 = v39[1];
  *(_OWORD *)(v11 + 48) = v39[0];
  *(_OWORD *)(v11 + 64) = v13;
  *(_OWORD *)(v11 + 80) = v39[2];
  *(_BYTE *)(v11 + 96) = v12;
  *(_BYTE *)(v11 + 97) = 1;
  v14 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v15 = *v14;
  v16 = (void *)v14[1];
  v18 = (void *)v14[2];
  v17 = (void *)v14[3];
  v20 = v14[4];
  v19 = v14[5];
  v21 = v14[6];
  v38 = v14[7];
  v22 = (void *)v14[8];
  v23 = (void *)v14[9];
  v24 = *((unsigned __int8 *)v14 + 80);
  if (v24 == 7)
  {
    v25 = *(void **)(v15 + 16);
    v26 = *(void **)(v15 + 24);
    v27 = *(void **)(v15 + 32);
    v28 = *(void **)(v15 + 40);
    v29 = *(void **)(v15 + 48);
    v30 = *(void **)(v15 + 56);
    v36 = v14[5];
    v37 = v14[6];
    v31 = *(_QWORD *)(v15 + 64);
    v32 = *(_QWORD *)(v15 + 72);
    v33 = *(void **)(v15 + 80);
    v34 = *(void **)(v15 + 88);
    v35 = *(_BYTE *)(v15 + 96);
    *(_QWORD *)(v11 + 104) = v25;
    *(_QWORD *)(v11 + 112) = v26;
    *(_QWORD *)(v11 + 120) = v27;
    *(_QWORD *)(v11 + 128) = v28;
    *(_QWORD *)(v11 + 136) = v29;
    *(_QWORD *)(v11 + 144) = v30;
    *(_QWORD *)(v11 + 152) = v31;
    *(_QWORD *)(v11 + 160) = v32;
    *(_QWORD *)(v11 + 168) = v33;
    *(_QWORD *)(v11 + 176) = v34;
    *(_BYTE *)(v11 + 184) = v35;
    sub_23644F6A4(v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35);
    sub_23644F8BC((void *)v15, v16, v18, v17, v20, v36, v37, v38, v22, v23, 7);
  }
  else
  {
    *(_QWORD *)(v11 + 104) = v15;
    *(_QWORD *)(v11 + 112) = v16;
    *(_QWORD *)(v11 + 120) = v18;
    *(_QWORD *)(v11 + 128) = v17;
    *(_QWORD *)(v11 + 136) = v20;
    *(_QWORD *)(v11 + 144) = v19;
    *(_QWORD *)(v11 + 152) = v21;
    *(_QWORD *)(v11 + 160) = v38;
    *(_QWORD *)(v11 + 168) = v22;
    *(_QWORD *)(v11 + 176) = v23;
    *(_BYTE *)(v11 + 184) = v24;
  }
  *v14 = v11;
  *(_OWORD *)(v14 + 1) = 0u;
  *(_OWORD *)(v14 + 3) = 0u;
  *(_OWORD *)(v14 + 5) = 0u;
  *(_OWORD *)(v14 + 7) = 0u;
  v14[9] = 0;
  *((_BYTE *)v14 + 80) = 6;
}

uint64_t sub_2364FB8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = a2;
  return swift_task_switch();
}

uint64_t sub_2364FB8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v23;
  void *v24;
  void *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v3 = *v2;
  v4 = *((unsigned __int8 *)v2 + 80);
  if (v4 == 7)
  {
    v4 = *(unsigned __int8 *)(v3 + 96);
    v3 = *(_QWORD *)(v3 + 16);
  }
  if (v4 == 6)
  {
    v5 = *(_OWORD *)(v3 + 16);
    v6 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)(v0 + 32) = *(_OWORD *)(v3 + 32);
    *(_OWORD *)(v0 + 48) = v6;
    *(_OWORD *)(v0 + 16) = v5;
    v7 = *(_OWORD *)(v3 + 64);
    v8 = *(_OWORD *)(v3 + 80);
    v9 = *(_OWORD *)(v3 + 112);
    *(_OWORD *)(v0 + 96) = *(_OWORD *)(v3 + 96);
    *(_OWORD *)(v0 + 112) = v9;
    *(_OWORD *)(v0 + 64) = v7;
    *(_OWORD *)(v0 + 80) = v8;
    v10 = *(_OWORD *)(v3 + 128);
    v11 = *(_OWORD *)(v3 + 144);
    v12 = *(_OWORD *)(v3 + 160);
    *(_OWORD *)(v0 + 169) = *(_OWORD *)(v3 + 169);
    *(_OWORD *)(v0 + 144) = v11;
    *(_OWORD *)(v0 + 160) = v12;
    *(_OWORD *)(v0 + 128) = v10;
    v31 = *(_QWORD *)(v0 + 56);
    v32 = *(_QWORD *)(v0 + 48);
    v29 = *(_QWORD *)(v0 + 72);
    v30 = *(_QWORD *)(v0 + 64);
    v27 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 80);
    v13 = *(_BYTE *)(v0 + 97);
    v14 = *(void **)(v0 + 104);
    v15 = *(void **)(v0 + 128);
    v24 = *(void **)(v0 + 120);
    v25 = *(void **)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 160);
    v19 = *(void **)(v0 + 168);
    v20 = *(void **)(v0 + 176);
    v21 = *(_BYTE *)(v0 + 184);
    v26 = *(_BYTE *)(v0 + 96);
    sub_23645E5FC(v0 + 16);
    sub_23644F8BC(v14, v25, v24, v15, v16, v17, v18, v23, v19, v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23645DC9C(v32, v31, v30, v29, v28, v27, v26);
  }
  else
  {
    v13 = 0;
  }
  **(_BYTE **)(v0 + 192) = v13;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FBA60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v5;
  _QWORD *v7;
  id v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t *v20;

  v5 = *(_QWORD *)(a1 + 32);
  if (a5)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
    swift_allocError();
    *v7 = a5;
    v8 = a5;
    return swift_continuation_throwingResumeWithError();
  }
  v11 = a3;
  if (a2)
  {
    v12 = sub_2365B005C();
    v14 = v13;
    if (v11)
      goto LABEL_5;
LABEL_8:
    v16 = 0;
    v17 = a4;
    if (v17)
      goto LABEL_6;
LABEL_9:
    v19 = 0;
    goto LABEL_10;
  }
  v12 = 0;
  v14 = 0;
  if (!a3)
    goto LABEL_8;
LABEL_5:
  v11 = sub_2365B005C();
  v16 = v15;
  v17 = a4;
  if (!v17)
    goto LABEL_9;
LABEL_6:
  v18 = v17;
  v19 = sub_2365AFF60();

LABEL_10:
  v20 = *(uint64_t **)(*(_QWORD *)(v5 + 64) + 40);
  *v20 = v12;
  v20[1] = v14;
  v20[2] = v11;
  v20[3] = v16;
  v20[4] = v19;
  return swift_continuation_throwingResume();
}

uint64_t sub_2364FBCD4(void *a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  v5[7] = a1;
  v5[8] = a5;
  v5[9] = _Block_copy(aBlock);
  if (!a2)
  {
    v5[10] = 0;
    v5[11] = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    v12 = 0;
    goto LABEL_6;
  }
  v5[10] = sub_2365B005C();
  v5[11] = v10;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v11 = sub_2365B005C();
LABEL_6:
  v5[12] = v11;
  v5[13] = v12;
  v13 = a5;
  v14 = a1;
  return swift_task_switch();
}

uint64_t sub_2364FBD74()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;

  v1 = *(void **)(v0 + 56);
  v2 = *(id *)(v0 + 64);
  v3 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v4;
  *v4 = v0;
  v4[1] = sub_2364FBE08;
  return sub_2365000EC(v0 + 16, *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 56));
}

uint64_t sub_2364FBE08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  __int128 v4;

  v2 = *v1;
  v3 = *(void **)(*v1 + 56);
  *(_QWORD *)(v2 + 120) = v0;
  v4 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v2 + 128) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v2 + 144) = v4;
  *(_QWORD *)(v2 + 160) = *(_QWORD *)(v2 + 48);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2364FBE94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void (**v6)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v1)
  {
    if (*(_QWORD *)(v0 + 136))
    {
      v3 = (void *)sub_2365B0038();
      if (*(_QWORD *)(v0 + 152))
        goto LABEL_4;
    }
    else
    {
      v3 = 0;
      if (*(_QWORD *)(v0 + 152))
      {
LABEL_4:
        v4 = (void *)sub_2365B0038();
        if (*(_QWORD *)(v0 + 160))
        {
LABEL_5:
          v5 = (void *)sub_2365AFF48();
LABEL_10:
          v6 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v0 + 72);
          ((void (**)(_QWORD, void *, void *, void *, _QWORD))v6)[2](v6, v3, v4, v5, 0);
          _Block_release(v6);

          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
LABEL_9:
        v5 = 0;
        goto LABEL_10;
      }
    }
    v4 = 0;
    if (*(_QWORD *)(v0 + 160))
      goto LABEL_5;
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FBFDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void (**v4)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void *v5;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(void **)(v0 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v3 = *(void **)(v0 + 120);
  if (v1)
  {
    v4 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v0 + 72);
    v5 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, _QWORD, _QWORD, void *))v4)[2](v4, 0, 0, 0, v5);
    _Block_release(v4);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModernAppleIDAuthenticationContext.presentSecondFactorUI()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2364FC0A0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_2364FC10C;
  v2[12] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FC10C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void sub_2364FC160(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;

  v4 = objc_allocWithZone(MEMORY[0x24BE0ACB8]);
  v5 = a2;
  v6 = objc_msgSend(v4, sel_initWithContext_, v5);
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, sel__updateWithValuesFromContext_, v5);

    v8 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28);
    sub_23644F8BC(*(void **)v8, *(void **)(v8 + 8), *(void **)(v8 + 16), *(void **)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(void **)(v8 + 64), *(void **)(v8 + 72), *(_BYTE *)(v8 + 80));
    *(_QWORD *)v8 = v7;
    *(_OWORD *)(v8 + 8) = xmmword_2365BEE50;
    *(_OWORD *)(v8 + 24) = xmmword_2365B48C0;
    *(_QWORD *)(v8 + 40) = 1;
    *(_OWORD *)(v8 + 48) = 0u;
    *(_OWORD *)(v8 + 64) = 0u;
    *(_BYTE *)(v8 + 80) = 1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2364FC240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2364FC258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  _BYTE *v5;
  id *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v3 = *((unsigned __int8 *)v2 + 80);
  if (v3 != 7)
  {
    v5 = v2 + 3;
    v6 = (id *)(v2 + 9);
    if (v3 != 1)
      goto LABEL_3;
LABEL_5:
    if ((*v5 & 1) != 0)
    {
      if (*v6)
      {
        *v6;
        goto LABEL_9;
      }
      v8 = 1;
    }
    else
    {
      v8 = sub_2365B0350();
    }
    **(_QWORD **)(v0 + 16) = v8;
    v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  v4 = *v2;
  v5 = (_BYTE *)(*v2 + 40);
  v6 = (id *)(*v2 + 88);
  if (*(_BYTE *)(v4 + 96) == 1)
    goto LABEL_5;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9970);
  sub_236503A68();
  swift_allocError();
  *v7 = xmmword_2365B48F0;
LABEL_9:
  swift_willThrow();
  v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_2364FC474(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_2364FC4BC()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_2364FC528;
  v2[12] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FC528(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FC594()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 24);

  v2 = *(void **)(v0 + 40);
  if (v1)
  {
    v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 24);
    v3[2](v3, *(_QWORD *)(v0 + 40), 0);

    _Block_release(v3);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FC5F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);
  void *v4;

  v1 = *(_QWORD *)(v0 + 24);

  v2 = *(void **)(v0 + 48);
  if (v1)
  {
    v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 24);
    v4 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, void *))v3)[2](v3, 0, v4);
    _Block_release(v3);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModernAppleIDAuthenticationContext.dismissSecondFactorUI()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2364FC694()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_236503C8C;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FC700(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2364FC718()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FC84C(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_2364FC894()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_2364FB1E0;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t ModernAppleIDAuthenticationContext.presentSecondFactorAlertWithError(_:title:message:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_2563E95C8 + dword_2563E95C8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2364CB758;
  return v5(a1);
}

void sub_2364FC964(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  int v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  char v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v46;
  _OWORD v47[3];
  char v48;
  uint64_t v49;

  v2 = sub_2365AFA2C();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2365B0020();
  MEMORY[0x24BDAC7A8](v3);
  sub_2365B002C();
  type metadata accessor for AISChildSetupFlowResult();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_2365AFA20();
  sub_2365B0074();
  v7 = sub_2365B00F8();
  v9 = v8;
  sub_2365B002C();
  v10 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_2365AFA20();
  *(_QWORD *)&v47[0] = sub_2365B0074();
  *((_QWORD *)&v47[0] + 1) = v11;
  v12 = sub_2365B00F8();
  if (a2)
  {
    v14 = v12;
    v15 = v13;
    v16 = swift_allocObject();
    swift_getErrorValue();
    Error.into()(v49, (uint64_t)v47);
    v17 = v48;
    *(_QWORD *)(v16 + 16) = v7;
    *(_QWORD *)(v16 + 24) = v9;
    *(_QWORD *)(v16 + 32) = v14;
    *(_QWORD *)(v16 + 40) = v15;
    v18 = v47[1];
    *(_OWORD *)(v16 + 48) = v47[0];
    *(_OWORD *)(v16 + 64) = v18;
    *(_OWORD *)(v16 + 80) = v47[2];
    *(_BYTE *)(v16 + 96) = v17;
    *(_BYTE *)(v16 + 97) = 1;
    v19 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
    v20 = *v19;
    v21 = (void *)v19[1];
    v23 = (void *)v19[2];
    v22 = (void *)v19[3];
    v25 = v19[4];
    v24 = v19[5];
    v27 = v19[6];
    v26 = v19[7];
    v28 = (void *)v19[8];
    v29 = (void *)v19[9];
    v30 = *((unsigned __int8 *)v19 + 80);
    if (v30 == 7)
    {
      v31 = *(void **)(v20 + 16);
      v32 = *(void **)(v20 + 24);
      v33 = *(void **)(v20 + 32);
      v34 = *(void **)(v20 + 40);
      v35 = *(void **)(v20 + 48);
      v36 = *(void **)(v20 + 56);
      v42 = v19[5];
      v44 = v19[6];
      v37 = *(_QWORD *)(v20 + 64);
      v38 = *(_QWORD *)(v20 + 72);
      v46 = v19[7];
      v39 = *(void **)(v20 + 80);
      v40 = *(void **)(v20 + 88);
      v41 = *(_BYTE *)(v20 + 96);
      *(_QWORD *)(v16 + 104) = v31;
      *(_QWORD *)(v16 + 112) = v32;
      *(_QWORD *)(v16 + 120) = v33;
      *(_QWORD *)(v16 + 128) = v34;
      *(_QWORD *)(v16 + 136) = v35;
      *(_QWORD *)(v16 + 144) = v36;
      *(_QWORD *)(v16 + 152) = v37;
      *(_QWORD *)(v16 + 160) = v38;
      *(_QWORD *)(v16 + 168) = v39;
      *(_QWORD *)(v16 + 176) = v40;
      *(_BYTE *)(v16 + 184) = v41;
      sub_23644F6A4(v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);
      sub_23644F8BC((void *)v20, v21, v23, v22, v25, v42, v44, v46, v28, v29, 7);
    }
    else
    {
      *(_QWORD *)(v16 + 104) = v20;
      *(_QWORD *)(v16 + 112) = v21;
      *(_QWORD *)(v16 + 120) = v23;
      *(_QWORD *)(v16 + 128) = v22;
      *(_QWORD *)(v16 + 136) = v25;
      *(_QWORD *)(v16 + 144) = v24;
      *(_QWORD *)(v16 + 152) = v27;
      *(_QWORD *)(v16 + 160) = v26;
      *(_QWORD *)(v16 + 168) = v28;
      *(_QWORD *)(v16 + 176) = v29;
      *(_BYTE *)(v16 + 184) = v30;
    }
    *v19 = v16;
    *(_OWORD *)(v19 + 1) = 0u;
    *(_OWORD *)(v19 + 3) = 0u;
    *(_OWORD *)(v19 + 5) = 0u;
    *(_OWORD *)(v19 + 7) = 0u;
    v19[9] = 0;
    *((_BYTE *)v19 + 80) = 6;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2364FCCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = a2;
  return swift_task_switch();
}

uint64_t sub_2364FCCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  int v4;
  char v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char v21;
  uint64_t v23;
  void *v24;
  void *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v3 = *v2;
  v4 = *((unsigned __int8 *)v2 + 80);
  if (v4 == 7)
  {
    v4 = *(unsigned __int8 *)(v3 + 96);
    v3 = *(_QWORD *)(v3 + 16);
  }
  v5 = 1;
  if (v4 == 6)
  {
    v6 = *(_OWORD *)(v3 + 16);
    v7 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)(v0 + 32) = *(_OWORD *)(v3 + 32);
    *(_OWORD *)(v0 + 48) = v7;
    *(_OWORD *)(v0 + 16) = v6;
    v8 = *(_OWORD *)(v3 + 64);
    v9 = *(_OWORD *)(v3 + 80);
    v10 = *(_OWORD *)(v3 + 112);
    *(_OWORD *)(v0 + 96) = *(_OWORD *)(v3 + 96);
    *(_OWORD *)(v0 + 112) = v10;
    *(_OWORD *)(v0 + 64) = v8;
    *(_OWORD *)(v0 + 80) = v9;
    v11 = *(_OWORD *)(v3 + 128);
    v12 = *(_OWORD *)(v3 + 144);
    v13 = *(_OWORD *)(v3 + 160);
    *(_OWORD *)(v0 + 169) = *(_OWORD *)(v3 + 169);
    *(_OWORD *)(v0 + 144) = v12;
    *(_OWORD *)(v0 + 160) = v13;
    *(_OWORD *)(v0 + 128) = v11;
    v31 = *(_QWORD *)(v0 + 56);
    v32 = *(_QWORD *)(v0 + 48);
    v29 = *(_QWORD *)(v0 + 72);
    v30 = *(_QWORD *)(v0 + 64);
    v27 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 80);
    v33 = *(unsigned __int8 *)(v0 + 97);
    v14 = *(void **)(v0 + 104);
    v15 = *(void **)(v0 + 128);
    v24 = *(void **)(v0 + 120);
    v25 = *(void **)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 136);
    v17 = *(_QWORD *)(v0 + 144);
    v18 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 160);
    v19 = *(void **)(v0 + 168);
    v20 = *(void **)(v0 + 176);
    v21 = *(_BYTE *)(v0 + 184);
    v26 = *(_BYTE *)(v0 + 96);
    sub_23645E5FC(v0 + 16);
    sub_23644F8BC(v14, v25, v24, v15, v16, v17, v18, v23, v19, v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23645DC9C(v32, v31, v30, v29, v28, v27, v26);
    if (v33)
      v5 = 2;
    else
      v5 = 1;
  }
  **(_BYTE **)(v0 + 192) = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FCE58(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_236503AD4((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_2364FD044(void *a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t (*v15)(void *);

  v5[2] = a1;
  v5[3] = a5;
  v5[4] = _Block_copy(aBlock);
  if (!a2)
  {
    v5[5] = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v11 = 0;
    goto LABEL_6;
  }
  sub_2365B005C();
  v5[5] = v10;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  sub_2365B005C();
LABEL_6:
  v5[6] = v11;
  v15 = (uint64_t (*)(void *))((char *)&dword_2563E95C8 + dword_2563E95C8);
  a5;
  v12 = a1;
  v13 = (_QWORD *)swift_task_alloc();
  v5[7] = v13;
  *v13 = v5;
  v13[1] = sub_2364FD114;
  return v15(a1);
}

uint64_t sub_2364FD114(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void (**v10)(_QWORD, _QWORD, _QWORD);
  void *v11;
  void (**v12)(_QWORD, _QWORD, _QWORD);

  v3 = v1;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 32);
  v8 = *(void **)(*v2 + 16);
  v7 = *(void **)(*v2 + 24);
  v9 = *v2;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (v3)
  {
    if (v6)
    {
      v10 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 32);
      v11 = (void *)sub_2365AF8E8();

      ((void (**)(_QWORD, _QWORD, void *))v10)[2](v10, 0, v11);
      _Block_release(v10);

    }
    else
    {

    }
  }
  else if (v6)
  {
    v12 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 32);
    ((void (**)(_QWORD, void *, _QWORD))v12)[2](v12, a1, 0);

    _Block_release(v12);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v9 + 8))();
}

uint64_t ModernAppleIDAuthenticationContext.presentBiometricOrPasscodeValidation(forAppleID:)()
{
  return swift_task_switch();
}

uint64_t sub_2364FD22C()
{
  return sub_2365B068C();
}

uint64_t sub_2364FD3B8(int a1, void *aBlock, void *a3)
{
  id v4;

  _Block_copy(aBlock);
  v4 = a3;
  return swift_task_switch();
}

uint64_t ModernAppleIDAuthenticationContext.presentServerProvidedUI(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2364FD414()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 16);
  v2 = *(id *)(v0 + 24);
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_2364FD484;
  v5 = *(_QWORD *)(v0 + 16);
  v4[13] = *(_QWORD *)(v0 + 24);
  v4[14] = v5;
  return swift_task_switch();
}

uint64_t sub_2364FD484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

void sub_2364FD4E8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v5 = objc_allocWithZone(MEMORY[0x24BE0ACB8]);
  v6 = a2;
  v7 = objc_msgSend(v5, sel_initWithContext_, v6);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel__updateWithValuesFromContext_, v6);

    v9 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28);
    v20 = *(void **)(v9 + 8);
    v21 = *(void **)v9;
    v10 = *(_QWORD *)(v9 + 32);
    v18 = *(void **)(v9 + 24);
    v19 = *(void **)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 40);
    v12 = *(_QWORD *)(v9 + 48);
    v14 = *(_QWORD *)(v9 + 56);
    v13 = *(void **)(v9 + 64);
    v15 = *(void **)(v9 + 72);
    v16 = *(_BYTE *)(v9 + 80);
    v17 = a3;
    sub_23644F8BC(v21, v20, v19, v18, v10, v11, v12, v14, v13, v15, v16);
    *(_QWORD *)v9 = v8;
    *(_QWORD *)(v9 + 8) = a3;
    *(_OWORD *)(v9 + 16) = 0u;
    *(_OWORD *)(v9 + 32) = 0u;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_BYTE *)(v9 + 80) = 2;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2364FD5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2364FD614()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  int v4;
  void **v5;
  uint64_t *v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t *v10;
  uint64_t *v11;
  void **v12;
  void **v13;
  int v14;
  _OWORD *v15;
  uint64_t (*v16)(void);
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t *v28;
  void *v30;
  uint64_t v31;

  v1 = v0[3];
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v3 = *v2;
  v4 = *((unsigned __int8 *)v2 + 80);
  if (v4 != 7)
  {
    v5 = (void **)(v2 + 1);
    v6 = v2 + 2;
    v7 = (void **)(v2 + 3);
    v8 = (void **)(v2 + 4);
    v9 = (void **)(v2 + 5);
    v10 = v2 + 6;
    v11 = v2 + 7;
    v12 = (void **)(v2 + 8);
    v13 = (void **)(v2 + 9);
    if (v4 != 2)
      goto LABEL_3;
LABEL_6:
    v17 = *v7;
    v18 = *v6;
    if (*v6)
    {
      v19 = *v8;
      if (*v8)
      {
        v20 = *v13;
        v21 = *v12;
        v22 = *v10;
        v23 = *v9;
        v24 = *v5;
        v30 = *v5;
        v31 = *v11;
        v25 = (id)v18;
        sub_23644F6A4((id)v3, v24, (void *)v18, v17, v19, v23, v22, v31, v21, v20, 2);
        v26 = v19;
        sub_2365AFF54();
        sub_23644F8BC((void *)v3, v30, (void *)v18, v17, (uint64_t)v19, (uint64_t)v23, v22, v31, v21, v20, 2);

      }
      else
      {
        v27 = (id)v18;
      }
    }
    else
    {
      if (v17)
      {
        v17;
        goto LABEL_4;
      }
      v18 = 1;
    }
    v28 = (uint64_t *)v0[2];
    *v28 = v18;
    v28[1] = 0;
    v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  v5 = (void **)(v3 + 24);
  v6 = (uint64_t *)(v3 + 32);
  v7 = (void **)(v3 + 40);
  v8 = (void **)(v3 + 48);
  v9 = (void **)(v3 + 56);
  v10 = (uint64_t *)(v3 + 64);
  v11 = (uint64_t *)(v3 + 72);
  v12 = (void **)(v3 + 80);
  v13 = (void **)(v3 + 88);
  v14 = *(unsigned __int8 *)(v3 + 96);
  v3 = *(_QWORD *)(v3 + 16);
  if (v14 == 2)
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9970);
  sub_236503A68();
  swift_allocError();
  *v15 = xmmword_2365B48F0;
LABEL_4:
  swift_willThrow();
  v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_2364FD954(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  return swift_task_switch();
}

uint64_t sub_2364FD9A8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 24);
  v2 = *(id *)(v0 + 16);
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_2364FDA18;
  v5 = *(_QWORD *)(v0 + 16);
  v4[13] = *(_QWORD *)(v0 + 24);
  v4[14] = v5;
  return swift_task_switch();
}

uint64_t sub_2364FDA18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = v2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FDA88()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void (**v5)(_QWORD, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void **)(v0 + 16);

  if (v1)
  {
    if (*(_QWORD *)(v0 + 56))
      v3 = (void *)sub_2365AFF48();
    else
      v3 = 0;
    v4 = *(void **)(v0 + 48);
    v5 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 32);
    ((void (**)(_QWORD, void *, void *, _QWORD))v5)[2](v5, v4, v3, 0);
    _Block_release(v5);

  }
  else
  {

  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FDB48()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void (**v4)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void **)(v0 + 16);

  v3 = *(void **)(v0 + 64);
  if (v1)
  {
    v4 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 32);
    v5 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, _QWORD, void *))v4)[2](v4, 0, 0, v5);
    _Block_release(v4);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModernAppleIDAuthenticationContext.dismissServerProvidedUI()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2364FDBF0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_236503C8C;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FDC5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_2364FDD90(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_2364FDDD8()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_2364FB1E0;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t ModernAppleIDAuthenticationContext.presentNativeRecoveryUI(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2364FDE5C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 16);
  v2 = *(id *)(v0 + 24);
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_236503C90;
  v5 = *(_QWORD *)(v0 + 16);
  v4[12] = *(_QWORD *)(v0 + 24);
  v4[13] = v5;
  return swift_task_switch();
}

void sub_2364FDECC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v5 = objc_allocWithZone(MEMORY[0x24BE0ACB8]);
  v6 = a2;
  v7 = objc_msgSend(v5, sel_initWithContext_, v6);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel__updateWithValuesFromContext_, v6);

    v9 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28);
    v20 = *(void **)(v9 + 8);
    v21 = *(void **)v9;
    v10 = *(_QWORD *)(v9 + 32);
    v18 = *(void **)(v9 + 24);
    v19 = *(void **)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 40);
    v12 = *(_QWORD *)(v9 + 48);
    v14 = *(_QWORD *)(v9 + 56);
    v13 = *(void **)(v9 + 64);
    v15 = *(void **)(v9 + 72);
    v16 = *(_BYTE *)(v9 + 80);
    v17 = a3;
    sub_23644F8BC(v21, v20, v19, v18, v10, v11, v12, v14, v13, v15, v16);
    *(_QWORD *)v9 = v8;
    *(_QWORD *)(v9 + 8) = a3;
    *(_OWORD *)(v9 + 16) = 0u;
    *(_OWORD *)(v9 + 32) = 0u;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_BYTE *)(v9 + 80) = 3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2364FDFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2364FDFF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  int v4;
  void **v5;
  void **v6;
  void **v7;
  void **v8;
  void **v9;
  uint64_t *v10;
  uint64_t *v11;
  void **v12;
  void **v13;
  int v14;
  _OWORD *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t (*v23)(void);
  id v24;
  id v25;
  id v26;
  _QWORD *v27;
  void *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0[3];
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v3 = *v2;
  v4 = *((unsigned __int8 *)v2 + 80);
  if (v4 != 7)
  {
    v5 = (void **)(v2 + 1);
    v6 = (void **)(v2 + 2);
    v7 = (void **)(v2 + 3);
    v8 = (void **)(v2 + 4);
    v9 = (void **)(v2 + 5);
    v10 = v2 + 6;
    v11 = v2 + 7;
    v12 = (void **)(v2 + 8);
    v13 = (void **)(v2 + 9);
    if (v4 != 3)
      goto LABEL_3;
LABEL_5:
    v16 = *v13;
    v17 = *v12;
    v18 = *v8;
    v19 = *v7;
    v20 = *v6;
    v21 = *v5;
    v30 = *v10;
    v31 = *v11;
    v29 = *v9;
    if (*v7)
    {
      sub_23644F6A4((id)v3, v21, v20, v19, v18, *v9, *v10, *v11, v17, v16, 3);
      v22 = v19;
      sub_2365AFF54();

      if (v20)
      {
LABEL_7:
        v20;
        swift_willThrow();
        sub_23644F8BC((void *)v3, v21, v20, v19, (uint64_t)v18, (uint64_t)v29, v30, v31, v17, v16, 3);
        goto LABEL_8;
      }
    }
    else
    {
      v24 = v20;
      v25 = (id)v3;
      v26 = v21;
      if (v20)
        goto LABEL_7;
    }
    v27 = (_QWORD *)v0[2];
    sub_23644F8BC((void *)v3, v21, v20, v19, (uint64_t)v18, (uint64_t)v29, v30, v31, v17, v16, 3);
    *v27 = 1;
    v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  v5 = (void **)(v3 + 24);
  v6 = (void **)(v3 + 32);
  v7 = (void **)(v3 + 40);
  v8 = (void **)(v3 + 48);
  v9 = (void **)(v3 + 56);
  v10 = (uint64_t *)(v3 + 64);
  v11 = (uint64_t *)(v3 + 72);
  v12 = (void **)(v3 + 80);
  v13 = (void **)(v3 + 88);
  v14 = *(unsigned __int8 *)(v3 + 96);
  v3 = *(_QWORD *)(v3 + 16);
  if (v14 == 3)
    goto LABEL_5;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9970);
  sub_236503A68();
  swift_allocError();
  *v15 = xmmword_2365B48F0;
  swift_willThrow();
LABEL_8:
  v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_2364FE360(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  return swift_task_switch();
}

uint64_t sub_2364FE3B4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 24);
  v2 = *(id *)(v0 + 16);
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_2364FE424;
  v5 = *(_QWORD *)(v0 + 16);
  v4[12] = *(_QWORD *)(v0 + 24);
  v4[13] = v5;
  return swift_task_switch();
}

uint64_t sub_2364FE424(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 56) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FE490()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void (**v4)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void **)(v0 + 16);

  if (v1)
  {
    if (*(_QWORD *)(v0 + 48))
    {
      v3 = (void *)sub_2365AFF48();
      swift_bridgeObjectRelease();
    }
    else
    {
      v3 = 0;
    }
    v4 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 32);
    ((void (**)(_QWORD, void *, _QWORD))v4)[2](v4, v3, 0);
    _Block_release(v4);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FE53C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void (**v4)(_QWORD, _QWORD, _QWORD);
  void *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void **)(v0 + 16);

  v3 = *(void **)(v0 + 56);
  if (v1)
  {
    v4 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 32);
    v5 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, void *))v4)[2](v4, 0, v5);
    _Block_release(v4);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModernAppleIDAuthenticationContext.dismissNativeRecoveryUI()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2364FE5E0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_236503C8C;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FE768(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_2364FE7B0()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_2364FB1E0;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t ModernAppleIDAuthenticationContext.presentFidoAuth(for:fidoContext:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = v2;
  return swift_task_switch();
}

uint64_t sub_2364FE834()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 16);
  v2 = *(id *)(v0 + 24);
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_2364FE8A4;
  v5 = *(_QWORD *)(v0 + 16);
  v4[12] = *(_QWORD *)(v0 + 24);
  v4[13] = v5;
  return swift_task_switch();
}

uint64_t sub_2364FE8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void sub_2364FE8F8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  char v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  v5 = objc_allocWithZone(MEMORY[0x24BE0ACB8]);
  v6 = a2;
  v7 = objc_msgSend(v5, sel_initWithContext_, v6);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel__updateWithValuesFromContext_, v6);

    v9 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28);
    v20 = *(void **)(v9 + 8);
    v21 = *(void **)v9;
    v10 = *(_QWORD *)(v9 + 32);
    v18 = *(void **)(v9 + 24);
    v19 = *(void **)(v9 + 16);
    v11 = *(_QWORD *)(v9 + 40);
    v12 = *(_QWORD *)(v9 + 48);
    v14 = *(_QWORD *)(v9 + 56);
    v13 = *(void **)(v9 + 64);
    v15 = *(void **)(v9 + 72);
    v16 = *(_BYTE *)(v9 + 80);
    v17 = a3;
    sub_23644F8BC(v21, v20, v19, v18, v10, v11, v12, v14, v13, v15, v16);
    *(_QWORD *)v9 = v8;
    *(_QWORD *)(v9 + 8) = a3;
    *(_OWORD *)(v9 + 16) = 0u;
    *(_OWORD *)(v9 + 32) = 0u;
    *(_OWORD *)(v9 + 48) = 0u;
    *(_OWORD *)(v9 + 64) = 0u;
    *(_BYTE *)(v9 + 80) = 4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2364FEA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2364FEA24()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  int v3;
  _BYTE *v4;
  void **v5;
  void **v6;
  _OWORD *v7;
  uint64_t (*v8)(void);
  void *v9;
  uint64_t v10;
  id v11;
  void *v13;
  uint64_t (*v14)(void);

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (void **)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v3 = *((unsigned __int8 *)v2 + 80);
  if (v3 != 7)
  {
    v5 = v2 + 2;
    v6 = v2 + 3;
    if (v3 != 4)
      goto LABEL_3;
LABEL_6:
    v9 = *v5;
    v10 = (uint64_t)v9;
    if (!v9)
    {
      v13 = *v6;
      if (v13)
      {
        v13;
        goto LABEL_4;
      }
      v10 = 1;
    }
    **(_QWORD **)(v0 + 16) = v10;
    v14 = *(uint64_t (**)(void))(v0 + 8);
    v11 = v9;
    v8 = v14;
    return v8();
  }
  v4 = *v2;
  v5 = (void **)((char *)*v2 + 32);
  v6 = (void **)((char *)*v2 + 40);
  if (v4[96] == 4)
    goto LABEL_6;
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9970);
  sub_236503A68();
  swift_allocError();
  *v7 = xmmword_2365B48F0;
LABEL_4:
  swift_willThrow();
  v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_2364FEC5C(void *a1, void *a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  id v8;
  id v9;
  id v10;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  v8 = a2;
  v9 = a4;
  v10 = a1;
  return swift_task_switch();
}

uint64_t sub_2364FECC4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 32);
  v2 = *(id *)(v0 + 24);
  v3 = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v4;
  *v4 = v0;
  v4[1] = sub_2364FED34;
  v5 = *(_QWORD *)(v0 + 24);
  v4[12] = *(_QWORD *)(v0 + 32);
  v4[13] = v5;
  return swift_task_switch();
}

uint64_t sub_2364FED34(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FEDA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void (**v5)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);

  v4 = *(void **)(v0 + 56);
  if (v1)
  {
    v5 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 40);
    v5[2](v5, *(_QWORD *)(v0 + 56), 0);

    _Block_release(v5);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FEE18()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void (**v5)(_QWORD, _QWORD, _QWORD);
  void *v6;

  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(void **)(v0 + 16);
  v2 = *(void **)(v0 + 24);

  v4 = *(void **)(v0 + 64);
  if (v1)
  {
    v5 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 40);
    v6 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, void *))v5)[2](v5, 0, v6);
    _Block_release(v5);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModernAppleIDAuthenticationContext.presentKeepUsingUI(forAppleID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2364FEEC4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(id *)(v0 + 32);
  swift_bridgeObjectRetain();
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_2364FEF40;
  v3 = *(_QWORD *)(v0 + 32);
  *(_OWORD *)(v2 + 96) = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v2 + 88) = v3;
  return swift_task_switch();
}

uint64_t sub_2364FEF40(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

void sub_2364FEF9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  void *v15;

  if (a3)
  {
    v4 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28);
    v14 = *(void **)(v4 + 8);
    v15 = *(void **)v4;
    v5 = *(void **)(v4 + 24);
    v13 = *(void **)(v4 + 16);
    v6 = *(_QWORD *)(v4 + 32);
    v7 = *(_QWORD *)(v4 + 40);
    v8 = *(_QWORD *)(v4 + 48);
    v9 = *(_QWORD *)(v4 + 56);
    v10 = *(void **)(v4 + 64);
    v11 = *(void **)(v4 + 72);
    v12 = *(_BYTE *)(v4 + 80);
    swift_bridgeObjectRetain();
    sub_23644F8BC(v15, v14, v13, v5, v6, v7, v8, v9, v10, v11, v12);
    *(_QWORD *)v4 = a2;
    *(_QWORD *)(v4 + 8) = a3;
    *(_QWORD *)(v4 + 16) = 2;
    *(_OWORD *)(v4 + 24) = 0u;
    *(_OWORD *)(v4 + 40) = 0u;
    *(_OWORD *)(v4 + 56) = 0u;
    *(_QWORD *)(v4 + 72) = 0;
    *(_BYTE *)(v4 + 80) = 5;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2364FF080(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_2364FF098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;
  _OWORD *v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  char v10;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v3 = *((unsigned __int8 *)v2 + 80);
  if (v3 == 7)
  {
    v4 = *v2;
    v5 = (uint64_t *)(*v2 + 32);
    if (*(_BYTE *)(v4 + 96) != 5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9970);
      sub_236503A68();
      swift_allocError();
      *v6 = xmmword_2365B48F0;
      swift_willThrow();
      v7 = *(uint64_t (**)(void))(v0 + 8);
      return v7();
    }
  }
  else
  {
    v5 = v2 + 2;
    if (v3 != 5)
      goto LABEL_3;
  }
  v8 = *v5;
  v9 = v8;
  v10 = v8 & 1;
  if (v9 == 2)
    v10 = 2;
  **(_BYTE **)(v0 + 16) = v10;
  v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_2364FF2A4(uint64_t a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  if (a1)
  {
    v6 = sub_2365B005C();
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v3[4] = v6;
  v3[5] = v7;
  v8 = a3;
  return swift_task_switch();
}

uint64_t sub_2364FF310()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)v2 = v0;
  *(_QWORD *)(v2 + 8) = sub_2364FF390;
  v3 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 96) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 88) = v3;
  return swift_task_switch();
}

uint64_t sub_2364FF390(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 56) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FF400()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 24);

  swift_bridgeObjectRelease();
  if (v1)
  {
    v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 24);
    v2[2](v2, *(unsigned __int8 *)(v0 + 64), 0);
    _Block_release(v2);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FF460()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);
  void *v4;

  v1 = *(_QWORD *)(v0 + 24);

  swift_bridgeObjectRelease();
  v2 = *(void **)(v0 + 56);
  if (v1)
  {
    v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 24);
    v4 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, void *))v3)[2](v3, 0, v4);
    _Block_release(v3);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ModernAppleIDAuthenticationContext.dismissKeepUsingUI()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2364FF508()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v2;
  *v2 = v0;
  v2[1] = sub_2364FF574;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FF574(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

double sub_2364FF5D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  char v26;
  double result;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;

  v2 = swift_allocObject();
  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  v4 = *v3;
  v5 = (void *)v3[1];
  v6 = (void *)v3[2];
  v7 = (void *)v3[3];
  v8 = (void *)v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = (void *)v3[8];
  v13 = (void *)v3[9];
  v14 = *((unsigned __int8 *)v3 + 80);
  v44 = v6;
  v45 = v5;
  v42 = (uint64_t)v8;
  v43 = v7;
  if (v14 != 7)
  {
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    *(_QWORD *)(v2 + 32) = v6;
    *(_QWORD *)(v2 + 40) = v7;
    *(_QWORD *)(v2 + 48) = v8;
    *(_QWORD *)(v2 + 56) = v9;
    LOBYTE(v21) = v14;
    v20 = v13;
    v19 = v12;
    v18 = v11;
    *(_QWORD *)(v2 + 64) = v10;
    *(_QWORD *)(v2 + 72) = v11;
    v17 = v10;
    v16 = (void *)v9;
    *(_QWORD *)(v2 + 80) = v12;
    *(_QWORD *)(v2 + 88) = v13;
    v15 = v4;
    *(_BYTE *)(v2 + 96) = v14;
    goto LABEL_5;
  }
  v15 = *(_QWORD *)(v4 + 16);
  v5 = *(void **)(v4 + 24);
  v6 = *(void **)(v4 + 32);
  v7 = *(void **)(v4 + 40);
  v8 = *(void **)(v4 + 48);
  v16 = *(void **)(v4 + 56);
  v17 = *(_QWORD *)(v4 + 64);
  v18 = *(_QWORD *)(v4 + 72);
  v19 = *(void **)(v4 + 80);
  v20 = *(void **)(v4 + 88);
  v21 = *(unsigned __int8 *)(v4 + 96);
  *(_QWORD *)(v2 + 16) = v15;
  *(_QWORD *)(v2 + 24) = v5;
  *(_QWORD *)(v2 + 32) = v6;
  *(_QWORD *)(v2 + 40) = v7;
  *(_QWORD *)(v2 + 48) = v8;
  *(_QWORD *)(v2 + 56) = v16;
  *(_QWORD *)(v2 + 64) = v17;
  *(_QWORD *)(v2 + 72) = v18;
  *(_QWORD *)(v2 + 80) = v19;
  *(_QWORD *)(v2 + 88) = v20;
  *(_BYTE *)(v2 + 96) = v21;
  if (v21 != 7)
  {
LABEL_5:
    sub_23644F6A4((id)v15, v5, v6, v7, v8, v16, v17, v18, v19, v20, v21);
    goto LABEL_6;
  }
  v37 = v10;
  v38 = v9;
  v22 = *(void **)(v15 + 24);
  v35 = v12;
  v36 = v11;
  v23 = *(void **)(v15 + 32);
  v29 = *(void **)(v15 + 40);
  v30 = *(void **)(v15 + 16);
  v34 = v13;
  v28 = *(void **)(v15 + 48);
  v40 = *(_QWORD *)(v15 + 64);
  v41 = *(void **)(v15 + 56);
  v24 = *(void **)(v15 + 80);
  v39 = *(_QWORD *)(v15 + 72);
  v25 = *(void **)(v15 + 88);
  v31 = v24;
  v32 = v25;
  v26 = *(_BYTE *)(v15 + 96);
  v33 = v26;
  LOBYTE(v14) = 7;
  sub_23644F6A4((id)v15, v5, v6, v7, v8, v16, v17, v18, v19, v20, 7);
  sub_23644F6A4(v30, v22, v23, v29, v28, v41, v40, v39, v24, v25, v26);
  swift_release();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v30;
  *(_QWORD *)(v2 + 24) = v22;
  v10 = v37;
  v9 = v38;
  *(_QWORD *)(v2 + 32) = v23;
  *(_QWORD *)(v2 + 40) = v29;
  v12 = v35;
  v11 = v36;
  *(_QWORD *)(v2 + 48) = v28;
  v13 = v34;
  *(_QWORD *)(v2 + 56) = v41;
  *(_QWORD *)(v2 + 64) = v40;
  *(_QWORD *)(v2 + 72) = v39;
  *(_QWORD *)(v2 + 80) = v31;
  *(_QWORD *)(v2 + 88) = v32;
  *(_BYTE *)(v2 + 96) = v33;
LABEL_6:
  sub_23644F8BC((void *)v4, v45, v44, v43, v42, v9, v10, v11, v12, v13, v14);
  *v3 = v2;
  result = 0.0;
  *(_OWORD *)(v3 + 1) = 0u;
  *(_OWORD *)(v3 + 3) = 0u;
  *(_OWORD *)(v3 + 5) = 0u;
  *(_OWORD *)(v3 + 7) = 0u;
  v3[9] = 0;
  *((_BYTE *)v3 + 80) = 7;
  return result;
}

uint64_t sub_2364FF928(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_2364FF970()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = *(id *)(v0 + 16);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_2364FF9DC;
  v2[11] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_2364FF9DC(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 48) = a1;
  *(_QWORD *)(v3 + 40) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FFA4C()
{
  uint64_t v0;
  uint64_t v1;
  void (**v2)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 24);

  if (v1)
  {
    v2 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 24);
    v2[2](v2, *(unsigned __int8 *)(v0 + 48), 0);
    _Block_release(v2);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FFAA0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void (**v3)(_QWORD, _QWORD, _QWORD);
  void *v4;

  v1 = *(_QWORD *)(v0 + 24);

  v2 = *(void **)(v0 + 40);
  if (v1)
  {
    v3 = *(void (***)(_QWORD, _QWORD, _QWORD))(v0 + 24);
    v4 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, void *))v3)[2](v3, 0, v4);
    _Block_release(v3);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FFB24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[16] = a1;
  v2[17] = a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[18] = v4;
  *v4 = v2;
  v4[1] = sub_2364FFB80;
  return sub_2364F99FC((uint64_t)(v2 + 9), a2);
}

uint64_t sub_2364FFB80()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2364FFBE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 128);

  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)v1 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v1 + 16) = v3;
  *(_QWORD *)(v1 + 32) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2364FFC2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  void *v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  void *v38;

  v1 = *(void **)(v0 + 152);
  *(_QWORD *)(v0 + 112) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && v10 == 0)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v33 = sub_2365AFC00();
        __swift_project_value_buffer(v33, (uint64_t)qword_2563E60D8);
        v34 = sub_2365AFBE8();
        v35 = sub_2365B0380();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_23644B000, v34, v35, "Client cancelled limited UI presentation, converting into AppleID error", v36, 2u);
          MEMORY[0x23B7F5254](v36, -1, -1);
        }
        v16 = *(void **)(v0 + 136);

        sub_2365B005C();
        v37 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v38 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v37, sel_initWithDomain_code_userInfo_, v38, -7003, 0);

        swift_willThrow();
        goto LABEL_27;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v12 = sub_2365AFC00();
        __swift_project_value_buffer(v12, (uint64_t)qword_2563E60D8);
        v13 = sub_2365AFBE8();
        v14 = sub_2365B0380();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v15 = 0;
          _os_log_impl(&dword_23644B000, v13, v14, "Client skipped limited UI presentation, converting into AppleID error", v15, 2u);
          MEMORY[0x23B7F5254](v15, -1, -1);
        }
        v16 = *(void **)(v0 + 136);

        sub_2365B005C();
        v17 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v18 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7038, 0);

        swift_willThrow();
LABEL_27:

        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    sub_23645DCB0(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2563E42D0 != -1)
    swift_once();
  v19 = *(void **)(v0 + 152);
  v20 = sub_2365AFC00();
  __swift_project_value_buffer(v20, (uint64_t)qword_2563E60D8);
  v21 = v19;
  v22 = v19;
  v23 = sub_2365AFBE8();
  v24 = sub_2365B0398();
  v25 = os_log_type_enabled(v23, v24);
  v26 = *(void **)(v0 + 152);
  if (v25)
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v27 = 138412290;
    v29 = v26;
    v30 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v30;
    sub_2365B04A0();
    *v28 = v30;

    _os_log_impl(&dword_23644B000, v23, v24, "Error during limited UI presentation: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v28, -1, -1);
    MEMORY[0x23B7F5254](v27, -1, -1);
  }
  else
  {

  }
  v31 = *(void **)(v0 + 136);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2365000EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v14;

  v7[17] = a2;
  v7[18] = a4;
  v7[16] = a1;
  v14 = (_QWORD *)swift_task_alloc();
  v7[19] = v14;
  *v14 = v7;
  v14[1] = sub_236500190;
  v14[25] = a6;
  v14[26] = a7;
  v14[23] = a4;
  v14[24] = a5;
  v14[21] = a2;
  v14[22] = a3;
  v14[20] = v7 + 9;
  return swift_task_switch();
}

uint64_t sub_236500190()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2365001F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 128);

  v4 = *(_OWORD *)(v0 + 88);
  v5 = *(_OWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)v1 = v5;
  *(_OWORD *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 32) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23650025C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  void *v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  void *v38;

  v1 = *(void **)(v0 + 160);
  *(_QWORD *)(v0 + 112) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && v10 == 0)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v33 = sub_2365AFC00();
        __swift_project_value_buffer(v33, (uint64_t)qword_2563E60D8);
        v34 = sub_2365AFBE8();
        v35 = sub_2365B0380();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_23644B000, v34, v35, "Client cancelled limited UI presentation, converting into AppleID error", v36, 2u);
          MEMORY[0x23B7F5254](v36, -1, -1);
        }
        v16 = *(void **)(v0 + 136);

        sub_2365B005C();
        v37 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v38 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v37, sel_initWithDomain_code_userInfo_, v38, -7003, 0);

        swift_willThrow();
        goto LABEL_27;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v12 = sub_2365AFC00();
        __swift_project_value_buffer(v12, (uint64_t)qword_2563E60D8);
        v13 = sub_2365AFBE8();
        v14 = sub_2365B0380();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v15 = 0;
          _os_log_impl(&dword_23644B000, v13, v14, "Client skipped limited UI presentation, converting into AppleID error", v15, 2u);
          MEMORY[0x23B7F5254](v15, -1, -1);
        }
        v16 = *(void **)(v0 + 136);

        sub_2365B005C();
        v17 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v18 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7038, 0);

        swift_willThrow();
LABEL_27:

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    sub_23645DCB0(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2563E42D0 != -1)
    swift_once();
  v19 = *(void **)(v0 + 160);
  v20 = sub_2365AFC00();
  __swift_project_value_buffer(v20, (uint64_t)qword_2563E60D8);
  v21 = v19;
  v22 = v19;
  v23 = sub_2365AFBE8();
  v24 = sub_2365B0398();
  v25 = os_log_type_enabled(v23, v24);
  v26 = *(void **)(v0 + 160);
  if (v25)
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v27 = 138412290;
    v29 = v26;
    v30 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v30;
    sub_2365B04A0();
    *v28 = v30;

    _os_log_impl(&dword_23644B000, v23, v24, "Error during limited UI presentation: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v28, -1, -1);
    MEMORY[0x23B7F5254](v27, -1, -1);
  }
  else
  {

  }
  v31 = *(void **)(v0 + 136);

  swift_willThrow();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23650072C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_236500744()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  return swift_task_switch();
}

uint64_t sub_236500768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v1 + 112);
  v2 = *(_QWORD *)(v1 + 120);
  ObjectType = swift_getObjectType();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  v6 = type metadata accessor for AuthenticationModel();
  *v5 = v0;
  v5[1] = sub_2365007F0;
  return sub_236478198(v3, (uint64_t)sub_2364FAB64, 0, v6, ObjectType, v2);
}

uint64_t sub_2365007F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236500854(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_23650086C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  return swift_task_switch();
}

uint64_t sub_236500890()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 96) + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  v3 = type metadata accessor for AuthenticationModel();
  *v2 = v0;
  v2[1] = sub_236500938;
  return sub_236478B70(v0 + 65, v1, (uint64_t)sub_2364FAB64, 0, (uint64_t)&unk_2563E99C8, 0, v3, MEMORY[0x24BEE1328]);
}

uint64_t sub_236500938()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23650099C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 66) = *(_BYTE *)(v0 + 65);
  return swift_task_switch();
}

uint64_t sub_2365009B8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 66));
}

uint64_t sub_2365009F0()
{
  return swift_task_switch();
}

uint64_t sub_236500A04(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_236500A1C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  return swift_task_switch();
}

uint64_t sub_236500A40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 96) + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v2;
  v3 = type metadata accessor for AuthenticationModel();
  *v2 = v0;
  v2[1] = sub_236500AE8;
  return sub_236478B70(v0 + 65, v1, (uint64_t)sub_2364FAB64, 0, (uint64_t)&unk_2563E99A0, 0, v3, MEMORY[0x24BEE1328]);
}

uint64_t sub_236500AE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236500B4C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 66) = *(_BYTE *)(v0 + 65);
  return swift_task_switch();
}

uint64_t sub_236500B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_236500B84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[12];
  v1 = v0[13];
  v0[14] = *(_QWORD *)(v0[11] + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v3 = swift_task_alloc();
  v0[15] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_236500BE8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[14] + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = v2;
  v3 = type metadata accessor for AuthenticationModel();
  *v2 = v0;
  v2[1] = sub_236500C90;
  return sub_236478B70((uint64_t)v0 + 65, v1, (uint64_t)sub_236503A60, v0[15], (uint64_t)&unk_2563E9968, 0, v3, MEMORY[0x24BEE1328]);
}

uint64_t sub_236500C90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236500CF4()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 66) = *(_BYTE *)(v0 + 65);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236500D38()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 66));
}

uint64_t sub_236500D7C()
{
  return swift_task_switch();
}

uint64_t sub_236500D90()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  void *v31;
  uint8_t *v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  void *v36;

  v1 = *(void **)(v0 + 136);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 72) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v11 = sub_2365AFC00();
        __swift_project_value_buffer(v11, (uint64_t)qword_2563E60D8);
        v12 = sub_2365AFBE8();
        v13 = sub_2365B0380();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v14 = 0;
          _os_log_impl(&dword_23644B000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x23B7F5254](v14, -1, -1);
        }
        v15 = *(void **)(v0 + 88);

        sub_2365B005C();
        v16 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v17 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, -7003, 0);

        swift_willThrow();
LABEL_17:

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v18 = sub_2365AFC00();
        __swift_project_value_buffer(v18, (uint64_t)qword_2563E60D8);
        v19 = sub_2365AFBE8();
        v20 = sub_2365B0380();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v21 = 0;
          _os_log_impl(&dword_23644B000, v19, v20, "Client skipped limited UI presentation, converting into AppleID error", v21, 2u);
          MEMORY[0x23B7F5254](v21, -1, -1);
        }
        v15 = *(void **)(v0 + 88);

        sub_2365B005C();
        v22 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v23 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_23645DCB0(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2563E42D0 != -1)
    swift_once();
  v24 = *(void **)(v0 + 136);
  v25 = sub_2365AFC00();
  __swift_project_value_buffer(v25, (uint64_t)qword_2563E60D8);
  v26 = v24;
  v27 = v24;
  v28 = sub_2365AFBE8();
  v29 = sub_2365B0398();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(void **)(v0 + 136);
  if (v30)
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v32 = 138412290;
    v34 = v31;
    v35 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v35;
    sub_2365B04A0();
    *v33 = v35;

    _os_log_impl(&dword_23644B000, v28, v29, "Error during limited UI presentation: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v33, -1, -1);
    MEMORY[0x23B7F5254](v32, -1, -1);
  }
  else
  {

  }
  v36 = *(void **)(v0 + 88);

  swift_willThrow();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23650127C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_236501294()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  return swift_task_switch();
}

uint64_t sub_2365012B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  _QWORD *v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v1 + 112);
  v2 = *(_QWORD *)(v1 + 120);
  ObjectType = swift_getObjectType();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v5;
  v6 = type metadata accessor for AuthenticationModel();
  *v5 = v0;
  v5[1] = sub_236501340;
  return sub_236478198(v3, (uint64_t)sub_2364FAB64, 0, v6, ObjectType, v2);
}

uint64_t sub_236501340()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2365013A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_2365013DC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  void *v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  void *v31;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  void *v38;

  v1 = *(void **)(v0 + 112);
  *(_QWORD *)(v0 + 72) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && v10 == 0)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v33 = sub_2365AFC00();
        __swift_project_value_buffer(v33, (uint64_t)qword_2563E60D8);
        v34 = sub_2365AFBE8();
        v35 = sub_2365B0380();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_23644B000, v34, v35, "Client cancelled limited UI presentation, converting into AppleID error", v36, 2u);
          MEMORY[0x23B7F5254](v36, -1, -1);
        }
        v16 = *(void **)(v0 + 88);

        sub_2365B005C();
        v37 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v38 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v37, sel_initWithDomain_code_userInfo_, v38, -7003, 0);

        swift_willThrow();
        goto LABEL_27;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v12 = sub_2365AFC00();
        __swift_project_value_buffer(v12, (uint64_t)qword_2563E60D8);
        v13 = sub_2365AFBE8();
        v14 = sub_2365B0380();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v15 = 0;
          _os_log_impl(&dword_23644B000, v13, v14, "Client skipped limited UI presentation, converting into AppleID error", v15, 2u);
          MEMORY[0x23B7F5254](v15, -1, -1);
        }
        v16 = *(void **)(v0 + 88);

        sub_2365B005C();
        v17 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v18 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7038, 0);

        swift_willThrow();
LABEL_27:

        return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
      }
    }
    sub_23645DCB0(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2563E42D0 != -1)
    swift_once();
  v19 = *(void **)(v0 + 112);
  v20 = sub_2365AFC00();
  __swift_project_value_buffer(v20, (uint64_t)qword_2563E60D8);
  v21 = v19;
  v22 = v19;
  v23 = sub_2365AFBE8();
  v24 = sub_2365B0398();
  v25 = os_log_type_enabled(v23, v24);
  v26 = *(void **)(v0 + 112);
  if (v25)
  {
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v27 = 138412290;
    v29 = v26;
    v30 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v30;
    sub_2365B04A0();
    *v28 = v30;

    _os_log_impl(&dword_23644B000, v23, v24, "Error during limited UI presentation: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v28, -1, -1);
    MEMORY[0x23B7F5254](v27, -1, -1);
  }
  else
  {

  }
  v31 = *(void **)(v0 + 88);

  swift_willThrow();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_2365018A0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_2365018B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[12];
  v0[13] = *(_QWORD *)(v1 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v2 = swift_task_alloc();
  v0[14] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  return swift_task_switch();
}

uint64_t sub_236501910()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0[13] + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v0[15] = v2;
  v3 = type metadata accessor for AuthenticationModel();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E99C0);
  *v2 = v0;
  v2[1] = sub_2365019C4;
  return sub_236478B70((uint64_t)(v0 + 9), v1, (uint64_t)sub_236503B90, v0[14], (uint64_t)&unk_2563E99D0, 0, v3, v4);
}

uint64_t sub_2365019C4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236501A28()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 72);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236501A6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 136));
}

uint64_t sub_236501AA4()
{
  return swift_task_switch();
}

uint64_t sub_236501AB8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  void *v31;
  uint8_t *v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  void *v36;

  v1 = *(void **)(v0 + 128);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 80) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v11 = sub_2365AFC00();
        __swift_project_value_buffer(v11, (uint64_t)qword_2563E60D8);
        v12 = sub_2365AFBE8();
        v13 = sub_2365B0380();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v14 = 0;
          _os_log_impl(&dword_23644B000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x23B7F5254](v14, -1, -1);
        }
        v15 = *(void **)(v0 + 96);

        sub_2365B005C();
        v16 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v17 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, -7003, 0);

        swift_willThrow();
LABEL_17:

        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v18 = sub_2365AFC00();
        __swift_project_value_buffer(v18, (uint64_t)qword_2563E60D8);
        v19 = sub_2365AFBE8();
        v20 = sub_2365B0380();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v21 = 0;
          _os_log_impl(&dword_23644B000, v19, v20, "Client skipped limited UI presentation, converting into AppleID error", v21, 2u);
          MEMORY[0x23B7F5254](v21, -1, -1);
        }
        v15 = *(void **)(v0 + 96);

        sub_2365B005C();
        v22 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v23 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_23645DCB0(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2563E42D0 != -1)
    swift_once();
  v24 = *(void **)(v0 + 128);
  v25 = sub_2365AFC00();
  __swift_project_value_buffer(v25, (uint64_t)qword_2563E60D8);
  v26 = v24;
  v27 = v24;
  v28 = sub_2365AFBE8();
  v29 = sub_2365B0398();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(void **)(v0 + 128);
  if (v30)
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v32 = 138412290;
    v34 = v31;
    v35 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v35;
    sub_2365B04A0();
    *v33 = v35;

    _os_log_impl(&dword_23644B000, v28, v29, "Error during limited UI presentation: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v33, -1, -1);
    MEMORY[0x23B7F5254](v32, -1, -1);
  }
  else
  {

  }
  v36 = *(void **)(v0 + 96);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236501F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  return swift_task_switch();
}

uint64_t sub_236501F9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[13];
  v1 = v0[14];
  v0[15] = *(_QWORD *)(v2 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v3 = swift_task_alloc();
  v0[16] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_236501FFC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0[15] + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v0[17] = v2;
  v3 = type metadata accessor for AuthenticationModel();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E99B0);
  *v2 = v0;
  v2[1] = sub_2365020B0;
  return sub_236478B70((uint64_t)(v0 + 9), v1, (uint64_t)sub_236503AC4, v0[16], (uint64_t)&unk_2563E99A8, 0, v3, v4);
}

uint64_t sub_2365020B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236502114()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 72);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236502158()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 112);

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160));
}

uint64_t sub_236502194()
{
  return swift_task_switch();
}

uint64_t sub_2365021A8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  void *v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;

  v1 = *(void **)(v0 + 144);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 88) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v11 = sub_2365AFC00();
        __swift_project_value_buffer(v11, (uint64_t)qword_2563E60D8);
        v12 = sub_2365AFBE8();
        v13 = sub_2365B0380();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v14 = 0;
          _os_log_impl(&dword_23644B000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x23B7F5254](v14, -1, -1);
        }
        v16 = *(void **)(v0 + 104);
        v15 = *(void **)(v0 + 112);

        sub_2365B005C();
        v17 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v18 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7003, 0);

        swift_willThrow();
LABEL_17:

        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v19 = sub_2365AFC00();
        __swift_project_value_buffer(v19, (uint64_t)qword_2563E60D8);
        v20 = sub_2365AFBE8();
        v21 = sub_2365B0380();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          _os_log_impl(&dword_23644B000, v20, v21, "Client skipped limited UI presentation, converting into AppleID error", v22, 2u);
          MEMORY[0x23B7F5254](v22, -1, -1);
        }
        v16 = *(void **)(v0 + 104);
        v15 = *(void **)(v0 + 112);

        sub_2365B005C();
        v23 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v24 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_23645DCB0(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2563E42D0 != -1)
    swift_once();
  v25 = *(void **)(v0 + 144);
  v26 = sub_2365AFC00();
  __swift_project_value_buffer(v26, (uint64_t)qword_2563E60D8);
  v27 = v25;
  v28 = v25;
  v29 = sub_2365AFBE8();
  v30 = sub_2365B0398();
  v31 = os_log_type_enabled(v29, v30);
  v32 = *(void **)(v0 + 144);
  if (v31)
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v33 = 138412290;
    v35 = v32;
    v36 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 96) = v36;
    sub_2365B04A0();
    *v34 = v36;

    _os_log_impl(&dword_23644B000, v29, v30, "Error during limited UI presentation: %@", v33, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v34, -1, -1);
    MEMORY[0x23B7F5254](v33, -1, -1);
  }
  else
  {

  }
  v38 = *(void **)(v0 + 104);
  v37 = *(void **)(v0 + 112);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23650267C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_task_switch();
}

uint64_t sub_236502694()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[12];
  v1 = v0[13];
  v0[14] = *(_QWORD *)(v2 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v3 = swift_task_alloc();
  v0[15] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2365026F4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0[14] + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = v2;
  v3 = type metadata accessor for AuthenticationModel();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7E70);
  *v2 = v0;
  v2[1] = sub_2365027A8;
  return sub_236478B70((uint64_t)(v0 + 9), v1, (uint64_t)sub_236503ABC, v0[15], (uint64_t)&unk_2563E9990, 0, v3, v4);
}

uint64_t sub_2365027A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23650280C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 72);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236502850()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 104);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 144));
}

uint64_t sub_23650288C()
{
  return swift_task_switch();
}

uint64_t sub_2365028A0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  void *v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;

  v1 = *(void **)(v0 + 136);
  swift_task_dealloc();
  *(_QWORD *)(v0 + 80) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
  if (swift_dynamicCast())
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    v7 = *(_QWORD *)(v0 + 48);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v11 = sub_2365AFC00();
        __swift_project_value_buffer(v11, (uint64_t)qword_2563E60D8);
        v12 = sub_2365AFBE8();
        v13 = sub_2365B0380();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v14 = 0;
          _os_log_impl(&dword_23644B000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x23B7F5254](v14, -1, -1);
        }
        v16 = *(void **)(v0 + 96);
        v15 = *(void **)(v0 + 104);

        sub_2365B005C();
        v17 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v18 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7003, 0);

        swift_willThrow();
LABEL_17:

        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2563E42D0 != -1)
          swift_once();
        v19 = sub_2365AFC00();
        __swift_project_value_buffer(v19, (uint64_t)qword_2563E60D8);
        v20 = sub_2365AFBE8();
        v21 = sub_2365B0380();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          _os_log_impl(&dword_23644B000, v20, v21, "Client skipped limited UI presentation, converting into AppleID error", v22, 2u);
          MEMORY[0x23B7F5254](v22, -1, -1);
        }
        v16 = *(void **)(v0 + 96);
        v15 = *(void **)(v0 + 104);

        sub_2365B005C();
        v23 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        v24 = (void *)sub_2365B0038();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_23645DCB0(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2563E42D0 != -1)
    swift_once();
  v25 = *(void **)(v0 + 136);
  v26 = sub_2365AFC00();
  __swift_project_value_buffer(v26, (uint64_t)qword_2563E60D8);
  v27 = v25;
  v28 = v25;
  v29 = sub_2365AFBE8();
  v30 = sub_2365B0398();
  v31 = os_log_type_enabled(v29, v30);
  v32 = *(void **)(v0 + 136);
  if (v31)
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v33 = 138412290;
    v35 = v32;
    v36 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v36;
    sub_2365B04A0();
    *v34 = v36;

    _os_log_impl(&dword_23644B000, v29, v30, "Error during limited UI presentation: %@", v33, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v34, -1, -1);
    MEMORY[0x23B7F5254](v33, -1, -1);
  }
  else
  {

  }
  v38 = *(void **)(v0 + 96);
  v37 = *(void **)(v0 + 104);

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236502D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return swift_task_switch();
}

uint64_t sub_236502D8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[12];
  v1 = v0[13];
  v0[14] = *(_QWORD *)(v2 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v3 = swift_task_alloc();
  v0[15] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_236502DEC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0[14] + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v0[16] = v2;
  v3 = type metadata accessor for AuthenticationModel();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9988);
  *v2 = v0;
  v2[1] = sub_236502EA0;
  return sub_236478B70((uint64_t)(v0 + 9), v1, (uint64_t)sub_236503AB4, v0[15], (uint64_t)&unk_2563E9980, 0, v3, v4);
}

uint64_t sub_236502EA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236502F04()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v0 + 72);
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236502F48()
{
  return swift_task_switch();
}

uint64_t sub_236502F5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v1;
  return swift_task_switch();
}

uint64_t sub_236502F74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[16];
  v0[18] = *(_QWORD *)(v0[17] + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v2 = swift_task_alloc();
  v0[19] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  return swift_task_switch();
}

uint64_t sub_236502FCC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[18] + 112);
  swift_getObjectType();
  v2 = (_QWORD *)swift_task_alloc();
  v0[20] = v2;
  v3 = type metadata accessor for AuthenticationModel();
  *v2 = v0;
  v2[1] = sub_236503074;
  return sub_236478B70((uint64_t)(v0 + 23), v1, (uint64_t)sub_236503ACC, v0[19], (uint64_t)&unk_2563E99B8, 0, v3, MEMORY[0x24BEE1328]);
}

uint64_t sub_236503074()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2365030D8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236503114()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_2365031A8;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_2364FCE58;
  v3[3] = &block_descriptor_8;
  v3[4] = v2;
  objc_msgSend(v1, sel_presentSecondFactorUIWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_2365031A8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_236503208()
{
  return swift_task_switch();
}

uint64_t sub_23650321C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236503250()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_236503260()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t method lookup function for ModernAppleIDAuthenticationContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ModernAppleIDAuthenticationContext.__allocating_init(_:signInModelModifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_2365032B4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23647E274;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2563E9798 + dword_2563E9798))(v2, v3);
}

uint64_t sub_236503324()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23647E274;
  return ((uint64_t (*)(uint64_t, void *, void *))((char *)&dword_2563E97B8 + dword_2563E97B8))(v2, v3, v4);
}

uint64_t sub_236503398()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_2365033D4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_236477420;
  return ((uint64_t (*)(void *, void *, void *, void *))((char *)&dword_2563E97D8 + dword_2563E97D8))(v2, v3, v5, v4);
}

uint64_t sub_236503458()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23647E274;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2563E97F8 + dword_2563E97F8))(v2, v3);
}

uint64_t sub_2365034C8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23647E274;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_2563E9818 + dword_2563E9818))(v2, v3, v4);
}

uint64_t sub_236503540()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23647E274;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2563E9838 + dword_2563E9838))(v2, v3);
}

uint64_t sub_2365035B0()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23647E274;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_2563E9858 + dword_2563E9858))(v2, v3, v4);
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_23650365C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_23647E274;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_2563E9878 + dword_2563E9878))(v2, v3, v4);
}

uint64_t sub_2365036D4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23647E274;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, void *, void *))((char *)&dword_2563E9898 + dword_2563E9898))(v2, v3, v4, v5, v6);
}

uint64_t sub_236503760()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23647E274;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2563E98B8 + dword_2563E98B8))(v2, v3);
}

uint64_t sub_2365037D0()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23647E274;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2563E98D8 + dword_2563E98D8))(v2, v3);
}

uint64_t objectdestroy_142Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_236503884()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  _QWORD *v7;

  v2 = (void *)v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (void *)v0[5];
  v6 = (void *)v0[6];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_23647E274;
  return ((uint64_t (*)(void *, uint64_t, uint64_t, void *, void *))((char *)&dword_2563E98F8 + dword_2563E98F8))(v2, v3, v4, v5, v6);
}

uint64_t sub_236503910()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23647E274;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2563E9918 + dword_2563E9918))(v2, v3);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_2365039AC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23647E274;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2563E9938 + dword_2563E9938))(v2, v3);
}

uint64_t sub_236503A18()
{
  uint64_t v0;

  sub_23644F8BC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(_BYTE *)(v0 + 96));
  return swift_deallocObject();
}

void sub_236503A60(uint64_t a1)
{
  uint64_t v1;

  sub_2364FEF9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_236503A68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563E9978;
  if (!qword_2563E9978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563E9970);
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for _Coordinated<A>.CommonError, v1);
    atomic_store(result, (unint64_t *)&qword_2563E9978);
  }
  return result;
}

void sub_236503AB4(uint64_t a1)
{
  uint64_t v1;

  sub_2364FE8F8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_236503ABC(uint64_t a1)
{
  uint64_t v1;

  sub_2364FDECC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_236503AC4(uint64_t a1)
{
  uint64_t v1;

  sub_2364FD4E8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_236503ACC(uint64_t a1)
{
  uint64_t v1;

  sub_2364FC964(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_236503AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E99C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_236503B1C()
{
  uint64_t v0;
  int v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255)
    sub_23645DCB0(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1);
  sub_23644F8BC(*(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(void **)(v0 + 168), *(void **)(v0 + 176), *(_BYTE *)(v0 + 184));
  return swift_deallocObject();
}

void sub_236503B90(uint64_t a1)
{
  uint64_t v1;

  sub_2364FC160(a1, *(void **)(v1 + 16));
}

void sub_236503B98(uint64_t a1)
{
  uint64_t *v1;

  sub_2364FB700(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_236503BA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AuthenticationModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_236503BE4(uint64_t a1)
{
  uint64_t v1;

  sub_2364FA048(a1, *(id *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_236503BF4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_236503C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_236477420;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

id sub_236503CB4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_236465960(0, (unint64_t *)&qword_2563E6618);
    v4 = (void *)sub_2365AFF48();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

id SetupController.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 112);
}

uint64_t sub_236503D40(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (result)
  {
    v1 = qword_2563E42D0;
    swift_retain();
    if (v1 != -1)
      swift_once();
    v2 = sub_2365AFC00();
    __swift_project_value_buffer(v2, (uint64_t)qword_2563E60D8);
    swift_retain_n();
    swift_retain_n();
    v3 = sub_2365AFBE8();
    v4 = sub_2365B038C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v11 = v6;
      *(_DWORD *)v5 = 136315394;
      sub_2365AFCB4();
      swift_retain();
      v7 = sub_2365B0080();
      sub_236468D88(v7, v8, &v11);
      sub_2365B04A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2080;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C30);
      v9 = sub_2365B0080();
      sub_236468D88(v9, v10, &v11);
      sub_2365B04A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23644B000, v3, v4, "Setup controller session changed from %s to %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v6, -1, -1);
      MEMORY[0x23B7F5254](v5, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_2365AFC90();
    return swift_release();
  }
  return result;
}

uint64_t SetupController.__allocating_init(queue:endpoint:inactiveSession:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  SetupController.init(queue:endpoint:inactiveSession:)(a1, a2, a3);
  return v6;
}

uint64_t SetupController.init(queue:endpoint:inactiveSession:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  _QWORD *v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = v3;
  v38 = a2;
  v39 = a3;
  v6 = sub_2365B03D4();
  v37 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2365B03C8();
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A08);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2365AFD50();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2365AFD74();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_inactiveSession) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession) = 0;
  if (a1)
  {
    v19 = (uint64_t)a1;
    v21 = v38;
    v20 = v39;
    v22 = a1;
  }
  else
  {
    v34[1] = v18;
    v35 = v6;
    qos_class_self();
    sub_2365AFD44();
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    v22 = 0;
    v24 = v36;
    v25 = v37;
    if (v23 == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5478], v12);
      sub_236465998((uint64_t)v11, &qword_2563E9A08);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    }
    v34[0] = sub_236465960(0, (unint64_t *)&qword_2542A82F8);
    sub_2365AFD68();
    v40 = MEMORY[0x24BEE4AF8];
    sub_23644F0B8(&qword_2542A82F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A82C0);
    sub_23650CD1C(&qword_2542A82C8, &qword_2542A82C0);
    sub_2365B04F4();
    (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v24, *MEMORY[0x24BEE5750], v35);
    v19 = sub_2365B03F8();
    v21 = v38;
    v20 = v39;
  }
  *(_QWORD *)(v3 + 112) = v19;
  type metadata accessor for AISSetupAnalyticsEvent();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 24) = 0;
  v27 = v26 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_startDate;
  v28 = sub_2365AF9A8();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v29(v27, 1, 1, v28);
  v29(v26 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_endDate, 1, 1, v28);
  *(_BYTE *)(v26 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_didSucceed) = 0;
  v30 = OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_analytics;
  type metadata accessor for AISAnalytics();
  v31 = v22;
  *(_QWORD *)(v26 + v30) = swift_initStaticObject();
  v32 = (_QWORD *)(v26 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_name);
  *v32 = 0xD00000000000001CLL;
  v32[1] = 0x80000002365CCF50;

  *(_QWORD *)(v4 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_setupAnalyticsEvent) = v26;
  sub_23650D450(v21, v4 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_endpoint, &qword_2563E9A18);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_inactiveSession) = v20;
  swift_release();
  return v4;
}

uint64_t SetupController.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A18);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2365AFCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for SetupController();
  v4 = swift_allocObject();
  SetupController.init(queue:endpoint:inactiveSession:)(0, (uint64_t)v2, 0);
  return v4;
}

uint64_t sub_2365044D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563E42D0 != -1)
    swift_once();
  v5 = sub_2365AFC00();
  __swift_project_value_buffer(v5, (uint64_t)qword_2563E60D8);
  v6 = sub_2365AFBE8();
  v7 = sub_2365B038C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23644B000, v6, v7, "Invalidating setup controller", v8, 2u);
    MEMORY[0x23B7F5254](v8, -1, -1);
  }

  v9 = sub_2365B0218();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v1;
  swift_retain();
  sub_2364923A0((uint64_t)v4, (uint64_t)&unk_2563E9A28, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_236504650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_236504668()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2365046B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  if (v1)
  {
    sub_2365AFC90();
    swift_release();
  }
  **(_BYTE **)(v0 + 16) = v1 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SetupController.deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession))
  {
    swift_retain();
    sub_2365AFC90();
    swift_release();
  }

  sub_236465998(v0 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_endpoint, &qword_2563E9A18);
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SetupController.__deallocating_deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession))
  {
    swift_retain();
    sub_2365AFC90();
    swift_release();
  }

  sub_236465998(v0 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_endpoint, &qword_2563E9A18);
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_236504880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[72] = v2;
  v3[71] = a2;
  v3[70] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6FA0);
  v3[73] = swift_task_alloc();
  v4 = sub_2365AF9A8();
  v3[74] = v4;
  v3[75] = *(_QWORD *)(v4 - 8);
  v3[76] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23650490C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  void (*v18)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  if (qword_2563E42D0 != -1)
    swift_once();
  v1 = *(_QWORD **)(v0 + 568);
  v2 = sub_2365AFC00();
  *(_QWORD *)(v0 + 616) = __swift_project_value_buffer(v2, (uint64_t)qword_2563E60D8);
  sub_23650BF8C(v1, v0 + 360);
  v3 = sub_2365AFBE8();
  v4 = sub_2365B0380();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v28 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_23650BF8C((_QWORD *)(v0 + 360), v0 + 408);
    v7 = sub_2365B0080();
    *(_QWORD *)(v0 + 552) = sub_236468D88(v7, v8, &v28);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_23650BFC8(v0 + 360);
    _os_log_impl(&dword_23644B000, v3, v4, "Performing Apple ID Setup with context: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v6, -1, -1);
    MEMORY[0x23B7F5254](v5, -1, -1);
  }
  else
  {
    sub_23650BFC8(v0 + 360);
  }

  v9 = *(_QWORD *)(v0 + 608);
  v10 = *(_QWORD **)(v0 + 600);
  v11 = *(_QWORD *)(v0 + 592);
  v12 = *(_QWORD *)(v0 + 584);
  v13 = *(_QWORD *)(v0 + 576);
  v14 = *(_QWORD **)(v0 + 568);
  v15 = OBJC_IVAR____TtC12AppleIDSetup15SetupController_setupAnalyticsEvent;
  *(_QWORD *)(v0 + 624) = OBJC_IVAR____TtC12AppleIDSetup15SetupController_setupAnalyticsEvent;
  v16 = *(_QWORD *)(v13 + v15);
  swift_retain();
  sub_2365AF99C();
  v17 = (void (*)(uint64_t, uint64_t, uint64_t))v10[2];
  *(_QWORD *)(v0 + 632) = v17;
  v17(v12, v9, v11);
  v18 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v10[7];
  *(_QWORD *)(v0 + 640) = v18;
  v18(v12, 0, 1, v11);
  v19 = v16 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_startDate;
  swift_beginAccess();
  sub_23650BFFC(v12, v19);
  swift_endAccess();
  swift_release();
  v20 = (void (*)(uint64_t, uint64_t))v10[1];
  *(_QWORD *)(v0 + 648) = v20;
  v20(v9, v11);
  v21 = sub_2365070AC(v14);
  *(_QWORD *)(v0 + 656) = v21;
  v22 = *(_QWORD *)(v0 + 576);
  v23 = *(uint64_t **)(v0 + 568);
  v24 = OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession;
  *(_QWORD *)(v0 + 664) = OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession;
  v25 = *(_QWORD *)(v22 + v24);
  *(_QWORD *)(v22 + v24) = v21;
  swift_retain_n();
  sub_236503D40(v25);
  swift_release();
  swift_release();
  v26 = *v23;
  *(_QWORD *)(v0 + 672) = *v23;
  *(_QWORD *)(v0 + 192) = v26;
  *(_OWORD *)(v0 + 216) = 0u;
  *(_OWORD *)(v0 + 232) = 0u;
  *(_OWORD *)(v0 + 248) = 0u;
  *(_OWORD *)(v0 + 200) = 0u;
  *(_OWORD *)(v0 + 257) = 0u;
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_236504C64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[82];
  v2 = swift_task_alloc();
  v0[85] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 24;
  v3 = (_QWORD *)swift_task_alloc();
  v0[86] = v3;
  *v3 = v0;
  v3[1] = sub_236504D0C;
  return sub_2365B0914();
}

uint64_t sub_236504D0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 696) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_236504D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  void (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74[8];
  NSObject *v75;
  os_log_t v76;
  os_log_t v77;
  os_log_t v78;
  os_log_type_t typea;
  char type;
  NSObject *v81;
  uint64_t v82;
  NSObject *log;
  os_log_t loga;
  os_log_t logb;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94[12];

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v92 = *(_QWORD *)(v0 + 128);
  v93 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 168);
  v7 = *(_QWORD *)(v0 + 176);
  v8 = *(unsigned __int8 *)(v0 + 184);
  v91 = v6;
  v89 = *(_QWORD *)(v0 + 120);
  v90 = v7;
  v86 = v4;
  v87 = v5;
  v82 = v3;
  v88 = v1;
  if (v8 == 4)
  {
    v20 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 112);
    sub_23650C190(v2, v1, v89, v92, v3, v4, v93, v5, v6, v7, 4);
    sub_23645DC04(v20, v21, v89, v92, v3, v4, v93);
    loga = (os_log_t)v20;
    sub_23645DC04(v20, v21, v89, v92, v3, v4, v93);
    v22 = sub_2365AFBE8();
    v23 = sub_2365B0398();
    v75 = v22;
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v71 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v24 = 138412290;
      sub_2364858F4();
      swift_allocError();
      *(_QWORD *)v25 = v20;
      *(_QWORD *)(v25 + 8) = v88;
      *(_QWORD *)(v25 + 16) = v89;
      *(_QWORD *)(v25 + 24) = v92;
      *(_QWORD *)(v25 + 32) = v3;
      *(_QWORD *)(v25 + 40) = v4;
      *(_BYTE *)(v25 + 48) = v93;
      sub_23645DC04(v20, v88, v89, v92, v3, v4, v93);
      v26 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 528) = v26;
      sub_2365B04A0();
      *(_QWORD *)v71 = v26;
      sub_23650C2A8(v20, v88, v89, v92, v3, v4, v93, v87, v6, v90, 4);
      sub_23650C2A8(v20, v88, v89, v92, v3, v4, v93, v87, v6, v90, 4);
      _os_log_impl(&dword_23644B000, v75, v23, "Failed to perform setup with error: %@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v71, -1, -1);
      MEMORY[0x23B7F5254](v24, -1, -1);
    }
    else
    {
      sub_23650C2A8(v20, v88, v89, v92, v3, v4, v93, v87, v6, v7, 4);
      sub_23650C2A8(v20, v88, v89, v92, v3, v4, v93, v87, v6, v7, 4);
    }
    v27 = v75;
    v45 = *(void (**)(uint64_t, uint64_t))(v0 + 648);
    v46 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 640);
    v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 632);
    v48 = *(_QWORD *)(v0 + 624);
    v49 = *(_QWORD *)(v0 + 608);
    v50 = *(_QWORD *)(v0 + 592);
    v51 = *(_QWORD *)(v0 + 584);
    v52 = *(_QWORD *)(v0 + 576);
    v77 = *(os_log_t *)(v0 + 664);

    v53 = *(_QWORD *)(v52 + v48);
    swift_retain();
    sub_2365AF99C();
    v47(v51, v49, v50);
    v46(v51, 0, 1, v50);
    v54 = v53 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_endDate;
    swift_beginAccess();
    sub_23650BFFC(v51, v54);
    swift_endAccess();
    v55 = swift_retain();
    sub_23650C594(v55);
    swift_release_n();
    v45(v49, v50);
    sub_2364858F4();
    swift_allocError();
    *(_QWORD *)v56 = loga;
    *(_QWORD *)(v56 + 8) = v88;
    *(_QWORD *)(v56 + 16) = v89;
    *(_QWORD *)(v56 + 24) = v92;
    *(_QWORD *)(v56 + 32) = v82;
    *(_QWORD *)(v56 + 40) = v86;
    *(_BYTE *)(v56 + 48) = v93;
    swift_willThrow();
    sub_23650C2A8((uint64_t)loga, v88, v89, v92, v82, v86, v93, v87, v6, v90, 4);
    v57 = *(uint64_t *)((char *)&v77->isa + v52);
    *(Class *)((char *)&v77->isa + v52) = 0;
    goto LABEL_15;
  }
  if (v8 != 1)
  {
    v28 = *(_QWORD *)(v0 + 136);
    v29 = *(_BYTE *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 144);
    v31 = *(_QWORD *)(v0 + 176);
    v32 = *(_QWORD *)(v0 + 104);
    v33 = *(_QWORD *)(v0 + 112);
    v34 = *(_QWORD *)(v0 + 160);
    sub_23650C190(v2, v1, v89, v92, v28, v30, v93, v5, v6, v31, v8);
    type = v29;
    v70 = v31;
    v35 = v30;
    logb = (os_log_t)v32;
    sub_23650C190(v32, v33, v89, v92, v28, v30, v93, v34, v6, v70, v29);
    v36 = sub_2365AFBE8();
    v37 = sub_2365B0398();
    v81 = v36;
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v72 = swift_slowAlloc();
      v94[0] = v72;
      *(_DWORD *)v38 = 136315138;
      *(_QWORD *)(v0 + 16) = v32;
      *(_QWORD *)(v0 + 24) = v88;
      *(_QWORD *)(v0 + 32) = v89;
      *(_QWORD *)(v0 + 40) = v92;
      *(_QWORD *)(v0 + 48) = v28;
      *(_QWORD *)(v0 + 56) = v35;
      *(_QWORD *)(v0 + 64) = v93;
      *(_QWORD *)(v0 + 72) = v87;
      *(_QWORD *)(v0 + 80) = v6;
      *(_QWORD *)(v0 + 88) = v90;
      *(_BYTE *)(v0 + 96) = v29;
      sub_23650C190(v32, v88, v89, v92, v28, v35, v93, v87, v6, v90, v29);
      v39 = sub_2365B0080();
      *(_QWORD *)(v0 + 544) = sub_236468D88(v39, v40, v94);
      sub_2365B04A0();
      swift_bridgeObjectRelease();
      sub_23650C2A8(v32, v88, v89, v92, v28, v35, v93, v87, v6, v90, v29);
      sub_23650C2A8(v32, v88, v89, v92, v28, v86, v93, v87, v6, v90, v29);
      _os_log_impl(&dword_23644B000, v81, v37, "Received unexpected mach setup message: %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v72, -1, -1);
      MEMORY[0x23B7F5254](v38, -1, -1);

      v41 = v88;
    }
    else
    {
      v41 = v88;
      sub_23650C2A8(v32, v88, v89, v92, v28, v35, v93, v87, v6, v90, v29);
      sub_23650C2A8(v32, v88, v89, v92, v28, v86, v93, v87, v6, v90, v29);

    }
    v58 = *(_QWORD *)(v0 + 664);
    v78 = *(os_log_t *)(v0 + 648);
    v59 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 640);
    v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 632);
    v61 = *(_QWORD *)(v0 + 608);
    v62 = *(_QWORD *)(v0 + 592);
    v63 = *(_QWORD *)(v0 + 584);
    v64 = *(_QWORD *)(v0 + 576);
    v65 = *(_QWORD *)(v64 + *(_QWORD *)(v0 + 624));
    swift_retain();
    sub_2365AF99C();
    v60(v63, v61, v62);
    v59(v63, 0, 1, v62);
    v66 = v65 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_endDate;
    swift_beginAccess();
    sub_23650BFFC(v63, v66);
    swift_endAccess();
    v67 = swift_retain();
    sub_23650C594(v67);
    swift_release_n();
    ((void (*)(uint64_t, uint64_t))v78)(v61, v62);
    sub_2364858F4();
    swift_allocError();
    *(_OWORD *)v68 = 0u;
    *(_OWORD *)(v68 + 16) = 0u;
    *(_OWORD *)(v68 + 32) = 0u;
    *(_BYTE *)(v68 + 48) = 4;
    swift_willThrow();
    sub_23650C2A8((uint64_t)logb, v41, v89, v92, v82, v86, v93, v87, v91, v90, type);
    v57 = *(_QWORD *)(v64 + v58);
    *(_QWORD *)(v64 + v58) = 0;
LABEL_15:
    sub_236503D40(v57);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    v44 = *(uint64_t (**)(void))(v0 + 8);
    return v44();
  }
  v9 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 104);
  sub_23650C190(v2, v1, v89, v92, v3, v4, v93, v5, v9, v7, 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23648DC24(v4, v93);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23648DC24(v4, v93);
  swift_bridgeObjectRetain();
  v11 = sub_2365AFBE8();
  v12 = sub_2365B0380();
  log = v11;
  if (os_log_type_enabled(v11, v12))
  {
    typea = v12;
    v13 = (uint8_t *)swift_slowAlloc();
    v73 = swift_slowAlloc();
    v14 = v3;
    *(_DWORD *)v13 = 136315138;
    v94[0] = v73;
    *(_QWORD *)(v0 + 280) = v10;
    *(_QWORD *)(v0 + 288) = v88;
    *(_QWORD *)(v0 + 296) = v89;
    *(_QWORD *)(v0 + 304) = v92;
    *(_QWORD *)(v0 + 312) = v3;
    *(_QWORD *)(v0 + 320) = v4;
    *(_QWORD *)(v0 + 328) = v93;
    *(_QWORD *)(v0 + 336) = v87;
    *(_QWORD *)(v0 + 344) = v9;
    *(_QWORD *)(v0 + 352) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23648DC24(v4, v93);
    swift_bridgeObjectRetain();
    v15 = sub_2365B0080();
    v16 = v10;
    *(_QWORD *)(v0 + 536) = sub_236468D88(v15, v17, v94);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_23650C2A8(v10, v88, v89, v92, v14, v4, v93, v87, v9, v7, 1);
    v18 = v92;
    v19 = v4;
    sub_23650C2A8(v10, v88, v89, v92, v14, v4, v93, v87, v9, v7, 1);
    _os_log_impl(&dword_23644B000, log, typea, "Finished Apple ID Setup with report: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v73, -1, -1);
    MEMORY[0x23B7F5254](v13, -1, -1);

  }
  else
  {
    sub_23650C2A8(v10, v88, v89, v92, v3, v4, v93, v87, v9, v7, 1);
    sub_23650C2A8(v10, v88, v89, v92, v3, v4, v93, v87, v91, v7, 1);

    v18 = v92;
    v16 = v10;
    v19 = v4;
  }
  v76 = *(os_log_t *)(v0 + 664);
  *(_QWORD *)v74 = *(_QWORD *)(v0 + 576);
  v42 = *(uint64_t **)(v0 + 560);
  v94[0] = v16;
  v94[1] = v88;
  v94[2] = v89;
  v94[3] = v18;
  v94[4] = v82;
  v94[5] = v19;
  v94[6] = v93;
  v94[7] = v87;
  v94[8] = v91;
  v94[9] = v7;
  swift_retain();
  sub_2365ACFD4((uint64_t)v94);
  swift_release();
  sub_23650C2A8(v16, v88, v89, v18, v82, v86, v93, v87, v91, v7, 1);
  *v42 = v16;
  v42[1] = v88;
  v42[2] = v89;
  v42[3] = v18;
  v42[4] = v82;
  v42[5] = v86;
  v42[6] = v93;
  v42[7] = v87;
  v42[8] = v91;
  v42[9] = v7;
  v43 = *(uint64_t *)((char *)&v76->isa + *(_QWORD *)v74);
  *(Class *)((char *)&v76->isa + *(_QWORD *)v74) = 0;
  sub_236503D40(v43);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_236505B10()
{
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236505B5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 664);
  v2 = *(_QWORD *)(v0 + 576);
  v3 = *(_QWORD *)(v2 + v1);
  *(_QWORD *)(v2 + v1) = 0;
  sub_236503D40(v3);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236505BD0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint8_t *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint8_t *v74;
  int v75;
  uint8_t *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint8_t *v86;
  NSObject *v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  unsigned __int8 v95;

  v84 = a3;
  v83 = a2;
  v4 = sub_2365AFCFC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v74 - v9;
  if (qword_2563E42C8 != -1)
    swift_once();
  v11 = sub_2365AFC00();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_2563E60C0);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, a1, v4);
  v14 = sub_2365AFBE8();
  v15 = sub_2365B038C();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v87 = v12;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    *(_QWORD *)&v90 = v18;
    v88 = a1;
    *(_DWORD *)v17 = 136315138;
    v86 = v17 + 4;
    v13(v8, (uint64_t)v10, v4);
    v19 = sub_2365B0080();
    *(_QWORD *)&v89 = sub_236468D88(v19, v20, (uint64_t *)&v90);
    a1 = v88;
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _os_log_impl(&dword_23644B000, v14, v15, "Received XPC message: %s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v18, -1, -1);
    v21 = v17;
    v12 = v87;
    MEMORY[0x23B7F5254](v21, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }

  sub_23650D0E0();
  sub_2365AFCF0();
  v87 = v12;
  v88 = a1;
  v22 = *((_QWORD *)&v90 + 1);
  v23 = v90;
  v24 = v91;
  v82 = v92;
  v25 = v93;
  v26 = v94;
  v86 = (uint8_t *)*((_QWORD *)&v93 + 1);
  v27 = *((_QWORD *)&v94 + 1);
  v28 = v95;
  if (v95 == 2)
  {
    BYTE8(v90) &= 1u;
    swift_retain();
    swift_retain();
    sub_236506640((uint64_t *)&v90, v83, v84);
    v93 = 0u;
    v94 = 0u;
    v91 = 0u;
    v92 = 0u;
    v90 = 0u;
    v95 = 5;
    sub_23650D124();
    sub_2365AFCE4();
    v29 = v25;
    v30 = v82;
    v31 = v25;
    v32 = (uint64_t)v86;
    sub_23650C2A8(v23, v22, v24, *((uint64_t *)&v24 + 1), v82, *((uint64_t *)&v82 + 1), v31, (uint64_t)v86, v26, v27, 2);
    return sub_23650C2A8(v23, v22, v24, *((uint64_t *)&v24 + 1), v30, *((uint64_t *)&v30 + 1), v29, v32, v26, v27, 2);
  }
  else
  {
    v81 = *((_QWORD *)&v91 + 1);
    v34 = v90;
    v35 = *((_QWORD *)&v94 + 1);
    v36 = v94;
    v37 = v82;
    v38 = (uint64_t)v86;
    sub_23650C190(v90, *((uint64_t *)&v90 + 1), v91, *((uint64_t *)&v91 + 1), v82, *((uint64_t *)&v82 + 1), v93, (uint64_t)v86, v94, *((uint64_t *)&v94 + 1), v95);
    v78 = v28;
    v84 = v35;
    v85 = v36;
    v80 = v34;
    v83 = (_QWORD *)v24;
    v79 = v25;
    sub_23650C190(v34, *((uint64_t *)&v34 + 1), v24, v81, v37, *((uint64_t *)&v37 + 1), v25, v38, v36, v35, v28);
    v39 = sub_2365AFBE8();
    v40 = sub_2365B038C();
    v41 = v40;
    v87 = v39;
    if (os_log_type_enabled(v39, v40))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      v77 = swift_slowAlloc();
      *(_QWORD *)&v89 = v77;
      v76 = v42;
      *(_DWORD *)v42 = 136315138;
      v74 = v42 + 4;
      v43 = v80;
      *(_QWORD *)&v90 = v80;
      *((_QWORD *)&v90 + 1) = *((_QWORD *)&v34 + 1);
      v44 = v83;
      *(_QWORD *)&v91 = v83;
      *((_QWORD *)&v91 + 1) = v81;
      v45 = v82;
      v75 = v41;
      v46 = *((_QWORD *)&v82 + 1);
      v92 = v82;
      *(_QWORD *)&v93 = v79;
      v47 = v85;
      *((_QWORD *)&v93 + 1) = v86;
      *(_QWORD *)&v94 = v85;
      v48 = v84;
      *((_QWORD *)&v94 + 1) = v84;
      v49 = v78;
      v95 = v78;
      sub_23650C190(v80, *((uint64_t *)&v34 + 1), (uint64_t)v83, v81, v82, *((uint64_t *)&v82 + 1), v79, (uint64_t)v86, v85, v84, v78);
      v50 = sub_2365B0080();
      *(_QWORD *)&v90 = sub_236468D88(v50, v51, (uint64_t *)&v89);
      sub_2365B04A0();
      v52 = (uint64_t)v86;
      swift_bridgeObjectRelease();
      v53 = v79;
      sub_23650C2A8(v43, *((uint64_t *)&v34 + 1), (uint64_t)v44, v81, v45, v46, v79, v52, v47, v48, v49);
      v54 = v43;
      v55 = *((_QWORD *)&v34 + 1);
      v56 = v53;
      sub_23650C2A8(v54, *((uint64_t *)&v34 + 1), (uint64_t)v44, v81, v45, v46, v53, v52, v47, v48, v49);
      v57 = v87;
      v58 = v76;
      _os_log_impl(&dword_23644B000, v87, (os_log_type_t)v75, "Received unexpected mach setup message: %s", v76, 0xCu);
      v59 = v77;
      swift_arrayDestroy();
      v60 = v59;
      v61 = v44;
      v62 = v81;
      MEMORY[0x23B7F5254](v60, -1, -1);
      MEMORY[0x23B7F5254](v58, -1, -1);

      v63 = v56;
    }
    else
    {
      v49 = v78;
      v64 = v84;
      v65 = v85;
      v66 = v80;
      v61 = v83;
      v67 = *((_QWORD *)&v82 + 1);
      v68 = v82;
      v63 = v79;
      v69 = (uint64_t)v86;
      sub_23650C2A8(v80, *((uint64_t *)&v34 + 1), (uint64_t)v83, v81, v82, *((uint64_t *)&v82 + 1), v79, (uint64_t)v86, v85, v84, v78);
      v72 = v65;
      v73 = v64;
      v70 = v66;
      v71 = v68;
      v47 = v65;
      v48 = v64;
      v55 = *((_QWORD *)&v34 + 1);
      v62 = v81;
      sub_23650C2A8(v70, *((uint64_t *)&v34 + 1), (uint64_t)v61, v81, v71, v67, v63, v69, v72, v73, v49);

    }
    v91 = 0u;
    v92 = 0u;
    v90 = 0u;
    v93 = 4uLL;
    v94 = 0uLL;
    v95 = 4;
    sub_23650D124();
    sub_2365AFCE4();
    return sub_23650C2A8(v80, v55, (uint64_t)v61, v62, v82, *((uint64_t *)&v82 + 1), v63, (uint64_t)v86, v47, v48, v49);
  }
}

void sub_236506640(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(uint64_t);
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  unint64_t v27;
  uint64_t v28;
  char isEscapingClosureAtFileLocation;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  void *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  __int128 v45[2];
  uint64_t v46[3];
  uint64_t v47;
  uint64_t v48;
  __int128 aBlock;
  uint64_t (*v50)(uint64_t);
  void *v51;
  uint64_t (*v52)();
  _QWORD *v53;

  v43 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v42 = v7;
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v44 = *((unsigned __int8 *)a1 + 8);
  v11 = (uint64_t (*)(uint64_t))a1[2];
  v10 = (void *)a1[3];
  if (qword_2563E42B8 != -1)
    swift_once();
  v12 = (void *)sub_2365AFC00();
  __swift_project_value_buffer((uint64_t)v12, (uint64_t)qword_25641F6A8);
  swift_retain_n();
  swift_retain_n();
  v13 = sub_2365AFBE8();
  v14 = sub_2365B038C();
  if (os_log_type_enabled(v13, v14))
  {
    v37 = v12;
    v15 = swift_slowAlloc();
    v38 = a2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v40 = v6;
    v18 = v17;
    v39 = v8;
    *(_DWORD *)v16 = 136315138;
    v46[0] = v17;
    v36[1] = v16 + 4;
    *(_QWORD *)&aBlock = v9;
    BYTE8(aBlock) = v44;
    v50 = v11;
    v51 = v10;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BF0);
    v19 = sub_2365B0080();
    *(_QWORD *)&aBlock = sub_236468D88(v19, v20, v46);
    v8 = v39;
    sub_2365B04A0();
    swift_release_n();
    swift_release_n();
    v12 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23644B000, v13, v14, "Received coordinated model update: %s", v16, 0xCu);
    swift_arrayDestroy();
    v21 = v18;
    v6 = v40;
    MEMORY[0x23B7F5254](v21, -1, -1);
    v22 = v16;
    a2 = v38;
    MEMORY[0x23B7F5254](v22, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  sub_23646C4B0((uint64_t)(a2 + 1), (uint64_t)&aBlock, &qword_2563E8990);
  if (v51)
  {
    sub_23646A440(&aBlock, (uint64_t)v46);
    v23 = v47;
    v24 = v48;
    __swift_project_boxed_opaque_existential_1(v46, v47);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    if (!v25)
      v25 = *(id *)(v41 + 112);
    v26 = v25;
    sub_23648D710((uint64_t)v46, (uint64_t)v45);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v43, v5);
    v27 = (*(unsigned __int8 *)(v6 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v28 = swift_allocObject();
    sub_23646A440(v45, v28 + 16);
    *(_QWORD *)(v28 + 56) = v9;
    *(_BYTE *)(v28 + 64) = v44;
    *(_QWORD *)(v28 + 72) = v11;
    *(_QWORD *)(v28 + 80) = v10;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v28 + v27, v8, v5);
    a2 = (_QWORD *)swift_allocObject();
    a2[2] = sub_23650CFC4;
    a2[3] = v28;
    v52 = sub_2364EA114;
    v53 = a2;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v50 = sub_236527978;
    v51 = &block_descriptor_26;
    v12 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_async_and_wait(v26, v12);

    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  sub_236465998((uint64_t)&aBlock, &qword_2563E8990);
  if (qword_2563E42C8 != -1)
LABEL_17:
    swift_once();
  __swift_project_value_buffer((uint64_t)v12, (uint64_t)qword_2563E60C0);
  sub_23650BF8C(a2, (uint64_t)&aBlock);
  v30 = sub_2365AFBE8();
  v31 = sub_2365B0398();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    *(_QWORD *)&v45[0] = v33;
    *(_DWORD *)v32 = 136315138;
    sub_23650BF8C(&aBlock, (uint64_t)v46);
    v34 = sub_2365B0080();
    v46[0] = sub_236468D88(v34, v35, (uint64_t *)v45);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_23650BFC8((uint64_t)&aBlock);
    _os_log_impl(&dword_23644B000, v30, v31, "Unable to use exchange from context: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v33, -1, -1);
    MEMORY[0x23B7F5254](v32, -1, -1);
  }
  else
  {
    sub_23650BFC8((uint64_t)&aBlock);
  }

}

uint64_t sub_236506C1C(_QWORD *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[4];
  v23 = a1[3];
  v22 = __swift_project_boxed_opaque_existential_1(a1, v23);
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v27 = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_BYTE *)(v17 + 24) = a3;
  *(_QWORD *)(v17 + 32) = a4;
  *(_QWORD *)(v17 + 40) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, v14, v11);
  v18 = *(void (**)(uint64_t *, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_retain();
  swift_retain();
  v18(&v24, sub_23650D094, v17, v23, v15);
  return swift_release();
}

uint64_t sub_236506D60(uint64_t *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char v47;

  v36 = a3;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BF8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = a1[2];
  v37 = a1[1];
  v38 = v15;
  if (qword_2563E42B8 != -1)
    swift_once();
  v17 = sub_2365AFC00();
  __swift_project_value_buffer(v17, (uint64_t)qword_25641F6A8);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  v18 = sub_2365AFBE8();
  v19 = sub_2365B038C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v34 = v11;
    v21 = v20;
    v22 = swift_slowAlloc();
    v33 = v12;
    v23 = v22;
    v39 = v22;
    v40 = a2;
    *(_DWORD *)v21 = 136315394;
    v35 = a6;
    LOBYTE(v41) = v36 & 1;
    v42 = a4;
    *(_QWORD *)&v43 = a5;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BF0);
    v24 = sub_2365B0080();
    v40 = sub_236468D88(v24, v25, &v39);
    sub_2365B04A0();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    v26 = v37;
    v27 = v38;
    v40 = v38;
    v41 = v37;
    v42 = v16;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C00);
    v28 = sub_2365B0080();
    v40 = sub_236468D88(v28, v29, &v39);
    sub_2365B04A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23644B000, v18, v19, "Responding to model update (%s) with response: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    v30 = v23;
    v12 = v33;
    MEMORY[0x23B7F5254](v30, -1, -1);
    v31 = v21;
    v11 = v34;
    MEMORY[0x23B7F5254](v31, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
    swift_release_n();
    v26 = v37;
    v27 = v38;
  }
  v40 = v27;
  v41 = v26;
  v42 = v16;
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v46 = 0;
  v47 = 3;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  sub_2365B0248();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

_QWORD *sub_2365070AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD v49[2];
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62[6];
  _OWORD v63[3];
  uint64_t v64;

  v60 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v1);
  v51 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C38);
  v55 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v55 + 64);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v56 = (uint64_t)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v49 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C40);
  v54 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C48);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)v49 - v14;
  if (qword_2563E42D0 != -1)
    swift_once();
  v15 = sub_2365AFC00();
  __swift_project_value_buffer(v15, (uint64_t)qword_2563E60D8);
  sub_23650BF8C(v60, (uint64_t)v63);
  v16 = sub_2365AFBE8();
  v17 = sub_2365B038C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v49[1] = v3;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v64 = v20;
    v50 = v7;
    *(_DWORD *)v19 = 136315138;
    v49[0] = v19 + 4;
    sub_23650BF8C(v63, (uint64_t)v62);
    v21 = sub_2365B0080();
    v62[0] = sub_236468D88(v21, v22, &v64);
    v7 = v50;
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_23650BFC8((uint64_t)v63);
    _os_log_impl(&dword_23644B000, v16, v17, "Creating new XPC session for context: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v20, -1, -1);
    MEMORY[0x23B7F5254](v19, -1, -1);
  }
  else
  {
    sub_23650BFC8((uint64_t)v63);
  }

  v23 = swift_allocBox();
  v25 = v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  MEMORY[0x24BDAC7A8](v27);
  v49[-2] = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v10, *MEMORY[0x24BEE6A10], v8);
  sub_2365B029C();
  sub_23646C4B0(v25, (uint64_t)v7, &qword_2563E9C38);
  v28 = swift_allocObject();
  swift_weakInit();
  v29 = v56;
  sub_23646C4B0((uint64_t)v7, v56, &qword_2563E9C38);
  sub_23650BF8C(v60, (uint64_t)v63);
  v30 = (*(unsigned __int8 *)(v55 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v31 = (v4 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (uint64_t)v7;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v28;
  sub_23650D450(v29, v33 + v30, &qword_2563E9C38);
  v34 = (_OWORD *)(v33 + v31);
  v35 = v63[1];
  *v34 = v63[0];
  v34[1] = v35;
  v34[2] = v63[2];
  swift_retain();
  swift_retain();
  v36 = v57;
  v37 = (_QWORD *)sub_236509600((uint64_t)sub_23650D494, v33, (uint64_t)sub_23650D4FC, v23);
  if (v36)
  {
    swift_release();
    swift_release();
    sub_236465998(v32, &qword_2563E9C38);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v59);
    swift_release();
  }
  else
  {
    sub_236465998(v32, &qword_2563E9C38);
    swift_release();
    swift_release();
    swift_release();
    v38 = sub_2365B0218();
    v39 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v51, 1, 1, v38);
    v41 = v58;
    v40 = v59;
    v42 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    v60 = v37;
    v43 = v53;
    v42(v53, v61, v59);
    v44 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v45 = (v52 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = 0;
    *(_QWORD *)(v46 + 24) = 0;
    v47 = v43;
    v37 = v60;
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v46 + v44, v47, v40);
    *(_QWORD *)(v46 + v45) = v37;
    swift_retain();
    sub_2364CF1E4(v39, (uint64_t)&unk_2563E9C58, v46);
    swift_release();
    sub_236465998(v39, &qword_2563E9790);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v61, v40);
  }
  swift_release();
  return v37;
}

uint64_t sub_2365076F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_236465998(a2, &qword_2563E9C38);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

double sub_236507764@<D0>(uint8_t *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X2>, _QWORD *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  _OWORD *v41;
  double result;
  uint64_t v43;
  _QWORD *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[3];
  uint64_t v52;

  v44 = a3;
  v45 = a2;
  v48 = a1;
  v50 = a4;
  v4 = sub_2365AFCFC();
  v49 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v49 + 64);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v43 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v9);
  v46 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C38);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v43 - v19;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v22 = Strong;
    sub_23646C4B0((uint64_t)v45, (uint64_t)v13, &qword_2563E9C38);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v45 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v45(v20, v13, v14);
      v32 = sub_2365B0218();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v46, 1, 1, v32);
      v33 = v4;
      v43 = v4;
      v34 = v49;
      (*(void (**)(char *, uint8_t *, uint64_t))(v49 + 16))(v47, v48, v33);
      sub_23650BF8C(v44, (uint64_t)v51);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
      v35 = (*(unsigned __int8 *)(v34 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      v36 = (v5 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
      v37 = (*(unsigned __int8 *)(v15 + 80) + v36 + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v38 = (char *)swift_allocObject();
      *((_QWORD *)v38 + 2) = 0;
      *((_QWORD *)v38 + 3) = 0;
      *((_QWORD *)v38 + 4) = v22;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v38[v35], v47, v43);
      v39 = &v38[v36];
      v40 = v51[1];
      *(_OWORD *)v39 = v51[0];
      *((_OWORD *)v39 + 1) = v40;
      *((_OWORD *)v39 + 2) = v51[2];
      v45(&v38[v37], v18, v14);
      swift_retain();
      sub_23649225C(v46, (uint64_t)&unk_2563E9C80, (uint64_t)v38);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      goto LABEL_11;
    }
    swift_release();
    sub_236465998((uint64_t)v13, &qword_2563E9C38);
  }
  if (qword_2563E42D0 != -1)
    swift_once();
  v23 = sub_2365AFC00();
  __swift_project_value_buffer(v23, (uint64_t)qword_2563E60D8);
  v24 = v49;
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v49 + 16);
  v25(v7, v48, v4);
  v26 = sub_2365AFBE8();
  v27 = sub_2365B0398();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    *(_QWORD *)&v51[0] = v29;
    *(_DWORD *)v28 = 136315138;
    v48 = v28 + 4;
    v25(v47, (uint8_t *)v7, v4);
    v30 = sub_2365B0080();
    v52 = sub_236468D88(v30, v31, (uint64_t *)v51);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
    _os_log_impl(&dword_23644B000, v26, v27, "Received a new XPC message but lost self: %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v29, -1, -1);
    MEMORY[0x23B7F5254](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
  }

LABEL_11:
  v41 = (_OWORD *)v50;
  *(_QWORD *)(v50 + 32) = 0;
  result = 0.0;
  *v41 = 0u;
  v41[1] = 0u;
  return result;
}

uint64_t sub_236507C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_236507C38()
{
  uint64_t v0;

  sub_236505BD0(*(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236507C6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint8_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C38);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2365AFCCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_projectBox();
  if (qword_2563E42C8 != -1)
    swift_once();
  v10 = sub_2365AFC00();
  __swift_project_value_buffer(v10, (uint64_t)qword_2563E60C0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v11(v8, a1, v5);
  v12 = sub_2365AFBE8();
  v13 = sub_2365B0398();
  if (os_log_type_enabled(v12, v13))
  {
    v23 = v9;
    v14 = (uint8_t *)swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412290;
    v21 = v14 + 4;
    sub_23644F0B8(&qword_2563E9C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6678], MEMORY[0x24BEE6688]);
    swift_allocError();
    v11(v15, (uint64_t)v8, v5);
    v16 = _swift_stdlib_bridgeErrorToNSError();
    v24 = v16;
    sub_2365B04A0();
    v17 = v22;
    *v22 = v16;
    v9 = v23;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_23644B000, v12, v13, "XPC session cancelled: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v17, -1, -1);
    MEMORY[0x23B7F5254](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  swift_beginAccess();
  sub_23646C4B0(v9, (uint64_t)v4, &qword_2563E9C38);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v19 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_2365B0254();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  return result;
}

uint64_t sub_236507F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[69] = a5;
  v5[68] = a4;
  v6 = sub_2365AFCFC();
  v5[70] = v6;
  v5[71] = *(_QWORD *)(v6 - 8);
  v5[72] = swift_task_alloc();
  v5[73] = swift_task_alloc();
  v5[74] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C60);
  v5[75] = v7;
  v5[76] = *(_QWORD *)(v7 - 8);
  v5[77] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23650800C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C48);
  sub_2365B026C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 624) = v1;
  *v1 = v0;
  v1[1] = sub_236508094;
  return sub_2365B0278();
}

uint64_t sub_236508094()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2365080E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  os_log_t log;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 632) = v1;
  *(_QWORD *)(v0 + 640) = v2;
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 648) = v3;
  *(_QWORD *)(v0 + 656) = v4;
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 664) = v5;
  *(_QWORD *)(v0 + 672) = v6;
  v7 = *(_QWORD *)(v0 + 64);
  v8 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 680) = v7;
  *(_QWORD *)(v0 + 688) = v8;
  v9 = *(_QWORD *)(v0 + 80);
  v10 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 696) = v9;
  *(_QWORD *)(v0 + 704) = v10;
  v11 = *(unsigned __int8 *)(v0 + 96);
  *(_BYTE *)(v0 + 97) = v11;
  if (v11 == 255)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 608) + 8))(*(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 600));
    if (qword_2563E42C8 != -1)
      swift_once();
    v25 = sub_2365AFC00();
    __swift_project_value_buffer(v25, (uint64_t)qword_2563E60C0);
    v26 = sub_2365AFBE8();
    v27 = sub_2365B0380();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_23644B000, v26, v27, "End of outgoing messages to daemon", v28, 2u);
      MEMORY[0x23B7F5254](v28, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v36 = v5;
    v38 = v4;
    v41 = v3;
    if (qword_2563E42C8 != -1)
      swift_once();
    v12 = sub_2365AFC00();
    *(_QWORD *)(v0 + 712) = __swift_project_value_buffer(v12, (uint64_t)qword_2563E60C0);
    sub_23650C190(v1, v2, v41, v38, v36, v6, v7, v8, v9, v10, v11);
    v37 = v9;
    v35 = v2;
    v39 = v6;
    v42 = v7;
    v40 = v8;
    sub_23650C190(v1, v2, v41, v38, v36, v6, v7, v8, v9, v10, v11);
    v13 = sub_2365AFBE8();
    v14 = sub_2365B038C();
    log = v13;
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v43 = v33;
      *(_DWORD *)v15 = 136315138;
      *(_QWORD *)(v0 + 456) = v1;
      *(_QWORD *)(v0 + 464) = v35;
      *(_QWORD *)(v0 + 472) = v41;
      *(_QWORD *)(v0 + 480) = v38;
      v16 = v36;
      *(_QWORD *)(v0 + 488) = v36;
      *(_QWORD *)(v0 + 496) = v39;
      *(_QWORD *)(v0 + 504) = v7;
      *(_QWORD *)(v0 + 512) = v8;
      *(_QWORD *)(v0 + 520) = v37;
      *(_QWORD *)(v0 + 528) = v10;
      *(_BYTE *)(v0 + 536) = v11;
      sub_23650C190(v1, v35, v41, v38, v36, v39, v7, v8, v37, v10, v11);
      v17 = sub_2365B0080();
      *(_QWORD *)(v15 + 4) = sub_236468D88(v17, v18, &v43);
      swift_bridgeObjectRelease();
      sub_23650D640(v1, v35, v41, v38, v36, v39, v7, v8, v37, v10, v11);
      sub_23650D640(v1, v35, v41, v38, v36, v39, v7, v8, v37, v10, v11);
      _os_log_impl(&dword_23644B000, v13, v14, "Sending message: %s", (uint8_t *)v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v33, -1, -1);
      MEMORY[0x23B7F5254](v15, -1, -1);

      v19 = v1;
      v20 = v35;
      v21 = v41;
      v22 = v38;
      v23 = v37;
      v24 = v10;
    }
    else
    {
      v21 = v41;
      v19 = v1;
      v20 = v2;
      sub_23650D640(v1, v2, v41, v38, v36, v6, v42, v40, v37, v10, v11);
      v24 = v10;
      sub_23650D640(v1, v2, v41, v38, v36, v6, v42, v40, v37, v10, v11);

      v22 = v38;
      v16 = v36;
      v23 = v37;
    }
    v30 = *(_QWORD *)(v0 + 552);
    *(_QWORD *)(v0 + 104) = v19;
    *(_QWORD *)(v0 + 112) = v20;
    *(_QWORD *)(v0 + 120) = v21;
    *(_QWORD *)(v0 + 128) = v22;
    *(_QWORD *)(v0 + 136) = v16;
    *(_QWORD *)(v0 + 144) = v39;
    *(_QWORD *)(v0 + 152) = v42;
    *(_QWORD *)(v0 + 160) = v40;
    *(_QWORD *)(v0 + 168) = v23;
    *(_QWORD *)(v0 + 176) = v24;
    *(_BYTE *)(v0 + 184) = v11;
    v31 = swift_task_alloc();
    *(_QWORD *)(v0 + 720) = v31;
    *(_QWORD *)(v31 + 16) = v30;
    *(_QWORD *)(v31 + 24) = v0 + 104;
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 728) = v32;
    *v32 = v0;
    v32[1] = sub_23650869C;
    return sub_2365B0914();
  }
}

uint64_t sub_23650869C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 736) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236508708()
{
  uint64_t v0;
  void *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  _QWORD *v35;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;

  swift_task_dealloc();
  v1 = *(void **)(v0 + 736);
  v2 = *(_BYTE *)(v0 + 97);
  v3 = *(_QWORD *)(v0 + 704);
  v4 = *(_QWORD *)(v0 + 696);
  v48 = *(_QWORD *)(v0 + 688);
  v41 = *(_QWORD *)(v0 + 672);
  v44 = *(_QWORD *)(v0 + 680);
  v5 = *(_QWORD *)(v0 + 664);
  v6 = *(_QWORD *)(v0 + 656);
  v7 = *(_QWORD *)(v0 + 648);
  v8 = *(_QWORD *)(v0 + 640);
  v9 = *(_QWORD *)(v0 + 632);
  sub_23650D668(v9, v8, v7, v6, v5, v41, v44, v48, v4, v3, v2);
  v10 = v1;
  sub_23650D668(v9, v8, v7, v6, v5, v41, v44, v48, v4, v3, v2);
  v49 = v1;
  v11 = v1;
  v12 = sub_2365AFBE8();
  v13 = sub_2365B0398();
  v47 = v12;
  if (os_log_type_enabled(v12, v13))
  {
    v45 = *(_BYTE *)(v0 + 97);
    v40 = *(_QWORD *)(v0 + 704);
    v42 = *(_QWORD *)(v0 + 696);
    v39 = *(_QWORD *)(v0 + 688);
    v14 = *(_QWORD *)(v0 + 680);
    v15 = *(_QWORD *)(v0 + 672);
    v16 = *(_QWORD *)(v0 + 664);
    v17 = *(_QWORD *)(v0 + 656);
    v18 = *(_QWORD *)(v0 + 648);
    v19 = *(_QWORD *)(v0 + 640);
    v20 = *(_QWORD *)(v0 + 632);
    v21 = swift_slowAlloc();
    v37 = (_QWORD *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    v50 = v38;
    *(_DWORD *)v21 = 136315394;
    *(_QWORD *)(v0 + 192) = v20;
    *(_QWORD *)(v0 + 200) = v19;
    *(_QWORD *)(v0 + 208) = v18;
    *(_QWORD *)(v0 + 216) = v17;
    *(_QWORD *)(v0 + 224) = v16;
    *(_QWORD *)(v0 + 232) = v15;
    *(_QWORD *)(v0 + 240) = v14;
    *(_QWORD *)(v0 + 248) = v39;
    *(_QWORD *)(v0 + 256) = v42;
    *(_QWORD *)(v0 + 264) = v40;
    *(_BYTE *)(v0 + 272) = v45;
    sub_23650C190(v20, v19, v18, v17, v16, v15, v14, v39, v42, v40, v45);
    v22 = sub_2365B0080();
    *(_QWORD *)(v21 + 4) = sub_236468D88(v22, v23, &v50);
    swift_bridgeObjectRelease();
    sub_23650D640(v20, v19, v18, v17, v16, v15, v14, v39, v42, v40, v45);
    sub_23650D640(v20, v19, v18, v17, v16, v15, v14, v39, v42, v40, v45);
    *(_WORD *)(v21 + 12) = 2112;
    v24 = v49;
    v25 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v21 + 14) = v25;
    *v37 = v25;

    _os_log_impl(&dword_23644B000, v47, v13, "Failed to send message (%s) with error: %@", (uint8_t *)v21, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v37, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v38, -1, -1);
    MEMORY[0x23B7F5254](v21, -1, -1);

    sub_23650D640(v20, v19, v18, v17, v16, v15, v14, v39, v42, v40, v45);
  }
  else
  {
    v26 = *(_QWORD *)(v0 + 704);
    v27 = *(_QWORD *)(v0 + 688);
    v43 = *(_QWORD *)(v0 + 696);
    v46 = *(_QWORD *)(v0 + 680);
    v28 = *(_QWORD *)(v0 + 672);
    v29 = *(_QWORD *)(v0 + 664);
    v30 = *(_QWORD *)(v0 + 656);
    v31 = *(_QWORD *)(v0 + 648);
    v32 = *(_QWORD *)(v0 + 640);
    v33 = *(_QWORD *)(v0 + 632);
    v34 = *(_BYTE *)(v0 + 97);
    sub_23650D640(v33, v32, v31, v30, v29, v28, v46, v27, v43, v26, v34);

    sub_23650D640(v33, v32, v31, v30, v29, v28, v46, v27, v43, v26, v34);
    sub_23650D640(v33, v32, v31, v30, v29, v28, v46, v27, v43, v26, v34);

  }
  v35 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 624) = v35;
  *v35 = v0;
  v35[1] = sub_236508094;
  return sub_2365B0278();
}

uint64_t sub_236508BD8()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  NSObject *v2;
  os_log_type_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  void *v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  BOOL v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  os_log_type_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95[3];

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 568) + 16);
  v1(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 560));
  v2 = sub_2365AFBE8();
  v3 = sub_2365B038C();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 584);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 576);
    v7 = *(_QWORD *)(v0 + 568);
    v8 = *(_QWORD *)(v0 + 560);
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v95[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v1(v6, v5, v8);
    v11 = sub_2365B0080();
    *(_QWORD *)(v9 + 4) = sub_236468D88(v11, v12, v95);
    swift_bridgeObjectRelease();
    v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v13(v5, v8);
    _os_log_impl(&dword_23644B000, v2, v3, "Sent message and received reply: %s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v10, -1, -1);
    MEMORY[0x23B7F5254](v9, -1, -1);
  }
  else
  {
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 568) + 8);
    v13(*(_QWORD *)(v0 + 584), *(_QWORD *)(v0 + 560));
  }

  v14 = *(void **)(v0 + 736);
  sub_23650D0E0();
  sub_2365AFCF0();
  v93 = v14;
  if (v14)
  {
    v13(*(_QWORD *)(v0 + 592), *(_QWORD *)(v0 + 560));
    v15 = *(_BYTE *)(v0 + 97);
    v16 = *(_QWORD *)(v0 + 704);
    v17 = *(_QWORD *)(v0 + 696);
    v91 = *(_QWORD *)(v0 + 688);
    v85 = *(_QWORD *)(v0 + 672);
    v88 = *(_QWORD *)(v0 + 680);
    v18 = *(_QWORD *)(v0 + 664);
    v19 = *(_QWORD *)(v0 + 656);
    v20 = *(_QWORD *)(v0 + 648);
    v21 = *(_QWORD *)(v0 + 640);
    v22 = *(_QWORD *)(v0 + 632);
    sub_23650D668(v22, v21, v20, v19, v18, v85, v88, v91, v17, v16, v15);
    v23 = v93;
    sub_23650D668(v22, v21, v20, v19, v18, v85, v88, v91, v17, v16, v15);
    v24 = v93;
    v89 = sub_2365AFBE8();
    v82 = sub_2365B0398();
    v25 = os_log_type_enabled(v89, v82);
    v26 = *(_BYTE *)(v0 + 97);
    v27 = *(_QWORD *)(v0 + 704);
    v28 = *(_QWORD *)(v0 + 680);
    v29 = *(_QWORD *)(v0 + 672);
    v30 = *(_QWORD *)(v0 + 664);
    v31 = *(_QWORD *)(v0 + 656);
    v32 = *(_QWORD *)(v0 + 648);
    v33 = *(_QWORD *)(v0 + 640);
    v92 = *(_QWORD *)(v0 + 688);
    v86 = v29;
    if (v25)
    {
      v77 = *(_QWORD *)(v0 + 680);
      v34 = *(_QWORD *)(v0 + 656);
      v79 = *(_QWORD *)(v0 + 696);
      v35 = *(_QWORD *)(v0 + 632);
      v36 = swift_slowAlloc();
      v73 = (_QWORD *)swift_slowAlloc();
      v75 = swift_slowAlloc();
      v95[0] = v75;
      *(_DWORD *)v36 = 136315394;
      *(_QWORD *)(v0 + 192) = v35;
      *(_QWORD *)(v0 + 200) = v33;
      *(_QWORD *)(v0 + 208) = v32;
      *(_QWORD *)(v0 + 216) = v34;
      *(_QWORD *)(v0 + 224) = v30;
      *(_QWORD *)(v0 + 232) = v29;
      *(_QWORD *)(v0 + 240) = v77;
      *(_QWORD *)(v0 + 248) = v92;
      *(_QWORD *)(v0 + 256) = v79;
      *(_QWORD *)(v0 + 264) = v27;
      *(_BYTE *)(v0 + 272) = v26;
      sub_23650C190(v35, v33, v32, v34, v30, v29, v77, v92, v79, v27, v26);
      v37 = sub_2365B0080();
      *(_QWORD *)(v36 + 4) = sub_236468D88(v37, v38, v95);
      swift_bridgeObjectRelease();
      sub_23650D640(v35, v33, v32, v34, v30, v29, v77, v92, v79, v27, v26);
      sub_23650D640(v35, v33, v32, v34, v30, v29, v77, v92, v79, v27, v26);
      *(_WORD *)(v36 + 12) = 2112;
      v39 = v93;
      v40 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v36 + 14) = v40;
      *v73 = v40;

      _os_log_impl(&dword_23644B000, v89, v82, "Failed to send message (%s) with error: %@", (uint8_t *)v36, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v73, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v75, -1, -1);
      MEMORY[0x23B7F5254](v36, -1, -1);

      sub_23650D640(v35, v33, v32, v34, v30, v29, v77, v92, v79, v27, v26);
    }
    else
    {
      v58 = *(_QWORD *)(v0 + 648);
      v59 = *(_QWORD *)(v0 + 696);
      v60 = *(_QWORD *)(v0 + 632);
      sub_23650D640(v60, v33, v58, v31, v30, *(_QWORD *)(v0 + 672), v28, *(_QWORD *)(v0 + 688), v59, v27, v26);

      sub_23650D640(v60, v33, v58, v31, v30, v86, v28, v92, v59, v27, v26);
      sub_23650D640(v60, v33, v58, v31, v30, v86, v28, v92, v59, v27, v26);

    }
  }
  else
  {
    v84 = v13;
    v41 = *(_QWORD *)(v0 + 280);
    v42 = *(_QWORD *)(v0 + 288);
    v64 = *(_QWORD *)(v0 + 304);
    v65 = *(_QWORD *)(v0 + 296);
    v43 = *(_QWORD *)(v0 + 312);
    v44 = *(_QWORD *)(v0 + 320);
    v45 = *(_QWORD *)(v0 + 328);
    v46 = *(_QWORD *)(v0 + 336);
    v48 = *(_QWORD *)(v0 + 344);
    v47 = *(_QWORD *)(v0 + 352);
    v87 = v48;
    v49 = *(_BYTE *)(v0 + 360);
    sub_23650C190(v41, v42, v65, v64, v43, v44, v45, v46, v48, v47, v49);
    v90 = v47;
    v50 = v46;
    v51 = v45;
    v94 = v50;
    sub_23650C190(v41, v42, v65, v64, v43, v44, v45, v50, v48, v47, v49);
    v52 = sub_2365AFBE8();
    v53 = sub_2365B038C();
    v54 = os_log_type_enabled(v52, v53);
    v69 = *(_BYTE *)(v0 + 97);
    v70 = *(_QWORD *)(v0 + 704);
    v72 = *(_QWORD *)(v0 + 696);
    v81 = *(_QWORD *)(v0 + 680);
    v83 = *(_QWORD *)(v0 + 688);
    v80 = *(_QWORD *)(v0 + 672);
    v71 = *(_QWORD *)(v0 + 656);
    v67 = *(_QWORD *)(v0 + 640);
    v68 = *(_QWORD *)(v0 + 648);
    v66 = *(_QWORD *)(v0 + 632);
    v78 = *(_QWORD *)(v0 + 592);
    v74 = *(_QWORD *)(v0 + 664);
    v76 = *(_QWORD *)(v0 + 560);
    if (v54)
    {
      v55 = swift_slowAlloc();
      v63 = swift_slowAlloc();
      v95[0] = v63;
      *(_DWORD *)v55 = 136315138;
      *(_QWORD *)(v0 + 368) = v41;
      *(_QWORD *)(v0 + 376) = v42;
      *(_QWORD *)(v0 + 384) = v65;
      *(_QWORD *)(v0 + 392) = v64;
      *(_QWORD *)(v0 + 400) = v43;
      *(_QWORD *)(v0 + 408) = v44;
      *(_QWORD *)(v0 + 416) = v51;
      *(_QWORD *)(v0 + 424) = v94;
      *(_QWORD *)(v0 + 432) = v87;
      *(_QWORD *)(v0 + 440) = v90;
      *(_BYTE *)(v0 + 448) = v49;
      sub_23650C190(v41, v42, v65, v64, v43, v44, v51, v94, v87, v90, v49);
      v56 = sub_2365B0080();
      *(_QWORD *)(v55 + 4) = sub_236468D88(v56, v57, v95);
      swift_bridgeObjectRelease();
      sub_23650C2A8(v41, v42, v65, v64, v43, v44, v51, v94, v87, v90, v49);
      sub_23650C2A8(v41, v42, v65, v64, v43, v44, v51, v94, v87, v90, v49);
      _os_log_impl(&dword_23644B000, v52, v53, "Decoded response: %s", (uint8_t *)v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v63, -1, -1);
      MEMORY[0x23B7F5254](v55, -1, -1);

    }
    else
    {

      sub_23650C2A8(v41, v42, v65, v64, v43, v44, v51, v94, v48, v90, v49);
      sub_23650C2A8(v41, v42, v65, v64, v43, v44, v51, v94, v48, v90, v49);
    }
    sub_23650C2A8(v41, v42, v65, v64, v43, v44, v51, v94, v87, v90, v49);
    sub_23650D640(v66, v67, v68, v71, v74, v80, v81, v83, v72, v70, v69);
    v84(v78, v76);
  }
  v61 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 624) = v61;
  *v61 = v0;
  v61[1] = sub_236508094;
  return sub_2365B0278();
}

uint64_t sub_236509600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a1;
  v5 = v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A18);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2365AFCC0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_inactiveSession);
  if (v16)
  {
    v17 = qword_2563E42D0;
    swift_retain();
    if (v17 != -1)
      swift_once();
    v18 = sub_2365AFC00();
    __swift_project_value_buffer(v18, (uint64_t)qword_2563E60D8);
    swift_retain_n();
    v19 = sub_2365AFBE8();
    v20 = sub_2365B038C();
    if (os_log_type_enabled(v19, v20))
    {
      v31[2] = a3;
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v35 = v22;
      v31[1] = a2;
      *(_DWORD *)v21 = 136315138;
      v31[0] = v21 + 4;
      v34 = v16;
      sub_2365AFCB4();
      swift_retain();
      v23 = sub_2365B0080();
      v34 = sub_236468D88(v23, v24, &v35);
      sub_2365B04A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23644B000, v19, v20, "Activating inactive session: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v22, -1, -1);
      MEMORY[0x23B7F5254](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_2365AFC30();
    sub_2365AFC60();
    sub_2365AFC54();
    v27 = v33;
    sub_2365AFC9C();
    if (v27)
      swift_release();
  }
  else
  {
    sub_23646C4B0(v5 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_endpoint, (uint64_t)v11, &qword_2563E9A18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_236465998((uint64_t)v11, &qword_2563E9A18);
      v25 = v33;
      v26 = sub_236509CBC(0xD000000000000021, 0x80000002365CB8C0, v32, a2, a3);
      if (!v25)
        return v26;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      v28 = v33;
      v29 = sub_2365099A0(v15, v32, a2, a3, a4);
      if (!v28)
        v16 = v29;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  return v16;
}

uint64_t sub_2365099A0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  _QWORD v32[4];
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v37 = a2;
  v38 = a3;
  v9 = sub_2365AFC48();
  MEMORY[0x24BDAC7A8](v9);
  v35 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2365AFCC0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v33 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v32 - v18;
  if (qword_2563E42D0 != -1)
    swift_once();
  v20 = sub_2365AFC00();
  __swift_project_value_buffer(v20, (uint64_t)qword_2563E60D8);
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v34 = a1;
  v39 = v21;
  v21(v19, a1, v11);
  v22 = sub_2365AFBE8();
  v23 = sub_2365B038C();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v32[2] = a5;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc();
    v32[1] = a4;
    v27 = v26;
    v41 = v26;
    v32[3] = v5;
    *(_DWORD *)v25 = 136315138;
    v32[0] = v25 + 4;
    v39(v17, v19, v11);
    v28 = sub_2365B0080();
    v40 = sub_236468D88(v28, v29, &v41);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
    _os_log_impl(&dword_23644B000, v22, v23, "Creating new session with xpc endpoint: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v27, -1, -1);
    MEMORY[0x23B7F5254](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
  }

  sub_2365AFCB4();
  v39(v33, v34, v11);
  v30 = *(id *)(v36 + 112);
  sub_2365AFC3C();
  swift_retain();
  swift_retain();
  return sub_2365AFCA8();
}

uint64_t sub_236509CBC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD v21[8];
  uint64_t v22;

  v21[6] = a5;
  v10 = sub_2365AFC48();
  MEMORY[0x24BDAC7A8](v10);
  v21[5] = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563E42D0 != -1)
    swift_once();
  v12 = sub_2365AFC00();
  __swift_project_value_buffer(v12, (uint64_t)qword_2563E60D8);
  swift_bridgeObjectRetain_n();
  v13 = sub_2365AFBE8();
  v14 = sub_2365B038C();
  if (os_log_type_enabled(v13, v14))
  {
    v21[3] = v5;
    v15 = swift_slowAlloc();
    v21[2] = a4;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v22 = v17;
    v21[1] = a3;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain();
    v21[7] = sub_236468D88(a1, a2, &v22);
    sub_2365B04A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23644B000, v13, v14, "Creating new session for mach service: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v17, -1, -1);
    MEMORY[0x23B7F5254](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_2365AFCB4();
  v18 = *(void **)(v21[4] + 112);
  swift_bridgeObjectRetain();
  v19 = v18;
  sub_2365AFC3C();
  swift_retain();
  swift_retain();
  return sub_2365AFC24();
}

uint64_t SetupController.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_236509F40()
{
  uint64_t v0;

  return v0;
}

uint64_t __SetupController.setupController.getter()
{
  return swift_retain();
}

id __SetupController.__allocating_init(queue:)(void *a1)
{
  objc_class *v1;
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_class *v11;
  char *v12;
  id v13;
  objc_super v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A18);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_allocWithZone(v2);
  v8 = sub_2365AFCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  type metadata accessor for SetupController();
  v9 = swift_allocObject();
  v10 = a1;
  SetupController.init(queue:endpoint:inactiveSession:)(a1, (uint64_t)v6, 0);
  v11 = (objc_class *)type metadata accessor for __SetupController();
  v12 = (char *)objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR_____AISSetupController_setupController] = v9;
  v15.receiver = v12;
  v15.super_class = v11;
  v13 = objc_msgSendSuper2(&v15, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v13;
}

id __SetupController.init(queue:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_class *v8;
  char *v9;
  id v10;
  objc_super v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A18);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2365AFCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for SetupController();
  v6 = swift_allocObject();
  v7 = a1;
  SetupController.init(queue:endpoint:inactiveSession:)(a1, (uint64_t)v4, 0);
  v8 = (objc_class *)type metadata accessor for __SetupController();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR_____AISSetupController_setupController] = v6;
  v12.receiver = v9;
  v12.super_class = v8;
  v10 = objc_msgSendSuper2(&v12, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t sub_23650A2C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint8_t *v17;
  _QWORD *v18;
  id v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  NSObject *v25;
  _QWORD *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  char *v45;
  void *v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  _QWORD *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void *v60;
  _QWORD *v61;
  void *v62;
  id v63;
  id v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  int v85;
  __int16 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  __int16 v90;
  uint64_t v91;
  _QWORD *v92;
  ValueMetadata *v93;
  _UNKNOWN **v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  char v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  id v104;
  uint64_t v105;
  _OWORD v106[4];

  v75 = a2;
  v76 = a3;
  v4 = sub_2365AFD38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v71 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_2365AFD74();
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v68 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v9);
  v73 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563E42D0 != -1)
    swift_once();
  v11 = sub_2365AFC00();
  v12 = __swift_project_value_buffer(v11, (uint64_t)qword_2563E60D8);
  v13 = a1;
  v14 = sub_2365AFBE8();
  v15 = sub_2365B0380();
  v16 = os_log_type_enabled(v14, v15);
  v67 = v4;
  v72 = v5;
  v77 = v12;
  if (v16)
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v17 = 138412290;
    *(_QWORD *)&v101 = v13;
    v19 = v13;
    sub_2365B04A0();
    *v18 = v13;

    _os_log_impl(&dword_23644B000, v14, v15, "__AISSetupController setup with context called: %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v18, -1, -1);
    MEMORY[0x23B7F5254](v17, -1, -1);

  }
  else
  {

  }
  v20 = v13;
  v21 = sub_2365AFBE8();
  v22 = sub_2365B038C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v23 = 138412290;
    *(_QWORD *)&v101 = v20;
    v25 = v20;
    sub_2365B04A0();
    *v24 = v20;

    _os_log_impl(&dword_23644B000, v21, v22, "Attempting to build setup context with compat objective-c context: %@", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v24, -1, -1);
    MEMORY[0x23B7F5254](v23, -1, -1);
  }
  else
  {

    v21 = v20;
  }

  *(_QWORD *)&v79 = MEMORY[0x24BEE4B08];
  *((_QWORD *)&v79 + 1) = MEMORY[0x24BEE4B08];
  LOBYTE(v80) = 1;
  *((_QWORD *)&v80 + 1) = 0;
  *(_QWORD *)&v81 = 0;
  WORD4(v81) = 1;
  v82 = 0;
  v83 = 0;
  v84 = 0xC000000000000000;
  v86 = 0;
  v85 = 0;
  v87 = 0u;
  v88 = 0u;
  v89 = 1;
  v90 = 2;
  v91 = 0;
  v93 = &type metadata for AutomaticSetupModelExchange;
  v94 = &protocol witness table for AutomaticSetupModelExchange;
  v26 = (_QWORD *)swift_allocObject();
  v26[22] = 0;
  v26[23] = &unk_2563ED5A0;
  v26[24] = 0;
  v26[25] = &unk_2563ED5A8;
  v26[26] = 0;
  v26[27] = &unk_2563ED5B0;
  v26[28] = 0;
  v26[29] = &unk_2563ED5B8;
  v26[30] = 0;
  v26[31] = &unk_2563ED5C0;
  v26[32] = 0;
  v26[33] = &unk_2563ED5C8;
  v26[34] = 0;
  v26[35] = &unk_2563ED5D0;
  v26[36] = 0;
  v26[37] = &unk_2563ED5D8;
  v26[38] = 0;
  v26[39] = &unk_2563ED5E0;
  v92 = v26;
  v26[40] = 0;
  v26[41] = &unk_2563ED5E8;
  v26[2] = &unk_2563ED550;
  v26[3] = 0;
  v26[42] = 0;
  v26[43] = &unk_2563ED5F0;
  v26[4] = &unk_2563ED558;
  v26[5] = 0;
  v26[44] = 0;
  v26[45] = &unk_2563ED5F8;
  v26[6] = &unk_2563ED560;
  v26[7] = 0;
  v26[46] = 0;
  v26[47] = &unk_2563ED600;
  v26[8] = &unk_2563ED568;
  v26[9] = 0;
  v26[48] = 0;
  v26[49] = &unk_2563ED608;
  v26[10] = &unk_2563ED570;
  v26[11] = 0;
  v26[50] = 0;
  v26[51] = &unk_2563ED610;
  v26[12] = &unk_2563ED578;
  v26[13] = 0;
  v26[52] = 0;
  v26[53] = &unk_2563ED618;
  v26[14] = &unk_2563ED580;
  v26[15] = 0;
  v26[54] = 0;
  v26[55] = &unk_2563ED620;
  v26[16] = &unk_2563ED588;
  v26[17] = 0;
  v26[56] = 0;
  v26[57] = &unk_2563ED628;
  v26[18] = &unk_2563ED590;
  v26[19] = 0;
  v26[58] = 0;
  v26[59] = &unk_2563ED630;
  v26[20] = &unk_2563ED598;
  v26[21] = 0;
  v26[60] = 0;
  v26[61] = &unk_2563ED638;
  v26[62] = 0;
  v26[63] = &unk_2563ED640;
  v26[64] = 0;
  v26[65] = &unk_2563ED648;
  v26[66] = 0;
  v26[67] = &unk_2563ED650;
  v26[68] = 0;
  v26[69] = &unk_2563ED658;
  v26[70] = 0;
  v26[71] = &unk_2563ED660;
  v26[72] = 0;
  v26[73] = &unk_2563ED668;
  v26[74] = 0;
  v26[75] = &unk_2563ED670;
  v26[76] = 0;
  v26[77] = &unk_2563ED678;
  v26[78] = 0;
  v100 = 0;
  v99 = 0u;
  v98 = 0u;
  v97 = 0u;
  v96 = 0u;
  v95 = 0u;
  SetupContext.Builder._context(_:)(v20, &v101);
  if (!v104)
  {
    sub_2364D9500((uint64_t)&v101, (uint64_t)&v79);
    v29 = sub_2364D5458();
    goto LABEL_13;
  }
  v27 = v104;
  v28 = AISSetupContext.into(relaxed:)(1);
  if (v28)
  {
    v29 = v28;

LABEL_13:
    sub_23646C4B0((uint64_t)&v105, (uint64_t)&v79, &qword_2563E8990);
    sub_2364D9534((uint64_t)&v101);
    *(_QWORD *)&v106[0] = v29;
    sub_23650D450((uint64_t)&v79, (uint64_t)v106 + 8, &qword_2563E8990);
    v101 = v106[0];
    v102 = v106[1];
    v103 = v106[2];
    sub_23650BF8C(&v101, (uint64_t)&v79);
    v30 = v74;
    v31 = sub_2365AFBE8();
    v32 = sub_2365B038C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v78 = v34;
      *(_DWORD *)v33 = 136315394;
      *(_QWORD *)&v106[0] = *(_QWORD *)&v30[OBJC_IVAR_____AISSetupController_setupController];
      type metadata accessor for SetupController();
      swift_retain();
      v35 = sub_2365B0080();
      *(_QWORD *)&v106[0] = sub_236468D88(v35, v36, &v78);
      sub_2365B04A0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      sub_23650BF8C(&v79, (uint64_t)v106);
      v37 = sub_2365B0080();
      *(_QWORD *)&v106[0] = sub_236468D88(v37, v38, &v78);
      sub_2365B04A0();
      swift_bridgeObjectRelease();
      sub_23650BFC8((uint64_t)&v79);
      _os_log_impl(&dword_23644B000, v31, v32, "Calling setup controller (%s with built context: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v34, -1, -1);
      MEMORY[0x23B7F5254](v33, -1, -1);
    }
    else
    {

      sub_23650BFC8((uint64_t)&v79);
    }

    v40 = v75;
    v39 = v76;
    v41 = sub_2365B0218();
    v42 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v73, 1, 1, v41);
    sub_23650BF8C(&v101, (uint64_t)&v79);
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = 0;
    *(_QWORD *)(v43 + 24) = 0;
    *(_QWORD *)(v43 + 32) = v30;
    v44 = v80;
    *(_OWORD *)(v43 + 40) = v79;
    *(_OWORD *)(v43 + 56) = v44;
    *(_OWORD *)(v43 + 72) = v81;
    *(_QWORD *)(v43 + 88) = v40;
    *(_QWORD *)(v43 + 96) = v39;
    v45 = v30;
    sub_23645063C(v40);
    sub_23649225C(v42, (uint64_t)&unk_2563E9A48, v43);
    swift_release();
    return sub_23650BFC8((uint64_t)&v101);
  }
  sub_2364D9560();
  v47 = (void *)swift_allocError();
  swift_willThrow();

  sub_2364D9534((uint64_t)&v101);
  v48 = v47;
  v49 = v47;
  v50 = sub_2365AFBE8();
  v51 = sub_2365B0398();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc();
    v53 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v52 = 138412290;
    v54 = v47;
    v55 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)&v101 = v55;
    sub_2365B04A0();
    *v53 = v55;

    _os_log_impl(&dword_23644B000, v50, v51, "Failed to build setup context: %@", v52, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v53, -1, -1);
    MEMORY[0x23B7F5254](v52, -1, -1);
  }
  else
  {

  }
  v57 = v75;
  v56 = v76;
  v58 = v67;
  v59 = v74;

  v60 = *(void **)(*(_QWORD *)&v59[OBJC_IVAR_____AISSetupController_setupController] + 112);
  v61 = (_QWORD *)swift_allocObject();
  v61[2] = v57;
  v61[3] = v56;
  v61[4] = v47;
  *(_QWORD *)&v103 = sub_23650CCD8;
  *((_QWORD *)&v103 + 1) = v61;
  *(_QWORD *)&v101 = MEMORY[0x24BDAC760];
  *((_QWORD *)&v101 + 1) = 1107296256;
  *(_QWORD *)&v102 = sub_2364BF6CC;
  *((_QWORD *)&v102 + 1) = &block_descriptor_9;
  v62 = _Block_copy(&v101);
  sub_23645063C(v57);
  v63 = v47;
  v64 = v60;
  v65 = v68;
  sub_2365AFD5C();
  *(_QWORD *)&v79 = MEMORY[0x24BEE4AF8];
  sub_23644F0B8((unint64_t *)&qword_2563E8E18, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_23650CD1C((unint64_t *)&qword_2563E8E28, &qword_2563E8E20);
  v66 = v71;
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v65, v66, v62);
  _Block_release(v62);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v66, v58);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v65, v70);
  return swift_release();
}

uint64_t sub_23650AE90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[45] = a6;
  v7[46] = a7;
  v7[43] = a4;
  v7[44] = a5;
  v8 = sub_2365AFD38();
  v7[47] = v8;
  v7[48] = *(_QWORD *)(v8 - 8);
  v7[49] = swift_task_alloc();
  v9 = sub_2365AFD74();
  v7[50] = v9;
  v7[51] = *(_QWORD *)(v9 - 8);
  v7[52] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23650AF1C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[53] = *(_QWORD *)(v0[43] + OBJC_IVAR_____AISSetupController_setupController);
  v1 = (_QWORD *)swift_task_alloc();
  v0[54] = v1;
  *v1 = v0;
  v1[1] = sub_23650AF84;
  return sub_236504880((uint64_t)(v0 + 12), v0[44]);
}

uint64_t sub_23650AF84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23650AFE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  _DWORD *v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  _QWORD *v29;
  void *v30;
  id v31;
  id v32;
  _DWORD *v34;
  uint64_t v35;
  os_log_type_t type;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 16) = v43;
  v1 = (_QWORD *)(v0 + 16);
  v3 = v1[11];
  v2 = v1[12];
  v5 = v1[13];
  v4 = v1[14];
  v7 = v1[15];
  v6 = v1[16];
  v8 = v1[17];
  v9 = v1[18];
  v10 = v1[19];
  v1[1] = v3;
  v1[2] = v2;
  v38 = v2;
  v39 = v6;
  v1[3] = v5;
  v1[4] = v4;
  v41 = v4;
  v1[5] = v7;
  v1[6] = v6;
  v1[7] = v8;
  v1[8] = v9;
  v1[9] = v10;
  if (qword_2563E42D0 != -1)
    swift_once();
  v11 = sub_2365AFC00();
  __swift_project_value_buffer(v11, (uint64_t)qword_2563E60D8);
  sub_23650D168(v43, v3, v38, v5, v41, v7, v39);
  v12 = 0;
  sub_23650D168(v43, v3, v38, v5, v41, v7, v39);
  v13 = 0;
  v14 = sub_2365AFBE8();
  type = sub_2365B0380();
  if (os_log_type_enabled(v14, type))
  {
    v15 = (_DWORD *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v45 = v35;
    *v15 = 136315394;
    v34 = v15;
    sub_23650D450((uint64_t)v1, (uint64_t)(v1 + 20), &qword_2563E9C18);
    sub_23650D168(v43, v3, v38, v5, v41, v7, v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C18);
    v16 = sub_2365B0080();
    v18 = v37;
    v37[39] = sub_236468D88(v16, v17, &v45);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_23650D1E8(v43, v3, v38, v5, v41, v7, v39);
    sub_23650D1E8(v43, v3, v38, v5, v41, v7, v39);
    *((_WORD *)v34 + 6) = 2080;
    v37[40] = 0;
    v19 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C20);
    v20 = sub_2365B0080();
    v37[41] = sub_236468D88(v20, v21, &v45);
    sub_2365B04A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23644B000, v14, type, "Returning setup report  converted into objc: %s with error: %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v35, -1, -1);
    MEMORY[0x23B7F5254](v34, -1, -1);

  }
  else
  {
    sub_23650D1E8(v43, v3, v38, v5, v41, v7, v39);
    sub_23650D1E8(v43, v3, v38, v5, v41, v7, v39);

    v18 = v37;
  }
  v22 = v18[52];
  v23 = v18[49];
  v42 = v18[51];
  v44 = v18[50];
  v24 = v18[47];
  v40 = v18[48];
  v26 = v18[45];
  v25 = v18[46];
  v27 = *(void **)(v18[53] + 112);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v26;
  v28[3] = v25;
  sub_23650D450((uint64_t)v1, (uint64_t)(v28 + 4), &qword_2563E9C18);
  v28[14] = 0;
  v18[36] = sub_23650D2D8;
  v18[37] = v28;
  v18[32] = MEMORY[0x24BDAC760];
  v18[33] = 1107296256;
  v18[34] = sub_2364BF6CC;
  v18[35] = &block_descriptor_35;
  v29 = v18;
  v30 = _Block_copy(v18 + 32);
  v31 = 0;
  v32 = v27;
  sub_23645063C(v26);
  sub_2365AFD5C();
  v29[38] = MEMORY[0x24BEE4AF8];
  sub_23644F0B8((unint64_t *)&qword_2563E8E18, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_23650CD1C((unint64_t *)&qword_2563E8E28, &qword_2563E8E20);
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v22, v23, v30);
  _Block_release(v30);

  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v22, v44);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v29[1])();
}

uint64_t sub_23650B5C0()
{
  uint64_t v0;
  __objc2_class **p_superclass;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  os_log_type_t type[8];
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;

  p_superclass = _TtC12AppleIDSetup8SKDevice.superclass;
  if (qword_2563E42D0 != -1)
    swift_once();
  v40 = (_OWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 440);
  v3 = sub_2365AFC00();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563E60D8);
  v4 = v2;
  v5 = v2;
  v6 = sub_2365AFBE8();
  v7 = sub_2365B0398();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 440);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 336) = v13;
    sub_2365B04A0();
    *v11 = v13;

    _os_log_impl(&dword_23644B000, v6, v7, "Failed to setup with error: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    v14 = v11;
    p_superclass = (__objc2_class **)(_TtC12AppleIDSetup8SKDevice + 8);
    MEMORY[0x23B7F5254](v14, -1, -1);
    MEMORY[0x23B7F5254](v10, -1, -1);
  }
  else
  {

  }
  v15 = *(void **)(v0 + 440);

  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *v40 = 0u;
  if (p_superclass[90] != (__objc2_class *)-1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563E60D8);
  sub_23650D168(0, 0, 0, 0, 0, 0, 0);
  v16 = v15;
  sub_23650D168(0, 0, 0, 0, 0, 0, 0);
  v17 = v15;
  v18 = sub_2365AFBE8();
  v19 = sub_2365B0380();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v42 = v37;
    *(_DWORD *)v20 = 136315394;
    sub_23650D450((uint64_t)v40, v0 + 176, &qword_2563E9C18);
    sub_23650D168(0, 0, 0, 0, 0, 0, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C18);
    v21 = sub_2365B0080();
    *(_QWORD *)(v0 + 312) = sub_236468D88(v21, v22, &v42);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_23650D1E8(0, 0, 0, 0, 0, 0, 0);
    sub_23650D1E8(0, 0, 0, 0, 0, 0, 0);
    *(_WORD *)(v20 + 12) = 2080;
    *(_QWORD *)(v0 + 320) = v15;
    v23 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C20);
    v24 = sub_2365B0080();
    *(_QWORD *)(v0 + 328) = sub_236468D88(v24, v25, &v42);
    sub_2365B04A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23644B000, v18, v19, "Returning setup report  converted into objc: %s with error: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v37, -1, -1);
    MEMORY[0x23B7F5254](v20, -1, -1);
  }
  else
  {
    sub_23650D1E8(0, 0, 0, 0, 0, 0, 0);
    sub_23650D1E8(0, 0, 0, 0, 0, 0, 0);

  }
  v26 = *(_QWORD *)(v0 + 416);
  v27 = *(_QWORD *)(v0 + 392);
  v39 = *(_QWORD *)(v0 + 408);
  v41 = *(_QWORD *)(v0 + 400);
  *(_QWORD *)type = *(_QWORD *)(v0 + 384);
  v28 = *(_QWORD *)(v0 + 368);
  v36 = *(_QWORD *)(v0 + 376);
  v29 = *(_QWORD *)(v0 + 360);
  v30 = *(void **)(*(_QWORD *)(v0 + 424) + 112);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v29;
  v31[3] = v28;
  sub_23650D450(v0 + 16, (uint64_t)(v31 + 4), &qword_2563E9C18);
  v31[14] = v15;
  *(_QWORD *)(v0 + 288) = sub_23650D2D8;
  *(_QWORD *)(v0 + 296) = v31;
  *(_QWORD *)(v0 + 256) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 264) = 1107296256;
  *(_QWORD *)(v0 + 272) = sub_2364BF6CC;
  *(_QWORD *)(v0 + 280) = &block_descriptor_35;
  v32 = _Block_copy((const void *)(v0 + 256));
  v33 = v15;
  v34 = v30;
  sub_23645063C(v29);
  sub_2365AFD5C();
  *(_QWORD *)(v0 + 304) = MEMORY[0x24BEE4AF8];
  sub_23644F0B8((unint64_t *)&qword_2563E8E18, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_23650CD1C((unint64_t *)&qword_2563E8E28, &qword_2563E8E20);
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v26, v27, v32);
  _Block_release(v32);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)type + 8))(v27, v36);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v26, v41);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23650BC60(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  AISSetupReport *v8[2];

  if (a1)
  {
    sub_23650D450(a3, (uint64_t)v8, &qword_2563E9C18);
    if (v8[0])
    {
      SetupReport.into()(v8[0]);
      v7 = v6;
    }
    else
    {
      v7 = 0;
    }
    a1(v7, a4);

  }
}

void sub_23650BDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_2365AF8E8();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

id __SetupController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void __SetupController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id __SetupController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for __SetupController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for SetupController()
{
  uint64_t result;

  result = qword_2563E9A78;
  if (!qword_2563E9A78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23650BEFC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23650BF28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_236477420;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_23650BF8C(_QWORD *a1, uint64_t a2)
{
  initializeWithCopy for RepairContext(a2, a1);
  return a2;
}

uint64_t sub_23650BFC8(uint64_t a1)
{
  destroy for RepairContext(a1);
  return a1;
}

uint64_t sub_23650BFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23650C044(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C28);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = *((_BYTE *)a3 + 80);
  v9 = a3[1];
  v15 = *a3;
  v16 = v9;
  v10 = a3[3];
  v17 = a3[2];
  v18 = v10;
  v19 = a3[4];
  v20 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_23650D124();
  sub_23650D0E0();
  sub_2365AFC84();
  return swift_release();
}

uint64_t sub_23650C188(uint64_t a1)
{
  uint64_t v1;

  return sub_23650C044(a1, *(_QWORD *)(v1 + 16), *(__int128 **)(v1 + 24));
}

uint64_t sub_23650C190(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  switch(a11)
  {
    case 0:
    case 3:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23648DC24(a6, a7);
      result = swift_bridgeObjectRetain();
      break;
    case 2:
      swift_retain();
LABEL_4:
      result = swift_retain();
      break;
    case 4:
      result = sub_23645DC04(result, a2, a3, a4, a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23650C2A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  switch(a11)
  {
    case 0:
    case 3:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23648DD50(a6, a7);
      result = swift_bridgeObjectRelease();
      break;
    case 2:
      swift_release();
LABEL_4:
      result = swift_release();
      break;
    case 4:
      result = sub_23645DCB0(result, a2, a3, a4, a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_23650C3B4(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 81) & 1) != 0)
  {
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C28);
    return sub_2365B01B8();
  }
  else
  {
    sub_23650C190((uint64_t)v2, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C28);
    return sub_2365B01C4();
  }
}

uint64_t sub_23650C460(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int128 v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C68);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = *((_BYTE *)a3 + 80);
  v9 = a3[1];
  v15 = *a3;
  v16 = v9;
  v10 = a3[3];
  v17 = a3[2];
  v18 = v10;
  v19 = a3[4];
  v20 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_23650D124();
  sub_2365AFC78();
  return swift_release();
}

uint64_t sub_23650C594(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  __int128 *v25;
  uint64_t v27;
  _QWORD aBlock[3];
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[5];

  v34[3] = type metadata accessor for AISSetupAnalyticsEvent();
  v34[4] = &protocol witness table for AISSetupAnalyticsEvent;
  v34[0] = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_2365B0038();
  swift_bridgeObjectRelease();
  sub_23648D710((uint64_t)v34, (uint64_t)&v32);
  v3 = swift_allocObject();
  sub_23646A440(&v32, v3 + 16);
  v30 = sub_23650D30C;
  v31 = v3;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236503CB4;
  v29 = &block_descriptor_42;
  v4 = _Block_copy(aBlock);
  swift_release();
  v5 = AnalyticsSendEventLazy();
  _Block_release(v4);

  if (!v5)
  {
    if (qword_2542A79D8 != -1)
      swift_once();
    v18 = sub_2365AFC00();
    __swift_project_value_buffer(v18, (uint64_t)qword_2542A79C0);
    sub_23648D710((uint64_t)v34, (uint64_t)aBlock);
    v7 = sub_2365AFBE8();
    v19 = sub_2365B038C();
    if (os_log_type_enabled(v7, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_QWORD *)&v32 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = (uint64_t *)(*__swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v29)
                      + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_name);
      v23 = *v22;
      v24 = v22[1];
      swift_bridgeObjectRetain();
      v27 = sub_236468D88(v23, v24, (uint64_t *)&v32);
      sub_2365B04A0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      _os_log_impl(&dword_23644B000, v7, v19, "Failed to send Core Analytics event: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v21, -1, -1);
      v17 = (uint64_t)v20;
      goto LABEL_10;
    }
    v25 = (__int128 *)aBlock;
LABEL_13:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    goto LABEL_14;
  }
  if (qword_2542A79D8 != -1)
    swift_once();
  v6 = sub_2365AFC00();
  __swift_project_value_buffer(v6, (uint64_t)qword_2542A79C0);
  sub_23648D710((uint64_t)v34, (uint64_t)aBlock);
  sub_23648D710((uint64_t)v34, (uint64_t)&v32);
  v7 = sub_2365AFBE8();
  v8 = sub_2365B038C();
  if (!os_log_type_enabled(v7, v8))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    v25 = &v32;
    goto LABEL_13;
  }
  v9 = swift_slowAlloc();
  v10 = swift_slowAlloc();
  v27 = v10;
  *(_DWORD *)v9 = 136315394;
  v11 = (uint64_t *)(*__swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v29)
                  + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_name);
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain();
  sub_236468D88(v12, v13, &v27);
  sub_2365B04A0();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  *(_WORD *)(v9 + 12) = 2080;
  __swift_project_boxed_opaque_existential_1(&v32, v33);
  sub_2365AC91C();
  sub_236465960(0, (unint64_t *)&qword_2563E6618);
  v14 = sub_2365AFF6C();
  v16 = v15;
  swift_bridgeObjectRelease();
  sub_236468D88(v14, v16, &v27);
  sub_2365B04A0();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  _os_log_impl(&dword_23644B000, v7, v8, "Sent Core Analytics event:  %s %s", (uint8_t *)v9, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x23B7F5254](v10, -1, -1);
  v17 = v9;
LABEL_10:
  MEMORY[0x23B7F5254](v17, -1, -1);
LABEL_14:

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t type metadata accessor for __SetupController()
{
  return objc_opt_self();
}

uint64_t sub_23650CA6C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23650CBC0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  if (*(_QWORD *)(v0 + 72))
    __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_23650CC14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v9 = v1[11];
  v8 = v1[12];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23647E274;
  return sub_23650AE90(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_23650CCA4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t sub_23650CCD8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, _QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD, _QWORD))(v0 + 16);
  if (v1)
    return v1(0, *(_QWORD *)(v0 + 32));
  return result;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_23650CD1C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23650CD5C()
{
  return type metadata accessor for SetupController();
}

void sub_23650CD64()
{
  unint64_t v0;

  sub_23650CE94();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for SetupController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SetupController.__allocating_init(queue:endpoint:inactiveSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of SetupController.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of SetupController.setup(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 216) + *(_QWORD *)(*(_QWORD *)v2 + 216));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_236477420;
  return v8(a1, a2);
}

void sub_23650CE94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2563E9A90)
  {
    sub_2365AFCC0();
    v0 = sub_2365B047C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2563E9A90);
  }
}

uint64_t method lookup function for __SetupController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of __SetupController.setup(with:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t sub_23650CF10()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23650CF34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23650BDB0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23650CF3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23650CFC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8) - 8) + 80);
  return sub_236506C1C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v0 + ((v1 + 88) & ~v1));
}

uint64_t sub_23650D004()
{
  return swift_deallocObject();
}

uint64_t sub_23650D014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23650D094(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8) - 8) + 80);
  return sub_236506D60(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), v1 + ((v3 + 48) & ~v3));
}

unint64_t sub_23650D0E0()
{
  unint64_t result;

  result = qword_2563E9C08;
  if (!qword_2563E9C08)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for MachSetupMessage, &type metadata for MachSetupMessage);
    atomic_store(result, (unint64_t *)&qword_2563E9C08);
  }
  return result;
}

unint64_t sub_23650D124()
{
  unint64_t result;

  result = qword_2563E9C10;
  if (!qword_2563E9C10)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for MachSetupMessage, &type metadata for MachSetupMessage);
    atomic_store(result, (unint64_t *)&qword_2563E9C10);
  }
  return result;
}

uint64_t sub_23650D168(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23648DC24(a6, a7);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23650D1E8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23648DD50(a6, a7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23650D264()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  if (*(_QWORD *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 80))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }

  return swift_deallocObject();
}

void sub_23650D2D8()
{
  uint64_t v0;

  sub_23650BC60(*(void (**)(void *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32, *(_QWORD *)(v0 + 112));
}

uint64_t sub_23650D2E8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_23650D30C()
{
  uint64_t v0;

  return sub_23648D1D0((_QWORD *)(v0 + 16));
}

uint64_t sub_23650D314()
{
  return objectdestroy_44Tm(&qword_2563E9C28);
}

uint64_t sub_23650D320(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C28);
  return sub_23650C3B4(a1);
}

uint64_t sub_23650D360(uint64_t a1)
{
  uint64_t v1;

  return sub_2365076F0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23650D368()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23650D38C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C38) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v4 = v0 + v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  if (*(_QWORD *)(v0 + v3 + 32))
    __swift_destroy_boxed_opaque_existential_1(v0 + v3 + 8);
  return swift_deallocObject();
}

uint64_t sub_23650D450(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_23650D494@<D0>(uint8_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C38) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_236507764(a1, (void (*)(char *, char *, uint64_t))(v2 + v6), (_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_23650D4FC(uint64_t a1)
{
  return sub_236507C6C(a1);
}

uint64_t sub_23650D504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23650D598(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C48) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23647E274;
  return sub_236507F60(a1, v6, v7, v8, v9);
}

uint64_t sub_23650D640(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 255)
    return sub_23650C2A8(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return result;
}

uint64_t sub_23650D660(uint64_t a1)
{
  uint64_t v1;

  return sub_23650C460(a1, *(_QWORD *)(v1 + 16), *(__int128 **)(v1 + 24));
}

uint64_t sub_23650D668(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 255)
    return sub_23650C190(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return result;
}

uint64_t sub_23650D688()
{
  return objectdestroy_44Tm(&qword_2563E9C68);
}

uint64_t objectdestroy_44Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_23650D6F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C68) - 8) + 80);
  return sub_236522ACC(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_23650D730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_2365AFCFC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  if (*(_QWORD *)(v0 + v4 + 32))
    __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 8);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v4 + v7 + 48) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_23650D820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(sub_2365AFCFC() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E9BE8) - 8) + 80);
  v6 = v4 + v5 + 48;
  v7 = *(_QWORD *)(v0 + 32);
  v8 = v0 + v3;
  v9 = v0 + v4;
  v10 = v0 + (v6 & ~v5);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_23647E274;
  v11[4] = v9;
  v11[5] = v10;
  v11[2] = v7;
  v11[3] = v8;
  return swift_task_switch();
}

unint64_t static Constants.DarwinNotificationNames.idmsAccountAdded.getter()
{
  return 0xD000000000000064;
}

unint64_t static Constants.DarwinNotificationNames.idmsAccountModified.getter()
{
  return 0xD000000000000064;
}

unint64_t static Constants.SignpostNames.localSetupWithContext.getter()
{
  return 0xD000000000000015;
}

unint64_t static Constants.SignpostNames.remoteSetupWithContext.getter()
{
  return 0xD000000000000016;
}

unint64_t static Constants.SignpostNames.remoteRepairWithContext.getter()
{
  return 0xD000000000000017;
}

unint64_t static Constants.SignpostNames.signOutWithContext.getter()
{
  return 0xD000000000000012;
}

unint64_t static DeviceApprovalKeys.isDeviceApprovalNotification.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static DeviceApprovalKeys.deviceApprovalModel.getter()
{
  return 0xD000000000000013;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

ValueMetadata *type metadata accessor for Constants.DarwinNotificationNames()
{
  return &type metadata for Constants.DarwinNotificationNames;
}

ValueMetadata *type metadata accessor for Constants.SignpostNames()
{
  return &type metadata for Constants.SignpostNames;
}

ValueMetadata *type metadata accessor for DeviceApprovalKeys()
{
  return &type metadata for DeviceApprovalKeys;
}

unint64_t deviceStateChangedNotificationName.getter()
{
  return 0xD000000000000035;
}

uint64_t AISAppleIDSignInResult.authResults.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t AISAppleIDSignInResult.authResults.setter(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___AISAppleIDSignInResult_authResults);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*AISAppleIDSignInResult.authResults.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id AISAppleIDSignInResult.__allocating_init(authResults:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___AISAppleIDSignInResult_authResults] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISAppleIDSignInResult.init(authResults:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR___AISAppleIDSignInResult_authResults] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISAppleIDSignInResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AISAppleIDSignInResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AISAppleIDSignInResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AISAppleIDSignInResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for AISAppleIDSignInResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AISAppleIDSignInResult.__allocating_init(authResults:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t ResourceAcquisitionManager.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_allocObject();
  ResourceAcquisitionManager.init()(v0, v1, v2, v3);
  return v0;
}

uint64_t sub_23650DDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;

  v5 = v4[2];
  type metadata accessor for ResourceAcquisitionManager.Acquisition(255, *(_QWORD *)(*v4 + 80), a3, a4);
  sub_2365B047C();
  v6 = *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v5 + 16);
  v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(v5 + v6);
  swift_retain();
  os_unfair_lock_unlock(v7);
  swift_release();
  return v8;
}

uint64_t sub_23650DE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;

  v6 = *v4;
  v7 = v4[2];
  type metadata accessor for ResourceAcquisitionManager.Acquisition(255, *(_QWORD *)(v6 + 80), a3, a4);
  sub_2365B047C();
  v8 = *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v7 + 16);
  v9 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(_QWORD *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v9);
  swift_release();
  *(_QWORD *)(v7 + v8) = a1;
  swift_retain();
  os_unfair_lock_unlock(v9);
  swift_release();
  return swift_release();
}

_QWORD *ResourceAcquisitionManager.init()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  type metadata accessor for ResourceAcquisitionManager.Acquisition(255, *(_QWORD *)(*v4 + 80), a3, a4);
  sub_2365B047C();
  v4[2] = sub_23650E63C();
  return v4;
}

_QWORD *sub_23650DF58(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v8 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23650E084(v10, v13, v14, v15);
  type metadata accessor for ResourceAcquisitionManager.Acquisition(0, v8, v16, v17);
  a1();
  swift_retain();
  v19 = sub_23650E8BC((uint64_t)v12, a3, a4, v18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  v20 = swift_retain();
  sub_23650DE68(v20, v21, v22, v23);
  return v19;
}

_QWORD *ResourceAcquisitionManager.Acquisition.__allocating_init(wrappedValue:relinquish:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = sub_23650E8BC(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(a1);
  return v6;
}

BOOL sub_23650E084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23650DDD0(a1, a2, a3, a4);
  if (v4)
  {
    v5 = swift_retain();
    sub_23650E37C(v5);
    sub_23650DE68(0, v6, v7, v8);
    swift_release();
  }
  return v4 != 0;
}

uint64_t ResourceAcquisitionManager.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_23650E084(a1, a2, a3, a4);
  swift_release();
  return v4;
}

uint64_t ResourceAcquisitionManager.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23650E084(a1, a2, a3, a4);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23650E128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = sub_2365B047C();
  v5 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v6 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v5, v4);
  os_unfair_lock_unlock(v6);
  return swift_release();
}

uint64_t sub_23650E1CC(uint64_t a1)
{
  uint64_t v2;

  sub_23650E6B4(a1);
  v2 = sub_2365B047C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void (*sub_23650E214(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_2365B047C();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  sub_23650E128((uint64_t)v7);
  return sub_23650E29C;
}

void sub_23650E29C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_23650E6B4((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_23650E6B4(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

_QWORD *ResourceAcquisitionManager.Acquisition.init(wrappedValue:relinquish:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v3;
  v6 = sub_23650E768(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 8))(a1);
  return v6;
}

uint64_t sub_23650E37C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  void (*v18)(char *);
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2365B047C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v23 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v23 - v13;
  sub_23650E128((uint64_t)&v23 - v13);
  v25 = v3;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
  sub_23650E6B4((uint64_t)v12);
  v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v12, v5);
  v15 = v1[2];
  swift_retain();
  swift_release();
  swift_getFunctionTypeMetadata1();
  sub_2365B047C();
  v16 = v15 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v15 + 16);
  v17 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(_QWORD *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v17);
  v18 = *(void (**)(char *))v16;
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  os_unfair_lock_unlock(v17);
  swift_release();
  if (v18)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v14, v5);
    v19 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v2) == 1)
    {
      v20 = (uint64_t (*)(char *, uint64_t))v26;
      v26(v14, v5);
      sub_236450690((uint64_t)v18);
      return v20(v9, v5);
    }
    v22 = v24;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v9, v2);
    swift_retain();
    v18(v22);
    sub_236450690((uint64_t)v18);
    sub_236450690((uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v2);
  }
  return ((uint64_t (*)(char *, uint64_t))v26)(v14, v5);
}

uint64_t ResourceAcquisitionManager.Acquisition.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_retain();
  sub_23650E37C(v1);
  swift_release();
  swift_release();
  return v0;
}

uint64_t ResourceAcquisitionManager.Acquisition.__deallocating_deinit()
{
  ResourceAcquisitionManager.Acquisition.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_23650E63C()
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_2365B05CC();
  return sub_2365B05C0();
}

uint64_t type metadata accessor for ResourceAcquisitionManager.Acquisition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResourceAcquisitionManager.Acquisition);
}

uint64_t sub_23650E6B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = sub_2365B047C();
  v5 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v6 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, a1, v4);
  os_unfair_lock_unlock(v6);
  return swift_release();
}

_QWORD *sub_23650E768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD v17[2];

  v7 = *(_QWORD *)(*v3 + 80);
  v8 = sub_2365B047C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - v10;
  v12 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v17 - v10, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v7);
  v13 = sub_23650E63C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v3[3] = v13;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v7;
  v14[3] = a2;
  v14[4] = a3;
  v17[0] = sub_23650EA94;
  v17[1] = v14;
  swift_getFunctionTypeMetadata1();
  sub_2365B047C();
  v15 = sub_23650E63C();
  swift_release();
  v3[2] = v15;
  return v3;
}

_QWORD *sub_23650E8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for ResourceAcquisitionManager.Acquisition(0, *(_QWORD *)(v4 + 80), a3, a4);
  swift_allocObject();
  return sub_23650E768(a1, a2, a3);
}

uint64_t sub_23650E914@<X0>(uint64_t a1@<X8>)
{
  return sub_23650E128(a1);
}

uint64_t sub_23650E934(uint64_t a1)
{
  return sub_23650E6B4(a1);
}

uint64_t sub_23650E954()
{
  return 8;
}

_QWORD *sub_23650E960(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23650E96C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ResourceAcquisitionManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ResourceAcquisitionManager);
}

uint64_t method lookup function for ResourceAcquisitionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.acquire(_:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.relinquish()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_23650E9E8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ResourceAcquisitionManager.Acquisition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.wrappedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.wrappedValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.wrappedValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.__allocating_init(wrappedValue:relinquish:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.relinquish()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_23650EA70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23650EA94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_23650EAB4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x24BEE27A8]) - 8) + 16))(a2, v3);
}

SecAccessControlRef SecureEnclave.P256.Signing.PrivateKey.init()()
{
  return sub_23650EE24(MEMORY[0x24BDC64A8]);
}

uint64_t SecureEnclave.P256.Signing.PrivateKey.init(rawRepresentation:)()
{
  return sub_2365AFEB8();
}

uint64_t SecureEnclave.P256.Signing.PrivateKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23650EEB8(MEMORY[0x24BDC6490], MEMORY[0x24BDC6A60], a1);
}

uint64_t SecureEnclave.P256.Signing.PrivateKey.signature<A>(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_2365AFF0C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2365AFEC4();
  if (!v1)
  {
    v0 = sub_2365AFEF4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v0;
}

uint64_t sub_23650EC24()
{
  return SecureEnclave.P256.Signing.PrivateKey.signature<A>(for:)();
}

SecAccessControlRef sub_23650EC38(uint64_t a1, uint64_t a2)
{
  return sub_23650EF20(a1, a2, MEMORY[0x24BDC64A8]);
}

uint64_t sub_23650EC54@<X0>(uint64_t a1@<X8>)
{
  return sub_23650EF9C(MEMORY[0x24BDC6490], MEMORY[0x24BDC6A60], a1);
}

uint64_t sub_23650EC6C()
{
  return sub_2365AFEB8();
}

uint64_t P256.Signing.PublicKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23650F010(MEMORY[0x24BDC64B8], a1);
}

uint64_t P256.Signing.PublicKey.isValidSignature<A>(_:for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  _QWORD v13[4];

  v4 = sub_2365AFF0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v13 - v9;
  v13[2] = a1;
  v13[3] = a2;
  sub_236468CBC(a1, a2);
  sub_23646C3A4();
  sub_2365AFF00();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v4);
  v11 = sub_2365AFF18();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v11 & 1;
}

uint64_t sub_23650EDC0@<X0>(uint64_t a1@<X8>)
{
  return sub_23650F0B0(MEMORY[0x24BDC64B8], a1);
}

uint64_t sub_23650EDD0()
{
  return sub_2365AFF30();
}

SecAccessControlRef SecureEnclave.P256.KeyAgreement.PrivateKey.init()()
{
  return sub_23650EE24(MEMORY[0x24BDC6468]);
}

SecAccessControlRef sub_23650EE24(uint64_t (*a1)(uint64_t, SecAccessControlRef, _QWORD))
{
  SecAccessControlRef result;

  result = SecAccessControlCreateWithFlags(0, (CFTypeRef)*MEMORY[0x24BDE8F70], 0, 0);
  if (result)
    return (SecAccessControlRef)a1(1, result, 0);
  __break(1u);
  return result;
}

uint64_t SecureEnclave.P256.KeyAgreement.PrivateKey.init(rawRepresentation:)()
{
  return sub_2365AFEA0();
}

uint64_t SecureEnclave.P256.KeyAgreement.PrivateKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23650EEB8(MEMORY[0x24BDC6450], MEMORY[0x24BDC68D0], a1);
}

uint64_t sub_23650EEB8@<X0>(void (*a1)(void)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  a1();
  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, 0, 1, v5);
}

SecAccessControlRef sub_23650EF04(uint64_t a1, uint64_t a2)
{
  return sub_23650EF20(a1, a2, MEMORY[0x24BDC6468]);
}

SecAccessControlRef sub_23650EF20(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, SecAccessControlRef, _QWORD))
{
  SecAccessControlRef result;

  result = SecAccessControlCreateWithFlags(0, (CFTypeRef)*MEMORY[0x24BDE8F70], 0, 0);
  if (result)
    return (SecAccessControlRef)a3(1, result, 0);
  __break(1u);
  return result;
}

uint64_t sub_23650EF88@<X0>(uint64_t a1@<X8>)
{
  return sub_23650EF9C(MEMORY[0x24BDC6450], MEMORY[0x24BDC68D0], a1);
}

uint64_t sub_23650EF9C@<X0>(void (*a1)(void)@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;

  a1();
  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a3, 0, 1, v5);
}

uint64_t sub_23650EFEC()
{
  return sub_2365AFEA0();
}

uint64_t P256.KeyAgreement.PublicKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23650F010(MEMORY[0x24BDC6480], a1);
}

uint64_t sub_23650F010@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

_UNKNOWN **sub_23650F050()
{
  return &protocol witness table for P256.Signing.PublicKey;
}

_UNKNOWN **sub_23650F05C()
{
  return &protocol witness table for SecureEnclave.P256.Signing.PrivateKey;
}

_UNKNOWN **sub_23650F068()
{
  return &protocol witness table for SecureEnclave.P256.Signing.PrivateKey;
}

_UNKNOWN **sub_23650F074()
{
  return &protocol witness table for P256.KeyAgreement.PublicKey;
}

_UNKNOWN **sub_23650F080()
{
  return &protocol witness table for P256.KeyAgreement.PublicKey;
}

_UNKNOWN **sub_23650F08C()
{
  return &protocol witness table for SecureEnclave.P256.KeyAgreement.PrivateKey;
}

_UNKNOWN **sub_23650F098()
{
  return &protocol witness table for SecureEnclave.P256.KeyAgreement.PrivateKey;
}

uint64_t sub_23650F0A4@<X0>(uint64_t a1@<X8>)
{
  return sub_23650F0B0(MEMORY[0x24BDC6480], a1);
}

uint64_t sub_23650F0B0@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_23650F0F0()
{
  return sub_2365AFEE8();
}

uint64_t Sequence.asyncCompactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return swift_task_switch();
}

uint64_t sub_23650F144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  __int128 v7;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 40);
  v7 = *(_OWORD *)(v0 + 48);
  sub_2365B047C();
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  v4 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v7;
  *(_QWORD *)(v3 + 40) = v1;
  *(_OWORD *)(v3 + 48) = v4;
  sub_2365B01A0();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_23650F230;
  return sub_2365B06EC();
}

uint64_t sub_23650F230()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23650F29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  v8[5] = a2;
  v10 = sub_2365B047C();
  v8[12] = v10;
  v8[13] = *(_QWORD *)(v10 - 8);
  v8[14] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[15] = AssociatedTypeWitness;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[16] = v12;
  v8[17] = *(_QWORD *)(v12 + 64);
  v8[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  v8[19] = swift_task_alloc();
  sub_2365B047C();
  v8[20] = swift_task_alloc();
  v8[21] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v13 = sub_2365B02F0();
  v8[22] = v13;
  v8[23] = *(_QWORD *)(v13 - 8);
  v8[24] = swift_task_alloc();
  sub_2365B047C();
  v8[25] = swift_task_alloc();
  v8[26] = *(_QWORD *)(a6 - 8);
  v8[27] = swift_task_alloc();
  v14 = swift_getAssociatedTypeWitness();
  v8[28] = v14;
  v8[29] = *(_QWORD *)(v14 - 8);
  v8[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23650F480()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t, uint64_t, uint64_t);
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v17 = v0[16];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[26] + 16))(v0[27], v0[6], v0[9]);
  sub_2365B0104();
  while (1)
  {
    v1 = v0[25];
    v2 = v0[15];
    swift_getAssociatedConformanceWitness();
    sub_2365B0494();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v1, 1, v2) == 1)
      break;
    v3 = v0[25];
    v4 = v0[18];
    v5 = v0[19];
    v6 = v0[15];
    v16 = v0[11];
    v7 = v0[7];
    v8 = v0[8];
    v9 = sub_2365B0218();
    v15 = *(_OWORD *)(v0 + 9);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 32);
    v10(v4, v3, v6);
    v11 = (*(unsigned __int8 *)(v17 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0;
    *(_OWORD *)(v12 + 32) = v15;
    *(_QWORD *)(v12 + 48) = v16;
    *(_QWORD *)(v12 + 56) = v7;
    *(_QWORD *)(v12 + 64) = v8;
    v10(v12 + v11, v4, v6);
    sub_2365B02FC();
    swift_retain();
    sub_23650FB68(v5, (uint64_t)&unk_2563E9EC8, v12);
    sub_236495B38(v5);
  }
  (*(void (**)(_QWORD, _QWORD))(v0[29] + 8))(v0[30], v0[28]);
  v0[2] = sub_2365B0188();
  sub_2365B02D8();
  v13 = (_QWORD *)swift_task_alloc();
  v0[31] = v13;
  *v13 = v0;
  v13[1] = sub_23650F700;
  return sub_2365B02E4();
}

uint64_t sub_23650F700()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 256) = 0;
  return swift_task_switch();
}

uint64_t sub_23650F764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD **)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    *v4 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 88);
    v11 = *(_OWORD *)(v0 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v1, v2);
    v8 = swift_task_alloc();
    *(_OWORD *)(v8 + 16) = v11;
    *(_QWORD *)(v8 + 32) = v7;
    *(_QWORD *)(v8 + 40) = v0 + 16;
    sub_2364B17EC((void (*)(char *, char *))sub_23650FD7C, v8, MEMORY[0x24BEE4078], MEMORY[0x24BEE4AE0] + 8, v9, v0 + 272);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    swift_task_dealloc();
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v10;
    *v10 = v0;
    v10[1] = sub_23650F944;
    return sub_2365B02E4();
  }
}

uint64_t sub_23650F944()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v2 + 256) = 0;
  return swift_task_switch();
}

uint64_t sub_23650F9A8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23650FA60(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_23647E274;
  return sub_23650F29C(a1, a2, v9, v11, v10, v6, v7, v8);
}

uint64_t sub_23650FAF4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = v6;
  v9[1] = sub_236477420;
  return v11(a1, a6);
}

uint64_t sub_23650FB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2364DB978(a1, (uint64_t)v9);
  v10 = sub_2365B0218();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_236495B38((uint64_t)v9);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_2365B01AC();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2365B020C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = *v4;
  v16 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_23650FCEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2365B01A0();
  return sub_2365B0194();
}

uint64_t sub_23650FD7C(uint64_t a1)
{
  return sub_23650FCEC(a1);
}

uint64_t sub_23650FD9C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_23650FE30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v4 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  v5 = *(int **)(v1 + 56);
  v6 = v1 + ((v4 + 72) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_236477420;
  v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v5 + *v5);
  v8 = (_QWORD *)swift_task_alloc();
  v7[2] = v8;
  *v8 = v7;
  v8[1] = sub_236477420;
  return v10(a1, v6);
}

uint64_t MessageSessionTransport.init(templateSession:identifier:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v9 = type metadata accessor for MessageSessionTransport(0, a4, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - v12;
  *((_OWORD *)v13 + 2) = 0u;
  *((_OWORD *)v13 + 3) = 0u;
  v14 = (char *)&v20 + *(int *)(v11 + 52) - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v17 = (uint64_t)&v13[*(int *)(v9 + 56)];
  v16((char *)v17, 1, 1, v15);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE297D0]), sel_initWithTemplate_, a1);
  if (v18)
  {
    *(_QWORD *)v13 = a1;
    *((_QWORD *)v13 + 1) = v18;
    *((_QWORD *)v13 + 2) = v21;
    *((_QWORD *)v13 + 3) = a3;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a6, v13, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a6, 0, 1, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else
  {
    swift_bridgeObjectRelease();

    sub_236465998((uint64_t)v14, &qword_2563E4DD8);
    sub_236465998(v17, &qword_2563E4DD8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a6, 1, 1, v9);
  }
}

uint64_t type metadata accessor for MessageSessionTransport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageSessionTransport);
}

uint64_t sub_236510098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;

  v4 = a4;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (!a3)
  {
    v7 = 0;
    if (!a4)
      goto LABEL_4;
    goto LABEL_3;
  }
  v7 = sub_2365AFF60();
  if (v4)
LABEL_3:
    v4 = sub_2365AFF60();
LABEL_4:
  swift_retain();
  v6(a2, v7, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_236510158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  uint64_t v8;
  id v9;

  if (!a2)
  {
    v7 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)sub_2365AFF48();
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v8 = sub_2365AFF48();
LABEL_6:
  v9 = (id)v8;
  (*(void (**)(uint64_t, uint64_t, void *))(a4 + 16))(a4, a1, v7);

}

id MessageSessionTransport.templateSession.getter()
{
  id *v0;

  return *v0;
}

id MessageSessionTransport.session.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t MessageSessionTransport.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MessageSessionTransport.onReceive(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_236450690(*(_QWORD *)(v4 + 32));
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, v4, a3);
  return swift_retain();
}

uint64_t MessageSessionTransport.onInvalidation(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  sub_236450690(*(_QWORD *)(v4 + 48));
  *(_QWORD *)(v4 + 48) = a1;
  *(_QWORD *)(v4 + 56) = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, v4, a3);
  return swift_retain();
}

uint64_t MessageSessionTransport.build()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v4 = *(_QWORD *)(v2 + 32);
  if (v4)
  {
    v6 = *(_QWORD *)(v2 + 40);
    swift_retain();
    MessageSessionTransport.activate(with:)(v4, v6, a1, a2);
    return sub_236450690(v4);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v2, a1);
    v9 = type metadata accessor for MessageSessionTransport.Failure(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v8);
    MEMORY[0x23B7F5164](&unk_2365BF3E0, v9);
    swift_allocError();
    *v10 = 0;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for MessageSessionTransport.Failure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MessageSessionTransport.Failure);
}

uint64_t MessageSessionTransport.activate(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  void (*v80)(char *, _QWORD *, uint64_t);
  void (*v81)(char *, _QWORD *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t aBlock;
  uint64_t v97;
  void *v98;
  void *v99;
  uint64_t (*v100)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v101;

  v5 = v4;
  v83 = a2;
  v82 = a1;
  v87 = a4;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
  v85 = *(_QWORD *)(a3 - 8);
  v86 = v7;
  MEMORY[0x24BDAC7A8](a1);
  v84 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(_QWORD *)(v9 + 24);
  v90 = type metadata accessor for MessageUnpacker(0, v10, v11, v12);
  v92 = *(_QWORD *)(v90 - 8);
  v13 = *(_QWORD *)(v92 + 64);
  v14 = MEMORY[0x24BDAC7A8](v90);
  v89 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v93 = (uint64_t *)((char *)&v73 - v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for MessagePacker(0, v10, v11, v19);
  v91 = *(_QWORD *)(v88 - 8);
  v20 = *(_QWORD *)(v91 + 64);
  v21 = MEMORY[0x24BDAC7A8](v88);
  v76 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v73 - v22);
  sub_2365AF81C();
  swift_allocObject();
  v24 = sub_2365AF810();
  v78 = a3;
  sub_2364DBE3C(v5 + *(int *)(a3 + 56), (uint64_t)v18);
  v79 = v23;
  v94 = v10;
  v95 = v11;
  MessagePacker.init(encoder:signingIdentity:topicIdentifier:)(v24, (uint64_t)v18, 0, 0, v10, v11, v23);
  sub_2365AF7F8();
  swift_allocObject();
  v25 = sub_2365AF7EC();
  v26 = v5;
  sub_2364DBE3C(v5 + *(int *)(a3 + 52), (uint64_t)v18);
  v27 = v93;
  MessageUnpacker.init(decoder:signingIdentity:topicIdentifier:)(v25, (uint64_t)v18, 0, 0, v10, v11, v93);
  v77 = v26;
  v75 = *(id *)(v26 + 8);
  v74 = sub_2365B0038();
  v28 = v92;
  v81 = *(void (**)(char *, _QWORD *, uint64_t))(v92 + 16);
  v29 = v89;
  v30 = v27;
  v31 = v90;
  v81(v89, v30, v90);
  v32 = v91;
  v80 = *(void (**)(char *, _QWORD *, uint64_t))(v91 + 16);
  v33 = v76;
  v34 = v88;
  v80(v76, v23, v88);
  v35 = v28;
  v36 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v37 = (v13 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = v32;
  v39 = (*(unsigned __int8 *)(v32 + 80) + v37 + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v40 = swift_allocObject();
  v41 = v95;
  *(_QWORD *)(v40 + 16) = v94;
  *(_QWORD *)(v40 + 24) = v41;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v40 + v36, v29, v31);
  v42 = (_QWORD *)(v40 + v37);
  v43 = v83;
  *v42 = v82;
  v42[1] = v43;
  v44 = v40 + v39;
  v45 = (uint64_t)v33;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v44, v33, v34);
  v100 = sub_236511028;
  v101 = v40;
  v46 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v97 = 1107296256;
  v98 = sub_236512338;
  v99 = &block_descriptor_10;
  v47 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v48 = (void *)v74;
  objc_msgSend(v75, sel_registerRequestID_options_handler_, v74, 0, v47);
  _Block_release(v47);

  v49 = v77;
  v50 = *(void **)(v77 + 8);
  v52 = v84;
  v51 = v85;
  v53 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
  v54 = v78;
  v53(v84, v77, v78);
  v55 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v56 = swift_allocObject();
  v57 = v95;
  *(_QWORD *)(v56 + 16) = v94;
  *(_QWORD *)(v56 + 24) = v57;
  v58 = v56 + v55;
  v59 = v52;
  v60 = (uint64_t)v52;
  v61 = v54;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v58, v59, v54);
  v100 = sub_2365126DC;
  v101 = v56;
  aBlock = v46;
  v97 = 1107296256;
  v98 = sub_2364BF6CC;
  v99 = &block_descriptor_6;
  v62 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v50, sel_setInvalidationHandler_, v62);
  _Block_release(v62);
  v63 = v49;
  objc_msgSend(*(id *)(v49 + 8), sel_activate);
  v64 = v61;
  v53((char *)v60, v49, v61);
  v65 = v45;
  v66 = v45;
  v67 = v79;
  v68 = v88;
  v80((char *)v66, v79, v88);
  v70 = (uint64_t)v89;
  v69 = v90;
  v71 = v93;
  v81(v89, v93, v90);
  sub_236512724(v60, v65, v70, v94, v95, v87);
  (*(void (**)(_QWORD *, uint64_t))(v92 + 8))(v71, v69);
  (*(void (**)(_QWORD *, uint64_t))(v91 + 8))(v67, v68);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v63, v64);
}

uint64_t MessageSessionTransport.incomingSigningIdentity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2364DBE3C(a1, (uint64_t)v9);
  v10 = v3 + *(int *)(a2 + 52);
  sub_236465998(v10, &qword_2563E4DD8);
  sub_2364DBE84((uint64_t)v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, v3, a2);
}

uint64_t MessageSessionTransport.outgoingSigningIdentity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2364DBE3C(a1, (uint64_t)v9);
  v10 = v3 + *(int *)(a2 + 56);
  sub_236465998(v10, &qword_2563E4DD8);
  sub_2364DBE84((uint64_t)v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, v3, a2);
}

uint64_t sub_236510ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v41 = a8;
  v46 = a6;
  v47 = a7;
  v48 = a3;
  v49 = a4;
  v45 = a2;
  v43 = a10;
  v44 = a9;
  v11 = type metadata accessor for MessagePacker(0, a9, a10, a4);
  v12 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v38 - v14;
  v40 = (char *)&v38 - v14;
  v17 = type metadata accessor for MessageUnpacker(0, a9, a10, v16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v38 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = v24;
  v25 = sub_2365B0218();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a5, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v41, v11);
  v26 = (*(unsigned __int8 *)(v18 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v27 = (v19 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = (*(unsigned __int8 *)(v12 + 80) + v28 + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v30 = (char *)swift_allocObject();
  *((_QWORD *)v30 + 2) = 0;
  *((_QWORD *)v30 + 3) = 0;
  v31 = v43;
  *((_QWORD *)v30 + 4) = v44;
  *((_QWORD *)v30 + 5) = v31;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v30[v26], v21, v17);
  v32 = v46;
  *(_QWORD *)&v30[v27] = v45;
  v33 = &v30[v28];
  v34 = v47;
  *(_QWORD *)v33 = v32;
  *((_QWORD *)v33 + 1) = v34;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v30[v29], v40, v39);
  v35 = &v30[(v13 + v29 + 7) & 0xFFFFFFFFFFFFFFF8];
  v36 = v49;
  *(_QWORD *)v35 = v48;
  *((_QWORD *)v35 + 1) = v36;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23649225C((uint64_t)v42, (uint64_t)&unk_2563EA168, (uint64_t)v30);
  return swift_release();
}

uint64_t sub_236510D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int *v13;
  unsigned int (*v14)(unint64_t, uint64_t, int *);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = type metadata accessor for MessageUnpacker(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = type metadata accessor for MessagePacker(0, v5, v6, v11);
  v36 = (v10 + *(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v35 - 8) + 80);
  swift_release();
  v12 = v4 + v9 + *(int *)(v7 + 36);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v14 = *(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48);
  if (!v14(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    v15 = v12 + v13[9];
    v16 = sub_2365AFE1C();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v12 + v13[10];
    v19 = sub_2365AFE4C();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v12 + v13[11];
    v22 = sub_2365AFE88();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v24 = v4 + v36 + *(int *)(v35 + 36);
  if (!v14(v24, 1, v13))
  {
    swift_bridgeObjectRelease();
    v25 = v24 + v13[9];
    v26 = sub_2365AFE1C();
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v25, v26);
    v28 = v24 + v13[10];
    v29 = sub_2365AFE4C();
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(unint64_t, uint64_t))(v30 + 8))(v28, v29);
    v31 = v24 + v13[11];
    v32 = sub_2365AFE88();
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      (*(void (**)(unint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_236511028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = *(_QWORD *)(v4 + 16);
  v10 = *(_QWORD *)(v4 + 24);
  v11 = *(_QWORD *)(type metadata accessor for MessageUnpacker(0, v9, v10, a4) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MessagePacker(0, v9, v10, v14) - 8) + 80);
  return sub_236510ADC(a1, a2, a3, a4, v4 + v12, *(_QWORD *)(v4 + v13), *(_QWORD *)(v4 + v13 + 8), v4 + ((v13 + v15 + 16) & ~v15), v9, v10);
}

uint64_t sub_2365110F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8[34] = v12;
  v8[35] = v13;
  v8[32] = v10;
  v8[33] = v11;
  v8[30] = a7;
  v8[31] = a8;
  v8[28] = a5;
  v8[29] = a6;
  v8[27] = a4;
  v8[36] = *(_QWORD *)(v12 - 8);
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  v8[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_236511180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int *v8;
  _QWORD *v9;
  int *v11;

  v5 = v4[39];
  v6 = v4[28];
  v7 = type metadata accessor for MessageUnpacker(0, v4[34], v4[35], a4);
  MessageUnpacker.unpack(_:)(v6, v7, v5);
  v8 = (int *)v4[29];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v4[36] + 16))(v4[37], v4[39], v4[34]);
  v11 = (int *)((char *)v8 + *v8);
  v9 = (_QWORD *)swift_task_alloc();
  v4[40] = v9;
  *v9 = v4;
  v9[1] = sub_236511794;
  return ((uint64_t (*)(_QWORD, _QWORD))v11)(v4[38], v4[37]);
}

uint64_t sub_236511794()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2365117F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  __objc2_class **p_superclass;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t inited;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43[2];

  v5 = *(void **)(v4 + 328);
  v6 = *(_QWORD *)(v4 + 304);
  v7 = type metadata accessor for MessagePacker(0, *(_QWORD *)(v4 + 272), *(_QWORD *)(v4 + 280), a4);
  v8 = MessagePacker.pack(_:)(v6, v7);
  v9 = v5;
  v10 = *(_QWORD *)(v4 + 312);
  v11 = *(_QWORD *)(v4 + 272);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 288) + 8);
  v12(*(_QWORD *)(v4 + 304), v11);
  v12(v10, v11);
  p_superclass = _TtC12AppleIDSetup8SKDevice.superclass;
  if (v9)
  {
    if (qword_2563E4348 != -1)
      swift_once();
    v14 = sub_2365AFC00();
    __swift_project_value_buffer(v14, (uint64_t)qword_2563ECF60);
    v15 = v9;
    v16 = v9;
    v17 = sub_2365AFBE8();
    v18 = sub_2365B0398();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v21 = v9;
      v22 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v4 + 208) = v22;
      p_superclass = (__objc2_class **)(_TtC12AppleIDSetup8SKDevice + 8);
      sub_2365B04A0();
      *v20 = v22;

      _os_log_impl(&dword_23644B000, v17, v18, "Failed to handle incoming request with error: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v20, -1, -1);
      MEMORY[0x23B7F5254](v19, -1, -1);
    }
    else
    {

    }
    v24 = (void *)sub_2365AF8E8();
    v23 = NSErrorToOSStatus();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7BA0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2365B6A20;
    *(_QWORD *)(v4 + 144) = 0x726F727265;
    *(_QWORD *)(v4 + 152) = 0xE500000000000000;
    v26 = MEMORY[0x24BEE0D00];
    sub_2365B0548();
    swift_getErrorValue();
    v27 = sub_2365B0998();
    *(_QWORD *)(inited + 96) = v26;
    *(_QWORD *)(inited + 72) = v27;
    *(_QWORD *)(inited + 80) = v28;
    v8 = sub_236466CE4(inited);

  }
  else
  {
    v23 = 0;
  }
  if (p_superclass[105] != (__objc2_class *)-1)
    swift_once();
  v29 = sub_2365AFC00();
  __swift_project_value_buffer(v29, (uint64_t)qword_2563ECF60);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v30 = sub_2365AFBE8();
  v31 = sub_2365B038C();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v43[0] = v41;
    *(_DWORD *)v32 = 136315906;
    swift_bridgeObjectRetain();
    v42 = v23;
    v33 = sub_2365AFF6C();
    v35 = v34;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 168) = sub_236468D88(v33, v35, v43);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2080;
    *(_QWORD *)(v4 + 176) = v8;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7E70);
    v36 = sub_2365B0080();
    *(_QWORD *)(v4 + 184) = sub_236468D88(v36, v37, v43);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 22) = 2080;
    *(_QWORD *)(v4 + 192) = 0;
    v23 = v42;
    v38 = sub_2365B0080();
    *(_QWORD *)(v4 + 200) = sub_236468D88(v38, v39, v43);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v32 + 32) = 1024;
    *(_DWORD *)(v4 + 336) = v42;
    sub_2365B04A0();
    _os_log_impl(&dword_23644B000, v30, v31, "Responding to inRequest: %s with outResponse: %s, outOptions: %s, outStatus: %d", (uint8_t *)v32, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v41, -1, -1);
    MEMORY[0x23B7F5254](v32, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(uint64_t, _QWORD, unint64_t))(v4 + 256))(v23, 0, v8);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_236511DB8()
{
  uint64_t v0;
  void *v1;
  __objc2_class **p_superclass;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint8_t *v12;
  void *v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 288) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 272));
  v1 = *(void **)(v0 + 328);
  p_superclass = _TtC12AppleIDSetup8SKDevice.superclass;
  if (qword_2563E4348 != -1)
    swift_once();
  v3 = sub_2365AFC00();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563ECF60);
  v4 = v1;
  v5 = v1;
  v6 = sub_2365AFBE8();
  v7 = sub_2365B0398();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 208) = v11;
    sub_2365B04A0();
    *v9 = v11;

    _os_log_impl(&dword_23644B000, v6, v7, "Failed to handle incoming request with error: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v9, -1, -1);
    v12 = v8;
    p_superclass = (__objc2_class **)(_TtC12AppleIDSetup8SKDevice + 8);
    MEMORY[0x23B7F5254](v12, -1, -1);
  }
  else
  {

  }
  v13 = (void *)sub_2365AF8E8();
  v32 = NSErrorToOSStatus();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7BA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2365B6A20;
  *(_QWORD *)(v0 + 144) = 0x726F727265;
  *(_QWORD *)(v0 + 152) = 0xE500000000000000;
  v15 = MEMORY[0x24BEE0D00];
  sub_2365B0548();
  swift_getErrorValue();
  v16 = sub_2365B0998();
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 80) = v17;
  v18 = sub_236466CE4(inited);

  if (p_superclass[105] != (__objc2_class *)-1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563ECF60);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v19 = sub_2365AFBE8();
  v20 = sub_2365B038C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v33 = v31;
    *(_DWORD *)v21 = 136315906;
    swift_bridgeObjectRetain();
    v22 = sub_2365AFF6C();
    v24 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 168) = sub_236468D88(v22, v24, &v33);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    *(_QWORD *)(v0 + 176) = v18;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7E70);
    v25 = sub_2365B0080();
    *(_QWORD *)(v0 + 184) = sub_236468D88(v25, v26, &v33);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 2080;
    *(_QWORD *)(v0 + 192) = 0;
    v27 = sub_2365B0080();
    *(_QWORD *)(v0 + 200) = sub_236468D88(v27, v28, &v33);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 1024;
    v29 = v32;
    *(_DWORD *)(v0 + 336) = v32;
    sub_2365B04A0();
    _os_log_impl(&dword_23644B000, v19, v20, "Responding to inRequest: %s with outResponse: %s, outOptions: %s, outStatus: %d", (uint8_t *)v21, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v31, -1, -1);
    MEMORY[0x23B7F5254](v21, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    v29 = v32;
  }
  (*(void (**)(uint64_t, _QWORD, unint64_t))(v0 + 256))(v29, 0, v18);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236512338(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  void (*v5)(uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v5 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  if (a2)
    v6 = sub_2365AFF60();
  else
    v6 = 0;
  v7 = sub_2365AFF60();
  v8 = _Block_copy(a4);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain();
  v5(v6, v7, sub_2364EA7FC, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_236512440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  unsigned int (*v10)(uint64_t, uint64_t, int *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = type metadata accessor for MessageSessionTransport(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 32))
    swift_release();
  if (*(_QWORD *)(v7 + 48))
    swift_release();
  v8 = v7 + *(int *)(v5 + 52);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48);
  if (!v10(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v11 = v8 + v9[9];
    v12 = sub_2365AFE1C();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v14 = v8 + v9[10];
    v15 = sub_2365AFE4C();
    v16 = *(_QWORD *)(v15 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    v17 = v8 + v9[11];
    v18 = sub_2365AFE88();
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  v20 = v7 + *(int *)(v5 + 56);
  if (!v10(v20, 1, v9))
  {
    swift_bridgeObjectRelease();
    v21 = v20 + v9[9];
    v22 = sub_2365AFE1C();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v20 + v9[10];
    v25 = sub_2365AFE4C();
    v26 = *(_QWORD *)(v25 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    v27 = v20 + v9[11];
    v28 = sub_2365AFE88();
    v29 = *(_QWORD *)(v28 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
  }
  return swift_deallocObject();
}

uint64_t sub_2365126DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t (*v7)(void);

  result = type metadata accessor for MessageSessionTransport(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(result - 8) + 80);
  v7 = *(uint64_t (**)(void))(v4 + ((v6 + 32) & ~v6) + 48);
  if (v7)
    return v7();
  return result;
}

uint64_t sub_236512724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = (int *)type metadata accessor for ActivatedMessageSessionTransport(0, a4, a5, a4);
  sub_2365AF9F0();
  *(_BYTE *)(a6 + v12[12]) = 0;
  v14 = type metadata accessor for MessageSessionTransport(0, a4, a5, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a6, a1, v14);
  v15 = a6 + v12[9];
  v17 = type metadata accessor for MessagePacker(0, a4, a5, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, a2, v17);
  v18 = a6 + v12[10];
  v20 = type metadata accessor for MessageUnpacker(0, a4, a5, v19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, a3, v20);
}

uint64_t sub_236512820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return MessageSessionTransport.build()(a1, a2);
}

Swift::Void __swiftcall ActivatedMessageSessionTransport.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = v0;
  sub_236513334(v2, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_23651286C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[23] = a3;
  v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  return swift_task_switch();
}

uint64_t sub_236512888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v4[23];
  v6 = v4[22];
  v7 = *(_QWORD *)(v5 + 16);
  v4[25] = v7;
  v8 = *(_QWORD *)(v5 + 24);
  v4[26] = v8;
  v9 = type metadata accessor for MessagePacker(0, v7, v8, a4);
  v10 = MessagePacker.pack(_:)(v6, v9);
  v4[27] = v10;
  v11 = v10;
  v12 = swift_task_alloc();
  v4[28] = v12;
  *(_QWORD *)v12 = v4;
  *(_QWORD *)(v12 + 8) = sub_236512954;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v4 + 23);
  *(_QWORD *)(v12 + 24) = v11;
  return swift_task_switch();
}

uint64_t sub_236512954(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_2365129C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  NSObject *log;
  os_log_type_t type;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_QWORD *)(v4 + 168);
  v6 = *(_QWORD *)(v4 + 232);
  v7 = *(void **)(v4 + 240);
  v8 = type metadata accessor for MessageUnpacker(0, *(_QWORD *)(v4 + 200), *(_QWORD *)(v4 + 208), a4);
  MessageUnpacker.unpack(_:)(v6, v8, v5);
  if (v7)
  {
    v9 = v7;
    *(_QWORD *)(v4 + 112) = 0x726F727265;
    v10 = *(_QWORD *)(v4 + 232);
    *(_QWORD *)(v4 + 120) = 0xE500000000000000;
    sub_2365B0548();
    if (*(_QWORD *)(v10 + 16) && (v11 = sub_2364685F8(v4 + 16), (v12 & 1) != 0))
    {
      sub_23646A9F4(*(_QWORD *)(*(_QWORD *)(v4 + 232) + 56) + 32 * v11, v4 + 56);
    }
    else
    {
      *(_OWORD *)(v4 + 56) = 0u;
      *(_OWORD *)(v4 + 72) = 0u;
    }
    swift_bridgeObjectRelease();
    sub_23646A464(v4 + 16);
    if (*(_QWORD *)(v4 + 80))
    {
      v13 = swift_dynamicCast();
      if (v13)
        v14 = *(_QWORD *)(v4 + 128);
      else
        v14 = 0;
      if (v13)
        v15 = *(_QWORD *)(v4 + 136);
      else
        v15 = 0;
    }
    else
    {
      sub_236465998(v4 + 56, (uint64_t *)&unk_2542A8320);
      v14 = 0;
      v15 = 0;
    }
    if (qword_2563E4348 != -1)
      swift_once();
    v17 = sub_2365AFC00();
    __swift_project_value_buffer(v17, (uint64_t)qword_2563ECF60);
    v18 = v9;
    swift_bridgeObjectRetain();
    v19 = v9;
    swift_bridgeObjectRetain();
    v20 = sub_2365AFBE8();
    v21 = sub_2365B0398();
    if (os_log_type_enabled(v20, v21))
    {
      type = v21;
      v22 = swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v36 = v35;
      *(_DWORD *)v22 = 138412546;
      v24 = v9;
      log = v20;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v4 + 152) = v25;
      sub_2365B04A0();
      *v23 = v25;

      *(_WORD *)(v22 + 12) = 2080;
      if (v15)
        v26 = v14;
      else
        v26 = 0x3E6C6C756E3CLL;
      if (v15)
        v27 = v15;
      else
        v27 = 0xE600000000000000;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v4 + 160) = sub_236468D88(v26, v27, &v36);
      sub_2365B04A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23644B000, log, type, "Failed to unpack inResponse with error: %@ and inError: %s", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v35, -1, -1);
      MEMORY[0x23B7F5254](v22, -1, -1);

      if (v15)
        goto LABEL_28;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      if (v15)
      {
LABEL_28:
        v30 = type metadata accessor for ActivatedMessageSessionTransport.Failure(0, *(_QWORD *)(v4 + 200), *(_QWORD *)(v4 + 208), v28);
        MEMORY[0x23B7F5164](&unk_2365BF3A0, v30);
        swift_allocError();
        *v31 = v14;
        v31[1] = v15;
        swift_willThrow();

        v16 = *(uint64_t (**)(void))(v4 + 8);
        return v16();
      }
    }
    swift_getErrorValue();
    v14 = sub_2365B0998();
    v15 = v29;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  v16 = *(uint64_t (**)(void))(v4 + 8);
  return v16();
}

uint64_t sub_236512DFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236512E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_236512E4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = *(_QWORD *)(v2 + 16);
  v4[3] = *(_QWORD *)(v2 + 24);
  v4[4] = v1;
  v4[5] = v3;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF0);
  *v5 = v0;
  v5[1] = sub_2364E09F4;
  return sub_2365B0914();
}

void sub_236512F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = *(void **)(v3 + 8);
  v10 = (void *)sub_2365B0038();
  v11 = (void *)sub_2365AFF48();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a3 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_23651B1E4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_236510098;
  aBlock[3] = &block_descriptor_22;
  v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_sendRequestID_options_request_responseHandler_, v10, 0, v11, v14);
  _Block_release(v14);

}

uint64_t sub_2365130B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  _OWORD *v8;

  if (a3)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8);
    return sub_2365B01C4();
  }
  else
  {
    v7 = type metadata accessor for ActivatedMessageSessionTransport.Failure(0, a5, a6, a4);
    MEMORY[0x23B7F5164](&unk_2365BF3A0, v7);
    swift_allocError();
    *v8 = xmmword_2365B48F0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8);
    return sub_2365B01B8();
  }
}

void *ActivatedMessageSessionTransport.messageSessionTemplate.getter()
{
  void *v0;
  id v1;

  v0 = (void *)sub_23651332C();
  v1 = v0;
  return v0;
}

uint64_t ActivatedMessageSessionTransport.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_2365131A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v9;
  __int128 v10;

  v5 = *(_QWORD *)(v4 + 32);
  if ((*(_BYTE *)(*(_QWORD *)(v4 + 40) + *(int *)(v5 + 48)) & 1) != 0)
  {
    v6 = type metadata accessor for ActivatedMessageSessionTransport.Failure(0, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), a4);
    MEMORY[0x23B7F5164](&unk_2365BF3A0, v6);
    swift_allocError();
    *v7 = xmmword_2365B4910;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
  else
  {
    v9 = swift_task_alloc();
    *(_QWORD *)(v4 + 48) = v9;
    *(_QWORD *)v9 = v4;
    *(_QWORD *)(v9 + 8) = sub_236478150;
    v10 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v9 + 184) = *(_OWORD *)(v4 + 32);
    *(_OWORD *)(v9 + 168) = v10;
    return swift_task_switch();
  }
}

void *sub_236513284()
{
  void *v0;
  id v1;

  v0 = (void *)sub_23651332C();
  v1 = v0;
  return v0;
}

uint64_t sub_2365132AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_236477420;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

id sub_236513320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_236513334(v4, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
}

uint64_t sub_23651332C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

id sub_236513334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_BYTE *)(a1 + *(int *)(type metadata accessor for ActivatedMessageSessionTransport(0, a2, a3, a4) + 48)) = 1;
  return objc_msgSend(*(id *)(a1 + 8), sel_invalidate);
}

uint64_t type metadata accessor for ActivatedMessageSessionTransport.Failure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivatedMessageSessionTransport.Failure);
}

void sub_23651337C()
{
  JUMPOUT(0x23B7F5164);
}

uint64_t sub_23651338C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x23B7F5164](&protocol conformance descriptor for MessageSessionTransport<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_2365133B8()
{
  unint64_t v0;

  sub_23646AA94();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

char *sub_236513448(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  _OWORD *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *__dst;
  unsigned int (*v70)(_QWORD, _QWORD, _QWORD);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v8 = a2 + 4;
    v9 = a2[4];
    v11 = a2[1];
    v10 = a2[2];
    *((_QWORD *)a1 + 1) = v11;
    *((_QWORD *)a1 + 2) = v10;
    *((_QWORD *)a1 + 3) = a2[3];
    v12 = v5;
    v13 = v11;
    swift_bridgeObjectRetain();
    if (v9)
    {
      v14 = a2[5];
      *((_QWORD *)a1 + 4) = v9;
      *((_QWORD *)a1 + 5) = v14;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *v8;
    }
    v15 = a2[6];
    if (v15)
    {
      v16 = a2[7];
      *((_QWORD *)a1 + 6) = v15;
      *((_QWORD *)a1 + 7) = v16;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    }
    v17 = *(int *)(a3 + 52);
    v18 = &a1[v17];
    v19 = (char **)((char *)a2 + v17);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v21 + 48);
    if (v22(v19, 1, v20))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v70 = v22;
      v71 = v20;
      v72 = v21;
      v24 = v19[1];
      *(_QWORD *)v18 = *v19;
      *((_QWORD *)v18 + 1) = v24;
      v18[16] = *((_BYTE *)v19 + 16);
      v25 = *(int *)(v20 + 36);
      __dst = &v18[v25];
      v26 = (char *)v19 + v25;
      v27 = sub_2365AFE1C();
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      if (v29(v26, 1, v27))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
      }
      v20 = v71;
      v31 = *(int *)(v71 + 40);
      v32 = &v18[v31];
      v33 = (char *)v19 + v31;
      v34 = sub_2365AFE4C();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v37 = *(int *)(v71 + 44);
      v38 = &v18[v37];
      v39 = (char *)v19 + v37;
      v40 = sub_2365AFE88();
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      v22 = v70;
      v21 = v72;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v18, 0, 1, v71);
    }
    v43 = *(int *)(a3 + 56);
    v44 = &a1[v43];
    v45 = (char **)((char *)a2 + v43);
    if (v22(v45, 1, v20))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      v73 = v21;
      v47 = v45[1];
      *(_QWORD *)v44 = *v45;
      *((_QWORD *)v44 + 1) = v47;
      v44[16] = *((_BYTE *)v45 + 16);
      v48 = v20;
      v49 = *(int *)(v20 + 36);
      v50 = &v44[v49];
      v51 = (char *)v45 + v49;
      v52 = sub_2365AFE1C();
      v53 = *(_QWORD *)(v52 - 8);
      v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
      swift_bridgeObjectRetain();
      if (v54(v51, 1, v52))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      v56 = *(int *)(v48 + 40);
      v57 = &v44[v56];
      v58 = (char *)v45 + v56;
      v59 = sub_2365AFE4C();
      v60 = *(_QWORD *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      v62 = *(int *)(v48 + 44);
      v63 = &v44[v62];
      v64 = (char *)v45 + v62;
      v65 = sub_2365AFE88();
      v66 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
      {
        v67 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v44, 0, 1, v48);
    }
  }
  return a1;
}

uint64_t sub_236513978(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  unsigned int (*v6)(uint64_t, uint64_t, int *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    swift_release();
  if (*(_QWORD *)(a1 + 48))
    swift_release();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v7 = v4 + v5[9];
    v8 = sub_2365AFE1C();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v10 = v4 + v5[10];
    v11 = sub_2365AFE4C();
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    v13 = v4 + v5[11];
    v14 = sub_2365AFE88();
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  v16 = a1 + *(int *)(a2 + 56);
  result = ((uint64_t (*)(uint64_t, uint64_t, int *))v6)(v16, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v18 = v16 + v5[9];
    v19 = sub_2365AFE1C();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v16 + v5[10];
    v22 = sub_2365AFE4C();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    v24 = v16 + v5[11];
    v25 = sub_2365AFE88();
    v26 = *(_QWORD *)(v25 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  return result;
}

_QWORD *sub_236513BDC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int *v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *__dst;
  unsigned int (*v68)(_QWORD, _QWORD, _QWORD);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  v10 = (_OWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  v11 = v6;
  v12 = v7;
  swift_bridgeObjectRetain();
  if (v9)
  {
    v13 = *(_QWORD *)(a2 + 40);
    a1[4] = v9;
    a1[5] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v10;
  }
  v14 = *(_QWORD *)(a2 + 48);
  if (v14)
  {
    v15 = *(_QWORD *)(a2 + 56);
    a1[6] = v14;
    a1[7] = v15;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  }
  v16 = *(int *)(a3 + 52);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v20 + 48);
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v68 = v21;
    v69 = a3;
    v70 = v20;
    v23 = v18[1];
    *v17 = *v18;
    v17[1] = v23;
    *((_BYTE *)v17 + 16) = *((_BYTE *)v18 + 16);
    v24 = v19[9];
    __dst = (char *)v17 + v24;
    v25 = (char *)v18 + v24;
    v26 = sub_2365AFE1C();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    if (v28(v25, 1, v26))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    v30 = v19[10];
    v31 = (char *)v17 + v30;
    v32 = (char *)v18 + v30;
    v33 = sub_2365AFE4C();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v21 = v68;
    v36 = v19[11];
    v37 = (char *)v17 + v36;
    v38 = (char *)v18 + v36;
    v39 = sub_2365AFE88();
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    a3 = v69;
    v20 = v70;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v70 + 56))(v17, 0, 1, v19);
  }
  v42 = *(int *)(a3 + 56);
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)(a2 + v42);
  if (v21(v44, 1, v19))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v71 = v20;
    v46 = v44[1];
    *v43 = *v44;
    v43[1] = v46;
    *((_BYTE *)v43 + 16) = *((_BYTE *)v44 + 16);
    v47 = v19[9];
    v48 = (char *)v43 + v47;
    v49 = (char *)v44 + v47;
    v50 = sub_2365AFE1C();
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain();
    if (v52(v49, 1, v50))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    v54 = v19[10];
    v55 = (char *)v43 + v54;
    v56 = (char *)v44 + v54;
    v57 = sub_2365AFE4C();
    v58 = *(_QWORD *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    v60 = v19[11];
    v61 = (char *)v43 + v60;
    v62 = (char *)v44 + v60;
    v63 = sub_2365AFE88();
    v64 = *(_QWORD *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      v65 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v71 + 56))(v43, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_2365140D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, int *);
  int v24;
  int v25;
  uint64_t v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  size_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void *, uint64_t, uint64_t);
  int v60;
  size_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(void *, uint64_t, uint64_t);
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  void *v78;
  const void *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(const void *, uint64_t, uint64_t);
  uint64_t v83;
  size_t v84;
  void *v85;
  uint64_t v86;
  void *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(void *, uint64_t, uint64_t);
  int v92;
  int v93;
  uint64_t v94;
  void *v95;
  const void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  const void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(void *, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (*v121)(void *, uint64_t, uint64_t);
  int v122;
  int v123;
  void *v124;
  void *v125;
  void *__dst;
  uint64_t (*v127)(uint64_t, uint64_t, int *);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v12)
    {
      v13 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v12;
      *(_QWORD *)(a1 + 40) = v13;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v12)
  {
    v14 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 40) = v14;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_8:
  v15 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v15)
    {
      v16 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v15;
      *(_QWORD *)(a1 + 56) = v16;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v15)
  {
    v17 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v15;
    *(_QWORD *)(a1 + 56) = v17;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_15:
  v18 = *(int *)(a3 + 52);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v22 = *((_QWORD *)v21 - 1);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (v25)
    {
      sub_236465998(v19, &qword_2563E4DE0);
      goto LABEL_21;
    }
    v127 = v23;
    v129 = a3;
    v131 = v22;
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
    v33 = v21[9];
    v34 = (void *)(v19 + v33);
    v35 = (void *)(v20 + v33);
    v36 = sub_2365AFE1C();
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
    v124 = v34;
    LODWORD(v34) = v38(v34, 1, v36);
    v39 = v38(v35, 1, v36);
    if ((_DWORD)v34)
    {
      if (v39)
      {
        v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v41 = v124;
LABEL_35:
        memcpy(v41, v35, v40);
        goto LABEL_38;
      }
      (*(void (**)(void *, void *, uint64_t))(v37 + 16))(v124, v35, v36);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v124, 0, 1, v36);
    }
    else
    {
      if (v39)
      {
        (*(void (**)(void *, uint64_t))(v37 + 8))(v124, v36);
        v40 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v41 = v124;
        goto LABEL_35;
      }
      (*(void (**)(void *, void *, uint64_t))(v37 + 24))(v124, v35, v36);
    }
LABEL_38:
    v54 = v21[10];
    v55 = (void *)(v19 + v54);
    v56 = (void *)(v20 + v54);
    v57 = sub_2365AFE4C();
    v58 = *(_QWORD *)(v57 - 8);
    v59 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
    v125 = v55;
    LODWORD(v55) = v59(v55, 1, v57);
    v60 = v59(v56, 1, v57);
    if ((_DWORD)v55)
    {
      if (v60)
      {
        v61 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
        v62 = v125;
LABEL_43:
        memcpy(v62, v56, v61);
        goto LABEL_46;
      }
      (*(void (**)(void *, void *, uint64_t))(v58 + 16))(v125, v56, v57);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v125, 0, 1, v57);
    }
    else
    {
      if (v60)
      {
        (*(void (**)(void *, uint64_t))(v58 + 8))(v125, v57);
        v61 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
        v62 = v125;
        goto LABEL_43;
      }
      (*(void (**)(void *, void *, uint64_t))(v58 + 24))(v125, v56, v57);
    }
LABEL_46:
    v23 = v127;
    v63 = v21[11];
    v64 = (void *)(v19 + v63);
    v65 = (void *)(v20 + v63);
    v66 = sub_2365AFE88();
    v67 = *(_QWORD *)(v66 - 8);
    v68 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v67 + 48);
    v69 = v68(v64, 1, v66);
    v70 = v68(v65, 1, v66);
    if (v69)
    {
      a3 = v129;
      if (!v70)
      {
        (*(void (**)(void *, void *, uint64_t))(v67 + 16))(v64, v65, v66);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
LABEL_52:
        v22 = v131;
        goto LABEL_53;
      }
    }
    else
    {
      a3 = v129;
      if (!v70)
      {
        (*(void (**)(void *, void *, uint64_t))(v67 + 24))(v64, v65, v66);
        goto LABEL_52;
      }
      (*(void (**)(void *, uint64_t))(v67 + 8))(v64, v66);
    }
    v71 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_52;
  }
  if (v25)
  {
LABEL_21:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v19, (const void *)v20, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_53;
  }
  v128 = a3;
  v130 = v22;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  v26 = v21[9];
  __dst = (void *)(v19 + v26);
  v27 = (const void *)(v20 + v26);
  v28 = sub_2365AFE1C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(__dst, v27, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
  }
  v42 = v21[10];
  v43 = (void *)(v19 + v42);
  v44 = (const void *)(v20 + v42);
  v45 = sub_2365AFE4C();
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(v43, v44, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  a3 = v128;
  v48 = v21[11];
  v49 = (void *)(v19 + v48);
  v50 = (const void *)(v20 + v48);
  v51 = sub_2365AFE88();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v52 + 16))(v49, v50, v51);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  v22 = v130;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v130 + 56))(v19, 0, 1, v21);
LABEL_53:
  v72 = *(int *)(a3 + 56);
  v73 = a1 + v72;
  v74 = a2 + v72;
  v75 = v23(a1 + v72, 1, v21);
  v76 = v23(v74, 1, v21);
  if (!v75)
  {
    if (v76)
    {
      sub_236465998(v73, &qword_2563E4DE0);
      goto LABEL_59;
    }
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *(_QWORD *)(v73 + 8) = *(_QWORD *)(v74 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v73 + 16) = *(_BYTE *)(v74 + 16);
    v86 = v21[9];
    v87 = (void *)(v73 + v86);
    v88 = (void *)(v74 + v86);
    v89 = sub_2365AFE1C();
    v90 = *(_QWORD *)(v89 - 8);
    v91 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v90 + 48);
    v92 = v91(v87, 1, v89);
    v93 = v91(v88, 1, v89);
    if (v92)
    {
      if (!v93)
      {
        (*(void (**)(void *, void *, uint64_t))(v90 + 16))(v87, v88, v89);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
        goto LABEL_76;
      }
    }
    else
    {
      if (!v93)
      {
        (*(void (**)(void *, void *, uint64_t))(v90 + 24))(v87, v88, v89);
LABEL_76:
        v108 = v21[10];
        v109 = (void *)(v73 + v108);
        v110 = (void *)(v74 + v108);
        v111 = sub_2365AFE4C();
        v112 = *(_QWORD *)(v111 - 8);
        v113 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v112 + 48);
        v114 = v113(v109, 1, v111);
        v115 = v113(v110, 1, v111);
        if (v114)
        {
          if (!v115)
          {
            (*(void (**)(void *, void *, uint64_t))(v112 + 16))(v109, v110, v111);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
LABEL_82:
            v117 = v21[11];
            v118 = (void *)(v73 + v117);
            v74 += v117;
            v119 = sub_2365AFE88();
            v120 = *(_QWORD *)(v119 - 8);
            v121 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v120 + 48);
            v122 = v121(v118, 1, v119);
            v123 = v121((void *)v74, 1, v119);
            if (v122)
            {
              if (!v123)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v120 + 16))(v118, v74, v119);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v118, 0, 1, v119);
                return a1;
              }
            }
            else
            {
              if (!v123)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v120 + 24))(v118, v74, v119);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v120 + 8))(v118, v119);
            }
            v84 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68) - 8) + 64);
            v85 = v118;
            goto LABEL_60;
          }
        }
        else
        {
          if (!v115)
          {
            (*(void (**)(void *, void *, uint64_t))(v112 + 24))(v109, v110, v111);
            goto LABEL_82;
          }
          (*(void (**)(void *, uint64_t))(v112 + 8))(v109, v111);
        }
        v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        goto LABEL_82;
      }
      (*(void (**)(void *, uint64_t))(v90 + 8))(v87, v89);
    }
    v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    goto LABEL_76;
  }
  if (v76)
  {
LABEL_59:
    v84 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8) - 8) + 64);
    v85 = (void *)v73;
LABEL_60:
    memcpy(v85, (const void *)v74, v84);
    return a1;
  }
  v132 = v22;
  *(_QWORD *)v73 = *(_QWORD *)v74;
  *(_QWORD *)(v73 + 8) = *(_QWORD *)(v74 + 8);
  *(_BYTE *)(v73 + 16) = *(_BYTE *)(v74 + 16);
  v77 = v21[9];
  v78 = (void *)(v73 + v77);
  v79 = (const void *)(v74 + v77);
  v80 = sub_2365AFE1C();
  v81 = *(_QWORD *)(v80 - 8);
  v82 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v81 + 48);
  swift_bridgeObjectRetain();
  if (v82(v79, 1, v80))
  {
    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v81 + 16))(v78, v79, v80);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  v94 = v21[10];
  v95 = (void *)(v73 + v94);
  v96 = (const void *)(v74 + v94);
  v97 = sub_2365AFE4C();
  v98 = *(_QWORD *)(v97 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
  {
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v98 + 16))(v95, v96, v97);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
  }
  v100 = v21[11];
  v101 = (void *)(v73 + v100);
  v102 = (const void *)(v74 + v100);
  v103 = sub_2365AFE88();
  v104 = *(_QWORD *)(v103 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
  {
    v105 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v104 + 16))(v101, v102, v103);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v132 + 56))(v73, 0, 1, v21);
  return a1;
}

uint64_t sub_236514C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int *v14;
  uint64_t v15;
  unsigned int (*v16)(_BYTE *, uint64_t, int *);
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;

  v3 = a3;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  v9 = *(_QWORD *)(a2 + 48);
  if (v9)
  {
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  v11 = *(int *)(a3 + 52);
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v59 = v3;
    v60 = v15;
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v12[16] = v13[16];
    v18 = v14[9];
    v19 = &v12[v18];
    v20 = &v13[v18];
    v21 = sub_2365AFE1C();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = v14[10];
    v25 = &v12[v24];
    v26 = &v13[v24];
    v27 = sub_2365AFE4C();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v15 = v60;
    v30 = v14[11];
    v31 = &v12[v30];
    v32 = &v13[v30];
    v33 = sub_2365AFE88();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v3 = v59;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v60 + 56))(v12, 0, 1, v14);
  }
  v36 = *(int *)(v3 + 56);
  v37 = (_BYTE *)(a1 + v36);
  v38 = (_BYTE *)(a2 + v36);
  if (v16(v38, 1, v14))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    v40 = v14[9];
    v41 = &v37[v40];
    v42 = &v38[v40];
    v43 = sub_2365AFE1C();
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v46 = v14[10];
    v47 = &v37[v46];
    v48 = &v38[v46];
    v49 = sub_2365AFE4C();
    v50 = *(_QWORD *)(v49 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    v52 = v14[11];
    v53 = &v37[v52];
    v54 = &v38[v52];
    v55 = sub_2365AFE88();
    v56 = *(_QWORD *)(v55 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v15 + 56))(v37, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2365150D0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  int *v18;
  uint64_t v19;
  uint64_t (*v20)(_BYTE *, uint64_t, int *);
  int v21;
  int v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_BYTE *, uint64_t, uint64_t);
  int v37;
  size_t v38;
  void *v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_BYTE *, uint64_t, uint64_t);
  int v58;
  size_t v59;
  void *v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(_BYTE *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  int v73;
  int v74;
  uint64_t v75;
  void *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  size_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  void *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  _BYTE *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t (*v111)(void *, uint64_t, uint64_t);
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(void *, uint64_t, uint64_t);
  int v120;
  int v121;
  void *v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t (*v127)(_BYTE *, uint64_t, int *);
  uint64_t (*v128)(_BYTE *, uint64_t, int *);

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v9)
    {
      v10 = a2[5];
      *(_QWORD *)(a1 + 32) = v9;
      *(_QWORD *)(a1 + 40) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    v11 = a2[5];
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_8:
  v12 = a2[6];
  if (*(_QWORD *)(a1 + 48))
  {
    if (v12)
    {
      v13 = a2[7];
      *(_QWORD *)(a1 + 48) = v12;
      *(_QWORD *)(a1 + 56) = v13;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    v14 = a2[7];
    *(_QWORD *)(a1 + 48) = v12;
    *(_QWORD *)(a1 + 56) = v14;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_15:
  v15 = *(int *)(a3 + 52);
  v16 = (_BYTE *)(a1 + v15);
  v17 = (char *)a2 + v15;
  v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v19 = *((_QWORD *)v18 - 1);
  v20 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_236465998((uint64_t)v16, &qword_2563E4DE0);
      goto LABEL_21;
    }
    v126 = a3;
    v128 = v20;
    v124 = v19;
    v30 = *((_QWORD *)v17 + 1);
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *((_QWORD *)v16 + 1) = v30;
    swift_bridgeObjectRelease();
    v16[16] = v17[16];
    v31 = v18[9];
    v32 = &v16[v31];
    v33 = &v17[v31];
    v34 = sub_2365AFE1C();
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48);
    v122 = v32;
    LODWORD(v32) = v36(v32, 1, v34);
    v37 = v36(v33, 1, v34);
    if ((_DWORD)v32)
    {
      if (v37)
      {
        v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v39 = v122;
LABEL_35:
        memcpy(v39, v33, v38);
        goto LABEL_38;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v35 + 32))(v122, v33, v34);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v122, 0, 1, v34);
    }
    else
    {
      if (v37)
      {
        (*(void (**)(void *, uint64_t))(v35 + 8))(v122, v34);
        v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v39 = v122;
        goto LABEL_35;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v35 + 40))(v122, v33, v34);
    }
LABEL_38:
    v52 = v18[10];
    v53 = &v16[v52];
    v54 = &v17[v52];
    v55 = sub_2365AFE4C();
    v56 = *(_QWORD *)(v55 - 8);
    v57 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v56 + 48);
    v123 = v53;
    LODWORD(v53) = v57(v53, 1, v55);
    v58 = v57(v54, 1, v55);
    if ((_DWORD)v53)
    {
      if (v58)
      {
        v59 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
        v60 = v123;
LABEL_43:
        memcpy(v60, v54, v59);
        goto LABEL_46;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v56 + 32))(v123, v54, v55);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v123, 0, 1, v55);
    }
    else
    {
      if (v58)
      {
        (*(void (**)(void *, uint64_t))(v56 + 8))(v123, v55);
        v59 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
        v60 = v123;
        goto LABEL_43;
      }
      (*(void (**)(void *, _BYTE *, uint64_t))(v56 + 40))(v123, v54, v55);
    }
LABEL_46:
    v19 = v124;
    v61 = v18[11];
    v62 = &v16[v61];
    v63 = &v17[v61];
    v64 = sub_2365AFE88();
    v65 = *(_QWORD *)(v64 - 8);
    v66 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v65 + 48);
    v67 = v66(v62, 1, v64);
    v68 = v66(v63, 1, v64);
    if (v67)
    {
      v20 = v128;
      if (!v68)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 32))(v62, v63, v64);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_52:
        a3 = v126;
        goto LABEL_53;
      }
    }
    else
    {
      v20 = v128;
      if (!v68)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 40))(v62, v63, v64);
        goto LABEL_52;
      }
      (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v62, v64);
    }
    v69 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_52;
  }
  if (v22)
  {
LABEL_21:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_53;
  }
  v125 = a3;
  v127 = v20;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  v23 = v18[9];
  v24 = &v16[v23];
  v25 = &v17[v23];
  v26 = sub_2365AFE1C();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v40 = v18[10];
  v41 = &v16[v40];
  v42 = &v17[v40];
  v43 = sub_2365AFE4C();
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  v20 = v127;
  v46 = v18[11];
  v47 = &v16[v46];
  v48 = &v17[v46];
  v49 = sub_2365AFE88();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  a3 = v125;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_53:
  v70 = *(int *)(a3 + 56);
  v71 = a1 + v70;
  v72 = (char *)a2 + v70;
  v73 = v20((_BYTE *)(a1 + v70), 1, v18);
  v74 = v20(v72, 1, v18);
  if (!v73)
  {
    if (v74)
    {
      sub_236465998(v71, &qword_2563E4DE0);
      goto LABEL_59;
    }
    v83 = *((_QWORD *)v72 + 1);
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = v83;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v71 + 16) = v72[16];
    v84 = v18[9];
    v85 = (void *)(v71 + v84);
    v86 = &v72[v84];
    v87 = sub_2365AFE1C();
    v88 = *(_QWORD *)(v87 - 8);
    v89 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v88 + 48);
    v90 = v89(v85, 1, v87);
    v91 = v89(v86, 1, v87);
    if (v90)
    {
      if (!v91)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v88 + 32))(v85, v86, v87);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
        goto LABEL_76;
      }
    }
    else
    {
      if (!v91)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v88 + 40))(v85, v86, v87);
LABEL_76:
        v106 = v18[10];
        v107 = (void *)(v71 + v106);
        v108 = &v72[v106];
        v109 = sub_2365AFE4C();
        v110 = *(_QWORD *)(v109 - 8);
        v111 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v110 + 48);
        v112 = v111(v107, 1, v109);
        v113 = v111(v108, 1, v109);
        if (v112)
        {
          if (!v113)
          {
            (*(void (**)(void *, _BYTE *, uint64_t))(v110 + 32))(v107, v108, v109);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
LABEL_82:
            v115 = v18[11];
            v116 = (void *)(v71 + v115);
            v72 += v115;
            v117 = sub_2365AFE88();
            v118 = *(_QWORD *)(v117 - 8);
            v119 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v118 + 48);
            v120 = v119(v116, 1, v117);
            v121 = v119(v72, 1, v117);
            if (v120)
            {
              if (!v121)
              {
                (*(void (**)(void *, _BYTE *, uint64_t))(v118 + 32))(v116, v72, v117);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v116, 0, 1, v117);
                return a1;
              }
            }
            else
            {
              if (!v121)
              {
                (*(void (**)(void *, _BYTE *, uint64_t))(v118 + 40))(v116, v72, v117);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v118 + 8))(v116, v117);
            }
            v81 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68) - 8) + 64);
            v82 = v116;
            goto LABEL_60;
          }
        }
        else
        {
          if (!v113)
          {
            (*(void (**)(void *, _BYTE *, uint64_t))(v110 + 40))(v107, v108, v109);
            goto LABEL_82;
          }
          (*(void (**)(void *, uint64_t))(v110 + 8))(v107, v109);
        }
        v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
        goto LABEL_82;
      }
      (*(void (**)(void *, uint64_t))(v88 + 8))(v85, v87);
    }
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    goto LABEL_76;
  }
  if (v74)
  {
LABEL_59:
    v81 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8) - 8) + 64);
    v82 = (void *)v71;
LABEL_60:
    memcpy(v82, v72, v81);
    return a1;
  }
  *(_OWORD *)v71 = *(_OWORD *)v72;
  *(_BYTE *)(v71 + 16) = v72[16];
  v75 = v18[9];
  v76 = (void *)(v71 + v75);
  v77 = &v72[v75];
  v78 = sub_2365AFE1C();
  v79 = *(_QWORD *)(v78 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
  {
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v79 + 32))(v76, v77, v78);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  v92 = v18[10];
  v93 = (void *)(v71 + v92);
  v94 = &v72[v92];
  v95 = sub_2365AFE4C();
  v96 = *(_QWORD *)(v95 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
  {
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v96 + 32))(v93, v94, v95);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
  }
  v98 = v18[11];
  v99 = (void *)(v71 + v98);
  v100 = &v72[v98];
  v101 = sub_2365AFE88();
  v102 = *(_QWORD *)(v101 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
  {
    v103 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v102 + 32))(v99, v100, v101);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v19 + 56))(v71, 0, 1, v18);
  return a1;
}

uint64_t sub_236515B90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_236515B9C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 52)], a2, v8);
  }
}

uint64_t sub_236515C1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_236515C28(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 52)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_236515CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  result = type metadata accessor for MessageSessionTransport(319, v4, v5, a4);
  if (v8 <= 0x3F)
  {
    result = type metadata accessor for MessagePacker(319, v4, v5, v7);
    if (v10 <= 0x3F)
    {
      result = type metadata accessor for MessageUnpacker(319, v4, v5, v9);
      if (v11 <= 0x3F)
      {
        result = sub_2365AF9FC();
        if (v12 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

char *sub_236515D88(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  _QWORD *v6;
  _OWORD *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  char *__dst;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v146;
  uint64_t v147;
  unsigned int (*v148)(char *, uint64_t, uint64_t);
  char *v149;
  uint64_t v150;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v6 = a2;
    v7 = a2 + 4;
    v8 = a2[4];
    v10 = a2[1];
    v9 = a2[2];
    *((_QWORD *)a1 + 1) = v10;
    *((_QWORD *)a1 + 2) = v9;
    *((_QWORD *)a1 + 3) = a2[3];
    v11 = v5;
    v12 = v10;
    swift_bridgeObjectRetain();
    if (v8)
    {
      v14 = v6[5];
      *((_QWORD *)a1 + 4) = v8;
      *((_QWORD *)a1 + 5) = v14;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *v7;
    }
    v15 = v6[6];
    v16 = a3;
    if (v15)
    {
      v17 = v6[7];
      *((_QWORD *)a1 + 6) = v15;
      *((_QWORD *)a1 + 7) = v17;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)v6 + 3);
    }
    v18 = *(_QWORD *)(a3 + 16);
    v146 = *(_QWORD *)(a3 + 24);
    v19 = type metadata accessor for MessageSessionTransport(0, v18, v146, v13);
    v20 = *(int *)(v19 + 52);
    v21 = &a1[v20];
    v22 = (_QWORD *)((char *)v6 + v20);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
    v143 = *(_QWORD *)(v23 - 8);
    v148 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48);
    v144 = v6;
    v150 = v23;
    v142 = v18;
    if (v148((char *)v22, 1, v23))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      v140 = v19;
      v25 = v22[1];
      *(_QWORD *)v21 = *v22;
      *((_QWORD *)v21 + 1) = v25;
      v21[16] = *((_BYTE *)v22 + 16);
      v26 = *(int *)(v23 + 36);
      v27 = &v21[v26];
      v28 = (char *)v22 + v26;
      v29 = sub_2365AFE1C();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      if (v31(v28, 1, v29))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v33 = *(int *)(v150 + 40);
      v34 = &v21[v33];
      v35 = (char *)v22 + v33;
      v36 = sub_2365AFE4C();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v39 = *(int *)(v150 + 44);
      v40 = &v21[v39];
      v41 = (char *)v22 + v39;
      v42 = sub_2365AFE88();
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      v19 = v140;
      v18 = v142;
      v23 = v150;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v21, 0, 1, v150);
      v6 = v144;
    }
    v45 = *(int *)(v19 + 56);
    v46 = &a1[v45];
    v47 = (_QWORD *)((char *)v6 + v45);
    if (v148((char *)v6 + v45, 1, v23))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v50 = v47[1];
      *(_QWORD *)v46 = *v47;
      *((_QWORD *)v46 + 1) = v50;
      v46[16] = *((_BYTE *)v47 + 16);
      v51 = *(int *)(v23 + 36);
      v52 = &v46[v51];
      v53 = (char *)v47 + v51;
      v54 = sub_2365AFE1C();
      v55 = *(_QWORD *)(v54 - 8);
      v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      swift_bridgeObjectRetain();
      if (v56(v53, 1, v54))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      v58 = *(int *)(v150 + 40);
      v59 = &v46[v58];
      v60 = (char *)v47 + v58;
      v61 = sub_2365AFE4C();
      v62 = *(_QWORD *)(v61 - 8);
      v6 = v144;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
      {
        v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      v64 = *(int *)(v150 + 44);
      v65 = &v46[v64];
      v66 = (char *)v47 + v64;
      v67 = sub_2365AFE88();
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        v69 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      v18 = v142;
      v23 = v150;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v46, 0, 1, v150);
    }
    v70 = *(int *)(a3 + 36);
    v71 = &a1[v70];
    v72 = (char *)v6 + v70;
    *(_QWORD *)&a1[v70] = *(_QWORD *)((char *)v6 + v70);
    v141 = type metadata accessor for MessagePacker(0, v18, v146, v49);
    v73 = *(int *)(v141 + 36);
    v74 = &v71[v73];
    v75 = &v72[v73];
    swift_retain();
    if (v148(v75, 1, v23))
    {
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      v78 = v23;
    }
    else
    {
      v79 = *((_QWORD *)v75 + 1);
      *(_QWORD *)v74 = *(_QWORD *)v75;
      *((_QWORD *)v74 + 1) = v79;
      v74[16] = v75[16];
      v80 = *(int *)(v23 + 36);
      __dst = &v74[v80];
      v81 = &v75[v80];
      v82 = sub_2365AFE1C();
      v83 = *(_QWORD *)(v82 - 8);
      v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
      swift_bridgeObjectRetain();
      if (v84(v81, 1, v82))
      {
        v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(__dst, v81, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v83 + 16))(__dst, v81, v82);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(__dst, 0, 1, v82);
      }
      v86 = *(int *)(v150 + 40);
      v87 = &v74[v86];
      v88 = &v75[v86];
      v89 = sub_2365AFE4C();
      v90 = *(_QWORD *)(v89 - 8);
      v16 = a3;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
      {
        v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
      }
      v92 = *(int *)(v150 + 44);
      v93 = &v74[v92];
      v94 = &v75[v92];
      v95 = sub_2365AFE88();
      v96 = *(_QWORD *)(v95 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
      {
        v97 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v93, v94, v95);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
      }
      v18 = v142;
      v78 = v150;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v74, 0, 1, v150);
      v6 = v144;
    }
    v98 = *(int *)(v141 + 40);
    v99 = &v71[v98];
    v100 = &v72[v98];
    v101 = *((_QWORD *)v100 + 1);
    *(_QWORD *)v99 = *(_QWORD *)v100;
    *((_QWORD *)v99 + 1) = v101;
    v102 = *(int *)(v16 + 40);
    v103 = &a1[v102];
    v104 = (char *)v6 + v102;
    *(_QWORD *)&a1[v102] = *(_QWORD *)((char *)v6 + v102);
    v147 = type metadata accessor for MessageUnpacker(0, v18, v146, v77);
    v105 = *(int *)(v147 + 36);
    v106 = &v103[v105];
    v107 = &v104[v105];
    swift_bridgeObjectRetain();
    swift_retain();
    if (v148(v107, 1, v78))
    {
      v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
      memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      v109 = *((_QWORD *)v107 + 1);
      *(_QWORD *)v106 = *(_QWORD *)v107;
      *((_QWORD *)v106 + 1) = v109;
      v106[16] = v107[16];
      v110 = *(int *)(v78 + 36);
      v149 = &v106[v110];
      v111 = &v107[v110];
      v112 = sub_2365AFE1C();
      v113 = *(_QWORD *)(v112 - 8);
      v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
      swift_bridgeObjectRetain();
      if (v114(v111, 1, v112))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v149, v111, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v149, v111, v112);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v149, 0, 1, v112);
      }
      v116 = *(int *)(v150 + 40);
      v117 = &v106[v116];
      v118 = &v107[v116];
      v119 = sub_2365AFE4C();
      v120 = *(_QWORD *)(v119 - 8);
      v16 = a3;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
      {
        v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v117, v118, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v118, v119);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
      }
      v6 = v144;
      v122 = *(int *)(v150 + 44);
      v123 = &v106[v122];
      v124 = &v107[v122];
      v125 = sub_2365AFE88();
      v126 = *(_QWORD *)(v125 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
      {
        v127 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v123, v124, v125);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v106, 0, 1, v150);
    }
    v128 = *(int *)(v147 + 40);
    v129 = &v103[v128];
    v130 = &v104[v128];
    v131 = *((_QWORD *)v130 + 1);
    *(_QWORD *)v129 = *(_QWORD *)v130;
    *((_QWORD *)v129 + 1) = v131;
    v132 = *(int *)(v16 + 44);
    v133 = v16;
    v134 = &a1[v132];
    v135 = (char *)v6 + v132;
    v136 = sub_2365AF9FC();
    v137 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
    swift_bridgeObjectRetain();
    v137(v134, v135, v136);
    a1[*(int *)(v133 + 48)] = *((_BYTE *)v6 + *(int *)(v133 + 48));
  }
  return a1;
}

uint64_t sub_236516818(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  unsigned int (*v10)(uint64_t, uint64_t, int *);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32))
    swift_release();
  if (*(_QWORD *)(a1 + 48))
    swift_release();
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v7 = type metadata accessor for MessageSessionTransport(0, v6, v5, v4);
  v8 = a1 + *(int *)(v7 + 52);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v9 - 1) + 48);
  v61 = a2;
  if (!v10(v8, 1, v9))
  {
    v11 = v5;
    v12 = v6;
    swift_bridgeObjectRelease();
    v13 = v8 + v9[9];
    v14 = sub_2365AFE1C();
    v15 = *(_QWORD *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    v16 = v8 + v9[10];
    v17 = sub_2365AFE4C();
    v18 = *(_QWORD *)(v17 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v19 = v8 + v9[11];
    v20 = sub_2365AFE88();
    v21 = *(_QWORD *)(v20 - 8);
    v6 = v12;
    v5 = v11;
    a2 = v61;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  }
  v22 = a1 + *(int *)(v7 + 56);
  if (!v10(v22, 1, v9))
  {
    swift_bridgeObjectRelease();
    v23 = v22 + v9[9];
    v24 = sub_2365AFE1C();
    v25 = *(_QWORD *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    v26 = v22 + v9[10];
    v27 = sub_2365AFE4C();
    v28 = *(_QWORD *)(v27 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    v29 = v22 + v9[11];
    v30 = sub_2365AFE88();
    v31 = *(_QWORD *)(v30 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  }
  v32 = a1 + *(int *)(a2 + 36);
  swift_release();
  v33 = v5;
  v35 = v32 + *(int *)(type metadata accessor for MessagePacker(0, v6, v5, v34) + 36);
  if (!v10(v35, 1, v9))
  {
    v60 = v6;
    swift_bridgeObjectRelease();
    v36 = v35 + v9[9];
    v37 = sub_2365AFE1C();
    v38 = *(_QWORD *)(v37 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    v39 = v35 + v9[10];
    v40 = sub_2365AFE4C();
    v41 = *(_QWORD *)(v40 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
    v42 = v35 + v9[11];
    v43 = sub_2365AFE88();
    v44 = *(_QWORD *)(v43 - 8);
    v6 = v60;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v42, v43);
  }
  swift_bridgeObjectRelease();
  v45 = a1 + *(int *)(v61 + 40);
  swift_release();
  v47 = v45 + *(int *)(type metadata accessor for MessageUnpacker(0, v6, v33, v46) + 36);
  if (!v10(v47, 1, v9))
  {
    swift_bridgeObjectRelease();
    v48 = v47 + v9[9];
    v49 = sub_2365AFE1C();
    v50 = *(_QWORD *)(v49 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
    v51 = v47 + v9[10];
    v52 = sub_2365AFE4C();
    v53 = *(_QWORD *)(v52 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
    v54 = v47 + v9[11];
    v55 = sub_2365AFE88();
    v56 = *(_QWORD *)(v55 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
  }
  swift_bridgeObjectRelease();
  v57 = a1 + *(int *)(v61 + 44);
  v58 = sub_2365AF9FC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v57, v58);
}

_QWORD *sub_236516D0C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v4;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unsigned int (*v23)(_QWORD, _QWORD, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  _QWORD *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(char *, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  _QWORD *v138;
  void (*v139)(char *, char *, uint64_t);
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int (*v147)(_QWORD, _QWORD, _QWORD);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;

  v4 = (_QWORD *)a2;
  v6 = *(void **)a2;
  v7 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  v10 = (_OWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 32);
  v11 = v6;
  v12 = v7;
  swift_bridgeObjectRetain();
  if (v9)
  {
    v14 = v4[5];
    a1[4] = v9;
    a1[5] = v14;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v10;
  }
  v15 = v4[6];
  if (v15)
  {
    v16 = v4[7];
    a1[6] = v15;
    a1[7] = v16;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)v4 + 3);
  }
  v17 = *(_QWORD *)(a3 + 16);
  v148 = *(_QWORD *)(a3 + 24);
  v18 = type metadata accessor for MessageSessionTransport(0, v17, v148, v13);
  v19 = *(int *)(v18 + 52);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)v4 + v19);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v145 = *(_QWORD *)(v22 - 8);
  v23 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v145 + 48);
  v146 = a3;
  v147 = v23;
  v152 = v22;
  v144 = v17;
  if (v23(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v150 = v18;
    v25 = v21[1];
    *v20 = *v21;
    v20[1] = v25;
    *((_BYTE *)v20 + 16) = *((_BYTE *)v21 + 16);
    v26 = *(int *)(v22 + 36);
    v27 = (char *)v20 + v26;
    v28 = (char *)v21 + v26;
    v29 = sub_2365AFE1C();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v22 = v152;
    v33 = *(int *)(v152 + 40);
    v34 = (char *)v20 + v33;
    v35 = (char *)v21 + v33;
    v36 = sub_2365AFE4C();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
    v39 = *(int *)(v152 + 44);
    v40 = (char *)v20 + v39;
    v41 = (char *)v21 + v39;
    v42 = sub_2365AFE88();
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    v17 = v144;
    v18 = v150;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v20, 0, 1, v152);
    a3 = v146;
    v23 = v147;
  }
  v45 = *(int *)(v18 + 56);
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)v4 + v45);
  if (v23((char *)v4 + v45, 1, v22))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v50 = v47[1];
    *v46 = *v47;
    v46[1] = v50;
    *((_BYTE *)v46 + 16) = *((_BYTE *)v47 + 16);
    v51 = *(int *)(v22 + 36);
    v52 = (char *)v46 + v51;
    v53 = (char *)v47 + v51;
    v54 = sub_2365AFE1C();
    v55 = *(_QWORD *)(v54 - 8);
    v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
    swift_bridgeObjectRetain();
    if (v56(v53, 1, v54))
    {
      v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    v22 = v152;
    v58 = *(int *)(v152 + 40);
    v59 = (char *)v46 + v58;
    v60 = (char *)v47 + v58;
    v61 = sub_2365AFE4C();
    v62 = *(_QWORD *)(v61 - 8);
    a3 = v146;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
    {
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
    }
    v64 = *(int *)(v152 + 44);
    v65 = (char *)v46 + v64;
    v66 = (char *)v47 + v64;
    v67 = sub_2365AFE88();
    v68 = *(_QWORD *)(v67 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
    v17 = v144;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v46, 0, 1, v152);
    v23 = v147;
  }
  v70 = *(int *)(a3 + 36);
  v151 = a1;
  v71 = (_QWORD *)((char *)a1 + v70);
  v72 = (char *)v4 + v70;
  *v71 = *(_QWORD *)((char *)v4 + v70);
  v143 = type metadata accessor for MessagePacker(0, v17, v148, v49);
  v73 = *(int *)(v143 + 36);
  v74 = (_QWORD *)((char *)v71 + v73);
  v75 = &v72[v73];
  swift_retain();
  if (v23(v75, 1, v22))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
  }
  else
  {
    v141 = v4;
    v78 = *((_QWORD *)v75 + 1);
    *v74 = *(_QWORD *)v75;
    v74[1] = v78;
    *((_BYTE *)v74 + 16) = v75[16];
    v79 = *(int *)(v22 + 36);
    v80 = (char *)v74 + v79;
    v81 = &v75[v79];
    v82 = sub_2365AFE1C();
    v83 = *(_QWORD *)(v82 - 8);
    v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
    swift_bridgeObjectRetain();
    if (v84(v81, 1, v82))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    v86 = *(int *)(v152 + 40);
    v87 = (char *)v74 + v86;
    v88 = &v75[v86];
    v89 = sub_2365AFE4C();
    v90 = *(_QWORD *)(v89 - 8);
    v4 = v141;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
    }
    v92 = *(int *)(v152 + 44);
    v93 = (char *)v74 + v92;
    v94 = &v75[v92];
    v95 = sub_2365AFE88();
    v96 = *(_QWORD *)(v95 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
    {
      v97 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v93, v94, v95);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
    }
    v17 = v144;
    v22 = v152;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v74, 0, 1, v152);
    a3 = v146;
  }
  v98 = *(int *)(v143 + 40);
  v99 = (_QWORD *)((char *)v71 + v98);
  v100 = &v72[v98];
  v101 = *((_QWORD *)v100 + 1);
  *v99 = *(_QWORD *)v100;
  v99[1] = v101;
  v102 = *(int *)(a3 + 40);
  v103 = (char *)v151 + v102;
  v104 = (char *)v4 + v102;
  *(_QWORD *)((char *)v151 + v102) = *(_QWORD *)((char *)v4 + v102);
  v105 = type metadata accessor for MessageUnpacker(0, v17, v148, v77);
  v106 = *(int *)(v105 + 36);
  v107 = &v103[v106];
  v108 = &v104[v106];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v147(v108, 1, v22))
  {
    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
  }
  else
  {
    v149 = v105;
    v142 = v4;
    v110 = *((_QWORD *)v108 + 1);
    *(_QWORD *)v107 = *(_QWORD *)v108;
    *((_QWORD *)v107 + 1) = v110;
    v107[16] = v108[16];
    v111 = *(int *)(v22 + 36);
    v112 = &v107[v111];
    v113 = &v108[v111];
    v114 = sub_2365AFE1C();
    v115 = *(_QWORD *)(v114 - 8);
    v116 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48);
    swift_bridgeObjectRetain();
    if (v116(v113, 1, v114))
    {
      v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, v113, v114);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
    }
    v118 = *(int *)(v152 + 40);
    v119 = &v107[v118];
    v120 = &v108[v118];
    v121 = sub_2365AFE4C();
    v122 = *(_QWORD *)(v121 - 8);
    v4 = v142;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
    {
      v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v119, v120, v121);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
    }
    a3 = v146;
    v124 = *(int *)(v152 + 44);
    v125 = &v107[v124];
    v126 = &v108[v124];
    v127 = sub_2365AFE88();
    v128 = *(_QWORD *)(v127 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127))
    {
      v129 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v125, v126, v127);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
    }
    v105 = v149;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v107, 0, 1, v152);
  }
  v130 = *(int *)(v105 + 40);
  v131 = &v103[v130];
  v132 = &v104[v130];
  v133 = *((_QWORD *)v132 + 1);
  *(_QWORD *)v131 = *(_QWORD *)v132;
  *((_QWORD *)v131 + 1) = v133;
  v134 = *(int *)(a3 + 44);
  v135 = (char *)v151 + v134;
  v136 = (char *)v4 + v134;
  v137 = sub_2365AF9FC();
  v138 = v4;
  v139 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16);
  swift_bridgeObjectRetain();
  v139(v135, v136, v137);
  *((_BYTE *)v151 + *(int *)(a3 + 48)) = *((_BYTE *)v138 + *(int *)(a3 + 48));
  return v151;
}

uint64_t sub_236517754(uint64_t a1, void **a2, uint64_t a3)
{
  void **v4;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t (*v25)(uint64_t, uint64_t, int *);
  int v26;
  int v27;
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(void *, uint64_t, uint64_t);
  int v43;
  int v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(void *, uint64_t, uint64_t);
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(void *, uint64_t, uint64_t);
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int v79;
  int v80;
  uint64_t v81;
  void *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(void *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  void *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t (*v115)(void *, uint64_t, uint64_t);
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(void *, uint64_t, uint64_t);
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  int v135;
  int v136;
  uint64_t v137;
  void *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int (*v142)(char *, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(void *, uint64_t, uint64_t);
  int v151;
  size_t v152;
  void *v153;
  uint64_t v154;
  void *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t (*v171)(void *, uint64_t, uint64_t);
  int v172;
  size_t v173;
  void *v174;
  uint64_t v175;
  void *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t (*v180)(void *, uint64_t, uint64_t);
  int v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  int v194;
  int v195;
  uint64_t v196;
  void *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  unsigned int (*v201)(char *, uint64_t, uint64_t);
  uint64_t v202;
  size_t v203;
  void *v204;
  char *v205;
  uint64_t v206;
  void *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t (*v211)(void *, uint64_t, uint64_t);
  int v212;
  int v213;
  uint64_t v214;
  void *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  void *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v234;
  uint64_t v235;
  void *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t (*v240)(void *, uint64_t, uint64_t);
  int v241;
  int v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t (*v249)(void *, uint64_t, uint64_t);
  int v250;
  int v251;
  void *v252;
  void *v253;
  int *v254;
  int *v255;
  int *v256;
  uint64_t v257;
  int *__src;
  uint64_t v259;
  char *v260;
  void *v261;
  void **v262;
  uint64_t (*v263)(uint64_t, uint64_t, int *);
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  int *v268;

  v4 = a2;
  v6 = *a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *a2;
  v8 = v6;

  v9 = v4[1];
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  *(_QWORD *)(a1 + 16) = v4[2];
  *(_QWORD *)(a1 + 24) = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = v4[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v13)
    {
      v14 = v4[5];
      *(_QWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 40) = v14;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = v4[5];
    *(_QWORD *)(a1 + 32) = v13;
    *(_QWORD *)(a1 + 40) = v15;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v4 + 2);
LABEL_8:
  v16 = v4[6];
  if (*(_QWORD *)(a1 + 48))
  {
    if (v16)
    {
      v17 = v4[7];
      *(_QWORD *)(a1 + 48) = v16;
      *(_QWORD *)(a1 + 56) = v17;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v16)
  {
    v18 = v4[7];
    *(_QWORD *)(a1 + 48) = v16;
    *(_QWORD *)(a1 + 56) = v18;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
LABEL_15:
  v19 = *(_QWORD *)(a3 + 16);
  v266 = *(_QWORD *)(a3 + 24);
  v268 = (int *)a3;
  v20 = type metadata accessor for MessageSessionTransport(0, v19, v266, v12);
  v21 = *(int *)(v20 + 52);
  v22 = a1 + v21;
  v23 = (char *)v4 + v21;
  v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v257 = *((_QWORD *)v24 - 1);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v257 + 48);
  v26 = v25(v22, 1, v24);
  v27 = v25((uint64_t)v23, 1, v24);
  v262 = v4;
  v263 = v25;
  v261 = (void *)v19;
  if (!v26)
  {
    if (v27)
    {
      sub_236465998(v22, &qword_2563E4DE0);
      goto LABEL_21;
    }
    v259 = v20;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v22 + 16) = v23[16];
    v37 = v24[9];
    v38 = (void *)(v22 + v37);
    v39 = &v23[v37];
    v40 = sub_2365AFE1C();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
    v43 = v42(v38, 1, v40);
    v44 = v42(v39, 1, v40);
    if (v43)
    {
      if (!v44)
      {
        (*(void (**)(void *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v44)
      {
        (*(void (**)(void *, char *, uint64_t))(v41 + 24))(v38, v39, v40);
LABEL_36:
        v58 = v24[10];
        v59 = (void *)(v22 + v58);
        v60 = &v23[v58];
        v61 = sub_2365AFE4C();
        v62 = *(_QWORD *)(v61 - 8);
        v63 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v62 + 48);
        v64 = v63(v59, 1, v61);
        v65 = v63(v60, 1, v61);
        if (v64)
        {
          if (!v65)
          {
            (*(void (**)(void *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
            goto LABEL_42;
          }
        }
        else
        {
          if (!v65)
          {
            (*(void (**)(void *, char *, uint64_t))(v62 + 24))(v59, v60, v61);
LABEL_42:
            v67 = v24[11];
            v68 = (void *)(v22 + v67);
            v69 = &v23[v67];
            v70 = sub_2365AFE88();
            v71 = *(_QWORD *)(v70 - 8);
            v72 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v71 + 48);
            v73 = v72(v68, 1, v70);
            v74 = v72(v69, 1, v70);
            v4 = v262;
            if (v73)
            {
              if (!v74)
              {
                (*(void (**)(void *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
LABEL_48:
                v36 = v268;
                v20 = v259;
                v19 = (uint64_t)v261;
                v25 = v263;
                goto LABEL_49;
              }
            }
            else
            {
              if (!v74)
              {
                (*(void (**)(void *, char *, uint64_t))(v71 + 24))(v68, v69, v70);
                goto LABEL_48;
              }
              (*(void (**)(void *, uint64_t))(v71 + 8))(v68, v70);
            }
            v75 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            goto LABEL_48;
          }
          (*(void (**)(void *, uint64_t))(v62 + 8))(v59, v61);
        }
        v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        goto LABEL_42;
      }
      (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
    }
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_36;
  }
  if (v27)
  {
LABEL_21:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v22, v23, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    v36 = v268;
    goto LABEL_49;
  }
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = *((_QWORD *)v23 + 1);
  *(_BYTE *)(v22 + 16) = v23[16];
  v28 = v24[9];
  v29 = (void *)(v22 + v28);
  v30 = &v23[v28];
  v31 = sub_2365AFE1C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  swift_bridgeObjectRetain();
  if (v33(v30, 1, v31))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v45 = v24[10];
  v46 = (void *)(v22 + v45);
  v47 = &v23[v45];
  v48 = sub_2365AFE4C();
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  v4 = v262;
  v51 = v24[11];
  v52 = (void *)(v22 + v51);
  v53 = &v23[v51];
  v54 = sub_2365AFE88();
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
  }
  v25 = v263;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v257 + 56))(v22, 0, 1, v24);
  v36 = v268;
  v19 = (uint64_t)v261;
LABEL_49:
  v76 = *(int *)(v20 + 56);
  v77 = a1 + v76;
  v78 = (char *)v4 + v76;
  v79 = v25(a1 + v76, 1, v24);
  v80 = v25((uint64_t)v78, 1, v24);
  if (!v79)
  {
    if (v80)
    {
      sub_236465998(v77, &qword_2563E4DE0);
      goto LABEL_55;
    }
    *(_QWORD *)v77 = *(_QWORD *)v78;
    *(_QWORD *)(v77 + 8) = *((_QWORD *)v78 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v77 + 16) = v78[16];
    v89 = v24[9];
    v90 = (void *)(v77 + v89);
    v91 = &v78[v89];
    v92 = sub_2365AFE1C();
    v93 = *(_QWORD *)(v92 - 8);
    v94 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v93 + 48);
    v95 = v94(v90, 1, v92);
    v96 = v94(v91, 1, v92);
    if (v95)
    {
      if (!v96)
      {
        (*(void (**)(void *, char *, uint64_t))(v93 + 16))(v90, v91, v92);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
        goto LABEL_70;
      }
    }
    else
    {
      if (!v96)
      {
        (*(void (**)(void *, char *, uint64_t))(v93 + 24))(v90, v91, v92);
LABEL_70:
        v110 = v24[10];
        v111 = (void *)(v77 + v110);
        v112 = &v78[v110];
        v113 = sub_2365AFE4C();
        v114 = *(_QWORD *)(v113 - 8);
        v115 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v114 + 48);
        v116 = v115(v111, 1, v113);
        v117 = v115(v112, 1, v113);
        if (v116)
        {
          v4 = v262;
          if (!v117)
          {
            (*(void (**)(void *, char *, uint64_t))(v114 + 16))(v111, v112, v113);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
            goto LABEL_76;
          }
        }
        else
        {
          v4 = v262;
          if (!v117)
          {
            (*(void (**)(void *, char *, uint64_t))(v114 + 24))(v111, v112, v113);
LABEL_76:
            v119 = v24[11];
            v120 = (void *)(v77 + v119);
            v121 = &v78[v119];
            v122 = sub_2365AFE88();
            v123 = *(_QWORD *)(v122 - 8);
            v124 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v123 + 48);
            v125 = v124(v120, 1, v122);
            v126 = v124(v121, 1, v122);
            if (v125)
            {
              if (!v126)
              {
                (*(void (**)(void *, char *, uint64_t))(v123 + 16))(v120, v121, v122);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
LABEL_82:
                v36 = v268;
                v19 = (uint64_t)v261;
                v25 = v263;
                goto LABEL_83;
              }
            }
            else
            {
              if (!v126)
              {
                (*(void (**)(void *, char *, uint64_t))(v123 + 24))(v120, v121, v122);
                goto LABEL_82;
              }
              (*(void (**)(void *, uint64_t))(v123 + 8))(v120, v122);
            }
            v127 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
            memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
            goto LABEL_82;
          }
          (*(void (**)(void *, uint64_t))(v114 + 8))(v111, v113);
        }
        v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
        goto LABEL_76;
      }
      (*(void (**)(void *, uint64_t))(v93 + 8))(v90, v92);
    }
    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
    goto LABEL_70;
  }
  if (v80)
  {
LABEL_55:
    v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v77, v78, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    goto LABEL_83;
  }
  *(_QWORD *)v77 = *(_QWORD *)v78;
  *(_QWORD *)(v77 + 8) = *((_QWORD *)v78 + 1);
  *(_BYTE *)(v77 + 16) = v78[16];
  v81 = v24[9];
  v82 = (void *)(v77 + v81);
  v83 = &v78[v81];
  v84 = sub_2365AFE1C();
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
  swift_bridgeObjectRetain();
  if (v86(v83, 1, v84))
  {
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
  }
  v97 = v24[10];
  v98 = (void *)(v77 + v97);
  v99 = &v78[v97];
  v100 = sub_2365AFE4C();
  v101 = *(_QWORD *)(v100 - 8);
  v4 = v262;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
  {
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v101 + 16))(v98, v99, v100);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
  }
  v103 = v24[11];
  v104 = (void *)(v77 + v103);
  v105 = &v78[v103];
  v106 = sub_2365AFE88();
  v107 = *(_QWORD *)(v106 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
  {
    v108 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v107 + 16))(v104, v105, v106);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
  }
  v25 = v263;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v257 + 56))(v77, 0, 1, v24);
  v36 = v268;
  v19 = (uint64_t)v261;
LABEL_83:
  v128 = v36[9];
  v129 = a1 + v128;
  v130 = (char *)v4 + v128;
  *(_QWORD *)(a1 + v128) = *(void **)((char *)v4 + v128);
  swift_retain();
  swift_release();
  __src = (int *)type metadata accessor for MessagePacker(0, v19, v266, v131);
  v260 = v130;
  v132 = __src[9];
  v133 = v129 + v132;
  v134 = &v130[v132];
  v135 = v25(v129 + v132, 1, v24);
  v136 = v25((uint64_t)v134, 1, v24);
  if (v135)
  {
    if (!v136)
    {
      *(_QWORD *)v133 = *(_QWORD *)v134;
      *(_QWORD *)(v133 + 8) = *((_QWORD *)v134 + 1);
      *(_BYTE *)(v133 + 16) = v134[16];
      v254 = v24;
      v137 = v24[9];
      v138 = (void *)(v133 + v137);
      v139 = &v134[v137];
      v140 = sub_2365AFE1C();
      v141 = *(_QWORD *)(v140 - 8);
      v142 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48);
      swift_bridgeObjectRetain();
      if (v142(v139, 1, v140))
      {
        v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v141 + 16))(v138, v139, v140);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
      }
      v24 = v254;
      v154 = v254[10];
      v155 = (void *)(v133 + v154);
      v156 = &v134[v154];
      v157 = sub_2365AFE4C();
      v158 = *(_QWORD *)(v157 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
      {
        v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v158 + 16))(v155, v156, v157);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v157);
      }
      v4 = v262;
      v160 = v254[11];
      v161 = (void *)(v133 + v160);
      v162 = &v134[v160];
      v163 = sub_2365AFE88();
      v164 = *(_QWORD *)(v163 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v164 + 48))(v162, 1, v163))
      {
        v165 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v164 + 16))(v161, v162, v163);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v161, 0, 1, v163);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v257 + 56))(v133, 0, 1, v254);
      goto LABEL_127;
    }
LABEL_89:
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v133, v134, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
    goto LABEL_128;
  }
  if (v136)
  {
    sub_236465998(v133, &qword_2563E4DE0);
    goto LABEL_89;
  }
  *(_QWORD *)v133 = *(_QWORD *)v134;
  *(_QWORD *)(v133 + 8) = *((_QWORD *)v134 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v133 + 16) = v134[16];
  v145 = v24[9];
  v146 = (void *)(v133 + v145);
  v147 = &v134[v145];
  v148 = sub_2365AFE1C();
  v149 = *(_QWORD *)(v148 - 8);
  v150 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v149 + 48);
  v252 = v146;
  LODWORD(v146) = v150(v146, 1, v148);
  v151 = v150(v147, 1, v148);
  if ((_DWORD)v146)
  {
    if (v151)
    {
      v152 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v153 = v252;
LABEL_104:
      memcpy(v153, v147, v152);
      goto LABEL_113;
    }
    (*(void (**)(void *, char *, uint64_t))(v149 + 16))(v252, v147, v148);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v252, 0, 1, v148);
  }
  else
  {
    if (v151)
    {
      (*(void (**)(void *, uint64_t))(v149 + 8))(v252, v148);
      v152 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v153 = v252;
      goto LABEL_104;
    }
    (*(void (**)(void *, char *, uint64_t))(v149 + 24))(v252, v147, v148);
  }
LABEL_113:
  v166 = v24[10];
  v167 = (void *)(v133 + v166);
  v168 = &v134[v166];
  v169 = sub_2365AFE4C();
  v170 = *(_QWORD *)(v169 - 8);
  v171 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v170 + 48);
  v253 = v167;
  LODWORD(v167) = v171(v167, 1, v169);
  v172 = v171(v168, 1, v169);
  if ((_DWORD)v167)
  {
    if (v172)
    {
      v173 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v174 = v253;
LABEL_118:
      memcpy(v174, v168, v173);
      goto LABEL_121;
    }
    (*(void (**)(void *, char *, uint64_t))(v170 + 16))(v253, v168, v169);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v170 + 56))(v253, 0, 1, v169);
  }
  else
  {
    if (v172)
    {
      (*(void (**)(void *, uint64_t))(v170 + 8))(v253, v169);
      v173 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v174 = v253;
      goto LABEL_118;
    }
    (*(void (**)(void *, char *, uint64_t))(v170 + 24))(v253, v168, v169);
  }
LABEL_121:
  v175 = v24[11];
  v176 = (void *)(v133 + v175);
  v177 = &v134[v175];
  v178 = sub_2365AFE88();
  v179 = *(_QWORD *)(v178 - 8);
  v180 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v179 + 48);
  v181 = v180(v176, 1, v178);
  v182 = v180(v177, 1, v178);
  v4 = v262;
  if (!v181)
  {
    if (!v182)
    {
      (*(void (**)(void *, char *, uint64_t))(v179 + 24))(v176, v177, v178);
      goto LABEL_127;
    }
    (*(void (**)(void *, uint64_t))(v179 + 8))(v176, v178);
    goto LABEL_126;
  }
  if (v182)
  {
LABEL_126:
    v183 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
    goto LABEL_127;
  }
  (*(void (**)(void *, char *, uint64_t))(v179 + 16))(v176, v177, v178);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v179 + 56))(v176, 0, 1, v178);
LABEL_127:
  v36 = v268;
  v19 = (uint64_t)v261;
LABEL_128:
  v184 = __src[10];
  v185 = (_QWORD *)(v129 + v184);
  v186 = &v260[v184];
  *v185 = *(_QWORD *)v186;
  v185[1] = *((_QWORD *)v186 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v187 = v36[10];
  v188 = a1 + v187;
  v189 = (char *)v4 + v187;
  *(_QWORD *)(a1 + v187) = *(void **)((char *)v4 + v187);
  swift_retain();
  swift_release();
  v267 = type metadata accessor for MessageUnpacker(0, v19, v266, v190);
  v191 = *(int *)(v267 + 36);
  v192 = v188 + v191;
  v193 = &v189[v191];
  v194 = v263(v188 + v191, 1, v24);
  v195 = v263((uint64_t)v193, 1, v24);
  if (!v194)
  {
    if (v195)
    {
      sub_236465998(v192, &qword_2563E4DE0);
      goto LABEL_134;
    }
    v265 = v189;
    *(_QWORD *)v192 = *(_QWORD *)v193;
    *(_QWORD *)(v192 + 8) = *((_QWORD *)v193 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v192 + 16) = v193[16];
    v256 = v24;
    v206 = v24[9];
    v207 = (void *)(v192 + v206);
    v208 = &v193[v206];
    v209 = sub_2365AFE1C();
    v210 = *(_QWORD *)(v209 - 8);
    v211 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v210 + 48);
    v212 = v211(v207, 1, v209);
    v213 = v211(v208, 1, v209);
    if (v212)
    {
      if (!v213)
      {
        (*(void (**)(void *, char *, uint64_t))(v210 + 16))(v207, v208, v209);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v210 + 56))(v207, 0, 1, v209);
        goto LABEL_151;
      }
    }
    else
    {
      if (!v213)
      {
        (*(void (**)(void *, char *, uint64_t))(v210 + 24))(v207, v208, v209);
LABEL_151:
        v235 = v256[10];
        v236 = (void *)(v192 + v235);
        v237 = &v193[v235];
        v238 = sub_2365AFE4C();
        v239 = *(_QWORD *)(v238 - 8);
        v240 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v239 + 48);
        v241 = v240(v236, 1, v238);
        v242 = v240(v237, 1, v238);
        if (v241)
        {
          if (!v242)
          {
            (*(void (**)(void *, char *, uint64_t))(v239 + 16))(v236, v237, v238);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v239 + 56))(v236, 0, 1, v238);
LABEL_157:
            v244 = v256[11];
            v245 = (void *)(v192 + v244);
            v246 = &v193[v244];
            v247 = sub_2365AFE88();
            v248 = *(_QWORD *)(v247 - 8);
            v249 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v248 + 48);
            v250 = v249(v245, 1, v247);
            v251 = v249(v246, 1, v247);
            v4 = v262;
            v189 = v265;
            if (v250)
            {
              v36 = v268;
              if (!v251)
              {
                (*(void (**)(void *, char *, uint64_t))(v248 + 16))(v245, v246, v247);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
                goto LABEL_147;
              }
            }
            else
            {
              v36 = v268;
              if (!v251)
              {
                (*(void (**)(void *, char *, uint64_t))(v248 + 24))(v245, v246, v247);
                goto LABEL_147;
              }
              (*(void (**)(void *, uint64_t))(v248 + 8))(v245, v247);
            }
            v203 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68) - 8) + 64);
            v204 = v245;
            v205 = v246;
            goto LABEL_135;
          }
        }
        else
        {
          if (!v242)
          {
            (*(void (**)(void *, char *, uint64_t))(v239 + 24))(v236, v237, v238);
            goto LABEL_157;
          }
          (*(void (**)(void *, uint64_t))(v239 + 8))(v236, v238);
        }
        v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v236, v237, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
        goto LABEL_157;
      }
      (*(void (**)(void *, uint64_t))(v210 + 8))(v207, v209);
    }
    v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
    goto LABEL_151;
  }
  if (v195)
  {
LABEL_134:
    v203 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8) - 8) + 64);
    v204 = (void *)v192;
    v205 = v193;
LABEL_135:
    memcpy(v204, v205, v203);
    goto LABEL_147;
  }
  v264 = v189;
  *(_QWORD *)v192 = *(_QWORD *)v193;
  *(_QWORD *)(v192 + 8) = *((_QWORD *)v193 + 1);
  *(_BYTE *)(v192 + 16) = v193[16];
  v255 = v24;
  v196 = v24[9];
  v197 = (void *)(v192 + v196);
  v198 = &v193[v196];
  v199 = sub_2365AFE1C();
  v200 = *(_QWORD *)(v199 - 8);
  v201 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48);
  swift_bridgeObjectRetain();
  if (v201(v198, 1, v199))
  {
    v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v197, v198, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v200 + 16))(v197, v198, v199);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
  }
  v214 = v255[10];
  v215 = (void *)(v192 + v214);
  v216 = &v193[v214];
  v217 = sub_2365AFE4C();
  v218 = *(_QWORD *)(v217 - 8);
  v36 = v268;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217))
  {
    v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v218 + 16))(v215, v216, v217);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
  }
  v4 = v262;
  v220 = v255[11];
  v221 = (void *)(v192 + v220);
  v222 = &v193[v220];
  v223 = sub_2365AFE88();
  v224 = *(_QWORD *)(v223 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v222, 1, v223))
  {
    v225 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v221, v222, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v224 + 16))(v221, v222, v223);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v224 + 56))(v221, 0, 1, v223);
  }
  v189 = v264;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v257 + 56))(v192, 0, 1, v255);
LABEL_147:
  v226 = *(int *)(v267 + 40);
  v227 = (_QWORD *)(v188 + v226);
  v228 = &v189[v226];
  *v227 = *(_QWORD *)v228;
  v227[1] = *((_QWORD *)v228 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v229 = v36[11];
  v230 = a1 + v229;
  v231 = (char *)v4 + v229;
  v232 = sub_2365AF9FC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 24))(v230, v231, v232);
  *(_BYTE *)(a1 + v36[12]) = *((_BYTE *)v4 + v36[12]);
  return a1;
}

uint64_t sub_236518DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  unsigned int (*v127)(_BYTE *, uint64_t, int *);
  uint64_t v128;

  v4 = (int *)a3;
  v5 = a2;
  v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  v10 = *(_QWORD *)(a2 + 48);
  if (v10)
  {
    v11 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  v12 = *(_QWORD *)(a3 + 16);
  v124 = *(_QWORD *)(a3 + 24);
  v13 = type metadata accessor for MessageSessionTransport(0, v12, v124, a4);
  v14 = *(int *)(v13 + 52);
  v15 = (_BYTE *)(a1 + v14);
  v16 = (_BYTE *)(v5 + v14);
  v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v125 = *((_QWORD *)v17 - 1);
  v127 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v125 + 48);
  v126 = v4;
  v123 = v5;
  if (v127(v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = v12;
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v15[16] = v16[16];
    v20 = v17[9];
    v21 = &v15[v20];
    v22 = &v16[v20];
    v23 = sub_2365AFE1C();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v26 = v17[10];
    v27 = &v15[v26];
    v28 = &v16[v26];
    v29 = sub_2365AFE4C();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v32 = v17[11];
    v33 = &v15[v32];
    v34 = &v16[v32];
    v35 = sub_2365AFE88();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 32))(v33, v34, v35);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v12 = v19;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v125 + 56))(v15, 0, 1, v17);
    v5 = v123;
    v4 = v126;
  }
  v38 = *(int *)(v13 + 56);
  v39 = (_BYTE *)(a1 + v38);
  v40 = (_BYTE *)(v5 + v38);
  if (v127((_BYTE *)(v5 + v38), 1, v17))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v43 = v12;
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v39[16] = v40[16];
    v44 = v17[9];
    v45 = &v39[v44];
    v46 = &v40[v44];
    v47 = sub_2365AFE1C();
    v48 = *(_QWORD *)(v47 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 32))(v45, v46, v47);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
    }
    v50 = v17[10];
    v51 = &v39[v50];
    v52 = &v40[v50];
    v53 = sub_2365AFE4C();
    v54 = *(_QWORD *)(v53 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
    {
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v54 + 32))(v51, v52, v53);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
    }
    v56 = v17[11];
    v57 = &v39[v56];
    v58 = &v40[v56];
    v59 = sub_2365AFE88();
    v60 = *(_QWORD *)(v59 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      v61 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 32))(v57, v58, v59);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    v12 = v43;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v125 + 56))(v39, 0, 1, v17);
    v4 = v126;
  }
  v62 = v4[9];
  v63 = a1 + v62;
  v64 = v5 + v62;
  *(_QWORD *)(a1 + v62) = *(_QWORD *)(v5 + v62);
  v65 = v124;
  v122 = type metadata accessor for MessagePacker(0, v12, v124, v42);
  v66 = *(int *)(v122 + 36);
  v67 = (_BYTE *)(v63 + v66);
  v68 = (_BYTE *)(v64 + v66);
  if (v127((_BYTE *)(v64 + v66), 1, v17))
  {
    v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    v121 = v12;
    *(_OWORD *)v67 = *(_OWORD *)v68;
    v67[16] = v68[16];
    v71 = v17[9];
    v72 = &v67[v71];
    v73 = &v68[v71];
    v74 = sub_2365AFE1C();
    v75 = *(_QWORD *)(v74 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
    {
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v75 + 32))(v72, v73, v74);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    v77 = v17[10];
    v78 = &v67[v77];
    v79 = &v68[v77];
    v80 = sub_2365AFE4C();
    v81 = *(_QWORD *)(v80 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v81 + 32))(v78, v79, v80);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
    }
    v83 = v17[11];
    v84 = &v67[v83];
    v85 = &v68[v83];
    v86 = sub_2365AFE88();
    v87 = *(_QWORD *)(v86 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
    {
      v88 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v87 + 32))(v84, v85, v86);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
    }
    v12 = v121;
    v65 = v124;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v125 + 56))(v67, 0, 1, v17);
    v5 = v123;
    v4 = v126;
  }
  *(_OWORD *)(v63 + *(int *)(v122 + 40)) = *(_OWORD *)(v64 + *(int *)(v122 + 40));
  v89 = v4[10];
  v90 = a1 + v89;
  v91 = v5 + v89;
  *(_QWORD *)(a1 + v89) = *(_QWORD *)(v5 + v89);
  v92 = type metadata accessor for MessageUnpacker(0, v12, v65, v70);
  v93 = *(int *)(v92 + 36);
  v94 = (_BYTE *)(v90 + v93);
  v95 = (_BYTE *)(v91 + v93);
  if (v127((_BYTE *)(v91 + v93), 1, v17))
  {
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
  }
  else
  {
    v128 = v92;
    *(_OWORD *)v94 = *(_OWORD *)v95;
    v94[16] = v95[16];
    v97 = v17[9];
    v98 = &v94[v97];
    v99 = &v95[v97];
    v100 = sub_2365AFE1C();
    v101 = *(_QWORD *)(v100 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
    {
      v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
      memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v101 + 32))(v98, v99, v100);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
    }
    v103 = v17[10];
    v104 = &v94[v103];
    v105 = &v95[v103];
    v106 = sub_2365AFE4C();
    v107 = *(_QWORD *)(v106 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
    {
      v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
      memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v107 + 32))(v104, v105, v106);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
    }
    v5 = v123;
    v109 = v17[11];
    v110 = &v94[v109];
    v111 = &v95[v109];
    v112 = sub_2365AFE88();
    v113 = *(_QWORD *)(v112 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112))
    {
      v114 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
      memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v113 + 32))(v110, v111, v112);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
    }
    v4 = v126;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v125 + 56))(v94, 0, 1, v17);
    v92 = v128;
  }
  *(_OWORD *)(v90 + *(int *)(v92 + 40)) = *(_OWORD *)(v91 + *(int *)(v92 + 40));
  v115 = v4[11];
  v116 = a1 + v115;
  v117 = v4;
  v118 = v5 + v115;
  v119 = sub_2365AF9FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v116, v118, v119);
  *(_BYTE *)(a1 + v117[12]) = *(_BYTE *)(v5 + v117[12]);
  return a1;
}

uint64_t sub_236519778(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t (*v21)(uint64_t, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void *, uint64_t, uint64_t);
  int v38;
  size_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(void *, uint64_t, uint64_t);
  int v59;
  size_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(void *, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int v74;
  int v75;
  uint64_t v76;
  void *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(void *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  void *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(void *, uint64_t, uint64_t);
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(void *, uint64_t, uint64_t);
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  int v130;
  int v131;
  uint64_t v132;
  void *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t (*v145)(void *, uint64_t, uint64_t);
  int v146;
  size_t v147;
  void *v148;
  uint64_t v149;
  void *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  char *v163;
  uint64_t v164;
  uint64_t (*v165)(void *, uint64_t, uint64_t);
  int v166;
  size_t v167;
  void *v168;
  uint64_t v169;
  void *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t (*v174)(void *, uint64_t, uint64_t);
  int v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  int v191;
  int v192;
  uint64_t v193;
  void *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  size_t v199;
  void *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  void *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t (*v208)(void *, uint64_t, uint64_t);
  int v209;
  size_t v210;
  void *v211;
  uint64_t v212;
  void *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v234;
  void *v235;
  char *v236;
  uint64_t v237;
  uint64_t (*v238)(void *, uint64_t, uint64_t);
  int v239;
  size_t v240;
  void *v241;
  uint64_t v242;
  void *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t (*v247)(void *, uint64_t, uint64_t);
  int v248;
  int v249;
  char *v250;
  uint64_t v251;
  void *v252;
  void *v253;
  void *v254;
  void *v255;
  uint64_t v256;
  int *__src;
  char *__srca;
  _QWORD *__srcb;
  _QWORD *v260;
  void *v261;
  uint64_t v262;
  void *v263;
  void *v264;
  uint64_t v265;
  uint64_t (*v266)(uint64_t, uint64_t, int *);
  uint64_t v267;
  uint64_t v268;

  v4 = a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4[1];

  v8 = v4[3];
  *(_QWORD *)(a1 + 16) = v4[2];
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  v10 = v4[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v10)
    {
      v11 = v4[5];
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v11;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v10)
  {
    v12 = v4[5];
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v12;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v4 + 2);
LABEL_8:
  v13 = v4[6];
  if (*(_QWORD *)(a1 + 48))
  {
    if (v13)
    {
      v14 = v4[7];
      *(_QWORD *)(a1 + 48) = v13;
      *(_QWORD *)(a1 + 56) = v14;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v13)
  {
    v15 = v4[7];
    *(_QWORD *)(a1 + 48) = v13;
    *(_QWORD *)(a1 + 56) = v15;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
LABEL_15:
  v261 = *(void **)(a3 + 24);
  v262 = *(_QWORD *)(a3 + 16);
  v16 = type metadata accessor for MessageSessionTransport(0, v262, (uint64_t)v261, v9);
  v17 = *(int *)(v16 + 52);
  v18 = a1 + v17;
  v19 = (char *)v4 + v17;
  v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v256 = *((_QWORD *)v20 - 1);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v256 + 48);
  v22 = v21(v18, 1, v20);
  v266 = v21;
  v23 = v21((uint64_t)v19, 1, v20);
  v260 = v4;
  v265 = a3;
  if (v22)
  {
    if (!v23)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *(_BYTE *)(v18 + 16) = v19[16];
      v24 = v20[9];
      v25 = (void *)(v18 + v24);
      v26 = &v19[v24];
      v27 = sub_2365AFE1C();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v41 = v20[10];
      v42 = (void *)(v18 + v41);
      v43 = &v19[v41];
      v44 = sub_2365AFE4C();
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      v4 = v260;
      v47 = v20[11];
      v48 = (void *)(v18 + v47);
      v49 = &v19[v47];
      v50 = sub_2365AFE88();
      v51 = *(_QWORD *)(v50 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v256 + 56))(v18, 0, 1, v20);
      goto LABEL_53;
    }
LABEL_21:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v18, v19, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_54;
  }
  if (v23)
  {
    sub_236465998(v18, &qword_2563E4DE0);
    goto LABEL_21;
  }
  v31 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_QWORD *)(v18 + 8) = v31;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v18 + 16) = v19[16];
  v32 = v20[9];
  v33 = (void *)(v18 + v32);
  v34 = &v19[v32];
  v35 = sub_2365AFE1C();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
  v252 = v33;
  LODWORD(v33) = v37(v33, 1, v35);
  v38 = v37(v34, 1, v35);
  if ((_DWORD)v33)
  {
    if (v38)
    {
      v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v40 = v252;
LABEL_36:
      memcpy(v40, v34, v39);
      goto LABEL_39;
    }
    (*(void (**)(void *, char *, uint64_t))(v36 + 32))(v252, v34, v35);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v252, 0, 1, v35);
  }
  else
  {
    if (v38)
    {
      (*(void (**)(void *, uint64_t))(v36 + 8))(v252, v35);
      v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v40 = v252;
      goto LABEL_36;
    }
    (*(void (**)(void *, char *, uint64_t))(v36 + 40))(v252, v34, v35);
  }
LABEL_39:
  v53 = v20[10];
  v54 = (void *)(v18 + v53);
  v55 = &v19[v53];
  v56 = sub_2365AFE4C();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v57 + 48);
  v253 = v54;
  LODWORD(v54) = v58(v54, 1, v56);
  v59 = v58(v55, 1, v56);
  if ((_DWORD)v54)
  {
    if (v59)
    {
      v60 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v61 = v253;
LABEL_44:
      memcpy(v61, v55, v60);
      goto LABEL_47;
    }
    (*(void (**)(void *, char *, uint64_t))(v57 + 32))(v253, v55, v56);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v253, 0, 1, v56);
  }
  else
  {
    if (v59)
    {
      (*(void (**)(void *, uint64_t))(v57 + 8))(v253, v56);
      v60 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v61 = v253;
      goto LABEL_44;
    }
    (*(void (**)(void *, char *, uint64_t))(v57 + 40))(v253, v55, v56);
  }
LABEL_47:
  v62 = v20[11];
  v63 = (void *)(v18 + v62);
  v64 = &v19[v62];
  v65 = sub_2365AFE88();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v66 + 48);
  v68 = v67(v63, 1, v65);
  v69 = v67(v64, 1, v65);
  v4 = v260;
  if (!v68)
  {
    if (!v69)
    {
      (*(void (**)(void *, char *, uint64_t))(v66 + 40))(v63, v64, v65);
      goto LABEL_53;
    }
    (*(void (**)(void *, uint64_t))(v66 + 8))(v63, v65);
    goto LABEL_52;
  }
  if (v69)
  {
LABEL_52:
    v70 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_53;
  }
  (*(void (**)(void *, char *, uint64_t))(v66 + 32))(v63, v64, v65);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_53:
  a3 = v265;
LABEL_54:
  v71 = *(int *)(v16 + 56);
  v72 = a1 + v71;
  v73 = (char *)v4 + v71;
  v74 = v266(a1 + v71, 1, v20);
  v75 = v266((uint64_t)v73, 1, v20);
  if (v74)
  {
    if (!v75)
    {
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *(_BYTE *)(v72 + 16) = v73[16];
      v76 = v20[9];
      v77 = (void *)(v72 + v76);
      v78 = &v73[v76];
      v79 = sub_2365AFE1C();
      v80 = *(_QWORD *)(v79 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
      {
        v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v80 + 32))(v77, v78, v79);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
      }
      v92 = v20[10];
      v93 = (void *)(v72 + v92);
      v94 = &v73[v92];
      v95 = sub_2365AFE4C();
      v96 = *(_QWORD *)(v95 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
      {
        v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v96 + 32))(v93, v94, v95);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
      }
      v98 = v20[11];
      v99 = (void *)(v72 + v98);
      v100 = &v73[v98];
      v101 = sub_2365AFE88();
      v102 = *(_QWORD *)(v101 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
      {
        v103 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v102 + 32))(v99, v100, v101);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v256 + 56))(v72, 0, 1, v20);
      goto LABEL_88;
    }
LABEL_60:
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v72, v73, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
    goto LABEL_89;
  }
  if (v75)
  {
    sub_236465998(v72, &qword_2563E4DE0);
    goto LABEL_60;
  }
  v83 = *((_QWORD *)v73 + 1);
  *(_QWORD *)v72 = *(_QWORD *)v73;
  *(_QWORD *)(v72 + 8) = v83;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v72 + 16) = v73[16];
  v84 = v20[9];
  v85 = (void *)(v72 + v84);
  v86 = &v73[v84];
  v87 = sub_2365AFE1C();
  v88 = *(_QWORD *)(v87 - 8);
  v89 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v88 + 48);
  v90 = v89(v85, 1, v87);
  v91 = v89(v86, 1, v87);
  if (v90)
  {
    if (!v91)
    {
      (*(void (**)(void *, char *, uint64_t))(v88 + 32))(v85, v86, v87);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
      goto LABEL_76;
    }
    goto LABEL_75;
  }
  if (v91)
  {
    (*(void (**)(void *, uint64_t))(v88 + 8))(v85, v87);
LABEL_75:
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    goto LABEL_76;
  }
  (*(void (**)(void *, char *, uint64_t))(v88 + 40))(v85, v86, v87);
LABEL_76:
  v105 = v20[10];
  v106 = (void *)(v72 + v105);
  v107 = &v73[v105];
  v108 = sub_2365AFE4C();
  v109 = *(_QWORD *)(v108 - 8);
  v110 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v109 + 48);
  v111 = v110(v106, 1, v108);
  v112 = v110(v107, 1, v108);
  if (v111)
  {
    v4 = v260;
    if (!v112)
    {
      (*(void (**)(void *, char *, uint64_t))(v109 + 32))(v106, v107, v108);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
      goto LABEL_82;
    }
    goto LABEL_81;
  }
  v4 = v260;
  if (v112)
  {
    (*(void (**)(void *, uint64_t))(v109 + 8))(v106, v108);
LABEL_81:
    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    goto LABEL_82;
  }
  (*(void (**)(void *, char *, uint64_t))(v109 + 40))(v106, v107, v108);
LABEL_82:
  v114 = v20[11];
  v115 = (void *)(v72 + v114);
  v116 = &v73[v114];
  v117 = sub_2365AFE88();
  v118 = *(_QWORD *)(v117 - 8);
  v119 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v118 + 48);
  v120 = v119(v115, 1, v117);
  v121 = v119(v116, 1, v117);
  if (!v120)
  {
    if (!v121)
    {
      (*(void (**)(void *, char *, uint64_t))(v118 + 40))(v115, v116, v117);
      goto LABEL_88;
    }
    (*(void (**)(void *, uint64_t))(v118 + 8))(v115, v117);
    goto LABEL_87;
  }
  if (v121)
  {
LABEL_87:
    v122 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
    goto LABEL_88;
  }
  (*(void (**)(void *, char *, uint64_t))(v118 + 32))(v115, v116, v117);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
LABEL_88:
  a3 = v265;
LABEL_89:
  v123 = *(int *)(a3 + 36);
  v124 = a1 + v123;
  v125 = (char *)v4 + v123;
  *(_QWORD *)(a1 + v123) = *(_QWORD *)((char *)v4 + v123);
  swift_release();
  __src = (int *)type metadata accessor for MessagePacker(0, v262, (uint64_t)v261, v126);
  v127 = __src[9];
  v128 = v124 + v127;
  v129 = &v125[v127];
  v130 = v266(v124 + v127, 1, v20);
  v131 = v266((uint64_t)v129, 1, v20);
  if (v130)
  {
    if (!v131)
    {
      *(_OWORD *)v128 = *(_OWORD *)v129;
      *(_BYTE *)(v128 + 16) = v129[16];
      v132 = v20[9];
      v133 = (void *)(v128 + v132);
      v134 = &v129[v132];
      v135 = sub_2365AFE1C();
      v136 = *(_QWORD *)(v135 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v134, 1, v135))
      {
        v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
        memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v136 + 32))(v133, v134, v135);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v133, 0, 1, v135);
      }
      v149 = v20[10];
      v150 = (void *)(v128 + v149);
      v151 = &v129[v149];
      v152 = sub_2365AFE4C();
      v153 = *(_QWORD *)(v152 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48))(v151, 1, v152))
      {
        v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
        memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v153 + 32))(v150, v151, v152);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v150, 0, 1, v152);
      }
      v4 = v260;
      v155 = v20[11];
      v156 = (void *)(v128 + v155);
      v157 = &v129[v155];
      v158 = sub_2365AFE88();
      v159 = *(_QWORD *)(v158 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v159 + 48))(v157, 1, v158))
      {
        v160 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
        memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v159 + 32))(v156, v157, v158);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v156, 0, 1, v158);
      }
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v256 + 56))(v128, 0, 1, v20);
      goto LABEL_131;
    }
LABEL_95:
    v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8);
    memcpy((void *)v128, v129, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
    goto LABEL_132;
  }
  if (v131)
  {
    sub_236465998(v128, &qword_2563E4DE0);
    goto LABEL_95;
  }
  v250 = v125;
  v139 = *((_QWORD *)v129 + 1);
  *(_QWORD *)v128 = *(_QWORD *)v129;
  *(_QWORD *)(v128 + 8) = v139;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v128 + 16) = v129[16];
  v140 = v20[9];
  v141 = (void *)(v128 + v140);
  v142 = &v129[v140];
  v143 = sub_2365AFE1C();
  v144 = *(_QWORD *)(v143 - 8);
  v145 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v144 + 48);
  v254 = v141;
  LODWORD(v141) = v145(v141, 1, v143);
  v146 = v145(v142, 1, v143);
  if ((_DWORD)v141)
  {
    if (v146)
    {
      v147 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v148 = v254;
LABEL_110:
      memcpy(v148, v142, v147);
      goto LABEL_117;
    }
    (*(void (**)(void *, char *, uint64_t))(v144 + 32))(v254, v142, v143);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v254, 0, 1, v143);
  }
  else
  {
    if (v146)
    {
      (*(void (**)(void *, uint64_t))(v144 + 8))(v254, v143);
      v147 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
      v148 = v254;
      goto LABEL_110;
    }
    (*(void (**)(void *, char *, uint64_t))(v144 + 40))(v254, v142, v143);
  }
LABEL_117:
  v125 = v250;
  v161 = v20[10];
  v162 = (void *)(v128 + v161);
  v163 = &v129[v161];
  v164 = sub_2365AFE4C();
  v251 = *(_QWORD *)(v164 - 8);
  v165 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v251 + 48);
  v255 = v162;
  LODWORD(v162) = v165(v162, 1, v164);
  v166 = v165(v163, 1, v164);
  if ((_DWORD)v162)
  {
    if (v166)
    {
      v167 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v168 = v255;
LABEL_122:
      memcpy(v168, v163, v167);
      goto LABEL_125;
    }
    (*(void (**)(void *, char *, uint64_t))(v251 + 32))(v255, v163, v164);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v255, 0, 1, v164);
  }
  else
  {
    if (v166)
    {
      (*(void (**)(void *, uint64_t))(v251 + 8))(v255, v164);
      v167 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v168 = v255;
      goto LABEL_122;
    }
    (*(void (**)(void *, char *, uint64_t))(v251 + 40))(v255, v163, v164);
  }
LABEL_125:
  v169 = v20[11];
  v170 = (void *)(v128 + v169);
  v171 = &v129[v169];
  v172 = sub_2365AFE88();
  v173 = *(_QWORD *)(v172 - 8);
  v174 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v173 + 48);
  v175 = v174(v170, 1, v172);
  v176 = v174(v171, 1, v172);
  if (!v175)
  {
    v4 = v260;
    if (!v176)
    {
      (*(void (**)(void *, char *, uint64_t))(v173 + 40))(v170, v171, v172);
      goto LABEL_131;
    }
    (*(void (**)(void *, uint64_t))(v173 + 8))(v170, v172);
    goto LABEL_130;
  }
  v4 = v260;
  if (v176)
  {
LABEL_130:
    v177 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    goto LABEL_131;
  }
  (*(void (**)(void *, char *, uint64_t))(v173 + 32))(v170, v171, v172);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
LABEL_131:
  a3 = v265;
LABEL_132:
  v178 = __src[10];
  v179 = (_QWORD *)(v124 + v178);
  v180 = &v125[v178];
  v182 = *(_QWORD *)v180;
  v181 = *((_QWORD *)v180 + 1);
  *v179 = v182;
  v179[1] = v181;
  swift_bridgeObjectRelease();
  v183 = *(int *)(a3 + 40);
  v184 = a1 + v183;
  v185 = (char *)v4 + v183;
  *(_QWORD *)(a1 + v183) = *(_QWORD *)((char *)v4 + v183);
  swift_release();
  v187 = type metadata accessor for MessageUnpacker(0, v262, (uint64_t)v261, v186);
  v188 = *(int *)(v187 + 36);
  v189 = v184 + v188;
  v190 = &v185[v188];
  v191 = v266(v184 + v188, 1, v20);
  v192 = v266((uint64_t)v190, 1, v20);
  if (!v191)
  {
    if (v192)
    {
      sub_236465998(v189, &qword_2563E4DE0);
      goto LABEL_138;
    }
    __srca = v185;
    v268 = v187;
    v202 = *((_QWORD *)v190 + 1);
    *(_QWORD *)v189 = *(_QWORD *)v190;
    *(_QWORD *)(v189 + 8) = v202;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v189 + 16) = v190[16];
    v203 = v20[9];
    v204 = (void *)(v189 + v203);
    v205 = &v190[v203];
    v206 = sub_2365AFE1C();
    v207 = *(_QWORD *)(v206 - 8);
    v208 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v207 + 48);
    v263 = v204;
    LODWORD(v204) = v208(v204, 1, v206);
    v209 = v208(v205, 1, v206);
    if ((_DWORD)v204)
    {
      if (v209)
      {
        v210 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v211 = v263;
LABEL_154:
        memcpy(v211, v205, v210);
        goto LABEL_158;
      }
      (*(void (**)(void *, char *, uint64_t))(v207 + 32))(v263, v205, v206);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v207 + 56))(v263, 0, 1, v206);
    }
    else
    {
      if (v209)
      {
        (*(void (**)(void *, uint64_t))(v207 + 8))(v263, v206);
        v210 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58) - 8) + 64);
        v211 = v263;
        goto LABEL_154;
      }
      (*(void (**)(void *, char *, uint64_t))(v207 + 40))(v263, v205, v206);
    }
LABEL_158:
    v185 = __srca;
    v234 = v20[10];
    v235 = (void *)(v189 + v234);
    v236 = &v190[v234];
    v237 = sub_2365AFE4C();
    __srcb = *(_QWORD **)(v237 - 8);
    v238 = (uint64_t (*)(void *, uint64_t, uint64_t))__srcb[6];
    v264 = v235;
    LODWORD(v235) = v238(v235, 1, v237);
    v239 = v238(v236, 1, v237);
    if ((_DWORD)v235)
    {
      if (!v239)
      {
        ((void (*)(void *, char *, uint64_t))__srcb[4])(v264, v236, v237);
        ((void (*)(void *, _QWORD, uint64_t, uint64_t))__srcb[7])(v264, 0, 1, v237);
        goto LABEL_166;
      }
      v240 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v241 = v264;
    }
    else
    {
      if (!v239)
      {
        ((void (*)(void *, char *, uint64_t))__srcb[5])(v264, v236, v237);
        goto LABEL_166;
      }
      ((void (*)(void *, uint64_t))__srcb[1])(v264, v237);
      v240 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60) - 8) + 64);
      v241 = v264;
    }
    memcpy(v241, v236, v240);
LABEL_166:
    v4 = v260;
    v242 = v20[11];
    v243 = (void *)(v189 + v242);
    v244 = &v190[v242];
    v245 = sub_2365AFE88();
    v246 = *(_QWORD *)(v245 - 8);
    v247 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v246 + 48);
    v248 = v247(v243, 1, v245);
    v249 = v247(v244, 1, v245);
    if (v248)
    {
      v187 = v268;
      if (!v249)
      {
        (*(void (**)(void *, char *, uint64_t))(v246 + 32))(v243, v244, v245);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
        goto LABEL_151;
      }
    }
    else
    {
      v187 = v268;
      if (!v249)
      {
        (*(void (**)(void *, char *, uint64_t))(v246 + 40))(v243, v244, v245);
        goto LABEL_151;
      }
      (*(void (**)(void *, uint64_t))(v246 + 8))(v243, v245);
    }
    v199 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68) - 8) + 64);
    v200 = v243;
    v201 = v244;
    goto LABEL_139;
  }
  if (v192)
  {
LABEL_138:
    v199 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DD8) - 8) + 64);
    v200 = (void *)v189;
    v201 = v190;
LABEL_139:
    memcpy(v200, v201, v199);
    goto LABEL_151;
  }
  v267 = v187;
  *(_OWORD *)v189 = *(_OWORD *)v190;
  *(_BYTE *)(v189 + 16) = v190[16];
  v193 = v20[9];
  v194 = (void *)(v189 + v193);
  v195 = &v190[v193];
  v196 = sub_2365AFE1C();
  v197 = *(_QWORD *)(v196 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
  {
    v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E58);
    memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v197 + 32))(v194, v195, v196);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
  }
  v212 = v20[10];
  v213 = (void *)(v189 + v212);
  v214 = &v190[v212];
  v215 = sub_2365AFE4C();
  v216 = *(_QWORD *)(v215 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48))(v214, 1, v215))
  {
    v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4E60);
    memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v216 + 32))(v213, v214, v215);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v216 + 56))(v213, 0, 1, v215);
  }
  v4 = v260;
  v218 = v20[11];
  v219 = (void *)(v189 + v218);
  v220 = &v190[v218];
  v221 = sub_2365AFE88();
  v222 = *(_QWORD *)(v221 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v220, 1, v221))
  {
    v223 = __swift_instantiateConcreteTypeFromMangledName(qword_2563E4E68);
    memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v222 + 32))(v219, v220, v221);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v219, 0, 1, v221);
  }
  v187 = v267;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v256 + 56))(v189, 0, 1, v20);
LABEL_151:
  v224 = *(int *)(v187 + 40);
  v225 = (_QWORD *)(v184 + v224);
  v226 = &v185[v224];
  v228 = *(_QWORD *)v226;
  v227 = *((_QWORD *)v226 + 1);
  *v225 = v228;
  v225[1] = v227;
  swift_bridgeObjectRelease();
  v229 = *(int *)(v265 + 44);
  v230 = a1 + v229;
  v231 = (char *)v4 + v229;
  v232 = sub_2365AF9FC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 40))(v230, v231, v232);
  *(_BYTE *)(a1 + *(int *)(v265 + 48)) = *((_BYTE *)v4 + *(int *)(v265 + 48));
  return a1;
}

uint64_t sub_23651AD60()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23651AD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v22;

  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(a3 + 24);
  v9 = type metadata accessor for MessageSessionTransport(0, v7, v8, a4);
  v11 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v11 + 84) == (_DWORD)a2)
  {
    v12 = v9;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    v14 = a1;
    return v13(v14, a2, v12);
  }
  v15 = type metadata accessor for MessagePacker(0, v7, v8, v10);
  v17 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v17 + 84) == (_DWORD)a2)
  {
    v12 = v15;
    v18 = *(int *)(a3 + 36);
LABEL_9:
    v14 = a1 + v18;
    v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    return v13(v14, a2, v12);
  }
  v19 = type metadata accessor for MessageUnpacker(0, v7, v8, v16);
  v17 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v17 + 84) == (_DWORD)a2)
  {
    v12 = v19;
    v18 = *(int *)(a3 + 40);
    goto LABEL_9;
  }
  v20 = sub_2365AF9FC();
  v17 = *(_QWORD *)(v20 - 8);
  if (*(_DWORD *)(v17 + 84) == (_DWORD)a2)
  {
    v12 = v20;
    v18 = *(int *)(a3 + 44);
    goto LABEL_9;
  }
  v22 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 48));
  if (v22 >= 2)
    return ((v22 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_23651AE94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23651AEA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v8 = *(_QWORD *)(a4 + 16);
  v9 = *(_QWORD *)(a4 + 24);
  v10 = type metadata accessor for MessageSessionTransport(0, v8, v9, a4);
  v12 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v12 + 84) == a3)
  {
    v13 = v10;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v15 = a1;
    return v14(v15, a2, a2, v13);
  }
  v16 = type metadata accessor for MessagePacker(0, v8, v9, v11);
  v18 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v18 + 84) == a3)
  {
    v13 = v16;
    v19 = *(int *)(a4 + 36);
LABEL_9:
    v15 = a1 + v19;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    return v14(v15, a2, a2, v13);
  }
  v20 = type metadata accessor for MessageUnpacker(0, v8, v9, v17);
  v18 = *(_QWORD *)(v20 - 8);
  if (*(_DWORD *)(v18 + 84) == a3)
  {
    v13 = v20;
    v19 = *(int *)(a4 + 40);
    goto LABEL_9;
  }
  result = sub_2365AF9FC();
  v18 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v18 + 84) == a3)
  {
    v13 = result;
    v19 = *(int *)(a4 + 44);
    goto LABEL_9;
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 48)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for ActivatedMessageSessionTransport(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivatedMessageSessionTransport);
}

uint64_t sub_23651AFC0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t sub_23651B01C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_23651B06C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23651B0B8 + 4 * byte_2365BF1E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23651B0EC + 4 * byte_2365BF1E0[v4]))();
}

uint64_t sub_23651B0EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23651B0F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23651B0FCLL);
  return result;
}

uint64_t sub_23651B108(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23651B110);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23651B114(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23651B11C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_23651B128()
{
  JUMPOUT(0x23B7F5164);
}

void sub_23651B138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = v4[2];
  v7 = v4[3];
  v8 = v4[5];
  v9 = type metadata accessor for ActivatedMessageSessionTransport(0, v6, v7, a4);
  sub_236512F20(v8, a1, v9);
}

uint64_t sub_23651B180()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23651B1E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563E8DF8) - 8) + 80);
  return sub_2365130B0(a1, a2, a3, v3 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_23651B250()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_23651B274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int *v13;
  unsigned int (*v14)(unint64_t, uint64_t, int *);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  uint64_t v36;

  v5 = *(_QWORD *)(v4 + 32);
  v6 = *(_QWORD *)(v4 + 40);
  v7 = type metadata accessor for MessageUnpacker(0, v5, v6, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = type metadata accessor for MessagePacker(0, v5, v6, v11);
  v35 = (*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80) + v10 + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v36 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  v12 = v4 + v9 + *(int *)(v7 + 36);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DE0);
  v14 = *(unsigned int (**)(unint64_t, uint64_t, int *))(*((_QWORD *)v13 - 1) + 48);
  if (!v14(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    v15 = v12 + v13[9];
    v16 = sub_2365AFE1C();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
    v18 = v12 + v13[10];
    v19 = sub_2365AFE4C();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v18, v19);
    v21 = v12 + v13[11];
    v22 = sub_2365AFE88();
    v23 = *(_QWORD *)(v22 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v24 = v4 + v35 + *(int *)(v36 + 36);
  if (!v14(v24, 1, v13))
  {
    swift_bridgeObjectRelease();
    v25 = v24 + v13[9];
    v26 = sub_2365AFE1C();
    v27 = *(_QWORD *)(v26 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      (*(void (**)(unint64_t, uint64_t))(v27 + 8))(v25, v26);
    v28 = v24 + v13[10];
    v29 = sub_2365AFE4C();
    v30 = *(_QWORD *)(v29 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      (*(void (**)(unint64_t, uint64_t))(v30 + 8))(v28, v29);
    v31 = v24 + v13[11];
    v32 = sub_2365AFE88();
    v33 = *(_QWORD *)(v32 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      (*(void (**)(unint64_t, uint64_t))(v33 + 8))(v31, v32);
  }
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23651B5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;

  v6 = v4[4];
  v7 = v4[5];
  v8 = *(_QWORD *)(type metadata accessor for MessageUnpacker(0, v6, v7, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(type metadata accessor for MessagePacker(0, v6, v7, v12) - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + v11 + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = v4[3];
  v24 = v4[2];
  v15 = (uint64_t)v4 + v9;
  v16 = *(_QWORD *)((char *)v4 + v10);
  v17 = (char *)v4 + v11;
  v19 = *(_QWORD *)((char *)v4 + v11);
  v18 = *((_QWORD *)v17 + 1);
  v20 = (uint64_t)v4 + v14;
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v21;
  *v21 = v5;
  v21[1] = sub_236477420;
  return sub_2365110F8(a1, v24, v23, v15, v16, v19, v18, v20);
}

uint64_t ValueIntercept.__allocating_init(dropBehavior:)(char *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ValueIntercept.init(dropBehavior:)(a1);
  return v2;
}

BOOL static ValueIntercept.DropBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ValueIntercept.DropBehavior.hash(into:)()
{
  return sub_2365B09F8();
}

uint64_t sub_23651B76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23651C15C(a1, a2, a3, (void (*)(_BYTE *))ValueIntercept.DropBehavior.hash(into:));
}

void ValueIntercept.dropBehavior.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 112);
}

uint64_t sub_23651B784@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  sub_2365B01D0();
  v4 = sub_2365B047C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23651B81C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  sub_2365B01D0();
  v4 = sub_2365B047C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

BOOL sub_23651B8BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _BOOL8 v5;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v0 = sub_2365B01D0();
  v1 = sub_2365B047C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v7 - v3;
  sub_23651B784((uint64_t)&v7 - v3);
  v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 48))(v4, 1, v0) != 1;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

_BYTE *ValueIntercept.init(dropBehavior:)(char *a1)
{
  _BYTE *v1;
  char v2;
  _BYTE *v3;
  uint64_t v4;

  v2 = *a1;
  swift_defaultActor_initialize();
  v3 = &v1[*(_QWORD *)(*(_QWORD *)v1 + 104)];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v4 = sub_2365B01D0();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v1[112] = v2;
  return v1;
}

uint64_t sub_23651BA14(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_23651BA34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  sub_23651BE3C();
  v3 = type metadata accessor for ValueIntercept(255, *(_QWORD *)(*(_QWORD *)(v0 + 32) + 80), v1, v2);
  MEMORY[0x23B7F5164](&protocol conformance descriptor for ValueIntercept<A>, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_23651BB0C;
  return sub_2365B0914();
}

uint64_t sub_23651BB0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23651BB78()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23651BB84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v2 = sub_2365B01D0();
  v3 = sub_2365B047C();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8 - v4;
  v6 = *(_QWORD *)(v2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v8 - v4, a1, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v2);
  return sub_23651B81C((uint64_t)v5);
}

uint64_t sub_23651BC54@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  char *v20;

  v20 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v5 = sub_2365B01D0();
  v6 = sub_2365B047C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v19 - v12;
  v14 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v19 - v15;
  sub_23651B784((uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    v18 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v5);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v5);
    sub_23651B81C((uint64_t)v10);
    sub_2365B01C4();
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v5);
    v18 = 0;
  }
  *v20 = v18;
  return result;
}

uint64_t sub_23651BDFC()
{
  return sub_23651BE3C();
}

uint64_t sub_23651BE3C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v2 = sub_2365B01D0();
  v3 = sub_2365B047C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v19[0] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v19 - v8;
  v10 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)v19 - v11;
  sub_23651B784((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v2) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v2);
  if ((v0[112] & 1) != 0)
  {
    v16 = type metadata accessor for ValueIntercept.DroppedPending(0, v1, v14, v15);
    MEMORY[0x23B7F5164](&protocol conformance descriptor for ValueIntercept<A>.DroppedPending, v16);
    v19[3] = swift_allocError();
    sub_2365B01B8();
    v17 = v19[0];
    (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v10 + 56))(v19[0], 1, 1, v2);
    sub_23651B81C(v17);
  }
  else
  {
    v18 = type metadata accessor for ValueIntercept.DroppedNew(0, v1, v14, v15);
    MEMORY[0x23B7F5164](&protocol conformance descriptor for ValueIntercept<A>.DroppedNew, v18);
    swift_allocError();
    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v2);
}

uint64_t type metadata accessor for ValueIntercept(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueIntercept);
}

uint64_t sub_23651C070(uint64_t a1)
{
  return sub_23651BB84(a1);
}

uint64_t ValueIntercept.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  sub_2365B01D0();
  v2 = sub_2365B047C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ValueIntercept.__deallocating_deinit()
{
  ValueIntercept.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t ValueIntercept.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23651C11C()
{
  return ValueIntercept.unownedExecutor.getter();
}

BOOL ValueIntercept.Decision.isConsumed.getter()
{
  _BYTE *v0;

  return (*v0 & 1) == 0;
}

uint64_t ValueIntercept.Decision.isRejected.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_23651C150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23651C15C(a1, a2, a3, (void (*)(_BYTE *))ValueIntercept.Decision.hash(into:));
}

uint64_t sub_23651C15C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_2365B09E0();
  a4(v6);
  return sub_2365B0A34();
}

void sub_23651C198()
{
  JUMPOUT(0x23B7F5164);
}

void sub_23651C1A8()
{
  JUMPOUT(0x23B7F5164);
}

uint64_t sub_23651C1B8()
{
  uint64_t result;
  unint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  sub_2365B01D0();
  result = sub_2365B047C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ValueIntercept()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ValueIntercept.isWaitingForInterception.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ValueIntercept.__allocating_init(dropBehavior:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ValueIntercept.waitForIntercept()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 152) + *(_QWORD *)(*(_QWORD *)v1 + 152));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_236477420;
  return v6(a1);
}

uint64_t dispatch thunk of ValueIntercept.offerToIntercept(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ValueIntercept.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t type metadata accessor for ValueIntercept.DropBehavior(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueIntercept.DropBehavior);
}

uint64_t type metadata accessor for ValueIntercept.DroppedNew(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueIntercept.DroppedNew);
}

uint64_t type metadata accessor for ValueIntercept.DroppedPending(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueIntercept.DroppedPending);
}

uint64_t sub_23651C32C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23651C378 + 4 * byte_2365BF425[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23651C3AC + 4 * byte_2365BF420[v4]))();
}

uint64_t sub_23651C3AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23651C3B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23651C3BCLL);
  return result;
}

uint64_t sub_23651C3C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23651C3D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23651C3D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23651C3DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for ValueIntercept.Decision(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueIntercept.Decision);
}

void *_objcCodable.wrappedValue.getter()
{
  void *v0;
  id v1;

  v0 = (void *)sub_23651332C();
  v1 = v0;
  return v0;
}

void _objcCodable.wrappedValue.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

BOOL static _objcCodable.== infix(_:_:)(void **a1, void **a2)
{
  void *v2;
  void *v3;
  _BOOL8 result;
  BOOL v5;
  id v6;
  id v7;
  char v8;

  v2 = *a1;
  v3 = *a2;
  result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    v6 = v3;
    v7 = v2;
    v8 = sub_2365B044C();

    return v8 & 1;
  }
  return result;
}

uint64_t (*_objcCodable.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t static _objcCodableDictionary<>.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;

  v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_unknownObjectRetain_n();
      v3 = sub_2365B0014();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      v3 = 0;
    }
  }
  else
  {
    v3 = v2 == 0;
  }
  return v3 & 1;
}

uint64_t NSObject<>.into()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  type metadata accessor for DefaultObjcArchiver();
  result = type metadata accessor for DefaultObjcUnarchiver();
  *a1 = v1;
  return result;
}

id _customObjcCodable.wrappedValue.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t (*_customObjcCodable.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _customObjcCodable.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_23651C5CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  type metadata accessor for DefaultObjcArchiver();
  result = type metadata accessor for DefaultObjcUnarchiver();
  *a2 = a1;
  return result;
}

id sub_23651C600@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  void *v5;

  type metadata accessor for _objcCodable(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  v5 = (void *)sub_23651332C();
  *a4 = v5;
  return v5;
}

void sub_23651C648(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  _objcCodable.wrappedValue.setter(v1);
}

uint64_t _objcCodable.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;

  type metadata accessor for DefaultObjcArchiver();
  result = type metadata accessor for DefaultObjcUnarchiver();
  *a2 = a1;
  return result;
}

uint64_t sub_23651C6A8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x5664657070617277 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23651C744()
{
  return 0x5664657070617277;
}

uint64_t sub_23651C764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23651C6A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23651C790@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_236452AEC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23651C7BC(uint64_t a1)
{
  MEMORY[0x23B7F5164](&unk_2365BFB48, a1);
  return sub_2365B0AD0();
}

uint64_t sub_23651C7F0(uint64_t a1)
{
  MEMORY[0x23B7F5164](&unk_2365BFB48, a1);
  return sub_2365B0ADC();
}

uint64_t _objcCodable.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];

  v15 = *(_QWORD *)(a2 + 16);
  v6 = type metadata accessor for _objcCodable.CodingKeys(255, v15, a3, a4);
  MEMORY[0x23B7F5164](&unk_2365BFB48, v6);
  v7 = sub_2365B0854();
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - v8;
  v10 = *v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0AAC();
  v17[2] = v10;
  v11 = type metadata accessor for DefaultObjcArchiver();
  v12 = type metadata accessor for DefaultObjcUnarchiver();
  v13 = type metadata accessor for _customObjcCodable(0, v15, v11, v12);
  v17[0] = &protocol witness table for DefaultObjcArchiver;
  MEMORY[0x23B7F5164](&protocol conformance descriptor for <> _customObjcCodable<A, B, C>, v13, v17);
  sub_2365B0824();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v9, v7);
}

void _objcCodable.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _UNKNOWN **v21;
  id v22;

  v19 = a5;
  v20 = a2;
  v7 = type metadata accessor for _objcCodable.CodingKeys(255, a2, a3, a4);
  MEMORY[0x23B7F5164](&unk_2365BFB48, v7);
  v8 = sub_2365B07AC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - v10;
  type metadata accessor for DefaultObjcArchiver();
  type metadata accessor for DefaultObjcUnarchiver();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0A7C();
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = v19;
    v13 = type metadata accessor for DefaultObjcArchiver();
    v14 = type metadata accessor for DefaultObjcUnarchiver();
    v15 = type metadata accessor for _customObjcCodable(0, v20, v13, v14);
    v21 = &protocol witness table for DefaultObjcUnarchiver;
    MEMORY[0x23B7F5164](&protocol conformance descriptor for <> _customObjcCodable<A, B, C>, v15, &v21);
    sub_2365B0770();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v16 = v22;
    v17 = v22;
    *v12 = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  }
}

void sub_23651CB4C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _objcCodable.init(from:)(a1, *(_QWORD *)(a2 + 16), a3, a4, a5);
}

uint64_t sub_23651CB64(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _objcCodable.encode(to:)(a1, a2, a3, a4);
}

uint64_t _customObjcCodable<>.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v4;
  void *v6;
  uint64_t (*v7)(void);
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _BYTE v14[24];
  uint64_t v15;

  v6 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0A94();
  if (v6)
  {
    v7 = *(uint64_t (**)(void))(a3 + 16);
    v8 = v6;
    v9 = v7();
    if (v4)
    {

    }
    else
    {
      v11 = v9;
      v12 = v10;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      sub_2364A5874();
      sub_2365B08F0();

      sub_236468D44(v11, v12);
    }
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    sub_2365B08FC();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_23651CCB0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return _customObjcCodable<>.encode(to:)(a1, a2, *(_QWORD *)(a3 - 8));
}

uint64_t _customObjcCodable<>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t *v19;
  _QWORD v20[2];
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[4];
  uint64_t v27;

  v22 = a4;
  v23 = a3;
  v27 = a2;
  v8 = sub_2365B05B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0A64();
  if (v5)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20[1] = v11;
  v21 = a1;
  v12 = v27;
  v20[0] = v9;
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  sub_2364A58B8();
  sub_2365B08D8();
  v13 = v24;
  v14 = v25;
  sub_236468CBC(v24, v25);
  v15 = static ObjcUnarchiver.unarchivedObject<A>(assumingType:from:backing:)(v12, v13, v14, (uint64_t)v21, v23, v12, v22);
  sub_236468D44(v13, v14);
  if (!v15)
  {
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v19 = v12;
    sub_2365B059C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v20[0] + 104))(v19, *MEMORY[0x24BEE26E0], v8);
    swift_willThrow();
    sub_236468D44(v13, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    a1 = v21;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_236468D44(v13, v14);
  v16 = (uint64_t)v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  *a5 = v15;
  return __swift_destroy_boxed_opaque_existential_1(v16);
}

uint64_t sub_23651D020@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return _customObjcCodable<>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 32), *(_QWORD *)(a3 - 8), a4);
}

uint64_t static _objcCodable<>.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  char v3;

  if (*a1)
    v2 = *a2 == 0;
  else
    v2 = 1;
  if (v2)
    v3 = 0;
  else
    v3 = sub_2365AFFE4();
  return v3 & 1;
}

uint64_t sub_23651D098(_QWORD *a1, _QWORD *a2)
{
  return static _objcCodable<>.< infix(_:_:)(a1, a2);
}

uint64_t _objcCodable.description.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  if (!*v0)
    return 7104878;
  v1 = objc_msgSend(*v0, sel_description);
  v2 = sub_2365B005C();

  return v2;
}

uint64_t _objcCodable.debugDescription.getter()
{
  sub_2365B047C();
  return sub_2365B0470();
}

BOOL sub_23651D15C(void **a1, void **a2)
{
  return static _objcCodable.== infix(_:_:)(a1, a2);
}

uint64_t _objcCodable.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 16);
  sub_2365B047C();
  MEMORY[0x23B7F5164](MEMORY[0x24BEE5BD8], v2);
  return sub_2365B0488();
}

uint64_t _objcCodable.hashValue.getter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD v4[10];

  v4[9] = *v1;
  sub_2365B09E0();
  _objcCodable.hash(into:)((uint64_t)v4, a1);
  return sub_2365B0A34();
}

uint64_t sub_23651D228(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_2365B09E0();
  _objcCodable.hash(into:)((uint64_t)v4, a2);
  return sub_2365B0A34();
}

uint64_t _objcCodableDictionary.wrappedValue.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t _objcCodableDictionary.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_unknownObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*_objcCodableDictionary.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _objcCodableDictionary.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t _objcCodableDictionary.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v11[2];
  _BYTE v12[24];
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0A94();
  if (v2)
  {
    v3 = (void *)objc_opt_self();
    v11[0] = 0;
    swift_unknownObjectRetain();
    v4 = objc_msgSend(v3, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v11);
    v5 = v11[0];
    if (v4)
    {
      v6 = (void *)sub_2365AF948();
      v8 = v7;

      v11[0] = v6;
      v11[1] = v8;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
      sub_2364A5874();
      sub_2365B08F0();
      swift_unknownObjectRelease();
      sub_236468D44((uint64_t)v6, (unint64_t)v8);
    }
    else
    {
      v9 = v5;
      sub_2365AF8F4();

      swift_willThrow();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    sub_2365B08FC();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_23651D454(_QWORD *a1)
{
  return _objcCodableDictionary.encode(to:)(a1);
}

uint64_t _objcCodableDictionary.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t inited;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD v26[4];
  _QWORD v27[8];

  v25 = a2;
  v6 = sub_2365B05B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0A64();
  if (!v3)
  {
    v23 = v9;
    v24 = a1;
    v21 = v7;
    v10 = v25;
    v22 = a3;
    __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    sub_2364A58B8();
    sub_2365B08D8();
    v11 = v26[0];
    v12 = v26[1];
    sub_236531DE8();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_2365BF6B0;
    *(_QWORD *)(inited + 32) = sub_236465960(0, &qword_2563EA390);
    *(_QWORD *)(inited + 40) = sub_236465960(0, (unint64_t *)&qword_2563EA398);
    *(_QWORD *)(inited + 48) = sub_236465960(0, &qword_2563EA3A0);
    *(_QWORD *)(inited + 56) = sub_236465960(0, &qword_2563EA3A8);
    *(_QWORD *)(inited + 64) = sub_236465960(0, &qword_2563EA3B0);
    *(_QWORD *)(inited + 72) = sub_236465960(0, &qword_2563EA3B8);
    *(_QWORD *)(inited + 80) = sub_236465960(0, &qword_2563EA3C0);
    *(_QWORD *)(inited + 88) = sub_236465960(0, &qword_2563EA3C8);
    *(_QWORD *)(inited + 96) = sub_236465960(0, &qword_2563EA3D0);
    *(_QWORD *)(inited + 104) = sub_236465960(0, &qword_2563EA3D8);
    sub_236465960(0, qword_2563EA3E0);
    sub_236468CBC(v11, v12);
    sub_23651D9A8(inited);
    swift_bridgeObjectRelease();
    sub_2365B03BC();
    sub_236468D44(v11, v12);
    swift_bridgeObjectRelease();
    if (v26[3])
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_236468D44(v11, v12);
        v17 = v27[7];
        v14 = v22;
        v15 = (uint64_t)v24;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
        *v14 = v17;
        return __swift_destroy_boxed_opaque_existential_1(v15);
      }
    }
    else
    {
      sub_2364D283C((uint64_t)v26);
    }
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v19 = v10;
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v19, *MEMORY[0x24BEE26E0], v6);
    swift_willThrow();
    sub_236468D44(v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    a1 = v24;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_23651D9A8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_2364A42A4(0, v1, 0);
    v4 = a1 + 32;
    v2 = v9;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA5F0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA5F8);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2364A42A4(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_2364A42A4(v5 > 1, v6 + 1, 1);
        v2 = v9;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      *(_QWORD *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23651DAD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return _objcCodableDictionary.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

uint64_t sub_23651DAEC(_QWORD *a1, uint64_t *a2)
{
  return static _objcCodableDictionary<>.== infix(_:_:)(a1, a2);
}

uint64_t _objcCodableDictionary<>.hash(into:)()
{
  sub_2365B047C();
  return sub_2365B0488();
}

uint64_t _objcCodableDictionary<>.hashValue.getter()
{
  sub_2365B09E0();
  sub_2365B047C();
  sub_2365B0488();
  return sub_2365B0A34();
}

uint64_t sub_23651DBBC()
{
  return _objcCodableDictionary<>.hashValue.getter();
}

uint64_t sub_23651DBC4()
{
  return _objcCodableDictionary<>.hash(into:)();
}

uint64_t sub_23651DBCC()
{
  sub_2365B09E0();
  _objcCodableDictionary<>.hash(into:)();
  return sub_2365B0A34();
}

uint64_t type metadata accessor for _objcCodable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _objcCodable);
}

uint64_t type metadata accessor for _objcCodable.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _objcCodable.CodingKeys);
}

uint64_t type metadata accessor for _customObjcCodable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _customObjcCodable);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_23651DC68()
{
  JUMPOUT(0x23B7F5164);
}

uint64_t sub_23651DC78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x23B7F5164](&protocol conformance descriptor for <> _objcCodableDictionary<A>, a1, &v4);
}

uint64_t sub_23651DCB8()
{
  return 8;
}

_QWORD *sub_23651DCC4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void **sub_23651DCD8(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void sub_23651DD04(id *a1)
{

}

void **sub_23651DD0C(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **sub_23651DD40(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

_QWORD *sub_23651DD70(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_23651DD9C()
{
  return swift_unknownObjectRelease();
}

_QWORD *sub_23651DDA4(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_QWORD *sub_23651DDDC(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t type metadata accessor for _objcCodableDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _objcCodableDictionary);
}

uint64_t sub_23651DE18(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23651DE58 + 4 * byte_2365BF6C0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23651DE78 + 4 * byte_2365BF6C5[v4]))();
}

_BYTE *sub_23651DE58(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23651DE78(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23651DE80(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23651DE88(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23651DE90(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23651DE98(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_23651DEA4()
{
  JUMPOUT(0x23B7F5164);
}

void sub_23651DEB4()
{
  JUMPOUT(0x23B7F5164);
}

void sub_23651DEC4()
{
  JUMPOUT(0x23B7F5164);
}

id static AISAppleIDSetupError.createError(code:message:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v5 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA600);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2365B48E0;
  *(_QWORD *)(inited + 32) = sub_2365B005C();
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = a2;
  *(_QWORD *)(inited + 56) = a3;
  *(_QWORD *)(inited + 64) = sub_2365B005C();
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = a2;
  *(_QWORD *)(inited + 88) = a3;
  swift_bridgeObjectRetain_n();
  v9 = sub_236466AAC(inited);
  v10 = qword_2365BFC90[v5];
  sub_23646731C(v9);
  swift_bridgeObjectRelease();
  v11 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  v12 = (void *)sub_2365B0038();
  v13 = (void *)sub_2365AFF48();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithDomain_code_userInfo_, v12, v10, v13);

  return v14;
}

uint64_t AISAppleIDSetupError.rawValue.getter()
{
  char *v0;

  return qword_2365BFC90[*v0];
}

uint64_t static AISAppleIDSetupError.reason(_:)(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  id v15;
  uint64_t v17;
  __int128 v18;
  __int128 v19;

  v2 = objc_msgSend(a1, sel_userInfo);
  v3 = sub_2365AFF60();

  v4 = sub_2365B005C();
  if (!*(_QWORD *)(v3 + 16) || (v6 = sub_236468628(v4, v5), (v7 & 1) == 0))
  {
    v18 = 0u;
    v19 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_23646A9F4(*(_QWORD *)(v3 + 56) + 32 * v6, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v19 + 1))
  {
LABEL_7:
    sub_2364D283C((uint64_t)&v18);
    goto LABEL_8;
  }
  if (swift_dynamicCast())
    return v17;
LABEL_8:
  v8 = objc_msgSend(a1, sel_userInfo);
  v9 = sub_2365AFF60();

  v10 = sub_2365B005C();
  if (*(_QWORD *)(v9 + 16) && (v12 = sub_236468628(v10, v11), (v13 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)&v18);
  }
  else
  {
    v18 = 0u;
    v19 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v19 + 1))
  {
    sub_2364D283C((uint64_t)&v18);
    goto LABEL_16;
  }
  if (!swift_dynamicCast())
  {
LABEL_16:
    v15 = objc_msgSend(a1, sel_debugDescription);
    v14 = sub_2365B005C();

    return v14;
  }
  return v17;
}

AppleIDSetup::AISAppleIDSetupError_optional __swiftcall AISAppleIDSetupError.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if (rawValue <= -1003)
  {
    if (rawValue == -1101)
    {
      *v1 = 4;
      return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
    }
    if (rawValue == -1100)
    {
      *v1 = 3;
      return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
    }
LABEL_12:
    *v1 = 5;
    return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
  }
  if (rawValue == -1000)
  {
    *v1 = 0;
    return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
  }
  if (rawValue == -1001)
  {
    *v1 = 1;
    return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
  }
  if (rawValue != -1002)
    goto LABEL_12;
  *v1 = 2;
  return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
}

BOOL sub_23651E2C4(char *a1, char *a2)
{
  return qword_2365BFC90[*a1] == qword_2365BFC90[*a2];
}

uint64_t sub_23651E2E8()
{
  sub_2365B09E0();
  sub_2365B09F8();
  return sub_2365B0A34();
}

uint64_t sub_23651E334()
{
  return sub_2365B09F8();
}

uint64_t sub_23651E368()
{
  sub_2365B09E0();
  sub_2365B09F8();
  return sub_2365B0A34();
}

AppleIDSetup::AISAppleIDSetupError_optional sub_23651E3B0(Swift::Int *a1)
{
  return AISAppleIDSetupError.init(rawValue:)(*a1);
}

void sub_23651E3B8(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_2365BFC90[*v1];
}

unint64_t sub_23651E3D4()
{
  unint64_t result;

  result = qword_2563EA608;
  if (!qword_2563EA608)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for AISAppleIDSetupError, &type metadata for AISAppleIDSetupError);
    atomic_store(result, (unint64_t *)&qword_2563EA608);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AISAppleIDSetupError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23651E464 + 4 * byte_2365BFBA5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23651E498 + 4 * byte_2365BFBA0[v4]))();
}

uint64_t sub_23651E498(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23651E4A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23651E4A8);
  return result;
}

uint64_t sub_23651E4B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23651E4BCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23651E4C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23651E4C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AISAppleIDSetupError()
{
  return &type metadata for AISAppleIDSetupError;
}

uint64_t static SymptomReport.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_2365B08CC() & 1) != 0)
    return sub_23651F4EC(v4, v5, v2, v3);
  else
    return 0;
}

AISSymptomReport __swiftcall SymptomReport.into()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  NSString *v4;
  NSArray *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unsigned int v10;
  id v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  void *v17;
  objc_class *v18;
  AISSymptomReport result;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v3 = (objc_class *)sub_2365B0608();
    v7 = *(_QWORD *)(v1 + 16);
    v8 = (unsigned __int8 *)(v1 + 120);
    while (v7)
    {
      v13 = *((_QWORD *)v8 - 1);
      if (v13 <= 3)
        v9 = qword_2365BFF20[v13];
      else
        v9 = 0;
      v10 = *v8;
      v8 += 96;
      v11 = objc_allocWithZone((Class)AISSymptom);
      swift_bridgeObjectRetain();
      v12 = (void *)sub_2365B0038();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_initWithAltDSID_priority_problemFlag_errorInfo_, v12, v10, v9, sub_2365B092C());
      swift_unknownObjectRelease();

      sub_2365B05F0();
      sub_2365B0614();
      sub_2365B0620();
      v3 = (objc_class *)sub_2365B05FC();
      --v7;
      if (!--v2)
      {
        swift_release();
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_10:
    v14 = SymptomReport.combinedLegacyProblemFlags.getter();
    v15 = objc_allocWithZone((Class)AISSymptomReport);
    v16 = (void *)sub_2365B0038();
    swift_bridgeObjectRelease();
    sub_2364BECB8();
    v17 = (void *)sub_2365B0164();
    swift_bridgeObjectRelease();
    v18 = (objc_class *)objc_msgSend(v15, sel_initWithAltDSID_symptoms_combinedProblemFlags_, v16, v17, v14);

    v3 = v18;
  }
  result._combinedProblemFlags = v6;
  result._symptoms = v5;
  result._altDSID = v4;
  result.super.isa = v3;
  return result;
}

uint64_t SymptomReport.altDSID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymptomReport.accountID.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *(_QWORD *)a1 = *v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  return swift_bridgeObjectRetain();
}

unint64_t SymptomReport.unorderedSymptoms.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  swift_retain();
  swift_retain();
  return sub_2364A29B0(v1, v2);
}

uint64_t SymptomReport.symptoms.getter()
{
  return swift_retain();
}

BOOL SymptomReport.isHealthy.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) == 0;
}

BOOL SymptomReport.needsRepair.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16) != 0;
}

unint64_t SymptomReport.allSymptomKinds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  sub_23651FA60();
  swift_retain();
  swift_retain();
  result = sub_2365B0338();
  v9 = result;
  if (v2)
  {
    v4 = 0;
    v5 = 112;
    while (v4 < *(_QWORD *)(v1 + 16))
    {
      v6 = *(_QWORD *)(v1 + v5);
      ++v4;
      sub_236487E58(v6);
      sub_2364D61B8(&v8, v6);
      result = sub_236487E68(v8);
      v5 += 96;
      if (v2 == v4)
      {
        swift_release();
        swift_release();
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    v7 = result;
    swift_release();
    swift_release();
    return v7;
  }
  return result;
}

unint64_t SymptomReport.combinedLegacyProblemFlags.getter()
{
  unint64_t result;
  int64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;

  result = SymptomReport.allSymptomKinds.getter();
  v1 = 0;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  if (v6)
    goto LABEL_6;
LABEL_7:
  v10 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    if (v10 < v7)
    {
      v11 = *(_QWORD *)(v3 + 8 * v10);
      ++v1;
      if (v11)
        goto LABEL_24;
      v1 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_28;
      v11 = *(_QWORD *)(v3 + 8 * v1);
      if (v11)
        goto LABEL_24;
      v1 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_28;
      v11 = *(_QWORD *)(v3 + 8 * v1);
      if (v11)
        goto LABEL_24;
      v1 = v10 + 3;
      if (v10 + 3 >= v7)
        goto LABEL_28;
      v11 = *(_QWORD *)(v3 + 8 * v1);
      if (v11)
        goto LABEL_24;
      v1 = v10 + 4;
      if (v10 + 4 >= v7)
        goto LABEL_28;
      v11 = *(_QWORD *)(v3 + 8 * v1);
      if (v11)
      {
LABEL_24:
        v6 = (v11 - 1) & v11;
        for (i = __clz(__rbit64(v11)) + (v1 << 6); ; i = v8 | (v1 << 6))
        {
          v13 = *(_QWORD *)(*(_QWORD *)(result + 48) + 8 * i);
          if (v13 > 3)
          {
            if (!v6)
              goto LABEL_7;
          }
          else
          {
            v2 |= qword_2365BFF20[v13];
            if (!v6)
              goto LABEL_7;
          }
LABEL_6:
          v8 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v12 = v10 + 5;
      if (v12 < v7)
      {
        v11 = *(_QWORD *)(v3 + 8 * v12);
        if (v11)
        {
          v1 = v12;
          goto LABEL_24;
        }
        while (1)
        {
          v1 = v12 + 1;
          if (__OFADD__(v12, 1))
            goto LABEL_30;
          if (v1 >= v7)
            break;
          v11 = *(_QWORD *)(v3 + 8 * v1);
          ++v12;
          if (v11)
            goto LABEL_24;
        }
      }
    }
LABEL_28:
    swift_release();
    return v2;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t SymptomReport.init(altDSID:symptoms:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;

  v7 = sub_23651FAA4(a3);
  v8 = sub_23651FB98();
  v9 = sub_23651FBA0((uint64_t)v7, 0, 1, v8);
  v10 = v7[2];
  result = swift_bridgeObjectRelease();
  if (v10 <= 0xF)
  {
    result = swift_release();
    v9 = 0;
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v9;
  a4[3] = v7;
  return result;
}

double SymptomReport.combine(with:)@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  double result;

  v5 = a1[2];
  v4 = a1[3];
  v7 = *v2;
  v6 = v2[1];
  v8 = v7 == *a1 && v6 == a1[1];
  if (v8 || (sub_2365B08CC() & 1) != 0)
  {
    *a2 = v7;
    a2[1] = v6;
    a2[2] = v5;
    a2[3] = v4;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

uint64_t SymptomReport.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  sub_236483B50(a1, v3);
  swift_release();
  return swift_release();
}

uint64_t sub_23651EC74()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x44495344746C61;
}

uint64_t sub_23651ECB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2365208C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23651ECD8()
{
  sub_2365203CC();
  return sub_2365B0AD0();
}

uint64_t sub_23651ED00()
{
  sub_2365203CC();
  return sub_2365B0ADC();
}

uint64_t SymptomReport.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA618);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v10 = *(_QWORD *)(v1 + 24);
  v11 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365203CC();
  sub_2365B0AAC();
  LOBYTE(v13) = 0;
  sub_2365B0800();
  if (!v2)
  {
    v13 = v11;
    v14 = v10;
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA628);
    sub_236520410(&qword_2563EA630, (uint64_t (*)(void))sub_23648B5BC, MEMORY[0x24BE18B68]);
    sub_2365B0824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t SymptomReport.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 24);
  sub_2365B09E0();
  sub_2365B008C();
  sub_236483B50((uint64_t)v3, v1);
  return sub_2365B0A34();
}

uint64_t SymptomReport.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA638);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365203CC();
  sub_2365B0A7C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v15[0]) = 0;
  v9 = sub_2365B074C();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA628);
  v16 = 1;
  sub_236520410(&qword_2563EA640, (uint64_t (*)(void))sub_23648B644, MEMORY[0x24BE18B78]);
  swift_bridgeObjectRetain();
  sub_2365B0770();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v15[0];
  v13 = v15[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  swift_retain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23651F0EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SymptomReport.init(from:)(a1, a2);
}

uint64_t sub_23651F100(_QWORD *a1)
{
  return SymptomReport.encode(to:)(a1);
}

uint64_t sub_23651F114(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (sub_2365B08CC() & 1) != 0)
    return sub_23651F4EC(v4, v5, v2, v3);
  else
    return 0;
}

uint64_t sub_23651F18C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 24);
  sub_2365B09E0();
  sub_2365B008C();
  sub_236483B50((uint64_t)v3, v1);
  return sub_2365B0A34();
}

uint64_t sub_23651F1EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  sub_2365B008C();
  return sub_236483B50(a1, v3);
}

uint64_t sub_23651F21C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 24);
  sub_2365B09E0();
  sub_2365B008C();
  sub_236483B50((uint64_t)v3, v1);
  return sub_2365B0A34();
}

uint64_t SymptomReport.description.getter()
{
  _QWORD v1[2];

  strcpy((char *)v1, "SymptomReport(");
  swift_bridgeObjectRetain();
  IdMSAccount.ID.description.getter();
  sub_2365B00B0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2365B00B0();
  SymptomReport.allSymptomKinds.getter();
  sub_23651FA60();
  sub_2365B032C();
  sub_2365B00B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2365B00B0();
  return v1[0];
}

uint64_t SymptomReport.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = SymptomReport.description.getter();
  swift_retain();
  swift_retain();
  sub_236520198(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  sub_2365B00B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23651F438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = SymptomReport.description.getter();
  swift_retain();
  swift_retain();
  sub_236520198(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  sub_2365B00B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_23651F4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v5 = *(_QWORD *)(a4 + 16);
  v6 = *(_QWORD *)(a2 + 16);
  v42 = a4 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v7 = v6;
  v8 = 0;
  v9 = a2 + 64;
  v43 = v5;
  while (1)
  {
    v62 = v7;
    if (v8 == v5)
    {
      v56 = 0;
      v10 = v5;
      v11 = 0;
      v50 = 0;
      v51 = 0;
      v12 = 0;
      v54 = 0;
      v52 = 0;
      v53 = 0;
      v49 = 0;
      v55 = 0;
      v63 = 0;
      v64 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = 0;
      if (!v7)
        goto LABEL_30;
      goto LABEL_8;
    }
    if (v8 >= v5)
      goto LABEL_42;
    v24 = v42 + 96 * v8;
    v56 = *(unsigned __int8 *)(v24 + 88);
    v25 = *(_QWORD *)(v24 + 72);
    v59 = *(_QWORD *)(v24 + 80);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = *(_QWORD *)(v24 + 64);
    v28 = *(_QWORD *)(v24 + 40);
    v29 = *(_QWORD *)(v24 + 48);
    v30 = *(_QWORD *)(v24 + 24);
    v31 = *(_QWORD *)(v24 + 32);
    v32 = *(_QWORD *)(v24 + 8);
    v55 = *(_QWORD *)(v24 + 16);
    v63 = *(_QWORD *)v24;
    swift_bridgeObjectRetain();
    v64 = v32;
    v33 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = v26;
    v11 = v59;
    swift_bridgeObjectRetain();
    sub_236487E58(v59);
    v7 = v62;
    if (!v62)
      break;
    v49 = v30;
    v50 = v27;
    v51 = v25;
    v52 = v31;
    v53 = v33;
    v54 = v29;
    v10 = v8 + 1;
    v12 = v34;
LABEL_8:
    if (!v7)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x23651FA50);
    }
    v45 = v10;
    v48 = *(unsigned __int8 *)(v9 + 56);
    v14 = *(_QWORD *)(v9 + 40);
    v13 = *(_QWORD *)(v9 + 48);
    v16 = *(_QWORD *)(v9 + 24);
    v47 = *(_QWORD *)(v9 + 32);
    v18 = *(_QWORD *)(v9 + 8);
    v20 = *(_QWORD *)(v9 - 8);
    v57 = *(_QWORD *)v9;
    v60 = *(_QWORD *)(v9 + 16);
    v22 = *(_QWORD *)(v9 - 24);
    v46 = *(_QWORD *)(v9 - 16);
    v23 = *(_QWORD *)(v9 - 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_236487E58(v13);
    if (!v64)
    {
      v19 = v57;
      v17 = v60;
      v21 = v46;
      v15 = v47;
      goto LABEL_30;
    }
    if (!v22)
    {
      v39 = v54;
      v31 = v52;
      v40 = v53;
      v27 = v50;
      v25 = v51;
      v30 = v49;
      goto LABEL_38;
    }
    v44 = v12;
    if ((v63 != v23 || v64 != v22) && (sub_2365B08CC() & 1) == 0)
      goto LABEL_34;
    switch(v11)
    {
      case 0uLL:
        if (v13)
          goto LABEL_33;
        goto LABEL_23;
      case 1uLL:
        if (v13 != 1)
          goto LABEL_33;
        goto LABEL_23;
      case 2uLL:
        if (v13 != 2)
          goto LABEL_33;
LABEL_23:
        sub_236487E58(v13);
        sub_236487E68(v11);
        v36 = v11;
        goto LABEL_26;
      case 3uLL:
        if (v13 != 3)
          goto LABEL_33;
        v36 = 3;
LABEL_26:
        sub_236487E68(v13);
        sub_236487E68(v36);
        goto LABEL_27;
      default:
        if (v13 < 4)
        {
LABEL_33:
          sub_236487E58(v13);
          sub_236487E58(v11);
          sub_236487E68(v11);
          sub_236487E68(v13);
LABEL_34:
          sub_236520A00(v23, v22, v46, v20, v57, v18, v60, v16, v47, v14, v13);
          sub_236520A00(v63, v64, v55, v49, v52, v53, v54, v44, v50, v51, v11);
LABEL_35:
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          return 0;
        }
        sub_236487E58(v13);
        sub_236487E58(v11);
        sub_236487E58(v13);
        sub_236487E58(v11);
        v35 = sub_2365A28C4(v11, v13);
        sub_236487E68(v11);
        sub_236487E68(v13);
        sub_236487E68(v13);
        sub_236487E68(v11);
        if ((v35 & 1) == 0)
          goto LABEL_34;
LABEL_27:
        sub_236520A00(v23, v22, v46, v20, v57, v18, v60, v16, v47, v14, v13);
        sub_236520A00(v63, v64, v55, v49, v52, v53, v54, v44, v50, v51, v11);
        v7 = v62 - 1;
        v9 += 96;
        v5 = v43;
        v8 = v45;
        if (v56 != v48)
          goto LABEL_35;
        break;
    }
  }
  v40 = v33;
  v39 = v29;
  v12 = v34;
  if (v64)
  {
LABEL_38:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_236520A00(v63, v64, v55, v30, v31, v40, v39, v12, v27, v25, v11);
    return 0;
  }
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
LABEL_30:
  v58 = v19;
  v61 = v17;
  v37 = v21;
  v38 = v15;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v22)
  {
    sub_236520A00(v23, v22, v37, v20, v58, v18, v61, v16, v38, v14, v13);
    return 0;
  }
  return 1;
}

unint64_t sub_23651FA60()
{
  unint64_t result;

  result = qword_2563EA610;
  if (!qword_2563EA610)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Kind, &type metadata for Symptom.Kind);
    atomic_store(result, (unint64_t *)&qword_2563EA610);
  }
  return result;
}

_QWORD *sub_23651FAA4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA678);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 96);
  v5 = sub_23651FEBC(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_23646C39C();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_23651FB98()
{
  return 0;
}

uint64_t sub_23651FBA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = MEMORY[0x23B7F3B5C](*(_QWORD *)(a1 + 16));
  v9 = 0;
  if ((a3 & 1) != 0)
    v10 = 0;
  else
    v10 = a2;
  if (v10 <= v8)
    v10 = v8;
  if (v10 <= a4)
    v11 = a4;
  else
    v11 = v10;
  if (v11 >= 5)
  {
    v9 = MEMORY[0x23B7F3B68]();
    sub_23651FC24(a1, (_QWORD *)(v9 + 16), v9 + 32);
  }
  return v9;
}

uint64_t sub_23651FC24(uint64_t result, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v16 = *(_QWORD *)(result + 16);
  if (v16)
  {
    v4 = 0;
    v15 = result + 32;
    do
    {
      v5 = *(_QWORD *)(v15 + 96 * v4 + 80);
      sub_2365B09E0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_236487E58(v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2365B008C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      switch(v5)
      {
        case 0uLL:
        case 1uLL:
        case 2uLL:
        case 3uLL:
          sub_2365B09F8();
          break;
        default:
          sub_2365B09F8();
          swift_bridgeObjectRetain();
          sub_2364830F0((uint64_t)v20, v5);
          sub_236487E68(v5);
          break;
      }
      sub_2365B0A04();
      v6 = sub_2365B0A34();
      v7 = 1 << *a2;
      v8 = __OFSUB__(v7, 1);
      v9 = v7 - 1;
      if (v8)
      {
        __break(1u);
        JUMPOUT(0x23651FEACLL);
      }
      v19 = v4;
      v10 = v9 & v6;
      v11 = sub_2365AFB28();
      v18 = v12;
      v14 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_236487E68(v5);
      v20[0] = a2;
      v20[1] = a3;
      v20[2] = v10;
      v21 = v11;
      v22 = v18;
      v23 = v14;
      v24 = 0;
      while (v21)
        sub_2365AFB40();
      result = sub_2365AFB34();
      ++v4;
    }
    while (v19 + 1 != v16);
  }
  return result;
}

_QWORD *sub_23651FEBC(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a4 + 56);
  v4 = a4 + 56;
  v5 = v6;
  v31 = v4;
  v7 = -1 << *(_BYTE *)(v4 - 24);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & v5;
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_39:
    *result = a4;
    result[1] = v31;
    result[2] = ~v7;
    result[3] = v12;
    result[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v11 = a2;
  v28 = -1 << *(_BYTE *)(v4 - 24);
  v29 = result;
  v12 = 0;
  v13 = 0;
  v30 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v15 = v14 | (v12 << 6);
  while (1)
  {
    ++v13;
    v19 = *(_QWORD *)(a4 + 48) + 96 * v15;
    v20 = *(_QWORD *)(v19 + 8);
    v21 = *(_QWORD *)(v19 + 16);
    v22 = *(_QWORD *)(v19 + 72);
    v23 = *(_QWORD *)(v19 + 80);
    v24 = *(_BYTE *)(v19 + 88);
    v25 = *(_OWORD *)(v19 + 24);
    v26 = *(_OWORD *)(v19 + 40);
    v27 = *(_OWORD *)(v19 + 56);
    *(_QWORD *)v11 = *(_QWORD *)v19;
    *(_QWORD *)(v11 + 8) = v20;
    *(_QWORD *)(v11 + 16) = v21;
    *(_OWORD *)(v11 + 24) = v25;
    *(_OWORD *)(v11 + 40) = v26;
    *(_OWORD *)(v11 + 56) = v27;
    *(_QWORD *)(v11 + 72) = v22;
    *(_QWORD *)(v11 + 80) = v23;
    *(_BYTE *)(v11 + 88) = v24;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_236487E58(v23);
      goto LABEL_38;
    }
    v11 += 96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (_QWORD *)sub_236487E58(v23);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v16 >= v30)
      goto LABEL_33;
    v17 = *(_QWORD *)(v31 + 8 * v16);
    if (!v17)
    {
      v12 += 2;
      if (v16 + 1 >= v30)
      {
        v9 = 0;
        v12 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v31 + 8 * v12);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v30)
          goto LABEL_33;
        v17 = *(_QWORD *)(v31 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v12 = v16 + 3;
        if (v16 + 3 < v30)
        {
          v17 = *(_QWORD *)(v31 + 8 * v12);
          if (v17)
          {
LABEL_14:
            v16 = v12;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v30)
          {
LABEL_33:
            v9 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v31 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v30)
              {
                v9 = 0;
                v12 = v30 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v31 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v9 = 0;
        v12 = v16 + 2;
      }
LABEL_37:
      v10 = v13;
LABEL_38:
      v7 = v28;
      result = v29;
      goto LABEL_39;
    }
LABEL_18:
    v9 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v12 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_236520198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_retain();
    swift_retain();
    v4 = (uint64_t *)(a2 + 64);
    v5 = 1;
    do
    {
      v8 = *(v4 - 4);
      v9 = *(v4 - 3);
      v10 = *(v4 - 1);
      v11 = v4[1];
      v19 = *v4;
      v20 = *(v4 - 2);
      v12 = v4[3];
      v13 = v4[5];
      v17 = v4[4];
      v18 = v4[2];
      v14 = v4[6];
      v16 = *((_BYTE *)v4 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_236487E58(v14);
      if ((v5 & 1) == 0)
        sub_2365B00B0();
      v4 += 12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA670);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_2365B6A20;
      *(_QWORD *)(v6 + 56) = &type metadata for Symptom;
      v7 = swift_allocObject();
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v7 + 16) = v8;
      *(_QWORD *)(v7 + 24) = v9;
      *(_QWORD *)(v7 + 32) = v20;
      *(_QWORD *)(v7 + 40) = v10;
      *(_QWORD *)(v7 + 48) = v19;
      *(_QWORD *)(v7 + 56) = v11;
      *(_QWORD *)(v7 + 64) = v18;
      *(_QWORD *)(v7 + 72) = v12;
      *(_QWORD *)(v7 + 80) = v17;
      *(_QWORD *)(v7 + 88) = v13;
      *(_QWORD *)(v7 + 96) = v14;
      *(_BYTE *)(v7 + 104) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_236487E58(v14);
      sub_2365B09D4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_236487E68(v14);
      v5 = 0;
      --v2;
    }
    while (v2);
    swift_release();
    swift_release();
  }
  sub_2365B00B0();
  return 91;
}

unint64_t sub_2365203CC()
{
  unint64_t result;

  result = qword_2563EA620;
  if (!qword_2563EA620)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BFED0, &type metadata for SymptomReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA620);
  }
  return result;
}

uint64_t sub_236520410(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563EA628);
    v8 = a2();
    result = MEMORY[0x23B7F5164](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236520478(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_2364854A0();
  a1[2] = sub_23648518C();
  result = sub_2365204AC();
  a1[3] = result;
  return result;
}

unint64_t sub_2365204AC()
{
  unint64_t result;

  result = qword_2563EA648;
  if (!qword_2563EA648)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SymptomReport, &type metadata for SymptomReport);
    atomic_store(result, (unint64_t *)&qword_2563EA648);
  }
  return result;
}

unint64_t sub_2365204F4()
{
  unint64_t result;

  result = qword_2563EA650;
  if (!qword_2563EA650)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SymptomReport, &type metadata for SymptomReport);
    atomic_store(result, (unint64_t *)&qword_2563EA650);
  }
  return result;
}

uint64_t destroy for SymptomReport()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

_QWORD *initializeWithCopy for SymptomReport(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SymptomReport(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SymptomReport(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymptomReport(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymptomReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymptomReport()
{
  return &type metadata for SymptomReport;
}

uint64_t storeEnumTagSinglePayload for SymptomReport.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_236520768 + 4 * byte_2365BFCBD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23652079C + 4 * byte_2365BFCB8[v4]))();
}

uint64_t sub_23652079C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2365207A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2365207ACLL);
  return result;
}

uint64_t sub_2365207B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2365207C0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2365207C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2365207CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SymptomReport.CodingKeys()
{
  return &type metadata for SymptomReport.CodingKeys;
}

unint64_t sub_2365207EC()
{
  unint64_t result;

  result = qword_2563EA658;
  if (!qword_2563EA658)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BFEA8, &type metadata for SymptomReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA658);
  }
  return result;
}

unint64_t sub_236520834()
{
  unint64_t result;

  result = qword_2563EA660;
  if (!qword_2563EA660)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BFE18, &type metadata for SymptomReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA660);
  }
  return result;
}

unint64_t sub_23652087C()
{
  unint64_t result;

  result = qword_2563EA668;
  if (!qword_2563EA668)
  {
    result = MEMORY[0x23B7F5164](&unk_2365BFE40, &type metadata for SymptomReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA668);
  }
  return result;
}

uint64_t sub_2365208C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44495344746C61 && a2 == 0xE700000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002365CD3D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2365209AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) >= 4uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_236520A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  unint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_236487E68(a11);
  }
  return result;
}

uint64_t CUPasswordType.into(withPassword:)@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t result;

  v4 = 1;
  result = 4;
  switch(a2)
  {
    case 1:
      break;
    case 2:
      result = 6;
      break;
    case 3:
      result = 8;
      break;
    case 4:
      v4 = 0;
      result = 4;
      break;
    case 5:
      if (a1)
        result = sub_2365B0098();
      else
        result = 0;
      v4 = 0;
      break;
    case 7:
      v4 = 2;
      result = 1;
      break;
    case 8:
      result = 2;
      goto LABEL_11;
    default:
      result = 0;
LABEL_11:
      v4 = 2;
      break;
  }
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v4;
  return result;
}

uint64_t *DiscoveryModel.CodeType.replacingUnknown(with:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int v4;

  v3 = *v2;
  v4 = *((unsigned __int8 *)v2 + 8);
  if (v4 >= 2 && v3 == 0)
  {
    LOBYTE(v4) = *((_BYTE *)result + 8);
    v3 = *result;
  }
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t DiscoveryModel.CodeType.into()()
{
  uint64_t v0;
  unint64_t v1;
  unsigned int *v2;

  v1 = *(_QWORD *)v0;
  if (!*(_BYTE *)(v0 + 8))
  {
    v1 -= 4;
    if (v1 < 5)
    {
      v2 = (unsigned int *)&unk_2365BFF54;
      return v2[v1];
    }
    return 5;
  }
  if (*(_BYTE *)(v0 + 8) != 1)
  {
    v2 = (unsigned int *)&unk_2365BFF48;
    return v2[v1];
  }
  v1 -= 4;
  if (v1 >= 5)
    return 5;
  v2 = (unsigned int *)&unk_2365BFF68;
  return v2[v1];
}

uint64_t AISChildSetupFlowResult.error.getter()
{
  return 0;
}

id AISChildSetupFlowResult.authResponse.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR___AISChildSetupFlowResult_authResponse);
}

id AISChildSetupFlowResult.__allocating_init(authResponse:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___AISChildSetupFlowResult_authResponse] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISChildSetupFlowResult.init(authResponse:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR___AISChildSetupFlowResult_authResponse] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISChildSetupFlowResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AISChildSetupFlowResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AISChildSetupFlowResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AISChildSetupFlowResult()
{
  return objc_opt_self();
}

uint64_t method lookup function for AISChildSetupFlowResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AISChildSetupFlowResult.__allocating_init(authResponse:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

id CBDevice.into()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int16 v8;
  unsigned __int8 v9;
  unsigned int v10;
  id result;

  v3 = objc_msgSend(v1, sel_identifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_2365B005C();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v8 = (unsigned __int16)objc_msgSend(v1, sel_proximityServicePSM);
  v9 = objc_msgSend(v1, sel_nearbyActionType);
  v10 = objc_msgSend(v1, sel_nearbyActionFlags);
  result = objc_msgSend(v1, sel_nearbyActionDeviceClass);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_WORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 20) = v9;
  *(_DWORD *)(a1 + 24) = v10;
  *(_WORD *)(a1 + 28) = result;
  return result;
}

uint64_t BLEDevice.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BLEDevice.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BLEDevice.identifier.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.proximityServicePSM.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 16);
}

uint64_t BLEDevice.proximityServicePSM.setter(uint64_t result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*BLEDevice.proximityServicePSM.modify())()
{
  return nullsub_1;
}

void BLEDevice.nearbyActionPayload.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  __int16 v3;

  v2 = *(_DWORD *)(v1 + 24);
  v3 = *(_WORD *)(v1 + 28);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 20);
  *(_DWORD *)(a1 + 4) = v2;
  *(_WORD *)(a1 + 8) = v3;
}

uint64_t BLEDevice.nearbyActionPayload.setter(uint64_t result)
{
  uint64_t v1;
  int v2;
  __int16 v3;

  v2 = *(_DWORD *)(result + 4);
  v3 = *(_WORD *)(result + 8);
  *(_BYTE *)(v1 + 20) = *(_BYTE *)result;
  *(_DWORD *)(v1 + 24) = v2;
  *(_WORD *)(v1 + 28) = v3;
  return result;
}

uint64_t (*BLEDevice.nearbyActionPayload.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.init(identifier:proximityServicePSM:nearbyActionPayload:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5;
  int v6;
  __int16 v7;

  v5 = *a4;
  v6 = *((_DWORD *)a4 + 1);
  v7 = *((_WORD *)a4 + 4);
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_WORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 20) = v5;
  *(_DWORD *)(a5 + 24) = v6;
  *(_WORD *)(a5 + 28) = v7;
  return result;
}

uint64_t BLEDevice.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2365B0A04();
  }
  sub_2365B0A10();
  sub_2365B0A04();
  sub_2365B0A1C();
  sub_2365B0A04();
  return sub_2365B0A04();
}

uint64_t sub_236520FE4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x696669746E656469;
}

uint64_t sub_23652104C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23652237C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236521070()
{
  sub_236521CDC();
  return sub_2365B0AD0();
}

uint64_t sub_236521098()
{
  sub_236521CDC();
  return sub_2365B0ADC();
}

uint64_t BLEDevice.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  int v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  int v13;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;
  char v24;
  int v25;
  char v26;
  char v27;
  char v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA6B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(unsigned __int16 *)(v1 + 16);
  v7 = *(unsigned __int8 *)(v1 + 20);
  v18 = *(_DWORD *)(v1 + 24);
  v19 = v7;
  v8 = *(unsigned __int8 *)(v1 + 28);
  v16 = *(unsigned __int8 *)(v1 + 29);
  v17 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236521CDC();
  sub_2365B0AAC();
  v28 = 0;
  v9 = v20;
  sub_2365B07C4();
  if (!v9)
  {
    v11 = v16;
    v10 = v17;
    v13 = v18;
    v12 = v19;
    v27 = 1;
    sub_2365B083C();
    v21 = v12;
    v22 = v13;
    v23 = v10;
    v24 = v11;
    v26 = 2;
    sub_236521D20();
    sub_2365B0824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t BLEDevice.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_2365B09E0();
  sub_2365B0A04();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
  }
  sub_2365B0A10();
  sub_2365B0A04();
  sub_2365B0A1C();
  sub_2365B0A04();
  sub_2365B0A04();
  return sub_2365B0A34();
}

uint64_t BLEDevice.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  int v14;
  __int16 v15;
  _BYTE v16[8];
  int v17;
  __int16 v18;
  int v19;
  char v20;
  char v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA6C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236521CDC();
  sub_2365B0A7C();
  if (!v2)
  {
    v22 = 0;
    v9 = sub_2365B0710();
    v11 = v10;
    v21 = 1;
    swift_bridgeObjectRetain();
    v19 = sub_2365B0788();
    v20 = 2;
    sub_236521D64();
    sub_2365B0770();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v16[4];
    v14 = v17;
    v15 = v18;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v11;
    *(_WORD *)(a2 + 16) = v19;
    *(_BYTE *)(a2 + 20) = v13;
    *(_DWORD *)(a2 + 24) = v14;
    *(_WORD *)(a2 + 28) = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_236521518@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BLEDevice.init(from:)(a1, a2);
}

uint64_t sub_23652152C(_QWORD *a1)
{
  return BLEDevice.encode(to:)(a1);
}

uint64_t sub_23652154C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_2365B09E0();
  sub_2365B0A04();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
  }
  sub_2365B0A10();
  sub_2365B0A04();
  sub_2365B0A1C();
  sub_2365B0A04();
  sub_2365B0A04();
  return sub_2365B0A34();
}

uint64_t BLEDevice.NearbyActionPayload.type.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t BLEDevice.NearbyActionPayload.type.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*BLEDevice.NearbyActionPayload.type.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.NearbyActionPayload.flags.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 4);
}

uint64_t BLEDevice.NearbyActionPayload.flags.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*BLEDevice.NearbyActionPayload.flags.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.NearbyActionPayload.deviceClass.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t BLEDevice.NearbyActionPayload.deviceClass.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*BLEDevice.NearbyActionPayload.deviceClass.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.NearbyActionPayload.problemFlags.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t BLEDevice.NearbyActionPayload.problemFlags.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = result;
  return result;
}

uint64_t (*BLEDevice.NearbyActionPayload.problemFlags.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.NearbyActionPayload.init(type:flags:deviceClass:problemFlags:)@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_BYTE *)a5 = result;
  *(_DWORD *)(a5 + 4) = a2;
  *(_BYTE *)(a5 + 8) = a3;
  *(_BYTE *)(a5 + 9) = a4;
  return result;
}

uint64_t BLEDevice.NearbyActionPayload.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  int v6;
  char v8;
  char v9;
  _BYTE v10[24];
  uint64_t v11;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0A58();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    v5 = sub_2365B0878();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    v6 = sub_2365B0884();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    v8 = sub_2365B0878();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    v9 = sub_2365B0878();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    *(_BYTE *)a2 = v5;
    *(_DWORD *)(a2 + 4) = v6;
    *(_BYTE *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 9) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t BLEDevice.NearbyActionPayload.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v3[24];
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0A88();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  sub_2365B0890();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_2365B089C();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_2365B0890();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_2365B0890();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t BLEDevice.NearbyActionPayload.hash(into:)()
{
  sub_2365B0A04();
  sub_2365B0A1C();
  sub_2365B0A04();
  return sub_2365B0A04();
}

uint64_t BLEDevice.NearbyActionPayload.hashValue.getter()
{
  sub_2365B09E0();
  sub_2365B0A04();
  sub_2365B0A1C();
  sub_2365B0A04();
  sub_2365B0A04();
  return sub_2365B0A34();
}

uint64_t sub_236521A34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BLEDevice.NearbyActionPayload.init(from:)(a1, a2);
}

uint64_t sub_236521A48(_QWORD *a1)
{
  return BLEDevice.NearbyActionPayload.encode(to:)(a1);
}

uint64_t sub_236521A60()
{
  sub_2365B09E0();
  sub_2365B0A04();
  sub_2365B0A1C();
  sub_2365B0A04();
  sub_2365B0A04();
  return sub_2365B0A34();
}

uint64_t sub_236521AE4()
{
  sub_2365B0A04();
  sub_2365B0A1C();
  sub_2365B0A04();
  return sub_2365B0A04();
}

uint64_t sub_236521B40()
{
  sub_2365B09E0();
  sub_2365B0A04();
  sub_2365B0A1C();
  sub_2365B0A04();
  sub_2365B0A04();
  return sub_2365B0A34();
}

BOOL _s12AppleIDSetup9BLEDeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  _BOOL8 result;
  char v16;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int16 *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 20);
  v6 = *(_DWORD *)(a1 + 24);
  v7 = *(unsigned __int8 *)(a1 + 28);
  v8 = *(unsigned __int8 *)(a1 + 29);
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(unsigned __int16 *)(a2 + 16);
  v11 = *(unsigned __int8 *)(a2 + 20);
  v12 = *(_DWORD *)(a2 + 24);
  v13 = *(unsigned __int8 *)(a2 + 28);
  v14 = *(unsigned __int8 *)(a2 + 29);
  if (!v3)
  {
    result = 0;
    if (v9)
      return result;
    goto LABEL_10;
  }
  if (!v9)
    return 0;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || v3 != v9)
  {
    v16 = sub_2365B08CC();
    result = 0;
    if ((v16 & 1) == 0)
      return result;
LABEL_10:
    if (v4 != v10)
      return result;
    return v5 == v11 && v6 == v12 && v7 == v13 && v8 == v14;
  }
  if (v4 != v10)
    return 0;
  return v5 == v11 && v6 == v12 && v7 == v13 && v8 == v14;
}

BOOL _s12AppleIDSetup9BLEDeviceV19NearbyActionPayloadV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && *((_DWORD *)a1 + 1) == *((_DWORD *)a2 + 1) && a1[8] == a2[8] && a1[9] == a2[9];
}

unint64_t sub_236521CDC()
{
  unint64_t result;

  result = qword_2563EA6B8;
  if (!qword_2563EA6B8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C0298, &type metadata for BLEDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA6B8);
  }
  return result;
}

unint64_t sub_236521D20()
{
  unint64_t result;

  result = qword_2563EA6C0;
  if (!qword_2563EA6C0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for BLEDevice.NearbyActionPayload, &type metadata for BLEDevice.NearbyActionPayload);
    atomic_store(result, (unint64_t *)&qword_2563EA6C0);
  }
  return result;
}

unint64_t sub_236521D64()
{
  unint64_t result;

  result = qword_2563EA6D0;
  if (!qword_2563EA6D0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for BLEDevice.NearbyActionPayload, &type metadata for BLEDevice.NearbyActionPayload);
    atomic_store(result, (unint64_t *)&qword_2563EA6D0);
  }
  return result;
}

uint64_t sub_236521DA8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_236521DC4, (uint64_t (*)(void))sub_236521E08, (uint64_t (*)(void))sub_236521E4C);
}

unint64_t sub_236521DC4()
{
  unint64_t result;

  result = qword_2563EA6D8;
  if (!qword_2563EA6D8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for BLEDevice, &type metadata for BLEDevice);
    atomic_store(result, (unint64_t *)&qword_2563EA6D8);
  }
  return result;
}

unint64_t sub_236521E08()
{
  unint64_t result;

  result = qword_2563EA6E0;
  if (!qword_2563EA6E0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for BLEDevice, &type metadata for BLEDevice);
    atomic_store(result, (unint64_t *)&qword_2563EA6E0);
  }
  return result;
}

unint64_t sub_236521E4C()
{
  unint64_t result;

  result = qword_2563EA6E8;
  if (!qword_2563EA6E8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for BLEDevice, &type metadata for BLEDevice);
    atomic_store(result, (unint64_t *)&qword_2563EA6E8);
  }
  return result;
}

unint64_t sub_236521E94()
{
  unint64_t result;

  result = qword_2563EA6F0;
  if (!qword_2563EA6F0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for BLEDevice, &type metadata for BLEDevice);
    atomic_store(result, (unint64_t *)&qword_2563EA6F0);
  }
  return result;
}

uint64_t sub_236521ED8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_236521D64, (uint64_t (*)(void))sub_236521D20, (uint64_t (*)(void))sub_236521EF4);
}

unint64_t sub_236521EF4()
{
  unint64_t result;

  result = qword_2563EA6F8;
  if (!qword_2563EA6F8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for BLEDevice.NearbyActionPayload, &type metadata for BLEDevice.NearbyActionPayload);
    atomic_store(result, (unint64_t *)&qword_2563EA6F8);
  }
  return result;
}

unint64_t sub_236521F3C()
{
  unint64_t result;

  result = qword_2563EA700;
  if (!qword_2563EA700)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for BLEDevice.NearbyActionPayload, &type metadata for BLEDevice.NearbyActionPayload);
    atomic_store(result, (unint64_t *)&qword_2563EA700);
  }
  return result;
}

uint64_t initializeWithCopy for BLEDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 20) = *(_QWORD *)(a2 + 20);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BLEDevice(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 28) = *(_BYTE *)(a2 + 28);
  *(_BYTE *)(a1 + 29) = *(_BYTE *)(a2 + 29);
  return a1;
}

__n128 __swift_memcpy30_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 14) = *(_OWORD *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BLEDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for BLEDevice(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 30))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BLEDevice(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 30) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 30) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BLEDevice()
{
  return &type metadata for BLEDevice;
}

uint64_t __swift_memcpy10_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BLEDevice.NearbyActionPayload(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BLEDevice.NearbyActionPayload(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 10) = v3;
  return result;
}

ValueMetadata *type metadata accessor for BLEDevice.NearbyActionPayload()
{
  return &type metadata for BLEDevice.NearbyActionPayload;
}

uint64_t storeEnumTagSinglePayload for BLEDevice.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_236522224 + 4 * byte_2365BFFD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_236522258 + 4 * byte_2365BFFD0[v4]))();
}

uint64_t sub_236522258(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236522260(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236522268);
  return result;
}

uint64_t sub_236522274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23652227CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_236522280(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236522288(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BLEDevice.CodingKeys()
{
  return &type metadata for BLEDevice.CodingKeys;
}

unint64_t sub_2365222A8()
{
  unint64_t result;

  result = qword_2563EA708;
  if (!qword_2563EA708)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C0270, &type metadata for BLEDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA708);
  }
  return result;
}

unint64_t sub_2365222F0()
{
  unint64_t result;

  result = qword_2563EA710;
  if (!qword_2563EA710)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C01E0, &type metadata for BLEDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA710);
  }
  return result;
}

unint64_t sub_236522338()
{
  unint64_t result;

  result = qword_2563EA718;
  if (!qword_2563EA718)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C0208, &type metadata for BLEDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA718);
  }
  return result;
}

uint64_t sub_23652237C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002365CD470 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002365CD490)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2365224D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_2365B0A40();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_2365B01B8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_2365B01C4();
  }
}

uint64_t XPCSession.send<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_236522654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v3;
  v4 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = v1;
  *(_QWORD *)(v3 + 56) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_2365226FC;
  return sub_2365B0914();
}

uint64_t sub_2365226FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t XPCSession.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_236522790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  sub_2365AFCFC();
  *v4 = v0;
  v4[1] = sub_2364CF13C;
  return sub_2365B0914();
}

uint64_t sub_236522840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  _QWORD v19[2];

  v19[0] = a3;
  v19[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v12 = sub_2365B01D0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v19 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v19 - v14, a1, v12);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a4;
  *((_QWORD *)v17 + 3) = a5;
  *((_QWORD *)v17 + 4) = a6;
  *((_QWORD *)v17 + 5) = a7;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], v15, v12);
  sub_2365AFC84();
  return swift_release();
}

uint64_t sub_236522990(uint64_t a1)
{
  uint64_t *v1;

  return sub_236522840(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_2365229A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C68);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_2365AFC78();
  return swift_release();
}

uint64_t sub_236522AC0(uint64_t a1)
{
  return sub_2365229A0(a1);
}

uint64_t sub_236522ACC(uint64_t a1, uint64_t a2)
{
  return sub_236522D4C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BEE6760], &qword_2563EA738, &qword_2563E9C68);
}

uint64_t XPCSession.send(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_236522B04()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_2365AFCD8();
  *v2 = v0;
  v2[1] = sub_236522BA4;
  return sub_2365B0914();
}

uint64_t sub_236522BA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_236522C18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA740);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_2365AFC6C();
  return swift_release();
}

uint64_t sub_236522CFC(uint64_t a1)
{
  return sub_236522C18(a1);
}

unint64_t sub_236522D04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2563E9C70;
  if (!qword_2563E9C70)
  {
    v1 = sub_2365AFCCC();
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE6688], v1);
    atomic_store(result, &qword_2563E9C70);
  }
  return result;
}

uint64_t sub_236522D4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a5;
  v25 = a2;
  v8 = sub_2365AFCCC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23646C4B0(a1, (uint64_t)v18, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v19(v11, v18, v8);
    sub_236522D04();
    v20 = swift_allocError();
    v19(v21, v11, v8);
    v26 = v20;
    __swift_instantiateConcreteTypeFromMangledName(v24);
    return sub_2365B01B8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    __swift_instantiateConcreteTypeFromMangledName(v24);
    return sub_2365B01C4();
  }
}

uint64_t sub_236522EF0()
{
  return objectdestroy_44Tm(&qword_2563EA740);
}

uint64_t sub_236522EFC(uint64_t a1)
{
  return sub_236522F40(a1, &qword_2563EA740, (uint64_t (*)(_QWORD))MEMORY[0x24BEE66A8], &qword_2563EA748);
}

uint64_t sub_236522F18()
{
  return objectdestroy_44Tm(&qword_2563E9C68);
}

uint64_t sub_236522F24(uint64_t a1)
{
  return sub_236522F40(a1, &qword_2563E9C68, (uint64_t (*)(_QWORD))MEMORY[0x24BEE6760], &qword_2563EA738);
}

uint64_t sub_236522F40(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return sub_236522D4C(a1, v4 + ((v9 + 16) & ~v9), a3, a4, a2);
}

uint64_t sub_236522FA8()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v1 = sub_2365B01D0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_236523028(uint64_t a1)
{
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_2542A8310);
  v2 = sub_2365B01D0();
  return sub_2365224D0(a1, v2);
}

uint64_t HandshakeCommand.Request.isKeepAlive.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t HandshakeCommand.Request.isKeepAlive.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.isKeepAlive.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.minSupportedVersion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t HandshakeCommand.Request.minSupportedVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.minSupportedVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.maxSupportedVersion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t HandshakeCommand.Request.maxSupportedVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.maxSupportedVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.deviceInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_23648DBC0(v2, v3, v4, v5, v6, v7);
}

__n128 HandshakeCommand.Request.deviceInfo.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_BYTE *)a1 + 64);
  sub_23648DCEC(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
  *(_OWORD *)(v1 + 8) = v8;
  *(_OWORD *)(v1 + 24) = v7;
  result = v6;
  *(__n128 *)(v1 + 40) = v6;
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v3;
  *(_BYTE *)(v1 + 72) = v4;
  return result;
}

uint64_t (*HandshakeCommand.Request.deviceInfo.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.selfAccountId.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  v5 = v1[13];
  v6 = v1[14];
  v7 = v1[15];
  v8 = v1[16];
  v9 = v1[17];
  v10 = v1[18];
  v11 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_23644F440(v2, v3);
}

__n128 HandshakeCommand.Request.selfAccountId.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v8 = *a1;
  v6 = a1[2];
  v7 = a1[1];
  v5 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  v3 = *((_QWORD *)a1 + 9);
  sub_23644F52C(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  *(_OWORD *)(v1 + 80) = v8;
  *(_OWORD *)(v1 + 96) = v7;
  result = v5;
  *(_OWORD *)(v1 + 112) = v6;
  *(__n128 *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = v2;
  *(_QWORD *)(v1 + 152) = v3;
  return result;
}

uint64_t (*HandshakeCommand.Request.selfAccountId.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.accountIDsByService.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 HandshakeCommand.Request.init(isKeepAlive:minSupportedVersion:maxSupportedVersion:deviceInfo:selfAccountId:accountIDsByService:)@<Q0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 result;

  v7 = *(_BYTE *)(a4 + 64);
  *(_BYTE *)a7 = a1;
  *(_BYTE *)(a7 + 1) = a2;
  *(_BYTE *)(a7 + 2) = a3;
  v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a7 + 8) = *(_OWORD *)a4;
  *(_OWORD *)(a7 + 24) = v8;
  v9 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a7 + 40) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a7 + 56) = v9;
  *(_BYTE *)(a7 + 72) = v7;
  v10 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a7 + 80) = *(_OWORD *)a5;
  *(_OWORD *)(a7 + 96) = v10;
  v11 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a7 + 112) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a7 + 128) = v11;
  result = *(__n128 *)(a5 + 64);
  *(__n128 *)(a7 + 144) = result;
  *(_QWORD *)(a7 + 160) = a6;
  return result;
}

uint64_t HandshakeCommand.Request.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[10];
  uint64_t v12;

  type metadata accessor for V1Command(0);
  if (swift_getEnumCaseMultiPayload())
  {
    v4 = type metadata accessor for V1Command;
  }
  else
  {
    type metadata accessor for V1Command.Request(0);
    if (!swift_getEnumCaseMultiPayload())
    {
      v6 = *(_OWORD *)(a1 + 144);
      v11[8] = *(_OWORD *)(a1 + 128);
      v11[9] = v6;
      v12 = *(_QWORD *)(a1 + 160);
      v7 = *(_OWORD *)(a1 + 80);
      v11[4] = *(_OWORD *)(a1 + 64);
      v11[5] = v7;
      v8 = *(_OWORD *)(a1 + 112);
      v11[6] = *(_OWORD *)(a1 + 96);
      v11[7] = v8;
      v9 = *(_OWORD *)(a1 + 16);
      v11[0] = *(_OWORD *)a1;
      v11[1] = v9;
      v10 = *(_OWORD *)(a1 + 48);
      v11[2] = *(_OWORD *)(a1 + 32);
      v11[3] = v10;
      nullsub_1(v11);
      return sub_236523444((uint64_t)v11, a2);
    }
    v4 = type metadata accessor for V1Command.Request;
  }
  sub_236465A18(a1, v4);
  sub_23648DCEC(0, 0, 0, 0, 0, 0);
  sub_23644F52C(0, 0);
  sub_23652340C((uint64_t)v11);
  return sub_236523444((uint64_t)v11, a2);
}

double sub_23652340C(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  return result;
}

uint64_t sub_236523444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA750);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t HandshakeCommand.Request.into()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 144) = v2;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(v1 + 160);
  v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v3;
  v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  type metadata accessor for V1Command.Request(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t HandshakeCommand.Request.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[6];
  v5 = v1[11];
  v7 = v1[10];
  v8 = v1[20];
  sub_2365B0A04();
  sub_2365B0A04();
  sub_2365B0A04();
  if (v3)
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    sub_2365B0A04();
    if (v4)
      SetupReport.LocaleInfo.hash(into:)();
  }
  sub_2365B0A04();
  if (v5)
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    sub_23644F52C(v7, v5);
    if (v8)
    {
LABEL_6:
      sub_2365B0A04();
      swift_bridgeObjectRetain();
      sub_2364AEB08(a1, v8);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_2365B0A04();
    if (v8)
      goto LABEL_6;
  }
  return sub_2365B0A04();
}

uint64_t sub_236523768(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2365237A4 + 4 * byte_2365C02F0[a1]))(0x6C417065654B7369, 0xEB00000000657669);
}

unint64_t sub_2365237A4()
{
  return 0xD000000000000013;
}

uint64_t sub_236523818()
{
  unsigned __int8 *v0;

  return sub_236523768(*v0);
}

uint64_t sub_236523820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236527398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236523844()
{
  sub_2365256B4();
  return sub_2365B0AD0();
}

uint64_t sub_23652386C()
{
  sub_2365256B4();
  return sub_2365B0ADC();
}

uint64_t HandshakeCommand.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  char v47;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA758);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *(unsigned __int8 *)(v1 + 1);
  v34 = *(unsigned __int8 *)(v1 + 2);
  v7 = *(_QWORD *)(v1 + 8);
  v32 = *(_QWORD *)(v1 + 16);
  v33 = v7;
  v25 = *(_QWORD *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v30 = *(_QWORD *)(v1 + 40);
  v31 = v8;
  v9 = *(_QWORD *)(v1 + 48);
  v28 = *(_QWORD *)(v1 + 56);
  v29 = v9;
  v27 = *(_QWORD *)(v1 + 64);
  v26 = *(unsigned __int8 *)(v1 + 72);
  v15 = *(_QWORD *)(v1 + 80);
  v16 = *(_QWORD *)(v1 + 88);
  v24 = *(_QWORD *)(v1 + 96);
  v23 = *(_QWORD *)(v1 + 104);
  v22 = *(_QWORD *)(v1 + 112);
  v21 = *(_QWORD *)(v1 + 120);
  v20 = *(_QWORD *)(v1 + 128);
  v19 = *(_QWORD *)(v1 + 136);
  v18 = *(_QWORD *)(v1 + 144);
  v10 = *(_QWORD *)(v1 + 160);
  v17 = *(_QWORD *)(v1 + 152);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365256B4();
  sub_2365B0AAC();
  LOBYTE(v36) = 0;
  v11 = v35;
  sub_2365B080C();
  if (!v11)
  {
    v13 = v32;
    v12 = v33;
    LOBYTE(v36) = 1;
    sub_2365B0830();
    LOBYTE(v36) = 2;
    sub_2365B0830();
    v36 = v12;
    v37 = v13;
    v38 = v25;
    v39 = v31;
    v40 = v30;
    v41 = v29;
    v42 = v28;
    v43 = v27;
    LOBYTE(v44) = v26;
    v47 = 3;
    sub_23649053C();
    sub_2365B07E8();
    v36 = v15;
    v37 = v16;
    v38 = v24;
    v39 = v23;
    v40 = v22;
    v41 = v21;
    v42 = v20;
    v43 = v19;
    v44 = v18;
    v45 = v17;
    v47 = 4;
    sub_2364A51A8();
    sub_2365B07E8();
    v36 = v10;
    v47 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA768);
    sub_2365256F8();
    sub_2365B07E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HandshakeCommand.Request.hashValue.getter()
{
  _BYTE v1[72];

  sub_2365B09E0();
  HandshakeCommand.Request.hash(into:)((uint64_t)v1);
  return sub_2365B0A34();
}

uint64_t *HandshakeCommand.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  int v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  _BYTE v69[40];
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA778);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2365256B4();
  sub_2365B0A7C();
  if (v2)
  {
    v46 = v2;
    v55 = 0;
    v53 = 0;
    v54 = 0uLL;
    v50 = 0;
    v51 = 0;
    v52 = 0uLL;
    v48 = 0;
    v49 = 0;
    v47 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    sub_23648DCEC(0, 0, v51, 0, 0, 0);
    return (uint64_t *)sub_23644F52C(v52, *((uint64_t *)&v52 + 1));
  }
  else
  {
    LOBYTE(v67) = 0;
    v10 = sub_2365B0758();
    LOBYTE(v67) = 1;
    v12 = sub_2365B077C();
    v44 = v10;
    LOBYTE(v67) = 2;
    v13 = sub_2365B077C();
    LOBYTE(v56) = 3;
    sub_236490580();
    sub_2365B0734();
    v38 = v13;
    v39 = v12;
    v37 = a2;
    v14 = v67;
    v15 = v68;
    LOBYTE(v56) = 4;
    v43 = v70;
    v40 = *(_OWORD *)v69;
    v41 = *(_OWORD *)&v69[16];
    v42 = *(_QWORD *)&v69[32];
    sub_23648DBC0(v67, *((uint64_t *)&v67 + 1), v68, *(uint64_t *)v69, *(uint64_t *)&v69[8], *(uint64_t *)&v69[16]);
    sub_2364A5230();
    sub_2365B0734();
    v51 = v15;
    v35 = *((_QWORD *)&v14 + 1);
    v36 = v14;
    v52 = v67;
    v16 = *(_QWORD *)v69;
    v53 = v68;
    v54 = *(_OWORD *)&v69[8];
    v17 = *(_QWORD *)&v69[32];
    v55 = *(_QWORD *)&v69[24];
    v19 = v70;
    v18 = v71;
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA768);
    v47 = v18;
    v81 = 5;
    v48 = v19;
    v49 = v17;
    v50 = v16;
    sub_23644F440(v52, *((uint64_t *)&v52 + 1));
    sub_236525774();
    sub_2365B0734();
    v46 = 0;
    v44 &= 1u;
    LOBYTE(v17) = v44;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v34 = v82;
    LOBYTE(v56) = v17;
    BYTE1(v56) = v39;
    BYTE2(v56) = v38;
    *((_QWORD *)&v56 + 1) = v36;
    *(_QWORD *)&v57 = v35;
    v20 = v52;
    *((_QWORD *)&v57 + 1) = v51;
    v58 = v40;
    v59 = v41;
    *(_QWORD *)&v60 = v42;
    BYTE8(v60) = v43;
    v21 = *((_QWORD *)&v52 + 1);
    v61 = v52;
    *(_QWORD *)&v62 = v53;
    *((_QWORD *)&v62 + 1) = v50;
    v63 = v54;
    *(_QWORD *)&v64 = v55;
    *((_QWORD *)&v64 + 1) = v49;
    *(_QWORD *)&v65 = v48;
    *((_QWORD *)&v65 + 1) = v47;
    v66 = v82;
    sub_236525830((uint64_t *)&v56);
    sub_23644F52C(v20, v21);
    v22 = v35;
    v23 = v36;
    v24 = v51;
    v25 = v40;
    v26 = v41;
    v27 = v42;
    sub_23648DCEC(v36, v35, v51, v40, *((uint64_t *)&v40 + 1), v41);
    v28 = v65;
    v29 = v37;
    *(_OWORD *)(v37 + 128) = v64;
    *(_OWORD *)(v29 + 144) = v28;
    *(_QWORD *)(v29 + 160) = v66;
    v30 = v61;
    *(_OWORD *)(v29 + 64) = v60;
    *(_OWORD *)(v29 + 80) = v30;
    v31 = v63;
    *(_OWORD *)(v29 + 96) = v62;
    *(_OWORD *)(v29 + 112) = v31;
    v32 = v57;
    *(_OWORD *)v29 = v56;
    *(_OWORD *)(v29 + 16) = v32;
    v33 = v59;
    *(_OWORD *)(v29 + 32) = v58;
    *(_OWORD *)(v29 + 48) = v33;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    LOBYTE(v67) = v44;
    BYTE1(v67) = v39;
    BYTE2(v67) = v38;
    *((_QWORD *)&v67 + 1) = v23;
    v68 = v22;
    *(_QWORD *)v69 = v24;
    *(_OWORD *)&v69[8] = v25;
    *(_OWORD *)&v69[24] = v26;
    v70 = v27;
    LOBYTE(v71) = v43;
    v72 = v52;
    v73 = v53;
    v74 = v50;
    v75 = v54;
    v76 = v55;
    v77 = v49;
    v78 = v48;
    v79 = v47;
    v80 = v34;
    return sub_2365258E4((uint64_t *)&v67);
  }
}

uint64_t sub_23652423C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v2 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 144) = v2;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(v1 + 160);
  v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v3;
  v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  type metadata accessor for V1Command.Request(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t *sub_2365242B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HandshakeCommand.Request.init(from:)(a1, a2);
}

uint64_t sub_2365242CC(_QWORD *a1)
{
  return HandshakeCommand.Request.encode(to:)(a1);
}

uint64_t sub_2365242E4()
{
  _BYTE v1[72];

  sub_2365B09E0();
  HandshakeCommand.Request.hash(into:)((uint64_t)v1);
  return sub_2365B0A34();
}

uint64_t sub_236524324()
{
  _BYTE v1[72];

  sub_2365B09E0();
  HandshakeCommand.Request.hash(into:)((uint64_t)v1);
  return sub_2365B0A34();
}

uint64_t HandshakeCommand.Response.isKeepAlive.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t HandshakeCommand.Response.isKeepAlive.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*HandshakeCommand.Response.isKeepAlive.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.isAccepted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t HandshakeCommand.Response.isAccepted.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*HandshakeCommand.Response.isAccepted.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.rejectionReason.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HandshakeCommand.Response.rejectionReason.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*HandshakeCommand.Response.rejectionReason.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.selectedVersion.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24) | (*(unsigned __int8 *)(v0 + 25) << 8);
}

uint64_t HandshakeCommand.Response.selectedVersion.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  *(_BYTE *)(v1 + 25) = BYTE1(result) & 1;
  return result;
}

uint64_t (*HandshakeCommand.Response.selectedVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.deviceInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 88);
  v10 = *(_BYTE *)(v1 + 96);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_23648DBC0(v2, v3, v4, v5, v6, v7);
}

__n128 HandshakeCommand.Response.deviceInfo.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_BYTE *)a1 + 64);
  sub_23648DCEC(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
  *(_OWORD *)(v1 + 32) = v8;
  *(_OWORD *)(v1 + 48) = v7;
  result = v6;
  *(__n128 *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v3;
  *(_BYTE *)(v1 + 96) = v4;
  return result;
}

uint64_t (*HandshakeCommand.Response.deviceInfo.modify())()
{
  return nullsub_1;
}

__n128 HandshakeCommand.Response.init(isKeepAlive:isAccepted:rejectionReason:selectedVersion:deviceInfo:)@<Q0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;
  __int128 v8;
  __n128 result;
  __int128 v10;

  v7 = *(_BYTE *)(a6 + 64);
  *(_BYTE *)a7 = a1;
  *(_BYTE *)(a7 + 1) = a2;
  *(_QWORD *)(a7 + 8) = a3;
  *(_QWORD *)(a7 + 16) = a4;
  *(_BYTE *)(a7 + 24) = a5;
  *(_BYTE *)(a7 + 25) = HIBYTE(a5) & 1;
  v8 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 32) = *(_OWORD *)a6;
  *(_OWORD *)(a7 + 48) = v8;
  result = *(__n128 *)(a6 + 32);
  v10 = *(_OWORD *)(a6 + 48);
  *(__n128 *)(a7 + 64) = result;
  *(_OWORD *)(a7 + 80) = v10;
  *(_BYTE *)(a7 + 96) = v7;
  return result;
}

__n128 HandshakeCommand.Response.init(from:)@<Q0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);
  __n128 result;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;

  type metadata accessor for V1Command(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v4 = type metadata accessor for V1Command;
    goto LABEL_5;
  }
  type metadata accessor for V1Command.Response(0);
  if (swift_getEnumCaseMultiPayload())
  {
    v4 = type metadata accessor for V1Command.Response;
LABEL_5:
    sub_236465A18((uint64_t)a1, v4);
    swift_bridgeObjectRelease();
    sub_23648DCEC(0, 0, 0, 0, 0, 0);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 1;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 81) = 0u;
    return result;
  }
  v6 = a1[96];
  v7 = 256;
  if (a1[1])
    v8 = 256;
  else
    v8 = 0;
  if (!a1[25])
    v7 = 0;
  v9 = v7 | a1[24];
  *(_QWORD *)a2 = v8 | *a1;
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 24) = v9;
  v10 = *((_OWORD *)a1 + 3);
  *(_OWORD *)(a2 + 32) = *((_OWORD *)a1 + 2);
  *(_OWORD *)(a2 + 48) = v10;
  result = *((__n128 *)a1 + 4);
  v11 = *((_OWORD *)a1 + 5);
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v11;
  *(_BYTE *)(a2 + 96) = v6;
  return result;
}

uint64_t HandshakeCommand.Response.into()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;

  v2 = *(_BYTE *)(v1 + 1);
  v3 = *(_BYTE *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 25);
  v5 = *(_BYTE *)(v1 + 96);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_BYTE *)(a1 + 1) = v2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 25) = v4;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 96) = v5;
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t HandshakeCommand.Response.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 25);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 72);
  sub_2365B0A04();
  sub_2365B0A04();
  if (v1)
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    if ((v2 & 1) != 0)
      goto LABEL_6;
  }
  else
  {
    sub_2365B0A04();
    if ((v2 & 1) != 0)
      goto LABEL_6;
  }
  sub_2365B0A04();
LABEL_6:
  sub_2365B0A04();
  if (v3)
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    sub_2365B0A04();
    if (v5)
      SetupReport.LocaleInfo.hash(into:)();
  }
  return sub_2365B0A04();
}

uint64_t sub_2365248A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2365248D8 + 4 * byte_2365C02F6[*v0]))(0x6C417065654B7369, 0xEB00000000657669);
}

uint64_t sub_2365248D8()
{
  return 0x7470656363417369;
}

uint64_t sub_2365248F4()
{
  return 0x6F697463656A6572;
}

uint64_t sub_236524918()
{
  return 0x64657463656C6573;
}

uint64_t sub_23652493C()
{
  return 0x6E49656369766564;
}

uint64_t sub_23652495C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236527644(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236524980()
{
  sub_236525D1C();
  return sub_2365B0AD0();
}

uint64_t sub_2365249A8()
{
  sub_236525D1C();
  return sub_2365B0ADC();
}

uint64_t HandshakeCommand.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  char v37;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA788);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(unsigned __int8 *)(v1 + 1);
  v8 = *(_QWORD *)(v1 + 8);
  v25 = *(_QWORD *)(v1 + 16);
  v26 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 24);
  v23 = *(unsigned __int8 *)(v1 + 25);
  v24 = v8;
  v9 = *(_QWORD *)(v1 + 40);
  v14 = *(_QWORD *)(v1 + 32);
  v15 = v9;
  v10 = *(_QWORD *)(v1 + 56);
  v16 = *(_QWORD *)(v1 + 48);
  v17 = v10;
  v11 = *(_QWORD *)(v1 + 64);
  v21 = *(_QWORD *)(v1 + 72);
  v22 = v11;
  v12 = *(_QWORD *)(v1 + 80);
  v19 = *(_QWORD *)(v1 + 88);
  v20 = v12;
  v18 = *(unsigned __int8 *)(v1 + 96);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236525D1C();
  sub_2365B0AAC();
  LOBYTE(v27) = 0;
  sub_2365B080C();
  if (!v2)
  {
    LOBYTE(v27) = 1;
    sub_2365B080C();
    LOBYTE(v27) = 2;
    sub_2365B07C4();
    LOBYTE(v27) = 3;
    sub_2365B07F4();
    v27 = v14;
    v28 = v15;
    v29 = v16;
    v30 = v17;
    v31 = v22;
    v32 = v21;
    v33 = v20;
    v34 = v19;
    v35 = v18;
    v37 = 4;
    sub_23649053C();
    sub_2365B07E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t HandshakeCommand.Response.hashValue.getter()
{
  sub_2365B09E0();
  HandshakeCommand.Response.hash(into:)();
  return sub_2365B0A34();
}

uint64_t HandshakeCommand.Response.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 v61;
  int v62;
  char v63;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA798);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236525D1C();
  sub_2365B0A7C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0;
  }
  else
  {
    LOBYTE(v53) = 0;
    v9 = sub_2365B0758();
    LOBYTE(v53) = 1;
    LODWORD(v52) = sub_2365B0758();
    LOBYTE(v53) = 2;
    v10 = sub_2365B0710();
    v13 = v12;
    v51 = v10;
    LOBYTE(v53) = 3;
    swift_bridgeObjectRetain();
    v62 = sub_2365B0740();
    v63 = 4;
    sub_236490580();
    sub_2365B0734();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v41 = v52 & 1;
    v42 = v9 & 1;
    v14 = v53;
    v15 = v54;
    v16 = v55;
    v17 = v56;
    v52 = v57;
    v44 = v59;
    v45 = v58;
    v43 = v60;
    v50 = v61;
    v47 = v54;
    v48 = v53;
    v46 = v55;
    sub_23648DBC0(v53, v54, v55, v56, v57, v58);
    sub_23648DCEC(0, 0, 0, 0, 0, 0);
    swift_bridgeObjectRetain();
    v18 = v15;
    v19 = v16;
    v20 = v17;
    v21 = v17;
    v49 = v17;
    v22 = v52;
    v24 = v44;
    v23 = v45;
    sub_23648DBC0(v14, v18, v19, v20, v52, v45);
    v25 = v21;
    v26 = v22;
    v27 = v23;
    v28 = v24;
    sub_23648DCEC(v48, v47, v46, v25, v26, v23);
    swift_bridgeObjectRelease();
    *(_BYTE *)a2 = v42;
    *(_BYTE *)(a2 + 1) = v41;
    *(_QWORD *)(a2 + 8) = v51;
    *(_QWORD *)(a2 + 16) = v13;
    v29 = BYTE1(v62);
    *(_BYTE *)(a2 + 24) = v62;
    *(_BYTE *)(a2 + 25) = v29 & 1;
    v31 = v47;
    v30 = v48;
    *(_QWORD *)(a2 + 32) = v48;
    *(_QWORD *)(a2 + 40) = v31;
    v32 = v46;
    v33 = v49;
    *(_QWORD *)(a2 + 48) = v46;
    *(_QWORD *)(a2 + 56) = v33;
    *(_QWORD *)(a2 + 64) = v52;
    *(_QWORD *)(a2 + 72) = v27;
    *(_QWORD *)(a2 + 80) = v28;
    *(_QWORD *)(a2 + 88) = v43;
    *(_BYTE *)(a2 + 96) = v50;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    v34 = v30;
    v35 = v31;
    v36 = v32;
    v37 = v49;
    v38 = v52;
    v39 = v45;
  }
  return sub_23648DCEC(v34, v35, v36, v37, v38, v39);
}

uint64_t sub_236525064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  __int128 v6;
  __int128 v7;

  v2 = *(_BYTE *)(v1 + 1);
  v3 = *(_BYTE *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 25);
  v5 = *(_BYTE *)(v1 + 96);
  *(_BYTE *)a1 = *(_BYTE *)v1;
  *(_BYTE *)(a1 + 1) = v2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 25) = v4;
  v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_BYTE *)(a1 + 96) = v5;
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2365250F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HandshakeCommand.Response.init(from:)(a1, a2);
}

uint64_t sub_236525104(_QWORD *a1)
{
  return HandshakeCommand.Response.encode(to:)(a1);
}

uint64_t sub_23652511C()
{
  sub_2365B09E0();
  HandshakeCommand.Response.hash(into:)();
  return sub_2365B0A34();
}

uint64_t sub_2365251A8()
{
  sub_2365B09E0();
  HandshakeCommand.Response.hash(into:)();
  return sub_2365B0A34();
}

BOOL _s12AppleIDSetup16HandshakeCommandO7RequestV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  _BOOL8 result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[8];
  char v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  result = 0;
  if (((*a1 ^ *a2) & 1) != 0 || a1[1] != a2[1] || a1[2] != a2[2])
    return result;
  v4 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v9 = *((_QWORD *)a1 + 5);
  v8 = *((_QWORD *)a1 + 6);
  v11 = *((_QWORD *)a1 + 7);
  v10 = *((_QWORD *)a1 + 8);
  v12 = a1[72];
  v13 = *((_QWORD *)a1 + 10);
  v14 = *(_OWORD *)(a1 + 88);
  v15 = *(_OWORD *)(a1 + 104);
  v16 = *(_OWORD *)(a1 + 120);
  v17 = *(_OWORD *)(a1 + 136);
  v19 = *((_QWORD *)a1 + 19);
  v18 = *((_QWORD *)a1 + 20);
  v20 = *((_QWORD *)a2 + 1);
  v21 = *((_QWORD *)a2 + 2);
  v22 = *((_QWORD *)a2 + 3);
  v71 = *((_QWORD *)a2 + 4);
  v74 = *((_QWORD *)a2 + 5);
  v77 = *((_QWORD *)a2 + 6);
  v23 = *((_QWORD *)a2 + 8);
  v80 = *((_QWORD *)a2 + 7);
  v24 = a2[72];
  v26 = *((_QWORD *)a2 + 10);
  v25 = *((_QWORD *)a2 + 11);
  v27 = *((_QWORD *)a2 + 12);
  v28 = *((_QWORD *)a2 + 13);
  v29 = *((_QWORD *)a2 + 14);
  v30 = *((_QWORD *)a2 + 15);
  v31 = *((_QWORD *)a2 + 16);
  v32 = *((_QWORD *)a2 + 17);
  v33 = *((_QWORD *)a2 + 18);
  v34 = *((_QWORD *)a2 + 19);
  v35 = *((_QWORD *)a2 + 20);
  if (!v5)
  {
    v56 = *((_QWORD *)a2 + 20);
    v57 = v18;
    if (!v21)
      goto LABEL_9;
LABEL_16:
    v84 = v4;
    *(_QWORD *)&v85 = v5;
    *((_QWORD *)&v85 + 1) = v6;
    *(_QWORD *)&v86 = v7;
    *((_QWORD *)&v86 + 1) = v9;
    *(_QWORD *)&v87 = v8;
    *((_QWORD *)&v87 + 1) = v11;
    *(_QWORD *)&v88 = v10;
    BYTE8(v88) = v12;
    v89 = v20;
    v90 = v21;
    v91 = v22;
    v92 = v71;
    v93 = v74;
    v94 = v77;
    v95 = v80;
    v96 = v23;
    LOBYTE(v97) = v24;
    sub_23648DBC0(v20, v21, v22, v71, v74, v77);
    sub_23649219C(&v84);
    return 0;
  }
  v84 = v4;
  *(_QWORD *)&v85 = v5;
  *((_QWORD *)&v85 + 1) = v6;
  *(_QWORD *)&v86 = v7;
  *((_QWORD *)&v86 + 1) = v9;
  *(_QWORD *)&v87 = v8;
  *((_QWORD *)&v87 + 1) = v11;
  *(_QWORD *)&v88 = v10;
  BYTE8(v88) = v12;
  v69 = v4;
  v70 = v6;
  v68 = v12;
  if (!v21)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23648DC24(v9, v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23648DC24(v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23648DD50(v9, v8);
    v12 = v68;
    v4 = v69;
    v6 = v70;
    goto LABEL_16;
  }
  v56 = v35;
  v57 = v18;
  v82[0] = v20;
  v82[1] = v21;
  v82[2] = v22;
  v82[3] = v71;
  v82[4] = v74;
  v82[5] = v77;
  v82[6] = v80;
  v82[7] = v23;
  v83 = v24 & 1;
  v75 = v13;
  v78 = v26;
  v81 = v25;
  v54 = v30;
  v55 = v29;
  v52 = v32;
  v53 = v31;
  v49 = v34;
  v72 = v27;
  v66 = v28;
  v62 = v15;
  v64 = v14;
  v58 = v17;
  v60 = v16;
  v50 = v33;
  v51 = v19;
  sub_23648DBC0(v4, v5, v6, v7, v9, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23648DC24(v9, v8);
  v48 = _s12AppleIDSetup11IdMSAccountV10DeviceInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v84, (uint64_t)v82);
  v36 = *((_QWORD *)&v86 + 1);
  v37 = v87;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23648DD50(v36, v37);
  sub_23648DCEC(v69, v5, v70, v7, v9, v8);
  v34 = v49;
  v33 = v50;
  v19 = v51;
  v32 = v52;
  v17 = v58;
  v16 = v60;
  v15 = v62;
  v14 = v64;
  v31 = v53;
  v30 = v54;
  v29 = v55;
  v28 = v66;
  v27 = v72;
  v13 = v75;
  v26 = v78;
  v25 = v81;
  if ((v48 & 1) == 0)
    return 0;
LABEL_9:
  if (!(_QWORD)v14)
  {
    if (!v25)
    {
LABEL_18:
      if (v57)
      {
        if (!v56)
          return 0;
        swift_bridgeObjectRetain();
        v39 = swift_bridgeObjectRetain();
        v40 = sub_23654BDA0(v39, v56);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (v40 & 1) != 0;
      }
      return !v56;
    }
LABEL_23:
    v84 = v13;
    v85 = v14;
    v86 = v15;
    v87 = v16;
    v88 = v17;
    v89 = v19;
    v90 = v26;
    v91 = v25;
    v92 = v27;
    v93 = v28;
    v94 = v29;
    v95 = v30;
    v96 = v31;
    v97 = v32;
    v98 = v33;
    v99 = v34;
    sub_23644F440(v26, v25);
    sub_2365278D0(&v84);
    return 0;
  }
  if (!v25)
  {
    v76 = v13;
    v79 = v26;
    v73 = v27;
    v67 = v28;
    v41 = v29;
    v42 = v30;
    v43 = v31;
    v44 = v32;
    v63 = v15;
    v65 = v14;
    v59 = v17;
    v61 = v16;
    v45 = v19;
    v46 = v33;
    v47 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = v47;
    v33 = v46;
    v19 = v45;
    v17 = v59;
    v16 = v61;
    v15 = v63;
    v14 = v65;
    v32 = v44;
    v31 = v43;
    v30 = v42;
    v29 = v41;
    v28 = v67;
    v27 = v73;
    v13 = v76;
    v26 = v79;
    v25 = 0;
    goto LABEL_23;
  }
  if (v13 == v26 && (_QWORD)v14 == v25)
    goto LABEL_18;
  v38 = sub_2365B08CC();
  result = 0;
  if ((v38 & 1) != 0)
    goto LABEL_18;
  return result;
}

unint64_t sub_2365256B4()
{
  unint64_t result;

  result = qword_2563EA760;
  if (!qword_2563EA760)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C0790, &type metadata for HandshakeCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA760);
  }
  return result;
}

unint64_t sub_2365256F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2563EA770;
  if (!qword_2563EA770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563EA768);
    v2[0] = sub_2365257F0(&qword_2563E4630, (uint64_t)&protocol conformance descriptor for AIDAServiceType);
    v2[1] = sub_2364A51A8();
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2563EA770);
  }
  return result;
}

unint64_t sub_236525774()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2563EA780;
  if (!qword_2563EA780)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563EA768);
    v2[0] = sub_2365257F0(&qword_2563E4660, (uint64_t)&protocol conformance descriptor for AIDAServiceType);
    v2[1] = sub_2364A5230();
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2563EA780);
  }
  return result;
}

uint64_t sub_2365257F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for AIDAServiceType(255);
    result = MEMORY[0x23B7F5164](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_236525830(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = a1[11];
  v4 = a1[10];
  sub_23648DBC0(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_23644F440(v4, v2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_2365258E4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = a1[11];
  v4 = a1[10];
  sub_23648DCEC(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_23644F52C(v4, v2);
  swift_bridgeObjectRelease();
  return a1;
}

BOOL _s12AppleIDSetup16HandshakeCommandO8ResponseV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[8];
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;

  v2 = 0;
  if (*a1 != *a2 || ((a1[1] ^ a2[1]) & 1) != 0)
    return v2;
  v3 = *((_QWORD *)a1 + 2);
  v4 = a1[24];
  v5 = a1[25];
  v6 = *((_QWORD *)a1 + 4);
  v7 = *((_QWORD *)a1 + 5);
  v8 = *((_QWORD *)a1 + 6);
  v9 = *((_QWORD *)a1 + 7);
  v11 = *((_QWORD *)a1 + 8);
  v10 = *((_QWORD *)a1 + 9);
  v13 = *((_QWORD *)a1 + 10);
  v12 = *((_QWORD *)a1 + 11);
  v14 = a1[96];
  v15 = *((_QWORD *)a2 + 2);
  v16 = a2[24];
  v17 = a2[25];
  v19 = *((_QWORD *)a2 + 4);
  v18 = *((_QWORD *)a2 + 5);
  v21 = *((_QWORD *)a2 + 6);
  v20 = *((_QWORD *)a2 + 7);
  v22 = *((_QWORD *)a2 + 8);
  v23 = *((_QWORD *)a2 + 9);
  v24 = *((_QWORD *)a2 + 10);
  v25 = *((_QWORD *)a2 + 11);
  v26 = a2[96];
  if (!v3)
  {
    if (v15)
      return 0;
    goto LABEL_10;
  }
  if (!v15)
    return 0;
  if (*((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1) && v3 == v15)
    goto LABEL_10;
  v57 = *((_QWORD *)a2 + 8);
  v60 = *((_QWORD *)a1 + 10);
  v50 = *((_QWORD *)a1 + 7);
  v51 = *((_QWORD *)a1 + 5);
  v62 = *((_QWORD *)a1 + 6);
  v48 = *((_QWORD *)a1 + 9);
  v49 = *((_QWORD *)a1 + 8);
  v46 = *((_QWORD *)a2 + 5);
  v47 = *((_QWORD *)a1 + 11);
  v27 = *((_QWORD *)a1 + 4);
  v28 = a1[96];
  v29 = *((_QWORD *)a2 + 11);
  v53 = *((_QWORD *)a2 + 7);
  v55 = *((_QWORD *)a2 + 10);
  v30 = *((_QWORD *)a2 + 6);
  v31 = *((_QWORD *)a2 + 4);
  v45 = a2[96];
  v32 = a1[24];
  v33 = sub_2365B08CC();
  v4 = v32;
  v26 = v45;
  v19 = v31;
  v18 = v46;
  v12 = v47;
  v21 = v30;
  v20 = v53;
  v24 = v55;
  v22 = v57;
  v13 = v60;
  v25 = v29;
  v14 = v28;
  v6 = v27;
  v10 = v48;
  v11 = v49;
  v9 = v50;
  v7 = v51;
  v8 = v62;
  v2 = 0;
  if ((v33 & 1) != 0)
  {
LABEL_10:
    if ((v5 & 1) != 0)
    {
      if (!v17)
        return 0;
    }
    else
    {
      if (v4 == v16)
        v34 = v17;
      else
        v34 = 1;
      if ((v34 & 1) != 0)
        return 0;
    }
    if (v7)
    {
      v66 = v6;
      v67 = v7;
      v68 = v8;
      v69 = v9;
      v70 = v11;
      v71 = v10;
      v72 = v13;
      v73 = v12;
      v74 = v14;
      v44 = v6;
      v43 = v14;
      if (v18)
      {
        v64[0] = v19;
        v64[1] = v18;
        v64[2] = v21;
        v64[3] = v20;
        v64[4] = v22;
        v64[5] = v23;
        v64[6] = v24;
        v64[7] = v25;
        v65 = v26 & 1;
        sub_23648DBC0(v6, v7, v8, v9, v11, v10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_23648DC24(v11, v10);
        v58 = _s12AppleIDSetup11IdMSAccountV10DeviceInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v66, (uint64_t)v64);
        v35 = v7;
        v36 = v70;
        v37 = v11;
        v38 = v71;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23648DD50(v36, v38);
        sub_23648DCEC(v44, v35, v8, v9, v37, v10);
        return (v58 & 1) != 0;
      }
      v39 = v12;
      v61 = v23;
      v63 = v25;
      v56 = v24;
      v59 = v22;
      v52 = v21;
      v54 = v20;
      v40 = v19;
      v41 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23648DC24(v11, v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23648DC24(v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23648DD50(v11, v10);
      v26 = v41;
      v19 = v40;
      v18 = 0;
      v21 = v52;
      v20 = v54;
      v22 = v59;
      v23 = v61;
      v24 = v56;
      v25 = v63;
      v14 = v43;
      v6 = v44;
      v12 = v39;
    }
    else if (!v18)
    {
      return 1;
    }
    v66 = v6;
    v67 = v7;
    v68 = v8;
    v69 = v9;
    v70 = v11;
    v71 = v10;
    v72 = v13;
    v73 = v12;
    v74 = v14;
    v75 = v19;
    v76 = v18;
    v77 = v21;
    v78 = v20;
    v79 = v22;
    v80 = v23;
    v81 = v24;
    v82 = v25;
    v83 = v26;
    sub_23648DBC0(v19, v18, v21, v20, v22, v23);
    sub_23649219C(&v66);
    return 0;
  }
  return v2;
}

unint64_t sub_236525D1C()
{
  unint64_t result;

  result = qword_2563EA790;
  if (!qword_2563EA790)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C0740, &type metadata for HandshakeCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA790);
  }
  return result;
}

unint64_t sub_236525D64()
{
  unint64_t result;

  result = qword_2563EA7A0;
  if (!qword_2563EA7A0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand, &type metadata for HandshakeCommand);
    atomic_store(result, (unint64_t *)&qword_2563EA7A0);
  }
  return result;
}

unint64_t sub_236525DA8(uint64_t a1)
{
  unint64_t result;

  result = sub_236525DCC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236525DCC()
{
  unint64_t result;

  result = qword_2563EA7D0;
  if (!qword_2563EA7D0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EA7D0);
  }
  return result;
}

unint64_t sub_236525E14()
{
  unint64_t result;

  result = qword_2563EA7D8;
  if (!qword_2563EA7D8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand, &type metadata for HandshakeCommand);
    atomic_store(result, (unint64_t *)&qword_2563EA7D8);
  }
  return result;
}

unint64_t sub_236525E58(uint64_t a1)
{
  unint64_t result;

  result = sub_236525E7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236525E7C()
{
  unint64_t result;

  result = qword_2563EA800;
  if (!qword_2563EA800)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EA800);
  }
  return result;
}

uint64_t sub_236525EC0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_236525EDC, (uint64_t (*)(void))sub_236525F20, (uint64_t (*)(void))sub_236525F64);
}

unint64_t sub_236525EDC()
{
  unint64_t result;

  result = qword_2563EA808;
  if (!qword_2563EA808)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EA808);
  }
  return result;
}

unint64_t sub_236525F20()
{
  unint64_t result;

  result = qword_2563EA810;
  if (!qword_2563EA810)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EA810);
  }
  return result;
}

unint64_t sub_236525F64()
{
  unint64_t result;

  result = qword_2563EA818;
  if (!qword_2563EA818)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EA818);
  }
  return result;
}

unint64_t sub_236525FAC()
{
  unint64_t result;

  result = qword_2563EA820;
  if (!qword_2563EA820)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EA820);
  }
  return result;
}

unint64_t sub_236525FF0(uint64_t a1)
{
  unint64_t result;

  result = sub_236526014();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_236526014()
{
  unint64_t result;

  result = qword_2563EA850;
  if (!qword_2563EA850)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2563EA850);
  }
  return result;
}

unint64_t sub_236526058(uint64_t a1)
{
  unint64_t result;

  result = sub_23652607C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_23652607C()
{
  unint64_t result;

  result = qword_2563EA878;
  if (!qword_2563EA878)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2563EA878);
  }
  return result;
}

uint64_t sub_2365260C0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2365260DC, (uint64_t (*)(void))sub_236526120, (uint64_t (*)(void))sub_236526164);
}

unint64_t sub_2365260DC()
{
  unint64_t result;

  result = qword_2563EA880;
  if (!qword_2563EA880)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2563EA880);
  }
  return result;
}

unint64_t sub_236526120()
{
  unint64_t result;

  result = qword_2563EA888;
  if (!qword_2563EA888)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2563EA888);
  }
  return result;
}

unint64_t sub_236526164()
{
  unint64_t result;

  result = qword_2563EA890;
  if (!qword_2563EA890)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2563EA890);
  }
  return result;
}

unint64_t sub_2365261AC()
{
  unint64_t result;

  result = qword_2563EA898;
  if (!qword_2563EA898)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2563EA898);
  }
  return result;
}

unint64_t sub_2365261F4()
{
  unint64_t result;

  result = qword_2563EA8A0;
  if (!qword_2563EA8A0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Request, &type metadata for HandshakeCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EA8A0);
  }
  return result;
}

unint64_t sub_23652623C()
{
  unint64_t result;

  result = qword_2563EA8A8;
  if (!qword_2563EA8A8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for HandshakeCommand.Response, &type metadata for HandshakeCommand.Response);
    atomic_store(result, (unint64_t *)&qword_2563EA8A8);
  }
  return result;
}

unint64_t sub_236526280(uint64_t a1)
{
  unint64_t result;

  result = sub_236525E14();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand()
{
  return &type metadata for HandshakeCommand;
}

uint64_t destroy for HandshakeCommand.Request(_QWORD *a1)
{
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[6])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HandshakeCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v4;
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v6;
      v7 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v13;
    }
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    v10 = *(_QWORD *)(a2 + 88);
    if (v10)
      goto LABEL_8;
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v9;
    v10 = *(_QWORD *)(a2 + 88);
    if (v10)
    {
LABEL_8:
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v10;
      v14 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v14;
      v15 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v15;
      v16 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v16;
      v17 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  v11 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v12 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v12;
LABEL_9:
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HandshakeCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (!v6)
    {
      sub_236491604(a1 + 8);
      *(_OWORD *)v4 = *(_OWORD *)v5;
      v13 = *(_OWORD *)(v5 + 32);
      v12 = *(_OWORD *)(v5 + 48);
      v14 = *(_OWORD *)(v5 + 16);
      *(_BYTE *)(v4 + 64) = *(_BYTE *)(v5 + 64);
      *(_OWORD *)(v4 + 32) = v13;
      *(_OWORD *)(v4 + 48) = v12;
      *(_OWORD *)(v4 + 16) = v14;
      goto LABEL_16;
    }
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v7 = (_OWORD *)(a1 + 40);
    v8 = (_OWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    if (*(_QWORD *)(a1 + 48))
    {
      if (v9)
      {
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_2364915D0(a1 + 40);
        v18 = *(_OWORD *)(a2 + 56);
        *v7 = *v8;
        *(_OWORD *)(a1 + 56) = v18;
      }
      goto LABEL_15;
    }
    if (!v9)
    {
      v19 = *(_OWORD *)(a2 + 56);
      *v7 = *v8;
      *(_OWORD *)(a1 + 56) = v19;
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  if (!v6)
  {
    *(_OWORD *)v4 = *(_OWORD *)v5;
    v15 = *(_OWORD *)(a2 + 24);
    v16 = *(_OWORD *)(a2 + 40);
    v17 = *(_OWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v16;
    *(_OWORD *)(a1 + 56) = v17;
    *(_OWORD *)(a1 + 24) = v15;
    goto LABEL_16;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
LABEL_11:
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  v11 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v11;
LABEL_15:
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
LABEL_16:
  v20 = (_OWORD *)(a1 + 80);
  v21 = (_OWORD *)(a2 + 80);
  v22 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88))
  {
    if (v22)
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236460568(a1 + 80);
      *v20 = *v21;
      v23 = *(_OWORD *)(a2 + 144);
      v25 = *(_OWORD *)(a2 + 96);
      v24 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v23;
      *(_OWORD *)(a1 + 96) = v25;
      *(_OWORD *)(a1 + 112) = v24;
    }
  }
  else if (v22)
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *v20 = *v21;
    v26 = *(_OWORD *)(a2 + 96);
    v27 = *(_OWORD *)(a2 + 112);
    v28 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v28;
    *(_OWORD *)(a1 + 96) = v26;
    *(_OWORD *)(a1 + 112) = v27;
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for HandshakeCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  v4 = a1 + 8;
  v5 = a2 + 8;
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_7;
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    sub_236491604(v4);
LABEL_7:
    v9 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v4 + 48) = v9;
    *(_BYTE *)(v4 + 64) = *(_BYTE *)(v5 + 64);
    v10 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v4 = *(_OWORD *)v5;
    *(_OWORD *)(v4 + 16) = v10;
    goto LABEL_11;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 48))
  {
LABEL_9:
    v11 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v11;
    goto LABEL_10;
  }
  v8 = *(_QWORD *)(a2 + 48);
  if (!v8)
  {
    sub_2364915D0(a1 + 40);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
LABEL_10:
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
LABEL_11:
  if (!*(_QWORD *)(a1 + 88))
  {
LABEL_15:
    v17 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v18;
    goto LABEL_16;
  }
  v12 = *(_QWORD *)(a2 + 88);
  if (!v12)
  {
    sub_236460568(a1 + 80);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v16;
  swift_bridgeObjectRelease();
LABEL_16:
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HandshakeCommand.Request(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeCommand.Request(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Request()
{
  return &type metadata for HandshakeCommand.Request;
}

uint64_t destroy for HandshakeCommand.Response(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 72);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for HandshakeCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v5;
    v6 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v6;
    v7 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v7;
      v8 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v11;
    }
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for HandshakeCommand.Response(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7 = (_OWORD *)(a1 + 64);
      v8 = (_OWORD *)(a2 + 64);
      v9 = *(_QWORD *)(a2 + 72);
      if (*(_QWORD *)(a1 + 72))
      {
        if (v9)
        {
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_2364915D0(a1 + 64);
          v18 = *(_OWORD *)(a2 + 80);
          *v7 = *v8;
          *(_OWORD *)(a1 + 80) = v18;
        }
        goto LABEL_15;
      }
      if (!v9)
      {
        v19 = *(_OWORD *)(a2 + 80);
        *v7 = *v8;
        *(_OWORD *)(a1 + 80) = v19;
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    sub_236491604(a1 + 32);
    *v4 = *v5;
    v13 = *(_OWORD *)(a2 + 64);
    v12 = *(_OWORD *)(a2 + 80);
    v14 = *(_OWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 48) = v14;
  }
  else
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v10 = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v10)
      {
        v11 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v11;
LABEL_15:
        *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
        return a1;
      }
LABEL_11:
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    *v4 = *v5;
    v15 = *(_OWORD *)(a2 + 48);
    v16 = *(_OWORD *)(a2 + 64);
    v17 = *(_OWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v16;
    *(_OWORD *)(a1 + 80) = v17;
    *(_OWORD *)(a1 + 48) = v15;
  }
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for HandshakeCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 40))
  {
    v5 = *(_QWORD *)(a2 + 40);
    if (v5)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v5;
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v6;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 72))
      {
        v7 = *(_QWORD *)(a2 + 72);
        if (v7)
        {
          *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
          *(_QWORD *)(a1 + 72) = v7;
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
          swift_bridgeObjectRelease();
          *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
          swift_bridgeObjectRelease();
LABEL_10:
          *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
          return a1;
        }
        sub_2364915D0(a1 + 64);
      }
      v10 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v10;
      goto LABEL_10;
    }
    sub_236491604(a1 + 32);
  }
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for HandshakeCommand.Response(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 97))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeCommand.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Response()
{
  return &type metadata for HandshakeCommand.Response;
}

uint64_t storeEnumTagSinglePayload for HandshakeCommand.Response.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23652709C + 4 * byte_2365C0300[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2365270D0 + 4 * byte_2365C02FB[v4]))();
}

uint64_t sub_2365270D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2365270D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2365270E0);
  return result;
}

uint64_t sub_2365270EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2365270F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2365270F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236527100(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Response.CodingKeys()
{
  return &type metadata for HandshakeCommand.Response.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for HandshakeCommand.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_236527168 + 4 * byte_2365C030A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23652719C + 4 * byte_2365C0305[v4]))();
}

uint64_t sub_23652719C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2365271A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2365271ACLL);
  return result;
}

uint64_t sub_2365271B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2365271C0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2365271C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2365271CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Request.CodingKeys()
{
  return &type metadata for HandshakeCommand.Request.CodingKeys;
}

unint64_t sub_2365271EC()
{
  unint64_t result;

  result = qword_2563EA900;
  if (!qword_2563EA900)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C0660, &type metadata for HandshakeCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA900);
  }
  return result;
}

unint64_t sub_236527234()
{
  unint64_t result;

  result = qword_2563EA908;
  if (!qword_2563EA908)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C0718, &type metadata for HandshakeCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA908);
  }
  return result;
}

unint64_t sub_23652727C()
{
  unint64_t result;

  result = qword_2563EA910;
  if (!qword_2563EA910)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C0688, &type metadata for HandshakeCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA910);
  }
  return result;
}

unint64_t sub_2365272C4()
{
  unint64_t result;

  result = qword_2563EA918;
  if (!qword_2563EA918)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C06B0, &type metadata for HandshakeCommand.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA918);
  }
  return result;
}

unint64_t sub_23652730C()
{
  unint64_t result;

  result = qword_2563EA920;
  if (!qword_2563EA920)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C05D0, &type metadata for HandshakeCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA920);
  }
  return result;
}

unint64_t sub_236527354()
{
  unint64_t result;

  result = qword_2563EA928;
  if (!qword_2563EA928)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C05F8, &type metadata for HandshakeCommand.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EA928);
  }
  return result;
}

uint64_t sub_236527398(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C417065654B7369 && a2 == 0xEB00000000657669;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002365CD4B0 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002365CD4D0 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E49656369766564 && a2 == 0xEA00000000006F66 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F636341666C6573 && a2 == 0xED00006449746E75 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002365CD4F0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_236527644(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C417065654B7369 && a2 == 0xEB00000000657669;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470656363417369 && a2 == 0xEA00000000006465 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F697463656A6572 && a2 == 0xEF6E6F736165526ELL || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEF6E6F6973726556 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E49656369766564 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t *sub_2365278D0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1[10];
  v2 = a1[11];
  sub_23644F52C(*a1, a1[1]);
  sub_23644F52C(v4, v2);
  return a1;
}

uint64_t sub_236527978(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_236527998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2365AFC00();
  __swift_allocate_value_buffer(v0, qword_2563EA930);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2563EA930);
  if (qword_2563E42D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2563E60F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id RepairController.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 112);
}

uint64_t sub_236527A30(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (result)
  {
    v1 = qword_2563E4320;
    swift_retain();
    if (v1 != -1)
      swift_once();
    v2 = sub_2365AFC00();
    __swift_project_value_buffer(v2, (uint64_t)qword_2563EA930);
    swift_retain_n();
    swift_retain_n();
    v3 = sub_2365AFBE8();
    v4 = sub_2365B038C();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v11 = v6;
      *(_DWORD *)v5 = 136315394;
      sub_2365AFCB4();
      swift_retain();
      v7 = sub_2365B0080();
      sub_236468D88(v7, v8, &v11);
      sub_2365B04A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2080;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C30);
      v9 = sub_2365B0080();
      sub_236468D88(v9, v10, &v11);
      sub_2365B04A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23644B000, v3, v4, "Repair controller session changed from %s to %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v6, -1, -1);
      MEMORY[0x23B7F5254](v5, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_2365AFC90();
    return swift_release();
  }
  return result;
}

uint64_t RepairController.__allocating_init(queue:endpoint:inactiveSession:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  RepairController.init(queue:endpoint:inactiveSession:)(a1, a2, a3);
  return v6;
}

uint64_t RepairController.init(queue:endpoint:inactiveSession:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = v3;
  v27 = a2;
  v28 = a3;
  v6 = sub_2365B03D4();
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v25 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2365B03C8();
  MEMORY[0x24BDAC7A8](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A08);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2365AFD50();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2365AFD74();
  MEMORY[0x24BDAC7A8](v16);
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession) = 0;
  if (!a1)
  {
    v23[1] = v8;
    v24 = v6;
    qos_class_self();
    sub_2365AFD44();
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    v18 = v25;
    v19 = v26;
    if (v17 == 1)
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BEE5478], v12);
      sub_236465998((uint64_t)v11, &qword_2563E9A08);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    }
    sub_2364985A8();
    sub_2365AFD68();
    v29 = MEMORY[0x24BEE4AF8];
    sub_23644F0B8(&qword_2542A82F0, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688], MEMORY[0x24BEE5698]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542A82C0);
    sub_23650CD1C(&qword_2542A82C8, &qword_2542A82C0);
    sub_2365B04F4();
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v18, *MEMORY[0x24BEE5750], v24);
    a1 = sub_2365B03F8();
  }
  v20 = v27;
  v21 = v28;
  *(_QWORD *)(v4 + 112) = a1;
  sub_23650D450(v20, v4 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, &qword_2563E9A18);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = v21;
  swift_release();
  return v4;
}

uint64_t RepairController.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A18);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_2365AFCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for RepairController();
  v4 = swift_allocObject();
  RepairController.init(queue:endpoint:inactiveSession:)(0, (uint64_t)v2, 0);
  return v4;
}

uint64_t type metadata accessor for RepairController()
{
  uint64_t result;

  result = qword_2563EA9B8;
  if (!qword_2563EA9B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2365280F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563E4320 != -1)
    swift_once();
  v5 = sub_2365AFC00();
  __swift_project_value_buffer(v5, (uint64_t)qword_2563EA930);
  v6 = sub_2365AFBE8();
  v7 = sub_2365B038C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_23644B000, v6, v7, "Invalidating setup controller", v8, 2u);
    MEMORY[0x23B7F5254](v8, -1, -1);
  }

  v9 = sub_2365B0218();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v1;
  swift_retain();
  sub_2364923A0((uint64_t)v4, (uint64_t)&unk_2563EA950, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_23652826C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_236528284()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(*(_QWORD *)(v0 + 24)
                                   + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2365282D0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2365282FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_236477420;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t RepairController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = v0;
  if (qword_2563E4320 != -1)
    swift_once();
  v2 = sub_2365AFC00();
  __swift_project_value_buffer(v2, (uint64_t)qword_2563EA930);
  swift_retain_n();
  v3 = sub_2365AFBE8();
  v4 = sub_2365B038C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136315138;
    type metadata accessor for RepairController();
    swift_retain();
    v7 = sub_2365B0080();
    sub_236468D88(v7, v8, &v10);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_23644B000, v3, v4, "RepairController deinitialized: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v6, -1, -1);
    MEMORY[0x23B7F5254](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession))
  {
    swift_retain();
    sub_2365AFC90();
    swift_release();
  }

  sub_236465998(v1 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, &qword_2563E9A18);
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t RepairController.__deallocating_deinit()
{
  RepairController.deinit();
  return swift_defaultActor_deallocate();
}

uint64_t sub_2365285B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[195] = v2;
  v3[194] = a2;
  v3[193] = a1;
  return swift_task_switch();
}

uint64_t sub_2365285D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if (qword_2563E4320 != -1)
    swift_once();
  v1 = *(_QWORD **)(v0 + 1552);
  v2 = sub_2365AFC00();
  *(_QWORD *)(v0 + 1568) = __swift_project_value_buffer(v2, (uint64_t)qword_2563EA930);
  sub_236530574(v1, v0 + 1416);
  v3 = sub_2365AFBE8();
  v4 = sub_2365B0380();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v16 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_236530574((_QWORD *)(v0 + 1416), v0 + 1464);
    v7 = sub_2365B0080();
    *(_QWORD *)(v0 + 1536) = sub_236468D88(v7, v8, &v16);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_2365305B0(v0 + 1416);
    _os_log_impl(&dword_23644B000, v3, v4, "Performing Apple ID Repair with context: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v6, -1, -1);
    MEMORY[0x23B7F5254](v5, -1, -1);
  }
  else
  {
    sub_2365305B0(v0 + 1416);
  }

  v9 = sub_23652B008(*(_QWORD **)(v0 + 1552));
  *(_QWORD *)(v0 + 1576) = v9;
  v10 = *(_QWORD *)(v0 + 1560);
  v11 = *(uint64_t **)(v0 + 1552);
  v12 = OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession;
  *(_QWORD *)(v0 + 1584) = OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession;
  v13 = *(_QWORD *)(v10 + v12);
  *(_QWORD *)(v10 + v12) = v9;
  swift_retain_n();
  sub_236527A30(v13);
  swift_release();
  swift_release();
  v14 = *v11;
  *(_QWORD *)(v0 + 1592) = *v11;
  *(_QWORD *)(v0 + 144) = v14;
  sub_23648554C(v0 + 144);
  sub_236484B60((__int128 *)(v0 + 144), (_OWORD *)(v0 + 400));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_236528850()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[197];
  v2 = swift_task_alloc();
  v0[200] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 50;
  v3 = (_QWORD *)swift_task_alloc();
  v0[201] = v3;
  *v3 = v0;
  v3[1] = sub_2365288F8;
  return sub_2365B0914();
}

uint64_t sub_2365288F8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1616) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23652896C()
{
  uint64_t v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[3];

  sub_236484B60((__int128 *)(v0 + 272), (_OWORD *)(v0 + 656));
  sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 528));
  v1 = sub_236484B90(v0 + 528);
  if (v1 == 6)
  {
    v13 = nullsub_1(v0 + 528);
    v74 = *(_QWORD *)(v13 + 8);
    v76 = *(_QWORD *)v13;
    v70 = *(_QWORD *)(v13 + 24);
    v72 = *(_QWORD *)(v13 + 16);
    v68 = *(_QWORD *)(v13 + 32);
    v66 = *(_BYTE *)(v13 + 40);
    sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 1168));
    v14 = nullsub_1(v0 + 1168);
    v15 = *(_QWORD *)v14;
    v59 = *(_QWORD *)(v14 + 8);
    v16 = *(_QWORD *)(v14 + 16);
    v64 = *(_QWORD *)(v14 + 24);
    v62 = *(_QWORD *)(v14 + 32);
    v57 = *(_BYTE *)(v14 + 40);
    sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 16));
    v17 = nullsub_1(v0 + 16);
    v18 = *(_QWORD *)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_BYTE *)(v17 + 40);
    v78 = v0 + 656;
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    sub_236484E9C(v18, v19, v20, v21, v22, v23);
    sub_236484E9C(v15, v59, v16, v64, v62, v57);
    v24 = sub_2365AFBE8();
    v25 = sub_2365B0398();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v26 = 138412290;
      sub_236485B14();
      swift_allocError();
      *(_QWORD *)v28 = v76;
      *(_QWORD *)(v28 + 8) = v74;
      *(_QWORD *)(v28 + 16) = v72;
      *(_QWORD *)(v28 + 24) = v70;
      *(_QWORD *)(v28 + 32) = v68;
      *(_BYTE *)(v28 + 40) = v66;
      sub_236484E9C(v15, v59, v16, v64, v62, v57);
      v29 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 1512) = v29;
      sub_2365B04A0();
      *v27 = v29;
      v30 = v0 + 656;
      sub_236487E90(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      _os_log_impl(&dword_23644B000, v24, v25, "Failed to perform repair with error: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v27, -1, -1);
      MEMORY[0x23B7F5254](v26, -1, -1);
    }
    else
    {
      v30 = v0 + 656;
      sub_236487E90(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v78, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    }
    v42 = *(_QWORD *)(v0 + 1584);
    v43 = *(_QWORD *)(v0 + 1560);

    sub_236485B14();
    swift_allocError();
    *(_QWORD *)v44 = v76;
    *(_QWORD *)(v44 + 8) = v74;
    *(_QWORD *)(v44 + 16) = v72;
    *(_QWORD *)(v44 + 24) = v70;
    *(_QWORD *)(v44 + 32) = v68;
    *(_BYTE *)(v44 + 40) = v66;
    swift_willThrow();
    sub_236487E90(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    v45 = *(_QWORD *)(v43 + v42);
    *(_QWORD *)(v43 + v42) = 0;
    goto LABEL_15;
  }
  if (v1 != 1)
  {
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    v31 = sub_2365AFBE8();
    v32 = sub_2365B0398();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_DWORD *)v33 = 136315138;
      v79[0] = v34;
      sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 784));
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
      v35 = sub_2365B0080();
      *(_QWORD *)(v0 + 1520) = sub_236468D88(v35, v36, v79);
      sub_2365B04A0();
      swift_bridgeObjectRelease();
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      _os_log_impl(&dword_23644B000, v31, v32, "Received unexpected response: %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v34, -1, -1);
      MEMORY[0x23B7F5254](v33, -1, -1);
    }
    else
    {
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    }

    v46 = *(_QWORD *)(v0 + 1584);
    v47 = *(_QWORD *)(v0 + 1560);
    sub_236485B14();
    swift_allocError();
    *(_OWORD *)v48 = 0u;
    *(_OWORD *)(v48 + 16) = 0u;
    *(_QWORD *)(v48 + 32) = 0;
    *(_BYTE *)(v48 + 40) = 4;
    swift_willThrow();
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    v45 = *(_QWORD *)(v47 + v46);
    *(_QWORD *)(v47 + v46) = 0;
LABEL_15:
    sub_236527A30(v45);
    swift_release();
    swift_release();
    swift_task_dealloc();
    v41 = *(uint64_t (**)(void))(v0 + 8);
    return v41();
  }
  v2 = (uint64_t *)nullsub_1(v0 + 528);
  v73 = v2[1];
  v75 = *v2;
  v69 = v2[3];
  v71 = v2[2];
  v65 = v2[5];
  v67 = v2[4];
  v63 = v2[6];
  v60 = v2[8];
  v61 = v2[7];
  v56 = v2[10];
  v58 = v2[9];
  v54 = v2[12];
  v55 = v2[11];
  v52 = v2[14];
  v53 = v2[13];
  sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 1040));
  v3 = nullsub_1(v0 + 1040);
  v50 = *(_QWORD *)(v3 + 96);
  v51 = *(_QWORD *)(v3 + 88);
  sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 912));
  v4 = nullsub_1(v0 + 912);
  v6 = *(_QWORD *)(v4 + 88);
  v5 = *(_QWORD *)(v4 + 96);
  v77 = v0 + 656;
  sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236485214(v6, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_236485214(v51, v50);
  v7 = sub_2365AFBE8();
  v8 = sub_2365B0380();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315138;
    v79[0] = v10;
    *(_QWORD *)(v0 + 1296) = v75;
    *(_QWORD *)(v0 + 1304) = v73;
    *(_QWORD *)(v0 + 1312) = v71;
    *(_QWORD *)(v0 + 1320) = v69;
    *(_QWORD *)(v0 + 1328) = v67;
    *(_QWORD *)(v0 + 1336) = v65;
    *(_QWORD *)(v0 + 1344) = v63;
    *(_QWORD *)(v0 + 1352) = v61;
    *(_QWORD *)(v0 + 1360) = v60;
    *(_QWORD *)(v0 + 1368) = v58;
    *(_QWORD *)(v0 + 1376) = v56;
    *(_QWORD *)(v0 + 1384) = v55;
    *(_QWORD *)(v0 + 1392) = v54;
    *(_QWORD *)(v0 + 1400) = v53;
    *(_QWORD *)(v0 + 1408) = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_236485214(v51, v50);
    v11 = sub_2365B0080();
    *(_QWORD *)(v0 + 1528) = sub_236468D88(v11, v12, v79);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_236487E90(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    sub_236487E90(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    _os_log_impl(&dword_23644B000, v7, v8, "Finished Apple ID Repair with report: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v10, -1, -1);
    MEMORY[0x23B7F5254](v9, -1, -1);

  }
  else
  {
    sub_236487E90(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    sub_236487E90(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);

  }
  sub_236487E90(v77, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
  v37 = *(_QWORD *)(v0 + 1584);
  v38 = *(_QWORD *)(v0 + 1560);
  v39 = *(_QWORD **)(v0 + 1544);
  *v39 = v75;
  v39[1] = v73;
  v39[2] = v71;
  v39[3] = v69;
  v39[4] = v67;
  v39[5] = v65;
  v39[6] = v63;
  v39[7] = v61;
  v39[8] = v60;
  v39[9] = v58;
  v39[10] = v56;
  v39[11] = v55;
  v39[12] = v54;
  v39[13] = v53;
  v39[14] = v52;
  v40 = *(_QWORD *)(v38 + v37);
  *(_QWORD *)(v38 + v37) = 0;
  sub_236527A30(v40);
  swift_release();
  swift_release();
  swift_task_dealloc();
  v41 = *(uint64_t (**)(void))(v0 + 8);
  return v41();
}

uint64_t sub_236529354()
{
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2365293A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1584);
  v2 = *(_QWORD *)(v0 + 1560);
  v3 = *(_QWORD *)(v2 + v1);
  *(_QWORD *)(v2 + v1) = 0;
  sub_236527A30(v3);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236529400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[163] = v2;
  v3[162] = a2;
  v3[161] = a1;
  return swift_task_switch();
}

uint64_t sub_236529420()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  if (qword_2563E4320 != -1)
    swift_once();
  v1 = *(_QWORD **)(v0 + 1296);
  v2 = sub_2365AFC00();
  *(_QWORD *)(v0 + 1312) = __swift_project_value_buffer(v2, (uint64_t)qword_2563EA930);
  sub_236530574(v1, v0 + 1168);
  v3 = sub_2365AFBE8();
  v4 = sub_2365B0380();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v16 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_236530574((_QWORD *)(v0 + 1168), v0 + 1216);
    v7 = sub_2365B0080();
    *(_QWORD *)(v0 + 1280) = sub_236468D88(v7, v8, &v16);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_2365305B0(v0 + 1168);
    _os_log_impl(&dword_23644B000, v3, v4, "Generating symptom report with context: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v6, -1, -1);
    MEMORY[0x23B7F5254](v5, -1, -1);
  }
  else
  {
    sub_2365305B0(v0 + 1168);
  }

  v9 = sub_23652B008(*(_QWORD **)(v0 + 1296));
  *(_QWORD *)(v0 + 1320) = v9;
  v10 = *(_QWORD *)(v0 + 1304);
  v11 = *(uint64_t **)(v0 + 1296);
  v12 = OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession;
  *(_QWORD *)(v0 + 1328) = OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession;
  v13 = *(_QWORD *)(v10 + v12);
  *(_QWORD *)(v10 + v12) = v9;
  swift_retain_n();
  sub_236527A30(v13);
  swift_release();
  swift_release();
  v14 = *v11;
  *(_QWORD *)(v0 + 1336) = *v11;
  *(_QWORD *)(v0 + 144) = v14;
  sub_2364854F0(v0 + 144);
  sub_236484B60((__int128 *)(v0 + 144), (_OWORD *)(v0 + 400));
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2365296A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[165];
  v2 = swift_task_alloc();
  v0[168] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0 + 50;
  v3 = (_QWORD *)swift_task_alloc();
  v0[169] = v3;
  *v3 = v0;
  v3[1] = sub_236529748;
  return sub_2365B0914();
}

uint64_t sub_236529748()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1360) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_2365297BC()
{
  uint64_t v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[6];

  sub_236484B60((__int128 *)(v0 + 272), (_OWORD *)(v0 + 656));
  sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 528));
  v1 = sub_236484B90(v0 + 528);
  if (v1 == 6)
  {
    v10 = nullsub_1(v0 + 528);
    v50 = *(_QWORD *)(v10 + 8);
    v52 = *(_QWORD *)v10;
    v46 = *(_QWORD *)(v10 + 24);
    v48 = *(_QWORD *)(v10 + 16);
    v45 = *(_QWORD *)(v10 + 32);
    v44 = *(_BYTE *)(v10 + 40);
    sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 16));
    v11 = nullsub_1(v0 + 16);
    v12 = *(_QWORD *)v11;
    v40 = *(_QWORD *)(v11 + 8);
    v13 = *(_QWORD *)(v11 + 16);
    v42 = *(_QWORD *)(v11 + 32);
    v43 = *(_QWORD *)(v11 + 24);
    v41 = *(_BYTE *)(v11 + 40);
    sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 784));
    v14 = nullsub_1(v0 + 784);
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(_QWORD *)(v14 + 16);
    v18 = *(_QWORD *)(v14 + 24);
    v19 = *(_QWORD *)(v14 + 32);
    v20 = *(_BYTE *)(v14 + 40);
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    sub_236484E9C(v15, v16, v17, v18, v19, v20);
    sub_236484E9C(v12, v40, v13, v43, v42, v41);
    v21 = sub_2365AFBE8();
    v22 = sub_2365B0398();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      sub_236485B14();
      swift_allocError();
      *(_QWORD *)v25 = v52;
      *(_QWORD *)(v25 + 8) = v50;
      *(_QWORD *)(v25 + 16) = v48;
      *(_QWORD *)(v25 + 24) = v46;
      *(_QWORD *)(v25 + 32) = v45;
      *(_BYTE *)(v25 + 40) = v44;
      sub_236484E9C(v12, v40, v13, v43, v42, v41);
      v26 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 1264) = v26;
      sub_2365B04A0();
      *v24 = v26;
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      _os_log_impl(&dword_23644B000, v21, v22, "Failed to generate symptom report with error: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v24, -1, -1);
      MEMORY[0x23B7F5254](v23, -1, -1);
    }
    else
    {
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    }
    v36 = *(_QWORD *)(v0 + 1328);
    v37 = *(_QWORD *)(v0 + 1304);

    sub_236485B14();
    swift_allocError();
    *(_QWORD *)v38 = v52;
    *(_QWORD *)(v38 + 8) = v50;
    *(_QWORD *)(v38 + 16) = v48;
    *(_QWORD *)(v38 + 24) = v46;
    *(_QWORD *)(v38 + 32) = v45;
    *(_BYTE *)(v38 + 40) = v44;
    swift_willThrow();
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    v30 = *(_QWORD *)(v37 + v36);
    *(_QWORD *)(v37 + v36) = 0;
    goto LABEL_12;
  }
  if (v1 != 3)
  {
    v27 = *(_QWORD *)(v0 + 1328);
    v28 = *(_QWORD *)(v0 + 1304);
    sub_236485B14();
    swift_allocError();
    *(_OWORD *)v29 = 0u;
    *(_OWORD *)(v29 + 16) = 0u;
    *(_QWORD *)(v29 + 32) = 0;
    *(_BYTE *)(v29 + 40) = 4;
    swift_willThrow();
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    v30 = *(_QWORD *)(v28 + v27);
    *(_QWORD *)(v28 + v27) = 0;
LABEL_12:
    sub_236527A30(v30);
    swift_release();
    swift_release();
    swift_task_dealloc();
    v35 = *(uint64_t (**)(void))(v0 + 8);
    return v35();
  }
  v2 = (uint64_t *)nullsub_1(v0 + 528);
  v3 = *v2;
  v49 = v2[2];
  v51 = v2[1];
  v47 = v2[3];
  sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 912));
  nullsub_1(v0 + 912);
  sub_236484B60((__int128 *)(v0 + 656), (_OWORD *)(v0 + 1040));
  nullsub_1(v0 + 1040);
  sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v4 = sub_2365AFBE8();
  v5 = sub_2365B0380();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136315138;
    v53[0] = v7;
    v53[1] = v3;
    v53[2] = v51;
    v53[3] = v49;
    v53[4] = v47;
    v8 = SymptomReport.description.getter();
    *(_QWORD *)(v0 + 1272) = sub_236468D88(v8, v9, v53);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    _os_log_impl(&dword_23644B000, v4, v5, "Generated Apple ID symptom report: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v7, -1, -1);
    MEMORY[0x23B7F5254](v6, -1, -1);
  }
  else
  {
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
  }

  sub_236487E90(v0 + 656, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
  v31 = *(_QWORD *)(v0 + 1328);
  v32 = *(_QWORD *)(v0 + 1304);
  v33 = *(uint64_t **)(v0 + 1288);
  *v33 = v3;
  v33[1] = v51;
  v33[2] = v49;
  v33[3] = v47;
  v34 = *(_QWORD *)(v32 + v31);
  *(_QWORD *)(v32 + v31) = 0;
  sub_236527A30(v34);
  swift_release();
  swift_release();
  swift_task_dealloc();
  v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_236529E0C()
{
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236529E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 1328);
  v2 = *(_QWORD *)(v0 + 1304);
  v3 = *(_QWORD *)(v2 + v1);
  *(_QWORD *)(v2 + v1) = 0;
  sub_236527A30(v3);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_236529EB8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD v39[8];
  _OWORD v40[8];
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45[8];
  _OWORD v46[8];
  __int128 v47;

  v4 = v3;
  v36 = a2;
  v37 = a3;
  v6 = sub_2365AFCFC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v32 - v11;
  if (qword_2563E42C8 != -1)
    swift_once();
  v13 = sub_2365AFC00();
  v14 = __swift_project_value_buffer(v13, (uint64_t)qword_2563E60C0);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v15(v12, a1, v6);
  v38 = v14;
  v16 = sub_2365AFBE8();
  v17 = sub_2365B038C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v35 = a1;
    v19 = (uint8_t *)v18;
    v33 = swift_slowAlloc();
    *(_QWORD *)&v47 = v33;
    v34 = v4;
    *(_DWORD *)v19 = 136315138;
    v32[1] = v19 + 4;
    v15(v10, (uint64_t)v12, v6);
    v20 = sub_2365B0080();
    *(_QWORD *)&v46[0] = sub_236468D88(v20, v21, (uint64_t *)&v47);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    _os_log_impl(&dword_23644B000, v16, v17, "Received XPC message: %s", v19, 0xCu);
    v22 = v33;
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v22, -1, -1);
    MEMORY[0x23B7F5254](v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }

  sub_236485954();
  sub_2365AFCF0();
  sub_236484B60(&v47, v45);
  sub_236484B60(v45, v46);
  if (sub_236484B90((uint64_t)v46) == 4)
  {
    v23 = nullsub_1(v46);
    v24 = *(_BYTE *)(v23 + 8);
    *(_QWORD *)&v41 = *(_QWORD *)v23;
    BYTE8(v41) = v24;
    v42 = *(_OWORD *)(v23 + 16);
    sub_236484B60(v45, v40);
    nullsub_1(v40);
    swift_retain();
    swift_retain();
    sub_23652A590((uint64_t *)&v41, v36, v37);
    sub_23648536C((uint64_t)&v41);
    sub_236484B60(&v41, v39);
    sub_236485998();
    sub_2365AFCE4();
    sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
  }
  else
  {
    sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    v25 = sub_2365AFBE8();
    v26 = sub_2365B038C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      *(_QWORD *)&v40[0] = v28;
      *(_DWORD *)v27 = 136315138;
      sub_236484B60(v45, &v41);
      sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
      v29 = sub_2365B0080();
      *(_QWORD *)&v41 = sub_236468D88(v29, v30, (uint64_t *)v40);
      sub_2365B04A0();
      swift_bridgeObjectRelease();
      sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      _os_log_impl(&dword_23644B000, v25, v26, "Received unexpected mach repair message: %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v28, -1, -1);
      MEMORY[0x23B7F5254](v27, -1, -1);
    }
    else
    {
      sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
    }

    v43 = 0;
    v41 = 0u;
    v42 = 0u;
    v44 = 4;
    sub_236485360((uint64_t)&v41);
    sub_236484B60(&v41, v40);
    sub_236485998();
    sub_2365AFCE4();
  }
  return sub_236487E90((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
}

void sub_23652A590(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t (*v11)(uint64_t);
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  unint64_t v27;
  uint64_t v28;
  char isEscapingClosureAtFileLocation;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  void *v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  __int128 v45[2];
  uint64_t v46[3];
  uint64_t v47;
  uint64_t v48;
  __int128 aBlock;
  uint64_t (*v50)(uint64_t);
  void *v51;
  uint64_t (*v52)();
  _QWORD *v53;

  v43 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v42 = v7;
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v44 = *((unsigned __int8 *)a1 + 8);
  v11 = (uint64_t (*)(uint64_t))a1[2];
  v10 = (void *)a1[3];
  if (qword_2563E42B8 != -1)
    swift_once();
  v12 = (void *)sub_2365AFC00();
  __swift_project_value_buffer((uint64_t)v12, (uint64_t)qword_25641F6A8);
  swift_retain_n();
  swift_retain_n();
  v13 = sub_2365AFBE8();
  v14 = sub_2365B038C();
  if (os_log_type_enabled(v13, v14))
  {
    v37 = v12;
    v15 = swift_slowAlloc();
    v38 = a2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v40 = v6;
    v18 = v17;
    v39 = v8;
    *(_DWORD *)v16 = 136315138;
    v46[0] = v17;
    v36[1] = v16 + 4;
    *(_QWORD *)&aBlock = v9;
    BYTE8(aBlock) = v44;
    v50 = v11;
    v51 = v10;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5D30);
    v19 = sub_2365B0080();
    *(_QWORD *)&aBlock = sub_236468D88(v19, v20, v46);
    v8 = v39;
    sub_2365B04A0();
    swift_release_n();
    swift_release_n();
    v12 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23644B000, v13, v14, "Received coordinated model update: %s", v16, 0xCu);
    swift_arrayDestroy();
    v21 = v18;
    v6 = v40;
    MEMORY[0x23B7F5254](v21, -1, -1);
    v22 = v16;
    a2 = v38;
    MEMORY[0x23B7F5254](v22, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  sub_23646C4B0((uint64_t)(a2 + 1), (uint64_t)&aBlock, &qword_2563E6A70);
  if (v51)
  {
    sub_23646A440(&aBlock, (uint64_t)v46);
    v23 = v47;
    v24 = v48;
    __swift_project_boxed_opaque_existential_1(v46, v47);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
    if (!v25)
      v25 = *(id *)(v41 + 112);
    v26 = v25;
    sub_23648D710((uint64_t)v46, (uint64_t)v45);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v43, v5);
    v27 = (*(unsigned __int8 *)(v6 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v28 = swift_allocObject();
    sub_23646A440(v45, v28 + 16);
    *(_QWORD *)(v28 + 56) = v9;
    *(_BYTE *)(v28 + 64) = v44;
    *(_QWORD *)(v28 + 72) = v11;
    *(_QWORD *)(v28 + 80) = v10;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v28 + v27, v8, v5);
    a2 = (_QWORD *)swift_allocObject();
    a2[2] = sub_236530D4C;
    a2[3] = v28;
    v52 = sub_236530D9C;
    v53 = a2;
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v50 = sub_236527978;
    v51 = &block_descriptor_44;
    v12 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_async_and_wait(v26, v12);

    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  sub_236465998((uint64_t)&aBlock, &qword_2563E6A70);
  if (qword_2563E42C8 != -1)
LABEL_17:
    swift_once();
  __swift_project_value_buffer((uint64_t)v12, (uint64_t)qword_2563E60C0);
  sub_236530574(a2, (uint64_t)&aBlock);
  v30 = sub_2365AFBE8();
  v31 = sub_2365B0398();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    *(_QWORD *)&v45[0] = v33;
    *(_DWORD *)v32 = 136315138;
    sub_236530574(&aBlock, (uint64_t)v46);
    v34 = sub_2365B0080();
    v46[0] = sub_236468D88(v34, v35, (uint64_t *)v45);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_2365305B0((uint64_t)&aBlock);
    _os_log_impl(&dword_23644B000, v30, v31, "Unable to use exchange from context: %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v33, -1, -1);
    MEMORY[0x23B7F5254](v32, -1, -1);
  }
  else
  {
    sub_2365305B0((uint64_t)&aBlock);
  }

}

uint64_t sub_23652AB6C(_QWORD *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v21 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[4];
  v23 = a1[3];
  v22 = __swift_project_boxed_opaque_existential_1(a1, v23);
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v27 = a5;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v21, v11);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_BYTE *)(v17 + 24) = a3;
  *(_QWORD *)(v17 + 32) = a4;
  *(_QWORD *)(v17 + 40) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v16, v14, v11);
  v18 = *(void (**)(uint64_t *, uint64_t (*)(uint64_t *), uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_retain();
  swift_retain();
  v18(&v24, sub_236530E3C, v17, v23, v15);
  return swift_release();
}

uint64_t sub_23652ACB0(uint64_t *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[8];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;

  LODWORD(v34) = a3;
  v33 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB18);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = a1[2];
  v35 = a1[1];
  v36 = v14;
  if (qword_2563E42B8 != -1)
    swift_once();
  v16 = sub_2365AFC00();
  __swift_project_value_buffer(v16, (uint64_t)qword_25641F6A8);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  v17 = sub_2365AFBE8();
  v18 = sub_2365B038C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v31 = v11;
    v20 = v19;
    v30 = swift_slowAlloc();
    *(_QWORD *)&v37[0] = v30;
    *(_DWORD *)v20 = 136315394;
    v32 = v10;
    *(_QWORD *)&v38 = v33;
    BYTE8(v38) = v34 & 1;
    v39 = a4;
    v40 = a5;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5D30);
    v21 = sub_2365B0080();
    v34 = a6;
    *(_QWORD *)&v38 = sub_236468D88(v21, v22, (uint64_t *)v37);
    sub_2365B04A0();
    swift_release_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v23 = v35;
    v24 = v36;
    *(_QWORD *)&v38 = v36;
    *((_QWORD *)&v38 + 1) = v35;
    v39 = v15;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5D10);
    v25 = sub_2365B0080();
    *(_QWORD *)&v38 = sub_236468D88(v25, v26, (uint64_t *)v37);
    sub_2365B04A0();
    swift_release_n();
    v10 = v32;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23644B000, v17, v18, "Responding to model update (%s) with response: %s", (uint8_t *)v20, 0x16u);
    v27 = v30;
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v27, -1, -1);
    v28 = v20;
    v11 = v31;
    MEMORY[0x23B7F5254](v28, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_release_n();
    swift_release_n();
    v23 = v35;
    v24 = v36;
  }
  *(_QWORD *)&v38 = v24;
  *((_QWORD *)&v38 + 1) = v23;
  v39 = v15;
  sub_23648540C((uint64_t)&v38);
  sub_236484B60(&v38, v37);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  sub_2365B0248();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

_QWORD *sub_23652B008(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  __int128 v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD v49[2];
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62[6];
  _OWORD v63[3];
  uint64_t v64;

  v60 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v1);
  v51 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB40);
  v55 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v55 + 64);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v56 = (uint64_t)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v49 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB48);
  v54 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB50);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v53 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v61 = (char *)v49 - v14;
  if (qword_2563E4320 != -1)
    swift_once();
  v15 = sub_2365AFC00();
  __swift_project_value_buffer(v15, (uint64_t)qword_2563EA930);
  sub_236530574(v60, (uint64_t)v63);
  v16 = sub_2365AFBE8();
  v17 = sub_2365B038C();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v49[1] = v3;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v64 = v20;
    v50 = v7;
    *(_DWORD *)v19 = 136315138;
    v49[0] = v19 + 4;
    sub_236530574(v63, (uint64_t)v62);
    v21 = sub_2365B0080();
    v62[0] = sub_236468D88(v21, v22, &v64);
    v7 = v50;
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_2365305B0((uint64_t)v63);
    _os_log_impl(&dword_23644B000, v16, v17, "Creating new XPC session for context: %s", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v20, -1, -1);
    MEMORY[0x23B7F5254](v19, -1, -1);
  }
  else
  {
    sub_2365305B0((uint64_t)v63);
  }

  v23 = swift_allocBox();
  v25 = v24;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  MEMORY[0x24BDAC7A8](v27);
  v49[-2] = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v10, *MEMORY[0x24BEE6A10], v8);
  sub_2365B029C();
  sub_23646C4B0(v25, (uint64_t)v7, &qword_2563EAB40);
  v28 = swift_allocObject();
  swift_weakInit();
  v29 = v56;
  sub_23646C4B0((uint64_t)v7, v56, &qword_2563EAB40);
  sub_236530574(v60, (uint64_t)v63);
  v30 = (*(unsigned __int8 *)(v55 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v31 = (v4 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = (uint64_t)v7;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v28;
  sub_23650D450(v29, v33 + v30, &qword_2563EAB40);
  v34 = (_OWORD *)(v33 + v31);
  v35 = v63[1];
  *v34 = v63[0];
  v34[1] = v35;
  v34[2] = v63[2];
  swift_retain();
  swift_retain();
  v36 = v57;
  v37 = (_QWORD *)sub_23652CD64((uint64_t)sub_2365312E0, v33, (uint64_t)sub_236531348, v23);
  if (v36)
  {
    swift_release();
    swift_release();
    sub_236465998(v32, &qword_2563EAB40);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v59);
    swift_release();
  }
  else
  {
    sub_236465998(v32, &qword_2563EAB40);
    swift_release();
    swift_release();
    swift_release();
    v38 = sub_2365B0218();
    v39 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v51, 1, 1, v38);
    v41 = v58;
    v40 = v59;
    v42 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    v60 = v37;
    v43 = v53;
    v42(v53, v61, v59);
    v44 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v45 = (v52 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
    v46 = swift_allocObject();
    *(_QWORD *)(v46 + 16) = 0;
    *(_QWORD *)(v46 + 24) = 0;
    v47 = v43;
    v37 = v60;
    (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v46 + v44, v47, v40);
    *(_QWORD *)(v46 + v45) = v37;
    swift_retain();
    sub_2364CF1E4(v39, (uint64_t)&unk_2563EAB60, v46);
    swift_release();
    sub_236465998(v39, &qword_2563E9790);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v61, v40);
  }
  swift_release();
  return v37;
}

uint64_t sub_23652B64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_236465998(a2, &qword_2563EAB40);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

double sub_23652B6C0@<D0>(uint8_t *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X2>, _QWORD *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint8_t *, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  _OWORD *v41;
  double result;
  uint64_t v43;
  _QWORD *v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[3];
  uint64_t v52;

  v44 = a3;
  v45 = a2;
  v48 = a1;
  v50 = a4;
  v4 = sub_2365AFCFC();
  v49 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v49 + 64);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v43 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v9);
  v46 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v43 - v19;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v22 = Strong;
    sub_23646C4B0((uint64_t)v45, (uint64_t)v13, &qword_2563EAB40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      v45 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v45(v20, v13, v14);
      v32 = sub_2365B0218();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v46, 1, 1, v32);
      v33 = v4;
      v43 = v4;
      v34 = v49;
      (*(void (**)(char *, uint8_t *, uint64_t))(v49 + 16))(v47, v48, v33);
      sub_236530574(v44, (uint64_t)v51);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
      v35 = (*(unsigned __int8 *)(v34 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
      v36 = (v5 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
      v37 = (*(unsigned __int8 *)(v15 + 80) + v36 + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v38 = (char *)swift_allocObject();
      *((_QWORD *)v38 + 2) = 0;
      *((_QWORD *)v38 + 3) = 0;
      *((_QWORD *)v38 + 4) = v22;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v38[v35], v47, v43);
      v39 = &v38[v36];
      v40 = v51[1];
      *(_OWORD *)v39 = v51[0];
      *((_OWORD *)v39 + 1) = v40;
      *((_OWORD *)v39 + 2) = v51[2];
      v45(&v38[v37], v18, v14);
      swift_retain();
      sub_23649225C(v46, (uint64_t)&unk_2563EAB80, (uint64_t)v38);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      goto LABEL_11;
    }
    swift_release();
    sub_236465998((uint64_t)v13, &qword_2563EAB40);
  }
  if (qword_2563E4320 != -1)
    swift_once();
  v23 = sub_2365AFC00();
  __swift_project_value_buffer(v23, (uint64_t)qword_2563EA930);
  v24 = v49;
  v25 = *(void (**)(char *, uint8_t *, uint64_t))(v49 + 16);
  v25(v7, v48, v4);
  v26 = sub_2365AFBE8();
  v27 = sub_2365B0398();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    *(_QWORD *)&v51[0] = v29;
    *(_DWORD *)v28 = 136315138;
    v48 = v28 + 4;
    v25(v47, (uint8_t *)v7, v4);
    v30 = sub_2365B0080();
    v52 = sub_236468D88(v30, v31, (uint64_t *)v51);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
    _os_log_impl(&dword_23644B000, v26, v27, "Received a new XPC message but lost self: %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v29, -1, -1);
    MEMORY[0x23B7F5254](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
  }

LABEL_11:
  v41 = (_OWORD *)v50;
  *(_QWORD *)(v50 + 32) = 0;
  result = 0.0;
  *v41 = 0u;
  v41[1] = 0u;
  return result;
}

uint64_t sub_23652BB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return swift_task_switch();
}

uint64_t sub_23652BB94()
{
  uint64_t v0;

  sub_236529EB8(*(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23652BBC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint8_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2365AFCCC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_projectBox();
  if (qword_2563E42C8 != -1)
    swift_once();
  v10 = sub_2365AFC00();
  __swift_project_value_buffer(v10, (uint64_t)qword_2563E60C0);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v11(v8, a1, v5);
  v12 = sub_2365AFBE8();
  v13 = sub_2365B0398();
  if (os_log_type_enabled(v12, v13))
  {
    v23 = v9;
    v14 = (uint8_t *)swift_slowAlloc();
    v22 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v14 = 138412290;
    v21 = v14 + 4;
    sub_23644F0B8(&qword_2563E9C70, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6678], MEMORY[0x24BEE6688]);
    swift_allocError();
    v11(v15, (uint64_t)v8, v5);
    v16 = _swift_stdlib_bridgeErrorToNSError();
    v24 = v16;
    sub_2365B04A0();
    v17 = v22;
    *v22 = v16;
    v9 = v23;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_23644B000, v12, v13, "XPC session cancelled: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v17, -1, -1);
    MEMORY[0x23B7F5254](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  swift_beginAccess();
  sub_23646C4B0(v9, (uint64_t)v4, &qword_2563EAB40);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v19 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_2365B0254();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  return result;
}

uint64_t sub_23652BEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[195] = a5;
  v5[194] = a4;
  v6 = sub_2365AFCFC();
  v5[196] = v6;
  v5[197] = *(_QWORD *)(v6 - 8);
  v5[198] = swift_task_alloc();
  v5[199] = swift_task_alloc();
  v5[200] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB68);
  v5[201] = v7;
  v5[202] = *(_QWORD *)(v7 - 8);
  v5[203] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23652BF68()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB50);
  sub_2365B026C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1632) = v1;
  *v1 = v0;
  v1[1] = sub_23652BFF0;
  return sub_2365B0278();
}

uint64_t sub_23652BFF0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23652C044()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  sub_23650D450(v0 + 272, v0 + 144, &qword_2563EAB70);
  sub_23650D450(v0 + 144, v0 + 16, &qword_2563EAB70);
  if (sub_23653148C(v0 + 16) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 1616) + 8))(*(_QWORD *)(v0 + 1624), *(_QWORD *)(v0 + 1608));
    if (qword_2563E42C8 != -1)
      swift_once();
    v1 = sub_2365AFC00();
    __swift_project_value_buffer(v1, (uint64_t)qword_2563E60C0);
    v2 = sub_2365AFBE8();
    v3 = sub_2365B0380();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_23644B000, v2, v3, "End of outgoing messages to daemon", v4, 2u);
      MEMORY[0x23B7F5254](v4, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_2563E42C8 != -1)
      swift_once();
    v6 = sub_2365AFC00();
    *(_QWORD *)(v0 + 1640) = __swift_project_value_buffer(v6, (uint64_t)qword_2563E60C0);
    sub_23650D450(v0 + 144, v0 + 528, &qword_2563EAB70);
    sub_23650D450(v0 + 144, v0 + 400, &qword_2563EAB70);
    sub_236487E90(v0 + 400, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    sub_236487E90(v0 + 528, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    v7 = sub_2365AFBE8();
    v8 = sub_2365B038C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v16 = v10;
      *(_DWORD *)v9 = 136315138;
      sub_236484B60((__int128 *)(v0 + 16), (_OWORD *)(v0 + 1424));
      sub_236487E90(v0 + 528, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
      v11 = sub_2365B0080();
      *(_QWORD *)(v9 + 4) = sub_236468D88(v11, v12, &v16);
      swift_bridgeObjectRelease();
      sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
      sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
      _os_log_impl(&dword_23644B000, v7, v8, "Sending message: %s", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v10, -1, -1);
      MEMORY[0x23B7F5254](v9, -1, -1);
    }
    else
    {
      sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
      sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
    }

    v13 = *(_QWORD *)(v0 + 1560);
    sub_236484B60((__int128 *)(v0 + 16), (_OWORD *)(v0 + 656));
    v14 = swift_task_alloc();
    *(_QWORD *)(v0 + 1648) = v14;
    *(_QWORD *)(v14 + 16) = v13;
    *(_QWORD *)(v14 + 24) = v0 + 656;
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1656) = v15;
    *v15 = v0;
    v15[1] = sub_23652C430;
    return sub_2365B0914();
  }
}

uint64_t sub_23652C430()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1664) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23652C49C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  swift_task_dealloc();
  v1 = *(void **)(v0 + 1664);
  sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236531618);
  v2 = v1;
  sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236531618);
  v3 = v1;
  v4 = sub_2365AFBE8();
  v5 = sub_2365B0398();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v6 = 136315394;
    sub_236484B60((__int128 *)(v0 + 16), (_OWORD *)(v0 + 912));
    sub_23650D450(v0 + 144, v0 + 784, &qword_2563EAB70);
    sub_236487E90(v0 + 784, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    v8 = sub_2365B0080();
    *(_QWORD *)(v6 + 4) = sub_236468D88(v8, v9, &v15);
    swift_bridgeObjectRelease();
    sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
    sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
    *(_WORD *)(v6 + 12) = 2112;
    v10 = v1;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v6 + 14) = v11;
    *v7 = v11;

    _os_log_impl(&dword_23644B000, v4, v5, "Failed to send message (%s) with error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v14, -1, -1);
    MEMORY[0x23B7F5254](v6, -1, -1);

    sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
  }
  else
  {
    sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);

    sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
    sub_236487E90(v0 + 144, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);

  }
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1632) = v12;
  *v12 = v0;
  v12[1] = sub_23652BFF0;
  return sub_2365B0278();
}

uint64_t sub_23652C764()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];

  v1 = v0 + 144;
  v2 = (__int128 *)(v0 + 1040);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1576) + 16);
  v3(*(_QWORD *)(v0 + 1592), *(_QWORD *)(v0 + 1600), *(_QWORD *)(v0 + 1568));
  v4 = sub_2365AFBE8();
  v5 = sub_2365B038C();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 1592);
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 1584);
    v9 = *(_QWORD *)(v0 + 1576);
    v10 = *(_QWORD *)(v0 + 1568);
    v11 = swift_slowAlloc();
    v43[0] = swift_slowAlloc();
    v12 = v43[0];
    *(_DWORD *)v11 = 136315138;
    v3(v8, v7, v10);
    v13 = sub_2365B0080();
    *(_QWORD *)(v11 + 4) = sub_236468D88(v13, v14, v43);
    swift_bridgeObjectRelease();
    v15 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v2 = (__int128 *)(v0 + 1040);
    v15(v7, v10);
    _os_log_impl(&dword_23644B000, v4, v5, "Sent message and received reply: %s", (uint8_t *)v11, 0xCu);
    swift_arrayDestroy();
    v16 = v12;
    v1 = v0 + 144;
    MEMORY[0x23B7F5254](v16, -1, -1);
    MEMORY[0x23B7F5254](v11, -1, -1);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 1576) + 8);
    v15(*(_QWORD *)(v0 + 1592), *(_QWORD *)(v0 + 1568));
  }

  v17 = *(void **)(v0 + 1664);
  sub_236485954();
  sub_2365AFCF0();
  if (v17)
  {
    v15(*(_QWORD *)(v0 + 1600), *(_QWORD *)(v0 + 1568));
    sub_236487E90(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236531618);
    v18 = v17;
    sub_236487E90(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236531618);
    v19 = v17;
    v20 = sub_2365AFBE8();
    v21 = sub_2365B0398();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = v1;
      v24 = (_QWORD *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v43[0] = v41;
      *(_DWORD *)v22 = 136315394;
      sub_236484B60((__int128 *)(v0 + 16), (_OWORD *)(v0 + 912));
      sub_23650D450(v23, v0 + 784, &qword_2563EAB70);
      sub_236487E90(v0 + 784, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
      v25 = sub_2365B0080();
      *(_QWORD *)(v22 + 4) = sub_236468D88(v25, v26, v43);
      swift_bridgeObjectRelease();
      sub_236487E90(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
      sub_236487E90(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
      *(_WORD *)(v22 + 12) = 2112;
      v27 = v17;
      v28 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v22 + 14) = v28;
      *v24 = v28;

      _os_log_impl(&dword_23644B000, v20, v21, "Failed to send message (%s) with error: %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v24, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v41, -1, -1);
      MEMORY[0x23B7F5254](v22, -1, -1);

      sub_236487E90(v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
    }
    else
    {
      sub_236487E90(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);

      sub_236487E90(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
      sub_236487E90(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);

    }
  }
  else
  {
    sub_236484B60(v2, (_OWORD *)(v0 + 1168));
    sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    v29 = sub_2365AFBE8();
    v30 = sub_2365B038C();
    v31 = os_log_type_enabled(v29, v30);
    v32 = *(_QWORD *)(v0 + 1600);
    v33 = *(_QWORD *)(v0 + 1568);
    if (v31)
    {
      v42 = v1;
      v34 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v43[0] = v35;
      *(_DWORD *)v34 = 136315138;
      sub_236484B60((__int128 *)(v0 + 1168), (_OWORD *)(v0 + 1296));
      sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
      v36 = sub_2365B0080();
      *(_QWORD *)(v34 + 4) = sub_236468D88(v36, v37, v43);
      swift_bridgeObjectRelease();
      sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      _os_log_impl(&dword_23644B000, v29, v30, "Decoded response: %s", (uint8_t *)v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v35, -1, -1);
      MEMORY[0x23B7F5254](v34, -1, -1);

      sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      v38 = v42;
    }
    else
    {

      sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      sub_236487E90(v0 + 1168, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236484CE0);
      v38 = v1;
    }
    sub_236487E90(v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_2365314A0);
    v15(v32, v33);
  }
  v39 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1632) = v39;
  *v39 = v0;
  v39[1] = sub_23652BFF0;
  return sub_2365B0278();
}

uint64_t sub_23652CD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = a1;
  v5 = v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A18);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2365AFCC0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v5 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession);
  if (v16)
  {
    v17 = qword_2563E4320;
    swift_retain();
    if (v17 != -1)
      swift_once();
    v18 = sub_2365AFC00();
    __swift_project_value_buffer(v18, (uint64_t)qword_2563EA930);
    swift_retain_n();
    v19 = sub_2365AFBE8();
    v20 = sub_2365B038C();
    if (os_log_type_enabled(v19, v20))
    {
      v35[2] = v5;
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v39 = v22;
      v35[1] = a2;
      *(_DWORD *)v21 = 136315138;
      v35[0] = v21 + 4;
      v38 = v16;
      sub_2365AFCB4();
      swift_retain();
      v23 = sub_2365B0080();
      v38 = sub_236468D88(v23, v24, &v39);
      sub_2365B04A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23644B000, v19, v20, "Activating inactive session: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v22, -1, -1);
      MEMORY[0x23B7F5254](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_2365AFC30();
    sub_2365AFC60();
    sub_2365AFC54();
    v31 = v37;
    sub_2365AFC9C();
    if (v31)
      swift_release();
  }
  else
  {
    sub_23646C4B0(v5 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, (uint64_t)v11, &qword_2563E9A18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_236465998((uint64_t)v11, &qword_2563E9A18);
      if (qword_2563E4320 != -1)
        swift_once();
      v25 = sub_2365AFC00();
      __swift_project_value_buffer(v25, (uint64_t)qword_2563EA930);
      v26 = sub_2365AFBE8();
      v27 = sub_2365B038C();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_23644B000, v26, v27, "Creating new repair xpc session from scratch", v28, 2u);
        MEMORY[0x23B7F5254](v28, -1, -1);
      }

      v29 = v37;
      v30 = sub_23652D4D4(0xD000000000000022, 0x80000002365CB8F0, v36, a2, a3);
      if (!v29)
        return v30;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      v32 = v37;
      v33 = sub_23652D1B8(v15, v36, a2, a3, a4);
      if (!v32)
        v16 = v33;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  return v16;
}

uint64_t sub_23652D1B8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  _QWORD v32[4];
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;

  v37 = a2;
  v38 = a3;
  v9 = sub_2365AFC48();
  MEMORY[0x24BDAC7A8](v9);
  v35 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2365AFCC0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v33 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v32 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v32 - v18;
  if (qword_2563E4320 != -1)
    swift_once();
  v20 = sub_2365AFC00();
  __swift_project_value_buffer(v20, (uint64_t)qword_2563EA930);
  v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v34 = a1;
  v39 = v21;
  v21(v19, a1, v11);
  v22 = sub_2365AFBE8();
  v23 = sub_2365B038C();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v32[2] = a5;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc();
    v32[1] = a4;
    v27 = v26;
    v41 = v26;
    v32[3] = v5;
    *(_DWORD *)v25 = 136315138;
    v32[0] = v25 + 4;
    v39(v17, v19, v11);
    v28 = sub_2365B0080();
    v40 = sub_236468D88(v28, v29, &v41);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
    _os_log_impl(&dword_23644B000, v22, v23, "Creating new session with xpc endpoint: %s", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v27, -1, -1);
    MEMORY[0x23B7F5254](v25, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
  }

  sub_2365AFCB4();
  v39(v33, v34, v11);
  v30 = *(id *)(v36 + 112);
  sub_2365AFC3C();
  swift_retain();
  swift_retain();
  return sub_2365AFCA8();
}

uint64_t sub_23652D4D4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  id v19;
  _QWORD v21[8];
  uint64_t v22;

  v21[6] = a5;
  v10 = sub_2365AFC48();
  MEMORY[0x24BDAC7A8](v10);
  v21[5] = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563E4320 != -1)
    swift_once();
  v12 = sub_2365AFC00();
  __swift_project_value_buffer(v12, (uint64_t)qword_2563EA930);
  swift_bridgeObjectRetain_n();
  v13 = sub_2365AFBE8();
  v14 = sub_2365B038C();
  if (os_log_type_enabled(v13, v14))
  {
    v21[3] = v5;
    v15 = swift_slowAlloc();
    v21[2] = a4;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    v22 = v17;
    v21[1] = a3;
    *(_DWORD *)v16 = 136315138;
    swift_bridgeObjectRetain();
    v21[7] = sub_236468D88(a1, a2, &v22);
    sub_2365B04A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23644B000, v13, v14, "Creating new session for mach service: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v17, -1, -1);
    MEMORY[0x23B7F5254](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_2365AFCB4();
  v18 = *(void **)(v21[4] + 112);
  swift_bridgeObjectRetain();
  v19 = v18;
  sub_2365AFC3C();
  swift_retain();
  swift_retain();
  return sub_2365AFC24();
}

uint64_t RepairController.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t __RepairController.repairController.getter()
{
  return swift_retain();
}

id __RepairController.__allocating_init(queue:)(void *a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_class *v10;
  char *v11;
  id v12;
  objc_super v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A18);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone(v1);
  v7 = sub_2365AFCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  type metadata accessor for RepairController();
  v8 = swift_allocObject();
  v9 = a1;
  swift_defaultActor_initialize();
  *(_QWORD *)(v8 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  *(_QWORD *)(v8 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession) = 0;
  *(_QWORD *)(v8 + 112) = v9;
  sub_23650D450((uint64_t)v5, v8 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, &qword_2563E9A18);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  swift_release();
  v10 = (objc_class *)type metadata accessor for __RepairController();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR_____AISRepairController_repairController] = v8;
  v14.receiver = v11;
  v14.super_class = v10;
  v12 = objc_msgSendSuper2(&v14, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v12;
}

id __RepairController.init(queue:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_class *v8;
  char *v9;
  id v10;
  objc_super v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9A18);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2365AFCC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for RepairController();
  v6 = swift_allocObject();
  v7 = a1;
  swift_defaultActor_initialize();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession) = 0;
  *(_QWORD *)(v6 + 112) = v7;
  sub_23650D450((uint64_t)v4, v6 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, &qword_2563E9A18);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  swift_release();
  v8 = (objc_class *)type metadata accessor for __RepairController();
  v9 = (char *)objc_allocWithZone(v8);
  *(_QWORD *)&v9[OBJC_IVAR_____AISRepairController_repairController] = v6;
  v12.receiver = v9;
  v12.super_class = v8;
  v10 = objc_msgSendSuper2(&v12, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t sub_23652DA44(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23652EC2C(a1, a2, a3, "__AISRepairController repair with context called: %@", (uint64_t)&unk_2507D90B8, (void (*)(uint64_t, uint64_t))sub_23645063C, (uint64_t)&unk_2563EA978, (uint64_t)&unk_2507D9068);
}

uint64_t sub_23652DA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[60] = a6;
  v7[61] = a7;
  v7[58] = a4;
  v7[59] = a5;
  v8 = sub_2365AFD38();
  v7[62] = v8;
  v7[63] = *(_QWORD *)(v8 - 8);
  v7[64] = swift_task_alloc();
  v9 = sub_2365AFD74();
  v7[65] = v9;
  v7[66] = *(_QWORD *)(v9 - 8);
  v7[67] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23652DB28()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[58] + OBJC_IVAR_____AISRepairController_repairController);
  v0[68] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[69] = v2;
  *v2 = v0;
  v2[1] = sub_23652DBA8;
  v3 = v0[59];
  v2[195] = v1;
  v2[194] = v3;
  v2[193] = v0 + 17;
  return swift_task_switch();
}

uint64_t sub_23652DBA8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 560) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23652DC0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  id v35;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *log;
  os_log_t loga;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[2];

  v1 = v0[17];
  v0[2] = v1;
  v2 = (uint64_t)(v0 + 2);
  v3 = v0[19];
  v4 = v0[20];
  v5 = v0[21];
  v6 = v0[22];
  v7 = v0[23];
  v8 = v0[25];
  v9 = v0[26];
  v10 = v0[27];
  v11 = v0[28];
  v12 = v0[29];
  v13 = v0[30];
  v14 = v0[31];
  v50 = v0[24];
  v51 = v0[18];
  v0[3] = v51;
  v0[4] = v3;
  v53 = v3;
  v54 = v4;
  v0[5] = v4;
  v0[6] = v5;
  v55 = v5;
  v56 = v7;
  v57 = v6;
  v0[7] = v6;
  v0[8] = v7;
  v0[9] = v50;
  v0[10] = v8;
  v48 = v9;
  v0[11] = v9;
  v0[12] = v10;
  v52 = v11;
  v0[13] = v11;
  v0[14] = v12;
  v0[15] = v13;
  v0[16] = v14;
  if (qword_2563E4320 != -1)
    swift_once();
  v15 = sub_2365AFC00();
  __swift_project_value_buffer(v15, (uint64_t)qword_2563EA930);
  v46 = v1;
  sub_236530EEC(v1, v51, v53, v54, v55, v57, v56, v50, v8, v48, v10, v52, v12);
  v16 = 0;
  v47 = v8;
  v49 = v12;
  sub_236530EEC(v1, v51, v53, v54, v55, v57, v56, v50, v8, v48, v10, v52, v12);
  v17 = 0;
  v18 = sub_2365AFBE8();
  v19 = sub_2365B0380();
  log = v18;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v58[0] = v39;
    *(_DWORD *)v20 = 136315394;
    sub_23650D450((uint64_t)(v0 + 2), (uint64_t)(v0 + 32), &qword_2563EAB28);
    sub_236530EEC(v1, v51, v53, v54, v55, v57, v56, v50, v8, v48, v10, v52, v49);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB28);
    v21 = sub_2365B0080();
    v23 = v44;
    v44[54] = sub_236468D88(v21, v22, v58);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_236530F84(v1, v51, v53, v54, v55, v57, v56, v50, v8, v48, v10, v52, v49);
    sub_236530F84(v1, v51, v53, v54, v55, v57, v56, v50, v8, v48, v10, v52, v49);
    *(_WORD *)(v20 + 12) = 2080;
    v44[55] = 0;
    v24 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C20);
    v25 = sub_2365B0080();
    v44[56] = sub_236468D88(v25, v26, v58);
    sub_2365B04A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23644B000, log, v19, "Returning repair report converted into objc: %s with error: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v39, -1, -1);
    MEMORY[0x23B7F5254](v20, -1, -1);

    v27 = v1;
    v28 = v10;
  }
  else
  {
    sub_236530F84(v1, v51, v53, v54, v55, v57, v56, v50, v8, v48, v10, v52, v49);
    v28 = v10;
    sub_236530F84(v1, v51, v53, v54, v55, v57, v56, v50, v8, v48, v10, v52, v49);

    v27 = v1;
    v23 = v44;
  }
  v29 = v23[67];
  loga = (os_log_t)v23[66];
  v45 = v23[65];
  v41 = v23[63];
  v30 = v23[61];
  v38 = v23[64];
  v40 = v23[62];
  v31 = v23[60];
  v37 = *(void **)(v23[68] + 112);
  v32 = (_QWORD *)swift_allocObject();
  v32[2] = v31;
  v32[3] = v30;
  sub_23650D450(v2, (uint64_t)(v32 + 4), &qword_2563EAB28);
  v32[19] = 0;
  v23[51] = sub_2365310A0;
  v23[52] = v32;
  v23[47] = MEMORY[0x24BDAC760];
  v23[48] = 1107296256;
  v23[49] = sub_2364BF6CC;
  v23[50] = &block_descriptor_60;
  v33 = _Block_copy(v23 + 47);
  sub_236530EEC(v27, v51, v53, v54, v55, v57, v56, v50, v47, v48, v28, v52, v49);
  v34 = 0;
  v35 = v37;
  sub_23645063C(v31);
  sub_2365AFD5C();
  v23[53] = MEMORY[0x24BEE4AF8];
  sub_23644F0B8((unint64_t *)&qword_2563E8E18, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_23650CD1C((unint64_t *)&qword_2563E8E28, &qword_2563E8E20);
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v29, v38, v33);
  _Block_release(v33);

  sub_236530F84(v46, v51, v53, v54, v55, v57, v56, v50, v47, v48, v10, v52, v49);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v38, v40);
  ((void (*)(uint64_t, uint64_t))loga[1].isa)(v29, v45);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v23[1])();
}

uint64_t sub_23652E310()
{
  uint64_t v0;
  __objc2_class **p_superclass;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  id v34;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_type_t type[8];
  os_log_type_t typea[8];
  uint64_t v41;
  uint64_t v42;

  p_superclass = _TtC12AppleIDSetup8SKDevice.superclass;
  if (qword_2563E4320 != -1)
    swift_once();
  v2 = *(void **)(v0 + 560);
  v3 = sub_2365AFC00();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563EA930);
  v4 = v2;
  v5 = v2;
  v6 = sub_2365AFBE8();
  v7 = sub_2365B0398();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 560);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_QWORD *)type = v3;
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 456) = v13;
    sub_2365B04A0();
    *v11 = v13;
    p_superclass = (__objc2_class **)(_TtC12AppleIDSetup8SKDevice + 8);

    _os_log_impl(&dword_23644B000, v6, v7, "Failed to repair with error: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    v14 = v11;
    v3 = *(_QWORD *)type;
    MEMORY[0x23B7F5254](v14, -1, -1);
    MEMORY[0x23B7F5254](v10, -1, -1);
  }
  else
  {

  }
  v15 = *(void **)(v0 + 560);

  *(_QWORD *)(v0 + 128) = 0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  if (p_superclass[100] != (__objc2_class *)-1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563EA930);
  sub_236530EEC(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v16 = v15;
  sub_236530EEC(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v17 = v15;
  v18 = sub_2365AFBE8();
  v19 = sub_2365B0380();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    v42 = v37;
    *(_DWORD *)v20 = 136315394;
    sub_23650D450(v0 + 16, v0 + 256, &qword_2563EAB28);
    sub_236530EEC(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB28);
    v21 = sub_2365B0080();
    *(_QWORD *)(v0 + 432) = sub_236468D88(v21, v22, &v42);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_236530F84(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    sub_236530F84(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    *(_WORD *)(v20 + 12) = 2080;
    *(_QWORD *)(v0 + 440) = v15;
    v23 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C20);
    v24 = sub_2365B0080();
    *(_QWORD *)(v0 + 448) = sub_236468D88(v24, v25, &v42);
    sub_2365B04A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23644B000, v18, v19, "Returning repair report converted into objc: %s with error: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v37, -1, -1);
    MEMORY[0x23B7F5254](v20, -1, -1);
  }
  else
  {
    sub_236530F84(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    sub_236530F84(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);

  }
  v26 = *(_QWORD *)(v0 + 536);
  *(_QWORD *)typea = *(_QWORD *)(v0 + 528);
  v41 = *(_QWORD *)(v0 + 520);
  v27 = *(_QWORD *)(v0 + 512);
  v38 = *(_QWORD *)(v0 + 504);
  v29 = *(_QWORD *)(v0 + 488);
  v28 = *(_QWORD *)(v0 + 496);
  v30 = *(_QWORD *)(v0 + 480);
  v36 = *(void **)(*(_QWORD *)(v0 + 544) + 112);
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v30;
  v31[3] = v29;
  sub_23650D450(v0 + 16, (uint64_t)(v31 + 4), &qword_2563EAB28);
  v31[19] = v15;
  *(_QWORD *)(v0 + 408) = sub_2365310A0;
  *(_QWORD *)(v0 + 416) = v31;
  *(_QWORD *)(v0 + 376) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 384) = 1107296256;
  *(_QWORD *)(v0 + 392) = sub_2364BF6CC;
  *(_QWORD *)(v0 + 400) = &block_descriptor_60;
  v32 = _Block_copy((const void *)(v0 + 376));
  sub_236530EEC(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  v33 = v15;
  v34 = v36;
  sub_23645063C(v30);
  sub_2365AFD5C();
  *(_QWORD *)(v0 + 424) = MEMORY[0x24BEE4AF8];
  sub_23644F0B8((unint64_t *)&qword_2563E8E18, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_23650CD1C((unint64_t *)&qword_2563E8E28, &qword_2563E8E20);
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v26, v27, v32);
  _Block_release(v32);

  sub_236530F84(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v27, v28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)typea + 8))(v26, v41);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23652EA70(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  __int128 v8;
  AISRepairReport *v9;

  if (a1)
  {
    sub_23650D450(a3, (uint64_t)&v8, &qword_2563EAB28);
    if (*((_QWORD *)&v8 + 1))
    {
      RepairReport.into()(v9);
      v7 = v6;
    }
    else
    {
      v7 = 0;
    }
    a1(v7, a4);

  }
}

uint64_t sub_23652EBD4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_23652EC2C(a1, a2, a3, "__AISRepairController generate symptom report with context called: %@", (uint64_t)&unk_2507D9130, (void (*)(uint64_t, uint64_t))sub_236531810, (uint64_t)&unk_2563EA988, (uint64_t)&unk_2507D90E0);
}

uint64_t sub_23652EC2C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint8_t *v27;
  _QWORD *v28;
  id v29;
  NSObject *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  NSObject *v35;
  _QWORD *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  char *v54;
  const char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  id v70;
  uint64_t v71;
  uint64_t v72[2];
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  __int16 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  _QWORD *v89;
  ValueMetadata *v90;
  _UNKNOWN **v91;
  uint64_t v92;
  char v93;
  _OWORD v94[15];
  _OWORD v95[4];

  v60 = a8;
  v69 = a6;
  v68 = a3;
  v13 = sub_2365AFD38();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_2365AFD74();
  v63 = *(_QWORD *)(v16 - 8);
  v64 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v62 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9790);
  MEMORY[0x24BDAC7A8](v18);
  v57 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2563E4320 != -1)
    swift_once();
  v20 = sub_2365AFC00();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_2563EA930);
  v22 = a1;
  v71 = v21;
  v23 = sub_2365AFBE8();
  v24 = sub_2365B0380();
  v25 = os_log_type_enabled(v23, v24);
  v66 = v14;
  v67 = a2;
  v58 = a5;
  v59 = a7;
  v61 = v13;
  if (v25)
  {
    v26 = swift_slowAlloc();
    v56 = a4;
    v27 = (uint8_t *)v26;
    v28 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v27 = 138412290;
    *(_QWORD *)&v94[0] = v22;
    v29 = v22;
    sub_2365B04A0();
    *v28 = v22;

    _os_log_impl(&dword_23644B000, v23, v24, v56, v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v28, -1, -1);
    MEMORY[0x23B7F5254](v27, -1, -1);

  }
  else
  {

  }
  v30 = v22;
  v31 = sub_2365AFBE8();
  v32 = sub_2365B038C();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v33 = 138412290;
    *(_QWORD *)&v94[0] = v30;
    v35 = v30;
    sub_2365B04A0();
    *v34 = v30;

    _os_log_impl(&dword_23644B000, v31, v32, "Attempting to build repair context with compat objective-c context: %@", v33, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v34, -1, -1);
    MEMORY[0x23B7F5254](v33, -1, -1);
  }
  else
  {

    v31 = v30;
  }

  v78 = 0;
  v76 = 0u;
  v77 = 0u;
  v74 = 0u;
  v75 = 0u;
  v73 = 0u;
  v79 = 0;
  v80 = 0;
  v81 = 0xC000000000000000;
  v83 = 0;
  v82 = 0;
  v84 = 0u;
  v85 = 0u;
  v86 = 1;
  v87 = 2;
  v88 = 0;
  v90 = &type metadata for AutomaticRepairModelExchange;
  v91 = &protocol witness table for AutomaticRepairModelExchange;
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = &unk_2563ED550;
  v36[3] = 0;
  v36[4] = &unk_2563ED558;
  v36[5] = 0;
  v36[6] = &unk_2563ED560;
  v36[7] = 0;
  v36[8] = &unk_2563ED568;
  v36[9] = 0;
  v36[10] = &unk_2563ED570;
  v36[11] = 0;
  v36[12] = &unk_2563ED578;
  v36[13] = 0;
  v36[14] = &unk_2563ED580;
  v36[15] = 0;
  v36[16] = &unk_2563ED588;
  v36[17] = 0;
  v36[18] = &unk_2563ED590;
  v36[19] = 0;
  v36[20] = &unk_2563ED598;
  v36[21] = 0;
  v36[22] = 0;
  v36[23] = &unk_2563ED5A0;
  v36[24] = 0;
  v36[25] = &unk_2563ED5A8;
  v36[26] = 0;
  v36[27] = &unk_2563ED5B0;
  v36[28] = 0;
  v36[29] = &unk_2563ED5B8;
  v36[30] = 0;
  v36[31] = &unk_2563ED5C0;
  v36[32] = 0;
  v36[33] = &unk_2563ED5C8;
  v36[34] = 0;
  v36[35] = &unk_2563ED5D0;
  v36[36] = 0;
  v36[37] = &unk_2563ED5D8;
  v36[38] = 0;
  v36[39] = &unk_2563ED5E0;
  v36[40] = 0;
  v36[41] = &unk_2563ED5E8;
  v36[42] = 0;
  v36[43] = &unk_2563ED5F0;
  v36[44] = 0;
  v36[45] = &unk_2563ED5F8;
  v36[46] = 0;
  v36[47] = &unk_2563ED600;
  v36[48] = 0;
  v36[49] = &unk_2563ED608;
  v36[50] = 0;
  v36[51] = &unk_2563ED610;
  v36[52] = 0;
  v36[53] = &unk_2563ED618;
  v36[54] = 0;
  v36[55] = &unk_2563ED620;
  v36[56] = 0;
  v36[57] = &unk_2563ED628;
  v36[58] = 0;
  v36[59] = &unk_2563ED630;
  v36[60] = 0;
  v36[61] = &unk_2563ED638;
  v36[62] = 0;
  v36[63] = &unk_2563ED640;
  v36[64] = 0;
  v36[65] = &unk_2563ED648;
  v36[66] = 0;
  v36[67] = &unk_2563ED650;
  v36[68] = 0;
  v36[69] = &unk_2563ED658;
  v36[70] = 0;
  v36[71] = &unk_2563ED660;
  v36[72] = 0;
  v36[73] = &unk_2563ED668;
  v36[74] = 0;
  v36[75] = &unk_2563ED670;
  v36[76] = 0;
  v36[77] = &unk_2563ED678;
  v36[78] = 0;
  v36[79] = &unk_2563E6980;
  v36[80] = 0;
  v36[81] = &unk_2563E6988;
  v36[82] = 0;
  v36[83] = &unk_2563E6990;
  v36[84] = 0;
  v36[85] = &unk_2563E6998;
  v36[86] = 0;
  v36[87] = &unk_2563E69A0;
  v36[88] = 0;
  v89 = v36;
  v92 = 0;
  v93 = 0;
  RepairContext.Builder._context(_:)(v30, (uint64_t)v94);
  RepairContext.Builder.build()((uint64_t *)v95);
  v94[0] = v95[0];
  v94[1] = v95[1];
  v94[2] = v95[2];
  sub_236530574(v94, (uint64_t)&v73);
  v37 = (char *)v70;
  v38 = sub_2365AFBE8();
  v39 = sub_2365B038C();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v72[0] = v41;
    *(_DWORD *)v40 = 136315394;
    *(_QWORD *)&v95[0] = *(_QWORD *)&v37[OBJC_IVAR_____AISRepairController_repairController];
    type metadata accessor for RepairController();
    swift_retain();
    v42 = sub_2365B0080();
    *(_QWORD *)&v95[0] = sub_236468D88(v42, v43, v72);
    sub_2365B04A0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    sub_236530574(&v73, (uint64_t)v95);
    v44 = sub_2365B0080();
    *(_QWORD *)&v95[0] = sub_236468D88(v44, v45, v72);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_2365305B0((uint64_t)&v73);
    _os_log_impl(&dword_23644B000, v38, v39, "Calling repair controller (%s with built context: %s", (uint8_t *)v40, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v41, -1, -1);
    MEMORY[0x23B7F5254](v40, -1, -1);
  }
  else
  {

    sub_2365305B0((uint64_t)&v73);
  }

  v47 = v68;
  v46 = v69;
  v48 = v67;
  v49 = v59;
  v50 = (uint64_t)v57;
  v51 = sub_2365B0218();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 1, 1, v51);
  sub_236530574(v94, (uint64_t)&v73);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = 0;
  *(_QWORD *)(v52 + 24) = 0;
  *(_QWORD *)(v52 + 32) = v37;
  v53 = v74;
  *(_OWORD *)(v52 + 40) = v73;
  *(_OWORD *)(v52 + 56) = v53;
  *(_OWORD *)(v52 + 72) = v75;
  *(_QWORD *)(v52 + 88) = v48;
  *(_QWORD *)(v52 + 96) = v47;
  v54 = v37;
  v46(v48, v47);
  sub_23649225C(v50, v49, v52);
  swift_release();
  return sub_2365305B0((uint64_t)v94);
}

uint64_t sub_23652F798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v7[23] = a6;
  v7[24] = a7;
  v7[21] = a4;
  v7[22] = a5;
  v8 = sub_2365AFD38();
  v7[25] = v8;
  v7[26] = *(_QWORD *)(v8 - 8);
  v7[27] = swift_task_alloc();
  v9 = sub_2365AFD74();
  v7[28] = v9;
  v7[29] = *(_QWORD *)(v9 - 8);
  v7[30] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23652F824()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[21] + OBJC_IVAR_____AISRepairController_repairController);
  v0[31] = v1;
  v2 = (_QWORD *)swift_task_alloc();
  v0[32] = v2;
  *v2 = v0;
  v2[1] = sub_23652F8A4;
  v3 = v0[22];
  v2[163] = v1;
  v2[162] = v3;
  v2[161] = v0 + 8;
  return swift_task_switch();
}

uint64_t sub_23652F8A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23652F908()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t type[8];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0[8];
  v2 = v0[9];
  v3 = v0[10];
  v4 = v0[11];
  if (qword_2563E4320 != -1)
    swift_once();
  v5 = sub_2365AFC00();
  __swift_project_value_buffer(v5, (uint64_t)qword_2563EA930);
  sub_236485214(v1, v2);
  v6 = 0;
  sub_236485214(v1, v2);
  v7 = 0;
  v8 = sub_2365AFBE8();
  v9 = sub_2365B0380();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v32 = v30;
    *(_DWORD *)v10 = 136315394;
    v0[12] = v1;
    v0[13] = v2;
    v0[14] = v3;
    v0[15] = v4;
    sub_236485214(v1, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB20);
    v11 = sub_2365B0080();
    v0[17] = sub_236468D88(v11, v12, &v32);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_236484E1C(v1, v2);
    sub_236484E1C(v1, v2);
    *(_WORD *)(v10 + 12) = 2080;
    v0[18] = 0;
    v13 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C20);
    v14 = sub_2365B0080();
    v0[19] = sub_236468D88(v14, v15, &v32);
    sub_2365B04A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23644B000, v8, v9, "Returning symptom report converted into objc: %s with error: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v30, -1, -1);
    MEMORY[0x23B7F5254](v10, -1, -1);
  }
  else
  {
    sub_236484E1C(v1, v2);
    sub_236484E1C(v1, v2);

  }
  v16 = v3;
  v29 = v0[29];
  v31 = v0[28];
  v25 = v0[30];
  v26 = v0[27];
  v17 = v0[24];
  v27 = v0[25];
  *(_QWORD *)type = v0[26];
  v18 = v0[23];
  v19 = *(void **)(v0[31] + 112);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v18;
  v20[3] = v17;
  v20[4] = v1;
  v20[5] = v2;
  v20[6] = v16;
  v20[7] = v4;
  v20[8] = 0;
  v0[6] = sub_236530ED8;
  v0[7] = v20;
  v0[2] = MEMORY[0x24BDAC760];
  v0[3] = 1107296256;
  v0[4] = sub_2364BF6CC;
  v0[5] = &block_descriptor_53;
  v21 = _Block_copy(v0 + 2);
  sub_236485214(v1, v2);
  v22 = 0;
  v23 = v19;
  sub_23645063C(v18);
  sub_2365AFD5C();
  v0[16] = MEMORY[0x24BEE4AF8];
  sub_23644F0B8((unint64_t *)&qword_2563E8E18, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_23650CD1C((unint64_t *)&qword_2563E8E28, &qword_2563E8E20);
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v25, v26, v21);
  _Block_release(v21);

  sub_236484E1C(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)type + 8))(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v25, v31);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_23652FDB4()
{
  uint64_t v0;
  __objc2_class **p_superclass;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  p_superclass = _TtC12AppleIDSetup8SKDevice.superclass;
  if (qword_2563E4320 != -1)
    swift_once();
  v2 = *(void **)(v0 + 264);
  v3 = sub_2365AFC00();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563EA930);
  v4 = v2;
  v5 = v2;
  v6 = sub_2365AFBE8();
  v7 = sub_2365B0398();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 264);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 160) = v13;
    p_superclass = (__objc2_class **)(_TtC12AppleIDSetup8SKDevice + 8);
    sub_2365B04A0();
    *v11 = v13;

    _os_log_impl(&dword_23644B000, v6, v7, "Failed to generate symptom report with error: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v11, -1, -1);
    MEMORY[0x23B7F5254](v10, -1, -1);
  }
  else
  {

  }
  v14 = *(void **)(v0 + 264);

  if (p_superclass[100] != (__objc2_class *)-1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_2563EA930);
  sub_236485214(0, 0);
  v15 = v14;
  sub_236485214(0, 0);
  v16 = v14;
  v17 = sub_2365AFBE8();
  v18 = sub_2365B0380();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v41 = v20;
    *(_DWORD *)v19 = 136315394;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_236485214(0, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB20);
    v21 = sub_2365B0080();
    *(_QWORD *)(v0 + 136) = sub_236468D88(v21, v22, &v41);
    sub_2365B04A0();
    swift_bridgeObjectRelease();
    sub_236484E1C(0, 0);
    sub_236484E1C(0, 0);
    *(_WORD *)(v19 + 12) = 2080;
    *(_QWORD *)(v0 + 144) = v14;
    v23 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C20);
    v24 = sub_2365B0080();
    *(_QWORD *)(v0 + 152) = sub_236468D88(v24, v25, &v41);
    sub_2365B04A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23644B000, v17, v18, "Returning symptom report converted into objc: %s with error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x23B7F5254](v20, -1, -1);
    MEMORY[0x23B7F5254](v19, -1, -1);
  }
  else
  {
    sub_236484E1C(0, 0);
    sub_236484E1C(0, 0);

  }
  v26 = v14;
  v27 = *(_QWORD *)(v0 + 240);
  v28 = *(_QWORD *)(v0 + 216);
  v39 = *(_QWORD *)(v0 + 232);
  v40 = *(_QWORD *)(v0 + 224);
  v29 = *(_QWORD *)(v0 + 192);
  v37 = *(_QWORD *)(v0 + 200);
  v38 = *(_QWORD *)(v0 + 208);
  v30 = *(_QWORD *)(v0 + 184);
  v31 = *(void **)(*(_QWORD *)(v0 + 248) + 112);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v30;
  *(_QWORD *)(v32 + 24) = v29;
  *(_OWORD *)(v32 + 32) = 0u;
  *(_OWORD *)(v32 + 48) = 0u;
  *(_QWORD *)(v32 + 64) = v26;
  *(_QWORD *)(v0 + 48) = sub_236530ED8;
  *(_QWORD *)(v0 + 56) = v32;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_2364BF6CC;
  *(_QWORD *)(v0 + 40) = &block_descriptor_53;
  v33 = _Block_copy((const void *)(v0 + 16));
  sub_236485214(0, 0);
  v34 = v26;
  v35 = v31;
  sub_23645063C(v30);
  sub_2365AFD5C();
  *(_QWORD *)(v0 + 128) = MEMORY[0x24BEE4AF8];
  sub_23644F0B8((unint64_t *)&qword_2563E8E18, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E8E20);
  sub_23650CD1C((unint64_t *)&qword_2563E8E28, &qword_2563E8E20);
  sub_2365B04F4();
  MEMORY[0x23B7F43FC](0, v27, v28, v33);
  _Block_release(v33);

  sub_236484E1C(0, 0);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v28, v37);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v27, v40);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2365303A0(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;
  id v6;

  if (a1)
  {
    if (a4)
      v5 = (unint64_t)SymptomReport.into()();
    else
      v5 = 0;
    v6 = (id)v5;
    a1();

  }
}

id __RepairController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void __RepairController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id __RepairController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for __RepairController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_236530574(_QWORD *a1, uint64_t a2)
{
  initializeWithCopy for RepairContext(a2, a1);
  return a2;
}

uint64_t sub_2365305B0(uint64_t a1)
{
  destroy for RepairContext(a1);
  return a1;
}

uint64_t sub_2365305E4(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  _OWORD v12[8];
  __int128 v13[8];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB30);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  sub_236484B60(a3, v13);
  sub_236484B60(v13, v12);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(&v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v5);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v6 + 32))(v9 + v8, &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
  sub_236485998();
  sub_236485954();
  sub_2365AFC84();
  return swift_release();
}

uint64_t sub_23653072C(uint64_t a1)
{
  uint64_t v1;

  return sub_2365305E4(a1, *(_QWORD *)(v1 + 16), *(__int128 **)(v1 + 24));
}

uint64_t type metadata accessor for __RepairController()
{
  return objc_opt_self();
}

uint64_t sub_236530754()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_2365308F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v9 = v1[11];
  v8 = v1[12];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23647E274;
  return sub_23652DA9C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  if (*(_QWORD *)(v0 + 72))
    __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  if (*(_QWORD *)(v0 + 88))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_236530A14(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v9 = v1[11];
  v8 = v1[12];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23647E274;
  return sub_23652F798(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_236530AA4()
{
  return type metadata accessor for RepairController();
}

void sub_236530AAC()
{
  unint64_t v0;

  sub_23650CE94();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for RepairController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RepairController.__allocating_init(queue:endpoint:inactiveSession:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of RepairController.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of RepairController.repair(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 184) + *(_QWORD *)(*(_QWORD *)v2 + 184));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_23647E274;
  return v8(a1, a2);
}

uint64_t dispatch thunk of RepairController.generateSymptomReport(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(*(_QWORD *)v2 + 192) + *(_QWORD *)(*(_QWORD *)v2 + 192));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_236477420;
  return v8(a1, a2);
}

uint64_t method lookup function for __RepairController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of __RepairController.repair(with:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of __RepairController.generateSymptomReport(with:completionHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t sub_236530C88()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_236530CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23650BDB0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_236530CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236530D4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10) - 8) + 80);
  return sub_23652AB6C((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v0 + ((v1 + 88) & ~v1));
}

uint64_t sub_236530D8C()
{
  return swift_deallocObject();
}

uint64_t sub_236530D9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_236530DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_236530E3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10) - 8) + 80);
  return sub_23652ACB0(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), v1 + ((v3 + 48) & ~v3));
}

uint64_t sub_236530E88()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }

  return swift_deallocObject();
}

void sub_236530ED8()
{
  uint64_t v0;

  sub_2365303A0(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_236530EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_236485214(a12, a13);
  }
  return result;
}

uint64_t sub_236530F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_236484E1C(a12, a13);
  }
  return result;
}

uint64_t sub_23653101C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  if (*(_QWORD *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 128))
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
  }

  return swift_deallocObject();
}

void sub_2365310A0()
{
  uint64_t v0;

  sub_23652EA70(*(void (**)(void *, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32, *(_QWORD *)(v0 + 152));
}

uint64_t sub_2365310B0(uint64_t a1)
{
  id v1;
  __int128 *v3;
  _OWORD v4[8];
  _BYTE v5[128];
  _BYTE v6[128];
  _BYTE v7[128];

  sub_23650D450(a1, (uint64_t)v6, &qword_2563EAB38);
  sub_23650D450((uint64_t)v6, (uint64_t)v7, &qword_2563EAB38);
  if (sub_2365311E8((uint64_t)v7) == 1)
  {
    sub_23650D450((uint64_t)v6, (uint64_t)v5, &qword_2563EAB38);
    v1 = *(id *)nullsub_1(v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB30);
    return sub_2365B01B8();
  }
  else
  {
    sub_23650D450((uint64_t)v6, (uint64_t)v5, &qword_2563EAB38);
    v3 = (__int128 *)nullsub_1(v5);
    sub_236484B60(v3, v4);
    sub_236487E90((uint64_t)v3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_236485B68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB30);
    return sub_2365B01C4();
  }
}

uint64_t sub_23653119C()
{
  return objectdestroy_44Tm(&qword_2563EAB30);
}

uint64_t sub_2365311A8(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB30);
  return sub_2365310B0(a1);
}

uint64_t sub_2365311E8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 121);
}

uint64_t sub_2365311F0(uint64_t a1)
{
  uint64_t v1;

  return sub_23652B64C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_2365311F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23653121C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB40) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v4 = v0 + v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_release();
  if (*(_QWORD *)(v0 + v3 + 32))
    __swift_destroy_boxed_opaque_existential_1(v0 + v3 + 8);
  return swift_deallocObject();
}

double sub_2365312E0@<D0>(uint8_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB40) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23652B6C0(a1, (void (*)(char *, char *, uint64_t))(v2 + v6), (_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_236531348(uint64_t a1)
{
  return sub_23652BBC8(a1);
}

uint64_t sub_236531350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB50);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2365313E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB50) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23647E274;
  return sub_23652BEBC(a1, v6, v7, v8, v9);
}

uint64_t sub_23653148C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 120);
  if (v1 > 7)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_2365314A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  if (a16 != 255)
    return sub_236484CE0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  return result;
}

uint64_t sub_2365314D8(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  _OWORD v12[8];
  __int128 v13[8];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9C68);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  sub_236484B60(a3, v13);
  sub_236484B60(v13, v12);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(&v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v5);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v6 + 32))(v9 + v8, &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v5);
  sub_236485998();
  sub_2365AFC78();
  return swift_release();
}

uint64_t sub_236531610(uint64_t a1)
{
  uint64_t v1;

  return sub_2365314D8(a1, *(_QWORD *)(v1 + 16), *(__int128 **)(v1 + 24));
}

uint64_t sub_236531618(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  if (a16 != 255)
    return sub_236485B68(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
  return result;
}

uint64_t sub_236531650()
{
  return objectdestroy_44Tm(&qword_2563E9C68);
}

uint64_t sub_23653165C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_2365AFCFC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  if (*(_QWORD *)(v0 + v4 + 32))
    __swift_destroy_boxed_opaque_existential_1(v0 + v4 + 8);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + ((v4 + v7 + 48) & ~v7), v5);
  return swift_deallocObject();
}

uint64_t sub_23653174C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v2 = *(_QWORD *)(sub_2365AFCFC() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2563EAB10) - 8) + 80);
  v6 = v4 + v5 + 48;
  v7 = *(_QWORD *)(v0 + 32);
  v8 = v0 + v3;
  v9 = v0 + v4;
  v10 = v0 + (v6 & ~v5);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v11;
  *v11 = v1;
  v11[1] = sub_23647E274;
  v11[4] = v9;
  v11[5] = v10;
  v11[2] = v7;
  v11[3] = v8;
  return swift_task_switch();
}

uint64_t Curve25519.Signing.PrivateKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23650EEB8(MEMORY[0x24BDC6230], (uint64_t (*)(_QWORD))MEMORY[0x24BDC6280], a1);
}

uint64_t sub_236531850()
{
  return sub_2365AFE04();
}

uint64_t sub_236531864()
{
  return sub_2365AFE10();
}

uint64_t sub_236531888@<X0>(uint64_t a1@<X8>)
{
  return sub_23650EF9C(MEMORY[0x24BDC6230], (uint64_t (*)(_QWORD))MEMORY[0x24BDC6280], a1);
}

uint64_t sub_2365318A0()
{
  return sub_2365AFDF8();
}

uint64_t Curve25519.Signing.PublicKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23650F010((uint64_t (*)(_QWORD))MEMORY[0x24BDC6258], a1);
}

uint64_t sub_2365318E0()
{
  sub_23646C3A4();
  return sub_2365AFE28() & 1;
}

uint64_t sub_236531940@<X0>(uint64_t a1@<X8>)
{
  return sub_23650F0B0((uint64_t (*)(_QWORD))MEMORY[0x24BDC6258], a1);
}

uint64_t sub_236531950()
{
  return sub_2365AFE40();
}

uint64_t Curve25519.KeyAgreement.PrivateKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23650EEB8(MEMORY[0x24BDC61F0], MEMORY[0x24BDC61E0], a1);
}

uint64_t sub_236531998()
{
  return sub_2365AFDE0();
}

uint64_t sub_2365319BC@<X0>(uint64_t a1@<X8>)
{
  return sub_23650EF9C(MEMORY[0x24BDC61F0], MEMORY[0x24BDC61E0], a1);
}

uint64_t sub_2365319D4()
{
  return sub_2365AFDD4();
}

uint64_t Curve25519.KeyAgreement.PublicKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23650F010(MEMORY[0x24BDC6220], a1);
}

_UNKNOWN **sub_236531A14()
{
  return &protocol witness table for Curve25519.Signing.PublicKey;
}

_UNKNOWN **sub_236531A20()
{
  return &protocol witness table for Curve25519.Signing.PrivateKey;
}

_UNKNOWN **sub_236531A2C()
{
  return &protocol witness table for Curve25519.Signing.PrivateKey;
}

_UNKNOWN **sub_236531A38()
{
  return &protocol witness table for Curve25519.KeyAgreement.PublicKey;
}

_UNKNOWN **sub_236531A44()
{
  return &protocol witness table for Curve25519.KeyAgreement.PublicKey;
}

_UNKNOWN **sub_236531A50()
{
  return &protocol witness table for Curve25519.KeyAgreement.PrivateKey;
}

_UNKNOWN **sub_236531A5C()
{
  return &protocol witness table for Curve25519.KeyAgreement.PrivateKey;
}

uint64_t sub_236531A68@<X0>(uint64_t a1@<X8>)
{
  return sub_23650F0B0(MEMORY[0x24BDC6220], a1);
}

uint64_t sub_236531A78()
{
  return sub_2365AFDBC();
}

id static AISDaemonInterface.xpcInterface()()
{
  id v0;
  uint64_t inited;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_25642A238);
  sub_236531DE8();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2365B6A20;
  *(_QWORD *)(inited + 32) = type metadata accessor for SignOutContext();
  sub_236531B64(inited);
  swift_setDeallocating();
  return v0;
}

unint64_t DaemonMachServiceName.getter()
{
  return 0xD00000000000001ALL;
}

void sub_236531B64(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF0]), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 0;
    do
    {
      ++v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA5F0);
      objc_msgSend(v2, sel_addObject_, sub_2365B092C());
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  v5 = v2;
  sub_2365B0314();

  sub_2365B068C();
  __break(1u);
}

id AISDaemonInterface.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AISDaemonInterface.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISDaemonInterface();
  return objc_msgSendSuper2(&v2, sel_init);
}

id AISDaemonInterface.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISDaemonInterface();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_236531DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EA5F0);
  if (swift_isClassType())
    v1 = v0;
  else
    v1 = 0;
  if (v1)
    v2 = (uint64_t *)&unk_2563EAC90;
  else
    v2 = (uint64_t *)&unk_2563EAC88;
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t type metadata accessor for AISDaemonInterface()
{
  return objc_opt_self();
}

uint64_t Message.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2365AF9FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Message.version.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t Message.metrics.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_QWORD *)(v2 + *(int *)(a1 + 40));
  return swift_bridgeObjectRetain();
}

uint64_t Message.metrics.setter(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(a2 + 40);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = v3;
  return result;
}

uint64_t (*Message.metrics.modify())()
{
  return nullsub_1;
}

uint64_t Message.command.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t Message.command.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*Message.command.modify())()
{
  return nullsub_1;
}

uint64_t static Message.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  if ((sub_2365AF9D8() & 1) != 0
    && (v9 = type metadata accessor for Message(0, a3, a4, v8),
        *(unsigned __int8 *)(a1 + *(int *)(v9 + 36)) == *(unsigned __int8 *)(a2 + *(int *)(v9 + 36)))
    && (v10 = *(int *)(v9 + 40),
        v11 = *(_QWORD *)(a1 + v10),
        v13 = *(_QWORD *)(a2 + v10),
        v14 = v11,
        (static Message.Metrics.== infix(_:_:)((uint64_t)&v14, (uint64_t)&v13, a3, a4) & 1) != 0))
  {
    return sub_2365B0014() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for Message(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Message);
}

uint64_t Message.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_2365AF9FC();
  sub_23647A6F4(&qword_2563E5088, MEMORY[0x24BDCEA88]);
  sub_2365AFFD8();
  sub_2365B0A04();
  v5 = type metadata accessor for Message.Metrics(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v4);
  Message.Metrics.hash(into:)(a1, v5, v6, v7);
  return sub_2365AFFD8();
}

uint64_t sub_2365320D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_236532270(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_236532298 + 4 * byte_2365C09F0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_236532298()
{
  return 0x6E6F6973726576;
}

uint64_t sub_2365322B0()
{
  return 0x7363697274656DLL;
}

uint64_t sub_2365322C8()
{
  return 0x646E616D6D6F63;
}

uint64_t sub_2365322E0()
{
  unsigned __int8 *v0;

  return sub_236532270(*v0);
}

uint64_t sub_2365322EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2365320D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236532318(uint64_t a1)
{
  MEMORY[0x23B7F5164](&unk_2365C0C88, a1);
  return sub_2365B0AD0();
}

uint64_t sub_23653234C(uint64_t a1)
{
  MEMORY[0x23B7F5164](&unk_2365C0C88, a1);
  return sub_2365B0ADC();
}

uint64_t Message.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v22 = a2;
  v5 = v4;
  v7 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(a2 + 24);
  v21 = v7;
  v8 = type metadata accessor for Message.CodingKeys(255, v7, v20, a4);
  MEMORY[0x23B7F5164](&unk_2365C0C88, v8);
  v9 = sub_2365B0854();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365B0AAC();
  v28 = 0;
  sub_2365AF9FC();
  sub_23647A6F4(&qword_2563EAC98, MEMORY[0x24BDCEA70]);
  v13 = v23;
  sub_2365B0824();
  if (!v13)
  {
    v15 = v20;
    v14 = v21;
    v27 = 1;
    sub_2365B0830();
    v24 = *(_QWORD *)(v5 + *(int *)(v22 + 40));
    v26 = 2;
    v17 = type metadata accessor for Message.Metrics(0, v14, v15, v16);
    MEMORY[0x23B7F5164](&protocol conformance descriptor for Message<A>.Metrics, v17);
    sub_2365B0824();
    v25 = 3;
    sub_2365B0824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t type metadata accessor for Message.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Message.CodingKeys);
}

uint64_t Message.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_2365B09E0();
  Message.hash(into:)((uint64_t)v3, a1);
  return sub_2365B0A34();
}

uint64_t Message.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v32 = a4;
  v31 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_2365AF9FC();
  v35 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Message.CodingKeys(255, a2, a3, v9);
  MEMORY[0x23B7F5164](&unk_2365C0C88, v10);
  v41 = sub_2365B07AC();
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v12 = (char *)&v30 - v11;
  v36 = a3;
  v37 = a2;
  v14 = (int *)type metadata accessor for Message(0, a2, a3, v13);
  v15 = *((_QWORD *)v14 - 1);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v30 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v40 = v12;
  v18 = (uint64_t)v42;
  sub_2365B0A7C();
  if (v18)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = v15;
  v20 = v36;
  v19 = v37;
  v21 = v17;
  v23 = v34;
  v22 = v35;
  v42 = a1;
  v47 = 0;
  sub_23647A6F4(qword_2563EACA0, MEMORY[0x24BDCEAA8]);
  v24 = v38;
  sub_2365B0770();
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v21, v39, v24);
  v46 = 1;
  v21[v14[9]] = sub_2365B077C();
  v26 = type metadata accessor for Message.Metrics(0, v19, v20, v25);
  v45 = 2;
  MEMORY[0x23B7F5164](&protocol conformance descriptor for Message<A>.Metrics, v26);
  sub_2365B0770();
  *(_QWORD *)&v21[v14[10]] = v43;
  v44 = 3;
  v27 = v33;
  sub_2365B0770();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v40, v41);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v21[v14[11]], v27, v19);
  v28 = v30;
  (*(void (**)(uint64_t, char *, int *))(v30 + 16))(v32, v21, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return (*(uint64_t (**)(char *, int *))(v28 + 8))(v21, v14);
}

uint64_t sub_23653298C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Message.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_2365329A8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Message.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_2365329BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static Message.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_2365329D0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_2365B09E0();
  Message.hash(into:)((uint64_t)v4, a2);
  return sub_2365B0A34();
}

uint64_t sub_236532A10(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x23B7F5164](&protocol conformance descriptor for Message<A>);
  result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Message<A>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_236532A54()
{
  return sub_23647A6F4(&qword_2563E5088, MEMORY[0x24BDCEA88]);
}

uint64_t sub_236532A78(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  a1[1] = MEMORY[0x23B7F5164](&protocol conformance descriptor for Message<A>);
  a1[2] = MEMORY[0x23B7F5164](&protocol conformance descriptor for Message<A>, a2);
  result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Message<A>, a2);
  a1[3] = result;
  return result;
}

void sub_236532AD0()
{
  JUMPOUT(0x23B7F5164);
}

uint64_t dispatch thunk of IdentifiableMessage.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IdentifiableMessage.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_236532AF0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2365AF9FC();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_236532B94(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v6 = sub_2365AF9FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v12 = *(_QWORD *)(v7 + 64), ((v10 + (v12 & 0xFFFFFFFFFFFFFFF8) + 16) & ~v10) + *(_QWORD *)(v9 + 64) <= 0x18)
      ? (v13 = v11 > 7)
      : (v13 = 1),
        v13))
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(a1, a2, v6);
    *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
    v14 = ((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
    v16 = (v14 + v10 + 16) & ~v10;
    v17 = (v15 + v10 + 16) & ~v10;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v18(v16, v17, v8);
  }
  return a1;
}

uint64_t sub_236532CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = sub_2365AF9FC();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (*(_QWORD *)(v5 + 64) + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v6 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_236532D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = sub_2365AF9FC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = v8 + a1;
  v10 = v8 + a2;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 16 + v9) & ~v13;
  v15 = (v13 + 16 + v10) & ~v13;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  v16(v14, v15, v11);
  return a1;
}

uint64_t sub_236532DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v6 = sub_2365AF9FC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = v8 + a1;
  v10 = v8 + a2;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((*(unsigned __int8 *)(v13 + 80) + 16 + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(unsigned __int8 *)(v13 + 80) + 16 + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_236532E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_2365AF9FC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = v8 + a1;
  v10 = v8 + a2;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 32))((*(unsigned __int8 *)(v11 + 80) + 16 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 16 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_236532F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v6 = sub_2365AF9FC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = v8 + a1;
  v10 = v8 + a2;
  *(_BYTE *)v9 = *(_BYTE *)v10;
  v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((*(unsigned __int8 *)(v13 + 80) + 16 + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(unsigned __int8 *)(v13 + 80) + 16 + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_236532FD0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  unint64_t v24;
  unint64_t v25;

  v6 = sub_2365AF9FC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = *(_DWORD *)(v7 + 84);
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if (!a2)
    return 0;
  v14 = v6;
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v10 + 80);
  if (a2 <= v13)
    goto LABEL_27;
  v17 = ((v16 + (v15 & 0xFFFFFFFFFFFFFFF8) + 16) & ~v16) + *(_QWORD *)(v10 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v13 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if (v8 == v13)
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v14);
      v24 = (v15 + a1) & 0xFFFFFFFFFFFFFFF8;
      if ((v12 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))((v24 + v16 + 16) & ~v16, v11, v9);
      v25 = *(_QWORD *)(v24 + 8);
      if (v25 >= 0xFFFFFFFF)
        LODWORD(v25) = -1;
      return (v25 + 1);
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = ((v16 + (v15 & 0xFFFFFFF8) + 16) & ~(_DWORD)v16) + *(_DWORD *)(v10 + 64);
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v13 + v22 + 1;
}

void sub_236533198(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(sub_2365AF9FC() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ((v12 + (*(_QWORD *)(v8 + 64) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + *(_QWORD *)(v9 + 64);
  if (a3 <= v11)
  {
    v14 = 0;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, ((v12 + (*(_QWORD *)(v8 + 64) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + *(_QWORD *)(v9 + 64));
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, ((v12 + (*(_QWORD *)(v8 + 64) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X1 }
}

uint64_t sub_2365333E8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_236533434 + 4 * byte_2365C0A07[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_236533468 + 4 * byte_2365C0A02[v4]))();
}

uint64_t sub_236533468(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236533470(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236533478);
  return result;
}

uint64_t sub_236533484(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23653348CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_236533490(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236533498(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_2365334A4()
{
  JUMPOUT(0x23B7F5164);
}

void sub_2365334B4()
{
  JUMPOUT(0x23B7F5164);
}

void sub_2365334C4()
{
  JUMPOUT(0x23B7F5164);
}

uint64_t static V1CommandProtocol.version.getter()
{
  return 1;
}

uint64_t V1CommandVersion.getter()
{
  return 1;
}

uint64_t static V1Command.version.getter()
{
  return 1;
}

void V1Command.Request.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for AuthenticateCommand.Request(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for SignInCommand.Request(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23648DFF8(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_236533600 + 4 * word_2365C0CE0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t *sub_236533600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v3 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v0 + 368) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 384) = v3;
  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v1 + 160);
  v4 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v0 + 320) = v4;
  v5 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 352) = v5;
  v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 256) = v6;
  v7 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v0 + 272) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v0 + 288) = v7;
  sub_2365B09F8();
  v8 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 208) = v8;
  *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 400);
  v9 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 144) = v9;
  v10 = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 176) = v10;
  v11 = *(_OWORD *)(v0 + 256);
  *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 80) = v11;
  v12 = *(_OWORD *)(v0 + 288);
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v0 + 112) = v12;
  HandshakeCommand.Request.hash(into:)(v2);
  return sub_2365258E4((uint64_t *)(v0 + 240));
}

uint64_t sub_2365340A4()
{
  sub_23653D664();
  return sub_2365B0AD0();
}

uint64_t sub_2365340CC()
{
  sub_23653D664();
  return sub_2365B0ADC();
}

uint64_t sub_2365340F4()
{
  sub_23653D620();
  return sub_2365B0AD0();
}

uint64_t sub_23653411C()
{
  sub_23653D620();
  return sub_2365B0ADC();
}

uint64_t sub_236534144()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_236534178 + 4 * byte_2365C0D02[*v0]))(0x6B616873646E6168, 0xE900000000000065);
}

uint64_t sub_236534178()
{
  return 0x6E496E676973;
}

uint64_t sub_23653418C()
{
  return 0x6574746573696E61;
}

uint64_t sub_2365341A4()
{
  return 0x69746E6568747561;
}

uint64_t sub_2365341C4()
{
  return 0x726961706572;
}

uint64_t sub_2365341D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236547878(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2365341FC()
{
  sub_23653D598();
  return sub_2365B0AD0();
}

uint64_t sub_236534224()
{
  sub_23653D598();
  return sub_2365B0ADC();
}

uint64_t sub_23653424C()
{
  sub_23653D730();
  return sub_2365B0AD0();
}

uint64_t sub_236534274()
{
  sub_23653D730();
  return sub_2365B0ADC();
}

uint64_t sub_23653429C()
{
  sub_23653D5DC();
  return sub_2365B0AD0();
}

uint64_t sub_2365342C4()
{
  sub_23653D5DC();
  return sub_2365B0ADC();
}

uint64_t sub_2365342EC()
{
  sub_23653D6EC();
  return sub_2365B0AD0();
}

uint64_t sub_236534314()
{
  sub_23653D6EC();
  return sub_2365B0ADC();
}

void V1Command.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE00);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE08);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for AuthenticateCommand.Request(0);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE10);
  v24 = *(_QWORD *)(v7 - 8);
  v25 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v23 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE18);
  v20 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v18 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SignInCommand.Request(0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE20);
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v10 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE28);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653D598();
  v36 = v14;
  sub_2365B0AAC();
  sub_23648DFF8(v35, (uint64_t)v12, type metadata accessor for V1Command.Request);
  v15 = (char *)sub_236534610 + 4 * byte_2365C0D07[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t *sub_236534610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v4 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v3 - 128) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v3 - 112) = v4;
  *(_QWORD *)(v3 - 96) = *(_QWORD *)(v2 + 160);
  v5 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v3 - 192) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v3 - 176) = v5;
  v6 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v3 - 160) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v3 - 144) = v6;
  v7 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v3 - 256) = *(_OWORD *)v2;
  *(_OWORD *)(v3 - 240) = v7;
  v8 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v3 - 224) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v3 - 208) = v8;
  *(_BYTE *)(v0 + 176) = 0;
  sub_23653D730();
  v9 = *(_QWORD *)(v3 - 72);
  v10 = *(_QWORD *)(v0 + 168);
  sub_2365B07B8();
  v11 = *(_OWORD *)(v3 - 112);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v3 - 128);
  *(_OWORD *)(v0 + 320) = v11;
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v3 - 96);
  v12 = *(_OWORD *)(v3 - 176);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v3 - 192);
  *(_OWORD *)(v0 + 256) = v12;
  v13 = *(_OWORD *)(v3 - 144);
  *(_OWORD *)(v0 + 272) = *(_OWORD *)(v3 - 160);
  *(_OWORD *)(v0 + 288) = v13;
  v14 = *(_OWORD *)(v3 - 240);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v3 - 256);
  *(_OWORD *)(v0 + 192) = v14;
  v15 = *(_OWORD *)(v3 - 208);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v3 - 224);
  *(_OWORD *)(v0 + 224) = v15;
  sub_236525F20();
  v16 = *(_QWORD *)(v0 + 40);
  sub_2365B0824();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 24) + 8))(v1, v16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 8))(v10, v9);
  return sub_2365258E4((uint64_t *)(v3 - 256));
}

uint64_t V1Command.Request.hashValue.getter()
{
  return sub_236537E08((void (*)(_BYTE *))V1Command.Request.hash(into:));
}

uint64_t V1Command.Request.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  _QWORD v36[6];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;

  v46 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE68);
  v45 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v52 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE70);
  v44 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v51 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE78);
  v43 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v49 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE80);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v48 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE88);
  v36[5] = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v47 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAE90);
  v50 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for V1Command.Request(0);
  v10 = MEMORY[0x24BDAC7A8](v55);
  v36[4] = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v36 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v36 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v36 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v36 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v36 - v24;
  v26 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_23653D598();
  v53 = v9;
  v27 = v57;
  sub_2365B0A7C();
  if (!v27)
  {
    v36[2] = v20;
    v36[0] = v17;
    v36[1] = v23;
    v36[3] = v14;
    v57 = v25;
    v28 = v55;
    v29 = v54;
    v30 = v53;
    v31 = sub_2365B07A0();
    if (*(_QWORD *)(v31 + 16) == 1)
      __asm { BR              X10 }
    v32 = sub_2365B05B4();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v34 = v28;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v29);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
}

uint64_t sub_236535544@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return V1Command.Request.init(from:)(a1, a2);
}

void sub_236535558(_QWORD *a1)
{
  V1Command.Request.encode(to:)(a1);
}

uint64_t sub_236535570(uint64_t a1, uint64_t a2)
{
  return sub_2365384B4(a1, a2, (void (*)(_BYTE *))V1Command.Request.hash(into:));
}

uint64_t sub_236535580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23651C15C(a1, a2, a3, (void (*)(_BYTE *))V1Command.Request.hash(into:));
}

void V1Command.Response.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = type metadata accessor for AuthenticateCommand.Response(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for AnisetteCommand.Response();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for SignInCommand.Response(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x24BDAC7A8](v4);
  sub_23648DFF8(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_2365356C8 + 4 * byte_2365C0D11[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_2365356C8()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;

  *(_DWORD *)(v1 - 216) = *v0;
  *(_DWORD *)(v1 - 224) = v0[1];
  v2 = *((_QWORD *)v0 + 2);
  *(_QWORD *)(v1 - 232) = *((_QWORD *)v0 + 1);
  v3 = v0[24];
  *(_DWORD *)(v1 - 240) = v0[25];
  *(_DWORD *)(v1 - 236) = v3;
  v5 = *((_QWORD *)v0 + 4);
  v4 = *((_QWORD *)v0 + 5);
  v6 = *((_QWORD *)v0 + 6);
  v7 = *((_QWORD *)v0 + 7);
  v9 = *((_QWORD *)v0 + 8);
  v8 = *((_QWORD *)v0 + 9);
  *(_QWORD *)(v1 - 208) = v5;
  *(_QWORD *)(v1 - 200) = v8;
  v10 = *((_QWORD *)v0 + 10);
  v11 = *((_QWORD *)v0 + 11);
  *(_QWORD *)(v1 - 256) = v4;
  *(_QWORD *)(v1 - 248) = v10;
  v12 = v0[96];
  sub_2365B09F8();
  *(_BYTE *)(v1 - 192) = *(_DWORD *)(v1 - 216);
  *(_BYTE *)(v1 - 191) = *(_DWORD *)(v1 - 224);
  *(_QWORD *)(v1 - 184) = *(_QWORD *)(v1 - 232);
  *(_QWORD *)(v1 - 176) = v2;
  *(_BYTE *)(v1 - 168) = *(_DWORD *)(v1 - 236);
  *(_BYTE *)(v1 - 167) = *(_DWORD *)(v1 - 240);
  *(_QWORD *)(v1 - 160) = v5;
  v13 = *(_QWORD *)(v1 - 256);
  *(_QWORD *)(v1 - 152) = v13;
  *(_QWORD *)(v1 - 144) = v6;
  *(_QWORD *)(v1 - 136) = v7;
  *(_QWORD *)(v1 - 128) = v9;
  *(_QWORD *)(v1 - 120) = v8;
  *(_QWORD *)(v1 - 112) = *(_QWORD *)(v1 - 248);
  *(_QWORD *)(v1 - 104) = v11;
  *(_BYTE *)(v1 - 96) = v12;
  HandshakeCommand.Response.hash(into:)();
  swift_bridgeObjectRelease();
  return sub_23648DCEC(*(_QWORD *)(v1 - 208), v13, v6, v7, v9, *(_QWORD *)(v1 - 200));
}

uint64_t sub_236535C60()
{
  sub_23653E40C();
  return sub_2365B0AD0();
}

uint64_t sub_236535C88()
{
  sub_23653E40C();
  return sub_2365B0ADC();
}

uint64_t sub_236535CB0()
{
  sub_23653E3C8();
  return sub_2365B0AD0();
}

uint64_t sub_236535CD8()
{
  sub_23653E3C8();
  return sub_2365B0ADC();
}

uint64_t sub_236535D00()
{
  sub_23653E340();
  return sub_2365B0AD0();
}

uint64_t sub_236535D28()
{
  sub_23653E340();
  return sub_2365B0ADC();
}

uint64_t sub_236535D50()
{
  sub_23653E494();
  return sub_2365B0AD0();
}

uint64_t sub_236535D78()
{
  sub_23653E494();
  return sub_2365B0ADC();
}

uint64_t sub_236535DA0()
{
  sub_23653E384();
  return sub_2365B0AD0();
}

uint64_t sub_236535DC8()
{
  sub_23653E384();
  return sub_2365B0ADC();
}

uint64_t sub_236535DF0()
{
  sub_23653E450();
  return sub_2365B0AD0();
}

uint64_t sub_236535E18()
{
  sub_23653E450();
  return sub_2365B0ADC();
}

void V1Command.Response.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAEA0);
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v28 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAEA8);
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v25 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AuthenticateCommand.Response(0);
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAEB0);
  v21 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v20 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for AnisetteCommand.Response();
  MEMORY[0x24BDAC7A8](v18);
  v19 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAEB8);
  v16 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v14[0] = type metadata accessor for SignInCommand.Response(0);
  MEMORY[0x24BDAC7A8](v14[0]);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAEC0);
  v14[1] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v8 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAEC8);
  v31 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v12 = (char *)v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653E340();
  v32 = v12;
  sub_2365B0AAC();
  sub_23648DFF8(v33, (uint64_t)v10, type metadata accessor for V1Command.Response);
  v13 = (char *)sub_236536188 + 4 * word_2365C0D1A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_236536188()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)(v2 - 272) = *v0;
  *(_DWORD *)(v2 - 280) = v0[1];
  v3 = *((_QWORD *)v0 + 2);
  *(_QWORD *)(v2 - 288) = *((_QWORD *)v0 + 1);
  *(_QWORD *)(v2 - 264) = v3;
  *(_DWORD *)(v2 - 296) = v0[24];
  *(_DWORD *)(v2 - 304) = v0[25];
  v4 = *((_QWORD *)v0 + 4);
  v5 = *((_QWORD *)v0 + 5);
  *(_QWORD *)(v2 - 200) = v4;
  v7 = *((_QWORD *)v0 + 6);
  v6 = *((_QWORD *)v0 + 7);
  *(_QWORD *)(v2 - 240) = v7;
  *(_QWORD *)(v2 - 232) = v5;
  v9 = *((_QWORD *)v0 + 8);
  v8 = *((_QWORD *)v0 + 9);
  *(_QWORD *)(v2 - 256) = v9;
  *(_QWORD *)(v2 - 248) = v6;
  *(_QWORD *)(v2 - 312) = v8;
  *(_QWORD *)(v2 - 320) = *((_QWORD *)v0 + 10);
  *(_QWORD *)(v2 - 328) = *((_QWORD *)v0 + 11);
  *(_DWORD *)(v2 - 336) = v0[96];
  *(_BYTE *)(v2 - 192) = 0;
  sub_23653E494();
  v10 = *(_QWORD *)(v2 - 216);
  sub_2365B07B8();
  *(_BYTE *)(v2 - 192) = *(_DWORD *)(v2 - 272);
  *(_BYTE *)(v2 - 191) = *(_DWORD *)(v2 - 280);
  *(_QWORD *)(v2 - 184) = *(_QWORD *)(v2 - 288);
  *(_QWORD *)(v2 - 176) = v3;
  *(_BYTE *)(v2 - 168) = *(_DWORD *)(v2 - 296);
  *(_BYTE *)(v2 - 167) = *(_DWORD *)(v2 - 304);
  *(_QWORD *)(v2 - 160) = v4;
  *(_QWORD *)(v2 - 152) = v5;
  *(_QWORD *)(v2 - 144) = v7;
  *(_QWORD *)(v2 - 136) = v6;
  v11 = *(_QWORD *)(v2 - 312);
  *(_QWORD *)(v2 - 128) = v9;
  *(_QWORD *)(v2 - 120) = v11;
  v12 = *(_QWORD *)(v2 - 328);
  *(_QWORD *)(v2 - 112) = *(_QWORD *)(v2 - 320);
  *(_QWORD *)(v2 - 104) = v12;
  *(_BYTE *)(v2 - 96) = *(_DWORD *)(v2 - 336);
  sub_236526120();
  v13 = *(_QWORD *)(v2 - 352);
  sub_2365B0824();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 360) + 8))(v1, v13);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 224) + 8))(v10, *(_QWORD *)(v2 - 72));
  swift_bridgeObjectRelease();
  return sub_23648DCEC(*(_QWORD *)(v2 - 200), *(_QWORD *)(v2 - 232), *(_QWORD *)(v2 - 240), *(_QWORD *)(v2 - 248), *(_QWORD *)(v2 - 256), v11);
}

uint64_t V1Command.Response.hashValue.getter()
{
  return sub_236537E08((void (*)(_BYTE *))V1Command.Response.hash(into:));
}

uint64_t V1Command.Response.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  _QWORD v36[7];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;

  v45 = a2;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF08);
  v52 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v50 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF10);
  v44 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v49 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF18);
  v43 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v48 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF20);
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v47 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF28);
  v36[6] = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v46 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF30);
  v51 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for V1Command.Response(0);
  v10 = MEMORY[0x24BDAC7A8](v53);
  v36[5] = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v36 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v36 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v36 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v36 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v36 - v24;
  v26 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_23653E340();
  v27 = v56;
  sub_2365B0A7C();
  if (!v27)
  {
    v36[2] = v20;
    v36[1] = v23;
    v36[3] = v17;
    v36[4] = v14;
    v28 = v53;
    v56 = v25;
    v29 = v54;
    v30 = sub_2365B07A0();
    if (*(_QWORD *)(v30 + 16) == 1)
      __asm { BR              X10 }
    v31 = v29;
    v32 = sub_2365B05B4();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v34 = v28;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x24BEE26D0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v31);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
}

uint64_t sub_236537064@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return V1Command.Response.init(from:)(a1, a2);
}

void sub_236537078(_QWORD *a1)
{
  V1Command.Response.encode(to:)(a1);
}

uint64_t sub_236537090(uint64_t a1, uint64_t a2)
{
  return sub_2365384B4(a1, a2, (void (*)(_BYTE *))V1Command.Response.hash(into:));
}

uint64_t sub_2365370A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23651C15C(a1, a2, a3, (void (*)(_BYTE *))V1Command.Response.hash(into:));
}

uint64_t static V1CommandError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(_BYTE *)(a1 + 24))
  {
    if (v5 != 1)
    {
      v21 = v4 | v2;
      if (v4 | v2 | v3)
      {
        if (v3 == 1 && v21 == 0)
        {
          if (v9 == 2 && v7 == 1 && !(v8 | v6))
          {
            v17 = 1;
            sub_23653E4F8(1, 0, 0, 2);
            sub_23653E4F8(1, 0, 0, 2);
            return v17 & 1;
          }
          goto LABEL_48;
        }
        if (v3 != 2 || v21)
        {
          if (v3 != 3 || v21)
          {
            if (v9 != 2 || v7 != 4 || v8 | v6)
              goto LABEL_48;
            sub_23653E4F8(4, 0, 0, 2);
            v23 = 4;
          }
          else
          {
            if (v9 != 2 || v7 != 3 || v8 | v6)
              goto LABEL_48;
            sub_23653E4F8(3, 0, 0, 2);
            v23 = 3;
          }
        }
        else
        {
          if (v9 != 2 || v7 != 2 || v8 | v6)
            goto LABEL_48;
          sub_23653E4F8(2, 0, 0, 2);
          v23 = 2;
        }
      }
      else
      {
        if (v9 != 2 || (v8 | v6 | v7) != 0)
          goto LABEL_48;
        sub_23653E4F8(0, 0, 0, 2);
        v23 = 0;
      }
      sub_23653E4F8(v23, 0, 0, 2);
      v17 = 1;
      return v17 & 1;
    }
    if (v9 == 1)
    {
      v10 = *(_QWORD *)(v3 + 24);
      v43 = *(_QWORD *)(v3 + 32);
      v11 = *(_BYTE *)(v3 + 40);
      v30 = *(_QWORD *)(v3 + 56);
      v31 = *(_QWORD *)(v3 + 64);
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(v7 + 16);
      v39 = *(_QWORD *)(v3 + 48);
      v40 = *(_QWORD *)(v7 + 24);
      v14 = *(_QWORD *)(v7 + 32);
      v41 = *(_BYTE *)(v3 + 72);
      v42 = *(_BYTE *)(v7 + 40);
      v15 = *(_QWORD *)(v7 + 48);
      v33 = *(_QWORD *)(v7 + 56);
      v34 = *(_QWORD *)(a2 + 8);
      v32 = *(_QWORD *)(v7 + 64);
      v38 = *(_BYTE *)(v7 + 72);
      v48 = *(_QWORD *)(v3 + 16);
      v49 = v10;
      v50 = v43;
      v51 = v11;
      v44 = v13;
      v45 = v40;
      v46 = v14;
      v47 = v42;
      v36 = v12;
      sub_23653E4D8(v7, v34, v12, 1);
      v35 = v4;
      sub_23653E4D8(v3, v2, v4, 1);
      v37 = v48;
      sub_23653E4D8(v48, v10, v43, v11);
      sub_23653E4D8(v13, v40, v14, v42);
      sub_23653E4D8(v39, v30, v31, v41);
      v16 = v15;
      sub_23653E4D8(v15, v33, v32, v38);
      if ((static V1CommandError.== infix(_:_:)(&v48, &v44) & 1) != 0)
      {
        v48 = v39;
        v49 = v30;
        v50 = v31;
        v51 = v41;
        v44 = v15;
        v45 = v33;
        v46 = v32;
        v47 = v38;
        v17 = static V1CommandError.== infix(_:_:)(&v48, &v44);
        sub_23653E4F8(v13, v40, v14, v42);
        sub_23653E4F8(v37, v10, v43, v11);
        sub_23653E4F8(v16, v33, v32, v38);
        sub_23653E4F8(v39, v30, v31, v41);
        sub_23653E4F8(v3, v2, v35, 1);
        sub_23653E4F8(v7, v34, v36, 1);
        return v17 & 1;
      }
      sub_23653E4F8(v15, v33, v32, v38);
      sub_23653E4F8(v39, v30, v31, v41);
      sub_23653E4F8(v13, v40, v14, v42);
      sub_23653E4F8(v37, v10, v43, v11);
      sub_23653E4F8(v3, v2, v35, 1);
      v25 = v7;
      v26 = v34;
      v27 = v36;
      v28 = 1;
LABEL_49:
      sub_23653E4F8(v25, v26, v27, v28);
      v17 = 0;
      return v17 & 1;
    }
LABEL_48:
    sub_23653E4D8(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, v9);
    sub_23653E4D8(v3, v2, v4, v5);
    sub_23653E4F8(v3, v2, v4, v5);
    v25 = v7;
    v26 = v6;
    v27 = v8;
    v28 = v9;
    goto LABEL_49;
  }
  if (*(_BYTE *)(a2 + 24))
    goto LABEL_48;
  v18 = *(_QWORD *)a1;
  if (v3 == v7 && v2 == v6)
  {
    sub_23653E4D8(v18, v2, v8, 0);
    sub_23653E4D8(v3, v2, v4, 0);
    sub_23653E4F8(v3, v2, v4, 0);
    sub_23653E4F8(v3, v2, v8, 0);
  }
  else
  {
    v20 = sub_2365B08CC();
    sub_23653E4D8(v7, v6, v8, 0);
    sub_23653E4D8(v3, v2, v4, 0);
    sub_23653E4F8(v3, v2, v4, 0);
    sub_23653E4F8(v7, v6, v8, 0);
    v17 = 0;
    if ((v20 & 1) == 0)
      return v17 & 1;
  }
  v17 = v4 == v8;
  return v17 & 1;
}

uint64_t V1Command.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v20[3];
  char v21;

  v2 = v1;
  v4 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for V1Command(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23648DFF8(v2, (uint64_t)v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23646591C((uint64_t)v12, (uint64_t)v6, type metadata accessor for V1Command.Response);
      sub_2365B09F8();
      V1Command.Response.hash(into:)();
      return sub_236465A18((uint64_t)v6, type metadata accessor for V1Command.Response);
    }
    else
    {
      v16 = *(_QWORD *)v12;
      v17 = *((_QWORD *)v12 + 1);
      v18 = *((_QWORD *)v12 + 2);
      v19 = v12[24];
      sub_2365B09F8();
      v20[0] = v16;
      v20[1] = v17;
      v20[2] = v18;
      v21 = v19;
      V1CommandError.hash(into:)(a1);
      return sub_23653E4F8(v16, v17, v18, v19);
    }
  }
  else
  {
    sub_23646591C((uint64_t)v12, (uint64_t)v9, type metadata accessor for V1Command.Request);
    sub_2365B09F8();
    V1Command.Request.hash(into:)();
    return sub_236465A18((uint64_t)v9, type metadata accessor for V1Command.Request);
  }
}

uint64_t sub_2365377B0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65736E6F70736572;
  if (*v0 != 1)
    v1 = 0x6572756C696166;
  if (*v0)
    return v1;
  else
    return 0x74736575716572;
}

uint64_t sub_23653780C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236547AA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236537830()
{
  sub_23653E52C();
  return sub_2365B0AD0();
}

uint64_t sub_236537858()
{
  sub_23653E52C();
  return sub_2365B0ADC();
}

uint64_t sub_236537880()
{
  sub_23653E570();
  return sub_2365B0AD0();
}

uint64_t sub_2365378A8()
{
  sub_23653E570();
  return sub_2365B0ADC();
}

uint64_t sub_2365378D0()
{
  sub_23653E63C();
  return sub_2365B0AD0();
}

uint64_t sub_2365378F8()
{
  sub_23653E63C();
  return sub_2365B0ADC();
}

uint64_t sub_236537920()
{
  sub_23653E5F8();
  return sub_2365B0AD0();
}

uint64_t sub_236537948()
{
  sub_23653E5F8();
  return sub_2365B0ADC();
}

uint64_t V1Command.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF40);
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v41 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF48);
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x24BDAC7A8](v37);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF50);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x24BDAC7A8](v34);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for V1Command(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF58);
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653E52C();
  sub_2365B0AAC();
  sub_23648DFF8(v44, (uint64_t)v15, type metadata accessor for V1Command);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23646591C((uint64_t)v15, (uint64_t)v7, type metadata accessor for V1Command.Response);
      LOBYTE(v47) = 1;
      sub_23653E5F8();
      v20 = v38;
      v21 = v46;
      sub_2365B07B8();
      sub_23644F0B8(&qword_2563EAF80, type metadata accessor for V1Command.Response, (uint64_t)&protocol conformance descriptor for V1Command.Response);
      v22 = v40;
      sub_2365B0824();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v22);
      sub_236465A18((uint64_t)v7, type metadata accessor for V1Command.Response);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v18, v21);
    }
    else
    {
      v26 = *(_QWORD *)v15;
      v27 = *((_QWORD *)v15 + 1);
      v28 = *((_QWORD *)v15 + 2);
      v29 = v15[24];
      LOBYTE(v47) = 2;
      sub_23653E570();
      v30 = v41;
      v31 = v46;
      sub_2365B07B8();
      v47 = v26;
      v48 = v27;
      v49 = v28;
      v50 = v29;
      sub_23653E5B4();
      v32 = v43;
      sub_2365B0824();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v32);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v31);
      return sub_23653E4F8(v26, v27, v28, v29);
    }
  }
  else
  {
    sub_23646591C((uint64_t)v15, (uint64_t)v12, type metadata accessor for V1Command.Request);
    LOBYTE(v47) = 0;
    sub_23653E63C();
    v24 = v46;
    sub_2365B07B8();
    sub_23644F0B8(&qword_2563EAF90, type metadata accessor for V1Command.Request, (uint64_t)&protocol conformance descriptor for V1Command.Request);
    v25 = v36;
    sub_2365B0824();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v25);
    sub_236465A18((uint64_t)v12, type metadata accessor for V1Command.Request);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v18, v24);
  }
}

uint64_t V1Command.hashValue.getter()
{
  return sub_236537E08((void (*)(_BYTE *))V1Command.hash(into:));
}

uint64_t sub_236537E08(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_2365B09E0();
  a1(v3);
  return sub_2365B0A34();
}

uint64_t V1Command.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  __int128 v63;
  uint64_t v64;
  char v65;
  uint64_t v66;

  v56 = a2;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAF98);
  v55 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v61 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFA0);
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFA8);
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFB0);
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for V1Command(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v45 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v45 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v45 - v20;
  v22 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23653E52C();
  v23 = v66;
  sub_2365B0A7C();
  if (v23)
    goto LABEL_7;
  v47 = v19;
  v48 = v16;
  v46 = v13;
  v24 = v59;
  v25 = v60;
  v26 = v61;
  v49 = v21;
  v66 = v10;
  v27 = sub_2365B07A0();
  if (*(_QWORD *)(v27 + 16) != 1)
  {
    v33 = sub_2365B05B4();
    swift_allocError();
    v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v35 = v66;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x24BEE26D0], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v25);
LABEL_7:
    v31 = (uint64_t)v62;
    return __swift_destroy_boxed_opaque_existential_1(v31);
  }
  if (*(_BYTE *)(v27 + 32))
  {
    if (*(_BYTE *)(v27 + 32) == 1)
    {
      LOBYTE(v63) = 1;
      sub_23653E5F8();
      v28 = v57;
      sub_2365B06F8();
      type metadata accessor for V1Command.Response(0);
      sub_23644F0B8(&qword_2563EAFC0, type metadata accessor for V1Command.Response, (uint64_t)&protocol conformance descriptor for V1Command.Response);
      v29 = (uint64_t)v48;
      v30 = v54;
      sub_2365B0770();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v28, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v25);
      v31 = (uint64_t)v62;
      swift_storeEnumTagMultiPayload();
      v32 = v29;
    }
    else
    {
      LOBYTE(v63) = 2;
      sub_23653E570();
      sub_2365B06F8();
      sub_23653E680();
      v39 = v52;
      sub_2365B0770();
      v31 = (uint64_t)v62;
      v40 = v58;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v25);
      v41 = v64;
      v42 = v65;
      v43 = v46;
      *v46 = v63;
      *((_QWORD *)v43 + 2) = v41;
      *((_BYTE *)v43 + 24) = v42;
      swift_storeEnumTagMultiPayload();
      v32 = (uint64_t)v43;
    }
  }
  else
  {
    LOBYTE(v63) = 0;
    sub_23653E63C();
    sub_2365B06F8();
    type metadata accessor for V1Command.Request(0);
    sub_23644F0B8(&qword_2563EAFC8, type metadata accessor for V1Command.Request, (uint64_t)&protocol conformance descriptor for V1Command.Request);
    v37 = (uint64_t)v47;
    v38 = v51;
    sub_2365B0770();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v38);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v25);
    v31 = (uint64_t)v62;
    swift_storeEnumTagMultiPayload();
    v32 = v37;
  }
  v44 = (uint64_t)v49;
  sub_23646591C(v32, (uint64_t)v49, type metadata accessor for V1Command);
  sub_23646591C(v44, v56, type metadata accessor for V1Command);
  return __swift_destroy_boxed_opaque_existential_1(v31);
}

uint64_t sub_23653847C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return V1Command.init(from:)(a1, a2);
}

uint64_t sub_236538490(_QWORD *a1)
{
  return V1Command.encode(to:)(a1);
}

uint64_t sub_2365384A8(uint64_t a1, uint64_t a2)
{
  return sub_2365384B4(a1, a2, (void (*)(_BYTE *))V1Command.hash(into:));
}

uint64_t sub_2365384B4(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_2365B09E0();
  a3(v5);
  return sub_2365B0A34();
}

uint64_t sub_2365384F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23651C15C(a1, a2, a3, (void (*)(_BYTE *))V1Command.hash(into:));
}

uint64_t V1CommandError.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v3 = *v1;
  if (*((_BYTE *)v1 + 24))
  {
    if (*((_BYTE *)v1 + 24) == 1)
    {
      v4 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      v6 = *(_QWORD *)(v3 + 32);
      v7 = *(_QWORD *)(v3 + 48);
      v8 = *(_QWORD *)(v3 + 56);
      v9 = *(_QWORD *)(v3 + 64);
      v10 = *(_BYTE *)(v3 + 40);
      v11 = *(_BYTE *)(v3 + 72);
      sub_2365B09F8();
      sub_23653E4D8(v4, v5, v6, v10);
      sub_23653E4D8(v7, v8, v9, v11);
      V1CommandError.hash(into:)(a1);
      V1CommandError.hash(into:)(a1);
      sub_23653E4F8(v4, v5, v6, v10);
      return sub_23653E4F8(v7, v8, v9, v11);
    }
  }
  else
  {
    sub_2365B09F8();
    sub_2365B008C();
  }
  return sub_2365B09F8();
}

uint64_t sub_2365386A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2365386D4 + 4 * byte_2365C0D2E[a1]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_2365386D4()
{
  return 0x636972656E6567;
}

uint64_t sub_2365386E8()
{
  return 0x64657473656ELL;
}

unint64_t sub_2365386FC()
{
  return 0xD000000000000011;
}

uint64_t sub_236538744()
{
  return 0x636E614372657375;
}

uint64_t sub_236538768()
{
  unsigned __int8 *v0;

  return sub_2365386A0(*v0);
}

uint64_t sub_236538770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236547BFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_236538794(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2365387A0()
{
  sub_23653E6C4();
  return sub_2365B0AD0();
}

uint64_t sub_2365387C8()
{
  sub_23653E6C4();
  return sub_2365B0ADC();
}

uint64_t sub_2365387F0()
{
  _BYTE *v0;

  if (*v0)
    return 1701080931;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_236538820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236547EE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236538844()
{
  sub_23653E85C();
  return sub_2365B0AD0();
}

uint64_t sub_23653886C()
{
  sub_23653E85C();
  return sub_2365B0ADC();
}

uint64_t sub_236538894()
{
  sub_23653E818();
  return sub_2365B0AD0();
}

uint64_t sub_2365388BC()
{
  sub_23653E818();
  return sub_2365B0ADC();
}

uint64_t sub_2365388E4()
{
  sub_23653E74C();
  return sub_2365B0AD0();
}

uint64_t sub_23653890C()
{
  sub_23653E74C();
  return sub_2365B0ADC();
}

uint64_t sub_236538934()
{
  sub_23653E7D4();
  return sub_2365B0AD0();
}

uint64_t sub_23653895C()
{
  sub_23653E7D4();
  return sub_2365B0ADC();
}

uint64_t sub_236538984()
{
  sub_23653E790();
  return sub_2365B0AD0();
}

uint64_t sub_2365389AC()
{
  sub_23653E790();
  return sub_2365B0ADC();
}

uint64_t sub_2365389D4()
{
  sub_23653E8A0();
  return sub_2365B0AD0();
}

uint64_t sub_2365389FC()
{
  sub_23653E8A0();
  return sub_2365B0ADC();
}

uint64_t sub_236538A24()
{
  sub_23653E708();
  return sub_2365B0AD0();
}

uint64_t sub_236538A4C()
{
  sub_23653E708();
  return sub_2365B0ADC();
}

uint64_t V1CommandError.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;

  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFD0);
  v56 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v55 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFD8);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v52 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFE0);
  v59 = *(_QWORD *)(v5 - 8);
  v60 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v58 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFE8);
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v61 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFF0);
  v70 = *(_QWORD *)(v9 - 8);
  v71 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v69 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EAFF8);
  v67 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v68 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB000);
  v65 = *(_QWORD *)(v12 - 8);
  v66 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v64 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB008);
  v74 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v17 = v1[1];
  v72 = v1[2];
  v19 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653E6C4();
  sub_2365B0AAC();
  if (v19)
  {
    v73 = (uint64_t)v16;
    v20 = v14;
    if (v19 == 1)
    {
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      v23 = *(_QWORD *)(v18 + 32);
      v24 = *(_BYTE *)(v18 + 40);
      v25 = *(_QWORD *)(v18 + 48);
      v26 = *(_QWORD *)(v18 + 56);
      v27 = *(_QWORD *)(v18 + 64);
      v28 = *(unsigned __int8 *)(v18 + 72);
      LOBYTE(v76) = 2;
      sub_23653E4D8(v21, v22, v23, v24);
      v72 = v25;
      v67 = v27;
      v68 = v26;
      LODWORD(v66) = v28;
      sub_23653E4D8(v25, v26, v27, v28);
      sub_23653E818();
      v29 = v69;
      v65 = v20;
      sub_2365B07B8();
      v76 = v21;
      v77 = v22;
      v78 = v23;
      v79 = v24;
      v80 = 0;
      sub_23653E5B4();
      v30 = v71;
      v31 = v75;
      sub_2365B0824();
      if (v31)
      {
        sub_23653E4F8(v72, v68, v67, v66);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v29, v30);
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v65);
        v32 = v21;
        v33 = v22;
        v34 = v23;
        v35 = v24;
      }
      else
      {
        v76 = v72;
        v77 = v68;
        v78 = v67;
        v79 = v66;
        v80 = 1;
        sub_2365B0824();
        sub_23653E4F8(v21, v22, v23, v24);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v29, v30);
        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v65);
        v32 = v72;
        v34 = v67;
        v33 = v68;
        v35 = v66;
      }
      return sub_23653E4F8(v32, v33, v34, v35);
    }
    v41 = v72 | v17;
    if (!(v72 | v17 | v18))
    {
      LOBYTE(v76) = 0;
      sub_23653E8A0();
      v42 = v64;
      v43 = v14;
      v44 = v73;
      sub_2365B07B8();
      v46 = v65;
      v45 = v66;
      goto LABEL_18;
    }
    if (v18 == 1 && !v41)
    {
      LOBYTE(v76) = 3;
      sub_23653E7D4();
      v42 = v61;
      v43 = v14;
      v44 = v73;
      sub_2365B07B8();
      v46 = v62;
      v45 = v63;
LABEL_18:
      (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v45);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v44, v43);
    }
    if (v18 == 2 && !v41)
    {
      LOBYTE(v76) = 4;
      sub_23653E790();
      v42 = v58;
      v43 = v14;
      v44 = v73;
      sub_2365B07B8();
      v46 = v59;
      v45 = v60;
      goto LABEL_18;
    }
    if (v18 != 3 || v41)
    {
      LOBYTE(v76) = 6;
      sub_23653E708();
      v50 = v55;
      v48 = v14;
      v49 = v73;
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v50, v57);
    }
    else
    {
      LOBYTE(v76) = 5;
      sub_23653E74C();
      v47 = v52;
      v48 = v14;
      v49 = v73;
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v47, v54);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v49, v48);
  }
  else
  {
    v36 = v67;
    LOBYTE(v76) = 1;
    sub_23653E85C();
    v37 = v68;
    sub_2365B07B8();
    LOBYTE(v76) = 0;
    v38 = v73;
    v39 = v75;
    sub_2365B0800();
    if (!v39)
    {
      LOBYTE(v76) = 1;
      sub_2365B0818();
    }
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v38);
    return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v16, v14);
  }
}

uint64_t V1CommandError.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];
  __int128 v5;
  uint64_t v6;
  char v7;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 24);
  v5 = *v0;
  v6 = v1;
  v7 = v2;
  sub_2365B09E0();
  V1CommandError.hash(into:)((uint64_t)v4);
  return sub_2365B0A34();
}

uint64_t V1CommandError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v27[6];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;

  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB050);
  v44 = *(_QWORD *)(v3 - 8);
  v45 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB058);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB060);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB068);
  v27[5] = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB070);
  v36 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v42 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB078);
  v35 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v41 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB080);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB088);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_23653E6C4();
  v21 = v47;
  sub_2365B0A7C();
  if (!v21)
  {
    v27[3] = v15;
    v27[1] = v13;
    v27[2] = v12;
    v27[4] = 0;
    v47 = v17;
    v22 = sub_2365B07A0();
    if (*(_QWORD *)(v22 + 16) == 1)
      __asm { BR              X10 }
    v23 = sub_2365B05B4();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v25 = &type metadata for V1CommandError;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v19, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
}

uint64_t sub_236539B98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return V1CommandError.init(from:)(a1, a2);
}

uint64_t sub_236539BAC(_QWORD *a1)
{
  return V1CommandError.encode(to:)(a1);
}

uint64_t sub_236539BC4()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];
  __int128 v5;
  uint64_t v6;
  char v7;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 24);
  v5 = *v0;
  v6 = v1;
  v7 = v2;
  sub_2365B09E0();
  V1CommandError.hash(into:)((uint64_t)v4);
  return sub_2365B0A34();
}

uint64_t sub_236539C20()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];
  __int128 v5;
  uint64_t v6;
  char v7;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 24);
  v5 = *v0;
  v6 = v1;
  v7 = v2;
  sub_2365B09E0();
  V1CommandError.hash(into:)((uint64_t)v4);
  return sub_2365B0A34();
}

void Error.into()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v3 = v2;
  v6 = sub_2365B08A8();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v3, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v8, v3, a1);
  }
  v9 = (void *)sub_2365AF8E8();

  v10 = objc_msgSend(v9, sel_domain);
  v11 = sub_2365B005C();
  v13 = v12;

  v14 = objc_msgSend(v9, sel_code);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v14;
  *(_BYTE *)(a2 + 24) = 0;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[5];
  __int128 v28;
  char v29;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v10((char *)v27 - v11, v3, a1);
  if (swift_dynamicCast())
  {
    v12 = v27[1];
    v13 = v27[2];
    v14 = (id)v27[3];
    v15 = v27[4];
    v16 = v28;
    v17 = v29;
  }
  else
  {
    v10(v9, v3, a1);
    v18 = sub_2365B08A8();
    if (v18)
    {
      v19 = (void *)v18;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
    }
    else
    {
      v19 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v20, v9, a1);
    }
    v21 = (void *)sub_2365AF8E8();

    v22 = objc_msgSend(v21, sel_domain);
    v12 = sub_2365B005C();
    v13 = v23;

    v14 = objc_msgSend(v21, sel_code);
    v24 = objc_msgSend(v21, sel_localizedDescription);
    v15 = sub_2365B005C();
    v26 = v25;

    v17 = 0;
    v16 = v26;
  }
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v15;
  *(_OWORD *)(a2 + 32) = v16;
  *(_BYTE *)(a2 + 48) = v17;
}

uint64_t V1InfoHeader.deviceIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.deviceMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 V1InfoHeader.deviceMetadata.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v5;
  *(_OWORD *)v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t (*V1InfoHeader.deviceMetadata.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.osMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(v1 + 96);
  return sub_23653E920(v2, v3);
}

__n128 V1InfoHeader.osMetadata.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;
  __n128 v6;
  __n128 v7;

  v6 = a1[1];
  v7 = *a1;
  v2 = a1[2].n128_u64[0];
  v3 = a1[2].n128_u64[1];
  v4 = a1[3].n128_u8[0];
  sub_23653E95C(v1[3].n128_i64[0], v1[3].n128_i64[1]);
  result = v6;
  v1[3] = v7;
  v1[4] = v6;
  v1[5].n128_u64[0] = v2;
  v1[5].n128_u64[1] = v3;
  v1[6].n128_u8[0] = v4;
  return result;
}

uint64_t (*V1InfoHeader.osMetadata.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.frameworkMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[13];
  v3 = v1[14];
  v4 = v1[15];
  v5 = v1[16];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_23653E998(v2, v3);
}

__n128 V1InfoHeader.frameworkMetadata.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_23653E9C8(v1[13], v1[14]);
  result = v5;
  *(__n128 *)(v1 + 13) = v5;
  v1[15] = v2;
  v1[16] = v3;
  return result;
}

uint64_t (*V1InfoHeader.frameworkMetadata.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.clientMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[17];
  v3 = v1[18];
  v4 = v1[19];
  v5 = v1[20];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_23653E998(v2, v3);
}

__n128 V1InfoHeader.clientMetadata.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_23653E9C8(v1[17], v1[18]);
  result = v5;
  *(__n128 *)(v1 + 17) = v5;
  v1[19] = v2;
  v1[20] = v3;
  return result;
}

uint64_t (*V1InfoHeader.clientMetadata.modify())()
{
  return nullsub_1;
}

uint64_t sub_236539FE4()
{
  if (qword_2563E4330 != -1)
    swift_once();
  *(_QWORD *)&xmmword_2563EAD28 = qword_2563EADD0;
  *(__int128 *)((char *)&xmmword_2563EAD28 + 8) = *(_OWORD *)algn_2563EADD8;
  unk_2563EAD40 = *(_OWORD *)&qword_2563EADE8;
  qword_2563EAD50 = qword_2563EADF8;
  xmmword_2563EAD58 = 0u;
  xmmword_2563EAD68 = 0u;
  xmmword_2563EAD78 = 0u;
  LOBYTE(xmmword_2563EAD88) = 0;
  *(__int128 *)((char *)&xmmword_2563EAD88 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_2563EAD98 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_2563EADA8 + 8) = 0u;
  *(__int128 *)((char *)&xmmword_2563EADB8 + 8) = 0u;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void __swiftcall V1InfoHeader.init(deviceMetadata:osMetadata:frameworkMetadata:clientMetadata:)(AppleIDSetup::V1InfoHeader *__return_ptr retstr, AppleIDSetup::V1InfoHeader::DeviceMetadata *deviceMetadata, AppleIDSetup::V1InfoHeader::OSMetadata_optional *osMetadata, AppleIDSetup::V1InfoHeader::BundleMetadata_optional frameworkMetadata, AppleIDSetup::V1InfoHeader::BundleMetadata_optional clientMetadata)
{
  Swift::String_optional model;
  Swift::String type;
  Swift::String build;
  Swift::String version;
  Swift::String v9;
  Swift::String v10;

  model = deviceMetadata->model;
  retstr->deviceMetadata.identifier = deviceMetadata->identifier;
  retstr->deviceMetadata.model = model;
  type = osMetadata->value.type;
  build = osMetadata->value.build;
  retstr->deviceMetadata.type = deviceMetadata->type;
  retstr->osMetadata.value.type = type;
  version = osMetadata->value.version;
  retstr->osMetadata.value.build = build;
  retstr->osMetadata.value.version = version;
  v9 = *(Swift::String *)(frameworkMetadata.value.bundleIdentifier._countAndFlagsBits + 16);
  retstr->frameworkMetadata.value.bundleIdentifier = *(Swift::String *)frameworkMetadata.value.bundleIdentifier._countAndFlagsBits;
  retstr->frameworkMetadata.value.version = v9;
  v10 = (Swift::String)*((_OWORD *)frameworkMetadata.value.bundleIdentifier._object + 1);
  retstr->clientMetadata.value.bundleIdentifier = *(Swift::String *)frameworkMetadata.value.bundleIdentifier._object;
  retstr->osMetadata.value.isInternal = osMetadata->value.isInternal;
  retstr->clientMetadata.value.version = v10;
}

_QWORD *static V1InfoHeader.current.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[10];
  uint64_t v13;

  if (qword_2563E4328 != -1)
    swift_once();
  v2 = xmmword_2563EAD98;
  v12[8] = xmmword_2563EADA8;
  v12[9] = xmmword_2563EADB8;
  v3 = xmmword_2563EAD58;
  v4 = xmmword_2563EAD68;
  v12[4] = xmmword_2563EAD68;
  v12[5] = xmmword_2563EAD78;
  v5 = xmmword_2563EAD78;
  v6 = xmmword_2563EAD88;
  v12[6] = xmmword_2563EAD88;
  v12[7] = xmmword_2563EAD98;
  v12[0] = xmmword_2563EAD28;
  v12[1] = unk_2563EAD38;
  v8 = xmmword_2563EAD28;
  v7 = unk_2563EAD38;
  v9 = unk_2563EAD48;
  v12[2] = unk_2563EAD48;
  v12[3] = xmmword_2563EAD58;
  v10 = xmmword_2563EADB8;
  *(_OWORD *)(a1 + 128) = xmmword_2563EADA8;
  *(_OWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v7;
  v13 = qword_2563EADC8;
  *(_QWORD *)(a1 + 160) = qword_2563EADC8;
  *(_OWORD *)(a1 + 32) = v9;
  *(_OWORD *)(a1 + 48) = v3;
  return sub_23653E9F8(v12);
}

uint64_t V1InfoHeader.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v1 = v0[7];
  v2 = v0[14];
  v5 = v0[13];
  v3 = v0[18];
  v6 = v0[17];
  V1InfoHeader.DeviceMetadata.hash(into:)();
  if (v1)
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
  }
  sub_2365B0A04();
  if (v2)
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    sub_2365B008C();
    sub_23653E9C8(v5, v2);
    if (v3)
    {
LABEL_5:
      sub_2365B0A04();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2365B008C();
      sub_2365B008C();
      return sub_23653E9C8(v6, v3);
    }
  }
  else
  {
    sub_2365B0A04();
    if (v3)
      goto LABEL_5;
  }
  return sub_2365B0A04();
}

uint64_t sub_23653A3A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23653A3DC + 4 * byte_2365C0D3C[*v0]))(0x654D656369766564, 0xEE00617461646174);
}

uint64_t sub_23653A3DC()
{
  return 0x61646174654D736FLL;
}

unint64_t sub_23653A3F8()
{
  return 0xD000000000000011;
}

uint64_t sub_23653A414()
{
  return 0x654D746E65696C63;
}

uint64_t sub_23653A428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236547FB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23653A44C()
{
  sub_23653EAD8();
  return sub_2365B0AD0();
}

uint64_t sub_23653A474()
{
  sub_23653EAD8();
  return sub_2365B0ADC();
}

uint64_t V1InfoHeader.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int v40;
  char v41;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB090);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v32 = v1[1];
  v33 = v7;
  v9 = *((_QWORD *)v1 + 4);
  v8 = *((_QWORD *)v1 + 5);
  v10 = *((_QWORD *)v1 + 6);
  v30 = *((_QWORD *)v1 + 7);
  v31 = v10;
  v11 = *((_QWORD *)v1 + 8);
  v28 = *((_QWORD *)v1 + 9);
  v29 = v11;
  v12 = *((_QWORD *)v1 + 10);
  v26 = *((_QWORD *)v1 + 11);
  v27 = v12;
  v40 = *((unsigned __int8 *)v1 + 96);
  v13 = *((_QWORD *)v1 + 13);
  v24 = *((_QWORD *)v1 + 14);
  v25 = v13;
  v23 = *((_QWORD *)v1 + 15);
  v22 = *((_QWORD *)v1 + 16);
  v20 = *(__int128 *)((char *)v1 + 136);
  v21 = *(__int128 *)((char *)v1 + 152);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653EAD8();
  sub_2365B0AAC();
  v35 = v33;
  v36 = v32;
  v37 = v9;
  v38 = v8;
  v41 = 0;
  sub_23653EB1C();
  v14 = v34;
  sub_2365B0824();
  if (!v14)
  {
    v15 = v22;
    v16 = v23;
    v18 = v24;
    v17 = v25;
    *(_QWORD *)&v35 = v31;
    *((_QWORD *)&v35 + 1) = v30;
    *(_QWORD *)&v36 = v29;
    *((_QWORD *)&v36 + 1) = v28;
    v37 = v27;
    v38 = v26;
    v39 = v40;
    v41 = 1;
    sub_23653EB60();
    sub_2365B07E8();
    *(_QWORD *)&v35 = v17;
    *((_QWORD *)&v35 + 1) = v18;
    *(_QWORD *)&v36 = v16;
    *((_QWORD *)&v36 + 1) = v15;
    v41 = 2;
    sub_23653EBA4();
    sub_2365B07E8();
    v35 = v20;
    v36 = v21;
    v41 = 3;
    sub_2365B07E8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t V1InfoHeader.hashValue.getter()
{
  sub_2365B09E0();
  V1InfoHeader.hash(into:)();
  return sub_2365B0A34();
}

_QWORD *V1InfoHeader.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[32];
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  char v78;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB0B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_23653EAD8();
  sub_2365B0A7C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    sub_23653E95C(0, 0);
    sub_23653E9C8(0, 0);
    return (_QWORD *)sub_23653E9C8(0, 0);
  }
  else
  {
    v46 = a2;
    LOBYTE(v48) = 0;
    sub_23653EBE8();
    sub_2365B0770();
    v10 = *((_QWORD *)&v58 + 1);
    v11 = *((_QWORD *)&v59 + 1);
    v40 = v59;
    *(_QWORD *)&v41 = v58;
    v12 = v61;
    v39 = v60;
    LOBYTE(v48) = 1;
    sub_23653EC2C();
    *((_QWORD *)&v41 + 1) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2365B0734();
    v37 = v12;
    v38 = v11;
    v14 = v60;
    v13 = v61;
    LODWORD(v12) = v62;
    LOBYTE(v48) = 2;
    v44 = v58;
    v45 = v59;
    sub_23653E920(v58, *((uint64_t *)&v58 + 1));
    v36 = sub_23653EC70();
    sub_2365B0734();
    *(_QWORD *)&v43 = v14;
    *((_QWORD *)&v43 + 1) = v13;
    v77 = v12;
    v15 = v59;
    v78 = 3;
    v35 = *((_QWORD *)&v58 + 1);
    v42 = v58;
    sub_23653E998(v58, *((uint64_t *)&v58 + 1));
    sub_2365B0734();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v16 = v73;
    v17 = v74;
    v18 = v75;
    v19 = v76;
    sub_23653E998(v73, v74);
    sub_23653E9C8(0, 0);
    v48 = v41;
    *(_QWORD *)&v49 = v40;
    *((_QWORD *)&v49 + 1) = v38;
    *(_QWORD *)&v50 = v39;
    *((_QWORD *)&v50 + 1) = v37;
    v51 = v44;
    v52 = v45;
    v20 = v42;
    v53 = v43;
    LOBYTE(v54) = v77;
    *((_QWORD *)&v54 + 1) = v42;
    *(_QWORD *)v55 = v35;
    *(_OWORD *)&v55[8] = v15;
    v36 = v16;
    *(_QWORD *)&v55[24] = v16;
    *(_QWORD *)&v56 = v17;
    v33 = v18;
    v34 = v17;
    *((_QWORD *)&v56 + 1) = v18;
    v57 = v19;
    v32 = v19;
    sub_23653E9F8(&v48);
    sub_23653E9C8(v16, v17);
    sub_23653E9C8(v20, v35);
    LOBYTE(v19) = v77;
    sub_23653E95C(v44, *((uint64_t *)&v44 + 1));
    v21 = v37;
    swift_bridgeObjectRelease();
    v22 = v38;
    swift_bridgeObjectRelease();
    v23 = *((_QWORD *)&v41 + 1);
    swift_bridgeObjectRelease();
    v24 = v56;
    v25 = v46;
    *(_OWORD *)(v46 + 128) = *(_OWORD *)&v55[16];
    *(_OWORD *)(v25 + 144) = v24;
    *(_QWORD *)(v25 + 160) = v57;
    v26 = v53;
    *(_OWORD *)(v25 + 64) = v52;
    *(_OWORD *)(v25 + 80) = v26;
    v27 = *(_OWORD *)v55;
    *(_OWORD *)(v25 + 96) = v54;
    *(_OWORD *)(v25 + 112) = v27;
    v28 = v49;
    *(_OWORD *)v25 = v48;
    *(_OWORD *)(v25 + 16) = v28;
    v29 = v51;
    *(_OWORD *)(v25 + 32) = v50;
    *(_OWORD *)(v25 + 48) = v29;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    *(_QWORD *)&v58 = v41;
    *((_QWORD *)&v58 + 1) = v23;
    *(_QWORD *)&v59 = v40;
    *((_QWORD *)&v59 + 1) = v22;
    v60 = v39;
    v61 = v21;
    v62 = v44;
    v63 = v45;
    v64 = v43;
    v65 = v19;
    v66 = v42;
    v67 = v35;
    v68 = v15;
    v69 = v36;
    v70 = v34;
    v71 = v33;
    v72 = v32;
    return sub_23653ECB4(&v58);
  }
}

_QWORD *sub_23653AD98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return V1InfoHeader.init(from:)(a1, a2);
}

uint64_t sub_23653ADAC(_QWORD *a1)
{
  return V1InfoHeader.encode(to:)(a1);
}

uint64_t sub_23653ADC4()
{
  sub_2365B09E0();
  V1InfoHeader.hash(into:)();
  return sub_2365B0A34();
}

uint64_t sub_23653AE04()
{
  sub_2365B09E0();
  V1InfoHeader.hash(into:)();
  return sub_2365B0A34();
}

uint64_t V1InfoHeader.DeviceMetadata.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.DeviceMetadata.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*V1InfoHeader.DeviceMetadata.identifier.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.DeviceMetadata.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.DeviceMetadata.model.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*V1InfoHeader.DeviceMetadata.model.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.DeviceMetadata.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.DeviceMetadata.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*V1InfoHeader.DeviceMetadata.type.modify())()
{
  return nullsub_1;
}

void __swiftcall V1InfoHeader.DeviceMetadata.init(identifier:model:type:)(AppleIDSetup::V1InfoHeader::DeviceMetadata *__return_ptr retstr, Swift::String_optional identifier, Swift::String_optional model, Swift::String_optional type)
{
  retstr->identifier = identifier;
  retstr->model = model;
  retstr->type = type;
}

void sub_23653AF9C()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_uniqueDeviceIdentifier);
    if (v2)
    {
      v3 = v2;
      v4 = sub_2365B005C();
      v6 = v5;

    }
    else
    {
      v4 = 0;
      v6 = 0;
    }
    v9 = objc_msgSend(v1, sel_modelNumber);
    if (v9)
    {
      v10 = v9;
      v7 = sub_2365B005C();
      v8 = v11;

    }
    else
    {

      v7 = 0;
      v8 = 0;
    }
  }
  else
  {
    v7 = 0;
    v8 = 0;
    v4 = 0;
    v6 = 0;
  }
  qword_2563EADD0 = v4;
  *(_QWORD *)algn_2563EADD8 = v6;
  qword_2563EADE0 = v7;
  unk_2563EADE8 = v8;
  qword_2563EADF0 = 0;
  qword_2563EADF8 = 0;
}

uint64_t static V1InfoHeader.DeviceMetadata.current.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  if (qword_2563E4330 != -1)
    swift_once();
  v2 = qword_2563EADF8;
  *(_QWORD *)a1 = qword_2563EADD0;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)algn_2563EADD8;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_2563EADE8;
  *(_QWORD *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t V1InfoHeader.DeviceMetadata.hash(into:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[5];
  if (v0[1])
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_2365B0A04();
    if (v2)
      goto LABEL_4;
    return sub_2365B0A04();
  }
  sub_2365B0A04();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_2365B0A04();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_4:
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    return swift_bridgeObjectRelease();
  }
  return sub_2365B0A04();
}

uint64_t sub_23653B214()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C65646F6DLL;
  if (*v0 != 1)
    v1 = 1701869940;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_23653B268@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2365481B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23653B28C()
{
  sub_23653ED94();
  return sub_2365B0AD0();
}

uint64_t sub_23653B2B4()
{
  sub_23653ED94();
  return sub_2365B0ADC();
}

uint64_t V1InfoHeader.DeviceMetadata.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB0D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653ED94();
  sub_2365B0AAC();
  v14 = 0;
  v9 = v11[5];
  sub_2365B07C4();
  if (!v9)
  {
    v13 = 1;
    sub_2365B07C4();
    v12 = 2;
    sub_2365B07C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t V1InfoHeader.DeviceMetadata.hashValue.getter()
{
  sub_2365B09E0();
  V1InfoHeader.DeviceMetadata.hash(into:)();
  return sub_2365B0A34();
}

uint64_t V1InfoHeader.DeviceMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB0E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653ED94();
  sub_2365B0A7C();
  if (!v2)
  {
    v25 = 0;
    v9 = sub_2365B0710();
    v12 = v11;
    v22 = v9;
    v24 = 1;
    swift_bridgeObjectRetain();
    v13 = sub_2365B0710();
    v15 = v14;
    v21 = v13;
    v23 = 2;
    swift_bridgeObjectRetain();
    v16 = sub_2365B0710();
    v18 = v17;
    v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    v20 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v22;
    a2[1] = v12;
    a2[2] = v21;
    a2[3] = v15;
    a2[4] = v20;
    a2[5] = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23653B6B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return V1InfoHeader.DeviceMetadata.init(from:)(a1, a2);
}

uint64_t sub_23653B6C8(_QWORD *a1)
{
  return V1InfoHeader.DeviceMetadata.encode(to:)(a1);
}

uint64_t sub_23653B6E0()
{
  sub_2365B09E0();
  V1InfoHeader.DeviceMetadata.hash(into:)();
  return sub_2365B0A34();
}

uint64_t sub_23653B734()
{
  sub_2365B09E0();
  V1InfoHeader.DeviceMetadata.hash(into:)();
  return sub_2365B0A34();
}

uint64_t V1InfoHeader.OSMetadata.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.OSMetadata.type.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*V1InfoHeader.OSMetadata.type.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.OSMetadata.build.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.OSMetadata.build.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*V1InfoHeader.OSMetadata.build.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.OSMetadata.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.OSMetadata.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*V1InfoHeader.OSMetadata.version.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.OSMetadata.isInternal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t V1InfoHeader.OSMetadata.isInternal.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*V1InfoHeader.OSMetadata.isInternal.modify())()
{
  return nullsub_1;
}

void __swiftcall V1InfoHeader.OSMetadata.init(type:build:version:isInternal:)(AppleIDSetup::V1InfoHeader::OSMetadata *__return_ptr retstr, Swift::String type, Swift::String build, Swift::String version, Swift::Bool isInternal)
{
  retstr->type = type;
  retstr->build = build;
  retstr->version = version;
  retstr->isInternal = isInternal;
}

uint64_t V1InfoHeader.OSMetadata.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  return sub_2365B0A04();
}

uint64_t sub_23653B9B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23653B9E0 + 4 * byte_2365C0D40[*v0]))(1701869940, 0xE400000000000000);
}

uint64_t sub_23653B9E0()
{
  return 0x646C697562;
}

uint64_t sub_23653B9F4()
{
  return 0x6E6F6973726576;
}

uint64_t sub_23653BA0C()
{
  return 0x6E7265746E497369;
}

uint64_t sub_23653BA28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2365482FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23653BA4C()
{
  sub_23653EDD8();
  return sub_2365B0AD0();
}

uint64_t sub_23653BA74()
{
  sub_23653EDD8();
  return sub_2365B0ADC();
}

uint64_t V1InfoHeader.OSMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB0F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v15[2] = *(_QWORD *)(v1 + 24);
  v15[3] = v8;
  v9 = *(_QWORD *)(v1 + 32);
  v15[0] = *(_QWORD *)(v1 + 40);
  v15[1] = v9;
  v16 = *(unsigned __int8 *)(v1 + 48);
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_23653EDD8();
  sub_2365B0AAC();
  v20 = 0;
  sub_2365B0800();
  if (!v2)
  {
    v19 = 1;
    sub_2365B0800();
    v18 = 2;
    sub_2365B0800();
    v17 = 3;
    sub_2365B080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t V1InfoHeader.OSMetadata.hashValue.getter()
{
  sub_2365B09E0();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  sub_2365B0A04();
  return sub_2365B0A34();
}

uint64_t V1InfoHeader.OSMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB100);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653EDD8();
  sub_2365B0A7C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v29 = 0;
  v9 = sub_2365B074C();
  v11 = v10;
  v24 = v9;
  v28 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2365B074C();
  v25 = v13;
  v23 = v12;
  v27 = 2;
  swift_bridgeObjectRetain();
  v21 = sub_2365B074C();
  v22 = v14;
  v26 = 3;
  swift_bridgeObjectRetain();
  v16 = sub_2365B0758();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v16 & 1;
  v18 = v25;
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v11;
  v19 = v22;
  *(_QWORD *)(a2 + 16) = v23;
  *(_QWORD *)(a2 + 24) = v18;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v19;
  *(_BYTE *)(a2 + 48) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23653BFA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return V1InfoHeader.OSMetadata.init(from:)(a1, a2);
}

uint64_t sub_23653BFB4(_QWORD *a1)
{
  return V1InfoHeader.OSMetadata.encode(to:)(a1);
}

uint64_t sub_23653BFD0()
{
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  return sub_2365B0A04();
}

uint64_t sub_23653C080()
{
  sub_2365B09E0();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  sub_2365B0A04();
  return sub_2365B0A34();
}

uint64_t V1InfoHeader.BundleMetadata.bundleIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.BundleMetadata.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*V1InfoHeader.BundleMetadata.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.BundleMetadata.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.BundleMetadata.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*V1InfoHeader.BundleMetadata.version.modify())()
{
  return nullsub_1;
}

AppleIDSetup::V1InfoHeader::BundleMetadata __swiftcall V1InfoHeader.BundleMetadata.init(bundleIdentifier:version:)(Swift::String bundleIdentifier, Swift::String version)
{
  Swift::String *v2;
  AppleIDSetup::V1InfoHeader::BundleMetadata result;

  *v2 = bundleIdentifier;
  v2[1] = version;
  result.version = version;
  result.bundleIdentifier = bundleIdentifier;
  return result;
}

void static V1InfoHeader.BundleMetadata.framework.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
}

uint64_t V1InfoHeader.BundleMetadata.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23653C2B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F6973726576;
  else
    return 0xD000000000000010;
}

uint64_t sub_23653C2F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2365484A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23653C318()
{
  sub_23653EE1C();
  return sub_2365B0AD0();
}

uint64_t sub_23653C340()
{
  sub_23653EE1C();
  return sub_2365B0ADC();
}

uint64_t V1InfoHeader.BundleMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB108);
  v10 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v9[1] = *(_QWORD *)(v1 + 24);
  v9[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653EE1C();
  sub_2365B0AAC();
  v12 = 0;
  sub_2365B0800();
  if (!v2)
  {
    v11 = 1;
    sub_2365B0800();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t V1InfoHeader.BundleMetadata.hashValue.getter()
{
  sub_2365B09E0();
  sub_2365B008C();
  sub_2365B008C();
  return sub_2365B0A34();
}

uint64_t V1InfoHeader.BundleMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v18;
  char v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB118);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23653EE1C();
  sub_2365B0A7C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = 0;
  v9 = sub_2365B074C();
  v11 = v10;
  v19 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_2365B074C();
  v14 = v13;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v16;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23653C6A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return V1InfoHeader.BundleMetadata.init(from:)(a1, a2);
}

uint64_t sub_23653C6B4(_QWORD *a1)
{
  return V1InfoHeader.BundleMetadata.encode(to:)(a1);
}

uint64_t sub_23653C6CC()
{
  sub_2365B09E0();
  sub_2365B008C();
  sub_2365B008C();
  return sub_2365B0A34();
}

uint64_t sub_23653C730()
{
  sub_2365B008C();
  return sub_2365B008C();
}

uint64_t sub_23653C76C()
{
  sub_2365B09E0();
  sub_2365B008C();
  sub_2365B008C();
  return sub_2365B0A34();
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV10OSMetadataV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_2365B08CC(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_2365B08CC(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v10)
        return v6 ^ v11 ^ 1u;
      v15 = sub_2365B08CC();
      result = 0;
      if ((v15 & 1) != 0)
        return v6 ^ v11 ^ 1u;
    }
  }
  return result;
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV14BundleMetadataV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a2[2];
  v5 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_2365B08CC(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
      return 1;
    else
      return sub_2365B08CC();
  }
  return result;
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV14DeviceMetadataV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;

  v3 = a1[1];
  v4 = a1[2];
  v6 = a1[3];
  v5 = a1[4];
  v7 = a1[5];
  v8 = a2[1];
  v9 = a2[2];
  v11 = a2[3];
  v10 = a2[4];
  v12 = a2[5];
  if (!v3)
  {
    if (v8)
      return 0;
    goto LABEL_8;
  }
  if (!v8)
    return 0;
  if (*a1 == *a2 && v3 == v8 || (v13 = sub_2365B08CC(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v11)
        return 0;
      if (v4 != v9 || v6 != v11)
      {
        v15 = sub_2365B08CC();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v7)
    {
      if (v12 && (v5 == v10 && v7 == v12 || (sub_2365B08CC() & 1) != 0))
        return 1;
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s12AppleIDSetup12V1InfoHeaderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _BOOL8 result;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD v43[3];
  _OWORD v44[4];

  v3 = *(_QWORD *)(a1 + 48);
  v2 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 72);
  v40 = *(_QWORD *)(a1 + 80);
  v41 = *(_QWORD *)(a1 + 64);
  v42 = *(_QWORD *)(a1 + 88);
  v39 = *(unsigned __int8 *)(a1 + 96);
  v38 = *(_QWORD *)(a1 + 112);
  v35 = *(_QWORD *)(a1 + 104);
  v36 = *(_QWORD *)(a1 + 128);
  v25 = *(_QWORD *)(a1 + 152);
  v27 = *(_QWORD *)(a1 + 136);
  v28 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  v11 = *(_BYTE *)(a2 + 96);
  v33 = *(_QWORD *)(a1 + 120);
  v34 = *(_QWORD *)(a2 + 104);
  v37 = *(_QWORD *)(a2 + 112);
  v32 = *(_QWORD *)(a2 + 120);
  v30 = *(_QWORD *)(a1 + 144);
  v31 = *(_QWORD *)(a2 + 128);
  v26 = *(_QWORD *)(a2 + 136);
  v29 = *(_QWORD *)(a2 + 144);
  v12 = *(_OWORD *)(a1 + 16);
  v44[0] = *(_OWORD *)a1;
  v44[1] = v12;
  v44[2] = *(_OWORD *)(a1 + 32);
  v13 = *(_OWORD *)(a2 + 16);
  v43[0] = *(_OWORD *)a2;
  v43[1] = v13;
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v43[2] = *(_OWORD *)(a2 + 32);
  if ((_s12AppleIDSetup12V1InfoHeaderV14DeviceMetadataV2eeoiySbAE_AEtFZ_0(v44, v43) & 1) == 0)
    return 0;
  if (!v2)
  {
    if (!v5)
      goto LABEL_20;
LABEL_17:
    sub_23653E920(v6, v5);
    sub_23653E95C(v3, v2);
    sub_23653E95C(v6, v5);
    return 0;
  }
  if (!v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  if (v3 == v6 && v2 == v5 || (v14 = sub_2365B08CC(), result = 0, (v14 & 1) != 0))
  {
    if (v41 == v8 && v4 == v7 || (v16 = sub_2365B08CC(), result = 0, (v16 & 1) != 0))
    {
      if (v40 == v10 && v42 == v9)
      {
        if (((((v11 & 1) == 0) ^ v39) & 1) == 0)
          return 0;
      }
      else
      {
        v17 = sub_2365B08CC();
        result = 0;
        if ((v17 & 1) == 0 || ((((v11 & 1) == 0) ^ v39) & 1) == 0)
          return result;
      }
LABEL_20:
      if (v38)
      {
        if (v37)
        {
          if (v35 != v34 || v38 != v37)
          {
            v18 = sub_2365B08CC();
            result = 0;
            if ((v18 & 1) == 0)
              return result;
          }
          if (v33 != v32 || v36 != v31)
          {
            v19 = sub_2365B08CC();
            result = 0;
            if ((v19 & 1) == 0)
              return result;
          }
          goto LABEL_30;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else if (!v37)
      {
LABEL_30:
        if (v30)
        {
          v20 = v29;
          if (v29)
            return (v27 == v26 && v30 == v29 || (sub_2365B08CC() & 1) != 0)
                && (v25 == v23 && v28 == v24 || (sub_2365B08CC() & 1) != 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v20 = v29;
          if (!v29)
            return 1;
        }
        sub_23653E998(v26, v20);
        sub_23653E9C8(v27, v30);
        v21 = v26;
        v22 = v20;
        goto LABEL_45;
      }
      sub_23653E998(v34, v37);
      sub_23653E9C8(v35, v38);
      v21 = v34;
      v22 = v37;
LABEL_45:
      sub_23653E9C8(v21, v22);
      return 0;
    }
  }
  return result;
}

void _s12AppleIDSetup9V1CommandO7RequestO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[17];
  uint64_t v18;

  v18 = a2;
  v3 = type metadata accessor for AuthenticateCommand.Request(0);
  MEMORY[0x24BDAC7A8](v3);
  v17[16] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SignInCommand.Request(0);
  MEMORY[0x24BDAC7A8](v5);
  v17[15] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for V1Command.Request(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB4D0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23648DFF8(a1, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for V1Command.Request);
  sub_23648DFF8(v18, (uint64_t)v15, type metadata accessor for V1Command.Request);
  v16 = (char *)sub_23653D050 + 4 * byte_2365C0D44[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_23653D050()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  BOOL v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  sub_23648DFF8(v3, v2, type metadata accessor for V1Command.Request);
  v5 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(v4 - 128) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(v4 - 112) = v5;
  *(_QWORD *)(v4 - 96) = *(_QWORD *)(v2 + 160);
  v6 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(v4 - 192) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(v4 - 176) = v6;
  v7 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(v4 - 160) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(v4 - 144) = v7;
  v8 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v4 - 256) = *(_OWORD *)v2;
  *(_OWORD *)(v4 - 240) = v8;
  v9 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v4 - 224) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v4 - 208) = v9;
  if (swift_getEnumCaseMultiPayload())
  {
    sub_2365258E4((uint64_t *)(v4 - 256));
    sub_236465998(v3, &qword_2563EB4D0);
    return 0;
  }
  else
  {
    v11 = v1[7];
    v13 = v1[8];
    v12 = v1[9];
    *(_OWORD *)(v0 + 624) = v13;
    *(_OWORD *)(v0 + 640) = v12;
    v14 = v1[3];
    v16 = v1[4];
    v15 = v1[5];
    *(_OWORD *)(v0 + 560) = v16;
    *(_OWORD *)(v0 + 576) = v15;
    v17 = v1[5];
    v19 = v1[6];
    v18 = v1[7];
    *(_OWORD *)(v0 + 592) = v19;
    *(_OWORD *)(v0 + 608) = v18;
    v20 = v1[1];
    *(_OWORD *)(v0 + 496) = *v1;
    *(_OWORD *)(v0 + 512) = v20;
    v21 = v1[3];
    v23 = *v1;
    v22 = v1[1];
    v24 = v1[2];
    *(_OWORD *)(v0 + 528) = v24;
    *(_OWORD *)(v0 + 544) = v21;
    v25 = *(_OWORD *)(v2 + 144);
    *(_OWORD *)(v0 + 448) = *(_OWORD *)(v2 + 128);
    *(_OWORD *)(v0 + 464) = v25;
    v26 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v0 + 384) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v0 + 400) = v26;
    v27 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v0 + 416) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v0 + 432) = v27;
    v28 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v0 + 320) = *(_OWORD *)v2;
    *(_OWORD *)(v0 + 336) = v28;
    v29 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v0 + 352) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v0 + 368) = v29;
    v30 = v1[9];
    *(_OWORD *)(v0 + 272) = v13;
    *(_OWORD *)(v0 + 288) = v30;
    *(_OWORD *)(v0 + 208) = v16;
    *(_OWORD *)(v0 + 224) = v17;
    *(_OWORD *)(v0 + 240) = v19;
    *(_OWORD *)(v0 + 256) = v11;
    *(_OWORD *)(v0 + 144) = v23;
    *(_OWORD *)(v0 + 160) = v22;
    *(_QWORD *)(v0 + 656) = *((_QWORD *)v1 + 20);
    *(_QWORD *)(v0 + 480) = *(_QWORD *)(v2 + 160);
    *(_QWORD *)(v0 + 304) = *((_QWORD *)v1 + 20);
    *(_OWORD *)(v0 + 176) = v24;
    *(_OWORD *)(v0 + 192) = v14;
    v10 = _s12AppleIDSetup16HandshakeCommandO7RequestV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)(v0 + 320), (unsigned __int8 *)(v0 + 144));
    sub_2365258E4((uint64_t *)(v0 + 496));
    sub_2365258E4((uint64_t *)(v4 - 256));
    sub_236465A18(v3, type metadata accessor for V1Command.Request);
  }
  return v10;
}

uint64_t type metadata accessor for V1Command.Request(uint64_t a1)
{
  return sub_2364905D8(a1, (uint64_t *)&unk_2542A8240);
}

uint64_t sub_23653D530(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  int v5;
  int v6;
  unint64_t v8;

  if ((a5 & 1) != 0)
    v5 = 4;
  else
    v5 = 0;
  v6 = (a4 >> 60) & 3 | v5;
  switch(v6)
  {
    case 3:
      v8 = a4 & 0xCFFFFFFFFFFFFFFFLL;
      swift_bridgeObjectRelease();
      return sub_236468D44(a3, v8);
    case 2:
      return swift_bridgeObjectRelease();
    case 0:
      return sub_236468D44(result, a2);
  }
  return result;
}

unint64_t sub_23653D598()
{
  unint64_t result;

  result = qword_2563EAE30;
  if (!qword_2563EAE30)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C336C, &type metadata for V1Command.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAE30);
  }
  return result;
}

unint64_t sub_23653D5DC()
{
  unint64_t result;

  result = qword_2563EAE38;
  if (!qword_2563EAE38)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C331C, &type metadata for V1Command.Request.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAE38);
  }
  return result;
}

unint64_t sub_23653D620()
{
  unint64_t result;

  result = qword_2563EAE40;
  if (!qword_2563EAE40)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C32CC, &type metadata for V1Command.Request.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAE40);
  }
  return result;
}

unint64_t sub_23653D664()
{
  unint64_t result;

  result = qword_2563EAE48;
  if (!qword_2563EAE48)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C327C, &type metadata for V1Command.Request.AnisetteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAE48);
  }
  return result;
}

unint64_t sub_23653D6A8()
{
  unint64_t result;

  result = qword_2563EAE50;
  if (!qword_2563EAE50)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for AnisetteCommand.Request, &type metadata for AnisetteCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EAE50);
  }
  return result;
}

unint64_t sub_23653D6EC()
{
  unint64_t result;

  result = qword_2563EAE58;
  if (!qword_2563EAE58)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C322C, &type metadata for V1Command.Request.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAE58);
  }
  return result;
}

unint64_t sub_23653D730()
{
  unint64_t result;

  result = qword_2563EAE60;
  if (!qword_2563EAE60)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C31DC, &type metadata for V1Command.Request.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAE60);
  }
  return result;
}

unint64_t sub_23653D774()
{
  unint64_t result;

  result = qword_2563EAE98;
  if (!qword_2563EAE98)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for AnisetteCommand.Request, &type metadata for AnisetteCommand.Request);
    atomic_store(result, (unint64_t *)&qword_2563EAE98);
  }
  return result;
}

uint64_t _s12AppleIDSetup9V1CommandO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  char v42;
  _QWORD v43[3];
  char v44;

  v4 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for V1Command(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v39 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v39 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB4C0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_23648DFF8(a1, (uint64_t)v21, type metadata accessor for V1Command);
  sub_23648DFF8(a2, v22, type metadata accessor for V1Command);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23648DFF8((uint64_t)v21, (uint64_t)v15, type metadata accessor for V1Command);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v24 = type metadata accessor for V1Command.Response;
        v25 = v40;
        sub_23646591C(v22, v40, type metadata accessor for V1Command.Response);
        _s12AppleIDSetup9V1CommandO8ResponseO2eeoiySbAE_AEtFZ_0((uint64_t)v15, v25);
        v27 = v26;
        sub_236465A18(v25, type metadata accessor for V1Command.Response);
        v28 = (uint64_t)v15;
LABEL_13:
        sub_236465A18(v28, v24);
        goto LABEL_14;
      }
      sub_236465A18((uint64_t)v15, type metadata accessor for V1Command.Response);
    }
    else
    {
      sub_23648DFF8((uint64_t)v21, (uint64_t)v12, type metadata accessor for V1Command);
      v30 = *(_QWORD *)v12;
      v29 = *((_QWORD *)v12 + 1);
      v31 = *((_QWORD *)v12 + 2);
      v32 = v12[24];
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v33 = *(_QWORD *)v22;
        v34 = *(_QWORD *)(v22 + 8);
        v35 = *(_QWORD *)(v22 + 16);
        v36 = *(_BYTE *)(v22 + 24);
        v43[0] = v30;
        v43[1] = v29;
        v43[2] = v31;
        v44 = v32;
        v41[0] = v33;
        v41[1] = v34;
        v41[2] = v35;
        v42 = v36;
        v27 = static V1CommandError.== infix(_:_:)((uint64_t)v43, (uint64_t)v41);
        sub_23653E4F8(v33, v34, v35, v36);
        sub_23653E4F8(v30, v29, v31, v32);
LABEL_14:
        sub_236465A18((uint64_t)v21, type metadata accessor for V1Command);
        return v27 & 1;
      }
      sub_23653E4F8(v30, v29, v31, v32);
    }
  }
  else
  {
    sub_23648DFF8((uint64_t)v21, (uint64_t)v17, type metadata accessor for V1Command);
    if (!swift_getEnumCaseMultiPayload())
    {
      v24 = type metadata accessor for V1Command.Request;
      sub_23646591C(v22, (uint64_t)v8, type metadata accessor for V1Command.Request);
      _s12AppleIDSetup9V1CommandO7RequestO2eeoiySbAE_AEtFZ_0((uint64_t)v17, (uint64_t)v8);
      v27 = v37;
      sub_236465A18((uint64_t)v8, type metadata accessor for V1Command.Request);
      v28 = (uint64_t)v17;
      goto LABEL_13;
    }
    sub_236465A18((uint64_t)v17, type metadata accessor for V1Command.Request);
  }
  sub_236465998((uint64_t)v21, &qword_2563EB4C0);
  v27 = 0;
  return v27 & 1;
}

void _s12AppleIDSetup9V1CommandO8ResponseO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  _BYTE v16[64];
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v20 = a1;
  v2 = type metadata accessor for AuthenticateCommand.Response(0);
  MEMORY[0x24BDAC7A8](v2);
  v19 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for AnisetteCommand.Response();
  MEMORY[0x24BDAC7A8](v4);
  v18 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = type metadata accessor for SignInCommand.Response(0);
  MEMORY[0x24BDAC7A8](v17);
  v6 = type metadata accessor for V1Command.Response(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB4C8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v16[*(int *)(v12 + 48) - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23648DFF8(v20, (uint64_t)&v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for V1Command.Response);
  sub_23648DFF8(v21, (uint64_t)v14, type metadata accessor for V1Command.Response);
  v15 = (char *)sub_23653DD38 + 4 * byte_2365C0D49[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

BOOL sub_23653DD38()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23648DFF8(v0, v2, type metadata accessor for V1Command.Response);
  v4 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 40);
  v7 = *(_QWORD *)(v2 + 48);
  v8 = *(_QWORD *)(v2 + 56);
  *(_QWORD *)(v3 - 328) = *(_QWORD *)(v2 + 64);
  *(_QWORD *)(v3 - 320) = *(_QWORD *)(v2 + 72);
  *(_QWORD *)(v3 - 312) = *(_QWORD *)(v2 + 80);
  *(_QWORD *)(v3 - 304) = *(_QWORD *)(v2 + 88);
  v9 = *(_BYTE *)(v2 + 96);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();
    sub_23648DCEC(v6, v5, v7, v8, *(_QWORD *)(v3 - 328), *(_QWORD *)(v3 - 320));
    sub_236465998(v0, &qword_2563EB4C8);
    return 0;
  }
  else
  {
    v11 = *(_BYTE *)(v2 + 25);
    v12 = *(_BYTE *)(v2 + 24);
    v13 = *(_QWORD *)(v2 + 8);
    v14 = *(_BYTE *)(v2 + 1);
    v15 = *(_BYTE *)v2;
    v16 = *v1;
    v17 = v1[1];
    v19 = *((_QWORD *)v1 + 1);
    v18 = *((_QWORD *)v1 + 2);
    v20 = v1[24];
    v21 = v1[25];
    v23 = *((_QWORD *)v1 + 4);
    v22 = *((_QWORD *)v1 + 5);
    *(_QWORD *)(v3 - 376) = v22;
    v24 = *((_QWORD *)v1 + 6);
    v25 = *((_QWORD *)v1 + 7);
    v27 = *((_QWORD *)v1 + 8);
    v26 = *((_QWORD *)v1 + 9);
    v28 = *((_QWORD *)v1 + 10);
    v29 = *((_QWORD *)v1 + 11);
    *(_QWORD *)(v3 - 384) = v28;
    *(_QWORD *)(v3 - 392) = v29;
    v30 = v1[96];
    *(_BYTE *)(v3 - 192) = v15;
    *(_BYTE *)(v3 - 191) = v14;
    *(_QWORD *)(v3 - 184) = v13;
    *(_QWORD *)(v3 - 176) = v4;
    *(_QWORD *)(v3 - 368) = v4;
    *(_BYTE *)(v3 - 168) = v12;
    *(_BYTE *)(v3 - 167) = v11;
    *(_QWORD *)(v3 - 344) = v6;
    *(_QWORD *)(v3 - 160) = v6;
    *(_QWORD *)(v3 - 152) = v5;
    *(_QWORD *)(v3 - 336) = v5;
    *(_QWORD *)(v3 - 352) = v7;
    *(_QWORD *)(v3 - 144) = v7;
    *(_QWORD *)(v3 - 136) = v8;
    *(_QWORD *)(v3 - 360) = v8;
    v31 = *(_QWORD *)(v3 - 320);
    *(_QWORD *)(v3 - 128) = *(_QWORD *)(v3 - 328);
    *(_QWORD *)(v3 - 120) = v31;
    v32 = *(_QWORD *)(v3 - 304);
    *(_QWORD *)(v3 - 112) = *(_QWORD *)(v3 - 312);
    *(_QWORD *)(v3 - 104) = v32;
    *(_BYTE *)(v3 - 96) = v9;
    *(_BYTE *)(v3 - 296) = v16;
    *(_BYTE *)(v3 - 295) = v17;
    *(_QWORD *)(v3 - 288) = v19;
    *(_QWORD *)(v3 - 280) = v18;
    *(_BYTE *)(v3 - 272) = v20;
    *(_BYTE *)(v3 - 271) = v21;
    *(_QWORD *)(v3 - 264) = v23;
    v33 = v23;
    *(_QWORD *)(v3 - 256) = v22;
    *(_QWORD *)(v3 - 248) = v24;
    v34 = v24;
    *(_QWORD *)(v3 - 240) = v25;
    *(_QWORD *)(v3 - 232) = v27;
    v35 = v25;
    *(_QWORD *)(v3 - 224) = v26;
    *(_QWORD *)(v3 - 216) = v28;
    *(_QWORD *)(v3 - 208) = v29;
    *(_BYTE *)(v3 - 200) = v30;
    v10 = _s12AppleIDSetup16HandshakeCommandO8ResponseV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)(v3 - 192), (unsigned __int8 *)(v3 - 296));
    swift_bridgeObjectRelease();
    sub_23648DCEC(v33, *(_QWORD *)(v3 - 376), v34, v35, v27, v26);
    swift_bridgeObjectRelease();
    sub_23648DCEC(*(_QWORD *)(v3 - 344), *(_QWORD *)(v3 - 336), *(_QWORD *)(v3 - 352), *(_QWORD *)(v3 - 360), *(_QWORD *)(v3 - 328), *(_QWORD *)(v3 - 320));
    sub_236465A18(v0, type metadata accessor for V1Command.Response);
  }
  return v10;
}

uint64_t type metadata accessor for V1Command.Response(uint64_t a1)
{
  return sub_2364905D8(a1, (uint64_t *)&unk_2542A8250);
}

unint64_t sub_23653E2D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2563E6670;
  if (!qword_2563E6670)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563E6658);
    v2[0] = sub_2364906D8();
    v2[1] = sub_23649071C();
    result = MEMORY[0x23B7F5164](MEMORY[0x24BDFC460], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2563E6670);
  }
  return result;
}

unint64_t sub_23653E340()
{
  unint64_t result;

  result = qword_2563EAED0;
  if (!qword_2563EAED0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C318C, &type metadata for V1Command.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAED0);
  }
  return result;
}

unint64_t sub_23653E384()
{
  unint64_t result;

  result = qword_2563EAED8;
  if (!qword_2563EAED8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C313C, &type metadata for V1Command.Response.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAED8);
  }
  return result;
}

unint64_t sub_23653E3C8()
{
  unint64_t result;

  result = qword_2563EAEE0;
  if (!qword_2563EAEE0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C30EC, &type metadata for V1Command.Response.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAEE0);
  }
  return result;
}

unint64_t sub_23653E40C()
{
  unint64_t result;

  result = qword_2563EAEE8;
  if (!qword_2563EAEE8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C309C, &type metadata for V1Command.Response.AnisetteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAEE8);
  }
  return result;
}

unint64_t sub_23653E450()
{
  unint64_t result;

  result = qword_2563EAEF8;
  if (!qword_2563EAEF8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C304C, &type metadata for V1Command.Response.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAEF8);
  }
  return result;
}

unint64_t sub_23653E494()
{
  unint64_t result;

  result = qword_2563EAF00;
  if (!qword_2563EAF00)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2FFC, &type metadata for V1Command.Response.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAF00);
  }
  return result;
}

uint64_t sub_23653E4D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 1)
    return swift_retain();
  if (!a4)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23653E4F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  if (a4 == 1)
    return swift_release();
  if (!a4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t type metadata accessor for V1Command(uint64_t a1)
{
  return sub_2364905D8(a1, (uint64_t *)&unk_2542A8280);
}

unint64_t sub_23653E52C()
{
  unint64_t result;

  result = qword_2563EAF60;
  if (!qword_2563EAF60)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2FAC, &type metadata for V1Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAF60);
  }
  return result;
}

unint64_t sub_23653E570()
{
  unint64_t result;

  result = qword_2563EAF68;
  if (!qword_2563EAF68)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2F5C, &type metadata for V1Command.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAF68);
  }
  return result;
}

unint64_t sub_23653E5B4()
{
  unint64_t result;

  result = qword_2563EAF70;
  if (!qword_2563EAF70)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2563EAF70);
  }
  return result;
}

unint64_t sub_23653E5F8()
{
  unint64_t result;

  result = qword_2563EAF78;
  if (!qword_2563EAF78)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2F0C, &type metadata for V1Command.ResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAF78);
  }
  return result;
}

unint64_t sub_23653E63C()
{
  unint64_t result;

  result = qword_2563EAF88;
  if (!qword_2563EAF88)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2EBC, &type metadata for V1Command.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EAF88);
  }
  return result;
}

unint64_t sub_23653E680()
{
  unint64_t result;

  result = qword_2563EAFB8;
  if (!qword_2563EAFB8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2563EAFB8);
  }
  return result;
}

unint64_t sub_23653E6C4()
{
  unint64_t result;

  result = qword_2563EB010;
  if (!qword_2563EB010)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2E6C, &type metadata for V1CommandError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB010);
  }
  return result;
}

unint64_t sub_23653E708()
{
  unint64_t result;

  result = qword_2563EB018;
  if (!qword_2563EB018)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2E1C, &type metadata for V1CommandError.UserCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB018);
  }
  return result;
}

unint64_t sub_23653E74C()
{
  unint64_t result;

  result = qword_2563EB020;
  if (!qword_2563EB020)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2DCC, &type metadata for V1CommandError.UnexpectedFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB020);
  }
  return result;
}

unint64_t sub_23653E790()
{
  unint64_t result;

  result = qword_2563EB028;
  if (!qword_2563EB028)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2D7C, &type metadata for V1CommandError.UnexpectedResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB028);
  }
  return result;
}

unint64_t sub_23653E7D4()
{
  unint64_t result;

  result = qword_2563EB030;
  if (!qword_2563EB030)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2D2C, &type metadata for V1CommandError.UnexpectedRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB030);
  }
  return result;
}

unint64_t sub_23653E818()
{
  unint64_t result;

  result = qword_2563EB038;
  if (!qword_2563EB038)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2CDC, &type metadata for V1CommandError.NestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB038);
  }
  return result;
}

unint64_t sub_23653E85C()
{
  unint64_t result;

  result = qword_2563EB040;
  if (!qword_2563EB040)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2C8C, &type metadata for V1CommandError.GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB040);
  }
  return result;
}

unint64_t sub_23653E8A0()
{
  unint64_t result;

  result = qword_2563EB048;
  if (!qword_2563EB048)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2C3C, &type metadata for V1CommandError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB048);
  }
  return result;
}

uint64_t sub_23653E8E4()
{
  uint64_t v0;

  sub_23653E4F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_23653E4F8(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  return swift_deallocObject();
}

uint64_t sub_23653E920(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23653E95C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23653E998(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23653E9C8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_23653E9F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[6];
  v3 = a1[7];
  v5 = a1[14];
  v6 = a1[13];
  v7 = a1[18];
  v8 = a1[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23653E920(v2, v3);
  sub_23653E998(v6, v5);
  sub_23653E998(v8, v7);
  return a1;
}

unint64_t sub_23653EAD8()
{
  unint64_t result;

  result = qword_2563EB098;
  if (!qword_2563EB098)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2BEC, &type metadata for V1InfoHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB098);
  }
  return result;
}

unint64_t sub_23653EB1C()
{
  unint64_t result;

  result = qword_2563EB0A0;
  if (!qword_2563EB0A0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.DeviceMetadata, &type metadata for V1InfoHeader.DeviceMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB0A0);
  }
  return result;
}

unint64_t sub_23653EB60()
{
  unint64_t result;

  result = qword_2563EB0A8;
  if (!qword_2563EB0A8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.OSMetadata, &type metadata for V1InfoHeader.OSMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB0A8);
  }
  return result;
}

unint64_t sub_23653EBA4()
{
  unint64_t result;

  result = qword_2563EB0B0;
  if (!qword_2563EB0B0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.BundleMetadata, &type metadata for V1InfoHeader.BundleMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB0B0);
  }
  return result;
}

unint64_t sub_23653EBE8()
{
  unint64_t result;

  result = qword_2563EB0C0;
  if (!qword_2563EB0C0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.DeviceMetadata, &type metadata for V1InfoHeader.DeviceMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB0C0);
  }
  return result;
}

unint64_t sub_23653EC2C()
{
  unint64_t result;

  result = qword_2563EB0C8;
  if (!qword_2563EB0C8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.OSMetadata, &type metadata for V1InfoHeader.OSMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB0C8);
  }
  return result;
}

unint64_t sub_23653EC70()
{
  unint64_t result;

  result = qword_2563EB0D0;
  if (!qword_2563EB0D0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.BundleMetadata, &type metadata for V1InfoHeader.BundleMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB0D0);
  }
  return result;
}

_QWORD *sub_23653ECB4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[6];
  v3 = a1[7];
  v5 = a1[14];
  v6 = a1[13];
  v7 = a1[18];
  v8 = a1[17];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23653E95C(v2, v3);
  sub_23653E9C8(v6, v5);
  sub_23653E9C8(v8, v7);
  return a1;
}

unint64_t sub_23653ED94()
{
  unint64_t result;

  result = qword_2563EB0E0;
  if (!qword_2563EB0E0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2B9C, &type metadata for V1InfoHeader.DeviceMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB0E0);
  }
  return result;
}

unint64_t sub_23653EDD8()
{
  unint64_t result;

  result = qword_2563EB0F8;
  if (!qword_2563EB0F8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2B4C, &type metadata for V1InfoHeader.OSMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB0F8);
  }
  return result;
}

unint64_t sub_23653EE1C()
{
  unint64_t result;

  result = qword_2563EB110;
  if (!qword_2563EB110)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2AFC, &type metadata for V1InfoHeader.BundleMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB110);
  }
  return result;
}

uint64_t sub_23653EE60()
{
  return sub_23644F0B8(&qword_2563EB120, type metadata accessor for V1Command, (uint64_t)&protocol conformance descriptor for V1Command);
}

uint64_t sub_23653EE8C(uint64_t a1)
{
  uint64_t result;

  result = sub_23644F0B8(&qword_2563EB148, type metadata accessor for V1Command.Request, (uint64_t)&protocol conformance descriptor for V1Command.Request);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23653EEC8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23644F0B8(&qword_2563EAFC8, type metadata accessor for V1Command.Request, (uint64_t)&protocol conformance descriptor for V1Command.Request);
  a1[2] = sub_23644F0B8(&qword_2563EAF90, type metadata accessor for V1Command.Request, (uint64_t)&protocol conformance descriptor for V1Command.Request);
  result = sub_23644F0B8(&qword_2563EB150, type metadata accessor for V1Command.Request, (uint64_t)&protocol conformance descriptor for V1Command.Request);
  a1[3] = result;
  return result;
}

uint64_t sub_23653EF40()
{
  return sub_23644F0B8(&qword_2563EB158, type metadata accessor for V1Command.Request, (uint64_t)&protocol conformance descriptor for V1Command.Request);
}

uint64_t sub_23653EF6C(uint64_t a1)
{
  uint64_t result;

  result = sub_23644F0B8(&qword_2563EB180, type metadata accessor for V1Command.Response, (uint64_t)&protocol conformance descriptor for V1Command.Response);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23653EFA8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23644F0B8(&qword_2563EAFC0, type metadata accessor for V1Command.Response, (uint64_t)&protocol conformance descriptor for V1Command.Response);
  a1[2] = sub_23644F0B8(&qword_2563EAF80, type metadata accessor for V1Command.Response, (uint64_t)&protocol conformance descriptor for V1Command.Response);
  result = sub_23644F0B8(&qword_2563EB188, type metadata accessor for V1Command.Response, (uint64_t)&protocol conformance descriptor for V1Command.Response);
  a1[3] = result;
  return result;
}

uint64_t sub_23653F020()
{
  return sub_23644F0B8(&qword_2563EB190, type metadata accessor for V1Command.Response, (uint64_t)&protocol conformance descriptor for V1Command.Response);
}

uint64_t sub_23653F04C()
{
  return sub_23644F0B8(&qword_2563EB198, type metadata accessor for V1Command.Request, (uint64_t)&protocol conformance descriptor for V1Command.Request);
}

uint64_t sub_23653F078()
{
  return sub_23644F0B8(&qword_2563EB1A0, type metadata accessor for V1Command.Response, (uint64_t)&protocol conformance descriptor for V1Command.Response);
}

uint64_t sub_23653F0A4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23644F0B8(&qword_2542A8278, type metadata accessor for V1Command, (uint64_t)&protocol conformance descriptor for V1Command);
  a1[2] = sub_23644F0B8(&qword_2542A8260, type metadata accessor for V1Command, (uint64_t)&protocol conformance descriptor for V1Command);
  result = sub_23644F0B8(&qword_2542A8268, type metadata accessor for V1Command, (uint64_t)&protocol conformance descriptor for V1Command);
  a1[3] = result;
  return result;
}

uint64_t sub_23653F11C()
{
  return sub_23644F0B8(&qword_2542A8270, type metadata accessor for V1Command, (uint64_t)&protocol conformance descriptor for V1Command);
}

uint64_t sub_23653F148(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23653E680, (uint64_t (*)(void))sub_23653E5B4, (uint64_t (*)(void))sub_23653F164);
}

unint64_t sub_23653F164()
{
  unint64_t result;

  result = qword_2563EB1D8;
  if (!qword_2563EB1D8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2563EB1D8);
  }
  return result;
}

unint64_t sub_23653F1AC()
{
  unint64_t result;

  result = qword_2563EB1E0;
  if (!qword_2563EB1E0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1CommandError, &type metadata for V1CommandError);
    atomic_store(result, (unint64_t *)&qword_2563EB1E0);
  }
  return result;
}

uint64_t sub_23653F1F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23653F20C, (uint64_t (*)(void))sub_23653F250, (uint64_t (*)(void))sub_23653F294);
}

unint64_t sub_23653F20C()
{
  unint64_t result;

  result = qword_2563EB1E8;
  if (!qword_2563EB1E8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader, &type metadata for V1InfoHeader);
    atomic_store(result, (unint64_t *)&qword_2563EB1E8);
  }
  return result;
}

unint64_t sub_23653F250()
{
  unint64_t result;

  result = qword_2563EB1F0;
  if (!qword_2563EB1F0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader, &type metadata for V1InfoHeader);
    atomic_store(result, (unint64_t *)&qword_2563EB1F0);
  }
  return result;
}

unint64_t sub_23653F294()
{
  unint64_t result;

  result = qword_2563EB1F8;
  if (!qword_2563EB1F8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader, &type metadata for V1InfoHeader);
    atomic_store(result, (unint64_t *)&qword_2563EB1F8);
  }
  return result;
}

unint64_t sub_23653F2DC()
{
  unint64_t result;

  result = qword_2563EB200;
  if (!qword_2563EB200)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader, &type metadata for V1InfoHeader);
    atomic_store(result, (unint64_t *)&qword_2563EB200);
  }
  return result;
}

uint64_t sub_23653F320(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23653EBE8, (uint64_t (*)(void))sub_23653EB1C, (uint64_t (*)(void))sub_23653F33C);
}

unint64_t sub_23653F33C()
{
  unint64_t result;

  result = qword_2563EB208;
  if (!qword_2563EB208)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.DeviceMetadata, &type metadata for V1InfoHeader.DeviceMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB208);
  }
  return result;
}

unint64_t sub_23653F384()
{
  unint64_t result;

  result = qword_2563EB210;
  if (!qword_2563EB210)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.DeviceMetadata, &type metadata for V1InfoHeader.DeviceMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB210);
  }
  return result;
}

uint64_t sub_23653F3C8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23653EC2C, (uint64_t (*)(void))sub_23653EB60, (uint64_t (*)(void))sub_23653F3E4);
}

unint64_t sub_23653F3E4()
{
  unint64_t result;

  result = qword_2563EB218;
  if (!qword_2563EB218)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.OSMetadata, &type metadata for V1InfoHeader.OSMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB218);
  }
  return result;
}

unint64_t sub_23653F42C()
{
  unint64_t result;

  result = qword_2563EB220;
  if (!qword_2563EB220)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.OSMetadata, &type metadata for V1InfoHeader.OSMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB220);
  }
  return result;
}

uint64_t sub_23653F470(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23653EC70, (uint64_t (*)(void))sub_23653EBA4, (uint64_t (*)(void))sub_23653F48C);
}

unint64_t sub_23653F48C()
{
  unint64_t result;

  result = qword_2563EB228;
  if (!qword_2563EB228)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.BundleMetadata, &type metadata for V1InfoHeader.BundleMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB228);
  }
  return result;
}

unint64_t sub_23653F4D4()
{
  unint64_t result;

  result = qword_2563EB230;
  if (!qword_2563EB230)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for V1InfoHeader.BundleMetadata, &type metadata for V1InfoHeader.BundleMetadata);
    atomic_store(result, (unint64_t *)&qword_2563EB230);
  }
  return result;
}

uint64_t dispatch thunk of V1CommandMessageProtocol.into()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of V1CommandMessageProtocol.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

unint64_t initializeBufferWithCopyOfBuffer for V1Command(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        type metadata accessor for V1Command.Response(0);
        v7 = (char *)&loc_23653F5B0 + 4 * byte_2365C0D4E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      type metadata accessor for V1Command.Request(0);
      v13 = (char *)&loc_23653F6B8 + 4 * word_2365C0D54[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v9 = *(_QWORD *)a2;
    v10 = *(_QWORD *)(a2 + 8);
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_BYTE *)(a2 + 24);
    sub_23653E4D8(v9, v10, v11, v12);
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = v11;
    *(_BYTE *)(a1 + 24) = v12;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23653FF70(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  int v5;
  int v6;
  unint64_t v8;

  if ((a5 & 1) != 0)
    v5 = 4;
  else
    v5 = 0;
  v6 = (a4 >> 60) & 3 | v5;
  switch(v6)
  {
    case 3:
      v8 = a4 & 0xCFFFFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain();
      return sub_236468CBC(a3, v8);
    case 2:
      return swift_bridgeObjectRetain();
    case 0:
      return sub_236468CBC(result, a2);
  }
  return result;
}

uint64_t destroy for V1Command(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      return sub_23653E4F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
    case 1:
      type metadata accessor for V1Command.Response(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          swift_bridgeObjectRelease();
          result = *(_QWORD *)(a1 + 40);
          if (result)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = *(_QWORD *)(a1 + 72);
            if (result)
            {
LABEL_27:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_28;
            }
          }
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v3 = type metadata accessor for IdMSAccount();
          v4 = a1 + *(int *)(v3 + 20);
          v5 = sub_2365AF8D0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
          v6 = a1 + *(int *)(v3 + 24);
          sub_23645FAF8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_BYTE *)(v6 + 72));
          swift_bridgeObjectRelease();
          type metadata accessor for SignInCommand.Response(0);
LABEL_28:
          result = swift_bridgeObjectRelease();
          break;
        case 2:
          type metadata accessor for AnisetteCommand.Response();
          result = swift_getEnumCaseMultiPayload();
          switch((int)result)
          {
            case 0:
            case 1:
            case 2:
              v7 = &qword_2563E7050;
              goto LABEL_32;
            case 3:
            case 4:
              v7 = &qword_2563EB238;
              goto LABEL_32;
            case 5:
              v7 = &qword_2563EB240;
              goto LABEL_32;
            default:
              return result;
          }
        case 3:
          v7 = &qword_2563E6658;
LABEL_32:
          v19 = __swift_instantiateConcreteTypeFromMangledName(v7);
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
          break;
        case 4:
          result = sub_23648B8D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
          break;
        default:
          return result;
      }
      break;
    case 0:
      type metadata accessor for V1Command.Request(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          if (*(_QWORD *)(a1 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(a1 + 48))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
          if (*(_QWORD *)(a1 + 88))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_28;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v8 = type metadata accessor for IdMSAccount();
          v9 = a1 + *(int *)(v8 + 20);
          v10 = sub_2365AF8D0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          v11 = a1 + *(int *)(v8 + 24);
          sub_23645FAF8(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_QWORD *)(v11 + 48), *(_QWORD *)(v11 + 56), *(_QWORD *)(v11 + 64), *(_BYTE *)(v11 + 72));
          swift_bridgeObjectRelease();
          v12 = a1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          v13 = *(_QWORD *)(v12 + 88);
          if (v13 >> 60 != 15)
            result = sub_236468D44(*(_QWORD *)(v12 + 80), v13);
          break;
        case 2:
          result = sub_23653D530(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
          break;
        case 3:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v14 = type metadata accessor for IdMSAccount();
          v15 = a1 + *(int *)(v14 + 20);
          v16 = sub_2365AF8D0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          v17 = a1 + *(int *)(v14 + 24);
          sub_23645FAF8(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_QWORD *)(v17 + 16), *(_QWORD *)(v17 + 24), *(_QWORD *)(v17 + 32), *(_QWORD *)(v17 + 40), *(_QWORD *)(v17 + 48), *(_QWORD *)(v17 + 56), *(_QWORD *)(v17 + 64), *(_BYTE *)(v17 + 72));
          swift_bridgeObjectRelease();
          v18 = a1 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
          result = *(_QWORD *)(v18 + 8);
          if (result)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = *(_QWORD *)(v18 + 40);
            if (result)
              goto LABEL_27;
          }
          break;
        case 4:
          result = sub_23648C070(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
          break;
        default:
          return result;
      }
      break;
  }
  return result;
}

uint64_t initializeWithCopy for V1Command(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for V1Command.Response(0);
      v5 = (char *)&loc_236540530 + 4 * byte_2365C0D6E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    type metadata accessor for V1Command.Request(0);
    v10 = (char *)&loc_236540618 + 4 * word_2365C0D74[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_23653E4D8(v6, v7, v8, v9);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for V1Command(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;

  if (a1 != a2)
  {
    sub_236465A18(a1, type metadata accessor for V1Command);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        type metadata accessor for V1Command.Response(0);
        v5 = (char *)&loc_236540F3C + 4 * byte_2365C0D7E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      type metadata accessor for V1Command.Request(0);
      v10 = (char *)&loc_23654104C + 4 * word_2365C0D84[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_BYTE *)(a2 + 24);
    sub_23653E4D8(v6, v7, v8, v9);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for V1Command(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  __int128 v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  int v29;
  __int128 v30;
  __int128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  uint64_t v62;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v28 = type metadata accessor for V1Command.Response(0);
    v29 = swift_getEnumCaseMultiPayload();
    switch(v29)
    {
      case 3:
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6658);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(a1, a2, v60);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        type metadata accessor for AnisetteCommand.Response();
        v61 = swift_getEnumCaseMultiPayload();
        v62 = __swift_instantiateConcreteTypeFromMangledName(off_2507DA800[v61]);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(a1, a2, v62);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v30 = a2[3];
        a1[2] = a2[2];
        a1[3] = v30;
        a1[4] = a2[4];
        v31 = a2[1];
        *a1 = *a2;
        a1[1] = v31;
        v32 = (int *)type metadata accessor for IdMSAccount();
        v33 = v32[5];
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_2365AF8D0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        v37 = v32[6];
        v38 = (_OWORD *)((char *)a1 + v37);
        v39 = (_OWORD *)((char *)a2 + v37);
        v40 = v39[3];
        v38[2] = v39[2];
        v38[3] = v40;
        *(_OWORD *)((char *)v38 + 57) = *(_OWORD *)((char *)v39 + 57);
        v41 = v39[1];
        *v38 = *v39;
        v38[1] = v41;
        *(_QWORD *)((char *)a1 + v32[7]) = *(_QWORD *)((char *)a2 + v32[7]);
        v42 = type metadata accessor for SignInCommand.Response(0);
        *(_QWORD *)((char *)a1 + *(int *)(v42 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v42 + 20));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        break;
    }
    goto LABEL_17;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for V1Command.Request(0);
    v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 3)
    {
      v43 = a2[3];
      a1[2] = a2[2];
      a1[3] = v43;
      a1[4] = a2[4];
      v44 = a2[1];
      *a1 = *a2;
      a1[1] = v44;
      v45 = (int *)type metadata accessor for IdMSAccount();
      v46 = v45[5];
      v47 = (char *)a1 + v46;
      v48 = (char *)a2 + v46;
      v49 = sub_2365AF8D0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
      v50 = v45[6];
      v51 = (_OWORD *)((char *)a1 + v50);
      v52 = (_OWORD *)((char *)a2 + v50);
      v53 = v52[3];
      v51[2] = v52[2];
      v51[3] = v53;
      *(_OWORD *)((char *)v51 + 57) = *(_OWORD *)((char *)v52 + 57);
      v54 = v52[1];
      *v51 = *v52;
      v51[1] = v54;
      *(_QWORD *)((char *)a1 + v45[7]) = *(_QWORD *)((char *)a2 + v45[7]);
      v55 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      v58 = *((_OWORD *)v57 + 3);
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      *((_OWORD *)v56 + 3) = v58;
      v56[64] = v57[64];
      v59 = *((_OWORD *)v57 + 1);
      *(_OWORD *)v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v59;
      swift_storeEnumTagMultiPayload();
    }
    else if (v8 == 1)
    {
      v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      a1[4] = a2[4];
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = (int *)type metadata accessor for IdMSAccount();
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2365AF8D0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      v16 = v11[6];
      v17 = (_OWORD *)((char *)a1 + v16);
      v18 = (_OWORD *)((char *)a2 + v16);
      v19 = v18[3];
      v17[2] = v18[2];
      v17[3] = v19;
      *(_OWORD *)((char *)v17 + 57) = *(_OWORD *)((char *)v18 + 57);
      v20 = v18[1];
      *v17 = *v18;
      v17[1] = v20;
      *(_QWORD *)((char *)a1 + v11[7]) = *(_QWORD *)((char *)a2 + v11[7]);
      v21 = (int *)type metadata accessor for SignInCommand.Request(0);
      v22 = v21[5];
      v23 = (_OWORD *)((char *)a1 + v22);
      v24 = (_OWORD *)((char *)a2 + v22);
      v25 = v24[3];
      v23[2] = v24[2];
      v23[3] = v25;
      v26 = v24[5];
      v23[4] = v24[4];
      v23[5] = v26;
      v27 = v24[1];
      *v23 = *v24;
      v23[1] = v27;
      *((_BYTE *)a1 + v21[6]) = *((_BYTE *)a2 + v21[6]);
      *((_BYTE *)a1 + v21[7]) = *((_BYTE *)a2 + v21[7]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
LABEL_17:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for V1Command(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int v8;
  __int128 v9;
  __int128 v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  int *v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  int v29;
  __int128 v30;
  __int128 v31;
  int *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  int *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  int v61;
  uint64_t v62;

  if (a1 != a2)
  {
    sub_236465A18((uint64_t)a1, type metadata accessor for V1Command);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v28 = type metadata accessor for V1Command.Response(0);
      v29 = swift_getEnumCaseMultiPayload();
      switch(v29)
      {
        case 3:
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6658);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(a1, a2, v60);
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          type metadata accessor for AnisetteCommand.Response();
          v61 = swift_getEnumCaseMultiPayload();
          v62 = __swift_instantiateConcreteTypeFromMangledName(off_2507DA800[v61]);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(a1, a2, v62);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          v30 = a2[3];
          a1[2] = a2[2];
          a1[3] = v30;
          a1[4] = a2[4];
          v31 = a2[1];
          *a1 = *a2;
          a1[1] = v31;
          v32 = (int *)type metadata accessor for IdMSAccount();
          v33 = v32[5];
          v34 = (char *)a1 + v33;
          v35 = (char *)a2 + v33;
          v36 = sub_2365AF8D0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
          v37 = v32[6];
          v38 = (_OWORD *)((char *)a1 + v37);
          v39 = (_OWORD *)((char *)a2 + v37);
          v40 = v39[3];
          v38[2] = v39[2];
          v38[3] = v40;
          *(_OWORD *)((char *)v38 + 57) = *(_OWORD *)((char *)v39 + 57);
          v41 = v39[1];
          *v38 = *v39;
          v38[1] = v41;
          *(_QWORD *)((char *)a1 + v32[7]) = *(_QWORD *)((char *)a2 + v32[7]);
          v42 = type metadata accessor for SignInCommand.Response(0);
          *(_QWORD *)((char *)a1 + *(int *)(v42 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v42 + 20));
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          break;
      }
      goto LABEL_18;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for V1Command.Request(0);
      v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 3)
      {
        v43 = a2[3];
        a1[2] = a2[2];
        a1[3] = v43;
        a1[4] = a2[4];
        v44 = a2[1];
        *a1 = *a2;
        a1[1] = v44;
        v45 = (int *)type metadata accessor for IdMSAccount();
        v46 = v45[5];
        v47 = (char *)a1 + v46;
        v48 = (char *)a2 + v46;
        v49 = sub_2365AF8D0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        v50 = v45[6];
        v51 = (_OWORD *)((char *)a1 + v50);
        v52 = (_OWORD *)((char *)a2 + v50);
        v53 = v52[3];
        v51[2] = v52[2];
        v51[3] = v53;
        *(_OWORD *)((char *)v51 + 57) = *(_OWORD *)((char *)v52 + 57);
        v54 = v52[1];
        *v51 = *v52;
        v51[1] = v54;
        *(_QWORD *)((char *)a1 + v45[7]) = *(_QWORD *)((char *)a2 + v45[7]);
        v55 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
        v56 = (char *)a1 + v55;
        v57 = (char *)a2 + v55;
        v58 = *((_OWORD *)v57 + 3);
        *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
        *((_OWORD *)v56 + 3) = v58;
        v56[64] = v57[64];
        v59 = *((_OWORD *)v57 + 1);
        *(_OWORD *)v56 = *(_OWORD *)v57;
        *((_OWORD *)v56 + 1) = v59;
        swift_storeEnumTagMultiPayload();
      }
      else if (v8 == 1)
      {
        v9 = a2[3];
        a1[2] = a2[2];
        a1[3] = v9;
        a1[4] = a2[4];
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        v11 = (int *)type metadata accessor for IdMSAccount();
        v12 = v11[5];
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_2365AF8D0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        v16 = v11[6];
        v17 = (_OWORD *)((char *)a1 + v16);
        v18 = (_OWORD *)((char *)a2 + v16);
        v19 = v18[3];
        v17[2] = v18[2];
        v17[3] = v19;
        *(_OWORD *)((char *)v17 + 57) = *(_OWORD *)((char *)v18 + 57);
        v20 = v18[1];
        *v17 = *v18;
        v17[1] = v20;
        *(_QWORD *)((char *)a1 + v11[7]) = *(_QWORD *)((char *)a2 + v11[7]);
        v21 = (int *)type metadata accessor for SignInCommand.Request(0);
        v22 = v21[5];
        v23 = (_OWORD *)((char *)a1 + v22);
        v24 = (_OWORD *)((char *)a2 + v22);
        v25 = v24[3];
        v23[2] = v24[2];
        v23[3] = v25;
        v26 = v24[5];
        v23[4] = v24[4];
        v23[5] = v26;
        v27 = v24[1];
        *v23 = *v24;
        v23[1] = v27;
        *((_BYTE *)a1 + v21[6]) = *((_BYTE *)a2 + v21[6]);
        *((_BYTE *)a1 + v21[7]) = *((_BYTE *)a2 + v21[7]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2365421F4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_236542204()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for V1Command.Request(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for V1Command.Response(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for V1Command.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2365422EC + 4 * word_2365C0D8E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

unint64_t destroy for V1Command.Request(uint64_t a1)
{
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      if (*(_QWORD *)(a1 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 48))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      if (*(_QWORD *)(a1 + 88))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_14;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for IdMSAccount();
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_2365AF8D0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      v6 = a1 + *(int *)(v3 + 24);
      sub_23645FAF8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_QWORD *)(v6 + 64), *(_BYTE *)(v6 + 72));
      swift_bridgeObjectRelease();
      v7 = a1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(v7 + 88);
      if (v8 >> 60 != 15)
        result = sub_236468D44(*(_QWORD *)(v7 + 80), v8);
      break;
    case 2:
      result = sub_23653D530(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
      break;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for IdMSAccount();
      v10 = a1 + *(int *)(v9 + 20);
      v11 = sub_2365AF8D0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      v12 = a1 + *(int *)(v9 + 24);
      sub_23645FAF8(*(_QWORD *)v12, *(_QWORD *)(v12 + 8), *(_QWORD *)(v12 + 16), *(_QWORD *)(v12 + 24), *(_QWORD *)(v12 + 32), *(_QWORD *)(v12 + 40), *(_QWORD *)(v12 + 48), *(_QWORD *)(v12 + 56), *(_QWORD *)(v12 + 64), *(_BYTE *)(v12 + 72));
      swift_bridgeObjectRelease();
      v13 = a1 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
      result = *(_QWORD *)(v13 + 8);
      if (result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = *(_QWORD *)(v13 + 40);
        if (result)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_14:
          result = swift_bridgeObjectRelease();
        }
      }
      break;
    case 4:
      result = sub_23648C070(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for V1Command.Request()
{
  char *v0;

  v0 = (char *)sub_236542C38 + 4 * byte_2365C0D9D[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_236542C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)v0 = *(_BYTE *)v1;
  *(_WORD *)(v0 + 1) = *(_WORD *)(v1 + 1);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
    *(_QWORD *)(v0 + 16) = v2;
    v3 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v0 + 32) = v3;
    v4 = *(_QWORD *)(v1 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v4)
    {
      *(_QWORD *)(v0 + 40) = *(_QWORD *)(v1 + 40);
      *(_QWORD *)(v0 + 48) = v4;
      v5 = *(_QWORD *)(v1 + 64);
      *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 56);
      *(_QWORD *)(v0 + 64) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = *(_OWORD *)(v1 + 56);
      *(_OWORD *)(v0 + 40) = *(_OWORD *)(v1 + 40);
      *(_OWORD *)(v0 + 56) = v11;
    }
    *(_BYTE *)(v0 + 72) = *(_BYTE *)(v1 + 72);
    v8 = *(_QWORD *)(v1 + 88);
    if (v8)
      goto LABEL_8;
  }
  else
  {
    v6 = *(_OWORD *)(v1 + 56);
    *(_OWORD *)(v0 + 40) = *(_OWORD *)(v1 + 40);
    *(_OWORD *)(v0 + 56) = v6;
    *(_BYTE *)(v0 + 72) = *(_BYTE *)(v1 + 72);
    v7 = *(_OWORD *)(v1 + 24);
    *(_OWORD *)(v0 + 8) = *(_OWORD *)(v1 + 8);
    *(_OWORD *)(v0 + 24) = v7;
    v8 = *(_QWORD *)(v1 + 88);
    if (v8)
    {
LABEL_8:
      *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 80);
      *(_QWORD *)(v0 + 88) = v8;
      v12 = *(_QWORD *)(v1 + 104);
      *(_QWORD *)(v0 + 96) = *(_QWORD *)(v1 + 96);
      *(_QWORD *)(v0 + 104) = v12;
      v13 = *(_QWORD *)(v1 + 120);
      *(_QWORD *)(v0 + 112) = *(_QWORD *)(v1 + 112);
      *(_QWORD *)(v0 + 120) = v13;
      v14 = *(_QWORD *)(v1 + 136);
      *(_QWORD *)(v0 + 128) = *(_QWORD *)(v1 + 128);
      *(_QWORD *)(v0 + 136) = v14;
      v15 = *(_QWORD *)(v1 + 152);
      *(_QWORD *)(v0 + 144) = *(_QWORD *)(v1 + 144);
      *(_QWORD *)(v0 + 152) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  v9 = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v0 + 112) = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v0 + 128) = v9;
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v1 + 144);
  v10 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v0 + 96) = v10;
LABEL_9:
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v1 + 160);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for V1Command.Request(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_236465A18(result, type metadata accessor for V1Command.Request);
    v2 = (char *)&loc_2365432A4 + 4 * word_2365C0DA2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for V1Command.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    v26 = a2[3];
    a1[2] = a2[2];
    a1[3] = v26;
    a1[4] = a2[4];
    v27 = a2[1];
    *a1 = *a2;
    a1[1] = v27;
    v28 = (int *)type metadata accessor for IdMSAccount();
    v29 = v28[5];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_2365AF8D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    v33 = v28[6];
    v34 = (_OWORD *)((char *)a1 + v33);
    v35 = (_OWORD *)((char *)a2 + v33);
    v36 = v35[3];
    v34[2] = v35[2];
    v34[3] = v36;
    *(_OWORD *)((char *)v34 + 57) = *(_OWORD *)((char *)v35 + 57);
    v37 = v35[1];
    *v34 = *v35;
    v34[1] = v37;
    *(_QWORD *)((char *)a1 + v28[7]) = *(_QWORD *)((char *)a2 + v28[7]);
    v38 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = *((_OWORD *)v40 + 3);
    *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
    *((_OWORD *)v39 + 3) = v41;
    v39[64] = v40[64];
    v42 = *((_OWORD *)v40 + 1);
    *(_OWORD *)v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v42;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = (int *)type metadata accessor for IdMSAccount();
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2365AF8D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    v14 = v9[6];
    v15 = (_OWORD *)((char *)a1 + v14);
    v16 = (_OWORD *)((char *)a2 + v14);
    v17 = v16[3];
    v15[2] = v16[2];
    v15[3] = v17;
    *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v16 + 57);
    v18 = v16[1];
    *v15 = *v16;
    v15[1] = v18;
    *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
    v19 = (int *)type metadata accessor for SignInCommand.Request(0);
    v20 = v19[5];
    v21 = (_OWORD *)((char *)a1 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    v23 = v22[3];
    v21[2] = v22[2];
    v21[3] = v23;
    v24 = v22[5];
    v21[4] = v22[4];
    v21[5] = v24;
    v25 = v22[1];
    *v21 = *v22;
    v21[1] = v25;
    *((_BYTE *)a1 + v19[6]) = *((_BYTE *)a2 + v19[6]);
    *((_BYTE *)a1 + v19[7]) = *((_BYTE *)a2 + v19[7]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for V1Command.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  _OWORD *v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;

  if (a1 != a2)
  {
    sub_236465A18((uint64_t)a1, type metadata accessor for V1Command.Request);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      v26 = a2[3];
      a1[2] = a2[2];
      a1[3] = v26;
      a1[4] = a2[4];
      v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      v28 = (int *)type metadata accessor for IdMSAccount();
      v29 = v28[5];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_2365AF8D0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      v33 = v28[6];
      v34 = (_OWORD *)((char *)a1 + v33);
      v35 = (_OWORD *)((char *)a2 + v33);
      v36 = v35[3];
      v34[2] = v35[2];
      v34[3] = v36;
      *(_OWORD *)((char *)v34 + 57) = *(_OWORD *)((char *)v35 + 57);
      v37 = v35[1];
      *v34 = *v35;
      v34[1] = v37;
      *(_QWORD *)((char *)a1 + v28[7]) = *(_QWORD *)((char *)a2 + v28[7]);
      v38 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
      v39 = (char *)a1 + v38;
      v40 = (char *)a2 + v38;
      v41 = *((_OWORD *)v40 + 3);
      *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
      *((_OWORD *)v39 + 3) = v41;
      v39[64] = v40[64];
      v42 = *((_OWORD *)v40 + 1);
      *(_OWORD *)v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v42;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      a1[4] = a2[4];
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = (int *)type metadata accessor for IdMSAccount();
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2365AF8D0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = v9[6];
      v15 = (_OWORD *)((char *)a1 + v14);
      v16 = (_OWORD *)((char *)a2 + v14);
      v17 = v16[3];
      v15[2] = v16[2];
      v15[3] = v17;
      *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v16 + 57);
      v18 = v16[1];
      *v15 = *v16;
      v15[1] = v18;
      *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
      v19 = (int *)type metadata accessor for SignInCommand.Request(0);
      v20 = v19[5];
      v21 = (_OWORD *)((char *)a1 + v20);
      v22 = (_OWORD *)((char *)a2 + v20);
      v23 = v22[3];
      v21[2] = v22[2];
      v21[3] = v23;
      v24 = v22[5];
      v21[4] = v22[4];
      v21[5] = v24;
      v25 = v22[1];
      *v21 = *v22;
      v21[1] = v25;
      *((_BYTE *)a1 + v19[6]) = *((_BYTE *)a2 + v19[6]);
      *((_BYTE *)a1 + v19[7]) = *((_BYTE *)a2 + v19[7]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for V1Command.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for V1Command.Request(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_236543DC0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for SignInCommand.Request(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for AuthenticateCommand.Request(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for V1Command.Response(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_236543EBC + 4 * byte_2365C0DAC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for V1Command.Response(uint64_t *a1)
{
  uint64_t result;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      result = a1[5];
      if (result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = a1[9];
        if (result)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for IdMSAccount();
      v4 = (char *)a1 + *(int *)(v3 + 20);
      v5 = sub_2365AF8D0();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      v6 = (char *)a1 + *(int *)(v3 + 24);
      sub_23645FAF8(*(_QWORD *)v6, *((_QWORD *)v6 + 1), *((_QWORD *)v6 + 2), *((_QWORD *)v6 + 3), *((_QWORD *)v6 + 4), *((_QWORD *)v6 + 5), *((_QWORD *)v6 + 6), *((_QWORD *)v6 + 7), *((_QWORD *)v6 + 8), v6[72]);
      swift_bridgeObjectRelease();
      type metadata accessor for SignInCommand.Response(0);
LABEL_6:
      result = swift_bridgeObjectRelease();
      break;
    case 2:
      type metadata accessor for AnisetteCommand.Response();
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
          v7 = &qword_2563E7050;
          goto LABEL_14;
        case 3:
        case 4:
          v7 = &qword_2563EB238;
          goto LABEL_14;
        case 5:
          v7 = &qword_2563EB240;
          goto LABEL_14;
        default:
          return result;
      }
    case 3:
      v7 = &qword_2563E6658;
LABEL_14:
      v8 = __swift_instantiateConcreteTypeFromMangledName(v7);
      result = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
      break;
    case 4:
      result = sub_23648B8D8(*a1, a1[1], a1[2], a1[3]);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for V1Command.Response()
{
  char *v0;

  v0 = (char *)sub_236544424 + 4 * byte_2365C0DBC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_236544424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  *(_WORD *)v0 = *(_WORD *)v1;
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 24) = *(_WORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain();
  if (v3)
  {
    *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v0 + 40) = v3;
    v4 = *(_QWORD *)(v1 + 56);
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v0 + 56) = v4;
    v5 = *(_QWORD *)(v1 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 64);
      *(_QWORD *)(v0 + 72) = v5;
      v6 = *(_QWORD *)(v1 + 88);
      *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 80);
      *(_QWORD *)(v0 + 88) = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = *(_OWORD *)(v1 + 80);
      *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 64);
      *(_OWORD *)(v0 + 80) = v9;
    }
    *(_BYTE *)(v0 + 96) = *(_BYTE *)(v1 + 96);
  }
  else
  {
    v7 = *(_OWORD *)(v1 + 80);
    *(_OWORD *)(v0 + 64) = *(_OWORD *)(v1 + 64);
    *(_OWORD *)(v0 + 80) = v7;
    *(_BYTE *)(v0 + 96) = *(_BYTE *)(v1 + 96);
    v8 = *(_OWORD *)(v1 + 48);
    *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v0 + 48) = v8;
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for V1Command.Response(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_236465A18(result, type metadata accessor for V1Command.Response);
    v2 = (char *)&loc_236544794 + 4 * byte_2365C0DC1[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *initializeWithTake for V1Command.Response(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6658);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      type metadata accessor for AnisetteCommand.Response();
      v21 = swift_getEnumCaseMultiPayload();
      v22 = __swift_instantiateConcreteTypeFromMangledName(off_2507DA800[v21]);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      a1[4] = a2[4];
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = (int *)type metadata accessor for IdMSAccount();
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2365AF8D0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      v14 = v9[6];
      v15 = (_OWORD *)((char *)a1 + v14);
      v16 = (_OWORD *)((char *)a2 + v14);
      v17 = v16[3];
      v15[2] = v16[2];
      v15[3] = v17;
      *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v16 + 57);
      v18 = v16[1];
      *v15 = *v16;
      v15[1] = v18;
      *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
      v19 = type metadata accessor for SignInCommand.Response(0);
      *(_QWORD *)((char *)a1 + *(int *)(v19 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 20));
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for V1Command.Response(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  if (a1 != a2)
  {
    sub_236465A18((uint64_t)a1, type metadata accessor for V1Command.Response);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6658);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        type metadata accessor for AnisetteCommand.Response();
        v21 = swift_getEnumCaseMultiPayload();
        v22 = __swift_instantiateConcreteTypeFromMangledName(off_2507DA800[v21]);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v7 = a2[3];
        a1[2] = a2[2];
        a1[3] = v7;
        a1[4] = a2[4];
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        v9 = (int *)type metadata accessor for IdMSAccount();
        v10 = v9[5];
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2365AF8D0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        v14 = v9[6];
        v15 = (_OWORD *)((char *)a1 + v14);
        v16 = (_OWORD *)((char *)a2 + v14);
        v17 = v16[3];
        v15[2] = v16[2];
        v15[3] = v17;
        *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v16 + 57);
        v18 = v16[1];
        *v15 = *v16;
        v15[1] = v18;
        *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
        v19 = type metadata accessor for SignInCommand.Response(0);
        *(_QWORD *)((char *)a1 + *(int *)(v19 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v19 + 20));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_236544E78()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for SignInCommand.Response(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for AnisetteCommand.Response();
    if (v1 <= 0x3F)
    {
      sub_236491D28();
      if (v2 <= 0x3F)
        swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t destroy for V1CommandError(uint64_t a1)
{
  return sub_23653E4F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23653E4D8(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23653E4D8(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_23653E4F8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_23653E4F8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for V1CommandError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for V1CommandError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_2365450E0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_2365450F8(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError()
{
  return &type metadata for V1CommandError;
}

uint64_t destroy for V1InfoHeader(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[18];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for V1InfoHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v7;
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = *(_QWORD *)(a2 + 112);
    if (v10)
      goto LABEL_3;
LABEL_6:
    v16 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v16;
    v12 = *(_QWORD *)(a2 + 144);
    if (v12)
      goto LABEL_4;
LABEL_7:
    v17 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v17;
    return a1;
  }
  v15 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 112);
  if (!v10)
    goto LABEL_6;
LABEL_3:
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = *(_QWORD *)(a2 + 144);
  if (!v12)
    goto LABEL_7;
LABEL_4:
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v12;
  v13 = *(_QWORD *)(a2 + 152);
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v13;
  *(_QWORD *)(a1 + 160) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for V1InfoHeader(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 48);
  v5 = (__int128 *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    }
    else
    {
      sub_2365455D4(a1 + 48);
      v8 = *(_OWORD *)(a2 + 64);
      v7 = *(_OWORD *)(a2 + 80);
      v9 = *v5;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_OWORD *)(a1 + 64) = v8;
      *(_OWORD *)(a1 + 80) = v7;
      *v4 = v9;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *v5;
    v11 = *(_OWORD *)(a2 + 64);
    v12 = *(_OWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v11;
    *(_OWORD *)(a1 + 80) = v12;
    *v4 = v10;
  }
  v13 = (_OWORD *)(a1 + 104);
  v14 = (_OWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v15)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236545600(a1 + 104);
      v16 = *(_OWORD *)(a2 + 120);
      *v13 = *v14;
      *(_OWORD *)(a1 + 120) = v16;
    }
  }
  else if (v15)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = *(_OWORD *)(a2 + 120);
    *v13 = *v14;
    *(_OWORD *)(a1 + 120) = v17;
  }
  v18 = (_OWORD *)(a1 + 136);
  v19 = (_OWORD *)(a2 + 136);
  v20 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)(a1 + 144))
  {
    if (v20)
    {
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_236545600(a1 + 136);
      v21 = *(_OWORD *)(a2 + 152);
      *v18 = *v19;
      *(_OWORD *)(a1 + 152) = v21;
    }
  }
  else if (v20)
  {
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v22 = *(_OWORD *)(a2 + 152);
    *v18 = *v19;
    *(_OWORD *)(a1 + 152) = v22;
  }
  return a1;
}

uint64_t sub_2365455D4(uint64_t a1)
{
  destroy for V1InfoHeader.DeviceMetadata(a1, &type metadata for V1InfoHeader.OSMetadata);
  return a1;
}

uint64_t sub_236545600(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for V1InfoHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
  {
    v7 = *(_QWORD *)(a2 + 56);
    if (v7)
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      goto LABEL_6;
    }
    sub_2365455D4(a1 + 48);
  }
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
LABEL_6:
  if (*(_QWORD *)(a1 + 112))
  {
    v11 = *(_QWORD *)(a2 + 112);
    if (v11)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_236545600(a1 + 104);
  }
  v13 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v13;
LABEL_11:
  if (!*(_QWORD *)(a1 + 144))
  {
LABEL_15:
    v16 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v16;
    return a1;
  }
  v14 = *(_QWORD *)(a2 + 144);
  if (!v14)
  {
    sub_236545600(a1 + 136);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for V1InfoHeader(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for V1InfoHeader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 168) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for V1InfoHeader()
{
  return &type metadata for V1InfoHeader;
}

uint64_t getEnumTagSinglePayload for V1InfoHeader.DeviceMetadata(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for V1InfoHeader.DeviceMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for V1InfoHeader.DeviceMetadata()
{
  return &type metadata for V1InfoHeader.DeviceMetadata;
}

uint64_t initializeWithCopy for V1InfoHeader.OSMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for V1InfoHeader.OSMetadata(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for V1InfoHeader.OSMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for V1InfoHeader.OSMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for V1InfoHeader.OSMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for V1InfoHeader.OSMetadata()
{
  return &type metadata for V1InfoHeader.OSMetadata;
}

_QWORD *initializeWithCopy for V1InfoHeader.BundleMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for V1InfoHeader.BundleMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for V1InfoHeader.BundleMetadata(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for V1InfoHeader.BundleMetadata()
{
  return &type metadata for V1InfoHeader.BundleMetadata;
}

ValueMetadata *type metadata accessor for V1InfoHeader.BundleMetadata.CodingKeys()
{
  return &type metadata for V1InfoHeader.BundleMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for V1InfoHeader.OSMetadata.CodingKeys()
{
  return &type metadata for V1InfoHeader.OSMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for V1InfoHeader.DeviceMetadata.CodingKeys()
{
  return &type metadata for V1InfoHeader.DeviceMetadata.CodingKeys;
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV10OSMetadataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_236545CBC + 4 * byte_2365C0DCB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_236545CF0 + 4 * byte_2365C0DC6[v4]))();
}

uint64_t sub_236545CF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236545CF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236545D00);
  return result;
}

uint64_t sub_236545D0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236545D14);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_236545D18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236545D20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for V1InfoHeader.CodingKeys()
{
  return &type metadata for V1InfoHeader.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for V1CommandError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_236545D88 + 4 * byte_2365C0DD5[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_236545DBC + 4 * byte_2365C0DD0[v4]))();
}

uint64_t sub_236545DBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236545DC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236545DCCLL);
  return result;
}

uint64_t sub_236545DD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236545DE0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_236545DE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236545DEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError.CodingKeys()
{
  return &type metadata for V1CommandError.CodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnknownCodingKeys()
{
  return &type metadata for V1CommandError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.GenericCodingKeys()
{
  return &type metadata for V1CommandError.GenericCodingKeys;
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV14BundleMetadataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_236545E74 + 4 * byte_2365C0DDF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_236545EA8 + 4 * byte_2365C0DDA[v4]))();
}

uint64_t sub_236545EA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236545EB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236545EB8);
  return result;
}

uint64_t sub_236545EC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236545ECCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_236545ED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236545ED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError.NestedCodingKeys()
{
  return &type metadata for V1CommandError.NestedCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedRequestCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedRequestCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedResponseCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedResponseCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedFailureCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedFailureCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UserCancelledCodingKeys()
{
  return &type metadata for V1CommandError.UserCancelledCodingKeys;
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV14DeviceMetadataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_236545F80 + 4 * byte_2365C0DE9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_236545FB4 + 4 * byte_2365C0DE4[v4]))();
}

uint64_t sub_236545FB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236545FBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236545FC4);
  return result;
}

uint64_t sub_236545FD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236545FD8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_236545FDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236545FE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for V1Command.CodingKeys()
{
  return &type metadata for V1Command.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.RequestCodingKeys()
{
  return &type metadata for V1Command.RequestCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.ResponseCodingKeys()
{
  return &type metadata for V1Command.ResponseCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.FailureCodingKeys()
{
  return &type metadata for V1Command.FailureCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.CodingKeys()
{
  return &type metadata for V1Command.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.HandshakeCodingKeys()
{
  return &type metadata for V1Command.Response.HandshakeCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.SignInCodingKeys()
{
  return &type metadata for V1Command.Response.SignInCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.AnisetteCodingKeys()
{
  return &type metadata for V1Command.Response.AnisetteCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.AuthenticateCodingKeys()
{
  return &type metadata for V1Command.Response.AuthenticateCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.RepairCodingKeys()
{
  return &type metadata for V1Command.Response.RepairCodingKeys;
}

uint64_t _s12AppleIDSetup9V1CommandO8ResponseO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2365460E4 + 4 * byte_2365C0DF3[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_236546118 + 4 * byte_2365C0DEE[v4]))();
}

uint64_t sub_236546118(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236546120(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236546128);
  return result;
}

uint64_t sub_236546134(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23654613CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_236546140(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236546148(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for V1Command.Request.CodingKeys()
{
  return &type metadata for V1Command.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.HandshakeCodingKeys()
{
  return &type metadata for V1Command.Request.HandshakeCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.SignInCodingKeys()
{
  return &type metadata for V1Command.Request.SignInCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.AnisetteCodingKeys()
{
  return &type metadata for V1Command.Request.AnisetteCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.AuthenticateCodingKeys()
{
  return &type metadata for V1Command.Request.AuthenticateCodingKeys;
}

uint64_t _s12AppleIDSetup9V1CommandO17RequestCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2365461E4 + 4 * byte_2365C0DF8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_236546204 + 4 * byte_2365C0DFD[v4]))();
}

_BYTE *sub_2365461E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_236546204(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23654620C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_236546214(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23654621C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_236546224(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for V1Command.Request.RepairCodingKeys()
{
  return &type metadata for V1Command.Request.RepairCodingKeys;
}

unint64_t sub_236546244()
{
  unint64_t result;

  result = qword_2563EB248;
  if (!qword_2563EB248)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1974, &type metadata for V1Command.Request.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB248);
  }
  return result;
}

unint64_t sub_23654628C()
{
  unint64_t result;

  result = qword_2563EB250;
  if (!qword_2563EB250)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1A2C, &type metadata for V1Command.Request.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB250);
  }
  return result;
}

unint64_t sub_2365462D4()
{
  unint64_t result;

  result = qword_2563EB258;
  if (!qword_2563EB258)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1AE4, &type metadata for V1Command.Request.AnisetteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB258);
  }
  return result;
}

unint64_t sub_23654631C()
{
  unint64_t result;

  result = qword_2563EB260;
  if (!qword_2563EB260)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1B9C, &type metadata for V1Command.Request.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB260);
  }
  return result;
}

unint64_t sub_236546364()
{
  unint64_t result;

  result = qword_2563EB268;
  if (!qword_2563EB268)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1C54, &type metadata for V1Command.Request.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB268);
  }
  return result;
}

unint64_t sub_2365463AC()
{
  unint64_t result;

  result = qword_2563EB270;
  if (!qword_2563EB270)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1D0C, &type metadata for V1Command.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB270);
  }
  return result;
}

unint64_t sub_2365463F4()
{
  unint64_t result;

  result = qword_2563EB278;
  if (!qword_2563EB278)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1DC4, &type metadata for V1Command.Response.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB278);
  }
  return result;
}

unint64_t sub_23654643C()
{
  unint64_t result;

  result = qword_2563EB280;
  if (!qword_2563EB280)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1E7C, &type metadata for V1Command.Response.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB280);
  }
  return result;
}

unint64_t sub_236546484()
{
  unint64_t result;

  result = qword_2563EB288;
  if (!qword_2563EB288)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1F34, &type metadata for V1Command.Response.AnisetteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB288);
  }
  return result;
}

unint64_t sub_2365464CC()
{
  unint64_t result;

  result = qword_2563EB290;
  if (!qword_2563EB290)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1FEC, &type metadata for V1Command.Response.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB290);
  }
  return result;
}

unint64_t sub_236546514()
{
  unint64_t result;

  result = qword_2563EB298;
  if (!qword_2563EB298)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C20A4, &type metadata for V1Command.Response.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB298);
  }
  return result;
}

unint64_t sub_23654655C()
{
  unint64_t result;

  result = qword_2563EB2A0;
  if (!qword_2563EB2A0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C215C, &type metadata for V1Command.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2A0);
  }
  return result;
}

unint64_t sub_2365465A4()
{
  unint64_t result;

  result = qword_2563EB2A8;
  if (!qword_2563EB2A8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2214, &type metadata for V1Command.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2A8);
  }
  return result;
}

unint64_t sub_2365465EC()
{
  unint64_t result;

  result = qword_2563EB2B0;
  if (!qword_2563EB2B0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C22CC, &type metadata for V1Command.ResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2B0);
  }
  return result;
}

unint64_t sub_236546634()
{
  unint64_t result;

  result = qword_2563EB2B8;
  if (!qword_2563EB2B8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2384, &type metadata for V1Command.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2B8);
  }
  return result;
}

unint64_t sub_23654667C()
{
  unint64_t result;

  result = qword_2563EB2C0;
  if (!qword_2563EB2C0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C243C, &type metadata for V1Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2C0);
  }
  return result;
}

unint64_t sub_2365466C4()
{
  unint64_t result;

  result = qword_2563EB2C8;
  if (!qword_2563EB2C8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2634, &type metadata for V1CommandError.NestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2C8);
  }
  return result;
}

unint64_t sub_23654670C()
{
  unint64_t result;

  result = qword_2563EB2D0;
  if (!qword_2563EB2D0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C26EC, &type metadata for V1CommandError.GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2D0);
  }
  return result;
}

unint64_t sub_236546754()
{
  unint64_t result;

  result = qword_2563EB2D8;
  if (!qword_2563EB2D8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C27F4, &type metadata for V1CommandError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2D8);
  }
  return result;
}

unint64_t sub_23654679C()
{
  unint64_t result;

  result = qword_2563EB2E0;
  if (!qword_2563EB2E0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C28AC, &type metadata for V1InfoHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2E0);
  }
  return result;
}

unint64_t sub_2365467E4()
{
  unint64_t result;

  result = qword_2563EB2E8;
  if (!qword_2563EB2E8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2964, &type metadata for V1InfoHeader.DeviceMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2E8);
  }
  return result;
}

unint64_t sub_23654682C()
{
  unint64_t result;

  result = qword_2563EB2F0;
  if (!qword_2563EB2F0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2A1C, &type metadata for V1InfoHeader.OSMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2F0);
  }
  return result;
}

unint64_t sub_236546874()
{
  unint64_t result;

  result = qword_2563EB2F8;
  if (!qword_2563EB2F8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2AD4, &type metadata for V1InfoHeader.BundleMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB2F8);
  }
  return result;
}

unint64_t sub_2365468BC()
{
  unint64_t result;

  result = qword_2563EB300;
  if (!qword_2563EB300)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2A44, &type metadata for V1InfoHeader.BundleMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB300);
  }
  return result;
}

unint64_t sub_236546904()
{
  unint64_t result;

  result = qword_2563EB308;
  if (!qword_2563EB308)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2A6C, &type metadata for V1InfoHeader.BundleMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB308);
  }
  return result;
}

unint64_t sub_23654694C()
{
  unint64_t result;

  result = qword_2563EB310;
  if (!qword_2563EB310)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C298C, &type metadata for V1InfoHeader.OSMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB310);
  }
  return result;
}

unint64_t sub_236546994()
{
  unint64_t result;

  result = qword_2563EB318;
  if (!qword_2563EB318)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C29B4, &type metadata for V1InfoHeader.OSMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB318);
  }
  return result;
}

unint64_t sub_2365469DC()
{
  unint64_t result;

  result = qword_2563EB320;
  if (!qword_2563EB320)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C28D4, &type metadata for V1InfoHeader.DeviceMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB320);
  }
  return result;
}

unint64_t sub_236546A24()
{
  unint64_t result;

  result = qword_2563EB328;
  if (!qword_2563EB328)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C28FC, &type metadata for V1InfoHeader.DeviceMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB328);
  }
  return result;
}

unint64_t sub_236546A6C()
{
  unint64_t result;

  result = qword_2563EB330;
  if (!qword_2563EB330)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C281C, &type metadata for V1InfoHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB330);
  }
  return result;
}

unint64_t sub_236546AB4()
{
  unint64_t result;

  result = qword_2563EB338;
  if (!qword_2563EB338)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2844, &type metadata for V1InfoHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB338);
  }
  return result;
}

unint64_t sub_236546AFC()
{
  unint64_t result;

  result = qword_2563EB340;
  if (!qword_2563EB340)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2714, &type metadata for V1CommandError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB340);
  }
  return result;
}

unint64_t sub_236546B44()
{
  unint64_t result;

  result = qword_2563EB348;
  if (!qword_2563EB348)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C273C, &type metadata for V1CommandError.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB348);
  }
  return result;
}

unint64_t sub_236546B8C()
{
  unint64_t result;

  result = qword_2563EB350;
  if (!qword_2563EB350)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C265C, &type metadata for V1CommandError.GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB350);
  }
  return result;
}

unint64_t sub_236546BD4()
{
  unint64_t result;

  result = qword_2563EB358;
  if (!qword_2563EB358)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2684, &type metadata for V1CommandError.GenericCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB358);
  }
  return result;
}

unint64_t sub_236546C1C()
{
  unint64_t result;

  result = qword_2563EB360;
  if (!qword_2563EB360)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C25A4, &type metadata for V1CommandError.NestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB360);
  }
  return result;
}

unint64_t sub_236546C64()
{
  unint64_t result;

  result = qword_2563EB368;
  if (!qword_2563EB368)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C25CC, &type metadata for V1CommandError.NestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB368);
  }
  return result;
}

unint64_t sub_236546CAC()
{
  unint64_t result;

  result = qword_2563EB370;
  if (!qword_2563EB370)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2554, &type metadata for V1CommandError.UnexpectedRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB370);
  }
  return result;
}

unint64_t sub_236546CF4()
{
  unint64_t result;

  result = qword_2563EB378;
  if (!qword_2563EB378)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C257C, &type metadata for V1CommandError.UnexpectedRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB378);
  }
  return result;
}

unint64_t sub_236546D3C()
{
  unint64_t result;

  result = qword_2563EB380;
  if (!qword_2563EB380)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2504, &type metadata for V1CommandError.UnexpectedResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB380);
  }
  return result;
}

unint64_t sub_236546D84()
{
  unint64_t result;

  result = qword_2563EB388;
  if (!qword_2563EB388)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C252C, &type metadata for V1CommandError.UnexpectedResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB388);
  }
  return result;
}

unint64_t sub_236546DCC()
{
  unint64_t result;

  result = qword_2563EB390;
  if (!qword_2563EB390)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C24B4, &type metadata for V1CommandError.UnexpectedFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB390);
  }
  return result;
}

unint64_t sub_236546E14()
{
  unint64_t result;

  result = qword_2563EB398;
  if (!qword_2563EB398)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C24DC, &type metadata for V1CommandError.UnexpectedFailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB398);
  }
  return result;
}

unint64_t sub_236546E5C()
{
  unint64_t result;

  result = qword_2563EB3A0;
  if (!qword_2563EB3A0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2464, &type metadata for V1CommandError.UserCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3A0);
  }
  return result;
}

unint64_t sub_236546EA4()
{
  unint64_t result;

  result = qword_2563EB3A8;
  if (!qword_2563EB3A8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C248C, &type metadata for V1CommandError.UserCancelledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3A8);
  }
  return result;
}

unint64_t sub_236546EEC()
{
  unint64_t result;

  result = qword_2563EB3B0;
  if (!qword_2563EB3B0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2764, &type metadata for V1CommandError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3B0);
  }
  return result;
}

unint64_t sub_236546F34()
{
  unint64_t result;

  result = qword_2563EB3B8;
  if (!qword_2563EB3B8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C278C, &type metadata for V1CommandError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3B8);
  }
  return result;
}

unint64_t sub_236546F7C()
{
  unint64_t result;

  result = qword_2563EB3C0;
  if (!qword_2563EB3C0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C22F4, &type metadata for V1Command.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3C0);
  }
  return result;
}

unint64_t sub_236546FC4()
{
  unint64_t result;

  result = qword_2563EB3C8;
  if (!qword_2563EB3C8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C231C, &type metadata for V1Command.RequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3C8);
  }
  return result;
}

unint64_t sub_23654700C()
{
  unint64_t result;

  result = qword_2563EB3D0;
  if (!qword_2563EB3D0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C223C, &type metadata for V1Command.ResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3D0);
  }
  return result;
}

unint64_t sub_236547054()
{
  unint64_t result;

  result = qword_2563EB3D8;
  if (!qword_2563EB3D8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2264, &type metadata for V1Command.ResponseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3D8);
  }
  return result;
}

unint64_t sub_23654709C()
{
  unint64_t result;

  result = qword_2563EB3E0;
  if (!qword_2563EB3E0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2184, &type metadata for V1Command.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3E0);
  }
  return result;
}

unint64_t sub_2365470E4()
{
  unint64_t result;

  result = qword_2563EB3E8;
  if (!qword_2563EB3E8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C21AC, &type metadata for V1Command.FailureCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3E8);
  }
  return result;
}

unint64_t sub_23654712C()
{
  unint64_t result;

  result = qword_2563EB3F0;
  if (!qword_2563EB3F0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C23AC, &type metadata for V1Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3F0);
  }
  return result;
}

unint64_t sub_236547174()
{
  unint64_t result;

  result = qword_2563EB3F8;
  if (!qword_2563EB3F8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C23D4, &type metadata for V1Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB3F8);
  }
  return result;
}

unint64_t sub_2365471BC()
{
  unint64_t result;

  result = qword_2563EB400;
  if (!qword_2563EB400)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C2014, &type metadata for V1Command.Response.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB400);
  }
  return result;
}

unint64_t sub_236547204()
{
  unint64_t result;

  result = qword_2563EB408;
  if (!qword_2563EB408)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C203C, &type metadata for V1Command.Response.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB408);
  }
  return result;
}

unint64_t sub_23654724C()
{
  unint64_t result;

  result = qword_2563EB410;
  if (!qword_2563EB410)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1F5C, &type metadata for V1Command.Response.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB410);
  }
  return result;
}

unint64_t sub_236547294()
{
  unint64_t result;

  result = qword_2563EB418;
  if (!qword_2563EB418)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1F84, &type metadata for V1Command.Response.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB418);
  }
  return result;
}

unint64_t sub_2365472DC()
{
  unint64_t result;

  result = qword_2563EB420;
  if (!qword_2563EB420)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1EA4, &type metadata for V1Command.Response.AnisetteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB420);
  }
  return result;
}

unint64_t sub_236547324()
{
  unint64_t result;

  result = qword_2563EB428;
  if (!qword_2563EB428)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1ECC, &type metadata for V1Command.Response.AnisetteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB428);
  }
  return result;
}

unint64_t sub_23654736C()
{
  unint64_t result;

  result = qword_2563EB430;
  if (!qword_2563EB430)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1DEC, &type metadata for V1Command.Response.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB430);
  }
  return result;
}

unint64_t sub_2365473B4()
{
  unint64_t result;

  result = qword_2563EB438;
  if (!qword_2563EB438)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1E14, &type metadata for V1Command.Response.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB438);
  }
  return result;
}

unint64_t sub_2365473FC()
{
  unint64_t result;

  result = qword_2563EB440;
  if (!qword_2563EB440)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1D34, &type metadata for V1Command.Response.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB440);
  }
  return result;
}

unint64_t sub_236547444()
{
  unint64_t result;

  result = qword_2563EB448;
  if (!qword_2563EB448)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1D5C, &type metadata for V1Command.Response.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB448);
  }
  return result;
}

unint64_t sub_23654748C()
{
  unint64_t result;

  result = qword_2563EB450;
  if (!qword_2563EB450)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C20CC, &type metadata for V1Command.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB450);
  }
  return result;
}

unint64_t sub_2365474D4()
{
  unint64_t result;

  result = qword_2563EB458;
  if (!qword_2563EB458)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C20F4, &type metadata for V1Command.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB458);
  }
  return result;
}

unint64_t sub_23654751C()
{
  unint64_t result;

  result = qword_2563EB460;
  if (!qword_2563EB460)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1BC4, &type metadata for V1Command.Request.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB460);
  }
  return result;
}

unint64_t sub_236547564()
{
  unint64_t result;

  result = qword_2563EB468;
  if (!qword_2563EB468)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1BEC, &type metadata for V1Command.Request.HandshakeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB468);
  }
  return result;
}

unint64_t sub_2365475AC()
{
  unint64_t result;

  result = qword_2563EB470;
  if (!qword_2563EB470)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1B0C, &type metadata for V1Command.Request.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB470);
  }
  return result;
}

unint64_t sub_2365475F4()
{
  unint64_t result;

  result = qword_2563EB478;
  if (!qword_2563EB478)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1B34, &type metadata for V1Command.Request.SignInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB478);
  }
  return result;
}

unint64_t sub_23654763C()
{
  unint64_t result;

  result = qword_2563EB480;
  if (!qword_2563EB480)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1A54, &type metadata for V1Command.Request.AnisetteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB480);
  }
  return result;
}

unint64_t sub_236547684()
{
  unint64_t result;

  result = qword_2563EB488;
  if (!qword_2563EB488)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1A7C, &type metadata for V1Command.Request.AnisetteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB488);
  }
  return result;
}

unint64_t sub_2365476CC()
{
  unint64_t result;

  result = qword_2563EB490;
  if (!qword_2563EB490)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C199C, &type metadata for V1Command.Request.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB490);
  }
  return result;
}

unint64_t sub_236547714()
{
  unint64_t result;

  result = qword_2563EB498;
  if (!qword_2563EB498)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C19C4, &type metadata for V1Command.Request.AuthenticateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB498);
  }
  return result;
}

unint64_t sub_23654775C()
{
  unint64_t result;

  result = qword_2563EB4A0;
  if (!qword_2563EB4A0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C18E4, &type metadata for V1Command.Request.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB4A0);
  }
  return result;
}

unint64_t sub_2365477A4()
{
  unint64_t result;

  result = qword_2563EB4A8;
  if (!qword_2563EB4A8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C190C, &type metadata for V1Command.Request.RepairCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB4A8);
  }
  return result;
}

unint64_t sub_2365477EC()
{
  unint64_t result;

  result = qword_2563EB4B0;
  if (!qword_2563EB4B0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1C7C, &type metadata for V1Command.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB4B0);
  }
  return result;
}

unint64_t sub_236547834()
{
  unint64_t result;

  result = qword_2563EB4B8;
  if (!qword_2563EB4B8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C1CA4, &type metadata for V1Command.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB4B8);
  }
  return result;
}

uint64_t sub_236547878(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6B616873646E6168 && a2 == 0xE900000000000065;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E496E676973 && a2 == 0xE600000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574746573696E61 && a2 == 0xE800000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69746E6568747561 && a2 == 0xEC00000065746163 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726961706572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_236547AA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_236547BFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636972656E6567 && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657473656ELL && a2 == 0xE600000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002365CD6A0 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002365CD6C0 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002365CD6E0 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x636E614372657375 && a2 == 0xED000064656C6C65)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_236547EE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_236547FB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x654D656369766564 && a2 == 0xEE00617461646174;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61646174654D736FLL && a2 == 0xEA00000000006174 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002365CD700 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654D746E65696C63 && a2 == 0xEE00617461646174)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2365481B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2365482FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C697562 && a2 == 0xE500000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E7265746E497369 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2365484A8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000002365CD720 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void *sub_2365485EC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_236548694(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_2365486E4(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_236548744())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_236548788()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = v0;
  return swift_task_switch();
}

uint64_t sub_2365487A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void **v3;
  void *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  id v17;
  _QWORD *v18;
  uint64_t (*v19)(void);

  v1 = *(_QWORD *)(v0 + 64);
  v2 = OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse;
  *(_QWORD *)(v0 + 72) = OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse;
  v3 = (void **)(v1 + v2);
  swift_beginAccess();
  v4 = *v3;
  if (*v3)
  {
    v5 = qword_2542A79D8;
    v6 = v4;
    if (v5 != -1)
      swift_once();
    v7 = sub_2365AFC00();
    __swift_project_value_buffer(v7, (uint64_t)qword_2542A79C0);
    v8 = sub_2365AFBE8();
    v9 = sub_2365B038C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23644B000, v8, v9, "AISConfigurationStore using cached cachedChildCutOffResponse", v10, 2u);
      MEMORY[0x23B7F5254](v10, -1, -1);
    }

    return (*(uint64_t (**)(id))(v0 + 8))(v6);
  }
  else
  {
    if (qword_2542A79D8 != -1)
      swift_once();
    v12 = sub_2365AFC00();
    *(_QWORD *)(v0 + 80) = __swift_project_value_buffer(v12, (uint64_t)qword_2542A79C0);
    v13 = sub_2365AFBE8();
    v14 = sub_2365B038C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_23644B000, v13, v14, "AISConfigurationStore requesting fetchMaxAgeForChildAccount", v15, 2u);
      MEMORY[0x23B7F5254](v15, -1, -1);
    }

    objc_msgSend(objc_allocWithZone(MEMORY[0x24BE30B38]), sel_init);
    v16 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
    v17 = objc_allocWithZone((Class)sub_2365AFA74());
    *(_QWORD *)(v0 + 88) = sub_2365AFA68();
    v19 = (uint64_t (*)(void))((int)*MEMORY[0x24BE30738] + MEMORY[0x24BE30738]);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v18;
    *v18 = v0;
    v18[1] = sub_236548A24;
    return v19();
  }
}

uint64_t sub_236548A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 104) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_236548A90()
{
  uint64_t v0;
  void *v1;
  id *v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  void *v17;

  v2 = (id *)(v0 + 104);
  v1 = *(void **)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = (objc_class *)type metadata accessor for AISChildAccountCutOffAgeResponse();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR___AISChildAccountCutOffAgeResponse_wrappedResponse] = v1;
  *(_QWORD *)(v0 + 40) = v6;
  *(_QWORD *)(v0 + 48) = v5;
  v7 = v1;
  v8 = objc_msgSendSuper2((objc_super *)(v0 + 40), sel_init);
  v9 = *(void **)(v4 + v3);
  *(_QWORD *)(v4 + v3) = v8;
  v10 = v8;

  v11 = v10;
  v12 = sub_2365AFBE8();
  v13 = sub_2365B038C();
  if (os_log_type_enabled(v12, v13))
  {
    v17 = *(void **)(v0 + 104);
    v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v14 = 134217984;
    *(_QWORD *)(v0 + 56) = sub_2365AFA80();
    sub_2365B04A0();

    _os_log_impl(&dword_23644B000, v12, v13, "AISConfigurationStore fetchMaxAgeForChildAccount completed maxAge:%ld", v14, 0xCu);
    MEMORY[0x23B7F5254](v14, -1, -1);

    v2 = (id *)(v0 + 88);
  }
  else
  {
    v15 = *(void **)(v0 + 88);

  }
  return (*(uint64_t (**)(id))(v0 + 8))(v11);
}

uint64_t sub_236548C24()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id AISChildAccountCutOffAgeResponse.__allocating_init(wrappedResponse:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___AISChildAccountCutOffAgeResponse_wrappedResponse] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for AISChildAccountCutOffAgeResponse()
{
  return objc_opt_self();
}

uint64_t sub_236548DE0(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_236548E58;
  v5[8] = v4;
  return swift_task_switch();
}

uint64_t sub_236548E58(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD, _QWORD);
  void *v8;

  v3 = v1;
  v5 = *(void **)(*v2 + 16);
  v6 = *v2;
  swift_task_dealloc();

  v7 = *(void (***)(_QWORD, _QWORD, _QWORD))(v6 + 24);
  if (v3)
  {
    v8 = (void *)sub_2365AF8E8();

    ((void (**)(_QWORD, _QWORD, void *))v7)[2](v7, 0, v8);
    _Block_release(v7);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v7)[2](v7, a1, 0);
    _Block_release(v7);

  }
  return (*(uint64_t (**)(void))(v6 + 8))();
}

id AISConfigurationStore.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AISConfigurationStore.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISConfigurationStore();
  return objc_msgSendSuper2(&v2, sel_init);
}

id AISConfigurationStore.__deallocating_deinit()
{
  return sub_236549160(type metadata accessor for AISConfigurationStore);
}

id AISChildAccountCutOffAgeResponse.init(wrappedResponse:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR___AISChildAccountCutOffAgeResponse_wrappedResponse] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for AISChildAccountCutOffAgeResponse();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_236549070()
{
  return sub_2365AFA8C();
}

uint64_t sub_2365490D4()
{
  return sub_2365AFA80();
}

void AISChildAccountCutOffAgeResponse.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AISChildAccountCutOffAgeResponse.__deallocating_deinit()
{
  return sub_236549160(type metadata accessor for AISChildAccountCutOffAgeResponse);
}

id sub_236549160(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for AISConfigurationStore()
{
  return objc_opt_self();
}

id sub_2365491C0@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for AISConfigurationStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AISConfigurationStore.cachedChildCutOffResponse.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of AISConfigurationStore.cachedChildCutOffResponse.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AISConfigurationStore.cachedChildCutOffResponse.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AISConfigurationStore.fetchMaxAgeForChildAccount()()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v2 = *(int **)((*MEMORY[0x24BEE4EA0] & *v0) + 0x70);
  v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_2364CBB44;
  return v5();
}

uint64_t method lookup function for AISChildAccountCutOffAgeResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AISChildAccountCutOffAgeResponse.__allocating_init(wrappedResponse:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AISChildAccountCutOffAgeResponse.childCutOffAgeLocalized.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AISChildAccountCutOffAgeResponse.childCutOffAge.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x68))();
}

uint64_t sub_236549328()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_236549354()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_236477420;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_2563EB548 + dword_2563EB548))(v2, v3);
}

void sub_2365493C4(char a1)
{
  char v1;

  if (a1 != 8)
  {
    v1 = a1;
    sub_23654A7AC((uint64_t)&v1);
  }
}

uint64_t sub_23654940C(unint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v8;

  if ((a2 & 1) != 0)
    return a2 & 1;
  if (a1 <= 1)
  {
    v5 = sub_2365B0038();
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *a3;
    *a3 = 0x8000000000000000;
    sub_236469E90(v5, 0x7079745F776F6C66, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
    *a3 = v8;
    swift_bridgeObjectRelease();
    return a2 & 1;
  }
  result = sub_2365B0920();
  __break(1u);
  return result;
}

uint64_t sub_236549508()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_236549538(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_236549574())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2365495B0@<X0>(uint64_t a1@<X8>)
{
  return sub_2365496C4(&OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate, a1);
}

uint64_t sub_2365495BC(uint64_t a1)
{
  return sub_23654971C(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate);
}

uint64_t (*sub_2365495C8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23654960C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6FA0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2364AB468(a1, (uint64_t)v10);
  v11 = *a2 + *a5;
  swift_beginAccess();
  sub_23650BFFC((uint64_t)v10, v11);
  return swift_endAccess();
}

uint64_t sub_2365496B8@<X0>(uint64_t a1@<X8>)
{
  return sub_2365496C4(&OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate, a1);
}

uint64_t sub_2365496C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a1;
  swift_beginAccess();
  return sub_2364AB468(v4, a2);
}

uint64_t sub_236549710(uint64_t a1)
{
  return sub_23654971C(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate);
}

uint64_t sub_23654971C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + *a2;
  swift_beginAccess();
  sub_23650BFFC(a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_236549770())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_2365497B4()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2365497F8(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_236549840())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_236549884@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_2365498D0(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*sub_236549920())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236549964()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2365499A8(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_2365499F0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236549A34()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_236549A78(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_236549AC0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236549B04()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_236549B48(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_236549B90())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236549BD4()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_236549C18(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_236549C60())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236549CA4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_236549CEC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  result = swift_beginAccess();
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_236549D48())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236549D8C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_236549DF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_236549E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_236549EA4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_236549EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  int v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  unsigned __int8 *v18;
  id v19;
  char v20;
  char *v21;
  unsigned __int8 *v22;
  int v23;
  id v24;
  uint64_t v25;
  char v26;
  unsigned __int8 *v27;
  int v28;
  id v29;
  uint64_t v30;
  char v31;
  unsigned __int8 *v32;
  int v33;
  id v34;
  uint64_t v35;
  char v36;
  unsigned __int8 *v37;
  int v38;
  id v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  double v61;
  double v62;
  uint64_t result;
  double v64;
  double v65;
  id v66;
  uint64_t v67;
  char v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76[5];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;

  v1 = v0;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6FA0);
  v2 = MEMORY[0x24BDAC7A8](v72);
  v71 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v70 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v70 - v7;
  v9 = sub_2365AF9A8();
  v73 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v70 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v70 - v12;
  v14 = sub_236466BCC(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  v15 = *(unsigned __int8 *)(v1 + 16);
  if (v15 != 2)
  {
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v15 & 1);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v82 = v14;
    sub_236469E90((uint64_t)v16, 0x6F6363615F77656ELL, 0xEB00000000746E75, isUniquelyReferenced_nonNull_native);
    v14 = v82;
    swift_bridgeObjectRelease();
  }
  v18 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  swift_beginAccess();
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, *v18);
  v20 = swift_isUniquelyReferenced_nonNull_native();
  v81 = v14;
  sub_236469E90((uint64_t)v19, 0x6574656C706D6F63, 0xEF70757465735F64, v20);
  v83 = v81;
  swift_bridgeObjectRelease();
  v21 = (char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
  swift_beginAccess();
  sub_2365493C4(*v21);
  v22 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
  swift_beginAccess();
  v23 = *v22;
  if (v23 != 2)
  {
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v23 & 1);
    v25 = v83;
    v26 = swift_isUniquelyReferenced_nonNull_native();
    v80 = v25;
    sub_236469E90((uint64_t)v24, 0x676173755F707061, 0xE900000000000065, v26);
    v83 = v80;
    swift_bridgeObjectRelease();
  }
  v27 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
  swift_beginAccess();
  v28 = *v27;
  if (v28 != 2)
  {
    v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v28 & 1);
    v30 = v83;
    v31 = swift_isUniquelyReferenced_nonNull_native();
    v79 = v30;
    sub_236469E90((uint64_t)v29, 0x625F6F745F6B7361, 0xEA00000000007975, v31);
    v83 = v79;
    swift_bridgeObjectRelease();
  }
  v32 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
  swift_beginAccess();
  v33 = *v32;
  if (v33 != 2)
  {
    v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v33 & 1);
    v35 = v83;
    v36 = swift_isUniquelyReferenced_nonNull_native();
    v78 = v35;
    sub_236469E90((uint64_t)v34, 0x6661735F6D6D6F63, 0xEB00000000797465, v36);
    v83 = v78;
    swift_bridgeObjectRelease();
  }
  v37 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
  swift_beginAccess();
  v38 = *v37;
  if (v38 != 2)
  {
    v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithBool_, v38 & 1);
    v40 = v83;
    v41 = swift_isUniquelyReferenced_nonNull_native();
    v77 = v40;
    sub_236469E90((uint64_t)v39, 0x645F6E6565726373, 0xEF65636E61747369, v41);
    v83 = v77;
    swift_bridgeObjectRelease();
  }
  v42 = v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  swift_beginAccess();
  sub_23654940C(*(_QWORD *)v42, *(_BYTE *)(v42 + 8), &v83);
  v43 = v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate;
  swift_beginAccess();
  sub_2364AB468(v43, (uint64_t)v8);
  v44 = v73;
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
  if (v45(v8, 1, v9) == 1)
  {
    v6 = v8;
LABEL_15:
    sub_23654AD6C((uint64_t)v6);
    if (qword_2542A79D8 != -1)
      swift_once();
    v49 = sub_2365AFC00();
    __swift_project_value_buffer(v49, (uint64_t)qword_2542A79C0);
    swift_retain_n();
    v50 = sub_2365AFBE8();
    v51 = sub_2365B0398();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = swift_slowAlloc();
      v53 = swift_slowAlloc();
      v76[0] = v53;
      *(_DWORD *)v52 = 136315394;
      v54 = v71;
      sub_2364AB468(v43, v71);
      v55 = sub_2365B0080();
      v75 = sub_236468D88(v55, v56, v76);
      sub_2365B04A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2080;
      v57 = v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate;
      swift_beginAccess();
      sub_2364AB468(v57, v54);
      v58 = sub_2365B0080();
      v74 = sub_236468D88(v58, v59, v76);
      sub_2365B04A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23644B000, v50, v51, "AISChildSetupAnalyticsEvent startDate (%s) and endDate (%s) should not be nil", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v53, -1, -1);
      MEMORY[0x23B7F5254](v52, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return v83;
  }
  v46 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
  v46(v13, v8, v9);
  v47 = v44;
  v48 = v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate;
  swift_beginAccess();
  sub_2364AB468(v48, (uint64_t)v6);
  if (v45(v6, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v9);
    goto LABEL_15;
  }
  v60 = v70;
  v46(v70, v6, v9);
  sub_2365AF984();
  v62 = v61;
  result = sub_2365AF984();
  v65 = v62 - v64;
  if ((~*(_QWORD *)&v65 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v65 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v65 < 9.22337204e18)
  {
    v66 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithInteger_, (uint64_t)v65);
    v67 = v83;
    v68 = swift_isUniquelyReferenced_nonNull_native();
    v75 = v67;
    sub_236469E90((uint64_t)v66, 0x6570735F656D6974, 0xEA0000000000746ELL, v68);
    v83 = v75;
    swift_bridgeObjectRelease();
    v69 = *(void (**)(char *, uint64_t))(v73 + 8);
    v69(v60, v9);
    v69(v13, v9);
    return v83;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_23654A7AC(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_23654A808()
{
  uint64_t *v0;
  uint64_t v1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;

  v1 = sub_2365B0038();
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4 = *v0;
  *v0 = 0x8000000000000000;
  sub_236469E90(v1, 0xD000000000000012, 0x80000002365CD9F0, isUniquelyReferenced_nonNull_native);
  *v0 = v4;
  return swift_bridgeObjectRelease();
}

uint64_t AISChildSetupScreen.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23654A98C + 4 * byte_2365C3458[*v0]))(0x6F4C746E65726170, 0xEB000000006E4967);
}

uint64_t sub_23654A98C()
{
  return 0x6950796C696D6166;
}

uint64_t sub_23654A9AC()
{
  return 0x65646F6373736170;
}

uint64_t sub_23654A9C4()
{
  return 0x676F4C646C696863;
}

uint64_t sub_23654A9E0()
{
  return 0x657243646C696863;
}

unint64_t sub_23654AA04()
{
  return 0xD000000000000013;
}

uint64_t sub_23654AA20()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_23654AA44()
{
  return 0x706552646C696863;
}

uint64_t AISChildSetupAnalyticsEvent.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  AISChildSetupAnalyticsEvent.init()();
  return v0;
}

uint64_t AISChildSetupAnalyticsEvent.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *v5;

  *(_BYTE *)(v0 + 16) = 2;
  v1 = v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate;
  v2 = sub_2365AF9A8();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate, 1, 1, v2);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup) = 0;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen) = 8;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage) = 2;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy) = 2;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety) = 2;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance) = 2;
  v4 = v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = (_QWORD *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  *v5 = 0xD000000000000030;
  v5[1] = 0x80000002365CD8F0;
  return v0;
}

uint64_t AISChildSetupAnalyticsEvent.deinit()
{
  uint64_t v0;

  sub_23654AD6C(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate);
  sub_23654AD6C(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AISChildSetupAnalyticsEvent.__deallocating_deinit()
{
  uint64_t v0;

  sub_23654AD6C(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate);
  sub_23654AD6C(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_23654AC44()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_23654AC9C()
{
  return sub_236549EE8();
}

AppleIDSetup::AISChildSetupScreen_optional __swiftcall AISChildSetupScreen.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  AppleIDSetup::AISChildSetupScreen_optional result;
  char v5;

  v2 = v1;
  v3 = sub_2365B06E0();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_23654AD14(char *a1)
{
  sub_23656F350(*a1);
}

void sub_23654AD20()
{
  char *v0;

  sub_236570124(0, *v0);
}

void sub_23654AD2C(uint64_t a1)
{
  char *v1;

  sub_23656FE00(a1, *v1);
}

void sub_23654AD34(uint64_t a1)
{
  char *v1;

  sub_236570124(a1, *v1);
}

AppleIDSetup::AISChildSetupScreen_optional sub_23654AD3C(Swift::String *a1)
{
  return AISChildSetupScreen.init(rawValue:)(*a1);
}

uint64_t sub_23654AD48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AISChildSetupScreen.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23654AD6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6FA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23654ADB0()
{
  unint64_t result;

  result = qword_2563EB558;
  if (!qword_2563EB558)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for AISChildSetupScreen, &type metadata for AISChildSetupScreen);
    atomic_store(result, (unint64_t *)&qword_2563EB558);
  }
  return result;
}

uint64_t sub_23654ADF4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_23654AE38(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_23654AE78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate, a2);
}

uint64_t sub_23654AE84(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23654960C(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate);
}

uint64_t sub_23654AEA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate, a2);
}

uint64_t keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_2364AB468(v4, a3);
}

uint64_t sub_23654AEFC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23654960C(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate);
}

uint64_t sub_23654AF18@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_23654AF68(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_23654AFB4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen, a2);
}

uint64_t sub_23654AFC0(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
}

uint64_t sub_23654AFCC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage, a2);
}

uint64_t sub_23654AFD8(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
}

uint64_t sub_23654AFE4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy, a2);
}

uint64_t sub_23654AFF0(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
}

uint64_t sub_23654AFFC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety, a2);
}

uint64_t sub_23654B008(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
}

uint64_t sub_23654B014@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance, a2);
}

uint64_t keypath_get_7Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_23654B06C(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
}

uint64_t keypath_set_8Tm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  uint64_t result;

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  result = swift_beginAccess();
  *v6 = v5;
  return result;
}

uint64_t sub_23654B0C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_23654B118(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  result = swift_beginAccess();
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  return result;
}

uint64_t sub_23654B174@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of AISAnalyticsEventProtocol.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AISAnalyticsEventProtocol.payload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AISAnalyticsEventProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_23654B1E4()
{
  return type metadata accessor for AISChildSetupAnalyticsEvent();
}

uint64_t type metadata accessor for AISChildSetupAnalyticsEvent()
{
  uint64_t result;

  result = qword_2563EB588;
  if (!qword_2563EB588)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23654B228()
{
  unint64_t v0;

  sub_23654B4A8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for AISChildSetupAnalyticsEvent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.isNewChildAccount.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.isNewChildAccount.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.isNewChildAccount.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.startDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.startDate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.startDate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.endDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.endDate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.endDate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.completedSetup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.completedSetup.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.completedSetup.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.lastViewedScreen.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.lastViewedScreen.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.lastViewedScreen.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.appUsage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.appUsage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.appUsage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.askToBuy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.askToBuy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.askToBuy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.commSafety.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.commSafety.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.commSafety.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.screenDistance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.screenDistance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.screenDistance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.flowType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.flowType.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 392))(a1, a2 & 1);
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.flowType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.name.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.name.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.payload.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 448))();
}

void sub_23654B4A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2563EB598[0])
  {
    sub_2365AF9A8();
    v0 = sub_2365B047C();
    if (!v1)
      atomic_store(v0, qword_2563EB598);
  }
}

uint64_t storeEnumTagSinglePayload for AISChildSetupScreen(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23654B548 + 4 * byte_2365C3465[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23654B57C + 4 * byte_2365C3460[v4]))();
}

uint64_t sub_23654B57C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23654B584(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23654B58CLL);
  return result;
}

uint64_t sub_23654B598(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23654B5A0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23654B5A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23654B5AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AISChildSetupScreen()
{
  return &type metadata for AISChildSetupScreen;
}

uint64_t sub_23654B5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2 && a1 != a2)
  {
    v3 = a1 + 32;
    v4 = a2 + 32;
    do
    {
      v5 = sub_2365B005C();
      v7 = v6;
      if (v5 == sub_2365B005C() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v10 = sub_2365B08CC();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
          return 0;
      }
      v3 += 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_23654B6A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_2365B08CC(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_2365B08CC() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23654B764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  __int128 *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  BOOL v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v10 = 1;
    }
    else
    {
      v3 = v2 - 1;
      v4 = (__int128 *)(a2 + 56);
      v5 = (__int128 *)(a1 + 56);
      do
      {
        v21 = *(v5 - 1);
        v6 = v5[1];
        v22 = *v5;
        v23 = v6;
        v24 = v5[2];
        v15 = *(v4 - 1);
        v7 = v4[1];
        v16 = *v4;
        v8 = *((_QWORD *)v5 - 3);
        v25 = *((_QWORD *)v5 + 6);
        v9 = *((_QWORD *)v4 + 6);
        v14 = *((_QWORD *)v4 - 3);
        v17 = v7;
        v18 = v4[2];
        v19 = v9;
        v20 = v8;
        v10 = _s12AppleIDSetup11SetupReportV2eeoiySbAC_ACtFZ_0(&v20, &v14);
        v12 = v3-- != 0;
        if ((v10 & 1) == 0)
          break;
        v4 += 5;
        v5 += 5;
      }
      while (v12);
    }
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

void static SetupReport.LocaleInfo.current.getter(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __CFString *v10;
  CFPropertyListRef v11;
  uint64_t v12;
  _QWORD v13[2];

  v2 = sub_2365AFA2C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2365AFA20();
  v6 = sub_2365AFA08();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = sub_2365AFA14();
  v10 = (__CFString *)sub_2365B0038();
  v11 = CFPreferencesCopyValue(v10, (CFStringRef)*MEMORY[0x24BDBD568], (CFStringRef)*MEMORY[0x24BDBD590], (CFStringRef)*MEMORY[0x24BDBD570]);

  if (v11
    && (v13[1] = v11, __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6BF8),
                      swift_dynamicCast()))
  {
    v12 = v13[0];
  }
  else
  {
    v12 = MEMORY[0x24BEE4AF8];
  }
  *a1 = v6;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v12;
}

uint64_t sub_23654B984(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void **v42;
  void *v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  char v47;
  char v48;
  char *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  int64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int64_t v58;
  _BOOL4 v59;
  uint64_t v60;
  unint64_t v61;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7050);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v57 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v52 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E7328);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v11);
  v16 = (void **)((char *)&v52 - v15);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v60 = v5;
  v55 = a1;
  v56 = v9;
  v58 = 0;
  v19 = *(_QWORD *)(a1 + 64);
  v18 = a1 + 64;
  v17 = v19;
  v20 = 1 << *(_BYTE *)(v18 - 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v17;
  v53 = v18;
  v54 = (unint64_t)(v20 + 63) >> 6;
  v52 = v54 - 1;
  v23 = &qword_2563E7330;
  while (1)
  {
    if (v22)
    {
      v24 = __clz(__rbit64(v22));
      v25 = (v22 - 1) & v22;
      v26 = v24 | (v58 << 6);
LABEL_8:
      v27 = *(void **)(*(_QWORD *)(v55 + 48) + 8 * v26);
      v28 = v60;
      v29 = *(_QWORD *)(v55 + 56) + *(_QWORD *)(v60 + 72) * v26;
      v30 = __swift_instantiateConcreteTypeFromMangledName(v23);
      (*(void (**)(char *, unint64_t, uint64_t))(v28 + 16))(&v13[*(int *)(v30 + 48)], v29, v4);
      *(_QWORD *)v13 = v27;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 0, 1, v30);
      v31 = v27;
      goto LABEL_27;
    }
    v32 = v58 + 1;
    if (__OFADD__(v58, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v32 < v54)
    {
      v33 = *(_QWORD *)(v53 + 8 * v32);
      if (v33)
        goto LABEL_12;
      v34 = v58 + 2;
      ++v58;
      if (v32 + 1 < v54)
      {
        v33 = *(_QWORD *)(v53 + 8 * v34);
        if (v33)
          goto LABEL_15;
        v58 = v32 + 1;
        if (v32 + 2 < v54)
        {
          v33 = *(_QWORD *)(v53 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_12;
          }
          v34 = v32 + 3;
          v58 = v32 + 2;
          if (v32 + 3 < v54)
            break;
        }
      }
    }
LABEL_26:
    v35 = __swift_instantiateConcreteTypeFromMangledName(v23);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v13, 1, 1, v35);
    v25 = 0;
LABEL_27:
    sub_2364B13EC((uint64_t)v13, (uint64_t)v16);
    v36 = __swift_instantiateConcreteTypeFromMangledName(v23);
    v37 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v16, 1, v36);
    v59 = v37 == 1;
    if (v37 == 1)
      return v59;
    v61 = v25;
    v38 = v23;
    v39 = v13;
    v40 = (char *)v16 + *(int *)(v36 + 48);
    v41 = a2;
    v42 = v16;
    v43 = *v16;
    v44 = v60;
    v45 = v56;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v56, v40, v4);
    v46 = sub_236468578((uint64_t)v43);
    v48 = v47;

    if ((v48 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v4);
      return 0;
    }
    v49 = v57;
    (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v57, *(_QWORD *)(v41 + 56) + *(_QWORD *)(v44 + 72) * v46, v4);
    sub_23654F468();
    v50 = sub_2365B0014();
    v51 = *(void (**)(char *, uint64_t))(v44 + 8);
    v51(v49, v4);
    result = ((uint64_t (*)(char *, uint64_t))v51)(v45, v4);
    a2 = v41;
    v13 = v39;
    v16 = v42;
    v23 = v38;
    v22 = v61;
    if ((v50 & 1) == 0)
      return v59;
  }
  v33 = *(_QWORD *)(v53 + 8 * v34);
  if (v33)
  {
LABEL_15:
    v32 = v34;
LABEL_12:
    v25 = (v33 - 1) & v33;
    v26 = __clz(__rbit64(v33)) + (v32 << 6);
    v58 = v32;
    goto LABEL_8;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v54)
    {
      v58 = v52;
      goto LABEL_26;
    }
    v33 = *(_QWORD *)(v53 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23654BDA0(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  char v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v22 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v23 = (unint64_t)(v4 + 63) >> 6;
  v24 = result;
  while (1)
  {
    if (v6)
    {
      v25 = (v6 - 1) & v6;
      v26 = v3;
      v7 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_23;
    }
    v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v8 >= v23)
      return 1;
    v9 = *(_QWORD *)(v22 + 8 * v8);
    v10 = v3 + 1;
    if (!v9)
    {
      v10 = v3 + 2;
      if (v3 + 2 >= v23)
        return 1;
      v9 = *(_QWORD *)(v22 + 8 * v10);
      if (!v9)
      {
        v10 = v3 + 3;
        if (v3 + 3 >= v23)
          return 1;
        v9 = *(_QWORD *)(v22 + 8 * v10);
        if (!v9)
          break;
      }
    }
LABEL_22:
    v25 = (v9 - 1) & v9;
    v26 = v10;
    v7 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_23:
    v12 = *(void **)(*(_QWORD *)(result + 48) + 8 * v7);
    v13 = (uint64_t *)(*(_QWORD *)(result + 56) + 80 * v7);
    v15 = *v13;
    v14 = v13[1];
    swift_bridgeObjectRetain();
    v16 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = sub_236468578((uint64_t)v16);
    LOBYTE(v12) = v18;

    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    v19 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 80 * v17);
    if (*v19 == v15 && v19[1] == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = v24;
      v6 = v25;
      v3 = v26;
    }
    else
    {
      v21 = sub_2365B08CC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = v24;
      v6 = v25;
      v3 = v26;
      if ((v21 & 1) == 0)
        return 0;
    }
  }
  v11 = v3 + 4;
  if (v3 + 4 >= v23)
    return 1;
  v9 = *(_QWORD *)(v22 + 8 * v11);
  if (v9)
  {
    v10 = v3 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v10 >= v23)
      return 1;
    v9 = *(_QWORD *)(v22 + 8 * v10);
    ++v11;
    if (v9)
      goto LABEL_22;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23654C060(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  char v20;
  char v21;
  _QWORD *v22;
  char v24;
  int64_t v25;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v25 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v25)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v25)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v25)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v25)
            return 1;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    v14 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v10);
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 56) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    v18 = v14;
    swift_bridgeObjectRetain();
    v19 = sub_236468578((uint64_t)v18);
    v21 = v20;

    if ((v21 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v22 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v19);
    if (*v22 == v17 && v22[1] == v16)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v24 = sub_2365B08CC();
      result = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v25)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v25)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_36:
  __break(1u);
  return result;
}

void __swiftcall SetupReport.into()(AISSetupReport *__return_ptr retstr)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1[2];
  v3 = v1[4];
  v4 = v1[6];
  v17 = v1[5];
  v18 = v1[9];
  v5 = objc_msgSend(objc_allocWithZone((Class)AISSetupReport), sel_init);
  type metadata accessor for AIDAServiceType(0);
  sub_2365257F0((unint64_t *)&qword_2542A82D0, (uint64_t)&unk_2365B23B4);
  v6 = (void *)sub_2365AFF48();
  objc_msgSend(v5, sel_setAccountAltDSIDsByService_, v6);

  if (v2)
    v7 = (void *)sub_2365B0038();
  else
    v7 = 0;
  objc_msgSend(v5, sel_setCreatedPersonaID_, v7);

  if (v3)
    v8 = (void *)sub_2365B0038();
  else
    v8 = 0;
  objc_msgSend(v5, sel_setAltDSID_, v8);

  if (v4)
  {
    v9 = objc_allocWithZone((Class)AISSetupReportLocaleInfo);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v9, sel_init);
    v11 = (void *)sub_2365B0038();
    objc_msgSend(v10, sel_setLocaleID_, v11);

    v12 = (void *)sub_2365B0164();
    objc_msgSend(v10, sel_setLanguages_, v12);

    v13 = (void *)sub_2365B0164();
    objc_msgSend(v10, sel_setKeyboards_, v13);

    sub_23648DD50(v17, v4);
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v5, sel_setPeerDeviceLocaleInfo_, v10);

  v14 = *(_QWORD *)(v18 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_2365B0608();
    v15 = v18 + 56;
    do
    {
      SetupReport.into()(*(AISSetupReport **)(v15 - 24));
      sub_2365B05F0();
      sub_2365B0614();
      sub_2365B0620();
      sub_2365B05FC();
      v15 += 80;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  sub_23654D6E4();
  v16 = (void *)sub_2365B0164();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setChildReports_, v16);

}

uint64_t SetupReport.accountAltDSIDsByService.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetupReport.newPersonaID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetupReport.altDSID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetupReport.peerDeviceLocaleInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[5];
  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_23648DC24(v2, v3);
}

uint64_t SetupReport.childReports.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetupReport.childReports.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*SetupReport.childReports.modify())()
{
  return nullsub_1;
}

__n128 SetupReport.init(accountAltDSIDsByService:newPersonaID:altDSID:peerDeviceLocaleInfo:childReports:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __n128 result;
  __int128 v9;

  result = *(__n128 *)a6;
  v9 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a8 + 40) = *(_OWORD *)a6;
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a4;
  *(_QWORD *)(a8 + 32) = a5;
  *(_OWORD *)(a8 + 56) = v9;
  *(_QWORD *)(a8 + 72) = a7;
  return result;
}

uint64_t SetupReport.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = v1[2];
  v5 = v1[4];
  v6 = v1[6];
  v7 = v1[9];
  swift_bridgeObjectRetain();
  sub_2364AED44(a1, v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
    if (v5)
      goto LABEL_3;
LABEL_6:
    sub_2365B0A04();
    if (v6)
      goto LABEL_4;
LABEL_7:
    sub_2365B0A04();
    goto LABEL_8;
  }
  sub_2365B0A04();
  if (!v5)
    goto LABEL_6;
LABEL_3:
  sub_2365B0A04();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  if (!v6)
    goto LABEL_7;
LABEL_4:
  sub_2365B0A04();
  SetupReport.LocaleInfo.hash(into:)();
LABEL_8:
  swift_bridgeObjectRetain();
  sub_23654DF6C(a1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23654C794(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23654C7D0 + 4 * byte_2365C3644[a1]))(0xD000000000000018, 0x80000002365CDA10);
}

uint64_t sub_23654C7D0()
{
  return 0x6F7372655077656ELL;
}

uint64_t sub_23654C7F0()
{
  return 0x44495344746C61;
}

unint64_t sub_23654C808()
{
  return 0xD000000000000014;
}

uint64_t sub_23654C824()
{
  return 0x706552646C696863;
}

uint64_t sub_23654C844()
{
  unsigned __int8 *v0;

  return sub_23654C794(*v0);
}

uint64_t sub_23654C84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23654F0B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23654C870()
{
  sub_23654E41C();
  return sub_2365B0AD0();
}

uint64_t sub_23654C898()
{
  sub_23654E41C();
  return sub_2365B0ADC();
}

uint64_t SetupReport.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB788);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v24 = v1[2];
  v25 = v8;
  v10 = v1[3];
  v22 = v1[4];
  v23 = v10;
  v11 = v1[5];
  v20 = v1[6];
  v21 = v11;
  v12 = v1[8];
  v18 = v1[7];
  v19 = v12;
  v17 = v1[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23654E41C();
  sub_2365B0AAC();
  v26 = v9;
  v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB798);
  sub_23654E460();
  sub_2365B0824();
  if (!v2)
  {
    v14 = v20;
    v13 = v21;
    LOBYTE(v26) = 1;
    sub_2365B07C4();
    LOBYTE(v26) = 2;
    sub_2365B07C4();
    v26 = v13;
    v27 = v14;
    v28 = v18;
    v29 = v19;
    v30 = 3;
    sub_2364A5BCC();
    sub_2365B07E8();
    v26 = v17;
    v30 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB7A8);
    sub_23654E59C(&qword_2563EB7B0, (uint64_t (*)(void))sub_23654E4DC, MEMORY[0x24BEE12A0]);
    sub_2365B0824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SetupReport.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v1 = v0[9];
  v4 = *v0;
  v5 = *(_OWORD *)(v0 + 1);
  v6 = *(_OWORD *)(v0 + 3);
  v7 = *(_OWORD *)(v0 + 5);
  v8 = *(_OWORD *)(v0 + 7);
  v9 = v1;
  sub_2365B09E0();
  SetupReport.hash(into:)((uint64_t)v3);
  return sub_2365B0A34();
}

uint64_t SetupReport.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB7C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23654E41C();
  sub_2365B0A7C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB798);
  v45 = 0;
  sub_23654E520();
  sub_2365B0770();
  v9 = v41;
  LOBYTE(v41) = 1;
  swift_bridgeObjectRetain();
  v10 = sub_2365B0710();
  v40 = v11;
  v36 = v10;
  v38 = v9;
  LOBYTE(v41) = 2;
  swift_bridgeObjectRetain();
  v33 = sub_2365B0710();
  v45 = 3;
  v13 = v12;
  sub_2364A5C10();
  swift_bridgeObjectRetain();
  sub_2365B0734();
  v37 = v13;
  v14 = v43;
  v34 = v42;
  v35 = v41;
  v15 = v44;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB7A8);
  v32 = v14;
  v45 = 4;
  v39 = v15;
  sub_23648DC24(v35, v34);
  sub_23654E59C(&qword_2563EB7D0, (uint64_t (*)(void))sub_23654E604, MEMORY[0x24BEE12D0]);
  sub_2365B0770();
  v16 = v38;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v34;
  v19 = v35;
  v20 = v39;
  sub_23648DC24(v35, v34);
  swift_bridgeObjectRetain();
  v21 = v19;
  v22 = v20;
  sub_23648DD50(v21, v18);
  swift_bridgeObjectRelease();
  v23 = v40;
  swift_bridgeObjectRelease();
  v24 = v37;
  swift_bridgeObjectRelease();
  v25 = v36;
  *a2 = v16;
  a2[1] = v25;
  v26 = v33;
  v27 = v34;
  a2[2] = v23;
  a2[3] = v26;
  v28 = v35;
  a2[4] = v24;
  a2[5] = v28;
  v29 = v32;
  a2[6] = v27;
  a2[7] = v29;
  a2[8] = v22;
  a2[9] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23648DD50(v28, v27);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23654D020@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SetupReport.init(from:)(a1, a2);
}

uint64_t sub_23654D034(_QWORD *a1)
{
  return SetupReport.encode(to:)(a1);
}

uint64_t sub_23654D04C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v1 = v0[9];
  v4 = *v0;
  v5 = *(_OWORD *)(v0 + 1);
  v6 = *(_OWORD *)(v0 + 3);
  v7 = *(_OWORD *)(v0 + 5);
  v8 = *(_OWORD *)(v0 + 7);
  v9 = v1;
  sub_2365B09E0();
  SetupReport.hash(into:)((uint64_t)v3);
  return sub_2365B0A34();
}

uint64_t sub_23654D0C0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v1 = v0[9];
  v4 = *v0;
  v5 = *(_OWORD *)(v0 + 1);
  v6 = *(_OWORD *)(v0 + 3);
  v7 = *(_OWORD *)(v0 + 5);
  v8 = *(_OWORD *)(v0 + 7);
  v9 = v1;
  sub_2365B09E0();
  SetupReport.hash(into:)((uint64_t)v3);
  return sub_2365B0A34();
}

AISSetupReportLocaleInfo __swiftcall SetupReport.LocaleInfo.into()()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  NSString *v4;
  NSArray *v5;
  NSArray *v6;
  objc_class *v7;
  AISSetupReportLocaleInfo result;

  v0 = objc_msgSend(objc_allocWithZone((Class)AISSetupReportLocaleInfo), sel_init);
  v1 = (void *)sub_2365B0038();
  objc_msgSend(v0, sel_setLocaleID_, v1);

  v2 = (void *)sub_2365B0164();
  objc_msgSend(v0, sel_setLanguages_, v2);

  v3 = (void *)sub_2365B0164();
  objc_msgSend(v0, sel_setKeyboards_, v3);

  v7 = (objc_class *)v0;
  result._keyboards = v6;
  result._languages = v5;
  result._localeID = v4;
  result.super.isa = v7;
  return result;
}

uint64_t AISSetupReport.into()@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v3 = objc_msgSend(v1, sel_accountAltDSIDsByService);
  type metadata accessor for AIDAServiceType(0);
  sub_2365257F0((unint64_t *)&qword_2542A82D0, (uint64_t)&unk_2365B23B4);
  v4 = sub_2365AFF60();

  v5 = objc_msgSend(v1, sel_createdPersonaID);
  if (v5)
  {
    v6 = v5;
    v7 = sub_2365B005C();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = objc_msgSend(v1, sel_altDSID);
  if (v10)
  {
    v11 = v10;
    v12 = sub_2365B005C();
    v47 = v13;
    v48 = v12;

  }
  else
  {
    v47 = 0;
    v48 = 0;
  }
  v14 = objc_msgSend(v1, sel_peerDeviceLocaleInfo);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend(v14, sel_localeID);
    v17 = sub_2365B005C();
    v45 = v18;
    v46 = v17;

    v19 = objc_msgSend(v15, sel_languages);
    v44 = sub_2365B0170();

    v20 = objc_msgSend(v15, sel_keyboards);
    v43 = sub_2365B0170();

  }
  else
  {
    v45 = 0;
    v46 = 0;
    v43 = 0;
    v44 = 0;
  }
  v21 = objc_msgSend(v1, sel_childReports);
  sub_23654D6E4();
  v22 = sub_2365B0170();

  if (!(v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    v49 = v9;
    if (v23)
      goto LABEL_12;
LABEL_22:
    result = swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
LABEL_23:
    *a1 = v4;
    a1[1] = v7;
    a1[2] = v49;
    a1[3] = v48;
    a1[4] = v47;
    a1[5] = v46;
    a1[6] = v45;
    a1[7] = v44;
    a1[8] = v43;
    a1[9] = v26;
    return result;
  }
  swift_bridgeObjectRetain();
  v23 = sub_2365B0698();
  swift_bridgeObjectRelease();
  v49 = v9;
  if (!v23)
    goto LABEL_22;
LABEL_12:
  v56 = MEMORY[0x24BEE4AF8];
  result = sub_2364A42C0(0, v23 & ~(v23 >> 63), 0);
  if ((v23 & 0x8000000000000000) == 0)
  {
    v42 = a1;
    v25 = 0;
    v26 = v56;
    do
    {
      if ((v22 & 0xC000000000000001) != 0)
        v27 = (id)MEMORY[0x23B7F45A0](v25, v22);
      else
        v27 = *(id *)(v22 + 8 * v25 + 32);
      v28 = v27;
      AISSetupReport.into()(&v50);

      v29 = v50;
      v30 = v51;
      v31 = v52;
      v32 = v53;
      v33 = v54;
      v34 = v55;
      v56 = v26;
      v36 = *(_QWORD *)(v26 + 16);
      v35 = *(_QWORD *)(v26 + 24);
      if (v36 >= v35 >> 1)
      {
        v40 = v52;
        v41 = v51;
        v38 = v54;
        v39 = v53;
        sub_2364A42C0(v35 > 1, v36 + 1, 1);
        v33 = v38;
        v32 = v39;
        v31 = v40;
        v30 = v41;
        v26 = v56;
      }
      *(_QWORD *)(v26 + 16) = v36 + 1;
      v37 = v26 + 80 * v36;
      *(_QWORD *)(v37 + 32) = v29;
      ++v25;
      *(_OWORD *)(v37 + 40) = v30;
      *(_OWORD *)(v37 + 56) = v31;
      *(_OWORD *)(v37 + 72) = v32;
      *(_OWORD *)(v37 + 88) = v33;
      *(_QWORD *)(v37 + 104) = v34;
    }
    while (v23 != v25);
    result = swift_bridgeObjectRelease();
    a1 = v42;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

AppleIDSetup::SetupReport::LocaleInfo __swiftcall AISSetupReportLocaleInfo.into()()
{
  uint64_t *v0;
  void *v1;
  uint64_t *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  AppleIDSetup::SetupReport::LocaleInfo result;

  v2 = v0;
  v3 = objc_msgSend(v1, sel_localeID);
  v4 = sub_2365B005C();
  v6 = v5;

  v7 = objc_msgSend(v1, sel_languages);
  v8 = sub_2365B0170();

  v9 = objc_msgSend(v1, sel_keyboards);
  v10 = sub_2365B0170();

  *v2 = v4;
  v2[1] = v6;
  v2[2] = v8;
  v2[3] = v10;
  result.keyboards._rawValue = v14;
  result.languages._rawValue = v13;
  result.localeID._object = v12;
  result.localeID._countAndFlagsBits = v11;
  return result;
}

uint64_t SetupReport.LocaleInfo.localeID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetupReport.LocaleInfo.languages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetupReport.LocaleInfo.keyboards.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetupReport.LocaleInfo.preferredLanguage.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  if (!*(_QWORD *)(v1 + 16))
    return 0;
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

AppleIDSetup::SetupReport::LocaleInfo __swiftcall SetupReport.LocaleInfo.init(localeID:languages:keyboards:)(Swift::String localeID, Swift::OpaquePointer languages, Swift::OpaquePointer keyboards)
{
  uint64_t v3;
  AppleIDSetup::SetupReport::LocaleInfo result;

  *(Swift::String *)v3 = localeID;
  *(Swift::OpaquePointer *)(v3 + 16) = languages;
  *(Swift::OpaquePointer *)(v3 + 24) = keyboards;
  result.localeID = localeID;
  result.keyboards = keyboards;
  result.languages = languages;
  return result;
}

unint64_t sub_23654D6E4()
{
  unint64_t result;

  result = qword_2563EB780;
  if (!qword_2563EB780)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563EB780);
  }
  return result;
}

uint64_t static SetupReport.LocaleInfo.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;

  v2 = (_QWORD *)a1[2];
  v3 = (_QWORD *)a1[3];
  v5 = (_QWORD *)a2[2];
  v4 = (_QWORD *)a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if ((v6 || (sub_2365B08CC() & 1) != 0) && (sub_23654B6A0(v2, v5) & 1) != 0)
    return sub_23654B6A0(v3, v4);
  else
    return 0;
}

uint64_t SetupReport.LocaleInfo.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  sub_2365B09F8();
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2365B008C();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  result = sub_2365B09F8();
  v6 = *(_QWORD *)(v1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2365B008C();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23654D8C0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65676175676E616CLL;
  if (*v0 != 1)
    v1 = 0x6472616F6279656BLL;
  if (*v0)
    return v1;
  else
    return 0x4449656C61636F6CLL;
}

uint64_t sub_23654D924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23654F2FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23654D948()
{
  sub_23654E648();
  return sub_2365B0AD0();
}

uint64_t sub_23654D970()
{
  sub_23654E648();
  return sub_2365B0ADC();
}

uint64_t SetupReport.LocaleInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB7E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23654E648();
  sub_2365B0AAC();
  LOBYTE(v15) = 0;
  v8 = v13;
  sub_2365B0800();
  if (!v8)
  {
    v9 = v11;
    v15 = v12;
    v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6BF8);
    sub_23654E68C(&qword_2563EB7F0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE12A0]);
    sub_2365B0824();
    v15 = v9;
    v14 = 2;
    sub_2365B0824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SetupReport.LocaleInfo.hashValue.getter()
{
  sub_2365B09E0();
  SetupReport.LocaleInfo.hash(into:)();
  return sub_2365B0A34();
}

uint64_t SetupReport.LocaleInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB7F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23654E648();
  sub_2365B0A7C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v20) = 0;
  v9 = sub_2365B074C();
  v11 = v10;
  v17 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6BF8);
  v19 = 1;
  v12 = sub_23654E68C(&qword_2563EB800, MEMORY[0x24BEE0D38], MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  v18 = v12;
  sub_2365B0770();
  v19 = 2;
  v16 = v20;
  swift_bridgeObjectRetain();
  sub_2365B0770();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v16;
  *a2 = v17;
  a2[1] = v11;
  a2[2] = v14;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23654DE14@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SetupReport.LocaleInfo.init(from:)(a1, a2);
}

uint64_t sub_23654DE28(_QWORD *a1)
{
  return SetupReport.LocaleInfo.encode(to:)(a1);
}

uint64_t sub_23654DE3C(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v6;

  v2 = (_QWORD *)a1[2];
  v3 = (_QWORD *)a1[3];
  v5 = (_QWORD *)a2[2];
  v4 = (_QWORD *)a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if ((v6 || (sub_2365B08CC() & 1) != 0) && (sub_23654B6A0(v2, v5) & 1) != 0)
    return sub_23654B6A0(v3, v4);
  else
    return 0;
}

uint64_t sub_23654DEBC()
{
  sub_2365B09E0();
  SetupReport.LocaleInfo.hash(into:)();
  return sub_2365B0A34();
}

uint64_t sub_23654DF18()
{
  sub_2365B09E0();
  SetupReport.LocaleInfo.hash(into:)();
  return sub_2365B0A34();
}

uint64_t sub_23654DF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a2 + 16);
  result = sub_2365B09F8();
  v23 = v4;
  if (v4)
  {
    v6 = 0;
    v22 = a2 + 32;
    do
    {
      v7 = (uint64_t *)(v22 + 80 * v6);
      v8 = *v7;
      v10 = v7[4];
      v9 = v7[5];
      v11 = v7[6];
      v12 = v7[7];
      v13 = v7[8];
      v14 = v7[9];
      v15 = v7[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v25 = v13;
      sub_23648DC24(v9, v11);
      swift_bridgeObjectRetain();
      sub_2364AED44(a1, v8);
      swift_bridgeObjectRelease();
      if (v15)
      {
        sub_2365B0A04();
        swift_bridgeObjectRetain();
        sub_2365B008C();
        swift_bridgeObjectRelease();
        v16 = v13;
        if (v10)
          goto LABEL_7;
      }
      else
      {
        sub_2365B0A04();
        v16 = v13;
        if (v10)
        {
LABEL_7:
          sub_2365B0A04();
          swift_bridgeObjectRetain();
          sub_2365B008C();
          swift_bridgeObjectRelease();
          v17 = v12;
          if (v11)
            goto LABEL_11;
          goto LABEL_3;
        }
      }
      sub_2365B0A04();
      v17 = v12;
      if (v11)
      {
LABEL_11:
        sub_2365B0A04();
        swift_bridgeObjectRetain();
        sub_2365B008C();
        swift_bridgeObjectRelease();
        sub_2365B09F8();
        v18 = *(_QWORD *)(v17 + 16);
        v24 = v9;
        if (v18)
        {
          swift_bridgeObjectRetain();
          v19 = v17 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_2365B008C();
            swift_bridgeObjectRelease();
            v19 += 16;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
          v9 = v24;
          v16 = v25;
        }
        sub_2365B09F8();
        v20 = *(_QWORD *)(v16 + 16);
        if (v20)
        {
          swift_bridgeObjectRetain();
          v21 = v16 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_2365B008C();
            swift_bridgeObjectRelease();
            v21 += 16;
            --v20;
          }
          while (v20);
          swift_bridgeObjectRelease();
          v9 = v24;
        }
        goto LABEL_4;
      }
LABEL_3:
      sub_2365B0A04();
LABEL_4:
      ++v6;
      swift_bridgeObjectRetain();
      sub_23654DF6C(a1, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23648DD50(v9, v11);
      result = swift_bridgeObjectRelease();
    }
    while (v6 != v23);
  }
  return result;
}

uint64_t _s12AppleIDSetup11SetupReportV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[4];
  v19 = a1[5];
  v20 = a1[6];
  v17 = (_QWORD *)a1[8];
  v18 = (_QWORD *)a1[7];
  v6 = a2[1];
  v8 = a2[2];
  v7 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  v16 = (_QWORD *)a2[7];
  v14 = a1[9];
  v15 = (_QWORD *)a2[8];
  v13 = a2[9];
  if ((sub_23654C060(*a1, *a2) & 1) == 0)
    return 0;
  if (v4)
  {
    if (!v8 || (v2 != v6 || v4 != v8) && (sub_2365B08CC() & 1) == 0)
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
  if (v5)
  {
    if (!v9 || (v3 != v7 || v5 != v9) && (sub_2365B08CC() & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  if (v20)
  {
    if (v11)
    {
      if ((v19 != v10 || v20 != v11) && (sub_2365B08CC() & 1) == 0
        || (sub_23654B6A0(v18, v16) & 1) == 0
        || (sub_23654B6A0(v17, v15) & 1) == 0)
      {
        return 0;
      }
      return sub_23654B764(v14, v13);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (!v11)
  {
    return sub_23654B764(v14, v13);
  }
  sub_23648DC24(v10, v11);
  sub_23648DD50(v19, v20);
  sub_23648DD50(v10, v11);
  return 0;
}

unint64_t sub_23654E41C()
{
  unint64_t result;

  result = qword_2563EB790;
  if (!qword_2563EB790)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C3A1C, &type metadata for SetupReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB790);
  }
  return result;
}

unint64_t sub_23654E460()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2563EB7A0;
  if (!qword_2563EB7A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563EB798);
    v2[0] = sub_2365257F0(&qword_2563E4630, (uint64_t)&protocol conformance descriptor for AIDAServiceType);
    v2[1] = MEMORY[0x24BEE0D08];
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2563EB7A0);
  }
  return result;
}

unint64_t sub_23654E4DC()
{
  unint64_t result;

  result = qword_2563EB7B8;
  if (!qword_2563EB7B8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SetupReport, &type metadata for SetupReport);
    atomic_store(result, (unint64_t *)&qword_2563EB7B8);
  }
  return result;
}

unint64_t sub_23654E520()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2563EB7C8;
  if (!qword_2563EB7C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563EB798);
    v2[0] = sub_2365257F0(&qword_2563E4660, (uint64_t)&protocol conformance descriptor for AIDAServiceType);
    v2[1] = MEMORY[0x24BEE0D38];
    result = MEMORY[0x23B7F5164](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2563EB7C8);
  }
  return result;
}

uint64_t sub_23654E59C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563EB7A8);
    v8 = a2();
    result = MEMORY[0x23B7F5164](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23654E604()
{
  unint64_t result;

  result = qword_2563EB7D8;
  if (!qword_2563EB7D8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SetupReport, &type metadata for SetupReport);
    atomic_store(result, (unint64_t *)&qword_2563EB7D8);
  }
  return result;
}

unint64_t sub_23654E648()
{
  unint64_t result;

  result = qword_2563EB7E8;
  if (!qword_2563EB7E8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C39CC, &type metadata for SetupReport.LocaleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB7E8);
  }
  return result;
}

uint64_t sub_23654E68C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563E6BF8);
    v8 = a2;
    result = MEMORY[0x23B7F5164](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23654E6EC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23654E604, (uint64_t (*)(void))sub_23654E4DC, (uint64_t (*)(void))sub_23654E708);
}

unint64_t sub_23654E708()
{
  unint64_t result;

  result = qword_2563EB808;
  if (!qword_2563EB808)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SetupReport, &type metadata for SetupReport);
    atomic_store(result, (unint64_t *)&qword_2563EB808);
  }
  return result;
}

unint64_t sub_23654E750()
{
  unint64_t result;

  result = qword_2563EB810;
  if (!qword_2563EB810)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SetupReport, &type metadata for SetupReport);
    atomic_store(result, (unint64_t *)&qword_2563EB810);
  }
  return result;
}

uint64_t sub_23654E794(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2364A5C10, (uint64_t (*)(void))sub_2364A5BCC, (uint64_t (*)(void))sub_23654E7B0);
}

unint64_t sub_23654E7B0()
{
  unint64_t result;

  result = qword_2563EB818;
  if (!qword_2563EB818)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SetupReport.LocaleInfo, &type metadata for SetupReport.LocaleInfo);
    atomic_store(result, (unint64_t *)&qword_2563EB818);
  }
  return result;
}

unint64_t sub_23654E7F8()
{
  unint64_t result;

  result = qword_2563EB820;
  if (!qword_2563EB820)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SetupReport.LocaleInfo, &type metadata for SetupReport.LocaleInfo);
    atomic_store(result, (unint64_t *)&qword_2563EB820);
  }
  return result;
}

uint64_t destroy for SetupReport(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SetupReport(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    a1[5] = a2[5];
    a1[6] = v6;
    v7 = a2[8];
    a1[7] = a2[7];
    a1[8] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 7) = v8;
  }
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SetupReport(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 5;
  v5 = a2 + 5;
  v6 = a2[6];
  if (a1[6])
  {
    if (v6)
    {
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2364915D0((uint64_t)(a1 + 5));
      v7 = *(_OWORD *)(a2 + 7);
      *v4 = *v5;
      *(_OWORD *)(a1 + 7) = v7;
    }
  }
  else if (v6)
  {
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 7);
    *v4 = *v5;
    *(_OWORD *)(a1 + 7) = v8;
  }
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetupReport(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 48);
  if (!v6)
  {
    sub_2364915D0(a1 + 40);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupReport(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetupReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupReport()
{
  return &type metadata for SetupReport;
}

uint64_t destroy for SetupReport.LocaleInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SetupReport.LocaleInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SetupReport.LocaleInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetupReport.LocaleInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SetupReport.LocaleInfo()
{
  return &type metadata for SetupReport.LocaleInfo;
}

uint64_t storeEnumTagSinglePayload for SetupReport.LocaleInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23654EDBC + 4 * byte_2365C364E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23654EDF0 + 4 * byte_2365C3649[v4]))();
}

uint64_t sub_23654EDF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23654EDF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23654EE00);
  return result;
}

uint64_t sub_23654EE0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23654EE14);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23654EE18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23654EE20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetupReport.LocaleInfo.CodingKeys()
{
  return &type metadata for SetupReport.LocaleInfo.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SetupReport.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23654EE88 + 4 * byte_2365C3658[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23654EEBC + 4 * byte_2365C3653[v4]))();
}

uint64_t sub_23654EEBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23654EEC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23654EECCLL);
  return result;
}

uint64_t sub_23654EED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23654EEE0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23654EEE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23654EEEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SetupReport.CodingKeys()
{
  return &type metadata for SetupReport.CodingKeys;
}

unint64_t sub_23654EF0C()
{
  unint64_t result;

  result = qword_2563EB828;
  if (!qword_2563EB828)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C38EC, &type metadata for SetupReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB828);
  }
  return result;
}

unint64_t sub_23654EF54()
{
  unint64_t result;

  result = qword_2563EB830;
  if (!qword_2563EB830)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C39A4, &type metadata for SetupReport.LocaleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB830);
  }
  return result;
}

unint64_t sub_23654EF9C()
{
  unint64_t result;

  result = qword_2563EB838;
  if (!qword_2563EB838)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C3914, &type metadata for SetupReport.LocaleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB838);
  }
  return result;
}

unint64_t sub_23654EFE4()
{
  unint64_t result;

  result = qword_2563EB840;
  if (!qword_2563EB840)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C393C, &type metadata for SetupReport.LocaleInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB840);
  }
  return result;
}

unint64_t sub_23654F02C()
{
  unint64_t result;

  result = qword_2563EB848;
  if (!qword_2563EB848)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C385C, &type metadata for SetupReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB848);
  }
  return result;
}

unint64_t sub_23654F074()
{
  unint64_t result;

  result = qword_2563EB850;
  if (!qword_2563EB850)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C3884, &type metadata for SetupReport.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB850);
  }
  return result;
}

uint64_t sub_23654F0B8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000002365CDA10 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F7372655077656ELL && a2 == 0xEC0000004449616ELL || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002365CDA30 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x706552646C696863 && a2 == 0xEC0000007374726FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23654F2FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4449656C61636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE900000000000073 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6472616F6279656BLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23654F468()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_2563EB858;
  if (!qword_2563EB858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563E7050);
    v2 = sub_236490650();
    v3[0] = MEMORY[0x24BEE1340];
    v3[1] = v2;
    result = MEMORY[0x23B7F5164](MEMORY[0x24BDFC468], v1, v3);
    atomic_store(result, (unint64_t *)&qword_2563EB858);
  }
  return result;
}

__n128 SignInModel.init(account:srpResults:requiredServices:desiredServices:shouldBackgroundDesiredServices:suppressCloudDataProtectionSetup:deviceUserKind:state:peerDeviceLocaleInfo:)@<Q0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, __n128 *a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __n128 result;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  unint64_t v38;
  unint64_t v39;
  __n128 v40;

  v28 = a2[1];
  v29 = *a2;
  v26 = a2[3];
  v27 = a2[2];
  v25 = a2[4];
  v12 = *((_QWORD *)a2 + 10);
  v13 = *((_QWORD *)a2 + 11);
  v14 = *a7;
  v15 = a7[1];
  v16 = *((_BYTE *)a7 + 16);
  v33 = *a8;
  v31 = *((_QWORD *)a8 + 3);
  v32 = *((_QWORD *)a8 + 2);
  v30 = *((_BYTE *)a8 + 32);
  v40 = *a10;
  v38 = a10[1].n128_u64[1];
  v39 = a10[1].n128_u64[0];
  v17 = type metadata accessor for IdMSAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a9, 1, 1, v17);
  v18 = (int *)type metadata accessor for SignInModel();
  v19 = a9 + v18[5];
  *(_OWORD *)(v19 + 64) = 0u;
  *(_OWORD *)(v19 + 80) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)(v19 + 48) = 0u;
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  v20 = a9 + v18[10];
  *(_OWORD *)v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(_QWORD *)(a9 + v18[11]) = 0;
  v21 = (_QWORD *)(a9 + v18[13]);
  *v21 = 0;
  v21[1] = 0;
  *(_BYTE *)(a9 + v18[14]) = 0;
  sub_23644F344(a1, a9);
  sub_236499C2C(*(_QWORD *)v19, *(_QWORD *)(v19 + 8), *(_QWORD *)(v19 + 16), *(_QWORD *)(v19 + 24), *(_QWORD *)(v19 + 32), *(_QWORD *)(v19 + 40), *(_QWORD *)(v19 + 48), *(_QWORD *)(v19 + 56), *(_QWORD *)(v19 + 64), *(_QWORD *)(v19 + 72), *(_QWORD *)(v19 + 80), *(_QWORD *)(v19 + 88));
  *(_OWORD *)v19 = v29;
  *(_OWORD *)(v19 + 16) = v28;
  *(_OWORD *)(v19 + 32) = v27;
  *(_OWORD *)(v19 + 48) = v26;
  *(_OWORD *)(v19 + 64) = v25;
  *(_QWORD *)(v19 + 80) = v12;
  *(_QWORD *)(v19 + 88) = v13;
  *(_QWORD *)(a9 + v18[6]) = a3;
  *(_QWORD *)(a9 + v18[7]) = a4;
  *(_BYTE *)(a9 + v18[8]) = a6;
  *(_BYTE *)(a9 + v18[9]) = a5;
  v22 = a9 + v18[12];
  *(_QWORD *)v22 = v14;
  *(_QWORD *)(v22 + 8) = v15;
  *(_BYTE *)(v22 + 16) = v16;
  v23 = a9 + v18[15];
  *(_OWORD *)v23 = v33;
  *(_QWORD *)(v23 + 16) = v32;
  *(_QWORD *)(v23 + 24) = v31;
  *(_BYTE *)(v23 + 32) = v30;
  sub_23648DD50(*(_QWORD *)v20, *(_QWORD *)(v20 + 8));
  result = v40;
  *(__n128 *)v20 = v40;
  *(_QWORD *)(v20 + 16) = v39;
  *(_QWORD *)(v20 + 24) = v38;
  return result;
}

uint64_t type metadata accessor for SignInModel()
{
  uint64_t result;

  result = qword_2563EBA58;
  if (!qword_2563EBA58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SignInModel.account.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23644F2B4(v1, a1);
}

uint64_t SignInModel.account.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23644F344(a1, v1);
}

uint64_t (*SignInModel.account.modify())()
{
  return nullsub_1;
}

uint64_t SignInModel.srpResults.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SignInModel() + 20));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = v3[8];
  v13 = v3[9];
  v15 = v3[10];
  v14 = v3[11];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v15;
  a1[11] = v14;
  return sub_23654F798(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v15, v14);
}

uint64_t sub_23654F798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_23646A418(a11, a12);
  }
  return result;
}

__n128 SignInModel.srpResults.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v9 = a1[1];
  v10 = *a1;
  v7 = a1[3];
  v8 = a1[2];
  v6 = (__n128)a1[4];
  v2 = *((_QWORD *)a1 + 10);
  v3 = *((_QWORD *)a1 + 11);
  v4 = v1 + *(int *)(type metadata accessor for SignInModel() + 20);
  sub_236499C2C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88));
  *(_OWORD *)v4 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v7;
  result = v6;
  *(__n128 *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 80) = v2;
  *(_QWORD *)(v4 + 88) = v3;
  return result;
}

uint64_t (*SignInModel.srpResults.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

uint64_t SignInModel.requiredServices.getter()
{
  type metadata accessor for SignInModel();
  return swift_bridgeObjectRetain();
}

uint64_t SignInModel.requiredServices.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for SignInModel() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SignInModel.requiredServices.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

uint64_t SignInModel.desiredServices.getter()
{
  type metadata accessor for SignInModel();
  return swift_bridgeObjectRetain();
}

uint64_t SignInModel.desiredServices.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for SignInModel() + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SignInModel.desiredServices.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

uint64_t SignInModel.suppressCloudDataProtectionSetup.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SignInModel() + 32));
}

uint64_t SignInModel.suppressCloudDataProtectionSetup.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SignInModel();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*SignInModel.suppressCloudDataProtectionSetup.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

uint64_t SignInModel.shouldBackgroundDesiredServices.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SignInModel() + 36));
}

uint64_t SignInModel.peerDeviceLocaleInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SignInModel() + 40));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_23648DC24(v4, v5);
}

__n128 SignInModel.peerDeviceLocaleInfo.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SignInModel() + 40));
  sub_23648DD50(*v4, v4[1]);
  result = v6;
  *(__n128 *)v4 = v6;
  v4[2] = v2;
  v4[3] = v3;
  return result;
}

uint64_t (*SignInModel.peerDeviceLocaleInfo.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

void *SignInModel.messageSessionTemplate.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for SignInModel() + 44));
  v2 = v1;
  return v1;
}

void sub_23654FB64(void **a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for SignInModel() + 44);
  v5 = *(void **)(a2 + v4);
  v6 = v3;

  *(_QWORD *)(a2 + v4) = v3;
}

void SignInModel.messageSessionTemplate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for SignInModel() + 44);

  *(_QWORD *)(v1 + v3) = a1;
}

void (*SignInModel.messageSessionTemplate.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SignInModel();
  v2[4] = sub_236457928();
  return sub_23645A288;
}

uint64_t SignInModel.deviceUserKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = v1 + *(int *)(type metadata accessor for SignInModel() + 48);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_BYTE *)(v3 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  return sub_2364D941C(v4, v5, v6);
}

uint64_t SignInModel.deviceUserKind.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  v5 = v1 + *(int *)(type metadata accessor for SignInModel() + 48);
  result = sub_236498C2C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 16) = v4;
  return result;
}

uint64_t (*SignInModel.deviceUserKind.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

uint64_t SignInModel.newPersonaID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SignInModel() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignInModel.newPersonaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SignInModel() + 52));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SignInModel.newPersonaID.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

uint64_t SignInModel.isFinal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SignInModel() + 56));
}

uint64_t SignInModel.isFinal.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SignInModel();
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*SignInModel.isFinal.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

uint64_t SignInModel.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + *(int *)(type metadata accessor for SignInModel() + 60);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v3 + 32);
  return sub_23654FE4C(v4, v5);
}

uint64_t sub_23654FE4C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 SignInModel.state.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  __n128 result;
  __n128 v7;

  v7 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = v1 + *(int *)(type metadata accessor for SignInModel() + 60);
  sub_23654FEE8(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  result = v7;
  *(__n128 *)v5 = v7;
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = v3;
  *(_BYTE *)(v5 + 32) = v4;
  return result;
}

uint64_t sub_23654FEE8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*SignInModel.state.modify())(_QWORD)
{
  type metadata accessor for SignInModel();
  return nullsub_1;
}

void SignInModel.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  sub_23645BE58();
  v4 = (int *)type metadata accessor for SignInModel();
  v5 = (uint64_t *)(v1 + v4[5]);
  v6 = v5[1];
  if (v6)
  {
    v7 = v5[3];
    v19 = v5[2];
    v20 = v5[5];
    v21 = *v5;
    v8 = v5[7];
    v17 = v5[6];
    v18 = v5[4];
    v9 = v5[9];
    v16 = v5[8];
    v10 = v5[10];
    v11 = v5[11];
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23646A418(v10, v11);
    sub_2365B008C();
    sub_2365B0A04();
    if (v11 >> 60 != 15)
    {
      sub_236468CBC(v10, v11);
      sub_2365AF954();
      sub_23646A42C(v10, v11);
    }
    sub_236499C2C(v21, v6, v19, v7, v18, v20, v17, v8, v16, v9, v10, v11);
  }
  else
  {
    sub_2365B0A04();
  }
  v12 = *(_QWORD *)(v1 + v4[6]);
  swift_bridgeObjectRetain();
  sub_2364830F0(a1, v12);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v2 + v4[7]);
  swift_bridgeObjectRetain();
  sub_2364830F0(a1, v13);
  swift_bridgeObjectRelease();
  sub_2365B0A04();
  sub_2365B0A04();
  if (*(_QWORD *)(v2 + v4[10] + 8))
  {
    sub_2365B0A04();
    SetupReport.LocaleInfo.hash(into:)();
  }
  else
  {
    sub_2365B0A04();
  }
  v14 = *(void **)(v2 + v4[11]);
  sub_2365B0A04();
  if (v14)
  {
    v15 = v14;
    sub_2365B0458();

  }
  __asm { BR              X10 }
}

uint64_t sub_2365501BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v7;

  sub_2365B09F8();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  sub_236498C2C(v2, v3, 0);
  if (*(_QWORD *)(v0 + *(int *)(v1 + 52) + 8))
  {
    sub_2365B0A04();
    swift_bridgeObjectRetain();
    sub_2365B008C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2365B0A04();
  }
  sub_2365B0A04();
  v4 = (uint64_t *)(v0 + *(int *)(v1 + 60));
  v5 = v4[1];
  if (v5 <= 2)
    return sub_2365B09F8();
  v7 = *v4;
  sub_2365B09F8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  sub_2365B008C();
  sub_2365B0A04();
  return sub_23654FEE8(v7, v5);
}

uint64_t sub_236550374(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2365503A8 + 4 * byte_2365C3A74[a1]))(0x746E756F636361, 0xE700000000000000);
}

uint64_t sub_2365503A8()
{
  return 0x6C75736552707273;
}

unint64_t sub_2365503C4()
{
  return 0xD000000000000010;
}

uint64_t sub_2365503E0()
{
  return 0x5364657269736564;
}

unint64_t sub_236550404()
{
  return 0xD000000000000020;
}

uint64_t sub_23655046C()
{
  return 0x7355656369766564;
}

uint64_t sub_236550490()
{
  return 0x6F7372655077656ELL;
}

uint64_t sub_2365504B0()
{
  return 0x6C616E69467369;
}

uint64_t sub_2365504C4()
{
  return 0x6574617473;
}

uint64_t sub_2365504D8()
{
  unsigned __int8 *v0;

  return sub_236550374(*v0);
}

uint64_t sub_2365504E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23655744C(a1, a2);
  *a3 = result;
  return result;
}

void sub_236550504(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_236550510()
{
  sub_236554170();
  return sub_2365B0AD0();
}

uint64_t sub_236550538()
{
  sub_236554170();
  return sub_2365B0ADC();
}

uint64_t SignInModel.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 *v14;
  __int128 v15;
  __int128 *v16;
  char v17;
  __int128 *v18;
  char v19;
  __int128 v20;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB860);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236554170();
  sub_2365B0AAC();
  LOBYTE(v22) = 0;
  type metadata accessor for IdMSAccount();
  sub_23644F0B8(&qword_2563E45F8, (uint64_t (*)(uint64_t))type metadata accessor for IdMSAccount, (uint64_t)&protocol conformance descriptor for IdMSAccount);
  sub_2365B07E8();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for SignInModel();
    v10 = (__int128 *)(v3 + v9[5]);
    v11 = v10[1];
    v22 = *v10;
    v23 = v11;
    v12 = v10[3];
    v24 = v10[2];
    v25 = v12;
    v13 = v10[5];
    v26 = v10[4];
    v27 = v13;
    v28 = 1;
    sub_2364907A4();
    sub_2365B07E8();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v9[6]);
    v28 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5E50);
    sub_2364A52B8((unint64_t *)&qword_2563E5E58, &qword_2563E4630, (uint64_t)&protocol conformance descriptor for AIDAServiceType, MEMORY[0x24BEE1700]);
    sub_2365B0824();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v9[7]);
    v28 = 3;
    sub_2365B0824();
    LOBYTE(v22) = 4;
    sub_2365B080C();
    LOBYTE(v22) = 5;
    sub_2365B080C();
    v14 = (__int128 *)(v3 + v9[10]);
    v15 = v14[1];
    v22 = *v14;
    v23 = v15;
    v28 = 6;
    sub_2364A5BCC();
    sub_2365B07E8();
    *(_QWORD *)&v22 = *(_QWORD *)(v3 + v9[11]);
    v28 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB870);
    sub_23655423C(&qword_2563EB878, (uint64_t)&protocol conformance descriptor for _objcCodable<A>);
    sub_2365B0824();
    v16 = (__int128 *)(v3 + v9[12]);
    v17 = *((_BYTE *)v16 + 16);
    v22 = *v16;
    LOBYTE(v23) = v17;
    v28 = 8;
    sub_2365541B4();
    sub_2365B0824();
    LOBYTE(v22) = 9;
    sub_2365B07C4();
    LOBYTE(v22) = 10;
    sub_2365B080C();
    v18 = (__int128 *)(v3 + v9[15]);
    v19 = *((_BYTE *)v18 + 32);
    v20 = v18[1];
    v22 = *v18;
    v23 = v20;
    LOBYTE(v24) = v19;
    v28 = 11;
    sub_2365541F8();
    sub_2365B0824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SignInModel.hashValue.getter()
{
  _BYTE v1[72];

  sub_2365B09E0();
  SignInModel.hash(into:)((uint64_t)v1);
  return sub_2365B0A34();
}

uint64_t SignInModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char v38;
  uint64_t v39;
  char *v40;
  __int128 v41;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  char *v57;
  int *v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char v66;

  v49 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB890);
  v6 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for SignInModel();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for IdMSAccount();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = &v11[v9[5]];
  *((_OWORD *)v13 + 4) = 0u;
  *((_OWORD *)v13 + 5) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *((_OWORD *)v13 + 3) = 0u;
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  v14 = &v11[v9[10]];
  *(_OWORD *)v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  v55 = (uint64_t *)v14;
  v56 = v9[11];
  v57 = v11;
  *(_QWORD *)&v11[v56] = 0;
  v15 = &v11[v9[13]];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v53 = a1;
  v54 = v15;
  v58 = v9;
  v16 = v9[14];
  v11[v16] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_236554170();
  v51 = v8;
  v17 = v52;
  sub_2365B0A7C();
  if (v17)
  {
    v19 = v55;
    v18 = v56;
    v20 = (uint64_t)v57;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    sub_236465998(v20, &qword_2563E45E0);
    sub_236499C2C(*(_QWORD *)v13, *((_QWORD *)v13 + 1), *((_QWORD *)v13 + 2), *((_QWORD *)v13 + 3), *((_QWORD *)v13 + 4), *((_QWORD *)v13 + 5), *((_QWORD *)v13 + 6), *((_QWORD *)v13 + 7), *((_QWORD *)v13 + 8), *((_QWORD *)v13 + 9), *((_QWORD *)v13 + 10), *((_QWORD *)v13 + 11));
    sub_23648DD50(*v19, v19[1]);

    return swift_bridgeObjectRelease();
  }
  else
  {
    v48 = v16;
    v52 = v6;
    LOBYTE(v59) = 0;
    sub_23644F0B8(&qword_2563E4640, (uint64_t (*)(uint64_t))type metadata accessor for IdMSAccount, (uint64_t)&protocol conformance descriptor for IdMSAccount);
    sub_2365B0734();
    v21 = (uint64_t)v57;
    sub_23644F344((uint64_t)v5, (uint64_t)v57);
    v66 = 1;
    sub_2364908A8();
    sub_2365B0734();
    v22 = v58;
    v47 = v59;
    v46 = v60;
    v45 = v61;
    v44 = v62;
    v43 = v63;
    v23 = v64;
    v24 = v65;
    sub_236499C2C(*(_QWORD *)v13, *((_QWORD *)v13 + 1), *((_QWORD *)v13 + 2), *((_QWORD *)v13 + 3), *((_QWORD *)v13 + 4), *((_QWORD *)v13 + 5), *((_QWORD *)v13 + 6), *((_QWORD *)v13 + 7), *((_QWORD *)v13 + 8), *((_QWORD *)v13 + 9), *((_QWORD *)v13 + 10), *((_QWORD *)v13 + 11));
    v25 = v46;
    *(_OWORD *)v13 = v47;
    *((_OWORD *)v13 + 1) = v25;
    v26 = v44;
    *((_OWORD *)v13 + 2) = v45;
    *((_OWORD *)v13 + 3) = v26;
    *((_OWORD *)v13 + 4) = v43;
    *((_QWORD *)v13 + 10) = v23;
    *((_QWORD *)v13 + 11) = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5E50);
    v66 = 2;
    sub_2364A52B8((unint64_t *)&qword_2563E5ED0, &qword_2563E4660, (uint64_t)&protocol conformance descriptor for AIDAServiceType, MEMORY[0x24BEE1720]);
    sub_2365B0770();
    *(_QWORD *)(v21 + v22[6]) = v59;
    v66 = 3;
    sub_2365B0770();
    *(_QWORD *)(v21 + v22[7]) = v59;
    LOBYTE(v59) = 4;
    v27 = sub_2365B0758();
    v29 = v55;
    v28 = v56;
    *(_BYTE *)(v21 + v22[8]) = v27 & 1;
    LOBYTE(v59) = 5;
    *(_BYTE *)(v21 + v22[9]) = sub_2365B0758() & 1;
    v66 = 6;
    sub_2364A5C10();
    sub_2365B0734();
    v47 = v59;
    v30 = v60;
    sub_23648DD50(*v29, v29[1]);
    *(_OWORD *)v29 = v47;
    *((_OWORD *)v29 + 1) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB870);
    v66 = 7;
    sub_23655423C(&qword_2563EB898, (uint64_t)&protocol conformance descriptor for _objcCodable<A>);
    sub_2365B0770();
    v31 = v59;

    *(_QWORD *)(v21 + v28) = v31;
    v66 = 8;
    sub_236554280();
    sub_2365B0770();
    v32 = v60;
    v33 = v21 + v58[12];
    *(_OWORD *)v33 = v59;
    *(_BYTE *)(v33 + 16) = v32;
    LOBYTE(v59) = 9;
    v34 = sub_2365B0710();
    v36 = v35;
    v37 = (uint64_t *)v54;
    swift_bridgeObjectRelease();
    *v37 = v34;
    v37[1] = v36;
    LOBYTE(v59) = 10;
    v57[v48] = sub_2365B0758() & 1;
    v66 = 11;
    sub_2365542C4();
    sub_2365B0770();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v50);
    v38 = v61;
    v39 = (uint64_t)v57;
    v40 = &v57[v58[15]];
    v41 = v60;
    *(_OWORD *)v40 = v59;
    *((_OWORD *)v40 + 1) = v41;
    v40[32] = v38;
    sub_236554308(v39, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    return sub_236465A18(v39, (uint64_t (*)(_QWORD))type metadata accessor for SignInModel);
  }
}

uint64_t sub_2365511A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SignInModel.init(from:)(a1, a2);
}

uint64_t sub_2365511BC(_QWORD *a1)
{
  return SignInModel.encode(to:)(a1);
}

uint64_t sub_2365511D4()
{
  _BYTE v1[72];

  sub_2365B09E0();
  SignInModel.hash(into:)((uint64_t)v1);
  return sub_2365B0A34();
}

uint64_t sub_236551214()
{
  _BYTE v1[72];

  sub_2365B09E0();
  SignInModel.hash(into:)((uint64_t)v1);
  return sub_2365B0A34();
}

uint64_t SignInModel.State.hash(into:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8) <= 2uLL)
    return sub_2365B09F8();
  sub_2365B09F8();
  sub_2365B008C();
  sub_2365B008C();
  return sub_2365B0A04();
}

uint64_t sub_2365512FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6567617373656DLL;
  if (*v0 != 1)
    v1 = 0x6465747065636361;
  if (*v0)
    return v1;
  else
    return 0x656C746974;
}

uint64_t sub_236551354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236557958(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236551378()
{
  sub_2365543D4();
  return sub_2365B0AD0();
}

uint64_t sub_2365513A0()
{
  sub_2365543D4();
  return sub_2365B0ADC();
}

uint64_t sub_2365513C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2365513F8 + 4 * byte_2365C3A80[*v0]))(0x6C616974696E69, 0xE700000000000000);
}

uint64_t sub_2365513F8()
{
  return 0x49676E696E676973;
}

uint64_t sub_236551414()
{
  return 0x7472656C61;
}

uint64_t sub_236551428()
{
  return 0x64656873696E6966;
}

uint64_t sub_236551440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236557AA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236551464()
{
  sub_23655434C();
  return sub_2365B0AD0();
}

uint64_t sub_23655148C()
{
  sub_23655434C();
  return sub_2365B0ADC();
}

uint64_t sub_2365514B4()
{
  sub_236554390();
  return sub_2365B0AD0();
}

uint64_t sub_2365514DC()
{
  sub_236554390();
  return sub_2365B0ADC();
}

uint64_t sub_236551504()
{
  sub_23655445C();
  return sub_2365B0AD0();
}

uint64_t sub_23655152C()
{
  sub_23655445C();
  return sub_2365B0ADC();
}

uint64_t sub_236551554()
{
  sub_236554418();
  return sub_2365B0AD0();
}

uint64_t sub_23655157C()
{
  sub_236554418();
  return sub_2365B0ADC();
}

uint64_t SignInModel.State.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD v28[4];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;
  char v49;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB8B0);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v34 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB8B8);
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB8C0);
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB8C8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB8D0);
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v15 = *v1;
  v16 = v1[1];
  v30 = v1[2];
  v31 = v15;
  v29 = v1[3];
  v28[3] = *((unsigned __int8 *)v1 + 32);
  v17 = a1[3];
  v18 = a1;
  v19 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v18, v17);
  sub_23655434C();
  sub_2365B0AAC();
  switch(v16)
  {
    case 0:
      v43 = 0;
      sub_23655445C();
      v21 = v40;
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v21);
    case 1:
      v44 = 1;
      sub_236554418();
      v23 = v40;
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v23);
    case 2:
      v49 = 3;
      sub_236554390();
      v20 = v34;
      v21 = v40;
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v36);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v21);
    default:
      v48 = 2;
      sub_2365543D4();
      v24 = v37;
      v25 = v40;
      sub_2365B07B8();
      v47 = 0;
      v26 = v39;
      v27 = v41;
      sub_2365B0800();
      if (!v27)
      {
        v46 = 1;
        sub_2365B0800();
        v45 = 2;
        sub_2365B080C();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v19, v25);
  }
}

uint64_t SignInModel.State.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_2365B09E0();
  sub_2365B09F8();
  if (v1 > 2)
  {
    sub_2365B008C();
    sub_2365B008C();
    sub_2365B0A04();
  }
  return sub_2365B0A34();
}

uint64_t SignInModel.State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v24[5];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  _QWORD *v32;
  char *v33;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB900);
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v31 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB908);
  v24[2] = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB910);
  v7 = *(_QWORD *)(v6 - 8);
  v24[3] = v6;
  v24[4] = v7;
  MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB918);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB920);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23655434C();
  v18 = v33;
  sub_2365B0A7C();
  if (!v18)
  {
    v33 = v12;
    v24[0] = v10;
    v24[1] = v9;
    v19 = sub_2365B07A0();
    if (*(_QWORD *)(v19 + 16) == 1)
      __asm { BR              X10 }
    v20 = sub_2365B05B4();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v22 = &type metadata for SignInModel.State;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
}

void sub_236551E68(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 65) = 3;
  sub_236554390();
  sub_2365B06F8();
  if (!v3)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 144) + 8))(v1, *(_QWORD *)(v5 - 136));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(a1 + 8))(v2, v4);
    JUMPOUT(0x236551F30);
  }
  JUMPOUT(0x236551D58);
}

uint64_t sub_236552010@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SignInModel.State.init(from:)(a1, a2);
}

uint64_t sub_236552024(_QWORD *a1)
{
  return SignInModel.State.encode(to:)(a1);
}

uint64_t sub_236552040()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8) <= 2uLL)
    return sub_2365B09F8();
  sub_2365B09F8();
  sub_2365B008C();
  sub_2365B008C();
  return sub_2365B0A04();
}

uint64_t sub_2365520F0()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_2365B09E0();
  sub_2365B09F8();
  if (v1 > 2)
  {
    sub_2365B008C();
    sub_2365B008C();
    sub_2365B0A04();
  }
  return sub_2365B0A34();
}

BOOL SignInModel.DeviceUserKind.shouldCreatePersona.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16) - 1 < 2;
}

uint64_t SignInModel.DeviceUserKind.shouldCreateUser.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(_QWORD))((char *)sub_2365521EC + 4 * byte_2365C3A88[*(unsigned __int8 *)(v0 + 16)]))(0);
}

BOOL sub_2365521EC@<W0>(char a1@<W8>)
{
  return (a1 & 1) == 0;
}

BOOL sub_2365521F8@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (a1 | *(_QWORD *)(v1 + 8)) != 0;
}

BOOL SignInModel.DeviceUserKind.isPrimary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL8 v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  if ((v3 - 1) >= 2)
  {
    if (*(_BYTE *)(v0 + 16))
    {
      v4 = (v1 | v2) != 0;
      LOBYTE(v3) = 3;
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    LOBYTE(v3) = 0;
  }
  v4 = 0;
LABEL_6:
  sub_236498C2C(v1, v2, v3);
  sub_236498C2C(1, 0, 3);
  return v4;
}

uint64_t SignInModel.DeviceUserKind.replacingAutomatic(withPrimary:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;

  v4 = *(_QWORD *)v2;
  v5 = *(unsigned __int8 *)(v2 + 16);
  if (v5 == 1)
  {
    result = a1();
    v7 = 0;
    if ((result & 1) != 0)
      v4 = 1;
    else
      v4 &= 1u;
    if ((result & 1) != 0)
      LOBYTE(v5) = 3;
    else
      LOBYTE(v5) = 2;
  }
  else
  {
    v7 = *(_QWORD *)(v2 + 8);
    result = sub_2364D941C(*(_QWORD *)v2, v7, *(_BYTE *)(v2 + 16));
  }
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v5;
  return result;
}

void SignInModel.DeviceUserKind.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_23655233C()
{
  sub_2365B09F8();
  return sub_2365B008C();
}

uint64_t sub_236552360()
{
  sub_2365B09F8();
  return sub_2365B0A04();
}

uint64_t sub_2365523A4()
{
  return 0x73726550796C6E6FLL;
}

uint64_t sub_2365523C8()
{
  sub_23655456C();
  return sub_2365B0AD0();
}

uint64_t sub_2365523F0()
{
  sub_23655456C();
  return sub_2365B0ADC();
}

uint64_t sub_236552418()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_236552440 + 4 * byte_2365C3A90[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_236552440()
{
  return 0x676E697473697865;
}

uint64_t sub_236552458()
{
  return 0x6974616D6F747561;
}

uint64_t sub_236552474()
{
  return 0x7972616D697270;
}

uint64_t sub_23655248C()
{
  return 0x7473657567;
}

uint64_t sub_2365524A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_236557C60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2365524C4()
{
  sub_2365544A0();
  return sub_2365B0AD0();
}

uint64_t sub_2365524EC()
{
  sub_2365544A0();
  return sub_2365B0ADC();
}

uint64_t sub_236552514()
{
  return 0x49656C69666F7270;
}

uint64_t sub_236552530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x49656C69666F7270 && a2 == 0xE900000000000044)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2365B08CC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2365525D0()
{
  sub_2365545B0();
  return sub_2365B0AD0();
}

uint64_t sub_2365525F8()
{
  sub_2365545B0();
  return sub_2365B0ADC();
}

uint64_t sub_236552620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73726550796C6E6FLL && a2 == 0xEB00000000616E6FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_2365B08CC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2365526CC()
{
  sub_2365544E4();
  return sub_2365B0AD0();
}

uint64_t sub_2365526F4()
{
  sub_2365544E4();
  return sub_2365B0ADC();
}

uint64_t sub_23655271C()
{
  sub_2365545F4();
  return sub_2365B0AD0();
}

uint64_t sub_236552744()
{
  sub_2365545F4();
  return sub_2365B0ADC();
}

uint64_t sub_23655276C()
{
  sub_236554528();
  return sub_2365B0AD0();
}

uint64_t sub_236552794()
{
  sub_236554528();
  return sub_2365B0ADC();
}

void SignInModel.DeviceUserKind.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[17];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB928);
  v13[12] = *(_QWORD *)(v3 - 8);
  v13[13] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v13[11] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB930);
  v13[4] = *(_QWORD *)(v5 - 8);
  v13[5] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v13[3] = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB938);
  v13[9] = *(_QWORD *)(v7 - 8);
  v13[10] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v13[8] = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB940);
  v13[6] = *(_QWORD *)(v9 - 8);
  v13[7] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB948);
  v13[1] = *(_QWORD *)(v10 - 8);
  v13[2] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB950);
  v13[15] = *(_QWORD *)(v11 - 8);
  v13[16] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13[14] = *(_QWORD *)(v1 + 8);
  v12 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2365544A0();
  sub_2365B0AAC();
  __asm { BR              X9 }
}

uint64_t sub_2365529B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v2 - 68) = 1;
  sub_2365545B0();
  v3 = *(_QWORD *)(v2 - 96);
  sub_2365B07B8();
  v4 = *(_QWORD *)(v2 - 168);
  sub_2365B0800();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v3);
}

void SignInModel.DeviceUserKind.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2365B09E0();
  __asm { BR              X9 }
}

uint64_t sub_236552C24()
{
  sub_2365B09F8();
  sub_2365B008C();
  return sub_2365B0A34();
}

uint64_t SignInModel.DeviceUserKind.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;

  v36 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB988);
  v30 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v35 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB990);
  v34 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB998);
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v33 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB9A0);
  v29 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v32 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB9A8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EB9B0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_2365544A0();
  v16 = v38;
  sub_2365B0A7C();
  if (!v16)
  {
    v23[2] = v7;
    v23[3] = v10;
    v23[1] = v8;
    v23[4] = 0;
    v38 = v12;
    v17 = sub_2365B07A0();
    v18 = v11;
    if (*(_QWORD *)(v17 + 16) == 1)
      __asm { BR              X10 }
    v19 = sub_2365B05B4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v21 = &type metadata for SignInModel.DeviceUserKind;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

void sub_236553030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v4 - 68) = 1;
  sub_2365545B0();
  v5 = *(_QWORD *)(v4 - 208);
  sub_2365B06F8();
  if (v5)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 88) + 8))(v3, v2);
  }
  else
  {
    v6 = *(_QWORD *)(v4 - 192);
    v7 = sub_2365B074C();
    v8 = v1;
    v9 = *(_QWORD *)(v4 - 88);
    v10 = v7;
    v12 = v11;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 160) + 8))(v8, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v2);
    v13 = *(_QWORD *)(v4 - 104);
    *(_QWORD *)v13 = v10;
    *(_QWORD *)(v13 + 8) = v12;
    *(_BYTE *)(v13 + 16) = 0;
  }
  JUMPOUT(0x236553008);
}

void sub_236553078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = v3;
  *(_BYTE *)(v4 - 67) = 2;
  sub_23655456C();
  v6 = v0;
  v7 = *(_QWORD *)(v4 - 208);
  sub_2365B06F8();
  if (v7)
    JUMPOUT(0x2365530C4);
  v8 = *(_QWORD *)(v4 - 200);
  v9 = sub_2365B0758();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 184) + 8))(v6, v8);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 88) + 8))(v2, v1);
  *(_QWORD *)v5 = v9 & 1;
  *(_QWORD *)(v5 + 8) = 0;
  *(_BYTE *)(v5 + 16) = 1;
  JUMPOUT(0x236553008);
}

void sub_2365530E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v4 - 66) = 3;
  sub_236554528();
  v5 = *(_QWORD *)(v4 - 144);
  v6 = *(_QWORD *)(v4 - 208);
  sub_2365B06F8();
  if (v6)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 88) + 8))(v2, v1);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v0 + 8))(v5, *(_QWORD *)(v4 - 168));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 88) + 8))(v2, v1);
    *(_QWORD *)v3 = 1;
    *(_QWORD *)(v3 + 8) = 0;
    *(_BYTE *)(v3 + 16) = 3;
  }
  JUMPOUT(0x236553008);
}

void sub_236553158(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 120) = a1;
  *(_BYTE *)(v5 - 65) = 4;
  sub_2365544E4();
  v6 = *(_QWORD *)(v5 - 208);
  sub_2365B06F8();
  if (v6)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 88) + 8))(v3, v2);
    JUMPOUT(0x236553008);
  }
  *(_QWORD *)(v5 - 128) = v2;
  v7 = *(_QWORD *)(v5 - 176);
  sub_2365B0758();
  v8 = *(_QWORD *)(v5 - 88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v4, v7);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(v8 + 8))(v1, *(_QWORD *)(v5 - 128));
  JUMPOUT(0x2365533D4);
}

uint64_t sub_2365533E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SignInModel.DeviceUserKind.init(from:)(a1, a2);
}

void sub_2365533F4(_QWORD *a1)
{
  SignInModel.DeviceUserKind.encode(to:)(a1);
}

void sub_236553414()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_2365B09E0();
  __asm { BR              X9 }
}

uint64_t sub_236553450()
{
  sub_2365B09F8();
  sub_2365B008C();
  return sub_2365B0A34();
}

void _s12AppleIDSetup11SignInModelV14DeviceUserKindO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_23655350C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  char v7;

  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_2364D941C(v0, v1, v5);
    sub_236498C2C(v3, v2, v4);
    sub_236498C2C(v0, v1, v5);
    v7 = 0;
  }
  else
  {
    if (v3 == v0 && v2 == v1)
      v7 = 1;
    else
      v7 = sub_2365B08CC();
    sub_2364D941C(v0, v1, 0);
    sub_2364D941C(v3, v2, 0);
    sub_236498C2C(v3, v2, 0);
    sub_236498C2C(v0, v1, 0);
  }
  return v7 & 1;
}

unint64_t _s12AppleIDSetup11SignInModelV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v15;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_QWORD *)a2;
  v8 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  if (!v3)
  {
    if (!v8)
    {
      sub_23654FEE8(*(_QWORD *)a1, 0);
      v12 = v7;
      v13 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    if (v8 == 1)
    {
      sub_23654FEE8(*(_QWORD *)a1, 1uLL);
      sub_23654FEE8(v7, 1uLL);
      return v8 & 1;
    }
    goto LABEL_12;
  }
  if (v3 != 2)
  {
    if (v8 >= 3 && (v2 == v7 && v3 == v8 || (sub_2365B08CC() & 1) != 0))
    {
      if (v5 == v10 && v4 == v9)
      {
        sub_23654FE4C(v7, v8);
        sub_23654FE4C(v2, v3);
        sub_23654FEE8(v2, v3);
        sub_23654FEE8(v7, v8);
      }
      else
      {
        v15 = sub_2365B08CC();
        sub_23654FE4C(v7, v8);
        sub_23654FE4C(v2, v3);
        sub_23654FEE8(v2, v3);
        sub_23654FEE8(v7, v8);
        LOBYTE(v8) = 0;
        if ((v15 & 1) == 0)
          return v8 & 1;
      }
      LOBYTE(v8) = ((v6 & 1) == 0) ^ v11;
      return v8 & 1;
    }
    goto LABEL_12;
  }
  if (v8 != 2)
  {
LABEL_12:
    sub_23654FE4C(v7, v8);
    sub_23654FE4C(v2, v3);
    sub_23654FEE8(v2, v3);
    sub_23654FEE8(v7, v8);
    LOBYTE(v8) = 0;
    return v8 & 1;
  }
  sub_23654FEE8(*(_QWORD *)a1, 2uLL);
  v12 = v7;
  v13 = 2;
LABEL_8:
  sub_23654FEE8(v12, v13);
  LOBYTE(v8) = 1;
  return v8 & 1;
}

uint64_t _s12AppleIDSetup11SignInModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  _QWORD *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  char v67;
  char v68;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  id v76;
  char v77;
  uint64_t v78;
  char v79;
  __int128 *v80;
  char v81;
  char v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  __int128 v91;
  __int128 *v92;
  char v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;

  v4 = type metadata accessor for IdMSAccount();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v109 = (uint64_t *)((char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E4DB8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v95 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v95 - v17;
  v110 = a1;
  v19 = a1;
  v20 = a2;
  sub_23644F2B4(v19, (uint64_t)&v95 - v17);
  sub_23644F2B4(a2, (uint64_t)v16);
  v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_23644F2B4((uint64_t)v18, (uint64_t)v9);
  sub_23644F2B4((uint64_t)v16, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v9, 1, v4) == 1)
  {
    sub_236465998((uint64_t)v16, &qword_2563E45E0);
    sub_236465998((uint64_t)v18, &qword_2563E45E0);
    if (v22(v21, 1, v4) == 1)
    {
      sub_236465998((uint64_t)v9, &qword_2563E45E0);
      goto LABEL_8;
    }
LABEL_6:
    sub_236465998((uint64_t)v9, &qword_2563E4DB8);
    goto LABEL_27;
  }
  sub_23644F2B4((uint64_t)v9, (uint64_t)v13);
  if (v22(v21, 1, v4) == 1)
  {
    sub_236465998((uint64_t)v16, &qword_2563E45E0);
    sub_236465998((uint64_t)v18, &qword_2563E45E0);
    sub_236465A18((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for IdMSAccount);
    goto LABEL_6;
  }
  v23 = v109;
  sub_236487E14(v21, (uint64_t)v109);
  v24 = _s12AppleIDSetup11IdMSAccountV2eeoiySbAC_ACtFZ_0(v13, v23);
  sub_236465A18((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for IdMSAccount);
  sub_236465998((uint64_t)v16, &qword_2563E45E0);
  sub_236465998((uint64_t)v18, &qword_2563E45E0);
  sub_236465A18((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for IdMSAccount);
  sub_236465998((uint64_t)v9, &qword_2563E45E0);
  if ((v24 & 1) == 0)
    goto LABEL_27;
LABEL_8:
  v105 = (int *)type metadata accessor for SignInModel();
  v25 = v105[5];
  v26 = v20;
  v27 = *(_QWORD *)(v110 + v25);
  v28 = *(_QWORD *)(v110 + v25 + 8);
  v30 = *(_QWORD *)(v110 + v25 + 16);
  v29 = *(_QWORD *)(v110 + v25 + 24);
  v32 = *(_QWORD *)(v110 + v25 + 32);
  v31 = *(_QWORD *)(v110 + v25 + 40);
  v34 = *(_QWORD *)(v110 + v25 + 48);
  v33 = *(_QWORD *)(v110 + v25 + 56);
  v35 = *(_QWORD *)(v110 + v25 + 64);
  v36 = *(_QWORD *)(v110 + v25 + 72);
  v37 = *(_QWORD *)(v110 + v25 + 80);
  v38 = *(_QWORD *)(v110 + v25 + 88);
  v104 = v26;
  v39 = (uint64_t *)(v26 + v25);
  v40 = *v39;
  v41 = v39[1];
  v42 = v39[2];
  v43 = v39[3];
  v44 = v39[4];
  v45 = v39[5];
  v46 = v39[6];
  v47 = v39[7];
  v48 = v39[8];
  v49 = v39[9];
  v50 = v39[10];
  v51 = v39[11];
  if (!v28)
  {
    if (!v41)
      goto LABEL_13;
LABEL_26:
    *(_QWORD *)&v121 = v27;
    *((_QWORD *)&v121 + 1) = v28;
    *(_QWORD *)&v122 = v30;
    *((_QWORD *)&v122 + 1) = v29;
    v123 = v32;
    v124 = v31;
    v125 = v34;
    v126 = v33;
    v127 = v35;
    v128 = v36;
    v129 = v37;
    v130 = v38;
    v131 = v40;
    v132 = v41;
    v133 = v42;
    v134 = v43;
    v135 = v44;
    v136 = v45;
    v137 = v46;
    v138 = v47;
    v139 = v48;
    v140 = v49;
    v141 = v50;
    v142 = v51;
    sub_23654F798(v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51);
    sub_236557E70((uint64_t)&v121);
    goto LABEL_27;
  }
  *(_QWORD *)&v121 = v27;
  *((_QWORD *)&v121 + 1) = v28;
  *(_QWORD *)&v122 = v30;
  *((_QWORD *)&v122 + 1) = v29;
  v123 = v32;
  v124 = v31;
  v125 = v34;
  v126 = v33;
  v127 = v35;
  v128 = v36;
  v129 = v37;
  v130 = v38;
  v108 = v31;
  v109 = (_QWORD *)v33;
  v102 = v32;
  v103 = v34;
  v106 = v36;
  v107 = v29;
  v100 = v27;
  v101 = v30;
  v99 = v35;
  if (!v41)
  {
    v110 = v47;
    v104 = v45;
    v105 = (int *)v46;
    v97 = v43;
    v98 = v44;
    v96 = v42;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23646A418(v37, v38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23646A418(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23646A42C(v37, v38);
    v42 = v96;
    v43 = v97;
    v44 = v98;
    v35 = v99;
    v45 = v104;
    v46 = (uint64_t)v105;
    v33 = (uint64_t)v109;
    v47 = v110;
    v36 = v106;
    v29 = v107;
    v27 = v100;
    v30 = v101;
    v32 = v102;
    v34 = v103;
    v31 = v108;
    goto LABEL_26;
  }
  *(_QWORD *)&v111 = v40;
  *((_QWORD *)&v111 + 1) = v41;
  *(_QWORD *)&v112 = v42;
  *((_QWORD *)&v112 + 1) = v43;
  v113 = v44;
  v114 = v45;
  v115 = v46;
  v116 = v47;
  v117 = v48;
  v118 = v49;
  v119 = v50;
  v120 = v51;
  sub_23654F798(v27, v28, v30, v29, v32, v31, v34, v33, v35, v36, v37, v38);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23646A418(v37, v38);
  LODWORD(v98) = _s12AppleIDSetup11IdMSAccountV10SRPResultsV2eeoiySbAE_AEtFZ_0(&v121, &v111);
  v52 = v129;
  v53 = v130;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23646A42C(v52, v53);
  sub_236499C2C(v100, v28, v101, v107, v102, v108, v103, (uint64_t)v109, v99, v106, v37, v38);
  if ((v98 & 1) == 0)
    goto LABEL_27;
LABEL_13:
  v55 = v104;
  v54 = v105;
  v56 = v110;
  if ((sub_2365A28C4(*(_QWORD *)(v110 + v105[6]), *(_QWORD *)(v104 + v105[6])) & 1) == 0
    || (sub_2365A28C4(*(_QWORD *)(v56 + v54[7]), *(_QWORD *)(v55 + v54[7])) & 1) == 0
    || *(unsigned __int8 *)(v56 + v54[8]) != *(unsigned __int8 *)(v55 + v54[8])
    || *(unsigned __int8 *)(v56 + v54[9]) != *(unsigned __int8 *)(v55 + v54[9]))
  {
    goto LABEL_27;
  }
  v57 = v54[10];
  v58 = *(_QWORD *)(v56 + v57);
  v59 = *(_QWORD *)(v56 + v57 + 8);
  v61 = *(_QWORD **)(v56 + v57 + 16);
  v60 = *(_QWORD **)(v56 + v57 + 24);
  v62 = (uint64_t *)(v55 + v57);
  v63 = *v62;
  v64 = v62[1];
  v66 = (_QWORD *)v62[2];
  v65 = (_QWORD *)v62[3];
  if (!v59)
  {
    if (!v64)
      goto LABEL_30;
LABEL_35:
    sub_23648DC24(v63, v64);
    sub_23648DD50(v58, v59);
    sub_23648DD50(v63, v64);
    goto LABEL_27;
  }
  if (!v64)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  if (v58 != v63 || v59 != v64)
  {
    v67 = sub_2365B08CC();
    v68 = 0;
    if ((v67 & 1) == 0)
      return v68 & 1;
  }
  if ((sub_23654B6A0(v61, v66) & 1) == 0 || (sub_23654B6A0(v60, v65) & 1) == 0)
    goto LABEL_27;
LABEL_30:
  v70 = v105;
  v71 = v105[11];
  v72 = v110;
  v73 = *(void **)(v110 + v71);
  v74 = *(void **)(v55 + v71);
  if (v73)
  {
    if (!v74)
      goto LABEL_27;
    sub_236557F30();
    v75 = v74;
    v76 = v73;
    v77 = sub_2365B044C();

    if ((v77 & 1) == 0)
      goto LABEL_27;
  }
  else if (v74)
  {
    goto LABEL_27;
  }
  v78 = v70[12];
  v79 = *(_BYTE *)(v72 + v78 + 16);
  v121 = *(_OWORD *)(v72 + v78);
  LOBYTE(v122) = v79;
  v80 = (__int128 *)(v55 + v78);
  v81 = *((_BYTE *)v80 + 16);
  v111 = *v80;
  LOBYTE(v112) = v81;
  _s12AppleIDSetup11SignInModelV14DeviceUserKindO2eeoiySbAE_AEtFZ_0((uint64_t)&v121);
  if ((v82 & 1) == 0)
    goto LABEL_27;
  v83 = v70[13];
  v84 = (_QWORD *)(v72 + v83);
  v85 = *(_QWORD *)(v72 + v83 + 8);
  v86 = (_QWORD *)(v55 + v83);
  v87 = v86[1];
  if (!v85)
  {
    if (!v87)
      goto LABEL_45;
LABEL_27:
    v68 = 0;
    return v68 & 1;
  }
  if (!v87)
    goto LABEL_27;
  if (*v84 == *v86 && v85 == v87 || (v88 = sub_2365B08CC(), v68 = 0, (v88 & 1) != 0))
  {
LABEL_45:
    if (*(unsigned __int8 *)(v110 + v105[14]) == *(unsigned __int8 *)(v55 + v105[14]))
    {
      v89 = v105[15];
      v90 = *(_BYTE *)(v110 + v89 + 32);
      v91 = *(_OWORD *)(v110 + v89 + 16);
      v121 = *(_OWORD *)(v110 + v89);
      v122 = v91;
      LOBYTE(v123) = v90;
      v92 = (__int128 *)(v55 + v89);
      v93 = *((_BYTE *)v92 + 32);
      v94 = v92[1];
      v111 = *v92;
      v112 = v94;
      LOBYTE(v113) = v93;
      v68 = _s12AppleIDSetup11SignInModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)&v121, (uint64_t)&v111);
      return v68 & 1;
    }
    goto LABEL_27;
  }
  return v68 & 1;
}

unint64_t sub_236554170()
{
  unint64_t result;

  result = qword_2563EB868;
  if (!qword_2563EB868)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C49AC, &type metadata for SignInModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB868);
  }
  return result;
}

unint64_t sub_2365541B4()
{
  unint64_t result;

  result = qword_2563EB880;
  if (!qword_2563EB880)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SignInModel.DeviceUserKind, &type metadata for SignInModel.DeviceUserKind);
    atomic_store(result, (unint64_t *)&qword_2563EB880);
  }
  return result;
}

unint64_t sub_2365541F8()
{
  unint64_t result;

  result = qword_2563EB888;
  if (!qword_2563EB888)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SignInModel.State, &type metadata for SignInModel.State);
    atomic_store(result, (unint64_t *)&qword_2563EB888);
  }
  return result;
}

uint64_t sub_23655423C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563EB870);
    result = MEMORY[0x23B7F5164](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_236554280()
{
  unint64_t result;

  result = qword_2563EB8A0;
  if (!qword_2563EB8A0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SignInModel.DeviceUserKind, &type metadata for SignInModel.DeviceUserKind);
    atomic_store(result, (unint64_t *)&qword_2563EB8A0);
  }
  return result;
}

unint64_t sub_2365542C4()
{
  unint64_t result;

  result = qword_2563EB8A8;
  if (!qword_2563EB8A8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SignInModel.State, &type metadata for SignInModel.State);
    atomic_store(result, (unint64_t *)&qword_2563EB8A8);
  }
  return result;
}

uint64_t sub_236554308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SignInModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23655434C()
{
  unint64_t result;

  result = qword_2563EB8D8;
  if (!qword_2563EB8D8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C495C, &type metadata for SignInModel.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB8D8);
  }
  return result;
}

unint64_t sub_236554390()
{
  unint64_t result;

  result = qword_2563EB8E0;
  if (!qword_2563EB8E0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C490C, &type metadata for SignInModel.State.FinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB8E0);
  }
  return result;
}

unint64_t sub_2365543D4()
{
  unint64_t result;

  result = qword_2563EB8E8;
  if (!qword_2563EB8E8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C48BC, &type metadata for SignInModel.State.AlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB8E8);
  }
  return result;
}

unint64_t sub_236554418()
{
  unint64_t result;

  result = qword_2563EB8F0;
  if (!qword_2563EB8F0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C486C, &type metadata for SignInModel.State.SigningInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB8F0);
  }
  return result;
}

unint64_t sub_23655445C()
{
  unint64_t result;

  result = qword_2563EB8F8;
  if (!qword_2563EB8F8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C481C, &type metadata for SignInModel.State.InitialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB8F8);
  }
  return result;
}

unint64_t sub_2365544A0()
{
  unint64_t result;

  result = qword_2563EB958;
  if (!qword_2563EB958)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C47CC, &type metadata for SignInModel.DeviceUserKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB958);
  }
  return result;
}

unint64_t sub_2365544E4()
{
  unint64_t result;

  result = qword_2563EB960;
  if (!qword_2563EB960)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C477C, &type metadata for SignInModel.DeviceUserKind.GuestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB960);
  }
  return result;
}

unint64_t sub_236554528()
{
  unint64_t result;

  result = qword_2563EB968;
  if (!qword_2563EB968)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C472C, &type metadata for SignInModel.DeviceUserKind.PrimaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB968);
  }
  return result;
}

unint64_t sub_23655456C()
{
  unint64_t result;

  result = qword_2563EB970;
  if (!qword_2563EB970)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C46DC, &type metadata for SignInModel.DeviceUserKind.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB970);
  }
  return result;
}

unint64_t sub_2365545B0()
{
  unint64_t result;

  result = qword_2563EB978;
  if (!qword_2563EB978)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C468C, &type metadata for SignInModel.DeviceUserKind.ExistingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB978);
  }
  return result;
}

unint64_t sub_2365545F4()
{
  unint64_t result;

  result = qword_2563EB980;
  if (!qword_2563EB980)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C463C, &type metadata for SignInModel.DeviceUserKind.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EB980);
  }
  return result;
}

uint64_t sub_236554638(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23644F0B8(&qword_2563EB9B8, (uint64_t (*)(uint64_t))type metadata accessor for SignInModel, (uint64_t)&protocol conformance descriptor for SignInModel);
  a1[2] = sub_23644F0B8(&qword_2563EB9C0, (uint64_t (*)(uint64_t))type metadata accessor for SignInModel, (uint64_t)&protocol conformance descriptor for SignInModel);
  result = sub_23644F0B8(&qword_2563EB9C8, (uint64_t (*)(uint64_t))type metadata accessor for SignInModel, (uint64_t)&protocol conformance descriptor for SignInModel);
  a1[3] = result;
  return result;
}

uint64_t sub_2365546B0()
{
  return sub_23644F0B8(&qword_2563EB9D0, (uint64_t (*)(uint64_t))type metadata accessor for SignInModel, (uint64_t)&protocol conformance descriptor for SignInModel);
}

uint64_t sub_2365546DC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_2365542C4, (uint64_t (*)(void))sub_2365541F8, (uint64_t (*)(void))sub_2365546F8);
}

unint64_t sub_2365546F8()
{
  unint64_t result;

  result = qword_2563EB9D8;
  if (!qword_2563EB9D8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SignInModel.State, &type metadata for SignInModel.State);
    atomic_store(result, (unint64_t *)&qword_2563EB9D8);
  }
  return result;
}

unint64_t sub_236554740()
{
  unint64_t result;

  result = qword_2563EB9E0;
  if (!qword_2563EB9E0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SignInModel.State, &type metadata for SignInModel.State);
    atomic_store(result, (unint64_t *)&qword_2563EB9E0);
  }
  return result;
}

uint64_t sub_236554784(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_236554280, (uint64_t (*)(void))sub_2365541B4, (uint64_t (*)(void))sub_2365547A0);
}

unint64_t sub_2365547A0()
{
  unint64_t result;

  result = qword_2563EB9E8;
  if (!qword_2563EB9E8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SignInModel.DeviceUserKind, &type metadata for SignInModel.DeviceUserKind);
    atomic_store(result, (unint64_t *)&qword_2563EB9E8);
  }
  return result;
}

unint64_t sub_2365547E8()
{
  unint64_t result;

  result = qword_2563EB9F0;
  if (!qword_2563EB9F0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for SignInModel.DeviceUserKind, &type metadata for SignInModel.DeviceUserKind);
    atomic_store(result, (unint64_t *)&qword_2563EB9F0);
  }
  return result;
}

id sub_23655482C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;

  v3 = *(void **)(a1 + *(int *)(type metadata accessor for SignInModel() + 44));
  *a2 = v3;
  return v3;
}

uint64_t *initializeBufferWithCopyOfBuffer for SignInModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *, _QWORD, uint64_t, int *);
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  unint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for IdMSAccount();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v77 = v8;
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      v14 = a2[7];
      a1[6] = a2[6];
      a1[7] = v14;
      v15 = a2[9];
      a1[8] = a2[8];
      a1[9] = v15;
      v16 = v7[5];
      v74 = (char *)a2 + v16;
      v76 = (char *)a1 + v16;
      v17 = sub_2365AF8D0();
      v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v72(v76, v74, v17);
      v18 = v7[6];
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = *((_QWORD *)v20 + 1);
      v22 = *((_QWORD *)v20 + 2);
      v23 = *((_QWORD *)v20 + 3);
      v24 = *((_QWORD *)v20 + 4);
      v25 = *((_QWORD *)v20 + 5);
      v71 = *((_QWORD *)v20 + 6);
      v73 = *(_QWORD *)v20;
      v70 = *((_QWORD *)v20 + 7);
      v75 = *((_QWORD *)v20 + 8);
      LOBYTE(v76) = v20[72];
      sub_23645F8F8(*(_QWORD *)v20, v21, v22, v23, v24, v25, v71, v70, v75, (char)v76);
      *(_QWORD *)v19 = v73;
      *((_QWORD *)v19 + 1) = v21;
      *((_QWORD *)v19 + 2) = v22;
      *((_QWORD *)v19 + 3) = v23;
      *((_QWORD *)v19 + 4) = v24;
      *((_QWORD *)v19 + 5) = v25;
      *((_QWORD *)v19 + 6) = v71;
      *((_QWORD *)v19 + 7) = v70;
      *((_QWORD *)v19 + 8) = v75;
      v19[72] = (char)v76;
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      v26 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v77 + 56);
      swift_bridgeObjectRetain();
      v26(a1, 0, 1, v7);
    }
    v27 = a3[5];
    v28 = (char *)a1 + v27;
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = v29[1];
    if (v30)
    {
      *(_QWORD *)v28 = *v29;
      *((_QWORD *)v28 + 1) = v30;
      v31 = v29[3];
      *((_QWORD *)v28 + 2) = v29[2];
      *((_QWORD *)v28 + 3) = v31;
      v32 = v29[5];
      *((_QWORD *)v28 + 4) = v29[4];
      *((_QWORD *)v28 + 5) = v32;
      v33 = v29[7];
      *((_QWORD *)v28 + 6) = v29[6];
      *((_QWORD *)v28 + 7) = v33;
      v34 = v29[9];
      *((_QWORD *)v28 + 8) = v29[8];
      *((_QWORD *)v28 + 9) = v34;
      v35 = v29 + 10;
      v36 = v29[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36 >> 60 == 15)
      {
        *((_OWORD *)v28 + 5) = *(_OWORD *)v35;
      }
      else
      {
        v40 = *v35;
        sub_236468CBC(*v35, v36);
        *((_QWORD *)v28 + 10) = v40;
        *((_QWORD *)v28 + 11) = v36;
      }
    }
    else
    {
      v37 = *((_OWORD *)v29 + 3);
      *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
      *((_OWORD *)v28 + 3) = v37;
      v38 = *((_OWORD *)v29 + 5);
      *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
      *((_OWORD *)v28 + 5) = v38;
      v39 = *((_OWORD *)v29 + 1);
      *(_OWORD *)v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v39;
    }
    v41 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v41) = *(uint64_t *)((char *)a2 + v41);
    v42 = a3[9];
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    *((_BYTE *)a1 + v42) = *((_BYTE *)a2 + v42);
    v43 = a3[10];
    v44 = (uint64_t *)((char *)a1 + v43);
    v45 = (uint64_t *)((char *)a2 + v43);
    v46 = *(uint64_t *)((char *)a2 + v43 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46)
    {
      *v44 = *v45;
      v44[1] = v46;
      v47 = v45[2];
      v48 = v45[3];
      v44[2] = v47;
      v44[3] = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v49 = *((_OWORD *)v45 + 1);
      *(_OWORD *)v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v49;
    }
    v50 = a3[11];
    v51 = a3[12];
    v52 = *(void **)((char *)a2 + v50);
    *(uint64_t *)((char *)a1 + v50) = (uint64_t)v52;
    v53 = (char *)a1 + v51;
    v54 = *(uint64_t *)((char *)a2 + v51);
    v55 = *(uint64_t *)((char *)a2 + v51 + 8);
    v56 = *((_BYTE *)a2 + v51 + 16);
    v57 = v52;
    sub_2364D941C(v54, v55, v56);
    *(_QWORD *)v53 = v54;
    *((_QWORD *)v53 + 1) = v55;
    v53[16] = v56;
    v58 = a3[13];
    v59 = a3[14];
    v60 = (uint64_t *)((char *)a1 + v58);
    v61 = (uint64_t *)((char *)a2 + v58);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    *((_BYTE *)a1 + v59) = *((_BYTE *)a2 + v59);
    v63 = a3[15];
    v64 = (char *)a1 + v63;
    v65 = (char *)a2 + v63;
    v66 = *(uint64_t *)((char *)a2 + v63 + 8);
    swift_bridgeObjectRetain();
    if (v66 >= 3)
    {
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *((_QWORD *)v64 + 1) = v66;
      v68 = *((_QWORD *)v65 + 3);
      *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
      *((_QWORD *)v64 + 3) = v68;
      v64[32] = v65[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v67 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v67;
      v64[32] = v65[32];
    }
  }
  return a1;
}

unint64_t destroy for SignInModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t result;

  v4 = type metadata accessor for IdMSAccount();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 20);
    v6 = sub_2365AF8D0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = a1 + *(int *)(v4 + 24);
    sub_23645FAF8(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_QWORD *)(v7 + 32), *(_QWORD *)(v7 + 40), *(_QWORD *)(v7 + 48), *(_QWORD *)(v7 + 56), *(_QWORD *)(v7 + 64), *(_BYTE *)(v7 + 72));
    swift_bridgeObjectRelease();
  }
  v8 = (_QWORD *)(a1 + a2[5]);
  if (v8[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v8[11];
    if (v9 >> 60 != 15)
      sub_236468D44(v8[10], v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  sub_236498C2C(*(_QWORD *)(a1 + a2[12]), *(_QWORD *)(a1 + a2[12] + 8), *(_BYTE *)(a1 + a2[12] + 16));
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[15] + 8);
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SignInModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;

  v6 = (int *)type metadata accessor for IdMSAccount();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v75 = v7;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    v14 = v6[5];
    v72 = (char *)a2 + v14;
    v74 = (char *)a1 + v14;
    v15 = sub_2365AF8D0();
    v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70(v74, v72, v15);
    v16 = v6[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = *((_QWORD *)v18 + 1);
    v20 = *((_QWORD *)v18 + 2);
    v21 = *((_QWORD *)v18 + 3);
    v22 = *((_QWORD *)v18 + 4);
    v23 = *((_QWORD *)v18 + 5);
    v69 = *((_QWORD *)v18 + 6);
    v71 = *(_QWORD *)v18;
    v68 = *((_QWORD *)v18 + 7);
    v73 = *((_QWORD *)v18 + 8);
    LOBYTE(v74) = v18[72];
    sub_23645F8F8(*(_QWORD *)v18, v19, v20, v21, v22, v23, v69, v68, v73, (char)v74);
    *(_QWORD *)v17 = v71;
    *((_QWORD *)v17 + 1) = v19;
    *((_QWORD *)v17 + 2) = v20;
    *((_QWORD *)v17 + 3) = v21;
    *((_QWORD *)v17 + 4) = v22;
    *((_QWORD *)v17 + 5) = v23;
    *((_QWORD *)v17 + 6) = v69;
    *((_QWORD *)v17 + 7) = v68;
    *((_QWORD *)v17 + 8) = v73;
    v17[72] = (char)v74;
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    v24 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v75 + 56);
    swift_bridgeObjectRetain();
    v24(a1, 0, 1, v6);
  }
  v25 = a3[5];
  v26 = (char *)a1 + v25;
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  if (v28)
  {
    *(_QWORD *)v26 = *v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = v27[3];
    *((_QWORD *)v26 + 2) = v27[2];
    *((_QWORD *)v26 + 3) = v29;
    v30 = v27[5];
    *((_QWORD *)v26 + 4) = v27[4];
    *((_QWORD *)v26 + 5) = v30;
    v31 = v27[7];
    *((_QWORD *)v26 + 6) = v27[6];
    *((_QWORD *)v26 + 7) = v31;
    v32 = v27[9];
    *((_QWORD *)v26 + 8) = v27[8];
    *((_QWORD *)v26 + 9) = v32;
    v33 = v27 + 10;
    v34 = v27[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34 >> 60 == 15)
    {
      *((_OWORD *)v26 + 5) = *(_OWORD *)v33;
    }
    else
    {
      v38 = *v33;
      sub_236468CBC(*v33, v34);
      *((_QWORD *)v26 + 10) = v38;
      *((_QWORD *)v26 + 11) = v34;
    }
  }
  else
  {
    v35 = *((_OWORD *)v27 + 3);
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    *((_OWORD *)v26 + 3) = v35;
    v36 = *((_OWORD *)v27 + 5);
    *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
    *((_OWORD *)v26 + 5) = v36;
    v37 = *((_OWORD *)v27 + 1);
    *(_OWORD *)v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v37;
  }
  v39 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  v40 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v40) = *((_BYTE *)a2 + v40);
  v41 = a3[10];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = *(_QWORD *)((char *)a2 + v41 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v44)
  {
    *v42 = *v43;
    v42[1] = v44;
    v45 = v43[2];
    v46 = v43[3];
    v42[2] = v45;
    v42[3] = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v47 = *((_OWORD *)v43 + 1);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v47;
  }
  v48 = a3[11];
  v49 = a3[12];
  v50 = *(void **)((char *)a2 + v48);
  *(_QWORD *)((char *)a1 + v48) = v50;
  v51 = (char *)a1 + v49;
  v52 = *(_QWORD *)((char *)a2 + v49);
  v53 = *(_QWORD *)((char *)a2 + v49 + 8);
  v54 = *((_BYTE *)a2 + v49 + 16);
  v55 = v50;
  sub_2364D941C(v52, v53, v54);
  *(_QWORD *)v51 = v52;
  *((_QWORD *)v51 + 1) = v53;
  v51[16] = v54;
  v56 = a3[13];
  v57 = a3[14];
  v58 = (_QWORD *)((char *)a1 + v56);
  v59 = (_QWORD *)((char *)a2 + v56);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  *((_BYTE *)a1 + v57) = *((_BYTE *)a2 + v57);
  v61 = a3[15];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = *(_QWORD *)((char *)a2 + v61 + 8);
  swift_bridgeObjectRetain();
  if (v64 >= 3)
  {
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *((_QWORD *)v62 + 1) = v64;
    v66 = *((_QWORD *)v63 + 3);
    *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
    *((_QWORD *)v62 + 3) = v66;
    v62[32] = v63[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v65 = *((_OWORD *)v63 + 1);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v65;
    v62[32] = v63[32];
  }
  return a1;
}

_QWORD *assignWithCopy for SignInModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD, uint64_t, int *);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  unint64_t v90;
  __int128 v91;
  __int128 v92;
  char v93;
  __int128 v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _OWORD *v108;
  char v109;

  v6 = (int *)type metadata accessor for IdMSAccount();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      v11 = v6[5];
      v104 = (char *)a2 + v11;
      v107 = (char *)a1 + v11;
      v12 = sub_2365AF8D0();
      v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v99(v107, v104, v12);
      v13 = v6[6];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v100 = *((_QWORD *)v15 + 1);
      v102 = *(_QWORD *)v15;
      v16 = *((_QWORD *)v15 + 2);
      v17 = *((_QWORD *)v15 + 3);
      v18 = *((_QWORD *)v15 + 4);
      v19 = *((_QWORD *)v15 + 5);
      v96 = *((_QWORD *)v15 + 7);
      v97 = *((_QWORD *)v15 + 6);
      v105 = *((_QWORD *)v15 + 8);
      LOBYTE(v107) = v15[72];
      sub_23645F8F8(*(_QWORD *)v15, v100, v16, v17, v18, v19, v97, v96, v105, (char)v107);
      *(_QWORD *)v14 = v102;
      *((_QWORD *)v14 + 1) = v100;
      *((_QWORD *)v14 + 2) = v16;
      *((_QWORD *)v14 + 3) = v17;
      *((_QWORD *)v14 + 4) = v18;
      *((_QWORD *)v14 + 5) = v19;
      *((_QWORD *)v14 + 6) = v97;
      *((_QWORD *)v14 + 7) = v96;
      *((_QWORD *)v14 + 8) = v105;
      v14[72] = (char)v107;
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      v20 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56);
      swift_bridgeObjectRetain();
      v20(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_236465A18((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for IdMSAccount);
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = v6[5];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_2365AF8D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  v38 = v6[6];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = *((_QWORD *)v40 + 1);
  v42 = *((_QWORD *)v40 + 2);
  v43 = *((_QWORD *)v40 + 3);
  v44 = *((_QWORD *)v40 + 4);
  v45 = *((_QWORD *)v40 + 5);
  v101 = *((_QWORD *)v40 + 6);
  v103 = *(_QWORD *)v40;
  v98 = *((_QWORD *)v40 + 7);
  v106 = *((_QWORD *)v40 + 8);
  v109 = v40[72];
  sub_23645F8F8(*(_QWORD *)v40, v41, v42, v43, v44, v45, v101, v98, v106, v109);
  v46 = *(_QWORD *)v39;
  v47 = *((_QWORD *)v39 + 1);
  v48 = *((_QWORD *)v39 + 2);
  v49 = *((_QWORD *)v39 + 3);
  v50 = *((_QWORD *)v39 + 4);
  v51 = *((_QWORD *)v39 + 5);
  v52 = *((_QWORD *)v39 + 6);
  v53 = *((_QWORD *)v39 + 7);
  v54 = *((_QWORD *)v39 + 8);
  v55 = v39[72];
  *(_QWORD *)v39 = v103;
  *((_QWORD *)v39 + 1) = v41;
  *((_QWORD *)v39 + 2) = v42;
  *((_QWORD *)v39 + 3) = v43;
  *((_QWORD *)v39 + 4) = v44;
  *((_QWORD *)v39 + 5) = v45;
  *((_QWORD *)v39 + 6) = v101;
  *((_QWORD *)v39 + 7) = v98;
  *((_QWORD *)v39 + 8) = v106;
  v39[72] = v109;
  sub_23645FAF8(v46, v47, v48, v49, v50, v51, v52, v53, v54, v55);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  v22 = a3[5];
  v23 = (uint64_t)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)((char *)a1 + v22 + 8);
  v26 = *(_QWORD *)((char *)a2 + v22 + 8);
  if (!v25)
  {
    if (!v26)
    {
      v56 = *((_OWORD *)v24 + 1);
      *(_OWORD *)v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 16) = v56;
      v57 = *((_OWORD *)v24 + 2);
      v58 = *((_OWORD *)v24 + 3);
      v59 = *((_OWORD *)v24 + 5);
      *(_OWORD *)(v23 + 64) = *((_OWORD *)v24 + 4);
      *(_OWORD *)(v23 + 80) = v59;
      *(_OWORD *)(v23 + 32) = v57;
      *(_OWORD *)(v23 + 48) = v58;
      goto LABEL_24;
    }
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
    *(_QWORD *)(v23 + 16) = *((_QWORD *)v24 + 2);
    *(_QWORD *)(v23 + 24) = *((_QWORD *)v24 + 3);
    *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
    *(_QWORD *)(v23 + 40) = *((_QWORD *)v24 + 5);
    *(_QWORD *)(v23 + 48) = *((_QWORD *)v24 + 6);
    *(_QWORD *)(v23 + 56) = *((_QWORD *)v24 + 7);
    *(_QWORD *)(v23 + 64) = *((_QWORD *)v24 + 8);
    *(_QWORD *)(v23 + 72) = *((_QWORD *)v24 + 9);
    v108 = v24 + 80;
    v28 = *((_QWORD *)v24 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28 >> 60 == 15)
    {
      *(_OWORD *)(v23 + 80) = *v108;
      goto LABEL_24;
    }
    v29 = *(_QWORD *)v108;
    goto LABEL_22;
  }
  if (!v26)
  {
    sub_236555A04(v23);
    v30 = *((_OWORD *)v24 + 1);
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 16) = v30;
    v31 = *((_OWORD *)v24 + 5);
    v33 = *((_OWORD *)v24 + 2);
    v32 = *((_OWORD *)v24 + 3);
    *(_OWORD *)(v23 + 64) = *((_OWORD *)v24 + 4);
    *(_OWORD *)(v23 + 80) = v31;
    *(_OWORD *)(v23 + 32) = v33;
    *(_OWORD *)(v23 + 48) = v32;
    goto LABEL_24;
  }
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_QWORD *)(v23 + 8) = *((_QWORD *)v24 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 16) = *((_QWORD *)v24 + 2);
  *(_QWORD *)(v23 + 24) = *((_QWORD *)v24 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 32) = *((_QWORD *)v24 + 4);
  *(_QWORD *)(v23 + 40) = *((_QWORD *)v24 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 48) = *((_QWORD *)v24 + 6);
  *(_QWORD *)(v23 + 56) = *((_QWORD *)v24 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v23 + 64) = *((_QWORD *)v24 + 8);
  *(_QWORD *)(v23 + 72) = *((_QWORD *)v24 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = (uint64_t *)(v24 + 80);
  v28 = *((_QWORD *)v24 + 11);
  if (*(_QWORD *)(v23 + 88) >> 60 == 15)
  {
    if (v28 >> 60 != 15)
    {
      v29 = *v27;
LABEL_22:
      sub_236468CBC(v29, v28);
      *(_QWORD *)(v23 + 80) = v29;
      *(_QWORD *)(v23 + 88) = v28;
      goto LABEL_24;
    }
LABEL_18:
    *(_OWORD *)(v23 + 80) = *(_OWORD *)v27;
    goto LABEL_24;
  }
  if (v28 >> 60 == 15)
  {
    sub_2364A87BC(v23 + 80);
    goto LABEL_18;
  }
  v60 = *v27;
  sub_236468CBC(*v27, *((_QWORD *)v24 + 11));
  v61 = *(_QWORD *)(v23 + 80);
  v62 = *(_QWORD *)(v23 + 88);
  *(_QWORD *)(v23 + 80) = v60;
  *(_QWORD *)(v23 + 88) = v28;
  sub_236468D44(v61, v62);
LABEL_24:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v63 = a3[10];
  v64 = (_QWORD *)((char *)a1 + v63);
  v65 = (_QWORD *)((char *)a2 + v63);
  v66 = *(_QWORD *)((char *)a1 + v63 + 8);
  v67 = *(_QWORD *)((char *)a2 + v63 + 8);
  if (v66)
  {
    if (v67)
    {
      *v64 = *v65;
      v64[1] = v65[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v64[2] = v65[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v64[3] = v65[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2364915D0((uint64_t)v64);
      v68 = *((_OWORD *)v65 + 1);
      *(_OWORD *)v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v68;
    }
  }
  else if (v67)
  {
    *v64 = *v65;
    v64[1] = v65[1];
    v64[2] = v65[2];
    v64[3] = v65[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v69 = *((_OWORD *)v65 + 1);
    *(_OWORD *)v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v69;
  }
  v70 = a3[11];
  v71 = *(void **)((char *)a1 + v70);
  v72 = *(void **)((char *)a2 + v70);
  *(_QWORD *)((char *)a1 + v70) = v72;
  v73 = v72;

  v74 = a3[12];
  v75 = (char *)a1 + v74;
  v76 = (char *)a2 + v74;
  v77 = *(_QWORD *)v76;
  v78 = *((_QWORD *)v76 + 1);
  v79 = v76[16];
  sub_2364D941C(*(_QWORD *)v76, v78, v79);
  v80 = *(_QWORD *)v75;
  v81 = *((_QWORD *)v75 + 1);
  *(_QWORD *)v75 = v77;
  *((_QWORD *)v75 + 1) = v78;
  v82 = v75[16];
  v75[16] = v79;
  sub_236498C2C(v80, v81, v82);
  v83 = a3[13];
  v84 = (_QWORD *)((char *)a1 + v83);
  v85 = (_QWORD *)((char *)a2 + v83);
  *v84 = *v85;
  v84[1] = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v86 = a3[15];
  v87 = (uint64_t)a1 + v86;
  v88 = (char *)a2 + v86;
  v89 = *(_QWORD *)((char *)a1 + v86 + 8);
  v90 = *((_QWORD *)v88 + 1);
  if (v89 >= 3)
  {
    if (v90 >= 3)
    {
      *(_QWORD *)v87 = *(_QWORD *)v88;
      *(_QWORD *)(v87 + 8) = *((_QWORD *)v88 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v87 + 16) = *((_QWORD *)v88 + 2);
      *(_QWORD *)(v87 + 24) = *((_QWORD *)v88 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v93 = v88[32];
    }
    else
    {
      sub_236465998(v87, &qword_2563EB9F8);
      v93 = v88[32];
      v94 = *((_OWORD *)v88 + 1);
      *(_OWORD *)v87 = *(_OWORD *)v88;
      *(_OWORD *)(v87 + 16) = v94;
    }
    *(_BYTE *)(v87 + 32) = v93;
  }
  else if (v90 >= 3)
  {
    *(_QWORD *)v87 = *(_QWORD *)v88;
    *(_QWORD *)(v87 + 8) = *((_QWORD *)v88 + 1);
    *(_QWORD *)(v87 + 16) = *((_QWORD *)v88 + 2);
    *(_QWORD *)(v87 + 24) = *((_QWORD *)v88 + 3);
    *(_BYTE *)(v87 + 32) = v88[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v91 = *(_OWORD *)v88;
    v92 = *((_OWORD *)v88 + 1);
    *(_BYTE *)(v87 + 32) = v88[32];
    *(_OWORD *)v87 = v91;
    *(_OWORD *)(v87 + 16) = v92;
  }
  return a1;
}

uint64_t sub_236555A04(uint64_t a1)
{
  destroy for IdMSAccount.SRPResults(a1);
  return a1;
}

_OWORD *initializeWithTake for SignInModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int128 v39;

  v6 = (int *)type metadata accessor for IdMSAccount();
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    a1[4] = a2[4];
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = v6[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2365AF8D0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    v15 = v6[6];
    v16 = (_OWORD *)((char *)a1 + v15);
    v17 = (_OWORD *)((char *)a2 + v15);
    v18 = v17[3];
    v16[2] = v17[2];
    v16[3] = v18;
    *(_OWORD *)((char *)v16 + 57) = *(_OWORD *)((char *)v17 + 57);
    v19 = v17[1];
    *v16 = *v17;
    v16[1] = v19;
    *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  v20 = a3[5];
  v21 = a3[6];
  v22 = (_OWORD *)((char *)a1 + v20);
  v23 = (_OWORD *)((char *)a2 + v20);
  v24 = v23[3];
  v22[2] = v23[2];
  v22[3] = v24;
  v25 = v23[5];
  v22[4] = v23[4];
  v22[5] = v25;
  v26 = v23[1];
  *v22 = *v23;
  v22[1] = v26;
  *(_QWORD *)((char *)a1 + v21) = *(_QWORD *)((char *)a2 + v21);
  v27 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
  v28 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v29 = (_OWORD *)((char *)a1 + v28);
  v30 = (_OWORD *)((char *)a2 + v28);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = a3[12];
  *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *(_OWORD *)v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  v35 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  *((_BYTE *)a1 + v35) = *((_BYTE *)a2 + v35);
  v36 = a3[15];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = *((_OWORD *)v38 + 1);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v39;
  v37[32] = v38[32];
  return a1;
}

_QWORD *assignWithTake for SignInModel(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;

  v6 = (int *)type metadata accessor for IdMSAccount();
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v11;
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v12;
      v13 = v6[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2365AF8D0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      v17 = v6[6];
      v18 = (_OWORD *)((char *)a1 + v17);
      v19 = (_OWORD *)((char *)a2 + v17);
      v20 = v19[3];
      v18[2] = v19[2];
      v18[3] = v20;
      *(_OWORD *)((char *)v18 + 57) = *(_OWORD *)((char *)v19 + 57);
      v21 = v19[1];
      *v18 = *v19;
      v18[1] = v21;
      *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_236465A18((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for IdMSAccount);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v64 = a2[1];
  *a1 = *a2;
  a1[1] = v64;
  swift_bridgeObjectRelease();
  v65 = a2[3];
  a1[2] = a2[2];
  a1[3] = v65;
  swift_bridgeObjectRelease();
  v66 = a2[5];
  a1[4] = a2[4];
  a1[5] = v66;
  swift_bridgeObjectRelease();
  v67 = a2[7];
  a1[6] = a2[6];
  a1[7] = v67;
  swift_bridgeObjectRelease();
  v68 = a2[9];
  a1[8] = a2[8];
  a1[9] = v68;
  swift_bridgeObjectRelease();
  v69 = v6[5];
  v70 = (char *)a1 + v69;
  v71 = (char *)a2 + v69;
  v72 = sub_2365AF8D0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 40))(v70, v71, v72);
  v73 = v6[6];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  v76 = *((_QWORD *)v75 + 8);
  v77 = v75[72];
  v78 = *(_QWORD *)v74;
  v79 = *((_QWORD *)v74 + 1);
  v80 = *((_QWORD *)v74 + 2);
  v81 = *((_QWORD *)v74 + 3);
  v82 = *((_QWORD *)v74 + 4);
  v83 = *((_QWORD *)v74 + 5);
  v84 = *((_QWORD *)v74 + 6);
  v85 = *((_QWORD *)v74 + 7);
  v86 = *((_QWORD *)v74 + 8);
  v87 = v74[72];
  v88 = *((_OWORD *)v75 + 1);
  *(_OWORD *)v74 = *(_OWORD *)v75;
  *((_OWORD *)v74 + 1) = v88;
  v89 = *((_OWORD *)v75 + 3);
  *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
  *((_OWORD *)v74 + 3) = v89;
  *((_QWORD *)v74 + 8) = v76;
  v74[72] = v77;
  sub_23645FAF8(v78, v79, v80, v81, v82, v83, v84, v85, v86, v87);
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  swift_bridgeObjectRelease();
LABEL_7:
  v23 = a3[5];
  v24 = (uint64_t)a1 + v23;
  v25 = (char *)a2 + v23;
  if (!*(_QWORD *)((char *)a1 + v23 + 8))
  {
LABEL_14:
    v34 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v34;
    v35 = *((_OWORD *)v25 + 5);
    *(_OWORD *)(v24 + 64) = *((_OWORD *)v25 + 4);
    *(_OWORD *)(v24 + 80) = v35;
    v36 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v36;
    goto LABEL_15;
  }
  v26 = *((_QWORD *)v25 + 1);
  if (!v26)
  {
    sub_236555A04(v24);
    goto LABEL_14;
  }
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_QWORD *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
  v27 = *((_QWORD *)v25 + 3);
  *(_QWORD *)(v24 + 16) = *((_QWORD *)v25 + 2);
  *(_QWORD *)(v24 + 24) = v27;
  swift_bridgeObjectRelease();
  v28 = *((_QWORD *)v25 + 5);
  *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
  *(_QWORD *)(v24 + 40) = v28;
  swift_bridgeObjectRelease();
  v29 = *((_QWORD *)v25 + 7);
  *(_QWORD *)(v24 + 48) = *((_QWORD *)v25 + 6);
  *(_QWORD *)(v24 + 56) = v29;
  swift_bridgeObjectRelease();
  v30 = *((_QWORD *)v25 + 9);
  *(_QWORD *)(v24 + 64) = *((_QWORD *)v25 + 8);
  *(_QWORD *)(v24 + 72) = v30;
  swift_bridgeObjectRelease();
  v31 = v25 + 80;
  v32 = *(_QWORD *)(v24 + 88);
  if (v32 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)(v24 + 80) = *v31;
    goto LABEL_15;
  }
  v33 = *((_QWORD *)v25 + 11);
  if (v33 >> 60 == 15)
  {
    sub_2364A87BC(v24 + 80);
    goto LABEL_12;
  }
  v90 = *(_QWORD *)(v24 + 80);
  *(_QWORD *)(v24 + 80) = *(_QWORD *)v31;
  *(_QWORD *)(v24 + 88) = v33;
  sub_236468D44(v90, v32);
LABEL_15:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v37 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v37) = *((_BYTE *)a2 + v37);
  v38 = a3[10];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  if (*(_QWORD *)((char *)a1 + v38 + 8))
  {
    v41 = v40[1];
    if (v41)
    {
      *v39 = *v40;
      v39[1] = v41;
      swift_bridgeObjectRelease();
      v39[2] = v40[2];
      swift_bridgeObjectRelease();
      v39[3] = v40[3];
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_2364915D0((uint64_t)v39);
  }
  v42 = *((_OWORD *)v40 + 1);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v42;
LABEL_20:
  v43 = a3[11];
  v44 = *(void **)((char *)a1 + v43);
  *(_QWORD *)((char *)a1 + v43) = *(_QWORD *)((char *)a2 + v43);

  v45 = a3[12];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = v47[16];
  v49 = *(_QWORD *)v46;
  v50 = *((_QWORD *)v46 + 1);
  *(_OWORD *)v46 = *(_OWORD *)v47;
  v51 = v46[16];
  v46[16] = v48;
  sub_236498C2C(v49, v50, v51);
  v52 = a3[13];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (_QWORD *)((char *)a2 + v52);
  v56 = *v54;
  v55 = v54[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  v57 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  if (*(_QWORD *)((char *)a1 + v57 + 8) >= 3uLL)
  {
    v60 = *((_QWORD *)v59 + 1);
    if (v60 >= 3)
    {
      *(_QWORD *)v58 = *(_QWORD *)v59;
      *((_QWORD *)v58 + 1) = v60;
      swift_bridgeObjectRelease();
      v62 = *((_QWORD *)v59 + 3);
      *((_QWORD *)v58 + 2) = *((_QWORD *)v59 + 2);
      *((_QWORD *)v58 + 3) = v62;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_236465998((uint64_t)a1 + v57, &qword_2563EB9F8);
  }
  v61 = *((_OWORD *)v59 + 1);
  *(_OWORD *)v58 = *(_OWORD *)v59;
  *((_OWORD *)v58 + 1) = v61;
LABEL_25:
  v58[32] = v59[32];
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_236556070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SignInModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2365560FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E45E0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_236556178()
{
  unint64_t v0;

  sub_236460CA8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t initializeWithCopy for SignInModel.State(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for SignInModel.State(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *a2;
    v6 = a2[1];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  return a1;
}

uint64_t assignWithTake for SignInModel.State(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInModel.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SignInModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

uint64_t sub_2365564CC(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.State()
{
  return &type metadata for SignInModel.State;
}

uint64_t destroy for SignInModel.DeviceUserKind(uint64_t a1)
{
  return sub_236498C2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s12AppleIDSetup11SignInModelV14DeviceUserKindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2364D941C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SignInModel.DeviceUserKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_2364D941C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_236498C2C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SignInModel.DeviceUserKind(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_236498C2C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInModel.DeviceUserKind(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SignInModel.DeviceUserKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_236556684(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_23655669C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind()
{
  return &type metadata for SignInModel.DeviceUserKind;
}

uint64_t storeEnumTagSinglePayload for SignInModel.DeviceUserKind.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_236556710 + 4 * byte_2365C3AAF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_236556744 + 4 * byte_2365C3AAA[v4]))();
}

uint64_t sub_236556744(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23655674C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236556754);
  return result;
}

uint64_t sub_236556760(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236556768);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23655676C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236556774(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.CodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.CodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.NoneCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.ExistingCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.ExistingCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.AutomaticCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.AutomaticCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.PrimaryCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.PrimaryCodingKeys;
}

uint64_t _s12AppleIDSetup11SignInModelV14DeviceUserKindO18ExistingCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_236556814 + 4 * byte_2365C3AB4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_236556834 + 4 * byte_2365C3AB9[v4]))();
}

_BYTE *sub_236556814(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_236556834(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23655683C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_236556844(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23655684C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_236556854(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.GuestCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.GuestCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SignInModel.State.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2365568BC + 4 * byte_2365C3AC3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2365568F0 + 4 * byte_2365C3ABE[v4]))();
}

uint64_t sub_2365568F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2365568F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236556900);
  return result;
}

uint64_t sub_23655690C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236556914);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_236556918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236556920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.State.CodingKeys()
{
  return &type metadata for SignInModel.State.CodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.State.InitialCodingKeys()
{
  return &type metadata for SignInModel.State.InitialCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.State.SigningInCodingKeys()
{
  return &type metadata for SignInModel.State.SigningInCodingKeys;
}

uint64_t storeEnumTagSinglePayload for SignInModel.State.AlertCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2365569A8 + 4 * byte_2365C3ACD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2365569DC + 4 * byte_2365C3AC8[v4]))();
}

uint64_t sub_2365569DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2365569E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2365569ECLL);
  return result;
}

uint64_t sub_2365569F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236556A00);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_236556A04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236556A0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.State.AlertCodingKeys()
{
  return &type metadata for SignInModel.State.AlertCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.State.FinishedCodingKeys()
{
  return &type metadata for SignInModel.State.FinishedCodingKeys;
}

uint64_t getEnumTagSinglePayload for SignInModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SignInModel.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_236556B14 + 4 * byte_2365C3AD7[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_236556B48 + 4 * byte_2365C3AD2[v4]))();
}

uint64_t sub_236556B48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_236556B50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x236556B58);
  return result;
}

uint64_t sub_236556B64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x236556B6CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_236556B70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_236556B78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.CodingKeys()
{
  return &type metadata for SignInModel.CodingKeys;
}

unint64_t sub_236556B98()
{
  unint64_t result;

  result = qword_2563EBAB8;
  if (!qword_2563EBAB8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4034, &type metadata for SignInModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAB8);
  }
  return result;
}

unint64_t sub_236556BE0()
{
  unint64_t result;

  result = qword_2563EBAC0;
  if (!qword_2563EBAC0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C413C, &type metadata for SignInModel.State.AlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAC0);
  }
  return result;
}

unint64_t sub_236556C28()
{
  unint64_t result;

  result = qword_2563EBAC8;
  if (!qword_2563EBAC8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4294, &type metadata for SignInModel.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAC8);
  }
  return result;
}

unint64_t sub_236556C70()
{
  unint64_t result;

  result = qword_2563EBAD0;
  if (!qword_2563EBAD0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C434C, &type metadata for SignInModel.DeviceUserKind.GuestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAD0);
  }
  return result;
}

unint64_t sub_236556CB8()
{
  unint64_t result;

  result = qword_2563EBAD8;
  if (!qword_2563EBAD8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4454, &type metadata for SignInModel.DeviceUserKind.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAD8);
  }
  return result;
}

unint64_t sub_236556D00()
{
  unint64_t result;

  result = qword_2563EBAE0;
  if (!qword_2563EBAE0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C450C, &type metadata for SignInModel.DeviceUserKind.ExistingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAE0);
  }
  return result;
}

unint64_t sub_236556D48()
{
  unint64_t result;

  result = qword_2563EBAE8;
  if (!qword_2563EBAE8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4614, &type metadata for SignInModel.DeviceUserKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAE8);
  }
  return result;
}

unint64_t sub_236556D90()
{
  unint64_t result;

  result = qword_2563EBAF0;
  if (!qword_2563EBAF0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4534, &type metadata for SignInModel.DeviceUserKind.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAF0);
  }
  return result;
}

unint64_t sub_236556DD8()
{
  unint64_t result;

  result = qword_2563EBAF8;
  if (!qword_2563EBAF8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C455C, &type metadata for SignInModel.DeviceUserKind.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBAF8);
  }
  return result;
}

unint64_t sub_236556E20()
{
  unint64_t result;

  result = qword_2563EBB00;
  if (!qword_2563EBB00)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C447C, &type metadata for SignInModel.DeviceUserKind.ExistingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB00);
  }
  return result;
}

unint64_t sub_236556E68()
{
  unint64_t result;

  result = qword_2563EBB08;
  if (!qword_2563EBB08)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C44A4, &type metadata for SignInModel.DeviceUserKind.ExistingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB08);
  }
  return result;
}

unint64_t sub_236556EB0()
{
  unint64_t result;

  result = qword_2563EBB10;
  if (!qword_2563EBB10)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C43C4, &type metadata for SignInModel.DeviceUserKind.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB10);
  }
  return result;
}

unint64_t sub_236556EF8()
{
  unint64_t result;

  result = qword_2563EBB18;
  if (!qword_2563EBB18)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C43EC, &type metadata for SignInModel.DeviceUserKind.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB18);
  }
  return result;
}

unint64_t sub_236556F40()
{
  unint64_t result;

  result = qword_2563EBB20;
  if (!qword_2563EBB20)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4374, &type metadata for SignInModel.DeviceUserKind.PrimaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB20);
  }
  return result;
}

unint64_t sub_236556F88()
{
  unint64_t result;

  result = qword_2563EBB28;
  if (!qword_2563EBB28)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C439C, &type metadata for SignInModel.DeviceUserKind.PrimaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB28);
  }
  return result;
}

unint64_t sub_236556FD0()
{
  unint64_t result;

  result = qword_2563EBB30;
  if (!qword_2563EBB30)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C42BC, &type metadata for SignInModel.DeviceUserKind.GuestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB30);
  }
  return result;
}

unint64_t sub_236557018()
{
  unint64_t result;

  result = qword_2563EBB38;
  if (!qword_2563EBB38)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C42E4, &type metadata for SignInModel.DeviceUserKind.GuestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB38);
  }
  return result;
}

unint64_t sub_236557060()
{
  unint64_t result;

  result = qword_2563EBB40;
  if (!qword_2563EBB40)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4584, &type metadata for SignInModel.DeviceUserKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB40);
  }
  return result;
}

unint64_t sub_2365570A8()
{
  unint64_t result;

  result = qword_2563EBB48;
  if (!qword_2563EBB48)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C45AC, &type metadata for SignInModel.DeviceUserKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB48);
  }
  return result;
}

unint64_t sub_2365570F0()
{
  unint64_t result;

  result = qword_2563EBB50;
  if (!qword_2563EBB50)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C41B4, &type metadata for SignInModel.State.InitialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB50);
  }
  return result;
}

unint64_t sub_236557138()
{
  unint64_t result;

  result = qword_2563EBB58;
  if (!qword_2563EBB58)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C41DC, &type metadata for SignInModel.State.InitialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB58);
  }
  return result;
}

unint64_t sub_236557180()
{
  unint64_t result;

  result = qword_2563EBB60;
  if (!qword_2563EBB60)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4164, &type metadata for SignInModel.State.SigningInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB60);
  }
  return result;
}

unint64_t sub_2365571C8()
{
  unint64_t result;

  result = qword_2563EBB68;
  if (!qword_2563EBB68)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C418C, &type metadata for SignInModel.State.SigningInCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB68);
  }
  return result;
}

unint64_t sub_236557210()
{
  unint64_t result;

  result = qword_2563EBB70;
  if (!qword_2563EBB70)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C40AC, &type metadata for SignInModel.State.AlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB70);
  }
  return result;
}

unint64_t sub_236557258()
{
  unint64_t result;

  result = qword_2563EBB78;
  if (!qword_2563EBB78)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C40D4, &type metadata for SignInModel.State.AlertCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB78);
  }
  return result;
}

unint64_t sub_2365572A0()
{
  unint64_t result;

  result = qword_2563EBB80;
  if (!qword_2563EBB80)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C405C, &type metadata for SignInModel.State.FinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB80);
  }
  return result;
}

unint64_t sub_2365572E8()
{
  unint64_t result;

  result = qword_2563EBB88;
  if (!qword_2563EBB88)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4084, &type metadata for SignInModel.State.FinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB88);
  }
  return result;
}

unint64_t sub_236557330()
{
  unint64_t result;

  result = qword_2563EBB90;
  if (!qword_2563EBB90)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C4204, &type metadata for SignInModel.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB90);
  }
  return result;
}

unint64_t sub_236557378()
{
  unint64_t result;

  result = qword_2563EBB98;
  if (!qword_2563EBB98)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C422C, &type metadata for SignInModel.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBB98);
  }
  return result;
}

unint64_t sub_2365573C0()
{
  unint64_t result;

  result = qword_2563EBBA0;
  if (!qword_2563EBBA0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C3FA4, &type metadata for SignInModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBBA0);
  }
  return result;
}

unint64_t sub_236557408()
{
  unint64_t result;

  result = qword_2563EBBA8;
  if (!qword_2563EBBA8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C3FCC, &type metadata for SignInModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBBA8);
  }
  return result;
}

uint64_t sub_23655744C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C75736552707273 && a2 == 0xEA00000000007374 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002365CDA50 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5364657269736564 && a2 == 0xEF73656369767265 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000002365CDA70 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002365CDAA0 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002365CDA30 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000002365CDAC0 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7355656369766564 && a2 == 0xEE00646E694B7265 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6F7372655077656ELL && a2 == 0xEC0000004449616ELL || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C616E69467369 && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

uint64_t sub_236557958(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465747065636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_236557AA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49676E696E676973 && a2 == 0xE90000000000006ELL || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7472656C61 && a2 == 0xE500000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_236557C60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697473697865 && a2 == 0xE800000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7972616D697270 && a2 == 0xE700000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7473657567 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_236557E70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v12 = *(_OWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 184);
  sub_236499C2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  sub_236499C2C(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

unint64_t sub_236557F30()
{
  unint64_t result;

  result = qword_2563EBBB0;
  if (!qword_2563EBBB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2563EBBB0);
  }
  return result;
}

void __swiftcall Symptom.into()(AISSymptom *__return_ptr retstr)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(unsigned __int8 *)(v1 + 88);
  if (v2 > 3)
    v4 = 0;
  else
    v4 = qword_2365C5668[v2];
  v5 = objc_allocWithZone((Class)AISSymptom);
  swift_bridgeObjectRetain();
  v6 = (void *)sub_2365B0038();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_initWithAltDSID_priority_problemFlag_errorInfo_, v6, v3, v4, sub_2365B092C(), 0x296C6C756E28, 0xE600000000000000);
  swift_unknownObjectRelease();

}

uint64_t Symptom.Kind.legacyProblemFlag.getter()
{
  _QWORD *v0;

  if (*v0 > 3uLL)
    return 0;
  else
    return qword_2365C5668[*v0];
}

uint64_t Symptom.accountID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(_QWORD *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Symptom.altDSID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t Symptom.kind.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 80);
  *a1 = v2;
  return sub_236487E58(v2);
}

void Symptom.priority.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 88);
}

__n128 Symptom.init(accountID:kind:priority:errorInfo:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __n128 result;
  __int128 v9;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *a2;
  v6 = *a3;
  *(_QWORD *)a4 = *(_QWORD *)a1;
  *(_QWORD *)(a4 + 8) = v4;
  v7 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a4 + 32) = v7;
  result = *(__n128 *)(a1 + 48);
  v9 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(a4 + 48) = result;
  *(_OWORD *)(a4 + 64) = v9;
  *(_QWORD *)(a4 + 80) = v5;
  *(_BYTE *)(a4 + 88) = v6;
  return result;
}

double Symptom.init(altDSID:kind:priority:errorInfo:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  char v6;
  double result;

  v5 = *a3;
  v6 = *a4;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(_QWORD *)(a5 + 80) = v5;
  *(_BYTE *)(a5 + 88) = v6;
  return result;
}

uint64_t static Symptom.ErrorInfo.== infix(_:_:)()
{
  return 1;
}

uint64_t Symptom.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;

  v3 = *(_QWORD *)(v1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      swift_bridgeObjectRetain();
      sub_2364830F0(a1, v3);
      sub_236487E68(v3);
      break;
  }
  return sub_2365B0A04();
}

uint64_t sub_2365582C8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2365582FC + 4 * byte_2365C4A04[*v0]))(0x49746E756F636361, 0xE900000000000044);
}

uint64_t sub_2365582FC()
{
  return 1684957547;
}

uint64_t sub_23655830C()
{
  return 0x797469726F697270;
}

uint64_t sub_236558324()
{
  return 0x666E49726F727265;
}

uint64_t sub_23655833C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23655BE94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_236558360()
{
  sub_23655AA40();
  return sub_2365B0AD0();
}

uint64_t sub_236558388()
{
  sub_23655AA40();
  return sub_2365B0ADC();
}

uint64_t Symptom.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  char v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBBB8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v22 = v1[1];
  v23 = v8;
  v9 = v1[2];
  v20 = v1[3];
  v21 = v9;
  v10 = *((_QWORD *)v1 + 8);
  v11 = *((_QWORD *)v1 + 9);
  v19 = *((_QWORD *)v1 + 10);
  v30 = *((unsigned __int8 *)v1 + 88);
  v12 = a1[3];
  v13 = a1;
  v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_23655AA40();
  sub_2365B0AAC();
  v24 = v23;
  v25 = v22;
  v26 = v21;
  v27 = v20;
  v28 = v10;
  v29 = v11;
  v31 = 0;
  sub_2364A51A8();
  sub_2365B0824();
  if (!v2)
  {
    v16 = v30;
    *(_QWORD *)&v24 = v19;
    v31 = 1;
    sub_23655AA84();
    sub_2365B0824();
    LOBYTE(v24) = v16;
    v31 = 2;
    sub_23655AAC8();
    sub_2365B0824();
    LOBYTE(v24) = 3;
    sub_23655AB0C();
    sub_2365B0824();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
}

uint64_t Symptom.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 80);
  sub_2365B09E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      swift_bridgeObjectRetain();
      sub_2364830F0((uint64_t)v3, v1);
      sub_236487E68(v1);
      break;
  }
  sub_2365B0A04();
  return sub_2365B0A34();
}

unint64_t Symptom.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  char v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBBE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23655AA40();
  sub_2365B0A7C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v43 = 0;
  sub_2364A5230();
  sub_2365B0770();
  v9 = v33;
  v26 = v32;
  v27 = a2;
  v10 = v35;
  v11 = v37;
  v24 = v36;
  v25 = v34;
  v31 = v39;
  v12 = v41;
  v22 = v40;
  v23 = v38;
  v43 = 1;
  sub_23655AB50();
  v28 = v9;
  swift_bridgeObjectRetain();
  v30 = v10;
  swift_bridgeObjectRetain();
  v29 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2365B0770();
  v13 = v32;
  v43 = 2;
  sub_236487E58(v32);
  sub_23655AB94();
  sub_2365B0770();
  v21 = v13;
  LODWORD(v13) = v32;
  LOBYTE(v32) = 3;
  sub_23655ABD8();
  sub_2365B0770();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v28;
  swift_bridgeObjectRetain();
  v16 = v30;
  swift_bridgeObjectRetain();
  v17 = v29;
  swift_bridgeObjectRetain();
  v18 = v31;
  swift_bridgeObjectRetain();
  v42 = v13;
  swift_bridgeObjectRetain();
  v19 = v21;
  sub_236487E58(v21);
  sub_236487E68(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v27;
  *v27 = v26;
  v20[1] = v15;
  v20[2] = v25;
  v20[3] = v16;
  v20[4] = v24;
  v20[5] = v17;
  v20[6] = v23;
  v20[7] = v18;
  v20[8] = v22;
  v20[9] = v12;
  v20[10] = v19;
  *((_BYTE *)v20 + 88) = v42;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_236487E68(v19);
}

unint64_t sub_236558B48@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return Symptom.init(from:)(a1, a2);
}

uint64_t sub_236558B5C(_QWORD *a1)
{
  return Symptom.encode(to:)(a1);
}

uint64_t sub_236558B7C()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 80);
  sub_2365B09E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2365B008C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      swift_bridgeObjectRetain();
      sub_2364830F0((uint64_t)v3, v1);
      sub_236487E68(v1);
      break;
  }
  sub_2365B0A04();
  return sub_2365B0A34();
}

uint64_t Symptom.Priority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t (*static Symptom.ErrorInfo.empty.modify())()
{
  return nullsub_1;
}

uint64_t sub_236558CEC()
{
  sub_23655AC1C();
  return sub_2365B0AD0();
}

uint64_t sub_236558D14()
{
  sub_23655AC1C();
  return sub_2365B0ADC();
}

uint64_t Symptom.ErrorInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23655AC1C();
  sub_2365B0AAC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Symptom.ErrorInfo.hashValue.getter()
{
  sub_2365B09E0();
  return sub_2365B0A34();
}

uint64_t Symptom.ErrorInfo.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_236558E58(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_236558E7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC00);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23655AC1C();
  sub_2365B0AAC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_236558F40()
{
  sub_2365B09E0();
  return sub_2365B0A34();
}

uint64_t sub_236558F74()
{
  sub_2365B09E0();
  return sub_2365B0A34();
}

BOOL static Symptom.Priority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

AppleIDSetup::Symptom::Priority_optional __swiftcall Symptom.Priority.init(rawValue:)(AppleIDSetup::Symptom::Priority_optional rawValue)
{
  AppleIDSetup::Symptom::Priority *v1;
  AppleIDSetup::Symptom::Priority value;

  value = rawValue.value;
  if ((rawValue.value & 0xFC) != 0)
    value = AppleIDSetup_Symptom_Priority_unknownDefault;
  *v1 = value;
  return rawValue;
}

AppleIDSetup::Symptom::Priority_optional sub_236558FD0(Swift::UInt8 *a1)
{
  return Symptom.Priority.init(rawValue:)(*a1);
}

BOOL sub_236558FD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_236558FEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_236559000(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_236559014(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_236559028()
{
  sub_23655C26C();
  return sub_2365B0158();
}

uint64_t sub_236559084()
{
  sub_23655C26C();
  return sub_2365B011C();
}

uint64_t Symptom.Kind.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  switch(*v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      result = sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      result = sub_2364830F0(a1, v3);
      break;
  }
  return result;
}

uint64_t sub_236559160(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_236559190 + 4 * byte_2365C4A14[a1]))(0x65726F7473, 0xE500000000000000);
}

unint64_t sub_236559190()
{
  return 0xD000000000000013;
}

uint64_t sub_2365591B8()
{
  return 0x53676E697373696DLL;
}

uint64_t sub_2365591DC()
{
  return 0x64756F6C63;
}

uint64_t sub_2365591EC()
{
  sub_23655ACA4();
  return sub_2365B0AD0();
}

uint64_t sub_236559214()
{
  sub_23655ACA4();
  return sub_2365B0ADC();
}

uint64_t sub_23655923C()
{
  sub_23655AD70();
  return sub_2365B0AD0();
}

uint64_t sub_236559264()
{
  sub_23655AD70();
  return sub_2365B0ADC();
}

uint64_t sub_23655928C()
{
  unsigned __int8 *v0;

  return sub_236559160(*v0);
}

uint64_t sub_236559294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23655C04C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2365592B8()
{
  sub_23655AC60();
  return sub_2365B0AD0();
}

uint64_t sub_2365592E0()
{
  sub_23655AC60();
  return sub_2365B0ADC();
}

uint64_t sub_236559308()
{
  sub_23655AD2C();
  return sub_2365B0AD0();
}

uint64_t sub_236559330()
{
  sub_23655AD2C();
  return sub_2365B0ADC();
}

uint64_t sub_236559358()
{
  sub_23655ACE8();
  return sub_2365B0AD0();
}

uint64_t sub_236559380()
{
  sub_23655ACE8();
  return sub_2365B0ADC();
}

uint64_t sub_2365593A8()
{
  sub_23655ADB4();
  return sub_2365B0AD0();
}

uint64_t sub_2365593D0()
{
  sub_23655ADB4();
  return sub_2365B0ADC();
}

uint64_t Symptom.Kind.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC10);
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC18);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC20);
  v33 = *(_QWORD *)(v8 - 8);
  v34 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC28);
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC30);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC38);
  v41 = *(_QWORD *)(v17 - 8);
  v42 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23655AC60();
  sub_2365B0AAC();
  switch(v20)
  {
    case 0:
      v44 = 0;
      sub_23655ADB4();
      v21 = v42;
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      goto LABEL_8;
    case 1:
      v45 = 1;
      sub_23655AD70();
      v21 = v42;
      sub_2365B07B8();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
      goto LABEL_8;
    case 2:
      v46 = 2;
      sub_23655AD2C();
      v26 = v32;
      v21 = v42;
      sub_2365B07B8();
      v28 = v33;
      v27 = v34;
      goto LABEL_7;
    case 3:
      v48 = 4;
      sub_23655ACA4();
      v26 = v35;
      v21 = v42;
      sub_2365B07B8();
      v28 = v36;
      v27 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
LABEL_8:
      result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v21);
      break;
    default:
      v47 = 3;
      sub_23655ACE8();
      v22 = v38;
      v23 = v42;
      sub_2365B07B8();
      v43 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5E50);
      sub_23655ADF8((unint64_t *)&qword_2563E5E58, &qword_2563E4630, (uint64_t)&protocol conformance descriptor for AIDAServiceType, MEMORY[0x24BEE1700]);
      v24 = v40;
      sub_2365B0824();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v22, v24);
      result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v19, v23);
      break;
  }
  return result;
}

uint64_t Symptom.Kind.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2365B09E0();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      sub_2364830F0((uint64_t)v3, v1);
      break;
  }
  return sub_2365B0A34();
}

uint64_t Symptom.Kind.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;

  v33 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC70);
  v26 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v28 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC78);
  v27 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v31 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC80);
  v23[3] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v30 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC88);
  v23[4] = *(_QWORD *)(v6 - 8);
  v23[5] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v29 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC90);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBC98);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23655AC60();
  v17 = v35;
  sub_2365B0A7C();
  if (!v17)
  {
    v23[1] = v8;
    v23[2] = v11;
    v23[0] = v9;
    v35 = v13;
    v18 = sub_2365B07A0();
    if (*(_QWORD *)(v18 + 16) == 1)
      __asm { BR              X10 }
    v19 = sub_2365B05B4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E47A8);
    *v21 = &type metadata for Symptom.Kind;
    sub_2365B0704();
    sub_2365B059C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

void sub_236559C10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 1;
  sub_23655AD70();
  sub_2365B06F8();
  if (!v3)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 208) + 8))(v2, *(_QWORD *)(v5 - 200));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v4);
    *v0 = 1;
    JUMPOUT(0x236559BE8);
  }
  JUMPOUT(0x236559BC8);
}

void sub_236559C80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 67) = 2;
  sub_23655AD2C();
  sub_2365B06F8();
  if (!v3)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 216) + 8))(v2, *(_QWORD *)(v5 - 192));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v4);
    *v0 = 2;
    JUMPOUT(0x236559BE8);
  }
  JUMPOUT(0x236559BC8);
}

void sub_236559CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v5 - 128) = a1;
  *(_BYTE *)(v5 - 66) = 3;
  sub_23655ACE8();
  v6 = v3;
  sub_2365B06F8();
  if (!v2)
  {
    *(_QWORD *)(v5 - 144) = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5E50);
    sub_23655ADF8((unint64_t *)&qword_2563E5ED0, &qword_2563E4660, (uint64_t)&protocol conformance descriptor for AIDAServiceType, MEMORY[0x24BEE1720]);
    v7 = *(_QWORD *)(v5 - 184);
    sub_2365B0770();
    v8 = *(_QWORD *)(v5 - 104);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 168) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v5 - 144), v4);
    JUMPOUT(0x236559EB0);
  }
  JUMPOUT(0x236559BCCLL);
}

void sub_236559D3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 65) = 4;
  sub_23655ACA4();
  v6 = *(_QWORD *)(v5 - 160);
  sub_2365B06F8();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 176) + 8))(v6, v3);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 104) + 8))(v1, v4);
    *v0 = 3;
    JUMPOUT(0x236559BE8);
  }
  JUMPOUT(0x236559BCCLL);
}

uint64_t sub_236559EBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Symptom.Kind.init(from:)(a1, a2);
}

uint64_t sub_236559ED0(_QWORD *a1)
{
  return Symptom.Kind.encode(to:)(a1);
}

uint64_t sub_236559EE8()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2365B09E0();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      sub_2364830F0((uint64_t)v3, v1);
      break;
  }
  return sub_2365B0A34();
}

uint64_t sub_236559F8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  switch(*v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      result = sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      result = sub_2364830F0(a1, v3);
      break;
  }
  return result;
}

uint64_t sub_23655A01C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_2365B09E0();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_2365B09F8();
      break;
    default:
      sub_2365B09F8();
      sub_2364830F0((uint64_t)v3, v1);
      break;
  }
  return sub_2365B0A34();
}

uint64_t Symptom.Priority.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23655A0F4 + 4 * byte_2365C4A32[*v0]))(0x6C61636974697263, 0xEC00000029332820);
}

uint64_t sub_23655A0F4()
{
  return 0x29302820776F6CLL;
}

uint64_t sub_23655A10C()
{
  return 0x28206D756964656DLL;
}

uint64_t sub_23655A128()
{
  return 0x2932282068676968;
}

uint64_t Symptom.Priority.debugDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23655A178 + 4 * byte_2365C4A36[*v0]))(0x6C61636974697263, 0xEC00000029332820);
}

uint64_t sub_23655A178()
{
  return 0x29302820776F6CLL;
}

uint64_t sub_23655A190()
{
  return 0x28206D756964656DLL;
}

uint64_t sub_23655A1AC()
{
  return 0x2932282068676968;
}

uint64_t sub_23655A1C4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23655A1FC + 4 * byte_2365C4A3A[*v0]))(0x6C61636974697263, 0xEC00000029332820);
}

uint64_t sub_23655A1FC()
{
  return 0x29302820776F6CLL;
}

uint64_t sub_23655A214()
{
  return 0x28206D756964656DLL;
}

uint64_t sub_23655A230()
{
  return 0x2932282068676968;
}

uint64_t sub_23655A248()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23655A280 + 4 * byte_2365C4A3E[*v0]))(0x6C61636974697263, 0xEC00000029332820);
}

uint64_t sub_23655A280()
{
  return 0x29302820776F6CLL;
}

uint64_t sub_23655A298()
{
  return 0x28206D756964656DLL;
}

uint64_t sub_23655A2B4()
{
  return 0x2932282068676968;
}

uint64_t Symptom.Kind.description.getter()
{
  _QWORD *v0;
  uint64_t result;

  result = 0x65726F7473;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 7365731;
      break;
    case 2:
      result = 0x73736F6C2D6B63;
      break;
    case 3:
      result = 0x64756F6C63;
      break;
    default:
      type metadata accessor for AIDAServiceType(0);
      sub_2365257F0((unint64_t *)&qword_2542A82D0, (uint64_t)&unk_2365B23B4);
      sub_2365B032C();
      sub_2365B00B0();
      swift_bridgeObjectRelease();
      result = 0x20676E697373696DLL;
      break;
  }
  return result;
}

uint64_t Symptom.Kind.debugDescription.getter()
{
  unint64_t *v0;
  unint64_t v1;
  uint64_t result;

  v1 = *v0;
  result = 0x65726F7473;
  switch(*v0)
  {
    case 0uLL:
      return result;
    case 1uLL:
      result = 7365731;
      break;
    case 2uLL:
      result = 0x73736F6C2D6B63;
      break;
    case 3uLL:
      result = 0x64756F6C63;
      break;
    default:
      type metadata accessor for AIDAServiceType(0);
      sub_2365257F0((unint64_t *)&qword_2542A82D0, (uint64_t)&unk_2365B23B4);
      swift_bridgeObjectRetain();
      sub_2365B032C();
      sub_2365B00B0();
      swift_bridgeObjectRelease();
      sub_236487E68(v1);
      result = 0x20676E697373696DLL;
      break;
  }
  return result;
}

void Symptom.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(unsigned __int8 *)(v0 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  IdMSAccount.ID.description.getter();
  sub_2365B00B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2365B00B0();
  switch(v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      break;
    default:
      sub_236487E58(v1);
      type metadata accessor for AIDAServiceType(0);
      sub_2365257F0((unint64_t *)&qword_2542A82D0, (uint64_t)&unk_2365B23B4);
      sub_2365B032C();
      sub_2365B00B0();
      swift_bridgeObjectRelease();
      break;
  }
  sub_2365B00B0();
  swift_bridgeObjectRelease();
  sub_236487E68(v1);
  sub_2365B00B0();
  __asm { BR              X9 }
}

uint64_t sub_23655A6DC()
{
  uint64_t v1;

  sub_2365B00B0();
  swift_bridgeObjectRelease();
  sub_2365B00B0();
  return v1;
}

uint64_t Symptom.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  Symptom.description.getter();
  v1 = v0;
  sub_2365B0080();
  swift_bridgeObjectRetain();
  sub_2365B00B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_23655A824()
{
  uint64_t v0;
  uint64_t v1;

  Symptom.description.getter();
  v1 = v0;
  sub_2365B0080();
  swift_bridgeObjectRetain();
  sub_2365B00B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t _s12AppleIDSetup7SymptomV4KindO2eeoiySbAE_AEtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  switch(*a1)
  {
    case 0uLL:
      if (v3)
        goto LABEL_12;
      v2 = 0;
      v4 = 1;
      break;
    case 1uLL:
      if (v3 != 1)
        goto LABEL_12;
      v2 = 1;
      v4 = 1;
      break;
    case 2uLL:
      if (v3 != 2)
        goto LABEL_12;
      v4 = 1;
      v2 = 2;
      break;
    case 3uLL:
      if (v3 != 3)
        goto LABEL_12;
      v4 = 1;
      v2 = 3;
      break;
    default:
      if (v3 < 4)
      {
LABEL_12:
        sub_236487E58(*a2);
        sub_236487E58(v2);
        v4 = 0;
      }
      else
      {
        sub_236487E58(*a2);
        sub_236487E58(v2);
        v4 = sub_2365A28C4(v2, v3);
      }
      break;
  }
  sub_236487E68(v2);
  sub_236487E68(v3);
  return v4 & 1;
}

uint64_t _s12AppleIDSetup7SymptomV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  int v5;
  BOOL v6;
  char v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(unsigned __int8 *)(a1 + 88);
  v4 = *(_QWORD *)(a2 + 80);
  v5 = *(unsigned __int8 *)(a2 + 88);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_2365B08CC(), result = 0, (v7 & 1) != 0))
  {
    v9 = v4;
    v10 = v2;
    return _s12AppleIDSetup7SymptomV4KindO2eeoiySbAE_AEtFZ_0(&v10, &v9) & (v3 == v5);
  }
  return result;
}

unint64_t sub_23655AA40()
{
  unint64_t result;

  result = qword_2563EBBC0;
  if (!qword_2563EBBC0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5614, &type metadata for Symptom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBBC0);
  }
  return result;
}

unint64_t sub_23655AA84()
{
  unint64_t result;

  result = qword_2563EBBC8;
  if (!qword_2563EBBC8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Kind, &type metadata for Symptom.Kind);
    atomic_store(result, (unint64_t *)&qword_2563EBBC8);
  }
  return result;
}

unint64_t sub_23655AAC8()
{
  unint64_t result;

  result = qword_2563EBBD0;
  if (!qword_2563EBBD0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Priority, &type metadata for Symptom.Priority);
    atomic_store(result, (unint64_t *)&qword_2563EBBD0);
  }
  return result;
}

unint64_t sub_23655AB0C()
{
  unint64_t result;

  result = qword_2563EBBD8;
  if (!qword_2563EBBD8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.ErrorInfo, &type metadata for Symptom.ErrorInfo);
    atomic_store(result, (unint64_t *)&qword_2563EBBD8);
  }
  return result;
}

unint64_t sub_23655AB50()
{
  unint64_t result;

  result = qword_2563EBBE8;
  if (!qword_2563EBBE8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Kind, &type metadata for Symptom.Kind);
    atomic_store(result, (unint64_t *)&qword_2563EBBE8);
  }
  return result;
}

unint64_t sub_23655AB94()
{
  unint64_t result;

  result = qword_2563EBBF0;
  if (!qword_2563EBBF0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Priority, &type metadata for Symptom.Priority);
    atomic_store(result, (unint64_t *)&qword_2563EBBF0);
  }
  return result;
}

unint64_t sub_23655ABD8()
{
  unint64_t result;

  result = qword_2563EBBF8;
  if (!qword_2563EBBF8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.ErrorInfo, &type metadata for Symptom.ErrorInfo);
    atomic_store(result, (unint64_t *)&qword_2563EBBF8);
  }
  return result;
}

unint64_t sub_23655AC1C()
{
  unint64_t result;

  result = qword_2563EBC08;
  if (!qword_2563EBC08)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C55C4, &type metadata for Symptom.ErrorInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBC08);
  }
  return result;
}

unint64_t sub_23655AC60()
{
  unint64_t result;

  result = qword_2563EBC40;
  if (!qword_2563EBC40)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5574, &type metadata for Symptom.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBC40);
  }
  return result;
}

unint64_t sub_23655ACA4()
{
  unint64_t result;

  result = qword_2563EBC48;
  if (!qword_2563EBC48)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5524, &type metadata for Symptom.Kind.CloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBC48);
  }
  return result;
}

unint64_t sub_23655ACE8()
{
  unint64_t result;

  result = qword_2563EBC50;
  if (!qword_2563EBC50)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C54D4, &type metadata for Symptom.Kind.MissingServicesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBC50);
  }
  return result;
}

unint64_t sub_23655AD2C()
{
  unint64_t result;

  result = qword_2563EBC58;
  if (!qword_2563EBC58)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5484, &type metadata for Symptom.Kind.ContinuationKeyLossCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBC58);
  }
  return result;
}

unint64_t sub_23655AD70()
{
  unint64_t result;

  result = qword_2563EBC60;
  if (!qword_2563EBC60)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5434, &type metadata for Symptom.Kind.CloudDataProtectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBC60);
  }
  return result;
}

unint64_t sub_23655ADB4()
{
  unint64_t result;

  result = qword_2563EBC68;
  if (!qword_2563EBC68)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C53E4, &type metadata for Symptom.Kind.StoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBC68);
  }
  return result;
}

uint64_t sub_23655ADF8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2563E5E50);
    v10 = sub_2365257F0(a2, a3);
    result = MEMORY[0x23B7F5164](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23655AE74(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23648B644, (uint64_t (*)(void))sub_23648B5BC, (uint64_t (*)(void))sub_2364AA56C);
}

unint64_t sub_23655AE94()
{
  unint64_t result;

  result = qword_2563EBCA0;
  if (!qword_2563EBCA0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom, &type metadata for Symptom);
    atomic_store(result, (unint64_t *)&qword_2563EBCA0);
  }
  return result;
}

uint64_t sub_23655AED8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23655ABD8, (uint64_t (*)(void))sub_23655AB0C, (uint64_t (*)(void))sub_23655AEF4);
}

unint64_t sub_23655AEF4()
{
  unint64_t result;

  result = qword_2563EBCA8;
  if (!qword_2563EBCA8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.ErrorInfo, &type metadata for Symptom.ErrorInfo);
    atomic_store(result, (unint64_t *)&qword_2563EBCA8);
  }
  return result;
}

unint64_t sub_23655AF3C()
{
  unint64_t result;

  result = qword_2563EBCB0;
  if (!qword_2563EBCB0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.ErrorInfo, &type metadata for Symptom.ErrorInfo);
    atomic_store(result, (unint64_t *)&qword_2563EBCB0);
  }
  return result;
}

unint64_t sub_23655AF84()
{
  unint64_t result;

  result = qword_2563EBCB8;
  if (!qword_2563EBCB8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Priority, &type metadata for Symptom.Priority);
    atomic_store(result, (unint64_t *)&qword_2563EBCB8);
  }
  return result;
}

uint64_t sub_23655AFC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23655AB94, (uint64_t (*)(void))sub_23655AAC8, (uint64_t (*)(void))sub_23655AFE4);
}

unint64_t sub_23655AFE4()
{
  unint64_t result;

  result = qword_2563EBCC0;
  if (!qword_2563EBCC0)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Priority, &type metadata for Symptom.Priority);
    atomic_store(result, (unint64_t *)&qword_2563EBCC0);
  }
  return result;
}

uint64_t sub_23655B028(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_23645EB14(a1, a2, a3, (uint64_t (*)(void))sub_23655AB50, (uint64_t (*)(void))sub_23655AA84, (uint64_t (*)(void))sub_23651FA60);
}

unint64_t sub_23655B048()
{
  unint64_t result;

  result = qword_2563EBCC8;
  if (!qword_2563EBCC8)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Kind, &type metadata for Symptom.Kind);
    atomic_store(result, (unint64_t *)&qword_2563EBCC8);
  }
  return result;
}

unint64_t destroy for Symptom(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 80);
  if (result >= 4)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for Symptom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >= 4)
    swift_bridgeObjectRetain();
  *(_QWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for Symptom(uint64_t a1, uint64_t a2)
{
  unint64_t *v4;
  unint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (unint64_t *)(a1 + 80);
  v5 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) >= 4uLL)
  {
    if (v5 >= 4)
    {
      *v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23655B2C0(a1 + 80);
      *v4 = *(_QWORD *)(a2 + 80);
    }
  }
  else
  {
    *v4 = v5;
    if (v5 >= 4)
      swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t sub_23655B2C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563E5E50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for Symptom(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = (unint64_t *)(a1 + 80);
  v10 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) >= 4uLL)
  {
    if (v10 >= 4)
    {
      *v9 = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_23655B2C0(a1 + 80);
  }
  *v9 = v10;
LABEL_6:
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for Symptom(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Symptom(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Symptom()
{
  return &type metadata for Symptom;
}

ValueMetadata *type metadata accessor for Symptom.ErrorInfo()
{
  return &type metadata for Symptom.ErrorInfo;
}

ValueMetadata *type metadata accessor for Symptom.Priority()
{
  return &type metadata for Symptom.Priority;
}

uint64_t *initializeBufferWithCopyOfBuffer for Symptom.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for Symptom.Kind(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for Symptom.Kind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for Symptom.Kind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Symptom.Kind(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Symptom.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

uint64_t sub_23655B670(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23655B688(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Symptom.Kind()
{
  return &type metadata for Symptom.Kind;
}

uint64_t storeEnumTagSinglePayload for Symptom.Kind.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23655B704 + 4 * byte_2365C4A5B[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23655B738 + 4 * byte_2365C4A56[v4]))();
}

uint64_t sub_23655B738(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23655B740(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23655B748);
  return result;
}

uint64_t sub_23655B754(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23655B75CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23655B760(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23655B768(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Symptom.Kind.CodingKeys()
{
  return &type metadata for Symptom.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.Kind.StoreCodingKeys()
{
  return &type metadata for Symptom.Kind.StoreCodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.Kind.CloudDataProtectionCodingKeys()
{
  return &type metadata for Symptom.Kind.CloudDataProtectionCodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.Kind.ContinuationKeyLossCodingKeys()
{
  return &type metadata for Symptom.Kind.ContinuationKeyLossCodingKeys;
}

uint64_t storeEnumTagSinglePayload for Symptom.Kind.MissingServicesCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23655B7F4 + 4 * byte_2365C4A60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23655B814 + 4 * byte_2365C4A65[v4]))();
}

_BYTE *sub_23655B7F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23655B814(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23655B81C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23655B824(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23655B82C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23655B834(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Symptom.Kind.MissingServicesCodingKeys()
{
  return &type metadata for Symptom.Kind.MissingServicesCodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.Kind.CloudCodingKeys()
{
  return &type metadata for Symptom.Kind.CloudCodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.ErrorInfo.CodingKeys()
{
  return &type metadata for Symptom.ErrorInfo.CodingKeys;
}

uint64_t _s12AppleIDSetup7SymptomV8PriorityOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23655B8BC + 4 * byte_2365C4A6F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23655B8F0 + 4 * byte_2365C4A6A[v4]))();
}

uint64_t sub_23655B8F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23655B8F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23655B900);
  return result;
}

uint64_t sub_23655B90C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23655B914);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23655B918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23655B920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Symptom.CodingKeys()
{
  return &type metadata for Symptom.CodingKeys;
}

unint64_t sub_23655B940()
{
  unint64_t result;

  result = qword_2563EBCD0;
  if (!qword_2563EBCD0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C50BC, &type metadata for Symptom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBCD0);
  }
  return result;
}

unint64_t sub_23655B988()
{
  unint64_t result;

  result = qword_2563EBCD8;
  if (!qword_2563EBCD8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5214, &type metadata for Symptom.Kind.MissingServicesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBCD8);
  }
  return result;
}

unint64_t sub_23655B9D0()
{
  unint64_t result;

  result = qword_2563EBCE0;
  if (!qword_2563EBCE0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C53BC, &type metadata for Symptom.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBCE0);
  }
  return result;
}

unint64_t sub_23655BA18()
{
  unint64_t result;

  result = qword_2563EBCE8;
  if (!qword_2563EBCE8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C52DC, &type metadata for Symptom.Kind.StoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBCE8);
  }
  return result;
}

unint64_t sub_23655BA60()
{
  unint64_t result;

  result = qword_2563EBCF0;
  if (!qword_2563EBCF0)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5304, &type metadata for Symptom.Kind.StoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBCF0);
  }
  return result;
}

unint64_t sub_23655BAA8()
{
  unint64_t result;

  result = qword_2563EBCF8;
  if (!qword_2563EBCF8)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C528C, &type metadata for Symptom.Kind.CloudDataProtectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBCF8);
  }
  return result;
}

unint64_t sub_23655BAF0()
{
  unint64_t result;

  result = qword_2563EBD00;
  if (!qword_2563EBD00)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C52B4, &type metadata for Symptom.Kind.CloudDataProtectionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD00);
  }
  return result;
}

unint64_t sub_23655BB38()
{
  unint64_t result;

  result = qword_2563EBD08;
  if (!qword_2563EBD08)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C523C, &type metadata for Symptom.Kind.ContinuationKeyLossCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD08);
  }
  return result;
}

unint64_t sub_23655BB80()
{
  unint64_t result;

  result = qword_2563EBD10;
  if (!qword_2563EBD10)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5264, &type metadata for Symptom.Kind.ContinuationKeyLossCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD10);
  }
  return result;
}

unint64_t sub_23655BBC8()
{
  unint64_t result;

  result = qword_2563EBD18;
  if (!qword_2563EBD18)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5184, &type metadata for Symptom.Kind.MissingServicesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD18);
  }
  return result;
}

unint64_t sub_23655BC10()
{
  unint64_t result;

  result = qword_2563EBD20;
  if (!qword_2563EBD20)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C51AC, &type metadata for Symptom.Kind.MissingServicesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD20);
  }
  return result;
}

unint64_t sub_23655BC58()
{
  unint64_t result;

  result = qword_2563EBD28;
  if (!qword_2563EBD28)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5134, &type metadata for Symptom.Kind.CloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD28);
  }
  return result;
}

unint64_t sub_23655BCA0()
{
  unint64_t result;

  result = qword_2563EBD30;
  if (!qword_2563EBD30)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C515C, &type metadata for Symptom.Kind.CloudCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD30);
  }
  return result;
}

unint64_t sub_23655BCE8()
{
  unint64_t result;

  result = qword_2563EBD38;
  if (!qword_2563EBD38)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C532C, &type metadata for Symptom.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD38);
  }
  return result;
}

unint64_t sub_23655BD30()
{
  unint64_t result;

  result = qword_2563EBD40;
  if (!qword_2563EBD40)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5354, &type metadata for Symptom.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD40);
  }
  return result;
}

unint64_t sub_23655BD78()
{
  unint64_t result;

  result = qword_2563EBD48;
  if (!qword_2563EBD48)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C50E4, &type metadata for Symptom.ErrorInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD48);
  }
  return result;
}

unint64_t sub_23655BDC0()
{
  unint64_t result;

  result = qword_2563EBD50;
  if (!qword_2563EBD50)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C510C, &type metadata for Symptom.ErrorInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD50);
  }
  return result;
}

unint64_t sub_23655BE08()
{
  unint64_t result;

  result = qword_2563EBD58;
  if (!qword_2563EBD58)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C502C, &type metadata for Symptom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD58);
  }
  return result;
}

unint64_t sub_23655BE50()
{
  unint64_t result;

  result = qword_2563EBD60;
  if (!qword_2563EBD60)
  {
    result = MEMORY[0x23B7F5164](&unk_2365C5054, &type metadata for Symptom.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2563EBD60);
  }
  return result;
}

uint64_t sub_23655BE94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000044;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x666E49726F727265 && a2 == 0xE90000000000006FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23655C04C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65726F7473 && a2 == 0xE500000000000000;
  if (v2 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002365CDAE0 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002365CDB00 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53676E697373696DLL && a2 == 0xEF73656369767265 || (sub_2365B08CC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64756F6C63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_2365B08CC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_23655C26C()
{
  unint64_t result;

  result = qword_2563EBD68;
  if (!qword_2563EBD68)
  {
    result = MEMORY[0x23B7F5164](&protocol conformance descriptor for Symptom.Priority, &type metadata for Symptom.Priority);
    atomic_store(result, (unint64_t *)&qword_2563EBD68);
  }
  return result;
}

ACAccount_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ACAccountStore.account(for:aidaServiceType:)(Swift::String a1, __C::AIDAServiceType aidaServiceType)
{
  void *v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  unint64_t v14;
  id v15;
  id v16;
  Swift::Bool v17;
  uint64_t v18;
  NSString v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  objc_class *v27;
  id v28[2];
  ACAccount_optional result;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v28[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = sub_23655C744();
  if (v7)
  {
    v8 = v6;
    v9 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2563E6C78);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_2365B6A20;
    *(_QWORD *)(v10 + 32) = v8;
    *(_QWORD *)(v10 + 40) = v9;
    v11 = (void *)sub_2365B0164();
    swift_bridgeObjectRelease();
    v28[0] = 0;
    v12 = objc_msgSend(v2, sel_accountsWithAccountTypeIdentifiers_error_, v11, v28);

    v13 = v28[0];
    if (v12)
    {
      sub_2364DB7F8();
      v14 = sub_2365B0170();
      v15 = v13;

      swift_bridgeObjectRetain();
      v16 = sub_23655C5B4(v14, countAndFlagsBits, (uint64_t)object);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = v28[0];
      sub_2365AF8F4();

      swift_willThrow();
    }
  }
  else
  {
    if (qword_2542A79D8 != -1)
      swift_once();
    v18 = sub_2365AFC00();
    __swift_project_value_buffer(v18, (uint64_t)qword_2542A79C0);
    v19 = aidaServiceType._rawValue;
    v20 = sub_2365AFBE8();
    v21 = sub_2365B038C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (void *)swift_slowAlloc();
      v28[0] = v23;
      *(_DWORD *)v22 = 136315138;
      type metadata accessor for AIDAServiceType(0);
      v24 = v19;
      v25 = sub_2365B0080();
      sub_236468D88(v25, v26, (uint64_t *)v28);
      sub_2365B04A0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23644B000, v20, v21, "No accountType translation for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v23, -1, -1);
      MEMORY[0x23B7F5254](v22, -1, -1);

    }
    else
    {

    }
    v16 = 0;
  }
  v27 = (objc_class *)v16;
  result.value.super.isa = v27;
  result.is_nil = v17;
  return result;
}

void *sub_23655C5B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;

  if (a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_2365B0698())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B7F45A0](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_msgSend(v7, sel_aida_alternateDSID);
      if (v10)
      {
        v11 = v10;
        v12 = sub_2365B005C();
        v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        v16 = sub_2365B08CC();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          goto LABEL_18;
      }

      ++v6;
      if (v9 == v5)
        goto LABEL_21;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23655C744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v0 = sub_2365B005C();
  v2 = v1;
  if (v0 == sub_2365B005C() && v2 == v3)
    goto LABEL_13;
  v5 = sub_2365B08CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    return sub_2365B005C();
  v6 = sub_2365B005C();
  v8 = v7;
  if (v6 == sub_2365B005C() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    return sub_2365B005C();
  }
  v11 = sub_2365B08CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
    return sub_2365B005C();
  v12 = sub_2365B005C();
  v14 = v13;
  if (v12 == sub_2365B005C() && v14 == v15)
    goto LABEL_13;
  v17 = sub_2365B08CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    return sub_2365B005C();
  v18 = sub_2365B005C();
  v20 = v19;
  if (v18 == sub_2365B005C() && v20 == v21)
    goto LABEL_13;
  v22 = sub_2365B08CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v22 & 1) != 0)
    return sub_2365B005C();
  v23 = sub_2365B005C();
  v25 = v24;
  if (v23 == sub_2365B005C() && v25 == v26)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    return sub_2365B005C();
  }
  v27 = sub_2365B08CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) != 0)
    return sub_2365B005C();
  return 0;
}

uint64_t sub_23655C9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2365AFC00();
  __swift_allocate_value_buffer(v0, qword_2563EBD70);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2563EBD70);
  if (qword_2563E42E8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2563E6120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_23655CA5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v1 = OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection);
  v3 = v2;
  if (v2 == 1)
  {
    type metadata accessor for AISDaemonConnection();
    v3 = swift_allocObject();
    v4 = *(void **)(v0 + OBJC_IVAR___AISSignOutController_listenerEndpoint);
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = 0;
    v5 = *(_QWORD *)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v3;
    swift_retain();
    v6 = v4;
    sub_23655DB04(v5);
  }
  sub_23655DB14(v2);
  return v3;
}

id AISSignOutController.__allocating_init(listenerEndpoint:)(void *a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  objc_super v9;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = OBJC_IVAR___AISSignOutController_listenerEndpoint;
  *(_QWORD *)&v3[OBJC_IVAR___AISSignOutController_listenerEndpoint] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection] = 1;
  v5 = *(void **)&v3[v4];
  *(_QWORD *)&v3[v4] = a1;
  v6 = a1;

  v9.receiver = v3;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

id AISSignOutController.init(listenerEndpoint:)(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  objc_super v7;

  v2 = OBJC_IVAR___AISSignOutController_listenerEndpoint;
  *(_QWORD *)&v1[OBJC_IVAR___AISSignOutController_listenerEndpoint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection] = 1;
  v3 = *(void **)&v1[v2];
  *(_QWORD *)&v1[v2] = a1;
  v4 = a1;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AISSignOutController();
  v5 = objc_msgSendSuper2(&v7, sel_init);

  return v5;
}

uint64_t type metadata accessor for AISSignOutController()
{
  return objc_opt_self();
}

id AISSignOutController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AISSignOutController.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___AISSignOutController_listenerEndpoint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection] = 1;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISSignOutController();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_23655CCD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v1;
  return swift_task_switch();
}

uint64_t sub_23655CCE8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  uint8_t *v11;
  _QWORD *v12;
  id v13;

  v1 = sub_23655CA5C();
  *(_QWORD *)(v0 + 152) = v1;
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v2;
    *v2 = v0;
    v2[1] = sub_23655CEDC;
    return sub_2364BA910();
  }
  else
  {
    if (qword_2563E4338 != -1)
      swift_once();
    v4 = *(void **)(v0 + 136);
    v5 = sub_2365AFC00();
    __swift_project_value_buffer(v5, (uint64_t)qword_2563EBD70);
    v6 = v4;
    v7 = sub_2365AFBE8();
    v8 = sub_2365B0398();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(void **)(v0 + 136);
    if (v9)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      *(_QWORD *)(v0 + 120) = v10;
      v13 = v10;
      sub_2365B04A0();
      *v12 = v10;

      _os_log_impl(&dword_23644B000, v7, v8, "Failed to obtain remote object proxy to sign out: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v12, -1, -1);
      MEMORY[0x23B7F5254](v11, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_23655CEDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 168) = a1;
  *(_QWORD *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_23655CF50()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  id v10;
  uint8_t *v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  void *v18;
  uint8_t *v19;
  _QWORD *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v26;
  void *v27;

  v1 = *(void **)(v0 + 168);
  if (v1)
  {
    if (qword_2563E4338 != -1)
      swift_once();
    v2 = *(void **)(v0 + 136);
    v3 = sub_2365AFC00();
    __swift_project_value_buffer(v3, (uint64_t)qword_2563EBD70);
    v4 = v2;
    v5 = sub_2365AFBE8();
    v6 = sub_2365B038C();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(void **)(v0 + 136);
    if (v7)
    {
      v27 = v1;
      v9 = (uint8_t *)swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v9 = 138412290;
      *(_QWORD *)(v0 + 128) = v8;
      v10 = v8;
      sub_2365B04A0();
      *v26 = v8;

      _os_log_impl(&dword_23644B000, v5, v6, "Signing out of accounts with context: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v26, -1, -1);
      v11 = v9;
      v1 = v27;
      MEMORY[0x23B7F5254](v11, -1, -1);
    }
    else
    {

    }
    v22 = *(_QWORD *)(v0 + 136);
    *(_QWORD *)(v0 + 56) = v0 + 192;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23655D2D8;
    v23 = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    v24 = (_QWORD *)(v0 + 80);
    v24[1] = 0x40000000;
    v24[2] = sub_23655D3F4;
    v24[3] = &block_descriptor_12;
    v24[4] = v23;
    objc_msgSend(v1, sel_signOutAllAccountsWith_completionHandler_, v22, v24);
    return swift_continuation_await();
  }
  else
  {
    if (qword_2563E4338 != -1)
      swift_once();
    v12 = *(void **)(v0 + 136);
    v13 = sub_2365AFC00();
    __swift_project_value_buffer(v13, (uint64_t)qword_2563EBD70);
    v14 = v12;
    v15 = sub_2365AFBE8();
    v16 = sub_2365B0398();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(void **)(v0 + 136);
    if (v17)
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      *(_QWORD *)(v0 + 120) = v18;
      v21 = v18;
      sub_2365B04A0();
      *v20 = v18;

      _os_log_impl(&dword_23644B000, v15, v16, "Failed to obtain remote object proxy to sign out: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2563E9960);
      swift_arrayDestroy();
      MEMORY[0x23B7F5254](v20, -1, -1);
      MEMORY[0x23B7F5254](v19, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
}

uint64_t sub_23655D2D8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 184) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23655D338()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 192));
}

uint64_t sub_23655D370()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23655D3A8()
{
  uint64_t v0;

  swift_willThrow();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_23655D3F4(uint64_t a1, char a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542A8310);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_23655D5A4(void *a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  id v6;
  id v7;
  _QWORD *v8;

  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  v6 = a1;
  v7 = a3;
  v8 = (_QWORD *)swift_task_alloc();
  v3[5] = v8;
  *v8 = v3;
  v8[1] = sub_23655D634;
  v8[17] = v6;
  v8[18] = v7;
  return swift_task_switch();
}

uint64_t sub_23655D634(char a1)
{
  void *v1;
  uint64_t *v2;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v5 = *(void **)(*v2 + 16);
  v4 = *(void **)(*v2 + 24);
  v6 = *v2;
  swift_task_dealloc();

  v7 = *(_QWORD *)(v6 + 32);
  if (v1)
  {
    v8 = (void *)sub_2365AF8E8();

    (*(void (**)(uint64_t, _QWORD, void *))(v7 + 16))(v7, 0, v8);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16))(*(_QWORD *)(v6 + 32), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 32));
  return (*(uint64_t (**)(void))(v6 + 8))();
}

id AISSignOutController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISSignOutController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23655D754(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_23647E274;
  return v6();
}

uint64_t sub_23655D7A8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_23647E274;
  return v7();
}

uint64_t sub_23655D7FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_2365B0218();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2365B020C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_236495B38(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2365B01AC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t method lookup function for AISSignOutController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AISSignOutController.__allocating_init(listenerEndpoint:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of AISSignOutController.signOutAllAccounts(with:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x24BEE4EA0] & *v1) + 0x98);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2364CBB44;
  return v7(a1);
}

uint64_t sub_23655D9C8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_23655D9FC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = (void *)v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_236477420;
  return ((uint64_t (*)(void *, void *, void *))((char *)&dword_2563EBDD0 + dword_2563EBDD0))(v2, v3, v4);
}

uint64_t sub_23655DA70()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23655DA94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_236477420;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2563EBDF0 + dword_2563EBDF0))(a1, v4);
}

uint64_t sub_23655DB04(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_23655DB14(uint64_t result)
{
  if (result != 1)
    return swift_retain();
  return result;
}

uint64_t NSXPCListenerEndpoint.archive(with:backing:)(void *a1, _QWORD *a2)
{
  return sub_23655DB98(a1, a2);
}

uint64_t sub_23655DB98(void *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  id v21;
  void *v22;
  char *v24;
  uint64_t v25;
  id v26;
  id v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v27 = a1;
  v31 = sub_2365B0674();
  v3 = *(_QWORD *)(v31 - 8);
  v4 = MEMORY[0x24BDAC7A8](v31);
  v28 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBE00);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2365AFD14();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v15 = sub_2365B0A70();
  sub_2365B0668();
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_2364686E4((uint64_t)v7), (v17 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v29);
  }
  else
  {
    v29 = 0u;
    v30 = 0u;
  }
  swift_bridgeObjectRelease();
  v18 = v31;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v31);
  if (*((_QWORD *)&v30 + 1))
  {
    v19 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v19 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      v20 = sub_2365AFD08();
      sub_2365AFC0C();
      v21 = objc_msgSend(v26, sel__endpoint);
      sub_2365AFD2C();
      v22 = (void *)sub_2365B0038();
      objc_msgSend(v27, sel_encodeInteger_forKey_, v20, v22);

      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  else
  {
    sub_236465998((uint64_t)&v29, (uint64_t *)&unk_2542A8320);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_236465998((uint64_t)v10, &qword_2563EBE00);
  v24 = v28;
  sub_2365B0668();
  type metadata accessor for CodingUserInfoKeyNotFound();
  sub_23655E524();
  swift_allocError();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v25, v24, v18);
  return swift_willThrow();
}

__int128 *static NSXPCListenerEndpoint.developedUnarchive(from:backing:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[3];
  char *v35;
  char *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v37 = sub_2365B0674();
  v4 = *(_QWORD *)(v37 - 8);
  v5 = MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v34 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2563EBE00);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2365AFD14();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v35 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[2] = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v15 = sub_2365B0A70();
  sub_2365B0668();
  if (*(_QWORD *)(v15 + 16) && (v16 = sub_2364686E4((uint64_t)v8), (v17 & 1) != 0))
  {
    sub_23646A9F4(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)&v38);
  }
  else
  {
    v38 = 0u;
    v39 = 0u;
  }
  v18 = v13;
  v19 = v12;
  v20 = v37;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v20);
  if (!*((_QWORD *)&v39 + 1))
  {
    sub_236465998((uint64_t)&v38, (uint64_t *)&unk_2542A8320);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v11, 1, 1, v12);
    goto LABEL_11;
  }
  v21 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v11, v21 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v12) == 1)
  {
LABEL_11:
    sub_236465998((uint64_t)v11, &qword_2563EBE00);
    v27 = (__int128 *)v36;
    sub_2365B0668();
    type metadata accessor for CodingUserInfoKeyNotFound();
    sub_23655E524();
    swift_allocError();
    (*(void (**)(uint64_t, __int128 *, uint64_t))(v4 + 32))(v29, v27, v20);
    swift_willThrow();
    return v27;
  }
  v22 = v35;
  (*(void (**)(void))(v18 + 32))();
  v23 = sub_2365AFD20();
  if (v23)
  {
    v24 = v23;
    v25 = MEMORY[0x23B7F5344]();
    if (v25 == sub_2365AFC18())
    {
      v27 = (__int128 *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      objc_msgSend(v27, sel__setEndpoint_, v24);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v19);
      return v27;
    }
    v26 = v18;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_2365ADDB4();
    *(_QWORD *)&v38 = 0;
    *((_QWORD *)&v38 + 1) = 0xE000000000000000;
    sub_2365B00B0();
    v40 = v25;
    sub_2365B065C();
    v27 = (__int128 *)v38;
    sub_2365B05B4();
    swift_allocError();
    sub_2365ADDF8(v34[1], v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  else
  {
    v26 = v18;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_2365ADDB4();
    v30 = sub_2365B05B4();
    swift_allocError();
    v32 = v31;
    *(_QWORD *)&v38 = 0;
    *((_QWORD *)&v38 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    v27 = &v38;
    sub_2365B0578();
    swift_bridgeObjectRelease();
    sub_2365B059C();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v32, *MEMORY[0x24BEE26D8], v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v19);
  return v27;
}

