uint64_t sub_22EAB27F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = *a1 & 6;
  if (v2 == 2)
    return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF8) + 32))(v1 & 0xFFFFFFFFFFFFFFF8);
  v3 = v1 & 0xFFFFFFFFFFFFFFF8;
  if (v2 != 4)
    return *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(*(_QWORD *)v3 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * *(unsigned int *)(v3 + 64) - 8);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
}

BOOL sub_22EAB2858(_QWORD *a1, uint64_t a2, uint64_t **a3)
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;
  unsigned int v19[24];

  v5 = *a3;
  if (*a3)
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)a2 & 6;
    if (v8 == 2)
    {
      v9 = v7 & 0xFFFFFFFFFFFFFFF8;
      if ((v7 & 0xFFFFFFFFFFFFFFF8) == 0)
        goto LABEL_11;
    }
    else
    {
      if (v8 != 4)
      {
        if (v8 || (*(_WORD *)(a2 + 28) & 1) != 0)
          v9 = 0;
        else
          v9 = *(_QWORD *)(*(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_11;
      }
      v9 = *(_QWORD *)(*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 56)
                     + 8 * *(unsigned int *)((v7 & 0xFFFFFFFFFFFFFFF8) + 64)
                     - 8);
      if (!v9)
      {
LABEL_11:
        v12 = sub_22EFD7AE4((uint64_t *)a2);
        sub_22E8FCA40(a1, v12, 0xF76u, 0, (uint64_t)v19);
        v18 = v9;
        v11 = sub_22E8901B8((uint64_t)v19, (uint64_t *)&v18);
        goto LABEL_12;
      }
    }
    v10 = sub_22EFD7AE4((uint64_t *)a2);
    sub_22E8FCA40(a1, v10, 0xF7Au, 0, (uint64_t)v19);
    v18 = *(_QWORD *)(v9 + 40);
    v11 = sub_22E894538((uint64_t)v19, (uint64_t *)&v18);
LABEL_12:
    v13 = v11;
    v17 = sub_22EFD7B58(a2);
    sub_22E8906A0(v13, (uint64_t *)&v17);
    sub_22E903BEC(v19);
    v14 = sub_22EFD7AE4(*a3);
    sub_22E8FCA40(a1, v14, 0x1775u, 0, (uint64_t)v19);
    LODWORD(v17) = 0;
    v15 = sub_22E8900C4((uint64_t)v19, (int *)&v17);
    v18 = sub_22EFD7B58((uint64_t)*a3);
    sub_22E8906A0(v15, (uint64_t *)&v18);
    sub_22E903BEC(v19);
    return v5 != 0;
  }
  *a3 = (uint64_t *)a2;
  return v5 != 0;
}

unint64_t sub_22EAB29F0(uint64_t a1, unint64_t a2)
{
  unint64_t result;
  unint64_t v4;
  llvm::APInt *v5;
  unsigned int v6;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 4)
    return 1;
  result = sub_22EF5C728(a1, a2);
  if (result)
  {
    v4 = result;
    while (*(_BYTE *)(v4 + 16) == 2)
    {
      v5 = (llvm::APInt *)(v4 + 40);
      v6 = *(_DWORD *)(v4 + 48);
      if (v6 > 0x40)
      {
        if (llvm::APInt::countLeadingZerosSlowCase(v5) == v6)
          return 1;
      }
      else if (!*(_QWORD *)v5)
      {
        return 1;
      }
      result = sub_22EF5C728(a1, *(_QWORD *)(v4 + 32));
      v4 = result;
      if (!result)
        return result;
    }
    return 0;
  }
  return result;
}

unint64_t sub_22EAB2A98(uint64_t a1, unsigned int a2, unint64_t a3, llvm::SmallPtrSetImplBase *a4)
{
  unint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void **v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  unint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _DWORD *v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unsigned __int8 *v36;
  unint64_t v37;
  int v38;
  unsigned int v39;

  v39 = a2;
  result = sub_22E483108(a3);
  if (result != v8)
  {
    v9 = result;
    v10 = v8;
    while (1)
    {
      v11 = *(_QWORD *)(**(_QWORD **)(v9 + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v11 + 8) & 0xF) != 0)
        v11 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v9 + 16));
      v12 = (void **)(*(_QWORD *)(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v13 = *v12;
      if (a4)
      {
        result = (unint64_t)sub_22E3BA914(a4, *v12);
        v14 = *((_QWORD *)a4 + 1);
        v15 = v14 == *(_QWORD *)a4 ? 20 : 16;
        if (result != v14 + 8 * *(unsigned int *)((char *)a4 + v15))
          goto LABEL_34;
      }
      result = sub_22F114198(v13[3]);
      if ((*(_BYTE *)(result + 28) & 0x80) != 0)
        goto LABEL_34;
      v16 = result;
      result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(result + 104) + 96), *(_QWORD *)(result + 104));
      if ((**(_QWORD **)(v16 + 128) & 0x8000000000000000) != 0)
        goto LABEL_34;
      v17 = sub_22EC6602C(a1, v16);
      v18 = *(_DWORD *)(a3 + 24);
      v19 = *(_QWORD *)(a1 + 88);
      v20 = v19 + 2128;
      v36 = 0;
      v37 = v19 + 2128;
      v38 = 2589;
      v21 = *(_QWORD *)(a3 + 48);
      if (v21)
        break;
      v22 = sub_22EF6462C(v19, a3);
      v23 = v36;
      if (!v36)
      {
        v20 = v37;
        goto LABEL_14;
      }
LABEL_16:
      v23[*v23 + 1] = 9;
      v24 = v36;
      v25 = *v36;
      *v36 = v25 + 1;
      *(_QWORD *)&v24[8 * v25 + 16] = v22;
      v26 = *(_QWORD *)(**(_QWORD **)(v9 + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v26 + 8) & 0xF) != 0)
      {
        v26 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v9 + 16));
        v24 = v36;
        if (!v36)
        {
          v24 = (unsigned __int8 *)sub_22E3B8AAC(v37);
          v36 = v24;
        }
      }
      v24[*v24 + 1] = 9;
      v27 = v36;
      v28 = *v36;
      *v36 = v28 + 1;
      *(_QWORD *)&v27[8 * v28 + 16] = v26 & 0xFFFFFFFFFFFFFFF0;
      v29 = *(_QWORD *)(a3 + 48);
      if (v29)
        v30 = v29 & 0xFFFFFFFFFFFFFFF0;
      else
        v30 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a3);
      v31 = (_DWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
      v32 = sub_22E90A46C(a1, v18, (uint64_t)v31, (uint64_t)&v36, v30);
      if (v36 && v37)
        sub_22E3BB10C(v37, (unint64_t)v36);
      if (!v32)
      {
        v33 = *(_QWORD *)(a3 + 48);
        if (v33)
          v34 = v33 & 0xFFFFFFFFFFFFFFF0;
        else
          v34 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a3);
        v35 = *(_QWORD *)(**(_QWORD **)(v9 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v35 + 8) & 0xF) != 0)
          v35 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v9 + 16));
        sub_22EAAB46C(a1, v34, v35 & 0xFFFFFFFFFFFFFFF0, 2589, 0, *(_DWORD *)(a3 + 24), 0, 0, 0, 0);
      }
      sub_22EB4E494(a1, v39, v31, 1);
      result = sub_22EB17F48(a1, v31, &v39, 1, 0, 0, 0, 0);
LABEL_34:
      v9 += 24;
      if (v9 == v10)
        return result;
    }
    v22 = v21 & 0xFFFFFFFFFFFFFFF0;
LABEL_14:
    v23 = (unsigned __int8 *)sub_22E3B8AAC(v20);
    v36 = v23;
    goto LABEL_16;
  }
  return result;
}

void sub_22EAB2DB0(_QWORD *a1, unint64_t a2)
{
  if (a2)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
    {
      sub_22EAAFD60(a1, a2, 0, 0, 0);
      sub_22EAAF8FC((uint64_t)a1, a2);
    }
  }
}

uint64_t sub_22EAB2E0C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0)
    return 0;
  v3 = sub_22EF5BA38(*(_QWORD *)(a1 + 88), a3);
  result = sub_22F10C2A4(*(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF0));
  if (!result)
    return result;
  v5 = result;
  if ((*(_DWORD *)(result + 28) & 0x7Fu) - 35 > 2)
    return 0;
  v6 = *(_QWORD *)(result + 128);
  if (!v6)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(result + 104) + 96), *(_QWORD *)(result + 104));
    v6 = *(_QWORD *)(v5 + 128);
    if (!v6)
      return 0;
  }
  v7 = *(_QWORD *)(v6 + 88);
  if (!v7 || (*(_BYTE *)(v7 + 74) & 2) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v5 + 104) + 96), *(_QWORD *)(v5 + 104));
  return (**(_QWORD **)(v5 + 128) >> 11) & 1;
}

uint64_t sub_22EAB2EB4(uint64_t a1, uint64_t a2, unint64_t a3, void (***a4)(_QWORD, uint64_t, _QWORD, uint64_t))
{
  unsigned int v6;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unsigned int v12;

  v6 = a2;
  result = sub_22EAB2E0C(a1, a2, a3);
  if ((_DWORD)result)
  {
    v12 = result;
    v9 = sub_22EF5BA38(*(_QWORD *)(a1 + 88), a3);
    (**a4)(a4, a1, v6, v9);
    v10 = sub_22F10C2A4(*(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0));
    if (v10)
    {
      if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 35 >= 3)
        v11 = 0;
      else
        v11 = (void *)v10;
    }
    else
    {
      v11 = 0;
    }
    sub_22F327E60((void **)a1, v11);
    return v12;
  }
  return result;
}

void sub_22EAB2F64(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  unsigned __int8 *v60;
  unsigned __int8 **v61;
  unsigned __int8 *v62;
  uint64_t v63;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  BOOL v70;
  uint64_t v71;
  unint64_t v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  unint64_t v76;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  unsigned int v91;
  int v92;
  int v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  __int16 v97;
  BOOL v98;
  uint64_t v99;
  unsigned int v100;
  unsigned int v101[24];
  unsigned int v102[4];
  uint64_t v103;
  unsigned __int8 *v104;
  uint64_t v105;
  char v106;
  unsigned int v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v110 = a2;
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_10;
  a3.n128_f64[0] = sub_22EFC8E88(a2);
  v6 = *(uint64_t **)v5;
  v7 = *(unsigned int *)(v5 + 8);
  v8 = *(uint64_t **)v5;
  if ((_DWORD)v7)
  {
    v9 = 8 * v7;
    v8 = *(uint64_t **)v5;
    while (*(_WORD *)(*v8 + 32) != 157)
    {
      ++v8;
      v9 -= 8;
      if (!v9)
        goto LABEL_10;
    }
  }
  if (v8 == &v6[v7])
  {
LABEL_10:
    if ((*(_BYTE *)(a2 + 29) & 1) == 0)
      goto LABEL_19;
    a3.n128_f64[0] = sub_22EFC8E88(a2);
    v13 = *(uint64_t **)v12;
    v14 = *(unsigned int *)(v12 + 8);
    v15 = *(uint64_t **)v12;
    if ((_DWORD)v14)
    {
      v16 = 8 * v14;
      v15 = *(uint64_t **)v12;
      while (*(_WORD *)(*v15 + 32) != 155)
      {
        ++v15;
        v16 -= 8;
        if (!v16)
          goto LABEL_19;
      }
    }
    if (v15 == &v13[v14])
    {
LABEL_19:
      v10 = 0;
    }
    else
    {
      do
      {
        v17 = *v13++;
        v10 = v17;
      }
      while (*(_WORD *)(v17 + 32) != 155);
    }
  }
  else
  {
    do
    {
      v11 = *v6++;
      v10 = v11;
    }
    while (*(_WORD *)(v11 + 32) != 157);
  }
  v109 = v10;
  v18 = (*(uint64_t (**)(_QWORD, __n128))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) + 408))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088), a3);
  if (!v10 && v18)
  {
    if (!a2 || (*(_DWORD *)(a2 + 28) & 0x7F) != 0x25)
      return;
    v19 = *(_QWORD *)(a2 + 152);
    v20 = (_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
    if ((v19 & 4) != 0 && v20)
    {
      do
      {
        v21 = *(_QWORD *)(*v20 + 152);
        v20 = (_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
      }
      while ((v21 & 4) != 0 && v20);
    }
    v22 = v20[6];
    if ((*(_BYTE *)(v22 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v22);
      v24 = *(uint64_t **)v23;
      v25 = *(unsigned int *)(v23 + 8);
      v26 = *(uint64_t **)v23;
      if ((_DWORD)v25)
      {
        v27 = 8 * v25;
        v26 = *(uint64_t **)v23;
        while (*(_WORD *)(*v26 + 32) != 157)
        {
          ++v26;
          v27 -= 8;
          if (!v27)
            goto LABEL_37;
        }
      }
      if (v26 != &v24[v25])
      {
        do
        {
          v29 = *v24++;
          v28 = v29;
        }
        while (*(_WORD *)(v29 + 32) != 157);
        goto LABEL_45;
      }
    }
LABEL_37:
    if ((*(_BYTE *)(v22 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v22);
      v31 = *(uint64_t **)v30;
      v32 = *(unsigned int *)(v30 + 8);
      v33 = *(uint64_t **)v30;
      if ((_DWORD)v32)
      {
        v34 = 8 * v32;
        v33 = *(uint64_t **)v30;
        while (*(_WORD *)(*v33 + 32) != 155)
        {
          ++v33;
          v34 -= 8;
          if (!v34)
            goto LABEL_46;
        }
      }
      if (v33 != &v31[v32])
      {
        do
        {
          v35 = *v31++;
          v28 = v35;
        }
        while (*(_WORD *)(v35 + 32) != 155);
LABEL_45:
        v10 = sub_22EF9C5AC(v28);
        v36 = *(_WORD *)(v10 + 32);
        *(_BYTE *)(v10 + 34) |= 1u;
        *(_WORD *)(v10 + 32) = v36;
        v109 = v10;
        goto LABEL_47;
      }
    }
  }
LABEL_46:
  if (!v10)
    return;
LABEL_47:
  if (sub_22EFB948C(a2) <= 2)
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xAF6u, 0, (uint64_t)v102);
    v63 = sub_22E890024((uint64_t)v102, &v110);
    sub_22E8FB3C4(v63, &v109);
    sub_22E903BEC(v102);
    return;
  }
  if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) + 408))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088))
    && ((*(unsigned __int16 *)(v10 + 32) | (*(unsigned __int8 *)(v10 + 34) << 16)) & 0x10000) == 0)
  {
    if ((*(_WORD *)(a2 + 72) & 0x80) != 0)
      sub_22EFCC320(a2 + 64);
    v37 = *(_QWORD *)(a2 + 80);
    if (v37)
    {
      while (1)
      {
        v38 = *(_DWORD *)(v37 + 28);
        if ((v38 & 0x7Fu) - 60 < 7 || (v38 & 0x7Eu) - 54 <= 3)
        {
          if ((v38 & 0x100) == 0)
            goto LABEL_181;
          sub_22EFC8E88(v37);
          v40 = *(uint64_t **)v39;
          v41 = *(unsigned int *)(v39 + 8);
          v42 = *(uint64_t **)v39;
          if ((_DWORD)v41)
          {
            v43 = 8 * v41;
            v42 = *(uint64_t **)v39;
            while (*(_WORD *)(*v42 + 32) != 157)
            {
              ++v42;
              v43 -= 8;
              if (!v43)
                goto LABEL_64;
            }
          }
          if (v42 == &v40[v41])
          {
LABEL_181:
          {
LABEL_64:
            if ((*(_BYTE *)(v37 + 29) & 1) == 0)
              goto LABEL_81;
            sub_22EFC8E88(v37);
            v48 = *(uint64_t **)v47;
            v49 = *(unsigned int *)(v47 + 8);
            v50 = *(uint64_t **)v47;
            if ((_DWORD)v49)
            {
              v51 = 8 * v49;
              v50 = *(uint64_t **)v47;
              while (*(_WORD *)(*v50 + 32) != 155)
              {
                ++v50;
                v51 -= 8;
                if (!v51)
                  goto LABEL_81;
              }
            }
            if (v50 == &v48[v49])
              goto LABEL_81;
          }
            do
            {
              v52 = *v48++;
              v44 = v52;
              v46 = *(unsigned __int16 *)(v52 + 32) | (*(unsigned __int8 *)(v52 + 34) << 16);
            }
            while (*(_WORD *)(v52 + 32) != 155);
          }
          else
          {
            do
            {
              v45 = *v40++;
              v44 = v45;
              v46 = *(unsigned __int16 *)(v45 + 32) | (*(unsigned __int8 *)(v45 + 34) << 16);
            }
            while (*(_WORD *)(v45 + 32) != 157);
          }
          if ((v46 & 0x10000) == 0 && (*(_BYTE *)(v37 + 28) & 0x80) == 0)
            break;
        }
LABEL_81:
        v37 = *(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v37)
          goto LABEL_89;
      }
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v44 + 16), 0xAF5u, 0, (uint64_t)v102);
      if (v106)
      {
        v53 = v104;
        if (!v104)
        {
          v53 = (unsigned __int8 *)sub_22E3B8AAC(v105);
          v104 = v53;
        }
        v53[*v53 + 1] = 15;
        v54 = v104;
      }
      else
      {
        if (!v108)
          goto LABEL_80;
        v56 = *(_QWORD *)v102;
        v57 = v103;
        if (v103)
          v57 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v103 + 32))(v103);
        v111 = v57;
        v58 = sub_22F2F1D6C((uint64_t *)(v56 + 12784), &v111);
        v59 = v58[1] + 32 * v107;
        v62 = *(unsigned __int8 **)(v59 + 8);
        v61 = (unsigned __int8 **)(v59 + 8);
        v60 = v62;
        if (!v62)
        {
          v60 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v61[1]);
          *v61 = v60;
        }
        v60[*v60 + 1] = 15;
        v54 = *v61;
      }
      v55 = *v54;
      *v54 = v55 + 1;
      *(_QWORD *)&v54[8 * v55 + 16] = v44;
LABEL_80:
      sub_22E8FB3C4((uint64_t)v102, &v109);
      sub_22E903BEC(v102);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v109 + 16), 0x176Fu, 0, (uint64_t)v101);
      sub_22E903BEC(v101);
      sub_22EFC77E8(v37, 1);
      goto LABEL_81;
    }
  }
LABEL_89:
  if (*(_QWORD *)(a2 + 136) < 8uLL || (*(_QWORD *)(a2 + 136) & 4) != 0)
  {
    v65 = *(unsigned __int16 *)(v109 + 32);
    v66 = v65 | (*(unsigned __int8 *)(v109 + 34) << 16);
    v67 = (unsigned __int16)v65;
    if ((unsigned __int16)v65 == 155)
    {
      v68 = sub_22EFD5760(a2);
      v69 = v68;
      v70 = 0;
      if ((v66 & 0x10000) == 0 && v68 == 3)
      {
        v71 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088);
        if (*(_DWORD *)(v71 + 68) != 15 || *(_DWORD *)(v71 + 72) != 1)
        {
          sub_22EAB38AC(a2);
          return;
        }
        v70 = 0;
        v69 = 3;
      }
    }
    else
    {
      v70 = *(_BYTE *)(v109 + 35) != 0;
      v69 = sub_22EFD5760(a2);
    }
    sub_22F337BD8(a1, a2);
    if ((*(_WORD *)(a2 + 72) & 0x80) != 0)
      sub_22EFCC320(a2 + 64);
    v72 = *(_QWORD *)(a2 + 80);
    if (v72)
    {
      v73 = v69 - 3;
      while (1)
      {
        v74 = (*(_DWORD *)(v72 + 28) & 0x7F) - 60;
        v75 = (*(_DWORD *)(v72 + 28) & 0x7E) - 54;
        if (v75 >= 4)
          v76 = 0;
        else
          v76 = v72;
        if (v74 >= 7 && v75 > 3)
          goto LABEL_174;
        if (v75 > 3)
          goto LABEL_116;
        if ((*(_BYTE *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v72 + 32))(v72) + 82) & 0x40) != 0)
          goto LABEL_174;
        if ((*(_BYTE *)(v72 + 82) & 1) == 0)
        {
LABEL_116:
          if (v74 >= 7 || !v70)
            goto LABEL_120;
          goto LABEL_174;
        }
        if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) + 408))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088)) & 1) == 0
          && v73 > 1)
        {
          goto LABEL_174;
        }
        v83 = (*(_DWORD *)(v72 + 28) & 0x7F) == 0x37 ? v72 : 0;
        if ((sub_22EFD3F30(v72) & 1) != 0)
          break;
        if (!v83)
        {
          if (*(_DWORD *)(*(_QWORD *)(a1 + 72) + 192) <= 0xB532B7Fu)
            goto LABEL_116;
LABEL_166:
          if ((*(_DWORD *)(v72 + 28) & 0x7F) != 0x39)
            goto LABEL_116;
          goto LABEL_169;
        }
        if (sub_22EFD83B0(v83, (int *)v102))
          break;
        if (*(_DWORD *)(*(_QWORD *)(a1 + 72) + 192) <= 0xB532B7Fu)
          goto LABEL_116;
LABEL_169:
        v98 = v74 < 7 && v70;
        if (!v98 && (*(_QWORD *)(v72 + 80) & 0x800000) == 0)
        {
LABEL_120:
          if (sub_22EFB948C(v72) >= 3)
          {
            if ((*(_BYTE *)(v72 + 29) & 1) == 0)
              goto LABEL_140;
            sub_22EFC8E88(v72);
            v80 = *((unsigned int *)v79 + 2);
            if ((_DWORD)v80)
            {
              v81 = 8 * v80;
              v82 = *v79;
              while (*(_WORD *)(*(_QWORD *)v82 + 32) != 157)
              {
                v82 += 8;
                v81 -= 8;
                if (!v81)
                  goto LABEL_140;
              }
            }
            else
            {
              v82 = *v79;
            }
            if (v82 == *v79 + 8 * v80)
            {
LABEL_140:
              if ((*(_BYTE *)(v72 + 29) & 1) == 0)
                goto LABEL_148;
              sub_22EFC8E88(v72);
              v85 = *((unsigned int *)v84 + 2);
              if ((_DWORD)v85)
              {
                v86 = 8 * v85;
                v87 = *v84;
                while (*(_WORD *)(*(_QWORD *)v87 + 32) != 155)
                {
                  v87 += 8;
                  v86 -= 8;
                  if (!v86)
                    goto LABEL_148;
                }
              }
              else
              {
                v87 = *v84;
              }
              if (v87 == *v84 + 8 * v85)
              {
LABEL_148:
                if ((*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) & 0x800000000000000) != 0
                  || v75 > 3
                  || (*(_QWORD *)(v76 + 80) & 0x10000) == 0
                  || v73 < 2)
                {
                  v89 = sub_22EF9C5AC(v109);
                  v93 = *(unsigned __int16 *)(v89 + 32) | (*(unsigned __int8 *)(v89 + 34) << 16);
                }
                else
                {
                  v88 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 40, 3);
                  v89 = v88;
                  v90 = *(_OWORD *)(v109 + 16);
                  *(_OWORD *)v88 = *(_OWORD *)v109;
                  *(_OWORD *)(v88 + 16) = v90;
                  v91 = (*(unsigned __int8 *)(v88 + 34) << 16) & 0xFFE00000;
                  if (v67 == 155)
                    v92 = 156;
                  else
                    v92 = 158;
                  v93 = v91 | v92;
                  *(_BYTE *)(v88 + 34) = BYTE2(v91);
                  *(_WORD *)(v88 + 32) = v93;
                }
                *(_WORD *)(v89 + 32) = v93;
                *(_BYTE *)(v89 + 34) = BYTE2(v93) | 1;
                sub_22EFCA95C(v72, v89);
                if (v76)
                {
                  v94 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v76 + 112) + 104), *(_QWORD *)(v76 + 112));
                  if (v94)
                  {
                    v95 = v94;
                    do
                    {
                      if ((*(_WORD *)(v95 + 30) & 0x180) != 0)
                      {
                        v96 = sub_22EF9C5AC(v109);
                        v97 = *(_WORD *)(v96 + 32);
                        *(_BYTE *)(v96 + 34) |= 1u;
                        *(_WORD *)(v96 + 32) = v97;
                        sub_22EFCA95C(v95, v96);
                      }
                      if ((*(_BYTE *)(v95 + 104) & 3) != 0)
                        break;
                      v95 = sub_22E3CD31C((uint64_t *)(v95 + 104), v95);
                    }
                    while (v95);
                  }
                }
              }
            }
          }
        }
LABEL_174:
        v72 = *(_QWORD *)(v72 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v72)
          goto LABEL_175;
      }
      if (*(_DWORD *)(*(_QWORD *)(a1 + 72) + 192) <= 0xB532B7Fu)
        goto LABEL_174;
      if (v83)
        goto LABEL_169;
      goto LABEL_166;
    }
LABEL_175:
    if (v67 == 155)
    {
      v99 = v110;
      v100 = *(_DWORD *)(a1 + 12976);
      if (v100 >= *(_DWORD *)(a1 + 12980))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v100 = *(_DWORD *)(a1 + 12976);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 12968) + 8 * v100) = v99;
      ++*(_DWORD *)(a1 + 12976);
    }
  }
}

void sub_22EAB38AC(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 155)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 155)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

uint64_t sub_22EAB3978(uint64_t a1, unint64_t a2)
{
  int v4;
  uint64_t result;
  int v6;
  int v7;
  int v8;

  if (a2)
  {
    v4 = *(_DWORD *)(a2 + 28);
    if ((v4 & 0x7Eu) - 58 >= 0xFFFFFFFC)
    {
      if ((v4 & 0x7F) == 0x37)
      {
        result = sub_22EFC0EB8(a2);
        if (!(_DWORD)result)
          return result;
        if ((sub_22EFD3AF0(a2, &v7) & 1) != 0)
          return 1;
        if ((sub_22EFD83B0(a2, &v8) & 1) != 0)
          return 2;
      }
      if ((sub_22EFD3B9C(a2) & 1) != 0)
        return 3;
      if ((sub_22EFD3F30(a2) & 1) != 0)
        return 4;
      if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x39)
        return 5;
    }
  }
  if ((*(_QWORD *)(a2 + 40) & 7) != 6)
    return 6;
  v6 = *(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8);
  result = 262;
  switch(v6)
  {
    case 30:
      return result;
    case 31:
      return 774;
    case 32:
    case 33:
      goto LABEL_19;
    case 34:
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 0x10) == 0)
        return 6;
      return 518;
    default:
      if ((v6 - 16) >= 2)
        return 6;
LABEL_19:
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 0x10) == 0)
        return 6;
      result = 1030;
      break;
  }
  return result;
}

void sub_22EAB3AC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  unsigned int v25;
  _DWORD **v28;
  _QWORD **v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD **v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  unsigned int v54;
  int v55;
  int v56;
  size_t v57;
  char *v58;
  uint64_t v59;
  int v60;
  int v61;
  void **v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  int v77;
  int v78;
  BOOL v79;
  uint64_t v80;
  unsigned int v81;
  BOOL v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t **v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t **v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  _BOOL4 v119;
  _QWORD **v120;
  uint64_t *v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  unint64_t v127;
  unint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  char v131;
  char v132;
  int v133;
  uint64_t v134;
  unint64_t v135;
  int v136;
  uint64_t v137;
  unint64_t **v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char v145;
  uint64_t v146;
  int v147;
  unsigned int v148;
  unsigned int v150;
  unsigned int v151;
  unint64_t *v152;
  uint64_t v153;
  unint64_t v154;
  BOOL v155;
  uint64_t v156;
  __n128 v157;
  _QWORD **v158;
  _QWORD *v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  void *v166;
  BOOL v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  int v174;
  void **i;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  unint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  void **v185;
  void **v186;
  void **v188;
  uint64_t **v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t **v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  unint64_t v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  unint64_t v215;
  _QWORD *v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int *v222;
  int *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unsigned int v227;
  int v228;
  uint64_t v229;
  int *v230;
  int *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unsigned int v235;
  int v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  BOOL v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  int v255;
  BOOL v256;
  uint64_t v257;
  uint64_t v258;
  int *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  int *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  int v269;
  BOOL v270;
  uint64_t v271;
  int *v272;
  uint64_t v273;
  uint64_t v274;
  unsigned int v275[24];
  uint64_t v276[5];
  uint64_t v277;
  unint64_t **v278;
  uint64_t *v279;
  _QWORD *v280;
  BOOL v281;
  void *v282;
  uint64_t v283;
  int *v284;
  int v285;
  void **v286;
  _QWORD *v287;
  void **v288;
  char v289;
  _DWORD *v290;
  unint64_t *v291;
  uint64_t v292;
  _BYTE v293[40];
  void **v294;
  uint64_t v295;
  void *v296[3];
  char v297;
  uint64_t v298;

  v298 = *MEMORY[0x24BDAC8D0];
  v282 = a3;
  v283 = a2;
  if (!a3)
    return;
  v3 = a3;
  sub_22E3CD31C((uint64_t *)(a3[13] + 96), a3[13]);
  if ((*(_QWORD *)v3[16] & 0x800) != 0 && (*((_BYTE *)v3 + 28) & 0x80) == 0)
  {
    v286 = (void **)a1;
    v287 = v3;
    v5 = v3[6];
    if (v5)
      v6 = v5 & 0xFFFFFFFFFFFFFFF0;
    else
      v6 = sub_22EF6462C(*(_QWORD *)(a1 + 88), (unint64_t)v3);
    v288 = (void **)(v6 & 7 | *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFF0) + 8));
    v289 = 0;
    sub_22EAB5C14((uint64_t *)&v286, (uint64_t)v3);
    v3 = v282;
  }
  if ((*((_BYTE *)v3 + 28) & 0x80) == 0 && (sub_22EFC7ADC((unint64_t)(v3 + 8)) & 1) == 0)
  {
    sub_22E3CD31C((uint64_t *)(*((_QWORD *)v282 + 13) + 96), *((_QWORD *)v282 + 13));
    if ((**((_QWORD **)v282 + 16) & 0x80) == 0)
    {
      sub_22E3CD31C((uint64_t *)(*((_QWORD *)v282 + 13) + 96), *((_QWORD *)v282 + 13));
      if ((**((_DWORD **)v282 + 16) & 1) == 0)
      {
        v7 = *((_QWORD *)v282 + 16);
        if (!v7 || ((*(unsigned __int16 *)(v7 + 8) | (*(unsigned __int8 *)(v7 + 10) << 16)) & 0x100000) == 0)
        {
          v8 = sub_22EFC3B90((uint64_t)v282);
          if (v8)
          {
            v9 = v8;
            v10 = 0;
LABEL_16:
            v11 = (*(_DWORD *)(v9 + 72) & 3) == 3 || (*(_DWORD *)(v9 + 72) & 3) == 0;
            if (v11 && ((*(_BYTE *)(v9 + 68) & 1) == 0 || *(_QWORD *)(v9 + 40)))
            {
              v12 = *(_QWORD *)(v9 + 48);
              v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
              v14 = *(_DWORD *)(v13 + 16);
              if ((v14 & 0xFE) != 0x28)
              {
                if ((v12 & 1) == 0 && (*(_BYTE *)((v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0
                  || *(_DWORD *)(v13 + 16) > 0x2Cu)
                {
                  goto LABEL_31;
                }
                v15 = *(_DWORD *)(v13 + 16);
                if (((1 << v14) & 0x8180001600) == 0)
                {
                  if (v15 == 11)
                  {
                    if (((v14 >> 19) & 0x1FF) - 166 >= 0x35)
                      goto LABEL_31;
                  }
                  else
                  {
                    if (v15 != 44)
                      goto LABEL_31;
                    v18 = sub_22F114198(*(_QWORD *)(v13 + 24));
                    if ((*(_BYTE *)(v18 + 74) & 1) == 0 && *(_QWORD *)(v18 + 128) < 8uLL)
                      goto LABEL_31;
                  }
                }
              }
              if ((v10 & 1) == 0)
              {
                sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v282 + 6), 0x1A6Du, 0, (uint64_t)&v286);
                LODWORD(v294) = (unsigned __int16)*((_DWORD *)v282 + 18) >> 13;
                v16 = sub_22E8900C4((uint64_t)&v286, (int *)&v294);
                sub_22E890024(v16, (uint64_t *)&v282);
                sub_22E903BEC((unsigned int *)&v286);
              }
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v9 + 24), 0x17ACu, 0, (uint64_t)&v286);
              LOBYTE(v291) = (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0)
                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16) & 0xFE) == 40;
              v17 = sub_22E894E38((uint64_t)&v286, (unsigned __int8 *)&v291);
              v294 = *(void ***)(v9 + 40);
              sub_22E894538(v17, (uint64_t *)&v294);
              sub_22E903BEC((unsigned int *)&v286);
              v10 = 1;
            }
LABEL_31:
            while (1)
            {
              v9 = *(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF8;
              if (!v9)
                break;
              if ((*(_DWORD *)(v9 + 28) & 0x7Fu) - 49 < 3)
                goto LABEL_16;
            }
          }
        }
      }
    }
  }
  v19 = *((_QWORD *)v282 + 5);
  if (v19 >= 8 && (*((_QWORD *)v282 + 5) & 7) == 0)
  {
    v21 = sub_22EFCE144((unint64_t)v282 + 64, v19);
    if (v21)
    {
      while (1)
      {
        v22 = v21 & 0xFFFFFFFFFFFFFFF8;
        v23 = (v21 & 0xFFFFFFFFFFFFFFF8) == 0 || (v21 & 4) == 0;
        v24 = v21 & 0xFFFFFFFFFFFFFFF8;
        if (!v23)
          v24 = *(_QWORD *)v22;
        v25 = *(_DWORD *)(v24 + 28) & 0x7F;
        if (v25 <= 0x2F && ((1 << v25) & 0xC00000060000) != 0)
        {
          v24 = sub_22EFBAEA4(v24);
          v25 = *(_DWORD *)(v24 + 28) & 0x7F;
        }
        if (v25 - 49 <= 0x19 && ((1 << (v25 - 49)) & 0x2000007) != 0)
        {
          v28 = (_DWORD **)v282;
          sub_22E3CD31C((uint64_t *)(*((_QWORD *)v282 + 13) + 96), *((_QWORD *)v282 + 13));
          if ((*v28[16] & 1) != 0)
            break;
          v25 = *(_DWORD *)(v24 + 28) & 0x7F;
        }
        if (v25 == 68)
          break;
        if (!v23)
        {
          v21 = *(_QWORD *)(v22 + 8);
          if (v21)
            continue;
        }
        goto LABEL_70;
      }
      if (!v23)
        v22 = *(_QWORD *)v22;
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v22 + 24), 0xEBEu, 0, (uint64_t)&v286);
      v294 = *(void ***)(v24 + 40);
      sub_22E894538((uint64_t)&v286, (uint64_t *)&v294);
      sub_22E903BEC((unsigned int *)&v286);
    }
  }
LABEL_70:
  if (sub_22EF5EAB0(*(_QWORD *)(a1 + 88), (uint64_t)v282) && sub_22E463414((uint64_t)v282))
  {
    sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v282 + 6), 0x11F3u, 0, (uint64_t)&v286);
    v294 = (void **)*((_QWORD *)v282 + 5);
    sub_22E894538((uint64_t)&v286, (uint64_t *)&v294);
    sub_22E903BEC((unsigned int *)&v286);
  }
  v29 = (_QWORD **)v282;
  sub_22E3CD31C((uint64_t *)(*((_QWORD *)v282 + 13) + 96), *((_QWORD *)v282 + 13));
  if ((*v29[16] & 0x400) == 0 || (sub_22EFC7ADC((unint64_t)v282 + 64) & 1) != 0)
    goto LABEL_84;
  v30 = sub_22EFD10F8((unint64_t)v282);
  if (v30)
  {
    v31 = v30;
    v32 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v30 + 32))(v30);
    if ((*(_BYTE *)(v32 + 82) & 0xC) != 0
      || sub_22EFD7260(v32)
      || (*(_BYTE *)(v31 + 29) & 0x60) != 0
      || sub_22E4808EC((uint64_t)v282))
    {
      goto LABEL_84;
    }
  }
  else
  {
    if (sub_22E4808EC((uint64_t)v282))
      goto LABEL_84;
    v31 = (unint64_t)v282;
  }
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v31 + 24), 0x1A7Cu, 0, (uint64_t)&v286);
  v294 = (void **)sub_22EF6477C(*(_QWORD *)(a1 + 88), (uint64_t)v282);
  sub_22E8901B8((uint64_t)&v286, (uint64_t *)&v294);
  sub_22E903BEC((unsigned int *)&v286);
LABEL_84:
  v33 = (_QWORD **)v282;
  sub_22E3CD31C((uint64_t *)(*((_QWORD *)v282 + 13) + 96), *((_QWORD *)v282 + 13));
  if ((*v33[16] & 0x800) != 0 && (*((_BYTE *)v282 + 29) & 1) != 0)
  {
    sub_22EFC8E88((uint64_t)v282);
    v35 = *(uint64_t **)v34;
    v36 = *(unsigned int *)(v34 + 8);
    v37 = *(uint64_t **)v34;
    if ((_DWORD)v36)
    {
      v38 = 8 * v36;
      v37 = *(uint64_t **)v34;
      while (*(_WORD *)(*v37 + 32) != 176)
      {
        ++v37;
        v38 -= 8;
        if (!v38)
          goto LABEL_92;
      }
    }
    if (v37 != &v35[v36])
    {
      do
      {
        v46 = *v35++;
        v45 = v46;
      }
      while (*(_WORD *)(v46 + 32) != 176);
      sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v282 + 6), 0x1825u, 0, (uint64_t)&v286);
      v47 = *(unsigned __int8 *)(v45 + 30);
      if ((~(v47 << 16) & 0x780000) != 0)
        v48 = ((*(unsigned __int16 *)(v45 + 28) | (v47 << 16)) >> 19) & 0xF;
      else
        v48 = sub_22F1BFAD0(v45);
      LOBYTE(v294) = v48 == 1;
      sub_22E894E38((uint64_t)&v286, (unsigned __int8 *)&v294);
      sub_22E903BEC((unsigned int *)&v286);
      sub_22F327E60((void **)a1, v282);
    }
  }
LABEL_92:
  if (!sub_22E4808EC((uint64_t)v282))
  {
    v39 = sub_22EFD10F8((unint64_t)v282);
    if (v39)
    {
      if ((*(_BYTE *)(v39 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v39);
        v41 = *(uint64_t **)v40;
        v42 = *(unsigned int *)(v40 + 8);
        v43 = *(uint64_t **)v40;
        if ((_DWORD)v42)
        {
          v44 = 8 * v42;
          v43 = *(uint64_t **)v40;
          while (*(_WORD *)(*v43 + 32) != 176)
          {
            ++v43;
            v44 -= 8;
            if (!v44)
              goto LABEL_123;
          }
        }
        if (v43 != &v41[v42])
        {
          do
          {
            v50 = *v41++;
            v49 = v50;
          }
          while (*(_WORD *)(v50 + 32) != 176);
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v49 + 16), 0x199Du, 0, (uint64_t)&v286);
          v51 = *(unsigned __int8 *)(v49 + 30);
          if ((~(v51 << 16) & 0x780000) != 0)
            v52 = ((*(unsigned __int16 *)(v49 + 28) | (v51 << 16)) >> 19) & 0xF;
          else
            v52 = sub_22F1BFAD0(v49);
          LOBYTE(v291) = v52 == 1;
          v53 = sub_22E894E38((uint64_t)&v286, (unsigned __int8 *)&v291);
          v54 = sub_22F141A3C(*((unsigned int *)v282 + 6), 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
          v55 = *(unsigned __int8 *)(v49 + 30);
          if ((~(v55 << 16) & 0x780000) != 0)
            v56 = ((*(unsigned __int16 *)(v49 + 28) | (v55 << 16)) >> 19) & 0xF;
          else
            v56 = sub_22F1BFAD0(v49);
          if (v56 == 1)
            v57 = 7;
          else
            v57 = 6;
          if (v56 == 1)
            v58 = " sealed";
          else
            v58 = " final";
          sub_22E729148(v58, v57, v54, 0, (uint64_t)&v294);
          sub_22E890748(v53, &v294);
          if (v297 < 0)
            operator delete(v296[1]);
          sub_22E903BEC((unsigned int *)&v286);
          sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v282 + 6), 0x15F8u, 0, (uint64_t)&v286);
          v294 = (void **)sub_22EF6477C(*(_QWORD *)(a1 + 88), (uint64_t)v282);
          v59 = sub_22E8901B8((uint64_t)&v286, (uint64_t *)&v294);
          v60 = *(unsigned __int8 *)(v49 + 30);
          if ((~(v60 << 16) & 0x780000) != 0)
            v61 = ((*(unsigned __int16 *)(v49 + 28) | (v60 << 16)) >> 19) & 0xF;
          else
            v61 = sub_22F1BFAD0(v49);
          LOBYTE(v291) = v61 == 1;
          sub_22E894E38(v59, (unsigned __int8 *)&v291);
          sub_22E903BEC((unsigned int *)&v286);
        }
      }
    }
  }
LABEL_123:
  if (!sub_22EAB5D40((uint64_t)v282))
    goto LABEL_210;
  v62 = (void **)v282;
  if ((sub_22EFC7ADC((unint64_t)v282 + 64) & 1) == 0)
  {
    sub_22E3CD31C((uint64_t *)v62[13] + 12, (uint64_t)v62[13]);
    if ((*((_WORD *)v62[16] + 4) & 0x200) != 0
      || (sub_22E3CD31C((uint64_t *)v62[13] + 12, (uint64_t)v62[13]), (*(_QWORD *)v62[16] & 0x400000000) != 0))
    {
      if (!sub_22EABDAF8((uint64_t)v62)
        || (sub_22E3CD31C((uint64_t *)v62[13] + 12, (uint64_t)v62[13]), (*(_QWORD *)v62[16] & 0x800000000) != 0))
      {
        v86 = sub_22F282248((uint64_t)v62);
        if (v86 == v87)
        {
          v90 = 0;
          goto LABEL_182;
        }
        v88 = v86;
        v89 = v87;
        while (1)
        {
          LODWORD(v286) = 0;
          if (sub_22EFD8088(v88, (int *)&v286))
          {
            if ((*(_BYTE *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v88 + 32))(v88) + 82) & 0x40) == 0)
              break;
          }
          do
            v88 = *(_QWORD *)(v88 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v88 && (*(_DWORD *)(v88 + 28) & 0x7F) != 0x37);
          v90 = 0;
          if (v88 == v89)
            goto LABEL_182;
        }
      }
    }
  }
  sub_22E3CD31C((uint64_t *)v62[13] + 12, (uint64_t)v62[13]);
  if ((*(_QWORD *)v62[16] & 0x400) != 0)
  {
    v90 = 1;
    goto LABEL_182;
  }
  v63 = sub_22E46A3A0((uint64_t)v62);
  if (v63 != v64)
  {
    v65 = v63;
    v66 = v64;
    while (1)
    {
      v67 = *(_QWORD *)(**(_QWORD **)(v65 + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v67 + 8) & 0xF) != 0)
        v67 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v65 + 16));
      if ((*(_BYTE *)(*(_QWORD *)(v67 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
      {
        v68 = *(_QWORD *)(**(_QWORD **)(v65 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v68 + 8) & 0xF) != 0)
          v68 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v65 + 16));
        v69 = sub_22F10C2A4(*(_QWORD *)(v68 & 0xFFFFFFFFFFFFFFF0));
        v70 = (*(_DWORD *)(v69 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v69;
        if ((*(_BYTE *)(v70 + 76) & 0x18) != 0)
          break;
      }
      if ((*(_BYTE *)(v65 + 12) & 1) != 0)
      {
        v90 = 3;
        goto LABEL_182;
      }
      v65 += 24;
      if (v65 == v66)
        goto LABEL_143;
    }
    v90 = 2;
LABEL_182:
    LODWORD(v291) = v90;
    if ((sub_22EFD5760((uint64_t)v62) & 0xFFFFFFFD) == 0)
    {
      sub_22EFC8E88((uint64_t)v62);
      v92 = *v91;
      v93 = *((unsigned int *)v91 + 2);
      if ((_DWORD)v93 && *(_WORD *)(*v92 + 32) != 332)
      {
        v94 = 8 * v93 - 8;
        v95 = *v91;
        do
        {
          v96 = v95[1];
          ++v95;
          v94 -= 8;
        }
        while (*(_WORD *)(v96 + 32) != 332);
      }
      do
      {
        v98 = *v92++;
        v97 = v98;
      }
      while (*(_WORD *)(v98 + 32) != 332);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v97 + 16), 0x1441u, 0, (uint64_t)&v286);
      v294 = v62;
      sub_22E890024((uint64_t)&v286, (uint64_t *)&v294);
      sub_22E903BEC((unsigned int *)&v286);
      sub_22EFC8E88((uint64_t)v62);
      v100 = *v99;
      v101 = *((unsigned int *)v99 + 2);
      if ((_DWORD)v101 && *(_WORD *)(*v100 + 32) != 332)
      {
        v102 = 8 * v101 - 8;
        v103 = *v99;
        do
        {
          v104 = v103[1];
          ++v103;
          v102 -= 8;
        }
        while (*(_WORD *)(v104 + 32) != 332);
      }
      do
      {
        v106 = *v100++;
        v105 = v106;
      }
      while (*(_WORD *)(v106 + 32) != 332);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v105 + 16), 0x155Eu, 0, (uint64_t)&v286);
      v294 = v62;
      v107 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v294);
      sub_22E89519C(v107, (unsigned int *)&v291);
      sub_22E903BEC((unsigned int *)&v286);
    }
    if ((*((_BYTE *)v62 + 29) & 1) != 0)
    {
      sub_22EFC8E88((uint64_t)v62);
      v109 = *(char **)v108;
      v110 = *(unsigned int *)(v108 + 8);
      if ((_DWORD)v110)
      {
        v111 = &v109[8 * v110];
        v112 = 8 * v110 - 8;
        v113 = *(char **)v108;
        v114 = *(char **)v108;
        while (1)
        {
          v115 = *(_QWORD *)v114;
          v114 += 8;
          if (*(_WORD *)(v115 + 32) == 332)
            break;
          v112 -= 8;
          v113 = v114;
          if (v114 == v111)
            goto LABEL_208;
        }
        if (v114 == v111)
        {
          v111 = v113;
        }
        else
        {
          v116 = 8;
          v111 = v113;
          do
          {
            v117 = *(_QWORD *)&v113[v116];
            if (*(_WORD *)(v117 + 32) != 332)
            {
              *(_QWORD *)v111 = v117;
              v111 += 8;
            }
            v116 += 8;
            v112 -= 8;
          }
          while (v112);
          v109 = *(char **)v108;
        }
      }
      else
      {
        v111 = *(char **)v108;
      }
LABEL_208:
      v118 = (unint64_t)(v111 - v109) >> 3;
      *(_DWORD *)(v108 + 8) = v118;
      if (!(_DWORD)v118)
        *((_DWORD *)v62 + 7) &= ~0x100u;
    }
    goto LABEL_210;
  }
LABEL_143:
  v71 = sub_22EFC3B90((uint64_t)v62);
  if (!v71)
    goto LABEL_210;
  v72 = v71;
LABEL_145:
  v73 = (uint64_t *)(*(_QWORD *)(v72 + 48) & 0xFFFFFFFFFFFFFFF0);
  v74 = v73[1];
  if ((v74 & 8) != 0)
  {
    v75 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFFF0) + 0x18);
    if ((v75 & 0x1C0) == 0xC0)
    {
      v90 = 4;
    }
    else
    {
      v76 = HIDWORD(v75);
      v77 = v76 & 0xC;
      v78 = v76 & 2;
      if (v77)
        v79 = v78 == 0;
      else
        v79 = 1;
      if (v79)
        goto LABEL_152;
      v90 = 6;
    }
    goto LABEL_182;
  }
  while (1)
  {
LABEL_152:
    v80 = *v73;
    v81 = (*(_DWORD *)(*v73 + 16) & 0xFE) - 6;
    if (v80)
      v82 = v81 > 0xFFFFFFFB;
    else
      v82 = 0;
    if (v82)
    {
      v85 = v80;
      goto LABEL_160;
    }
    v83 = *(_QWORD *)(*(_QWORD *)(v80 + 8) & 0xFFFFFFFFFFFFFFF0);
    v84 = *(_DWORD *)(v83 + 16);
    if ((v84 & 0xFEu) - 2 > 3)
      goto LABEL_161;
    v85 = sub_22F10CF48(v80);
    if (!v85)
      break;
LABEL_160:
    v73 = (uint64_t *)(*(_QWORD *)(v85 + 32) & 0xFFFFFFFFFFFFFFF0);
  }
  v83 = *(_QWORD *)(*(_QWORD *)(v80 + 8) & 0xFFFFFFFFFFFFFFF0);
  v84 = *(_DWORD *)(v83 + 16);
LABEL_161:
  if ((v84 & 0x4FF) == 0x2D && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v83 + 24)) + 76) & 0x18) != 0)
  {
    v90 = 5;
    goto LABEL_182;
  }
  while (1)
  {
    v72 = *(_QWORD *)(v72 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v72)
      break;
    if ((*(_DWORD *)(v72 + 28) & 0x7Fu) - 49 < 3)
      goto LABEL_145;
  }
LABEL_210:
  v119 = sub_22EAB5D40((uint64_t)v282);
  v281 = v119;
  if (v119)
  {
    v120 = (_QWORD **)v282;
    sub_22E3CD31C((uint64_t *)(*((_QWORD *)v282 + 13) + 96), *((_QWORD *)v282 + 13));
    *v120[16] = *v120[16] & 0xFFF81FFFFFFFFFFFLL | 0x4C00000000000;
  }
  v291 = (unint64_t *)v293;
  v292 = 0x500000000;
  v277 = a1;
  v278 = &v291;
  v279 = &v283;
  v280 = (_QWORD *)a1;
  v121 = (uint64_t *)v282;
  if ((*((_DWORD *)v282 + 7) & 0x180) == 0x100)
  {
    sub_22EFC8E88((uint64_t)v282);
    v123 = *((unsigned int *)v122 + 2);
    if ((_DWORD)v123)
    {
      v124 = 8 * v123;
      v125 = *v122;
      while (*(_WORD *)(*(_QWORD *)v125 + 32) != 343)
      {
        v125 += 8;
        v124 -= 8;
        if (!v124)
          goto LABEL_221;
      }
    }
    else
    {
      v125 = *v122;
    }
    v121 = (uint64_t *)v282;
    if (v125 != *v122 + 8 * v123)
    {
      v126 = *((_DWORD *)v282 + 6);
      v127 = sub_22EF6477C(*(_QWORD *)(a1 + 88), (uint64_t)v282);
      v286 = (void **)&unk_24FAB6EF8;
      LODWORD(v287) = 3594;
      if ((sub_22EE8B0B0(a1, v126, v127) & 1) == 0 && (sub_22F3B1AA4((uint64_t)v121) & 1) == 0)
      {
        for (i = (void **)v121; ; i = v294)
        {
          v294 = 0;
          v176 = sub_22E46A3A0((uint64_t)i);
          if (v176 != v177)
          {
            v178 = v176;
            v179 = v177;
            while (1)
            {
              v180 = *(uint64_t **)(v178 + 16);
              v181 = *(_QWORD *)(*v180 & 0xFFFFFFFFFFFFFFF0);
              if ((*(_BYTE *)(v181 + 8) & 0xF) != 0)
                v181 = (unint64_t)sub_22F10D2BC(*v180);
              v182 = sub_22F10C2A4(*(_QWORD *)(v181 & 0xFFFFFFFFFFFFFFF0));
              if (v182 && (*(_DWORD *)(v182 + 28) & 0x7Fu) - 35 >= 3)
                v182 = 0;
              if (sub_22E463414(v182))
                break;
              v178 += 24;
              if (v178 == v179)
                goto LABEL_365;
            }
            v183 = *(_QWORD *)(*v180 & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v183 + 8) & 0xF) != 0)
              v183 = (unint64_t)sub_22F10D2BC(*v180);
            v184 = sub_22F10C2A4(*(_QWORD *)(v183 & 0xFFFFFFFFFFFFFFF0));
            if (v184)
            {
              if ((*(_DWORD *)(v184 + 28) & 0x7Fu) - 35 >= 3)
                v185 = 0;
              else
                v185 = (void **)v184;
            }
            else
            {
              v185 = 0;
            }
            v294 = v185;
          }
LABEL_365:
          v186 = v294;
          if (!v294 || v294 == i)
            break;
          sub_22E3CD31C((uint64_t *)v294[13] + 12, (uint64_t)v294[13]);
          if ((*(_QWORD *)v186[16] & 0x400) == 0)
            break;
          v188 = v294;
          sub_22E3CD31C((uint64_t *)v294[13] + 12, (uint64_t)v294[13]);
          if ((*(_QWORD *)v188[16] & 0x400) == 0)
            break;
          sub_22EFC8E88((uint64_t)v121);
          v190 = *v189;
          v191 = *((unsigned int *)v189 + 2);
          if ((_DWORD)v191 && *(_WORD *)(*v190 + 32) != 343)
          {
            v192 = 8 * v191 - 8;
            v193 = *v189;
            do
            {
              v194 = v193[1];
              ++v193;
              v192 -= 8;
            }
            while (*(_WORD *)(v194 + 32) != 343);
          }
          do
          {
            v196 = *v190++;
            v195 = v196;
          }
          while (*(_WORD *)(v196 + 32) != 343);
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v195 + 16), 0xFC8u, 0, (uint64_t)&v286);
          v276[0] = (uint64_t)v121;
          v197 = sub_22E890024((uint64_t)&v286, v276);
          sub_22E890024(v197, (uint64_t *)&v294);
          sub_22E903BEC((unsigned int *)&v286);
        }
        sub_22E3CD31C((uint64_t *)(v121[13] + 96), v121[13]);
        if ((*(_QWORD *)v121[16] & 0x400) == 0)
        {
          sub_22EFC8E88((uint64_t)v121);
          v199 = *v198;
          v200 = *((unsigned int *)v198 + 2);
          if ((_DWORD)v200 && *(_WORD *)(*v199 + 32) != 343)
          {
            v201 = 8 * v200 - 8;
            v202 = *v198;
            do
            {
              v203 = v202[1];
              ++v202;
              v201 -= 8;
            }
            while (*(_WORD *)(v203 + 32) != 343);
          }
          do
          {
            v205 = *v199++;
            v204 = v205;
          }
          while (*(_WORD *)(v205 + 32) != 343);
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v204 + 16), 0xFC2u, 0, (uint64_t)&v286);
          v294 = (void **)v121;
          sub_22E890024((uint64_t)&v286, (uint64_t *)&v294);
          sub_22E903BEC((unsigned int *)&v286);
        }
      }
LABEL_221:
      v121 = (uint64_t *)v282;
    }
  }
  v276[0] = (uint64_t)&v277;
  v276[1] = (uint64_t)&v282;
  v276[2] = a1;
  v276[3] = (uint64_t)&v281;
  v276[4] = (uint64_t)&v280;
  v128 = sub_22EFD10F8((unint64_t)v121);
  if (v128)
    sub_22EAB5DA0((uint64_t)v276, v128);
  v129 = v282;
  if ((*((_WORD *)v282 + 36) & 0x80) != 0)
    sub_22EFCC320((uint64_t)v282 + 64);
  v130 = v129[10];
  if (v130)
  {
    v131 = 0;
    v132 = 0;
    do
    {
      v133 = *(_DWORD *)(v130 + 28);
      if ((v133 & 0x7Eu) - 58 >= 0xFFFFFFFC)
      {
        if ((sub_22EFC7ADC((unint64_t)v282 + 64) & 1) == 0)
        {
          if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v130 + 32))(v130) + 80) & 0xE000) != 0x4000
            && ((*(_QWORD *)(v130 + 40) & 7) != 6
             || (*(_DWORD *)(*(_QWORD *)(v130 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) >= 4))
          {
            v290 = (_DWORD *)v130;
            if ((*(_BYTE *)(v130 + 28) & 0x80) == 0
              && sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x1AD6u, *(_DWORD *)(v130 + 24), *(_QWORD *)(a1 + 104)) != 1)
            {
              v294 = v296;
              v295 = 0x800000000;
              sub_22EAAC034(a1, v130, (uint64_t)&v294);
              if ((_DWORD)v295)
              {
                sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v130 + 24), 0x1AD6u, 0, (uint64_t)&v286);
                v140 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v290);
                LOBYTE(v284) = v295 > 1;
                sub_22E894E38(v140, (unsigned __int8 *)&v284);
                sub_22E903BEC((unsigned int *)&v286);
                sub_22EAAC328(a1, (uint64_t)v290, (uint64_t)&v294);
              }
              if (v294 != v296)
                free(v294);
            }
          }
          if (sub_22EAABFD4(v130))
            v131 = 1;
          else
            v132 |= sub_22EFD7260(v130) != 0;
        }
        if ((*(_DWORD *)(v130 + 28) & 0x7F) != 0x39)
          sub_22EAB5DA0((uint64_t)v276, v130);
      }
      else if ((v133 & 0x7F) == 8)
      {
        v134 = *(_QWORD *)(v130 + 40);
        if ((v134 & 4) == 0)
        {
          v135 = v134 & 0xFFFFFFFFFFFFFFF8;
          if ((v134 & 0xFFFFFFFFFFFFFFF8) != 0)
          {
            v136 = *(_DWORD *)(v135 + 28);
            if ((v136 & 0x7Eu) - 52 <= 5 && (v136 & 0x80) == 0 && (*(_BYTE *)(v135 + 83) & 4) != 0)
            {
              v137 = v277;
              if (((unsigned __int16)sub_22EAB3978(v277, v135) >> 8) - 3 > 1)
              {
                sub_22EAB6130(v137, *v279, v135);
              }
              else
              {
                v138 = v278;
                v139 = *((unsigned int *)v278 + 2);
                if (v139 >= *((unsigned int *)v278 + 3))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v139 = *((unsigned int *)v138 + 2);
                }
                (*v138)[v139] = v135;
                ++*((_DWORD *)v138 + 2);
              }
            }
          }
        }
      }
      v130 = *(_QWORD *)(v130 + 8) & 0xFFFFFFFFFFFFFFF8;
    }
    while (v130);
    if ((v132 & 1) != 0)
    {
      v141 = sub_22E488FF8((uint64_t)v282);
      if (v141 != v142)
      {
        v143 = v141;
        v144 = v142;
        v145 = v131 & 1;
        while (2)
        {
          LOBYTE(v290) = v145;
          if ((*(_BYTE *)(v143 + 28) & 0x80) != 0 || sub_22EAABFD4(v143))
            goto LABEL_284;
          v146 = (*(_DWORD *)(v143 + 28) & 0x7Eu) - 54 >= 4 ? 0 : v143;
          v294 = (void **)v146;
          if (!v146 || (*(_BYTE *)(v146 + 29) & 2) != 0 || sub_22E4808EC(v146))
            goto LABEL_284;
          v147 = *(_DWORD *)(v146 + 24);
          if (sub_22F1E2440(*(_QWORD **)(a1 + 112), v147, 0))
          {
            v147 = sub_22F1E25A4(*(_QWORD **)(a1 + 112), v147);
            if ((v147 & 0x80000000) == 0)
              goto LABEL_270;
          }
          else if ((v147 & 0x80000000) == 0)
          {
LABEL_270:
            if (!v147)
              goto LABEL_279;
LABEL_274:
            v148 = sub_22F1E361C(*(_QWORD **)(a1 + 112), v147);
            if (v148 == 3 || v148 == 0)
            {
LABEL_279:
              if (sub_22EFD7260(v146))
              {
                v286 = (void **)&v290;
                v287 = (_QWORD *)a1;
                v288 = (void **)&v294;
                if ((*(_DWORD *)(v146 + 28) & 0x7F) == 0x39)
                {
                  v150 = 6672;
                  v151 = 7016;
                }
                else
                {
                  v150 = 6673;
                  v151 = 7017;
                }
                sub_22EAAC484((uint64_t)&v286, v150, v151);
              }
              goto LABEL_284;
            }
            do
LABEL_284:
              v143 = *(_QWORD *)(v143 + 8) & 0xFFFFFFFFFFFFFFF8;
            while (v143 && (*(_DWORD *)(v143 + 28) & 0x7Eu) - 54 > 3);
            if (v143 == v144)
              goto LABEL_287;
            continue;
          }
          break;
        }
        v147 = sub_22F1E238C(*(_QWORD **)(a1 + 112), v147);
        if (!v147)
          goto LABEL_279;
        goto LABEL_274;
      }
    }
  }
LABEL_287:
  if ((_DWORD)v292)
  {
    v152 = v291;
    v153 = 8 * v292;
    do
    {
      v154 = *v152;
      sub_22EAB6130(a1, v283, *v152);
      if (v154)
        v155 = (*(_DWORD *)(v154 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFC;
      else
        v155 = 0;
      if (v155)
        sub_22EAB61F0(v280, (_QWORD *)v154);
      ++v152;
      v153 -= 8;
    }
    while (v153);
  }
  v156 = *(_QWORD *)(a1 + 88);
  if ((sub_22EFC3D58((uint64_t)v282) || (*(_QWORD *)(*(_QWORD *)(v156 + 2000) + 8) & 0x20000000000000) != 0)
    && (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 8) & 0x20000000000000) == 0)
  {
    v158 = (_QWORD **)v282;
    sub_22E3CD31C((uint64_t *)(*((_QWORD *)v282 + 13) + 96), *((_QWORD *)v282 + 13));
    if ((*v158[16] & 0x400) != 0
      || (v159 = v282,
          sub_22E3CD31C((uint64_t *)(*((_QWORD *)v282 + 13) + 96), *((_QWORD *)v282 + 13)),
          *(_DWORD *)(v159[16] + 16)))
    {
      sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v282 + 6), 0x1941u, 0, (uint64_t)v275);
      sub_22E903BEC(v275);
    }
  }
  sub_22EAB2F64(a1, (uint64_t)v282, v157);
  v160 = sub_22E488FF8((uint64_t)v282);
  if (v160 != v161)
  {
    v162 = v160;
    v163 = v161;
    do
    {
      if (!sub_22E692064(v162))
      {
        v164 = sub_22EA223D4(a1, v162, 1);
        if (v164)
          sub_22EFCA95C(v162, v164);
      }
      do
        v162 = *(_QWORD *)(v162 + 8) & 0xFFFFFFFFFFFFFFF8;
      while (v162 && (*(_DWORD *)(v162 + 28) & 0x7Eu) - 54 > 3);
    }
    while (v162 != v163);
  }
  v165 = (*(uint64_t (**)(_QWORD, BOOL))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) + 736))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088), ((*(unsigned __int16 *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 248) | (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 250) << 16)) & 0xE0000) == 0);
  v166 = v282;
  if ((sub_22EFC7ADC((unint64_t)v282 + 64) & 1) != 0 || (*((_BYTE *)v166 + 28) & 0x80) != 0)
    goto LABEL_406;
  if (v165 == 2)
  {
    sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
    if ((*(_WORD *)(*((_QWORD *)v166 + 16) + 8) & 0x200) != 0)
    {
      v206 = sub_22F282248((uint64_t)v166);
      if (v206 != v207)
      {
        v208 = v206;
        v209 = v207;
        LODWORD(v168) = 0;
        LODWORD(v169) = 0;
        do
        {
          if (sub_22EFD3AF0(v208, (int *)&v286)
            && (*(_BYTE *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v208 + 32))(v208) + 82) & 0x40) == 0)
          {
            v210 = *(_QWORD *)(v208 + 80);
            LODWORD(v168) = (v210 >> 23) & 1 | v168;
            LODWORD(v169) = (v210 >> 24) & 1 | v169;
          }
          do
            v208 = *(_QWORD *)(v208 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v208 && (*(_DWORD *)(v208 + 28) & 0x7F) != 0x37);
        }
        while (v208 != v209);
LABEL_394:
        sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
        if ((*(_WORD *)(*((_QWORD *)v166 + 16) + 8) & 0x2000) != 0)
        {
          v212 = sub_22EFD10F8((unint64_t)v166);
          if (!v212)
            goto LABEL_401;
          v213 = v212;
          if ((*(_BYTE *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v212 + 32))(v212) + 82) & 0x40) != 0)
            goto LABEL_401;
          LODWORD(v211) = *(_BYTE *)(v213 + 83) & 1;
        }
        else
        {
          sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
          if ((**((_QWORD **)v166 + 16) & 0x4000000000) != 0)
            goto LABEL_401;
          sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
          v211 = (**((_QWORD **)v166 + 16) >> 50) & 1;
        }
        if ((v169 & v211 & 1) != 0)
        {
LABEL_470:
          v167 = 1;
          goto LABEL_407;
        }
LABEL_401:
        if ((v168 & 1) == 0)
          goto LABEL_406;
        v214 = *(_QWORD *)(a1 + 88);
        v215 = (*(_DWORD *)(*(_QWORD *)(v214 + 15088) + 56) - 3) >= 3 ? 64 : 128;
        if (sub_22EF5CDF0(v214, *((_QWORD *)v166 + 6)) > v215)
          goto LABEL_406;
        goto LABEL_470;
      }
    }
    else
    {
      sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
      if ((**((_QWORD **)v166 + 16) & 0x400000000) == 0)
      {
        sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
        v168 = (**((_QWORD **)v166 + 16) >> 40) & 1;
        sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
        v169 = (**((_QWORD **)v166 + 16) >> 46) & 1;
        goto LABEL_394;
      }
    }
    LODWORD(v169) = 0;
    LOBYTE(v168) = 0;
    goto LABEL_394;
  }
  if (v165 == 1)
  {
    sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
    if ((**((_QWORD **)v166 + 16) & 0x4000000000000) != 0)
    {
      v167 = !sub_22F32A134((uint64_t)v166);
      goto LABEL_407;
    }
    goto LABEL_406;
  }
  sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
  if ((*(_WORD *)(*((_QWORD *)v166 + 16) + 8) & 0x200) != 0
    || (sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13)),
        (**((_QWORD **)v166 + 16) & 0x400000000) != 0))
  {
    v167 = 0;
  }
  else
  {
    sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
    if ((**((_QWORD **)v166 + 16) & 0x400000000000) == 0)
      goto LABEL_406;
    v167 = 1;
  }
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0 && sub_22EABDAF8((uint64_t)v166))
  {
    sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
    if ((**((_QWORD **)v166 + 16) & 0x800000000) == 0)
    {
      if (!sub_22EACBB38((uint64_t)v166))
        goto LABEL_406;
      v167 = 1;
    }
  }
  sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13));
  if ((*(_WORD *)(*((_QWORD *)v166 + 16) + 8) & 0x2000) != 0
    || (sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13)),
        (**((_QWORD **)v166 + 16) & 0x4000000000) != 0)
    || (sub_22E3CD31C((uint64_t *)(*((_QWORD *)v166 + 13) + 96), *((_QWORD *)v166 + 13)),
        (**((_QWORD **)v166 + 16) & 0x4000000000000) != 0))
  {
    v170 = sub_22E488FF8((uint64_t)v166);
    if (v170 != v171)
    {
      v172 = v170;
      v173 = v171;
      do
      {
        if ((*(_BYTE *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v172 + 32))(v172) + 82) & 0x40) == 0)
        {
          v174 = *(_DWORD *)(v172 + 28) & 0x7F;
          if (v174 == 55)
          {
            LODWORD(v286) = 0;
            if ((sub_22EFD8088(v172, (int *)&v286) & 1) != 0)
            {
              v167 = 1;
LABEL_340:
              if ((*(_BYTE *)(v172 + 83) & 1) == 0)
                goto LABEL_406;
              goto LABEL_341;
            }
            v174 = *(_DWORD *)(v172 + 28) & 0x7F;
          }
          if (v174 == 57)
            goto LABEL_340;
        }
        do
LABEL_341:
          v172 = *(_QWORD *)(v172 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v172 && (*(_DWORD *)(v172 + 28) & 0x7Eu) - 54 > 3);
      }
      while (v172 != v173);
    }
  }
  else
  {
LABEL_406:
    v167 = 0;
  }
LABEL_407:
  v216 = v282;
  v217 = *((_QWORD *)v282 + 9);
  if ((v217 & 0x1800000000) != 0x1000000000)
  {
    v218 = 0x800000000;
    if (v167)
      v218 = 0;
    v217 = v217 & 0xFFFFFFE7FFFFFFFFLL | v218;
    *((_QWORD *)v282 + 9) = v217;
  }
  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 148) == 11)
  {
    v216[9] = v217 | 0x400000000;
  }
  else
  {
    sub_22E3CD31C((uint64_t *)(v216[13] + 96), v216[13]);
    if ((*(_QWORD *)v216[16] & 0x100000000000) == 0)
    {
      v219 = 0x400000000;
      if (!v167)
        v219 = 0;
      *((_QWORD *)v282 + 9) = *((_QWORD *)v282 + 9) & 0xFFFFFFFBFFFFFFFFLL | v219;
    }
  }
  v220 = *(_QWORD *)(a1 + 72);
  if ((*(_BYTE *)(v220 + 197) & 0x10) != 0)
  {
    sub_22EAB631C(a1, *((_DWORD *)v282 + 14), (uint64_t)v282, 0);
    v220 = *(_QWORD *)(a1 + 72);
  }
  if ((*(_BYTE *)(v220 + 68) & 0x20) == 0)
    goto LABEL_496;
  if (!sub_22E466F7C((uint64_t)v282))
  {
    if (!sub_22EAB65F8((uint64_t)v282))
      goto LABEL_496;
    v290 = v282;
    v229 = *((_QWORD *)v282 + 17);
    v230 = (int *)(v229 & 0xFFFFFFFFFFFFFFF8);
    if ((v229 & 4) != 0)
      v231 = 0;
    else
      v231 = (int *)(v229 & 0xFFFFFFFFFFFFFFF8);
    v284 = v231;
    if (!v231)
    {
      if ((*((_DWORD *)v282 + 7) & 0x7E) != 0x24)
      {
        sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v282 + 6), 0xC43u, 0, (uint64_t)&v286);
        LODWORD(v294) = 1;
        goto LABEL_489;
      }
      v232 = *((_QWORD *)v282 + 19);
      v230 = (int *)(v232 & 0xFFFFFFFFFFFFFFF8);
      if ((v232 & 4) != 0 && v230)
      {
        do
        {
          v233 = *(_QWORD *)(*(_QWORD *)v230 + 152);
          v230 = (int *)(v233 & 0xFFFFFFFFFFFFFFF8);
        }
        while ((v233 & 4) != 0 && v230);
      }
      v284 = v230;
    }
    v234 = *((_QWORD *)v230 + 7);
    v235 = *(_DWORD *)(v234 + 12) & 0x1FFFFFFF;
    if (v235 == 3)
    {
      v236 = 1;
      if ((*(_DWORD *)(*(_QWORD *)(v234 + 16) + 28) & 0x7F) == 0x26)
      {
        v237 = 0;
        goto LABEL_477;
      }
      v294 = (void **)v230;
      sub_22E8FCA40((_QWORD *)a1, v230[6], 0xC42u, 0, (uint64_t)&v286);
      v285 = 1;
      v250 = sub_22E8900C4((uint64_t)&v286, &v285);
      sub_22E890024(v250, (uint64_t *)&v294);
      sub_22E903BEC((unsigned int *)&v286);
    }
    else
    {
      v294 = (void **)v230;
      sub_22E8FCA40((_QWORD *)a1, v230[6], 0xC42u, 0, (uint64_t)&v286);
      v285 = 1;
      v248 = sub_22E8900C4((uint64_t)&v286, &v285);
      sub_22E890024(v248, (uint64_t *)&v294);
      sub_22E903BEC((unsigned int *)&v286);
      sub_22E8FCA40((_QWORD *)a1, v284[6], 0x1587u, 0, (uint64_t)&v286);
      v249 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v284);
      LODWORD(v294) = 3;
      sub_22E8900C4(v249, (int *)&v294);
      sub_22E903BEC((unsigned int *)&v286);
      if (!v235)
        goto LABEL_496;
      if ((*(_DWORD *)(*(_QWORD *)(v234 + 16) + 28) & 0x7F) == 0x26)
        goto LABEL_475;
    }
    sub_22E8FCA40((_QWORD *)a1, v284[6], 0x1586u, 0, (uint64_t)&v286);
    v251 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v284);
    LODWORD(v294) = 0;
    v252 = sub_22E8900C4(v251, (int *)&v294);
    v285 = 0;
    sub_22E8900C4(v252, &v285);
    sub_22E903BEC((unsigned int *)&v286);
LABEL_475:
    if (v235 < 2)
      goto LABEL_496;
    v236 = 0;
    v237 = 1;
LABEL_477:
    v253 = *(_QWORD *)(v234 + 24);
    if (v253 && (*(_DWORD *)(v253 + 28) & 0x7F) == 0x3B)
    {
      v254 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v253 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v255 = *(_DWORD *)(v254 + 16);
      if (v254)
        v256 = v255 == 11;
      else
        v256 = 0;
      if (v256)
      {
        if (((*(_DWORD *)(v254 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
          goto LABEL_505;
      }
      else if (v254 && v255 == 44)
      {
        v257 = sub_22F114198(*(_QWORD *)(v254 + 24));
        if ((*(_BYTE *)(v257 + 74) & 1) != 0 || *(_QWORD *)(v257 + 128) > 7uLL)
          goto LABEL_505;
      }
      else if (v255 == 9)
      {
        goto LABEL_505;
      }
    }
    v263 = v284;
    v294 = (void **)v284;
    if (v236)
    {
      sub_22E8FCA40((_QWORD *)a1, v284[6], 0xC42u, 0, (uint64_t)&v286);
      v285 = 1;
      v264 = sub_22E8900C4((uint64_t)&v286, &v285);
      sub_22E890024(v264, (uint64_t *)&v294);
      sub_22E903BEC((unsigned int *)&v286);
      v263 = v284;
    }
    sub_22E8FCA40((_QWORD *)a1, v263[6], 0x1586u, 0, (uint64_t)&v286);
    v265 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v284);
    v237 = 1;
    LODWORD(v294) = 1;
    v266 = sub_22E8900C4(v265, (int *)&v294);
    v285 = 1;
    sub_22E8900C4(v266, &v285);
    sub_22E903BEC((unsigned int *)&v286);
LABEL_505:
    if (v235 < 3)
      goto LABEL_496;
    v267 = *(_QWORD *)(v234 + 32);
    if (v267 && (*(_DWORD *)(v267 + 28) & 0x7F) == 0x3B)
    {
      v268 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v267 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v269 = *(_DWORD *)(v268 + 16);
      if (v268)
        v270 = v269 == 11;
      else
        v270 = 0;
      if (v270)
      {
        if (((*(_DWORD *)(v268 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
          goto LABEL_496;
      }
      else if (v268 && v269 == 44)
      {
        v271 = sub_22F114198(*(_QWORD *)(v268 + 24));
        if ((*(_BYTE *)(v271 + 74) & 1) != 0 || *(_QWORD *)(v271 + 128) > 7uLL)
          goto LABEL_496;
      }
      else if (v269 == 9)
      {
        goto LABEL_496;
      }
    }
    v272 = v284;
    v294 = (void **)v284;
    if (!v237)
    {
      sub_22E8FCA40((_QWORD *)a1, v284[6], 0xC42u, 0, (uint64_t)&v286);
      v285 = 1;
      v273 = sub_22E8900C4((uint64_t)&v286, &v285);
      sub_22E890024(v273, (uint64_t *)&v294);
      sub_22E903BEC((unsigned int *)&v286);
      v272 = v284;
    }
    sub_22E8FCA40((_QWORD *)a1, v272[6], 0x1586u, 0, (uint64_t)&v286);
    v274 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v284);
    LODWORD(v294) = 2;
    v262 = sub_22E8900C4(v274, (int *)&v294);
    v285 = 1;
    goto LABEL_494;
  }
  v290 = v282;
  v221 = *((_QWORD *)v282 + 17);
  v222 = (int *)(v221 & 0xFFFFFFFFFFFFFFF8);
  if ((v221 & 4) != 0)
    v223 = 0;
  else
    v223 = (int *)(v221 & 0xFFFFFFFFFFFFFFF8);
  v284 = v223;
  if (v223)
    goto LABEL_431;
  if ((*((_DWORD *)v282 + 7) & 0x7E) != 0x24)
  {
    sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v282 + 6), 0xC43u, 0, (uint64_t)&v286);
    LODWORD(v294) = 0;
LABEL_489:
    v258 = sub_22E8900C4((uint64_t)&v286, (int *)&v294);
    sub_22E890024(v258, (uint64_t *)&v290);
    sub_22E903BEC((unsigned int *)&v286);
    sub_22E8FCA40((_QWORD *)a1, v290[6], 0x1588u, 0, (uint64_t)&v286);
    sub_22E890024((uint64_t)&v286, (uint64_t *)&v290);
    goto LABEL_495;
  }
  v224 = *((_QWORD *)v282 + 19);
  v222 = (int *)(v224 & 0xFFFFFFFFFFFFFFF8);
  if ((v224 & 4) != 0 && v222)
  {
    do
    {
      v225 = *(_QWORD *)(*(_QWORD *)v222 + 152);
      v222 = (int *)(v225 & 0xFFFFFFFFFFFFFFF8);
    }
    while ((v225 & 4) != 0 && v222);
  }
  v284 = v222;
LABEL_431:
  v226 = *((_QWORD *)v222 + 7);
  v227 = *(_DWORD *)(v226 + 12) & 0x1FFFFFFF;
  if (v227 == 2)
  {
    if ((*(_DWORD *)(*(_QWORD *)(v226 + 16) + 28) & 0x7F) == 0x26)
    {
      v228 = 1;
LABEL_455:
      v243 = *(_QWORD *)(v226 + 24);
      if (v243 && (*(_DWORD *)(v243 + 28) & 0x7F) == 0x3B)
      {
        v244 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v243 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v245 = *(_DWORD *)(v244 + 16);
        if (v244)
          v246 = v245 == 11;
        else
          v246 = 0;
        if (v246)
        {
          if (((*(_DWORD *)(v244 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
            goto LABEL_496;
        }
        else if (v244 && v245 == 44)
        {
          v247 = sub_22F114198(*(_QWORD *)(v244 + 24));
          if ((*(_BYTE *)(v247 + 74) & 1) != 0 || *(_QWORD *)(v247 + 128) > 7uLL)
            goto LABEL_496;
        }
        else if (v245 == 9)
        {
          goto LABEL_496;
        }
      }
      v259 = v284;
      v294 = (void **)v284;
      if (v228)
      {
        sub_22E8FCA40((_QWORD *)a1, v284[6], 0xC42u, 0, (uint64_t)&v286);
        v285 = 0;
        v260 = sub_22E8900C4((uint64_t)&v286, &v285);
        sub_22E890024(v260, (uint64_t *)&v294);
        sub_22E903BEC((unsigned int *)&v286);
        v259 = v284;
      }
      sub_22E8FCA40((_QWORD *)a1, v259[6], 0x1586u, 0, (uint64_t)&v286);
      v261 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v284);
      LODWORD(v294) = 1;
      v262 = sub_22E8900C4(v261, (int *)&v294);
      v285 = 1;
LABEL_494:
      sub_22E8900C4(v262, &v285);
LABEL_495:
      sub_22E903BEC((unsigned int *)&v286);
      goto LABEL_496;
    }
    v294 = (void **)v222;
    sub_22E8FCA40((_QWORD *)a1, v222[6], 0xC42u, 0, (uint64_t)&v286);
    v285 = 0;
    v240 = sub_22E8900C4((uint64_t)&v286, &v285);
    sub_22E890024(v240, (uint64_t *)&v294);
    sub_22E903BEC((unsigned int *)&v286);
LABEL_452:
    sub_22E8FCA40((_QWORD *)a1, v284[6], 0x1586u, 0, (uint64_t)&v286);
    v241 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v284);
    LODWORD(v294) = 0;
    v242 = sub_22E8900C4(v241, (int *)&v294);
    v285 = 0;
    sub_22E8900C4(v242, &v285);
    sub_22E903BEC((unsigned int *)&v286);
  }
  else
  {
    v294 = (void **)v222;
    sub_22E8FCA40((_QWORD *)a1, v222[6], 0xC42u, 0, (uint64_t)&v286);
    v285 = 0;
    v238 = sub_22E8900C4((uint64_t)&v286, &v285);
    sub_22E890024(v238, (uint64_t *)&v294);
    sub_22E903BEC((unsigned int *)&v286);
    sub_22E8FCA40((_QWORD *)a1, v284[6], 0x1587u, 0, (uint64_t)&v286);
    v239 = sub_22E890024((uint64_t)&v286, (uint64_t *)&v284);
    LODWORD(v294) = 2;
    sub_22E8900C4(v239, (int *)&v294);
    sub_22E903BEC((unsigned int *)&v286);
    if (!v227)
      goto LABEL_496;
    if ((*(_DWORD *)(*(_QWORD *)(v226 + 16) + 28) & 0x7F) != 0x26)
      goto LABEL_452;
  }
  if (v227 >= 2)
  {
    v228 = 0;
    goto LABEL_455;
  }
LABEL_496:
  if (v291 != (unint64_t *)v293)
    free(v291);
}

uint64_t *sub_22EAB5C14(uint64_t *result, uint64_t a2)
{
  uint64_t *v3;
  unint64_t i;
  int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12[2];

  v3 = result;
  if ((*(_WORD *)(a2 + 72) & 0x80) != 0)
    result = (uint64_t *)sub_22EFCC320(a2 + 64);
  for (i = *(_QWORD *)(a2 + 80); i; i = *(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8)
  {
    v5 = *(_DWORD *)(i + 28);
    if ((v5 & 0x200) == 0)
    {
      if ((*(_DWORD *)(i + 28) & 0x7F) == 8)
      {
        v6 = *(_QWORD *)(i + 40);
        if ((v6 & 4) != 0)
          continue;
        v7 = v6 & 0xFFFFFFFFFFFFFFF8;
        if ((v6 & 0xFFFFFFFFFFFFFFF8) == 0)
          continue;
        v5 = *(_DWORD *)(v7 + 28);
      }
      else
      {
        v7 = i;
      }
      if ((v5 & 0x7Eu) - 58 >= 0xFFFFFFFA)
        goto LABEL_13;
      v8 = v5 & 0x7F;
      if (v8 == 29)
      {
        v7 = *(_QWORD *)(v7 + 48);
LABEL_13:
        result = sub_22EAE33F4(v3, (_QWORD *)v7);
        continue;
      }
      if ((v8 - 52) >= 0xFFFFFFFD)
      {
        v9 = *(_QWORD *)(v7 + 56);
        v10 = (unint64_t *)(v9 & 0xFFFFFFFFFFFFFFF8);
        if ((v9 & 4) != 0)
          v10 = (unint64_t *)v10[4];
        if (v10)
        {
          v11 = *v10;
          v12[0] = (uint64_t)v3;
          v12[1] = v7;
          result = sub_22EAE35B8(v12, v11, (uint64_t)(v10 + 1), 3);
        }
        continue;
      }
      if ((v8 - 67) >= 0xFFFFFFF9)
        goto LABEL_20;
      if (v8 == 31)
      {
        v7 = *(_QWORD *)(v7 + 48);
LABEL_20:
        result = sub_22EAE3458((uint64_t)v3, v7);
        continue;
      }
      if ((v8 - 38) >= 0xFFFFFFFD)
        goto LABEL_28;
      if (v8 == 28)
      {
        v7 = *(_QWORD *)(v7 + 48);
LABEL_28:
        result = (uint64_t *)sub_22EAB5C14(v3, v7);
      }
    }
  }
  return result;
}

BOOL sub_22EAB5D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 332)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

void sub_22EAB5DA0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  char v9;
  unsigned __int8 v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;

  v4 = *(_QWORD *)(a1 + 16);
  if (!a2 || (*(_BYTE *)(a2 + 28) & 0x80) != 0 || (*(_BYTE *)(a2 + 83) & 4) == 0)
    goto LABEL_9;
  v5 = *(uint64_t **)a1;
  v6 = **(_QWORD **)a1;
  if (((unsigned __int16)sub_22EAB3978(v6, a2) >> 8) - 3 > 1)
  {
    sub_22EAB6130(v6, *(_QWORD *)v5[2], a2);
LABEL_9:
    v9 = 0;
    goto LABEL_10;
  }
  v7 = v5[1];
  v8 = *(_DWORD *)(v7 + 8);
  if (v8 >= *(_DWORD *)(v7 + 12))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v8 = *(_DWORD *)(v7 + 8);
  }
  *(_QWORD *)(*(_QWORD *)v7 + 8 * v8) = a2;
  ++*(_DWORD *)(v7 + 8);
  v9 = 1;
LABEL_10:
  if ((sub_22EFC7ADC(**(_QWORD **)(a1 + 8) + 64) & 1) == 0)
  {
    v10 = sub_22EAB3978(v4, a2);
    if ((*(_BYTE *)(a2 + 29) & 2) == 0 && !sub_22E692064(a2) && v10 != 6)
    {
      v11 = sub_22EABBAB4(v4, a2, v10, 0, 0);
      v12 = 0x800000;
      if (!v11)
        v12 = 0;
      *(_QWORD *)(a2 + 80) = *(_QWORD *)(a2 + 80) & 0xFFFFFFFFFF7FFFFFLL | v12;
      sub_22EFD4304(**(_QWORD **)(a1 + 8), a2);
      if (**(_BYTE **)(a1 + 24))
      {
        v13 = 0x1000000;
      }
      else
      {
        v14 = sub_22EABBAB4(v4, a2, v10, 1, 0);
        v13 = 0x1000000;
        if (!v14)
          v13 = 0;
      }
      *(_QWORD *)(a2 + 80) = *(_QWORD *)(a2 + 80) & 0xFFFFFFFFFEFFFFFFLL | v13;
      sub_22EFD4504(**(_QWORD **)(a1 + 8), a2);
    }
    v15 = v10 > 5u || ((1 << v10) & 0x26) == 0;
    if (!v15 && sub_22E692064(a2))
    {
      *(_QWORD *)(a2 + 80) = *(_QWORD *)(a2 + 80) & 0xFFFFFFFFFEFFFFFFLL | ((unint64_t)**(unsigned __int8 **)(a1 + 24) << 24);
      sub_22EFD4504(**(_QWORD **)(a1 + 8), a2);
    }
    v16 = *(_DWORD *)(a2 + 28);
    if ((v16 & 0x80) == 0 && (v16 & 0x100) != 0 && (*(_QWORD *)(a2 + 80) & 0x4000000) != 0)
    {
      sub_22EFC8E88(a2);
      v19 = *((unsigned int *)v18 + 2);
      if ((_DWORD)v19)
      {
        v20 = 8 * v19;
        v21 = *v18;
        while (*(_WORD *)(*(_QWORD *)v21 + 32) != 155)
        {
          v21 += 8;
          v20 -= 8;
          if (!v20)
            goto LABEL_30;
        }
      }
      else
      {
        v21 = *v18;
      }
      if (v21 != *v18 + 8 * v19)
      {
        if (*(_DWORD *)(*(_QWORD *)(v4 + 72) + 192) >= 0xB532B80u
          && (*(_BYTE *)(a2 + 82) & 0x80) != 0
          && v10 <= 5u
          && ((1 << v10) & 0x23) != 0)
        {
          sub_22EAB38AC(a2);
        }
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v23 = *((unsigned int *)v22 + 2);
          if ((_DWORD)v23)
          {
            v24 = 8 * v23;
            v25 = *v22;
            while (*(_WORD *)(*(_QWORD *)v25 + 32) != 155)
            {
              v25 += 8;
              v24 -= 8;
              if (!v24)
                goto LABEL_30;
            }
          }
          else
          {
            v25 = *v22;
          }
          if (v25 != *v22 + 8 * v23)
          {
            v26 = *(_DWORD *)(v4 + 13024);
            if (v26 >= *(_DWORD *)(v4 + 13028))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v26 = *(_DWORD *)(v4 + 13024);
            }
            *(_QWORD *)(*(_QWORD *)(v4 + 13016) + 8 * v26) = a2;
            ++*(_DWORD *)(v4 + 13024);
          }
        }
      }
    }
LABEL_30:
    v17 = *(_QWORD *)(a2 + 80);
    if ((v17 & 0x2000000) != 0 && (v17 & 0xC0000000) != 0 && sub_22EFD7260(a2))
      sub_22EAC9110(v4, (_QWORD *)a2, *(_DWORD *)(a2 + 24));
    if ((v9 & 1) == 0)
      sub_22EAB61F0(**(_QWORD ***)(a1 + 32), (_QWORD *)a2);
  }
}

uint64_t sub_22EAB6130(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;
  char v7;
  __int16 v8;
  char v9;

  result = sub_22EAB3978(a1, a3);
  v7 = result;
  if ((unsigned __int16)result != 6)
  {
    if ((unsigned __int16)result >= 0x100u)
    {
      v8 = result;
      v9 = result;
      sub_22F32A674((_QWORD *)(a1 + 2272));
      LOWORD(result) = v8;
      v7 = v9;
      *(_DWORD *)(a1 + 2416) = 0;
    }
    if (v7 != 6)
    {
      result = sub_22EAB6B44(a1, a3, result);
      if ((result & 1) == 0)
        return result;
      return sub_22EFC77E8(a3, 1);
    }
    result = sub_22EAB7464(a1, a2, a3, BYTE1(result));
    if ((_DWORD)result)
      return sub_22EFC77E8(a3, 1);
  }
  return result;
}

uint64_t sub_22EAB61F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;
  unsigned int v5;
  unsigned int v6;
  uint64_t *v7;
  _QWORD *v8;

  v8 = a2;
  if ((a2[10] & 0xE000) != 0x4000
    || (result = sub_22EAE3E28(a1, 0x127Cu, (uint64_t)a2, (unsigned int (*)(uint64_t, _QWORD))sub_22EAE3F20, (uint64_t)&v7), (result & 1) == 0))
  {
    if ((*(_QWORD *)((*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2) + 80) & 0x400000) != 0)
      v5 = 3236;
    else
      v5 = 4029;
    v7 = (uint64_t *)&v8;
    result = sub_22EAE3E28(a1, v5, (uint64_t)a2, (unsigned int (*)(uint64_t, _QWORD))sub_22EAE3F28, (uint64_t)&v7);
    if ((_DWORD)result)
    {
      if ((v8[10] & 0x2000000) == 0)
        return result;
      goto LABEL_14;
    }
    if ((v8[10] & 0xC0000000) == 0x80000000)
      v6 = 3073;
    else
      v6 = 4028;
    v7 = (uint64_t *)&v8;
    result = sub_22EAE3E28(a1, v6, (uint64_t)v8, (unsigned int (*)(uint64_t, _QWORD))sub_22EAE3F7C, (uint64_t)&v7);
    if ((_DWORD)result)
    {
      result = (uint64_t)v8;
      if ((*((_BYTE *)v8 + 83) & 2) != 0)
      {
LABEL_14:
        result = (*(uint64_t (**)(_QWORD *))(*v8 + 32))(v8);
        if ((*(_BYTE *)(result + 82) & 0x40) != 0)
          return sub_22F328148(a1, v8);
      }
    }
  }
  return result;
}

uint64_t sub_22EAB631C(uint64_t a1, unsigned int a2, uint64_t a3, unsigned int a4)
{
  uint64_t result;
  unsigned int v9;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  result = sub_22E463414(a3);
  if ((_DWORD)result)
  {
    result = sub_22EFC7ADC(a3 + 64);
    if ((result & 1) == 0)
    {
      result = sub_22EFC7ADC(*(_QWORD *)(a1 + 216));
      if ((result & 1) == 0)
      {
        v9 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
        if (v9 > 3 || v9 == 2)
        {
          if (*(_DWORD *)(a1 + 8352) != 1)
          {
            v11 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 72);
            if ((_DWORD)v11)
            {
              if ((v11 & 0x800000000) != 0 && !*(_DWORD *)(a1 + 12304))
              {
                result = sub_22EC7EB80(a1);
                if ((result & 1) == 0)
                {
                  if ((a4 & 1) == 0)
                    return sub_22EAD17EC(a1, a2, a3, 0);
                  return result;
                }
              }
            }
          }
          sub_22EAD147C(a1);
          v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 32))(a3);
          v24 = v12;
          v25 = a4;
          result = sub_22F32AB74((uint64_t)&v26, a1 + 10640, &v24, &v25);
          if (v27)
          {
            if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 148) == 11)
            {
              v13 = sub_22EFD10F8(v12);
              if (v13)
              {
                v14 = (_QWORD *)v13;
                v15 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v13 + 32))(v13);
                if (((*(_BYTE *)(v15 + 82) & 0xC) != 0 || sub_22EFD7260(v15))
                  && (*(_BYTE *)((*(uint64_t (**)(_QWORD *))(*v14 + 32))(v14) + 82) & 0x40) == 0)
                {
                  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v12 + 104) + 96), *(_QWORD *)(v12 + 104));
                  if ((**(_QWORD **)(v12 + 128) & 0x40) != 0 && (sub_22EFBF86C((uint64_t)v14, &v24, 0) & 1) == 0)
                  {
                    v19 = *(_QWORD *)(a1 + 216);
                    v20 = *(_QWORD *)(a1 + 3200);
                    *(_QWORD *)(a1 + 3200) = 0;
                    v21 = *(_QWORD *)(a1 + 10288);
                    v22 = *(_DWORD *)(a1 + 1944);
                    v23 = *(_DWORD *)(a1 + 2192);
                    *(_QWORD *)(a1 + 216) = v14 + 9;
                    *(_QWORD *)(a1 + 10288) = 0;
                    *(_DWORD *)(a1 + 1944) = *(_DWORD *)(a1 + 1904);
                    *(_DWORD *)(a1 + 2192) = *(_DWORD *)(a1 + 1960);
                    sub_22EABFC00(a1, v14);
                    if (v19)
                    {
                      *(_QWORD *)(a1 + 216) = v19;
                      *(_QWORD *)(a1 + 3200) = v20;
                      *(_QWORD *)(a1 + 10288) = v21;
                      *(_DWORD *)(a1 + 1944) = v22;
                      *(_DWORD *)(a1 + 2192) = v23;
                    }
                  }
                  else
                  {
                    v16 = sub_22EFD10F8(v12);
                    sub_22EB4E494(a1, a2, v16, 1);
                  }
                }
              }
            }
          }
          else
          {
            if (!a4 || *(_BYTE *)(v26 + 8))
              return result;
            *(_BYTE *)(v26 + 8) = 1;
          }
          result = sub_22EA3DA94(v12);
          if (result)
          {
            return sub_22EAD17EC(a1, a2, v12, 0);
          }
          else
          {
            v17 = *(_DWORD *)(a1 + 10376);
            if (v17 >= *(_DWORD *)(a1 + 10380))
            {
              result = llvm::SmallVectorBase<unsigned int>::grow_pod();
              v17 = *(_DWORD *)(a1 + 10376);
            }
            v18 = (unint64_t *)(*(_QWORD *)(a1 + 10368) + 16 * v17);
            *v18 = v12;
            v18[1] = a2;
            ++*(_DWORD *)(a1 + 10376);
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_22EAB65F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 132)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

void sub_22EAB6658(uint64_t a1, int a2, unint64_t a3)
{
  uint64_t v6;
  BOOL v7;
  unsigned __int16 v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  _BYTE v28[56];
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  int v37;
  _BYTE v38[32];
  void *v39;
  uint64_t v40;
  _BYTE v41[32];
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _QWORD v46[18];

  v46[17] = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_BYTE *)(v6 + 16) == 26;
  else
    v7 = 0;
  if (!v7)
    v6 = sub_22F10CF48(v6);
  if ((*(_QWORD *)(v6 + 16) & 0x3C0000000000000) == 0x240000000000000)
  {
    v8 = sub_22EAB3978(a1, a3);
    if (v8 != 6)
    {
      sub_22EAE3FB0((uint64_t)&v32, a1, a2, a3, v8, 0);
LABEL_57:
      v45 = 0;
      v44 = 0u;
      v43 = 0u;
      LODWORD(v42) = v33;
      if (v33)
      {
        if (v33 == 2)
        {
          *(_QWORD *)&v43 = v39;
          *((_QWORD *)&v43 + 1) = v40;
        }
      }
      else
      {
        LODWORD(v42) = 7;
        *(_QWORD *)&v44 = sub_22EBBA59C(v32, 0, 136) & 0xFFFFFFFFFFFFFFFELL;
      }
      sub_22EB149A8((uint64_t *)a1, (uint64_t *)a3, (__int128 *)&v42);
      if (v39 != v41)
        free(v39);
      if (v35 != v34)
        free(v35);
      return;
    }
    v9 = HIBYTE(v8);
    if (v8 < 0x100u)
    {
      if ((*(_BYTE *)(a3 + 87) & 0x20) != 0)
        v12 = *(_QWORD *)(a3 + 168);
      else
        v12 = 0;
      sub_22EAE797C((uint64_t)&v42, (_QWORD *)a1, a2, v12);
      sub_22EAE3FB0((uint64_t)&v32, a1, a2, a3, 0, (uint64_t)&v42);
      llvm::deallocate_buffer(*((llvm **)&v43 + 1), (void *)(16 * DWORD2(v44)));
      goto LABEL_57;
    }
    LODWORD(v42) = 7;
    BYTE4(v42) = 0;
    LODWORD(v43) = a2;
    v44 = 0uLL;
    *((_QWORD *)&v43 + 1) = a3;
    LODWORD(v45) = 0;
    v46[0] = 0;
    v46[1] = 0;
    sub_22EE012D0(a1, (unint64_t)&v42);
    v32 = a1;
    v33 = 5;
    v34 = v38;
    v35 = v38;
    v36 = 4;
    v37 = 0;
    v39 = v41;
    v40 = 0x400000000;
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) == 0)
      v33 = 1;
    if ((*(_BYTE *)(a3 + 28) & 0x80) != 0)
    {
LABEL_56:
      sub_22EE013E8((int32x2_t *)a1);
      goto LABEL_57;
    }
    if ((*(unsigned int (**)(unint64_t))(*(_QWORD *)a3 + 72))(a3))
    {
      v10 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a3 + 64))(a3);
      if (v10)
      {
        sub_22EB17190(v32, v10);
        if (v11)
          v33 = 0;
      }
      goto LABEL_56;
    }
    sub_22EAE5FA8((uint64_t)v28, a1, a3 + 72);
    v42 = 0;
    v30 = 3;
    v31 = 0;
    v29 = *(unsigned int *)(a1 + 1704);
    sub_22EB4DDB8(a1 + 3688, &v31, (int *)&v29, (__int16 *)(a1 + 1693), (uint64_t *)&v42, &v30);
    v13 = *(unsigned int *)(a1 + 3696);
    v14 = v13 - 2;
    v15 = *(_QWORD *)(a1 + 3688);
    v16 = *(_DWORD *)(v15 + 576 * (v13 - 2));
    if (v16 == 5)
    {
      *(_BYTE *)(v15 + 576 * v13 - 4) = *(_BYTE *)(v15 + 576 * v14 + 572);
      v17 = 1;
    }
    else if (v16 == 2)
    {
      *(_BYTE *)(v15 + 576 * v13 - 4) = 1;
      v17 = *(_BYTE *)(v15 + 576 * v14 + 573) != 0;
    }
    else
    {
      v17 = 0;
      *(_BYTE *)(v15 + 576 * v13 - 4) = 0;
    }
    v18 = v15 + 576 * v13;
    *(_BYTE *)(v18 - 3) = v17;
    *(_WORD *)(a1 + 1693) = 0;
    if (*(_DWORD *)(a1 + 1848))
    {
      llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(a1 + 1776), (llvm::SmallPtrSetImplBase *)(v18 - 560));
      sub_22EAEAE08(a1 + 1840, (uint64_t *)(v18 - 496));
    }
    v19 = *(_WORD *)(a3 + 80) & 0x7F;
    v20 = -40;
    if (v19 > 0x46)
    {
      switch(v19)
      {
        case 'S':
          goto LABEL_41;
        case 'G':
          v20 = -56;
          goto LABEL_41;
        case 'Q':
          goto LABEL_41;
      }
    }
    else
    {
      if (v19 <= 0x18)
      {
        if (v19 == 16)
          goto LABEL_29;
        if (((1 << v19) & 0x1066) != 0)
          goto LABEL_41;
        if (v19 == 24)
        {
LABEL_29:
          v20 = -48;
LABEL_41:
          v21 = *(_QWORD *)(a3 + 72 + v20 + 16);
          v22 = v21 & 0xFFFFFFFFFFFFFFF8;
          if ((v21 & 4) != 0)
            v22 = *(_QWORD *)(v22 + 8);
          if (v22)
            v23 = v22 - 64;
          else
            v23 = 0;
          v24 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a3 + 16))(a3);
          v25 = HIDWORD(v24);
          if (!HIDWORD(v24))
            LODWORD(v25) = *(_DWORD *)(a3 + 24);
          sub_22EABAD94((uint64_t)&v42, a1, v23, a3, v9, v25);
          v26 = sub_22EABAE00(&v42);
          if (*((_QWORD **)&v44 + 1) != v46)
            free(*((void **)&v44 + 1));
          if ((v26 & 1) == 0 && (v26 & 0xFFFFFFFFFFFFFFFELL) != 0 && v33 != 3)
          {
            sub_22EB17190(v32, v26 & 0xFFFFFFFFFFFFFFFELL);
            if (v27)
              v33 = 0;
          }
          sub_22EB48E64(a1);
          sub_22EAE7390((uint64_t)v28);
          goto LABEL_56;
        }
      }
      if (v19 == 70)
      {
LABEL_39:
        v20 = -64;
        goto LABEL_41;
      }
    }
    if (v19 - 52 < 6)
    {
      v20 = -72;
      goto LABEL_41;
    }
    if (v19 - 33 < 5)
      goto LABEL_39;
    goto LABEL_29;
  }
}

uint64_t sub_22EAB6B44(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  unsigned int v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  int v20;
  int v21;
  int v22;
  int v23;
  _QWORD *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  BOOL v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  int v58;
  uint64_t v59;
  int v60;
  char v61;
  uint64_t v62;
  int *v63;
  unsigned int v64;
  uint64_t v65;
  char v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  unsigned int v73[24];
  unsigned int v74;
  BOOL v75;
  unint64_t v76;
  __int128 v77;
  int v78;
  uint64_t v79;
  int v80[3];

  v80[0] = a3;
  v6 = *(_WORD *)(a2 + 80) & 0x7F;
  v7 = -40;
  if (v6 > 0x46)
  {
    if (v6 == 83)
      goto LABEL_17;
    if (v6 == 71)
    {
      v7 = -56;
      goto LABEL_17;
    }
    if (v6 != 81)
    {
LABEL_12:
      v8 = v6 - 52;
      v9 = v6 - 33 >= 5;
      v10 = -48;
      if (!v9)
        v10 = -64;
      if (v8 >= 6)
        v7 = v10;
      else
        v7 = -72;
    }
  }
  else
  {
    if (v6 > 0x18)
      goto LABEL_11;
    if (v6 == 16)
    {
LABEL_4:
      v7 = -48;
      goto LABEL_17;
    }
    if (((1 << v6) & 0x1066) == 0)
    {
      if (v6 == 24)
        goto LABEL_4;
LABEL_11:
      if (v6 == 70)
      {
        v7 = -64;
        goto LABEL_17;
      }
      goto LABEL_12;
    }
  }
LABEL_17:
  v11 = *(_QWORD *)(a2 + 72 + v7 + 16);
  v12 = (_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
  if ((v11 & 4) != 0)
    v12 = (_QWORD *)*v12;
  if (v12)
    v13 = v12 - 8;
  else
    v13 = 0;
  if ((sub_22EFC7ADC((unint64_t)(v13 + 8)) & 1) != 0)
    return 0;
  v71 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
  v15 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 72) + 1);
  if (a3)
    v16 = a3 == 5;
  else
    v16 = 1;
  v17 = !v16;
  v18 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v18)
    v19 = *(_BYTE *)(v18 + 16) == 26;
  else
    v19 = 0;
  if (v19
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
    && (v18 = sub_22F10CF48(v18)) != 0)
  {
    v20 = (unsigned __int16)(*(_QWORD *)(v18 + 16) >> 38);
  }
  else
  {
    v20 = 0;
  }
  v21 = (v71 == a2) & (v15 >> 4);
  v69 = v17;
  if (v20 != (_DWORD)v17)
  {
    v23 = *(_DWORD *)(a2 + 24);
    v24 = (_QWORD *)a1;
    v25 = 3220;
LABEL_41:
    sub_22E8FCA40(v24, v23, v25, 0, (uint64_t)&v77);
    v26 = sub_22E8900C4((uint64_t)&v77, v80);
    v76 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    sub_22E8906A0(v26, (uint64_t *)&v76);
    sub_22E903BEC((unsigned int *)&v77);
    v72 = 0;
    v14 = 1;
    goto LABEL_42;
  }
  v22 = sub_22EFBF68C(a2);
  if (!((v22 ^ 1) & 1 | (v71 == a2) & (v15 >> 4)))
  {
    v23 = *(_DWORD *)(a2 + 24);
    v24 = (_QWORD *)a1;
    v25 = 3223;
    goto LABEL_41;
  }
  v72 = v22;
  v14 = 0;
LABEL_42:
  v27 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (!v27 || *(_BYTE *)(v27 + 16) != 26)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v27 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v27 = sub_22F10CF48(v27);
    else
      v27 = 0;
  }
  if (v80[0] == 3)
  {
    sub_22E3CD31C((uint64_t *)(v13[13] + 96), v13[13]);
    v28 = ((unint64_t)(*(unsigned __int8 *)(v13[16] + 10) << 16) >> 16) & 1;
  }
  else if (v80[0] == 1)
  {
    LODWORD(v28) = sub_22EAB82EC((uint64_t)v13);
  }
  else
  {
    LODWORD(v28) = 0;
  }
  v29 = *(_QWORD *)(a1 + 88);
  if ((v80[0] - 3) <= 1)
  {
    v70 = *(_QWORD *)(v27 + 24);
    v30 = v13[6];
    if (v30)
    {
      v31 = v30 & 0xFFFFFFFFFFFFFFF0;
    }
    else
    {
      v31 = sub_22EF6462C(v29, (unint64_t)v13);
      v29 = *(_QWORD *)(a1 + 88);
    }
    v32 = sub_22E46BB88(a2);
    v33 = sub_22EF5DD84(v29, v31, v32 >> 11);
    v34 = *(_QWORD *)(a1 + 88);
    v35 = sub_22E46BB88(a2);
    v36 = sub_22EF5DE18(v34, v33, (v35 >> 9) & 3);
    v76 = sub_22EF5F8C4(*(_QWORD *)(a1 + 88), v36, 1);
    if ((*(_QWORD *)((v70 & 0xFFFFFFFFFFFFFFF0) + 8) | v70 & 7) != (*(_QWORD *)((v76 & 0xFFFFFFFFFFFFFFF0) + 8) | v76 & 7))
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xC96u, 0, (uint64_t)&v77);
      LOBYTE(v74) = v80[0] == 4;
      v37 = sub_22E894E38((uint64_t)&v77, (unsigned __int8 *)&v74);
      sub_22E8901B8(v37, (uint64_t *)&v76);
      sub_22E903BEC((unsigned int *)&v77);
      v14 = 1;
    }
    if ((sub_22E47E1B0(v27) & 1) != 0)
    {
      if ((v21 & 1) != 0)
      {
        v72 = 1;
        goto LABEL_68;
      }
    }
    else
    {
      v38 = sub_22E47E1B0(v27);
      if ((v38 & 4) != 0)
        v39 = v21;
      else
        v39 = 1;
      if ((v39 & 1) != 0)
      {
        v72 |= (v38 & 4) >> 2;
        goto LABEL_68;
      }
    }
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xC95u, 0, (uint64_t)&v77);
    v75 = v80[0] == 4;
    v40 = sub_22E894E38((uint64_t)&v77, (unsigned __int8 *)&v75);
    v74 = (**(_DWORD **)(a1 + 72) >> 10) & 1;
    sub_22E89519C(v40, &v74);
    sub_22E903BEC((unsigned int *)&v77);
    v14 = 1;
    goto LABEL_68;
  }
  v70 = *(_QWORD *)(v29 + 16392);
LABEL_68:
  v41 = 0;
  if (a3 && a3 != 5)
    v41 = *(_QWORD *)(v27 + 40);
  v42 = 0;
  v76 = v41;
  if (a3 && a3 != 5)
  {
    v43 = *(_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xC91u, 0, (uint64_t)v73);
      sub_22E903BEC(v73);
      v42 = 0;
      goto LABEL_92;
    }
    v44 = sub_22F10ACF8(v43);
    if ((v44 & 1) != 0)
    {
      v42 = 1;
      if ((v44 & 4) != 0)
        goto LABEL_76;
    }
    else
    {
      v42 = *(_BYTE *)((v44 & 0xFFFFFFFFFFFFFFF0) + 8) & 1;
      if ((v44 & 4) != 0)
      {
LABEL_76:
        v45 = 1;
LABEL_80:
        if (((v45 ^ 1 | v21) & 1) != 0)
        {
          v72 |= v45;
        }
        else
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xC98u, 0, (uint64_t)&v77);
          sub_22E8900C4((uint64_t)&v77, v80);
          sub_22E903BEC((unsigned int *)&v77);
          v14 = 1;
        }
        v46 = v42 ^ 1 | v28;
        if (((v46 | v21) & 1) != 0)
        {
          v72 |= v46 ^ 1;
          goto LABEL_93;
        }
        if ((v80[0] & 0xFFFFFFFD) == 1)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xC92u, 0, (uint64_t)&v77);
          v47 = v80[0] == 3;
        }
        else
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xC93u, 0, (uint64_t)&v77);
          v47 = v80[0] == 4;
        }
        v48 = v47;
        LOBYTE(v74) = v48;
        sub_22E894E38((uint64_t)&v77, (unsigned __int8 *)&v74);
        sub_22E903BEC((unsigned int *)&v77);
LABEL_92:
        v14 = 1;
        goto LABEL_93;
      }
    }
    v45 = (*(unsigned __int8 *)((v44 & 0xFFFFFFFFFFFFFFF0) + 8) >> 2) & 1;
    goto LABEL_80;
  }
LABEL_93:
  v49 = 0;
  if (a3 && a3 != 5)
  {
    v50 = *(_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v50 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28
      && (v51 = *(_QWORD *)((sub_22F10ACF8(v50) & 0xFFFFFFFFFFFFFFF0) + 8), (v51 & 8) != 0))
    {
      v49 = *(_DWORD *)((v51 & 0xFFFFFFFFFFFFFFF0) + 0x18);
    }
    else
    {
      v49 = 0;
    }
  }
  v52 = v80[0];
  v53 = v49 >> 11;
  v54 = (v49 >> 9) & 3;
  v55 = sub_22E47E1B0(v27) >> 11;
  v56 = sub_22E47E1B0(v27);
  v57 = sub_22EAB8368(a1, v13, v52, v42, v53, v54, v55, (v56 >> 9) & 3, 0, 0);
  v58 = v57;
  v59 = **(_QWORD **)(a1 + 72);
  if ((v59 & 0x1000) == 0)
  {
    v60 = *(_DWORD *)(a2 + 28) & 0x7F;
    if ((v59 & 0x400) != 0)
    {
      if (v60 == 57)
        goto LABEL_114;
    }
    else if (v60 != 55)
    {
      goto LABEL_114;
    }
  }
  if ((*(_QWORD *)(a2 + 80) & 0xC0000000) != 0)
    v61 = v57;
  else
    v61 = 1;
  if ((v61 & 1) == 0 && *(_QWORD *)(a2 + 144) < 8uLL)
  {
    v62 = *(_QWORD *)(a2 + 56);
    if ((v62 & 4) != 0 && (v68 = v62 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v68 + 16)))
      v63 = **(int ***)(v68 + 24);
    else
      v63 = (int *)(a2 + 64);
    if ((*(_QWORD *)(a2 + 80) & 0xC0000000) == 0x80000000)
      v64 = 3598;
    else
      v64 = 3599;
    sub_22E8FCA40((_QWORD *)a1, *v63, v64, 0, (uint64_t)&v77);
    sub_22E8900C4((uint64_t)&v77, v80);
    sub_22E903BEC((unsigned int *)&v77);
    v14 = 1;
  }
LABEL_114:
  if (v71 == a2)
  {
    v65 = *(_QWORD *)(a2 + 80) & 0xC0000000;
    if (v65 != 0x80000000)
      v65 = 0x40000000;
    if (!v58)
      v65 = 0;
    *(_QWORD *)(a2 + 80) = v65 | *(_QWORD *)(a2 + 80) & 0xFFFFFFFF3FFFFFFFLL;
    if ((*(_WORD *)(v27 + 22) & 0x3C0) == 0)
    {
      sub_22E4913B4(v27, (uint64_t)&v77);
      v78 = 9;
      v79 = a2;
      *(_QWORD *)(a2 + 48) = sub_22EF63D8C(*(_QWORD *)(a1 + 88), v70, (uint64_t *)&v76, v69, &v77, 0);
    }
  }
  if ((v72 & 1) != 0 || sub_22EAB8670(a1, a2, v80[0], 0, 0))
  {
    if (v71 != a2)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x1166u, 0, (uint64_t)&v77);
      sub_22E8900C4((uint64_t)&v77, v80);
      sub_22E903BEC((unsigned int *)&v77);
      v14 = 1;
      sub_22EAB8670(a1, a2, v80[0], 0, 1);
      return v14;
    }
    sub_22EAB9ED0((_QWORD *)a1, a2, *(_DWORD *)(a2 + 24));
    if (*(_DWORD *)(a1 + 10680) > *(_DWORD *)(a1 + 11956))
      v67 = 1;
    else
      v67 = v14;
    if ((v67 & 1) == 0)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x1950u, 0, (uint64_t)&v77);
      sub_22E8900C4((uint64_t)&v77, v80);
      sub_22E903BEC((unsigned int *)&v77);
      if ((v72 & 1) == 0)
      {
        sub_22EAB8670(a1, a2, v80[0], 0, 1);
        return 0;
      }
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x15B1u, 0, (uint64_t)&v77);
      sub_22E8900C4((uint64_t)&v77, v80);
      sub_22E903BEC((unsigned int *)&v77);
    }
    if (v14 & 1 | ((v72 & 1) == 0))
      return v14;
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x190Bu, 0, (uint64_t)&v77);
    sub_22E8900C4((uint64_t)&v77, v80);
    sub_22E903BEC((unsigned int *)&v77);
    return 0;
  }
  return v14;
}

uint64_t sub_22EAB7464(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  int *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  _DWORD *v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 *v57;
  uint64_t v58;
  int v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  unsigned int *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  int v104;
  _BYTE v105[96];
  uint64_t v106;
  _BOOL4 v107;
  int v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  void *__p;
  __int16 v116;
  int v117;
  uint64_t v118;
  __int16 v119;
  char v120;
  uint64_t v121;
  __int128 v122;
  _QWORD v123[2];
  void *v124;
  _QWORD v125[30];

  v125[28] = *MEMORY[0x24BDAC8D0];
  if (!a2)
    goto LABEL_2;
  *(_QWORD *)&v122 = v123;
  *((_QWORD *)&v122 + 1) = 0x2000000000;
  if ((*(_QWORD *)(a3 + 40) & 7) == 6)
  {
    v18 = (int *)(*(_QWORD *)(a3 + 40) & 0xFFFFFFFFFFFFFFF8);
    v19 = *v18;
    sub_22EC65EB4((_QWORD *)a1, *v18, a2, (uint64_t)&v122);
    if (v19 > 0x22)
      goto LABEL_106;
    if (((1 << v19) & 0x300030000) != 0)
    {
      v20 = 34;
    }
    else
    {
      if (v19 != 31)
      {
        if (v19 != 34)
          goto LABEL_106;
        sub_22EC65EB4((_QWORD *)a1, 31, a2, (uint64_t)&v122);
        sub_22EC65EB4((_QWORD *)a1, 16, a2, (uint64_t)&v122);
      }
      v20 = 30;
    }
  }
  else
  {
    v20 = 0;
  }
  sub_22EC65EB4((_QWORD *)a1, v20, a2, (uint64_t)&v122);
LABEL_106:
  v51 = sub_22F3AC398(*(_QWORD *)(a1 + 88), (uint64_t *)v122, DWORD2(v122));
  *(_QWORD *)(a3 + 80) |= 0x8000000uLL;
  *(_QWORD *)(a3 + 128) = v51;
  if ((_QWORD *)v122 != v123)
    free((void *)v122);
LABEL_2:
  v7 = *(_QWORD *)(a3 + 16);
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  if ((v7 & 4) != 0)
    v8 = *(_QWORD *)(v8 + 8);
  v9 = v8 - 64;
  if (v8)
    v10 = (*(_WORD *)(v8 + 8) & 0x7Fu) - 38 >= 0xFFFFFFFD;
  else
    v10 = 0;
  v11 = !v10;
  if (v11)
    v12 = 0;
  else
    v12 = v9;
  v121 = v12;
  v13 = (*(_DWORD *)(a3 + 28) & 0x7E) - 54;
  if (v13 > 3)
  {
    v16 = 2;
    v9 = v12;
    goto LABEL_44;
  }
  if (v11)
  {
    v14 = *(_WORD *)(a3 + 80) & 0x7F;
    v15 = -40;
    if (v14 > 0x46)
    {
      switch(v14)
      {
        case 'S':
          goto LABEL_36;
        case 'G':
          v15 = -56;
          goto LABEL_36;
        case 'Q':
          goto LABEL_36;
      }
    }
    else
    {
      if (v14 <= 0x18)
      {
        if (v14 == 16)
          goto LABEL_18;
        if (((1 << v14) & 0x1066) != 0)
          goto LABEL_36;
        if (v14 == 24)
        {
LABEL_18:
          v15 = -48;
LABEL_36:
          v21 = *(_QWORD *)(a3 + 72 + v15 + 16);
          v22 = (_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
          if ((v21 & 4) != 0)
            v22 = (_QWORD *)*v22;
          if (v22)
            v9 = (uint64_t)(v22 - 8);
          else
            v9 = 0;
          v121 = v9;
          goto LABEL_42;
        }
      }
      if (v14 == 70)
      {
LABEL_34:
        v15 = -64;
        goto LABEL_36;
      }
    }
    if (v14 - 52 < 6)
    {
      v15 = -72;
      goto LABEL_36;
    }
    if (v14 - 33 < 5)
      goto LABEL_34;
    goto LABEL_18;
  }
LABEL_42:
  if ((sub_22E8FB7BC(a3) & 1) == 0)
  {
    if (sub_22F3AC3F0(a3))
      v48 = sub_22F141A3C(*(unsigned int *)(v47 + 8), 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
    else
      v48 = 0;
    if ((*(_BYTE *)(a3 + 29) & 2) == 0)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xC89u, 0, (uint64_t)&v122);
      LODWORD(v110) = a4;
      v49 = sub_22E8900C4((uint64_t)&v122, (int *)&v110);
      v114 = 0;
      v113 = 0;
      v111 = v48 | ((unint64_t)v48 << 32);
      v112 = 0;
      v119 = 1536;
      v118 = 0;
      HIBYTE(__p) = 0;
      v116 = 0;
      v117 = 0;
      strcpy((char *)&__p, " const");
      v120 = 0;
      sub_22E890748(v49, &v111);
      if (SHIBYTE(v119) < 0)
        operator delete(__p);
      sub_22E903BEC((unsigned int *)&v122);
    }
    v50 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (!v50 || *(_BYTE *)(v50 + 16) != 26)
      v50 = sub_22F10CF48(v50);
    sub_22E4913B4(v50, (uint64_t)&v122);
    DWORD1(v122) |= 1u;
    *(_QWORD *)(a3 + 48) = sub_22EF63D8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(v50 + 24), (uint64_t *)(v50 + 40), (unsigned __int16)(*(_QWORD *)(v50 + 16) >> 38), &v122, 0);
  }
  v16 = 1;
LABEL_44:
  v23 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v23)
    v24 = *(_BYTE *)(v23 + 16) == 26;
  else
    v24 = 0;
  if (!v24
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26
     || (v23 = sub_22F10CF48(v23)) == 0)
    || v16 != (unsigned __int16)(*(_QWORD *)(v23 + 16) >> 38))
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xC8Bu, 0, (uint64_t)&v122);
    LODWORD(v111) = v13 < 4;
    v56 = sub_22E8900C4((uint64_t)&v122, (int *)&v111);
    LODWORD(v110) = a4;
    sub_22E8900C4(v56, (int *)&v110);
LABEL_116:
    v57 = &v122;
LABEL_117:
    sub_22E903BEC((unsigned int *)v57);
    return 1;
  }
  v25 = *(_QWORD *)(a3 + 120);
  v26 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v26)
    v27 = *(_BYTE *)(v26 + 16) == 26;
  else
    v27 = 0;
  v104 = a4;
  if (!v27
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26
     || (v26 = sub_22F10CF48(v26)) == 0)
    || (v28 = *(_QWORD *)(v26 + 16), (v28 & 0x3FFFC000000000) == 0))
  {
LABEL_122:
    if (v13 >= 4)
    {
      v61 = *(_QWORD *)(a3 + 16);
      v62 = v61 & 0xFFFFFFFFFFFFFFF8;
      v60 = v104;
      if ((v61 & 4) != 0)
        v62 = *(_QWORD *)(v62 + 8);
      if ((*(_WORD *)(v62 + 8) & 0x7Fu) - 35 >= 3)
      {
        v75 = *(_DWORD *)(a3 + 24);
        v76 = sub_22EF6477C(*(_QWORD *)(a1 + 88), v9);
        LODWORD(v111) = v104;
        v58 = 1;
        LODWORD(v110) = 1;
        *(_QWORD *)&v122 = off_24FAB7FA0;
        DWORD2(v122) = 3210;
        v123[0] = &v111;
        v123[1] = &v110;
        if ((sub_22EE8B0B0(a1, v75, v76) & 1) != 0)
          return v58;
        v77 = sub_22EFD9E18(v9);
        if (!v77)
        {
LABEL_153:
          sub_22EFD9E18(v9);
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xC8Au, 0, (uint64_t)&v122);
          LODWORD(v111) = v104;
          v83 = sub_22E8900C4((uint64_t)&v122, (int *)&v111);
          LODWORD(v110) = 0;
          v84 = sub_22E8900C4(v83, (int *)&v110);
          sub_22E890024(v84, &v121);
          sub_22E903BEC((unsigned int *)&v122);
          v85 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v121 + 32))(v121);
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v85 + 24), 0x64u, 0, (uint64_t)v105);
          v57 = (__int128 *)v105;
          goto LABEL_117;
        }
        v78 = v77;
        while (1)
        {
          v79 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a3 + 32))(a3);
          v80 = *(_QWORD *)(v78 + 40);
          v81 = (v80 & 4) != 0 ? 0 : v80 & 0xFFFFFFFFFFFFFFF8;
          if (v79 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)v81 + 32))(v81))
            break;
          v82 = *(_QWORD *)(v78 + 48);
          if ((v82 & 1) != 0)
          {
            v78 = sub_22F3B44EC(v78);
            if (!v78)
            {
LABEL_152:
              v9 = v121;
              goto LABEL_153;
            }
          }
          else
          {
            v78 = *(_QWORD *)(v78 + 48);
            if (!v82)
              goto LABEL_152;
          }
        }
        v9 = v121;
        sub_22EFD9E18(v121);
      }
    }
    else
    {
      v60 = v104;
    }
    v63 = *(_QWORD *)(sub_22EA0E144(a3) & 0xFFFFFFFFFFFFFFF0);
    if (v60 == 2)
    {
      LOBYTE(v122) = 0;
      if (sub_22F110500((uint64_t)&v122, v63))
      {
        v64 = sub_22EA0E144(a3);
        v65 = sub_22EF67C08(*(_QWORD *)(a1 + 88));
        if ((*(_QWORD *)((v64 & 0xFFFFFFFFFFFFFFF0) + 8) | v64 & 7) != (*(_QWORD *)((v65 & 0xFFFFFFFFFFFFFFF0) + 8) | v65 & 7))
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xC88u, 0, (uint64_t)&v122);
          LODWORD(v109) = 2;
          v66 = sub_22E8900C4((uint64_t)&v122, (int *)&v109);
          v111 = sub_22EA0E144(a3);
          v67 = sub_22E8901B8(v66, (uint64_t *)&v111);
          v68 = sub_22E8901B8(v67, (uint64_t *)(*(_QWORD *)(a1 + 88) + 18568));
LABEL_185:
          v40 = v68;
          v41 = sub_22F3AC46C(a3);
LABEL_86:
          v110 = v41;
          v42 = (uint64_t *)&v110;
LABEL_89:
          sub_22E8906A0(v40, v42);
          goto LABEL_116;
        }
      }
    }
    else if ((*(_BYTE *)(v63 + 17) & 4) == 0)
    {
      v69 = sub_22EA0E144(a3);
      if ((*(_QWORD *)((v69 & 0xFFFFFFFFFFFFFFF0) + 8) | v69 & 7) != (*(_QWORD *)((*(_QWORD *)(*(_QWORD *)(a1 + 88)
                                                                                                + 16400) & 0xFFFFFFFFFFFFFFF0)
                                                                                   + 8) | *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16400) & 7))
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xC8Fu, 0, (uint64_t)&v122);
        LODWORD(v109) = v60;
        v100 = sub_22E8900C4((uint64_t)&v122, (int *)&v109);
        v111 = sub_22EA0E144(a3);
        v101 = sub_22E8901B8(v100, (uint64_t *)&v111);
        v68 = sub_22E8901B8(v101, (uint64_t *)(*(_QWORD *)(a1 + 88) + 16400));
        goto LABEL_185;
      }
    }
    if ((sub_22EFC7ADC(v9 + 64) & 1) == 0)
    {
      v70 = v121;
      sub_22EABA1C4((uint64_t)&v122, a1, v121, a3, v60, 0);
      v71 = sub_22EABA238(&v122);
      if (v124 != v125)
        free(v124);
      v72 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a3 + 32))(a3);
      v73 = v72;
      if ((v71 & 1) != 0)
      {
        if (v72 != a3)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xFC0u, 0, (uint64_t)&v122);
          LOBYTE(v110) = (*(_DWORD *)(a3 + 28) & 0x200) != 0;
          v74 = sub_22E894E38((uint64_t)&v122, (unsigned __int8 *)&v110);
          LODWORD(v111) = v60;
          sub_22E8900C4(v74, (int *)&v111);
          sub_22E903BEC((unsigned int *)&v122);
          sub_22EABA1C4((uint64_t)&v122, a1, v70, a3, v60, 1);
          sub_22EABA238(&v122);
          if (v124 != v125)
            free(v124);
          return 1;
        }
        sub_22EAB9ED0((_QWORD *)a1, a3, *(_DWORD *)(a3 + 24));
        if (*(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956) && (*(_BYTE *)(a3 + 29) & 2) == 0)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0x194Fu, 0, (uint64_t)&v122);
          LODWORD(v111) = v60;
          sub_22E8900C4((uint64_t)&v122, (int *)&v111);
          sub_22E903BEC((unsigned int *)&v122);
          sub_22EABA1C4((uint64_t)&v122, a1, v70, a3, v60, 1);
          sub_22EABA238(&v122);
          if (v124 != v125)
            free(v124);
        }
      }
      else
      {
        if (v60 == 2
          && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22EA0E144(a3) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) == 14)
        {
          v86 = sub_22F3AC46C(a3);
          if (!v86)
          {
            v87 = *(_QWORD *)(a3 + 56);
            if ((v87 & 4) != 0 && (v103 = v87 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v103 + 16)))
              v88 = **(unsigned int ***)(v103 + 24);
            else
              v88 = (unsigned int *)(a3 + 64);
            v86 = *v88;
          }
          v58 = 1;
          v89 = sub_22EABA45C((_QWORD *)a1, BYTE2(v71), v86, 1);
          if (v89 < 0x10)
            return v58;
          v90 = *(_QWORD *)(a1 + 88);
          v91 = v89;
          v92 = sub_22EA0E144(a3);
          v93 = sub_22F34729C(a1, v92, v91);
          sub_22F369B34(v90, a3, v93);
        }
        if ((*(_BYTE *)(a3 + 83) & 0xC0) != 0
          && sub_22EAA9494((_QWORD *)a1, a3, 0)
          && sub_22EAA957C((_QWORD *)a1, a3, 0)
          && (v71 & 0x100) == 0)
        {
          v94 = *(_QWORD *)(a3 + 56);
          if ((v94 & 4) != 0 && (v102 = v94 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v102 + 16)))
            v95 = **(int ***)(v102 + 24);
          else
            v95 = (int *)(a3 + 64);
          sub_22E8FCA40((_QWORD *)a1, *v95, 0xE0Du, 0, (uint64_t)&v122);
          LOBYTE(v110) = (*(_DWORD *)(a3 + 28) & 0x200) != 0;
          v96 = sub_22E894E38((uint64_t)&v122, (unsigned __int8 *)&v110);
          LODWORD(v111) = v60;
          v97 = sub_22E8900C4(v96, (int *)&v111);
          LOBYTE(v109) = (*(_QWORD *)(a3 + 80) & 0xC0000000) == 0x80000000;
          sub_22E894E38(v97, (unsigned __int8 *)&v109);
          sub_22E903BEC((unsigned int *)&v122);
          sub_22EABA1C4((uint64_t)&v122, a1, v70, a3, v60, 2);
          sub_22EABA238(&v122);
          if (v124 != v125)
            free(v124);
        }
        if (v73 == a3)
        {
          v98 = *(_QWORD *)(a3 + 80);
          if ((v98 & 0xC0000000) == 0 && (v71 & 0x100) != 0)
            *(_QWORD *)(a3 + 80) = v98 & 0xFFFFFFFF3FFFFFFFLL | 0x40000000;
        }
        if (!sub_22F328034(a3))
        {
          v99 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
          if (!v99 || *(_BYTE *)(v99 + 16) != 26)
            v99 = sub_22F10CF48(v99);
          sub_22E4913B4(v99, (uint64_t)&v122);
          LODWORD(v123[0]) = 9;
          v125[0] = a3;
          v58 = 0;
          *(_QWORD *)(a3 + 48) = sub_22EF63D8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(v99 + 24), (uint64_t *)(v99 + 40), (unsigned __int16)(*(_QWORD *)(v99 + 16) >> 38), &v122, 0);
          return v58;
        }
      }
    }
    return 0;
  }
  v29 = 0;
  v30 = v25 + 8 * (unsigned __int16)(v28 >> 38);
  while (1)
  {
    v31 = *(_QWORD **)v25;
    v32 = *(_QWORD *)(*(_QWORD *)v25 + 48);
    v111 = v32;
    v33 = v32 & 0xFFFFFFFFFFFFFFF0;
    v34 = *(_QWORD *)(v32 & 0xFFFFFFFFFFFFFFF0);
    v35 = *(_DWORD *)(v34 + 16);
    if ((v35 & 0x400) != 0)
      goto LABEL_60;
    if (v29)
    {
      if ((v29[6] & 7 | *(_QWORD *)((v29[6] & 0xFFFFFFFFFFFFFFF0) + 8)) == (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFFF0)
                                                                                           + 8) | v32 & 7))
      {
LABEL_60:
        v31 = v29;
        goto LABEL_61;
      }
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xC8Du, 0, (uint64_t)&v122);
      v108 = v104;
      v43 = sub_22E8900C4((uint64_t)&v122, &v108);
      v110 = v29[6];
      v44 = sub_22E8901B8(v43, (uint64_t *)&v110);
      v109 = (*(uint64_t (**)(_QWORD *))(*v29 + 16))(v29);
      v45 = sub_22E8906A0(v44, (uint64_t *)&v109);
      v46 = &v111;
LABEL_88:
      v40 = sub_22E8901B8(v45, (uint64_t *)v46);
      v106 = (*(uint64_t (**)(_QWORD *))(*v31 + 16))(v31);
      v42 = &v106;
      goto LABEL_89;
    }
    if (v9)
    {
      v36 = sub_22EF6477C(*(_QWORD *)(a1 + 88), v9);
      v34 = *(_QWORD *)v33;
      v35 = *(_DWORD *)(*(_QWORD *)v33 + 16);
    }
    else
    {
      v36 = 0;
    }
    if ((v35 & 0xFE) == 0x28
      || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v34 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28
      && (v34 = sub_22F10CF48(v34)) != 0)
    {
      if ((*(_BYTE *)(v34 + 18) & 0x10) != 0)
      {
        do
        {
          while (1)
          {
            v34 = *(_QWORD *)(*(_QWORD *)(v34 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v34)
              break;
            v37 = *(_DWORD *)(v34 + 16);
            if ((v37 & 0xFE) != 0x28)
              break;
            if ((v37 & 0x100000) == 0)
              goto LABEL_75;
          }
          v34 = sub_22F10CF48(v34);
        }
        while ((*(_DWORD *)(v34 + 16) & 0x100000) != 0);
      }
LABEL_75:
      v32 = *(_QWORD *)(v34 + 32);
      v36 |= v9 != 0;
    }
    else if (v13 < 4)
    {
      if ((*(_BYTE *)(a3 + 29) & 2) != 0)
        return 1;
      if (!v9)
      {
LABEL_85:
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xC8Eu, 0, (uint64_t)&v122);
        LODWORD(v109) = v104;
        v39 = sub_22E8900C4((uint64_t)&v122, (int *)&v109);
        v40 = sub_22E8901B8(v39, (uint64_t *)&v111);
        v41 = (*(uint64_t (**)(_QWORD *))(*v31 + 16))(v31);
        goto LABEL_86;
      }
      v52 = 0;
LABEL_112:
      v110 = sub_22EF6477C(*(_QWORD *)(a1 + 88), v9);
      v109 = sub_22EF5F8C4(*(_QWORD *)(a1 + 88), v110 | 1, 1);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0xC8Cu, 0, (uint64_t)&v122);
      v108 = v104;
      v53 = sub_22E8900C4((uint64_t)&v122, &v108);
      v54 = sub_22E8901B8(v53, (uint64_t *)&v111);
      v55 = sub_22E8901B8(v54, (uint64_t *)&v109);
      v107 = v52;
      v45 = sub_22E8900C4(v55, (int *)&v107);
      v46 = &v110;
      goto LABEL_88;
    }
    if (v9)
      break;
    v38 = sub_22F10C2A4(*(_QWORD *)(v32 & 0xFFFFFFFFFFFFFFF0));
    if (!v38 || (v9 = v38, (*(_DWORD *)(v38 + 28) & 0x7Eu) - 34 > 3))
    {
      if ((*(_BYTE *)(a3 + 29) & 2) != 0)
        return 1;
      goto LABEL_85;
    }
    v121 = v38;
LABEL_61:
    v25 += 8;
    v29 = v31;
    if (v25 == v30)
      goto LABEL_122;
  }
  if ((sub_22EFC7ADC(v9 + 64) & 1) != 0
    || (*(_QWORD *)((v32 & 0xFFFFFFFFFFFFFFF0) + 8) | v32 & 7) == (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFF0) + 8) | v36 & 7))
  {
    goto LABEL_61;
  }
  v52 = v13 > 3;
  if ((*(_BYTE *)(a3 + 29) & 2) == 0)
    goto LABEL_112;
  return 1;
}

unint64_t sub_22EAB82EC(uint64_t a1)
{
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 0x8000) == 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 0x800) != 0)
    return 1;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  return ((unint64_t)*(unsigned __int16 *)(*(_QWORD *)(a1 + 128) + 8) >> 14) & 1;
}

uint64_t sub_22EAB8368(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7, unsigned int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;

  v10 = **(_QWORD **)(a1 + 72);
  if ((v10 & 0x200) == 0)
    return 0;
  result = 0;
  switch(a3)
  {
    case 0:
      if (a10)
      {
        if ((*(_DWORD *)(a2 + 72) & 0xE000) == 0x4000)
          goto LABEL_13;
        goto LABEL_16;
      }
      return sub_22E49F910(a2);
    case 3:
    case 4:
      if ((v10 & 0x400) == 0)
        return 0;
      result = sub_22EAE4B48(a2);
      if ((_DWORD)result)
        goto LABEL_17;
      return result;
    case 5:
      return sub_22EAA9528(a2);
    case 6:
      return result;
    default:
      if ((*(_DWORD *)(a2 + 72) & 0xE000) == 0x4000)
      {
        if (!a3)
        {
LABEL_13:
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
          if ((**(_QWORD **)(a2 + 128) & 0x800000) == 0)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
            return (**(_QWORD **)(a2 + 128) & 0x100000) == 0;
          }
        }
        return 1;
      }
LABEL_16:
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
      if (*(_DWORD *)(*(_QWORD *)(a2 + 128) + 20))
        return 0;
LABEL_17:
      v38 = a7;
      v39 = a8;
      v20 = sub_22E46A3A0(a2);
      if (v20 == v21)
      {
LABEL_25:
        v27 = sub_22EFC3B90(a2);
        if (v27)
        {
          v28 = v27;
          v29 = *(_DWORD *)(v27 + 28);
LABEL_27:
          if ((v29 & 0x80) == 0)
          {
            if (a3 || ((*(_DWORD *)(v28 + 72) & 3) != 3 ? (v30 = (*(_DWORD *)(v28 + 72) & 3) == 0) : (v30 = 1), v30))
            {
              v31 = sub_22EF5BA38(*(_QWORD *)(a1 + 88), *(_QWORD *)(v28 + 48));
              v32 = v31 & 0xFFFFFFFFFFFFFFF0;
              v33 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
              if (v33 && *(_BYTE *)(v33 + 16) == 45)
              {
                v34 = v31;
                v35 = sub_22F114198(*(_QWORD *)(v33 + 24));
                if ((_DWORD)a4)
                  v36 = (*(_BYTE *)(v28 + 68) & 2) == 0;
                else
                  v36 = 0;
                LODWORD(v37) = a6;
                if ((sub_22EAE4C2C(a1, v35, a3, (*(_DWORD *)(v32 + 8) | v34) & 7, v36, v38, v39, a5, v37, 0, 0) & 1) == 0)
                  return 0;
              }
              else if (!a3)
              {
                return 0;
              }
            }
          }
          while (1)
          {
            v28 = *(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF8;
            if (!v28)
              break;
            v29 = *(_DWORD *)(v28 + 28);
            if ((v29 & 0x7Fu) - 49 < 3)
              goto LABEL_27;
          }
        }
        return 1;
      }
      v22 = v20;
      v23 = v21;
      while (1)
      {
        v24 = *(_QWORD *)(**(_QWORD **)(v22 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v24 + 8) & 0xF) != 0)
          v24 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v22 + 16));
        v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v25)
        {
          if (*(_BYTE *)(v25 + 16) == 45)
          {
            v26 = sub_22F114198(*(_QWORD *)(v25 + 24));
            LODWORD(v37) = a6;
            result = sub_22EAE4C2C(a1, v26, a3, 0, a4, v38, v39, a5, v37, a9, a10);
            if (!(_DWORD)result)
              return result;
          }
        }
        v22 += 24;
        if (v22 == v23)
          goto LABEL_25;
      }
  }
}

uint64_t sub_22EAB8670(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  uint64_t result;
  int v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  unsigned int *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  int v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  char v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  char v97;
  int v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t v116;
  _BOOL4 v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  char v121;
  int v122;
  unint64_t v123;
  unsigned int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unsigned int v140;
  uint64_t v141;
  unsigned int v142;
  uint64_t v143;
  BOOL v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  unsigned int v151;
  uint64_t v152;
  unsigned int v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v161;
  unsigned int v162;
  uint64_t v163;
  BOOL v164;
  int v165;
  uint64_t v167;
  unsigned int v168;
  uint64_t v169;
  uint64_t v170;
  unsigned int v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unsigned int v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  _BOOL4 v195;
  int v196;
  int v197;
  _QWORD *v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  int v205;
  _QWORD *v206;
  unint64_t v207;
  int v208;
  uint64_t v209;
  __int16 v210;
  unsigned __int8 v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  char v216;
  int v217;
  char v218;
  _BYTE v219[96];
  _BYTE v220[96];
  uint64_t v221;
  int v222;
  uint64_t v223;
  BOOL v224;
  uint64_t v225;
  unsigned int v226[24];
  uint64_t v227;
  uint64_t v228[2];

  v5 = *(_DWORD *)(a2 + 28);
  if ((v5 & 0x80) != 0)
    return 0;
  v11 = a2 + 72;
  v12 = *(_WORD *)(a2 + 80) & 0x7F;
  v13 = -40;
  if (v12 > 0x46)
  {
    if (v12 == 83)
      goto LABEL_18;
    if (v12 == 71)
    {
      v13 = -56;
      goto LABEL_18;
    }
    if (v12 != 81)
    {
LABEL_13:
      v14 = v12 - 52;
      v15 = v12 - 33 >= 5;
      v16 = -48;
      if (!v15)
        v16 = -64;
      if (v14 >= 6)
        v13 = v16;
      else
        v13 = -72;
    }
  }
  else
  {
    if (v12 > 0x18)
      goto LABEL_12;
    if (v12 == 16)
    {
LABEL_5:
      v13 = -48;
      goto LABEL_18;
    }
    if (((1 << v12) & 0x1066) == 0)
    {
      if (v12 == 24)
        goto LABEL_5;
LABEL_12:
      if (v12 == 70)
      {
        v13 = -64;
        goto LABEL_18;
      }
      goto LABEL_13;
    }
  }
LABEL_18:
  v17 = *(_QWORD *)(v11 + v13 + 16);
  v18 = (_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
  if ((v17 & 4) != 0)
    v18 = (_QWORD *)*v18;
  if (v18)
    v19 = (uint64_t)(v18 - 8);
  else
    v19 = 0;
  v221 = v19;
  v20 = *(uint64_t **)(a1 + 72);
  v21 = *v20;
  if ((*v20 & 0x200) == 0 || (*(_BYTE *)(v19 + 28) & 0x80) != 0)
    return 0;
  v22 = *(_QWORD *)(v19 + 128);
  if (v22
    && ((*(unsigned __int16 *)(v22 + 8) | (*(unsigned __int8 *)(v22 + 10) << 16)) & 0x100000) != 0
    && (sub_22F3B1AEC(v19) & 1) == 0)
  {
    if (!(_DWORD)a3)
      goto LABEL_71;
    if ((_DWORD)a3 != 5)
    {
      if ((_DWORD)a3 == 3)
      {
LABEL_71:
        if ((_DWORD)a5)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v19 + 24), 0x163Eu, 0, (uint64_t)v220);
          v37 = (unsigned int *)v220;
LABEL_76:
          sub_22E903BEC(v37);
        }
        return 1;
      }
LABEL_29:
      if ((*(_BYTE *)(v19 + 75) & 1) == 0)
        goto LABEL_30;
      return 0;
    }
  }
  else if ((_DWORD)a3 && (_DWORD)a3 != 5)
  {
    goto LABEL_29;
  }
LABEL_30:
  if ((v5 & 0x200) == 0 || (a3 | 2) != 3)
    goto LABEL_78;
  v23 = (v21 & 0x10) == 0 || *((_DWORD *)v20 + 48) > 0xB532B7Fu;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v19 + 104) + 96), *(_QWORD *)(v19 + 104));
  v25 = (_DWORD)a3 == 1 || v23;
  if ((**(_QWORD **)(v19 + 128) & 8) != 0 && v25)
  {
    if (!(_DWORD)a5)
      return 1;
    v26 = sub_22F282248(v19);
    if (v26 != v27)
    {
      v28 = v26;
      v29 = v27;
      v30 = 0;
      while (1)
      {
        v31 = sub_22EFD83B0(v28, (int *)v226);
        if (v31)
          v30 = v28;
        if ((v31 & 1) != 0)
          goto LABEL_73;
        do
          v28 = *(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v28 && (*(_DWORD *)(v28 + 28) & 0x7F) != 0x37);
        if (v28 == v29)
          goto LABEL_74;
      }
    }
  }
  else
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v19 + 104) + 96), *(_QWORD *)(v19 + 104));
    v32 = (_DWORD)a3 == 3 || v23;
    if ((**(_QWORD **)(v19 + 128) & 0x20) != 0 && v32)
    {
      if (!(_DWORD)a5)
        return 1;
      v33 = sub_22E488FF8(v19);
      if (v33 != v34)
      {
        v28 = v33;
        v35 = v34;
        v30 = 0;
        while (1)
        {
          v36 = sub_22EFD3F30(v28);
          if (v36)
            v30 = v28;
          if ((v36 & 1) != 0)
            break;
          do
            v28 = *(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v28 && (*(_DWORD *)(v28 + 28) & 0x7Eu) - 54 > 3);
          if (v28 == v35)
            goto LABEL_74;
        }
LABEL_73:
        v30 = v28;
LABEL_74:
        if (v30)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v30 + 24), 0x15ACu, 0, (uint64_t)v226);
          LOBYTE(v206) = (_DWORD)a3 == 3;
          v38 = sub_22E894E38((uint64_t)v226, (unsigned __int8 *)&v206);
          v39 = sub_22E890024(v38, &v221);
          LOBYTE(v228[0]) = sub_22EFD3F30(v30);
          sub_22E894E38(v39, (unsigned __int8 *)v228);
          v37 = v226;
          goto LABEL_76;
        }
      }
    }
  }
LABEL_78:
  v40 = *(_QWORD *)(a1 + 216);
  if (a2)
    v41 = v11;
  else
    v41 = 0;
  v42 = *(_QWORD *)(a1 + 3200);
  *(_QWORD *)(a1 + 3200) = 0;
  v43 = *(_QWORD *)(a1 + 10288);
  v204 = *(_DWORD *)(a1 + 2192);
  v205 = *(_DWORD *)(a1 + 1944);
  *(_QWORD *)(a1 + 216) = v41;
  *(_QWORD *)(a1 + 10288) = 0;
  *(_DWORD *)(a1 + 1944) = *(_DWORD *)(a1 + 1904);
  *(_DWORD *)(a1 + 2192) = *(_DWORD *)(a1 + 1960);
  if ((_DWORD)a3 != 5)
    goto LABEL_110;
  v44 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2);
  if ((*(_BYTE *)(v44 + 82) & 0xC) == 0 && !sub_22EFD7260(v44))
    goto LABEL_110;
  *(_QWORD *)v226 = 0;
  v45 = *(_WORD *)(a2 + 80) & 0x7F;
  v46 = -40;
  if (v45 > 0x46)
  {
    if (v45 == 83)
      goto LABEL_100;
    if (v45 == 71)
    {
      v46 = -56;
      goto LABEL_100;
    }
    if (v45 != 81)
    {
LABEL_95:
      v47 = v45 - 52;
      v15 = v45 - 33 >= 5;
      v48 = -48;
      if (!v15)
        v48 = -64;
      if (v47 >= 6)
        v46 = v48;
      else
        v46 = -72;
    }
  }
  else
  {
    if (v45 > 0x18)
      goto LABEL_94;
    if (v45 == 16)
    {
LABEL_87:
      v46 = -48;
      goto LABEL_100;
    }
    if (((1 << v45) & 0x1066) == 0)
    {
      if (v45 == 24)
        goto LABEL_87;
LABEL_94:
      if (v45 == 70)
      {
        v46 = -64;
        goto LABEL_100;
      }
      goto LABEL_95;
    }
  }
LABEL_100:
  v49 = *(_QWORD *)(v11 + v46 + 16);
  v50 = (_QWORD *)(v49 & 0xFFFFFFFFFFFFFFF8);
  if ((v49 & 4) != 0)
    v50 = (_QWORD *)*v50;
  if (v50)
    v51 = (uint64_t)(v50 - 8);
  else
    v51 = 0;
  if (sub_22F3318B8((_QWORD *)a1, *(_DWORD *)(a2 + 24), v51, (*(_QWORD *)(a1 + 88) + 15312) | 6, v226, 0))
  {
    if (!(_DWORD)a5)
    {
LABEL_109:
      result = 1;
      goto LABEL_407;
    }
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v221 + 24), 0x15AFu, 0, (uint64_t)v219);
    v52 = (unsigned int *)v219;
LABEL_108:
    sub_22E903BEC(v52);
    goto LABEL_109;
  }
LABEL_110:
  v202 = v43;
  v203 = v42;
  v206 = (_QWORD *)a1;
  v207 = a2;
  v208 = a3;
  v209 = a4;
  v210 = 0;
  v211 = 0;
  v212 = sub_22E46BB88(a2) >> 11;
  v213 = 0;
  v214 = (sub_22E46BB88(a2) >> 9) & 3;
  v215 = 0;
  v53 = 1;
  if (a3 >= 3)
  {
    if ((a3 - 3) < 2)
    {
      v53 = 0;
      HIBYTE(v210) = 1;
    }
  }
  else
  {
    LOBYTE(v210) = 1;
  }
  v54 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if ((v54 && *(_BYTE *)(v54 + 16) == 26
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v54 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
     && (v54 = sub_22F10CF48(v54)) != 0)
    && (*(_DWORD *)(v54 + 20) & 0x3FFFC0) != 0)
  {
    v55 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(a2 + 120) + 48) & 0xFFFFFFFFFFFFFFF0);
    if (!v55 || (v56 = *(_DWORD *)(v55 + 16), (v56 & 0xFE) != 0x28))
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v55 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_132;
      v55 = sub_22F10CF48(v55);
      if (!v55)
        goto LABEL_132;
      v56 = *(_DWORD *)(v55 + 16);
    }
    if ((v56 & 0x100000) != 0)
    {
      do
      {
        while (1)
        {
          v55 = *(_QWORD *)(*(_QWORD *)(v55 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v55)
            break;
          v57 = *(_DWORD *)(v55 + 16);
          if ((v57 & 0xFE) != 0x28)
            break;
          if ((v57 & 0x100000) == 0)
            goto LABEL_128;
        }
        v55 = sub_22F10CF48(v55);
      }
      while ((*(_DWORD *)(v55 + 16) & 0x100000) != 0);
    }
LABEL_128:
    v58 = *(_QWORD *)(v55 + 32);
    v59 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFFFF0) + 8);
    v211 = (v58 | v59) & 1;
    if ((v59 & 8) != 0)
      v60 = *(_DWORD *)((v59 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v60 = 0;
    v213 = v60;
  }
LABEL_132:
  v216 = a5;
  v217 = *(_DWORD *)(a2 + 24);
  v218 = 1;
  v61 = *(_WORD *)(a2 + 80) & 0x7F;
  v62 = -40;
  if (v61 > 0x46)
  {
    if (v61 == 83)
      goto LABEL_148;
    if (v61 == 71)
    {
      v62 = -56;
      goto LABEL_148;
    }
    if (v61 != 81)
    {
LABEL_143:
      v63 = v61 - 52;
      v15 = v61 - 33 >= 5;
      v64 = -48;
      if (!v15)
        v64 = -64;
      if (v63 >= 6)
        v62 = v64;
      else
        v62 = -72;
    }
  }
  else
  {
    if (v61 > 0x18)
      goto LABEL_142;
    if (v61 == 16)
    {
LABEL_135:
      v62 = -48;
      goto LABEL_148;
    }
    if (((1 << v61) & 0x1066) == 0)
    {
      if (v61 == 24)
        goto LABEL_135;
LABEL_142:
      if (v61 == 70)
      {
        v62 = -64;
        goto LABEL_148;
      }
      goto LABEL_143;
    }
  }
LABEL_148:
  v65 = *(_QWORD *)(v11 + v62 + 16);
  v66 = (_QWORD *)(v65 & 0xFFFFFFFFFFFFFFF8);
  if ((v65 & 4) != 0)
    v66 = (_QWORD *)*v66;
  if (v66)
    v67 = (uint64_t)(v66 - 8);
  else
    v67 = 0;
  if (v53)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v67 + 104) + 96), *(_QWORD *)(v67 + 104));
    if ((**(_QWORD **)(v67 + 128) & 0x800) != 0)
      v68 = 0;
    else
      v68 = 3;
  }
  else
  {
    v68 = 1;
  }
  v69 = sub_22E46A3A0(v67);
  if (v69 != v70)
  {
    v71 = v69;
    v72 = v70;
    while (v68 != 1 && (*(_BYTE *)(v71 + 12) & 1) != 0 || (sub_22EAE9D28(&v206, v71) & 1) == 0)
    {
      v71 += 24;
      if (v71 == v72)
        goto LABEL_164;
    }
    goto LABEL_352;
  }
LABEL_164:
  if (v68 != 3 || (v73 = sub_22E483108(v67), v73 == v74))
  {
LABEL_169:
    v77 = sub_22EFC3B90(v67);
    if (!v77)
      goto LABEL_347;
    v78 = v77;
    v201 = v40;
    v79 = *(_DWORD *)(v77 + 28);
LABEL_171:
    if ((v79 & 0x80) != 0 || (*(_BYTE *)(v78 + 68) & 1) != 0 && !*(_QWORD *)(v78 + 40))
      goto LABEL_316;
    v228[0] = v78;
    v198 = v206;
    v227 = sub_22EF5BA38(v206[11], *(_QWORD *)(v78 + 48));
    v80 = sub_22F10C2A4(*(_QWORD *)(v227 & 0xFFFFFFFFFFFFFFF0));
    if (v80)
    {
      if ((*(_DWORD *)(v80 + 28) & 0x7Fu) - 35 >= 3)
        v81 = 0;
      else
        v81 = v80;
    }
    else
    {
      v81 = 0;
    }
    v82 = v207;
    v83 = *(_WORD *)(v207 + 80) & 0x7F;
    v84 = -40;
    if (v83 > 0x46)
    {
      if (v83 == 83)
        goto LABEL_194;
      if (v83 == 71)
      {
        v84 = -56;
        goto LABEL_194;
      }
      if (v83 != 81)
      {
LABEL_190:
        v85 = -64;
        if (v83 - 33 >= 5)
          v85 = -48;
        v84 = -72;
        if (v83 - 52 >= 6)
          v84 = v85;
      }
    }
    else
    {
      if (v83 > 0x18)
        goto LABEL_189;
      if (v83 == 16)
      {
LABEL_182:
        v84 = -48;
        goto LABEL_194;
      }
      if (((1 << v83) & 0x1066) == 0)
      {
        if (v83 == 24)
          goto LABEL_182;
LABEL_189:
        if (v83 == 70)
        {
          v84 = -64;
          goto LABEL_194;
        }
        goto LABEL_190;
      }
    }
LABEL_194:
    v86 = v207 + 72;
    v87 = *(_QWORD *)(v207 + 72 + v84 + 16);
    v88 = (_QWORD *)(v87 & 0xFFFFFFFFFFFFFFF8);
    if ((v87 & 4) != 0)
      v88 = (_QWORD *)*v88;
    if (v88)
      v89 = v88 - 8;
    else
      v89 = 0;
    v199 = v207 + 72;
    v200 = v81;
    if ((v89[9] & 0xE000) == 0x4000)
    {
      v90 = sub_22EAEA7B0((uint64_t)&v206, v228[0], v227);
      v86 = v199;
      v81 = v200;
      if ((v90 & 1) != 0)
        goto LABEL_543;
      v83 = *(_WORD *)(v82 + 80) & 0x7F;
    }
    v91 = -40;
    if ((int)v83 > 70)
    {
      if (v83 == 83)
        goto LABEL_219;
      if (v83 == 71)
      {
        v91 = -56;
        goto LABEL_219;
      }
      if (v83 != 81)
      {
LABEL_213:
        v92 = v83 - 52;
        v15 = v83 - 33 >= 5;
        v93 = -64;
        if (v15)
          v93 = -48;
        v15 = v92 >= 6;
        v91 = -72;
        if (v15)
          v91 = v93;
      }
    }
    else
    {
      if (v83 > 0x18)
        goto LABEL_212;
      if (v83 == 16)
      {
LABEL_205:
        v91 = -48;
        goto LABEL_219;
      }
      if (((1 << v83) & 0x1066) == 0)
      {
        if (v83 == 24)
          goto LABEL_205;
LABEL_212:
        if (v83 == 70)
        {
          v91 = -64;
          goto LABEL_219;
        }
        goto LABEL_213;
      }
    }
LABEL_219:
    v94 = *(_QWORD *)(v86 + v91 + 16);
    v95 = (_QWORD *)(v94 & 0xFFFFFFFFFFFFFFF8);
    if ((v94 & 4) != 0)
      v95 = (_QWORD *)*v95;
    if (v95)
      v96 = v95 - 8;
    else
      v96 = 0;
    if ((v96[9] & 0xE000) == 0x4000)
    {
      v97 = sub_22EAEA8EC((uint64_t)&v206, v228[0], v227);
      v86 = v199;
      v81 = v200;
      if ((v97 & 1) != 0)
        goto LABEL_543;
    }
    v98 = v208;
    if (v208 != 1)
    {
      if (v208)
      {
        if (!HIBYTE(v210))
          goto LABEL_291;
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v227 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFE) != 0x28)
        {
          if (v81)
            goto LABEL_292;
          if ((v227 & 1) == 0 && (*(_BYTE *)((v227 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
            goto LABEL_316;
          if (!v216)
            goto LABEL_543;
          v165 = v208;
          sub_22E8FCA40(v198, *(_DWORD *)(v228[0] + 24), 0x15AAu, 0, (uint64_t)v226);
          v164 = v165 == 2 || v165 == 4;
          goto LABEL_480;
        }
        if (!v216)
          goto LABEL_543;
        v159 = v208;
        sub_22E8FCA40(v198, *(_DWORD *)(v228[0] + 24), 0x15AAu, 0, (uint64_t)v226);
        v144 = v159 == 2 || v159 == 4;
      }
      else
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v227 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFE) != 0x28
          || (*(_DWORD *)(v228[0] + 72) & 3) != 3 && (*(_DWORD *)(v228[0] + 72) & 3) != 0)
        {
          v99 = *(_WORD *)(v82 + 80) & 0x7F;
          v100 = -40;
          if (v99 > 0x46)
          {
            switch(v99)
            {
              case 'S':
                goto LABEL_254;
              case 'G':
                v100 = -56;
                goto LABEL_254;
              case 'Q':
                goto LABEL_254;
            }
          }
          else
          {
            if (v99 <= 0x18)
            {
              if (v99 == 16)
                goto LABEL_234;
              if (((1 << v99) & 0x1066) != 0)
                goto LABEL_254;
              if (v99 == 24)
              {
LABEL_234:
                v100 = -48;
LABEL_254:
                v101 = *(_QWORD *)(v86 + v100 + 16);
                v102 = (_QWORD *)(v101 & 0xFFFFFFFFFFFFFFF8);
                if ((v101 & 4) != 0)
                  v102 = (_QWORD *)*v102;
                if (v102)
                  v103 = v102 - 8;
                else
                  v103 = 0;
                if ((v103[9] & 0xE000) == 0x4000
                  || (v227 & 1) == 0 && (*(_BYTE *)((v227 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0
                  || (*(_DWORD *)(v228[0] + 72) & 3) != 3 && (*(_DWORD *)(v228[0] + 72) & 3) != 0)
                {
LABEL_267:
                  v105 = -40;
                  if ((int)v99 > 70)
                  {
                    switch(v99)
                    {
                      case 'S':
                        goto LABEL_282;
                      case 'G':
                        v105 = -56;
                        goto LABEL_282;
                      case 'Q':
                        goto LABEL_282;
                    }
                  }
                  else
                  {
                    if (v99 <= 0x18)
                    {
                      if (v99 == 16)
                        goto LABEL_270;
                      if (((1 << v99) & 0x1066) != 0)
                        goto LABEL_282;
                      if (v99 == 24)
                      {
LABEL_270:
                        v105 = -48;
LABEL_282:
                        v106 = *(_QWORD *)(v86 + v105 + 16);
                        v107 = (_QWORD *)(v106 & 0xFFFFFFFFFFFFFFF8);
                        if ((v106 & 4) != 0)
                          v107 = (_QWORD *)*v107;
                        if (v107)
                          v108 = v107 - 8;
                        else
                          v108 = 0;
                        if ((v108[9] & 0xE000) == 0x4000
                          && (v227 & 1) == 0
                          && (*(_BYTE *)((v227 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
                        {
                          v218 = 0;
                        }
LABEL_291:
                        if (!v81)
                          goto LABEL_316;
LABEL_292:
                        v109 = *(_WORD *)(v82 + 80) & 0x7F;
                        v110 = -40;
                        if (v109 > 0x46)
                        {
                          switch(v109)
                          {
                            case 'S':
                              goto LABEL_307;
                            case 'G':
                              v110 = -56;
                              goto LABEL_307;
                            case 'Q':
LABEL_307:
                              v111 = *(_QWORD *)(v86 + v110 + 16);
                              v112 = (_QWORD *)(v111 & 0xFFFFFFFFFFFFFFF8);
                              if ((v111 & 4) != 0)
                                v112 = (_QWORD *)*v112;
                              if (v112)
                                v113 = v112 - 8;
                              else
                                v113 = 0;
                              if ((v113[9] & 0xE000) == 0x4000
                                || (*(_DWORD *)(v81 + 72) & 0xE000) != 0x4000
                                || (*(_BYTE *)(v81 + 75) & 1) == 0)
                              {
                                if (!sub_22EAE9FDC((uint64_t *)&v206, v81, v228[0] | 4))
                                  goto LABEL_316;
LABEL_543:
                                result = 1;
                                v40 = v201;
                                goto LABEL_353;
                              }
                              v197 = v98;
                              v114 = sub_22EFC3B90(v81);
                              if (v114)
                              {
                                v115 = v114;
                                v116 = sub_22EF5BA38(v198[11], *(_QWORD *)(v114 + 48));
                                if ((sub_22EAEA7B0((uint64_t)&v206, v115, v116) & 1) != 0)
                                  goto LABEL_543;
                                v196 = 1;
LABEL_323:
                                if ((sub_22EAEA8EC((uint64_t)&v206, v115, v116) & 1) != 0)
                                  goto LABEL_543;
                                v117 = (v116 & 1) != 0 || *(_BYTE *)((v116 & 0xFFFFFFFFFFFFFFF0) + 8) & 1;
                                v195 = v117;
                                v118 = sub_22F10C2A4(*(_QWORD *)(v116 & 0xFFFFFFFFFFFFFFF0));
                                v119 = v200;
                                v120 = v197;
                                if (v118)
                                {
                                  if ((*(_DWORD *)(v118 + 28) & 0x7Fu) - 35 <= 2)
                                  {
                                    v121 = sub_22EAE9FDC((uint64_t *)&v206, v118, v115 | 4);
                                    v120 = v197;
                                    v119 = v200;
                                    if ((v121 & 1) != 0)
                                      goto LABEL_543;
                                  }
                                }
                                v122 = v195 & v196;
                                while (1)
                                {
                                  v115 = *(_QWORD *)(v115 + 8) & 0xFFFFFFFFFFFFFFF8;
                                  if (!v115)
                                    break;
                                  if ((*(_DWORD *)(v115 + 28) & 0x7Fu) - 49 <= 2)
                                  {
                                    v196 &= v195;
                                    v116 = sub_22EF5BA38(v198[11], *(_QWORD *)(v115 + 48));
                                    if ((sub_22EAEA7B0((uint64_t)&v206, v115, v116) & 1) == 0)
                                      goto LABEL_323;
                                    goto LABEL_543;
                                  }
                                }
                              }
                              else
                              {
                                v122 = 1;
                                v119 = v200;
                                v120 = v197;
                              }
                              if (!v120 && v122 && sub_22EFC3B90(v119))
                              {
                                if (!v216)
                                  goto LABEL_543;
                                sub_22E8FCA40(v198, *(_DWORD *)(v200 + 24), 0x15ADu, 0, (uint64_t)v226);
                                LOBYTE(v222) = v209 != 0;
                                v170 = sub_22E894E38((uint64_t)v226, (unsigned __int8 *)&v222);
                                v171 = *(_WORD *)(v82 + 80) & 0x7F;
                                v172 = -40;
                                if (v171 > 0x46)
                                {
                                  if (v171 != 83)
                                  {
                                    if (v171 == 71)
                                    {
                                      v172 = -56;
                                      goto LABEL_556;
                                    }
                                    if (v171 == 81)
                                      goto LABEL_556;
LABEL_551:
                                    v190 = v171 - 52;
                                    v15 = v171 - 33 >= 5;
                                    v191 = -48;
                                    if (!v15)
                                      v191 = -64;
                                    if (v190 >= 6)
                                      v172 = v191;
                                    else
                                      v172 = -72;
                                  }
                                }
                                else
                                {
                                  if (v171 > 0x18)
                                    goto LABEL_550;
                                  if (v171 != 16)
                                  {
                                    if (((1 << v171) & 0x1066) != 0)
                                      goto LABEL_556;
                                    if (v171 != 24)
                                    {
LABEL_550:
                                      if (v171 == 70)
                                      {
                                        v172 = -64;
                                        goto LABEL_556;
                                      }
                                      goto LABEL_551;
                                    }
                                  }
                                  v172 = -48;
                                }
LABEL_556:
                                v192 = *(_QWORD *)(v199 + v172 + 16);
                                v193 = (_QWORD *)(v192 & 0xFFFFFFFFFFFFFFF8);
                                if ((v192 & 4) != 0)
                                  v193 = (_QWORD *)*v193;
                                if (v193)
                                  v194 = (uint64_t)(v193 - 8);
                                else
                                  v194 = 0;
                                v225 = v194;
                                v178 = sub_22E890024(v170, &v225);
                                LODWORD(v223) = 1;
LABEL_514:
                                v179 = (int *)&v223;
LABEL_541:
                                sub_22E8900C4(v178, v179);
LABEL_542:
                                sub_22E903BEC(v226);
                                goto LABEL_543;
                              }
LABEL_316:
                              v40 = v201;
                              while (1)
                              {
                                v78 = *(_QWORD *)(v78 + 8) & 0xFFFFFFFFFFFFFFF8;
                                if (!v78)
                                  break;
                                v79 = *(_DWORD *)(v78 + 28);
                                if ((v79 & 0x7Fu) - 49 < 3)
                                  goto LABEL_171;
                              }
LABEL_347:
                              v43 = v202;
                              v42 = v203;
                              if (v208)
                                goto LABEL_402;
                              v123 = v207 + 72;
                              v124 = *(_WORD *)(v207 + 80) & 0x7F;
                              v125 = -40;
                              if (v124 > 0x46)
                              {
                                if (v124 == 83)
                                  goto LABEL_366;
                                if (v124 == 71)
                                {
                                  v125 = -56;
                                  goto LABEL_366;
                                }
                                if (v124 != 81)
                                {
LABEL_361:
                                  v126 = -48;
                                  if (v124 - 33 < 5)
                                    v126 = -64;
                                  if (v124 - 52 >= 6)
                                    v125 = v126;
                                  else
                                    v125 = -72;
                                }
                              }
                              else
                              {
                                if (v124 > 0x18)
                                  goto LABEL_360;
                                if (v124 == 16)
                                {
LABEL_351:
                                  v125 = -48;
                                  goto LABEL_366;
                                }
                                if (((1 << v124) & 0x1066) == 0)
                                {
                                  if (v124 == 24)
                                    goto LABEL_351;
LABEL_360:
                                  if (v124 == 70)
                                  {
                                    v125 = -64;
                                    goto LABEL_366;
                                  }
                                  goto LABEL_361;
                                }
                              }
LABEL_366:
                              v127 = *(_QWORD *)(v123 + v125 + 16);
                              v128 = (_QWORD *)(v127 & 0xFFFFFFFFFFFFFFF8);
                              if ((v127 & 4) != 0)
                                v128 = (_QWORD *)*v128;
                              if (v128)
                                v129 = v128 - 8;
                              else
                                v129 = 0;
                              if ((v129[9] & 0xE000) != 0x4000 || v218 == 0)
                                goto LABEL_402;
                              v131 = -40;
                              if ((*(_WORD *)(v207 + 80) & 0x7Fu) > 0x46)
                              {
                                if (v124 == 83)
                                  goto LABEL_391;
                                if (v124 == 71)
                                {
                                  v131 = -56;
                                  goto LABEL_391;
                                }
                                if (v124 != 81)
                                {
LABEL_386:
                                  v132 = v124 - 52;
                                  v15 = v124 - 33 >= 5;
                                  v133 = -48;
                                  if (!v15)
                                    v133 = -64;
                                  if (v132 >= 6)
                                    v131 = v133;
                                  else
                                    v131 = -72;
                                }
                              }
                              else
                              {
                                if (v124 > 0x18)
                                  goto LABEL_385;
                                if (v124 == 16)
                                {
LABEL_378:
                                  v131 = -48;
                                  goto LABEL_391;
                                }
                                if (((1 << v124) & 0x1066) == 0)
                                {
                                  if (v124 == 24)
                                    goto LABEL_378;
LABEL_385:
                                  if (v124 == 70)
                                  {
                                    v131 = -64;
                                    goto LABEL_391;
                                  }
                                  goto LABEL_386;
                                }
                              }
LABEL_391:
                              v134 = *(_QWORD *)(v123 + v131 + 16);
                              v135 = (_QWORD *)(v134 & 0xFFFFFFFFFFFFFFF8);
                              if ((v134 & 4) != 0)
                                v135 = (_QWORD *)*v135;
                              if (v135)
                                v136 = (uint64_t)(v135 - 8);
                              else
                                v136 = 0;
                              v137 = sub_22EFC3B90(v136);
                              if (v137)
                              {
LABEL_397:
                                if ((*(_BYTE *)(v137 + 68) & 1) != 0 && !*(_QWORD *)(v137 + 40))
                                {
                                  while (1)
                                  {
                                    v137 = *(_QWORD *)(v137 + 8) & 0xFFFFFFFFFFFFFFF8;
                                    if (!v137)
                                      goto LABEL_402;
                                    if ((*(_DWORD *)(v137 + 28) & 0x7Fu) - 49 <= 2)
                                      goto LABEL_397;
                                  }
                                }
                                if (!v216)
                                  goto LABEL_109;
                                v138 = v207;
                                v139 = v207 + 72;
                                v140 = *(_WORD *)(v207 + 80) & 0x7F;
                                v141 = -40;
                                if (v140 > 0x46)
                                {
                                  if (v140 == 83)
                                    goto LABEL_433;
                                  if (v140 == 71)
                                  {
                                    v141 = -56;
                                    goto LABEL_433;
                                  }
                                  if (v140 != 81)
                                  {
LABEL_428:
                                    v145 = v140 - 52;
                                    v15 = v140 - 33 >= 5;
                                    v146 = -48;
                                    if (!v15)
                                      v146 = -64;
                                    if (v145 >= 6)
                                      v141 = v146;
                                    else
                                      v141 = -72;
                                  }
                                }
                                else
                                {
                                  if (v140 > 0x18)
                                    goto LABEL_427;
                                  if (v140 == 16)
                                  {
LABEL_413:
                                    v141 = -48;
                                    goto LABEL_433;
                                  }
                                  if (((1 << v140) & 0x1066) == 0)
                                  {
                                    if (v140 == 24)
                                      goto LABEL_413;
LABEL_427:
                                    if (v140 == 70)
                                    {
                                      v141 = -64;
                                      goto LABEL_433;
                                    }
                                    goto LABEL_428;
                                  }
                                }
LABEL_433:
                                v147 = *(_QWORD *)(v139 + v141 + 16);
                                v148 = (_QWORD *)(v147 & 0xFFFFFFFFFFFFFFF8);
                                if ((v147 & 4) != 0)
                                  v148 = (_QWORD *)*v148;
                                if (v148)
                                  v149 = v148 - 8;
                                else
                                  v149 = 0;
                                sub_22E8FCA40(v206, *((_DWORD *)v149 + 6), 0x15ADu, 0, (uint64_t)v226);
                                LOBYTE(v225) = v209 != 0;
                                v150 = sub_22E894E38((uint64_t)v226, (unsigned __int8 *)&v225);
                                v151 = *(_WORD *)(v138 + 80) & 0x7F;
                                v152 = -40;
                                if (v151 > 0x46)
                                {
                                  if (v151 != 83)
                                  {
                                    if (v151 == 71)
                                    {
                                      v152 = -56;
                                      goto LABEL_454;
                                    }
                                    if (v151 == 81)
                                      goto LABEL_454;
LABEL_449:
                                    v153 = v151 - 52;
                                    v15 = v151 - 33 >= 5;
                                    v154 = -48;
                                    if (!v15)
                                      v154 = -64;
                                    if (v153 >= 6)
                                      v152 = v154;
                                    else
                                      v152 = -72;
                                  }
                                }
                                else
                                {
                                  if (v151 > 0x18)
                                    goto LABEL_448;
                                  if (v151 != 16)
                                  {
                                    if (((1 << v151) & 0x1066) != 0)
                                      goto LABEL_454;
                                    if (v151 != 24)
                                    {
LABEL_448:
                                      if (v151 == 70)
                                      {
                                        v152 = -64;
                                        goto LABEL_454;
                                      }
                                      goto LABEL_449;
                                    }
                                  }
                                  v152 = -48;
                                }
LABEL_454:
                                v155 = *(_QWORD *)(v139 + v152 + 16);
                                v156 = (_QWORD *)(v155 & 0xFFFFFFFFFFFFFFF8);
                                if ((v155 & 4) != 0)
                                  v156 = (_QWORD *)*v156;
                                if (v156)
                                  v157 = (uint64_t)(v156 - 8);
                                else
                                  v157 = 0;
                                v228[0] = v157;
                                v158 = sub_22E890024(v150, v228);
                                LODWORD(v227) = 0;
                                sub_22E8900C4(v158, (int *)&v227);
                                v52 = v226;
                                goto LABEL_108;
                              }
LABEL_402:
                              if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0)
                              {
                                if (a4)
                                  a3 = sub_22EAB3978(a1, a2);
                                result = sub_22E9FE3F8(a1, v221, a3, a2, v211, a5);
                              }
                              else
                              {
                                result = 0;
                              }
                              goto LABEL_407;
                          }
                        }
                        else
                        {
                          if (v109 <= 0x18)
                          {
                            if (v109 == 16)
                            {
LABEL_295:
                              v110 = -48;
                              goto LABEL_307;
                            }
                            if (((1 << v109) & 0x1066) != 0)
                              goto LABEL_307;
                            if (v109 == 24)
                              goto LABEL_295;
                          }
                          if (v109 == 70)
                          {
LABEL_305:
                            v110 = -64;
                            goto LABEL_307;
                          }
                        }
                        if (v109 - 52 >= 6)
                        {
                          if (v109 - 33 >= 5)
                            goto LABEL_295;
                          goto LABEL_305;
                        }
                        v110 = -72;
                        goto LABEL_307;
                      }
                    }
                    if (v99 == 70)
                    {
LABEL_280:
                      v105 = -64;
                      goto LABEL_282;
                    }
                  }
                  if (v99 - 52 < 6)
                  {
                    v105 = -72;
                    goto LABEL_282;
                  }
                  if (v99 - 33 < 5)
                    goto LABEL_280;
                  goto LABEL_270;
                }
                if (v81)
                {
                  v104 = v208;
                  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v81 + 104) + 96), *(_QWORD *)(v81 + 104));
                  v81 = v200;
                  if ((*(_WORD *)(*(_QWORD *)(v200 + 128) + 8) & 0x80) != 0)
                  {
                    v99 = *(_WORD *)(v82 + 80) & 0x7F;
                    v86 = v199;
                    v98 = v104;
                    goto LABEL_267;
                  }
                }
                if (!v216)
                  goto LABEL_543;
                sub_22E8FCA40(v198, *(_DWORD *)(v228[0] + 24), 0x15AEu, 0, (uint64_t)v226);
                v164 = v209 != 0;
LABEL_480:
                v224 = v164;
                v167 = sub_22E894E38((uint64_t)v226, (unsigned __int8 *)&v224);
                v168 = *(_WORD *)(v82 + 80) & 0x7F;
                v169 = -40;
                if (v168 > 0x46)
                {
                  switch(v168)
                  {
                    case 'S':
                      goto LABEL_535;
                    case 'G':
                      v169 = -56;
                      goto LABEL_535;
                    case 'Q':
                      goto LABEL_535;
                  }
                }
                else
                {
                  if (v168 <= 0x18)
                  {
                    if (v168 == 16)
                      goto LABEL_483;
                    if (((1 << v168) & 0x1066) != 0)
                      goto LABEL_535;
                    if (v168 == 24)
                    {
LABEL_483:
                      v169 = -48;
LABEL_535:
                      v185 = *(_QWORD *)(v199 + v169 + 16);
                      v186 = (_QWORD *)(v185 & 0xFFFFFFFFFFFFFFF8);
                      if ((v185 & 4) != 0)
                        v186 = (_QWORD *)*v186;
                      if (v186)
                        v187 = (uint64_t)(v186 - 8);
                      else
                        v187 = 0;
                      v225 = v187;
                      v188 = sub_22E890024(v167, &v225);
                      v189 = sub_22E890024(v188, v228);
                      v223 = *(_QWORD *)(v228[0] + 48);
                      v178 = sub_22E8901B8(v189, &v223);
                      v222 = 1;
                      v179 = &v222;
                      goto LABEL_541;
                    }
                  }
                  if (v168 == 70)
                  {
LABEL_526:
                    v169 = -64;
                    goto LABEL_535;
                  }
                }
                if (v168 - 52 < 6)
                {
                  v169 = -72;
                  goto LABEL_535;
                }
                if (v168 - 33 < 5)
                  goto LABEL_526;
                goto LABEL_483;
              }
            }
            if (v99 == 70)
            {
LABEL_252:
              v100 = -64;
              goto LABEL_254;
            }
          }
          if (v99 - 52 < 6)
          {
            v100 = -72;
            goto LABEL_254;
          }
          if (v99 - 33 < 5)
            goto LABEL_252;
          goto LABEL_234;
        }
        if (!v216)
          goto LABEL_543;
        sub_22E8FCA40(v198, *(_DWORD *)(v228[0] + 24), 0x15AEu, 0, (uint64_t)v226);
        v144 = v209 != 0;
      }
      LOBYTE(v222) = v144;
      v161 = sub_22E894E38((uint64_t)v226, (unsigned __int8 *)&v222);
      v162 = *(_WORD *)(v82 + 80) & 0x7F;
      v163 = -40;
      if (v162 > 0x46)
      {
        switch(v162)
        {
          case 'S':
            goto LABEL_508;
          case 'G':
            v163 = -56;
            goto LABEL_508;
          case 'Q':
            goto LABEL_508;
        }
      }
      else
      {
        if (v162 <= 0x18)
        {
          if (v162 == 16)
            goto LABEL_470;
          if (((1 << v162) & 0x1066) != 0)
            goto LABEL_508;
          if (v162 == 24)
          {
LABEL_470:
            v163 = -48;
LABEL_508:
            v173 = *(_QWORD *)(v199 + v163 + 16);
            v174 = (_QWORD *)(v173 & 0xFFFFFFFFFFFFFFF8);
            if ((v173 & 4) != 0)
              v174 = (_QWORD *)*v174;
            if (v174)
              v175 = (uint64_t)(v174 - 8);
            else
              v175 = 0;
            v225 = v175;
            v176 = sub_22E890024(v161, &v225);
            v177 = sub_22E890024(v176, v228);
            v178 = sub_22E8901B8(v177, &v227);
            LODWORD(v223) = 0;
            goto LABEL_514;
          }
        }
        if (v162 == 70)
        {
LABEL_506:
          v163 = -64;
          goto LABEL_508;
        }
      }
      if (v162 - 52 < 6)
      {
        v163 = -72;
        goto LABEL_508;
      }
      if (v162 - 33 < 5)
        goto LABEL_506;
      goto LABEL_470;
    }
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v227 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) != 41)
      goto LABEL_291;
    if (!v216)
      goto LABEL_543;
    sub_22E8FCA40(v198, *(_DWORD *)(v228[0] + 24), 0x15ABu, 0, (uint64_t)v226);
    v142 = *(_WORD *)(v82 + 80) & 0x7F;
    v143 = -40;
    if (v142 > 0x46)
    {
      switch(v142)
      {
        case 'S':
          goto LABEL_528;
        case 'G':
          v143 = -56;
          goto LABEL_528;
        case 'Q':
          goto LABEL_528;
      }
    }
    else
    {
      if (v142 <= 0x18)
      {
        if (v142 == 16)
          goto LABEL_422;
        if (((1 << v142) & 0x1066) != 0)
          goto LABEL_528;
        if (v142 == 24)
        {
LABEL_422:
          v143 = -48;
LABEL_528:
          v180 = *(_QWORD *)(v199 + v143 + 16);
          v181 = (_QWORD *)(v180 & 0xFFFFFFFFFFFFFFF8);
          if ((v180 & 4) != 0)
            v181 = (_QWORD *)*v181;
          if (v181)
            v182 = (uint64_t)(v181 - 8);
          else
            v182 = 0;
          v225 = v182;
          v183 = sub_22E890024((uint64_t)v226, &v225);
          v184 = sub_22E890024(v183, v228);
          sub_22E8901B8(v184, &v227);
          goto LABEL_542;
        }
      }
      if (v142 == 70)
      {
LABEL_520:
        v143 = -64;
        goto LABEL_528;
      }
    }
    if (v142 - 52 < 6)
    {
      v143 = -72;
      goto LABEL_528;
    }
    if (v142 - 33 < 5)
      goto LABEL_520;
    goto LABEL_422;
  }
  v75 = v73;
  v76 = v74;
  while ((sub_22EAE9D28(&v206, v75) & 1) == 0)
  {
    v75 += 24;
    if (v75 == v76)
      goto LABEL_169;
  }
LABEL_352:
  result = 1;
LABEL_353:
  v43 = v202;
  v42 = v203;
LABEL_407:
  if (v40)
  {
    *(_QWORD *)(a1 + 216) = v40;
    *(_QWORD *)(a1 + 3200) = v42;
    *(_QWORD *)(a1 + 10288) = v43;
    *(_DWORD *)(a1 + 1944) = v205;
    *(_DWORD *)(a1 + 2192) = v204;
  }
  return result;
}

unsigned int *sub_22EAB9ED0(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v27;
  int v28;
  unsigned int v29;
  unsigned int v30[24];
  unint64_t v31[12];
  uint64_t v32;
  unsigned int v33[24];
  unsigned int v34[24];
  unsigned int v35[24];

  if (!a2)
    goto LABEL_28;
  v5 = a2;
  v6 = *(_DWORD *)(a2 + 28);
  if ((v6 & 0x7Fu) - 26 <= 6)
  {
    v5 = *(_QWORD *)(a2 + 48);
    if (!v5)
      goto LABEL_28;
    v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 0x7Eu) - 52 >= 6)
  {
LABEL_28:
    sub_22E8FCA40(a1, a3, 0xCu, 0, (uint64_t)v35);
    return sub_22E903BEC(v35);
  }
  v7 = *(_BYTE *)(v5 + 104);
  *(_QWORD *)(v5 + 80) &= ~0x800000000uLL;
  if ((v7 & 3) != 0)
    goto LABEL_5;
  v22 = sub_22E3CD31C((uint64_t *)(v5 + 104), v5);
  if (!v22)
    goto LABEL_5;
  v23 = v22;
  v24 = *(_QWORD *)(v22 + 144) & 6;
  v25 = (_QWORD *)(*(_QWORD *)(v22 + 144) & 0xFFFFFFFFFFFFFFF8);
  if (v24 != 4 || v25 == 0)
  {
    if (v24 != 2 || !v25)
      goto LABEL_40;
  }
  else
  {
    v25 += 2;
  }
  if ((*v25 & 6) == 2)
  {
    v27 = (uint64_t *)(v22 + 104);
    if ((*(_BYTE *)(v23 + 104) & 3) != 0 || !sub_22E3CD31C(v27, v23))
      goto LABEL_41;
  }
LABEL_40:
  if (sub_22EFBF86C(v23, v31, 0))
  {
LABEL_41:
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
LABEL_5:
    if ((*(_BYTE *)(v5 + 29) & 1) == 0)
      goto LABEL_6;
    sub_22EFC8E88(v5);
    v14 = *(uint64_t **)v13;
    v15 = *(unsigned int *)(v13 + 8);
    v16 = *(uint64_t **)v13;
    if ((_DWORD)v15)
    {
      v17 = 8 * v15;
      v16 = *(uint64_t **)v13;
      while (*(_WORD *)(*v16 + 32) != 157)
      {
        ++v16;
        v17 -= 8;
        if (!v17)
          goto LABEL_6;
      }
    }
    if (v16 == &v14[v15])
    {
LABEL_6:
      if ((*(_BYTE *)(v5 + 29) & 1) == 0)
        goto LABEL_23;
      sub_22EFC8E88(v5);
      v9 = *(uint64_t **)v8;
      v10 = *(unsigned int *)(v8 + 8);
      v11 = *(uint64_t **)v8;
      if ((_DWORD)v10)
      {
        v12 = 8 * v10;
        v11 = *(uint64_t **)v8;
        while (*(_WORD *)(*v11 + 32) != 155)
        {
          ++v11;
          v12 -= 8;
          if (!v12)
            goto LABEL_23;
        }
      }
      if (v11 == &v9[v10])
        goto LABEL_23;
      do
      {
        v20 = *v9++;
        v18 = v20;
      }
      while (*(_WORD *)(v20 + 32) != 155);
    }
    else
    {
      do
      {
        v19 = *v14++;
        v18 = v19;
      }
      while (*(_WORD *)(v19 + 32) != 157);
    }
    v32 = v18;
    sub_22E8FCA40(a1, *(_DWORD *)(v5 + 24), 0xAF3u, 0, (uint64_t)v31);
    sub_22E8FB3C4((uint64_t)v31, &v32);
    sub_22E903BEC((unsigned int *)v31);
    sub_22EFC77E8(v5, 1);
LABEL_23:
    result = (unsigned int *)sub_22EFBFAF0(v5);
    if ((_DWORD)result)
    {
      sub_22E8FCA40(a1, a3, 0xCA3u, 0, (uint64_t)v30);
      result = sub_22E903BEC(v30);
    }
    *(_QWORD *)(v5 + 80) |= 0x410000uLL;
    return result;
  }
  sub_22E8FCA40(a1, a3, 0xCA0u, 0, (uint64_t)v34);
  sub_22E903BEC(v34);
  if (*(_DWORD *)(v23 + 24))
    v28 = *(_DWORD *)(v23 + 24);
  else
    v28 = a3;
  if ((*(_DWORD *)(v23 + 28) & 0x200) != 0)
    v29 = 110;
  else
    v29 = 108;
  sub_22E8FCA40(a1, v28, v29, 0, (uint64_t)v33);
  sub_22E903BEC(v33);
  return (unsigned int *)sub_22EFC77E8(v5, 1);
}

uint64_t sub_22EABA1C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, int a6)
{
  unsigned int *v6;
  int v7;
  uint64_t v8;

  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = a3;
  *(_QWORD *)(result + 16) = a4;
  *(_BYTE *)(result + 24) = a5;
  *(_QWORD *)(result + 32) = result + 48;
  *(_QWORD *)(result + 40) = 0x1000000000;
  if ((*(_BYTE *)(a4 + 83) & 8) != 0)
  {
    v6 = *(unsigned int **)(a4 + 128);
    if (v6)
    {
      v8 = result;
      v7 = a6;
      sub_22F2633B0(result + 32, (_BYTE *)v6 + 8, &v6[2 * *v6 + 2]);
      result = v8;
      a6 = v7;
    }
  }
  *(_DWORD *)(result + 176) = a6;
  return result;
}

uint64_t sub_22EABA238(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  unsigned __int16 v21;
  unsigned __int8 v22;

  if (*(unsigned __int8 *)(a1 + 24) - 1 > 1
    || (v2 = *(_QWORD *)(a1 + 8),
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v2 + 104) + 96), *(_QWORD *)(v2 + 104)),
        (**(_QWORD **)(v2 + 128) & 0x100000) == 0))
  {
    v3 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 16) + 120) + 48);
    v4 = *(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF0);
    if (!v4 || (v5 = *(_DWORD *)(v4 + 16), (v5 & 0xFE) != 0x28))
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
        || (v16 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 16) + 120) + 48), v4 = sub_22F10CF48(v4), v3 = v16, !v4))
      {
LABEL_6:
        v21 = 256;
        v22 = 2;
        if (*(unsigned __int8 *)(a1 + 24) - 3 >= 2)
        {
          v9 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF0) + 8);
          if ((v9 & 8) != 0)
          {
            v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 0x18);
            v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
          }
          else
          {
            v10 = 0;
            v11 = 0;
          }
          sub_22EAE4DA4(a1, &v21, *(_QWORD *)(a1 + 8), v10 | v11 | (v9 | v3) & 7);
        }
        else
        {
          v18 = 0;
          v6 = *(_QWORD *)(a1 + 16);
          v19 = *(_QWORD *)(a1 + 8);
          v20 = *(_DWORD *)(v6 + 24);
          v7 = sub_22EAE515C(a1, v3, (uint64_t)&v18);
          v8 = BYTE2(v7);
          v21 = v7 & 0x1FF;
          if ((v7 & 0xFE0000) != 0)
            v8 = 2;
          v22 = v8;
        }
        return v21 | (v22 << 16);
      }
      v5 = *(_DWORD *)(v4 + 16);
    }
    if ((v5 & 0x100000) != 0)
    {
      do
      {
        v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v4)
        {
          v17 = *(_DWORD *)(v4 + 16);
          if ((v17 & 0xFE) == 0x28)
            continue;
        }
        v4 = sub_22F10CF48(v4);
        v17 = *(_DWORD *)(v4 + 16);
      }
      while ((v17 & 0x100000) != 0);
    }
    v3 = *(_QWORD *)(v4 + 32);
    goto LABEL_6;
  }
  v12 = 131329;
  if (*(_DWORD *)(a1 + 176) == 1)
  {
    sub_22E8FCA40(*(_QWORD **)a1, *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), 0x15A6u, 0, (uint64_t)&v18);
    v13 = sub_22E890024((uint64_t)&v18, (uint64_t *)(a1 + 16));
    LOBYTE(v21) = (*(_DWORD *)(*(_QWORD *)(a1 + 8) + 72) & 0xE000) == 0x4000;
    v14 = sub_22E894E38(v13, (unsigned __int8 *)&v21);
    sub_22E890024(v14, (uint64_t *)(a1 + 8));
    sub_22E903BEC(&v18);
  }
  return v12;
}

unint64_t sub_22EABA45C(_QWORD *a1, unsigned int a2, unsigned int a3, int a4)
{
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t result;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  int v43;
  BOOL v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  int v48;
  uint64_t v49;
  unsigned __int8 *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  const char *v56;
  unsigned int v57;
  uint64_t v58;
  int v59;
  __int128 v60;
  unint64_t v61;
  std::string v62;

  v8 = sub_22EFB1804((uint64_t *)(a1[11] + 18648), a2);
  if (!v8)
  {
    *((_BYTE *)&v62.__r_.__value_.__s + 23) = 5;
    strcpy((char *)&v62, "std::");
    std::string::append(&v62, off_24FAB8040[(char)a2], qword_22F47F160[(char)a2]);
    sub_22E8FCA40(a1, a3, 0xDF0u, 0, (uint64_t)&v60);
    v17 = sub_22E90749C((uint64_t)&v60, &v62);
    v59 = a4;
    sub_22E8900C4(v17, &v59);
    sub_22E903BEC((unsigned int *)&v60);
    if ((SHIBYTE(v62.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      return 0;
    v18 = (void *)v62.__r_.__value_.__r.__words[0];
LABEL_10:
    operator delete(v18);
    return 0;
  }
  v9 = (uint64_t)v8;
  v10 = a1[1285];
  if ((v10 & 1) == 0)
  {
    if ((*(_QWORD *)(*(_QWORD *)v10 + 8 * (a2 >> 6)) & (1 << a2)) != 0)
      goto LABEL_4;
    goto LABEL_12;
  }
  if (((1 << a2) & (v10 >> 1) & ~(-1 << (v10 >> 58))) == 0)
  {
LABEL_12:
    v19 = *((_QWORD *)v8 + 13);
    v20 = *(_QWORD *)(v19 + 128);
    if (v20)
      goto LABEL_13;
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v19 + 104) + 96), *(_QWORD *)(v19 + 104));
    if (!*(_QWORD *)(v19 + 128))
    {
LABEL_15:
      v21 = a1[11];
      v22 = a1[419];
      if ((v22 & 1) != 0)
      {
        v22 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v21 + 16048) + 16))(*(_QWORD *)(v21 + 16048), v22 >> 1);
        a1[419] = v22;
      }
      v60 = xmmword_22F45EEF0;
      v61 = v22;
      v23 = sub_22F0AA9D0(v21, (uint64_t)&v60);
      v24 = sub_22EF65684(a1[11], 6, v23, *(_QWORD *)(*(_QWORD *)(v9 + 104) + 48) & 0xFFFFFFFFFFFFFFF0, 0);
      v25 = a3;
      *(_QWORD *)&v60 = &unk_24FAB6EF8;
      DWORD2(v60) = 3591;
      v26 = sub_22EE8B0B0((uint64_t)a1, a3, v24);
      result = 0;
      if ((v26 & 1) != 0)
        return result;
      v62.__r_.__value_.__r.__words[0] = (std::string::size_type)a1;
      LODWORD(v62.__r_.__value_.__r.__words[1]) = a3;
      v27 = a1[11];
      v28 = a1[419];
      if ((v28 & 1) != 0)
      {
        v28 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v27 + 16048) + 16))(*(_QWORD *)(v27 + 16048), v28 >> 1);
        a1[419] = v28;
      }
      v60 = xmmword_22F45EEF0;
      v61 = v28;
      v29 = sub_22F0AA9D0(v27, (uint64_t)&v60);
      v62.__r_.__value_.__r.__words[2] = sub_22EF65684(a1[11], 6, v29, *(_QWORD *)(*(_QWORD *)(v9 + 104) + 48) & 0xFFFFFFFFFFFFFFF0, 0);
      if ((sub_22EFD12A8(*(_QWORD *)(v9 + 104)) & 1) == 0)
      {
        v41 = 2;
LABEL_52:
        sub_22EAC1FB0(&v62, v41, (uint64_t)"", 0, 0);
        return 0;
      }
      v30 = sub_22E46A3A0(*(_QWORD *)(v9 + 104));
      if (v30 != v31)
      {
        v32 = v30;
        v33 = v31;
        do
        {
          v34 = *(_QWORD *)(**(_QWORD **)(v32 + 16) & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v34 + 8) & 0xF) != 0)
            v34 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v32 + 16));
          v35 = sub_22F10C2A4(*(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF0));
          v36 = (*(_DWORD *)(v35 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v35;
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v36 + 104) + 96), *(_QWORD *)(v36 + 104));
          if ((**(_QWORD **)(v36 + 128) & 0x200) == 0)
            goto LABEL_51;
          v32 += 24;
        }
        while (v32 != v33);
      }
      v37 = sub_22EFC3B90(*(_QWORD *)(v9 + 104));
      if (!v37)
        goto LABEL_51;
      v38 = 0;
      v39 = v37;
      while (1)
      {
        v39 = *(_QWORD *)(v39 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v39)
          break;
        if ((*(_DWORD *)(v39 + 28) & 0x7Fu) - 49 < 3)
          ++v38;
      }
      if (v38)
        goto LABEL_51;
      v42 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v37 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v43 = *(_DWORD *)(v42 + 16);
      if (v42)
        v44 = v43 == 11;
      else
        v44 = 0;
      if (v44)
      {
        if (((*(_DWORD *)(v42 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
          goto LABEL_51;
      }
      else
      {
        if (v42 && v43 == 44)
        {
          v45 = sub_22F114198(*(_QWORD *)(v42 + 24));
          if ((*(_BYTE *)(v45 + 74) & 1) != 0 || *(_QWORD *)(v45 + 128) > 7uLL)
            goto LABEL_56;
LABEL_51:
          v41 = 3;
          goto LABEL_52;
        }
        if (v43 != 9)
          goto LABEL_51;
      }
LABEL_56:
      sub_22F3AA708(a2, (unint64_t *)&v60);
      v47 = (unsigned __int8 *)*((_QWORD *)&v60 + 1);
      v46 = (unsigned __int8 *)v60;
      if ((_QWORD)v60 == *((_QWORD *)&v60 + 1))
      {
LABEL_66:
        if (v46)
        {
          *((_QWORD *)&v60 + 1) = v46;
          operator delete(v46);
        }
        sub_22E54C570(a1 + 1285, a2);
        return *(_QWORD *)(*(_QWORD *)(v9 + 104) + 48) & 0xFFFFFFFFFFFFFFF0;
      }
      while (1)
      {
        v48 = *v46;
        v49 = (char)v48;
        v50 = sub_22F3AA5C4(v9, v48);
        if (!v50)
        {
          v55 = qword_22F47F178[v49];
          v56 = off_24FAB8058[v49];
          v57 = 1;
          goto LABEL_74;
        }
        v51 = (uint64_t)v50;
        v52 = *((_QWORD *)v50 + 1);
        if ((*(_DWORD *)(v52 + 28) & 0x7F) == 0x40)
          goto LABEL_69;
        v53 = *(_QWORD *)(v52 + 16);
        v54 = v53 & 0xFFFFFFFFFFFFFFF8;
        if ((v53 & 4) != 0)
          v54 = *(_QWORD *)v54;
        if ((*(_WORD *)(v54 + 8) & 0x7Eu) - 34 > 3 || (sub_22EFBCBC4(*((_QWORD *)v50 + 1), a1[11]) & 1) == 0)
        {
LABEL_69:
          v55 = qword_22F47F178[v49];
          v56 = off_24FAB8058[v49];
          v57 = 0;
          v58 = v52;
          goto LABEL_70;
        }
        if (!sub_22F3AA48C(v51))
          break;
        sub_22EB51AEC(a1, v25, v52, 0, a1 + 1106);
        if (++v46 == v47)
        {
          v46 = (unsigned __int8 *)v60;
          goto LABEL_66;
        }
      }
      v56 = "";
      v57 = 3;
      v55 = 0;
LABEL_74:
      v58 = 0;
LABEL_70:
      sub_22EAC1FB0(&v62, v57, (uint64_t)v56, v55, v58);
      v18 = (void *)v60;
      if (!(_QWORD)v60)
        return 0;
      *((_QWORD *)&v60 + 1) = v60;
      goto LABEL_10;
    }
    v40 = *(_QWORD *)(v9 + 104);
    v20 = *(_QWORD *)(v40 + 128);
    if (v20
      || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v40 + 104) + 96), *(_QWORD *)(v40 + 104)),
          (v20 = *(_QWORD *)(v40 + 128)) != 0))
    {
LABEL_13:
      v20 = *(_QWORD *)(v20 + 88);
    }
    *(_QWORD *)(v9 + 104) = v20;
    goto LABEL_15;
  }
LABEL_4:
  v11 = a1[11];
  v12 = a1[419];
  if ((v12 & 1) != 0)
  {
    v12 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v11 + 16048) + 16))(*(_QWORD *)(v11 + 16048), v12 >> 1);
    a1[419] = v12;
  }
  v60 = xmmword_22F45EEF0;
  v61 = v12;
  v13 = sub_22F0AA9D0(v11, (uint64_t)&v60);
  v14 = sub_22EF65684(a1[11], 6, v13, *(_QWORD *)(*(_QWORD *)(v9 + 104) + 48) & 0xFFFFFFFFFFFFFFF0, 0);
  *(_QWORD *)&v60 = &unk_24FAB6EF8;
  DWORD2(v60) = 3591;
  v15 = sub_22EE8B0B0((uint64_t)a1, a3, v14);
  result = 0;
  if ((v15 & 1) == 0)
    return *(_QWORD *)(*(_QWORD *)(v9 + 104) + 48) & 0xFFFFFFFFFFFFFFF0;
  return result;
}

uint64_t sub_22EABAA74(uint64_t result, unsigned int a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23[6];
  char v24;
  int v25;
  char v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  int v31;
  _QWORD v32[18];

  v32[17] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a3 + 84) & 8) != 0 || (*(_BYTE *)(a3 + 28) & 0x80) != 0)
    return result;
  v7 = result;
  sub_22EAE5FA8((uint64_t)v23, result, a3 + 72);
  v8 = *(_QWORD *)(v23[0] + 216);
  v9 = *(_WORD *)(v8 + 8) & 0x7F;
  v10 = -40;
  if (v9 > 0x46)
  {
    switch(v9)
    {
      case 'S':
        goto LABEL_18;
      case 'G':
        v10 = -56;
        goto LABEL_18;
      case 'Q':
        goto LABEL_18;
    }
    goto LABEL_14;
  }
  if (v9 > 0x18)
    goto LABEL_13;
  if (v9 != 16)
  {
    if (((1 << v9) & 0x1066) != 0)
      goto LABEL_18;
    if (v9 != 24)
    {
LABEL_13:
      if (v9 == 70)
      {
LABEL_16:
        v10 = -64;
        goto LABEL_18;
      }
LABEL_14:
      if (v9 - 52 < 6)
      {
        v10 = -72;
        goto LABEL_18;
      }
      if (v9 - 33 < 5)
        goto LABEL_16;
    }
  }
  v10 = -48;
LABEL_18:
  v25 = 13;
  v26 = 0;
  v27 = a2;
  v29 = 0;
  v30 = 0;
  v28 = v8 + v10;
  v31 = 0;
  v32[0] = 0;
  v32[1] = 0;
  sub_22EE012D0(v23[0], (unint64_t)&v25);
  v24 = 1;
  v11 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(a3 + 120) + 48) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v11;
  if (*v11)
  {
    v13 = *(_DWORD *)(v12 + 16);
    if ((v13 & 0xFE) == 0x28)
      goto LABEL_43;
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
  {
    v12 = sub_22F10CF48(v12);
    if (v12)
    {
      v13 = *(_DWORD *)(v12 + 16);
LABEL_43:
      if ((v13 & 0x100000) != 0)
      {
        do
        {
          v12 = *(_QWORD *)(*(_QWORD *)(v12 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v12)
          {
            v22 = *(_DWORD *)(v12 + 16);
            if ((v22 & 0xFE) == 0x28)
              continue;
          }
          v12 = sub_22F10CF48(v12);
          v22 = *(_DWORD *)(v12 + 16);
        }
        while ((v22 & 0x100000) != 0);
      }
      v11 = (uint64_t *)(*(_QWORD *)(v12 + 32) & 0xFFFFFFFFFFFFFFF0);
    }
  }
  v14 = sub_22F10C2A4(*v11);
  if (v14)
  {
    if ((*(_DWORD *)(v14 + 28) & 0x7Fu) - 35 >= 3)
      v15 = 0;
    else
      v15 = v14;
  }
  else
  {
    v15 = 0;
  }
  v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 16))(a3);
  v17 = HIDWORD(v16);
  if (!HIDWORD(v16))
    LODWORD(v17) = *(_DWORD *)(a3 + 24);
  sub_22EABAD94((uint64_t)&v25, v7, v15, a3, a4, v17);
  v18 = sub_22EABAE00(&v25);
  if (v30 != v32)
    free(v30);
  if ((v18 & 1) != 0)
  {
    sub_22EFC77E8(a3, 1);
  }
  else
  {
    *(_QWORD *)(a3 + 80) &= ~0x8000000uLL;
    *(_QWORD *)(a3 + 128) = v18 & 0xFFFFFFFFFFFFFFFELL;
    if ((v18 & 0xFFFFFFFFFFFFFFFELL) != 0)
    {
      sub_22F0D60E4(v18 & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a3 + 140) = v19;
    }
    sub_22EFC9100(a3, *(_QWORD *)(v7 + 88));
    v20 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (!v20 || *(_BYTE *)(v20 + 16) != 26)
      sub_22F10CF48(v20);
    sub_22EB14850(v7, a2);
    v21 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7 + 96) + 136))(*(_QWORD *)(v7 + 96));
    if (v21)
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v21 + 88))(v21, a3);
  }
  return sub_22EAE7390((uint64_t)v23);
}

uint64_t sub_22EABAD94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, int a6)
{
  unsigned int *v6;
  int v7;
  uint64_t v8;

  *(_QWORD *)result = a2;
  *(_QWORD *)(result + 8) = a3;
  *(_QWORD *)(result + 16) = a4;
  *(_BYTE *)(result + 24) = a5;
  *(_QWORD *)(result + 32) = result + 48;
  *(_QWORD *)(result + 40) = 0x1000000000;
  if ((*(_BYTE *)(a4 + 83) & 8) != 0)
  {
    v6 = *(unsigned int **)(a4 + 128);
    if (v6)
    {
      v7 = a6;
      v8 = result;
      sub_22F2633B0(result + 32, (_BYTE *)v6 + 8, &v6[2 * *v6 + 2]);
      a6 = v7;
      result = v8;
    }
  }
  *(_DWORD *)(result + 176) = a6;
  *(_DWORD *)(result + 180) = 0;
  return result;
}

uint64_t sub_22EABAE00(_QWORD **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  BOOL v36;
  int v37;
  char *v38;
  void *v39;
  uint64_t v40;
  _BYTE v41[128];
  unsigned __int8 v42[8];
  void *v43;
  uint64_t v44;
  _QWORD v45[18];

  v45[16] = *MEMORY[0x24BDAC8D0];
  v2 = (uint64_t)*a1;
  sub_22E905168((uint64_t)*a1, 0);
  v3 = *(_QWORD *)(*(_QWORD *)a1[2][15] + 48);
  v4 = *(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF0);
  if (v4)
  {
    v5 = *(_DWORD *)(v4 + 16);
    if ((v5 & 0xFE) == 0x28)
      goto LABEL_75;
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
  {
    v4 = sub_22F10CF48(v4);
    if (v4)
    {
      v5 = *(_DWORD *)(v4 + 16);
LABEL_75:
      if ((v5 & 0x100000) != 0)
      {
        do
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v37 = *(_DWORD *)(v4 + 16);
            if ((v37 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v37 = *(_DWORD *)(v4 + 16);
        }
        while ((v37 & 0x100000) != 0);
      }
      v3 = *(_QWORD *)(v4 + 32);
    }
  }
  v42[0] = 0;
  v43 = v45;
  v44 = 0x1000000000;
  if (*((unsigned __int8 *)a1 + 24) - 3 >= 2)
  {
    v9 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v9 & 8) != 0)
    {
      v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 0x18);
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
    sub_22EAE631C((uint64_t)a1, v42, (uint64_t)a1[1], v10 | v11 | (v9 | v3) & 7);
  }
  else
  {
    v6 = sub_22EAE6B58(a1);
    v8 = sub_22EAE6748(a1, v3, v6, v7);
    sub_22EAE6144(v42, v8);
  }
  if (v42[0])
    goto LABEL_11;
  v15 = *((unsigned __int8 *)a1 + 24);
  if ((v15 - 3) < 2)
  {
    v16 = *((_QWORD *)v43 + v44 - 1);
    LODWORD(v44) = v44 - 1;
    goto LABEL_27;
  }
  if (v15 == 2)
  {
    v12 = 1;
    v18 = sub_22EABA45C(*a1, 2u, *((_DWORD *)a1 + 44), 1);
    if (v18 >= 0x10)
    {
      v19 = sub_22EFB1C68((*a1)[11] + 18648, v18);
      v20 = sub_22F3AA5C4((uint64_t)v19, 0);
      v21 = sub_22EAE61C4((uint64_t)*a1, *((_DWORD *)a1 + 44), *((_QWORD *)v20 + 1));
      if ((v21 & 1) != 0)
        goto LABEL_11;
      v16 = sub_22EAE6248((uint64_t)a1, v21 & 0xFFFFFFFFFFFFFFFELL);
      if ((v16 & 1) != 0)
        goto LABEL_11;
LABEL_34:
      v22 = sub_22ED358AC((uint64_t)*a1, *((_DWORD *)a1 + 44), v16 & 0xFFFFFFFFFFFFFFFELL, 0);
      if ((v22 & 1) != 0)
        goto LABEL_11;
      v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
      v24 = v44;
      if (v44 >= HIDWORD(v44))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v24 = v44;
      }
      *((_QWORD *)v43 + v24) = v23;
      LODWORD(v44) = v44 + 1;
      v12 = (uint64_t)sub_22ED2C004(*a1, *((_DWORD *)a1 + 44), *((unsigned int *)a1 + 44), (_BYTE **)v43, v44);
    }
    goto LABEL_12;
  }
  if (v15 != 1)
  {
    v16 = 0;
    goto LABEL_34;
  }
  v39 = v41;
  v40 = 0x1000000000;
  if (!(_DWORD)v44)
  {
    LODWORD(v44) = 0;
LABEL_20:
    v16 = sub_22EBBA59C((uint64_t)*a1, *((_DWORD *)a1 + 44), 150);
LABEL_21:
    v17 = 1;
    goto LABEL_22;
  }
  sub_22F24C77C((uint64_t)&v39, (uint64_t)&v43);
  LODWORD(v44) = 0;
  if (!(_DWORD)v40)
    goto LABEL_20;
  v16 = 0;
  v25 = 0;
  v26 = 8 * v40;
  v27 = (char *)v39 - 8;
  v38 = (char *)v39 - 8;
  do
  {
    v28 = *(_BYTE **)&v27[v26];
    if ((*v28 + 21) > 0x7Au)
    {
      if (v25)
      {
        v25 = sub_22EB2D0B8();
        if ((v25 & 1) != 0)
          goto LABEL_64;
      }
      else
      {
        v25 = *(_QWORD *)&v27[v26];
      }
      goto LABEL_50;
    }
    if ((v25 & 0xFFFFFFFFFFFFFFFELL) != 0)
    {
      if (!v16 && !(_DWORD)v44)
      {
        v29 = 0;
        goto LABEL_44;
      }
      v30 = sub_22EAE72A8((uint64_t)a1, v25 & 0xFFFFFFFFFFFFFFFELL);
      if (sub_22EAE6144(v42, v30))
        goto LABEL_64;
      v29 = 0;
    }
    else
    {
      v29 = v25;
    }
    v25 = v16;
LABEL_44:
    if (sub_22EAE6144(v42, (uint64_t)v28))
    {
      v17 = 0;
      goto LABEL_62;
    }
    v16 = v25;
    v25 = v29;
    v27 = v38;
LABEL_50:
    v26 -= 8;
  }
  while (v26);
  v31 = v44;
  if ((v25 & 0xFFFFFFFFFFFFFFFELL) == 0)
  {
LABEL_66:
    if (v31)
    {
      v33 = (char *)v43 + 8 * v31 - 8;
      if (v43 < v33)
      {
        v34 = (char *)v43 + 8;
        do
        {
          v35 = *((_QWORD *)v34 - 1);
          *((_QWORD *)v34 - 1) = *(_QWORD *)v33;
          *(_QWORD *)v33 = v35;
          v33 -= 8;
          v36 = v34 >= v33;
          v34 += 8;
        }
        while (!v36);
      }
    }
    if (v16)
      goto LABEL_21;
    goto LABEL_20;
  }
  if (!v16 && !(_DWORD)v44)
  {
    v17 = 1;
LABEL_62:
    v16 = v25;
    goto LABEL_22;
  }
  v32 = sub_22EAE72A8((uint64_t)a1, v25 & 0xFFFFFFFFFFFFFFFELL);
  if (!sub_22EAE6144(v42, v32))
  {
    v31 = v44;
    goto LABEL_66;
  }
LABEL_64:
  v17 = 0;
LABEL_22:
  if (v39 != v41)
    free(v39);
  if ((v17 & 1) != 0)
  {
LABEL_27:
    if ((v16 & 1) == 0)
      goto LABEL_34;
  }
LABEL_11:
  v12 = 1;
LABEL_12:
  if (v43 != v45)
    free(v43);
  v13 = *(_QWORD *)(*(_QWORD *)(v2 + 1896) + 8 * *(unsigned int *)(v2 + 1904) - 8);
  --*(_QWORD *)(v13 + 360);
  return v12;
}

void sub_22EABB2E0(uint64_t a1)
{
  _BYTE *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  _BYTE v11[32];
  void *v12;
  uint64_t v13;
  _QWORD v14[5];

  v14[4] = *MEMORY[0x24BDAC8D0];
  v12 = v14;
  v13 = 0x200000000;
  v9 = v11;
  v10 = 0x200000000;
  sub_22EAE9BA0((uint64_t)&v12, a1 + 3000);
  sub_22EAE9BA0((uint64_t)&v9, a1 + 3048);
  if ((_DWORD)v13)
  {
    v3 = (uint64_t *)v12;
    v4 = (uint64_t *)((char *)v12 + 16 * v13);
    do
    {
      v5 = *v3;
      v6 = v3[1];
      v3 += 2;
      sub_22EB16B8C(a1, v5, v6);
    }
    while (v3 != v4);
  }
  v2 = v9;
  if ((_DWORD)v10)
  {
    v7 = 16 * v10;
    v8 = (uint64_t *)((char *)v9 + 8);
    do
    {
      sub_22EB14A64(a1, *v8, *(v8 - 1));
      v8 += 2;
      v7 -= 16;
    }
    while (v7);
    v2 = v9;
  }
  if (v2 != v11)
    free(v2);
  if (v12 != v14)
    free(v12);
}

uint64_t sub_22EABB400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9)
{
  uint64_t v9;

  v9 = sub_22F10C2A4(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0));
  if (v9 && (*(_DWORD *)(v9 + 28) & 0x7Fu) - 35 <= 2)
    __asm { BR              X9 }
  return 1;
}

void sub_22EABB4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, int a14, int a15, int a16, _QWORD *a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  unint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BOOL4 v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int *v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v37 = sub_22E49F698(v31);
  if (((v37 | a16) & 1) != 0)
  {
    v38 = 0;
    v39 = a17;
  }
  else
  {
    v39 = a17;
    if (sub_22E49F6F8(v34))
      sub_22EABCDDC(a17, v34);
    v53 = sub_22F282248(v34);
    if (v53 == v54)
    {
      v38 = 0;
      v37 = 0;
    }
    else
    {
      v55 = v53;
      v56 = v54;
      v38 = 0;
      while (1)
      {
        if (!sub_22EFC0EB8(v55))
        {
          v37 = sub_22E692064(v55);
          v38 = v55;
          if (!v37)
            break;
        }
        do
          v55 = *(_QWORD *)(v55 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v55 && (*(_DWORD *)(v55 + 28) & 0x7F) != 0x37);
        v37 = 0;
        if (v55 == v56)
          goto LABEL_3;
      }
      v38 = v55;
    }
  }
LABEL_3:
  if (((v37 | a16) & 1) == 0)
  {
    if (v32)
    {
      v35 |= 1uLL;
      *(_QWORD *)(v36 - 96) = v35;
    }
    if ((_DWORD)v33 || v38)
    {
      if (!v38)
      {
        sub_22E8FCA40(v39, a11, 0x16DBu, 0, v36 - 192);
        sub_22E8900C4(v36 - 192, (int *)(v36 + 20));
        v42 = *(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v42 + 8) & 0xF) != 0)
          v42 = (unint64_t)sub_22F10D2BC(v35);
        *(_QWORD *)(v36 - 200) = v42 & 0xFFFFFFFFFFFFFFF0;
        v43 = sub_22E8901B8(v36 - 192, (uint64_t *)(v36 - 200));
        v44 = sub_22E8900C4(v43, (int *)(v36 + 16));
        sub_22E8901B8(v44, (uint64_t *)(v36 - 96));
LABEL_18:
        v45 = (unsigned int *)(v36 - 192);
LABEL_27:
        sub_22E903BEC(v45);
        goto LABEL_60;
      }
      if (sub_22E692064(v38))
      {
        if (a14 != 2)
        {
          sub_22E8FCA40(v39, a11, 0x16E0u, 0, v36 - 192);
          sub_22E8900C4(v36 - 192, (int *)(v36 + 20));
          v48 = *(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v48 + 8) & 0xF) != 0)
            v48 = (unint64_t)sub_22F10D2BC(v35);
          *(_QWORD *)(v36 - 200) = v48 & 0xFFFFFFFFFFFFFFF0;
          v49 = sub_22E8901B8(v36 - 192, (uint64_t *)(v36 - 200));
          sub_22E8900C4(v49, (int *)(v36 + 16));
          sub_22E903BEC((unsigned int *)(v36 - 192));
          sub_22E8FCA40(v39, *(_DWORD *)(v38 + 24), 0x64u, 0, (uint64_t)&a19);
          v45 = (unsigned int *)&a19;
          goto LABEL_27;
        }
        sub_22E8FCA40(v39, *(_DWORD *)(v38 + 24), 0x16E0u, 0, v36 - 192);
        sub_22E8900C4(v36 - 192, (int *)(v36 + 20));
        v40 = *(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v40 + 8) & 0xF) != 0)
          v40 = (unint64_t)sub_22F10D2BC(v35);
        *(_QWORD *)(v36 - 200) = v40 & 0xFFFFFFFFFFFFFFF0;
        v41 = sub_22E8901B8(v36 - 192, (uint64_t *)(v36 - 200));
        sub_22E8900C4(v41, (int *)(v36 + 16));
        goto LABEL_18;
      }
      if (a14 != 2)
      {
        sub_22E8FCA40(v39, a11, 0x16DFu, 0, v36 - 192);
        sub_22E8900C4(v36 - 192, (int *)(v36 + 20));
        v46 = *(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v46 + 8) & 0xF) != 0)
          v46 = (unint64_t)sub_22F10D2BC(v35);
        *(_QWORD *)(v36 - 200) = v46 & 0xFFFFFFFFFFFFFFF0;
        v47 = sub_22E8901B8(v36 - 192, (uint64_t *)(v36 - 200));
        sub_22E8900C4(v47, (int *)(v36 + 16));
        sub_22E903BEC((unsigned int *)(v36 - 192));
        v33 = *(unsigned int *)(v36 + 16);
      }
      sub_22EABBAB4(v39, v38, v33, 0, 1);
    }
    else
    {
      sub_22E8FCA40(v39, a11, 0x16DCu, 0, v36 - 192);
      sub_22E8900C4(v36 - 192, (int *)(v36 + 20));
      v50 = *(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v50 + 8) & 0xF) != 0)
        v50 = (unint64_t)sub_22F10D2BC(v35);
      *(_QWORD *)(v36 - 200) = v50 & 0xFFFFFFFFFFFFFFF0;
      sub_22E8901B8(v36 - 192, (uint64_t *)(v36 - 200));
      sub_22E903BEC((unsigned int *)(v36 - 192));
      v51 = sub_22F282248(v34);
      while (v51 != v52)
      {
        if ((*(_BYTE *)(v51 + 29) & 2) == 0)
          goto LABEL_57;
        do
          v51 = *(_QWORD *)(v51 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v51 && (*(_DWORD *)(v51 + 28) & 0x7F) != 0x37);
      }
      v57 = v34;
      if ((*(_WORD *)(v34 + 72) & 0x80) != 0)
      {
        sub_22EFCC320(v34 + 64);
        v57 = v34;
      }
      v58 = *(_QWORD *)(v57 + 80);
      if (v58)
      {
        while ((*(_DWORD *)(v58 + 28) & 0x7F) != 0x1D)
        {
          v58 = *(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v58)
            goto LABEL_60;
        }
LABEL_55:
        v51 = *(_QWORD *)(v58 + 48);
        if (v51 && (*(_DWORD *)(v51 + 28) & 0x7F) == 0x37)
        {
LABEL_57:
          sub_22E8FCA40(v39, *(_DWORD *)(v51 + 24), 0x180Eu, 0, (uint64_t)&a31);
          v45 = (unsigned int *)&a31;
          goto LABEL_27;
        }
        while (1)
        {
          v58 = *(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v58)
            break;
          if ((*(_DWORD *)(v58 + 28) & 0x7F) == 0x1D)
            goto LABEL_55;
        }
      }
    }
  }
LABEL_60:
  JUMPOUT(0x22EABB45CLL);
}

uint64_t sub_22EABBAB4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  BOOL v54;
  unsigned int v55;
  uint64_t v56;
  unsigned int *v57;
  uint64_t result;
  uint64_t v59;
  int v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unsigned int *v65;
  unsigned int *v66;
  unsigned int *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  unint64_t v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  _BYTE v96[96];
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE v100[96];
  uint64_t v101[2];

  v9 = a2 + 72;
  v10 = *(_WORD *)(a2 + 80) & 0x7F;
  v11 = -40;
  if (v10 > 0x46)
  {
    if (v10 == 83)
      goto LABEL_17;
    if (v10 == 71)
    {
      v11 = -56;
      goto LABEL_17;
    }
    if (v10 != 81)
    {
LABEL_12:
      v12 = v10 - 52;
      v13 = v10 - 33 >= 5;
      v14 = -48;
      if (!v13)
        v14 = -64;
      if (v12 >= 6)
        v11 = v14;
      else
        v11 = -72;
    }
  }
  else
  {
    if (v10 > 0x18)
      goto LABEL_11;
    if (v10 == 16)
    {
LABEL_4:
      v11 = -48;
      goto LABEL_17;
    }
    if (((1 << v10) & 0x1066) == 0)
    {
      if (v10 == 24)
        goto LABEL_4;
LABEL_11:
      if (v10 == 70)
      {
        v11 = -64;
        goto LABEL_17;
      }
      goto LABEL_12;
    }
  }
LABEL_17:
  v15 = *(_QWORD *)(v9 + v11 + 16);
  v16 = (_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  if ((v15 & 4) != 0)
    v16 = (_QWORD *)*v16;
  if (v16)
    v17 = (uint64_t)(v16 - 8);
  else
    v17 = 0;
  v101[0] = v17;
  v18 = sub_22E46BB88(a2);
  v19 = sub_22E46BB88(a2);
  v20 = v19;
  switch((int)a3)
  {
    case 1:
    case 3:
      v21 = **(_QWORD **)(a2 + 120);
      v22 = *(_QWORD *)(*(_QWORD *)(v21 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (v22)
      {
        v23 = *(_DWORD *)(v22 + 16);
        if ((v23 & 0xFE) == 0x28)
          goto LABEL_28;
      }
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_60;
      v24 = sub_22F10CF48(v22);
      if (!v24)
        goto LABEL_60;
      v22 = v24;
      v23 = *(_DWORD *)(v24 + 16);
LABEL_28:
      v25 = v22;
      if ((v23 & 0x100000) == 0)
        goto LABEL_35;
      v25 = v22;
      do
      {
        while (1)
        {
          v25 = *(_QWORD *)(*(_QWORD *)(v25 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v25)
            break;
          v26 = *(_DWORD *)(v25 + 16);
          if ((v26 & 0xFE) != 0x28)
            break;
          if ((v26 & 0x100000) == 0)
            goto LABEL_35;
        }
        v25 = sub_22F10CF48(v25);
      }
      while ((*(_DWORD *)(v25 + 16) & 0x100000) != 0);
LABEL_35:
      if (((*(_DWORD *)((*(_QWORD *)(v25 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v25 + 32)) & 7) != 1)
      {
LABEL_60:
        if (!a5)
          return 0;
        sub_22E8FCA40(a1, *(_DWORD *)(v21 + 24), 0x16DEu, 0, (uint64_t)v100);
        v99 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 16))(v21);
        v41 = sub_22E8906A0((uint64_t)v100, &v99);
        v98 = *(_QWORD *)(v21 + 48);
        v37 = sub_22E8901B8(v41, &v98);
        v42 = a1[11];
        v43 = sub_22EF6477C(v42, v17);
        v40 = sub_22EF5F8C4(v42, v43 | 1, 1);
        goto LABEL_62;
      }
      v27 = v22;
      if ((*(_BYTE *)(v22 + 18) & 0x10) != 0)
      {
        v27 = v22;
        do
        {
          while (1)
          {
            v27 = *(_QWORD *)(*(_QWORD *)(v27 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v27)
              break;
            v28 = *(_DWORD *)(v27 + 16);
            if ((v28 & 0xFE) != 0x28)
              break;
            if ((v28 & 0x100000) == 0)
              goto LABEL_43;
          }
          v27 = sub_22F10CF48(v27);
        }
        while ((*(_DWORD *)(v27 + 16) & 0x100000) != 0);
      }
LABEL_43:
      v29 = *(_QWORD *)((*(_QWORD *)(v27 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v29 & 8) != 0)
        v94 = *(_DWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
      else
        v94 = 0;
      if ((*(_BYTE *)(v22 + 18) & 0x10) != 0)
      {
        do
        {
          while (1)
          {
            v22 = *(_QWORD *)(*(_QWORD *)(v22 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v22)
              break;
            v49 = *(_DWORD *)(v22 + 16);
            if ((v49 & 0xFE) != 0x28)
              break;
            if ((v49 & 0x100000) == 0)
              goto LABEL_80;
          }
          v22 = sub_22F10CF48(v22);
        }
        while ((*(_DWORD *)(v22 + 16) & 0x100000) != 0);
      }
LABEL_80:
      v91 = v20;
      v92 = v17;
      v44 = v18;
      v50 = *(_QWORD *)((*(_QWORD *)(v22 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
      v93 = 1;
      if ((v50 & 8) != 0)
        goto LABEL_90;
      v45 = 0;
      goto LABEL_91;
    case 2:
    case 4:
      v30 = **(_QWORD **)(a2 + 120);
      v31 = *(_QWORD *)(*(_QWORD *)(v30 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (v31)
      {
        v32 = *(_DWORD *)(v31 + 16);
        if (v32 == 41)
          goto LABEL_50;
      }
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v31 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 41)
        goto LABEL_58;
      v33 = sub_22F10CF48(v31);
      if (!v33)
        goto LABEL_58;
      v31 = v33;
      v32 = *(_DWORD *)(v33 + 16);
LABEL_50:
      v34 = v31;
      if ((v32 & 0x100000) == 0)
        goto LABEL_57;
      v34 = v31;
      break;
    default:
      v91 = v19;
      v92 = v17;
      v44 = v18;
      v45 = 0;
      v93 = 0;
      v94 = 0;
      goto LABEL_91;
  }
  do
  {
    while (1)
    {
      v34 = *(_QWORD *)(*(_QWORD *)(v34 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (!v34)
        break;
      v35 = *(_DWORD *)(v34 + 16);
      if ((v35 & 0xFE) != 0x28)
        break;
      if ((v35 & 0x100000) == 0)
        goto LABEL_57;
    }
    v34 = sub_22F10CF48(v34);
  }
  while ((*(_DWORD *)(v34 + 16) & 0x100000) != 0);
LABEL_57:
  if (((*(_DWORD *)((*(_QWORD *)(v34 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v34 + 32)) & 7) != 0)
  {
LABEL_58:
    if (a5)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v30 + 24), 0x16DEu, 0, (uint64_t)v100);
      v99 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 16))(v30);
      v36 = sub_22E8906A0((uint64_t)v100, &v99);
      v98 = *(_QWORD *)(v30 + 48);
      v37 = sub_22E8901B8(v36, &v98);
      v38 = a1[11];
      v39 = sub_22EF6477C(v38, v17);
      v40 = sub_22EF5FB8C(v38, v39);
LABEL_62:
      v97 = v40;
      sub_22E8901B8(v37, (uint64_t *)&v97);
      goto LABEL_99;
    }
    return 0;
  }
  v46 = v31;
  if ((*(_BYTE *)(v31 + 18) & 0x10) != 0)
  {
    v46 = v31;
    do
    {
      while (1)
      {
        v46 = *(_QWORD *)(*(_QWORD *)(v46 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v46)
          break;
        v47 = *(_DWORD *)(v46 + 16);
        if ((v47 & 0xFE) != 0x28)
          break;
        if ((v47 & 0x100000) == 0)
          goto LABEL_71;
      }
      v46 = sub_22F10CF48(v46);
    }
    while ((*(_DWORD *)(v46 + 16) & 0x100000) != 0);
  }
LABEL_71:
  v48 = *(_QWORD *)((*(_QWORD *)(v46 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v48 & 8) != 0)
    v94 = *(_DWORD *)((v48 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
  else
    v94 = 0;
  if ((*(_BYTE *)(v31 + 18) & 0x10) != 0)
  {
    do
    {
      while (1)
      {
        v31 = *(_QWORD *)(*(_QWORD *)(v31 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v31)
          break;
        v51 = *(_DWORD *)(v31 + 16);
        if ((v51 & 0xFE) != 0x28)
          break;
        if ((v51 & 0x100000) == 0)
          goto LABEL_89;
      }
      v31 = sub_22F10CF48(v31);
    }
    while ((*(_DWORD *)(v31 + 16) & 0x100000) != 0);
  }
LABEL_89:
  v91 = v20;
  v92 = v17;
  v44 = v18;
  v93 = 0;
  v45 = 0;
  v50 = *(_QWORD *)((*(_QWORD *)(v31 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v50 & 8) != 0)
LABEL_90:
    v45 = (*(_DWORD *)((v50 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 9) & 3;
LABEL_91:
  v52 = sub_22EFC0EB8(a2);
  v53 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v53)
    v54 = *(_BYTE *)(v53 + 16) == 26;
  else
    v54 = 0;
  if ((v54
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v53 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
     && (v53 = sub_22F10CF48(v53)) != 0)
    && v52 < (unsigned __int16)(*(_QWORD *)(v53 + 16) >> 38))
  {
    if (!a5)
      return 0;
    v55 = sub_22EFC0EB8(a2);
    sub_22E8FCA40(a1, *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 120) + 8 * v55) + 24), 0x16D7u, 0, (uint64_t)v100);
    v56 = *(_QWORD *)(*(_QWORD *)(a2 + 120) + 8 * sub_22EFC0EB8(a2));
    v99 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 16))(v56);
    sub_22E8906A0((uint64_t)v100, &v99);
LABEL_99:
    v57 = (unsigned int *)v100;
LABEL_100:
    sub_22E903BEC(v57);
    return 0;
  }
  if (sub_22EFBF68C(a2))
  {
    if (!a5)
      return 0;
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x16E1u, 0, (uint64_t)v96);
    v57 = (unsigned int *)v96;
    goto LABEL_100;
  }
  v59 = a3;
  v90 = v9;
  v60 = a5;
  v61 = a1;
  v62 = v44 >> 11;
  v63 = (v91 >> 9) & 3;
  v64 = sub_22E46A3A0(v92);
  if ((unsigned int *)v64 != v65)
  {
    v66 = (unsigned int *)v64;
    v67 = v65;
    do
    {
      v68 = *v66;
      v69 = *(_QWORD *)(**((_QWORD **)v66 + 2) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v69 + 8) & 0xF) != 0)
        v69 = (unint64_t)sub_22F10D2BC(**((_QWORD **)v66 + 2));
      if ((sub_22EABB400((uint64_t)v61, v68, v69 & 0xFFFFFFFFFFFFFFF0, v93, v62, v63, v94, v45, v59) & 1) == 0)
        return 0;
      v66 += 6;
    }
    while (v66 != v67);
  }
  result = sub_22EABC458(v61, v92, v59, v93, v94, v45, v62, v63, a4, v60);
  if (!(_DWORD)result)
    return result;
  if ((_DWORD)v59 != 5)
  {
    v71 = *(_WORD *)(a2 + 80) & 0x7F;
    v72 = -40;
    if (v71 > 0x46)
    {
      v73 = v90;
      if (v71 == 83)
        goto LABEL_138;
      if (v71 == 71)
      {
        v72 = -56;
        goto LABEL_138;
      }
      if (v71 != 81)
      {
LABEL_133:
        v75 = v71 - 52;
        v13 = v71 - 33 >= 5;
        v76 = -48;
        if (!v13)
          v76 = -64;
        if (v75 >= 6)
          v72 = v76;
        else
          v72 = -72;
      }
    }
    else
    {
      v73 = v90;
      if (v71 > 0x18)
        goto LABEL_132;
      if (v71 == 16)
      {
LABEL_122:
        v72 = -48;
        goto LABEL_138;
      }
      if (((1 << v71) & 0x1066) == 0)
      {
        if (v71 == 24)
          goto LABEL_122;
LABEL_132:
        if (v71 == 70)
        {
          v72 = -64;
          goto LABEL_138;
        }
        goto LABEL_133;
      }
    }
LABEL_138:
    v77 = *(_QWORD *)(v73 + v72 + 16);
    v78 = (_QWORD *)(v77 & 0xFFFFFFFFFFFFFFF8);
    if ((v77 & 4) != 0)
      v78 = (_QWORD *)*v78;
    if (v78)
      v79 = (uint64_t)(v78 - 8);
    else
      v79 = 0;
    result = !sub_22E463414(v79);
    if ((result & 1) == 0 && v60)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v92 + 104) + 96), *(_QWORD *)(v92 + 104));
      if (*(_DWORD *)(*(_QWORD *)(v92 + 128) + 20))
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v92 + 104) + 96), *(_QWORD *)(v92 + 104));
        v80 = *(_QWORD *)(*(_QWORD *)(v92 + 128) + 32);
        if ((v80 & 1) != 0)
          v80 = sub_22F3B1908(*(_QWORD *)(v92 + 128));
        sub_22E8FCA40(v61, *(_DWORD *)v80, 0x16DAu, 0, (uint64_t)v100);
        v81 = sub_22E890024((uint64_t)v100, v101);
        LODWORD(v99) = 1;
      }
      else
      {
        v82 = sub_22E488FF8(v92);
        if (v82 == v83)
          return 0;
        v84 = v82;
        v85 = v83;
        while (1)
        {
          v86 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v84 + 32))(v84);
          if ((*(_BYTE *)(v86 + 82) & 0xC) != 0 || sub_22EFD7260(v86))
            break;
          do
            v84 = *(_QWORD *)(v84 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v84 && (*(_DWORD *)(v84 + 28) & 0x7Eu) - 54 > 3);
          result = 0;
          if (v84 == v85)
            return result;
        }
        v87 = *(_QWORD *)(v84 + 56);
        if ((v87 & 4) != 0 && (v89 = v87 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v89 + 16)))
          v88 = **(int ***)(v89 + 24);
        else
          v88 = (int *)(v84 + 64);
        sub_22E8FCA40(v61, *v88, 0x16DAu, 0, (uint64_t)v100);
        v81 = sub_22E890024((uint64_t)v100, v101);
        LODWORD(v99) = 0;
      }
      sub_22E8900C4(v81, (int *)&v99);
      goto LABEL_99;
    }
    return result;
  }
  v70 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
  if ((*(_BYTE *)(v70 + 82) & 0xC) != 0)
  {
    if (!v60)
      return 0;
    goto LABEL_125;
  }
  v74 = sub_22EFD7260(v70);
  result = v74 == 0;
  if (v74 && v60)
  {
LABEL_125:
    sub_22E8FCA40(v61, *(_DWORD *)(a2 + 24), 0x16E2u, 0, (uint64_t)v100);
    sub_22E890024((uint64_t)v100, v101);
    goto LABEL_99;
  }
  return result;
}

uint64_t sub_22EABC458(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10)
{
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  unsigned int v33[24];
  unint64_t v34;
  uint64_t v35;

  v35 = a2;
  v17 = sub_22EFC3B90(a2);
  v18 = 1;
  if (!v17)
    return v18;
  v19 = v17;
  v20 = *(_DWORD *)(v17 + 28);
LABEL_3:
  v34 = v19;
  if ((v20 & 0x80) != 0 || (*(_BYTE *)(v19 + 68) & 1) != 0 && !*(_QWORD *)(v19 + 40))
    goto LABEL_23;
  v21 = sub_22EF5BA38(a1[11], *(_QWORD *)(v19 + 48));
  if (sub_22EFC2E8C(v19))
  {
    v22 = sub_22F10C2A4(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0));
    if (v22)
    {
      if ((*(_DWORD *)(v22 + 28) & 0x7Fu) - 35 >= 3)
        v23 = 0;
      else
        v23 = v22;
    }
    else
    {
      v23 = 0;
    }
    BYTE4(v30) = a10;
    LODWORD(v30) = a9;
    if ((sub_22EABC458(a1, v23, a3, a4, a5, a6, a7, a8, v30, v31) & 1) != 0)
      goto LABEL_23;
    return 0;
  }
  if (!(_DWORD)a3 && (*(_DWORD *)(v19 + 72) & 3) != 0 && (*(_DWORD *)(v19 + 72) & 3) != 3)
  {
    if (a10)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v19 + 24), 0x16D8u, 0, (uint64_t)v33);
      sub_22E890024((uint64_t)v33, (uint64_t *)&v34);
LABEL_34:
      sub_22E903BEC(v33);
    }
    return 0;
  }
  v24 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v24 & 8) != 0 && (*(_WORD *)((v24 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x180) != 0)
  {
    if (a10)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v19 + 24), 0x16DDu, 0, (uint64_t)v33);
      v27 = sub_22E890024((uint64_t)v33, &v35);
      v28 = 0;
      v29 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v29 & 8) != 0)
        v28 = (*(_DWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 6) & 7;
      v32 = v28;
      sub_22E8900C4(v27, &v32);
      goto LABEL_34;
    }
    return 0;
  }
  if ((_DWORD)a4)
    v25 = (*(_BYTE *)(v19 + 68) & 2) == 0;
  else
    v25 = 0;
  BYTE4(v31) = a10;
  LODWORD(v31) = a9;
  if (!sub_22EABB400((uint64_t)a1, *(unsigned int *)(v19 + 24), v21, v25, a7, a8, a5, a6, a3))
    return 0;
LABEL_23:
  while (1)
  {
    v19 = *(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v19)
      return 1;
    v20 = *(_DWORD *)(v19 + 28);
    if ((v20 & 0x7Fu) - 49 < 3)
      goto LABEL_3;
  }
}

uint64_t sub_22EABC6C0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  const void *v9;

  if (sub_22EFD7260(a1))
  {
    result = sub_22EFD7394(a1);
    if ((uint64_t *)result != v5)
    {
      v6 = (uint64_t *)result;
      v7 = v5;
      do
      {
        v8 = *v6++;
        result = sub_22EABC6C0(v8, a2);
      }
      while (v6 != v7);
    }
  }
  else
  {
    v9 = (const void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
    return sub_22E3BA850(a2, v9);
  }
  return result;
}

void sub_22EABC744(_QWORD *a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  uint64_t *v10;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21[24];

  if (a4)
  {
    v10 = (uint64_t *)a4;
    if ((*(_DWORD *)(a4 + 28) & 0x7Fu) - 26 <= 6)
      v10 = *(uint64_t **)(a4 + 48);
    v15 = a7 + 8;
    v14 = *(_QWORD *)(a7 + 8);
    if ((v14 & 4) != 0)
    {
      v17 = v14 & 0xFFFFFFFFFFFFFFF8;
      v15 = *(_QWORD *)v17;
      v16 = *(_QWORD *)v17 + 8 * *(unsigned int *)(v17 + 8);
    }
    else
    {
      v16 = v15 + 8 * (v14 > 7);
    }
    while (v15 != v16)
    {
      v18 = *(_QWORD *)v15;
      if (*(_WORD *)(*(_QWORD *)(*(_QWORD *)v15 + 72) + 8) == 463)
      {
        *(_QWORD *)(v18 + 48) |= 0x10000uLL;
        sub_22E8FCA40(a1, *(_DWORD *)(v18 + 16), 0x186Au, 0, (uint64_t)v21);
        sub_22E8D2984((uint64_t)v21, (uint64_t *)v18);
        sub_22E903BEC(v21);
      }
      v15 += 8;
    }
    v19 = a1[283];
    v20 = *(_QWORD *)(*(_QWORD *)(v19 + 272) + 8 * *(unsigned int *)(v19 + 280) - 8);
    sub_22EA39224((uint64_t)a1, a2, a3, (unint64_t)v10, (uint64_t *)(*(_QWORD *)v19 + 8 * *(unsigned int *)(v19 + 8) - 8 * v20), v20, a5, a6, a7);
    sub_22EAB3AC0((uint64_t)a1, a2, v10);
  }
}

void sub_22EABC89C(int32x2_t *a1, unint64_t a2)
{
  unint64_t v4;
  int32x2_t v5;
  unint64_t i;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t j;
  unint64_t *v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  _QWORD v22[5];

  v22[4] = *MEMORY[0x24BDAC8D0];
  v4 = a2 + 64;
  if ((sub_22EFC7ADC(a2 + 64) & 1) == 0)
  {
    if (sub_22E49F6F8(a2))
    {
      ++*(_DWORD *)(*(_QWORD *)&a1[11] + 18688);
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
      if ((**(_QWORD **)(a2 + 128) & 0x4000000) != 0)
        sub_22EABCDDC(a1, a2);
    }
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    if ((*(_WORD *)(*(_QWORD *)(a2 + 128) + 8) & 0x200) == 0)
    {
      ++*(_DWORD *)(*(_QWORD *)&a1[11] + 18696);
      if ((sub_22EABD2CC(a2) & 1) != 0
        || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
            (**(_QWORD **)(a2 + 128) & 0x4000000) != 0)
        || *(_DWORD *)(*(_QWORD *)(*(_QWORD *)&a1[11] + 15088) + 148) == 11
        && ((sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
             (**(_QWORD **)(a2 + 128) & 8) != 0)
         || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
             (**(_QWORD **)(a2 + 128) & 0x40000000) != 0)
         || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
             (**(_QWORD **)(a2 + 128) & 0x20) != 0)
         || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
             (**(_QWORD **)(a2 + 128) & 0x100000000) != 0)))
      {
        sub_22EABD328(a1, a2);
      }
    }
    if ((*(_BYTE *)(*(_QWORD *)&a1[9] + 1) & 2) != 0 && sub_22EABDAF8(a2))
    {
      ++*(_DWORD *)(*(_QWORD *)&a1[11] + 18704);
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
      if ((**(_QWORD **)(a2 + 128) & 0x40000000) != 0
        || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
            (**(_QWORD **)(a2 + 128) & 0x4000000) != 0))
      {
        sub_22EABDBA0(a1, a2);
      }
    }
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    if ((*(_WORD *)(*(_QWORD *)(a2 + 128) + 8) & 0x800) == 0)
    {
      ++*(_DWORD *)(*(_QWORD *)&a1[11] + 18712);
      if (sub_22E463414(a2)
        || (sub_22EABE304(a2) & 1) != 0
        || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
            (**(_QWORD **)(a2 + 128) & 0x10000000) != 0))
      {
        sub_22EABE360((uint64_t)a1, a2);
      }
    }
    if ((*(_BYTE *)(*(_QWORD *)&a1[9] + 1) & 2) != 0)
    {
      if (sub_22EABE940(a2))
      {
        ++*(_DWORD *)(*(_QWORD *)&a1[11] + 18720);
        if (sub_22E463414(a2)
          || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
              (**(_QWORD **)(a2 + 128) & 0x100000000) != 0)
          || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
              (**(_QWORD **)(a2 + 128) & 0x10000000) != 0))
        {
          sub_22EABEA08((uint64_t)a1, a2);
        }
      }
    }
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    if ((*(_WORD *)(*(_QWORD *)(a2 + 128) + 8) & 0x2000) == 0)
    {
      ++*(_DWORD *)(*(_QWORD *)&a1[11] + 18728);
      if (sub_22E463414(a2)
        || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)),
            (**(_QWORD **)(a2 + 128) & 0x200000000) != 0))
      {
        sub_22EABEFB4(a1, a2);
      }
    }
  }
  if ((*(_BYTE *)(*(_QWORD *)&a1[9] + 1) & 0x10) != 0 && a1[1335].i32[0] <= (unsigned __int32)a1[1494].i32[1])
  {
    v21 = 0;
    v5 = a1[11];
    if (sub_22EFCE144(v4, (*(_QWORD *)&v5 + 15760) | 6) <= 7)
    {
      for (i = sub_22EFD9E18(a2); i; i = sub_22F3B44EC(i))
      {
        while (1)
        {
          v7 = *(_QWORD *)(i + 40);
          if ((v7 & 4) == 0)
          {
            v8 = v7 & 0xFFFFFFFFFFFFFFF8;
            if ((v7 & 0xFFFFFFFFFFFFFFF8) != 0
              && (*(_DWORD *)(v8 + 28) & 0x7Eu) - 52 <= 5
              && (*(_QWORD *)(v8 + 40) & 7) == 6)
            {
              v9 = *(_DWORD *)(*(_QWORD *)(v8 + 40) & 0xFFFFFFFFFFFFFFF8);
              if (v9 == 34)
              {
                if ((*(_BYTE *)(v8 + 83) & 4) != 0)
                {
                  v10 = v21;
                  if (v21 >= 4uLL)
                  {
                    v20 = i;
                    llvm::SmallVectorBase<unsigned int>::grow_pod();
                    i = v20;
                    v10 = v21;
                  }
                  v22[v10] = v8;
                  ++v21;
                }
              }
              else if (v9 == 30)
              {
                return;
              }
            }
          }
          v11 = *(_QWORD *)(i + 48);
          if ((v11 & 1) != 0)
            break;
          i = *(_QWORD *)(i + 48);
          if (!v11)
            goto LABEL_53;
        }
      }
LABEL_53:
      for (j = sub_22EFCE144(v4, (*(_QWORD *)&v5 + 15824) | 6); j; j = v13[1])
      {
        v13 = (unint64_t *)(j & 0xFFFFFFFFFFFFFFF8);
        v14 = (j & 0xFFFFFFFFFFFFFFF8) == 0 || (j & 4) == 0;
        v15 = j & 0xFFFFFFFFFFFFFFF8;
        if (!v14)
          v15 = *v13;
        if (v15 && (*(_DWORD *)(v15 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA && (*(_BYTE *)(v15 + 83) & 4) != 0)
        {
          v16 = v21;
          if (v21 >= 4uLL)
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v16 = v21;
          }
          v22[v16] = v15;
          ++v21;
        }
        if (v14)
          break;
      }
    }
    v17 = v22;
    if (v21)
    {
      v18 = 8 * v21;
      do
      {
        v19 = *v17++;
        sub_22F3280AC(a1, a2, v19);
        v18 -= 8;
      }
      while (v18);
    }
  }
}

void **sub_22EABCDDC(uint64_t a1, unint64_t a2)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  void *v33[7];
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  sub_22EAC71A0((uint64_t)v33, a1, a2, 0);
  if (!v34)
  {
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
      v4 = sub_22E49F910(a2);
    else
      v4 = 0;
    v5 = *(_QWORD *)(a2 + 48);
    if (v5)
      v6 = v5 & 0xFFFFFFFFFFFFFFF0;
    else
      v6 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a2);
    v7 = *(_DWORD *)(a2 + 24);
    v30 = sub_22EFC6A3C((_QWORD *)(*(_QWORD *)(a1 + 88) + 15224), v6 & 7 | *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFF0) + 8));
    v31 = v7;
    sub_22EFC6D6C((uint64_t)&v32, v30);
    v8 = sub_22EFD7DFC(*(_QWORD *)(a1 + 88), a2, v7, &v30, 0, 0, 0, (*(_DWORD *)(a1 + 56) & 0xFC) != 4, 1, 1, v4, 0, 0, 0);
    *(_DWORD *)(v8 + 28) &= 0xFFFF9FFF;
    *(_QWORD *)(v8 + 80) |= 0x2000000uLL;
    v9 = *(_QWORD *)(a1 + 88);
    if ((*(_DWORD *)(*(_QWORD *)(a1 + 72) + 52) & 0x40000000) != 0)
    {
      if ((*(_BYTE *)(*(_QWORD *)(v9 + 2000) + 68) & 1) != 0)
        v10 = 5;
      else
        v10 = 4;
    }
    else
    {
      v10 = 0;
    }
    sub_22EAC6FB8(a1, v8, *(_QWORD *)(v9 + 16392), 0, 0, v10, 0);
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0)
      sub_22E9FE3F8(a1, a2, 0, v8, 0, 0);
    v11 = sub_22E49F698(a2);
    v12 = 0x800000;
    if (!v11)
      v12 = 0;
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v8 + 80) & 0xFFFFFFFFFF7FFFFFLL | v12;
    ++*(_DWORD *)(*(_QWORD *)(a1 + 88) + 18692);
    v13 = (uint64_t *)sub_22E90490C(a1, a2 + 64);
    sub_22EAC6C64((_QWORD *)a1, (uint64_t)v13, v8);
    if (sub_22EAB8670(a1, v8, 0, 0, 0))
      sub_22EAB9ED0((_QWORD *)a1, v8, v7);
    if (v13)
      sub_22EA0483C(a1, v8, v13, 0);
    sub_22EFCCFA0(a2 + 64, v8);
    v14 = *(_QWORD *)(a1 + 72);
    if ((*(_BYTE *)(v14 + 104) & 0x20) != 0)
    {
      v35 = &v37;
      v37 = 0xD0000000CLL;
      v36 = 0x400000002;
      if ((*(_BYTE *)(v14 + 128) & 0x10) != 0)
      {
        v15 = 3;
        v38 = 15;
        LODWORD(v36) = 3;
      }
      else
      {
        v15 = 2;
      }
      v16 = 0;
      v29 = 4 * v15;
      do
      {
        v17 = *(_DWORD *)((char *)&v37 + v16);
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
          v18 = sub_22E49F910(a2);
        else
          v18 = 0;
        v19 = *(_DWORD *)(a2 + 24);
        v20 = *(_QWORD *)(a1 + 88);
        v21 = (*(_DWORD *)(a1 + 56) & 0xFC) != 4;
        v22 = sub_22EFC7430(168, v20, a2 + 64, 0);
        v23 = sub_22EFBF4FC(v22, 55, v20, a2 + 64, v19, &v30, 0, 0, 0, 0, v21, 1, v18, 0);
        *(_QWORD *)v23 = &off_24FAC37B0;
        *(_QWORD *)(v23 + 160) = 0;
        v24 = *(_QWORD *)(v23 + 80) & 0xFFFFFFFFFFLL;
        *(_DWORD *)(v23 + 28) = *(_DWORD *)(v23 + 28) & 0xFFFF9DFF | 0x200;
        *(_QWORD *)(v23 + 80) = v24 | 0x2000000;
        sub_22EAC6FB8(a1, v22, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16392), 0, 0, v17, 0);
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0)
          sub_22E9FE3F8(a1, a2, 0, v22, 0, 0);
        v25 = sub_22E49F698(a2);
        v26 = 0x800000;
        if (!v25)
          v26 = 0;
        *(_QWORD *)(v22 + 80) = *(_QWORD *)(v22 + 80) & 0xFFFFFFFFFF7FFFFFLL | v26;
        ++*(_DWORD *)(*(_QWORD *)(a1 + 88) + 18692);
        v27 = (uint64_t *)sub_22E90490C(a1, a2 + 64);
        sub_22EAC6C64((_QWORD *)a1, (uint64_t)v27, v22);
        if (sub_22EAB8670(a1, v22, 0, 0, 0))
          sub_22EAB9ED0((_QWORD *)a1, v22, v19);
        if (v27)
          sub_22EA0483C(a1, v22, v27, 0);
        sub_22EFCCFA0(a2 + 64, v22);
        v16 += 4;
      }
      while (v29 != v16);
      if (v35 != &v37)
        free(v35);
    }
  }
  return sub_22EAC72A0(v33);
}

uint64_t sub_22EABD2CC(uint64_t a1)
{
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 0x28) != 0)
    return 1;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  return (**(_QWORD **)(a1 + 128) >> 29) & 1;
}

void **sub_22EABD328(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int i;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  unsigned int *v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  signed int *v50;
  uint64_t v51;
  signed int v52;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  void *v61[7];
  char v62;
  unint64_t v63;
  _QWORD v64[4];
  unsigned int v65;
  void *v66;
  __int128 v67;
  uint64_t v68;
  int v69;
  signed int *v70;
  uint64_t v71;
  _DWORD v72[4];
  char *v73;
  __int128 v74;
  uint64_t v75;
  int v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  v63 = a2;
  sub_22EAC71A0((uint64_t)v61, a1, a2, 1u);
  if (v62)
    return sub_22EAC72A0(v61);
  v4 = *(_QWORD *)(a2 + 48);
  if (v4)
    v5 = v4 & 0xFFFFFFFFFFFFFFF0;
  else
    v5 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a2);
  v60 = v5;
  v6 = sub_22EAB82EC(a2);
  if ((_DWORD)v6)
    v60 |= 1uLL;
  if ((*(_DWORD *)(*(_QWORD *)(a1 + 72) + 52) & 0x40000000) != 0)
  {
    v54 = *(_QWORD *)(a1 + 88);
    if ((*(_QWORD *)(*(_QWORD *)(v54 + 2000) + 64) & 0x100000000) != 0)
      v7 = 5;
    else
      v7 = 4;
    v8 = sub_22EF5DD84(v54, v60, v7);
    v60 = v8;
  }
  else
  {
    v7 = 0;
    v8 = v60;
  }
  v60 = sub_22EF5F8C4(*(_QWORD *)(a1 + 88), v8, 1);
  v9 = sub_22EAB8368(a1, a2, 1, v6, v7, 0, v7, 0, 0, 0);
  v10 = sub_22EFC6A3C((_QWORD *)(*(_QWORD *)(a1 + 88) + 15224), *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF0) + 8) | v5 & 7);
  v11 = *(_DWORD *)(a2 + 24);
  v57 = v10;
  v58 = v11;
  sub_22EFC6D6C((uint64_t)&v59, v10);
  v12 = *(_QWORD *)(a1 + 88);
  v56 = a1;
  v13 = (*(_DWORD *)(a1 + 56) & 0xFC) != 4;
  v14 = sub_22EFC7430(168, v12, a2 + 64, 0);
  v55 = v13;
  v15 = v56;
  v16 = sub_22EFBF4FC(v14, 55, v12, a2 + 64, v11, &v57, 0, 0, 0, 0, v55, 1, v9, 0);
  *(_QWORD *)v16 = &off_24FAC37B0;
  *(_QWORD *)(v16 + 160) = 0;
  v17 = *(_QWORD *)(v16 + 80) & 0xFFFFFFFFFFLL;
  *(_DWORD *)(v16 + 28) = *(_DWORD *)(v16 + 28) & 0xFFFF9DFF | 0x200;
  *(_QWORD *)(v16 + 80) = v17 | 0x2000000;
  sub_22EAC6FB8(v15, v14, *(_QWORD *)(*(_QWORD *)(v15 + 88) + 16392), (uint64_t *)&v60, 1uLL, v7, 0);
  if ((*(_BYTE *)(*(_QWORD *)(v56 + 72) + 68) & 0x20) != 0)
    sub_22E9FE3F8(v56, a2, 1, v14, v6, 0);
  if (*(_DWORD *)(v56 + 10680) > *(_DWORD *)(v56 + 11956)
    && (v18 = *(_QWORD *)(a2 + 128)) != 0
    && ((*(unsigned __int16 *)(v18 + 8) | (*(unsigned __int8 *)(v18 + 10) << 16)) & 0x100000) != 0)
  {
    v19 = sub_22EF579A8(*(_QWORD *)(v56 + 88), v60, 0);
  }
  else
  {
    v19 = 0;
  }
  v20 = sub_22EFBF080(*(_QWORD *)(v56 + 88), v14 + 72, v11, v11, 0, v60, (uint64_t)v19, 0, 0);
  v21 = v14;
  if ((*(_DWORD *)(v14 + 28) & 0x7F) != 0x53)
  {
    v22 = *(_QWORD *)(v14 + 16);
    v23 = v22 & 0xFFFFFFFFFFFFFFF8;
    if ((v22 & 4) != 0)
      v23 = *(_QWORD *)v23;
    for (i = *(_WORD *)(v23 + 8) & 0x7F; i != 83; i = *(_WORD *)(v23 + 8) & 0x7F)
    {
      v25 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v25 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_29;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_28;
        if (i == 16)
          goto LABEL_22;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_35;
        if (i == 24)
        {
LABEL_22:
          v25 = -48;
        }
        else
        {
LABEL_28:
          if (i != 70)
          {
LABEL_29:
            v26 = i - 52;
            if ((i - 33) >= 5)
              v27 = -48;
            else
              v27 = -64;
            if (v26 >= 6)
              v25 = v27;
            else
              v25 = -72;
            goto LABEL_35;
          }
          v25 = -64;
        }
      }
LABEL_35:
      v28 = *(_QWORD *)(v23 + v25 + 16);
      v23 = v28 & 0xFFFFFFFFFFFFFFF8;
      if ((v28 & 4) != 0)
        v23 = *(_QWORD *)v23;
    }
    v21 = v23 - 40;
  }
  v29 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v21 + 88) + 2032, 8, 3);
  *(_QWORD *)(v14 + 120) = v29;
  *v29 = v20;
  if (sub_22EABD2CC(a2))
  {
    LODWORD(v30) = sub_22EABBAB4((_QWORD *)v56, v14, 1, 0, 0);
  }
  else
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    v30 = (**(_QWORD **)(a2 + 128) >> 40) & 1;
  }
  v31 = 0x800000;
  if (!(_DWORD)v30)
    v31 = 0;
  *(_QWORD *)(v14 + 80) = *(_QWORD *)(v14 + 80) & 0xFFFFFFFFFF7FFFFFLL | v31;
  if (sub_22EAB5D40(a2))
  {
    v32 = *(_QWORD *)(v14 + 80);
LABEL_49:
    v33 = 0x1000000;
    goto LABEL_55;
  }
  if (sub_22EABD2CC(a2))
  {
    v34 = sub_22EABBAB4((_QWORD *)v56, v14, 1, 1, 0);
    v32 = *(_QWORD *)(v14 + 80);
    if ((v34 & 1) != 0)
      goto LABEL_49;
  }
  else
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    v32 = *(_QWORD *)(v14 + 80);
    if ((**(_QWORD **)(a2 + 128) & 0x400000000000) != 0)
      goto LABEL_49;
  }
  v33 = 0;
LABEL_55:
  *(_QWORD *)(v14 + 80) = v32 & 0xFFFFFFFFFEFFFFFFLL | v33;
  ++*(_DWORD *)(*(_QWORD *)(v56 + 88) + 18700);
  v35 = (uint64_t *)sub_22E90490C(v56, a2 + 64);
  sub_22EAC6C64((_QWORD *)v56, (uint64_t)v35, v14);
  if (sub_22EAB8670(v56, v14, 1, 0, 0))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    **(_QWORD **)(a2 + 128) |= 0x400000000uLL;
    sub_22EAB9ED0((_QWORD *)v56, v14, v11);
  }
  if (v35)
    sub_22EA0483C(v56, v14, v35, 0);
  sub_22EFCCFA0(a2 + 64, v14);
  v36 = *(_QWORD *)(v56 + 72);
  if ((*(_BYTE *)(v36 + 104) & 0x20) != 0)
  {
    v37 = (unsigned int *)&v67 + 2;
    v66 = (char *)&v67 + 8;
    v68 = 0xD0000000CLL;
    v67 = xmmword_22F47F3B0;
    v38 = *(_QWORD *)(v36 + 124);
    if ((v38 & 0x8000) != 0)
    {
      v39 = 5;
      v69 = 14;
      LODWORD(v67) = 5;
      if ((v38 & 0x1000000000) == 0)
        goto LABEL_65;
    }
    else
    {
      v39 = 4;
      if ((v38 & 0x1000000000) == 0)
      {
LABEL_65:
        v40 = (unsigned int *)&v67 + v39 + 2;
        if ((v38 & 0x4000000) != 0)
        {
          *v40 = 16;
          LODWORD(v67) = v39 + 1;
          v40 = (unsigned int *)&v67 + v39 + 3;
        }
        while (1)
        {
          v65 = *v37;
          if (v65 > 0x10 || ((1 << v65) & 0x14800) == 0)
            break;
LABEL_71:
          if (++v37 == v40)
          {
            if (v66 != (char *)&v67 + 8)
              free(v66);
            return sub_22EAC72A0(v61);
          }
        }
        v64[0] = &v65;
        v64[1] = v15;
        v64[2] = &v63;
        v64[3] = &v57;
        v70 = v72;
        v72[0] = 0;
        v71 = 0x300000001;
        v42 = *(_QWORD *)(v15 + 72);
        v43 = *(_QWORD *)(v42 + 116);
        if ((v43 & 0x4000000000000000) != 0)
        {
          v72[1] = 1;
          LODWORD(v71) = 2;
          v44 = 2;
          if ((v43 & 0x8000000000000000) == 0)
            goto LABEL_78;
        }
        else
        {
          v44 = 1;
          if ((v43 & 0x8000000000000000) == 0)
          {
LABEL_78:
            v45 = *(_QWORD *)(v42 + 124);
            v73 = (char *)&v74 + 8;
            v75 = 0xD0000000CLL;
            v74 = xmmword_22F47F3B0;
            if ((v45 & 0x8000) != 0)
            {
              v76 = 14;
              LODWORD(v74) = 5;
              v46 = 5;
              if ((v45 & 0x1000000000) == 0)
                goto LABEL_83;
            }
            else
            {
              v46 = 4;
              if ((v45 & 0x1000000000) == 0)
              {
LABEL_83:
                if ((v45 & 0x4000000) != 0)
                {
                  *((_DWORD *)&v74 + v46 + 2) = 16;
                  LODWORD(v74) = v46 + 1;
                  v47 = (char *)&v74 + 4 * v46 + 12;
                }
                else
                {
                  v47 = (char *)&v74 + 4 * v46 + 8;
                }
                v48 = (char *)&v74 + 8;
                do
                {
                  v49 = *(unsigned int *)v48;
                  if ((_DWORD)v49 == 11)
                  {
                    if ((_DWORD)v71)
                    {
                      v50 = v70;
                      v51 = 4 * v71;
                      do
                      {
                        v52 = *v50++;
                        sub_22EAEBBBC((uint64_t)v64, 11, v52);
                        v51 -= 4;
                      }
                      while (v51);
                    }
                  }
                  else
                  {
                    sub_22EAEBBBC((uint64_t)v64, v49, 0);
                  }
                  v48 += 4;
                }
                while (v48 != v47);
                if (v73 != (char *)&v74 + 8)
                  free(v73);
                v15 = v56;
                if (v70 != v72)
                  free(v70);
                goto LABEL_71;
              }
            }
            *((_DWORD *)&v74 + v46++ + 2) = 15;
            LODWORD(v74) = v46;
            v45 = *(_QWORD *)(v42 + 124);
            goto LABEL_83;
          }
        }
        v72[v44] = 2;
        LODWORD(v71) = v44 + 1;
        goto LABEL_78;
      }
    }
    *((_DWORD *)&v67 + v39++ + 2) = 15;
    LODWORD(v67) = v39;
    v38 = *(_QWORD *)(v36 + 124);
    goto LABEL_65;
  }
  return sub_22EAC72A0(v61);
}

BOOL sub_22EABDAF8(uint64_t a1)
{
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 0x400) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 4) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 0x10) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 0x20) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  return (**(_QWORD **)(a1 + 128) & 0x40) == 0;
}

void **sub_22EABDBA0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int i;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  unsigned int *v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  unsigned int *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  void *v57[7];
  char v58;
  unint64_t v59;
  unsigned int *v60[4];
  unsigned int v61;
  void *v62;
  __int128 v63;
  uint64_t v64;
  int v65;
  unsigned int *v66;
  uint64_t v67;
  _DWORD v68[4];
  char *v69;
  __int128 v70;
  uint64_t v71;
  int v72;
  uint64_t v73;

  v3 = a1;
  v73 = *MEMORY[0x24BDAC8D0];
  v59 = a2;
  sub_22EAC71A0((uint64_t)v57, a1, a2, 2u);
  if (v58)
    return sub_22EAC72A0(v57);
  v4 = *(_QWORD *)(a2 + 48);
  if (v4)
    v5 = v4 & 0xFFFFFFFFFFFFFFF0;
  else
    v5 = sub_22EF6462C(*(_QWORD *)(v3 + 88), a2);
  v56 = v5;
  if ((*(_DWORD *)(*(_QWORD *)(v3 + 72) + 52) & 0x40000000) != 0)
  {
    v51 = *(_QWORD *)(v3 + 88);
    if ((*(_QWORD *)(*(_QWORD *)(v51 + 2000) + 64) & 0x100000000) != 0)
      v6 = 5;
    else
      v6 = 4;
    v7 = sub_22EF5DD84(v51, v5, v6);
  }
  else
  {
    v6 = 0;
    v7 = v5;
  }
  v56 = sub_22EF5FB8C(*(_QWORD *)(v3 + 88), v7);
  v8 = sub_22EAB8368(v3, a2, 2, 0, v6, 0, v6, 0, 0, 0);
  v9 = sub_22EFC6A3C((_QWORD *)(*(_QWORD *)(v3 + 88) + 15224), *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF0) + 8) | v5 & 7);
  v10 = *(_DWORD *)(a2 + 24);
  v53 = v9;
  v54 = v10;
  sub_22EFC6D6C((uint64_t)&v55, v9);
  v11 = *(_QWORD *)(v3 + 88);
  v12 = (*(_DWORD *)(v3 + 56) & 0xFC) != 4;
  v13 = sub_22EFC7430(168, v11, a2 + 64, 0);
  v14 = sub_22EFBF4FC(v13, 55, v11, a2 + 64, v10, &v53, 0, 0, 0, 0, v12, 1, v8, 0);
  *(_QWORD *)v14 = &off_24FAC37B0;
  *(_QWORD *)(v14 + 160) = 0;
  v15 = *(_QWORD *)(v14 + 80) & 0xFFFFFFFFFFLL;
  *(_DWORD *)(v14 + 28) = *(_DWORD *)(v14 + 28) & 0xFFFF9DFF | 0x200;
  *(_QWORD *)(v14 + 80) = v15 | 0x2000000;
  sub_22EAC6FB8(v3, v13, *(_QWORD *)(*(_QWORD *)(v3 + 88) + 16392), (uint64_t *)&v56, 1uLL, v6, 0);
  if ((*(_BYTE *)(*(_QWORD *)(v3 + 72) + 68) & 0x20) != 0)
    sub_22E9FE3F8(v3, a2, 2, v13, 0, 0);
  v16 = sub_22EFBF080(*(_QWORD *)(v3 + 88), v13 + 72, v10, v10, 0, v56, 0, 0, 0);
  v17 = v13;
  if ((*(_DWORD *)(v13 + 28) & 0x7F) != 0x53)
  {
    v18 = *(_QWORD *)(v13 + 16);
    v19 = v18 & 0xFFFFFFFFFFFFFFF8;
    if ((v18 & 4) != 0)
      v19 = *(_QWORD *)v19;
    for (i = *(_WORD *)(v19 + 8) & 0x7F; i != 83; i = *(_WORD *)(v19 + 8) & 0x7F)
    {
      v21 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v21 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_23;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_22;
        if (i == 16)
          goto LABEL_16;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_29;
        if (i == 24)
        {
LABEL_16:
          v21 = -48;
        }
        else
        {
LABEL_22:
          if (i != 70)
          {
LABEL_23:
            v22 = i - 52;
            if ((i - 33) >= 5)
              v23 = -48;
            else
              v23 = -64;
            if (v22 >= 6)
              v21 = v23;
            else
              v21 = -72;
            goto LABEL_29;
          }
          v21 = -64;
        }
      }
LABEL_29:
      v24 = *(_QWORD *)(v19 + v21 + 16);
      v19 = v24 & 0xFFFFFFFFFFFFFFF8;
      if ((v24 & 4) != 0)
        v19 = *(_QWORD *)v19;
    }
    v17 = v19 - 40;
  }
  v25 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v17 + 88) + 2032, 8, 3);
  *(_QWORD *)(v13 + 120) = v25;
  *v25 = v16;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
  if ((**(_QWORD **)(a2 + 128) & 0x40000000) != 0)
    v26 = sub_22EABBAB4((_QWORD *)v3, v13, 2, 0, 0);
  else
    v26 = sub_22EACBAD4(a2);
  v27 = 0x800000;
  if (!v26)
    v27 = 0;
  *(_QWORD *)(v13 + 80) = *(_QWORD *)(v13 + 80) & 0xFFFFFFFFFF7FFFFFLL | v27;
  if (sub_22EAB5D40(a2))
  {
    v28 = *(_QWORD *)(v13 + 80);
LABEL_43:
    v29 = 0x1000000;
    goto LABEL_49;
  }
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
  if ((**(_QWORD **)(a2 + 128) & 0x40000000) != 0)
  {
    v31 = sub_22EABBAB4((_QWORD *)v3, v13, 2, 1, 0);
    v28 = *(_QWORD *)(v13 + 80);
    if ((v31 & 1) != 0)
      goto LABEL_43;
  }
  else
  {
    v30 = sub_22EACBB38(a2);
    v28 = *(_QWORD *)(v13 + 80);
    if (v30)
      goto LABEL_43;
  }
  v29 = 0;
LABEL_49:
  *(_QWORD *)(v13 + 80) = v28 & 0xFFFFFFFFFEFFFFFFLL | v29;
  ++*(_DWORD *)(*(_QWORD *)(v3 + 88) + 18708);
  v32 = (uint64_t *)sub_22E90490C(v3, a2 + 64);
  sub_22EAC6C64((_QWORD *)v3, (uint64_t)v32, v13);
  if (sub_22EAB8670(v3, v13, 2, 0, 0))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    **(_QWORD **)(a2 + 128) |= 0x800000000uLL;
    sub_22EAB9ED0((_QWORD *)v3, v13, v10);
  }
  if (v32)
    sub_22EA0483C(v3, v13, v32, 0);
  sub_22EFCCFA0(a2 + 64, v13);
  v33 = *(_QWORD *)(v3 + 72);
  if ((*(_BYTE *)(v33 + 104) & 0x20) != 0)
  {
    v34 = (unsigned int *)&v63 + 2;
    v62 = (char *)&v63 + 8;
    v64 = 0xD0000000CLL;
    v63 = xmmword_22F47F3B0;
    v35 = *(_QWORD *)(v33 + 124);
    if ((v35 & 0x8000) != 0)
    {
      v36 = 5;
      v65 = 14;
      LODWORD(v63) = 5;
      if ((v35 & 0x1000000000) == 0)
      {
LABEL_59:
        v37 = (unsigned int *)&v63 + v36 + 2;
        if ((v35 & 0x4000000) != 0)
        {
          *v37 = 16;
          LODWORD(v63) = v36 + 1;
          v37 = (unsigned int *)&v63 + v36 + 3;
        }
        v52 = v3;
        while (1)
        {
          v61 = *v34;
          if (v61 > 0x10 || ((1 << v61) & 0x14800) == 0)
            break;
LABEL_66:
          if (++v34 == v37)
          {
            if (v62 != (char *)&v63 + 8)
              free(v62);
            return sub_22EAC72A0(v57);
          }
        }
        v60[0] = &v61;
        v60[1] = (unsigned int *)v3;
        v60[2] = (unsigned int *)&v59;
        v60[3] = (unsigned int *)&v53;
        v66 = v68;
        v68[0] = 0;
        v67 = 0x300000001;
        v39 = *(_QWORD *)(v3 + 72);
        v40 = *(_QWORD *)(v39 + 116);
        if ((v40 & 0x4000000000000000) != 0)
        {
          v68[1] = 1;
          LODWORD(v67) = 2;
          v41 = 2;
          if ((v40 & 0x8000000000000000) == 0)
            goto LABEL_73;
        }
        else
        {
          v41 = 1;
          if ((v40 & 0x8000000000000000) == 0)
          {
LABEL_73:
            v42 = *(_QWORD *)(v39 + 124);
            v69 = (char *)&v70 + 8;
            v71 = 0xD0000000CLL;
            v70 = xmmword_22F47F3B0;
            if ((v42 & 0x8000) != 0)
            {
              v72 = 14;
              LODWORD(v70) = 5;
              v43 = 5;
              if ((v42 & 0x1000000000) == 0)
                goto LABEL_78;
            }
            else
            {
              v43 = 4;
              if ((v42 & 0x1000000000) == 0)
              {
LABEL_78:
                if ((v42 & 0x4000000) != 0)
                {
                  *((_DWORD *)&v70 + v43 + 2) = 16;
                  LODWORD(v70) = v43 + 1;
                  v44 = (char *)&v70 + 4 * v43 + 12;
                }
                else
                {
                  v44 = (char *)&v70 + 4 * v43 + 8;
                }
                v45 = (char *)&v70 + 8;
                do
                {
                  v46 = *(unsigned int *)v45;
                  if ((_DWORD)v46 == 11)
                  {
                    if ((_DWORD)v67)
                    {
                      v47 = v66;
                      v48 = 4 * v67;
                      do
                      {
                        v49 = *v47++;
                        sub_22EAEC0A8(v60, 11, v49);
                        v48 -= 4;
                      }
                      while (v48);
                    }
                  }
                  else
                  {
                    sub_22EAEC0A8(v60, v46, 0);
                  }
                  v45 += 4;
                }
                while (v45 != v44);
                if (v69 != (char *)&v70 + 8)
                  free(v69);
                v3 = v52;
                if (v66 != v68)
                  free(v66);
                goto LABEL_66;
              }
            }
            *((_DWORD *)&v70 + v43++ + 2) = 15;
            LODWORD(v70) = v43;
            v42 = *(_QWORD *)(v39 + 124);
            goto LABEL_78;
          }
        }
        v68[v41] = 2;
        LODWORD(v67) = v41 + 1;
        goto LABEL_73;
      }
    }
    else
    {
      v36 = 4;
      if ((v35 & 0x1000000000) == 0)
        goto LABEL_59;
    }
    *((_DWORD *)&v63 + v36++ + 2) = 15;
    LODWORD(v63) = v36;
    v35 = *(_QWORD *)(v33 + 124);
    goto LABEL_59;
  }
  return sub_22EAC72A0(v57);
}

uint64_t sub_22EABE304(uint64_t a1)
{
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 0x28) != 0)
    return 1;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  return (**(_QWORD **)(a1 + 128) >> 31) & 1;
}

void **sub_22EABE360(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int i;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  int *v35;
  int *v36;
  int *v37;
  uint64_t v38;
  int v39;
  uint64_t v41;
  __int128 v42;
  uint64_t *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  void *v48[7];
  char v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  _DWORD v53[4];
  char *v54;
  __int128 v55;
  uint64_t v56;
  int v57;
  uint64_t v58;

  v58 = *MEMORY[0x24BDAC8D0];
  v50 = a2;
  sub_22EAC71A0((uint64_t)v48, a1, a2, 3u);
  if (!v49)
  {
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
      v5 = v4 & 0xFFFFFFFFFFFFFFF0;
    else
      v5 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a2);
    v47 = v5;
    if ((*(_DWORD *)(*(_QWORD *)(a1 + 72) + 52) & 0x40000000) != 0)
    {
      v41 = *(_QWORD *)(a1 + 88);
      if ((*(_QWORD *)(*(_QWORD *)(v41 + 2000) + 64) & 0x100000000) != 0)
        v6 = 5;
      else
        v6 = 4;
      v5 = sub_22EF5DD84(v41, v5, v6);
      v47 = v5;
    }
    else
    {
      v6 = 0;
    }
    v7 = sub_22EF5F8C4(*(_QWORD *)(a1 + 88), v5, 1);
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    v8 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 128) + 10) << 16;
    v9 = v8 & 0x10000;
    v10 = (v8 >> 16) & 1;
    v47 = sub_22EF5F8C4(*(_QWORD *)(a1 + 88), v47 | ((v8 & 0x10000) >> 16), 1);
    v11 = sub_22EAB8368(a1, a2, 3, v10, v6, 0, v6, 0, 0, 0);
    v12 = *(_QWORD *)(a1 + 88);
    v13 = *(_DWORD *)(a2 + 24);
    v44 = (v12 + 15520) | 6;
    v45 = v13;
    sub_22EFC6D6C((uint64_t)&v46, v44);
    v14 = sub_22EFD6AD8(v12, a2, v13, &v44, 0, 0, 0, (*(_DWORD *)(a1 + 56) & 0xFC) != 4, 1, v11, 0, 0);
    v15 = *(_DWORD *)(v14 + 28);
    *(_QWORD *)(v14 + 80) |= 0x2000000uLL;
    *(_DWORD *)(v14 + 28) = v15 & 0xFFFF9DFF | 0x200;
    sub_22EAC6FB8(a1, v14, v7, (uint64_t *)&v47, 1uLL, v6, 0);
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0)
      sub_22E9FE3F8(a1, a2, 3, v14, v9 != 0, 0);
    v16 = sub_22EFBF080(*(_QWORD *)(a1 + 88), v14 + 72, v13, v13, 0, v47, 0, 0, 0);
    v17 = v14;
    if ((*(_DWORD *)(v14 + 28) & 0x7F) != 0x53)
    {
      v18 = *(_QWORD *)(v14 + 16);
      v19 = v18 & 0xFFFFFFFFFFFFFFF8;
      if ((v18 & 4) != 0)
        v19 = *(_QWORD *)v19;
      for (i = *(_WORD *)(v19 + 8) & 0x7F; i != 83; i = *(_WORD *)(v19 + 8) & 0x7F)
      {
        v21 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v21 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_23;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_22;
          if (i == 16)
            goto LABEL_16;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_29;
          if (i == 24)
          {
LABEL_16:
            v21 = -48;
          }
          else
          {
LABEL_22:
            if (i != 70)
            {
LABEL_23:
              v22 = i - 52;
              if ((i - 33) >= 5)
                v23 = -48;
              else
                v23 = -64;
              if (v22 >= 6)
                v21 = v23;
              else
                v21 = -72;
              goto LABEL_29;
            }
            v21 = -64;
          }
        }
LABEL_29:
        v24 = *(_QWORD *)(v19 + v21 + 16);
        v19 = v24 & 0xFFFFFFFFFFFFFFF8;
        if ((v24 & 4) != 0)
          v19 = *(_QWORD *)v19;
      }
      v17 = v19 - 40;
    }
    v25 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v17 + 88) + 2032, 8, 3);
    *(_QWORD *)(v14 + 120) = v25;
    *v25 = v16;
    if (sub_22EABE304(a2))
    {
      LODWORD(v26) = sub_22EABBAB4(a1, v14, 3, 0, 0);
    }
    else
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
      v26 = (**(_QWORD **)(a2 + 128) >> 42) & 1;
    }
    v27 = 0x800000;
    if (!(_DWORD)v26)
      v27 = 0;
    *(_QWORD *)(v14 + 80) = *(_QWORD *)(v14 + 80) & 0xFFFFFFFFFF7FFFFFLL | v27;
    ++*(_DWORD *)(*(_QWORD *)(a1 + 88) + 18716);
    if (a2)
      v28 = a2 + 64;
    else
      v28 = 0;
    v29 = (uint64_t *)sub_22E90490C(a1, v28);
    sub_22EAC6C64(a1, v29, v14);
    if (sub_22EAB8670(a1, v14, 3, 0, 0))
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
      **(_QWORD **)(a2 + 128) |= 0x1000000000uLL;
      sub_22EAB9ED0((_QWORD *)a1, v14, v13);
    }
    if (v29)
      sub_22EA0483C(a1, v14, v29, 0);
    sub_22EFCCFA0(a2 + 64, v14);
    v30 = *(_QWORD *)(a1 + 72);
    if ((*(_BYTE *)(v30 + 104) & 0x20) != 0)
    {
      *(_QWORD *)&v42 = a1;
      *((_QWORD *)&v42 + 1) = &v50;
      v43 = &v44;
      v51 = v53;
      v53[0] = 0;
      v52 = 0x300000001;
      v31 = *(_QWORD *)(v30 + 116);
      v32 = 1;
      if ((v31 & 0x4000000000000000) != 0)
      {
        v53[1] = 1;
        v32 = 2;
        LODWORD(v52) = 2;
      }
      v33 = *(_QWORD *)(v30 + 124);
      if (v31 < 0)
      {
        v53[v32] = 2;
        LODWORD(v52) = v32 + 1;
      }
      v54 = (char *)&v55 + 8;
      v56 = 0xD0000000CLL;
      v55 = xmmword_22F47F3B0;
      if ((v33 & 0x8000) != 0)
      {
        v34 = 5;
        v57 = 14;
        LODWORD(v55) = 5;
        if ((v33 & 0x1000000000) == 0)
        {
LABEL_58:
          v35 = (int *)&v55 + v34 + 2;
          if ((v33 & 0x4000000) != 0)
          {
            *v35 = 16;
            LODWORD(v55) = v34 + 1;
            v35 = (int *)&v55 + v34 + 3;
          }
          v36 = (int *)&v55 + 2;
          do
          {
            if (*v36 == 11)
            {
              if ((_DWORD)v52)
              {
                v37 = (int *)v51;
                v38 = 4 * v52;
                do
                {
                  v39 = *v37++;
                  sub_22EAEAF78(&v42, 11, v39);
                  v38 -= 4;
                }
                while (v38);
              }
            }
            else
            {
              sub_22EAEAF78(&v42, *v36, 0);
            }
            ++v36;
          }
          while (v36 != v35);
          if (v54 != (char *)&v55 + 8)
            free(v54);
          if (v51 != v53)
            free(v51);
          return sub_22EAC72A0(v48);
        }
      }
      else
      {
        v34 = 4;
        if ((v33 & 0x1000000000) == 0)
          goto LABEL_58;
      }
      *((_DWORD *)&v55 + v34++ + 2) = 15;
      LODWORD(v55) = v34;
      goto LABEL_58;
    }
  }
  return sub_22EAC72A0(v48);
}

uint64_t sub_22EABE940(unint64_t a1)
{
  uint64_t v2;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 0x1000) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 4) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 0x10) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 8) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  v2 = *(_QWORD *)(a1 + 128);
  if ((*(_QWORD *)v2 & 0x40) != 0)
    return 0;
  if (((*(unsigned __int16 *)(v2 + 8) | (*(unsigned __int8 *)(v2 + 10) << 16)) & 0x100000) != 0)
    return sub_22F3B1AEC(a1);
  return 1;
}

void **sub_22EABEA08(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int i;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  int *v31;
  int *v32;
  int *v33;
  uint64_t v34;
  int v35;
  uint64_t v37;
  __int128 v38;
  uint64_t *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  void *v44[7];
  char v45;
  unint64_t v46;
  void *v47;
  uint64_t v48;
  _DWORD v49[4];
  char *v50;
  __int128 v51;
  uint64_t v52;
  int v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v46 = a2;
  sub_22EAC71A0((uint64_t)v44, a1, a2, 4u);
  if (!v45)
  {
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
      v5 = v4 & 0xFFFFFFFFFFFFFFF0;
    else
      v5 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a2);
    v43 = v5;
    if ((*(_DWORD *)(*(_QWORD *)(a1 + 72) + 52) & 0x40000000) != 0)
    {
      v37 = *(_QWORD *)(a1 + 88);
      if ((*(_QWORD *)(*(_QWORD *)(v37 + 2000) + 64) & 0x100000000) != 0)
        v6 = 5;
      else
        v6 = 4;
      v5 = sub_22EF5DD84(v37, v5, v6);
      v43 = v5;
    }
    else
    {
      v6 = 0;
    }
    v7 = sub_22EF5F8C4(*(_QWORD *)(a1 + 88), v5, 1);
    v43 = sub_22EF5FB8C(*(_QWORD *)(a1 + 88), v43);
    v8 = sub_22EAB8368(a1, a2, 4, 0, v6, 0, v6, 0, 0, 0);
    v9 = *(_QWORD *)(a1 + 88);
    v10 = *(_DWORD *)(a2 + 24);
    v40 = (v9 + 15520) | 6;
    v41 = v10;
    sub_22EFC6D6C((uint64_t)&v42, v40);
    v11 = sub_22EFD6AD8(v9, a2, v10, &v40, 0, 0, 0, (*(_DWORD *)(a1 + 56) & 0xFC) != 4, 1, v8, 0, 0);
    v12 = *(_DWORD *)(v11 + 28);
    *(_QWORD *)(v11 + 80) |= 0x2000000uLL;
    *(_DWORD *)(v11 + 28) = v12 & 0xFFFF9DFF | 0x200;
    sub_22EAC6FB8(a1, v11, v7, (uint64_t *)&v43, 1uLL, v6, 0);
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0)
      sub_22E9FE3F8(a1, a2, 4, v11, 0, 0);
    v13 = sub_22EFBF080(*(_QWORD *)(a1 + 88), v11 + 72, v10, v10, 0, v43, 0, 0, 0);
    v14 = v11;
    if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x53)
    {
      v15 = *(_QWORD *)(v11 + 16);
      v16 = v15 & 0xFFFFFFFFFFFFFFF8;
      if ((v15 & 4) != 0)
        v16 = *(_QWORD *)v16;
      for (i = *(_WORD *)(v16 + 8) & 0x7F; i != 83; i = *(_WORD *)(v16 + 8) & 0x7F)
      {
        v18 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v18 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_23;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_22;
          if (i == 16)
            goto LABEL_16;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_29;
          if (i == 24)
          {
LABEL_16:
            v18 = -48;
          }
          else
          {
LABEL_22:
            if (i != 70)
            {
LABEL_23:
              v19 = i - 52;
              if ((i - 33) >= 5)
                v20 = -48;
              else
                v20 = -64;
              if (v19 >= 6)
                v18 = v20;
              else
                v18 = -72;
              goto LABEL_29;
            }
            v18 = -64;
          }
        }
LABEL_29:
        v21 = *(_QWORD *)(v16 + v18 + 16);
        v16 = v21 & 0xFFFFFFFFFFFFFFF8;
        if ((v21 & 4) != 0)
          v16 = *(_QWORD *)v16;
      }
      v14 = v16 - 40;
    }
    v22 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v14 + 88) + 2032, 8, 3);
    *(_QWORD *)(v11 + 120) = v22;
    *v22 = v13;
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    if ((**(_QWORD **)(a2 + 128) & 0x100000000) != 0)
      v23 = sub_22EABBAB4(a1, v11, 4, 0, 0);
    else
      v23 = sub_22EACA488(a2);
    v24 = 0x800000;
    if (!v23)
      v24 = 0;
    *(_QWORD *)(v11 + 80) = *(_QWORD *)(v11 + 80) & 0xFFFFFFFFFF7FFFFFLL | v24;
    ++*(_DWORD *)(*(_QWORD *)(a1 + 88) + 18724);
    v25 = (uint64_t *)sub_22E90490C(a1, a2 + 64);
    sub_22EAC6C64(a1, v25, v11);
    if (sub_22EAB8670(a1, v11, 4, 0, 0))
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
      **(_QWORD **)(a2 + 128) |= 0x2000000000uLL;
      sub_22EAB9ED0((_QWORD *)a1, v11, v10);
    }
    if (v25)
      sub_22EA0483C(a1, v11, v25, 0);
    sub_22EFCCFA0(a2 + 64, v11);
    v26 = *(_QWORD *)(a1 + 72);
    if ((*(_BYTE *)(v26 + 104) & 0x20) != 0)
    {
      *(_QWORD *)&v38 = a1;
      *((_QWORD *)&v38 + 1) = &v46;
      v39 = &v40;
      v47 = v49;
      v49[0] = 0;
      v48 = 0x300000001;
      v27 = *(_QWORD *)(v26 + 116);
      v28 = 1;
      if ((v27 & 0x4000000000000000) != 0)
      {
        v49[1] = 1;
        v28 = 2;
        LODWORD(v48) = 2;
      }
      v29 = *(_QWORD *)(v26 + 124);
      if (v27 < 0)
      {
        v49[v28] = 2;
        LODWORD(v48) = v28 + 1;
      }
      v50 = (char *)&v51 + 8;
      v52 = 0xD0000000CLL;
      v51 = xmmword_22F47F3B0;
      if ((v29 & 0x8000) != 0)
      {
        v30 = 5;
        v53 = 14;
        LODWORD(v51) = 5;
        if ((v29 & 0x1000000000) == 0)
        {
LABEL_55:
          v31 = (int *)&v51 + v30 + 2;
          if ((v29 & 0x4000000) != 0)
          {
            *v31 = 16;
            LODWORD(v51) = v30 + 1;
            v31 = (int *)&v51 + v30 + 3;
          }
          v32 = (int *)&v51 + 2;
          do
          {
            if (*v32 == 11)
            {
              if ((_DWORD)v48)
              {
                v33 = (int *)v47;
                v34 = 4 * v48;
                do
                {
                  v35 = *v33++;
                  sub_22EAEB5AC(&v38, 11, v35);
                  v34 -= 4;
                }
                while (v34);
              }
            }
            else
            {
              sub_22EAEB5AC(&v38, *v32, 0);
            }
            ++v32;
          }
          while (v32 != v31);
          if (v50 != (char *)&v51 + 8)
            free(v50);
          if (v47 != v49)
            free(v47);
          return sub_22EAC72A0(v44);
        }
      }
      else
      {
        v30 = 4;
        if ((v29 & 0x1000000000) == 0)
          goto LABEL_55;
      }
      *((_DWORD *)&v51 + v30++ + 2) = 15;
      LODWORD(v51) = v30;
      goto LABEL_55;
    }
  }
  return sub_22EAC72A0(v44);
}

unint64_t sub_22EABEFB4(uint64_t a1, unint64_t a2)
{
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  void *v17[7];
  char v18;

  sub_22EAC71A0((uint64_t)v17, a1, a2, 5u);
  if (v18)
  {
    v8 = 0;
  }
  else
  {
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
      v4 = sub_22EAA9528(a2);
    else
      v4 = 0;
    v5 = *(_QWORD *)(a2 + 48);
    if (v5)
      v6 = v5 & 0xFFFFFFFFFFFFFFF0;
    else
      v6 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a2);
    v7 = *(_DWORD *)(a2 + 24);
    v14 = sub_22EFC6B40((_QWORD *)(*(_QWORD *)(a1 + 88) + 15224), v6 & 7 | *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFF0) + 8));
    v15 = v7;
    sub_22EFC6D6C((uint64_t)&v16, v14);
    v8 = sub_22EFD8738(*(_QWORD *)(a1 + 88), a2, v7, &v14, 0, 0, (*(_DWORD *)(a1 + 56) & 0xFC) != 4, 1, 1, v4, 0);
    *(_DWORD *)(v8 + 28) &= 0xFFFF9FFF;
    *(_QWORD *)(v8 + 80) |= 0x2000000uLL;
    v9 = *(_QWORD *)(a1 + 88);
    if ((*(_DWORD *)(*(_QWORD *)(a1 + 72) + 52) & 0x40000000) != 0)
    {
      if ((*(_BYTE *)(*(_QWORD *)(v9 + 2000) + 68) & 1) != 0)
        v10 = 5;
      else
        v10 = 4;
    }
    else
    {
      v10 = 0;
    }
    sub_22EAC6FB8(a1, v8, *(_QWORD *)(v9 + 16392), 0, 0, v10, 0);
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0)
      sub_22E9FE3F8(a1, a2, 5, v8, 0, 0);
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v8 + 80) & 0xFFFFFFFFFF7FFFFFLL | (((**(_QWORD **)(a2 + 128) >> 44) & 1) << 23);
    if (sub_22EAB5D40(a2))
    {
      v11 = 0x1000000;
    }
    else
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
      v11 = (**(_QWORD **)(a2 + 128) >> 26) & 0x1000000;
    }
    *(_QWORD *)(v8 + 80) = *(_QWORD *)(v8 + 80) & 0xFFFFFFFFFEFFFFFFLL | v11;
    ++*(_DWORD *)(*(_QWORD *)(a1 + 88) + 18732);
    v12 = (uint64_t *)sub_22E90490C(a1, a2 + 64);
    sub_22EAC6C64((_QWORD *)a1, (uint64_t)v12, v8);
    if ((*(_BYTE *)(a2 + 74) & 1) != 0 && sub_22EAB8670(a1, v8, 5, 0, 0))
      sub_22EAB9ED0((_QWORD *)a1, v8, v7);
    if (v12)
      sub_22EA0483C(a1, v8, v12, 0);
    sub_22EFCCFA0(a2 + 64, v8);
  }
  sub_22EAC72A0(v17);
  return v8;
}

uint64_t sub_22EABF260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v6;
  unsigned int v7;
  unint64_t i;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t j;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  const void **v26;
  uint64_t v27;
  const void *v28;
  uint64_t v30;
  unsigned int v31;
  _QWORD v32[5];

  v3 = a3;
  v32[4] = *MEMORY[0x24BDAC8D0];
  if (!a3)
    return v3;
  v31 = 0;
  v6 = *(_DWORD *)(a3 + 28);
  if ((v6 & 0x7Fu) - 33 >= 0xFFFFFFF9)
  {
    v3 = *(_QWORD *)(a3 + 48);
    v6 = *(_DWORD *)(v3 + 28);
  }
  if ((v6 & 0x7F) == 0x25)
  {
    v32[0] = *(_QWORD *)(v3 + 184);
    v7 = 1;
LABEL_6:
    v31 = v7;
    goto LABEL_23;
  }
  if ((v6 & 0x7Fu) - 67 >= 0xFFFFFFEE)
  {
    v7 = 0;
    for (i = 0; ; ++i)
    {
      v9 = *(_QWORD *)(v3 + 56);
      v10 = (v9 & 4) != 0 ? *(unsigned int *)((v9 & 0xFFFFFFFFFFFFFFF8) + 16) : 0;
      if (i >= v10)
        break;
      v11 = *(_QWORD *)(*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 24) + 8 * i);
      if (v7 >= 4)
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v7 = v31;
      }
      v32[v7] = v11;
      v7 = ++v31;
    }
    v6 = *(_DWORD *)(v3 + 28);
    if ((v6 & 0x7Eu) - 58 < 0xFFFFFFFA)
      goto LABEL_23;
    v12 = *(_QWORD *)(v3 + 144) & 0xFFFFFFFFFFFFFFF8;
    if ((*(_QWORD *)(v3 + 144) & 6) != 0 || v12 == 0)
      goto LABEL_23;
    v30 = *(_QWORD *)(v12 + 56);
    if (v7 >= 4)
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v7 = v31;
    }
    v32[v7] = v30;
    v7 = v31 + 1;
    v6 = *(_DWORD *)(v3 + 28);
    goto LABEL_6;
  }
  v7 = 0;
LABEL_23:
  if ((v6 & 0x7Fu) - 38 >= 0xFFFFFFFB)
  {
    for (j = 0; ; ++j)
    {
      v15 = *(_QWORD *)(v3 + 120);
      v16 = (v15 & 4) != 0 ? *(unsigned int *)((v15 & 0xFFFFFFFFFFFFFFF8) + 16) : 0;
      if (j >= v16)
        break;
      v17 = *(_QWORD *)(*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF8) + 24) + 8 * j);
      if (v7 >= 4)
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v7 = v31;
      }
      v32[v7] = v17;
      v7 = ++v31;
    }
    if ((*(_DWORD *)(v3 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
    {
      v18 = *(_QWORD *)(v3 + 136);
      if ((v18 & 4) == 0)
      {
        v19 = v18 & 0xFFFFFFFFFFFFFFF8;
        if (v19)
        {
          v20 = *(_QWORD *)(v19 + 56);
          if (v7 >= 4)
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v7 = v31;
          }
          v32[v7] = v20;
          v7 = v31 + 1;
        }
      }
    }
  }
  v21 = v32;
  v3 = 0;
  if (v7)
  {
    v22 = a2 + 72;
    v23 = a1 + 3320;
    v24 = &v32[v7];
    do
    {
      v25 = *(_DWORD *)(*v21 + 12) & 0x1FFFFFFF;
      if ((_DWORD)v25)
        v3 = (v3 + 1);
      else
        v3 = v3;
      if ((_DWORD)v25)
      {
        v26 = (const void **)(*v21 + 16);
        v27 = 8 * v25;
        do
        {
          v28 = *v26;
          if (*((_QWORD *)*v26 + 5))
          {
            sub_22E3BA850(v22, *v26);
            sub_22E8CE7E8(v23, (uint64_t)v28);
          }
          ++v26;
          v27 -= 8;
        }
        while (v27);
      }
      ++v21;
    }
    while (v21 != v24);
  }
  return v3;
}

uint64_t sub_22EABF5B0(uint64_t result, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;

  if (a3)
  {
    v4 = result;
    result = sub_22E3BA850(a2 + 72, a3);
    if (a3[5])
      return sub_22E8CE7E8(v4 + 3320, (uint64_t)a3);
  }
  return result;
}

uint64_t sub_22EABF5FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  int v5;

  if (a3)
  {
    v3 = a3;
    v4 = (_QWORD *)result;
    v5 = *(_DWORD *)(a3 + 28);
    if ((v5 & 0x7Fu) - 26 <= 6)
    {
      v3 = *(_QWORD *)(a3 + 48);
      v5 = *(_DWORD *)(v3 + 28);
    }
    if ((v5 & 0x7F) == 0x37)
    {
      result = sub_22EABF674(result, v3);
      v5 = *(_DWORD *)(v3 + 28);
    }
    if ((v5 & 0x80) == 0)
      return sub_22EAA82D0(v4, (_QWORD *)v3);
  }
  return result;
}

unint64_t sub_22EABF674(unint64_t result, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  _BOOL4 v15;
  size_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  _DWORD v20[6];
  void *__p;
  char v22;
  unsigned int v23[24];

  v3 = (_QWORD *)result;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  if ((v4 & 4) != 0)
    v5 = *(_QWORD *)v5;
  if (v5)
    v6 = (*(_WORD *)(v5 + 8) & 0x7Fu) - 38 > 0xFFFFFFFC;
  else
    v6 = 0;
  if (!v6)
    return sub_22EFC77E8(a2, 1);
  if ((*(_BYTE *)(a2 + 28) & 0x80) == 0)
  {
    result = sub_22EFC10B0(a2);
    if ((_DWORD)result)
    {
      v7 = *(_QWORD *)(a2 + 144) & 6;
      v8 = (_BYTE *)(*(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8);
      if (v7 == 4 && v8)
      {
        v8 += 16;
      }
      else if (v7 != 2 || !v8)
      {
LABEL_17:
        v9 = *(_QWORD *)(**(_QWORD **)(a2 + 120) + 48);
        v10 = *(_QWORD *)(v5 - 16);
        if (v10)
        {
          result = v10 & 0xFFFFFFFFFFFFFFF0;
        }
        else
        {
          v18 = v5 - 64;
          v19 = *(_QWORD *)(**(_QWORD **)(a2 + 120) + 48);
          result = sub_22EF6462C(v3[11], v18);
          v9 = v19;
        }
        if ((*(_QWORD *)(*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0) == result)
        {
          v11 = **(_QWORD **)(a2 + 120);
          v12 = *(_DWORD *)(v11 + 24);
          v13 = *(_QWORD *)(v11 + 40);
          v15 = (v13 & 7) != 0 || v13 < 8;
          sub_22E8FCA40(v3, v12, 0xC19u, 0, (uint64_t)v23);
          if (v15)
            v16 = 8;
          else
            v16 = 7;
          if (v15)
            v17 = " const &";
          else
            v17 = "const &";
          sub_22E729148(v17, v16, v12, 0, (uint64_t)v20);
          sub_22E890748((uint64_t)v23, v20);
          if (v22 < 0)
            operator delete(__p);
          sub_22E903BEC(v23);
          return sub_22EFC77E8(a2, 1);
        }
        return result;
      }
      if ((*v8 & 6) == 0)
        return result;
      goto LABEL_17;
    }
  }
  return result;
}

unint64_t sub_22EABF814(_QWORD *a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  uint64_t v8;
  __int16 v9;
  __int16 v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  char v16;
  int v17;
  uint64_t v18;
  int v19;
  unsigned __int16 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  void *__p;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  __int128 v38[6];

  v8 = **(_QWORD **)a2;
  if ((v8 & 0x400000000) != 0)
  {
    v9 = *(_WORD *)(a2 + 1088);
    if ((v8 & 0x3F000) != 0x32000 && (v9 & 1) == 0)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 64), 0xC1Au, 0, (uint64_t)v38);
      v25 = sub_22F2F30F4((uint64_t)v38, (uint64_t)"virtual");
      LODWORD(v29) = *(_DWORD *)(*(_QWORD *)a2 + 168);
      HIDWORD(v29) = v29;
      v26 = sub_22E8906A0(v25, &v29);
      LODWORD(v37) = *(_DWORD *)(a2 + 64);
      HIDWORD(v37) = v37;
      sub_22E8906A0(v26, &v37);
      sub_22E903BEC((unsigned int *)v38);
      v9 = *(_WORD *)(a2 + 1088);
    }
    *(_WORD *)(a2 + 1088) = v9 | 1;
  }
  if (*a4 == 2)
  {
    v11 = *(_WORD *)(a2 + 1088);
    if ((v11 & 1) == 0 && (**(_QWORD **)a2 & 0x3F000) != 0x32000)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 64), 0xC1Au, 0, (uint64_t)v38);
      v27 = sub_22F2F30F4((uint64_t)v38, (uint64_t)"static");
      LODWORD(v29) = *(_DWORD *)(*(_QWORD *)a2 + 96);
      HIDWORD(v29) = v29;
      v28 = sub_22E8906A0(v27, &v29);
      LODWORD(v37) = *(_DWORD *)(a2 + 64);
      HIDWORD(v37) = v37;
      sub_22E8906A0(v28, &v37);
      sub_22E903BEC((unsigned int *)v38);
      v11 = *(_WORD *)(a2 + 1088);
    }
    *(_WORD *)(a2 + 1088) = v11 | 1;
    *a4 = 0;
  }
  v12 = **(_DWORD **)a2 >> 25;
  if (v12)
  {
    sub_22EE810A4((uint64_t)a1, 0xC1Cu, v12, 0, *(_DWORD *)(*(_QWORD *)a2 + 144), *(_DWORD *)(*(_QWORD *)a2 + 152), *(_DWORD *)(*(_QWORD *)a2 + 148), *(_DWORD *)(*(_QWORD *)a2 + 156), 0, 0, 0);
    *(_WORD *)(a2 + 1088) |= 1u;
  }
  sub_22EABFB18((uint64_t)a1, a2, 3677);
  v13 = *(unsigned int *)(a2 + 120);
  if ((_DWORD)v13)
  {
    v14 = 0;
    v15 = *(int **)(a2 + 112);
    while (1)
    {
      v17 = *v15;
      v15 += 30;
      v16 = v17;
      if (v17 != 6)
        break;
      if (v13 == ++v14)
        goto LABEL_19;
    }
    if (((1 << v16) & 0xB7) != 0)
      v14 = 0;
  }
  else
  {
LABEL_19:
    v14 = 0;
  }
  v18 = *(_QWORD *)(a2 + 112) + 120 * v14;
  v19 = *(_DWORD *)(v18 + 56);
  if (v19)
  {
    v20 = (unsigned __int16 *)(v18 + 32);
    sub_22E8FCA40(a1, v19, 0x1223u, 0, (uint64_t)v38);
    LODWORD(v37) = (*v20 >> 3) & 1;
    v21 = sub_22E89519C((uint64_t)v38, (unsigned int *)&v37);
    v22 = *((unsigned int *)v20 + 6);
    v32 = 0;
    v31 = 0;
    v34 = 0;
    v35 = 0;
    __p = 0;
    v36 = 0;
    v29 = v22 | (v22 << 32);
    v30 = 1;
    sub_22E890748(v21, &v29);
    if (SHIBYTE(v35) < 0)
      operator delete(__p);
    sub_22E903BEC((unsigned int *)v38);
    *(_WORD *)(a2 + 1088) |= 1u;
  }
  v23 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
  if (!v23 || *(_BYTE *)(v23 + 16) != 26)
    v23 = sub_22F10CF48(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0));
  if (*(_QWORD *)(v23 + 24) != *(_QWORD *)(a1[11] + 16392)
    || (*(_WORD *)(a2 + 1088) & 1) != 0
    || (**(_QWORD **)a2 & 0x3F000) == 0x32000)
  {
    sub_22E4913B4(v23, (uint64_t)v38);
    *(_QWORD *)((char *)v38 + 4) = 0;
    HIDWORD(v38[0]) = 0;
    return sub_22EF63D8C(a1[11], *(_QWORD *)(a1[11] + 16392), (uint64_t *)(v23 + 40), (unsigned __int16)(*(_QWORD *)(v23 + 16) >> 38), v38, 0);
  }
  return a3;
}

uint64_t sub_22EABFB18(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char v17;

  v6 = *(unsigned int *)(a2 + 120);
  if ((_DWORD)v6)
  {
    v7 = 0;
    v8 = *(int **)(a2 + 112);
    while (1)
    {
      v10 = *v8;
      v8 += 30;
      v9 = v10;
      if (v10 != 6)
        break;
      if (v6 == ++v7)
        goto LABEL_5;
    }
    if (((1 << v9) & 0xB7) != 0)
      v7 = 0;
  }
  else
  {
LABEL_5:
    v7 = 0;
  }
  v11 = *(_QWORD *)(a2 + 112) + 120 * v7 + 32;
  result = sub_22EAE7478(v11);
  if ((_DWORD)result && (*(_WORD *)(a2 + 1088) & 1) == 0 && (**(_QWORD **)a2 & 0x3F000) != 0x32000)
  {
    v17 = 0;
    v13 = *(_QWORD *)(v11 + 48);
    v14 = a3;
    v15 = a1;
    v16 = &v17;
    result = sub_22E8AD29C(v13, (uint64_t (*)(uint64_t, uint64_t, const char *, uint64_t, uint64_t))sub_22EAE74D4, (uint64_t)&v14);
    if (v17)
      *(_WORD *)(a2 + 1088) |= 1u;
  }
  return result;
}

unint64_t sub_22EABFC00(uint64_t a1, _QWORD *a2)
{
  _QWORD *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t result;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned int *v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32[25];
  unsigned int v33;

  v4 = a2 + 9;
  v5 = a2[10] & 0x7F;
  v6 = -40;
  if (v5 > 0x46)
  {
    if (v5 == 83)
      goto LABEL_17;
    if (v5 == 71)
    {
      v6 = -56;
      goto LABEL_17;
    }
    if (v5 != 81)
    {
LABEL_12:
      v7 = v5 - 52;
      v8 = v5 - 33 >= 5;
      v9 = -48;
      if (!v8)
        v9 = -64;
      if (v7 >= 6)
        v6 = v9;
      else
        v6 = -72;
    }
  }
  else
  {
    if (v5 > 0x18)
      goto LABEL_11;
    if (v5 == 16)
    {
LABEL_4:
      v6 = -48;
      goto LABEL_17;
    }
    if (((1 << v5) & 0x1066) == 0)
    {
      if (v5 == 24)
        goto LABEL_4;
LABEL_11:
      if (v5 == 70)
      {
        v6 = -64;
        goto LABEL_17;
      }
      goto LABEL_12;
    }
  }
LABEL_17:
  v10 = *(_QWORD *)((char *)v4 + v6 + 16);
  v11 = (_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
  if ((v10 & 4) != 0)
    v11 = (_QWORD *)*v11;
  if (v11)
    v12 = (uint64_t)(v11 - 8);
  else
    v12 = 0;
  if (*(_QWORD *)((*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2) + 160))
    return 0;
  v14 = (*(uint64_t (**)(_QWORD *))(*a2 + 32))(a2);
  if ((*(_BYTE *)(v14 + 82) & 0xC) != 0 || (result = sub_22EFD7260(v14), (_DWORD)result))
  {
    if ((*((_DWORD *)a2 + 7) & 0x200) != 0)
      v15 = (_QWORD *)v12;
    else
      v15 = a2;
    v33 = *((_DWORD *)v15 + 6);
    v16 = v33;
    v17 = sub_22F331808((_QWORD *)a1, v33, v12);
    if (v17)
    {
      v18 = v17;
      if (!sub_22EFC06D0(v17))
        goto LABEL_45;
      v19 = *(_QWORD *)(**(_QWORD **)(v18 + 120) + 48);
      v20 = (_DWORD *)sub_22F10C2A4(*(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF0));
      if (!v20)
        goto LABEL_38;
      v21 = (v20[7] & 0x7F) - 35;
      if (v21 >= 3)
        v20 = 0;
      if (v11
        && v21 <= 2
        && (v20 == (_DWORD *)v12
         || (v22 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v20 + 32))(v20),
             v22 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 32))(v12))))
      {
LABEL_45:
        v29 = 0;
      }
      else
      {
LABEL_38:
        v23 = *(_QWORD *)(a1 + 216);
        v31 = *(_QWORD *)(a1 + 3200);
        *(_QWORD *)(a1 + 3200) = 0;
        v24 = *(_QWORD *)(a1 + 10288);
        v25 = *(_DWORD *)(a1 + 1944);
        v30 = *(_DWORD *)(a1 + 2192);
        *(_QWORD *)(a1 + 216) = v4;
        *(_QWORD *)(a1 + 10288) = 0;
        *(_DWORD *)(a1 + 1944) = *(_DWORD *)(a1 + 1904);
        *(_DWORD *)(a1 + 2192) = *(_DWORD *)(a1 + 1960);
        v26 = sub_22EBBC0DC((_QWORD *)a1, *(_DWORD *)(**(_QWORD **)(v18 + 120) + 24));
        v27 = sub_22ECFABE8((uint64_t *)a1, (unsigned __int8 *)((unint64_t)v26 & 0xFFFFFFFFFFFFFFFELL), v19, 1, 0);
        v28 = v27;
        if ((v27 & 1) != 0)
        {
          sub_22E8FCA40((_QWORD *)a1, v16, 0x1621u, 0, (uint64_t)v32);
          sub_22E903BEC(v32);
          v29 = 0;
        }
        else
        {
          v29 = v27 & 0xFFFFFFFFFFFFFFFELL;
        }
        if (v23)
        {
          *(_QWORD *)(a1 + 216) = v23;
          *(_QWORD *)(a1 + 3200) = v31;
          *(_QWORD *)(a1 + 10288) = v24;
          *(_DWORD *)(a1 + 1944) = v25;
          *(_DWORD *)(a1 + 2192) = v30;
        }
        if ((v28 & 1) != 0)
          return 1;
      }
      sub_22EB17F48(a1, v18, &v33, 1, 0, 0, 0, 0);
      sub_22EB4E494(a1, v33, v18, 1);
      sub_22F3B2268(a2, v18, v29);
    }
    return 0;
  }
  return result;
}

unint64_t sub_22EABFF04(_QWORD *a1, uint64_t a2, uint64_t a3, _DWORD *a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  char v21;
  int v22;
  uint64_t v23;
  unsigned __int16 *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int v39[24];
  unsigned int v40[24];
  unint64_t v41;
  char v42;
  uint64_t v43;
  char v44;
  void *__p;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51[6];
  unint64_t v52;

  v8 = *(_QWORD *)(a2 + 48);
  if (v8 >= 0x10)
  {
    v9 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0);
    if (v9 && *(_BYTE *)(v9 + 16) == 57)
      v8 = *(_QWORD *)(v9 + 8);
  }
  else
  {
    v8 = 0;
  }
  v52 = v8;
  v10 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22F10D4DC(*(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0));
  if (v11)
  {
    v12 = v11;
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 64), 0x1463u, 0, (uint64_t)v51);
    v13 = sub_22E8901B8((uint64_t)v51, (uint64_t *)&v52);
    LOBYTE(v41) = (*(_DWORD *)(*(_QWORD *)(v12 + 24) + 28) & 0x7F) == 40;
    sub_22E894E38(v13, (unsigned __int8 *)&v41);
LABEL_8:
    sub_22E903BEC((unsigned int *)v51);
    goto LABEL_9;
  }
  v16 = sub_22F10D628(*v10);
  if (v16 && (*(_BYTE *)(v16 + 18) & 8) != 0)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 64), 0x1463u, 0, (uint64_t)v51);
    v17 = sub_22E8901B8((uint64_t)v51, (uint64_t *)&v52);
    LODWORD(v41) = 1;
    sub_22E8900C4(v17, (int *)&v41);
    goto LABEL_8;
  }
LABEL_9:
  if (*a4 == 2)
  {
    if ((*(_WORD *)(a2 + 1088) & 1) == 0 && (**(_QWORD **)a2 & 0x3F000) != 0x32000)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 64), 0xCB1u, 0, (uint64_t)v51);
      v35 = sub_22F2F30F4((uint64_t)v51, (uint64_t)"static");
      LODWORD(v50) = *(_DWORD *)(*(_QWORD *)a2 + 96);
      HIDWORD(v50) = v50;
      v36 = sub_22E8906A0(v35, &v50);
      LODWORD(v49) = *(_DWORD *)(a2 + 64);
      HIDWORD(v49) = v49;
      v37 = sub_22E8906A0(v36, &v49);
      v38 = *(unsigned int *)(*(_QWORD *)a2 + 96) | ((unint64_t)*(unsigned int *)(*(_QWORD *)a2 + 96) << 32);
      v43 = 0;
      v44 = 0;
      v46 = 0;
      v47 = 0;
      __p = 0;
      v48 = 0;
      v41 = v38;
      v42 = 1;
      sub_22E890748(v37, &v41);
      if (SHIBYTE(v47) < 0)
        operator delete(__p);
      sub_22E903BEC((unsigned int *)v51);
    }
    *a4 = 0;
  }
  if ((*(_WORD *)(a2 + 1088) & 1) == 0)
  {
    v14 = **(_QWORD **)a2;
    if ((v14 & 0x3F000) != 0x32000)
    {
      if ((v14 & 0x3FFC0) != 0)
      {
        sub_22E8FCA40(a1, *(_DWORD *)(a2 + 64), 0xCB9u, 0, (uint64_t)v51);
        LODWORD(v41) = *(_DWORD *)(*(_QWORD *)a2 + 120);
        HIDWORD(v41) = v41;
        v15 = sub_22E8906A0((uint64_t)v51, (uint64_t *)&v41);
        LODWORD(v50) = *(_DWORD *)(a2 + 64);
        HIDWORD(v50) = v50;
        sub_22E8906A0(v15, &v50);
        sub_22E903BEC((unsigned int *)v51);
      }
      else if (v14 >> 25)
      {
        sub_22EE810A4((uint64_t)a1, 0xCB9u, v14 >> 25, 0, *(_DWORD *)(*(_QWORD *)a2 + 144), *(_DWORD *)(*(_QWORD *)a2 + 152), *(_DWORD *)(*(_QWORD *)a2 + 148), *(_DWORD *)(*(_QWORD *)a2 + 156), 0, 0, 0);
        *(_WORD *)(a2 + 1088) |= 1u;
      }
    }
  }
  sub_22EABFB18((uint64_t)a1, a2, 3678);
  v18 = *(unsigned int *)(a2 + 120);
  if ((_DWORD)v18)
  {
    v19 = 0;
    v20 = *(int **)(a2 + 112);
    while (1)
    {
      v22 = *v20;
      v20 += 30;
      v21 = v22;
      if (v22 != 6)
        break;
      if (v18 == ++v19)
        goto LABEL_26;
    }
    if (((1 << v21) & 0xB7) != 0)
      v19 = 0;
  }
  else
  {
LABEL_26:
    v19 = 0;
  }
  v23 = *(_QWORD *)(a2 + 112) + 120 * v19;
  v24 = (unsigned __int16 *)(v23 + 32);
  v25 = *(_DWORD *)(v23 + 56);
  if (v25)
  {
    sub_22E8FCA40(a1, v25, 0x1224u, 0, (uint64_t)v51);
    LODWORD(v50) = (*v24 >> 3) & 1;
    v26 = sub_22E89519C((uint64_t)v51, (unsigned int *)&v50);
    v27 = *((unsigned int *)v24 + 6);
    v44 = 0;
    v43 = 0;
    v46 = 0;
    v47 = 0;
    __p = 0;
    v48 = 0;
    v41 = v27 | (v27 << 32);
    v42 = 1;
    sub_22E890748(v26, &v41);
    if (SHIBYTE(v47) < 0)
      operator delete(__p);
    sub_22E903BEC((unsigned int *)v51);
    *(_WORD *)(a2 + 1088) |= 1u;
  }
  v28 = *((_DWORD *)v24 + 4);
  if (v28)
  {
    if (v28 != 1
      || (*v24 & 2) != 0
      || (v29 = (_QWORD *)*((_QWORD *)v24 + 5), *v29)
      || (v32 = v29[2]) == 0
      || ((v33 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v32 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
        ? (v34 = (*(_DWORD *)(v33 + 16) & 0xFF800FF) == 86507531)
        : (v34 = 0),
          !v34))
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 64), 0xCBCu, 0, (uint64_t)v40);
      sub_22E903BEC(v40);
      sub_22E8283DC((uint64_t)v24);
      *(_WORD *)(a2 + 1088) |= 1u;
    }
  }
  if ((*v24 & 2) != 0)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 64), 0xCBBu, 0, (uint64_t)v39);
    sub_22E903BEC(v39);
    *(_WORD *)(a2 + 1088) |= 1u;
  }
  else if ((*(_WORD *)(a2 + 1088) & 1) == 0 && (**(_QWORD **)a2 & 0x3F000) != 0x32000)
  {
    return a3;
  }
  v30 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
  if (!v30 || *(_BYTE *)(v30 + 16) != 26)
    v30 = sub_22F10CF48(v30);
  sub_22E4913B4(v30, (uint64_t)v51);
  BYTE2(v51[0]) &= ~1u;
  *(_QWORD *)((char *)v51 + 4) = 0;
  HIDWORD(v51[0]) = 0;
  return sub_22EF63D8C(a1[11], *(_QWORD *)(a1[11] + 16392), 0, 0, v51, 0);
}

unsigned int *sub_22EAC03D4(unsigned int *result, uint64_t **a2, _QWORD *a3, _DWORD *a4)
{
  unsigned int *v6;
  __int16 v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  char v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  char v37;
  uint64_t *v38;
  uint64_t *v39;
  int v40;
  int v41;
  BOOL v42;
  int v43;
  int v44;
  BOOL v45;
  int v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  BOOL v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  char v62;
  BOOL v63;
  uint64_t v64;
  int v65;
  BOOL v66;
  unsigned int v67;
  unsigned int v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  unsigned int *v74;
  _BYTE *v75;
  unsigned int *v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  _QWORD *v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  int v92;
  _QWORD *v93;
  uint64_t *v94;
  _BYTE v95[96];
  _BYTE v96[96];
  uint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  void *__p;
  uint64_t v102;
  uint64_t v103;
  char v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  char v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  unint64_t v113;
  _BYTE v114[12];
  char v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int v122[24];
  unsigned int v123[24];
  __int128 v124[6];

  v6 = result;
  if (*a4 == 2)
  {
    v8 = *((_WORD *)a2 + 544);
    if ((v8 & 1) == 0 && (**a2 & 0x3F000) != 0x32000)
    {
      sub_22E8FCA40(result, *((_DWORD *)a2 + 16), 0xC20u, 0, (uint64_t)v124);
      LODWORD(v113) = *((_DWORD *)*a2 + 24);
      HIDWORD(v113) = v113;
      v9 = sub_22E8906A0((uint64_t)v124, (uint64_t *)&v113);
      v105 = (unint64_t)a2[8];
      sub_22E8906A0(v9, (uint64_t *)&v105);
      result = sub_22E903BEC((unsigned int *)v124);
      v8 = *((_WORD *)a2 + 544);
    }
    *((_WORD *)a2 + 544) = v8 | 1;
    *a4 = 0;
  }
  v10 = (unint64_t)a2[6];
  if (v10 >= 0x10)
  {
    v11 = 0;
    v12 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0);
    if (v12 && *(_BYTE *)(v12 + 16) == 57)
    {
      v10 = *(_QWORD *)(v12 + 8);
      v11 = *(uint64_t **)(v12 + 24);
    }
  }
  else
  {
    v11 = 0;
    v10 = 0;
  }
  v13 = *a2;
  v14 = **a2;
  if ((v14 & 0x3FFC0) != 0 && (v14 & 0x3F000) != 0x32000 && ((_WORD)a2[136] & 1) == 0)
  {
    v17 = a2 + 136;
    sub_22E8FCA40(v6, *((_DWORD *)a2 + 16), 0xC22u, 0, (uint64_t)v124);
    LODWORD(v113) = *((_DWORD *)v13 + 30);
    HIDWORD(v113) = v113;
    v19 = sub_22E8906A0((uint64_t)v124, (uint64_t *)&v113);
    LODWORD(v105) = *((_DWORD *)a2 + 16);
    HIDWORD(v105) = v105;
    sub_22E8906A0(v19, (uint64_t *)&v105);
    goto LABEL_24;
  }
  if ((v14 & 0xFE000000) != 0 && (v14 & 0x3F000) != 0x32000 && ((_WORD)a2[136] & 1) == 0)
  {
    v17 = a2 + 136;
    sub_22E8FCA40(v6, *((_DWORD *)a2 + 16), 0xC26u, 0, (uint64_t)v124);
    LODWORD(v113) = *((_DWORD *)a2 + 16);
    HIDWORD(v113) = v113;
    v18 = sub_22E8906A0((uint64_t)v124, (uint64_t *)&v113);
    LODWORD(v105) = 0;
    sub_22E8900C4(v18, (int *)&v105);
LABEL_24:
    result = sub_22E903BEC((unsigned int *)v124);
    *v17 |= 1u;
  }
  v20 = *(_QWORD *)(*a3 & 0xFFFFFFFFFFFFFFF0);
  if (v20)
    v21 = *(_BYTE *)(v20 + 16) == 26;
  else
    v21 = 0;
  if (!v21)
  {
    result = (unsigned int *)sub_22F10CF48(*(_QWORD *)(*a3 & 0xFFFFFFFFFFFFFFF0));
    v20 = (uint64_t)result;
  }
  v22 = *(_QWORD *)(v20 + 16);
  if ((v22 & 0x3FFFC000000000) != 0)
  {
    sub_22E8FCA40(v6, *((_DWORD *)a2 + 16), 0xC27u, 0, (uint64_t)v123);
    sub_22E903BEC(v123);
    v23 = *((unsigned int *)a2 + 30);
    if ((_DWORD)v23)
    {
      v24 = 0;
      v25 = (int *)a2[14];
      while (1)
      {
        v27 = *v25;
        v25 += 30;
        v26 = v27;
        if (v27 != 6)
          break;
        if (v23 == ++v24)
          goto LABEL_35;
      }
      if (((1 << v26) & 0xB7) != 0)
        LODWORD(v24) = 0;
    }
    else
    {
LABEL_35:
      LODWORD(v24) = 0;
    }
    result = (unsigned int *)sub_22E8283DC((uint64_t)&a2[14][15 * v24 + 4]);
    goto LABEL_41;
  }
  if ((v22 & 0x800000000000000) != 0)
  {
    sub_22E8FCA40(v6, *((_DWORD *)a2 + 16), 0xC25u, 0, (uint64_t)v122);
    result = sub_22E903BEC(v122);
LABEL_41:
    *((_WORD *)a2 + 544) |= 1u;
  }
  if (*(_QWORD *)(v20 + 24) == v10)
    goto LABEL_138;
  v94 = v11;
  v120 = 0;
  v121 = 0;
  v28 = *((_DWORD *)a2 + 30);
  if (!v28)
  {
    v62 = 0;
    v31 = 0;
    v29 = 0;
    goto LABEL_112;
  }
  v93 = a3;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = a2[14];
  v39 = &v38[15 * v28];
  while (2)
  {
    switch(*(_DWORD *)v38)
    {
      case 0:
      case 1:
      case 4:
      case 5:
      case 7:
        v41 = *((_DWORD *)v38 + 1);
        v40 = *((_DWORD *)v38 + 2);
        if (!v40)
          v40 = *((_DWORD *)v38 + 1);
        if (v41)
          v42 = v40 == 0;
        else
          v42 = 1;
        if (!v42)
        {
          LODWORD(v121) = *((_DWORD *)v38 + 1);
          if (v33)
          {
            v30 = v41;
            v35 = v33;
          }
          else
          {
            HIDWORD(v121) = v40;
            v30 = v41;
            v33 = v40;
            v35 = v40;
          }
        }
        goto LABEL_78;
      case 2:
        goto LABEL_55;
      case 3:
        if ((v37 & 1) != 0)
        {
LABEL_55:
          v44 = *((_DWORD *)v38 + 1);
          v43 = *((_DWORD *)v38 + 2);
          if (!v43)
            v43 = *((_DWORD *)v38 + 1);
          if (v44)
            v45 = v43 == 0;
          else
            v45 = 1;
          if (v45)
          {
            v36 = 1;
          }
          else
          {
            if (!v31)
            {
              LODWORD(v120) = *((_DWORD *)v38 + 1);
              v31 = v44;
            }
            HIDWORD(v120) = v43;
            v36 = 1;
            v29 = v43;
            v32 = v31;
            v34 = v31;
          }
          goto LABEL_78;
        }
        if ((v38[4] & 0x200) == 0 || (v47 = v38[13], v47 < 0x10))
        {
LABEL_72:
          v37 = 1;
          goto LABEL_78;
        }
        v49 = *(_QWORD *)(v47 & 0xFFFFFFFFFFFFFFF0);
        v37 = 1;
        if (v49)
        {
          if (*(_BYTE *)(v49 + 16) == 57)
          {
            v50 = *(uint64_t **)(v49 + 24);
            if (v50)
            {
              v82 = v29;
              v85 = v34;
              v86 = v32;
              v87 = v36;
              v53 = *v50;
              v52 = v50 + 1;
              v51 = v53;
              *(_QWORD *)&v124[0] = v53;
              *((_QWORD *)&v124[0] + 1) = v52;
              v54 = v53;
              v55 = v52;
              while (1)
              {
                v88 = v51;
                v90 = v52;
                while (1)
                {
                  if ((v54 & 0xF) != 0)
                    goto LABEL_92;
                  v56 = *(unsigned __int8 *)(*(_QWORD *)(v54 & 0xFFFFFFFFFFFFFFF0) + 16);
                  if (v56 > 0x39)
                    goto LABEL_93;
                  if (v56 == 24)
                  {
LABEL_106:
                    v51 = v54;
                    goto LABEL_99;
                  }
                  if (v56 != 26)
                    break;
                  if ((*(_BYTE *)(v54 + 23) & 0x10) != 0)
                    goto LABEL_106;
LABEL_92:
                  v54 = sub_22F115B7C(v54);
                  v55 = v57;
                }
                if (((1 << v56) & 0x20000000200003CLL) != 0)
                  goto LABEL_92;
LABEL_93:
                v83 = v54;
                v84 = v55;
                v58 = sub_22F115668(v54) == 0;
                if (v58)
                  v59 = v88;
                else
                  v59 = v83;
                v60 = v90;
                if (!v58)
                  v60 = v84;
                v89 = v59;
                v91 = v60;
                v54 = sub_22F115B7C(v83);
                v55 = v61;
                v51 = v89;
                v52 = v91;
                if (!v54)
                {
LABEL_99:
                  v92 = sub_22F115668(v51);
                  v29 = sub_22F1167E8((uint64_t *)v124);
                  if (v92)
                  {
                    v32 = v86;
                    v36 = v87;
                    v34 = v85;
                    if (v29)
                    {
                      if (!v86)
                      {
                        LODWORD(v120) = v92;
                        v31 = v92;
                        v32 = v92;
                      }
                      HIDWORD(v120) = v29;
                      v34 = v32;
                    }
                    else
                    {
                      v29 = v82;
                    }
                  }
                  else
                  {
                    v29 = v82;
                    v32 = v86;
                    v36 = v87;
                    v34 = v85;
                  }
                  goto LABEL_72;
                }
              }
            }
          }
        }
LABEL_78:
        v38 += 15;
        if (v38 != v39)
          continue;
        v62 = v36;
        if (v30)
        {
          a3 = v93;
          if (v33)
            goto LABEL_118;
        }
        else
        {
          a3 = v93;
        }
LABEL_112:
        if (v29)
          v63 = v31 == 0;
        else
          v63 = 1;
        if (v63)
          v30 = *((_DWORD *)a2 + 16);
        else
          v30 = v31;
LABEL_118:
        sub_22E8FCA40(v6, v30, 0xC26u, 0, (uint64_t)v124);
        v64 = sub_22E8906A0((uint64_t)v124, &v121);
        sub_22E8906A0(v64, &v120);
        if ((v62 & 1) == 0)
        {
          LODWORD(v113) = 0;
          sub_22E8900C4((uint64_t)v124, (int *)&v113);
          if (HIDWORD(v120))
            v66 = (_DWORD)v120 == 0;
          else
            v66 = 1;
          if (v66 && v94)
          {
            v113 = *v94;
            *(_QWORD *)v114 = v94 + 1;
            v67 = sub_22F1167E8((uint64_t *)&v113);
            v68 = sub_22F141A3C(v67, 0, *((_QWORD **)v6 + 14), *((_DWORD **)v6 + 9));
            v115 = 0;
            *(_QWORD *)&v114[4] = 0;
            v117 = 0;
            v118 = 0x100000000000000;
            v69 = v68 | ((unint64_t)v68 << 32);
            v113 = v69;
            v114[0] = 0;
            v116 = (void *)32;
            v119 = 0;
            v70 = sub_22E890748((uint64_t)v124, &v113);
            v110 = 0;
            v111 = 0;
            v109 = 0;
            v105 = v69;
            v106 = 0;
            v107 = v121;
            v108 = 1;
            v112 = 0;
            v71 = sub_22E890748(v70, &v105);
            v99 = 0;
            v100 = 0;
            v102 = 0;
            v103 = 0;
            __p = 0;
            v104 = 0;
            v97 = v121;
            v98 = 1;
            sub_22E890748(v71, &v97);
            if (SHIBYTE(v103) < 0)
              operator delete(__p);
            if (SHIBYTE(v111) < 0)
              operator delete(v109);
            if (SHIBYTE(v118) < 0)
              operator delete(v116);
          }
          goto LABEL_137;
        }
        if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v20 + 24) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
        {
          v65 = 1;
LABEL_136:
          LODWORD(v105) = v65;
          v72 = sub_22E8900C4((uint64_t)v124, (int *)&v105);
          v113 = *(_QWORD *)(v20 + 24);
          sub_22E8901B8(v72, (uint64_t *)&v113);
          goto LABEL_137;
        }
        if ((*(_BYTE *)(*((_QWORD *)v6 + 9) + 1) & 2) != 0)
        {
          v65 = 2;
          goto LABEL_136;
        }
        LODWORD(v113) = 3;
        sub_22E8900C4((uint64_t)v124, (int *)&v113);
LABEL_137:
        v10 = *(_QWORD *)(v20 + 24);
        result = sub_22E903BEC((unsigned int *)v124);
LABEL_138:
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFEu)
           - 2 <= 3)
        {
          v73 = *((_DWORD *)a2 + 16);
          v74 = (unsigned int *)v96;
          v75 = v96;
          v76 = v6;
          v77 = 3107;
LABEL_142:
          sub_22E8FCA40(v76, v73, v77, 0, (uint64_t)v75);
          sub_22E903BEC(v74);
          v10 = sub_22EF5B848(*((_QWORD *)v6 + 11), v10, 0);
          *((_WORD *)a2 + 544) |= 1u;
LABEL_143:
          v78 = *((_QWORD *)v6 + 11);
          sub_22E4913B4(v20, (uint64_t)v124);
          result = (unsigned int *)sub_22EF63D8C(v78, v10, 0, 0, v124, 0);
          *a3 = result;
          goto LABEL_144;
        }
        if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0)
                                                                              + 8) & 0xFFFFFFFFFFFFFFF0)
                                                      + 16)
           - 25 <= 1)
        {
          v73 = *((_DWORD *)a2 + 16);
          v74 = (unsigned int *)v95;
          v75 = v95;
          v76 = v6;
          v77 = 3108;
          goto LABEL_142;
        }
        if (((_WORD)a2[136] & 1) != 0 || (**a2 & 0x3F000) == 0x32000)
          goto LABEL_143;
LABEL_144:
        if (v13[2])
        {
          v79 = **((_QWORD **)v6 + 9);
          if ((v79 & 0x1000) == 0)
          {
            if ((v79 & 0x200) != 0)
              v80 = 6440;
            else
              v80 = 5233;
            sub_22E8FCA40(v6, *((_DWORD *)v13 + 43), v80, 0, (uint64_t)v124);
            v81 = *((unsigned int *)v13 + 43);
            if ((unint64_t)v13[2] >= 4)
              v81 = *((unsigned int *)v13 + 45);
            v113 = *((unsigned int *)v13 + 43) | (unint64_t)(v81 << 32);
            sub_22E8906A0((uint64_t)v124, (uint64_t *)&v113);
            return sub_22E903BEC((unsigned int *)v124);
          }
        }
        return result;
      case 6:
        v46 = *((_DWORD *)v38 + 1);
        if (v46)
        {
          LODWORD(v121) = *((_DWORD *)v38 + 1);
          if (v35)
          {
            v30 = v46;
          }
          else
          {
            HIDWORD(v121) = v46;
            v30 = v46;
            v33 = v46;
            v35 = v46;
          }
        }
        v48 = *((_DWORD *)v38 + 2);
        if (v48)
        {
          if (!v34)
          {
            LODWORD(v120) = *((_DWORD *)v38 + 2);
            v31 = v48;
            v32 = v48;
            v34 = v48;
          }
          HIDWORD(v120) = v48;
          v29 = v48;
        }
        goto LABEL_78;
      default:
        goto LABEL_78;
    }
  }
}

unint64_t sub_22EAC0D08(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v21;
  unsigned int *v22;
  uint64_t *v23;
  int v24;
  _QWORD *v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v30[24];
  uint64_t v31;
  unint64_t v32;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (_QWORD *)*v5;
  if (v5)
    v6 = (unint64_t)(v5 - 8);
  else
    v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
    v8 = *(unsigned __int8 *)(v7 + 16) - 27 > 0xFFFFFFFD;
  else
    v8 = 0;
  if (!v8)
    v7 = sub_22F10CF48(v7);
  v9 = *(_QWORD *)((*(_QWORD *)(v7 + 24) & 0xFFFFFFFFFFFFFFF0) + 8);
  v10 = *(_QWORD *)(v7 + 24) & 7 | v9;
  v32 = v10;
  v11 = *(_QWORD *)(v6 + 48);
  if (v11)
    v12 = v11 & 0xFFFFFFFFFFFFFFF0;
  else
    v12 = sub_22EF6462C(a1[11], v6);
  v13 = v12 & 7 | *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF0) + 8);
  v31 = v13;
  v14 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
  if (v14 && (v15 = *(_DWORD *)(v14 + 16), (v15 & 0xFE) == 0x28))
  {
    if ((v15 & 0x100000) != 0)
    {
      do
      {
LABEL_17:
        while (1)
        {
          v14 = *(_QWORD *)(*(_QWORD *)(v14 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v14)
            break;
          v16 = *(_DWORD *)(v14 + 16);
          if ((v16 & 0xFE) != 0x28)
            break;
          if ((v16 & 0x100000) == 0)
            goto LABEL_26;
        }
        v14 = sub_22F10CF48(v14);
      }
      while ((*(_DWORD *)(v14 + 16) & 0x100000) != 0);
    }
  }
  else
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      goto LABEL_27;
    v14 = sub_22F10CF48(v14);
    if (!v14)
      goto LABEL_27;
    if ((*(_DWORD *)(v14 + 16) & 0x100000) != 0)
      goto LABEL_17;
  }
LABEL_26:
  v10 = *(_QWORD *)(v14 + 32);
  v32 = v10;
LABEL_27:
  v17 = *(_QWORD *)(a2 + 144) & 6;
  v18 = (_QWORD *)(*(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8);
  if (v17 != 4 || v18 == 0)
  {
    if (v17 != 2 || v18 == 0)
    {
LABEL_37:
      if (sub_22EFD7260(a2))
        goto LABEL_49;
      if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                      + 16) == 45)
      {
        v21 = *(_QWORD *)(*(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
        v32 = v21;
        if (v21 == v13)
        {
          sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x18EBu, 0, (uint64_t)v30);
          v22 = v30;
          v23 = &v31;
LABEL_48:
          sub_22E8901B8((uint64_t)v22, v23);
          sub_22E903BEC(v30);
          goto LABEL_49;
        }
        if (!sub_22EAAB1B8(a1, *(unsigned int *)(a2 + 24), v13, v21))
          goto LABEL_49;
        v24 = *(_DWORD *)(a2 + 24);
        v25 = a1;
        v26 = 6378;
      }
      else
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFF800FF) != 0x528000B)
          goto LABEL_49;
        v24 = *(_DWORD *)(a2 + 24);
        v25 = a1;
        v26 = 6380;
      }
      sub_22E8FCA40(v25, v24, v26, 0, (uint64_t)v30);
      v22 = (unsigned int *)sub_22E8901B8((uint64_t)v30, &v31);
      v23 = (uint64_t *)&v32;
      goto LABEL_48;
    }
  }
  else
  {
    v18 += 2;
  }
  if ((*v18 & 6) == 2)
    goto LABEL_37;
LABEL_49:
  v27 = *(_QWORD *)(a2 + 144);
  if ((v27 & 6) != 0)
    v28 = 0;
  else
    v28 = v27 & 0xFFFFFFFFFFFFFFF8;
  if (v28)
    return v28;
  else
    return a2;
}

unsigned int *sub_22EAC0F8C(_QWORD *a1, uint64_t **a2, uint64_t a3, _DWORD *a4)
{
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned int *result;
  uint64_t *v14;
  uint64_t v15;
  unsigned int v16;
  char v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t *v20;
  int v21;
  int v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  unint64_t v33;
  BOOL v34;
  uint64_t i;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  int v50;
  uint64_t *v51;
  const std::string::value_type *v52;
  unsigned int *v53;
  unsigned int v54[24];
  unint64_t v55;
  uint64_t v56;
  BOOL v57;
  _BYTE v58[96];
  std::string v59;
  void *__p[2];
  uint64_t v61;
  unsigned int v62[24];
  unint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t *v66;

  v64 = a2[6];
  v63 = sub_22F0F08CC((uint64_t *)&v64);
  v7 = sub_22EFCBB30(a1[27]);
  v8 = *(_QWORD *)(v63 + 16);
  v9 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  if ((v8 & 4) != 0)
    v9 = (_QWORD *)*v9;
  v10 = sub_22EFCBB30((unint64_t)v9);
  if (!v10
    || (v11 = v10, v12 = sub_22EFCC008(v7), result = (unsigned int *)sub_22EFCC008(v11), (unsigned int *)v12 != result))
  {
    sub_22E8FCA40(a1, *((_DWORD *)a2 + 16), 0xC7Fu, 0, (uint64_t)&v59);
    sub_22E890024((uint64_t)&v59, (uint64_t *)&v63);
    sub_22E903BEC((unsigned int *)&v59);
    sub_22E8FCA40(a1, *(_DWORD *)(v63 + 24), 0x17D6u, 0, (uint64_t)v62);
    result = sub_22E903BEC(v62);
  }
  v14 = *a2;
  v15 = **a2;
  if ((v15 & 0xFE03FFC0) != 0 || *((_DWORD *)v14 + 24) || v15 & 0x6800000000 | ((v15 & 0x300000000) != 0))
  {
    v46 = *((_DWORD *)a2 + 16);
    v59.__r_.__value_.__r.__words[0] = (std::string::size_type)a1;
    sub_22E8FCA40(a1, v46, 0xC77u, 0, (uint64_t)&v59.__r_.__value_.__l.__size_);
    __p[0] = 0;
    __p[1] = 0;
    v61 = 0;
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 24), off_24FAB8080[*v14 & 7]);
    *v14 &= 0xFFFFFFFFFFFFFFC0;
    v14[12] = 0;
    *a4 = 0;
    v47 = 164;
    if ((*v14 & 0x100000000) == 0)
      v47 = 184;
    sub_22EAC16B0(&v59, *(_DWORD *)((char *)v14 + v47), "inline");
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 44), "_Noreturn");
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 49), "constexpr");
    *v14 &= 0xFFFFFF9FFFFFFFFFLL;
    *((_DWORD *)v14 + 49) = 0;
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 36), "const");
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 37), "__restrict");
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 38), "volatile");
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 39), "_Atomic");
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 40), "__unaligned");
    v48 = *v14;
    *v14 &= 0xFFFFFFFF01FFFFFFLL;
    v14[25] = 0;
    v14[18] = 0;
    v14[19] = 0;
    *((_DWORD *)v14 + 40) = 0;
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 28), off_24FAB80D8[(v48 >> 8) & 3]);
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 29), off_24FAB80C0[((unint64_t)*v14 >> 10) & 3]);
    sub_22EAC16B0(&v59, *((_DWORD *)v14 + 26), off_24FAB80F0[*v14 >> 6]);
    v49 = *((_DWORD *)v14 + 30);
    v50 = (*(_DWORD *)v14 >> 12) & 0x3F;
    v65 = sub_22E8FCD8C(*(_QWORD *)(v59.__r_.__value_.__r.__words[0] + 88), *(_QWORD *)(v59.__r_.__value_.__r.__words[0] + 80));
    v66 = v51;
    v52 = (const std::string::value_type *)sub_22F2F2CB0(v50);
    sub_22EAC16B0(&v59, v49, v52);
    *v14 &= 0xFFFFFFFFFFDC0FFFLL;
    *((_DWORD *)v14 + 30) = 0;
    sub_22E90749C((uint64_t)&v59.__r_.__value_.__l.__size_, __p);
    if (SHIBYTE(v61) < 0)
      operator delete(__p[0]);
    result = sub_22E903BEC((unsigned int *)&v59.__r_.__value_.__r.__words[1]);
  }
  if (((_WORD)a2[136] & 1) == 0 && (**a2 & 0x3F000) != 0x32000)
  {
    v16 = *((_DWORD *)a2 + 30);
    if (!v16)
      goto LABEL_78;
    v17 = 0;
    v18 = a2[14];
    v19 = &v18[15 * v16];
    v20 = v19;
    while (1)
    {
      v22 = *((_DWORD *)v20 - 30);
      v20 -= 15;
      v21 = v22;
      if (v22 == 6)
        goto LABEL_28;
      if (v21 != 3 || (v17 & 1) != 0)
      {
        sub_22E8FCA40(a1, *((_DWORD *)*a2 + 22), 0xC7Du, 0, (uint64_t)&v59);
        v65 = (unint64_t)a2[9];
        sub_22E8906A0((uint64_t)&v59, (uint64_t *)&v65);
        v53 = (unsigned int *)&v59;
LABEL_77:
        result = sub_22E903BEC(v53);
        goto LABEL_78;
      }
      if ((*(_WORD *)(v19 - 11) & 0x200) == 0)
      {
        sub_22E8FCA40(a1, *((_DWORD *)a2 + 16), 0xC79u, 0, (uint64_t)v58);
        v53 = (unsigned int *)v58;
        goto LABEL_77;
      }
      v23 = *(v19 - 2);
      if (v23 >= 0x10)
      {
        v24 = 0;
        v25 = *(_QWORD *)(v23 & 0xFFFFFFFFFFFFFFF0);
        if (v25 && *(_BYTE *)(v25 + 16) == 57)
        {
          v23 = *(_QWORD *)(v25 + 8);
          v24 = *(uint64_t **)(v25 + 24);
        }
      }
      else
      {
        v24 = 0;
        v23 = 0;
      }
      v57 = 0;
      v26 = *v24;
      if ((*v24 & 0xF) == 0 && v26 && *(_BYTE *)(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0) + 16) == 46)
      {
        v59.__r_.__value_.__r.__words[0] = *(_QWORD *)(v26 + 32);
        v27 = a1[11];
        sub_22EF65464(v27, &v59);
        v29 = v28;
        sub_22EF65464(v27, &v64);
        v31 = v30;
        result = (unsigned int *)sub_22F0F084C(&v59);
        if (!(_DWORD)result && v29 == v31)
          goto LABEL_27;
        v33 = sub_22F0F08CC((uint64_t *)&v59);
        if (v33)
          v34 = (*(_DWORD *)(v33 + 28) & 0x7F) != 0x1C || v29 == v31;
        else
          v34 = 1;
        v57 = v34;
        v26 = *v24;
      }
      else if ((v23 & 0xF) == 0)
      {
        v32 = (_BYTE *)(v23 & 0xFFFFFFFFFFFFFFF0);
        if ((v32[8] & 0xF) == 0 && (*(_BYTE *)(*(_QWORD *)v32 + 17) & 4) != 0)
          v57 = 1;
      }
      for (i = v26; ; i = sub_22F115B7C(i))
      {
        while (1)
        {
          if ((i & 0xF) != 0)
            goto LABEL_54;
          v37 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
          if (v37 <= 0x39)
            break;
LABEL_49:
          if (sub_22F115668(i))
            v26 = i;
          i = sub_22F115B7C(i);
          if (!i)
            goto LABEL_56;
        }
        if (v37 == 24)
          goto LABEL_55;
        if (v37 == 26)
          break;
        if (((1 << v37) & 0x20000000200003CLL) == 0)
          goto LABEL_49;
LABEL_54:
        ;
      }
      if ((*(_BYTE *)(i + 23) & 0x10) == 0)
        goto LABEL_54;
LABEL_55:
      v26 = i;
LABEL_56:
      v38 = sub_22F115668(v26);
      sub_22E8FCA40(a1, v38, 0xC75u, 0, (uint64_t)&v59);
      v39 = sub_22F30C54C((uint64_t)&v59, (uint64_t *)&v64);
      v56 = *v24;
      v40 = sub_22E8901B8(v39, &v56);
      v41 = sub_22E894E38(v40, (unsigned __int8 *)&v57);
      v65 = *v24;
      v42 = v65;
      v66 = v24 + 1;
      v43 = v65;
      while (2)
      {
        while (2)
        {
          if ((v43 & 0xF) != 0)
            goto LABEL_67;
          v44 = *(unsigned __int8 *)(*(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF0) + 16);
          if (v44 > 0x39)
          {
LABEL_62:
            if (sub_22F115668(v43))
              v42 = v43;
            v43 = sub_22F115B7C(v43);
            if (!v43)
              goto LABEL_69;
            continue;
          }
          break;
        }
        if (v44 == 24)
          break;
        if (v44 != 26)
        {
          if (((1 << v44) & 0x20000000200003CLL) != 0)
            goto LABEL_67;
          goto LABEL_62;
        }
        if ((*(_BYTE *)(v43 + 23) & 0x10) == 0)
        {
LABEL_67:
          v43 = sub_22F115B7C(v43);
          continue;
        }
        break;
      }
      v42 = v43;
LABEL_69:
      v45 = sub_22F115668(v42);
      v55 = v45 | ((unint64_t)sub_22F1167E8((uint64_t *)&v65) << 32);
      sub_22E8906A0(v41, (uint64_t *)&v55);
      result = sub_22E903BEC((unsigned int *)&v59);
LABEL_27:
      v17 = 1;
LABEL_28:
      v19 = v20;
      if (v20 == v18)
      {
LABEL_78:
        if (((_WORD)a2[136] & 0xC) != 0)
        {
          sub_22E8FCA40(a1, *((_DWORD *)a2 + 16), 0xC76u, 0, (uint64_t)v54);
          return sub_22E903BEC(v54);
        }
        return result;
      }
    }
  }
  return result;
}

std::string *sub_22EAC16B0(std::string *result, int a2, const std::string::value_type *a3)
{
  std::string *v4;
  uint64_t v5;

  if (a2)
  {
    v4 = result;
    LODWORD(v5) = a2;
    HIDWORD(v5) = a2;
    sub_22E8906A0((uint64_t)&result->__r_.__value_.__l.__size_, &v5);
    if (v4[5].__r_.__value_.__s.__data_[7] < 0)
    {
      if (!v4[4].__r_.__value_.__r.__words[2])
        return std::string::append((std::string *)((char *)v4 + 104), a3);
    }
    else if (!v4[5].__r_.__value_.__s.__data_[7])
    {
      return std::string::append((std::string *)((char *)v4 + 104), a3);
    }
    std::string::append((std::string *)((char *)v4 + 104), " ");
    return std::string::append((std::string *)((char *)v4 + 104), a3);
  }
  return result;
}

unint64_t sub_22EAC1730(_QWORD *a1, uint64_t **a2, unsigned int a3, unsigned int a4, int a5, uint64_t a6, int a7, uint64_t a8, unint64_t *a9)
{
  uint64_t **v11;
  uint64_t v13;
  int v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  unint64_t v27;
  unint64_t v28;
  _BOOL4 v29;
  int v30;
  int v31;
  unsigned int v32;
  BOOL v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t result;
  unint64_t v48;
  uint64_t v49;
  unsigned int v52;
  uint64_t *v53;
  unsigned int v54[24];
  unint64_t v55[2];
  BOOL v56;
  uint64_t v57;
  unint64_t v58;
  void *v59;
  uint64_t v60;
  _BYTE v61[64];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  int v67;
  _QWORD v68[3];
  __int16 v69;
  char v70;
  int v71;
  uint64_t v72;

  v11 = a2;
  v72 = *MEMORY[0x24BDAC8D0];
  v57 = a6;
  v13 = a3;
  if (a3)
    v14 = a3;
  else
    v14 = a4;
  if (a6)
    v15 = a5;
  else
    v15 = a7;
  v52 = v15;
  v56 = a3 != 0;
  v53 = *a2;
  if (!a6)
  {
    v16 = sub_22EFCBB30(a1[27]);
    if (v16 && (*(_WORD *)(v16 + 8) & 0x7F) == 0x53)
    {
      v17 = *(_QWORD *)(v16 + 56);
      if (!v17)
      {
LABEL_25:
        v29 = 0;
        v30 = 0;
        v31 = 0;
        v22 = v52;
        goto LABEL_54;
      }
    }
    else
    {
      v27 = v16 - 48;
      if (v16)
        v28 = v16 - 48;
      else
        v28 = 0;
      if ((*(_BYTE *)(v28 + 80) & 3) == 0)
        v27 = *(_QWORD *)(v28 + 104) & 0xFFFFFFFFFFFFFFF8;
      v17 = *(_QWORD *)(v27 + 104) & 0xFFFFFFFFFFFFFFF8;
      if (!v17)
        goto LABEL_25;
    }
    if ((v13 != 0) == ((*(_BYTE *)(v17 + 104) & 4) == 0))
      sub_22EAC1D24(a1, a4, a4, &v56, *(_QWORD *)(v17 + 88));
    goto LABEL_25;
  }
  v58 = 0;
  v59 = v61;
  v60 = 0x800000000;
  v62 = 0;
  v63 = 0;
  v64 = 0;
  v65 = a1;
  v66 = a6;
  v67 = a5;
  sub_22EFC6D6C((uint64_t)v68, a6);
  v68[1] = 0;
  v68[2] = 0;
  v69 = 257;
  v70 = 1;
  v71 = 0;
  sub_22EC56024((uint64_t)&v58);
  v19 = sub_22EFCBB30(a1[27]);
  sub_22EC611AC((uint64_t)a1, (uint64_t)&v58, v19, 0);
  if ((_DWORD)v58 == 2)
  {
    v17 = *(_QWORD *)v59 & 0xFFFFFFFFFFFFFFFCLL;
    if (v17)
    {
      if ((*(_DWORD *)(v17 + 28) & 0x7F) == 0x10)
      {
        if ((v13 != 0) == ((*(_BYTE *)(v17 + 104) & 4) == 0))
          sub_22EAC1D24(a1, a4, a5, &v56, *(_QWORD *)(v17 + 88));
        v29 = 0;
        v30 = 0;
        v31 = 0;
      }
      else
      {
        sub_22E8FCA40(a1, a5, 0x1215u, 0, (uint64_t)v55);
        sub_22E8BAE44((uint64_t)v55, &v57);
        sub_22E903BEC((unsigned int *)v55);
        sub_22E8FCA40(a1, *(_DWORD *)(v17 + 24), 0x6Du, 0, (uint64_t)v54);
        sub_22E903BEC(v54);
        v17 = 0;
        v29 = 0;
        v30 = 0;
        v31 = 1;
      }
      v22 = v52;
      goto LABEL_44;
    }
  }
  v20 = *(unsigned int **)(v57 + 16);
  v21 = *v20;
  if ((*(_BYTE *)(a1[9] + 104) & 0x20) != 0)
  {
    v22 = v52;
    if (v21 != 5)
      goto LABEL_37;
    v32 = v20[4];
    v24 = *((unsigned __int8 *)v20 + 20);
    v25 = v32 == 1635018093;
    v26 = 108;
  }
  else
  {
    v22 = v52;
    if (v21 != 3)
      goto LABEL_37;
    v23 = *((unsigned __int16 *)v20 + 8);
    v24 = *((unsigned __int8 *)v20 + 18);
    v25 = v23 == 29811;
    v26 = 100;
  }
  v33 = v25 && v24 == v26;
  if (v33 && (*(_WORD *)(sub_22EFCBB30(a1[27]) + 8) & 0x7F) == 0x53)
  {
    v17 = a1[419];
    if ((v17 & 1) != 0)
    {
      v17 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(a1[11] + 16048) + 16))(*(_QWORD *)(a1[11] + 16048), v17 >> 1);
      a1[419] = v17;
    }
    v31 = 0;
    v29 = v13 == 0;
    v30 = 1;
    goto LABEL_44;
  }
LABEL_37:
  v17 = 0;
  v30 = 0;
  v31 = 0;
  v29 = v13 == 0;
LABEL_44:
  if ((_BYTE)v71)
  {
    if ((_DWORD)v58 == 5)
    {
      sub_22EC64D18(v65, (uint64_t)&v58);
    }
    else if (v63 && (*(_DWORD *)(v65[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v65, (uint64_t)&v58);
    }
  }
  if (v62)
  {
    v49 = sub_22EC6CBD0(v62);
    MEMORY[0x2348A0E9C](v49, 0x10E0C409F09D3C3);
  }
  if (v59 != v61)
    free(v59);
  v11 = a2;
LABEL_54:
  v55[0] = 0;
  v34 = sub_22F3B2534(a1[11], a1[27], v56, v14, v22, v57, v17);
  v35 = v34;
  v55[0] = v34;
  if (v31)
    sub_22EFC77E8(v34, 1);
  sub_22EA63DD8(a1, (uint64_t)v53, v35, a8, 1);
  sub_22E91049C((uint64_t)a1, (uint64_t)v53, v35);
  sub_22E9114FC(a1, v35);
  if ((*(_BYTE *)(v35 + 29) & 1) != 0)
  {
    sub_22EFC8E88(v35);
    v37 = *((unsigned int *)v36 + 2);
    if ((_DWORD)v37)
    {
      v38 = 8 * v37;
      v39 = *v36;
      while (*(_WORD *)(*(_QWORD *)v39 + 32) != 346)
      {
        v39 += 8;
        v38 -= 8;
        if (!v38)
          goto LABEL_65;
      }
    }
    else
    {
      v39 = *v36;
    }
    if (v39 != *v36 + 8 * v37)
      sub_22E9107E0((uint64_t)a1, 0xFFFFFFFF, v22);
  }
LABEL_65:
  if (v30)
    a1[419] = v35;
  if (v29)
    *(_BYTE *)sub_22F328324((uint64_t)(a1 + 1278), v55) = 0;
  if (v57)
  {
    sub_22EA0483C((uint64_t)a1, v55[0], v53, 1);
  }
  else
  {
    v40 = a1[27];
    v41 = sub_22EFCBB30(v40);
    v42 = v41;
    if (v41 && (*(_WORD *)(v41 + 8) & 0x7F) == 0x53)
    {
      v43 = v55[0];
      *(_QWORD *)(v41 + 56) = v55[0];
    }
    else
    {
      v44 = v41 - 48;
      if (v41)
        v45 = v41 - 48;
      else
        v45 = 0;
      v43 = v55[0];
      if ((*(_BYTE *)(v45 + 80) & 3) == 0)
        v44 = *(_QWORD *)(v45 + 104) & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)(v44 + 104) = *(_QWORD *)(v44 + 104) & 7 | v55[0];
    }
    sub_22EFCCFA0(v40, v43);
    if (!v17)
    {
      v46 = sub_22EFD8AC4(a1[11], v42, a7, 0, 0, 0, 0, v55[0], v42);
      *a9 = v46;
      *(_DWORD *)(v46 + 28) |= 0x200u;
      sub_22EFCCFA0(v42, *a9);
    }
  }
  v58 = v55[0];
  sub_22EA2DB10((unint64_t)a1, &v58, 1uLL);
  result = v55[0];
  v48 = v55[0] + 48;
  if (!v55[0])
    v48 = 0;
  a1[27] = v48;
  v11[45] = (uint64_t *)v48;
  return result;
}

unsigned int *sub_22EAC1D24(_QWORD *a1, unsigned int a2, int a3, BOOL *a4, uint64_t a5)
{
  unsigned int *v8;
  unsigned int *result;
  unsigned int v11[24];
  _BYTE v12[96];
  unint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  _BYTE __p[23];
  __int16 v18;
  _BYTE v19[96];

  if ((*(_BYTE *)(a5 + 104) & 4) != 0)
  {
    sub_22E8FCA40(a1, a3, 0x1A1Cu, 0, (uint64_t)v19);
    v16 = 0;
    v15 = 0;
    v13 = a2 | ((unint64_t)a2 << 32);
    v14 = 0;
    memset(&__p[8], 0, 15);
    strcpy(__p, "inline ");
    v18 = 7;
    sub_22E890748((uint64_t)v19, &v13);
    if ((char)v18 < 0)
      operator delete(*(void **)__p);
    v8 = (unsigned int *)v19;
  }
  else
  {
    sub_22E8FCA40(a1, a3, 0xE29u, 0, (uint64_t)v12);
    v8 = (unsigned int *)v12;
  }
  sub_22E903BEC(v8);
  sub_22E8FCA40(a1, *(_DWORD *)(a5 + 24), 0x6Du, 0, (uint64_t)v11);
  result = sub_22E903BEC(v11);
  *a4 = (*(_BYTE *)(a5 + 104) & 4) != 0;
  return result;
}

unint64_t sub_22EAC1E38(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 3352);
  if ((result & 1) != 0)
  {
    result = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 16048) + 16))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16048), result >> 1);
    *(_QWORD *)(a1 + 3352) = result;
  }
  return result;
}

void **sub_22EAC1E80(uint64_t a1, uint64_t a2, int a3)
{
  _DWORD *v6;
  void **result;
  uint64_t v8;
  uint64_t v9;

  if (a2)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x10)
      v6 = (_DWORD *)a2;
    else
      v6 = 0;
  }
  else
  {
    v6 = 0;
  }
  v6[25] = a3;
  *(_QWORD *)(a1 + 216) = sub_22EA044C0(a1, *(_QWORD *)(a1 + 216));
  if (sub_22EAC1F50((uint64_t)v6))
    sub_22E910938((unsigned int *)a1, 1, a3);
  result = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(a1 + 10000), v6);
  v8 = *(_QWORD *)(a1 + 10008);
  v9 = 10016;
  if (v8 == *(_QWORD *)(a1 + 10000))
    v9 = 10020;
  if (result != (void **)(v8 + 8 * *(unsigned int *)(a1 + v9)))
  {
    *result = (void *)-2;
    ++*(_DWORD *)(a1 + 10024);
    *(_QWORD *)(a2 + 8) = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF9 | 4;
  }
  return result;
}

BOOL sub_22EAC1F50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v2 = *(_QWORD *)v1;
  v3 = *(unsigned int *)(v1 + 8);
  v4 = *(_QWORD *)v1 + 8 * v3;
  if ((_DWORD)v3)
  {
    v5 = 8 * v3;
    while (*(_WORD *)(*(_QWORD *)v2 + 32) != 346)
    {
      v2 += 8;
      v5 -= 8;
      if (!v5)
      {
        v2 = v4;
        return v2 != v4;
      }
    }
  }
  return v2 != v4;
}

unsigned int *sub_22EAC1FB0(_QWORD **a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  unsigned int *result;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14[12];
  unsigned int v15[8];
  _BYTE v16[56];
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  v19[0] = a3;
  v19[1] = a4;
  v18 = a5;
  sub_22E8FCA40(*a1, *((_DWORD *)a1 + 2), 0x127Eu, 0, (uint64_t)v14);
  v8 = sub_22E8901B8((uint64_t)v14, (uint64_t *)a1 + 2);
  v13 = a2;
  v9 = sub_22E8900C4(v8, (int *)&v13);
  v10 = *(_OWORD *)(v9 + 9);
  *(_OWORD *)v15 = *(_OWORD *)v9;
  *(_OWORD *)((char *)&v15[2] + 1) = v10;
  v16[0] = 0;
  v16[48] = 0;
  if (*(_BYTE *)(v9 + 80))
    sub_22E907424((uint64_t)v16, v9 + 32);
  v17 = *(_QWORD *)(v9 + 88);
  sub_22E903BEC((unsigned int *)v14);
  if (a2 >= 2)
    return sub_22E903BEC(v15);
  sub_22F2F2210((uint64_t)v15, (uint64_t)v19);
  result = sub_22E903BEC(v15);
  if (!a2)
  {
    sub_22E8FCA40(*a1, *(_DWORD *)(a5 + 24), 0x1816u, 0, (uint64_t)v15);
    v12 = sub_22E890024((uint64_t)v15, &v18);
    v14[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 16))(v18);
    sub_22E8906A0(v12, v14);
    return sub_22E903BEC(v15);
  }
  return result;
}

unint64_t sub_22EAC20DC(_QWORD *a1)
{
  unint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  const char *v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v1 = a1[419];
  if (!v1)
  {
    v3 = a1[11];
    v4 = a1;
    v5 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(*(_QWORD *)(v3 + 1960) + 80) + 72), *(_QWORD *)(*(_QWORD *)(v3 + 1960) + 80));
    if (v5)
      v6 = v5 + 40;
    else
      v6 = 0;
    if ((*(_QWORD *)(v4[9] + 100) & 0x2000000000) != 0)
      v7 = 5;
    else
      v7 = 3;
    if ((*(_QWORD *)(v4[9] + 100) & 0x2000000000) != 0)
      v8 = "metal";
    else
      v8 = "std";
    v9 = sub_22E3CB704((llvm::StringMapImpl *)(v4[10] + 544), v8, v7);
    v10 = sub_22F3B2534(v3, v6, 0, 0, 0, v9, 0);
    v4[419] = v10;
    if ((v10 & 1) != 0)
    {
      v10 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(v4[11] + 16048) + 16))(*(_QWORD *)(v4[11] + 16048), v10 >> 1);
      v4[419] = v10;
    }
    *(_DWORD *)(v10 + 28) |= 0x200u;
    a1 = v4;
    v1 = v4[419];
  }
  if ((v1 & 1) != 0)
  {
    v11 = a1;
    v1 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(a1[11] + 16048) + 16))(*(_QWORD *)(a1[11] + 16048), v1 >> 1);
    v11[419] = v1;
  }
  return v1;
}

uint64_t sub_22EAC21FC(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;

  v3 = a1[419];
  if (!v3)
    return v3;
  v6 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v7 && *(_BYTE *)(v7 + 16) == 45)
  {
    v8 = sub_22F114198(*(_QWORD *)(v7 + 24));
    v3 = 0;
    if (!v8 || (*(_DWORD *)(v8 + 28) & 0x7E) != 0x24)
      return v3;
    v9 = *(_QWORD *)(v8 + 152);
    v10 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
    if ((v9 & 4) != 0 && v10)
    {
      do
      {
        v11 = *(_QWORD *)(*v10 + 152);
        v10 = (_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
      }
      while ((v11 & 4) != 0 && v10);
    }
    v12 = **(_QWORD **)(v8 + 168);
    if (!v10)
      return 0;
  }
  else
  {
    v13 = sub_22F10D628(v6);
    if (!v13)
      return 0;
    v14 = v13;
    v28 = *(_QWORD *)(v13 + 32);
    v15 = sub_22F0F08CC(&v28);
    if (v15)
      v10 = (*(_DWORD *)(v15 + 28) & 0x7F) == 0x1C ? (_QWORD *)v15 : 0;
    else
      v10 = 0;
    v12 = v14 + 40;
    if (!v10)
      return 0;
  }
  if (!a1[424])
  {
    v17 = v10[6];
    v18 = *(_QWORD *)(v17 + 40) & 7;
    v19 = *(_QWORD *)(v17 + 40) & 0xFFFFFFFFFFFFFFF8;
    v20 = sub_22E3CB704((llvm::StringMapImpl *)(a1[10] + 544), "initializer_list", 0x10uLL);
    if (v18)
      v21 = 0;
    else
      v21 = v20 == v19;
    if (!v21)
      return 0;
    v22 = a1[419];
    if ((v22 & 1) != 0)
    {
      v22 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(a1[11] + 16048) + 16))(*(_QWORD *)(a1[11] + 16048), v22 >> 1);
      a1[419] = v22;
    }
    v23 = v22 + 48;
    v24 = *(_QWORD *)(v17 + 16);
    v25 = (_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF8);
    if ((v24 & 4) != 0)
      v25 = (_QWORD *)*v25;
    if (!sub_22EFCE860(v23, (uint64_t)v25))
      return 0;
    v26 = v10[7];
    if (sub_22EFE8FBC(v26) != 1 || (*(_DWORD *)(*(_QWORD *)(v26 + 16) + 28) & 0x7F) != 0x26)
      return 0;
    a1[424] = v10;
  }
  v16 = (*(uint64_t (**)(_QWORD *))(*v10 + 32))(v10);
  if (v16 != (*(uint64_t (**)(_QWORD))(*(_QWORD *)a1[424] + 32))(a1[424]))
    return 0;
  if (a3)
    *a3 = *(_QWORD *)(v12 + 8);
  return 1;
}

uint64_t sub_22EAC23F4(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unint64_t v10;

  result = sub_22EFC10B0(a2);
  if ((_DWORD)result)
  {
    v5 = *(_QWORD *)(**(_QWORD **)(a2 + 120) + 48);
    v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0);
    if (v6 && (v7 = *(_DWORD *)(v6 + 16), (v7 & 0xFE) == 0x28))
    {
      if ((v7 & 0x100000) != 0)
      {
        do
        {
LABEL_5:
          while (1)
          {
            v6 = *(_QWORD *)(*(_QWORD *)(v6 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v6)
              break;
            v8 = *(_DWORD *)(v6 + 16);
            if ((v8 & 0xFE) != 0x28)
              break;
            if ((v8 & 0x100000) == 0)
              goto LABEL_15;
          }
          v6 = sub_22F10CF48(v6);
        }
        while ((*(_DWORD *)(v6 + 16) & 0x100000) != 0);
      }
    }
    else
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        return sub_22EAC21FC(a1, v5, 0);
      v6 = sub_22F10CF48(v6);
      if (!v6)
        return sub_22EAC21FC(a1, v5, 0);
      if ((*(_DWORD *)(v6 + 16) & 0x100000) != 0)
        goto LABEL_5;
    }
LABEL_15:
    v9 = *(_QWORD *)(v6 + 32);
    v10 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v10 + 8) & 0xF) != 0)
      v10 = (unint64_t)sub_22F10D2BC(v9);
    v5 = v10 & 0xFFFFFFFFFFFFFFF0;
    return sub_22EAC21FC(a1, v5, 0);
  }
  return result;
}

BOOL sub_22EAC24EC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int *v16;
  const void *v17;
  size_t v18;
  unsigned int v19;
  const void *p_p;
  uint64_t v21;
  _BOOL8 v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unsigned int v36;
  unint64_t v38;
  unint64_t v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  int v43;
  void *__p;
  uint64_t v45;
  int v46;
  char v47;
  uint64_t (**v48)();
  int v49;
  char v50;
  uint64_t v51;
  _BYTE v52[11];
  uint64_t v53[2];
  void *v54;
  int v55;
  _BYTE v56[32];
  _QWORD v57[4];

  v57[3] = *MEMORY[0x24BDAC8D0];
  *(_DWORD *)a2 = 0;
  *(_DWORD *)(a2 + 16) = 0;
  v11 = (_QWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 88);
  if (v10)
  {
    v12 = sub_22EC6CBD0(v10);
    MEMORY[0x2348A0E9C](v12, 0x10E0C409F09D3C3);
  }
  *(_BYTE *)(a2 + 165) = 0;
  *v11 = 0;
  v11[1] = 0;
  v50 = 1;
  v49 = 16843009;
  memset(v52, 0, sizeof(v52));
  v51 = 0;
  v48 = &off_24FAB7DF0;
  sub_22EC6AB20(a1, (uint64_t *)(a2 + 120), *(unsigned int *)(a2 + 152), a3, (uint64_t)a4, (uint64_t)&v48, 1, 0, (uint64_t)v53, 0, 0, 1u);
  v13 = v53[0];
  if (v53[0])
  {
    v14 = sub_22E958204(a1, (uint64_t)a4, 0);
    if (v14)
    {
      v15 = v14;
      sub_22EC6887C(v53, *(unsigned int **)(a1 + 72), (uint64_t)&__p);
      if (!v56[28])
        goto LABEL_15;
      v16 = *(unsigned int **)(a5 + 16);
      v19 = *v16;
      v17 = v16 + 4;
      v18 = v19;
      if (v47 >= 0)
        p_p = &__p;
      else
        p_p = __p;
      v21 = v47 & 0x7F;
      if (v47 < 0)
        v21 = v45;
      if (v18 == v21)
      {
        if (v18)
          v22 = memcmp(v17, p_p, v18) == 0;
        else
          v22 = 1;
      }
      else
      {
LABEL_15:
        v22 = 0;
      }
      v42 = *(_QWORD *)(a1 + 88) + 2128;
      v43 = 5104;
      v24 = (_BYTE *)sub_22E3B8AAC(v42);
      v41 = v24;
      v25 = v24 + 1;
      v26 = *v24;
      v25[v26] = 5;
      *v24 = v26 + 3;
      v27 = v24 + 16;
      *(_QWORD *)&v27[8 * v26] = a5;
      v28 = (v26 + 1);
      v25[v28] = 13;
      *(_QWORD *)&v27[8 * v28] = v15;
      v29 = (v26 + 2);
      v25[v29] = 2;
      *(_QWORD *)&v27[8 * v29] = v22;
      sub_22E4D6448((uint64_t)(v24 + 336), *a4, 1);
      v30 = *(_QWORD *)(a1 + 88) + 2128;
      v38 = 0;
      v39 = v30;
      v40 = 5823;
      sub_22EC6BF44(a1, (uint64_t)v53, (uint64_t)&v41, (uint64_t)&v38, 1);
      if (v38 && v39)
        sub_22E3BB10C(v39, v38);
      if (v41 && v42)
        sub_22E3BB10C(v42, (unint64_t)v41);
      if (v47 < 0)
        operator delete(__p);
    }
    else
    {
      v45 = *(_QWORD *)(a1 + 88) + 2128;
      v46 = 5105;
      v31 = (_BYTE *)sub_22E3B8AAC(v45);
      __p = v31;
      v32 = *v31;
      v31[v32 + 1] = 5;
      *v31 = v32 + 1;
      *(_QWORD *)&v31[8 * v32 + 16] = a5;
      v33 = *(_QWORD *)(a1 + 88) + 2128;
      v41 = 0;
      v42 = v33;
      v43 = 5823;
      sub_22EC6BF44(a1, (uint64_t)v53, (uint64_t)&__p, (uint64_t)&v41, 1);
      if (v41 && v42)
        sub_22E3BB10C(v42, (unint64_t)v41);
      if (__p && v45)
        sub_22E3BB10C(v45, (unint64_t)__p);
    }
    if (v55)
      v34 = *(_QWORD *)v54;
    else
      v34 = 0;
    v35 = *(unsigned int *)(v34 + 28);
    v36 = *(_DWORD *)(a2 + 16);
    if (v36 >= *(_DWORD *)(a2 + 20))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v36 = *(_DWORD *)(a2 + 16);
    }
    *(_QWORD *)(*(_QWORD *)(a2 + 8) + 8 * v36) = (v35 >> 13) & 3 | v34;
    ++*(_DWORD *)(a2 + 16);
    *(_DWORD *)a2 = 2;
    __p = v57;
    sub_22E8D19C8((void ***)&__p);
    v23 = v54;
  }
  else
  {
    __p = v57;
    sub_22E8D19C8((void ***)&__p);
    v23 = v54;
  }
  if (v23 != v56)
    free(v23);
  return v13 != 0;
}

unint64_t sub_22EAC28A0(uint64_t a1, uint64_t *a2, char a3, unsigned int a4, int a5, unsigned int *a6, uint64_t a7, int a8, uint64_t a9)
{
  BOOL v11;
  int v19;
  unsigned int *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  BOOL v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  void *__p;
  __int16 v43;
  int v44;
  uint64_t v45;
  __int16 v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  unsigned int v50[24];
  _BYTE v51[96];

  if (a6[1])
    v11 = *a6 == 0;
  else
    v11 = 1;
  if (v11 && *((_QWORD *)a6 + 1) == 0)
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a7 + 24), 0x13F6u, 0, (uint64_t)v51);
    v20 = (unsigned int *)v51;
LABEL_33:
    sub_22E903BEC(v20);
    return 0;
  }
  v19 = *(_DWORD *)a7;
  if ((*(_DWORD *)a7 - 4) < 2)
  {
    if ((**(_QWORD **)(a1 + 72) & 0x200) != 0)
      v21 = 6464;
    else
      v21 = 5093;
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a7 + 24), v21, 0, (uint64_t)v50);
    v38 = *(_QWORD *)a6;
    sub_22E8906A0((uint64_t)v50, (uint64_t *)&v38);
    sub_22E903BEC(v50);
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) == 0)
      return 0;
  }
  else
  {
    if (v19 == 6)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a7 + 24), 0x13E7u, 0, (uint64_t)v50);
      v38 = *(_QWORD *)a6;
      goto LABEL_32;
    }
    if (v19 == 7)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a7 + 24), 0x13EEu, 0, (uint64_t)v50);
      v38 = *(_QWORD *)(*(_QWORD *)(a7 + 8) + 36);
LABEL_32:
      sub_22E8906A0((uint64_t)v50, (uint64_t *)&v38);
      v20 = v50;
      goto LABEL_33;
    }
  }
  sub_22EA12DB4(a1, a7);
  if (!(_QWORD)v48)
    return 0;
  if (!a4)
  {
    if ((**(_QWORD **)(a1 + 72) & 0x200) != 0)
      v22 = 2581;
    else
      v22 = 6183;
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a7 + 24), v22, 0, (uint64_t)v50);
    v23 = *a6;
    v40 = 0;
    v41 = 0;
    v38 = v23 | (v23 << 32);
    v39 = 0;
    v46 = 1536;
    v45 = 0;
    HIBYTE(__p) = 0;
    v43 = 0;
    v44 = 0;
    strcpy((char *)&__p, "using ");
    v47 = 0;
    sub_22E890748((uint64_t)v50, &v38);
    if (SHIBYTE(v46) < 0)
      operator delete(__p);
    sub_22E903BEC(v50);
  }
  if (a8)
  {
    if ((sub_22F0AAC5C(*((_QWORD *)a6 + 1)) & 1) == 0 && (sub_22EFC6DC8((uint64_t *)&v48) & 1) == 0)
    {
      sub_22E8FCA40((_QWORD *)a1, a8, 0x1191u, 0, (uint64_t)v50);
      v24 = *a6;
      sub_22EFC70E8(&v48);
      v26 = DWORD2(v48);
      if (v25)
        v26 = v25;
      v38 = __PAIR64__(v26, v24);
      sub_22E8906A0((uint64_t)v50, (uint64_t *)&v38);
      sub_22E903BEC(v50);
      a8 = 0;
    }
  }
  else if ((sub_22EE72B18(a1, (uint64_t)a6, 8) & 1) != 0 || (sub_22EE72C58(a1, (uint64_t *)&v48, 8) & 1) != 0)
  {
    return 0;
  }
  v36 = v48;
  v37 = v49;
  v30 = a9 + 8;
  v29 = *(_QWORD *)(a9 + 8);
  if ((v29 & 4) != 0)
  {
    v32 = v29 & 0xFFFFFFFFFFFFFFF8;
    v30 = *(_QWORD *)v32;
    v31 = *(_QWORD *)v32 + 8 * *(unsigned int *)(v32 + 8);
  }
  else
  {
    v31 = v30 + 8 * (v29 > 7);
  }
  if (v30 == v31)
  {
    v34 = 0;
  }
  else
  {
    v33 = v30 + 8;
    do
    {
      v34 = *(unsigned __int16 *)(*(_QWORD *)(v33 - 8) + 28) == 455;
      v35 = *(_WORD *)(*(_QWORD *)(v33 - 8) + 28) == 455 || v33 == v31;
      v33 += 8;
    }
    while (!v35);
  }
  v27 = sub_22EAC2C24(a1, a2, a3, a4, a5 != 0, a5, (uint64_t *)a6, (uint64_t)&v36, a8, a9, 0, v34);
  if (v27)
    sub_22EA0483C(a1, v27, a2, 0);
  return v27;
}

uint64_t sub_22EAC2C24(uint64_t a1, uint64_t *a2, char a3, unsigned int a4, int a5, int a6, uint64_t *a7, uint64_t a8, int a9, uint64_t a10, char a11, char a12)
{
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _DWORD *v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int v51;
  void *v52;
  void *v53;
  void **v54;
  uint64_t v55;
  unsigned __int8 v56;
  unint64_t v57;
  void **v58;
  uint64_t v59;
  void **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unsigned int v65;
  uint64_t v66;
  unsigned int v67;
  _QWORD *v68;
  unsigned int v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  void **v75;
  int v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  int v92;
  unint64_t v93;
  int v94;
  unsigned int v95;
  BOOL v96;
  int v97;
  int v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v106;
  BOOL v108;
  int v109;
  uint64_t v110;
  int v111;
  int v112;
  int v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v122[24];
  unsigned int v123[24];
  unsigned int v124[24];
  unsigned int v125[24];
  uint64_t v126;
  void *v127;
  void **v128;
  void *__src;
  size_t __n;
  uint64_t (**v131)();
  int v132;
  char v133;
  uint64_t v134;
  _BYTE v135[19];
  uint64_t v136;
  uint64_t v137;
  void **v138;
  void *v139;
  unint64_t v140;
  unsigned int v141[24];
  __int128 v142;
  uint64_t v143;
  uint64_t v144[2];
  void *v145;
  _BYTE v146[32];
  uint64_t v147;
  uint64_t v148;
  void *v149;
  uint64_t v150;
  _BYTE v151[64];
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  _QWORD *v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int16 v160;
  int v161;
  char v162;
  uint64_t v163;
  void *v164;
  uint64_t v165;
  _BYTE v166[64];
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  __int128 v171;
  uint64_t v172;
  __int128 v173;
  __int16 v174;
  char v175;
  int v176;
  uint64_t v177;

  v177 = *MEMORY[0x24BDAC8D0];
  v18 = *(_DWORD *)(a8 + 8);
  v142 = *(_OWORD *)a8;
  v143 = *(_QWORD *)(a8 + 16);
  v19 = v142;
  if ((v142 & 7) == 3)
  {
    v20 = *(_QWORD *)(a1 + 216);
    if (v20)
    {
      if ((*(_WORD *)(v20 + 8) & 0x7Fu) - 38 >= 0xFFFFFFFD)
      {
        v21 = *(_QWORD *)(a1 + 88);
        v22 = (_QWORD *)(v21 + 15224);
        v23 = sub_22EF6477C(v21, v20 - 64);
        v19 = sub_22EFC6A3C(v22, v23 & 7 | *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF0) + 8));
        *(_QWORD *)&v142 = v19;
      }
    }
  }
  v163 = 0;
  v164 = v166;
  v165 = 0x800000000;
  v167 = 0;
  v168 = 0;
  v169 = 0;
  v170 = (_QWORD *)a1;
  v171 = v142;
  v172 = v143;
  v173 = xmmword_22F44E360;
  v174 = 1;
  v175 = 1;
  v176 = 0;
  sub_22EC56024((uint64_t)&v163);
  v175 = 0;
  if (a2)
  {
    sub_22EC63520(a1, (uint64_t)&v163, a2, 0, 0);
    sub_22F328CF8(a1, a2, (uint64_t)&v163);
  }
  else
  {
    v25 = *(_QWORD *)(a1 + 216);
    if ((*(_WORD *)(v25 + 8) & 0x7Eu) - 34 <= 3)
      sub_22EC611AC(a1, (uint64_t)&v163, v25, 0);
  }
  if ((sub_22EAC4CC0((_QWORD *)a1, v24, a5, a7, v18, (uint64_t)&v163) & 1) != 0)
    goto LABEL_12;
  if (a12 && (v19 & 7) == 3)
  {
    sub_22E8FCA40((_QWORD *)a1, a4, 0x13F4u, 0, (uint64_t)v141);
    sub_22E903BEC(v141);
LABEL_12:
    v26 = 0;
    goto LABEL_153;
  }
  v119 = a4;
  v27 = sub_22E958204(a1, (uint64_t)a7, 0);
  v140 = v27;
  if (a7[1])
  {
    v28 = sub_22F0ABC50(a7 + 1, *(_QWORD *)(a1 + 88));
    v29 = v30;
    v27 = v140;
  }
  else
  {
    v28 = 0;
    v29 = 0;
  }
  v138 = (void **)v28;
  v139 = v29;
  if (v27 && !a9)
  {
    if (sub_22E958490((_QWORD *)a1, (uint64_t)a7, v27))
    {
      v26 = sub_22F3B2980(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), a4, (uint64_t)v138, (uint64_t)v139, (uint64_t *)&v142, a5);
      *(_DWORD *)(v26 + 28) = *(_DWORD *)(v26 + 28) & 0xFFFF9FFF | ((a3 & 3) << 13);
      sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v26);
      sub_22EA63DD8((_QWORD *)a1, (uint64_t)a2, v26, a10, 1);
      sub_22EFC77E8(v26, 1);
      goto LABEL_153;
    }
    v148 = 0;
    v149 = v151;
    v150 = 0x800000000;
    v152 = 0;
    v153 = 0;
    v154 = 0;
    v155 = (_QWORD *)a1;
    v156 = *(_OWORD *)a8;
    v31 = *(_QWORD *)(a8 + 16);
    v159 = 0;
    v157 = v31;
    v158 = 0;
    v160 = 0;
    v161 = 257;
    v162 = 0;
    sub_22EC56024((uint64_t)&v148);
    if ((a11 & 1) == 0)
      LOBYTE(v161) = 0;
    v32 = *(_QWORD *)(a1 + 216);
    if ((*(_WORD *)(v32 + 8) & 0x7Eu) - 34 <= 3)
    {
      v33 = *(_QWORD *)(v32 - 16);
      if (v33)
        v34 = v33 & 0xFFFFFFFFFFFFFFF0;
      else
        v34 = sub_22EF6462C(*(_QWORD *)(a1 + 88), v32 - 64);
      v154 = v34;
    }
    sub_22EC611AC(a1, (uint64_t)&v148, v140, 0);
    v26 = 0;
    if ((sub_22EAC4F0C(a1, v119, a5, (uint64_t)a7, a8, v18, (uint64_t)&v148, 0) & 1) != 0)
      goto LABEL_144;
    if (!(_DWORD)v150 && a12)
    {
      v68 = sub_22F3B2F94(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), v119, v19);
      v69 = v150;
      if (v150 >= HIDWORD(v150))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v69 = v150;
      }
      *((_QWORD *)v149 + v69) = v68;
      LODWORD(v150) = v150 + 1;
      LODWORD(v148) = 2;
      if ((_DWORD)v150)
        goto LABEL_118;
    }
    else if ((_DWORD)v150)
    {
      goto LABEL_118;
    }
    v38 = *(_QWORD *)a8 & 7;
    if (v38 == 3)
      goto LABEL_118;
    v39 = *(_QWORD *)a8 & 0xFFFFFFFFFFFFFFF8;
    if (v38)
      v39 = 0;
    v26 = v119;
    if (v39)
    {
      if ((**(_QWORD **)(a1 + 72) & 0x400) != 0)
      {
        v40 = *(_DWORD **)(v39 + 16);
        if (*v40 == 4
          && v40[4] == 1937007975
          && sub_22EFC84D4(*(_QWORD *)(a1 + 216))
          && (*(_WORD *)(v140 + 8) & 0x7F) == 0x53)
        {
          v41 = sub_22F1E361C(*(_QWORD **)(a1 + 112), v119);
          if (v41 != 3)
          {
            if (v41)
            {
              v26 = 0;
LABEL_144:
              if (BYTE1(v161))
              {
                if ((_DWORD)v148 == 5)
                {
                  sub_22EC64D18(v155, (uint64_t)&v148);
                }
                else if (v153 && (*(_DWORD *)(v155[9] + 52) & 0x400000) != 0)
                {
                  sub_22E90B5FC((unint64_t)v155, (uint64_t)&v148);
                }
              }
              if (v152)
              {
                v118 = sub_22EC6CBD0(v152);
                MEMORY[0x2348A0E9C](v118, 0x10E0C409F09D3C3);
              }
              if (v149 != v151)
                free(v149);
              goto LABEL_153;
            }
          }
        }
      }
    }
    v42 = a7[1];
    v43 = *(_QWORD *)(a1 + 216);
    v44 = (*(_WORD *)(v43 + 8) & 0x7F) - 35;
    v45 = v43 - 64;
    v132 = 16843009;
    if (!v43)
      v45 = 0;
    v133 = 1;
    if (v44 >= 3)
      v46 = 0;
    else
      v46 = v45;
    memset(v135, 0, 11);
    v134 = 0;
    v131 = &off_24FAB7E28;
    v135[11] = a5;
    v135[12] = a11;
    v136 = v42;
    v137 = v46;
    sub_22EC6AB20(a1, (uint64_t *)&v156, v159, a2, (uint64_t)a7, (uint64_t)&v131, 1, 0, (uint64_t)v144, 0, 0, 1u);
    if (!v144[0])
    {
      sub_22E8FCA40((_QWORD *)a1, v18, 0xFAAu, 0, (uint64_t)&v128);
      v127 = *(void **)a8;
      v47 = sub_22E894538((uint64_t)&v128, (uint64_t *)&v127);
      v48 = sub_22E894FB4(v47, (uint64_t *)&v140);
      v126 = *a7;
      sub_22E8906A0(v48, &v126);
      sub_22E903BEC((unsigned int *)&v128);
      v26 = sub_22F3B2980(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), v119, (uint64_t)v138, (uint64_t)v139, (uint64_t *)&v142, a5);
      *(_DWORD *)(v26 + 28) = *(_DWORD *)(v26 + 28) & 0xFFFF9FFF | ((a3 & 3) << 13);
      sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v26);
      v49 = (_QWORD *)a1;
      v50 = (uint64_t)a2;
LABEL_55:
      sub_22EA63DD8(v49, v50, v26, a10, 1);
      sub_22EFC77E8(v26, 1);
      v51 = 0;
      goto LABEL_115;
    }
    v52 = (void *)(*(_QWORD *)(a1 + 88) + 2128);
    v128 = 0;
    __src = v52;
    LODWORD(__n) = 4012;
    v53 = *(void **)a8;
    v128 = (void **)sub_22E3B8AAC((uint64_t)v52);
    *((_BYTE *)v128 + *(unsigned __int8 *)v128 + 1) = 10;
    v54 = v128;
    v55 = *(unsigned __int8 *)v128;
    v56 = v55 + 1;
    *(_BYTE *)v128 = v55 + 1;
    v54[v55 + 2] = v53;
    v57 = v140;
    *((_BYTE *)v54 + v56 + 1) = 13;
    v58 = v128;
    v59 = *(unsigned __int8 *)v128;
    *(_BYTE *)v128 = v59 + 1;
    v58[v59 + 2] = (void *)v57;
    *((_BYTE *)v58 + (v59 + 1) + 1) = 2;
    v60 = v128;
    v61 = *(unsigned __int8 *)v128;
    *(_BYTE *)v128 = v61 + 1;
    v60[v61 + 2] = 0;
    sub_22E4D6448((uint64_t)(v60 + 42), *a7, 1);
    sub_22EC6BEF8(a1, (uint64_t)v144, (uint64_t)&v128, 1);
    if (v128 && __src)
      sub_22E3BB10C((unint64_t)__src, (unint64_t)v128);
    v62 = sub_22F2E6D78((uint64_t)v144);
    if (!v62)
    {
      v26 = sub_22F3B2980(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), v119, (uint64_t)v138, (uint64_t)v139, (uint64_t *)&v142, a5);
      *(_DWORD *)(v26 + 28) = *(_DWORD *)(v26 + 28) & 0xFFFF9FFF | ((a3 & 3) << 13);
      sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v26);
      v49 = (_QWORD *)a1;
      v50 = (uint64_t)a2;
      goto LABEL_55;
    }
    v63 = v62;
    v64 = *(unsigned int *)(v62 + 28);
    if ((*(_DWORD *)(v62 + 28) & 0x7Fu) - 38 < 0xFFFFFFFD || !sub_22EFC3A88(v62))
    {
      *(_QWORD *)&v142 = *(_QWORD *)(v63 + 40);
      v67 = v150;
      if (v150 >= HIDWORD(v150))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v67 = v150;
      }
      *((_QWORD *)v149 + v67) = (v64 >> 13) & 3 | v63;
      LODWORD(v150) = v150 + 1;
      LODWORD(v148) = 2;
LABEL_114:
      v51 = 1;
LABEL_115:
      v128 = (void **)&v147;
      sub_22E8D19C8(&v128);
      if (v145 != v146)
        free(v145);
      if (!v51)
        goto LABEL_144;
LABEL_118:
      if ((_DWORD)v148 == 5)
      {
        v87 = *(_QWORD *)(a1 + 88);
        v88 = *(_QWORD *)(a1 + 216);
        v89 = (uint64_t)v138;
        v90 = (uint64_t)v139;
        v91 = v119;
LABEL_120:
        v92 = a5;
LABEL_142:
        v26 = sub_22F3B2980(v87, v88, v91, v89, v90, (uint64_t *)&v142, v92);
        v106 = (uint64_t)a2;
LABEL_143:
        *(_DWORD *)(v26 + 28) = *(_DWORD *)(v26 + 28) & 0xFFFF9FFF | ((a3 & 3) << 13);
        sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v26);
        sub_22EA63DD8((_QWORD *)a1, v106, v26, a10, 1);
        sub_22EFC77E8(v26, 1);
        goto LABEL_144;
      }
      if (a5)
      {
        if ((_DWORD)v148 != 2)
          goto LABEL_133;
        v93 = *(_QWORD *)v149 & 0xFFFFFFFFFFFFFFFCLL;
        v94 = *(_DWORD *)(v93 + 28);
        v95 = v94 & 0x7F;
        v96 = v95 > 0x2F || ((1 << (v94 & 0x7F)) & 0xC00000060000) == 0;
        v97 = v94 & 0x7F;
        if (!v96)
          v97 = *(_DWORD *)(sub_22EFBAEA4(*(_QWORD *)v149 & 0xFFFFFFFFFFFFFFFCLL) + 28) & 0x7F;
        if ((v97 - 43) <= 0xFFFFFFF5)
        {
          v98 = v94 & 0x7F;
          if (v95 <= 0x2F)
          {
            v98 = v94 & 0x7F;
            if (((1 << (v94 & 0x7F)) & 0xC00000060000) != 0)
              v98 = *(_DWORD *)(sub_22EFBAEA4(v93) + 28) & 0x7F;
          }
          if (v98 != 43)
          {
LABEL_133:
            sub_22E8FCA40((_QWORD *)a1, v18, 0x13F7u, 0, (uint64_t)v125);
            sub_22E903BEC(v125);
            if ((_DWORD)v150)
            {
              v99 = v149;
              v100 = 8 * v150;
              do
              {
                v101 = *v99 & 0xFFFFFFFFFFFFFFFCLL;
                v102 = *(_DWORD *)(v101 + 28) & 0x7F;
                v103 = v102 > 0x2F;
                v104 = (1 << v102) & 0xC00000060000;
                if (!v103 && v104 != 0)
                  v101 = sub_22EFBAEA4(v101);
                sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v101 + 24), 0x1812u, 0, (uint64_t)v124);
                sub_22E903BEC(v124);
                ++v99;
                v100 -= 8;
              }
              while (v100);
            }
            v87 = *(_QWORD *)(a1 + 88);
            v88 = *(_QWORD *)(a1 + 216);
            v89 = (uint64_t)v138;
            v90 = (uint64_t)v139;
            v91 = v119;
            v92 = 1;
            goto LABEL_142;
          }
        }
      }
      else if ((_DWORD)v148 == 2 && a11)
      {
        v93 = *(_QWORD *)v149 & 0xFFFFFFFFFFFFFFFCLL;
        v94 = *(_DWORD *)(v93 + 28);
        v95 = v94 & 0x7F;
        v108 = v95 > 0x2F || ((1 << (v94 & 0x7F)) & 0xC00000060000) == 0;
        v109 = v94 & 0x7F;
        if (!v108)
          v109 = *(_DWORD *)(sub_22EFBAEA4(*(_QWORD *)v149 & 0xFFFFFFFFFFFFFFFCLL) + 28) & 0x7F;
        if ((v109 - 43) >= 0xFFFFFFF6)
        {
          sub_22E8FCA40((_QWORD *)a1, v18, 0x13EFu, 0, (uint64_t)v123);
          sub_22E903BEC(v123);
          v110 = *(_QWORD *)v149 & 0xFFFFFFFFFFFFFFFCLL;
          if ((*(_DWORD *)(v110 + 28) & 0x7Fu) > 0x2F)
          {
            v106 = (uint64_t)a2;
            v111 = v119;
          }
          else
          {
            v106 = (uint64_t)a2;
            v111 = v119;
            if (((1 << (*(_DWORD *)(v110 + 28) & 0x7F)) & 0xC00000060000) != 0)
              v110 = sub_22EFBAEA4(v110);
          }
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v110 + 24), 0x1812u, 0, (uint64_t)v122);
          sub_22E903BEC(v122);
          v26 = sub_22F3B2980(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), v111, (uint64_t)v138, (uint64_t)v139, (uint64_t *)&v142, 0);
          goto LABEL_143;
        }
      }
      else
      {
        v112 = v119;
        if ((_DWORD)v148 != 2)
          goto LABEL_184;
        v93 = *(_QWORD *)v149 & 0xFFFFFFFFFFFFFFFCLL;
        v94 = *(_DWORD *)(v93 + 28);
        v95 = v94 & 0x7F;
      }
      if (v95 <= 0x2F && ((1 << v95) & 0xC00000060000) != 0)
        v94 = *(_DWORD *)(sub_22EFBAEA4(v93) + 28);
      v114 = v94 & 0x7F;
      v112 = v119;
      if (v114 == 16)
      {
        sub_22E8FCA40((_QWORD *)a1, v18, 0x13E2u, 0, (uint64_t)&v128);
        v144[0] = *a7;
        sub_22E8906A0((uint64_t)&v128, v144);
        sub_22E903BEC((unsigned int *)&v128);
        v87 = *(_QWORD *)(a1 + 88);
        v88 = *(_QWORD *)(a1 + 216);
        v89 = (uint64_t)v138;
        v90 = (uint64_t)v139;
        v91 = v119;
        goto LABEL_120;
      }
LABEL_184:
      v26 = sub_22F3B2980(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), v112, (uint64_t)v138, (uint64_t)v139, (uint64_t *)&v142, a5);
      *(_DWORD *)(v26 + 28) = *(_DWORD *)(v26 + 28) & 0xFFFF9FFF | ((a3 & 3) << 13);
      sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v26);
      sub_22EA63DD8((_QWORD *)a1, (uint64_t)a2, v26, a10, 1);
      *(_DWORD *)(v26 + 28) &= ~0x80u;
      if ((v142 & 7) != 3 || (BYTE1(v161) = 0, (sub_22F328E20((_QWORD *)a1, v26) & 1) == 0))
      {
        if ((_DWORD)v150)
        {
          v115 = v149;
          v116 = 8 * v150;
          do
          {
            v128 = 0;
            if ((sub_22EAC4238((_QWORD *)a1, v26, *v115 & 0xFFFFFFFFFFFFFFFCLL, (uint64_t)&v163, (unint64_t *)&v128) & 1) == 0)sub_22EAC4984(a1, a2, v26, *v115 & 0xFFFFFFFFFFFFFFFCLL, (uint64_t)v128);
            ++v115;
            v116 -= 8;
          }
          while (v116);
        }
      }
      goto LABEL_144;
    }
    v65 = *(_WORD *)(v63 + 72) & 0x7F;
    v66 = -40;
    if (v65 > 0x46)
    {
      switch(v65)
      {
        case 'S':
          goto LABEL_88;
        case 'G':
          v66 = -56;
          goto LABEL_88;
        case 'Q':
LABEL_88:
          v70 = *(_QWORD *)(v63 + 64 + v66 + 16);
          v71 = (_QWORD *)(v70 & 0xFFFFFFFFFFFFFFF8);
          if ((v70 & 4) != 0)
            v71 = (_QWORD *)*v71;
          if (v71)
            v72 = (uint64_t)(v71 - 8);
          else
            v72 = 0;
          v26 = *(_QWORD *)(a1 + 88);
          if (!v146[28])
            goto LABEL_100;
          v128 = 0;
          __src = 0;
          __n = 0;
          v73 = v144[1];
          v74 = sub_22F0AB0EC((unint64_t *)&v138);
          sub_22F0AB9D8((uint64_t)&v128, v26, v73, v74);
          v75 = v128;
          v76 = HIDWORD(__n);
          if (v128)
          {
            if (!HIDWORD(__n))
            {
              v138 = v128;
              v139 = __src;
LABEL_99:
              v26 = *(_QWORD *)(a1 + 88);
LABEL_100:
              v78 = *(_QWORD *)(a1 + 216);
              if (v78)
                v79 = v78 - 64;
              else
                v79 = 0;
              v80 = sub_22EF6477C(v26, v79);
              *(_QWORD *)&v142 = sub_22EFC6A3C((_QWORD *)(v26 + 15224), v80 & 7 | *(_QWORD *)((v80 & 0xFFFFFFFFFFFFFFF0) + 8));
              v143 = 0;
              v81 = sub_22EC66BE4(a1, v72);
              if (v81)
              {
                while (1)
                {
                  v82 = v81 & 0xFFFFFFFFFFFFFFF8;
                  if ((v81 & 4) == 0 || !v82)
                    break;
                  v26 = *(_QWORD *)v82;
                  v83 = *(unsigned int *)(*(_QWORD *)v82 + 28);
                  v84 = v150;
                  if (v150 >= (unint64_t)HIDWORD(v150))
                  {
                    llvm::SmallVectorBase<unsigned int>::grow_pod();
                    v84 = v150;
                  }
                  *((_QWORD *)v149 + v84) = (v83 >> 13) & 3 | v26;
                  LODWORD(v150) = v150 + 1;
                  LODWORD(v148) = 2;
                  v81 = *(_QWORD *)(v82 + 8);
                  if (!v81)
                    goto LABEL_113;
                }
                v85 = *(unsigned int *)(v82 + 28);
                v86 = v150;
                if (v150 >= HIDWORD(v150))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v86 = v150;
                }
                *((_QWORD *)v149 + v86) = v82 | (v85 >> 13) & 3;
                LODWORD(v150) = v150 + 1;
                LODWORD(v148) = 2;
              }
LABEL_113:
              sub_22EC561E4((uint64_t)&v148);
              goto LABEL_114;
            }
            v77 = (void *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, __n, 3);
            memcpy(v77, __src, __n);
            v75 = v128;
            v76 = HIDWORD(__n);
          }
          else
          {
            v77 = 0;
          }
          v138 = v75;
          v139 = v77;
          if (v76)
            free(__src);
          goto LABEL_99;
      }
    }
    else
    {
      if (v65 <= 0x18)
      {
        if (v65 == 16)
        {
LABEL_65:
          v66 = -48;
          goto LABEL_88;
        }
        if (((1 << v65) & 0x1066) != 0)
          goto LABEL_88;
        if (v65 == 24)
          goto LABEL_65;
      }
      if (v65 == 70)
      {
LABEL_86:
        v66 = -64;
        goto LABEL_88;
      }
    }
    if (v65 - 52 >= 6)
    {
      if (v65 - 33 >= 5)
        goto LABEL_65;
      goto LABEL_86;
    }
    v66 = -72;
    goto LABEL_88;
  }
  if (!v27)
  {
    v26 = 0;
    if ((sub_22EAC4F0C(a1, v119, a5, (uint64_t)a7, a8, v18, 0, 0) & 1) != 0)
      goto LABEL_153;
    v28 = (uint64_t)v138;
    v29 = v139;
    a4 = v119;
  }
  v35 = *(_QWORD *)(a1 + 88);
  v36 = *(_QWORD *)(a1 + 216);
  if (a5)
    v37 = sub_22F3B2E94(v35, v36, a4, a6, v28, (uint64_t)v29, v18, *(_QWORD *)a8, a9);
  else
    v37 = sub_22F3B2D20(v35, v36, a4, v28, (uint64_t)v29, (uint64_t *)a8, a9);
  v26 = v37;
  *(_DWORD *)(v37 + 28) = *(_DWORD *)(v37 + 28) & 0xFFFF9FFF | ((a3 & 3) << 13);
  sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v37);
  sub_22EA63DD8((_QWORD *)a1, (uint64_t)a2, v26, a10, 1);
LABEL_153:
  if ((_BYTE)v176)
  {
    if ((_DWORD)v163 == 5)
    {
      sub_22EC64D18(v170, (uint64_t)&v163);
    }
    else if (v168 && (*(_DWORD *)(v170[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v170, (uint64_t)&v163);
    }
  }
  if (v167)
  {
    v117 = sub_22EC6CBD0(v167);
    MEMORY[0x2348A0E9C](v117, 0x10E0C409F09D3C3);
  }
  if (v164 != v166)
    free(v164);
  return v26;
}

unint64_t sub_22EAC3CF0(_QWORD *a1, uint64_t *a2, char a3, int a4, int a5, uint64_t a6)
{
  int v8;
  unint64_t v9;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unsigned int v18[24];

  v8 = (*(_DWORD *)a6 >> 12) & 0x3F;
  if (v8 == 23)
  {
    v14 = *(_QWORD *)(a6 + 8);
    v15 = sub_22EFC3500(v14);
    if (v15)
      v16 = v15;
    else
      v16 = v14;
    v9 = sub_22EAC3DD0(a1, a2, a3, a4, a5, *(_DWORD *)(a6 + 132), v16);
    if (v9)
      sub_22EA0483C((uint64_t)a1, v9, a2, 0);
  }
  else
  {
    if (v8 != 50)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a6 + 120), 0x13F3u, 0, (uint64_t)v18);
      sub_22E903BEC(v18);
    }
    return 0;
  }
  return v9;
}

uint64_t sub_22EAC3DD0(_QWORD *a1, uint64_t *a2, char a3, int a4, int a5, unsigned int a6, unint64_t a7)
{
  char v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  int v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  __int128 v28;
  _QWORD v29[10];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _BYTE v35[64];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42;
  __int16 v43;
  char v44;
  int v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  if ((*(_WORD *)(sub_22EFCBB30(a1[27]) + 8) & 0x7Eu) - 34 > 3)
  {
    v14 = 0;
  }
  else
  {
    *(_QWORD *)&v30 = *(_QWORD *)(a7 + 40);
    DWORD2(v30) = a6;
    sub_22EFC6D6C((uint64_t)&v31, v30);
    v32 = 0;
    v33 = v35;
    v34 = 0x800000000;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = a1;
    v40 = v30;
    v41 = v31;
    v42 = xmmword_22F44E360;
    v43 = 1;
    v44 = 1;
    v45 = 0;
    sub_22EC56024((uint64_t)&v32);
    sub_22EC63520((uint64_t)a1, (uint64_t)&v32, a2, 0, 0);
    v14 = 0;
    if ((_DWORD)v34)
    {
      v15 = v33;
      v16 = 8 * v34;
      while (1)
      {
        v17 = *v15 & 0xFFFFFFFFFFFFFFFCLL;
        v18 = v17 && (*(_DWORD *)(v17 + 28) & 0x7F) == 14;
        if (v18 && *(_QWORD *)(v17 + 64) == a7)
          break;
        ++v15;
        v16 -= 8;
        if (!v16)
        {
          v14 = 0;
          goto LABEL_14;
        }
      }
      sub_22E8FCA40(a1, a4, 0x13F2u, 0, (uint64_t)&v28);
      v27 = __PAIR64__(a6, a5);
      sub_22E8906A0((uint64_t)&v28, (uint64_t *)&v27);
      sub_22E903BEC((unsigned int *)&v28);
      sub_22E8FCA40(a1, *(_DWORD *)(v17 + 24), 0x1813u, 0, (uint64_t)&v28);
      v14 = 1;
      LODWORD(v27) = 1;
      sub_22E8900C4((uint64_t)&v28, (int *)&v27);
      sub_22E903BEC((unsigned int *)&v28);
    }
LABEL_14:
    if ((_BYTE)v45)
    {
      if ((_DWORD)v32 == 5)
      {
        sub_22EC64D18(v39, (uint64_t)&v32);
      }
      else if (v37 && (*(_DWORD *)(v39[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v39, (uint64_t)&v32);
      }
    }
    if (v36)
    {
      v26 = sub_22EC6CBD0(v36);
      MEMORY[0x2348A0E9C](v26, 0x10E0C409F09D3C3);
    }
    if (v33 != v35)
      free(v33);
  }
  v19 = a6;
  v20 = sub_22E9585EC(a1, a7, a6, 0);
  v21 = sub_22F3B2B04(a1[11], a1[27], a4, a5, v19, a7);
  *(_DWORD *)(v21 + 28) = *(_DWORD *)(v21 + 28) & 0xFFFF9FFF | ((a3 & 3) << 13);
  sub_22EFCCFA0(a1[27], v21);
  if ((v14 & 1) != 0 || v20)
  {
    sub_22EFC77E8(v21, 1);
  }
  else
  {
    v22 = sub_22E49F9AC(a7);
    sub_22EFC3500(a7);
    if (v22)
    {
LABEL_26:
      *(_QWORD *)&v30 = 0;
      v23 = *(_DWORD *)(v22 + 24);
      *(_QWORD *)&v28 = *(_QWORD *)(v22 + 40);
      DWORD2(v28) = v23;
      sub_22EFC6D6C((uint64_t)v29, v28);
      v32 = 0;
      v33 = v35;
      v34 = 0x800000000;
      v37 = 0;
      v38 = 0;
      v36 = 0;
      v39 = a1;
      v40 = v28;
      v41 = v29[0];
      v42 = 0uLL;
      v43 = 1;
      v44 = 1;
      v45 = 0;
      sub_22EC56024((uint64_t)&v32);
      sub_22EC63520((uint64_t)a1, (uint64_t)&v32, a2, 0, 0);
      sub_22F328CF8((uint64_t)a1, a2, (uint64_t)&v32);
      if ((sub_22EAC4238(a1, v21, v22, (uint64_t)&v32, (unint64_t *)&v30) & 1) == 0)
        sub_22EAC4984((uint64_t)a1, a2, v21, v22, v30);
      if ((_BYTE)v45)
      {
        if ((_DWORD)v32 == 5)
        {
          sub_22EC64D18(v39, (uint64_t)&v32);
        }
        else if (v37 && (*(_DWORD *)(v39[9] + 52) & 0x400000) != 0)
        {
          sub_22E90B5FC((unint64_t)v39, (uint64_t)&v32);
        }
      }
      if (v36)
      {
        v24 = sub_22EC6CBD0(v36);
        MEMORY[0x2348A0E9C](v24, 0x10E0C409F09D3C3);
      }
      if (v33 != v35)
        free(v33);
      while (1)
      {
        v22 = *(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v22)
          break;
        if ((*(_DWORD *)(v22 + 28) & 0x7F) == 0x43)
          goto LABEL_26;
      }
    }
  }
  return v21;
}

uint64_t sub_22EAC4238(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v6;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int *v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unsigned int v31;
  BOOL v32;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unsigned int v39;
  BOOL v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  unsigned int *v48;
  unint64_t v49;
  int v50;
  int v51;
  unsigned int *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v56;
  _QWORD *v58;
  uint64_t v59;
  _BYTE v60[96];
  unsigned int v61[24];
  unsigned int v62[24];
  _BYTE v63[96];
  unsigned int v64[24];
  unsigned int v65[24];
  _BYTE v66[96];
  unsigned int v67[24];
  _BYTE v68[96];
  _BYTE v69[96];
  _BYTE v70[96];
  unsigned int v71[24];
  unsigned int v72[24];
  uint64_t v73;
  int v74;
  uint64_t v75;
  _BYTE v76[96];
  __int128 v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[96];
  __int128 v82;
  unint64_t v83[14];

  v6 = a3;
  v8 = a1;
  if ((*(_BYTE *)(a1[9] + 1) & 2) == 0)
  {
    v9 = a1[27];
    if ((*(_WORD *)(v9 + 8) & 0x7Eu) - 34 <= 3 && a2 && (*(_DWORD *)(a2 + 28) & 0x7F) == 0xD)
    {
      v10 = *(_QWORD *)(a3 + 16);
      v11 = v10 & 0xFFFFFFFFFFFFFFF8;
      if ((v10 & 4) != 0)
        v11 = *(_QWORD *)v11;
      if ((*(_WORD *)(v11 + 8) & 0x7F) == 0x21)
      {
        v12 = *(_QWORD *)(v11 - 48);
        v11 = v12 & 0xFFFFFFFFFFFFFFF8;
        if ((v12 & 4) != 0)
          v11 = *(_QWORD *)v11;
      }
      v13 = (_QWORD *)(v11 - 64);
      if (v11)
        v14 = v11 - 64;
      else
        v14 = 0;
      if ((*(_BYTE *)(v14 + 75) & 1) != 0)
      {
        v15 = (_QWORD *)v11;
        do
        {
          v16 = *(v15 - 6);
          v15 = (_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
          if ((v16 & 4) != 0)
            v15 = (_QWORD *)*v15;
          v13 = v15 - 8;
          if (v15)
            v17 = v15 - 8;
          else
            v17 = 0;
        }
        while ((*((_BYTE *)v17 + 75) & 1) != 0);
      }
      v18 = v9 ? v9 - 64 : 0;
      v83[0] = (*(uint64_t (**)(_QWORD *))(*v13 + 32))(v13);
      if (sub_22EFB3B2C(v18, (uint64_t (*)(uint64_t, uint64_t))sub_22EFB5694, (uint64_t)v83))
      {
        if (v11 == v8[27])
        {
          sub_22E8FCA40(v8, *(_DWORD *)(a2 + 24), 0x13E9u, 0, (uint64_t)v83);
          v82 = *(_OWORD *)(a2 + 64);
          *(_QWORD *)&v77 = sub_22F0AB0EC((unint64_t *)&v82);
          sub_22E8906A0((uint64_t)v83, (uint64_t *)&v77);
          sub_22E903BEC((unsigned int *)v83);
          sub_22E8FCA40(v8, *(_DWORD *)(v6 + 24), 0x1812u, 0, (uint64_t)v81);
          v24 = (unsigned int *)v81;
        }
        else
        {
          v82 = *(_OWORD *)(a2 + 64);
          v19 = sub_22F0AB0EC((unint64_t *)&v82);
          sub_22E8FCA40(v8, v19, 0x13EAu, 0, (uint64_t)v83);
          v80 = *(_QWORD *)(a2 + 64);
          v20 = sub_22EA02390((uint64_t)v83, &v80);
          v21 = v8[27];
          if (v21)
            v22 = v21 - 64;
          else
            v22 = 0;
          v79 = v22;
          v23 = sub_22E890024(v20, &v79);
          v77 = *(_OWORD *)(a2 + 64);
          v78 = sub_22F0AB0EC((unint64_t *)&v77);
          sub_22E8906A0(v23, (uint64_t *)&v78);
          sub_22E903BEC((unsigned int *)v83);
          sub_22E8FCA40(v8, *(_DWORD *)(v6 + 24), 0x1812u, 0, (uint64_t)v76);
          v24 = (unsigned int *)v76;
        }
        sub_22E903BEC(v24);
        v44 = 1;
        v54 = a2;
        goto LABEL_97;
      }
    }
  }
  v25 = *(unsigned int *)(a4 + 16);
  if (!(_DWORD)v25)
    return 0;
  v56 = a2;
  if ((*(_DWORD *)(v6 + 28) & 0x7E) == 0x2E)
    v6 = *(_QWORD *)(v6 + 64);
  v58 = v8;
  v59 = 0;
  v26 = 0;
  v27 = 0;
  v28 = *(_QWORD **)(a4 + 8);
  v29 = 8 * v25;
  do
  {
    v30 = *v28 & 0xFFFFFFFFFFFFFFFCLL;
    v31 = *(_DWORD *)(v30 + 28) & 0x7F;
    v32 = v31 > 0x2F || ((1 << v31) & 0xC00000060000) == 0;
    if (!v32)
    {
      v30 = sub_22EFBAEA4(*v28 & 0xFFFFFFFFFFFFFFFCLL);
      v31 = *(_DWORD *)(v30 + 28) & 0x7F;
    }
    if (v31 > 0x2D || ((1 << v31) & 0x200000006000) == 0)
    {
      if (v31 - 38 >= 0xFFFFFFFD && sub_22EFC3A88(v30))
      {
        v34 = (*(_DWORD *)(v6 + 28) & 0x7F) - 49;
        if (v34 > 0x19 || ((1 << v34) & 0x2080007) == 0)
        {
          v42 = v58[27];
          v43 = *(_DWORD *)(v56 + 24);
          v73 = *(_QWORD *)(v56 + 40);
          v74 = v43;
          sub_22EFC6D6C((uint64_t)&v75, v73);
          if ((sub_22EA14140(v58, v42, (uint64_t)&v73) & 1) != 0)
            return 1;
        }
      }
      v35 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v30 + 32))(v30);
      v32 = v35 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)v6 + 32))(v6);
      v8 = v58;
      if (v32)
        goto LABEL_57;
      if ((*(_DWORD *)(v30 + 28) & 0x7Fu) - 42 >= 0xFFFFFFFD)
      {
        if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 42 >= 0xFFFFFFFD)
        {
          v36 = *(_QWORD *)((*(_QWORD *)(v30 + 80) & 0xFFFFFFFFFFFFFFF8)
                          + ((2 * *(_QWORD *)(v30 + 80)) & 8));
          v37 = *(_QWORD *)((*(_QWORD *)(v6 + 80) & 0xFFFFFFFFFFFFFFF8)
                          + ((2 * *(_QWORD *)(v6 + 80)) & 8));
          if ((*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFF0) + 8) | v36 & 7) == (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFF0) + 8) | v37 & 7))
          {
LABEL_57:
            v26 = 1;
            v38 = *v28 & 0xFFFFFFFFFFFFFFFCLL;
            if (v38 && (*(_DWORD *)(v38 + 28) & 0x7E) == 0x2E)
              *a5 = v38;
            goto LABEL_60;
          }
        }
      }
      else if ((*(_DWORD *)(v30 + 28) & 0x7F) == 0x2B && (*(_DWORD *)(v6 + 28) & 0x7F) == 0x2B)
      {
        goto LABEL_57;
      }
      v26 |= sub_22ED10A18((uint64_t)v58, v30, v6);
LABEL_60:
      if ((*(_BYTE *)(v30 + 8) & 4) == 0 || sub_22EC62AF4((uint64_t)v58, v30))
      {
        v39 = (*(_DWORD *)(v30 + 28) & 0x7F) - 33;
        v40 = v39 >= 5;
        if (v39 >= 5)
          v27 = v30;
        v41 = v59;
        if (!v40)
          v41 = v30;
        v59 = v41;
      }
    }
    ++v28;
    v29 -= 8;
  }
  while (v29);
  if ((v26 & 1) != 0)
    return 0;
  v45 = *(_DWORD *)(v6 + 28);
  v46 = v45 & 0x7F;
  if (!v27)
  {
    if (v46 != 43)
      goto LABEL_77;
    v27 = v59;
    if (!v59)
      return 0;
    goto LABEL_76;
  }
  if ((v46 == 43) != ((*(_DWORD *)(v27 + 28) & 0x7F) == 43))
  {
LABEL_76:
    v47 = v56;
    sub_22E8FCA40(v8, *(_DWORD *)(v56 + 24), 0x13E3u, 0, (uint64_t)v72);
    sub_22E903BEC(v72);
    sub_22E8FCA40(v8, *(_DWORD *)(v6 + 24), 0x1812u, 0, (uint64_t)v71);
    sub_22E903BEC(v71);
    sub_22E8FCA40(v8, *(_DWORD *)(v27 + 24), 0x1811u, 0, (uint64_t)v70);
    v48 = (unsigned int *)v70;
    goto LABEL_96;
  }
LABEL_77:
  v49 = v6;
  if ((v45 & 0x7Eu) - 58 > 0xFFFFFFF9)
    goto LABEL_80;
  if (v46 != 29)
  {
    if ((v46 - 33) <= 4)
    {
      v44 = v59;
      if (!v59)
        return v44;
      v47 = v56;
      sub_22E8FCA40(v8, *(_DWORD *)(v56 + 24), 0x13E3u, 0, (uint64_t)v65);
      sub_22E903BEC(v65);
      sub_22E8FCA40(v8, *(_DWORD *)(v6 + 24), 0x1812u, 0, (uint64_t)v64);
      sub_22E903BEC(v64);
      sub_22E8FCA40(v8, *(_DWORD *)(v59 + 24), 0x1811u, 0, (uint64_t)v63);
      v48 = (unsigned int *)v63;
      goto LABEL_96;
    }
    goto LABEL_87;
  }
  v49 = *(_QWORD *)(v6 + 48);
  if (!v49)
  {
LABEL_87:
    if (!v27)
      return 0;
    v47 = v56;
    sub_22E8FCA40(v8, *(_DWORD *)(v56 + 24), 0x13E3u, 0, (uint64_t)v62);
    sub_22E903BEC(v62);
    sub_22E8FCA40(v8, *(_DWORD *)(v6 + 24), 0x1812u, 0, (uint64_t)v61);
    sub_22E903BEC(v61);
    sub_22E8FCA40(v8, *(_DWORD *)(v27 + 24), 0x1811u, 0, (uint64_t)v60);
    v48 = (unsigned int *)v60;
    goto LABEL_96;
  }
LABEL_80:
  v83[0] = 0;
  v50 = sub_22ECF9910(v8, 0, v49, a4, v83, 1);
  if (!v50)
    return 0;
  if (v50 == 1)
  {
    if ((*(_WORD *)(v8[27] + 8) & 0x7Eu) - 34 < 4)
      return 1;
    v47 = v56;
    v51 = *(_DWORD *)(v56 + 24);
    v52 = (unsigned int *)v68;
    v53 = v68;
LABEL_94:
    sub_22E8FCA40(v8, v51, 0x13E3u, 0, (uint64_t)v53);
    sub_22E903BEC(v52);
  }
  else
  {
    v47 = v56;
    if (v50 == 2)
    {
      v51 = *(_DWORD *)(v56 + 24);
      v52 = (unsigned int *)v69;
      v53 = v69;
      goto LABEL_94;
    }
  }
  sub_22E8FCA40(v8, *(_DWORD *)(v6 + 24), 0x1812u, 0, (uint64_t)v67);
  sub_22E903BEC(v67);
  sub_22E8FCA40(v8, *(_DWORD *)(v83[0] + 24), 0x1811u, 0, (uint64_t)v66);
  v48 = (unsigned int *)v66;
LABEL_96:
  sub_22E903BEC(v48);
  v44 = 1;
  v54 = v47;
LABEL_97:
  sub_22EFC77E8(v54, 1);
  return v44;
}

uint64_t sub_22EAC4984(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t *v7;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = a5;
  v7 = a2;
  v9 = *(_DWORD *)(a4 + 28);
  v10 = a4;
  if ((v9 & 0x7E) == 0x2E)
  {
    v10 = *(_QWORD *)(a4 + 64);
    v9 = *(_DWORD *)(v10 + 28);
  }
  if ((v9 & 0x7Fu) - 33 >= 0xFFFFFFF9)
  {
    v11 = *(_QWORD *)(v10 + 48);
    if (!v11)
    {
LABEL_12:
      v19 = *(_QWORD *)(a1 + 88);
      v20 = a1;
      v21 = *(_QWORD *)(a1 + 216);
      v22 = *(_DWORD *)(a3 + 24);
      v23 = *(_QWORD *)(v10 + 40);
      v24 = sub_22EFC7430(80, v19, v21, 0);
      v25 = v19;
      v5 = a5;
      v7 = a2;
      sub_22F3B2790(v24, 46, v25, v21, v22, v23, a3, v10);
      v15 = a4;
      goto LABEL_24;
    }
    v9 = *(_DWORD *)(v11 + 28);
  }
  if ((v9 & 0x7F) != 0x37)
    goto LABEL_12;
  v12 = *(_QWORD *)(a1 + 216);
  if (v12)
    v13 = v12 - 64;
  else
    v13 = 0;
  v14 = sub_22F0AABF8(*(_QWORD *)(a3 + 64));
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v13 + 104) + 96), *(_QWORD *)(v13 + 104));
  v15 = a4;
  if (*(_DWORD *)(*(_QWORD *)(v13 + 128) + 20))
  {
    v26 = sub_22E46A3A0(v13);
    do
    {
      v27 = v26;
      v28 = **(_QWORD **)(v26 + 16);
      v29 = *(_QWORD *)(v28 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v29 + 8) & 0xF) != 0)
        v29 = (unint64_t)sub_22F10D2BC(v28);
      v30 = sub_22F10C2A4(*(_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF0));
      if (v30)
      {
        if ((*(_DWORD *)(v30 + 28) & 0x7Fu) - 35 >= 3)
          v31 = 0;
        else
          v31 = v30;
      }
      else
      {
        v31 = 0;
      }
      v26 = v27 + 24;
    }
    while (v31 != v14);
    v16 = *(_BYTE *)(v27 + 12) & 1;
  }
  else
  {
    v16 = 0;
  }
  v20 = a1;
  v24 = sub_22F3B2890(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), *(_DWORD *)(a3 + 24), a3, a4, v16);
LABEL_24:
  v32 = *(_QWORD *)(a3 + 48);
  if ((v32 & 0xFFFFFFFFFFFFFFF8) != 0)
    *(_QWORD *)(v24 + 72) = v32 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(a3 + 48) = v32 & 7 | v24;
  *(_DWORD *)(v24 + 28) = *(_DWORD *)(v24 + 28) & 0xFFFF9FFF | (((*(_DWORD *)(a3 + 28) >> 13) & 3) << 13);
  if ((*(_BYTE *)(v15 + 28) & 0x80) != 0 || (*(_BYTE *)(a3 + 28) & 0x80) != 0)
    sub_22EFC77E8(v24, 1);
  sub_22F328C90((unint64_t *)(v24 + 48), v5);
  if (v7)
    sub_22EA0483C(v20, v24, v7, 1);
  else
    sub_22EFCCFA0(*(_QWORD *)(v20 + 216), v24);
  return v24;
}

uint64_t sub_22EAC4BD4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((a3[5] & 7) == 5)
  {
    v6 = a3[2];
    v7 = (_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
    if ((v6 & 4) != 0)
      v7 = (_QWORD *)*v7;
    if (v7)
      v8 = (unint64_t)(v7 - 8);
    else
      v8 = 0;
    sub_22EFD55D8(v8, (uint64_t)a3);
  }
  v9 = a3[2];
  v10 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  if ((v9 & 4) != 0)
    v10 = (_QWORD *)*v10;
  sub_22F3B1578((uint64_t)v10, (uint64_t)a3);
  if (a2)
  {
    v11 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(a2 + 72), a3);
    v12 = *(_QWORD *)(a2 + 80);
    v13 = 88;
    if (v12 == *(_QWORD *)(a2 + 72))
      v13 = 92;
    if (v11 != (void **)(v12 + 8 * *(unsigned int *)(a2 + v13)))
    {
      *v11 = (void *)-2;
      ++*(_DWORD *)(a2 + 96);
    }
    sub_22E8CEA58(a1 + 3320, (uint64_t)a3);
  }
  v14 = (uint64_t)a3;
  do
    v14 = *(_QWORD *)(v14 + 72);
  while (v14 && (*(_DWORD *)(v14 + 28) & 0x7E) == 0x2E);
  return sub_22EFD8DA0(v14, (uint64_t)a3);
}

uint64_t sub_22EAC4CC0(_QWORD *a1, uint64_t a2, int a3, uint64_t *a4, int a5, uint64_t a6)
{
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  BOOL v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  unsigned int v30;
  unsigned int v31[24];
  uint64_t v32;
  unsigned int v33[24];

  v11 = a4[1];
  if ((*(_WORD *)(sub_22EFCBB30(a1[27]) + 8) & 0x7Eu) - 34 < 4)
  {
    v12 = sub_22EF65C10(a1[11], v11);
    v13 = *(unsigned int *)(a6 + 16);
    if ((_DWORD)v13)
    {
      v14 = v12;
      v15 = *(_QWORD **)(a6 + 8);
      v16 = 8 * v13;
      while (1)
      {
        v17 = *v15 & 0xFFFFFFFFFFFFFFFCLL;
        v18 = *(_DWORD *)(v17 + 28) & 0x7F;
        if (v17)
          v19 = v18 == 13;
        else
          v19 = 0;
        if (v19)
        {
          if (a3 != (*(_BYTE *)(v17 + 48) & 4) >> 2)
            goto LABEL_21;
        }
        else
        {
          if (!v17 || v18 != 74)
          {
            if (v18 == 42)
              v21 = *v15 & 0xFFFFFFFFFFFFFFFCLL;
            else
              v21 = 0;
            if (!v21 || (a3 & 1) == 0)
              goto LABEL_21;
            v20 = (uint64_t *)(v21 + 72);
            goto LABEL_20;
          }
          if ((a3 & 1) != 0)
            goto LABEL_21;
        }
        v20 = (uint64_t *)(v17 + 64);
LABEL_20:
        if (v14 == sub_22EF65C10(a1[11], *v20))
        {
          sub_22E8FCA40(a1, a5, 0x13ECu, 0, (uint64_t)v33);
          v32 = *a4;
          sub_22E8906A0((uint64_t)v33, &v32);
          sub_22E903BEC(v33);
          sub_22E8FCA40(a1, *(_DWORD *)(v17 + 24), 0x180Fu, 0, (uint64_t)v33);
          v22 = 1;
          LODWORD(v32) = 1;
          sub_22E8900C4((uint64_t)v33, (int *)&v32);
          sub_22E903BEC(v33);
          return v22;
        }
LABEL_21:
        ++v15;
        v16 -= 8;
        if (!v16)
          return 0;
      }
    }
    return 0;
  }
  v22 = 0;
  if ((sub_22F0AAC5C(v11) & 4) != 0 && (a3 & 1) == 0)
  {
    v23 = *(unsigned int *)(a6 + 16);
    if (!(_DWORD)v23)
      return 0;
    v24 = *(_QWORD **)(a6 + 8);
    v25 = 8 * v23;
    while (1)
    {
      v26 = *v24 & 0xFFFFFFFFFFFFFFFCLL;
      v27 = *(_DWORD *)(v26 + 28) & 0x7F;
      if ((v27 - 33) >= 0xA && (*(_DWORD *)(v26 + 28) & 0x5F | 0x20) != 0x2D)
        break;
      ++v24;
      v25 -= 8;
      if (!v25)
        return 0;
    }
    if (v27 == 67 || v27 == 74)
      v30 = 4628;
    else
      v30 = 4629;
    sub_22E8FCA40(a1, a5, v30, 0, (uint64_t)v33);
    v32 = *(_QWORD *)(a6 + 120);
    sub_22E894538((uint64_t)v33, &v32);
    sub_22E903BEC(v33);
    sub_22E8FCA40(a1, *(_DWORD *)(v26 + 24), 0x6Du, 0, (uint64_t)v31);
    sub_22E903BEC(v31);
    return 1;
  }
  return v22;
}

uint64_t sub_22EAC4F0C(uint64_t a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  int v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unsigned int v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  std::string *v43;
  std::string::size_type v44;
  std::string *v45;
  size_t v46;
  void *v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  std::string::size_type v54;
  uint64_t v55;
  uint64_t v57;
  unsigned int v58;
  std::string *v59;
  std::string::size_type v60;
  std::string *v61;
  size_t size;
  std::string *v63;
  std::string::size_type v64;
  std::string *v65;
  std::string *v66;
  size_t v67;
  uint64_t *p_dst;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  char v72;
  int v73;
  uint64_t v74;
  std::string *v75;
  std::string::size_type v76;
  std::string *v77;
  std::string *v78;
  size_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  void *v83;
  char v84;
  __int128 *v85;
  __int128 v86;
  void *v87;
  __int128 v88;
  char v89;
  uint64_t v90;
  std::string v91;
  std::string v92;
  void *__p;
  char v94;
  std::string v95;
  uint64_t __dst;
  __int128 v97;
  _BYTE v98[15];
  uint64_t v99;

  v99 = *MEMORY[0x24BDAC8D0];
  v16 = sub_22E958204(a1, a4, 0);
  if (!v16)
  {
    v22 = 0;
    v28 = 0;
    if ((*(_WORD *)(*(_QWORD *)(a1 + 216) + 8) & 0x7Eu) - 34 < 4)
      return v28;
    goto LABEL_47;
  }
  v17 = v16;
  if (a7)
  {
    if (!sub_22F328FA0(a7))
      goto LABEL_10;
  }
  else
  {
    if (!a8)
      goto LABEL_10;
    v18 = *(_QWORD *)(a8 + 48) & 0xFFFFFFFFFFFFFFF8;
    if (!v18)
    {
LABEL_11:
      v22 = 0;
      goto LABEL_12;
    }
    v19 = 1;
    v20 = *(_QWORD *)(a8 + 48) & 0xFFFFFFFFFFFFFFF8;
    do
    {
      v21 = v19;
      v20 = *(_QWORD *)(v20 + 72);
      if (!v20)
        break;
      ++v19;
    }
    while ((*(_DWORD *)(v20 + 28) & 0x7E) == 0x2E);
    if (v21 != 1 || (*(_DWORD *)(*(_QWORD *)(v18 + 64) + 28) & 0x7F) != 0x43)
    {
LABEL_10:
      LOBYTE(v18) = 0;
      goto LABEL_11;
    }
  }
  v22 = (*(unsigned __int8 *)(*(_QWORD *)(a1 + 72) + 1) >> 4) & 1;
  LOBYTE(v18) = 1;
LABEL_12:
  if ((*(_WORD *)(v17 + 8) & 0x7F) == 0x21)
  {
    v23 = v18 ^ 1;
    if (!a7)
      v23 = 1;
    if ((v23 & 1) == 0 && (*(_BYTE *)(v17 + 12) & 0x80) != 0)
    {
      if ((**(_QWORD **)(a1 + 72) & 0x1000) != 0)
        v24 = 6422;
      else
        v24 = 5398;
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a4, v24, 0, (uint64_t)&__dst);
      v85 = *(__int128 **)a4;
      sub_22E8906A0((uint64_t)&__dst, (uint64_t *)&v85);
      sub_22E903BEC((unsigned int *)&__dst);
    }
    v25 = *(_QWORD *)(v17 - 48);
    v17 = v25 & 0xFFFFFFFFFFFFFFF8;
    if ((v25 & 4) != 0)
      v17 = *(_QWORD *)v17;
  }
  if ((*(_WORD *)(*(_QWORD *)(a1 + 216) + 8) & 0x7Eu) - 34 < 4)
  {
    if (v17)
    {
      if ((*(_WORD *)(v17 + 8) & 0x7Eu) - 34 >= 4)
      {
        if (v22)
          v48 = 6421;
        else
          v48 = 5099;
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a4, v48, 0, (uint64_t)&__dst);
        v85 = *(__int128 **)(a4 + 8);
        v49 = sub_22EA02390((uint64_t)&__dst, (uint64_t *)&v85);
        v92.__r_.__value_.__r.__words[0] = *(_QWORD *)a4;
        sub_22E8906A0(v49, (uint64_t *)&v92);
        sub_22E903BEC((unsigned int *)&__dst);
        return v22 ^ 1u;
      }
      if ((sub_22EFC7ADC(v17) & 1) == 0 && (sub_22E958490((_QWORD *)a1, a4, v17) & 1) != 0)
        return 1;
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) == 0)
      {
        v85 = &v88;
        *(_QWORD *)&v86 = &v88;
        *((_QWORD *)&v86 + 1) = 4;
        LODWORD(v87) = 0;
        v92.__r_.__value_.__r.__words[0] = (std::string::size_type)&v85;
        v26 = *(_QWORD *)(a1 + 216);
        if (v26)
          v27 = v26 - 64;
        else
          v27 = 0;
        v28 = 0;
        if (sub_22EFB3B2C(v27, (uint64_t (*)(uint64_t, uint64_t))sub_22EAEADA4, (uint64_t)&v92))
        {
          v95.__r_.__value_.__r.__words[0] = (std::string::size_type)&v85;
          v29 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v85, (void *)(v17 - 64));
          if ((__int128 *)v86 == v85)
            v30 = (char *)&v86 + 12;
          else
            v30 = (char *)&v86 + 8;
          if (v29 == (void **)(v86 + 8 * *(unsigned int *)v30)
            && sub_22EFB3B2C(v17 - 64, (uint64_t (*)(uint64_t, uint64_t))sub_22EAEADC0, (uint64_t)&v95))
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a4, 0x13EAu, 0, (uint64_t)&__dst);
            v91.__r_.__value_.__r.__words[0] = *(_QWORD *)(a4 + 8);
            v31 = sub_22EA02390((uint64_t)&__dst, (uint64_t *)&v91);
            v32 = *(_QWORD *)(a1 + 216);
            if (v32)
              v33 = v32 - 64;
            else
              v33 = 0;
            *(_QWORD *)v98 = v33;
            v34 = sub_22E890024(v31, (uint64_t *)v98);
            v90 = *(_QWORD *)a4;
            sub_22E8906A0(v34, &v90);
            sub_22E903BEC((unsigned int *)&__dst);
            v28 = 1;
          }
          else
          {
            v28 = 0;
          }
        }
        if ((__int128 *)v86 != v85)
          free((void *)v86);
        return v28;
      }
      v50 = *(_QWORD *)(a1 + 216);
      v51 = v50 ? v50 - 64 : 0;
      __dst = (*(uint64_t (**)(unint64_t))(*(_QWORD *)(v17 - 64) + 32))(v17 - 64);
      if (sub_22EFB3B2C(v51, (uint64_t (*)(uint64_t, uint64_t))sub_22EFB5694, (uint64_t)&__dst))
      {
        if (v22)
        {
          sub_22E8FCA40((_QWORD *)a1, a6, 0x1915u, 0, (uint64_t)&__dst);
          v85 = *(__int128 **)a4;
          sub_22E8906A0((uint64_t)&__dst, (uint64_t *)&v85);
          sub_22E903BEC((unsigned int *)&__dst);
          return 0;
        }
        if (*(_QWORD *)(a1 + 216) == v17)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a4, 0x13E9u, 0, (uint64_t)&__dst);
          v85 = *(__int128 **)a4;
          sub_22E8906A0((uint64_t)&__dst, (uint64_t *)&v85);
          sub_22E903BEC((unsigned int *)&__dst);
          return (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 0x10) == 0;
        }
        if ((*(_BYTE *)(v17 - 36) & 0x80) == 0)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a4, 0x13EAu, 0, (uint64_t)&__dst);
          v85 = *(__int128 **)(a4 + 8);
          v52 = sub_22EA02390((uint64_t)&__dst, (uint64_t *)&v85);
          v53 = *(_QWORD *)(a1 + 216);
          if (v53)
            v54 = v53 - 64;
          else
            v54 = 0;
          v92.__r_.__value_.__r.__words[0] = v54;
          v55 = sub_22E890024(v52, (uint64_t *)&v92);
          v95.__r_.__value_.__r.__words[0] = *(_QWORD *)a4;
          sub_22E8906A0(v55, (uint64_t *)&v95);
          sub_22E903BEC((unsigned int *)&__dst);
        }
        return 1;
      }
    }
    return 0;
  }
  if (v17)
  {
    v35 = 0;
    v28 = 0;
    if ((*(_WORD *)(sub_22EFCBB30(v17) + 8) & 0x7Eu) - 34 >= 4)
      return v28;
    goto LABEL_49;
  }
LABEL_47:
  if (!a3)
    return 0;
  v17 = 0;
  v35 = 1;
LABEL_49:
  if (v22)
    v36 = 6420;
  else
    v36 = 5089;
  sub_22E8FCA40((_QWORD *)a1, a6, v36, 0, (uint64_t)&__dst);
  v85 = *(__int128 **)a4;
  sub_22E8906A0((uint64_t)&__dst, (uint64_t *)&v85);
  sub_22E903BEC((unsigned int *)&__dst);
  v28 = v22 ^ 1u;
  if ((v35 & 1) != 0 || (v22 & 1) != 0)
    return v28;
  v37 = sub_22EFCBB30(v17);
  if (!v37)
    return 1;
  v38 = sub_22E958490((_QWORD *)a1, a4, v37);
  v28 = 1;
  if (!a7 || (v38 & 1) != 0)
    return v28;
  if (sub_22F31CE68(a7))
  {
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a4, 0x1810u, 0, (uint64_t)&__dst);
      *(_DWORD *)v98 = 0;
      v57 = sub_22E8900C4((uint64_t)&__dst, (int *)v98);
      v58 = *(_DWORD *)a4;
      v91.__r_.__value_.__r.__words[0] = *(_QWORD *)a5;
      sub_22EFC683C((uint64_t *)&v91, &v95);
      v59 = std::string::append(&v95, " = ");
      v60 = v59->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v92.__r_.__value_.__l.__data_ = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
      v92.__r_.__value_.__r.__words[2] = v60;
      v59->__r_.__value_.__l.__size_ = 0;
      v59->__r_.__value_.__r.__words[2] = 0;
      v59->__r_.__value_.__r.__words[0] = 0;
      if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v61 = &v92;
      else
        v61 = (std::string *)v92.__r_.__value_.__r.__words[0];
      if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = *((_BYTE *)&v92.__r_.__value_.__s + 23) & 0x7F;
      else
        size = v92.__r_.__value_.__l.__size_;
      sub_22E729148(v61, size, v58, 0, (uint64_t)&v85);
      sub_22E890748(v57, &v85);
      if (SHIBYTE(v88) < 0)
        operator delete(v87);
      if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v92.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v95.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        goto LABEL_114;
      v47 = (void *)v95.__r_.__value_.__r.__words[0];
    }
    else
    {
      sub_22EFC70E8((_QWORD *)a5);
      if ((_DWORD)v39)
        v39 = v39;
      else
        v39 = *(unsigned int *)(a5 + 8);
      v40 = sub_22F141A3C(v39, 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
      sub_22E8FCA40((_QWORD *)a1, v40, 0x1810u, 0, (uint64_t)&__dst);
      LODWORD(v90) = 1;
      v41 = sub_22E8900C4((uint64_t)&__dst, (int *)&v90);
      BYTE12(v86) = 0;
      *(_QWORD *)((char *)&v86 + 4) = 0;
      *(_QWORD *)&v88 = 0;
      *((_QWORD *)&v88 + 1) = 0x700000000000000;
      v89 = 0;
      v85 = (__int128 *)(a2 | ((unint64_t)a2 << 32));
      LOBYTE(v86) = 1;
      strcpy((char *)&v87, "typedef");
      v42 = sub_22E890748(v41, &v85);
      *(_QWORD *)v98 = *(_QWORD *)a5;
      sub_22EFC683C((uint64_t *)v98, &v91);
      v43 = std::string::insert(&v91, 0, " ");
      v44 = v43->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v95.__r_.__value_.__l.__data_ = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
      v95.__r_.__value_.__r.__words[2] = v44;
      v43->__r_.__value_.__l.__size_ = 0;
      v43->__r_.__value_.__r.__words[2] = 0;
      v43->__r_.__value_.__r.__words[0] = 0;
      if ((v95.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v45 = &v95;
      else
        v45 = (std::string *)v95.__r_.__value_.__r.__words[0];
      if ((v95.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v46 = *((_BYTE *)&v95.__r_.__value_.__s + 23) & 0x7F;
      else
        v46 = v95.__r_.__value_.__l.__size_;
      sub_22E729148(v45, v46, v40, 0, (uint64_t)&v92);
      sub_22E890748(v42, &v92);
      if (v94 < 0)
        operator delete(__p);
      if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v95.__r_.__value_.__l.__data_);
      if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v91.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v88) & 0x80000000) == 0)
        goto LABEL_114;
      v47 = v87;
    }
    operator delete(v47);
LABEL_114:
    sub_22E903BEC((unsigned int *)&__dst);
    return v28;
  }
  if (sub_22F329008(a7))
  {
    v85 = 0;
    LOBYTE(v86) = 0;
    *(_QWORD *)((char *)&v86 + 4) = 0;
    BYTE12(v86) = 0;
    v88 = 0uLL;
    v87 = 0;
    v89 = 0;
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) == 0)
    {
LABEL_142:
      sub_22E8FCA40((_QWORD *)a1, a2, 0x1810u, 0, (uint64_t)&__dst);
      v73 = 2;
      goto LABEL_143;
    }
    v90 = *(_QWORD *)a5;
    sub_22EFC683C(&v90, &v91);
    v63 = std::string::insert(&v91, 0, "auto &");
    v64 = v63->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v95.__r_.__value_.__l.__data_ = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
    v95.__r_.__value_.__r.__words[2] = v64;
    v63->__r_.__value_.__l.__size_ = 0;
    v63->__r_.__value_.__r.__words[2] = 0;
    v63->__r_.__value_.__r.__words[0] = 0;
    v65 = std::string::append(&v95, " = ");
    v92 = *v65;
    v65->__r_.__value_.__r.__words[0] = 0;
    v65->__r_.__value_.__l.__size_ = 0;
    v65->__r_.__value_.__r.__words[2] = 0;
    if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v66 = &v92;
    else
      v66 = (std::string *)v92.__r_.__value_.__r.__words[0];
    if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v67 = *((_BYTE *)&v92.__r_.__value_.__s + 23) & 0x7F;
    else
      v67 = v92.__r_.__value_.__l.__size_;
    if (v67 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_170;
    if (v67 >= 0x17)
    {
      v69 = (v67 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v67 | 7) != 0x17)
        v69 = v67 | 7;
      v70 = v69 + 1;
      p_dst = (uint64_t *)operator new(v69 + 1);
      *(_QWORD *)&v97 = v67;
      *((_QWORD *)&v97 + 1) = v70 | 0x8000000000000000;
      __dst = (uint64_t)p_dst;
    }
    else
    {
      HIBYTE(v97) = v67;
      p_dst = &__dst;
      if (!v67)
        goto LABEL_134;
    }
    memmove(p_dst, v66, v67);
LABEL_134:
    *((_BYTE *)p_dst + v67) = 0;
    v71 = (void *)__dst;
    *(_QWORD *)v98 = v97;
    *(_QWORD *)&v98[7] = *(_QWORD *)((char *)&v97 + 7);
    v72 = HIBYTE(v97);
    v85 = (__int128 *)(a2 | ((unint64_t)a2 << 32));
    LOBYTE(v86) = 1;
    *(_WORD *)((char *)&v86 + 1) = __dst;
    BYTE3(v86) = BYTE2(__dst);
    *(_QWORD *)((char *)&v86 + 4) = 0;
    BYTE12(v86) = 0;
    if (SHIBYTE(v88) < 0)
      operator delete(v87);
    v87 = v71;
    *(_QWORD *)&v88 = *(_QWORD *)v98;
    *(_QWORD *)((char *)&v88 + 7) = *(_QWORD *)&v98[7];
    HIBYTE(v88) = v72;
    v89 = 0;
    if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v92.__r_.__value_.__l.__data_);
    if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v95.__r_.__value_.__l.__data_);
    if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v91.__r_.__value_.__l.__data_);
    goto LABEL_142;
  }
  if (!sub_22F328FA0(a7))
    return v28;
  v85 = 0;
  LOBYTE(v86) = 0;
  *(_QWORD *)((char *)&v86 + 4) = 0;
  BYTE12(v86) = 0;
  v88 = 0uLL;
  v87 = 0;
  v89 = 0;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) == 0)
    goto LABEL_167;
  v90 = *(_QWORD *)a5;
  sub_22EFC683C(&v90, &v91);
  v75 = std::string::insert(&v91, 0, "constexpr auto ");
  v76 = v75->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v95.__r_.__value_.__l.__data_ = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
  v95.__r_.__value_.__r.__words[2] = v76;
  v75->__r_.__value_.__l.__size_ = 0;
  v75->__r_.__value_.__r.__words[2] = 0;
  v75->__r_.__value_.__r.__words[0] = 0;
  v77 = std::string::append(&v95, " = ");
  v92 = *v77;
  v77->__r_.__value_.__r.__words[0] = 0;
  v77->__r_.__value_.__l.__size_ = 0;
  v77->__r_.__value_.__r.__words[2] = 0;
  if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v78 = &v92;
  else
    v78 = (std::string *)v92.__r_.__value_.__r.__words[0];
  if ((v92.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v79 = *((_BYTE *)&v92.__r_.__value_.__s + 23) & 0x7F;
  else
    v79 = v92.__r_.__value_.__l.__size_;
  if (v79 > 0x7FFFFFFFFFFFFFF7)
LABEL_170:
    abort();
  if (v79 >= 0x17)
  {
    v81 = (v79 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v79 | 7) != 0x17)
      v81 = v79 | 7;
    v82 = v81 + 1;
    v80 = (uint64_t *)operator new(v81 + 1);
    *(_QWORD *)&v97 = v79;
    *((_QWORD *)&v97 + 1) = v82 | 0x8000000000000000;
    __dst = (uint64_t)v80;
  }
  else
  {
    HIBYTE(v97) = v79;
    v80 = &__dst;
    if (!v79)
      goto LABEL_159;
  }
  memmove(v80, v78, v79);
LABEL_159:
  *((_BYTE *)v80 + v79) = 0;
  v83 = (void *)__dst;
  *(_QWORD *)v98 = v97;
  *(_QWORD *)&v98[7] = *(_QWORD *)((char *)&v97 + 7);
  v84 = HIBYTE(v97);
  v85 = (__int128 *)(a2 | ((unint64_t)a2 << 32));
  LOBYTE(v86) = 1;
  *(_WORD *)((char *)&v86 + 1) = __dst;
  BYTE3(v86) = BYTE2(__dst);
  *(_QWORD *)((char *)&v86 + 4) = 0;
  BYTE12(v86) = 0;
  if (SHIBYTE(v88) < 0)
    operator delete(v87);
  v87 = v83;
  *(_QWORD *)&v88 = *(_QWORD *)v98;
  *(_QWORD *)((char *)&v88 + 7) = *(_QWORD *)&v98[7];
  HIBYTE(v88) = v84;
  v89 = 0;
  if (SHIBYTE(v92.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v92.__r_.__value_.__l.__data_);
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v95.__r_.__value_.__l.__data_);
  if (SHIBYTE(v91.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v91.__r_.__value_.__l.__data_);
LABEL_167:
  sub_22E8FCA40((_QWORD *)a1, a2, 0x1810u, 0, (uint64_t)&__dst);
  if ((**(_QWORD **)(a1 + 72) & 0x200) != 0)
    v73 = 4;
  else
    v73 = 3;
LABEL_143:
  LODWORD(v92.__r_.__value_.__l.__data_) = v73;
  v74 = sub_22E8900C4((uint64_t)&__dst, (int *)&v92);
  sub_22E890748(v74, &v85);
  sub_22E903BEC((unsigned int *)&__dst);
  if (SHIBYTE(v88) < 0)
    operator delete(v87);
  return v28;
}

unint64_t sub_22EAC5B18(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22E46A3A0(a1);
  if (v5 == v6)
    return 0;
  v7 = v5;
  v8 = v6;
  v9 = v4 & 0xFFFFFFFFFFFFFFF0;
  while (1)
  {
    v10 = *(_QWORD *)(**(_QWORD **)(v7 + 16) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v10 + 8) & 0xF) != 0)
      v10 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v7 + 16));
    v11 = *(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 8);
    if (v9 == v11)
      break;
    if ((*(_BYTE *)(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
      *a3 = 1;
    v7 += 24;
    if (v7 == v8)
      return 0;
  }
  return v7;
}

unint64_t sub_22EAC5BD4(_QWORD *a1, uint64_t a2, char a3, int **a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, unint64_t a9, char a10, unint64_t a11)
{
  uint64_t v16;
  unint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t j;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  BOOL v33;
  unsigned int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unint64_t v42;
  int v43;
  int v44;
  int *v45;
  int v46;
  uint64_t v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  int v53;
  unsigned int *v54;
  int v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  char v69;
  char v70;
  int v71;
  char v73;
  uint64_t v74;
  int v75;
  char v76;
  uint64_t v77;
  unint64_t v78[12];
  char v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  int v84;
  void *v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  char v91;
  char v92;
  uint64_t i;

  v16 = a2;
  for (i = *MEMORY[0x24BDAC8D0]; (*(_BYTE *)(v16 + 8) & 0x80) != 0; v16 = *(_QWORD *)v16)
    ;
  if (a10)
    return 0;
  sub_22EA12DB4((uint64_t)a1, a7);
  if (a9 >= 0x10)
  {
    v18 = 0;
    v19 = *(_QWORD *)(a9 & 0xFFFFFFFFFFFFFFF0);
    if (v19 && *(_BYTE *)(v19 + 16) == 57)
      v18 = *(unint64_t **)(v19 + 24);
  }
  else
  {
    v18 = 0;
  }
  v20 = a1[27];
  v80 = v82;
  v81 = v83;
  if ((sub_22EA14140(a1, v20, (uint64_t)&v80) & 1) != 0)
    return 0;
  v71 = sub_22EE67290((uint64_t)a1, *(_DWORD *)(a7 + 24), v18, 2);
  if (!v71)
    goto LABEL_27;
  v68 = a3;
  v23 = *v18;
  v66 = a1[11];
  v67 = *(_QWORD *)(v66 + 16480);
  for (j = *v18; ; j = sub_22F115B7C(j))
  {
    while (1)
    {
      if ((j & 0xF) != 0)
        goto LABEL_24;
      v25 = *(unsigned __int8 *)(*(_QWORD *)(j & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v25 <= 0x39)
        break;
LABEL_19:
      if (sub_22F115668(j))
        v23 = j;
      j = sub_22F115B7C(j);
      if (!j)
        goto LABEL_26;
    }
    if (v25 == 24)
      goto LABEL_25;
    if (v25 == 26)
      break;
    if (((1 << v25) & 0x20000000200003CLL) == 0)
      goto LABEL_19;
LABEL_24:
    ;
  }
  if ((*(_BYTE *)(j + 23) & 0x10) == 0)
    goto LABEL_24;
LABEL_25:
  v23 = j;
LABEL_26:
  v26 = sub_22F115668(v23);
  v18 = sub_22EF579A8(v66, v67, v26);
  a3 = v68;
LABEL_27:
  if (a5)
  {
    v27 = a1[27];
    v28 = *(_WORD *)(v27 + 8) & 0x7F;
    v29 = -40;
    if (v28 > 0x46)
    {
      if (v28 != 83)
      {
        if (v28 == 71)
        {
          v29 = -56;
        }
        else if (v28 != 81)
        {
LABEL_40:
          if (v28 - 52 < 6)
          {
            v29 = -72;
          }
          else
          {
            v29 = -48;
            if (v28 - 33 < 5)
              v29 = -64;
          }
        }
      }
    }
    else
    {
      if (v28 > 0x18)
        goto LABEL_39;
      if (v28 == 16)
        goto LABEL_31;
      if (((1 << v28) & 0x1066) == 0)
      {
        if (v28 == 24)
        {
LABEL_31:
          v29 = -48;
        }
        else
        {
LABEL_39:
          if (v28 != 70)
            goto LABEL_40;
          v29 = -64;
        }
      }
    }
    if (sub_22EFB9D84(v27 + v29))
      v30 = 1;
    else
      v30 = 2;
  }
  else
  {
    v30 = 1;
  }
  sub_22EA406B0((uint64_t)&v84, (uint64_t)a1, &v82, 0, v30);
  sub_22EC63520((uint64_t)a1, (uint64_t)&v84, (_QWORD *)v16, 0, 0);
  if (v84 == 2)
  {
    v31 = *(_QWORD *)v85 & 0xFFFFFFFFFFFFFFFCLL;
    v32 = *(_DWORD *)(v31 + 28) & 0x7F;
    v33 = v32 > 0x2F || ((1 << v32) & 0xC00000060000) == 0;
    v34 = *(_DWORD *)(v31 + 28) & 0x7F;
    if (!v33)
      v34 = *(_DWORD *)(sub_22EFBAEA4(*(_QWORD *)v85 & 0xFFFFFFFFFFFFFFFCLL) + 28) & 0x7F;
    v35 = v34 > 0x3B;
    v36 = (1 << v34) & 0x800004100000000;
    if (!v35 && v36 != 0)
    {
      v70 = a3;
      v55 = *(_DWORD *)(a7 + 24);
      if (v32 <= 0x2F && ((1 << v32) & 0xC00000060000) != 0)
        v31 = sub_22EFBAEA4(v31);
      sub_22F34553C((uint64_t)a1, v55, v31);
      v84 = 0;
      v86 = 0;
      if (v88)
      {
        v57 = sub_22EC6CBD0(v88);
        MEMORY[0x2348A0E9C](v57, 0x10E0C409F09D3C3);
      }
      v92 = 0;
      v88 = 0;
      v89 = 0;
      a3 = v70;
    }
  }
  v39 = *(_QWORD *)(a7 + 8);
  v38 = a7 + 8;
  v40 = a6;
  v41 = sub_22EFC46F8(a1[11], a1[27], a6, *(_DWORD *)(v38 + 16), v39, (uint64_t)v18);
  v42 = v41;
  *(_DWORD *)(v41 + 28) = *(_DWORD *)(v41 + 28) & 0xFFFF9FFF | ((a3 & 3) << 13);
  if (v71)
    sub_22EFC77E8(v41, 1);
  sub_22EA63DD8(a1, v16, v42, a8, 1);
  sub_22E91049C((uint64_t)a1, v16, v42);
  sub_22E9114FC(a1, v42);
  sub_22EA1C0F0((uint64_t)a1, v16, v42);
  v43 = *(_DWORD *)(v42 + 28);
  v79 = 0;
  if (!a5)
  {
    if (a11 && (*(_DWORD *)(a11 + 28) & 0x7Fu) - 33 <= 4)
    {
      sub_22EA10DE0((uint64_t)a1, a11, v42);
      sub_22EA10BEC(a1, a11, v16);
    }
    sub_22EA1C3E4(a1, (uint64_t *)v16, a1[27], v42, (uint64_t)&v84, &v79);
    goto LABEL_70;
  }
  if (a5 != 1)
  {
    sub_22E8FCA40(a1, v40, 0xA30u, 0, (uint64_t)v78);
    v44 = a4[a5 - 1][2];
    LODWORD(v77) = *a4[1];
    HIDWORD(v77) = v44;
    sub_22E8906A0((uint64_t)v78, &v77);
    sub_22E903BEC((unsigned int *)v78);
  }
  v45 = *a4;
  if ((sub_22ED5CF60(a1, (uint64_t *)v16, *a4) & 1) != 0)
  {
    v21 = 0;
    goto LABEL_110;
  }
  v69 = a3;
  v46 = v71 | ((v43 & 0x80) >> 7);
  sub_22EA04CD4((uint64_t)a1, (uint64_t)&v84, a1[27], (uint64_t *)v16, 0, 0);
  if (!v86)
  {
    v50 = 0;
    v49 = 0;
    goto LABEL_109;
  }
  v79 = 1;
  if (v84 == 2)
  {
    v47 = *(_QWORD *)v85 & 0xFFFFFFFFFFFFFFFCLL;
    v48 = *(_DWORD *)(v47 + 28) & 0x7F;
    if (v48 <= 0x2F && ((1 << v48) & 0xC00000060000) != 0)
    {
      v47 = sub_22EFBAEA4(v47);
      v48 = *(_DWORD *)(v47 + 28) & 0x7F;
    }
    if (v48 == 30)
      v49 = v47;
    else
      v49 = 0;
  }
  else
  {
    v49 = 0;
  }
  if (v49)
    v51 = 1;
  else
    v51 = v71 | ((v43 & 0x80) >> 7);
  if ((v51 & 1) != 0)
  {
    if (v49)
      v52 = v71 | ((v43 & 0x80) >> 7);
    else
      v52 = 1;
    if ((v52 & 1) != 0)
    {
LABEL_89:
      v50 = 0;
      goto LABEL_109;
    }
    if ((*(_BYTE *)(v49 + 28) & 0x80) != 0)
    {
      v50 = 0;
    }
    else
    {
      v46 = 1;
      if (!sub_22ED5D218(a1, (uint64_t)v45, *(_QWORD *)(v49 + 56), 1, 0, 0))
        goto LABEL_89;
      v50 = *(_QWORD *)(sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v49 + 72) + 64), *(_QWORD *)(v49 + 72)) + 56);
      v58 = *(_QWORD *)(v49 + 48);
      v59 = *(_QWORD *)((*(_QWORD *)(v58 + 80) & 0xFFFFFFFFFFFFFFF8)
                      + ((2 * *(_QWORD *)(v58 + 80)) & 8));
      v60 = *(_QWORD *)((*(_QWORD *)(v42 + 80) & 0xFFFFFFFFFFFFFFF8)
                      + ((2 * *(_QWORD *)(v42 + 80)) & 8));
      if ((*(_QWORD *)((v59 & 0xFFFFFFFFFFFFFFF0) + 8) | v59 & 7) != (*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFFF0) + 8) | v60 & 7))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v42 + 24), 0x1218u, 0, (uint64_t)v78);
        v75 = 2;
        v61 = sub_22E8900C4((uint64_t)v78, &v75);
        v77 = *(_QWORD *)((*(_QWORD *)(v42 + 80) & 0xFFFFFFFFFFFFFFF8)
                        + ((2 * *(_QWORD *)(v42 + 80)) & 8));
        v62 = sub_22E8901B8(v61, &v77);
        v74 = *(_QWORD *)((*(_QWORD *)(v58 + 80) & 0xFFFFFFFFFFFFFFF8)
                        + ((2 * *(_QWORD *)(v58 + 80)) & 8));
        sub_22E8901B8(v62, &v74);
        sub_22E903BEC((unsigned int *)v78);
        v53 = *(_DWORD *)(v58 + 24);
        if (v53)
        {
          v54 = (unsigned int *)&v73;
LABEL_92:
          sub_22E8FCA40(a1, v53, 0x6Du, 0, (uint64_t)v54);
          sub_22E903BEC(v54);
          v46 = 1;
        }
        goto LABEL_109;
      }
    }
    v46 = 0;
    goto LABEL_109;
  }
  sub_22E8FCA40(a1, v40, 0x1215u, 0, (uint64_t)v78);
  sub_22E8BAE44((uint64_t)v78, (uint64_t *)v38);
  sub_22E903BEC((unsigned int *)v78);
  v50 = 0;
  v53 = *(_DWORD *)((*(_QWORD *)v85 & 0xFFFFFFFFFFFFFFFCLL) + 24);
  if (v53)
  {
    v54 = (unsigned int *)&v76;
    goto LABEL_92;
  }
  v46 = 1;
  v49 = 0;
LABEL_109:
  v21 = 0;
  if ((sub_22ED5D528(a1, (uint64_t)v45, v50, 7, 0) & 1) == 0)
  {
    v63 = sub_22F3B9190(a1[11], a1[27], v40, *(_QWORD *)v38, (uint64_t)v45, v42);
    v64 = v63;
    *(_QWORD *)(v42 + 88) = v63;
    *(_DWORD *)(v63 + 28) = *(_DWORD *)(v63 + 28) & 0xFFFF9FFF | ((v69 & 3) << 13);
    if (v46)
    {
      sub_22EFC77E8(v63, 1);
    }
    else if (v49)
    {
      sub_22EA0F280((unint64_t *)(v63 + 64), v49);
      sub_22F31D1E8(a1, v64, v49);
    }
    v42 = v64;
LABEL_70:
    sub_22EA0483C((uint64_t)a1, v42, (uint64_t *)v16, 1);
    v78[0] = v42;
    sub_22EA2DB10((unint64_t)a1, v78, 1uLL);
    v21 = v42;
  }
LABEL_110:
  if (v91)
  {
    if (v84 == 5)
    {
      sub_22EC64D18(v90, (uint64_t)&v84);
    }
    else if (v89 && (*(_DWORD *)(v90[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v90, (uint64_t)&v84);
    }
  }
  if (v88)
  {
    v65 = sub_22EC6CBD0(v88);
    MEMORY[0x2348A0E9C](v65, 0x10E0C409F09D3C3);
  }
  if (v85 != &v87)
    free(v85);
  return v21;
}

unint64_t sub_22EAC64E0(_QWORD *a1, uint64_t *a2, int a3, int a4, uint64_t a5, uint64_t *a6, int a7, uint64_t a8)
{
  uint64_t v11;
  unint64_t v16;
  _DWORD *v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  _DWORD *v28;
  BOOL v29;
  unsigned int v30;
  unsigned int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  BOOL v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t *v50;
  _QWORD *v51;
  uint64_t v52;
  unsigned __int8 *v53;
  unsigned __int8 **v54;
  unsigned __int8 *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  _BYTE v59[96];
  uint64_t v60[2];
  uint64_t v61;
  unsigned __int8 *v62;
  uint64_t v63;
  char v64;
  unsigned int v65;
  char v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  _BYTE v73[33];
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  int v79;
  _QWORD v80[3];
  __int16 v81;
  char v82;
  int v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  _BYTE v87[64];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  int v93;
  _BYTE v94[24];
  int v95;
  __int16 v96;
  char v97;
  uint64_t v98;

  v11 = a5;
  v98 = *MEMORY[0x24BDAC8D0];
  v68 = a7;
  v67 = a5;
  v84 = 0;
  v85 = v87;
  v86 = 0x800000000;
  v88 = 0;
  v89 = 0;
  v90 = 0;
  v91 = a1;
  v92 = a8;
  v93 = a7;
  sub_22EFC6D6C((uint64_t)v94, a8);
  *(_OWORD *)&v94[8] = xmmword_22F45EEC0;
  v95 = 16842752;
  v96 = 0;
  v97 = 0;
  sub_22EC56024((uint64_t)&v84);
  sub_22EC64BE8((uint64_t)a1, (uint64_t)&v84, (uint64_t)a2, (uint64_t)a6, 0, 0);
  v16 = 0;
  if ((_DWORD)v84 == 5)
    goto LABEL_79;
  if (!(_DWORD)v86)
  {
    if (!sub_22EAC24EC((uint64_t)a1, (uint64_t)&v84, a2, a6, a8))
    {
      sub_22E8FCA40(a1, a7, 0x13u, 0, (uint64_t)&v70);
      v60[0] = *a6;
      sub_22E8906A0((uint64_t)&v70, v60);
      sub_22E903BEC((unsigned int *)&v70);
      v16 = 0;
      goto LABEL_79;
    }
    v11 = v67;
  }
  v58 = a3;
  v17 = (_DWORD *)(*(_QWORD *)v85 & 0xFFFFFFFFFFFFFFFCLL);
  v18 = a4;
  v70 = 0;
  v71 = v73;
  v72 = 0x800000000;
  v74 = 0;
  v75 = 0;
  v76 = 0;
  v77 = a1;
  v78 = v11;
  v79 = a4;
  sub_22EFC6D6C((uint64_t)v80, v11);
  v80[1] = 0;
  v80[2] = 0;
  v81 = 1;
  v82 = 1;
  v83 = 0;
  sub_22EC56024((uint64_t)&v70);
  sub_22EC63520((uint64_t)a1, (uint64_t)&v70, a2, 0, 0);
  if ((_DWORD)v70 == 2)
  {
    v19 = *(_QWORD *)v71 & 0xFFFFFFFFFFFFFFFCLL;
    v20 = *(_DWORD *)(v19 + 28) & 0x7F;
    v21 = v20;
    if (v20 <= 0x2F)
    {
      v21 = *(_DWORD *)(v19 + 28) & 0x7F;
      if (((1 << v20) & 0xC00000060000) != 0)
        v21 = *(_DWORD *)(sub_22EFBAEA4(*(_QWORD *)v71 & 0xFFFFFFFFFFFFFFFCLL) + 28) & 0x7F;
    }
    if (v21 <= 0x3B && ((1 << v21) & 0x800004100000000) != 0)
    {
      if (v20 <= 0x2F && ((1 << v20) & 0xC00000060000) != 0)
        v19 = sub_22EFBAEA4(v19);
      sub_22F34553C((uint64_t)a1, v18, v19);
      LODWORD(v70) = 0;
      LODWORD(v72) = 0;
      if (v74)
      {
        v22 = sub_22EC6CBD0(v74);
        MEMORY[0x2348A0E9C](v22, 0x10E0C409F09D3C3);
      }
      BYTE2(v83) = 0;
      v74 = 0;
      v75 = 0;
    }
  }
  sub_22EA04CD4((uint64_t)a1, (uint64_t)&v70, a1[27], a2, 0, 0);
  if ((_DWORD)v70 != 2)
    goto LABEL_47;
  v23 = *(_QWORD *)v71 & 0xFFFFFFFFFFFFFFFCLL;
  v24 = *(_DWORD *)(v23 + 28) & 0x7F;
  if (v24 == 17)
    v25 = *(_QWORD *)v71 & 0xFFFFFFFFFFFFFFFCLL;
  else
    v25 = 0;
  if (!v25)
  {
    if ((*(_BYTE *)(v23 + 8) & 4) != 0)
    {
      if (!sub_22EC62AF4((uint64_t)a1, *(_QWORD *)v71 & 0xFFFFFFFFFFFFFFFCLL))
      {
LABEL_47:
        v25 = 0;
LABEL_48:
        sub_22EB17F48((uint64_t)a1, v17, (unsigned int *)&v68, 1, 0, 0, 0, 0);
        v32 = 0;
        v33 = 0;
        v34 = a1[11];
        v35 = a1[27];
        v37 = a6[1];
        v36 = a6 + 1;
        if (v37)
        {
          v32 = sub_22F0ABC50(v36, a1[11]);
          v33 = v38;
        }
        v39 = sub_22EFD8CD4(v34, v35, v58, v18, v67, v32, v33, v68, (unint64_t)v17);
        v16 = v39;
        if (v25)
        {
          v40 = *(_QWORD *)(v25 + 56);
          *(_QWORD *)(v39 + 56) = v40;
          v41 = sub_22E3CD31C((uint64_t *)(v40 + 48), v40);
          *(_QWORD *)(v16 + 48) = v41 & 0xFFFFFFFFFFFFFFFCLL;
          *(_DWORD *)(v16 + 28) |= *(_DWORD *)(v41 + 28) & 0x260000;
          sub_22E7B7A74(*(_QWORD *)(v16 + 56) + 48, v16);
        }
        sub_22EA0483C((uint64_t)a1, v16, a2, 1);
        goto LABEL_70;
      }
      v24 = *(_DWORD *)(v23 + 28) & 0x7F;
    }
    if (v24 <= 0x2F && ((1 << v24) & 0xC00000060000) != 0)
      v24 = *(_DWORD *)(sub_22EFBAEA4(v23) + 28) & 0x7F;
    if (v24 == 16)
      v30 = 4628;
    else
      v30 = 4629;
    sub_22E8FCA40(a1, v18, v30, 0, (uint64_t)v60);
    sub_22E8BAE44((uint64_t)v60, &v67);
    sub_22E903BEC((unsigned int *)v60);
    sub_22E8FCA40(a1, *(_DWORD *)(v23 + 24), 0x6Du, 0, (uint64_t)v59);
    v31 = (unsigned int *)v59;
    goto LABEL_69;
  }
  v26 = *(_QWORD *)v71 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v26 = *(_QWORD *)(v26 + 88);
    if (v26)
      v27 = (*(_DWORD *)(v26 + 28) & 0x7F) == 17;
    else
      v27 = 0;
  }
  while (v27);
  if (v17)
  {
    if ((v17[7] & 0x7F) == 0x10)
    {
      v28 = v17;
    }
    else
    {
      if ((v17[7] & 0x7F) != 0x11)
        goto LABEL_55;
      v28 = v17;
      do
      {
        v28 = (_DWORD *)*((_QWORD *)v28 + 11);
        if (v28)
          v29 = (v28[7] & 0x7F) == 17;
        else
          v29 = 0;
      }
      while (v29);
    }
    v42 = (uint64_t)(v28 + 12);
    v43 = sub_22EFCC008(v26 + 48);
    if (v43 == sub_22EFCC008(v42))
      goto LABEL_48;
  }
LABEL_55:
  if ((*(_BYTE *)(v23 + 8) & 4) != 0 && !sub_22EC62AF4((uint64_t)a1, v23))
    goto LABEL_47;
  sub_22E8FCA40(a1, v18, 0x1216u, 0, (uint64_t)v60);
  sub_22E8BAE44((uint64_t)v60, &v67);
  sub_22E903BEC((unsigned int *)v60);
  sub_22E8FCA40(a1, *(_DWORD *)(v25 + 24), 0x1777u, 0, (uint64_t)v60);
  do
  {
    v23 = *(_QWORD *)(v23 + 88);
    if (v23)
      v44 = (*(_DWORD *)(v23 + 28) & 0x7F) == 17;
    else
      v44 = 0;
  }
  while (v44);
  if (v64)
  {
    v45 = v62;
    if (!v62)
    {
      v45 = (unsigned __int8 *)sub_22E3B8AAC(v63);
      v62 = v45;
    }
    v45[*v45 + 1] = 11;
    v46 = v62;
  }
  else
  {
    if (!v66)
      goto LABEL_68;
    v49 = v61;
    v50 = (uint64_t *)(v60[0] + 12784);
    if (v61)
      v49 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v61 + 32))(v61);
    v69 = v49;
    v51 = sub_22F2F1D6C(v50, &v69);
    v52 = v51[1] + 32 * v65;
    v55 = *(unsigned __int8 **)(v52 + 8);
    v54 = (unsigned __int8 **)(v52 + 8);
    v53 = v55;
    if (!v55)
    {
      v53 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v54[1]);
      *v54 = v53;
    }
    v53[*v53 + 1] = 11;
    v46 = *v54;
  }
  v47 = *v46;
  *v46 = v47 + 1;
  *(_QWORD *)&v46[8 * v47 + 16] = v23;
LABEL_68:
  v31 = (unsigned int *)v60;
LABEL_69:
  sub_22E903BEC(v31);
  v16 = 0;
LABEL_70:
  if ((_BYTE)v83)
  {
    if ((_DWORD)v70 == 5)
    {
      sub_22EC64D18(v77, (uint64_t)&v70);
    }
    else if (v75 && (*(_DWORD *)(v77[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v77, (uint64_t)&v70);
    }
  }
  if (v74)
  {
    v57 = sub_22EC6CBD0(v74);
    MEMORY[0x2348A0E9C](v57, 0x10E0C409F09D3C3);
  }
  if (v71 != v73)
    free(v71);
LABEL_79:
  if (HIBYTE(v95))
  {
    if ((_DWORD)v84 == 5)
    {
      sub_22EC64D18(v91, (uint64_t)&v84);
    }
    else if (v89 && (*(_DWORD *)(v91[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v91, (uint64_t)&v84);
    }
  }
  if (v88)
  {
    v56 = sub_22EC6CBD0(v88);
    MEMORY[0x2348A0E9C](v56, 0x10E0C409F09D3C3);
  }
  if (v85 != v87)
    free(v85);
  return v16;
}

void sub_22EAC6C64(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t i;
  unint64_t *v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  unsigned int v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _BYTE v27[64];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  _QWORD v34[3];
  __int16 v35;
  char v36;
  int v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a3 + 40);
  v24 = 0;
  v25 = v27;
  v26 = 0x800000000;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = a1;
  v32 = v6;
  v33 = 0;
  sub_22EFC6D6C((uint64_t)v34, v6);
  v34[1] = 0;
  v34[2] = 0;
  v35 = 257;
  v36 = 1;
  v37 = 0;
  sub_22EC56024((uint64_t)&v24);
  v7 = *(_WORD *)(a3 + 80) & 0x7F;
  v8 = -40;
  if (v7 > 0x46)
  {
    if (v7 == 83)
      goto LABEL_5;
    if (v7 == 71)
    {
      v8 = -56;
      goto LABEL_5;
    }
    if (v7 != 81)
    {
LABEL_38:
      v20 = v7 - 52;
      v21 = v7 - 33 >= 5;
      v22 = -48;
      if (!v21)
        v22 = -64;
      if (v20 >= 6)
        v8 = v22;
      else
        v8 = -72;
    }
  }
  else
  {
    if (v7 > 0x18)
      goto LABEL_37;
    if (v7 == 16)
    {
LABEL_4:
      v8 = -48;
      goto LABEL_5;
    }
    if (((1 << v7) & 0x1066) == 0)
    {
      if (v7 == 24)
        goto LABEL_4;
LABEL_37:
      if (v7 == 70)
      {
        v8 = -64;
        goto LABEL_5;
      }
      goto LABEL_38;
    }
  }
LABEL_5:
  v9 = *(_QWORD *)(a3 + 72 + v8 + 16);
  v10 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  if ((v9 & 4) != 0)
    v10 = (_QWORD *)*v10;
  for (i = sub_22EFCE144((unint64_t)v10, v6); i; i = v12[1])
  {
    v12 = (unint64_t *)(i & 0xFFFFFFFFFFFFFFF8);
    v13 = (i & 0xFFFFFFFFFFFFFFF8) == 0 || (i & 4) == 0;
    if (v13)
      v14 = i & 0xFFFFFFFFFFFFFFF8;
    else
      v14 = *v12;
    v15 = sub_22EAC6F40((uint64_t)&v24, v14);
    if (v15)
    {
      v16 = v15;
      v17 = *(unsigned int *)(v15 + 28);
      v18 = v26;
      if (v26 >= (unint64_t)HIDWORD(v26))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v18 = v26;
      }
      *((_QWORD *)v25 + v18) = (v17 >> 13) & 3 | v16;
      LODWORD(v26) = v26 + 1;
      LODWORD(v24) = 2;
    }
    if (v13)
      break;
  }
  sub_22EC561E4((uint64_t)&v24);
  LOBYTE(v37) = 0;
  v19 = sub_22E49F868(a3);
  sub_22EA23284((unint64_t)a1, a2, (_QWORD *)a3, (uint64_t)&v24, 0, v19);
  if ((_BYTE)v37)
  {
    if ((_DWORD)v24 == 5)
    {
      sub_22EC64D18(v31, (uint64_t)&v24);
    }
    else if (v29 && (*(_DWORD *)(v31[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v31, (uint64_t)&v24);
    }
  }
  if (v28)
  {
    v23 = sub_22EC6CBD0(v28);
    MEMORY[0x2348A0E9C](v23, 0x10E0C409F09D3C3);
  }
  if (v25 != v27)
    free(v25);
}

unint64_t sub_22EAC6F40(uint64_t a1, unint64_t a2)
{
  _DWORD *v2;

  if ((*(_WORD *)(a1 + 156) & *(_WORD *)(a2 + 30) & 0x3FFF) == 0)
    return 0;
  v2 = (_DWORD *)a2;
  if ((*(_BYTE *)(a2 + 8) & 4) != 0
    && (sub_22EC62AF4(*(_QWORD *)(a1 + 112), a2) & 1) == 0
    && !sub_22EAE791C(a1, (unint64_t)v2))
  {
    return sub_22EC63394(a1, v2);
  }
  return (unint64_t)v2;
}

unint64_t sub_22EAC6FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t a5, int a6, int a7)
{
  unint64_t result;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  int v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  int v31;

  BYTE2(v25) = 0;
  *((_QWORD *)&v25 + 1) = 0;
  v28 = 0;
  v27 = 0u;
  v30 = 0u;
  v31 = 0;
  v26 = 9;
  v29 = a2;
  LOWORD(v25) = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15064) + 24))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15064), 0);
  *(_QWORD *)((char *)&v25 + 4) = (a6 == 13) | (a6 << 11) | ((a7 & ~(a7 >> 31)) << 9);
  result = sub_22EF63D8C(*(_QWORD *)(a1 + 88), a3, a4, a5, &v25, 0);
  *(_QWORD *)(a2 + 48) = result;
  if (*(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956))
    return result;
  v15 = *(_WORD *)(a2 + 80) & 0x7F;
  v16 = -40;
  if (v15 > 0x46)
  {
    if (v15 != 83)
    {
      if (v15 == 71)
      {
        v16 = -56;
        goto LABEL_18;
      }
      if (v15 == 81)
        goto LABEL_18;
      goto LABEL_13;
    }
  }
  else
  {
    if (v15 > 0x18)
      goto LABEL_12;
    if (v15 != 16)
    {
      if (((1 << v15) & 0x1066) != 0)
        goto LABEL_18;
      if (v15 != 24)
      {
LABEL_12:
        if (v15 == 70)
        {
          v16 = -64;
          goto LABEL_18;
        }
LABEL_13:
        v17 = v15 - 52;
        v18 = v15 - 33 >= 5;
        v19 = -48;
        if (!v18)
          v19 = -64;
        if (v17 >= 6)
          v16 = v19;
        else
          v16 = -72;
        goto LABEL_18;
      }
    }
    v16 = -48;
  }
LABEL_18:
  v20 = *(_QWORD *)(a2 + 72 + v16 + 16);
  v21 = (_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF8);
  if ((v20 & 4) != 0)
    v21 = (_QWORD *)*v21;
  if (v21)
    v22 = v21 - 8;
  else
    v22 = 0;
  v23 = v22[16];
  if (v23 && ((*(unsigned __int16 *)(v23 + 8) | (*(unsigned __int8 *)(v23 + 10) << 16)) & 0x100000) != 0)
  {
    result = (unint64_t)sub_22EF579A8(*(_QWORD *)(a1 + 88), result, 0);
    v24 = *(_QWORD *)(a2 + 56);
    if ((v24 & 4) != 0)
      *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF8) + 32) = result;
    else
      *(_QWORD *)(a2 + 56) = result & 0xFFFFFFFFFFFFFFFBLL;
  }
  return result;
}

uint64_t sub_22EAC71A0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  int v13;
  char v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a3 & 0xFFFFFFFFFFFFFFF8 | a4;
  v8 = a3 + 64;
  if (!a3)
    v8 = 0;
  *(_QWORD *)(a1 + 16) = a2;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 216);
  v9 = *(_QWORD *)(a2 + 3200);
  *(_QWORD *)(a2 + 3200) = 0;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 10288);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 1944);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 2192);
  *(_QWORD *)(a2 + 216) = v8;
  *(_QWORD *)(a2 + 10288) = 0;
  *(_DWORD *)(a2 + 1944) = *(_DWORD *)(a2 + 1904);
  *(_DWORD *)(a2 + 2192) = *(_DWORD *)(a2 + 1960);
  sub_22E3BA850(a2 + 8664, *(const void **)(a1 + 8));
  *(_BYTE *)(a1 + 56) = v10 ^ 1;
  if (v10 != 1)
  {
    llvm::FoldingSetBase::clear((llvm::FoldingSetBase *)(a2 + 8312));
  }
  else
  {
    v11 = *(_DWORD *)(a3 + 24);
    v13 = 11;
    v14 = 0;
    v15 = v11;
    v17 = 0;
    v18 = 0;
    v16 = a3;
    v19 = a4;
    v20 = 0;
    v21 = 0;
    sub_22EE012D0(a2, (unint64_t)&v13);
  }
  return a1;
}

void **sub_22EAC72A0(void **a1)
{
  _QWORD *v2;
  void **v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  void *v8;

  if (!*((_BYTE *)a1 + 56))
  {
    v2 = *a1;
    v3 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)((char *)*a1 + 8664), a1[1]);
    v4 = v2[1084];
    v5 = 8680;
    if (v4 == v2[1083])
      v5 = 8684;
    if (v3 != (void **)(v4 + 8 * *(unsigned int *)((char *)v2 + v5)))
    {
      *v3 = (void *)-2;
      ++*((_DWORD *)v2 + 2172);
    }
    sub_22EE013E8((int32x2_t *)*a1);
  }
  v6 = a1[3];
  if (v6)
  {
    v7 = a1[2];
    v7[27] = v6;
    v8 = a1[5];
    v7[400] = a1[4];
    v7[1286] = v8;
    LODWORD(v8) = *((_DWORD *)a1 + 13);
    *((_DWORD *)v7 + 486) = *((_DWORD *)a1 + 12);
    *((_DWORD *)v7 + 548) = (_DWORD)v8;
    a1[3] = 0;
  }
  return a1;
}

uint64_t sub_22EAC7348(uint64_t result, unsigned int a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 *v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27[6];
  char v28;
  int v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v3 = *(_QWORD *)(a3 + 80);
  if ((v3 & 0x800000000) != 0 || (*(_BYTE *)(a3 + 28) & 0x80) != 0)
    return result;
  v6 = result;
  v7 = a3 + 72;
  v8 = v3 & 0x7F;
  v9 = -40;
  if (v8 > 70)
  {
    if (v8 == 83)
      goto LABEL_19;
    if (v8 == 71)
    {
      v9 = -56;
      goto LABEL_19;
    }
    if (v8 != 81)
    {
LABEL_14:
      v10 = v8 - 52;
      v11 = (v8 - 33) >= 5;
      v12 = -48;
      if (!v11)
        v12 = -64;
      if (v10 >= 6)
        v9 = v12;
      else
        v9 = -72;
    }
  }
  else
  {
    if (v8 > 0x18)
      goto LABEL_13;
    if (v8 == 16)
    {
LABEL_6:
      v9 = -48;
      goto LABEL_19;
    }
    if (((1 << v8) & 0x1066) == 0)
    {
      if (v8 == 24)
        goto LABEL_6;
LABEL_13:
      if (v8 == 70)
      {
        v9 = -64;
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
LABEL_19:
  v13 = *(_QWORD *)(v7 + v9 + 16);
  v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
  if ((v13 & 4) != 0)
    v14 = (_QWORD *)*v14;
  if (v14)
    v15 = (uint64_t)(v14 - 8);
  else
    v15 = 0;
  sub_22EAE5FA8((uint64_t)v27, result, v7);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v16)
    v17 = *(_BYTE *)(v16 + 16) == 26;
  else
    v17 = 0;
  if (!v17)
    sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
  sub_22EB14850(v6, a2);
  sub_22EAB631C(v6, a2, v15, 0);
  v18 = *(_QWORD *)(v27[0] + 216);
  v19 = *(_WORD *)(v18 + 8) & 0x7F;
  v20 = -40;
  if (v19 > 0x46)
  {
    switch(v19)
    {
      case 'S':
        goto LABEL_44;
      case 'G':
        v20 = -56;
        goto LABEL_44;
      case 'Q':
        goto LABEL_44;
    }
    goto LABEL_40;
  }
  if (v19 > 0x18)
    goto LABEL_39;
  if (v19 != 16)
  {
    if (((1 << v19) & 0x1066) != 0)
      goto LABEL_44;
    if (v19 != 24)
    {
LABEL_39:
      if (v19 == 70)
      {
LABEL_42:
        v20 = -64;
        goto LABEL_44;
      }
LABEL_40:
      if (v19 - 52 < 6)
      {
        v20 = -72;
        goto LABEL_44;
      }
      if (v19 - 33 < 5)
        goto LABEL_42;
    }
  }
  v20 = -48;
LABEL_44:
  v29 = 13;
  v30 = 0;
  v31 = a2;
  v33 = 0;
  v34 = 0;
  v32 = v18 + v20;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  sub_22EE012D0(v27[0], (unint64_t)&v29);
  v28 = 1;
  if (sub_22EAAFD60((_QWORD *)v6, a3, 0, 0, 0))
  {
    sub_22EFC77E8(a3, 1);
  }
  else
  {
    v21 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a3 + 16))(a3);
    v22 = HIDWORD(v21);
    if (!HIDWORD(v21))
      LODWORD(v22) = *(_DWORD *)(a3 + 24);
    v23 = (unsigned __int8 *)sub_22E3CD3D4(*(_QWORD *)(v6 + 88) + 2032, 16, 3);
    *v23 = 8;
    if (byte_255E04EB3)
    {
      v24 = sub_22F0D3748(8);
      ++*((_DWORD *)v24 + 2);
    }
    *((_DWORD *)v23 + 1) = v22;
    *((_DWORD *)v23 + 2) = v22;
    *(_DWORD *)v23 = *v23;
    *(_QWORD *)(a3 + 80) &= ~0x8000000uLL;
    *(_QWORD *)(a3 + 128) = v23;
    sub_22F0D60E4((uint64_t)v23);
    *(_DWORD *)(a3 + 140) = v25;
    sub_22EFC9100(a3, *(_QWORD *)(v6 + 88));
    v26 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v6 + 96) + 136))(*(_QWORD *)(v6 + 96));
    if (v26)
      (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v26 + 88))(v26, a3);
    sub_22EAAF8FC(v6, a3);
  }
  return sub_22EAE7390((uint64_t)v27);
}

unint64_t sub_22EAC7678(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int v46;
  int v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int i;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  size_t v56;
  void *v57;
  uint64_t v60;
  __int128 v62;
  int v63;
  unint64_t v64;
  _BYTE v65[16];
  llvm *v66;
  unsigned int v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  _QWORD v73[18];

  v73[16] = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a4 + 16);
  v7 = (_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  if ((v6 & 4) != 0)
    v7 = (_QWORD *)*v7;
  if (v7)
    v8 = (uint64_t)(v7 - 8);
  else
    v8 = 0;
  v9 = *(_DWORD *)(a4 + 24);
  v10 = *(_QWORD *)(a3 + 40);
  v60 = v8 + 64;
  v11 = sub_22EFCE144(v8 + 64, v10);
  if (!v11)
  {
LABEL_18:
    v68 = v10;
    v69 = v9;
    sub_22EFC6D6C((uint64_t)&v70, v10);
    v17 = a3;
    v18 = sub_22EF579A8(*(_QWORD *)(a1 + 88), *(_QWORD *)(a3 + 48), v9);
    v20 = (uint64_t)(v18 + 1);
    v19 = *v18;
    if ((*v18 & 0xF) != 0)
    {
      v21 = a2;
    }
    else
    {
      v21 = a2;
      if (*(_BYTE *)(*(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF0) + 16) == 37)
      {
        sub_22F1169C8(v19, v20);
        v20 = v22;
      }
    }
    sub_22EAE797C((uint64_t)v65, (_QWORD *)a1, v21, a4);
    if ((*(_BYTE *)(a3 + 83) & 0xC0) != 0)
    {
      v23 = sub_22E46BB88(a3);
      v24 = sub_22EAB8368(a1, v8, 0, 0, 0, 0, v23 >> 11, 0, a3, v65);
    }
    else
    {
      v24 = 0;
    }
    v25 = *(_QWORD *)(a3 + 112);
    v26 = *(_QWORD *)(v25 + 80);
    if ((v26 & 0x4000000000000000) != 0)
      v27 = *(_QWORD *)(v25 + 16 * ((v26 >> 61) & 1) + 168);
    else
      v27 = v26 >> 63;
    if (v24)
      v24 = *(_DWORD *)(a3 + 80) >> 30;
    v28 = *(_QWORD *)(a3 + 56);
    if ((v28 & 4) != 0)
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFF8) + 40);
    else
      v29 = 0;
    v30 = sub_22EFD7DFC(*(_QWORD *)(a1 + 88), v8, v9, &v68, *v18, (uint64_t)v18, v27, (*(_DWORD *)(a1 + 56) & 0xFC) != 4, 1, 1, v24, a4, a3, v29);
    v14 = v30;
    if ((*(_BYTE *)(a4 + 28) & 0x80) != 0)
      sub_22EFC77E8(v30, 1);
    v31 = *(_QWORD *)(*v18 & 0xFFFFFFFFFFFFFFF0);
    if (v31)
      v32 = *(_BYTE *)(v31 + 16) == 26;
    else
      v32 = 0;
    if (!v32)
      v31 = sub_22F10CF48(v31);
    sub_22E4913B4(v31, (uint64_t)&v62);
    v63 = 9;
    v64 = v14;
    v33 = v31 + 40;
    *(_QWORD *)(v14 + 48) = sub_22EF63D8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(v31 + 24), (uint64_t *)(v31 + 40), (unsigned __int16)(*(_QWORD *)(v31 + 16) >> 38), &v62, 0);
    v71 = v73;
    v72 = 0x1000000000;
    v34 = *(_QWORD *)(v31 + 16);
    if ((v34 & 0x3FFFC000000000) != 0)
    {
      v35 = 0;
      v36 = 0;
      v37 = v20 + 16;
      v38 = (unsigned __int16)(v34 >> 38);
      do
      {
        v39 = sub_22EF579A8(*(_QWORD *)(a1 + 88), *(_QWORD *)(v33 + 8 * v36), v9);
        v40 = sub_22EFBF080(*(_QWORD *)(a1 + 88), v14 + 72, v9, v9, 0, *(_QWORD *)(v33 + 8 * v36), (uint64_t)v39, 0, 0);
        v41 = v40;
        v42 = *(_DWORD *)(v40 + 96);
        *(_DWORD *)(v40 + 96) = v42 & 0xFFF01FFF;
        if (v36 >= 0xFF)
          sub_22F3AC2B8(v40, v36);
        else
          *(_DWORD *)(v40 + 96) = v42 & 0xF0001FFF | v35 & 0xFF00000;
        *(_DWORD *)(v41 + 28) |= 0x200u;
        sub_22EA084D0(a1, v41, *(_BYTE **)(*(_QWORD *)(a3 + 120) + 8 * v36), 1);
        v43 = v72;
        if (v72 >= (unint64_t)HIDWORD(v72))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v43 = v72;
        }
        *((_QWORD *)v71 + v43) = v41;
        v44 = (v72 + 1);
        LODWORD(v72) = v72 + 1;
        *(_QWORD *)(v37 + 8 * v36++) = v41;
        v35 += 0x100000;
      }
      while (v38 != v36);
      v45 = v71;
      v17 = a3;
    }
    else
    {
      v44 = 0;
      v45 = v73;
    }
    v46 = *(_DWORD *)(v14 + 28);
    *(_DWORD *)(v14 + 28) = v46 & 0xFFFF9FFF | (((*(_DWORD *)(v17 + 28) >> 13) & 3) << 13);
    if (!v14 || (v47 = v46 & 0x7F, v48 = v14, v47 != 83))
    {
      v49 = *(_QWORD *)(v14 + 16);
      v50 = v49 & 0xFFFFFFFFFFFFFFF8;
      if ((v49 & 4) != 0)
        v50 = *(_QWORD *)v50;
      for (i = *(_WORD *)(v50 + 8) & 0x7F; i != 83; i = *(_WORD *)(v50 + 8) & 0x7F)
      {
        v52 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v52 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_65;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_64;
          if (i == 16)
            goto LABEL_58;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_71;
          if (i == 24)
          {
LABEL_58:
            v52 = -48;
          }
          else
          {
LABEL_64:
            if (i != 70)
            {
LABEL_65:
              v53 = i - 52;
              if ((i - 33) >= 5)
                v54 = -48;
              else
                v54 = -64;
              if (v53 >= 6)
                v52 = v54;
              else
                v52 = -72;
              goto LABEL_71;
            }
            v52 = -64;
          }
        }
LABEL_71:
        v55 = *(_QWORD *)(v50 + v52 + 16);
        v50 = v55 & 0xFFFFFFFFFFFFFFF8;
        if ((v55 & 4) != 0)
          v50 = *(_QWORD *)v50;
      }
      v48 = v50 - 40;
    }
    if (v44)
    {
      v56 = 8 * v44;
      v57 = (void *)sub_22E3CD3D4(*(_QWORD *)(v48 + 88) + 2032, 8 * v44, 3);
      *(_QWORD *)(v14 + 120) = v57;
      memmove(v57, v45, v56);
    }
    sub_22EFCCFA0(v60, v14);
    if ((sub_22EAB8670(a1, v14, 0, (uint64_t)v65, 0) & 1) != 0)
      sub_22EAB9ED0((_QWORD *)a1, v14, v9);
    if (v71 != v73)
      free(v71);
    llvm::deallocate_buffer(v66, (void *)(16 * v67));
    return v14;
  }
  while (1)
  {
    v12 = (unint64_t *)(v11 & 0xFFFFFFFFFFFFFFF8);
    v13 = (v11 & 0xFFFFFFFFFFFFFFF8) == 0 || (v11 & 4) == 0;
    v14 = v11 & 0xFFFFFFFFFFFFFFF8;
    if (!v13)
      v14 = *v12;
    if ((*(_BYTE *)(v14 + 87) & 0x20) != 0)
    {
      v15 = *(_QWORD *)(v14 + 176);
      if (v15)
      {
        if (v15 == a3)
          return v14;
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 32))(v15);
        if (v16 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 32))(a3))
          return v14;
      }
    }
    if (!v13)
    {
      v11 = v12[1];
      if (v11)
        continue;
    }
    goto LABEL_18;
  }
}

uint64_t sub_22EAC7C44(uint64_t result, unsigned int a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t i;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  char *v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  __int16 v60;
  _BYTE v61[16];
  llvm *v62;
  unsigned int v63;
  uint64_t v64[6];
  char v65;
  void *v66;
  uint64_t v67;
  _QWORD v68[3];
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v5 = result;
  v72 = *MEMORY[0x24BDAC8D0];
  v6 = a3 + 72;
  v7 = *(_WORD *)(a3 + 80) & 0x7F;
  v8 = -40;
  if (v7 > 0x46)
  {
    if (v7 == 83)
      goto LABEL_17;
    if (v7 == 71)
    {
      v8 = -56;
      goto LABEL_17;
    }
    if (v7 != 81)
    {
LABEL_12:
      v9 = v7 - 52;
      v10 = v7 - 33 >= 5;
      v11 = -48;
      if (!v10)
        v11 = -64;
      if (v9 >= 6)
        v8 = v11;
      else
        v8 = -72;
    }
  }
  else
  {
    if (v7 > 0x18)
      goto LABEL_11;
    if (v7 == 16)
    {
LABEL_4:
      v8 = -48;
      goto LABEL_17;
    }
    if (((1 << v7) & 0x1066) == 0)
    {
      if (v7 == 24)
        goto LABEL_4;
LABEL_11:
      if (v7 == 70)
      {
        v8 = -64;
        goto LABEL_17;
      }
      goto LABEL_12;
    }
  }
LABEL_17:
  v12 = *(_QWORD *)(v6 + v8 + 16);
  v13 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 4) != 0)
    v13 = (_QWORD *)*v13;
  if (v13)
    v14 = (uint64_t)(v13 - 8);
  else
    v14 = 0;
  if ((*(_BYTE *)(a3 + 84) & 8) == 0 && (*(_BYTE *)(a3 + 28) & 0x80) == 0)
  {
    sub_22EAE5FA8((uint64_t)v64, result, v6);
    v20 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (v20)
      v21 = *(_BYTE *)(v20 + 16) == 26;
    else
      v21 = 0;
    if (!v21)
      v20 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
    sub_22EB14850((int32x2_t *)v5, a2, v20, v15, v16, v17, v18, v19);
    v58 = a2;
    sub_22EAB631C(v5, a2, v14, 0);
    v22 = *(_QWORD *)(v64[0] + 216);
    v23 = *(_WORD *)(v22 + 8) & 0x7F;
    v24 = -40;
    if (v23 > 0x46)
    {
      switch(v23)
      {
        case 'S':
          goto LABEL_44;
        case 'G':
          v24 = -56;
          goto LABEL_44;
        case 'Q':
          goto LABEL_44;
      }
    }
    else
    {
      if (v23 <= 0x18)
      {
        if (v23 == 16)
          goto LABEL_32;
        if (((1 << v23) & 0x1066) != 0)
          goto LABEL_44;
        if (v23 == 24)
        {
LABEL_32:
          v24 = -48;
LABEL_44:
          LODWORD(v66) = 13;
          BYTE4(v66) = 0;
          LODWORD(v67) = a2;
          v68[2] = 0;
          v68[0] = v22 + v24;
          v68[1] = 0;
          v69 = 0;
          v70 = 0;
          v71 = 0;
          sub_22EE012D0(v64[0], (unint64_t)&v66);
          v25 = 0;
          v26 = 0;
          v65 = 1;
          if ((*(_BYTE *)(a3 + 87) & 0x20) != 0)
          {
            v25 = *(_QWORD *)(a3 + 168);
            v26 = *(_QWORD *)(a3 + 176);
          }
          v56 = a3;
          sub_22EAE797C((uint64_t)v61, (_QWORD *)v5, a2, v25);
          v27 = *(_QWORD *)(v25 + 16);
          v28 = (_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF8);
          if ((v27 & 4) != 0)
            v28 = (_QWORD *)*v28;
          v29 = 0;
          v30 = 0;
          if (v28)
            v31 = (uint64_t)(v28 - 8);
          else
            v31 = 0;
          v59 = *(_DWORD *)(v25 + 24);
          v66 = v68;
          v67 = 0x800000000;
          v60 = 256;
          v57 = v31;
          do
          {
            v32 = v29;
            v33 = v61[v30 - 2];
            if (v61[v30 - 2])
              v34 = sub_22E483108(v31);
            else
              v34 = sub_22E46A3A0(v31);
            v36 = v34;
            for (i = v35; v36 != i; v36 += 24)
            {
              if (v33 == (*(_BYTE *)(v36 + 12) & 1))
              {
                v38 = *(_QWORD *)(**(_QWORD **)(v36 + 16) & 0xFFFFFFFFFFFFFFF0);
                if ((*(_BYTE *)(v38 + 8) & 0xF) != 0)
                  v38 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v36 + 16));
                v39 = sub_22F10C2A4(*(_QWORD *)(v38 & 0xFFFFFFFFFFFFFFF0));
                if (v39)
                {
                  if ((*(_DWORD *)(v39 + 28) & 0x7Fu) - 35 <= 2)
                  {
                    v40 = sub_22EAC8258(v61, v39, v26);
                    if (v40)
                    {
                      v42 = v40;
                      v43 = v41;
                      sub_22EB4E494(v5, v58, v40, 1);
                      v44 = v5;
                      v45 = sub_22E3CD3D4(*(_QWORD *)(v5 + 88) + 2032, 32, 3);
                      v46 = *(_QWORD *)(**(_QWORD **)(v36 + 16) & 0xFFFFFFFFFFFFFFF0);
                      if ((*(_BYTE *)(v46 + 8) & 0xF) != 0)
                        v46 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v36 + 16));
                      sub_22F2F3990(v45, v59, v46 & 0xFFFFFFFFFFFFFFF0, v42, v33 != 0, v43 & 1);
                      v47 = *(_QWORD *)(v44 + 88);
                      v48 = *(_QWORD *)(**(_QWORD **)(v36 + 16) & 0xFFFFFFFFFFFFFFF0);
                      if ((*(_BYTE *)(v48 + 8) & 0xF) != 0)
                        v48 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v36 + 16));
                      v49 = (unint64_t)sub_22EF579A8(v47, v48 & 0xFFFFFFFFFFFFFFF0, v59);
                      v50 = sub_22E3CD3D4(*(_QWORD *)(v44 + 88) + 2032, 32, 3);
                      *(_QWORD *)v50 = v49 & 0xFFFFFFFFFFFFFFF9;
                      *(_QWORD *)(v50 + 8) = v45 & 0xFFFFFFFFFFFFFFFELL;
                      *(_DWORD *)(v50 + 16) = 0;
                      *(_DWORD *)(v50 + 20) = v59;
                      *(_DWORD *)(v50 + 24) = v59;
                      *(_WORD *)(v50 + 28) = 2 * (v33 != 0);
                      v51 = v67;
                      if (v67 >= (unint64_t)HIDWORD(v67))
                      {
                        llvm::SmallVectorBase<unsigned int>::grow_pod();
                        v51 = v67;
                      }
                      v31 = v57;
                      *((_QWORD *)v66 + v51) = v50;
                      LODWORD(v67) = v67 + 1;
                      v5 = v44;
                    }
                  }
                }
              }
            }
            v29 = 1;
            v30 = 1;
          }
          while ((v32 & 1) == 0);
          if ((sub_22EAAFD60((_QWORD *)v5, v56, 0, v66, v67) & 1) != 0)
          {
            sub_22EFC77E8(v56, 1);
          }
          else
          {
            v52 = (unsigned __int8 *)sub_22E3CD3D4(*(_QWORD *)(v5 + 88) + 2032, 16, 3);
            *v52 = 8;
            if (byte_255E04EB3)
            {
              v53 = sub_22F0D3748(8);
              ++*((_DWORD *)v53 + 2);
            }
            *((_DWORD *)v52 + 1) = v59;
            *((_DWORD *)v52 + 2) = v59;
            *(_DWORD *)v52 = *v52;
            *(_QWORD *)(v56 + 80) &= ~0x8000000uLL;
            *(_QWORD *)(v56 + 128) = v52;
            sub_22F0D60E4((uint64_t)v52);
            *(_DWORD *)(v56 + 140) = v54;
            sub_22EFC9100(v56, *(_QWORD *)(v5 + 88));
            v55 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v5 + 96) + 136))(*(_QWORD *)(v5 + 96));
            if (v55)
              (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v55 + 88))(v55, v56);
            sub_22EAAF8FC(v5, v56);
          }
          if (v66 != v68)
            free(v66);
          llvm::deallocate_buffer(v62, (void *)(16 * v63));
          return sub_22EAE7390((uint64_t)v64);
        }
      }
      if (v23 == 70)
      {
LABEL_42:
        v24 = -64;
        goto LABEL_44;
      }
    }
    if (v23 - 52 < 6)
    {
      v24 = -72;
      goto LABEL_44;
    }
    if (v23 - 33 < 5)
      goto LABEL_42;
    goto LABEL_32;
  }
  return result;
}

unint64_t sub_22EAC8258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
  v11 = 0;
  if (sub_22F24C318(*(_QWORD *)(a1 + 16), *(_DWORD *)(a1 + 32), v5, &v11))
  {
    v6 = v11;
    v7 = *(_QWORD *)(a1 + 16);
    v8 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 16);
    v8 = *(unsigned int *)(a1 + 32);
    v6 = v7 + 16 * v8;
  }
  if (v6 == v7 + 16 * v8)
    return 0;
  v9 = *(_QWORD *)(v6 + 8);
  if (v9)
    return sub_22EAC7678(*(_QWORD *)a1, *(_DWORD *)(a1 + 8), a3, v9);
  return a3;
}

uint64_t sub_22EAC8314(uint64_t result, unsigned int a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unsigned __int8 *v30;
  char *v31;
  int v32;
  uint64_t v33;
  uint64_t v34[6];
  char v35;
  int v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v3 = a3[10];
  if ((v3 & 0x800000000) != 0 || (*((_BYTE *)a3 + 28) & 0x80) != 0)
    return result;
  v6 = result;
  v7 = a3 + 9;
  v8 = v3 & 0x7F;
  v9 = -40;
  if (v8 > 70)
  {
    if (v8 == 83)
      goto LABEL_19;
    if (v8 == 71)
    {
      v9 = -56;
      goto LABEL_19;
    }
    if (v8 != 81)
    {
LABEL_14:
      v10 = v8 - 52;
      v11 = (v8 - 33) >= 5;
      v12 = -48;
      if (!v11)
        v12 = -64;
      if (v10 >= 6)
        v9 = v12;
      else
        v9 = -72;
    }
  }
  else
  {
    if (v8 > 0x18)
      goto LABEL_13;
    if (v8 == 16)
    {
LABEL_6:
      v9 = -48;
      goto LABEL_19;
    }
    if (((1 << v8) & 0x1066) == 0)
    {
      if (v8 == 24)
        goto LABEL_6;
LABEL_13:
      if (v8 == 70)
      {
        v9 = -64;
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
LABEL_19:
  v13 = *(_QWORD *)((char *)v7 + v9 + 16);
  v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
  if ((v13 & 4) != 0)
    v14 = (_QWORD *)*v14;
  if (v14)
    v15 = (uint64_t)(v14 - 8);
  else
    v15 = 0;
  sub_22EAE5FA8((uint64_t)v34, result, (uint64_t)(a3 + 9));
  v16 = *(_QWORD *)(a3[6] & 0xFFFFFFFFFFFFFFF0);
  if (v16)
    v17 = *(_BYTE *)(v16 + 16) == 26;
  else
    v17 = 0;
  if (!v17)
    sub_22F10CF48(*(_QWORD *)(a3[6] & 0xFFFFFFFFFFFFFFF0));
  sub_22EB14850(v6, a2);
  sub_22EAB631C(v6, a2, v15, 0);
  v18 = *(_QWORD *)(v34[0] + 216);
  v19 = *(_WORD *)(v18 + 8) & 0x7F;
  v20 = -40;
  if (v19 <= 0x46)
  {
    if (v19 <= 0x18)
    {
      if (v19 == 16)
      {
LABEL_32:
        v20 = -48;
        goto LABEL_44;
      }
      if (((1 << v19) & 0x1066) != 0)
        goto LABEL_44;
      if (v19 == 24)
        goto LABEL_32;
    }
    if (v19 == 70)
    {
LABEL_42:
      v20 = -64;
      goto LABEL_44;
    }
    goto LABEL_40;
  }
  if (v19 == 83)
    goto LABEL_44;
  if (v19 == 71)
  {
    v20 = -56;
    goto LABEL_44;
  }
  if (v19 != 81)
  {
LABEL_40:
    if (v19 - 52 >= 6)
    {
      if (v19 - 33 >= 5)
        goto LABEL_32;
      goto LABEL_42;
    }
    v20 = -72;
  }
LABEL_44:
  v36 = 13;
  v37 = 0;
  v38 = a2;
  v40 = 0;
  v41 = 0;
  v39 = v18 + v20;
  v42 = 0;
  v43 = 0;
  v44 = 0;
  sub_22EE012D0(v34[0], (unint64_t)&v36);
  v35 = 1;
  v21 = a3[10] & 0x7F;
  v22 = -40;
  if (v21 > 0x46)
  {
    if (v21 != 83)
    {
      if (v21 == 71)
      {
        v22 = -56;
        goto LABEL_60;
      }
      if (v21 == 81)
        goto LABEL_60;
LABEL_55:
      v23 = v21 - 52;
      v11 = v21 - 33 >= 5;
      v24 = -48;
      if (!v11)
        v24 = -64;
      if (v23 >= 6)
        v22 = v24;
      else
        v22 = -72;
    }
  }
  else
  {
    if (v21 > 0x18)
      goto LABEL_54;
    if (v21 != 16)
    {
      if (((1 << v21) & 0x1066) != 0)
        goto LABEL_60;
      if (v21 != 24)
      {
LABEL_54:
        if (v21 == 70)
        {
          v22 = -64;
          goto LABEL_60;
        }
        goto LABEL_55;
      }
    }
    v22 = -48;
  }
LABEL_60:
  v25 = *(_QWORD *)((char *)v7 + v22 + 16);
  v26 = (_QWORD *)(v25 & 0xFFFFFFFFFFFFFFF8);
  if ((v25 & 4) != 0)
    v26 = (_QWORD *)*v26;
  if (v26)
    v27 = (unint64_t)(v26 - 8);
  else
    v27 = 0;
  sub_22EAB1884(v6, *((_DWORD *)a3 + 6), v27);
  if (sub_22EABFC00(v6, a3))
  {
    sub_22EFC77E8((uint64_t)a3, 1);
  }
  else
  {
    v28 = (*(uint64_t (**)(_QWORD *))(*a3 + 16))(a3);
    v29 = HIDWORD(v28);
    if (!HIDWORD(v28))
      LODWORD(v29) = *((_DWORD *)a3 + 6);
    v30 = (unsigned __int8 *)sub_22E3CD3D4(*(_QWORD *)(v6 + 88) + 2032, 16, 3);
    *v30 = 8;
    if (byte_255E04EB3)
    {
      v31 = sub_22F0D3748(8);
      ++*((_DWORD *)v31 + 2);
    }
    *((_DWORD *)v30 + 1) = v29;
    *((_DWORD *)v30 + 2) = v29;
    *(_DWORD *)v30 = *v30;
    a3[10] &= ~0x8000000uLL;
    a3[16] = v30;
    sub_22F0D60E4((uint64_t)v30);
    *((_DWORD *)a3 + 35) = v32;
    sub_22EFC9100((uint64_t)a3, *(_QWORD *)(v6 + 88));
    v33 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v6 + 96) + 136))(*(_QWORD *)(v6 + 96));
    if (v33)
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v33 + 88))(v33, a3);
  }
  return sub_22EAE7390((uint64_t)v34);
}

uint64_t sub_22EAC86FC(uint64_t result, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18[6];
  char v19;
  int v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  if ((*(_BYTE *)(a3 + 28) & 0x80) == 0)
  {
    v5 = result;
    v6 = a3 + 72;
    v7 = *(_WORD *)(a3 + 80) & 0x7F;
    v8 = -40;
    if (v7 > 0x46)
    {
      if (v7 == 83)
        goto LABEL_18;
      if (v7 == 71)
      {
        v8 = -56;
        goto LABEL_18;
      }
      if (v7 != 81)
        goto LABEL_13;
    }
    else
    {
      if (v7 > 0x18)
        goto LABEL_12;
      if (v7 == 16)
      {
LABEL_5:
        v8 = -48;
        goto LABEL_18;
      }
      if (((1 << v7) & 0x1066) == 0)
      {
        if (v7 == 24)
          goto LABEL_5;
LABEL_12:
        if (v7 == 70)
        {
          v8 = -64;
          goto LABEL_18;
        }
LABEL_13:
        v9 = v7 - 52;
        v10 = v7 - 33 >= 5;
        v11 = -48;
        if (!v10)
          v11 = -64;
        if (v9 >= 6)
          v8 = v11;
        else
          v8 = -72;
      }
    }
LABEL_18:
    v12 = *(_QWORD *)(v6 + v8 + 16);
    v13 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
    if ((v12 & 4) != 0)
      v13 = (_QWORD *)*v13;
    if (v13)
      v14 = (unint64_t)(v13 - 8);
    else
      v14 = 0;
    sub_22EAE5FA8((uint64_t)v18, result, v6);
    v15 = *(_QWORD *)(v18[0] + 216);
    v16 = *(_WORD *)(v15 + 8) & 0x7F;
    v17 = -40;
    if (v16 > 0x46)
    {
      switch(v16)
      {
        case 'S':
          goto LABEL_38;
        case 'G':
          v17 = -56;
          goto LABEL_38;
        case 'Q':
          goto LABEL_38;
      }
    }
    else
    {
      if (v16 <= 0x18)
      {
        if (v16 == 16)
          goto LABEL_26;
        if (((1 << v16) & 0x1066) != 0)
          goto LABEL_38;
        if (v16 == 24)
        {
LABEL_26:
          v17 = -48;
LABEL_38:
          v20 = 13;
          v21 = 0;
          v22 = a2;
          v24 = 0;
          v25 = 0;
          v23 = v15 + v17;
          v26 = 0;
          v27 = 0;
          v28 = 0;
          sub_22EE012D0(v18[0], (unint64_t)&v20);
          v19 = 1;
          sub_22EAB2A98(v5, *(_DWORD *)(a3 + 24), v14, 0);
          return sub_22EAE7390((uint64_t)v18);
        }
      }
      if (v16 == 70)
      {
LABEL_36:
        v17 = -64;
        goto LABEL_38;
      }
    }
    if (v16 - 52 < 6)
    {
      v17 = -72;
      goto LABEL_38;
    }
    if (v16 - 33 < 5)
      goto LABEL_36;
    goto LABEL_26;
  }
  return result;
}

void sub_22EAC88F8(uint64_t a1)
{
  unint64_t v1;
  __int16 v2;
  BOOL v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22[24];
  unint64_t v23;

  v1 = *(_QWORD *)(a1 + 216);
  v2 = *(_WORD *)(v1 + 8);
  if (v1)
    v3 = (v2 & 0x7Fu) - 38 >= 0xFFFFFFFD;
  else
    v3 = 0;
  if (v3)
  {
    if ((*(_BYTE *)(v1 - 36) & 0x80) != 0)
    {
      *(_DWORD *)(a1 + 3008) = 0;
      *(_DWORD *)(a1 + 3056) = 0;
    }
    else
    {
      v23 = v1 - 64;
      if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 148) == 11)
      {
        if ((v2 & 0x80) != 0)
          sub_22EFCC320(v1);
        v5 = *(_QWORD *)(v1 + 16);
        if (v5)
        {
          v6 = 0;
          do
          {
            if ((*(_DWORD *)(v5 + 28) & 0x7F) == 0x37)
              v7 = v5;
            else
              v7 = 0;
            if (v7 && !sub_22EFC0EB8(v7) && (*(_BYTE *)(v7 + 29) & 1) != 0)
            {
              sub_22EFC8E88(v7);
              v9 = *(uint64_t **)v8;
              v10 = *(unsigned int *)(v8 + 8);
              v11 = *(uint64_t **)v8;
              if ((_DWORD)v10)
              {
                v12 = 8 * v10;
                v11 = *(uint64_t **)v8;
                while (*(_WORD *)(*v11 + 32) != 155)
                {
                  ++v11;
                  v12 -= 8;
                  if (!v12)
                    goto LABEL_36;
                }
              }
              if (v11 != &v9[v10])
              {
                do
                {
                  v14 = *v9++;
                  v13 = v14;
                }
                while (*(_WORD *)(v14 + 32) != 155);
                if ((sub_22EFC7ADC(v1) & 1) == 0)
                {
                  v15 = *(uint64_t **)(v7 + 120);
                  v16 = *(_QWORD *)(*(_QWORD *)(v7 + 48) & 0xFFFFFFFFFFFFFFF0);
                  v17 = v16 && *(_BYTE *)(v16 + 16) == 26;
                  if (v17
                    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
                    && (v16 = sub_22F10CF48(v16)) != 0)
                  {
                    v18 = *(_QWORD *)(v16 + 16);
                    if ((v18 & 0x3FFFC000000000) != 0)
                    {
                      v19 = 8 * (unsigned __int16)(v18 >> 38);
                      do
                      {
                        v20 = *v15++;
                        sub_22EB31584(a1, *(_DWORD *)(v13 + 16), v7, v20);
                        sub_22EB48DCC(a1);
                        v19 -= 8;
                      }
                      while (v19);
                    }
                  }
                }
                if (v6)
                {
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v6 + 24), 0xAF2u, 0, (uint64_t)v22);
                  sub_22E890024((uint64_t)v22, (uint64_t *)&v23);
                  sub_22E903BEC(v22);
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v7 + 24), 0x15C9u, 0, (uint64_t)v22);
                  v21 = *(_QWORD *)(v7 + 40);
                  sub_22E894538((uint64_t)v22, &v21);
                  sub_22E903BEC(v22);
                  return;
                }
                v6 = v7;
              }
            }
LABEL_36:
            v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
          }
          while (v5);
        }
      }
    }
  }
}

void sub_22EAC8B1C(unint64_t a1)
{
  _QWORD **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[5];

  v10[4] = *MEMORY[0x24BDAC8D0];
  sub_22EAC8C34(a1);
  if (*(_DWORD *)(a1 + 13024))
  {
    v8 = v10;
    v9 = 0x400000000;
    sub_22EAEAE08(a1 + 13016, (uint64_t *)&v8);
    v2 = (_QWORD **)v8;
    if ((_DWORD)v9)
    {
      v3 = 8 * v9;
      do
      {
        v4 = (uint64_t)*v2;
        sub_22EAC9110(a1, *v2, *((_DWORD *)*v2 + 6));
        v5 = *(_QWORD *)(sub_22EFCAD5C(v4 + 72) + 16);
        v6 = (_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
        if ((v5 & 4) != 0)
          v6 = (_QWORD *)*v6;
        if (v6)
          v7 = (uint64_t)(v6 - 8);
        else
          v7 = 0;
        if (sub_22EFD5760(v7) != 4)
          sub_22EA30470(a1);
        ++v2;
        v3 -= 8;
      }
      while (v3);
      v2 = (_QWORD **)v8;
    }
    if (v2 != v10)
      free(v2);
  }
}

void sub_22EAC8C34(unint64_t a1)
{
  unsigned int v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD v53[5];

  v53[4] = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 12976);
  if (v1)
  {
    v3 = (_QWORD *)(a1 + 12968);
    v51 = v53;
    v52 = 0x400000000;
    if ((void **)(a1 + 12968) != &v51)
    {
      if (v1 < 5)
      {
        LODWORD(v4) = 0;
      }
      else
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v1 = *(_DWORD *)(a1 + 12976);
        LODWORD(v4) = v52;
      }
      if (v1 >= v4)
        v5 = v4;
      else
        v5 = v1;
      if ((_DWORD)v5)
      {
        v6 = 0;
        do
        {
          v7 = (char *)v51;
          v8 = *(_QWORD *)(*v3 + v6);
          *(_QWORD *)(*v3 + v6) = *(_QWORD *)((char *)v51 + v6);
          *(_QWORD *)&v7[v6] = v8;
          v6 += 8;
        }
        while (8 * v5 != v6);
      }
      v9 = v1 - v4;
      if (v1 <= v4)
      {
        v10 = v4 - v1;
        if (v4 <= v1)
        {
          v5 = v4;
        }
        else
        {
          memcpy((void *)(*(_QWORD *)(a1 + 12968) + 8 * v1), (char *)v51 + 8 * v5, 8 * v4 - 8 * v5);
          *(_DWORD *)(a1 + 12976) += v10;
          LODWORD(v52) = v5;
          LODWORD(v4) = v5;
        }
      }
      else
      {
        memcpy((char *)v51 + 8 * v4, (const void *)(*(_QWORD *)(a1 + 12968) + 8 * v5), 8 * v1 - 8 * v5);
        LODWORD(v52) = v52 + v9;
        v4 = v52;
        *(_DWORD *)(a1 + 12976) = v5;
        v5 = v4;
      }
      v11 = (uint64_t *)v51;
      if ((_DWORD)v4)
      {
        v12 = (uint64_t *)((char *)v51 + 8 * v5);
        while (1)
        {
          v13 = *v11;
          if ((*(_BYTE *)(*v11 + 29) & 1) != 0)
          {
            sub_22EFC8E88(*v11);
            v15 = *(uint64_t **)v14;
            v16 = *(unsigned int *)(v14 + 8);
            v17 = *(uint64_t **)v14;
            if ((_DWORD)v16)
            {
              v18 = 8 * v16;
              v17 = *(uint64_t **)v14;
              while (*(_WORD *)(*v17 + 32) != 157)
              {
                ++v17;
                v18 -= 8;
                if (!v18)
                  goto LABEL_28;
              }
            }
            if (v17 != &v15[v16])
              break;
          }
LABEL_28:
          if ((*(_BYTE *)(v13 + 29) & 1) != 0)
          {
            sub_22EFC8E88(v13);
            v22 = *(uint64_t **)v21;
            v23 = *(unsigned int *)(v21 + 8);
            v24 = *(uint64_t **)v21;
            if ((_DWORD)v23)
            {
              v25 = 8 * v23;
              v24 = *(uint64_t **)v21;
              while (*(_WORD *)(*v24 + 32) != 155)
              {
                ++v24;
                v25 -= 8;
                if (!v25)
                  goto LABEL_74;
              }
            }
            if (v24 != &v22[v23])
            {
              do
              {
                v26 = *v22++;
                v19 = v26;
              }
              while (*(_WORD *)(v26 + 32) != 155);
              goto LABEL_36;
            }
          }
LABEL_74:
          if (++v11 == v12)
          {
            v11 = (uint64_t *)v51;
            goto LABEL_76;
          }
        }
        do
        {
          v20 = *v15++;
          v19 = v20;
        }
        while (*(_WORD *)(v20 + 32) != 157);
LABEL_36:
        v27 = sub_22EFD5760(v13);
        if (v27 != 3)
        {
          v28 = v27;
          v29 = *(_QWORD *)(v19 + 16);
          v42 = 20;
          v43 = 0;
          v44 = v29;
          v45 = v13;
          v46 = 0;
          v47 = 0;
          v48 = 0;
          v49 = 0;
          v50 = 0;
          sub_22EE012D0(a1, (unint64_t)&v42);
          v30 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088);
          if (*(_DWORD *)(v30 + 68) == 15 && *(_DWORD *)(v30 + 72) == 1)
            sub_22EAB631C(a1, *(_DWORD *)(v13 + 24), v13, 1u);
          if ((*(_WORD *)(v13 + 72) & 0x80) != 0)
            sub_22EFCC320(v13 + 64);
          v31 = *(_QWORD *)(v13 + 80);
          if (v31)
          {
            while (1)
            {
              if ((*(_BYTE *)(v31 + 29) & 1) == 0)
                goto LABEL_44;
              sub_22EFC8E88(v31);
              v33 = *((unsigned int *)v32 + 2);
              if ((_DWORD)v33)
              {
                v34 = 8 * v33;
                v35 = *v32;
                while (*(_WORD *)(*(_QWORD *)v35 + 32) != 155)
                {
                  v35 += 8;
                  v34 -= 8;
                  if (!v34)
                    goto LABEL_44;
                }
              }
              else
              {
                v35 = *v32;
              }
              if (v35 == *v32 + 8 * v33)
                goto LABEL_44;
              v36 = *(_DWORD *)(v31 + 28);
              if ((v36 & 0x7Fu) - 67 >= 0xFFFFFFF9 && v28 == 1 && (*(_BYTE *)(v31 + 96) & 7) == 2)
              {
                sub_22EB51AEC(a1, *(_DWORD *)(v31 + 24), v31, 0, (_DWORD *)(a1 + 8848));
                v36 = *(_DWORD *)(v31 + 28);
              }
              if ((v36 & 0x7Eu) - 58 < 0xFFFFFFFC)
                goto LABEL_44;
              if (sub_22E692064(v31))
              {
                if (v28 != 1
                  || ((*(unsigned __int16 *)(v19 + 32) | (*(unsigned __int8 *)(v19 + 34) << 16)) & 0x10000) != 0)
                {
                  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 148) == 11
                    && (*(_DWORD *)(v31 + 28) & 0x7F) == 0x37
                    && !(sub_22EFC0EB8(v31) | v28))
                  {
                    sub_22F34933C(a1, v31);
                  }
                  sub_22EB4E494(a1, *(_DWORD *)(v13 + 24), v31, 1, v37, v38, v39, v40);
                }
                goto LABEL_44;
              }
              v41 = *(_QWORD *)(v31 + 80);
              if ((v41 & 0x4000000) == 0)
                break;
              sub_22EB4E494(a1, *(_DWORD *)(v13 + 24), v31, 1, v37, v38, v39, v40);
              if (v28 != 4)
                goto LABEL_72;
LABEL_44:
              v31 = *(_QWORD *)(v31 + 8) & 0xFFFFFFFFFFFFFFF8;
              if (!v31)
                goto LABEL_73;
            }
            if ((v41 & 0x800000) != 0 && (sub_22EFD3B9C(v31) & 1) == 0 && !sub_22EFD3F30(v31))
              goto LABEL_44;
            sub_22EB4E494(a1, *(_DWORD *)(v13 + 24), v31, 1, v37, v38, v39, v40);
LABEL_72:
            (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(a1 + 96) + 24))(*(_QWORD *)(a1 + 96), v31);
            goto LABEL_44;
          }
LABEL_73:
          sub_22EE013E8((int32x2_t *)a1);
        }
        goto LABEL_74;
      }
LABEL_76:
      if (v11 != v53)
        free(v11);
    }
  }
}

uint64_t sub_22EAC9110(uint64_t a1, _QWORD *a2, unsigned int a3)
{
  uint64_t result;

  result = sub_22EAB3978(a1, (unint64_t)a2);
  if (result >= 0x100)
    return sub_22EABAA74(a1, a3, (uint64_t)a2, SBYTE1(result));
  switch((char)result)
  {
    case 0:
      result = sub_22EAC7348(a1, a3, (unint64_t)a2);
      break;
    case 1:
      result = sub_22EACB798(a1, a3, (uint64_t)a2);
      break;
    case 2:
      result = sub_22EACBB98(a1, a3, (uint64_t)a2);
      break;
    case 3:
      result = sub_22EAC9238(a1, a3, (uint64_t)a2);
      break;
    case 4:
      result = sub_22EACA4EC(a1, a3, (uint64_t)a2);
      break;
    case 5:
      result = sub_22EAC8314(a1, a3, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EAC9238(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  __int128 v57;
  unint64_t v58;
  unint64_t v59;
  void **v60;
  uint64_t *v61;
  _BYTE *v62;
  int *v63;
  __int128 v64;
  uint64_t (**v65)();
  uint64_t v66;
  unint64_t v67;
  unsigned int v68;
  unint64_t v69;
  unint64_t v70;
  _BYTE *v71;
  uint64_t (**v72)();
  uint64_t v73;
  int *v74;
  uint64_t (**v75)();
  uint64_t v76;
  uint64_t v77;
  unsigned int *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (**v82)();
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void **v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  int v103;
  uint64_t v104;
  unsigned int *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  int v109;
  unsigned __int8 *v110;
  uint64_t v111;
  unint64_t v112;
  int v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t *v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  unint64_t v122;
  __int128 v123;
  unint64_t v124;
  __int128 v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t (**v129)();
  uint64_t (***v130)();
  unint64_t v131;
  int v132;
  void **v133;
  void *v134;
  int v135;
  char v136;
  void **v137;
  uint64_t (**v138)();
  _QWORD *v139;
  uint64_t v140;
  __int128 v141;
  __int128 v142;
  char v143;
  void **v144;
  char v145;
  char v146;
  _QWORD v147[2];
  uint64_t (**v148)();
  _QWORD v149[3];
  uint64_t v150[6];
  char v151;
  void *v152;
  void *v153;
  uint64_t v154;
  _QWORD v155[2];
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159[3];
  _QWORD *v160;
  uint64_t v161;
  int v162;
  _BYTE v163[24];
  int v164;
  __int16 v165;
  char v166;
  _QWORD *v167;
  uint64_t v168;
  _QWORD v169[10];

  v128 = result;
  v169[8] = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a3 + 80);
  if ((v3 & 0x800000000) != 0 || (*(_BYTE *)(a3 + 28) & 0x80) != 0)
    return result;
  v6 = a3 + 72;
  v7 = v3 & 0x7F;
  v8 = -40;
  if (v7 > 70)
  {
    if (v7 == 83)
      goto LABEL_19;
    if (v7 == 71)
    {
      v8 = -56;
      goto LABEL_19;
    }
    if (v7 != 81)
      goto LABEL_14;
  }
  else
  {
    if (v7 > 0x18)
      goto LABEL_13;
    if (v7 == 16)
    {
LABEL_6:
      v8 = -48;
      goto LABEL_19;
    }
    if (((1 << v7) & 0x1066) == 0)
    {
      if (v7 == 24)
        goto LABEL_6;
LABEL_13:
      if (v7 == 70)
      {
        v8 = -64;
        goto LABEL_19;
      }
LABEL_14:
      v9 = v7 - 52;
      v10 = (v7 - 33) >= 5;
      v11 = -48;
      if (!v10)
        v11 = -64;
      if (v9 >= 6)
        v8 = v11;
      else
        v8 = -72;
    }
  }
LABEL_19:
  v12 = *(_QWORD *)(v6 + v8 + 16);
  v13 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 4) != 0)
    v13 = (_QWORD *)*v13;
  if (v13)
    v14 = (uint64_t)(v13 - 8);
  else
    v14 = 0;
  if ((*(_BYTE *)(v14 + 28) & 0x80) != 0)
    return sub_22EFC77E8(a3, 1);
  sub_22EAE5FA8((uint64_t)v150, result, v6);
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v15)
    v16 = *(_BYTE *)(v15 + 16) == 26;
  else
    v16 = 0;
  if (!v16)
    sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
  sub_22EB14850(v128, a2);
  v17 = *(_QWORD *)(v150[0] + 216);
  v18 = *(_WORD *)(v17 + 8) & 0x7F;
  v19 = -40;
  if (v18 > 0x46)
  {
    switch(v18)
    {
      case 'S':
        goto LABEL_46;
      case 'G':
        v19 = -56;
        goto LABEL_46;
      case 'Q':
        goto LABEL_46;
    }
    goto LABEL_42;
  }
  if (v18 > 0x18)
    goto LABEL_41;
  if (v18 != 16)
  {
    if (((1 << v18) & 0x1066) != 0)
      goto LABEL_46;
    if (v18 != 24)
    {
LABEL_41:
      if (v18 == 70)
      {
LABEL_44:
        v19 = -64;
        goto LABEL_46;
      }
LABEL_42:
      if (v18 - 52 < 6)
      {
        v19 = -72;
        goto LABEL_46;
      }
      if (v18 - 33 < 5)
        goto LABEL_44;
    }
  }
  v19 = -48;
LABEL_46:
  LODWORD(v152) = 13;
  BYTE4(v152) = 0;
  LODWORD(v153) = a2;
  v155[1] = 0;
  v154 = v17 + v19;
  v155[0] = 0;
  v156 = 0;
  v158 = 0;
  v157 = 0;
  sub_22EE012D0(v150[0], (unint64_t)&v152);
  v151 = 1;
  if ((*(_BYTE *)(*(_QWORD *)(v128 + 72) + 1) & 2) != 0 && (*(_BYTE *)(a3 + 29) & 2) != 0)
    sub_22EACA078(v128, a3);
  v167 = v169;
  v168 = 0x800000000;
  v20 = **(_QWORD **)(a3 + 120);
  v21 = *(_QWORD *)(v20 + 48);
  v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v23 & 8) != 0)
  {
    v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF0) + 0x18);
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
  }
  else
  {
    v24 = 0;
    v25 = 0;
  }
  v26 = *v22;
  if (*v22 && (v27 = *(_DWORD *)(v26 + 16), v27 == 40))
  {
    if ((v27 & 0x100000) != 0)
    {
      do
      {
LABEL_55:
        while (1)
        {
          v26 = *(_QWORD *)(*(_QWORD *)(v26 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v26)
            break;
          v28 = *(_DWORD *)(v26 + 16);
          if ((v28 & 0xFE) != 0x28)
            break;
          if ((v28 & 0x100000) == 0)
            goto LABEL_64;
        }
        v26 = sub_22F10CF48(v26);
      }
      while ((*(_DWORD *)(v26 + 16) & 0x100000) != 0);
    }
  }
  else
  {
    v124 = v24 | v25 | (v23 | v21) & 7;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 40)
      goto LABEL_68;
    v26 = sub_22F10CF48(v26);
    if (!v26)
      goto LABEL_68;
    if ((*(_DWORD *)(v26 + 16) & 0x100000) != 0)
      goto LABEL_55;
  }
LABEL_64:
  v21 = *(_QWORD *)(v26 + 32);
  v29 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v29 & 8) != 0)
  {
    v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18);
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
  }
  else
  {
    v30 = 0;
    v31 = 0;
  }
  v124 = v30 | v31 | (v29 | v21) & 7;
LABEL_68:
  v32 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 16))(a3);
  v33 = HIDWORD(v32);
  if (!HIDWORD(v32))
    LODWORD(v33) = *(_DWORD *)(a3 + 24);
  v149[0] = &off_24FAB7E60;
  v149[1] = v20;
  v121 = v21;
  v149[2] = v21;
  v148 = &off_24FAB7E88;
  v34 = sub_22E46A3A0(v14);
  v122 = v14;
  v120 = v33;
  if (v34 != v35)
  {
    v36 = v34;
    v37 = v35;
    v127 = 0;
    v126 = v33;
    v38 = v34;
    do
    {
      v39 = *(_QWORD *)(**(_QWORD **)(v38 + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v39 + 8) & 0xF) != 0)
        v39 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v38 + 16));
      v40 = v39 & 0xFFFFFFFFFFFFFFF0;
      v41 = *(_QWORD *)(v39 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v41 + 8) & 0xF) != 0)
        v41 = (unint64_t)sub_22F10D2BC(v40);
      v42 = v41 & 0xFFFFFFFFFFFFFFF0;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 45)
      {
        v152 = &v154;
        v154 = v36;
        v153 = (void *)0x400000001;
        if ((v124 & 0xCFFFFFFF8) != 0)
        {
          v43 = v128;
          v44 = *(_QWORD *)(v128 + 88);
          v138 = (uint64_t (**)())v124;
          v45 = sub_22E491354((unsigned int *)&v138, v42);
          v46 = sub_22EF5DBC4(v44, v45, (uint64_t)v138);
        }
        else
        {
          v46 = v42 | v124 & 7;
          v43 = v128;
        }
        v138 = &off_24FAB7EB0;
        v139 = v149;
        v140 = v46;
        LODWORD(v141) = 1;
        *((_QWORD *)&v141 + 1) = &v152;
        v147[0] = &off_24FAB7ED8;
        v147[1] = &v148;
        v47 = *(_QWORD *)(v43 + 88);
        v48 = sub_22E46BB88(a3);
        if ((v48 & 0xCFFFFFFF8) != 0)
        {
          v129 = (uint64_t (**)())v48;
          v49 = sub_22E491354((unsigned int *)&v129, v42);
          v50 = sub_22EF5DBC4(v47, v49, (uint64_t)v129);
        }
        else
        {
          v50 = v48 & 7 | v42;
        }
        v129 = &off_24FAB7EB0;
        v130 = (uint64_t (***)())v147;
        v131 = v50;
        v132 = 1;
        v133 = &v152;
        v51 = *(_QWORD *)(v128 + 88);
        v52 = sub_22E46BB88(a3);
        v53 = sub_22EF5DD84(v51, v42, v52 >> 11);
        v54 = sub_22EACA330((_QWORD *)v128, v126, v53, (uint64_t)&v129, &v138, 1u, 1);
        if ((v54 & 1) != 0)
        {
          sub_22EFC77E8(a3, 1);
        }
        else
        {
          v55 = v168;
          if (v168 >= (unint64_t)HIDWORD(v168))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v55 = v168;
          }
          v167[v55] = v54 & 0xFFFFFFFFFFFFFFFELL;
          LODWORD(v168) = v168 + 1;
        }
        if (v152 != &v154)
          free(v152);
        if ((v54 & 1) != 0)
          goto LABEL_179;
      }
      else
      {
        v127 = 1;
      }
      v38 += 24;
      v36 += 24;
    }
    while (v38 != v37);
    v56 = sub_22EFC3B90(v122);
    if (!v56)
      goto LABEL_170;
    v58 = v56;
LABEL_97:
    v60 = &v153;
    v61 = v159;
    v62 = v163;
    v63 = &v132;
    v64 = xmmword_22F463A40;
    *(_QWORD *)&v57 = 16842752;
    v65 = &off_24FAB7F50;
LABEL_98:
    if ((*(_BYTE *)(v58 + 68) & 1) == 0 || *(_QWORD *)(v58 + 40))
    {
      v66 = *(_QWORD *)(v58 + 16);
      v67 = v66 & 0xFFFFFFFFFFFFFFF8;
      if ((v66 & 4) != 0)
        v67 = *(_QWORD *)v67;
      v68 = (*(_WORD *)(v67 + 8) & 0x7E) - 34;
      if (v67)
        v69 = v67 - 64;
      else
        v69 = 0;
      if (v68 >= 4)
        v69 = 0;
      if ((*(_DWORD *)(v69 + 72) & 0xE000) != 0x4000)
      {
        if ((*(_BYTE *)(v58 + 28) & 0x80) != 0)
        {
          v127 = 1;
          goto LABEL_124;
        }
        v123 = v57;
        v125 = v64;
        v70 = *(_QWORD *)(v58 + 48);
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v70 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFE) == 0x28)
        {
          v116 = v61;
          v71 = v62;
          v72 = v65;
          sub_22E8FCA40((_QWORD *)v128, *(_DWORD *)(v122 + 24), 0x13C7u, 0, (uint64_t)&v152);
          v73 = *(_QWORD *)(v122 + 48);
          v74 = v63;
          if (v73)
            v75 = (uint64_t (**)())(v73 & 0xFFFFFFFFFFFFFFF0);
          else
            v75 = (uint64_t (**)())sub_22EF6462C(*(_QWORD *)(v128 + 88), v122);
          v138 = v75;
          v76 = sub_22E8901B8((uint64_t)&v152, (uint64_t *)&v138);
          LODWORD(v147[0]) = 0;
          v77 = sub_22E8900C4(v76, (int *)v147);
          v129 = *(uint64_t (***)())(v58 + 40);
          sub_22E894538(v77, (uint64_t *)&v129);
          sub_22E903BEC((unsigned int *)&v152);
          v78 = (unsigned int *)&v146;
LABEL_123:
          sub_22E8FCA40((_QWORD *)v128, *(_DWORD *)(v58 + 24), 0x64u, 0, (uint64_t)v78);
          sub_22E903BEC(v78);
          v127 = 1;
          v63 = v74;
          v57 = v123;
          v64 = v125;
          v65 = v72;
          v62 = v71;
          v61 = v116;
          goto LABEL_124;
        }
        v79 = sub_22EF5BA38(*(_QWORD *)(v128 + 88), v70);
        v80 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v79 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((!v80 || *(_BYTE *)(v80 + 16) != 45)
          && ((v79 & 1) != 0 || (*(_BYTE *)((v79 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) != 0))
        {
          v116 = v61;
          v71 = v62;
          v72 = v65;
          sub_22E8FCA40((_QWORD *)v128, *(_DWORD *)(v122 + 24), 0x13C7u, 0, (uint64_t)&v152);
          v81 = *(_QWORD *)(v122 + 48);
          v74 = v63;
          if (v81)
            v82 = (uint64_t (**)())(v81 & 0xFFFFFFFFFFFFFFF0);
          else
            v82 = (uint64_t (**)())sub_22EF6462C(*(_QWORD *)(v128 + 88), v122);
          v138 = v82;
          v83 = sub_22E8901B8((uint64_t)&v152, (uint64_t *)&v138);
          LODWORD(v147[0]) = 1;
          v84 = sub_22E8900C4(v83, (int *)v147);
          v129 = *(uint64_t (***)())(v58 + 40);
          sub_22E894538(v84, (uint64_t *)&v129);
          sub_22E903BEC((unsigned int *)&v152);
          v78 = (unsigned int *)&v145;
          goto LABEL_123;
        }
        if (sub_22EFC2F84(v58, *(_QWORD *)(v128 + 88)))
        {
          v57 = v123;
          v64 = v125;
          goto LABEL_124;
        }
        v85 = *(_QWORD *)(v58 + 48);
        v86 = v85 & 0xFFFFFFFFFFFFFFF0;
        v87 = *(_QWORD *)(v85 & 0xFFFFFFFFFFFFFFF0);
        if (!v87 || (v88 = *(_DWORD *)(v87 + 16), (v88 & 0xFE) != 0x28))
        {
          if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v87 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
            goto LABEL_130;
          v119 = *(_QWORD *)(v58 + 48);
          v87 = sub_22F10CF48(v87);
          if (!v87)
          {
            v85 = v119;
            goto LABEL_130;
          }
          v88 = *(_DWORD *)(v87 + 16);
        }
        if ((v88 & 0x100000) != 0)
        {
          do
          {
            v87 = *(_QWORD *)(*(_QWORD *)(v87 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (v87)
            {
              v103 = *(_DWORD *)(v87 + 16);
              if ((v103 & 0xFE) == 0x28)
                continue;
            }
            v87 = sub_22F10CF48(v87);
            v103 = *(_DWORD *)(v87 + 16);
          }
          while ((v103 & 0x100000) != 0);
        }
        v85 = *(_QWORD *)(v87 + 32);
        v86 = v85 & 0xFFFFFFFFFFFFFFF0;
LABEL_130:
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v86 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 4)
        {
          v57 = v123;
          v64 = v125;
          v65 = &off_24FAB7F50;
          goto LABEL_124;
        }
        v115 = v62;
        v117 = v85;
        v89 = *(_QWORD *)(v58 + 40);
        v152 = 0;
        v153 = v155;
        v154 = 0x800000000;
        v61[1] = 0;
        v61[2] = 0;
        *v61 = 0;
        v160 = (_QWORD *)v128;
        v161 = v89;
        v162 = v120;
        sub_22EFC6D6C((uint64_t)v62, v89);
        *(_OWORD *)&v163[8] = v125;
        v164 = v123;
        v165 = 0;
        v166 = 0;
        sub_22EC56024((uint64_t)&v152);
        v90 = *(unsigned int *)(v58 + 28);
        v91 = v154;
        v92 = v60;
        if (v154 >= (unint64_t)HIDWORD(v154))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v91 = v154;
        }
        *((_QWORD *)v153 + v91) = (v90 >> 13) & 3 | v58;
        LODWORD(v154) = v154 + 1;
        LODWORD(v152) = 2;
        sub_22EC561E4((uint64_t)&v152);
        v138 = &off_24FAB7F50;
        v139 = v149;
        v141 = 0u;
        v142 = 0u;
        v143 = 0;
        v140 = v121;
        v144 = &v152;
        v93 = sub_22EBBB18C(v128);
        v129 = &off_24FAB7F50;
        v130 = &v148;
        v131 = v93;
        *(_OWORD *)v63 = 0u;
        *((_OWORD *)v63 + 1) = 0u;
        v136 = 1;
        v137 = &v152;
        v94 = *(_QWORD *)(v128 + 88);
        v95 = sub_22EBBB18C(v128);
        v96 = sub_22F10ACF8(*(_QWORD *)(v95 & 0xFFFFFFFFFFFFFFF0));
        v97 = 0;
        v98 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v98 & 8) != 0)
          v97 = *(_DWORD *)((v98 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
        v99 = sub_22EF5DD84(v94, v117, v97);
        v100 = sub_22EACA330((_QWORD *)v128, v126, v99, (uint64_t)&v129, &v138, 0, 1);
        v118 = v100;
        if ((v100 & 1) != 0)
        {
          sub_22EFC77E8(a3, 1);
          v57 = v123;
          v64 = v125;
          v65 = &off_24FAB7F50;
          v60 = v92;
        }
        else
        {
          v101 = v168;
          if (v168 >= (unint64_t)HIDWORD(v168))
          {
            v102 = v100;
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v100 = v102;
            v101 = v168;
          }
          v57 = v123;
          v64 = v125;
          v65 = &off_24FAB7F50;
          v60 = v92;
          v167[v101] = v100 & 0xFFFFFFFFFFFFFFFELL;
          LODWORD(v168) = v168 + 1;
        }
        v62 = v115;
        v129 = &off_24FAB7F50;
        if (v135)
        {
          free(v134);
          v57 = v123;
          v64 = v125;
        }
        v138 = &off_24FAB7F50;
        if (HIDWORD(v142))
        {
          free((void *)v142);
          v57 = v123;
          v64 = v125;
        }
        if (HIBYTE(v164))
        {
          if ((_DWORD)v152 == 5)
          {
            sub_22EC64D18(v160, (uint64_t)&v152);
            goto LABEL_150;
          }
          if (v159[1] && (*(_DWORD *)(v160[9] + 52) & 0x400000) != 0)
          {
            sub_22E90B5FC((unint64_t)v160, (uint64_t)&v152);
LABEL_150:
            v57 = v123;
            v64 = v125;
          }
        }
        if (v159[0])
        {
          v104 = sub_22EC6CBD0(v159[0]);
          MEMORY[0x2348A0E9C](v104, 0x10E0C409F09D3C3);
          v57 = v123;
          v64 = v125;
        }
        if (v153 != v155)
        {
          free(v153);
          v57 = v123;
          v64 = v125;
        }
        if ((v118 & 1) == 0)
          goto LABEL_124;
        goto LABEL_179;
      }
    }
LABEL_124:
    while (1)
    {
      v58 = *(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v58)
        break;
      if ((*(_DWORD *)(v58 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_98;
    }
LABEL_170:
    if ((v127 & 1) != 0)
      goto LABEL_178;
    goto LABEL_171;
  }
  v59 = sub_22EFC3B90(v14);
  v126 = v33;
  if (v59)
  {
    v58 = v59;
    v127 = 0;
    goto LABEL_97;
  }
LABEL_171:
  v105 = sub_22EBBC0DC((_QWORD *)v128, v126);
  v106 = sub_22EB2EA08(v128, v126, 5, (unint64_t)v105 & 0xFFFFFFFFFFFFFFFELL);
  v107 = sub_22ED358AC(v128, v126, v106 & 0xFFFFFFFFFFFFFFFELL, 0);
  if ((v107 & 1) == 0)
  {
    v108 = v107 & 0xFFFFFFFFFFFFFFFELL;
    v109 = v168;
    if (v168 >= HIDWORD(v168))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v109 = v168;
    }
    v167[v109] = v108;
    LODWORD(v168) = v168 + 1;
    sub_22E905168(v128, 0);
    v110 = sub_22ED2C004((_QWORD *)v128, v126, v126, (_BYTE **)v167, v168);
    v111 = *(_QWORD *)(*(_QWORD *)(v128 + 1896) + 8 * *(unsigned int *)(v128 + 1904) - 8);
    --*(_QWORD *)(v111 + 360);
    *(_QWORD *)(a3 + 80) &= ~0x8000000uLL;
    v112 = (unint64_t)v110 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)(a3 + 128) = v112;
    if (v112)
    {
      sub_22F0D60E4(v112);
      *(_DWORD *)(a3 + 140) = v113;
    }
    sub_22EFC9100(a3, *(_QWORD *)(v128 + 88));
    v114 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v128 + 96) + 136))(*(_QWORD *)(v128 + 96));
    if (v114)
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v114 + 88))(v114, a3);
    goto LABEL_179;
  }
LABEL_178:
  sub_22EFC77E8(a3, 1);
LABEL_179:
  if (v167 != v169)
    free(v167);
  return sub_22EAE7390((uint64_t)v150);
}

unint64_t sub_22EACA078(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL4 v16;
  int v17;
  unsigned int v18;
  BOOL v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26[25];
  BOOL v27;
  uint64_t v28;

  v4 = *(_WORD *)(a2 + 80) & 0x7F;
  v5 = -40;
  if (v4 > 0x46)
  {
    if (v4 == 83)
      goto LABEL_17;
    if (v4 == 71)
    {
      v5 = -56;
      goto LABEL_17;
    }
    if (v4 != 81)
    {
LABEL_12:
      v6 = v4 - 52;
      v7 = v4 - 33 >= 5;
      v8 = -48;
      if (!v7)
        v8 = -64;
      if (v6 >= 6)
        v5 = v8;
      else
        v5 = -72;
    }
  }
  else
  {
    if (v4 > 0x18)
      goto LABEL_11;
    if (v4 == 16)
    {
LABEL_4:
      v5 = -48;
      goto LABEL_17;
    }
    if (((1 << v4) & 0x1066) == 0)
    {
      if (v4 == 24)
        goto LABEL_4;
LABEL_11:
      if (v4 == 70)
      {
        v5 = -64;
        goto LABEL_17;
      }
      goto LABEL_12;
    }
  }
LABEL_17:
  v9 = *(_QWORD *)(a2 + 72 + v5 + 16);
  v10 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  if ((v9 & 4) != 0)
    v10 = (_QWORD *)*v10;
  if (v10)
    v11 = (uint64_t)(v10 - 8);
  else
    v11 = 0;
  v28 = v11;
  result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v11 + 104) + 96), *(_QWORD *)(v11 + 104));
  if ((**(_QWORD **)(v11 + 128) & 0x40) != 0)
  {
    result = sub_22EFD10F8(v11);
    v14 = result;
  }
  else if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37
         || (result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v11 + 104) + 96), *(_QWORD *)(v11 + 104)),
             (**(_QWORD **)(v11 + 128) & 4) == 0)
         || (**(_BYTE **)(a1 + 72) & 0x10) != 0)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) != 0x37)
      return result;
    result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v11 + 104) + 96), *(_QWORD *)(v11 + 104));
    if ((**(_QWORD **)(v11 + 128) & 0x10) == 0)
      return result;
    if ((**(_BYTE **)(a1 + 72) & 0x10) != 0)
      return result;
    result = sub_22E488FF8(v11);
    if (result == v13)
      return result;
    v14 = result;
    v15 = v13;
    while (1)
    {
      result = sub_22EFD3B9C(v14);
      if ((result & 1) != 0)
        break;
      do
        v14 = *(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF8;
      while (v14 && (*(_DWORD *)(v14 + 28) & 0x7Eu) - 54 > 3);
      if (v14 == v15)
        return result;
    }
  }
  else
  {
    result = sub_22F282248(v11);
    if (result == v24)
      return result;
    v14 = result;
    v25 = v24;
    while (1)
    {
      result = sub_22EFD3AF0(v14, v26);
      if ((result & 1) != 0)
        break;
      do
        v14 = *(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF8;
      while (v14 && (*(_DWORD *)(v14 + 28) & 0x7F) != 0x37);
      if (v14 == v25)
        return result;
    }
  }
  if (v14)
  {
    v16 = sub_22E692064(v14);
    v17 = *(_DWORD *)(v14 + 28) & 0x7F;
    v27 = (*(_DWORD *)(a2 + 28) & 0x7F) != 55;
    if (!v16 || v17 != 57)
    {
      v19 = v17 == 57;
      v20 = v17 == 57 || !v16;
      v21 = v19;
      if ((!v16 & v21) != 0)
        v22 = 6493;
      else
        v22 = 6492;
      if (v20 == 1)
        v18 = v22;
      else
        v18 = 6494;
    }
    else
    {
      v18 = 6495;
    }
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v14 + 24), v18, 0, (uint64_t)v26);
    v23 = sub_22E890024((uint64_t)v26, &v28);
    sub_22E894E38(v23, (unsigned __int8 *)&v27);
    return (unint64_t)sub_22E903BEC((unsigned int *)v26);
  }
  return result;
}

unint64_t sub_22EACA330(_QWORD *a1, unsigned int a2, unint64_t a3, uint64_t a4, void *a5, unsigned int a6, uint64_t a7)
{
  int v13;
  unsigned int v14;
  _QWORD *v15;
  unint64_t result;
  unint64_t v17;

  v17 = a3;
  if ((a3 & 1) != 0
    || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu)
     - 2 > 3
    || (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) | a3) & 4 | *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 1
    || (v13 = sub_22F111968(&v17, a1[11]), a3 = v17, !v13))
  {
    result = sub_22EAE8208(a1, a2, a3, a4, a5, a6, a7, 0);
    if (result)
      return result;
    a3 = v17;
    v15 = a1;
    v14 = a2;
  }
  else
  {
    v14 = a2;
    v15 = a1;
  }
  return sub_22EAE7D04(v15, v14, a3, a4, (uint64_t)a5);
}

uint64_t sub_22EACA424(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24FAB7F50;
  if (*(_DWORD *)(a1 + 52))
    free(*(void **)(a1 + 40));
  return a1;
}

unint64_t sub_22EACA460(uint64_t a1, _QWORD *a2, unsigned int a3)
{
  return (unint64_t)sub_22EBBC0DC(a2, a3) & 0xFFFFFFFFFFFFFFFELL;
}

uint64_t sub_22EACA488(unint64_t a1)
{
  uint64_t result;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 0x1000) != 0 || (result = sub_22EABE940(a1), (_DWORD)result))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
    return (**(_QWORD **)(a1 + 128) >> 43) & 1;
  }
  return result;
}

uint64_t sub_22EACA4EC(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  _DWORD **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _DWORD *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  __int128 v84;
  unint64_t v85;
  unint64_t v86;
  void **v87;
  _QWORD *v88;
  uint64_t *v89;
  _BYTE *v90;
  int *v91;
  int *v92;
  __int128 v93;
  uint64_t v94;
  unint64_t v95;
  unsigned int v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t *v99;
  int *v100;
  void **v101;
  _BYTE *v102;
  uint64_t v103;
  _QWORD *v104;
  llvm *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  llvm *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  unsigned int *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  int v137;
  unsigned __int8 *v138;
  uint64_t v139;
  unint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  unsigned int v148;
  __int128 v149;
  int v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t (**v160)();
  uint64_t (***v161)();
  unint64_t v162;
  int v163;
  void **v164;
  void *v165;
  int v166;
  char v167;
  void **v168;
  llvm *v169;
  uint64_t *v170;
  uint64_t v171;
  int v172;
  void **v173;
  void *v174;
  int v175;
  void **v176;
  char v177;
  char v178;
  _QWORD v179[2];
  uint64_t (**v180)();
  uint64_t v181[2];
  uint64_t v182[3];
  uint64_t v183[6];
  char v184;
  void *v185;
  void *v186;
  uint64_t v187;
  _QWORD v188[2];
  int v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192[3];
  _QWORD *v193;
  uint64_t v194;
  int v195;
  _BYTE v196[24];
  int v197;
  __int16 v198;
  char v199;
  _QWORD *v200;
  uint64_t v201;
  _QWORD v202[12];

  v202[10] = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(a3 + 80);
  if ((v3 & 0x800000000) != 0 || (*(_BYTE *)(a3 + 28) & 0x80) != 0)
    return result;
  v6 = result;
  v7 = v3 & 0x7F;
  v8 = -40;
  if (v7 > 70)
  {
    if (v7 == 83)
      goto LABEL_19;
    if (v7 == 71)
    {
      v8 = -56;
      goto LABEL_19;
    }
    if (v7 != 81)
    {
LABEL_14:
      v9 = v7 - 52;
      v10 = (v7 - 33) >= 5;
      v11 = -48;
      if (!v10)
        v11 = -64;
      if (v9 >= 6)
        v8 = v11;
      else
        v8 = -72;
    }
  }
  else
  {
    if (v7 > 0x18)
      goto LABEL_13;
    if (v7 == 16)
    {
LABEL_6:
      v8 = -48;
      goto LABEL_19;
    }
    if (((1 << v7) & 0x1066) == 0)
    {
      if (v7 == 24)
        goto LABEL_6;
LABEL_13:
      if (v7 == 70)
      {
        v8 = -64;
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
LABEL_19:
  v12 = *(_QWORD *)(a3 + 72 + v8 + 16);
  v13 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 4) != 0)
    v13 = (_QWORD *)*v13;
  if (v13)
    v14 = (uint64_t)(v13 - 8);
  else
    v14 = 0;
  if ((*(_BYTE *)(v14 + 28) & 0x80) != 0)
    return sub_22EFC77E8(a3, 1);
  v15 = **(_QWORD **)(a3 + 120);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 48) & 0xFFFFFFFFFFFFFFF0);
  v152 = a3 + 72;
  if (!v16 || (v17 = *(_DWORD *)(v16 + 16), v17 != 41))
  {
    v16 = sub_22F10CF48(v16);
    v17 = *(_DWORD *)(v16 + 16);
  }
  if ((v17 & 0x100000) != 0)
  {
    do
    {
      while (1)
      {
        v16 = *(_QWORD *)(*(_QWORD *)(v16 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v16)
          break;
        v18 = *(_DWORD *)(v16 + 16);
        if ((v18 & 0xFE) != 0x28)
          break;
        if ((v18 & 0x100000) == 0)
          goto LABEL_34;
      }
      v16 = sub_22F10CF48(v16);
    }
    while ((*(_DWORD *)(v16 + 16) & 0x100000) != 0);
  }
LABEL_34:
  v19 = *(_QWORD *)(v16 + 32);
  sub_22E46BB88(a3);
  sub_22E46BB88(a3);
  v153 = v19;
  v154 = v19 & 0xFFFFFFFFFFFFFFF0;
  v156 = a2;
  v183[0] = v14;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v14 + 104) + 96), *(_QWORD *)(v14 + 104));
  v151 = v14;
  if (*(_DWORD *)(*(_QWORD *)(v14 + 128) + 20))
  {
    if ((sub_22EACA488(v14) & 1) == 0)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v14 + 104) + 96), *(_QWORD *)(v14 + 104));
      if (*(_DWORD *)(*(_QWORD *)(v14 + 128) + 16) >= 2u)
      {
        v148 = a2;
        v185 = &v187;
        v186 = (void *)0x1000000000;
        v169 = 0;
        v170 = 0;
        LODWORD(v171) = 0;
        v20 = sub_22E46A3A0(v14);
        v158 = v21;
        if (v20 != v21)
        {
          v22 = v20;
          v23 = v186;
          while (1)
          {
            if (v23 >= HIDWORD(v186))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v23 = v186;
            }
            *((_QWORD *)v185 + v23) = v22;
            v10 = __CFADD__((_DWORD)v186, 1);
            v24 = (_DWORD)v186 + 1;
            LODWORD(v186) = (_DWORD)v186 + 1;
            if (!v10)
              break;
LABEL_45:
            v23 = 0;
            v22 += 24;
            if (v22 == v158)
              goto LABEL_84;
          }
          while (1)
          {
            v25 = *((_QWORD *)v185 + v24 - 1);
            LODWORD(v186) = v24 - 1;
            v182[0] = 0;
            v26 = *(_QWORD *)(**(_QWORD **)(v25 + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v26 + 8) & 0xF) != 0)
              v26 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v25 + 16));
            v27 = sub_22F10C2A4(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0));
            if (v27 && (*(_DWORD *)(v27 + 28) & 0x7Fu) - 35 >= 3)
              v27 = 0;
            v182[0] = v27;
            if (!sub_22EAE8D9C(v27))
              goto LABEL_60;
            if ((*(_BYTE *)(v25 + 12) & 1) == 0)
            {
              v28 = v182[0];
              sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v182[0] + 104) + 96), *(_QWORD *)(v182[0] + 104));
              if (!*(_DWORD *)(*(_QWORD *)(v28 + 128) + 20))
                goto LABEL_60;
            }
            v29 = sub_22EC6602C(v6, v182[0]);
            v30 = v29 & 0xFFFFFFFFFFFFFFF8;
            if ((v29 & 0xFFFFFFFFFFFFFFF8) == 0
              || (*(_BYTE *)(v30 + 82) & 0x80) != 0
              || !sub_22EFD3F30(v29 & 0xFFFFFFFFFFFFFFF8))
            {
              goto LABEL_60;
            }
            if ((*(_BYTE *)(v25 + 12) & 1) != 0)
              break;
            if ((*(_BYTE *)(v30 + 83) & 2) != 0)
            {
              v31 = sub_22E46A3A0(v182[0]);
              v33 = v32;
              v34 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v32 - v31) >> 3);
              v35 = v186;
              if (v34 + v186 > HIDWORD(v186))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v35 = v186;
              }
              if (v31 != v33)
              {
                v36 = (unint64_t *)((char *)v185 + 8 * v35);
                do
                {
                  *v36++ = v31;
                  v31 += 24;
                }
                while (v31 != v33);
              }
              v24 = v35 + v34;
              LODWORD(v186) = v24;
              if (!v24)
                goto LABEL_45;
            }
            else
            {
LABEL_60:
              v24 = v186;
              if (!(_DWORD)v186)
                goto LABEL_45;
            }
          }
          v160 = (uint64_t (**)())(*(uint64_t (**)(uint64_t))(*(_QWORD *)v182[0] + 32))(v182[0]);
          v161 = (uint64_t (***)())v22;
          sub_22F2543D4((uint64_t)&v200, (uint64_t)&v169, (uint64_t *)&v160, &v161);
          v37 = (_DWORD **)v200;
          v38 = v200[1];
          if (v38 && v38 != v22)
          {
            sub_22E8FCA40((_QWORD *)v6, v156, 0x1BF9u, 0, (uint64_t)&v200);
            v39 = sub_22E890024((uint64_t)&v200, v183);
            sub_22E890024(v39, v182);
            sub_22E903BEC((unsigned int *)&v200);
            sub_22E8FCA40((_QWORD *)v6, *v37[1], 0x181Au, 0, (uint64_t)&v200);
            v40 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v182[0] + 32))(v182[0]);
            v41 = *(_QWORD *)(**((_QWORD **)v37[1] + 2) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v41 + 8) & 0xF) != 0)
              v41 = (unint64_t)sub_22F10D2BC(**((_QWORD **)v37[1] + 2));
            v42 = (_DWORD *)sub_22F10C2A4(*(_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF0));
            if ((v42[7] & 0x7Fu) - 35 >= 3)
              v42 = 0;
            LOBYTE(v179[0]) = v40 == (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v42 + 32))(v42);
            v43 = sub_22E894E38((uint64_t)&v200, (unsigned __int8 *)v179);
            v44 = sub_22E890024(v43, v182);
            v45 = *(_QWORD *)(**((_QWORD **)v37[1] + 2) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v45 + 8) & 0xF) != 0)
              v45 = (unint64_t)sub_22F10D2BC(**((_QWORD **)v37[1] + 2));
            v160 = (uint64_t (**)())(v45 & 0xFFFFFFFFFFFFFFF0);
            v46 = sub_22E8901B8(v44, (uint64_t *)&v160);
            v181[0] = *(_QWORD *)v37[1];
            sub_22E8906A0(v46, v181);
            sub_22E903BEC((unsigned int *)&v200);
            sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)v22, 0x181Au, 0, (uint64_t)&v200);
            v47 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v182[0] + 32))(v182[0]);
            v48 = *(_QWORD *)(**(_QWORD **)(v22 + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v48 + 8) & 0xF) != 0)
              v48 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v22 + 16));
            v49 = (_DWORD *)sub_22F10C2A4(*(_QWORD *)(v48 & 0xFFFFFFFFFFFFFFF0));
            if ((v49[7] & 0x7Fu) - 35 >= 3)
              v49 = 0;
            LOBYTE(v179[0]) = v47 == (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v49 + 32))(v49);
            v50 = sub_22E894E38((uint64_t)&v200, (unsigned __int8 *)v179);
            v51 = sub_22E890024(v50, v182);
            v52 = *(_QWORD *)(**(_QWORD **)(v22 + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v52 + 8) & 0xF) != 0)
              v52 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v22 + 16));
            v160 = (uint64_t (**)())(v52 & 0xFFFFFFFFFFFFFFF0);
            v53 = sub_22E8901B8(v51, (uint64_t *)&v160);
            v181[0] = *(_QWORD *)v25;
            sub_22E8906A0(v53, v181);
            sub_22E903BEC((unsigned int *)&v200);
            v37[1] = 0;
          }
          goto LABEL_60;
        }
LABEL_84:
        llvm::deallocate_buffer(v169, (void *)(16 * v171));
        if (v185 != &v187)
          free(v185);
        a2 = v148;
      }
    }
  }
  if (a3)
    v54 = v152;
  else
    v54 = 0;
  sub_22EAE5FA8((uint64_t)v183, v6, v54);
  v55 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v55)
    v56 = *(_BYTE *)(v55 + 16) == 26;
  else
    v56 = 0;
  if (!v56)
    sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
  sub_22EB14850(v6, v156);
  v57 = *(_QWORD *)(v183[0] + 216);
  v58 = *(_WORD *)(v57 + 8) & 0x7F;
  v59 = -40;
  if (v58 <= 0x46)
  {
    if (v58 <= 0x18)
    {
      if (v58 == 16)
      {
LABEL_98:
        v59 = -48;
        goto LABEL_110;
      }
      if (((1 << v58) & 0x1066) != 0)
        goto LABEL_110;
      if (v58 == 24)
        goto LABEL_98;
    }
    if (v58 == 70)
    {
LABEL_108:
      v59 = -64;
      goto LABEL_110;
    }
    goto LABEL_106;
  }
  if (v58 == 83)
    goto LABEL_110;
  if (v58 == 71)
  {
    v59 = -56;
    goto LABEL_110;
  }
  if (v58 != 81)
  {
LABEL_106:
    if (v58 - 52 >= 6)
    {
      if (v58 - 33 >= 5)
        goto LABEL_98;
      goto LABEL_108;
    }
    v59 = -72;
  }
LABEL_110:
  LODWORD(v185) = 13;
  BYTE4(v185) = 0;
  LODWORD(v186) = a2;
  v188[1] = 0;
  v187 = v57 + v59;
  v188[0] = 0;
  v189 = 0;
  v191 = 0;
  v190 = 0;
  sub_22EE012D0(v183[0], (unint64_t)&v185);
  v184 = 1;
  v200 = v202;
  v201 = 0x800000000;
  v60 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 16))(a3);
  v61 = HIDWORD(v60);
  if (!HIDWORD(v60))
    LODWORD(v61) = *(_DWORD *)(a3 + 24);
  v182[0] = (uint64_t)&off_24FAB7E60;
  v182[1] = v15;
  v182[2] = v153;
  v181[0] = (uint64_t)&off_24FAB7F78;
  v181[1] = (uint64_t)v182;
  v180 = &off_24FAB7E88;
  v62 = sub_22E46A3A0(v14);
  v150 = v61;
  if (v62 != v63)
  {
    v64 = v62;
    v65 = v63;
    v159 = 0;
    v157 = v61;
    v66 = v62;
    do
    {
      v67 = *(_QWORD *)(**(_QWORD **)(v66 + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v67 + 8) & 0xF) != 0)
        v67 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v66 + 16));
      v68 = v67 & 0xFFFFFFFFFFFFFFF0;
      v69 = *(_QWORD *)(v67 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v69 + 8) & 0xF) != 0)
        v69 = (unint64_t)sub_22F10D2BC(v68);
      v70 = v69 & 0xFFFFFFFFFFFFFFF0;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v69 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 45)
      {
        v185 = &v187;
        v187 = v64;
        v186 = (void *)0x400000001;
        v71 = *(_QWORD *)(v154 + 8);
        if ((v71 & 8) != 0)
          v72 = *(_DWORD *)((v71 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
        else
          v72 = 0;
        v73 = sub_22EF5DD84(*(_QWORD *)(v6 + 88), v70, v72);
        v169 = (llvm *)&off_24FAB7EB0;
        v170 = v182;
        v171 = v73;
        v172 = 2;
        v173 = &v185;
        v179[0] = &off_24FAB7ED8;
        v179[1] = &v180;
        v74 = *(_QWORD *)(v6 + 88);
        v75 = sub_22E46BB88(a3);
        if ((v75 & 0xCFFFFFFF8) != 0)
        {
          v160 = (uint64_t (**)())v75;
          v76 = sub_22E491354((unsigned int *)&v160, v70);
          v77 = sub_22EF5DBC4(v74, v76, (uint64_t)v160);
        }
        else
        {
          v77 = v75 & 7 | v70;
        }
        v160 = &off_24FAB7EB0;
        v161 = (uint64_t (***)())v179;
        v162 = v77;
        v163 = 1;
        v164 = &v185;
        v78 = *(_QWORD *)(v6 + 88);
        v79 = sub_22E46BB88(a3);
        v80 = sub_22EF5DD84(v78, v70, v79 >> 11);
        v81 = sub_22EACA330((_QWORD *)v6, v157, v80, (uint64_t)&v160, &v169, 1u, 0);
        if ((v81 & 1) != 0)
        {
          sub_22EFC77E8(a3, 1);
        }
        else
        {
          v82 = v201;
          if (v201 >= (unint64_t)HIDWORD(v201))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v82 = v201;
          }
          v200[v82] = v81 & 0xFFFFFFFFFFFFFFFELL;
          LODWORD(v201) = v201 + 1;
        }
        if (v185 != &v187)
          free(v185);
        if ((v81 & 1) != 0)
          goto LABEL_221;
      }
      else
      {
        v159 = 1;
      }
      v66 += 24;
      v64 += 24;
    }
    while (v66 != v65);
    v83 = sub_22EFC3B90(v151);
    if (!v83)
      goto LABEL_212;
    v85 = v83;
LABEL_139:
    v87 = &v186;
    v88 = v188;
    v89 = v192;
    v90 = v196;
    v91 = &v172;
    v92 = &v163;
    v93 = xmmword_22F463A40;
    *(_QWORD *)&v84 = 16842752;
LABEL_140:
    if ((*(_BYTE *)(v85 + 68) & 1) == 0 || *(_QWORD *)(v85 + 40))
    {
      v94 = *(_QWORD *)(v85 + 16);
      v95 = v94 & 0xFFFFFFFFFFFFFFF8;
      if ((v94 & 4) != 0)
        v95 = *(_QWORD *)v95;
      v96 = (*(_WORD *)(v95 + 8) & 0x7E) - 34;
      if (v95)
        v97 = v95 - 64;
      else
        v97 = 0;
      if (v96 >= 4)
        v97 = 0;
      if ((*(_DWORD *)(v97 + 72) & 0xE000) != 0x4000)
      {
        if ((*(_BYTE *)(v85 + 28) & 0x80) != 0)
        {
          v159 = 1;
          goto LABEL_171;
        }
        v149 = v84;
        v155 = v93;
        v98 = *(_QWORD *)(v85 + 48);
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v98 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFE) == 0x28)
        {
          v146 = v91;
          v99 = v89;
          v100 = v92;
          v101 = v87;
          v102 = v90;
          sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(v151 + 24), 0x13C7u, 0, (uint64_t)&v185);
          v103 = *(_QWORD *)(v151 + 48);
          v104 = v88;
          if (v103)
            v105 = (llvm *)(v103 & 0xFFFFFFFFFFFFFFF0);
          else
            v105 = (llvm *)sub_22EF6462C(*(_QWORD *)(v6 + 88), v151);
          v169 = v105;
          v106 = sub_22E8901B8((uint64_t)&v185, (uint64_t *)&v169);
          LODWORD(v179[0]) = 0;
          v107 = sub_22E8900C4(v106, (int *)v179);
          v160 = *(uint64_t (***)())(v85 + 40);
          sub_22E894538(v107, (uint64_t *)&v160);
          sub_22E903BEC((unsigned int *)&v185);
          v108 = (unsigned int *)&v178;
LABEL_169:
          sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(v85 + 24), 0x64u, 0, (uint64_t)v108);
          sub_22E903BEC(v108);
          v159 = 1;
          v88 = v104;
          v90 = v102;
          v87 = v101;
          v92 = v100;
          v89 = v99;
          v91 = v146;
          goto LABEL_170;
        }
        v109 = sub_22EF5BA38(*(_QWORD *)(v6 + 88), v98);
        v110 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v109 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((!v110 || *(_BYTE *)(v110 + 16) != 45)
          && ((v109 & 1) != 0 || (*(_BYTE *)((v109 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) != 0))
        {
          v146 = v91;
          v99 = v89;
          v100 = v92;
          v101 = v87;
          v102 = v90;
          sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(v151 + 24), 0x13C7u, 0, (uint64_t)&v185);
          v115 = *(_QWORD *)(v151 + 48);
          v104 = v88;
          if (v115)
            v116 = (llvm *)(v115 & 0xFFFFFFFFFFFFFFF0);
          else
            v116 = (llvm *)sub_22EF6462C(*(_QWORD *)(v6 + 88), v151);
          v169 = v116;
          v117 = sub_22E8901B8((uint64_t)&v185, (uint64_t *)&v169);
          LODWORD(v179[0]) = 1;
          v118 = sub_22E8900C4(v117, (int *)v179);
          v160 = *(uint64_t (***)())(v85 + 40);
          sub_22E894538(v118, (uint64_t *)&v160);
          sub_22E903BEC((unsigned int *)&v185);
          v108 = (unsigned int *)&v177;
          goto LABEL_169;
        }
        if (sub_22EFC2F84(v85, *(_QWORD *)(v6 + 88)))
        {
LABEL_170:
          v93 = v155;
          v84 = v149;
          goto LABEL_171;
        }
        v147 = (uint64_t)v90;
        v111 = *(_QWORD *)(v85 + 48);
        v112 = v111 & 0xFFFFFFFFFFFFFFF0;
        v113 = *(_QWORD *)(v111 & 0xFFFFFFFFFFFFFFF0);
        if (!v113 || (v114 = *(_DWORD *)(v113 + 16), (v114 & 0xFE) != 0x28))
        {
          if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v113 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
            goto LABEL_162;
          v145 = *(_QWORD *)(v85 + 48);
          v113 = sub_22F10CF48(v113);
          if (!v113)
          {
            v111 = v145;
            goto LABEL_162;
          }
          v114 = *(_DWORD *)(v113 + 16);
        }
        if ((v114 & 0x100000) != 0)
        {
          do
          {
            v113 = *(_QWORD *)(*(_QWORD *)(v113 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (v113)
            {
              v131 = *(_DWORD *)(v113 + 16);
              if ((v131 & 0xFE) == 0x28)
                continue;
            }
            v113 = sub_22F10CF48(v113);
            v131 = *(_DWORD *)(v113 + 16);
          }
          while ((v131 & 0x100000) != 0);
        }
        v111 = *(_QWORD *)(v113 + 32);
        v112 = v111 & 0xFFFFFFFFFFFFFFF0;
LABEL_162:
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v112 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 4)
        {
          v90 = (_BYTE *)v147;
          goto LABEL_170;
        }
        v143 = v111;
        v119 = *(_QWORD *)(v85 + 40);
        v185 = 0;
        v186 = v88;
        v187 = 0x800000000;
        v89[1] = 0;
        v89[2] = 0;
        *v89 = 0;
        v193 = (_QWORD *)v6;
        v194 = v119;
        v195 = v150;
        sub_22EFC6D6C(v147, v119);
        *(_OWORD *)&v196[8] = v155;
        v197 = v149;
        v198 = 0;
        v199 = 0;
        sub_22EC56024((uint64_t)&v185);
        v120 = *(unsigned int *)(v85 + 28);
        v121 = v187;
        if (v187 >= (unint64_t)HIDWORD(v187))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v121 = v187;
        }
        *((_QWORD *)v186 + v121) = (v120 >> 13) & 3 | v85;
        LODWORD(v187) = v187 + 1;
        LODWORD(v185) = 2;
        sub_22EC561E4((uint64_t)&v185);
        v169 = (llvm *)&off_24FAB7F50;
        v170 = v181;
        *(_OWORD *)v91 = 0u;
        *((_OWORD *)v91 + 1) = 0u;
        *((_BYTE *)v91 + 32) = 0;
        v171 = v153;
        v176 = &v185;
        v122 = sub_22EBBB18C(v6);
        v160 = &off_24FAB7F50;
        v161 = &v180;
        v162 = v122;
        *(_OWORD *)v92 = 0u;
        *((_OWORD *)v92 + 1) = 0u;
        v167 = 1;
        v168 = &v185;
        v123 = *(_QWORD *)(v6 + 88);
        v124 = sub_22EBBB18C(v6);
        v125 = sub_22F10ACF8(*(_QWORD *)(v124 & 0xFFFFFFFFFFFFFFF0));
        v126 = 0;
        v127 = *(_QWORD *)((v125 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v127 & 8) != 0)
          v126 = *(_DWORD *)((v127 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
        v128 = sub_22EF5DD84(v123, v143, v126);
        v129 = sub_22EACA330((_QWORD *)v6, v157, v128, (uint64_t)&v160, &v169, 0, 0);
        v90 = (_BYTE *)v147;
        v144 = v129;
        if ((v129 & 1) != 0)
        {
          sub_22EFC77E8(a3, 1);
          v93 = v155;
          v84 = v149;
        }
        else
        {
          v130 = v201;
          if (v201 >= (unint64_t)HIDWORD(v201))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v129 = v144;
            v130 = v201;
          }
          v93 = v155;
          v84 = v149;
          v200[v130] = v129 & 0xFFFFFFFFFFFFFFFELL;
          LODWORD(v201) = v201 + 1;
        }
        v160 = &off_24FAB7F50;
        if (v166)
        {
          free(v165);
          v84 = v149;
          v93 = v155;
        }
        v169 = (llvm *)&off_24FAB7F50;
        if (v175)
        {
          free(v174);
          v84 = v149;
          v93 = v155;
        }
        if (!HIBYTE(v197))
          goto LABEL_193;
        if ((_DWORD)v185 == 5)
        {
          sub_22EC64D18(v193, (uint64_t)&v185);
        }
        else
        {
          if (!v192[1] || (*(_DWORD *)(v193[9] + 52) & 0x400000) == 0)
          {
LABEL_193:
            if (v192[0])
            {
              v132 = sub_22EC6CBD0(v192[0]);
              MEMORY[0x2348A0E9C](v132, 0x10E0C409F09D3C3);
              v84 = v149;
              v93 = v155;
            }
            if (v186 != v88)
            {
              free(v186);
              v84 = v149;
              v93 = v155;
            }
            if ((v144 & 1) == 0)
              goto LABEL_171;
            goto LABEL_221;
          }
          sub_22E90B5FC((unint64_t)v193, (uint64_t)&v185);
        }
        v84 = v149;
        v93 = v155;
        goto LABEL_193;
      }
    }
LABEL_171:
    while (1)
    {
      v85 = *(_QWORD *)(v85 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v85)
        break;
      if ((*(_DWORD *)(v85 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_140;
    }
LABEL_212:
    if ((v159 & 1) != 0)
      goto LABEL_220;
    goto LABEL_213;
  }
  v86 = sub_22EFC3B90(v14);
  v157 = v61;
  if (v86)
  {
    v85 = v86;
    v159 = 0;
    goto LABEL_139;
  }
LABEL_213:
  v133 = sub_22EBBC0DC((_QWORD *)v6, v157);
  v134 = sub_22EB2EA08(v6, v157, 5, (unint64_t)v133 & 0xFFFFFFFFFFFFFFFELL);
  v135 = sub_22ED358AC(v6, v157, v134 & 0xFFFFFFFFFFFFFFFELL, 0);
  if ((v135 & 1) == 0)
  {
    v136 = v135 & 0xFFFFFFFFFFFFFFFELL;
    v137 = v201;
    if (v201 >= HIDWORD(v201))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v137 = v201;
    }
    v200[v137] = v136;
    LODWORD(v201) = v201 + 1;
    sub_22E905168(v6, 0);
    v138 = sub_22ED2C004((_QWORD *)v6, v157, v157, (_BYTE **)v200, v201);
    v139 = *(_QWORD *)(*(_QWORD *)(v6 + 1896) + 8 * *(unsigned int *)(v6 + 1904) - 8);
    --*(_QWORD *)(v139 + 360);
    *(_QWORD *)(a3 + 80) &= ~0x8000000uLL;
    v140 = (unint64_t)v138 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)(a3 + 128) = v140;
    if (v140)
    {
      sub_22F0D60E4(v140);
      *(_DWORD *)(a3 + 140) = v141;
    }
    sub_22EFC9100(a3, *(_QWORD *)(v6 + 88));
    v142 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v6 + 96) + 136))(*(_QWORD *)(v6 + 96));
    if (v142)
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v142 + 88))(v142, a3);
    goto LABEL_221;
  }
LABEL_220:
  sub_22EFC77E8(a3, 1);
LABEL_221:
  if (v200 != v202)
    free(v200);
  return sub_22EAE7390((uint64_t)v183);
}

uint64_t sub_22EACB798(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 *v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[6];
  char v29;
  int v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v3 = *(_QWORD *)(a3 + 80);
  if ((v3 & 0x800000000) != 0 || (*(_BYTE *)(a3 + 28) & 0x80) != 0)
    return result;
  v6 = result;
  v7 = a3 + 72;
  v8 = v3 & 0x7F;
  v9 = -40;
  if (v8 > 70)
  {
    if (v8 == 83)
      goto LABEL_19;
    if (v8 == 71)
    {
      v9 = -56;
      goto LABEL_19;
    }
    if (v8 != 81)
    {
LABEL_14:
      v10 = v8 - 52;
      v11 = (v8 - 33) >= 5;
      v12 = -48;
      if (!v11)
        v12 = -64;
      if (v10 >= 6)
        v9 = v12;
      else
        v9 = -72;
    }
  }
  else
  {
    if (v8 > 0x18)
      goto LABEL_13;
    if (v8 == 16)
    {
LABEL_6:
      v9 = -48;
      goto LABEL_19;
    }
    if (((1 << v8) & 0x1066) == 0)
    {
      if (v8 == 24)
        goto LABEL_6;
LABEL_13:
      if (v8 == 70)
      {
        v9 = -64;
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
LABEL_19:
  v13 = *(_QWORD *)(v7 + v9 + 16);
  v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
  if ((v13 & 4) != 0)
    v14 = (_QWORD *)*v14;
  if (v14)
    v15 = (uint64_t)(v14 - 8);
  else
    v15 = 0;
  sub_22EAE5FA8((uint64_t)v28, result, v7);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v16)
    v17 = *(_BYTE *)(v16 + 16) == 26;
  else
    v17 = 0;
  if (!v17)
    sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
  sub_22EB14850(v6, a2);
  sub_22EAB631C(v6, a2, v15, 0);
  v18 = *(_QWORD *)(v28[0] + 216);
  v19 = *(_WORD *)(v18 + 8) & 0x7F;
  v20 = -40;
  if (v19 <= 0x46)
  {
    if (v19 <= 0x18)
    {
      if (v19 == 16)
      {
LABEL_32:
        v20 = -48;
        goto LABEL_44;
      }
      if (((1 << v19) & 0x1066) != 0)
        goto LABEL_44;
      if (v19 == 24)
        goto LABEL_32;
    }
    if (v19 == 70)
    {
LABEL_42:
      v20 = -64;
      goto LABEL_44;
    }
    goto LABEL_40;
  }
  if (v19 == 83)
    goto LABEL_44;
  if (v19 == 71)
  {
    v20 = -56;
    goto LABEL_44;
  }
  if (v19 != 81)
  {
LABEL_40:
    if (v19 - 52 >= 6)
    {
      if (v19 - 33 >= 5)
        goto LABEL_32;
      goto LABEL_42;
    }
    v20 = -72;
  }
LABEL_44:
  v30 = 13;
  v31 = 0;
  v32 = a2;
  v34 = 0;
  v35 = 0;
  v33 = v18 + v20;
  v36 = 0;
  v37 = 0;
  v38 = 0;
  sub_22EE012D0(v28[0], (unint64_t)&v30);
  v29 = 1;
  if ((*(_BYTE *)(*(_QWORD *)(v6 + 72) + 1) & 2) != 0 && (*(_BYTE *)(a3 + 29) & 2) != 0)
    sub_22EACA078(v6, a3);
  if (sub_22EAAFD60((_QWORD *)v6, a3, 0, 0, 0))
  {
    sub_22EFC77E8(a3, 1);
  }
  else
  {
    v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 16))(a3);
    v22 = HIDWORD(v21);
    if (!HIDWORD(v21))
      LODWORD(v22) = *(_DWORD *)(a3 + 24);
    sub_22E905168(v6, 0);
    v23 = sub_22ED2C004((_QWORD *)v6, v22, v22, 0, 0);
    *(_QWORD *)(a3 + 80) &= ~0x8000000uLL;
    v24 = (unint64_t)v23 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)(a3 + 128) = v24;
    if (v24)
    {
      sub_22F0D60E4(v24);
      *(_DWORD *)(a3 + 140) = v25;
    }
    sub_22EFC9100(a3, *(_QWORD *)(v6 + 88));
    v26 = *(_QWORD *)(*(_QWORD *)(v6 + 1896) + 8 * *(unsigned int *)(v6 + 1904) - 8);
    --*(_QWORD *)(v26 + 360);
  }
  v27 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v6 + 96) + 136))(*(_QWORD *)(v6 + 96));
  if (v27)
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v27 + 88))(v27, a3);
  return sub_22EAE7390((uint64_t)v28);
}

BOOL sub_22EACBAD4(uint64_t a1)
{
  _BOOL8 result;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 0x400) != 0 || (result = sub_22EABDAF8(a1)))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
    return (**(_QWORD **)(a1 + 128) >> 41) & 1;
  }
  return result;
}

BOOL sub_22EACBB38(uint64_t a1)
{
  _BOOL8 result;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 0x400) != 0 || (result = sub_22EABDAF8(a1)))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
    return (**(_QWORD **)(a1 + 128) >> 47) & 1;
  }
  return result;
}

uint64_t sub_22EACBB98(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned __int8 *v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[6];
  char v29;
  int v30;
  char v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v3 = *(_QWORD *)(a3 + 80);
  if ((v3 & 0x800000000) != 0 || (*(_BYTE *)(a3 + 28) & 0x80) != 0)
    return result;
  v6 = result;
  v7 = a3 + 72;
  v8 = v3 & 0x7F;
  v9 = -40;
  if (v8 > 70)
  {
    if (v8 == 83)
      goto LABEL_19;
    if (v8 == 71)
    {
      v9 = -56;
      goto LABEL_19;
    }
    if (v8 != 81)
    {
LABEL_14:
      v10 = v8 - 52;
      v11 = (v8 - 33) >= 5;
      v12 = -48;
      if (!v11)
        v12 = -64;
      if (v10 >= 6)
        v9 = v12;
      else
        v9 = -72;
    }
  }
  else
  {
    if (v8 > 0x18)
      goto LABEL_13;
    if (v8 == 16)
    {
LABEL_6:
      v9 = -48;
      goto LABEL_19;
    }
    if (((1 << v8) & 0x1066) == 0)
    {
      if (v8 == 24)
        goto LABEL_6;
LABEL_13:
      if (v8 == 70)
      {
        v9 = -64;
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
LABEL_19:
  v13 = *(_QWORD *)(v7 + v9 + 16);
  v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
  if ((v13 & 4) != 0)
    v14 = (_QWORD *)*v14;
  if (v14)
    v15 = (uint64_t)(v14 - 8);
  else
    v15 = 0;
  sub_22EAE5FA8((uint64_t)v28, result, v7);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v16)
    v17 = *(_BYTE *)(v16 + 16) == 26;
  else
    v17 = 0;
  if (!v17)
    sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
  sub_22EB14850(v6, a2);
  sub_22EAB631C(v6, a2, v15, 0);
  v18 = *(_QWORD *)(v28[0] + 216);
  v19 = *(_WORD *)(v18 + 8) & 0x7F;
  v20 = -40;
  if (v19 > 0x46)
  {
    switch(v19)
    {
      case 'S':
        goto LABEL_44;
      case 'G':
        v20 = -56;
        goto LABEL_44;
      case 'Q':
        goto LABEL_44;
    }
    goto LABEL_40;
  }
  if (v19 > 0x18)
    goto LABEL_39;
  if (v19 != 16)
  {
    if (((1 << v19) & 0x1066) != 0)
      goto LABEL_44;
    if (v19 != 24)
    {
LABEL_39:
      if (v19 == 70)
      {
LABEL_42:
        v20 = -64;
        goto LABEL_44;
      }
LABEL_40:
      if (v19 - 52 < 6)
      {
        v20 = -72;
        goto LABEL_44;
      }
      if (v19 - 33 < 5)
        goto LABEL_42;
    }
  }
  v20 = -48;
LABEL_44:
  v30 = 13;
  v31 = 0;
  v32 = a2;
  v34 = 0;
  v35 = 0;
  v33 = v18 + v20;
  v36 = 0;
  v37 = 0;
  v38 = 0;
  sub_22EE012D0(v28[0], (unint64_t)&v30);
  v29 = 1;
  if (sub_22EAAFD60((_QWORD *)v6, a3, 0, 0, 0))
  {
    sub_22EFC77E8(a3, 1);
  }
  else
  {
    v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 16))(a3);
    v22 = HIDWORD(v21);
    if (!HIDWORD(v21))
      LODWORD(v22) = *(_DWORD *)(a3 + 24);
    sub_22E905168(v6, 0);
    v23 = sub_22ED2C004((_QWORD *)v6, v22, v22, 0, 0);
    *(_QWORD *)(a3 + 80) &= ~0x8000000uLL;
    v24 = (unint64_t)v23 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)(a3 + 128) = v24;
    if (v24)
    {
      sub_22F0D60E4(v24);
      *(_DWORD *)(a3 + 140) = v25;
    }
    sub_22EFC9100(a3, *(_QWORD *)(v6 + 88));
    v26 = *(_QWORD *)(*(_QWORD *)(v6 + 1896) + 8 * *(unsigned int *)(v6 + 1904) - 8);
    --*(_QWORD *)(v26 + 360);
  }
  v27 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v6 + 96) + 136))(*(_QWORD *)(v6 + 96));
  if (v27)
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v27 + 88))(v27, a3);
  return sub_22EAE7390((uint64_t)v28);
}

uint64_t sub_22EACBEB4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  BOOL v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unsigned __int8 *v34;
  int v35;
  char *v36;
  int v37;
  unint64_t v38;
  int v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _BYTE v46[56];

  v6 = a3 + 72;
  if (a3)
    v7 = a3 + 72;
  else
    v7 = 0;
  sub_22EAE5FA8((uint64_t)v46, a1, v7);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v8)
    v9 = *(unsigned __int8 *)(v8 + 16) - 27 > 0xFFFFFFFD;
  else
    v9 = 0;
  if (!v9)
    v8 = sub_22F10CF48(v8);
  v10 = *(_QWORD *)(sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v8 + 24) & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0);
  if (v10)
    v11 = *(unsigned __int8 *)(v10 + 16) - 27 > 0xFFFFFFFD;
  else
    v11 = 0;
  if (!v11)
    v10 = sub_22F10CF48(v10);
  v12 = *(_WORD *)(a3 + 80) & 0x7F;
  v13 = -40;
  if (v12 > 0x46)
  {
    if (v12 == 83)
      goto LABEL_30;
    if (v12 == 71)
    {
      v13 = -56;
      goto LABEL_30;
    }
    if (v12 != 81)
    {
LABEL_25:
      v14 = v12 - 52;
      v15 = v12 - 33 >= 5;
      v16 = -48;
      if (!v15)
        v16 = -64;
      if (v14 >= 6)
        v13 = v16;
      else
        v13 = -72;
    }
  }
  else
  {
    if (v12 > 0x18)
      goto LABEL_24;
    if (v12 == 16)
    {
LABEL_17:
      v13 = -48;
      goto LABEL_30;
    }
    if (((1 << v12) & 0x1066) == 0)
    {
      if (v12 == 24)
        goto LABEL_17;
LABEL_24:
      if (v12 == 70)
      {
        v13 = -64;
        goto LABEL_30;
      }
      goto LABEL_25;
    }
  }
LABEL_30:
  v17 = (*(_DWORD *)(v10 + 16) >> 19) & 0x1F;
  v18 = *(_QWORD *)(v6 + v13 + 16);
  v19 = (_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF8);
  if ((v18 & 4) != 0)
    v19 = (_QWORD *)*v19;
  if (v19)
    v20 = (unint64_t)(v19 - 8);
  else
    v20 = 0;
  v21 = sub_22EFD462C(v20);
  v22 = v21;
  if (v21 && (*(_DWORD *)(v21 + 28) & 0x7F) == 0x1D)
    v22 = *(_QWORD *)(v21 + 48);
  v23 = sub_22EFD4818(v20, v17);
  if ((*(_QWORD *)(a3 + 144) & 6) == 4)
  {
    v24 = *(_QWORD *)(a3 + 144) & 0xFFFFFFFFFFFFFFF8;
    if (v24)
    {
      v25 = *(_QWORD *)(v24 + 24);
      if (v25)
      {
        v26 = *(_QWORD *)(v22 + 144);
        if ((v26 & 6) != 0)
          v27 = 0;
        else
          v27 = v26 & 0xFFFFFFFFFFFFFFF8;
        v28 = sub_22F34A594(a1, v27, v25, a2);
        if (!v28)
          return sub_22EAE7390((uint64_t)v46);
        v22 = v28;
        v29 = *(_QWORD *)(v23 + 144);
        v30 = (v29 & 6) != 0 ? 0 : v29 & 0xFFFFFFFFFFFFFFF8;
        v31 = sub_22F34A594(a1, v30, v25, a2);
        if (!v31)
          return sub_22EAE7390((uint64_t)v46);
        v23 = v31;
      }
    }
  }
  if ((*(_BYTE *)(v22 + 28) & 0x80) == 0)
  {
    sub_22EB4E494(a1, a2, v22, 1);
    sub_22EFC9100(v23, *(_QWORD *)(a1 + 88));
    *(_DWORD *)(v23 + 28) |= 0x800u;
    v33 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (!v33 || *(unsigned __int8 *)(v33 + 16) - 27 <= 0xFFFFFFFD)
      v33 = sub_22F10CF48(v33);
    *(_QWORD *)(v23 + 48) = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v33 + 24) & 0xFFFFFFFFFFFFFFF0));
    v34 = (unsigned __int8 *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 16, 3);
    v35 = *(_DWORD *)(a3 + 24);
    *v34 = 8;
    if (byte_255E04EB3)
    {
      v36 = sub_22F0D3748(8);
      ++*((_DWORD *)v36 + 2);
    }
    *((_DWORD *)v34 + 1) = v35;
    *((_DWORD *)v34 + 2) = v35;
    *(_DWORD *)v34 = *v34;
    *(_QWORD *)(v23 + 80) &= ~0x8000000uLL;
    *(_QWORD *)(v23 + 128) = v34;
    sub_22F0D60E4((uint64_t)v34);
    *(_DWORD *)(v23 + 140) = v37;
    v38 = sub_22F32D524(a1, v23, *(_QWORD *)(v23 + 48), 1, *(_DWORD *)(a3 + 24), 0);
    v45 = sub_22ED358AC(a1, *(_DWORD *)(a3 + 24), v38, 0) & 0xFFFFFFFFFFFFFFFELL;
    v39 = *(_DWORD *)(a3 + 24);
    v40 = (unsigned __int8 *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 24, 3);
    v41 = sub_22F0D6590(v40, &v45, 1, v39, v39);
    *(_QWORD *)(a3 + 80) &= ~0x8000000uLL;
    *(_QWORD *)(a3 + 128) = v41;
    sub_22F0D60E4((uint64_t)v41);
    *(_DWORD *)(a3 + 140) = v42;
    sub_22EFC9100(a3, *(_QWORD *)(a1 + 88));
    *(_DWORD *)(a3 + 28) |= 0x800u;
    v43 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 96) + 136))(*(_QWORD *)(a1 + 96));
    if (v43)
    {
      v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v43 + 88))(v43, a3);
      (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v44 + 88))(v44, v23);
    }
  }
  return sub_22EAE7390((uint64_t)v46);
}

uint64_t sub_22EACC28C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 **a6, uint64_t a7, unsigned __int8 a8, unsigned __int8 a9, unsigned __int8 a10, unsigned __int8 a11, int a12, uint64_t a13)
{
  _BOOL4 v18;
  int v19;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  uint64_t v26;
  int v27;

  v18 = 0;
  if (a5)
  {
    if (!a12)
    {
      v27 = 0;
      v26 = a4;
      v25 = a8;
      v24 = a3;
      v19 = sub_22EFD8088(a5, &v27);
      a3 = v24;
      a8 = v25;
      a4 = v26;
      v18 = 0;
      if (v19)
      {
        if ((sub_22E46BB88(a5) & 0xFFFFF800) == 0 && a7 && (a7 == 1 || sub_22EFFF908(a6[1])) && !sub_22EFFF908(*a6))
        {
          v21 = *(_QWORD *)(v26 + 16);
          v22 = (_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
          if ((v21 & 4) != 0)
            v22 = (_QWORD *)*v22;
          if (v22)
            v23 = (unint64_t)(v22 - 8);
          else
            v23 = 0;
          v18 = sub_22EFFF950(*a6, *(_QWORD *)(a1 + 88), v23);
        }
        else
        {
          v18 = 0;
        }
        a4 = v26;
        a8 = v25;
        a3 = v24;
      }
    }
  }
  return sub_22EACC3D8(a1, a2, a3, a4, a5, v18, (uint64_t *)a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_22EACC3D8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t *a7, unsigned int a8, unsigned __int8 a9, unsigned __int8 a10, unsigned __int8 a11, unsigned __int8 a12, char a13, uint64_t a14)
{
  uint64_t v17;
  uint64_t v20;
  char v22;
  unsigned int v23;

  v17 = a5;
  v23 = a2;
  if (!a4 || (*(_DWORD *)(a4 + 28) & 0x7F) != 0x2F)
    return sub_22EACC4D8(a1, a2, a3, v17, a6, a7, a8, a9, a10, a11, a12, v22, a13, a14);
  v17 = sub_22EAC7678(a1, a2, a5);
  v20 = 1;
  if ((sub_22EB17F48(a1, v17, &v23, 1, 0, 0, 0, 0) & 1) == 0)
  {
    a2 = v23;
    return sub_22EACC4D8(a1, a2, a3, v17, a6, a7, a8, a9, a10, a11, a12, v22, a13, a14);
  }
  return v20;
}

uint64_t sub_22EACC4D8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t *a6, unsigned int a7, unsigned __int8 a8, unsigned __int8 a9, unsigned __int8 a10, unsigned __int8 a11, char a12, char a13, uint64_t a14)
{
  uint64_t v18;
  unsigned int *v19;

  sub_22EB4E494(a1, a2, a4, 1);
  v18 = *(_QWORD *)(a1 + 72);
  if ((*(_BYTE *)(v18 + 68) & 0x20) != 0)
  {
    if (!sub_22F31C760(a1, a2, a4))
      return 1;
    v18 = *(_QWORD *)(a1 + 72);
  }
  if ((*(_BYTE *)(v18 + 104) & 4) == 0 || sub_22F345534())
  {
    v19 = (unsigned int *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 8 * a7 + 40, 3);
    sub_22F061794(v19, 118, a3, a2, a4, a5, a6, a7, a8, a9, a10, a11, a13, a14);
    return sub_22EB346AC(a1, (unint64_t)v19, a4);
  }
  return 1;
}

uint64_t sub_22EACC620(_QWORD *a1, int a2, uint64_t a3)
{
  uint64_t v6;
  BOOL v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BOOL4 v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned int v31[24];
  unint64_t v32;
  uint64_t v33;
  void *v34[2];
  _QWORD v35[11];

  v35[10] = *MEMORY[0x24BDAC8D0];
  v33 = a3;
  v6 = *(_QWORD *)(a3 + 72) & 3;
  if ((_DWORD)v6)
    v7 = (_DWORD)v6 == 3;
  else
    v7 = 1;
  if (!v7)
  {
    v8 = (_QWORD *)(*(_QWORD *)(a3 + 72) & 0xFFFFFFFFFFFFFFFCLL);
    if ((*(_BYTE *)(a3 + 68) & 1) != 0)
      v8 = (_QWORD *)*v8;
    if (v8)
    {
LABEL_40:
      v25 = a1[11];
      v26 = a1[27];
      v24 = sub_22E3CD3D4(v25 + 2032, 32, 3);
      sub_22F3C5EB8(v24, v25, a2, a3, *(_QWORD *)(a3 + 48), v26);
      return v24;
    }
  }
  if ((*(_BYTE *)(a3 + 28) & 0x80) != 0)
    return 1;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = v9 & 0xFFFFFFFFFFFFFFF8;
  if ((v9 & 4) != 0)
    v10 = *(_QWORD *)v10;
  v11 = (*(_WORD *)(v10 + 8) & 0x7E) - 34;
  if (v10)
    v12 = v10 - 64;
  else
    v12 = 0;
  if (v11 >= 4)
    v13 = 0;
  else
    v13 = v12;
  if ((sub_22EFD5760(v13) & 0xFFFFFFFD) == 0)
  {
    v32 = sub_22F3B16FC(v13 + 64);
    sub_22E8FCA40(a1, a2, 0xC85u, 0, (uint64_t)v34);
    v27 = sub_22E890024((uint64_t)v34, (uint64_t *)&v32);
    sub_22E890024(v27, &v33);
    sub_22E903BEC((unsigned int *)v34);
    v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 16))(v33);
    sub_22E8FCA40(a1, SHIDWORD(v28), 0x1598u, 0, (uint64_t)v31);
    sub_22E903BEC(v31);
    sub_22EE03478((uint64_t)a1);
    if (!v29)
      sub_22EFC77E8(v33, 1);
    return 1;
  }
  v14 = sub_22EFD57F4(v13);
  for (i = sub_22EFCE144(v14 + 64, *(_QWORD *)(a3 + 40)); ; i = *(_QWORD *)(v16 + 8))
  {
    while (1)
    {
      v16 = i & 0xFFFFFFFFFFFFFFF8;
      if ((i & 4) != 0)
      {
        if (v16)
          break;
      }
      i = 0;
      if ((*(_DWORD *)(v16 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_26;
    }
    if ((*(_DWORD *)(*(_QWORD *)v16 + 28) & 0x7Fu) - 49 < 3)
      break;
  }
  v16 = *(_QWORD *)v16;
LABEL_26:
  v17 = *(_DWORD *)(v16 + 72) & 3;
  if (v17)
    v18 = v17 == 3;
  else
    v18 = 1;
  if (v18)
  {
    v22 = 1;
  }
  else
  {
    sub_22EE007CC(a3, 0, 0, 0, (uint64_t)v34);
    v22 = sub_22EE0C8F0((uint64_t)a1, a2, a3, v16, (uint64_t)v34, v19, v20, v21);
  }
  if (v17)
    v23 = v17 == 3;
  else
    v23 = 1;
  if (!v23 && v34[0] != v35)
    free(v34[0]);
  if (!v22)
    goto LABEL_40;
  v24 = 1;
  sub_22EFC77E8(a3, 1);
  return v24;
}

uint64_t sub_22EACC8BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int v23;
  int v24;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int v30;
  unsigned int v31[24];
  unsigned int v32[24];
  unsigned int v33[24];
  unsigned int v34[24];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v35 = a2;
  if ((*(_BYTE *)(a2 + 28) & 0x80) == 0)
  {
    v4 = a2;
    v5 = (_QWORD *)result;
    result = sub_22EFBC5B4(a2);
    if (!result || (*(_BYTE *)(result + 2) & 2) == 0)
    {
      result = sub_22F114198(*(_QWORD *)(a3 + 24));
      if ((*(_BYTE *)(result + 28) & 0x80) == 0)
      {
        v6 = result;
        result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(result + 104) + 96), *(_QWORD *)(result + 104));
        if ((**(_QWORD **)(v6 + 128) & 0x8000000000000000) == 0)
        {
          result = sub_22EFC7ADC(v6 + 64);
          if ((result & 1) == 0)
          {
            result = sub_22EFBE910(v4, v5[11]);
            if ((result & 1) == 0)
            {
              result = sub_22EC6602C(v5, v6);
              v7 = result & 0xFFFFFFFFFFFFFFF8;
              if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                              + 16) & 0xFEu)
                 - 2 >= 4)
              {
                sub_22EB4E494(v5, *(unsigned int *)(v4 + 24), v7, 1);
                v8 = *(_DWORD *)(v4 + 24);
                v37 = v5[11] + 2128;
                v38 = 2588;
                v9 = *(_QWORD *)(v4 + 40);
                v10 = (char *)sub_22E3B8AAC(v37);
                v36 = v10;
                v11 = v10 + 1;
                v12 = *v10;
                v11[v12] = 10;
                v13 = v12 + 1;
                *v10 = v12 + 2;
                v10 += 16;
                *(_QWORD *)&v10[8 * v12] = v9;
                v14 = *(_QWORD *)(v4 + 48);
                v11[v13] = 9;
                *(_QWORD *)&v10[8 * v13] = v14;
                sub_22E90A46C((uint64_t)v5, v8, v7, (uint64_t)&v36, 0);
                if (v36 && v37)
                  sub_22E3BB10C(v37, (unint64_t)v36);
                LODWORD(v36) = *(_DWORD *)(v4 + 24);
                result = sub_22EB17F48(v5, v7, &v36, 1, 0, 0, 0, 0);
              }
              v15 = *(_QWORD *)(v7 + 80);
              if ((v15 & 0x800000) == 0)
              {
                if ((v15 & 0xC0000000) != 0)
                {
                  v16 = sub_22EFBC5B4(v4);
                  v17 = !v16 || (*(_BYTE *)(v16 + 2) & 1) != 0 || sub_22EFBCF80(v4) == 0;
                  v36 = (char *)&v38;
                  v37 = 0x800000000;
                  if ((sub_22F0075CC(v4, (uint64_t)&v36) & 1) == 0
                    && (*(_DWORD *)(v4 + 28) & 0x7F) != 0x40
                    && (*(_BYTE *)(v4 + 97) & 0x80) != 0
                    && !v17)
                  {
                    sub_22E8FCA40(v5, *(_DWORD *)(v4 + 24), 0xC10u, 0, (uint64_t)v34);
                    sub_22E890024((uint64_t)v34, &v35);
                    sub_22E903BEC(v34);
                    if ((_DWORD)v37)
                    {
                      v19 = 0;
                      v20 = 32 * v37;
                      do
                      {
                        sub_22E90379C(v5, *(_DWORD *)&v36[v19], (uint64_t)&v36[v19 + 8], 0, (uint64_t)v33);
                        sub_22E903BEC(v33);
                        v19 += 32;
                      }
                      while (v20 != v19);
                    }
                  }
                  sub_22E89277C(&v36);
                  v4 = v35;
                }
                result = sub_22E3CB5E0(v4);
                if ((result & 1) == 0)
                {
                  sub_22E8FCA40(v5, *(_DWORD *)(v35 + 24), 0x198Du, 0, (uint64_t)v32);
                  result = (uint64_t)sub_22E903BEC(v32);
                  v21 = v35;
                  v22 = *(_BYTE *)(v35 + 96);
                  v23 = v22 & 7;
                  if (v23 != 2)
                  {
                    v24 = v22 & 0x18;
                    if (v23 || v24 != 16)
                      goto LABEL_41;
                  }
                  v26 = *(_DWORD *)(v35 + 28) & 0x7F;
                  if (v26 != 64 && v26 != 62)
                  {
                    v27 = *(_QWORD *)(v35 + 16);
                    v28 = (_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF8);
                    v29 = v27 & 0xFFFFFFFFFFFFFFF8;
                    if ((v27 & 4) != 0)
                      v29 = v28[1];
                    result = sub_22EFCBB30(v29);
                    v30 = *(_WORD *)(result + 8) & 0x7F;
                    if (v30 == 16 || v30 == 83)
                      goto LABEL_41;
                    if ((v27 & 4) != 0)
                      v28 = (_QWORD *)*v28;
                    if (((_WORD)v28[1] & 0x7Eu) - 34 <= 3)
                    {
LABEL_41:
                      sub_22E8FCA40(v5, *(_DWORD *)(v21 + 24), 0x19D7u, 0, (uint64_t)v31);
                      return (uint64_t)sub_22E903BEC(v31);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EACCC94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, uint64_t a7, unsigned __int8 a8, unsigned __int8 a9)
{
  uint64_t v12;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  unint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned __int8 v25;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD v32[9];

  v12 = a4;
  v32[8] = *MEMORY[0x24BDAC8D0];
  v16 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v16)
    v17 = *(_BYTE *)(v16 + 16) == 26;
  else
    v17 = 0;
  if (!v17)
  {
    v27 = a8;
    v28 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0));
    a8 = v27;
    v12 = a4;
    v16 = v28;
  }
  v18 = *(_QWORD *)(v16 + 16);
  if (a5 < (unsigned __int16)(v18 >> 38))
    v19 = (unsigned __int16)(v18 >> 38);
  else
    v19 = a5;
  if (v19 > *(unsigned int *)(a7 + 12))
  {
    v29 = v12;
    v25 = a8;
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    a8 = v25;
    v12 = v29;
    v18 = *(_QWORD *)(v16 + 16);
  }
  if ((v18 & 0x800000000000000) != 0)
    v20 = 3;
  else
    v20 = 4;
  v30 = v32;
  v31 = 0x800000000;
  v21 = sub_22EB326B0(a1, a6, a2, v16, 0, v12, a5, (uint64_t)&v30, v20, a8, a9);
  sub_22E5223E0(a7, v30, (_BYTE *)v30 + 8 * v31);
  sub_22EB18D60((uint64_t)a1, a2, a6, (uint64_t)v30, v31);
  sub_22E97FACC(a1, a2, a3, (unint64_t *)v30, v31, v16, a6);
  v22 = sub_22EFD7558(a2);
  v23 = sub_22F10ACF8(*(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF0));
  if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v23 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0))v21 = sub_22E99170C(a1, a2, v30, v31, a6, a9);
  if (v30 != v32)
    free(v30);
  return v21;
}

uint64_t sub_22EACCED0(uint64_t a1, uint64_t a2)
{
  int v4;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  int v18;
  int v19;
  _QWORD *v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  unsigned int v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _BOOL8 v69;
  unsigned int v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  unint64_t v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82[24];

  if ((*(_QWORD *)(a2 + 40) & 7) == 6)
  {
    v4 = *(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8);
    if (v4 != 4 && v4 != 2)
    {
      if ((v4 & 0xFFFFFFFD) == 1)
      {
        if (!sub_22EAE8E50((_QWORD *)a1, a2))
        {
          v26 = *(_QWORD *)(a1 + 88);
          v27 = sub_22EF67C8C(v26);
          if (!sub_22EAE8F14((_QWORD *)a1, a2, *(_QWORD *)(v26 + 16816), v27 & 7 | *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFFF0) + 8), 0x115Bu, 0x115Cu))
          {
            v28 = **(_QWORD **)(a2 + 120);
            if ((*(_DWORD *)(v28 + 96) & 0x600) == 0x400
              || (*(_DWORD *)(v28 + 96) & 0x600) == 0x200
              || *(_QWORD *)(v28 + 88) >= 8uLL)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x1154u, 0, (uint64_t)v82);
              v81 = *(_QWORD *)(a2 + 40);
              v29 = sub_22E894538((uint64_t)v82, &v81);
              v30 = **(_QWORD **)(a2 + 120);
              goto LABEL_104;
            }
            return 0;
          }
        }
        return 1;
      }
      goto LABEL_10;
    }
    if (sub_22EAE8E50((_QWORD *)a1, a2))
      return 1;
    if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 54 >= 4)
      v22 = 0;
    else
      v22 = a2;
    if (!v22 || !sub_22EFC06D0(v22))
    {
      v31 = *(_QWORD *)(a1 + 88);
      v32 = *(_QWORD *)(v31 + 16816);
      goto LABEL_148;
    }
    v23 = *(_QWORD *)(a1 + 88);
    v24 = *(_WORD *)(v22 + 80) & 0x7F;
    v25 = -40;
    if (v24 > 0x46)
    {
      if (v24 != 83)
      {
        if (v24 == 71)
        {
          v25 = -56;
          goto LABEL_142;
        }
        if (v24 == 81)
          goto LABEL_142;
LABEL_137:
        v61 = v24 - 52;
        v62 = v24 - 33 >= 5;
        v63 = -48;
        if (!v62)
          v63 = -64;
        if (v61 >= 6)
          v25 = v63;
        else
          v25 = -72;
      }
    }
    else
    {
      if (v24 > 0x18)
        goto LABEL_136;
      if (v24 != 16)
      {
        if (((1 << v24) & 0x1066) != 0)
          goto LABEL_142;
        if (v24 != 24)
        {
LABEL_136:
          if (v24 == 70)
          {
            v25 = -64;
            goto LABEL_142;
          }
          goto LABEL_137;
        }
      }
      v25 = -48;
    }
LABEL_142:
    v64 = *(_QWORD *)(v22 + 72 + v25 + 16);
    v65 = (_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF8);
    if ((v64 & 4) != 0)
      v65 = (_QWORD *)*v65;
    if (v65)
      v66 = (uint64_t)(v65 - 8);
    else
      v66 = 0;
    v67 = sub_22EF6477C(*(_QWORD *)(a1 + 88), v66);
    v68 = sub_22EF5B848(v23, v67, 0);
    v32 = v68 & 7 | *(_QWORD *)((v68 & 0xFFFFFFFFFFFFFFF0) + 8);
    v31 = *(_QWORD *)(a1 + 88);
LABEL_148:
    v69 = sub_22EAE8F14((_QWORD *)a1, a2, *(_QWORD *)(v31 + 16392), v32, 0x1152u, 0x1153u);
    v6 = v69;
    if (!v22 || v69)
      return v6;
    v70 = *(_WORD *)(v22 + 80) & 0x7F;
    v71 = -40;
    if (v70 > 0x46)
    {
      if (v70 == 83)
        goto LABEL_166;
      if (v70 == 71)
      {
        v71 = -56;
        goto LABEL_166;
      }
      if (v70 != 81)
      {
LABEL_161:
        v72 = v70 - 52;
        v62 = v70 - 33 >= 5;
        v73 = -48;
        if (!v62)
          v73 = -64;
        if (v72 >= 6)
          v71 = v73;
        else
          v71 = -72;
      }
    }
    else
    {
      if (v70 > 0x18)
        goto LABEL_160;
      if (v70 == 16)
      {
LABEL_153:
        v71 = -48;
        goto LABEL_166;
      }
      if (((1 << v70) & 0x1066) == 0)
      {
        if (v70 == 24)
          goto LABEL_153;
LABEL_160:
        if (v70 == 70)
        {
          v71 = -64;
          goto LABEL_166;
        }
        goto LABEL_161;
      }
    }
LABEL_166:
    v74 = *(_QWORD *)(v22 + 72 + v71 + 16);
    v75 = (_QWORD *)(v74 & 0xFFFFFFFFFFFFFFF8);
    if ((v74 & 4) != 0)
      v75 = (_QWORD *)*v75;
    if (v75)
      v76 = v75 - 8;
    else
      v76 = 0;
    if ((sub_22EFC7ADC((unint64_t)(v76 + 8)) & 1) == 0
      && sub_22EFC06D0(v22)
      && !sub_22EBBD024(a1, v22))
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v22 + 24), 0xCB0u, 0, (uint64_t)v82);
      sub_22E903BEC(v82);
      return 1;
    }
    return 0;
  }
  v4 = 0;
LABEL_10:
  if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFC)
  {
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2) + 80) & 0xE000) != 0x4000
      && ((*(_QWORD *)(a2 + 40) & 7) != 6
       || (*(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) > 3))
    {
      goto LABEL_61;
    }
    v19 = *(_DWORD *)(a2 + 24);
    v20 = (_QWORD *)a1;
    v21 = 4450;
    goto LABEL_182;
  }
  v7 = *(_QWORD *)(a2 + 120);
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v8)
    v9 = *(_BYTE *)(v8 + 16) == 26;
  else
    v9 = 0;
  if (!v9)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
      goto LABEL_181;
    v8 = sub_22F10CF48(v8);
    if (!v8)
      goto LABEL_181;
  }
  v10 = *(_QWORD *)(v8 + 16);
  if ((v10 & 0x3FFFC000000000) == 0)
    goto LABEL_181;
  v11 = v7 + 8 * (unsigned __int16)(v10 >> 38);
  do
  {
    v12 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v7 + 48) & 0xFFFFFFFFFFFFFFF0);
    v13 = *v12;
    if (!*v12 || (v14 = *(_DWORD *)(v13 + 16), (v14 & 0xFE) != 0x28))
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_21;
      v78 = *(_QWORD *)(*(_QWORD *)v7 + 48) & 0xFFFFFFFFFFFFFFF0;
      v13 = sub_22F10CF48(v13);
      if (!v13)
      {
        v12 = (uint64_t *)v78;
        goto LABEL_21;
      }
      v14 = *(_DWORD *)(v13 + 16);
    }
    if ((v14 & 0x100000) != 0)
    {
      do
      {
        v13 = *(_QWORD *)(*(_QWORD *)(v13 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v13)
        {
          v18 = *(_DWORD *)(v13 + 16);
          if ((v18 & 0xFE) == 0x28)
            continue;
        }
        v13 = sub_22F10CF48(v13);
        v18 = *(_DWORD *)(v13 + 16);
      }
      while ((v18 & 0x100000) != 0);
    }
    v12 = (uint64_t *)(*(_QWORD *)(v13 + 32) & 0xFFFFFFFFFFFFFFF0);
LABEL_21:
    v15 = *v12;
    if ((*(_BYTE *)(v15 + 17) & 4) != 0)
      goto LABEL_61;
    v16 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v16 == 45)
      goto LABEL_61;
    v7 += 8;
  }
  while (v16 != 44 && v7 != v11);
  if (v16 != 44)
  {
LABEL_181:
    v19 = *(_DWORD *)(a2 + 24);
    v20 = (_QWORD *)a1;
    v21 = 4448;
    goto LABEL_182;
  }
LABEL_61:
  if (v4 == 42
    || ((v33 = *(uint64_t **)(a2 + 120), (v34 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0)) != 0)
      ? (v35 = *(_BYTE *)(v34 + 16) == 26)
      : (v35 = 0),
        !v35
     && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v34 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26
      || (v34 = sub_22F10CF48(v34)) == 0)
     || (v36 = *(_QWORD *)(v34 + 16), (v36 & 0x3FFFC000000000) == 0)))
  {
LABEL_79:
    v42 = byte_22F47F0D6[3 * v4];
    v43 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (v43 && *(_BYTE *)(v43 + 16) == 26
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
      && (v43 = sub_22F10CF48(v43)) != 0)
    {
      v44 = (unsigned __int16)(*(_QWORD *)(v43 + 16) >> 38);
    }
    else
    {
      v44 = 0;
    }
    if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 54 >= 4)
      v45 = v44;
    else
      v45 = v44 + 1;
    LODWORD(v80) = v45;
    if ((v4 - 44) <= 0xFFFFFFFD)
    {
      if (!v42 && v45 == 1)
      {
LABEL_88:
        v46 = 1;
LABEL_89:
        v79 = v46;
LABEL_90:
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x115Eu, 0, (uint64_t)v82);
        v81 = *(_QWORD *)(a2 + 40);
        v47 = sub_22E894538((uint64_t)v82, &v81);
        v48 = sub_22E89519C(v47, (unsigned int *)&v80);
        v49 = sub_22E89519C(v48, (unsigned int *)&v79);
        goto LABEL_183;
      }
      v52 = 0x220000006001uLL >> v4;
      if (v45)
      {
        if (v45 == 2)
        {
          if ((v52 & 1) != 0)
          {
LABEL_127:
            if (v42)
            {
              v79 = 0;
              goto LABEL_90;
            }
            goto LABEL_88;
          }
          goto LABEL_109;
        }
        if (v45 < 3)
          goto LABEL_109;
      }
      if (v42 && (v52 & 1) == 0)
      {
        v46 = 2;
        goto LABEL_89;
      }
      goto LABEL_127;
    }
    if (v4 != 43 || v45 == 2)
    {
      if (v4 == 42)
        goto LABEL_113;
    }
    else
    {
      if ((**(_QWORD **)(a1 + 72) & 0x2000) != 0)
        v50 = 5356;
      else
        v50 = 5169;
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), v50, 0, (uint64_t)v82);
      v81 = *(_QWORD *)(a2 + 40);
      v51 = sub_22E894538((uint64_t)v82, &v81);
      v79 = 2 * (v45 != 1);
      sub_22E8900C4(v51, &v79);
      sub_22E903BEC(v82);
    }
LABEL_109:
    v53 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (!v53 || *(_BYTE *)(v53 + 16) != 26)
      v53 = sub_22F10CF48(v53);
    if ((*(_BYTE *)(v53 + 23) & 8) != 0)
    {
      v19 = *(_DWORD *)(a2 + 24);
      v20 = (_QWORD *)a1;
      v21 = 4451;
      goto LABEL_182;
    }
LABEL_113:
    if (((0x31FFFFFF7FFFuLL >> v4) & 1) != 0 || (*(_DWORD *)(a2 + 28) & 0x7Eu) - 54 < 4)
    {
      v6 = 0;
      if ((v4 - 37) > 1 || v45 != 2)
        return v6;
      v54 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (v54 && *(_BYTE *)(v54 + 16) == 26
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v54 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
        && (v54 = sub_22F10CF48(v54)) != 0)
      {
        v55 = (unsigned __int16)(*(_QWORD *)(v54 + 16) >> 38) - 1;
      }
      else
      {
        v55 = 0xFFFFFFFFLL;
      }
      v56 = *(_QWORD *)(*(_QWORD *)(a2 + 120) + 8 * v55);
      v57 = *(_QWORD *)(*(_QWORD *)(v56 + 48) & 0xFFFFFFFFFFFFFFF0);
      v58 = *(_QWORD *)(*(_QWORD *)(v57 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v58)
        v59 = (*(_DWORD *)(v58 + 16) & 0xFF800FF) == 95420427;
      else
        v59 = 0;
      if (!v59 && (*(_BYTE *)(v57 + 17) & 4) == 0)
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v56 + 24), 0x1161u, 0, (uint64_t)v82);
        v81 = *(_QWORD *)(v56 + 48);
        v60 = sub_22E8901B8((uint64_t)v82, &v81);
        LOBYTE(v79) = v4 == 38;
        v49 = sub_22E894E38(v60, (unsigned __int8 *)&v79);
        goto LABEL_183;
      }
      return 0;
    }
    v19 = *(_DWORD *)(a2 + 24);
    v20 = (_QWORD *)a1;
    v21 = 4447;
LABEL_182:
    sub_22E8FCA40(v20, v19, v21, 0, (uint64_t)v82);
    v81 = *(_QWORD *)(a2 + 40);
    v49 = sub_22E894538((uint64_t)v82, &v81);
    goto LABEL_183;
  }
  v37 = 8 * (unsigned __int16)(v36 >> 38);
  while (1)
  {
    v38 = *v33;
    if ((*(_DWORD *)(*v33 + 96) & 0x600) == 0x400
      || (*(_DWORD *)(*v33 + 96) & 0x600) == 0x200
      || *(_QWORD *)(v38 + 88) >= 8uLL)
    {
      break;
    }
    ++v33;
    v37 -= 8;
    if (!v37)
      goto LABEL_79;
  }
  if (v4 == 43)
  {
    if ((**(_QWORD **)(a1 + 72) & 0x2000) != 0)
      v39 = 5356;
    else
      v39 = 5169;
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), v39, 0, (uint64_t)v82);
    v81 = *(_QWORD *)(a2 + 40);
    v40 = sub_22E894538((uint64_t)v82, &v81);
    v79 = 1;
    v41 = sub_22E8900C4(v40, &v79);
    v80 = sub_22EFBF2CC(v38);
    sub_22E8906A0(v41, (uint64_t *)&v80);
    sub_22E903BEC(v82);
    goto LABEL_79;
  }
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v38 + 24), 0x115Du, 0, (uint64_t)v82);
  v81 = *(_QWORD *)(a2 + 40);
  v29 = sub_22E894538((uint64_t)v82, &v81);
  v30 = v38;
LABEL_104:
  v80 = sub_22EFBF2CC(v30);
  v49 = sub_22E8906A0(v29, (uint64_t *)&v80);
LABEL_183:
  v6 = *(_BYTE *)(v49 + 80) != 0;
  sub_22E903BEC(v82);
  return v6;
}

uint64_t sub_22EACD8AC(uint64_t a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  BOOL v12;
  uint64_t *v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  BOOL v19;
  int v20;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  BOOL v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  unsigned __int8 *v81;
  int v82;
  uint64_t v83;
  unsigned int v84;
  int v86;
  uint64_t v87;
  _BYTE v88[96];
  uint64_t v89;
  uint64_t v90;
  _BYTE v91[96];
  _BYTE v92[96];
  unsigned int v93[24];
  unint64_t v94;
  uint64_t v95[12];
  unsigned int v96[24];

  if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 54 <= 3)
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xE93u, 0, (uint64_t)v96);
    v95[0] = *(_QWORD *)(a2 + 40);
    sub_22E894538((uint64_t)v96, v95);
LABEL_3:
    v4 = v96;
    goto LABEL_173;
  }
  if (sub_22EFB9440(a2))
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xE90u, 0, (uint64_t)v93);
    sub_22E903BEC(v93);
    v27 = *(_QWORD *)(a2 + 16);
    v28 = (_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF8);
    if ((v27 & 4) != 0)
      v28 = (_QWORD *)*v28;
    v29 = sub_22F3B1340((unint64_t)v28);
    if (!v29)
      return 1;
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v29 + 72), 0x15F3u, 0, (uint64_t)v92);
    v4 = (unsigned int *)v92;
LABEL_173:
    sub_22E903BEC(v4);
    return 1;
  }
  v5 = *(_QWORD *)(a2 + 144);
  v6 = v5 & 0xFFFFFFFFFFFFFFF8;
  if ((v5 & 6) != 0 || v6 == 0)
  {
    v8 = (*(_QWORD *)(a2 + 144) & 6) != 4 || v6 == 0;
    if (v8 || (v6 = *(_QWORD *)(v6 + 16) & 0xFFFFFFFFFFFFFFF8) == 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (v11)
        v12 = *(_BYTE *)(v11 + 16) == 26;
      else
        v12 = 0;
      if ((v12
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
         && (v11 = sub_22F10CF48(v11)) != 0)
        && (*(_QWORD *)(v11 + 16) & 0x3FFFC000000000) == 0x4000000000)
      {
        v13 = **(uint64_t ***)(a2 + 120);
        v14 = *(_QWORD *)(v13[6] & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v14 + 8) & 0xF) != 0)
          v14 = (unint64_t)sub_22F10D2BC(v13[6]);
        v15 = (_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0);
        v95[0] = v14 & 0xFFFFFFFFFFFFFFF0;
        v16 = *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0);
        v17 = *(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0;
        v18 = *(_DWORD *)(*(_QWORD *)v17 + 16);
        if (*(_QWORD *)v17)
          v19 = v18 == 11;
        else
          v19 = 0;
        if (v19)
        {
          v20 = *(_DWORD *)(*(_QWORD *)v17 + 16) & 0xFF80000;
          if (v20 == 92274688 || v20 == 111673344)
            goto LABEL_149;
        }
        v22 = *(_QWORD **)(a1 + 88);
        v23 = v15[1];
        if (v23 == (*(_QWORD *)((v22[2051] & 0xFFFFFFFFFFFFFFF0) + 8) | v22[2051] & 7)
          || v23 == (v22[2053] & 7 | *(_QWORD *)((v22[2053] & 0xFFFFFFFFFFFFFFF0) + 8))
          || v23 == (v22[2055] & 7 | *(_QWORD *)((v22[2055] & 0xFFFFFFFFFFFFFFF0) + 8))
          || v23 == (v22[2056] & 7 | *(_QWORD *)((v22[2056] & 0xFFFFFFFFFFFFFFF0) + 8))
          || v23 == (v22[2057] & 7 | *(_QWORD *)((v22[2057] & 0xFFFFFFFFFFFFFFF0) + 8)))
        {
          goto LABEL_149;
        }
        if (*(_BYTE *)(v16 + 16) == 39)
        {
LABEL_47:
          v24 = *(_QWORD *)(v16 + 32);
          v25 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v25 + 8) & 0xF) != 0)
            v25 = (unint64_t)sub_22F10D2BC(v24);
          if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFFF0) + 8) != (*(_QWORD *)((*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408) & 0xFFFFFFFFFFFFFFF0)
                                                                           + 8) | *(_QWORD *)(*(_QWORD *)(a1 + 88)
                                                                                            + 16408) & 7))
            goto LABEL_61;
          if ((v24 & 1) != 0)
          {
            if ((v24 & 4) != 0)
            {
LABEL_61:
              v30 = (*(uint64_t (**)(uint64_t *))(*v13 + 16))(v13);
              sub_22E8FCA40((_QWORD *)a1, v30, 0xE94u, 0, (uint64_t)v96);
              v31 = sub_22E8901B8((uint64_t)v96, v95);
              v32 = sub_22F2F30F4(v31, (uint64_t)"'const char *'");
LABEL_81:
              v43 = v32;
              v44 = (*(uint64_t (**)(uint64_t *))(*v13 + 16))(v13);
LABEL_164:
              v94 = v44;
              v73 = (uint64_t *)&v94;
              goto LABEL_165;
            }
            v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF0) + 8);
          }
          else
          {
            if ((v24 & 4) != 0)
              goto LABEL_61;
            v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF0) + 8);
            if ((v26 & 1) == 0)
              goto LABEL_61;
          }
          if ((v26 & 4) == 0)
            goto LABEL_149;
          goto LABEL_61;
        }
        if (v18 == 39)
        {
          v16 = sub_22F10CF48(v16);
          if (v16)
            goto LABEL_47;
          v17 = *(_QWORD *)(*v15 + 8) & 0xFFFFFFFFFFFFFFF0;
        }
        v33 = *(_QWORD *)v17;
        v34 = *(_DWORD *)(*(_QWORD *)v17 + 16);
        if (v33)
          v35 = v34 == 11;
        else
          v35 = 0;
        if (v35 && ((v34 >> 19) & 0x1FE) - 210 <= 7)
        {
          v36 = (*(uint64_t (**)(uint64_t *))(*v13 + 16))(v13);
          sub_22E8FCA40((_QWORD *)a1, v36, 0xE94u, 0, (uint64_t)v96);
          v37 = sub_22E8901B8((uint64_t)v96, v95);
          v38 = *(_QWORD *)(a1 + 88);
          v39 = 16576;
LABEL_79:
          v32 = sub_22E8901B8(v37, (uint64_t *)(v38 + v39));
          goto LABEL_81;
        }
        if (v34 == 11)
        {
          if (((v34 >> 19) & 0x1FE) - 166 >= 0x14)
          {
LABEL_80:
            v42 = (*(uint64_t (**)(uint64_t *))(*v13 + 16))(v13);
            sub_22E8FCA40((_QWORD *)a1, v42, 0xE92u, 0, (uint64_t)v96);
            v32 = sub_22E8901B8((uint64_t)v96, v95);
            goto LABEL_81;
          }
        }
        else if (v34 != 9)
        {
          if (v34 != 44)
            goto LABEL_80;
          v40 = sub_22F114198(*(_QWORD *)(v33 + 24));
          if ((*(_BYTE *)(v40 + 74) & 1) == 0 && *(_QWORD *)(v40 + 128) < 8uLL)
            goto LABEL_80;
          if ((*(_BYTE *)(sub_22F114198(*(_QWORD *)(v33 + 24)) + 76) & 0x80) != 0)
            goto LABEL_80;
        }
        v41 = (*(uint64_t (**)(uint64_t *))(*v13 + 16))(v13);
        sub_22E8FCA40((_QWORD *)a1, v41, 0xE94u, 0, (uint64_t)v96);
        v37 = sub_22E8901B8((uint64_t)v96, v95);
        v38 = *(_QWORD *)(a1 + 88);
        v39 = 16544;
        goto LABEL_79;
      }
      v56 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (v56)
        v57 = *(_BYTE *)(v56 + 16) == 26;
      else
        v57 = 0;
      if (!v57
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v56 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26
         || (v56 = sub_22F10CF48(v56)) == 0)
        || (*(_QWORD *)(v56 + 16) & 0x3FFFC000000000) != 0x8000000000)
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xE8Eu, 0, (uint64_t)v88);
        v4 = (unsigned int *)v88;
        goto LABEL_173;
      }
      v58 = *(_QWORD **)(a2 + 120);
      v59 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if ((!v59 || *(_BYTE *)(v59 + 16) != 26)
        && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v59 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      {
        sub_22F10CF48(v59);
      }
      v60 = *(_QWORD *)(*(_QWORD *)(*v58 + 48) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v60 + 8) & 0xF) != 0)
        v60 = (unint64_t)sub_22F10D2BC(*(_QWORD *)(*v58 + 48));
      v95[0] = v60 & 0xFFFFFFFFFFFFFFF0;
      v61 = *(_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF0);
      if (v61 && *(_BYTE *)(v61 + 16) == 39
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v61 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
        && (v61 = sub_22F10CF48(v61)) != 0)
      {
        v62 = *(_QWORD *)(v61 + 32);
        if ((v62 & 1) == 0)
        {
          if ((v62 & 4) != 0)
            goto LABEL_163;
          v63 = (unint64_t *)(v62 & 0xFFFFFFFFFFFFFFF0);
          v64 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFFF0) + 8);
          if ((v64 & 1) == 0)
            goto LABEL_163;
LABEL_137:
          if ((v64 & 4) == 0)
          {
            v65 = *v63;
            if ((*(_BYTE *)(v65 + 8) & 0xF) != 0)
              v65 = (unint64_t)sub_22F10D2BC(v62);
            v66 = *(_QWORD **)(a1 + 88);
            v67 = *(_QWORD *)((v65 & 0xFFFFFFFFFFFFFFF0) + 8);
            if (v67 == (*(_QWORD *)((v66[2051] & 0xFFFFFFFFFFFFFFF0) + 8) | v66[2051] & 7)
              || v67 == (v66[2053] & 7 | *(_QWORD *)((v66[2053] & 0xFFFFFFFFFFFFFFF0) + 8))
              || v67 == (v66[2055] & 7 | *(_QWORD *)((v66[2055] & 0xFFFFFFFFFFFFFFF0) + 8))
              || v67 == (v66[2056] & 7 | *(_QWORD *)((v66[2056] & 0xFFFFFFFFFFFFFFF0) + 8))
              || v67 == (v66[2057] & 7 | *(_QWORD *)((v66[2057] & 0xFFFFFFFFFFFFFFF0) + 8)))
            {
              v68 = *(_QWORD *)(*(_QWORD *)(v58[1] + 48) & 0xFFFFFFFFFFFFFFF0);
              if ((*(_BYTE *)(v68 + 8) & 0xF) != 0)
              {
                v68 = (unint64_t)sub_22F10D2BC(*(_QWORD *)(v58[1] + 48));
                v66 = *(_QWORD **)(a1 + 88);
              }
              v69 = v68 & 0xFFFFFFFFFFFFFFF0;
              v94 = v68 & 0xFFFFFFFFFFFFFFF0;
              v70 = sub_22EF67C8C((uint64_t)v66);
              if (*(_QWORD *)(v69 + 8) == (*(_QWORD *)((v70 & 0xFFFFFFFFFFFFFFF0) + 8) | v70 & 7))
                goto LABEL_149;
              v71 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v58[1] + 16))(v58[1]);
              sub_22E8FCA40((_QWORD *)a1, v71, 0xE94u, 0, (uint64_t)v96);
              v72 = sub_22E8901B8((uint64_t)v96, (uint64_t *)&v94);
              v90 = sub_22EF67C8C(*(_QWORD *)(a1 + 88));
              v43 = sub_22E8901B8(v72, &v90);
              v89 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v58[1] + 16))(v58[1]);
              v73 = &v89;
LABEL_165:
              sub_22E8906A0(v43, v73);
              goto LABEL_3;
            }
          }
          goto LABEL_163;
        }
        if ((v62 & 4) == 0)
        {
          v63 = (unint64_t *)(v62 & 0xFFFFFFFFFFFFFFF0);
          v64 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFFFF0) + 8);
          goto LABEL_137;
        }
      }
LABEL_163:
      v86 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*v58 + 16))(*v58);
      sub_22E8FCA40((_QWORD *)a1, v86, 0xE94u, 0, (uint64_t)v96);
      v87 = sub_22E8901B8((uint64_t)v96, v95);
      v43 = sub_22F2F30F4(v87, (uint64_t)"'const char *'");
      v44 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)*v58 + 16))(*v58);
      goto LABEL_164;
    }
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
    v10 = *(_BYTE *)(v9 + 16) == 26;
  else
    v10 = 0;
  if ((v10
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
     && (v9 = sub_22F10CF48(v9)) != 0)
    && (*(_DWORD *)(v9 + 20) & 0x3FFFC0) != 0)
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xE96u, 0, (uint64_t)v91);
    v4 = (unsigned int *)v91;
    goto LABEL_173;
  }
  v45 = *(_QWORD *)(v6 + 56);
  v46 = *(_DWORD *)(v45 + 12) & 0x1FFFFFFF;
  if (v46 == 2)
  {
    v51 = *(_QWORD *)(v45 + 16);
    v50 = *(_QWORD *)(v45 + 24);
    if ((*(_DWORD *)(v51 + 28) & 0x7F) == 0x26)
      v52 = v51;
    else
      v52 = 0;
    if ((*(_DWORD *)(v50 + 28) & 0x7F) == 0x3B)
      v53 = v50;
    else
      v53 = 0;
    if (v52)
      v54 = v53 == 0;
    else
      v54 = 1;
    if (v54)
      goto LABEL_112;
    if ((sub_22EFC7864(v52) & 1) != 0)
      goto LABEL_112;
    if (!sub_22EFC7864(v53))
      goto LABEL_112;
    v55 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v53 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (!v55
      || *(_BYTE *)(v55 + 16) != 47
      || ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v52 + 48)
                                                                                             + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                     + 8) & 0xFFFFFFFFFFFFFFF0)
                                             + 8) & 0xFFFFFFFFFFFFFFF0)
                     + 32) ^ *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v55 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                 + 8) & 0xFFFFFFFFFFFFFFF0)
                                         + 32)) & 0xFFFF7FFF) != 0)
    {
      goto LABEL_112;
    }
    if (*(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956))
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v6 + 24), 0x14EAu, 0, (uint64_t)v96);
      sub_22E903BEC(v96);
    }
  }
  else if (v46 != 1
         || (v47 = *(_QWORD *)(v45 + 16)) == 0
         || (*(_DWORD *)(v47 + 28) & 0x7F) != 0x3B
         || (!sub_22EFC7864(v47)
          || (*(_QWORD *)((*(_QWORD *)(v47 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v47 + 48) & 7) != (*(_QWORD *)((*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408) & 7))
         && ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 0x10) == 0
          || (sub_22EFC7864(v47) & 1) != 0
          || (v48 = *(_QWORD *)(*(_QWORD *)(v47 + 48) & 0xFFFFFFFFFFFFFFF0),
              v49 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v48 + 8) & 0xFFFFFFFFFFFFFFF0) + 16),
              v49 != 45)
          && *(_BYTE *)(v48 + 16) != 15
          && (v49 != 15 || !sub_22F10CF48(v48))))
  {
LABEL_112:
    sub_22E8FCA40((_QWORD *)a1, **(_DWORD **)(v6 + 56), 0xE95u, 0, (uint64_t)v95);
    v94 = **(unsigned int **)(v6 + 56) | ((unint64_t)*(unsigned int *)(*(_QWORD *)(v6 + 56) + 8) << 32);
    sub_22E8906A0((uint64_t)v95, (uint64_t *)&v94);
    v4 = (unsigned int *)v95;
    goto LABEL_173;
  }
LABEL_149:
  v74 = *(uint64_t **)(a2 + 120);
  v75 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v75 && *(_BYTE *)(v75 + 16) == 26
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v75 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
    && (v75 = sub_22F10CF48(v75)) != 0)
  {
    v76 = *(_QWORD *)(v75 + 16);
    if ((v76 & 0x3FFFC000000000) != 0)
    {
      v77 = 8 * (unsigned __int16)(v76 >> 38);
      while (1)
      {
        v78 = *v74;
        if ((*(_DWORD *)(*v74 + 96) & 0x600) == 0x400
          || (*(_DWORD *)(*v74 + 96) & 0x600) == 0x200
          || *(_QWORD *)(v78 + 88) >= 8uLL)
        {
          break;
        }
        ++v74;
        v77 -= 8;
        if (!v77)
          goto LABEL_159;
      }
      v79 = sub_22EFBF2CC(*v74);
      sub_22E8FCA40((_QWORD *)a1, v79, 0xE8Fu, 0, (uint64_t)v96);
      v95[0] = sub_22EFBF2CC(v78);
      sub_22E8906A0((uint64_t)v96, v95);
      sub_22E903BEC(v96);
    }
  }
LABEL_159:
  v80 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) + 16) + 16);
  v82 = *(unsigned __int8 *)(v80 + 16);
  v81 = (unsigned __int8 *)(v80 + 16);
  if (v82 != 95)
  {
    v83 = **(unsigned int **)(*(_QWORD *)((*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) + 16) + 16);
    v84 = sub_22F1E361C(*(_QWORD **)(a1 + 112), *(_DWORD *)(a2 + 24));
    if (v84 == 3 || !v84)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x1BECu, 0, (uint64_t)v96);
      LOBYTE(v95[0]) = sub_22F411FBC(*(unint64_t **)(a1 + 72), v81, v83);
      sub_22E894E38((uint64_t)v96, (unsigned __int8 *)v95);
      sub_22E903BEC(v96);
    }
  }
  return 0;
}

uint64_t sub_22EACE428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  unsigned int *v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v50;
  _QWORD v51[2];
  _QWORD v52[3];
  int v53;
  uint64_t v54;
  __int16 v55;
  unsigned int v56[24];
  _BYTE v57[96];
  uint64_t v58;
  unsigned int v59[24];
  unint64_t v60;
  void (**v61)(_QWORD, uint64_t, _QWORD, uint64_t);
  int v62;
  _QWORD *v63;
  uint64_t v64;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = (uint64_t)v7;
  v9 = v0;
  v64 = *MEMORY[0x24BDAC8D0];
  v10 = *v7;
  v60 = v10;
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu)
     - 2 <= 3)
  {
    v11 = sub_22EF5F824(*(_QWORD *)(v0 + 88), v10);
LABEL_5:
    v10 = v11;
    v60 = v11;
    goto LABEL_6;
  }
  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                + 16)
     - 25 <= 1)
  {
    v11 = sub_22EF5B848(*(_QWORD *)(v0 + 88), v10, 0);
    goto LABEL_5;
  }
LABEL_6:
  v12 = v10 & 0xFFFFFFFFFFFFFFF0;
  v13 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_DWORD *)(v13 + 16);
  if ((v14 & 0x400) != 0 || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 41)
  {
    v15 = 0;
    if ((v14 & 0x800) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
  sub_22E8FCA40((_QWORD *)v9, v4, 0xBD1u, 0, (uint64_t)v59);
  sub_22E903BEC(v59);
  v10 = v60;
  v12 = v60 & 0xFFFFFFFFFFFFFFF0;
  v13 = *(_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_DWORD *)(v13 + 16);
  v15 = 1;
  if ((v14 & 0x800) != 0)
  {
LABEL_11:
    sub_22E8FCA40((_QWORD *)v9, v4, 0xBD3u, 0, (uint64_t)&v61);
    sub_22E8901B8((uint64_t)&v61, (uint64_t *)&v60);
    sub_22E903BEC((unsigned int *)&v61);
    v10 = v60;
    v12 = v60 & 0xFFFFFFFFFFFFFFF0;
    v13 = *(_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF0);
    LOBYTE(v14) = *(_BYTE *)(v13 + 16);
    v15 = 1;
  }
LABEL_12:
  v58 = v10;
  if (v14 == 39)
    goto LABEL_15;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
  {
    v13 = sub_22F10CF48(v13);
    if (v13)
    {
LABEL_15:
      v16 = 0;
      v17 = 0;
      v10 = *(_QWORD *)(v13 + 32);
      v58 = v10;
      v18 = 3022;
      v19 = 1;
      if ((v15 & 1) != 0)
        goto LABEL_61;
      goto LABEL_30;
    }
    v13 = *(_QWORD *)v12;
    v14 = *(_DWORD *)(*(_QWORD *)v12 + 16);
  }
  if ((v14 & 0xFE) == 0x28
    || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28
    && (v13 = sub_22F10CF48(v13)) != 0)
  {
    if ((*(_BYTE *)(v13 + 18) & 0x10) != 0)
    {
      do
      {
        while (1)
        {
          v13 = *(_QWORD *)(*(_QWORD *)(v13 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v13)
            break;
          v20 = *(_DWORD *)(v13 + 16);
          if ((v20 & 0xFE) != 0x28)
            break;
          if ((v20 & 0x100000) == 0)
            goto LABEL_27;
        }
        v13 = sub_22F10CF48(v13);
      }
      while ((*(_DWORD *)(v13 + 16) & 0x100000) != 0);
    }
LABEL_27:
    v19 = 0;
    v16 = 0;
    v10 = *(_QWORD *)(v13 + 32);
    v58 = v10;
    v17 = 1;
    v18 = 3023;
    if ((v15 & 1) != 0)
      goto LABEL_61;
  }
  else
  {
    v19 = 0;
    v17 = 0;
    v16 = 1;
    v18 = 3021;
    if ((v15 & 1) != 0)
    {
LABEL_61:
      v28 = 1;
      goto LABEL_62;
    }
  }
LABEL_30:
  v21 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0);
  if ((v16 & 1) == 0
    && ((v23 = *(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
      ? (v24 = (*(_DWORD *)(v23 + 16) & 0xFF800FF) == 86507531)
      : (v24 = 0),
        v24)
    || (*(_BYTE *)(v22 + 17) & 4) != 0)
  {
    v25 = 0;
  }
  else
  {
    v61 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB6EF8;
    v62 = v18;
    v25 = sub_22EE8B0B0(v9, v4, v10);
  }
  if (((v19 | v25) & 1) == 0 && sub_22F111384(*v21))
  {
    sub_22E8FCA40((_QWORD *)v9, v4, 0xBD2u, 0, (uint64_t)&v61);
    LODWORD(v52[0]) = v17;
    v26 = sub_22E8900C4((uint64_t)&v61, (int *)v52);
    sub_22E8901B8(v26, &v58);
    v27 = (unsigned int *)&v61;
LABEL_60:
    sub_22E903BEC(v27);
    goto LABEL_61;
  }
  if ((v25 & 1) != 0)
    goto LABEL_61;
  if ((*(_BYTE *)(*(_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
  {
    LODWORD(v52[0]) = 2;
    v61 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB7980;
    v62 = 2577;
    v63 = v52;
    if ((sub_22EAB2EB4(v9, v4, v60, &v61) & 1) != 0)
      goto LABEL_61;
  }
  if ((*(_BYTE *)(*(_QWORD *)(v9 + 72) + 1) & 0x40) == 0)
  {
LABEL_45:
    v28 = 0;
    goto LABEL_62;
  }
  v29 = v60 & 0xFFFFFFFFFFFFFFF0;
  v30 = *(_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF0);
  if (!v30 || (v31 = *(_DWORD *)(v30 + 16), (v31 & 0xFE) != 0x28))
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v30 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      goto LABEL_58;
    v30 = sub_22F10CF48(v30);
    if (!v30)
      goto LABEL_58;
    v31 = *(_DWORD *)(v30 + 16);
  }
  if ((v31 & 0x100000) != 0)
  {
    do
    {
      while (1)
      {
        v30 = *(_QWORD *)(*(_QWORD *)(v30 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v30)
          break;
        v32 = *(_DWORD *)(v30 + 16);
        if ((v32 & 0xFE) != 0x28)
          break;
        if ((v32 & 0x100000) == 0)
          goto LABEL_57;
      }
      v30 = sub_22F10CF48(v30);
    }
    while ((*(_DWORD *)(v30 + 16) & 0x100000) != 0);
  }
LABEL_57:
  v29 = *(_QWORD *)(v30 + 32) & 0xFFFFFFFFFFFFFFF0;
LABEL_58:
  v33 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v29 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if ((v33 - 33) <= 1)
  {
    sub_22E8FCA40((_QWORD *)v9, v4, 0x1009u, 0, (uint64_t)v57);
    v27 = (unsigned int *)v57;
    goto LABEL_60;
  }
  if (v33 != 32)
    goto LABEL_45;
  v28 = 0;
  if (((1 << *(_DWORD *)(*(_QWORD *)(v9 + 72) + 400)) & 0xDD) == 0)
  {
    sub_22E8FCA40((_QWORD *)v9, v4, 0x1AA8u, 0, (uint64_t)v56);
    sub_22E903BEC(v56);
    goto LABEL_45;
  }
LABEL_62:
  v34 = sub_22EFBB670(*(_QWORD *)(v9 + 88), *(_QWORD *)(v9 + 216), v6, v4, v2, v60, v8, 0);
  *(_DWORD *)(v34 + 96) |= 0x200u;
  if ((*(_WORD *)(*(_QWORD *)(v9 + 72) + 148) & 2) == 0)
  {
    if ((v28 & 1) == 0)
      goto LABEL_67;
LABEL_66:
    sub_22EFC77E8(v34, 1);
    return v34;
  }
  sub_22EA1D5B8((_QWORD *)v9, v34);
  if (((v28 | v35) & 1) != 0)
    goto LABEL_66;
LABEL_67:
  v36 = *(_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v36 + 17) & 4) != 0)
    return v34;
  v37 = *(_QWORD *)(*(_QWORD *)(v36 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v37 || *(_BYTE *)(v37 + 16) != 45)
    return v34;
  LODWORD(v51[0]) = 6;
  v61 = 0;
  LODWORD(v50) = 3;
  v52[0] = *(unsigned int *)(v9 + 1704);
  sub_22EB4DDB8(v9 + 3688, (int *)v51, (int *)v52, (__int16 *)(v9 + 1693), (uint64_t *)&v61, (int *)&v50);
  v38 = *(unsigned int *)(v9 + 3696);
  v39 = v38 - 2;
  v40 = *(_QWORD *)(v9 + 3688);
  v41 = *(_DWORD *)(v40 + 576 * (v38 - 2));
  if (v41 == 5)
  {
    *(_BYTE *)(v40 + 576 * v38 - 4) = *(_BYTE *)(v40 + 576 * v39 + 572);
    v42 = 1;
  }
  else if (v41 == 2)
  {
    *(_BYTE *)(v40 + 576 * v38 - 4) = 1;
    v42 = *(_BYTE *)(v40 + 576 * v39 + 573) != 0;
  }
  else
  {
    v42 = 0;
    *(_BYTE *)(v40 + 576 * v38 - 4) = 0;
  }
  v43 = v40 + 576 * v38;
  *(_BYTE *)(v43 - 3) = v42;
  *(_WORD *)(v9 + 1693) = 0;
  if (*(_DWORD *)(v9 + 1848))
  {
    llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(v9 + 1776), (llvm::SmallPtrSetImplBase *)(v43 - 560));
    sub_22EAEAE08(v9 + 1840, (uint64_t *)(v43 - 496));
  }
  v44 = sub_22EF69FD4(*(_QWORD *)(v9 + 88), v60);
  LODWORD(v52[0]) = 0;
  v45 = *(_QWORD *)(v34 + 48);
  v52[1] = 0;
  v52[2] = v45;
  v53 = 0;
  v54 = v34;
  v55 = 0;
  v51[0] = (v4 << 32) | 2;
  v51[1] = 0;
  v46 = sub_22E3CD3D4(*(_QWORD *)(v9 + 88) + 2032, 24, 3);
  v50 = sub_22E5BBE34(v46, v4, v44, 1, 0, 0);
  sub_22EC395BC(&v61, v9, v52, v51, &v50, 1, 0, 1);
  v47 = sub_22EC3DF80((int)&v61, v9);
  if ((v47 & 1) != 0)
  {
    sub_22EC3CE2C((uint64_t)&v61);
    sub_22EB48E64(v9);
    goto LABEL_66;
  }
  if ((*(_BYTE *)(*(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFFELL) + 16) + 82) & 0x80) == 0)
  {
    v48 = sub_22EBCCCF0(v9, (int *)(v47 & 0xFFFFFFFFFFFFFFFELL));
    sub_22EFBC9E4(v34, (uint64_t)v48);
  }
  sub_22EACC8BC(v9, v34, v37);
  sub_22EC3CE2C((uint64_t)&v61);
  sub_22EB48E64(v9);
  return v34;
}

unint64_t sub_22EACEBA8(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t *v11;
  _BOOL4 v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  BOOL v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  unint64_t v24;
  _BYTE v26[96];
  uint64_t v27;
  unsigned int v28[24];

  v11 = sub_22EE8156C((uint64_t)a1, a3, (uint64_t)a2, a4, a5, a6, a7, a8);
  v12 = (*(_WORD *)(a3 + 1088) & 1) != 0 || (**(_QWORD **)a3 & 0x3F000) == 204800;
  if (sub_22EE67290((uint64_t)a1, *(_DWORD *)(a3 + 64), v11, 14))
  {
    sub_22EF579A8(a1[11], *(_QWORD *)(a1[11] + 16480), *(_DWORD *)(a3 + 64));
    v12 = 1;
  }
  if (*(_DWORD *)(a3 + 40))
    v13 = 0;
  else
    v13 = *(_QWORD *)(a3 + 48);
  v14 = (_QWORD *)sub_22EC65CE0(a1, (uint64_t)a2, v13, *(_DWORD *)(a3 + 64), 0, 1);
  if (v14)
  {
    v15 = (uint64_t)v14;
    if (sub_22E8CE620((uint64_t)(a1 + 415), v14, a1[27], a2, 0))
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 64), 0x1214u, 0, (uint64_t)v28);
      if (*(_DWORD *)(a3 + 40))
        v16 = 0;
      else
        v16 = *(_QWORD *)(a3 + 48);
      v27 = v16;
      sub_22E8BAE44((uint64_t)v28, &v27);
      sub_22E903BEC(v28);
      sub_22E8FCA40(a1, *(_DWORD *)(v15 + 24), 0x6Du, 0, (uint64_t)v26);
      v17 = (unsigned int *)v26;
      goto LABEL_25;
    }
    v18 = *(_DWORD *)(v15 + 28) & 0x7F;
    v19 = v18 > 0x3B;
    v20 = (1 << v18) & 0x800004100000000;
    if (!v19 && v20 != 0)
      sub_22F34553C((uint64_t)a1, *(_DWORD *)(a3 + 64), v15);
  }
  if (*(_QWORD *)(a3 + 16))
    v22 = v12;
  else
    v22 = 1;
  if ((v22 & 1) == 0)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 64), 0x1202u, 0, (uint64_t)v28);
    v27 = *(_QWORD *)(a3 + 8);
    sub_22E8906A0((uint64_t)v28, &v27);
    v17 = v28;
LABEL_25:
    sub_22E903BEC(v17);
    v12 = 1;
  }
  v23 = sub_22EACE428();
  v24 = v23;
  if (v12)
    sub_22EFC77E8(v23, 1);
  if (v13)
    sub_22EA0483C((uint64_t)a1, v24, a2, 1);
  else
    sub_22EFCCFA0(a1[27], v24);
  sub_22EA7E768(a1, (uint64_t)a2, v24, a3);
  return v24;
}

unint64_t sub_22EACEDFC(uint64_t a1, unsigned int a2, unsigned __int8 *a3, _DWORD *a4, int a5, char a6)
{
  unint64_t v9;
  unsigned int v10;
  uint64_t v12;
  char v13;
  unsigned __int8 *v14;
  char v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BYTE *v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  void *__p[2];
  uint64_t v48;
  _BYTE v49[64];
  uint64_t *v50;
  uint64_t v51;
  unsigned int v52;
  char v53;
  unsigned __int8 *v54;
  __int128 v55;
  uint64_t v56;
  _BYTE v57[104];
  void *v58;
  uint64_t v59;
  _BYTE v60[64];
  void *v61;
  __int128 v62;
  _QWORD v63[35];

  v9 = (unint64_t)a3;
  v10 = a2;
  v63[32] = *MEMORY[0x24BDAC8D0];
  if ((*(_DWORD *)a3 & 0x8000) == 0 && (*(_DWORD *)a3 & 0x10000) == 0 && (a6 & 1) == 0)
  {
    v12 = sub_22ED025A8((uint64_t *)a1, a3);
    v13 = v12;
    v14 = (unsigned __int8 *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    v15 = 1;
    v16 = sub_22EBCF22C(a1, v12 & 0xFFFFFFFFFFFFFFFELL, v10, 0, 1);
    if ((v16 & 1) != 0)
      goto LABEL_12;
    v9 = v16 & 0xFFFFFFFFFFFFFFFELL;
    v52 = 1;
    v51 = 0;
    v53 = 0;
    if ((v13 & 1) != 0)
      goto LABEL_12;
    LOBYTE(v62) = 0;
    v61 = off_24FAB8300;
    DWORD1(v62) = 4717;
    if ((sub_22EB4CB24((_QWORD *)a1, v9, (uint64_t)&v51, &v61, 0) & 1) != 0)
      goto LABEL_23;
    v17 = v52;
    if (v52 > 0x40)
    {
      if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v51) != v17)
      {
        v15 = 0;
LABEL_26:
        if (v51)
          MEMORY[0x2348A0E84](v51, 0x1000C8000313F17);
        goto LABEL_12;
      }
    }
    else if (v51)
    {
      v15 = 0;
      goto LABEL_12;
    }
    v61 = v63;
    v62 = xmmword_22F44E320;
    sub_22F242C48((uint64_t)v49, (uint64_t)&v61);
    if (a4)
    {
      v54 = (unsigned __int8 *)sub_22E8FCD8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
      *(_QWORD *)&v55 = v21;
      sub_22F0D9044(a4, (uint64_t)v49, 0, (__int128 *)&v54, 0, "\n", 1uLL, 0);
    }
    sub_22ED60438(v14, a1, &v54);
    *(_OWORD *)__p = v55;
    v22 = v54;
    v48 = v56;
    if (!v54 || (v28 = *v54, v28 == 117) || v28 == 181)
    {
      sub_22E8FCA40((_QWORD *)a1, v10, 0x126Eu, 0, (uint64_t)&v54);
      v46 = a4 == 0;
      v23 = sub_22E894E38((uint64_t)&v54, (unsigned __int8 *)&v46);
      v24 = v50[1];
      v44 = *v50;
      v45 = v24;
      v25 = sub_22F2F2210(v23, (uint64_t)&v44);
      sub_22F0D4E74(v9);
      v43 = v26;
      v27 = v25;
    }
    else
    {
      if (v28 == 157)
      {
        sub_22E8FCA40((_QWORD *)a1, v10, 0x126Eu, 0, (uint64_t)&v54);
        v46 = a4 == 0;
        v29 = sub_22E894E38((uint64_t)&v54, (unsigned __int8 *)&v46);
        v30 = v50[1];
        v44 = *v50;
        v45 = v30;
        v31 = sub_22F2F2210(v29, (uint64_t)&v44);
        sub_22F0D4E74(v9);
        v43 = v32;
        sub_22E8906A0(v31, &v43);
        sub_22E903BEC((unsigned int *)&v54);
        v54 = 0;
        *(_QWORD *)&v55 = 0;
        *((_QWORD *)&v55 + 1) = v57;
        v56 = 0x400000000;
        v57[96] = 0;
        v58 = v60;
        v59 = 0x400000000;
        v33 = sub_22E9F38D0(a1, v22, (uint64_t)&v54);
        v34 = v58;
        if ((v33 & 1) == 0 && (_DWORD)v59)
        {
          v35 = 16 * v59;
          v36 = (char *)v58 + 8;
          v37 = 1;
          do
          {
            sub_22E9F4654((_QWORD *)a1, v36, v37 & 1);
            v37 = 0;
            v36 += 2;
            v35 -= 16;
          }
          while (v35);
          v34 = v58;
        }
        if (v34 != v60)
          free(v34);
        if (*((_BYTE **)&v55 + 1) != v57)
          free(*((void **)&v55 + 1));
        goto LABEL_19;
      }
      sub_22E8FCA40((_QWORD *)a1, v10, 0x126Fu, 0, (uint64_t)&v54);
      v38 = sub_22E90749C((uint64_t)&v54, __p);
      v46 = a4 == 0;
      v39 = sub_22E894E38(v38, (unsigned __int8 *)&v46);
      v40 = v50[1];
      v44 = *v50;
      v45 = v40;
      v41 = sub_22F2F2210(v39, (uint64_t)&v44);
      sub_22F0D4E74((uint64_t)v22);
      v43 = v42;
      v27 = v41;
    }
    sub_22E8906A0(v27, &v43);
    sub_22E903BEC((unsigned int *)&v54);
LABEL_19:
    if (SHIBYTE(v48) < 0)
      operator delete(__p[0]);
    llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v49);
    if (v61 != v63)
      free(v61);
LABEL_23:
    v15 = 1;
    if (v52 < 0x41)
      goto LABEL_12;
    goto LABEL_26;
  }
  v10 = a2;
  v18 = sub_22EBCF22C(a1, (unint64_t)a3, a2, 0, 1);
  v15 = v18 | a6;
  if ((v18 & 1) == 0)
    v9 = v18 & 0xFFFFFFFFFFFFFFFELL;
LABEL_12:
  v19 = sub_22F3B3054(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), v10, v9, (uint64_t)a4, a5, v15 & 1);
  sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v19);
  return v19;
}

uint64_t sub_22EACF278(uint64_t a1, int a2, int a3, uint64_t *a4)
{
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  int v22;
  uint64_t v24;
  unsigned int v25[24];
  uint64_t v26;
  uint64_t v27[4];
  char v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v27[0] = *a4;
  v26 = sub_22F115668(v27[0]);
  if (!*(_DWORD *)(a1 + 10680))
  {
    v8 = *(_QWORD *)(v27[0] & 0xFFFFFFFFFFFFFFF0);
    v9 = sub_22F112590(v8);
    v10 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
    v11 = *(unsigned __int8 *)(v10 + 16);
    if (v9)
    {
      if (!v10 || v11 != 44)
        goto LABEL_13;
      v12 = (**(_QWORD **)(a1 + 72) & 0x200) == 0;
      v13 = 6438;
      v14 = 5223;
    }
    else
    {
      if (v10 && v11 == 45)
      {
        v24 = sub_22F114198(*(_QWORD *)(v10 + 24));
        v27[1] = (uint64_t)&v28;
        v27[3] = 16;
        v28 = 32;
        __asm { BR              X11 }
      }
      v12 = (**(_QWORD **)(a1 + 72) & 0x200) == 0;
      v13 = 6446;
      v14 = 5314;
    }
    if (v12)
      v15 = v14;
    else
      v15 = v13;
    sub_22E8FCA40((_QWORD *)a1, a3, v15, 0, (uint64_t)v25);
    v16 = sub_22E8901B8((uint64_t)v25, v27);
    sub_22E8906A0(v16, &v26);
    sub_22E903BEC(v25);
LABEL_13:
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0 && a2 != a3)
    {
      sub_22E8FCA40((_QWORD *)a1, a3, 0xDB7u, 0, (uint64_t)v25);
      sub_22E8901B8((uint64_t)v25, v27);
      sub_22E903BEC(v25);
    }
  }
  v17 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 216);
  v19 = *a4;
  for (i = *a4; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_27;
      v21 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v21 <= 0x39)
        break;
LABEL_22:
      if (sub_22F115668(i))
        v19 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_29;
    }
    if (v21 == 24)
      goto LABEL_28;
    if (v21 == 26)
      break;
    if (((1 << v21) & 0x20000000200003CLL) == 0)
      goto LABEL_22;
LABEL_27:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_27;
LABEL_28:
  v19 = i;
LABEL_29:
  v22 = sub_22F115668(v19);
  return sub_22EFD9CC8(v17, v18, v22, (unint64_t)a4 | 4, a3, 0, 0);
}

void sub_22EACF618()
{
  JUMPOUT(0x22EACF548);
}

void sub_22EACF628()
{
  JUMPOUT(0x22EACF620);
}

void sub_22EACF634()
{
  JUMPOUT(0x22EACF548);
}

unint64_t sub_22EACF644(_QWORD *a1, uint64_t *a2, int a3, int a4, unsigned int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t *a10, unint64_t a11)
{
  int *v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  int v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v50;
  int v51;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[2];
  unsigned int v58[25];
  __int16 v59;
  uint64_t v60;

  v60 = a7;
  v53 = dword_22F47F1A0[a4 - 23];
  v59 = 0;
  v19 = sub_22ED5F458(a1, a5, a8, a6, 0, (uint64_t)a10, a11, 1, (_BYTE *)&v59 + 1, &v59, 0);
  if (!v19)
    goto LABEL_7;
  if ((v19[3] & 0x1FFFFFFF) == 0)
  {
    sub_22E8FCA40(a1, *v19, 0x12FCu, 0, (uint64_t)v58);
    v22 = qword_22F47F1B8[v53];
    v57[0] = (uint64_t)off_24FAB8110[v53];
    v57[1] = v22;
    v23 = sub_22F2F2210((uint64_t)v58, (uint64_t)v57);
    sub_22E8BAE44(v23, &v60);
    sub_22E903BEC(v58);
    HIBYTE(v59) = 1;
LABEL_7:
    if (!(_BYTE)v59)
    {
      v25 = a11;
      while (v25 * 8)
      {
        v26 = *(_DWORD *)(a10[--v25] + 12);
        if ((v26 & 0x1FFFFFFF) != 0)
        {
          sub_22E8FCA40(a1, a8, 0x1B82u, 0, (uint64_t)v58);
          v27 = (unint64_t *)(a6 + 8);
          v57[0] = *(_QWORD *)(a6 + 8);
          v28 = sub_22EA02390((uint64_t)v58, v57);
          v56 = *(_QWORD *)a6;
          v29 = sub_22E8906A0(v28, &v56);
          v30 = a1[27];
          if (v30)
            v31 = v30 - 64;
          else
            v31 = 0;
          v55 = v31;
          sub_22E890024(v29, &v55);
          sub_22E903BEC(v58);
          v32 = sub_22EF65A30(a1[11], v53, *v27, v60, 0);
          v33 = a1[11];
          v34 = sub_22F11598C(v32);
          v35 = sub_22E3CD3D4(v33 + 2032, v34 + 8, 3);
          v36 = 0;
          *(_QWORD *)v35 = v32;
          *(_DWORD *)(v35 + 8) = a5;
          if (*v27)
            sub_22F0ABC50((uint64_t *)v27, a1[11]);
          *(_QWORD *)(v35 + 16) = v36;
          *(_DWORD *)(v35 + 24) = a8;
          v21 = sub_22EFD9CC8(a1[11], a1[27], a8, v35 | 4, a3, a10, a11);
          *(_DWORD *)(v21 + 28) &= 0xFFFF9FFF;
          *(_DWORD *)(v21 + 60) |= 1u;
LABEL_41:
          sub_22EFCCFA0(a1[27], v21);
          return v21;
        }
      }
      if (*(_DWORD *)(a6 + 4))
        v37 = *(_DWORD *)a6 == 0;
      else
        v37 = 1;
      v38 = *(_QWORD *)(a6 + 8);
      if (v37 && v38 == 0)
      {
        LOBYTE(v58[0]) = 0;
        LOBYTE(v57[0]) = 0;
        return sub_22EA33BC4((unint64_t)a1, a2, a4, 3, a5, a6, v60, a8, a9, 0, 0, 0, 0, v58, v57, 0, 0, 0, 0,
                 0,
                 0,
                 0,
                 0,
                 0);
      }
      if (v38)
      {
        v40 = sub_22F0ABC50((uint64_t *)(a6 + 8), a1[11]);
        v41 = v42;
      }
      else
      {
        v40 = 0;
        v41 = 0;
      }
      v43 = sub_22ED717D8(a1, v53, a5, v40, v41, v60, a8, 1);
      if (v43 >= 0x10)
      {
        v44 = v43;
        v45 = a1[11];
        v46 = sub_22F11598C(v43);
        v47 = sub_22E3CD3D4(v45 + 2032, v46 + 8, 3);
        *(_QWORD *)v47 = v44;
        if (*(_BYTE *)(*(_QWORD *)(v44 & 0xFFFFFFFFFFFFFFF0) + 16) == 18)
        {
          *(_DWORD *)(v47 + 8) = a5;
          *(_QWORD *)(v47 + 16) = v41;
          *(_DWORD *)(v47 + 24) = a8;
        }
        else
        {
          *(_DWORD *)(v47 + 8) = a5;
          *(_QWORD *)(v47 + 16) = v41;
          v48 = *(_QWORD *)(v44 + 40);
          if (v48 >= 0x10 && (*(_QWORD *)(v44 + 40) & 0xFLL) == 0)
            v50 = *(_QWORD *)((char *)&unk_22F47F1E0
                            + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v48 & 0xFFFFFFFFFFFFFFF0)
                                                                           + 16) << 56) >> 53));
          else
            v50 = 1;
          *(_DWORD *)((v47 + 8 + v50 + 15) & -v50) = a8;
        }
        v21 = sub_22EFD9CC8(a1[11], a1[27], a8, v47 | 4, a3, a10, a11);
        *(_DWORD *)(v21 + 28) &= 0xFFFF9FFF;
        goto LABEL_41;
      }
    }
    return 0;
  }
  if ((_BYTE)v59)
    return 0;
  return sub_22ED5BEC0((unint64_t)a1, a2, a4, 3, a5, a6, a7, a8, a9, v19, 0, v51, 0, 0, a3, 0, (int)a11 - 1, a10, 0);
}

unint64_t sub_22EACFAB8(uint64_t a1, _QWORD *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  int v14;
  unint64_t *v15;
  unint64_t *v16;
  int *v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v25;
  _QWORD *v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  unsigned int *v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  __int16 v41;
  int v42;
  unsigned int *v43;
  _BYTE *v44;
  _QWORD *v45;
  unsigned int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  __int16 v58;
  int v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  unsigned int v66;
  uint64_t v67;
  unsigned int v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  char v83;
  void *__p;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE v88[96];
  _BYTE v89[96];
  unsigned int v90[12];
  char v91;
  unsigned int v92[24];
  unsigned int v93[24];
  _QWORD *v94;
  __int128 v95;
  uint64_t v96;
  unsigned int v97[24];
  unsigned int v98[18];
  _QWORD *v99;
  void *v100;
  uint64_t v101;
  int v102;
  _QWORD v103[33];
  void *v104;
  uint64_t v105;
  _QWORD v106[5];
  uint64_t v107;
  void *v108;
  uint64_t v109;
  _BYTE v110[64];
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int16 v119;
  char v120;
  int v121;
  uint64_t v122;

  v122 = *MEMORY[0x24BDAC8D0];
  v13 = *(_QWORD *)a3;
  v14 = *(_DWORD *)(a3 + 64);
  v15 = sub_22EE8156C(a1, a3, (uint64_t)a2, (uint64_t)a4, a5, a6, a7, a8);
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v15 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 25 >= 2)
  {
    sub_22E8FCA40((_QWORD *)a1, v14, 0x13C3u, 0, (uint64_t)v97);
    sub_22E903BEC(v97);
    return 0;
  }
  v16 = v15;
  v17 = (int *)(a3 + 40);
  sub_22EA12DB4(a1, a3 + 40);
  if ((sub_22EE67290(a1, v14, v16, 9) & 1) != 0)
    return 0;
  if ((sub_22EE72C58(a1, (uint64_t *)&v95, 9) & 1) != 0)
    return 0;
  v76 = v13;
  v18 = (uint64_t *)(a3 + 8);
  if ((sub_22EE72B18(a1, a3 + 8, 9) & 1) != 0)
    return 0;
  v107 = 0;
  v108 = v110;
  v109 = 0x800000000;
  v111 = 0;
  v112 = 0;
  v113 = 0;
  v114 = (_QWORD *)a1;
  v115 = v95;
  v118 = 0;
  v116 = v96;
  v117 = 0;
  v119 = 257;
  v120 = 1;
  v121 = 0;
  sub_22EC56024((uint64_t)&v107);
  v19 = *(_QWORD *)(a3 + 16);
  if (v19)
    goto LABEL_11;
  v20 = *(_QWORD *)(a1 + 216);
  if (v20)
    v21 = v20 - 64;
  else
    v21 = 0;
  v22 = sub_22EA3DA94(v21);
  if (v22)
  {
    v53 = v22;
    v54 = (_QWORD *)a2[3];
    sub_22F30C4D4((uint64_t)&v107, 10);
    sub_22EC63520(a1, (uint64_t)&v107, a2, 0, 0);
    if ((_DWORD)v109)
    {
      v55 = *(_QWORD *)((*(_QWORD *)v108 & 0xFFFFFFFFFFFFFFFCLL) + 16);
      v56 = (_QWORD *)(v55 & 0xFFFFFFFFFFFFFFF8);
      if ((v55 & 4) != 0)
        v56 = (_QWORD *)*v56;
    }
    else
    {
      v56 = (_QWORD *)(v53 + 72);
    }
    v94 = v56;
    sub_22EA1D904((unint64_t *)&v94);
    if ((*(_WORD *)(a3 + 1088) & 0xC) != 0)
    {
      sub_22E8FCA40((_QWORD *)a1, SDWORD2(v95), 0xDB5u, 0, (uint64_t)v93);
      sub_22E903BEC(v93);
    }
    v26 = v54;
    goto LABEL_33;
  }
  v19 = *(_QWORD *)(a3 + 16);
  if (v19)
  {
LABEL_11:
    if ((sub_22F0AAC5C(v19) & 4) != 0)
    {
      if ((*(_WORD *)(a3 + 1088) & 0xC) != 0)
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 8), 0x1203u, 0, (uint64_t)v98);
        v80 = *(_QWORD *)(a3 + 16);
        sub_22EA02390((uint64_t)v98, &v80);
        sub_22E903BEC(v98);
      }
      v94 = *(_QWORD **)(a1 + 216);
      goto LABEL_32;
    }
    v23 = sub_22E958204(a1, a3 + 8, 0);
    v94 = (_QWORD *)v23;
    if (v23)
    {
      v24 = v23;
      if ((sub_22E958490((_QWORD *)a1, a3 + 8, v23) & 1) == 0)
      {
        sub_22EC611AC(a1, (uint64_t)&v107, v24, 0);
        if (*(_QWORD *)(a1 + 216))
        {
          v73 = *(_QWORD *)(a1 + 216);
          v74 = sub_22EFCC008(v24);
          if (v74 == sub_22EFCC008(v73))
          {
            if ((**(_QWORD **)(a1 + 72) & 0x200) != 0)
              v25 = 6441;
            else
              v25 = 3510;
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v76 + 188), v25, 0, (uint64_t)v92);
            sub_22E903BEC(v92);
          }
        }
        v26 = a2;
        if ((*(_WORD *)(a3 + 1088) & 0xC) == 0)
          goto LABEL_33;
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 8), 0x1203u, 0, (uint64_t)v98);
        v80 = *(_QWORD *)(a3 + 16);
        sub_22EA02390((uint64_t)v98, &v80);
        v27 = *(_WORD *)(v24 + 8) & 0x7F;
        if (v27 == 83 || v27 == 16)
        {
          v28 = *v18;
          v82 = 0;
          v83 = 0;
          v85 = 0;
          v86 = 0;
          __p = 0;
          v87 = 0;
          v80 = v28;
          v81 = 1;
          sub_22E890748((uint64_t)v98, &v80);
          if (SHIBYTE(v86) < 0)
            operator delete(__p);
        }
        *(_DWORD *)(a3 + 32) = 0;
        *v18 = 0;
        *(_QWORD *)(a3 + 16) = 0;
        sub_22E903BEC(v98);
LABEL_32:
        v26 = a2;
        goto LABEL_33;
      }
    }
LABEL_57:
    v29 = 0;
    goto LABEL_72;
  }
  v75 = *v17;
  v57 = *(_QWORD *)(a1 + 216);
  v94 = (_QWORD *)v57;
  v58 = *(_WORD *)(v57 + 8);
  if ((v58 & 0x7Eu) - 34 > 3)
    goto LABEL_110;
  do
  {
    v59 = v58 & 0x7F;
    v60 = -40;
    if (v59 > 70)
    {
      if (v59 == 83)
        goto LABEL_102;
      if (v59 == 71)
      {
        v60 = -56;
        goto LABEL_102;
      }
      if (v59 != 81)
        goto LABEL_96;
    }
    else
    {
      if (v59 > 0x18)
        goto LABEL_95;
      if (v59 == 16)
        goto LABEL_88;
      if (((1 << v59) & 0x1066) == 0)
      {
        if (v59 == 24)
        {
LABEL_88:
          v60 = -48;
          goto LABEL_102;
        }
LABEL_95:
        if (v59 == 70)
        {
          v60 = -64;
          goto LABEL_102;
        }
LABEL_96:
        v61 = v59 - 52;
        if ((v59 - 33) >= 5)
          v62 = -48;
        else
          v62 = -64;
        if (v61 >= 6)
          v60 = v62;
        else
          v60 = -72;
      }
    }
LABEL_102:
    v63 = *(_QWORD *)(v57 + v60 + 16);
    v57 = v63 & 0xFFFFFFFFFFFFFFF8;
    if ((v63 & 4) != 0)
      v57 = *(_QWORD *)v57;
    v58 = *(_WORD *)(v57 + 8);
  }
  while ((v58 & 0x7Eu) - 34 < 4);
  v94 = (_QWORD *)v57;
LABEL_110:
  v65 = sub_22EFCBFBC(v57);
  while (2)
  {
    sub_22EC611AC(a1, (uint64_t)&v107, v65, 0);
    if (!(_DWORD)v109)
    {
      v66 = *(_WORD *)(v65 + 8) & 0x7F;
      if (v75 != 7 && v66 == 16 || v66 == 83)
        goto LABEL_136;
      v67 = -40;
      if ((*(_WORD *)(v65 + 8) & 0x7Fu) > 0x46)
      {
        if (v66 == 71)
        {
          v67 = -56;
        }
        else if (v66 != 81)
        {
          goto LABEL_125;
        }
      }
      else
      {
        if (v66 > 0x18)
          goto LABEL_124;
        if (v66 == 16)
          goto LABEL_118;
        if (((1 << v66) & 0x1066) == 0)
        {
          if (v66 == 24)
          {
LABEL_118:
            v67 = -48;
          }
          else
          {
LABEL_124:
            if (v66 == 70)
            {
              v67 = -64;
            }
            else
            {
LABEL_125:
              v68 = v66 - 52;
              v69 = v66 - 33 >= 5;
              v70 = -64;
              if (v69)
                v70 = -48;
              v69 = v68 >= 6;
              v67 = -72;
              if (v69)
                v67 = v70;
            }
          }
        }
      }
      v71 = *(_QWORD *)(v65 + v67 + 16);
      v65 = v71 & 0xFFFFFFFFFFFFFFF8;
      if ((v71 & 4) != 0)
        v65 = *(_QWORD *)v65;
      continue;
    }
    break;
  }
  v94 = (_QWORD *)v65;
  v57 = v65;
LABEL_136:
  v26 = sub_22F31D1A0(a2, v57);
LABEL_33:
  v31 = (uint64_t)v94;
  if (((_WORD)v94[1] & 0x7Eu) - 34 >= 4)
  {
    switch(*v17)
    {
      case 2:
        v47 = 2;
        goto LABEL_55;
      case 4:
      case 5:
        LODWORD(v80) = 0;
        goto LABEL_56;
      case 6:
        v47 = 1;
        goto LABEL_55;
      case 9:
        v47 = 3;
LABEL_55:
        LODWORD(v80) = v47;
LABEL_56:
        sub_22E8FCA40((_QWORD *)a1, v14, 0xE2Eu, 0, (uint64_t)v98);
        sub_22E8900C4((uint64_t)v98, (int *)&v80);
        sub_22E903BEC(v98);
        break;
      default:
        goto LABEL_34;
    }
    goto LABEL_57;
  }
LABEL_34:
  v32 = *(_QWORD *)(a1 + 104);
  v99 = v103;
  v100 = v103;
  v101 = 32;
  v102 = 0;
  v104 = v106;
  v105 = 0x200000000;
  v106[2] = v32;
  v106[3] = *(_QWORD *)(v32 + 172);
  v106[4] = 0;
  v33 = v26;
  sub_22E8FB978((uint64_t)v98, (uint64_t)a2, 8);
  LODWORD(v34) = (_DWORD)v33;
  if (!v33)
  {
    v103[32] = v31;
    v34 = v98;
  }
  v91 = 1;
  sub_22EA147E8((_QWORD *)a1, (int)v34, a3, v31, (uint64_t *)v16, (int)&v107, a4, a5, (uint64_t)&v91);
  v29 = v35;
  if (v35)
  {
    v36 = *(_QWORD *)(v35 + 16);
    v37 = v36 & 0xFFFFFFFFFFFFFFF8;
    if ((v36 & 4) != 0)
      v37 = *(_QWORD *)v37;
    if ((sub_22EFC7ADC(*(_QWORD *)(a1 + 216)) & 1) == 0)
    {
      v37 = sub_22EFCBB30(v37);
      sub_22EFCE90C(v37, v29);
      v64 = sub_22F31D1A0(a2, v37);
      if (v64)
        sub_22EA0483C(a1, v29, v64, 0);
    }
    v38 = sub_22EFD9CC8(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), *(_DWORD *)(a3 + 64), v29 & 0xFFFFFFFFFFFFFFFBLL, *(_DWORD *)(v76 + 188), 0, 0);
    *(_DWORD *)(v38 + 28) &= 0xFFFF9FFF;
    sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v38);
    v39 = *(_DWORD *)(v29 + 28);
    if ((v39 & 0x80) != 0)
    {
      sub_22EFC77E8(v38, 1);
    }
    else
    {
      if ((*(_WORD *)(v37 + 8) & 0x7Eu) - 34 <= 3)
      {
        sub_22E90B0B0((_QWORD *)a1, v29);
        v39 = *(_DWORD *)(v29 + 28);
      }
      v40 = v29;
      if ((v39 & 0x7F) == 0x1D)
        v40 = *(_QWORD *)(v29 + 48);
      if (sub_22EAA5368(*(_QWORD *)(v40 + 48), *(_QWORD *)(v40 + 120)))
      {
        v41 = *(_WORD *)(a3 + 1088);
        if ((v41 & 0x10) != 0)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v40 + 24), 0xDB4u, 0, (uint64_t)v90);
          sub_22E903BEC(v90);
          v42 = *(_DWORD *)((*(_QWORD *)v108 & 0xFFFFFFFFFFFFFFFCLL) + 24);
          v43 = (unsigned int *)v89;
          v44 = v89;
          v45 = (_QWORD *)a1;
          v46 = 108;
LABEL_59:
          sub_22E8FCA40(v45, v42, v46, 0, (uint64_t)v44);
          sub_22E903BEC(v43);
        }
        else if ((v41 & 0xC) == 0)
        {
          v42 = *(_DWORD *)(v40 + 24);
          v43 = (unsigned int *)v88;
          v44 = v88;
          v45 = (_QWORD *)a1;
          v46 = 3507;
          goto LABEL_59;
        }
      }
      v48 = *(_QWORD *)(v40 + 56);
      if ((v48 & 4) != 0 && *(_DWORD *)((v48 & 0xFFFFFFFFFFFFFFF8) + 16) && *(_QWORD *)(a3 + 16))
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v40 + 24), 0x1B82u, 0, (uint64_t)&v80);
        v79 = *(_QWORD *)(a3 + 16);
        v49 = sub_22EA02390((uint64_t)&v80, &v79);
        v78 = *(_QWORD *)(a3 + 8);
        v50 = sub_22E8906A0(v49, &v78);
        v51 = *(_QWORD *)(a1 + 216);
        if (v51)
          v52 = v51 - 64;
        else
          v52 = 0;
        v77 = v52;
        sub_22E890024(v50, &v77);
        sub_22E903BEC((unsigned int *)&v80);
        *(_DWORD *)(v38 + 60) |= 1u;
      }
    }
    sub_22EA04C04((_QWORD *)a1, v29);
  }
  if (v104 != v106)
    free(v104);
  if (v100 != v99)
    free(v100);
LABEL_72:
  if ((_BYTE)v121)
  {
    if ((_DWORD)v107 == 5)
    {
      sub_22EC64D18(v114, (uint64_t)&v107);
    }
    else if (v112 && (*(_DWORD *)(v114[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v114, (uint64_t)&v107);
    }
  }
  if (v111)
  {
    v72 = sub_22EC6CBD0(v111);
    MEMORY[0x2348A0E9C](v72, 0x10E0C409F09D3C3);
  }
  if (v108 != v110)
    free(v108);
  return v29;
}

uint64_t sub_22EAD04B8(uint64_t result, unint64_t a2, unsigned int a3)
{
  uint64_t v5;
  unsigned int *v6;
  unsigned __int16 v7;
  unsigned __int16 v8;
  BOOL v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int v14;
  unsigned int v15[25];
  int v16;
  _BYTE v17[96];
  _BYTE v18[96];

  if (a2 && (*(_DWORD *)(a2 + 28) & 0x80) == 0)
  {
    v5 = result;
    if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 <= 0xFFFFFFF9)
    {
      if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x1D && sub_22EAB3978(result, *(_QWORD *)(a2 + 48)) >= 0x100)
      {
        sub_22E8FCA40((_QWORD *)v5, a3, 0xC90u, 0, (uint64_t)v18);
        v6 = (unsigned int *)v18;
        return (uint64_t)sub_22E903BEC(v6);
      }
LABEL_13:
      sub_22E8FCA40((_QWORD *)v5, a3, 0xBu, 0, (uint64_t)v17);
      v16 = (**(_DWORD **)(v5 + 72) >> 12) & 1;
      sub_22E89519C((uint64_t)v17, (unsigned int *)&v16);
      v6 = (unsigned int *)v17;
      return (uint64_t)sub_22E903BEC(v6);
    }
    v7 = sub_22EAB3978(result, a2);
    v8 = v7;
    if (v7 == 6)
    {
      if (!sub_22EFC7ADC(a2 + 72)
        || (*(_DWORD *)(a2 + 28) & 0x7F) != 0x37
        && ((*(_QWORD *)(a2 + 40) & 7) != 6 || *(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) != 15))
      {
        goto LABEL_13;
      }
      v9 = 1;
    }
    else
    {
      v9 = v7 < 0x100u;
      if (v7 >= 0x100u && (v7 & 0x700) != 0x200)
      {
        if ((**(_QWORD **)(v5 + 72) & 0x1000) != 0)
          v10 = 6410;
        else
          v10 = 5210;
        sub_22E8FCA40((_QWORD *)v5, a3, v10, 0, (uint64_t)v15);
        sub_22E903BEC(v15);
        v9 = 0;
      }
    }
    *(_QWORD *)(a2 + 80) |= 0x6000000uLL;
    result = sub_22EFC7ADC(a2 + 72);
    if ((result & 1) == 0)
    {
      *(_QWORD *)(a2 + 80) &= ~0x800000000uLL;
      if (v9)
        goto LABEL_29;
      v11 = *(_QWORD *)(a2 + 16);
      v12 = v11 & 0xFFFFFFFFFFFFFFF8;
      if ((v11 & 4) != 0)
        v12 = *(_QWORD *)(v12 + 8);
      if (!v12 || (*(_WORD *)(v12 + 8) & 0x7Fu) - 38 < 0xFFFFFFFD || (*(_BYTE *)(v12 + 10) & 1) != 0)
      {
LABEL_29:
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 54 > 3)
          goto LABEL_33;
        v13 = sub_22EFC20FC(a2, 1);
        if (!v13)
          v13 = a2;
        result = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v13 + 32))(v13);
        if ((*(_BYTE *)(result + 83) & 2) == 0)
        {
LABEL_33:
          if (v9)
          {
            if (!sub_22EAB6B44(v5, a2, v8))
              return sub_22EAC9110(v5, (_QWORD *)a2, a3);
          }
          else
          {
            v14 = HIBYTE(v8);
            if (!sub_22EAB7464(v5, 0, a2, v14))
              return sub_22EABAA74(v5, a3, a2, v14);
          }
          return sub_22EFC77E8(a2, 1);
        }
      }
    }
  }
  return result;
}

void sub_22EAD0740(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t *v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  unsigned int v12[24];
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  sub_22F0D492C(a2);
  v13 = v15;
  v3 = v17;
  v14 = v16;
  v4 = v18;
  v6 = *((_QWORD *)&v15 + 1);
  v5 = (uint64_t *)v15;
  if ((_QWORD)v15 != v17 || *((_QWORD *)&v13 + 1) != v18)
  {
    do
    {
      v8 = v5;
      if ((v6 & 3) != 0)
      {
        if ((v6 & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v8 = (uint64_t *)((v6 & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v8 = (uint64_t *)sub_22F3AC1A8(*v5);
      }
      v9 = (unsigned __int8 *)*v8;
      if (*v8)
      {
        v10 = *v9;
        if (v10 == 93)
        {
          sub_22F0D5A50(*v8);
          sub_22E8FCA40(a1, v11, 0x1242u, 0, (uint64_t)v12);
          sub_22E903BEC(v12);
          v10 = *v9;
        }
        if ((v10 - 102) >= 0x85)
          sub_22EAD0740(a1, v9);
      }
      if ((v6 & 3) != 0)
      {
        if (v6 < 4)
          sub_22F3F2FE0((uint64_t)&v13, 1);
        else
          sub_22F0D8720((uint64_t)&v13);
      }
      else
      {
        *(_QWORD *)&v13 = v5 + 1;
      }
      v6 = *((_QWORD *)&v13 + 1);
      v5 = (uint64_t *)v13;
    }
    while (v13 != __PAIR128__(v4, v3));
  }
}

uint64_t sub_22EAD086C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  size_t v28;
  int v30;
  unsigned int *v31;
  _BYTE *v32;
  _QWORD *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[96];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41[24];
  _BYTE v42[96];
  unsigned int v43[24];
  unsigned int v44[24];
  unsigned int v45[24];

  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_BYTE *)(v6 + 16) == 26;
  else
    v7 = 0;
  if (!v7)
    v6 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v8)
    v9 = *(_BYTE *)(v8 + 16) == 26;
  else
    v9 = 0;
  if (!v9)
    v8 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(v8 + 16);
  if ((v10 & 0x400000000000000) != 0 && (v10 & 0x3FFFC000000000) != 0)
  {
    v11 = 0;
    v12 = (unsigned __int16)(v10 >> 38);
    do
    {
      if ((*(_BYTE *)(v8 + 23) & 4) != 0
        && (*(_BYTE *)(sub_22E47E270(v8) + v11) & 0x40) != 0
        && ((*(_BYTE *)(v6 + 23) & 4) == 0 || (*(_BYTE *)(sub_22E47E270(v6) + v11) & 0x40) == 0))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 120) + 8 * v11) + 24), 0x1AD7u, 0, (uint64_t)v45);
        sub_22E903BEC(v45);
        sub_22E8FCA40(a1, *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 120) + 8 * v11) + 24), 0x1721u, 0, (uint64_t)v44);
        sub_22E903BEC(v44);
      }
      ++v11;
    }
    while (v12 != v11);
  }
  if ((*(_BYTE *)(a3 + 29) & 1) == 0)
    goto LABEL_29;
  sub_22EFC8E88(a3);
  v14 = *(uint64_t **)v13;
  v15 = *(unsigned int *)(v13 + 8);
  v16 = *(uint64_t **)v13;
  if ((_DWORD)v15)
  {
    v17 = 8 * v15;
    v16 = *(uint64_t **)v13;
    while (*(_WORD *)(*v16 + 32) != 145)
    {
      ++v16;
      v17 -= 8;
      if (!v17)
        goto LABEL_29;
    }
  }
  if (v16 == &v14[v15])
  {
LABEL_29:
    v18 = 0;
  }
  else
  {
    do
    {
      v19 = *v14++;
      v18 = v19;
    }
    while (*(_WORD *)(v19 + 32) != 145);
  }
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v21 = *(uint64_t **)v20;
    v22 = *(unsigned int *)(v20 + 8);
    v23 = *(uint64_t **)v20;
    if ((_DWORD)v22)
    {
      v24 = 8 * v22;
      v23 = *(uint64_t **)v20;
      while (*(_WORD *)(*v23 + 32) != 145)
      {
        ++v23;
        v24 -= 8;
        if (!v24)
          goto LABEL_45;
      }
    }
    if (v23 != &v21[v22])
    {
      do
      {
        v26 = *v21++;
        v25 = v26;
      }
      while (*(_WORD *)(v26 + 32) != 145);
      if (v18)
      {
        v27 = *(_DWORD *)(v25 + 36);
        v28 = *(unsigned int *)(v18 + 36);
        if (v27 == (_DWORD)v28 && (!v27 || !memcmp(*(const void **)(v25 + 40), *(const void **)(v18 + 40), v28)))
          goto LABEL_42;
      }
LABEL_46:
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xF48u, 0, (uint64_t)v43);
      sub_22E903BEC(v43);
      v30 = *(_DWORD *)(a3 + 24);
      v31 = (unsigned int *)v42;
      v32 = v42;
      v33 = a1;
      v34 = 108;
      goto LABEL_47;
    }
  }
LABEL_45:
  if (v18)
    goto LABEL_46;
LABEL_42:
  if (((*(_DWORD *)(v8 + 16) ^ *(_DWORD *)(v6 + 16)) & 0xF80000) == 0 || (*(_QWORD *)(a2 + 80) & 0xE000) == 0x4000)
    return 0;
  sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xBFDu, 0, (uint64_t)v41);
  v40 = *(_QWORD *)(a2 + 40);
  v35 = sub_22E894538((uint64_t)v41, &v40);
  v39 = *(_QWORD *)(a2 + 48);
  v36 = sub_22E8901B8(v35, &v39);
  v38 = *(_QWORD *)(a3 + 48);
  sub_22E8901B8(v36, &v38);
  sub_22E903BEC(v41);
  v30 = *(_DWORD *)(a3 + 24);
  v31 = (unsigned int *)v37;
  v32 = v37;
  v33 = a1;
  v34 = 5923;
LABEL_47:
  sub_22E8FCA40(v33, v30, v34, 0, (uint64_t)v32);
  sub_22E903BEC(v31);
  return 1;
}

uint64_t sub_22EAD0B80(_QWORD *a1, unint64_t a2, unint64_t a3)
{
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  _QWORD *v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  int v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;

  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(unsigned __int8 *)(v6 + 16) - 27 > 0xFFFFFFFD;
  else
    v7 = 0;
  if (!v7)
    v6 = sub_22F10CF48(v6);
  v8 = *(_QWORD *)(v6 + 24);
  v57 = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
    v10 = *(unsigned __int8 *)(v9 + 16) - 27 > 0xFFFFFFFD;
  else
    v10 = 0;
  if (!v10)
    v9 = sub_22F10CF48(v9);
  v11 = *(_QWORD *)(v9 + 24);
  v56 = v11;
  v12 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFF0);
  v13 = v11 & 0xFFFFFFFFFFFFFFF0;
  if ((*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF0) + 8) | v8 & 7) == (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFFF0) + 8) | v11 & 7))
    return 0;
  v14 = *v12;
  v15 = *(_DWORD *)(*v12 + 16);
  if ((v15 & 0x400) != 0)
    return 0;
  v16 = *(_QWORD *)v13;
  v17 = *(_DWORD *)(*(_QWORD *)v13 + 16);
  if ((v17 & 0x400) != 0)
    return 0;
  if (*(_DWORD *)(*v12 + 16) == 39)
    goto LABEL_18;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
  {
    v18 = sub_22F10CF48(*v12);
    if (v18)
    {
      v14 = v18;
      v16 = *(_QWORD *)v13;
      LOBYTE(v17) = *(_BYTE *)(*(_QWORD *)v13 + 16);
LABEL_18:
      if (v17 != 39)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
          goto LABEL_58;
        v16 = sub_22F10CF48(v16);
        if (!v16)
          goto LABEL_58;
      }
      v19 = *(_QWORD *)(v14 + 32);
      v20 = (uint64_t *)(v16 + 32);
      goto LABEL_46;
    }
    v14 = *v12;
    v15 = *(_DWORD *)(*v12 + 16);
  }
  if ((v15 & 0xFE) != 0x28)
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      goto LABEL_58;
    v14 = sub_22F10CF48(v14);
    if (!v14)
      goto LABEL_58;
  }
  v21 = *(_QWORD *)v13;
  if (!v21 || (v22 = *(_DWORD *)(v21 + 16), (v22 & 0xFE) != 0x28))
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      goto LABEL_58;
    v23 = sub_22F10CF48(v21);
    if (!v23)
      goto LABEL_58;
    v21 = v23;
    v22 = *(_DWORD *)(v23 + 16);
  }
  v24 = *(_DWORD *)(v14 + 16);
  if (v24 != v22)
  {
LABEL_58:
    v36 = *(_DWORD *)(a2 + 24);
    v37 = a1;
    v38 = 3266;
LABEL_74:
    sub_22E8FCA40(v37, v36, v38, 0, (uint64_t)&v53);
    v52 = *(_QWORD *)(a2 + 40);
    v48 = sub_22E894538((uint64_t)&v53, &v52);
    v49 = sub_22E8901B8(v48, &v57);
    v50 = sub_22E8901B8(v49, &v56);
    v51 = sub_22F3AC46C(a2);
    sub_22E8906A0(v50, &v51);
    sub_22E903BEC((unsigned int *)&v53);
    goto LABEL_75;
  }
  if ((v24 & 0x100000) != 0)
  {
    do
    {
      while (1)
      {
        v14 = *(_QWORD *)(*(_QWORD *)(v14 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v14)
          break;
        v25 = *(_DWORD *)(v14 + 16);
        if ((v25 & 0xFE) != 0x28)
          break;
        if ((v25 & 0x100000) == 0)
          goto LABEL_38;
      }
      v14 = sub_22F10CF48(v14);
    }
    while ((*(_DWORD *)(v14 + 16) & 0x100000) != 0);
LABEL_38:
    v22 = *(_DWORD *)(v21 + 16);
  }
  v19 = *(_QWORD *)(v14 + 32);
  if ((v22 & 0x100000) != 0)
  {
    do
    {
      while (1)
      {
        v21 = *(_QWORD *)(*(_QWORD *)(v21 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v21)
          break;
        v26 = *(_DWORD *)(v21 + 16);
        if ((v26 & 0xFE) != 0x28)
          break;
        if ((v26 & 0x100000) == 0)
          goto LABEL_45;
      }
      v21 = sub_22F10CF48(v21);
    }
    while ((*(_DWORD *)(v21 + 16) & 0x100000) != 0);
  }
LABEL_45:
  v20 = (uint64_t *)(v21 + 32);
LABEL_46:
  if (v19 <= 0xF)
    goto LABEL_58;
  v27 = *v20;
  if (*(_QWORD *)(*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
    goto LABEL_55;
  v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v28
    || *(_BYTE *)(v28 + 16) != 45
    || (*(_DWORD *)(sub_22F114198(*(_QWORD *)(v28 + 24)) + 72) & 0x20000) != 0
    || (v29 = *(_DWORD *)(a2 + 24),
        v52 = *(_QWORD *)(a2 + 40),
        v53 = &unk_24FAB7FC8,
        v54 = 3131,
        v55 = &v52,
        v30 = 1,
        (sub_22EE8B0B0((uint64_t)a1, v29, v19) & 1) == 0))
  {
    if ((sub_22EAAB1B8(a1, *(unsigned int *)(a2 + 24), v19, v27) & 1) == 0)
    {
      v36 = *(_DWORD *)(a2 + 24);
      v37 = a1;
      v38 = 3132;
      goto LABEL_74;
    }
    v31 = *(_DWORD *)(a2 + 24);
    v32 = sub_22F3AC46C(a2);
    if ((sub_22EAAB46C((uint64_t)a1, v19, v27, 3130, 0xC39u, v31, v32, *(_QWORD *)(a2 + 40), 0, 0) & 1) != 0)
    {
LABEL_75:
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x1723u, 0, (uint64_t)&v53);
      v52 = sub_22F3AC46C(a3);
      sub_22E8906A0((uint64_t)&v53, &v52);
      sub_22E903BEC((unsigned int *)&v53);
      return 1;
    }
    LOBYTE(v11) = v56;
    LOBYTE(v8) = v57;
LABEL_55:
    if (((v8 ^ v11) & 7) != 0)
    {
      v36 = *(_DWORD *)(a2 + 24);
      v37 = a1;
      v38 = 3134;
      goto LABEL_74;
    }
    v33 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v33 & 8) != 0)
    {
      v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFFF0) + 0x18);
      v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
    }
    else
    {
      v35 = 0;
      v34 = 0;
    }
    v39 = v34 | (v33 | v19) & 7;
    v53 = (void *)(v39 | v35);
    v40 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFFF0) + 8);
    v41 = HIDWORD(v35);
    if ((v40 & 8) != 0)
    {
      v42 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFFF0) + 0x18);
      v43 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
    }
    else
    {
      v43 = 0;
      v42 = 0;
    }
    v44 = v42 | (v40 | v27) & 7;
    if ((_DWORD)v39 != (_DWORD)v44 || (_DWORD)v41 != HIDWORD(v43))
    {
      if (sub_22E95F24C((unsigned int *)&v53, v44 | v43))
      {
        v36 = *(_DWORD *)(a2 + 24);
        v37 = a1;
        v38 = 3133;
        goto LABEL_74;
      }
    }
    return 0;
  }
  return v30;
}

uint64_t sub_22EAD107C(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17[24];
  uint64_t v18;

  v18 = a3;
  if (HIDWORD(a3))
    *(_DWORD *)(a2 + 140) = HIDWORD(a3);
  v5 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2);
  if ((*(_BYTE *)(v5 + 82) & 0xC) != 0 || sub_22EFD7260(v5))
    goto LABEL_27;
  v6 = *(_WORD *)(a2 + 80) & 0x7F;
  v7 = -40;
  if (v6 > 0x46)
  {
    if (v6 == 83)
      goto LABEL_21;
    if (v6 == 71)
    {
      v7 = -56;
      goto LABEL_21;
    }
    if (v6 != 81)
    {
LABEL_16:
      v8 = v6 - 52;
      v9 = v6 - 33 >= 5;
      v10 = -48;
      if (!v9)
        v10 = -64;
      if (v8 >= 6)
        v7 = v10;
      else
        v7 = -72;
    }
  }
  else
  {
    if (v6 > 0x18)
      goto LABEL_15;
    if (v6 == 16)
    {
LABEL_8:
      v7 = -48;
      goto LABEL_21;
    }
    if (((1 << v6) & 0x1066) == 0)
    {
      if (v6 == 24)
        goto LABEL_8;
LABEL_15:
      if (v6 == 70)
      {
        v7 = -64;
        goto LABEL_21;
      }
      goto LABEL_16;
    }
  }
LABEL_21:
  v11 = *(_QWORD *)(a2 + 72 + v7 + 16);
  v12 = (_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
  if ((v11 & 4) != 0)
    v12 = (_QWORD *)*v12;
  if (v12)
    v13 = v12 - 8;
  else
    v13 = 0;
  if (sub_22EFC7ADC((unint64_t)(v13 + 8)))
  {
LABEL_27:
    sub_22EFBFA74(a2, 1);
    return 0;
  }
  if ((*(_BYTE *)(a2 + 28) & 0x80) == 0)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xFD0u, 0, (uint64_t)v17);
    v16 = *(_QWORD *)(a2 + 40);
    v15 = sub_22E894538((uint64_t)v17, &v16);
    sub_22E8906A0(v15, &v18);
    sub_22E903BEC(v17);
  }
  return 1;
}

unsigned int *sub_22EAD1204(_QWORD *a1, unint64_t a2, unsigned int a3)
{
  unsigned int *v3;
  _BYTE v5[96];
  _BYTE v6[96];

  if ((*(_DWORD *)(a2 + 28) & 0x1800000) != 0)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x1201u, 0, (uint64_t)v6);
    v3 = (unsigned int *)v6;
    return sub_22E903BEC(v3);
  }
  if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xDE5u, 0, (uint64_t)v5);
    v3 = (unsigned int *)v5;
    return sub_22E903BEC(v3);
  }
  return (unsigned int *)sub_22EAD107C(a1, a2, a3 | ((unint64_t)a3 << 32));
}

uint64_t sub_22EAD1280(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  uint64_t v13;
  int v14[3];
  int v15;
  uint64_t v16;
  int v17;

  if (a3 && (*(_BYTE *)(a3 + 28) & 0x80) == 0)
  {
    v5 = result;
    if (a2)
    {
      result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 24))(a3);
      if ((_DWORD)result)
      {
        v6 = *(_QWORD *)(a3 + 16);
        v7 = (_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
        if ((v6 & 4) != 0)
          v7 = (_QWORD *)*v7;
        *(_QWORD *)(v5 + 216) = v7;
        *(_QWORD *)(a2 + 360) = v7;
      }
    }
    if ((*(_DWORD *)(a3 + 28) & 0x7Fu) - 67 >= 0xFFFFFFF9)
    {
      result = sub_22E3CB5E0(a3);
      if ((result & 1) == 0)
      {
        v17 = 6;
        v16 = a3;
        v15 = 3;
        *(_QWORD *)v14 = *(unsigned int *)(v5 + 1704);
        result = sub_22EB4DDB8(v5 + 3688, &v17, v14, (__int16 *)(v5 + 1693), &v16, &v15);
        v8 = *(unsigned int *)(v5 + 3696);
        v9 = v8 - 2;
        v10 = *(_QWORD *)(v5 + 3688);
        v11 = *(_DWORD *)(v10 + 576 * (v8 - 2));
        if (v11 == 5)
        {
          *(_BYTE *)(v10 + 576 * v8 - 4) = *(_BYTE *)(v10 + 576 * v9 + 572);
          v12 = 1;
        }
        else if (v11 == 2)
        {
          *(_BYTE *)(v10 + 576 * v8 - 4) = 1;
          v12 = *(_BYTE *)(v10 + 576 * v9 + 573) != 0;
        }
        else
        {
          v12 = 0;
          *(_BYTE *)(v10 + 576 * v8 - 4) = 0;
        }
        v13 = v10 + 576 * v8;
        *(_BYTE *)(v13 - 3) = v12;
        *(_WORD *)(v5 + 1693) = 0;
        if (*(_DWORD *)(v5 + 1848))
        {
          llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(v5 + 1776), (llvm::SmallPtrSetImplBase *)(v13 - 560));
          return sub_22EAEAE08(v5 + 1840, (uint64_t *)(v13 - 496));
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EAD13F8(uint64_t result, _QWORD *a2, _DWORD *a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a3 && (a3[7] & 0x80) == 0)
  {
    v5 = result;
    if ((a3[7] & 0x7Fu) - 67 >= 0xFFFFFFF9)
    {
      result = sub_22E3CB5E0((uint64_t)a3);
      if ((result & 1) == 0)
        result = (uint64_t)sub_22EB48E64(v5);
    }
    if (a2)
    {
      result = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a3 + 24))(a3);
      if ((_DWORD)result)
      {
        do
        {
          a2 = (_QWORD *)*a2;
          v6 = a2[45];
        }
        while (!v6);
        *(_QWORD *)(v5 + 216) = v6;
      }
    }
  }
  return result;
}

void sub_22EAD147C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _QWORD *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _BYTE *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  void *__src;
  uint64_t v29;
  _BYTE v30[64];
  void *v31;
  uint64_t v32;
  _QWORD v33[10];

  v33[8] = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a1 + 8);
  if (!v2)
    return;
  v3 = v33;
  v31 = v33;
  v32 = 0x400000000;
  (*(void (**)(uint64_t, void **))(*(_QWORD *)v2 + 336))(v2, &v31);
  __src = v30;
  v29 = 0x400000000;
  if ((_DWORD)v32)
  {
    v4 = 0;
    v5 = 16 * v32;
    do
    {
      v6 = *(_QWORD *)((char *)v31 + v4);
      v27 = 0;
      if (sub_22F24C318(*(_QWORD *)(a1 + 10640), *(_DWORD *)(a1 + 10656), v6, &v27))
        v7 = v27 == *(_QWORD *)(a1 + 10640) + 16 * *(unsigned int *)(a1 + 10656);
      else
        v7 = 1;
      if (v7)
      {
        v8 = v3;
        v9 = *((_BYTE *)v31 + v4 + 12);
        *((_BYTE *)sub_22F2D31F4((uint64_t *)(a1 + 10640), (char *)v31 + v4) + 8) = v9;
        v10 = *(_QWORD *)((char *)v31 + v4);
        v11 = *(unsigned int *)((char *)v31 + v4 + 8);
        v12 = v29;
        if (v29 >= (unint64_t)HIDWORD(v29))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v12 = v29;
        }
        v13 = (char *)__src + 16 * v12;
        *v13 = v10;
        v13[1] = v11;
        LODWORD(v29) = v29 + 1;
        v3 = v8;
      }
      else if (!*(_BYTE *)(v27 + 8) && *((_BYTE *)v31 + v4 + 12))
      {
        *(_BYTE *)(v27 + 8) = 1;
      }
      v4 += 16;
    }
    while (v5 != v4);
    v14 = __src;
    v15 = v29;
  }
  else
  {
    v15 = 0;
    v14 = v30;
  }
  v16 = *(char **)(a1 + 10368);
  v17 = *(unsigned int *)(a1 + 10376);
  if ((_DWORD)v17)
  {
    v26 = v3;
    if (v15 + v17 > *(unsigned int *)(a1 + 10380))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v16 = *(char **)(a1 + 10368);
      v17 = *(unsigned int *)(a1 + 10376);
    }
    v18 = &v14[16 * v15];
    v19 = 16 * v17;
    v20 = &v16[16 * v17];
    if (v17 >= v15)
    {
      sub_22F2625F8(a1 + 10368, &v20[-16 * v15], &v16[16 * v17]);
      if (&v20[-16 * v15] != v16)
      {
        v22 = 16 * v15;
        v23 = v16;
        v24 = &v16[-16 * v15];
        do
        {
          v25 = &v23[v19];
          *((_QWORD *)v25 - 2) = *(_QWORD *)&v24[v19 - 16];
          *((_DWORD *)v25 - 2) = *(_DWORD *)&v24[v19 - 8];
          v23 -= 16;
          v24 -= 16;
          v22 += 16;
        }
        while (v19 != v22);
      }
      v3 = v26;
      if (v15)
      {
        do
        {
          *(_QWORD *)v16 = *(_QWORD *)v14;
          *((_DWORD *)v16 + 2) = *((_DWORD *)v14 + 2);
          v14 += 16;
          v16 += 16;
        }
        while (v14 != v18);
      }
    }
    else
    {
      *(_DWORD *)(a1 + 10376) = v17 + v15;
      if (v17)
      {
        memcpy(&v16[16 * (v17 + v15) + -16 * v17], v16, 16 * v17);
        do
        {
          *(_QWORD *)v16 = *(_QWORD *)v14;
          *((_DWORD *)v16 + 2) = *((_DWORD *)v14 + 2);
          v14 += 16;
          v16 += 16;
          --v17;
        }
        while (v17);
      }
      v3 = v26;
      if (v14 != v18)
        memcpy(v20, v14, v18 - v14);
    }
    goto LABEL_29;
  }
  if (v15 + v17 > *(unsigned int *)(a1 + 10380))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v21 = *(_DWORD *)(a1 + 10376);
    v16 = *(char **)(a1 + 10368);
    if (!v15)
      goto LABEL_28;
LABEL_41:
    memcpy(&v16[16 * v21], v14, 16 * v15);
    v21 = *(_DWORD *)(a1 + 10376);
    goto LABEL_28;
  }
  v21 = 0;
  if (v15)
    goto LABEL_41;
LABEL_28:
  *(_DWORD *)(a1 + 10376) = v21 + v15;
LABEL_29:
  if (__src != v30)
    free(__src);
  if (v31 != v3)
    free(v31);
}

uint64_t sub_22EAD17EC(uint64_t a1, unsigned int a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25[0] = 0;
  v25[1] = 0;
  v26 = 0;
  v28 = 0;
  v29 = 0;
  v27 = 0;
  sub_22F3AB750(a3, (uint64_t)v25);
  v12 = v27;
  for (i = v28; v12 != i; v12 += 56)
  {
    v14 = *(_QWORD *)(v12 + 32);
    v15 = *(_QWORD *)(v12 + 40);
    while (v14 != v15)
    {
      v16 = **(_QWORD **)(v14 + 8);
      v17 = *(_QWORD *)(v16 + 80);
      if ((v17 & 0x80000) == 0 && ((v17 & 0xC0000000) != 0 || (a4 & 1) == 0))
        sub_22EB4E494(a1, a2, v16, 1, v8, v9, v10, v11);
      v14 += 120;
    }
  }
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a3 + 104) + 96), *(_QWORD *)(a3 + 104));
  if (*(_DWORD *)(*(_QWORD *)(a3 + 128) + 20))
  {
    v18 = sub_22E46A3A0(a3);
    if (v18 != v19)
    {
      v20 = v18;
      v21 = v19;
      do
      {
        v22 = *(_QWORD *)(**(_QWORD **)(v20 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v22 + 8) & 0xF) != 0)
          v22 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v20 + 16));
        v23 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                      + 24));
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v23 + 104) + 96), *(_QWORD *)(v23 + 104));
        if (*(_DWORD *)(*(_QWORD *)(v23 + 128) + 20))
          sub_22EAD17EC(a1, a2, v23, 0);
        v20 += 24;
      }
      while (v20 != v21);
    }
  }
  return sub_22F31EB90((uint64_t)v25);
}

uint64_t sub_22EAD196C(uint64_t a1)
{
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  int v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  int *v13;
  int v14;
  int *v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unsigned int v31[24];
  uint64_t v32;
  uint64_t v33;
  int *v34;

  sub_22EAD147C(a1);
  if (!*(_DWORD *)(a1 + 10376))
  {
    v3 = 0;
    return v3 & 1;
  }
  v2 = 0;
  v3 = 0;
  v4 = 0;
  do
  {
    v34 = 0;
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 10368) + 16 * v2);
    v6 = *(_QWORD *)(v5 + 128);
    if (!v6)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v5 + 104) + 96), *(_QWORD *)(v5 + 104));
      v6 = *(_QWORD *)(v5 + 128);
      if (!v6)
        goto LABEL_35;
    }
    v7 = *(int **)(v6 + 88);
    v34 = v7;
    if (!v7)
      goto LABEL_35;
    v8 = sub_22EFD5760((uint64_t)v7);
    v9 = *(_DWORD *)(*(_QWORD *)(a1 + 10368) + 16 * v2 + 8);
    v10 = sub_22F0CB980(*(_QWORD *)(a1 + 88), (uint64_t)v7);
    v11 = v10;
    if (v10)
    {
      if (((*(uint64_t (**)(unint64_t))(*(_QWORD *)v10 + 72))(v10) & 1) != 0)
        goto LABEL_37;
    }
    else
    {
      v12 = v8 == 3;
      v13 = v34;
      if (v34)
      {
        v14 = 0;
        v15 = v34;
        do
        {
          v16 = sub_22EFD5760((uint64_t)v15);
          if (v16 == 3)
          {
            v12 = 1;
          }
          else if (v16 == 4)
          {
            goto LABEL_37;
          }
          if ((v15[24] & 3) != 0)
          {
            if (v14)
              break;
            v14 = 1;
          }
          v17 = sub_22E3CD31C((uint64_t *)v15 + 12, (uint64_t)v15);
          if ((int *)v17 == v13)
            break;
          v15 = (int *)v17;
        }
        while (v17);
      }
      if (!v12)
      {
LABEL_37:
        sub_22EAD17EC(a1, v9, (uint64_t)v34, 0);
        v33 = 0;
        v33 = (*(uint64_t (**)(int *))(*(_QWORD *)v34 + 32))(v34);
        if (*((_BYTE *)sub_22F2D31F4((uint64_t *)(a1 + 10640), &v33) + 8))
          (*(void (**)(_QWORD, int *))(**(_QWORD **)(a1 + 96) + 128))(*(_QWORD *)(a1 + 96), v34);
        if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 148) <= 0xAu
          && sub_22EFB948C((uint64_t)v34) >= 3
          && v8 != 1
          && v8 != 4)
        {
          v32 = 0;
          if (!v11 || sub_22EFBF6E8(v11, &v32) && (*(_BYTE *)(v32 + 82) & 1) != 0)
          {
            sub_22E8FCA40((_QWORD *)a1, v34[6], 0x1C03u, 0, (uint64_t)v31);
            sub_22E890024((uint64_t)v31, (uint64_t *)&v34);
            sub_22E903BEC(v31);
          }
        }
        v3 = 1;
        goto LABEL_35;
      }
    }
    v18 = sub_22E488FF8((uint64_t)v34);
    if (v18 != v19)
    {
      v20 = v18;
      v21 = v19;
      do
      {
        v22 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v20 + 32))(v20);
        if (((*(_BYTE *)(v22 + 82) & 0xC) != 0 || sub_22EFD7260(v22)) && (*(_BYTE *)(v20 + 82) & 8) == 0)
        {
          v28 = *(_QWORD *)(*(_QWORD *)(v20 + 48) & 0xFFFFFFFFFFFFFFF0);
          if (v28)
            v29 = *(_BYTE *)(v28 + 16) == 26;
          else
            v29 = 0;
          if (!v29)
            v28 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(v20 + 48) & 0xFFFFFFFFFFFFFFF0));
          sub_22EB14850((int32x2_t *)a1, v9, v28, v23, v24, v25, v26, v27);
        }
        do
          v20 = *(_QWORD *)(v20 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v20 && (*(_DWORD *)(v20 + 28) & 0x7Eu) - 54 > 3);
      }
      while (v20 != v21);
    }
LABEL_35:
    v2 = (v4 + 1);
    v4 = v2;
  }
  while (*(_DWORD *)(a1 + 10376) != (_DWORD)v2);
  *(_DWORD *)(a1 + 10376) = 0;
  return v3 & 1;
}

void sub_22EAD1C68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  size_t v31;
  void *v32;
  unsigned __int8 *v33;
  unint64_t v34;
  int v35;
  _QWORD v36[2];
  _BYTE v37[48];
  _BYTE v38[12392];
  void *v39;
  uint64_t v40;
  _BYTE v41[256];
  _QWORD *v42;
  uint64_t v43;
  _QWORD v44[10];

  v0 = MEMORY[0x24BDAC7A8]();
  v44[8] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 72) + 1) & 1) != 0)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v1 + 88);
    if (v3)
    {
      v4 = v0;
      v42 = v44;
      v43 = 0x800000000;
      sub_22F32C8BC(v0, v3, (uint64_t)&v42);
      v5 = v43;
      if ((_DWORD)v43)
      {
        v6 = 0;
        v39 = v41;
        v40 = 0x2000000000;
        do
        {
          v7 = v42[v6];
          if ((*(_BYTE *)(v7 + 28) & 0x80) == 0)
          {
            sub_22EC38F40((uint64_t)v37, v42[v6], 0, 0, 0);
            v8 = *(unsigned int *)(v2 + 24) | ((unint64_t)*(unsigned int *)(v2 + 24) << 32);
            v36[0] = ((unint64_t)*(unsigned int *)(v2 + 24) << 32) | 3;
            v36[1] = v8;
            sub_22EC395BC((uint64_t)v38, (unsigned int *)v4, (uint64_t)v37, (uint64_t)v36, 0, 0, 0, 1);
            v10 = sub_22EC3DF80((uint64_t)v38, v4, (uint64_t)v37, (unsigned __int16 *)v36, 0, 0, 0, v9);
            if ((v10 & 1) == 0)
            {
              v11 = sub_22EBCCCF0(v4, (int *)(v10 & 0xFFFFFFFFFFFFFFFELL));
              v12 = (unint64_t)v11 & 0xFFFFFFFFFFFFFFFELL;
              if (((unint64_t)v11 & 0xFFFFFFFFFFFFFFFELL) != 0 && (v11 & 1) == 0)
              {
                v13 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v4 + 88) + 2032, 32, 3);
                *v13 = v7 & 0xFFFFFFFFFFFFFFF9 | 2;
                v13[1] = v12;
                v13[2] = 0;
                *(_QWORD *)((char *)v13 + 22) = 0;
                v14 = v40;
                if (v40 >= (unint64_t)HIDWORD(v40))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v14 = v40;
                }
                *((_QWORD *)v39 + v14) = v13;
                LODWORD(v40) = v40 + 1;
                v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22EF5BA38(*(_QWORD *)(v4 + 88), *(_QWORD *)(v7 + 48)) & 0xFFFFFFFFFFFFFFF0)
                                            + 8) & 0xFFFFFFFFFFFFFFF0);
                if (v15)
                {
                  if (*(_BYTE *)(v15 + 16) == 45)
                  {
                    v16 = sub_22F114198(*(_QWORD *)(v15 + 24));
                    v21 = sub_22EC6602C(v4, v16, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0) & 0xFFFFFFFFFFFFFFF8;
                    if (v21)
                    {
                      sub_22EB4E494(v4, *(_DWORD *)(v7 + 24), v21, 1, v17, v18, v19, v20);
                      v22 = *(_DWORD *)(v7 + 24);
                      v23 = *(_QWORD *)(v4 + 88);
                      v33 = 0;
                      v34 = v23 + 2128;
                      v35 = 2586;
                      v24 = sub_22EF5BA38(v23, *(_QWORD *)(v7 + 48));
                      v25 = v33;
                      if (!v33)
                      {
                        v25 = (unsigned __int8 *)sub_22E3B8AAC(v34);
                        v33 = v25;
                      }
                      v25[*v25 + 1] = 9;
                      v26 = v33;
                      v27 = *v33;
                      *v33 = v27 + 1;
                      *(_QWORD *)&v26[8 * v27 + 16] = v24;
                      sub_22E90A46C(v4, v22, v21, (uint64_t)&v33, 0);
                      if (v33 && v34)
                        sub_22E3BB10C(v34, (unint64_t)v33);
                    }
                  }
                }
              }
            }
            sub_22EC3CE2C((uint64_t)v38);
            v5 = v43;
          }
          ++v6;
        }
        while (v6 < v5);
        v28 = v40;
        v29 = v39;
        if ((_DWORD)v40)
        {
          v30 = *(_QWORD *)(v4 + 88);
          *(_DWORD *)(v2 + 128) = v40;
          v31 = 8 * v28;
          v32 = (void *)sub_22E3CD3D4(v30 + 2032, 8 * v28, 3);
          memcpy(v32, v29, v31);
          *(_QWORD *)(v2 + 120) = v32;
          v29 = v39;
        }
        if (v29 != v41)
          free(v29);
      }
      if (v42 != v44)
        free(v42);
    }
  }
}

void sub_22EAD1FE8(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  char v16;
  unint64_t v17;
  void **v18;
  uint64_t *v19;
  void *v20;
  void **v21;
  uint64_t *v22;
  void **v23;
  uint64_t *v24;
  char v25;
  char *v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  const void **v30;
  uint64_t v31;
  const void **v32;
  const void *v33;
  unint64_t *v34;
  unint64_t v35;
  void **v36;
  uint64_t *v37;
  uint64_t **v38;
  int v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  uint64_t v42;
  unsigned int *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unsigned __int8 *v48;
  _QWORD *v49;
  unsigned __int8 *v50;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  const void **v55;
  uint64_t v56;
  const void **v57;
  const void *v58;
  unint64_t *v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  char *v68;
  char *v69;
  uint64_t v70;
  int v71;
  _BYTE v72[32];
  uint64_t *v73;
  uint64_t *v74;
  uint64_t v75;
  int v76;
  _BYTE v77[32];
  char *v78;
  char *v79;
  uint64_t v80;
  int v81;
  _BYTE v82[32];
  uint64_t v83[12];
  unint64_t v84;
  unsigned int v85[4];
  uint64_t v86;
  unsigned __int8 *v87;
  uint64_t v88;
  char v89;
  unsigned int v90;
  char v91;

  v78 = v82;
  v79 = v82;
  v80 = 4;
  v81 = 0;
  v73 = (uint64_t *)v77;
  v74 = (uint64_t *)v77;
  v75 = 4;
  v76 = 0;
  v68 = v72;
  v69 = v72;
  v70 = 4;
  v71 = 0;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v2 + 296))(v2, a1 + 2936);
  v3 = *(_DWORD *)(a1 + 2944);
  v67 = *(_DWORD *)(a1 + 2976);
  if (v67 + v3)
  {
    v8 = -v3;
    v9 = -v3;
    while (1)
    {
      if (v9 < 0)
        v10 = *(_QWORD *)(a1 + 2936) + 8 * *(unsigned int *)(a1 + 2944);
      else
        v10 = *(_QWORD *)(a1 + 2968);
      v11 = *(_QWORD *)(v10 + 8 * v8);
      while (1)
      {
        if ((*(_BYTE *)(v11 + 28) & 0x80) != 0)
          goto LABEL_76;
        v12 = v11;
        v13 = sub_22EFD7F1C(v11);
        if (!v13)
          break;
        *(_QWORD *)v85 = 0;
        sub_22EFBF6E8(v13, v85);
        v11 = *(_QWORD *)v85;
        v14 = *(void **)(v12 + 112);
        if (!*(_QWORD *)v85)
          goto LABEL_40;
        v15 = *(void **)(*(_QWORD *)v85 + 112);
        sub_22E3BA850((uint64_t)&v68, *(const void **)(v12 + 112));
        if (!v16)
          goto LABEL_76;
        if ((*(_QWORD *)(v11 + 80) & 0x1FFFFF0000000000) != 0x10000000000)
          goto LABEL_41;
        v17 = sub_22EFD7ED0(v11);
        if ((**(_BYTE **)v17 & 6) != 0
          || (*(_WORD *)(*(_QWORD *)v17 + 28) & 1) == 0
          || (*(_BYTE *)(v11 + 28) & 0x80) != 0)
        {
          goto LABEL_41;
        }
        v18 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v78, v15);
        v19 = v79 == v78 ? (uint64_t *)((char *)&v80 + 4) : &v80;
        if (v18 != (void **)&v79[8 * *(unsigned int *)v19])
          goto LABEL_41;
        v20 = v14;
        if (v15 == v14)
          goto LABEL_56;
        v21 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v73, v15);
        if (v74 == v73)
          v22 = (uint64_t *)((char *)&v75 + 4);
        else
          v22 = &v75;
        if (v21 != (void **)&v74[*(unsigned int *)v22])
        {
          v20 = v15;
LABEL_56:
          v36 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v73, v20);
          if (v74 == v73)
            v37 = (uint64_t *)((char *)&v75 + 4);
          else
            v37 = &v75;
          if (v36 == (void **)&v74[*(unsigned int *)v37])
          {
            v38 = (uint64_t **)sub_22EFD7ED0(v12);
            v39 = sub_22EFD7AE4(*v38);
            sub_22E8FCA40((_QWORD *)a1, v39, 0x1951u, 0, (uint64_t)v85);
            if (v89)
            {
              v40 = v87;
              if (!v87)
              {
                v40 = (unsigned __int8 *)sub_22E3B8AAC(v88);
                v87 = v40;
              }
              v40[*v40 + 1] = 11;
              v41 = v87;
              goto LABEL_64;
            }
            if (v91)
            {
              v44 = *(_QWORD *)v85;
              v45 = v86;
              if (v86)
              {
                v65 = *(_QWORD *)v85;
                v45 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v86 + 32))(v86);
                v44 = v65;
              }
              v83[0] = v45;
              v46 = sub_22F2F1D6C((uint64_t *)(v44 + 12784), v83);
              v47 = v46[1] + 32 * v90;
              v50 = *(unsigned __int8 **)(v47 + 8);
              v49 = (_QWORD *)(v47 + 8);
              v48 = v50;
              if (!v50)
              {
                v66 = v49;
                v48 = (unsigned __int8 *)sub_22E3B8AAC(v49[1]);
                v49 = v66;
                *v66 = v48;
              }
              v48[*v48 + 1] = 11;
              v41 = (unsigned __int8 *)*v49;
LABEL_64:
              v42 = *v41;
              *v41 = v42 + 1;
              *(_QWORD *)&v41[8 * v42 + 16] = v12;
            }
            sub_22E903BEC(v85);
            if (v15 != v14)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v11 + 24), 0x163Bu, 0, (uint64_t)v85);
              v43 = v85;
              goto LABEL_85;
            }
            while (*(void **)(v11 + 112) != v14)
            {
              v84 = 0;
              v52 = sub_22EFD7F1C(v11);
              sub_22EFBF6E8(v52, &v84);
              v11 = v84;
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v84 + 24), 0x181Du, 0, (uint64_t)v83);
              v43 = (unsigned int *)v83;
LABEL_85:
              sub_22E903BEC(v43);
            }
          }
          v27 = v68;
          v26 = v69;
          v53 = (uint64_t *)((char *)&v70 + 4);
          if (v69 != v68)
            v53 = &v70;
          v54 = *(unsigned int *)v53;
          v55 = (const void **)v69;
          if ((_DWORD)v54)
          {
            v56 = 0;
            while (*(_QWORD *)&v69[v56] >= 0xFFFFFFFFFFFFFFFELL)
            {
              v56 += 8;
              if (8 * v54 == v56)
                goto LABEL_74;
            }
            v55 = (const void **)&v69[v56];
          }
          v57 = (const void **)&v69[8 * v54];
          if (v55 != v57)
          {
            v58 = *v55;
LABEL_97:
            sub_22E3BA850((uint64_t)&v73, v58);
            v59 = (unint64_t *)(v55 + 1);
            while (v59 != (unint64_t *)v57)
            {
              v60 = *v59++;
              v58 = (const void *)v60;
              if (v60 <= 0xFFFFFFFFFFFFFFFDLL)
              {
                v55 = (const void **)(v59 - 1);
                goto LABEL_97;
              }
            }
LABEL_73:
            v27 = v68;
            v26 = v69;
            goto LABEL_74;
          }
          goto LABEL_74;
        }
        v23 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v68, v15);
        if (v69 == v68)
          v24 = (uint64_t *)((char *)&v70 + 4);
        else
          v24 = &v70;
        v20 = v15;
        if (v23 != (void **)&v69[8 * *(unsigned int *)v24])
          goto LABEL_56;
      }
      v14 = *(void **)(v11 + 112);
LABEL_40:
      sub_22E3BA850((uint64_t)&v68, v14);
      if (!v25)
        goto LABEL_76;
LABEL_41:
      v27 = v68;
      v26 = v69;
      v28 = (uint64_t *)((char *)&v70 + 4);
      if (v69 != v68)
        v28 = &v70;
      v29 = *(unsigned int *)v28;
      v30 = (const void **)v69;
      if ((_DWORD)v29)
      {
        v31 = 0;
        while (*(_QWORD *)&v69[v31] >= 0xFFFFFFFFFFFFFFFELL)
        {
          v31 += 8;
          if (8 * v29 == v31)
            goto LABEL_74;
        }
        v30 = (const void **)&v69[v31];
      }
      v32 = (const void **)&v69[8 * v29];
      if (v30 != v32)
      {
        v33 = *v30;
LABEL_51:
        sub_22E3BA850((uint64_t)&v78, v33);
        v34 = (unint64_t *)(v30 + 1);
        while (v34 != (unint64_t *)v32)
        {
          v35 = *v34++;
          v33 = (const void *)v35;
          if (v35 <= 0xFFFFFFFFFFFFFFFDLL)
          {
            v30 = (const void **)(v34 - 1);
            goto LABEL_51;
          }
        }
        goto LABEL_73;
      }
LABEL_74:
      if (v26 == v27)
        goto LABEL_75;
      if (v70 < 0x21 || 4 * (HIDWORD(v70) - v71) >= v70)
        break;
      llvm::SmallPtrSetImplBase::shrink_and_clear((llvm::SmallPtrSetImplBase *)&v68);
LABEL_76:
      v9 = ++v8;
      if (v67 == v8)
        goto LABEL_4;
    }
    memset(v26, 255, 8 * v70);
LABEL_75:
    HIDWORD(v70) = 0;
    v71 = 0;
    goto LABEL_76;
  }
LABEL_4:
  if (v74 == v73)
    v4 = (uint64_t *)((char *)&v75 + 4);
  else
    v4 = &v75;
  v5 = *(unsigned int *)v4;
  if ((_DWORD)v5)
  {
    v6 = 8 * v5;
    v7 = v74;
    while ((unint64_t)*v7 >= 0xFFFFFFFFFFFFFFFELL)
    {
      ++v7;
      v6 -= 8;
      if (!v6)
        goto LABEL_108;
    }
  }
  else
  {
    v7 = v74;
  }
  v61 = (char *)&v74[v5];
  if (v7 != (uint64_t *)v61)
  {
    v62 = *v7;
LABEL_104:
    sub_22EFC77E8(v62, 1);
    v63 = (unint64_t *)(v7 + 1);
    while (v63 != (unint64_t *)v61)
    {
      v64 = *v63++;
      v62 = v64;
      if (v64 <= 0xFFFFFFFFFFFFFFFDLL)
      {
        v7 = (uint64_t *)(v63 - 1);
        goto LABEL_104;
      }
    }
  }
LABEL_108:
  if (v69 != v68)
    free(v69);
  if (v74 != v73)
    free(v74);
  if (v79 != v78)
    free(v79);
}

uint64_t sub_22EAD25B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v4 = *(_QWORD *)(a2 + 56);
  v5 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (uint64_t *)v5[4];
  if (!v5)
    return 0;
  v6 = *v5;
  if ((*v5 & 0xF) != 0)
    return 0;
  if (*(_BYTE *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
    return 0;
  v13[0] = *v5;
  v13[1] = v5 + 1;
  if (!v6)
    return 0;
  v12 = a1;
  if ((*(_BYTE *)(v6 + 23) & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v6 + 24);
    v10 = sub_22E47EE80(v13);
    if (!sub_22EAD26A8((uint64_t)&v12, v9, v10))
      return 1;
  }
  if ((sub_22EAD2E10(a1, a2) & 1) != 0)
    return 1;
  v7 = *(_QWORD *)(a2 + 56);
  if ((v7 & 4) != 0
    && (v11 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF8) + 40)) != 0
    && !sub_22EAD2F20((uint64_t)&v12, v11, 0))
  {
    return 1;
  }
  else
  {
    return sub_22EADE794(a1, a2);
  }
}

uint64_t sub_22EAD26A8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v10;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _DWORD *v53;
  uint64_t v54;
  unint64_t *v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  char v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;

  if (a2)
  {
    v4 = a2;
    do
    {
      v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      if ((v4 & 0xF) != 0)
      {
LABEL_4:
        if ((v6 & 0xFFFFFFFFFFFFFFF0) != 0)
          v7 = *(_QWORD *)((char *)&unk_22F47F1E0
                         + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
        else
          v7 = 1;
        a3 = (a3 + v7 - 1) & -v7;
        v4 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      }
      else
      {
        result = 1;
        switch(*(_BYTE *)(v6 + 16))
        {
          case 0:
          case 1:
          case 0x16:
          case 0x17:
          case 0x36:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47F1E0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 - 1;
            goto LABEL_62;
          case 2:
          case 3:
          case 4:
          case 5:
            v21 = *(_QWORD *)(v4 + 32);
            if (v21 >= 0x10 && (*(_QWORD *)(v4 + 32) & 0xFLL) == 0)
              v74 = *(_QWORD *)((char *)&unk_22F47F1E0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v74 = 1;
            result = sub_22EAD26A8(a1, v21, (a3 + v74 + 15) & -v74);
            if (!(_DWORD)result)
              return result;
            v23 = *(_QWORD *)(a3 + 8);
            return sub_22EAD2F20(a1, v23, 0);
          case 6:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47F1E0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 11;
            goto LABEL_62;
          case 7:
          case 0x25:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47F1E0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 7;
            goto LABEL_62;
          case 8:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47F1E0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = v20 + a3;
            goto LABEL_62;
          case 0xA:
          case 0x20:
          case 0x24:
          case 0x26:
          case 0x27:
          case 0x28:
          case 0x29:
            v4 = *(_QWORD *)(v4 + 32);
            goto LABEL_9;
          case 0xC:
          case 0x37:
          case 0x38:
            goto LABEL_76;
          case 0xD:
          case 0x30:
            v23 = *(_QWORD *)(v4 + 24);
            return sub_22EAD2F20(a1, v23, 0);
          case 0xE:
            result = sub_22EADE928(a1, *(_QWORD *)(v4 + 24));
            if (!(_DWORD)result)
              return result;
            if (!*(_QWORD *)(v4 + 40))
              return 1;
            result = sub_22EAEC53C(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 16));
            if (!(_DWORD)result)
              return result;
            v25 = *(_DWORD *)(a3 + 28);
            v75 = *(_QWORD *)(*(_QWORD *)(v4 + 40) + 40);
            v76 = v25;
            sub_22EFC6D6C((uint64_t)&v77, v75);
            result = sub_22EAEC5C4(a1, &v75);
            if (!(_DWORD)result)
              return result;
            v26 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v26)
              return 1;
            v27 = v4 + 48;
            v28 = (uint64_t *)(a3 + 56);
            v29 = v26 - 1;
            do
            {
              v30 = *v28++;
              v78 = *(_OWORD *)v27;
              v79 = *(_QWORD *)(v27 + 16);
              v80 = v30;
              result = sub_22EAEC67C(a1, (uint64_t)&v78);
              v31 = v29-- != 0;
              v32 = v31;
              if (!(_DWORD)result)
                break;
              v27 += 24;
            }
            while ((v32 & 1) != 0);
            return result;
          case 0xF:
            result = sub_22EAEC794(a1, *(_QWORD *)(v4 + 40));
            if (!(_DWORD)result)
              return result;
            v24 = *(_QWORD *)(v4 + 24);
            return sub_22EADE928(a1, v24);
          case 0x10:
            v33 = *(_QWORD *)(v4 + 40);
            goto LABEL_96;
          case 0x11:
            v23 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
            return sub_22EAD2F20(a1, v23, 0);
          case 0x12:
            return sub_22EAEC53C(a1, *(_QWORD *)(v4 + 32), *(_QWORD *)(a3 + 8));
          case 0x13:
            v33 = *(_QWORD *)(v4 + 40);
            if (!v33)
              goto LABEL_97;
LABEL_96:
            result = sub_22EAD2F20(a1, v33, 0);
            if (!(_DWORD)result)
              return result;
LABEL_97:
            v24 = *(_QWORD *)(v4 + 48);
            return sub_22EADE928(a1, v24);
          case 0x14:
            v34 = *(_QWORD *)(a3 + 8);
            if (v34)
            {
              v35 = *(_QWORD *)(v4 + 32);
              if (v35)
              {
                result = sub_22EAEC53C(a1, v35, v34);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v36 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v36)
              return 1;
            v37 = v4 + 48;
            v38 = (uint64_t *)(a3 + 32);
            v39 = v36 - 1;
            do
            {
              v40 = *v38++;
              v78 = *(_OWORD *)v37;
              v79 = *(_QWORD *)(v37 + 16);
              v80 = v40;
              result = sub_22EAEC67C(a1, (uint64_t)&v78);
              v31 = v39-- != 0;
              v41 = v31;
              if (!(_DWORD)result)
                break;
              v37 += 24;
            }
            while ((v41 & 1) != 0);
            return result;
          case 0x15:
            v42 = *(_QWORD *)(v4 + 48);
            if (v42)
            {
              result = sub_22EAD2F20(a1, v42, 0);
              if (!(_DWORD)result)
                return result;
            }
            v24 = *(_QWORD *)(v4 + 40);
            return sub_22EADE928(a1, v24);
          case 0x18:
            v17 = *(_QWORD *)(v4 + 32);
            if (v17)
            {
              result = sub_22EAEC53C(a1, v17, *(_QWORD *)(a3 + 8));
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 40);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              goto LABEL_60;
            v20 = 1;
            goto LABEL_61;
          case 0x19:
            *(_QWORD *)&v78 = v4;
            *((_QWORD *)&v78 + 1) = a3;
            v43 = *(_QWORD *)(v4 + 24);
            v44 = sub_22E47EE80(&v78);
            return sub_22EAD26A8(a1, v43, v44);
          case 0x1A:
            *(_QWORD *)&v78 = v4;
            *((_QWORD *)&v78 + 1) = a3;
            v45 = *(_QWORD *)(v4 + 24);
            v46 = sub_22E47EE80(&v78);
            result = sub_22EAD26A8(a1, v45, v46);
            if (!(_DWORD)result)
              return result;
            v47 = v78;
            v48 = *(_QWORD *)(v78 + 16);
            if (*(_BYTE *)(v78 + 16) == 25 || (v48 & 0x3FFFC000000000) == 0)
              goto LABEL_126;
            v50 = 0;
            v51 = (unsigned __int16)(v48 >> 38);
            do
            {
              v52 = *(_QWORD *)(*((_QWORD *)&v78 + 1) + 8 * v50 + 16);
              if (v52)
              {
                if ((sub_22EAEC924(a1, v52) & 1) == 0)
                  return 0;
              }
              else if (v50 < (unsigned __int16)(*(_QWORD *)(v47 + 16) >> 38))
              {
                result = sub_22EADE928(a1, *(_QWORD *)(v47 + 40 + 8 * v50));
                if (!(_DWORD)result)
                  return result;
              }
              ++v50;
            }
            while (v51 != v50);
            v48 = *(_QWORD *)(v47 + 16);
LABEL_126:
            if ((v48 & 0x3C0000000000000) == 0x80000000000000)
            {
              v53 = (_DWORD *)((v47 + 8 * (unsigned __int16)(v48 >> 38) + 4 * ((v48 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
              v56 = *v53;
              v55 = (unint64_t *)(v53 + 2);
              v54 = v56;
              if (v56)
              {
                v57 = 8 * v54;
                while ((sub_22EADE928(a1, *v55) & 1) != 0)
                {
                  ++v55;
                  v57 -= 8;
                  if (!v57)
                    goto LABEL_131;
                }
                return 0;
              }
            }
LABEL_131:
            v58 = sub_22F257D3C(v47);
            if (!v58)
              return 1;
            result = sub_22EAD2F20(a1, v58, 0);
            if ((_DWORD)result)
              return 1;
            return result;
          case 0x1C:
            v4 = *(_QWORD *)(v4 + 24);
LABEL_9:
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47F1E0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 3;
            goto LABEL_62;
          case 0x1D:
          case 0x1E:
            result = sub_22EAD2F20(a1, *(_QWORD *)(a3 + 16), 0);
            if (!(_DWORD)result)
              return result;
            result = sub_22EAD2F20(a1, *(_QWORD *)(a3 + 24), 0);
            if (!(_DWORD)result)
              return result;
LABEL_76:
            v24 = *(_QWORD *)(v4 + 32);
            return sub_22EADE928(a1, v24);
          case 0x1F:
            v19 = *(_QWORD **)(a3 + 8);
            if (v19)
            {
              if ((sub_22EAD26A8(a1, *v19, v19 + 1) & 1) == 0)
                return 0;
            }
            else
            {
              result = sub_22EADE928(a1, *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0);
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 32);
            v20 = 1;
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
LABEL_60:
              v20 = *(_QWORD *)((char *)&unk_22F47F1E0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
LABEL_61:
            v10 = a3 + v20 + 15;
LABEL_62:
            a3 = v10 & -v20;
            break;
          case 0x21:
            v59 = *(_QWORD *)(v4 + 24);
            v60 = *(_QWORD *)(v59 & 0xFFFFFFFFFFFFFFF0);
            if (v60 != v4)
            {
              v61 = 1;
              if (v59 >= 0x10 && (v59 & 0xF) == 0)
                v61 = *(_QWORD *)((char *)&unk_22F47F1E0
                                + ((uint64_t)((unint64_t)*(unsigned int *)(v60 + 16) << 56) >> 53));
              result = sub_22EAD26A8(a1, v59, (a3+ (((HIWORD(*(_DWORD *)(v4 + 16)) & 0x3F8) + 4 * (*(_DWORD *)(v4 + 16) >> 26) + 31) & 0x7F8)+ v61- 1) & -v61);
              if (!(_DWORD)result)
                return result;
            }
            v62 = (*(_DWORD *)(v4 + 16) >> 19) & 0x7F;
            if (!(_DWORD)v62)
              return 1;
            v63 = (_QWORD *)(a3 + 24);
            v64 = v62 - 1;
            do
            {
              v65 = (_QWORD *)*v63++;
              result = sub_22EAD26A8(a1, *v65, v65 + 1);
              v31 = v64-- != 0;
              v66 = v31;
            }
            while ((_DWORD)result && (v66 & 1) != 0);
            return result;
          case 0x2A:
            v67 = *(_DWORD *)(v4 + 20);
            *((_QWORD *)&v78 + 1) = *(_QWORD *)(v4 + 40);
            LODWORD(v78) = 8;
            DWORD1(v78) = v67;
            return sub_22EAEC858(a1, (uint64_t)&v78);
          case 0x2B:
            v24 = *(_QWORD *)(v4 + 8);
            return sub_22EADE928(a1, v24);
          case 0x2E:
            result = sub_22EAEC794(a1, *(_QWORD *)(v4 + 32));
            if (!(_DWORD)result)
              return result;
            v68 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v68)
              return 1;
            v69 = v4 + 40;
            v70 = (uint64_t *)(a3 + 16);
            v71 = v68 - 1;
            do
            {
              v72 = *v70++;
              v78 = *(_OWORD *)v69;
              v79 = *(_QWORD *)(v69 + 16);
              v80 = v72;
              result = sub_22EAEC67C(a1, (uint64_t)&v78);
              v31 = v71-- != 0;
              v73 = v31;
              if (!(_DWORD)result)
                break;
              v69 += 24;
            }
            while ((v73 & 1) != 0);
            return result;
          case 0x31:
          case 0x33:
            v13 = *(unint64_t **)(a3 + 16);
            v14 = *v13;
            a3 = (uint64_t)(v13 + 1);
            v4 = v14;
            break;
          case 0x39:
            goto LABEL_4;
          default:
            return result;
        }
      }
    }
    while (v4);
  }
  return 1;
}

uint64_t sub_22EAD2E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  unint64_t *v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a2 + 56);
  v3 = (uint64_t *)(v2 & 0xFFFFFFFFFFFFFFF8);
  if ((v2 & 4) != 0)
    v3 = (uint64_t *)v3[4];
  if (!v3)
    return 0;
  v4 = *v3;
  if ((v4 & 0xF) != 0)
    return 0;
  if (!v4 || *(_BYTE *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
    return 0;
  v19 = a1;
  v6 = *(_QWORD *)(v4 + 16);
  v7 = (v6 >> 54) & 0xF;
  if ((_DWORD)v7 == 2)
  {
    v9 = v4;
  }
  else
  {
    if ((v7 - 6) > 2)
      return 0;
    v9 = v4;
    v18 = sub_22F257D3C(v4);
    if (!sub_22EAD2F20((uint64_t)&v19, v18, 0))
      return 1;
    v6 = *(_QWORD *)(v9 + 16);
  }
  if ((v6 & 0x3C0000000000000) != 0x80000000000000)
    return 0;
  v10 = (_DWORD *)((v9 + 8 * (unsigned __int16)(v6 >> 38) + 4 * ((v6 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
  v13 = *v10;
  v12 = (unint64_t *)(v10 + 2);
  v11 = v13;
  if (!v13)
    return 0;
  v14 = 8 * v11 - 8;
  do
  {
    v15 = *v12++;
    v16 = sub_22EADE928((uint64_t)&v19, v15);
    if (v16)
      v17 = v14 == 0;
    else
      v17 = 1;
    v14 -= 8;
  }
  while (!v17);
  return v16 ^ 1u;
}

uint64_t sub_22EAD2F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unsigned int v5;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD v17[10];

  v17[8] = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    if (a3)
    {
      v4 = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v5 = *(_DWORD *)(a3 + 8);
      if (v5 >= *(_DWORD *)(a3 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v5 = *(_DWORD *)(a3 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a3 + 8 * v5) = v4;
      ++*(_DWORD *)(a3 + 8);
    }
    else
    {
      v17[0] = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v16 = 0x800000001;
      v7 = 1;
      do
      {
        v8 = v7;
        v9 = &v17[v7];
        v10 = *(v9 - 1);
        if ((v10 & 4) != 0)
        {
          v7 = v8 - 1;
          LODWORD(v16) = v8 - 1;
        }
        else
        {
          *(v9 - 1) = v10 | 4;
          v11 = *(unsigned __int8 *)(v10 & 0xFFFFFFFFFFFFFFF8) - 1;
          if (v11 <= 0xEB)
            __asm { BR              X9 }
          v7 = v16;
          if ((_DWORD)v8 != (_DWORD)v16)
          {
            v12 = &v17[v16 - 1];
            if (&v17[v8] < v12)
            {
              v13 = &v17[v8 + 1];
              do
              {
                v14 = *(v13 - 1);
                *(v13 - 1) = *v12;
                *v12-- = v14;
              }
              while (v13++ < v12);
            }
          }
        }
      }
      while (v7);
    }
  }
  return 1;
}

uint64_t sub_22EADE794(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;

  v13 = a1;
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v5 = *v4;
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v7 = *(_QWORD *)v6 + 8 * *(unsigned int *)(v6 + 8);
  }
  else
  {
    v7 = 0;
  }
  if (v5 == (uint64_t *)v7)
    return 0;
  while (1)
  {
    v8 = *v5;
    v9 = *(unsigned __int16 *)(*v5 + 32);
    if (*v5 && v9 == 182 || v8 && v9 == 287)
    {
LABEL_10:
      v10 = 0;
      v11 = 0;
LABEL_11:
      v12 = *(_QWORD *)(v8 + 40);
      if (v12 && !sub_22EAD2F20((uint64_t)&v13, v12, 0))
        return 1;
      goto LABEL_19;
    }
    if (v8 && v9 == 94 || v8 && v9 == 95)
      goto LABEL_18;
    if (v8 && v9 == 173 || v8 && v9 == 309)
    {
      v11 = *(uint64_t **)(v8 + 56);
      v10 = *(unsigned int *)(v8 + 48);
      goto LABEL_11;
    }
    if (v8 && v9 == 197)
      goto LABEL_10;
    if (v8 && v9 == 198 || v8 && v9 == 296 || v8 && v9 == 93)
      goto LABEL_18;
    if (!v8 || v9 != 333)
    {
      if (!v8 || v9 != 294)
        goto LABEL_22;
LABEL_18:
      v11 = *(uint64_t **)(v8 + 40);
      v10 = *(unsigned int *)(v8 + 36);
      goto LABEL_19;
    }
    v11 = *(uint64_t **)(v8 + 56);
    v10 = *(unsigned int *)(v8 + 48);
LABEL_19:
    if (v10)
      break;
LABEL_22:
    result = 0;
    if (++v5 == (uint64_t *)v7)
      return result;
  }
  while ((sub_22EAD2F20((uint64_t)&v13, *v11, 0) & 1) != 0)
  {
    ++v11;
    if (!--v10)
      goto LABEL_22;
  }
  return 1;
}

uint64_t sub_22EADE928(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _DWORD v46[2];
  uint64_t v47;

  if (a2 < 0x10)
    return 1;
  while (2)
  {
    v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    v5 = *(_DWORD *)(v4 + 16);
    result = 1;
    switch((char)v5)
    {
      case 0:
      case 1:
      case 4:
      case 6:
      case 7:
      case 8:
      case 10:
      case 12:
      case 29:
      case 32:
      case 36:
      case 37:
      case 38:
      case 39:
      case 54:
      case 55:
      case 56:
        goto LABEL_5;
      case 2:
        result = sub_22EADE928(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        if ((*(_BYTE *)(v4 + 19) & 2) == 0)
          return 1;
        v14 = *(_QWORD *)(v4 + 56);
        if (!v14)
          return 1;
        goto LABEL_49;
      case 3:
        result = sub_22EADE928(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v14 = *(_QWORD *)(v4 + 48);
        if (v14)
          goto LABEL_49;
        return 1;
      case 5:
        result = sub_22EADE928(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v13 = *(_QWORD *)(v4 + 40);
        return sub_22EAD2F20(a1, v13, 0);
      case 13:
      case 48:
        v13 = *(_QWORD *)(v4 + 24);
        return sub_22EAD2F20(a1, v13, 0);
      case 14:
        result = sub_22EADE928(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        v15 = *(_QWORD *)(v4 + 40);
        if (!v15)
          return 1;
        result = sub_22EAEC924(a1, v15);
        if (!(_DWORD)result)
          return result;
        v16 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v16)
          return 1;
        v17 = v4 + 48;
        v18 = v16 - 1;
        do
        {
          result = sub_22EAEC858(a1, v17);
          v19 = v18-- != 0;
          v20 = v19;
          if (!(_DWORD)result)
            break;
          v17 += 24;
        }
        while ((v20 & 1) != 0);
        return result;
      case 15:
        result = sub_22EAEC794(a1, *(_QWORD *)(v4 + 40));
        if ((_DWORD)result)
          goto LABEL_19;
        return result;
      case 16:
        v7 = *(_QWORD *)(v4 + 40);
        goto LABEL_22;
      case 17:
        v13 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
        return sub_22EAD2F20(a1, v13, 0);
      case 18:
        return sub_22EAEC7F4(a1, *(_QWORD *)(v4 + 32));
      case 19:
        v7 = *(_QWORD *)(v4 + 40);
        if (!v7)
          goto LABEL_23;
LABEL_22:
        result = sub_22EAD2F20(a1, v7, 0);
        if (!(_DWORD)result)
          return result;
LABEL_23:
        v6 = (unint64_t *)(v4 + 48);
        goto LABEL_6;
      case 20:
        result = sub_22EAEC7F4(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v21 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v21)
          return 1;
        v22 = v4 + 48;
        v23 = v21 - 1;
        do
        {
          result = sub_22EAEC858(a1, v22);
          v19 = v23-- != 0;
          v24 = v19;
          if (!(_DWORD)result)
            break;
          v22 += 24;
        }
        while ((v24 & 1) != 0);
        return result;
      case 21:
        v8 = *(_QWORD *)(v4 + 48);
        if (v8)
        {
          result = sub_22EAD2F20(a1, v8, 0);
          if (!(_DWORD)result)
            return result;
        }
        goto LABEL_31;
      case 22:
        goto LABEL_34;
      case 23:
        v9 = *(_QWORD *)(v4 + 64);
        if (!v9)
          goto LABEL_5;
        goto LABEL_35;
      case 24:
        v10 = *(_QWORD *)(v4 + 32);
        if (v10)
        {
          result = sub_22EAEC7F4(a1, v10);
          if (!(_DWORD)result)
            return result;
        }
LABEL_31:
        v6 = (unint64_t *)(v4 + 40);
        goto LABEL_6;
      case 25:
      case 28:
      case 49:
LABEL_19:
        v6 = (unint64_t *)(v4 + 24);
        goto LABEL_6;
      case 26:
        result = sub_22EADE928(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        v25 = *(_QWORD *)(v4 + 16);
        v26 = (unsigned __int16)(v25 >> 38);
        if (!(unsigned __int16)(v25 >> 38))
          goto LABEL_82;
        v27 = 8 * v26;
        v28 = (_QWORD *)(v4 + 40);
        break;
      case 30:
        v11 = *(_QWORD *)(v4 + 48);
        if (v11)
        {
          result = sub_22EAD2F20(a1, v11, 0);
          if (!(_DWORD)result)
            return result;
        }
LABEL_34:
        v9 = *(_QWORD *)(v4 + 56);
        if (!v9)
          goto LABEL_5;
LABEL_35:
        result = sub_22EAD2F20(a1, v9, 0);
        if (!(_DWORD)result)
          return result;
LABEL_5:
        v6 = (unint64_t *)(v4 + 32);
LABEL_6:
        a2 = *v6;
        if (*v6 < 0x10)
          return 1;
        continue;
      case 31:
        v12 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_40;
      case 33:
        v35 = *(_QWORD *)(v4 + 24);
        if (*(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0) != v4)
        {
          result = sub_22EADE928(a1, v35);
          if (!(_DWORD)result)
            return result;
        }
        v36 = (*(_QWORD *)(v4 + 16) >> 19) & 0x7FLL;
        if (!v36)
          return 1;
        v37 = (uint64_t *)(v4 + 48);
        v38 = 8 * v36 - 8;
        do
        {
          v39 = *v37++;
          result = sub_22EADE928(a1, v39);
          if ((_DWORD)result)
            v40 = v38 == 0;
          else
            v40 = 1;
          v38 -= 8;
        }
        while (!v40);
        return result;
      case 40:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 41:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 42:
        v41 = *(_DWORD *)(v4 + 20);
        v47 = *(_QWORD *)(v4 + 40);
        v46[0] = 8;
        v46[1] = v41;
        return sub_22EAEC858(a1, (uint64_t)v46);
      case 43:
        v6 = (unint64_t *)(v4 + 8);
        goto LABEL_6;
      case 46:
        result = sub_22EAEC794(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v42 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v42)
          return 1;
        v43 = v4 + 40;
        v44 = v42 - 1;
        do
        {
          result = sub_22EAEC858(a1, v43);
          v19 = v44-- != 0;
          v45 = v19;
          if (!(_DWORD)result)
            break;
          v43 += 24;
        }
        while ((v45 & 1) != 0);
        return result;
      case 51:
        v12 = *(_QWORD *)(v4 + 24);
LABEL_40:
        result = sub_22EADE928(a1, v12);
        if (!(_DWORD)result)
          return result;
        goto LABEL_5;
      default:
        return result;
    }
    break;
  }
  do
  {
    if ((sub_22EADE928(a1, *v28) & 1) == 0)
      return 0;
    ++v28;
    v27 -= 8;
  }
  while (v27);
  v25 = *(_QWORD *)(v4 + 16);
  v26 = (unsigned __int16)(v25 >> 38);
LABEL_82:
  if ((v25 & 0x3C0000000000000) == 0x80000000000000)
  {
    v29 = (_DWORD *)((v4 + 40 + 8 * v26 + 4 * ((v25 >> 59) & 1) + 7) & 0xFFFFFFFFFFFFFFF8);
    v32 = *v29;
    v31 = v29 + 2;
    v30 = v32;
    if (v32)
    {
      v33 = 8 * v30;
      while ((sub_22EADE928(a1, *v31) & 1) != 0)
      {
        ++v31;
        v33 -= 8;
        if (!v33)
          goto LABEL_87;
      }
      return 0;
    }
  }
LABEL_87:
  v34 = sub_22F257D3C(v4);
  if (!v34)
    return 1;
  v14 = v34;
LABEL_49:
  result = sub_22EAD2F20(a1, v14, 0);
  if ((_DWORD)result)
    return 1;
  return result;
}

void sub_22EADEDCC(uint64_t a1, int a2, int a3, unint64_t *a4, unint64_t a5, int *a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD v25[5];

  v25[4] = *MEMORY[0x24BDAC8D0];
  *(_DWORD *)(a9 + 8) = 0;
  *(_DWORD *)a10 = a3;
  if (a3 == 2)
  {
    v19 = a5;
    if (a5 > *(unsigned int *)(a9 + 12))
      llvm::SmallVectorBase<unsigned int>::grow_pod();
    v13 = v19;
    if (!v19)
    {
LABEL_23:
      v18 = *(unsigned int *)(a9 + 8);
      *(_QWORD *)(a10 + 8) = *(_QWORD *)a9;
      *(_QWORD *)(a10 + 16) = v18;
      return;
    }
    while (1)
    {
      v14 = *a4;
      if (*a4 >= 0x10)
      {
        v15 = *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0);
        if (v15 && *(_BYTE *)(v15 + 16) == 57)
          v14 = *(_QWORD *)(v15 + 8);
      }
      else
      {
        v14 = 0;
      }
      v22 = v14;
      if (!a2)
        goto LABEL_18;
      v23 = v25;
      v24 = 0x200000000;
      sub_22F34AB40(a1, v14, (uint64_t)&v23);
      if (!(_DWORD)v24)
        break;
      sub_22EE66E00(a1, *a6, 14, (char *)v23, v24);
      if (v23 != v25)
        free(v23);
LABEL_22:
      a6 += 2;
      ++a4;
      if (!--v13)
        goto LABEL_23;
    }
    if (v23 != v25)
      free(v23);
LABEL_18:
    if ((sub_22EB14454(a1, &v22, *(_QWORD *)a6) & 1) == 0)
    {
      v16 = v22;
      v17 = *(unsigned int *)(a9 + 8);
      if (v17 >= *(unsigned int *)(a9 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v17 = *(unsigned int *)(a9 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a9 + 8 * v17) = v16;
      ++*(_DWORD *)(a9 + 8);
    }
    goto LABEL_22;
  }
  if ((a3 - 6) <= 2)
  {
    if (a2 && sub_22EE67384(a1, a8, 0))
      *(_DWORD *)a10 = 5;
    else
      *(_QWORD *)(a10 + 24) = a8;
  }
}

void sub_22EADEFEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unint64_t *a5, unint64_t a6, int *a7, uint64_t a8, unint64_t a9)
{
  uint64_t v9;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  void *v22[2];
  _QWORD v23[5];

  v23[4] = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    v9 = a2;
    v11 = *(_DWORD *)(a2 + 28);
    if ((v11 & 0x7F) == 0x1D)
    {
      v9 = *(_QWORD *)(a2 + 48);
      v11 = *(_DWORD *)(v9 + 28);
    }
    if ((v11 & 0x7Eu) - 58 >= 0xFFFFFFFC)
    {
      v21 = 0;
      v22[0] = v23;
      v22[1] = (void *)0x400000000;
      v18 = 0;
      v19 = 0u;
      v20 = 0u;
      sub_22EADEDCC(a1, 1, a3, a5, a6, a7, a8, a9, (uint64_t)v22, (uint64_t)&v18);
      sub_22EF5F6AC(*(_QWORD *)(a1 + 88), v9, (__int128 *)&v18, 1);
      if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9) + 80) & 0xE000) == 0x4000
        || (*(_QWORD *)(v9 + 40) & 7) == 6
        && (*(_DWORD *)(*(_QWORD *)(v9 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) <= 3)
      {
        sub_22EAD2E10(a1, v9);
      }
      v12 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      if ((*(_BYTE *)(v12 + 82) & 0xC) != 0 || sub_22EFD7260(v12))
      {
        v13 = sub_22EFD7394(v9);
        if ((uint64_t *)v13 != v14)
        {
          v15 = (uint64_t *)v13;
          v16 = v14;
          do
          {
            v17 = *v15++;
            sub_22EB16B8C(a1, v9, v17);
          }
          while (v15 != v16);
        }
      }
      if (v22[0] != v23)
        free(v22[0]);
    }
  }
}

uint64_t sub_22EADF194(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int16 v14;

  result = sub_22EADF264((uint64_t)(a1 + 244));
  v7 = result;
  v8 = *(_QWORD *)(a2 + 1152);
  if (v8
    && (v10 = *(_QWORD *)(a2 + 1144),
        v14 = 0,
        (result = (uint64_t)sub_22ED5F458(a1, *(_DWORD *)(a2 + 72), *(_DWORD *)(a2 + 64), a2 + 8, 0, v10, v8, 0, (_BYTE *)&v14 + 1, &v14, 1)) != 0))
  {
    v11 = result;
    v12 = sub_22EFE90A8(result);
    v13 = *(_QWORD *)(v7 + 8);
    *(_DWORD *)(v7 + 4) = v12;
    result = (uint64_t)sub_22EAF293C(v7 + 8, v13 + 8 * *(unsigned int *)(v7 + 16), (uint64_t *)(v11 + 16), (uint64_t *)(v11 + 16 + 8 * (*(_DWORD *)(v11 + 12) & 0x1FFFFFFF)));
    v9 = *(_DWORD *)(v11 + 12) & 0x1FFFFFFF;
  }
  else
  {
    v9 = 0;
    *(_DWORD *)(v7 + 4) = a3;
  }
  *(_DWORD *)v7 = v9;
  return result;
}

uint64_t sub_22EADF264(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= *(_DWORD *)(a1 + 12))
    return sub_22F32AC0C(a1);
  v2 = *(_QWORD *)a1 + 56 * v1;
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_QWORD *)(v2 + 48) = 0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_QWORD *)(v2 + 8) = v2 + 24;
  *(_QWORD *)(v2 + 16) = 0x400000000;
  LODWORD(v2) = *(_DWORD *)(a1 + 8) + 1;
  *(_DWORD *)(a1 + 8) = v2;
  return *(_QWORD *)a1 + 56 * v2 - 56;
}

void sub_22EADF2C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  int *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 1952);
  v3 = *(_DWORD *)(a1 + 1960);
  v4 = v2 + 56 * v3;
  v5 = *(unsigned int *)(v4 - 40);
  v6 = *(_DWORD *)(v4 - 56);
  if (v5 <= v6)
    goto LABEL_2;
  v18 = a1;
  if (!v6)
  {
    v10 = *(_QWORD *)(a1 + 88);
    v13 = *(_QWORD *)(v4 - 48);
    v11 = 0;
    v12 = 0;
    v14 = 0;
    goto LABEL_8;
  }
  v9 = *(int **)(a2[143] + 8 * a2[144] - 8);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *v9;
  v12 = v9[1];
  v13 = *(_QWORD *)(v4 - 48);
  v14 = v9[2];
  v15 = v9[3];
  if ((v15 & 0x40000000) == 0)
  {
LABEL_8:
    v16 = 0;
    goto LABEL_9;
  }
  v16 = *(_QWORD *)&v9[2 * (v15 & 0x1FFFFFFF) + 4];
LABEL_9:
  a2[145] = sub_22EFE8F48(v10, v11, v12, v13, v5, v14, v16);
  a1 = v18;
  v3 = *(_DWORD *)(v18 + 1960);
  v2 = *(_QWORD *)(v18 + 1952);
LABEL_2:
  *(_DWORD *)(a1 + 1960) = v3 - 1;
  v7 = v2 + 56 * (v3 - 1);
  v8 = *(void **)(v7 + 8);
  if (v8 != (void *)(v7 + 24))
    free(v8);
}

uint64_t sub_22EADF3A0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, unint64_t, uint64_t), uint64_t a10)
{
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void **v30;
  size_t v31;
  size_t v32;
  uint64_t v33;
  void *__dst[2];
  unint64_t v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40[24];
  uint64_t v41;
  void *__src;
  size_t __len[2];
  _QWORD v44[7];

  v13 = a3;
  v44[5] = *MEMORY[0x24BDAC8D0];
  v41 = a5;
  if (sub_22E508590((uint64_t)a6, a3))
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a4 + 24), 0xC69u, 0, (uint64_t)v40);
    v22 = sub_22E8901B8((uint64_t)v40, &v41);
    v39 = v13;
    v23 = sub_22E89519C(v22, &v39);
    v24 = *((_DWORD *)a6 + 2);
    if (v24 < 0x41 || v24 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)a6) <= 0x40)
    {
      v26 = (unint64_t *)*a6;
      if (v24 < 0x41)
        v26 = a6;
      v25 = *v26;
      if (v25 >= 0xFFFFFFFF)
        LODWORD(v25) = -1;
    }
    else
    {
      LODWORD(v25) = -1;
    }
    v38 = v25;
    v27 = sub_22E89519C(v23, &v38);
    __src = v44;
    *(_OWORD *)__len = xmmword_22F455490;
    llvm::APInt::toString();
    v28 = (void *)__len[0];
    if (__len[0] >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v29 = __src;
    if (__len[0] >= 0x17)
    {
      v31 = (__len[0] & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((__len[0] | 7) != 0x17)
        v31 = __len[0] | 7;
      v32 = v31 + 1;
      v30 = (void **)operator new(v31 + 1);
      __dst[1] = v28;
      v37 = v32 | 0x8000000000000000;
      __dst[0] = v30;
    }
    else
    {
      HIBYTE(v37) = __len[0];
      v30 = __dst;
      if (!__len[0])
      {
LABEL_24:
        *((_BYTE *)v28 + (_QWORD)v30) = 0;
        if (__src != v44)
          free(__src);
        v33 = sub_22F2F3734(v27, __dst);
        LOBYTE(__src) = sub_22E8BAD7C((uint64_t)a6, v13);
        sub_22E894E38(v33, (unsigned __int8 *)&__src);
        if (SHIBYTE(v37) < 0)
          operator delete(__dst[0]);
        sub_22E903BEC(v40);
        return 1;
      }
    }
    memmove(v30, v29, (size_t)v28);
    goto LABEL_24;
  }
  if (v13)
  {
    v15 = 0;
    v16 = 8 * v13;
    v13 = 1;
    while (1)
    {
      v17 = *(_QWORD *)(a2 + 8 * v15);
      v18 = *(unsigned int *)(v17 + 24);
      v19 = sub_22F32D524((uint64_t)a1, a4, a5, 1, *(_DWORD *)(v17 + 24), 0);
      if ((v19 & 1) != 0)
        break;
      v20 = a9(a10, v18, v19 & 0xFFFFFFFFFFFFFFFELL, v15);
      if ((v20 & 1) != 0)
        return 1;
      *(_QWORD *)(v17 + 48) = a7;
      *(_QWORD *)(v17 + 64) = v20 & 0xFFFFFFFFFFFFFFFELL;
      ++v15;
      v16 -= 8;
      if (!v16)
        return 0;
    }
  }
  return v13;
}

uint64_t sub_22EADF648(uint64_t *a1, unsigned int a2, uint64_t (**a3)(), unsigned int a4)
{
  uint64_t v7;

  v7 = sub_22EB25D60(*a1, a2, a4);
  if ((v7 & 1) != 0)
    return 1;
  else
    return sub_22EB2AFE4(*a1, a3, a2, (void *)(v7 & 0xFFFFFFFFFFFFFFFELL), a2);
}

uint64_t sub_22EADF6B4(uint64_t *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v5;
  int v6;

  v5 = *a1;
  if (a4)
    v6 = 11;
  else
    v6 = 10;
  return sub_22EB2EA08(v5, a2, v6, a3);
}

uint64_t sub_22EADF6D4(_QWORD *a1, _DWORD *a2, unsigned int a3, const void *a4, size_t a5, uint64_t a6, unsigned int a7)
{
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BOOL8 v17;
  int v19;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[96];
  _QWORD v30[2];
  void *__p[2];
  char v32;
  void *v33;
  unsigned int v34;
  void **v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _BYTE v39[64];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  unsigned int v45;
  _QWORD v46[3];
  __int16 v47;
  int v48;
  char v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v30[0] = a4;
  v30[1] = a5;
  v14 = a1[419];
  if ((v14 & 1) != 0)
  {
    v14 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(a1[11] + 16048) + 16))(*(_QWORD *)(a1[11] + 16048), v14 >> 1);
    a1[419] = v14;
  }
  if (v14)
  {
    v15 = sub_22E3CB704((llvm::StringMapImpl *)(a1[10] + 544), a4, a5);
    v36 = 0;
    v37 = v39;
    v38 = 0x800000000;
    v40 = 0;
    v41 = 0;
    v42 = 0;
    v43 = a1;
    v44 = v15;
    v45 = a3;
    sub_22EFC6D6C((uint64_t)v46, v15);
    v46[1] = 0;
    v46[2] = 0;
    v47 = 0;
    v48 = 257;
    v49 = 0;
    sub_22EC56024((uint64_t)&v36);
    if ((sub_22EC611AC(a1, &v36, v14 + 48, 0) & 1) != 0)
    {
      if ((_DWORD)v36 == 2)
      {
        v16 = *(_QWORD *)v37 & 0xFFFFFFFFFFFFFFFCLL;
        v19 = *(_DWORD *)(v16 + 28);
        if ((v19 & 0x7Fu) > 0x2F || ((1 << (v19 & 0x7F)) & 0xC00000060000) == 0)
        {
          v21 = *(_QWORD *)v37 & 0xFFFFFFFFFFFFFFFCLL;
        }
        else
        {
          v21 = sub_22EFBAEA4(*(_QWORD *)v37 & 0xFFFFFFFFFFFFFFFCLL);
          v19 = *(_DWORD *)(v21 + 28);
        }
        if ((v19 & 0x7F) != 0x1C)
          goto LABEL_42;
        v22 = sub_22ED60904(a1, v21 & 0xFFFFFFFFFFFFFFF9, a3, a6);
        if (v22 >= 0x10)
        {
          v23 = v22;
          if (!sub_22EE8B180(a1, a3))
          {
            v24 = sub_22F10C2A4(*(_QWORD *)(v23 & 0xFFFFFFFFFFFFFFF0));
            if (v24)
            {
              if ((*(_DWORD *)(v24 + 28) & 0x7Fu) - 35 >= 3)
                v25 = 0;
              else
                v25 = v24;
            }
            else
            {
              v25 = 0;
            }
            if (v25)
              v27 = v25 + 64;
            else
              v27 = 0;
            sub_22EC611AC(a1, a2, v27, 0);
            v17 = *a2 == 5;
            goto LABEL_12;
          }
          if (a7)
          {
            sub_22EADFB24(__p, a1[11] + 15104, a6, *(_QWORD *)(v21 + 56));
            v33 = off_24FAB7D08;
            v34 = a7;
            v35 = __p;
            sub_22EE8B0B0((uint64_t)a1, a3, v23);
            if (v32 < 0)
              operator delete(__p[0]);
          }
        }
      }
      else if ((_DWORD)v36 != 5)
      {
        v16 = *(_QWORD *)v37 & 0xFFFFFFFFFFFFFFFCLL;
LABEL_42:
        BYTE1(v48) = 0;
        sub_22E8FCA40(a1, a3, 0x1281u, 0, (uint64_t)&v33);
        sub_22F2F2210((uint64_t)&v33, (uint64_t)v30);
        sub_22E903BEC((unsigned int *)&v33);
        sub_22E8FCA40(a1, *(_DWORD *)(v16 + 24), 0x64u, 0, (uint64_t)v29);
        v26 = (unsigned int *)v29;
LABEL_43:
        sub_22E903BEC(v26);
      }
    }
    else if (a7)
    {
      sub_22E8FCA40(a1, a3, a7, 0, (uint64_t)&v33);
      sub_22EADFB24(__p, a1[11] + 15104, a6, 0);
      sub_22F2F3734((uint64_t)&v33, __p);
      if (v32 < 0)
        operator delete(__p[0]);
      v26 = (unsigned int *)&v33;
      goto LABEL_43;
    }
    v17 = 1;
LABEL_12:
    if (BYTE1(v48))
    {
      if ((_DWORD)v36 == 5)
      {
        sub_22EC64D18(v43, (uint64_t)&v36);
      }
      else if (v41 && (*(_DWORD *)(v43[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v43, (uint64_t)&v36);
      }
    }
    if (v40)
    {
      v28 = sub_22EC6CBD0(v40);
      MEMORY[0x2348A0E9C](v28, 0x10E0C409F09D3C3);
    }
    if (v37 != v39)
      free(v37);
    return v17;
  }
  if (a7)
  {
    sub_22E8FCA40(a1, a3, a7, 0, (uint64_t)&v36);
    sub_22EADFB24(&v33, a1[11] + 15104, a6, 0);
    sub_22F2F3734((uint64_t)&v36, &v33);
    if (SHIBYTE(v35) < 0)
      operator delete(v33);
    sub_22E903BEC((unsigned int *)&v36);
  }
  return 1;
}

void sub_22EADFB24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  size_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _BYTE v19[24];
  uint64_t v20;
  _WORD *v21;
  uint64_t v22;
  void *v23;
  __int128 v24;
  _QWORD v25[17];

  v25[16] = *MEMORY[0x24BDAC8D0];
  v23 = v25;
  v24 = xmmword_22F44E310;
  sub_22F242C48((uint64_t)v19, (uint64_t)&v23);
  v8 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v8)
  {
    v9 = 0;
    v10 = *(_QWORD *)a3;
    v11 = 32 * v8;
    v12 = 1;
    do
    {
      if ((v12 & 1) == 0)
      {
        if ((unint64_t)(v20 - (_QWORD)v21) > 1)
          *v21++ = 8236;
        else
          llvm::raw_ostream::write((llvm::raw_ostream *)v19, ", ");
      }
      v13 = sub_22EFE9290(a2, a4, v9);
      sub_22F0EF330(v10, a2, (llvm::raw_ostream *)v19, v13);
      v12 = 0;
      ++v9;
      v10 += 32;
      v11 -= 32;
    }
    while (v11);
  }
  v14 = *(_QWORD *)(v22 + 8);
  if (v14 >= 0x7FFFFFFFFFFFFFF8)
    abort();
  v15 = *(const void **)v22;
  if (v14 >= 0x17)
  {
    v16 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v14 | 7) != 0x17)
      v16 = v14 | 7;
    v17 = v16 + 1;
    v18 = operator new(v16 + 1);
    a1[1] = v14;
    a1[2] = v17 | 0x8000000000000000;
    *a1 = v18;
    a1 = v18;
    goto LABEL_16;
  }
  *((_BYTE *)a1 + 23) = v14;
  if (v14)
LABEL_16:
    memmove(a1, v15, v14);
  *((_BYTE *)a1 + v14) = 0;
  llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v19);
  if (v23 != v25)
    free(v23);
}

unsigned int *sub_22EADFCE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  __int128 v8;
  void *__p[2];
  char v11;
  unsigned int v12[24];

  sub_22E8FCA40(a2, a3, 0xC65u, 0, (uint64_t)v12);
  sub_22EADFB24(__p, a2[11] + 15104, *(_QWORD *)(a1 + 24), 0);
  v7 = sub_22F2F3734((uint64_t)v12, __p);
  v8 = *(_OWORD *)(v7 + 9);
  *(_OWORD *)a4 = *(_OWORD *)v7;
  *(_OWORD *)(a4 + 9) = v8;
  *(_BYTE *)(a4 + 32) = 0;
  *(_BYTE *)(a4 + 80) = 0;
  if (*(_BYTE *)(v7 + 80))
    sub_22E907424(a4 + 32, v7 + 32);
  *(_QWORD *)(a4 + 88) = *(_QWORD *)(v7 + 88);
  if (v11 < 0)
    operator delete(__p[0]);
  return sub_22E903BEC(v12);
}

void sub_22EADFDAC()
{
  JUMPOUT(0x2348A0E9CLL);
}

double sub_22EADFDC0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  double result;
  uint64_t v11;
  unsigned int v12;
  _BYTE v13[24];

  v9 = *(_QWORD *)(a2 + 88);
  sub_22EADFE6C(v9, a5, a4, (uint64_t)&v11);
  sub_22F0EEA4C((uint64_t)v13, v9, &v11, a4);
  if (v12 >= 0x41 && v11)
    MEMORY[0x2348A0E84](v11, 0x1000C8000313F17);
  *(_QWORD *)&result = sub_22EDC0108(a2, (uint64_t)v13, a3, a1).n128_u64[0];
  return result;
}

uint64_t sub_22EADFE6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v8;
  uint64_t result;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  int v16;

  v8 = sub_22F110A40(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0));
  v13 = 64;
  v14 = !v8;
  v12 = a2;
  result = sub_22EF6A330(a1, a3);
  if ((_DWORD)result == 64)
  {
    *(_DWORD *)(a4 + 8) = 64;
    *(_QWORD *)a4 = a2;
    *(_BYTE *)(a4 + 12) = !v8;
  }
  else
  {
    if (v8)
      result = llvm::APInt::sextOrTrunc((llvm::APInt *)&v12);
    else
      result = llvm::APInt::zextOrTrunc((llvm::APInt *)&v12);
    v10 = v14;
    v11 = v15;
    *(_DWORD *)(a4 + 8) = v16;
    *(_QWORD *)a4 = v11;
    *(_BYTE *)(a4 + 12) = v10;
    if (v13 >= 0x41)
    {
      result = v12;
      if (v12)
        return MEMORY[0x2348A0E84](v12, 0x1000C8000313F17);
    }
  }
  return result;
}

unsigned int *sub_22EADFF5C(uint64_t a1)
{
  unint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  unsigned int v11;
  unsigned int v12[25];
  unsigned int v13;

  v2 = sub_22EFC3B90(**(_QWORD **)a1);
  v3 = 0;
  if (v2)
  {
LABEL_2:
    v4 = (*(_BYTE *)(v2 + 68) & 1) == 0 || *(_QWORD *)(v2 + 40) != 0;
    v3 += v4;
    while (1)
    {
      v2 = *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v2)
        break;
      if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_2;
    }
  }
  v13 = v3;
  sub_22E8FCA40(*(_QWORD **)(a1 + 8), *(_DWORD *)(**(_QWORD **)(a1 + 16) + 24), 0xC69u, 0, (uint64_t)v12);
  v5 = sub_22E8901B8((uint64_t)v12, *(uint64_t **)(a1 + 24));
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v6 = sub_22E89519C(v5, &v11);
  v7 = sub_22E89519C(v6, &v13);
  v8 = sub_22E89519C(v7, &v13);
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) > (unint64_t)v13;
  sub_22E894E38(v8, (unsigned __int8 *)&v10);
  return sub_22E903BEC(v12);
}

BOOL sub_22EAE0050(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(**(_QWORD **)(a2 + 16) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + 8) & 0xF) != 0)
    v2 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(a2 + 16));
  v3 = sub_22F10C2A4(*(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF0));
  if ((*(_DWORD *)(v3 + 28) & 0x7Fu) - 35 >= 3)
    v4 = 0;
  else
    v4 = v3;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v4 + 104) + 96), *(_QWORD *)(v4 + 104));
  return (**(_QWORD **)(v4 + 128) & 0x70000) != 0;
}

uint64_t sub_22EAE00C8(_QWORD *a1, int a2, unsigned int a3, unint64_t a4, int a5, uint64_t a6)
{
  void (**v7)(_QWORD, _QWORD *, _QWORD, unint64_t);
  int v8;
  uint64_t v9;

  if ((*(_BYTE *)(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
    return 0;
  if (a2)
    return !sub_22F111D3C(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0), a1[11]);
  v7 = (void (**)(_QWORD, _QWORD *, _QWORD, unint64_t))&unk_24FAB7FF0;
  v8 = a5;
  v9 = a6;
  return sub_22EE8BC8C(a1, a3, a4, &v7);
}

uint64_t sub_22EAE013C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  int v22;
  unsigned int v23[24];
  uint64_t v24;

  v24 = a3;
  while (1)
  {
    v7 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
    if (v7)
      v8 = (*(_DWORD *)(v7 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v8 = 0;
    if (v8)
    {
      v9 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
      goto LABEL_10;
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
      break;
    v19 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
    v9 = sub_22F10CF48(v7);
    v7 = v19;
    if (!v9)
      break;
LABEL_10:
    a3 = *(_QWORD *)(v9 + 32);
  }
  v10 = sub_22F10C2A4(v7);
  if (!v10 || (*(_DWORD *)(v10 + 28) & 0x7Fu) - 35 > 2 || (sub_22F3B1A64(v10) & 1) != 0)
    return 1;
  if (!**(_DWORD **)a1)
  {
    sub_22E8FCA40(*(_QWORD **)(a1 + 8), *(_DWORD *)(**(_QWORD **)(a1 + 16) + 24), 0xC05u, 0, (uint64_t)v23);
    v22 = *(_DWORD *)(**(_QWORD **)(a1 + 16) + 80) >> 30;
    v12 = sub_22E8900C4((uint64_t)v23, &v22);
    v21 = a4 == 0;
    v13 = sub_22E894E38(v12, (unsigned __int8 *)&v21);
    if (a4)
      v14 = *(_QWORD *)(a4 + 40);
    else
      v14 = 0;
    v20 = v14;
    v15 = sub_22E894538(v13, &v20);
    sub_22E8901B8(v15, &v24);
    sub_22E903BEC(v23);
    sub_22E8FCA40(*(_QWORD **)(a1 + 8), a2, 0x1578u, 0, (uint64_t)v23);
    LOBYTE(v22) = a4 == 0;
    v16 = sub_22E894E38((uint64_t)v23, (unsigned __int8 *)&v22);
    if (a4)
      v17 = *(_QWORD *)(a4 + 40);
    else
      v17 = 0;
    v20 = v17;
    v18 = sub_22E894538(v16, &v20);
    sub_22E8901B8(v18, &v24);
    sub_22E903BEC(v23);
  }
  return 0;
}

uint64_t sub_22EAE02E4(_QWORD *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, _DWORD *a5, _DWORD *a6, _DWORD *a7, unsigned int a8)
{
  _QWORD *v13;
  unsigned int v14;
  unsigned __int8 **v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t result;
  int v23;
  int v24;
  uint64_t v25;
  unsigned __int8 *v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  _QWORD *v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  _QWORD *v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  uint64_t v49;
  unint64_t *v50;
  unint64_t *v51;
  int v52;
  unint64_t v53;
  uint64_t *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  int v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  int v64;
  BOOL v65;
  int v66;
  int v67;
  unsigned int v68;
  int v69;
  uint64_t i;
  unint64_t v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  _QWORD *v79;
  char v80;
  int v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  int v85;
  unsigned int v86;
  unint64_t v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned int v101;
  uint64_t v102;
  __int128 v105;
  unint64_t *v106;
  BOOL v107;
  uint64_t v108;
  unint64_t v109;
  __int128 v110;
  unint64_t *v111;
  __int128 v112;

  v13 = a1;
  while (1)
  {
    v14 = *a3;
    if (v14 <= 0x64)
      break;
    if (v14 != 101)
    {
      if (v14 == 235)
      {
LABEL_65:
        if (!*a7)
        {
          sub_22F0D5A50((uint64_t)a3);
          *a7 = v39;
        }
        sub_22F0D492C((uint64_t)a3);
        v105 = v110;
        v40 = v112;
        v106 = v111;
        v41 = *((_QWORD *)&v112 + 1);
        v42 = *((_QWORD *)&v110 + 1);
        v43 = (uint64_t *)v110;
        if (v110 != v112)
        {
          do
          {
            v44 = v43;
            if ((v42 & 3) != 0)
            {
              if ((v42 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                v44 = (_QWORD *)((v42 & 0xFFFFFFFFFFFFFFFCLL) + 40);
              else
                v44 = (_QWORD *)sub_22F3AC1A8(*v43);
            }
            if (*v44)
            {
              result = sub_22EAE02E4(v13, a2, *v44, a4, a5, a6, a7, a8);
              if (!(_DWORD)result)
                return result;
            }
            if ((v42 & 3) != 0)
            {
              if (v42 < 4)
                sub_22F3F2FE0((uint64_t)&v105, 1);
              else
                sub_22F0D8720((uint64_t)&v105);
            }
            else
            {
              *(_QWORD *)&v105 = v43 + 1;
            }
            v42 = *((_QWORD *)&v105 + 1);
            v43 = (uint64_t *)v105;
          }
          while (v105 != __PAIR128__(v41, v40));
        }
      }
      else if (v14 == 236)
      {
LABEL_27:
        if ((*(_BYTE *)(a1[9] + 1) & 4) == 0)
        {
LABEL_28:
          if (a8)
            return 0;
          sub_22F0D5A50((uint64_t)a3);
          v24 = v23;
          goto LABEL_30;
        }
        if (!*a5)
        {
          sub_22F0D5A50((uint64_t)a3);
          *a5 = v33;
        }
        sub_22F0D492C((uint64_t)a3);
        v105 = v110;
        v34 = v112;
        v106 = v111;
        v35 = *((_QWORD *)&v112 + 1);
        v36 = *((_QWORD *)&v110 + 1);
        v37 = (uint64_t *)v110;
        if (v110 != v112)
        {
          do
          {
            v38 = v37;
            if ((v36 & 3) != 0)
            {
              if ((v36 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                v38 = (_QWORD *)((v36 & 0xFFFFFFFFFFFFFFFCLL) + 40);
              else
                v38 = (_QWORD *)sub_22F3AC1A8(*v37);
            }
            if (*v38)
            {
              result = sub_22EAE02E4(v13, a2, *v38, a4, a5, a6, a7, a8);
              if (!(_DWORD)result)
                return result;
            }
            if ((v36 & 3) != 0)
            {
              if (v36 < 4)
                sub_22F3F2FE0((uint64_t)&v105, 1);
              else
                sub_22F0D8720((uint64_t)&v105);
            }
            else
            {
              *(_QWORD *)&v105 = v37 + 1;
            }
            v36 = *((_QWORD *)&v105 + 1);
            v37 = (uint64_t *)v105;
          }
          while (v105 != __PAIR128__(v35, v34));
        }
      }
      else
      {
LABEL_86:
        if (v14 - 102 > 0x84)
          goto LABEL_28;
LABEL_87:
        if (!*a5)
        {
          sub_22F0D5A50((uint64_t)a3);
          *a5 = v48;
        }
      }
      return 1;
    }
    v15 = (unsigned __int8 **)(a3 + 8);
LABEL_7:
    a3 = *v15;
  }
  switch(*a3)
  {
    case 1u:
    case 2u:
    case 6u:
      if (!*a6)
      {
        sub_22F0D5A50((uint64_t)a3);
        *a6 = v27;
      }
      sub_22F0D492C((uint64_t)a3);
      v105 = v110;
      v28 = v112;
      v106 = v111;
      v29 = *((_QWORD *)&v112 + 1);
      v30 = *((_QWORD *)&v110 + 1);
      v31 = (uint64_t *)v110;
      if (v110 == v112)
        return 1;
      while (1)
      {
        v32 = v31;
        if ((v30 & 3) != 0)
        {
          if ((v30 & 0xFFFFFFFFFFFFFFFCLL) != 0)
            v32 = (_QWORD *)((v30 & 0xFFFFFFFFFFFFFFFCLL) + 40);
          else
            v32 = (_QWORD *)sub_22F3AC1A8(*v31);
        }
        if (*v32)
        {
          result = sub_22EAE02E4(v13, a2, *v32, a4, a5, a6, a7, a8);
          if (!(_DWORD)result)
            break;
        }
        if ((v30 & 3) != 0)
        {
          if (v30 < 4)
            sub_22F3F2FE0((uint64_t)&v105, 1);
          else
            sub_22F0D8720((uint64_t)&v105);
        }
        else
        {
          *(_QWORD *)&v105 = v31 + 1;
        }
        v30 = *((_QWORD *)&v105 + 1);
        v31 = (uint64_t *)v105;
        if (v105 == __PAIR128__(v29, v28))
          return 1;
      }
      return result;
    case 3u:
      goto LABEL_9;
    case 4u:
      v15 = (unsigned __int8 **)(a3 + 24);
      goto LABEL_7;
    case 5u:
    case 9u:
    case 0xDu:
    case 0xEu:
      goto LABEL_27;
    case 7u:
    case 0xAu:
    case 0xBu:
    case 0x11u:
    case 0x12u:
      goto LABEL_86;
    case 8u:
      if (!*a5)
      {
        sub_22F0D5A50((uint64_t)a3);
        *a5 = v52;
      }
      v55 = *(_DWORD *)a3;
      v54 = (uint64_t *)(a3 + 16);
      v53 = v55;
      if (v55 < 0x100)
        return 1;
      v56 = 8 * (v53 >> 8) - 8;
      do
      {
        v57 = *v54++;
        result = sub_22EAE02E4(v13, a2, v57, a4, a5, a6, a7, a8);
        if ((_DWORD)result)
          v58 = v56 == 0;
        else
          v58 = 1;
        v56 -= 8;
      }
      while (!v58);
      return result;
    case 0xCu:
      v49 = *((_QWORD *)a3 + 1);
      if ((v49 & 1) != 0)
      {
        v50 = (unint64_t *)((v49 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v51 = &v50[*(unsigned int *)(v49 & 0xFFFFFFFFFFFFFFFELL)];
      }
      else
      {
        if (v49)
          v50 = (unint64_t *)(a3 + 8);
        else
          v50 = 0;
        if (v49)
          v51 = (unint64_t *)(a3 + 16);
        else
          v51 = 0;
      }
      if (v50 == v51)
        return 1;
      break;
    case 0xFu:
      goto LABEL_65;
    case 0x10u:
      if (!*a5)
      {
        sub_22F0D5A50((uint64_t)a3);
        *a5 = v59;
      }
      result = sub_22EAE02E4(v13, a2, *(_QWORD *)&a3[8 * ((*(unsigned __int16 *)a3 >> 12) & 1)+ 24+ 8 * ((*(unsigned __int16 *)a3 >> 13) & 1)], a4, a5, a6, a7, a8);
      if ((_DWORD)result)
      {
        v60 = *(unsigned __int16 *)a3;
        if ((v60 & 0x800) == 0)
          return 1;
        v61 = *(_QWORD *)&a3[8 * ((v60 >> 13) & 1) + 32 + 8 * ((v60 >> 12) & 1)];
        if (!v61)
          return 1;
        result = sub_22EAE02E4(v13, a2, v61, a4, a5, a6, a7, a8);
        if ((_DWORD)result)
          return 1;
      }
      return result;
    case 0x13u:
      return 1;
    default:
      if (v14 - 98 < 3)
      {
LABEL_9:
        if (!*a5)
        {
          sub_22F0D5A50((uint64_t)a3);
          *a5 = v16;
        }
        sub_22F0D492C((uint64_t)a3);
        v105 = v110;
        v17 = v112;
        v106 = v111;
        v18 = *((_QWORD *)&v112 + 1);
        v19 = *((_QWORD *)&v110 + 1);
        v20 = (uint64_t *)v110;
        if (v110 == v112)
          return 1;
        while (1)
        {
          v21 = v20;
          if ((v19 & 3) != 0)
          {
            if ((v19 & 0xFFFFFFFFFFFFFFFCLL) != 0)
              v21 = (_QWORD *)((v19 & 0xFFFFFFFFFFFFFFFCLL) + 40);
            else
              v21 = (_QWORD *)sub_22F3AC1A8(*v20);
          }
          if (*v21)
          {
            result = sub_22EAE02E4(v13, a2, *v21, a4, a5, a6, a7, a8);
            if (!(_DWORD)result)
              break;
          }
          if ((v19 & 3) != 0)
          {
            if (v19 < 4)
              sub_22F3F2FE0((uint64_t)&v105, 1);
            else
              sub_22F0D8720((uint64_t)&v105);
          }
          else
          {
            *(_QWORD *)&v105 = v20 + 1;
          }
          v19 = *((_QWORD *)&v105 + 1);
          v20 = (uint64_t *)v105;
          if (v105 == __PAIR128__(v18, v17))
            return 1;
        }
        return result;
      }
      if (v14 != 93)
        goto LABEL_86;
      if ((*(_DWORD *)(a2 + 28) & 0x7F) != 0x37)
      {
        sub_22F0D5A50((uint64_t)a3);
        v46 = v45;
        v47 = *(_DWORD *)(a4 + 8);
        if (v47 >= *(_DWORD *)(a4 + 12))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v47 = *(_DWORD *)(a4 + 8);
        }
        *(_DWORD *)(*(_QWORD *)a4 + 4 * v47) = v46;
        ++*(_DWORD *)(a4 + 8);
        return 1;
      }
      goto LABEL_87;
  }
LABEL_115:
  v62 = *v50;
  v63 = *(_DWORD *)(*v50 + 28) & 0x7F;
  if (v63 > 0x3B)
  {
    v68 = v63 - 60;
    if (v68 > 0x16)
      goto LABEL_217;
    v69 = 1 << v68;
    if ((v69 & 0x404190) != 0)
      goto LABEL_186;
    if ((v69 & 3) == 0)
    {
LABEL_217:
      if (a8)
        return 0;
      v24 = *((_DWORD *)a3 + 4);
LABEL_30:
      sub_22E8FCA40(v13, v24, 0xC02u, 0, (uint64_t)&v110);
      LOBYTE(v105) = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
      v25 = sub_22E894E38((uint64_t)&v110, (unsigned __int8 *)&v105);
      LOBYTE(v109) = (*(_QWORD *)(a2 + 80) & 0xC0000000) == 0x80000000;
      v26 = (unsigned __int8 *)&v109;
      goto LABEL_31;
    }
    for (i = *(_QWORD *)(v62 + 16); ; i = *(_QWORD *)(v71 + v73 + 16))
    {
      v71 = i & 0xFFFFFFFFFFFFFFF8;
      if ((i & 4) != 0)
        v71 = *(_QWORD *)v71;
      v72 = *(_WORD *)(v71 + 8) & 0x7F;
      if (v72 == 83)
      {
        if (!sub_22EFBBF74(*v50, *(_QWORD *)(v71 + 48)))
          goto LABEL_178;
        v79 = v13;
        v80 = *(_BYTE *)(v62 + 96);
        if ((v80 & 7) == 2 || (*(_BYTE *)(v62 + 96) & 7) == 0 && (v80 & 0x18) == 0x10)
        {
          v81 = *(_DWORD *)(v62 + 28) & 0x7F;
          if (v81 == 64 || v81 == 62)
            goto LABEL_193;
          v82 = *(_QWORD *)(v62 + 16);
          v83 = (_QWORD *)(v82 & 0xFFFFFFFFFFFFFFF8);
          v84 = v82 & 0xFFFFFFFFFFFFFFF8;
          if ((v82 & 4) != 0)
            v84 = v83[1];
          v85 = *(_WORD *)(sub_22EFCBB30(v84) + 8) & 0x7F;
          if (v85 != 16 && v85 != 83)
          {
            if ((v82 & 4) != 0)
              v83 = (_QWORD *)*v83;
            if (((_WORD)v83[1] & 0x7Eu) - 34 >= 4)
            {
LABEL_193:
              if (a8)
              {
                if ((*(_BYTE *)(v79[9] + 1) & 0x20) == 0)
                  return 0;
              }
              else
              {
                if ((*(_QWORD *)v79[9] & 0x2000) != 0)
                  v90 = 6426;
                else
                  v90 = 5198;
                sub_22E8FCA40(v79, *(_DWORD *)(v62 + 24), v90, 0, (uint64_t)&v110);
                LOBYTE(v105) = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
                v91 = sub_22E894E38((uint64_t)&v110, (unsigned __int8 *)&v105);
                sub_22EFBB794(v62);
                LOBYTE(v109) = v92 == 2;
                sub_22E894E38(v91, (unsigned __int8 *)&v109);
                sub_22E903BEC((unsigned int *)&v110);
              }
            }
          }
        }
        v13 = v79;
        v86 = *(_DWORD *)(v62 + 24);
        v87 = *(_QWORD *)(v62 + 48);
        if ((*(_BYTE *)(v79[9] + 1) & 0x20) != 0)
        {
          LOBYTE(v109) = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
          LODWORD(v105) = 2;
          v88 = *(_QWORD *)(v87 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v88 + 17) & 4) == 0)
          {
            if (a8)
            {
              sub_22F111D3C(v88, v79[11]);
            }
            else
            {
              *(_QWORD *)&v110 = off_24FAB7D90;
              DWORD2(v110) = 6426;
              v111 = &v109;
              *(_QWORD *)&v112 = &v105;
              sub_22EE8BC8C(v79, v86, v87, (void (***)(_QWORD, _QWORD *, _QWORD, unint64_t))&v110);
            }
          }
        }
        else
        {
          LOBYTE(v110) = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
          if ((sub_22EAE00C8(v79, a8, v86, v87, 3079, (uint64_t)&v110) & 1) != 0)
            return 0;
        }
        if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v62 + 48) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
          goto LABEL_178;
        if ((*(_DWORD *)(v62 + 28) & 0x7F) != 0x40)
        {
          if (*(_QWORD *)(v62 + 88) <= 7uLL && (*(_BYTE *)(v62 + 97) & 8) == 0)
            goto LABEL_175;
LABEL_178:
          if (a8)
          {
LABEL_179:
            if ((*(_BYTE *)(v13[9] + 1) & 4) == 0)
              return 0;
            goto LABEL_186;
          }
          v64 = *(_DWORD *)(v62 + 24);
          v65 = (*(_QWORD *)v13[9] & 0x400) == 0;
          v66 = 6389;
          v67 = 5196;
          goto LABEL_182;
        }
        if ((*(_DWORD *)(v62 + 96) & 0x600u) - 1536 < 0xFFFFFC00 && *(_QWORD *)(v62 + 88) > 7uLL)
          goto LABEL_178;
LABEL_175:
        if (a8)
        {
          if ((*(_BYTE *)(v79[9] + 1) & 0x10) == 0)
            return 0;
          goto LABEL_186;
        }
        v64 = *(_DWORD *)(v62 + 24);
        v65 = (*(_QWORD *)v79[9] & 0x1000) == 0;
        v66 = 6406;
        v67 = 5197;
LABEL_182:
        if (v65)
          v89 = v67;
        else
          v89 = v66;
        sub_22E8FCA40(v13, v64, v89, 0, (uint64_t)&v110);
        LOBYTE(v105) = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
        sub_22E894E38((uint64_t)&v110, (unsigned __int8 *)&v105);
        sub_22E903BEC((unsigned int *)&v110);
LABEL_186:
        ++v50;
        result = 1;
        if (v50 == v51)
          return result;
        goto LABEL_115;
      }
      v73 = -40;
      if ((*(_WORD *)(v71 + 8) & 0x7Fu) > 0x46)
      {
        if (v72 == 71)
        {
          v73 = -56;
          continue;
        }
        if (v72 != 81)
          goto LABEL_137;
      }
      else
      {
        if (v72 > 0x18)
          goto LABEL_136;
        if (v72 == 16)
          goto LABEL_130;
        if (((1 << v72) & 0x1066) == 0)
        {
          if (v72 == 24)
          {
LABEL_130:
            v73 = -48;
            continue;
          }
LABEL_136:
          if (v72 == 70)
          {
            v73 = -64;
            continue;
          }
LABEL_137:
          v74 = v72 - 52;
          v75 = v72 - 33 >= 5;
          v76 = -64;
          if (v75)
            v76 = -48;
          v75 = v74 >= 6;
          v73 = -72;
          if (v75)
            v73 = v76;
          continue;
        }
      }
    }
  }
  switch(v63)
  {
    case '!':
    case '#':
      if ((*(_BYTE *)(v62 + 74) & 1) == 0)
        goto LABEL_186;
      if (a8)
        goto LABEL_179;
      v64 = *((_DWORD *)a3 + 4);
      v65 = (*(_QWORD *)v13[9] & 0x400) == 0;
      v66 = 6390;
      v67 = 5199;
      goto LABEL_182;
    case '"':
    case '$':
    case '%':
    case '&':
    case '\'':
    case '+':
    case '-':
    case '/':
    case '0':
    case '1':
    case '2':
    case '3':
      goto LABEL_217;
    case '(':
    case ')':
      v77 = *(_QWORD *)(v62 + 80);
      v78 = (uint64_t *)(v77 & 0xFFFFFFFFFFFFFFF8);
      if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)((v77 & 0xFFFFFFFFFFFFFFF8) + ((2 * (int)v77) & 8)) & 0xFFFFFFFFFFFFFFF0)
                     + 17) & 8) == 0)
        goto LABEL_186;
      if (a8)
        return 0;
      if ((v77 & 4) != 0)
        v78 = (uint64_t *)*v78;
      v93 = *v78;
      *(_QWORD *)&v105 = v93;
      *((_QWORD *)&v105 + 1) = v78 + 1;
      v94 = v93;
      v95 = v93;
      break;
    case '*':
    case ',':
    case '.':
      goto LABEL_186;
    case '4':
      goto LABEL_148;
    default:
      if (v63 - 13 < 2)
        goto LABEL_186;
      if (v63 != 17)
        goto LABEL_217;
LABEL_148:
      if (!*a5)
        *a5 = *((_DWORD *)a3 + 4);
      goto LABEL_186;
  }
  while (1)
  {
LABEL_206:
    if ((v95 & 0xF) != 0)
      goto LABEL_216;
    v96 = *(unsigned __int8 *)(*(_QWORD *)(v95 & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v96 <= 0x39)
      break;
LABEL_211:
    if (sub_22F115668(v95))
      v94 = v95;
    v95 = sub_22F115B7C(v95);
    if (!v95)
      goto LABEL_220;
  }
  if (v96 == 24)
    goto LABEL_219;
  if (v96 != 26)
  {
    if (((1 << v96) & 0x20000000200003CLL) != 0)
      goto LABEL_216;
    goto LABEL_211;
  }
  if ((*(_BYTE *)(v95 + 23) & 0x10) == 0)
  {
LABEL_216:
    v95 = sub_22F115B7C(v95);
    goto LABEL_206;
  }
LABEL_219:
  v94 = v95;
LABEL_220:
  v97 = sub_22F115668(v94);
  sub_22E8FCA40(v13, v97, 0xC14u, 0, (uint64_t)&v110);
  v98 = v93;
  v99 = v93;
  while (2)
  {
    while (2)
    {
      if ((v99 & 0xF) != 0)
        goto LABEL_231;
      v100 = *(unsigned __int8 *)(*(_QWORD *)(v99 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v100 > 0x39)
      {
LABEL_226:
        if (sub_22F115668(v99))
          v98 = v99;
        v99 = sub_22F115B7C(v99);
        if (!v99)
          goto LABEL_233;
        continue;
      }
      break;
    }
    if (v100 == 24)
      break;
    if (v100 != 26)
    {
      if (((1 << v100) & 0x20000000200003CLL) != 0)
        goto LABEL_231;
      goto LABEL_226;
    }
    if ((*(_BYTE *)(v99 + 23) & 0x10) == 0)
    {
LABEL_231:
      v99 = sub_22F115B7C(v99);
      continue;
    }
    break;
  }
  v98 = v99;
LABEL_233:
  v101 = sub_22F115668(v98);
  v109 = v101 | ((unint64_t)sub_22F1167E8((uint64_t *)&v105) << 32);
  v102 = sub_22E8906A0((uint64_t)&v110, (uint64_t *)&v109);
  v108 = v93;
  v25 = sub_22E8901B8(v102, &v108);
  v107 = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
  v26 = (unsigned __int8 *)&v107;
LABEL_31:
  sub_22E894E38(v25, v26);
  sub_22E903BEC((unsigned int *)&v110);
  return 0;
}

uint64_t sub_22EAE1054(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int *a4, _BYTE *a5, uint64_t a6)
{
  _BOOL4 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void **v22;
  uint64_t v23;
  unsigned int *v24;
  uint64_t result;
  unsigned int v26;
  unsigned int v27[24];
  unsigned int v28[24];

  if ((_DWORD)a6 == 1 && (*(_BYTE *)(a1[9] + 1) & 0x10) != 0
    || (*(_BYTE *)(a3 + 28) & 0x80) != 0
    || (*(_BYTE *)(a3 + 68) & 1) != 0 && !*(_QWORD *)(a3 + 40))
  {
    return 1;
  }
  if (sub_22EFC2E8C(a3))
  {
    v12 = sub_22F10E06C(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
    v13 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0));
    if ((*(_DWORD *)(v13 + 28) & 0x7Fu) - 35 >= 3)
      v14 = 0;
    else
      v14 = v13;
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v14 + 104) + 96), *(_QWORD *)(v14 + 104));
    v15 = **(_QWORD **)(v14 + 128);
    if (v12)
    {
      if ((v15 & 0x100000) == 0)
        return 1;
    }
    else if ((v15 & 0x200) != 0)
    {
      return 1;
    }
  }
  v16 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)a4, (void *)a3);
  v17 = *((_QWORD *)a4 + 1);
  if (v17 == *(_QWORD *)a4)
    v18 = a4 + 5;
  else
    v18 = a4 + 4;
  if (v16 == (void **)(v17 + 8 * *v18))
  {
    if ((_DWORD)a6)
    {
      if ((*(_BYTE *)(a1[9] + 1) & 0x10) == 0)
        return 0;
    }
    else
    {
      if (!*a5)
      {
        if ((*(_QWORD *)a1[9] & 0x1000) != 0)
          v26 = 6404;
        else
          v26 = 5193;
        sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v26, 0, (uint64_t)v28);
        sub_22E903BEC(v28);
        *a5 = 1;
      }
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x1577u, 0, (uint64_t)v27);
      sub_22E903BEC(v27);
    }
    return 1;
  }
  if (!sub_22EFC2E8C(a3))
    return 1;
  v19 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                + 24));
  v20 = sub_22EFC3B90(v19);
  if (!v20)
    return 1;
  v21 = v20;
LABEL_21:
  if ((*(_DWORD *)(v19 + 72) & 0xE000) == 0x4000
    && ((v22 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)a4, (void *)v21),
         v23 = *((_QWORD *)a4 + 1),
         v23 != *(_QWORD *)a4)
      ? (v24 = a4 + 4)
      : (v24 = a4 + 5),
        v22 == (void **)(v23 + 8 * *v24))
    || (result = sub_22EAE1054(a1, a2, v21, a4, a5, a6), (_DWORD)result))
  {
    while (1)
    {
      v21 = *(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v21)
        return 1;
      if ((*(_DWORD *)(v21 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_21;
    }
  }
  return result;
}

void sub_22EAE12B0()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22EAE12C4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  result = sub_22F2E6D78(a2);
  if (result)
  {
    if ((*(_DWORD *)(result + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD)
    {
      v4 = *(_QWORD *)(result + 16);
      v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
      if ((v4 & 4) != 0)
        v5 = (_QWORD *)*v5;
      v6 = sub_22EFCBB30((unint64_t)v5);
      v7 = *(_QWORD *)(a1 + 32);
      if (v7)
      {
        v8 = v7 + 64;
        v9 = sub_22EFCC008(v6);
        return v9 == sub_22EFCC008(v8);
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return (*(_DWORD *)(result + 28) & 0x7Fu) - 33 < 0xA;
    }
  }
  return result;
}

__n128 sub_22EAE1350@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;
  uint64_t v6;

  v4 = operator new();
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v4 + 8) = result;
  *(_QWORD *)v4 = &off_24FAB7DB8;
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v4 + 32) = v6;
  *a2 = v4;
  return result;
}

void sub_22EAE13A8(uint64_t a1, _DWORD *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;

  v9 = *(unsigned int *)(a1 + 40);
  if ((_DWORD)v9)
  {
    v10 = *(void ***)(a1 + 32);
    v11 = 8 * v9;
    do
    {
      v12 = *(_QWORD *)(a1 + 16);
      v13 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)v12, *v10);
      v14 = *(_QWORD *)(v12 + 8);
      if (v14 == *(_QWORD *)v12)
        v15 = 20;
      else
        v15 = 16;
      if (v13 != (void **)(v14 + 8 * *(unsigned int *)(v12 + v15)))
      {
        *v13 = (void *)-2;
        ++*(_DWORD *)(v12 + 24);
      }
      ++v10;
      v11 -= 8;
    }
    while (v11);
  }
  *(_DWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 80) = a3;
  if (a4 && *(unsigned __int8 *)a2 == 180)
  {
    *(_BYTE *)(a1 + 88) = 1;
    *(_QWORD *)(a1 + 96) = a4;
    *(_DWORD *)(a1 + 112) = 0;
    sub_22EAE1544(a1, (uint64_t)a2);
  }
  else
  {
    *(_BYTE *)(a1 + 88) = 0;
    sub_22EAE1684(a1, a2);
    if (!a4)
      goto LABEL_17;
  }
  v16 = *(_QWORD *)(a1 + 16);
  v17 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)v16, a4);
  v18 = *(_QWORD *)(v16 + 8);
  v19 = 16;
  if (v18 == *(_QWORD *)v16)
    v19 = 20;
  if (v17 != (void **)(v18 + 8 * *(unsigned int *)(v16 + v19)))
  {
    *v17 = (void *)-2;
    ++*(_DWORD *)(v16 + 24);
  }
LABEL_17:
  if (a5)
  {
    v20 = *(_QWORD *)(a1 + 24);
    v21 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)v20, *(void **)(a5 + 8));
    v22 = *(_QWORD *)(v20 + 8);
    v23 = 16;
    if (v22 == *(_QWORD *)v20)
      v23 = 20;
    if (v21 != (void **)(v22 + 8 * *(unsigned int *)(v20 + v23)))
    {
      *v21 = (void *)-2;
      ++*(_DWORD *)(v20 + 24);
    }
  }
}

void sub_22EAE1544(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  unsigned __int8 **v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;

  v4 = *(_DWORD *)(a1 + 112);
  if (v4 >= *(_DWORD *)(a1 + 116))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v4 = *(_DWORD *)(a1 + 112);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 104) + 4 * v4) = 0;
  v5 = *(_DWORD *)(a1 + 112);
  *(_DWORD *)(a1 + 112) = v5 + 1;
  v6 = *(uint64_t **)(a2 + 16);
  v7 = *(uint64_t **)(a2 + 24);
  if (v7 == v6)
    v8 = 0;
  else
    v8 = *(uint64_t **)(a2 + 24);
  if (v7 == v6)
    v9 = 0;
  else
    v9 = v6;
  v14 = 0;
  v15 = 0;
  v13 = v9;
  if (v9 != v8)
  {
    v10 = 0;
    do
    {
      v11 = (unsigned __int8 **)v9;
      if ((v10 & 3) != 0)
      {
        if ((v10 & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v11 = (unsigned __int8 **)((v10 & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v11 = (unsigned __int8 **)sub_22F3AC1A8(*v9);
      }
      if (**v11 == 180)
        sub_22EAE1544(a1);
      else
        sub_22EAE1684(a1, *v11);
      v12 = *(_QWORD *)(a1 + 104) + 4 * *(unsigned int *)(a1 + 112);
      ++*(_DWORD *)(v12 - 4);
      if ((v10 & 3) != 0)
      {
        if (v10 < 4)
          sub_22F3F2FE0((uint64_t)&v13, 1);
        else
          sub_22F0D8720((uint64_t)&v13);
      }
      else
      {
        v13 = v9 + 1;
      }
      v9 = v13;
      v10 = v14;
    }
    while (v13 != v8 || v14);
    v5 = *(_DWORD *)(a1 + 112) - 1;
  }
  *(_DWORD *)(a1 + 112) = v5;
}

void sub_22EAE1684(uint64_t a1, _DWORD *a2)
{
  int v2;

  v2 = *(unsigned __int8 *)a2;
  if (a2 && (v2 & 0xFE) == 0x70)
  {
    switch((*a2 >> 18) & 0x3F)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
      case 0x15:
      case 0x16:
      case 0x17:
      case 0x18:
      case 0x19:
      case 0x1A:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
      case 0x20:
        sub_22EAE194C(a1, (uint64_t)a2);
        return;
      default:
        goto LABEL_5;
    }
  }
  if (!a2 || v2 != 233)
LABEL_5:
    __asm { BR              X9 }
  sub_22EAE1B98(a1, (uint64_t)a2);
}

void sub_22EAE17C4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  sub_22EAE1A64(v1, v0);
}

void sub_22EAE17DC()
{
  unsigned int *v0;
  uint64_t *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  _DWORD **v4;
  uint64_t v5;
  _DWORD *v6;

  v2 = *(unsigned __int8 **)((char *)v0 + *((unsigned __int8 *)v0 + 3));
  if (*v2 == 188)
  {
    sub_22EAE1CB8((uint64_t)v1, v2, 0);
    v3 = v0[4];
    if ((_DWORD)v3)
    {
      v4 = (_DWORD **)((char *)&v0[2 * (((unint64_t)*v0 >> 18) & 1) + 2] + ((unint64_t)*v0 >> 24));
      v5 = 8 * v3;
      do
      {
        v6 = *v4++;
        sub_22EAE1684((uint64_t)v1, v6);
        v5 -= 8;
      }
      while (v5);
    }
  }
  else
  {
    sub_22EAE1B1C(v1, v0);
  }
}

void sub_22EAE1860()
{
  uint64_t v0;
  uint64_t v1;

  if ((*(_DWORD *)v0 & 0x1FC0000) == 0x100000)
    sub_22EAE1CB8(v1, *(unsigned __int8 **)(v0 + 16), 0);
  else
    sub_22EAE1BDC(v1, v0);
}

void sub_22EAE18A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD **v3;
  uint64_t v4;

  v2 = *(unsigned __int16 *)(v0 + 4);
  if (*(_WORD *)(v0 + 4))
  {
    v3 = (_DWORD **)(v0 + 32);
    v4 = 8 * v2;
    do
    {
      if (*v3)
        sub_22EAE1684(v1, *v3);
      ++v3;
      v4 -= 8;
    }
    while (v4);
  }
}

void sub_22EAE18D4()
{
  uint64_t v0;
  uint64_t v1;

  sub_22EAE1E6C(v1, v0, 1, 0);
}

void sub_22EAE194C(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned __int8 *v5;
  uint64_t v6;
  BOOL v7;
  unsigned int v8;
  uint64_t v9;

  v4 = *(_DWORD *)a2;
  if ((*(_DWORD *)a2 & 0xFC0000) == 0x540000)
  {
    v5 = *(unsigned __int8 **)(a2 + 16);
    if (*v5 == 188)
    {
      v6 = *((_QWORD *)v5 + 3);
      v7 = v6 && (*(_DWORD *)(v6 + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD;
      if (v7
        && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) & 0xFE) != 0x28)
      {
        v8 = *(_DWORD *)(a1 + 40);
        if (v8 >= *(_DWORD *)(a1 + 44))
        {
          v9 = v6;
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v6 = v9;
          v8 = *(_DWORD *)(a1 + 40);
        }
        *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8 * v8) = v6;
        ++*(_DWORD *)(a1 + 40);
        v4 = *(_DWORD *)a2;
      }
    }
  }
  if (((v4 >> 18) & 0x3E) - 22 > 9)
  {
    sub_22EAE1BDC(a1, a2);
  }
  else
  {
    sub_22EAE1CB8(a1, *(unsigned __int8 **)(a2 + 16), 0);
    sub_22EAE1684(a1);
  }
}

void sub_22EAE1A64(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 **v4;
  int v5;
  BOOL v6;
  unsigned __int8 *v7;
  unsigned __int8 **v8;
  uint64_t v9;
  int v10;
  unsigned __int8 **v11;
  int v12;

  if (sub_22EFD3AF0(*((_QWORD *)a2 + 2), &v12))
  {
    v4 = (unsigned __int8 **)(a2 + 40);
    v5 = *a2;
    v6 = v5 == 119;
    if (v5 == 119)
      v7 = a2;
    else
      v7 = 0;
    v8 = (unsigned __int8 **)(v7 + 48);
    if (v6)
      v4 = v8;
    v9 = (uint64_t)*v4;
    v10 = **v4;
    if (v10 == 180)
    {
      v11 = *(unsigned __int8 ***)(v9 + 16);
      if (((*(_QWORD *)(v9 + 24) - (_QWORD)v11) & 0x7FFFFFFF8) != 8)
      {
LABEL_13:
        sub_22EAE1CB8(a1, (unsigned __int8 *)v9, 0);
        return;
      }
      v9 = (uint64_t)*v11;
      v10 = **v11;
    }
    if (v10 == 153 && (*(_DWORD *)v9 & 0x1FC0000) == 0x140000)
      v9 = *(_QWORD *)(v9 + 16);
    goto LABEL_13;
  }
  sub_22EAE1BDC(a1, (uint64_t)a2);
}

void sub_22EAE1B1C(uint64_t *a1, unsigned int *a2)
{
  if (sub_22EFFA8F0((uint64_t)a2) == 1192)
  {
    sub_22EAE1CB8((uint64_t)a1, *(unsigned __int8 **)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24)), 0);
  }
  else if ((sub_22EFFA934((uint64_t)a2, *a1) & 1) == 0)
  {
    sub_22EAE1BDC((uint64_t)a1, (uint64_t)a2);
  }
}

void sub_22EAE1B98(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  unsigned __int8 *v3;
  uint64_t v4;

  if ((*(_DWORD *)a2 & 0x700000) == 0)
  {
    v3 = *(unsigned __int8 **)(a2 + 16);
    v4 = 0;
    goto LABEL_5;
  }
  if ((*(_DWORD *)a2 & 0x7C0000) == 0x100000)
  {
    v2 = *(unsigned __int8 **)(a2 + 16);
    if (*v2 == 188)
    {
      v3 = (unsigned __int8 *)*((_QWORD *)v2 + 2);
      v4 = 1;
LABEL_5:
      sub_22EAE1CB8(a1, v3, v4);
      return;
    }
  }
  sub_22EAE1BDC(a1, a2);
}

void sub_22EAE1BDC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  _QWORD *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_22F0D492C(a2);
  v9 = v11;
  v3 = v13;
  v10 = v12;
  v4 = v14;
  v6 = *((_QWORD *)&v11 + 1);
  v5 = (uint64_t *)v11;
  if ((_QWORD)v11 != v13 || *((_QWORD *)&v11 + 1) != v14)
  {
    do
    {
      v8 = v5;
      if ((v6 & 3) != 0)
      {
        if ((v6 & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v8 = (_QWORD *)((v6 & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v8 = (_QWORD *)sub_22F3AC1A8(*v5);
      }
      if (*v8)
        sub_22EAE1684(a1);
      if ((v6 & 3) != 0)
      {
        if (v6 < 4)
          sub_22F3F2FE0((uint64_t)&v9, 1);
        else
          sub_22F0D8720((uint64_t)&v9);
      }
      else
      {
        *(_QWORD *)&v9 = v5 + 1;
      }
      v6 = *((_QWORD *)&v9 + 1);
      v5 = (uint64_t *)v9;
    }
    while (v9 != __PAIR128__(v4, v3));
  }
}

void sub_22EAE1CB8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 **v9;
  unsigned int v10;
  uint64_t v11;

  while (1)
  {
    do
    {
      v5 = (uint64_t)a2;
      v6 = *a2;
      if (v6 > 0xD5)
      {
        if (v6 == 233)
        {
          if ((*(_DWORD *)a2 & 0x7C0000) != 0x300000)
            goto LABEL_30;
          v6 = *(_DWORD *)a2;
          v8 = a2 + 16;
        }
        else
        {
          if (v6 != 214)
            break;
          v8 = a2 + 24;
        }
      }
      else if (v6 == 155)
      {
        if ((**((_DWORD **)a2 + 2) & 0x18000) != 0)
          goto LABEL_30;
        v8 = a2 + 24;
        if (!a2[48])
          v8 = a2 + 32;
        v6 = 155;
      }
      else
      {
        if (v6 != 176)
          break;
        v7 = *((unsigned int *)a2 + 5);
        if ((_DWORD)v7 == -1)
          goto LABEL_30;
        v8 = &a2[8 * v7 + 40];
        v6 = 176;
      }
      a2 = *(unsigned __int8 **)v8;
    }
    while (*(_QWORD *)v8 != v5);
    if (v6 > 187)
      break;
    if (v6 == 102)
    {
      sub_22EAE1684(a1);
      v9 = (unsigned __int8 **)(v5 + 48);
      goto LABEL_27;
    }
    if (v6 == 103)
    {
      sub_22EAE1684(a1);
      sub_22EAE1CB8(a1, *(_QWORD *)(v5 + 32), a3);
      v9 = (unsigned __int8 **)(v5 + 40);
      goto LABEL_27;
    }
LABEL_24:
    if ((v6 & 0xFE) != 0x70)
      goto LABEL_30;
    v10 = (*(_DWORD *)v5 >> 18) & 0x3F;
    if (v10 != 32)
    {
      if (v10 > 1)
      {
LABEL_30:
        v11 = a1;
      }
      else
      {
        sub_22EAE1CB8(a1, *(_QWORD *)(v5 + 16), a3);
        v11 = a1;
      }
      sub_22EAE1684(v11);
      return;
    }
    sub_22EAE1684(a1);
    v9 = (unsigned __int8 **)(v5 + 24);
LABEL_27:
    a2 = *v9;
  }
  if (v6 == 210)
  {
    v9 = (unsigned __int8 **)(v5 + 16);
    goto LABEL_27;
  }
  if (v6 != 188)
    goto LABEL_24;
  sub_22EAE1E6C(a1, v5, 0, a3);
}

void sub_22EAE1E6C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned __int8 *v6;
  int v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned __int8 *v16;
  uint64_t *v17;
  llvm::SmallPtrSetImplBase *v18;
  void *v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  llvm::SmallPtrSetImplBase *v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  BOOL v33;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  unsigned int *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  int v50;
  int v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  _BYTE v55[80];
  void *v56;
  uint64_t v57;
  _QWORD v58[3];

  v58[2] = *MEMORY[0x24BDAC8D0];
  if ((*(_DWORD *)(*(_QWORD *)(a2 + 24) + 28) & 0x7F) == 0x43)
    return;
  v6 = (unsigned __int8 *)a2;
  v53 = *(void **)(a2 + 8);
  v8 = sub_22F111438(&v53, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88));
  v9 = v6;
  v10 = v6;
  while (1)
  {
    v11 = sub_22EFFA6B0(v9);
    v12 = *v11;
    if (v12 != 188)
      break;
    v13 = v11;
    v14 = *((_QWORD *)v11 + 3);
    if ((*(_DWORD *)(v14 + 28) & 0x7Fu) - 60 < 7)
      return;
    if ((*(_DWORD *)(v14 + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD && !sub_22EFC2E8C(v14))
      v10 = v13;
    v53 = (void *)*((_QWORD *)v10 + 1);
    v8 &= sub_22F111438(&v53, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88));
    v9 = (unsigned __int8 *)*((_QWORD *)v13 + 2);
  }
  if (v12 != 133)
  {
    sub_22EAE1684(a1);
    return;
  }
  if ((a4 & v8 & 1) != 0)
    return;
  v15 = (_QWORD *)*((_QWORD *)v10 + 3);
  v52 = v15;
  if (*v9 == 153)
  {
    do
    {
      v16 = v9;
      v9 = (unsigned __int8 *)*((_QWORD *)v9 + 2);
    }
    while (*v9 == 153);
    if ((*(_DWORD *)v16 & 0x1FC0000) == 0x200000)
    {
      v17 = (uint64_t *)(*((_QWORD *)v16 + 1) & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v17 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      {
        v18 = *(llvm::SmallPtrSetImplBase **)(a1 + 24);
        v19 = (void *)sub_22F10ACF8(*v17);
        v20 = sub_22E3BA914(v18, v19);
        v21 = *((_QWORD *)v18 + 1);
        v22 = 16;
        if (v21 == *(_QWORD *)v18)
          v22 = 20;
        if (v20 != (void **)(v21 + 8 * *(unsigned int *)((char *)v18 + v22)))
        {
          sub_22E8FCA40(*(_QWORD **)(a1 + 8), *((_DWORD *)v10 + 10), 0x18A3u, 0, (uint64_t)&v53);
          v56 = (void *)sub_22F10ACF8(*v17);
          v23 = sub_22E8901B8((uint64_t)&v53, (uint64_t *)&v56);
          sub_22E890024(v23, (uint64_t *)&v52);
          sub_22E903BEC((unsigned int *)&v53);
          v15 = v52;
        }
      }
    }
  }
  v24 = *(llvm::SmallPtrSetImplBase **)(a1 + 16);
  v25 = sub_22E3BA914(v24, v15);
  v26 = *((_QWORD *)v24 + 1);
  v27 = 16;
  if (v26 == *(_QWORD *)v24)
    v27 = 20;
  if (v25 == (void **)(v26 + 8 * *(unsigned int *)((char *)v24 + v27)))
    return;
  v28 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v52[6] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) & 0xFE;
  if (!*(_BYTE *)(a1 + 88) || (a4 & 1) != 0 || v52 != *(_QWORD **)(a1 + 96))
  {
    if (a3 && v28 != 40)
      return;
    goto LABEL_67;
  }
  v53 = v55;
  v54 = 0x400000000;
  if (v6)
  {
    LODWORD(v29) = 0;
    v30 = 0;
    while (1)
    {
      v31 = *((_QWORD *)v6 + 3);
      if (!v31 || (*(_DWORD *)(v31 + 28) & 0x7Fu) - 52 < 0xFFFFFFFD)
        break;
      if (v29 >= HIDWORD(v54))
      {
        v29 = *((_QWORD *)v6 + 3);
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v31 = v29;
        LODWORD(v29) = v54;
      }
      *((_QWORD *)v53 + v29) = v31;
      v29 = (v54 + 1);
      LODWORD(v54) = v54 + 1;
      v30 |= (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v31 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFE) == 40;
      v6 = sub_22EFFA6B0(*((unsigned __int8 **)v6 + 2));
      if (*v6 != 188)
        goto LABEL_42;
    }
LABEL_51:
    v33 = 0;
    goto LABEL_64;
  }
  v29 = 0;
  v30 = 0;
LABEL_42:
  if (a3 && (v30 & 1) == 0)
  {
    v33 = 1;
    goto LABEL_64;
  }
  v56 = v58;
  v57 = 0x400000000;
  if ((char *)v53 + 8 * v29 - 8 == v53)
    goto LABEL_51;
  v34 = 8 * v29;
  v35 = (char *)v53 - 16;
  do
  {
    v36 = sub_22EFC306C(*(_QWORD *)&v35[v34]);
    v37 = v57;
    if (v57 >= (unint64_t)HIDWORD(v57))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v37 = v57;
    }
    *((_DWORD *)v56 + v37) = v36;
    v38 = (v57 + 1);
    LODWORD(v57) = v57 + 1;
    v34 -= 8;
  }
  while (v34 != 8);
  v39 = *(unsigned int *)(a1 + 112);
  if ((_DWORD)v38)
    v40 = (_DWORD)v39 == 0;
  else
    v40 = 1;
  if (v40)
  {
    v33 = 0;
  }
  else
  {
    v41 = *(unsigned int **)(a1 + 104);
    v42 = 4 * v39 - 4;
    v43 = 4 * v38 - 4;
    v44 = (unsigned int *)v56;
    do
    {
      v45 = *v44;
      v46 = *v41;
      if (*v44 != *v41)
        break;
      if (!v43)
        break;
      ++v44;
      ++v41;
      v47 = v42;
      v42 -= 4;
      v43 -= 4;
    }
    while (v47);
    v33 = v45 < v46;
  }
  if (v56 != v58)
    free(v56);
LABEL_64:
  if (v53 != v55)
    free(v53);
  if (!v33)
  {
LABEL_67:
    if (v28 == 40)
      v48 = 6948;
    else
      v48 = 6556;
    sub_22E8FCA40(*(_QWORD **)(a1 + 8), *((_DWORD *)v10 + 10), v48, 0, (uint64_t)&v53);
    sub_22E890024((uint64_t)&v53, (uint64_t *)&v52);
    sub_22E903BEC((unsigned int *)&v53);
    v49 = *(_QWORD *)(a1 + 80);
    if (v49)
    {
      sub_22E8FCA40(*(_QWORD **)(a1 + 8), *(_DWORD *)(v49 + 24), 0x1800u, 0, (uint64_t)&v53);
      v50 = sub_22EFC0EB8(*(_QWORD *)(a1 + 80));
      LOBYTE(v51) = 0;
      if (!v50)
        v51 = (*(unsigned __int8 *)(*(_QWORD *)(a1 + 80) + 29) >> 1) & 1;
      LOBYTE(v56) = v51;
      sub_22E894E38((uint64_t)&v53, (unsigned __int8 *)&v56);
      sub_22E903BEC((unsigned int *)&v53);
    }
  }
}

unint64_t sub_22EAE23C0(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;

  v4 = sub_22EE7E490(a1, *(_QWORD *)(a2 + 8), 0, 0);
  sub_22F0D5A50(a2);
  v6 = v5;
  v7 = sub_22EF579A8(a1[11], v4, v5);
  sub_22F0D4E74(a2);
  return sub_22E95ADCC(a1, v6, 146, v7, a2, v6 | (v6 << 32), v8) & 0xFFFFFFFFFFFFFFFELL;
}

uint64_t sub_22EAE2450(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned int v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v10 = *(_DWORD *)(a1 + 56);
  if (v10 >= *(_DWORD *)(a1 + 60))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v10 = *(_DWORD *)(a1 + 56);
  }
  *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10) = a2;
  ++*(_DWORD *)(a1 + 56);
  result = sub_22F0005B0(a2[1], *(_QWORD *)(*(_QWORD *)a1 + 88), 1, a4, a5, a6, a7, a8);
  if ((_DWORD)result)
  {
    v12 = *(_QWORD *)a1 + 2272;
    v13 = *a2;
    v14 = *a2 & 6;
    if (v14 == 4)
    {
      v15 = *(_QWORD *)(*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF8) + 56)
                      + 8 * *(unsigned int *)((v13 & 0xFFFFFFFFFFFFFFF8) + 64)
                      - 8);
    }
    else
    {
      v15 = v13 & 0xFFFFFFFFFFFFFFF8;
      if (v14 != 2)
        v15 = 0;
    }
    v16 = v15;
    return sub_22EAE2514(v12, &v16);
  }
  return result;
}

uint64_t sub_22EAE2514(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;

  result = sub_22EAE25A0((_DWORD *)a1, a2);
  if ((_DWORD)result)
  {
    v9 = result;
    v5 = *(_QWORD **)(a1 + 136);
    v6 = *(unsigned int *)(a1 + 144);
    v7 = &v5[v6];
    if ((_DWORD)v6)
    {
      v8 = 8 * v6;
      while (*v5 != *a2)
      {
        ++v5;
        v8 -= 8;
        if (!v8)
        {
          v5 = v7;
          break;
        }
      }
    }
    if (v7 != v5 + 1)
    {
      memmove(v5, v5 + 1, (char *)v7 - (char *)(v5 + 1));
      LODWORD(v6) = *(_DWORD *)(a1 + 144);
    }
    *(_DWORD *)(a1 + 144) = v6 - 1;
    return v9;
  }
  return result;
}

uint64_t sub_22EAE25A0(_DWORD *a1, _QWORD *a2)
{
  uint64_t result;
  int v4;
  _QWORD *v5;

  v5 = 0;
  result = sub_22EAE25F0((uint64_t)a1, a2, &v5);
  if ((_DWORD)result)
  {
    *v5 = -8192;
    v4 = a1[1] + 1;
    *a1 -= 2;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_22EAE25F0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  uint64_t result;
  BOOL v12;
  unsigned int v13;

  v3 = a1 + 8;
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    v4 = 16;
  }
  else
  {
    v4 = *(_DWORD *)(a1 + 16);
    if (!v4)
    {
      v7 = 0;
      result = 0;
      goto LABEL_8;
    }
    v3 = *(_QWORD *)(a1 + 8);
  }
  v5 = v4 - 1;
  v6 = ((*a2 >> 4) ^ (*a2 >> 9)) & (v4 - 1);
  v7 = (_QWORD *)(v3 + 8 * v6);
  v8 = *v7;
  if (*a2 == *v7)
  {
LABEL_17:
    result = 1;
  }
  else
  {
    v9 = 0;
    v10 = 1;
    while (v8 != -4096)
    {
      if (v9)
        v12 = 0;
      else
        v12 = v8 == -8192;
      if (v12)
        v9 = v7;
      v13 = v6 + v10++;
      v6 = v13 & v5;
      v7 = (_QWORD *)(v3 + 8 * (v13 & v5));
      v8 = *v7;
      if (*a2 == *v7)
        goto LABEL_17;
    }
    result = 0;
    if (v9)
      v7 = v9;
  }
LABEL_8:
  *a3 = v7;
  return result;
}

BOOL sub_22EAE2698(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unsigned int v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  if ((v4 & 4) != 0)
    v5 = *(_QWORD *)v5;
  v6 = (*(_WORD *)(v5 + 8) & 0x7E) - 34;
  if (v5)
    v7 = (_DWORD *)(v5 - 64);
  else
    v7 = 0;
  if (v6 >= 4)
    v8 = 0;
  else
    v8 = v7;
  if ((v8[18] & 0xE000) != 0x4000)
    return 0;
  v10 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v8 + 32))(v8);
  v14 = 0;
  if ((sub_22E7B6870(*(_QWORD *)(a1 + 128), *(_DWORD *)(a1 + 144), v10, &v14) & 1) != 0)
  {
    v11 = *(_QWORD *)(v14 + 8);
    if (v11)
      return v11 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
  }
  if ((*(_DWORD *)(a1 + 20) - 1) < 2)
    return 1;
  if ((*(_DWORD *)(a2 + 72) & 3) != 3 && (*(_DWORD *)(a2 + 72) & 3) != 0)
    return 0;
  if (!sub_22EFC2E8C(a2))
    return 1;
  v12 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_DWORD *)(v12 + 28) & 0x7Fu) - 35 >= 3)
    v13 = 0;
  else
    v13 = v12;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v13 + 104) + 96), *(_QWORD *)(v13 + 104));
  return (**(_QWORD **)(v13 + 128) & 0x800000) == 0;
}

_QWORD *sub_22EAE27D8(uint64_t a1, int a2)
{
  uint64_t v3;
  llvm *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(llvm **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = (v7 + 1);
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = MEMORY[0x23489D23C]((_QWORD *)v8, 24 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F329FCC(a1, (uint64_t)v4, (uint64_t)v4 + 24 * v3);
    return (_QWORD *)llvm::deallocate_buffer(v4, (void *)(24 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 24 * v10;
      do
      {
        *result = -4096;
        result += 3;
        v11 -= 24;
      }
      while (v11);
    }
  }
  return result;
}

uint64_t sub_22EAE28A4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1[6] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v4 && *(_BYTE *)(v4 + 16) == 45 && (v5 = sub_22F114198(*(_QWORD *)(v4 + 24)), (*(_BYTE *)(v5 + 75) & 1) != 0))
  {
    result = sub_22EFC3B90(v5);
    if (result)
    {
      v9 = result;
LABEL_10:
      result = sub_22EAE28A4(v9, a2);
      while (1)
      {
        v9 = *(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v9)
          break;
        if ((*(_DWORD *)(v9 + 28) & 0x7Fu) - 49 < 3)
          goto LABEL_10;
      }
    }
  }
  else
  {
    result = (*(uint64_t (**)(_QWORD *))(*a1 + 32))(a1);
    v7 = result;
    v8 = *(_DWORD *)(a2 + 8);
    if (v8 >= *(_DWORD *)(a2 + 12))
    {
      result = llvm::SmallVectorBase<unsigned int>::grow_pod();
      v8 = *(_DWORD *)(a2 + 8);
    }
    *(_QWORD *)(*(_QWORD *)a2 + 8 * v8) = v7;
    ++*(_DWORD *)(a2 + 8);
  }
  return result;
}

uint64_t sub_22EAE2988(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v21;
  int v22;

  v6 = *a2 & 6;
  if (v6 == 4 || v6 == 2)
  {
    v22 = 0;
    v8 = sub_22E8900C4(a1, &v22);
    v9 = *a2;
    v10 = *a2 & 6;
    if (v10 == 4)
    {
      v11 = *(_QWORD *)(*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF8) + 56)
                      + 8 * *(unsigned int *)((v9 & 0xFFFFFFFFFFFFFFF8) + 64)
                      - 8);
    }
    else
    {
      v11 = v9 & 0xFFFFFFFFFFFFFFF8;
      if (v10 != 2)
        v11 = 0;
    }
    v21 = v11;
    sub_22E890024(v8, (uint64_t *)&v21);
  }
  else
  {
    v22 = 1;
    v12 = sub_22E8900C4(a1, &v22);
    v21 = *(_QWORD *)(*a2 & 0xFFFFFFFFFFFFFFF8);
    sub_22E8901B8(v12, (uint64_t *)&v21);
  }
  v13 = *a3 & 6;
  if (v13 == 4 || v13 == 2)
  {
    v22 = 0;
    v15 = sub_22E8900C4(a1, &v22);
    v16 = *a3;
    v17 = *a3 & 6;
    if (v17 == 4)
    {
      v18 = *(_QWORD *)(*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFF8) + 56)
                      + 8 * *(unsigned int *)((v16 & 0xFFFFFFFFFFFFFFF8) + 64)
                      - 8);
    }
    else
    {
      v18 = v16 & 0xFFFFFFFFFFFFFFF8;
      if (v17 != 2)
        v18 = 0;
    }
    v21 = v18;
    return sub_22E890024(v15, (uint64_t *)&v21);
  }
  else
  {
    v22 = 1;
    v19 = sub_22E8900C4(a1, &v22);
    v21 = *(_QWORD *)(*a3 & 0xFFFFFFFFFFFFFFF8);
    return sub_22E8901B8(v19, (uint64_t *)&v21);
  }
}

unsigned int *sub_22EAE2AE4(unsigned int *result, unsigned int *a2, uint64_t a3, char a4)
{
  unsigned int *v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int *v17;
  unsigned int *v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  BOOL v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int *v29;
  unsigned int *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int *v51;
  BOOL v53;
  uint64_t v54;
  unsigned int *v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  char *v61;
  int v62;
  unsigned int *v63;
  int64_t v64;
  int64_t v65;
  int64_t v66;
  uint64_t v67;
  unsigned int *v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int *v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int *v79;
  unsigned int *v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t v85;
  unsigned int *v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int *v90;
  unsigned int *v92;
  unsigned int v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int *v96;
  unsigned int *v97;
  unsigned int v98;

  v7 = result;
LABEL_2:
  v8 = v7;
  while (2)
  {
    v7 = v8;
    v9 = (char *)a2 - (char *)v8;
    v10 = ((char *)a2 - (char *)v8) >> 3;
    switch(v10)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v37 = *(a2 - 2);
        v38 = *v8;
        if (v37 < *v8)
        {
          *v8 = v37;
          *(a2 - 2) = v38;
          v39 = v8[1];
          v8[1] = *(a2 - 1);
          *(a2 - 1) = v39;
        }
        return result;
      case 3:
        return sub_22E790C54(v8, v8 + 2, a2 - 2);
      case 4:
        return sub_22E790E84(v8, v8 + 2, v8 + 4, a2 - 2);
      case 5:
        result = sub_22E790E84(v8, v8 + 2, v8 + 4, v8 + 6);
        v40 = *(a2 - 2);
        v41 = v8[6];
        if (v40 < v41)
        {
          v8[6] = v40;
          *(a2 - 2) = v41;
          v42 = v8[7];
          v8[7] = *(a2 - 1);
          *(a2 - 1) = v42;
          v43 = v8[6];
          v44 = v8[4];
          if (v43 < v44)
          {
            v45 = v8[5];
            v46 = v8[7];
            v8[4] = v43;
            v8[5] = v46;
            v8[6] = v44;
            v8[7] = v45;
            v47 = v8[2];
            if (v43 < v47)
            {
              v48 = v8[3];
              v8[2] = v43;
              v8[3] = v46;
              v8[4] = v47;
              v8[5] = v48;
              v49 = *v8;
              if (v43 < *v8)
              {
                v50 = v8[1];
                *v8 = v43;
                v8[1] = v46;
                v8[2] = v49;
                v8[3] = v50;
              }
            }
          }
        }
        return result;
      default:
        if (v9 <= 191)
        {
          v51 = v8 + 2;
          v53 = v8 == a2 || v51 == a2;
          if ((a4 & 1) != 0)
          {
            if (!v53)
            {
              v54 = 0;
              v55 = v8;
              do
              {
                v56 = v55[2];
                v57 = *v55;
                v55 = v51;
                if (v56 < v57)
                {
                  v59 = *v51;
                  v58 = v51[1];
                  v60 = v54;
                  while (1)
                  {
                    v61 = (char *)v8 + v60;
                    v62 = *(unsigned int *)((char *)v8 + v60 + 4);
                    *((_DWORD *)v61 + 2) = v57;
                    *((_DWORD *)v61 + 3) = v62;
                    if (!v60)
                      break;
                    v57 = *((_DWORD *)v61 - 2);
                    v60 -= 8;
                    if (v57 <= v59)
                    {
                      v63 = (unsigned int *)((char *)v8 + v60 + 8);
                      goto LABEL_79;
                    }
                  }
                  v63 = v8;
LABEL_79:
                  *v63 = v59;
                  v63[1] = v58;
                }
                v51 = v55 + 2;
                v54 += 8;
              }
              while (v55 + 2 != a2);
            }
          }
          else if (!v53)
          {
            v92 = v8 + 3;
            do
            {
              v93 = v7[2];
              v94 = *v7;
              v7 = v51;
              if (v93 < v94)
              {
                v95 = *(_QWORD *)v51;
                v96 = v92;
                do
                {
                  v97 = v96;
                  *(v96 - 1) = v94;
                  v98 = *(v96 - 2);
                  v96 -= 2;
                  *v97 = v98;
                  v94 = *(v97 - 5);
                }
                while (v94 > v95);
                *(_QWORD *)(v96 - 1) = v95;
              }
              v51 = v7 + 2;
              v92 += 2;
            }
            while (v7 + 2 != a2);
          }
          return result;
        }
        if (!a3)
        {
          if (v8 != a2)
          {
            v64 = (unint64_t)(v10 - 2) >> 1;
            v65 = v64;
            do
            {
              v66 = v65;
              if (v64 >= v65)
              {
                v67 = (2 * v65) | 1;
                v68 = &v8[2 * v67];
                if (2 * v66 + 2 >= v10)
                {
                  v69 = *v68;
                }
                else
                {
                  v69 = *v68;
                  v70 = v68[2];
                  if (*v68 <= v70)
                    v69 = v68[2];
                  if (*v68 < v70)
                  {
                    v68 += 2;
                    v67 = 2 * v66 + 2;
                  }
                }
                v71 = &v8[2 * v66];
                if (v69 >= *v71)
                {
                  v72 = *v71;
                  v73 = v71[1];
                  do
                  {
                    v74 = v71;
                    v71 = v68;
                    *v74 = v69;
                    v74[1] = v68[1];
                    if (v64 < v67)
                      break;
                    v75 = (2 * v67) | 1;
                    v68 = &v8[2 * v75];
                    v67 = 2 * v67 + 2;
                    if (v67 >= v10)
                    {
                      v69 = *v68;
                      v67 = v75;
                    }
                    else
                    {
                      v69 = *v68;
                      result = v68 + 2;
                      v76 = v68[2];
                      if (*v68 <= v76)
                        v69 = v68[2];
                      if (*v68 >= v76)
                        v67 = v75;
                      else
                        v68 += 2;
                    }
                  }
                  while (v69 >= v72);
                  *v71 = v72;
                  v71[1] = v73;
                }
              }
              v65 = v66 - 1;
            }
            while (v66);
            do
            {
              v77 = 0;
              v78 = *(_QWORD *)v8;
              v79 = v8;
              do
              {
                v80 = &v79[2 * v77 + 2];
                v81 = (2 * v77) | 1;
                v77 = 2 * v77 + 2;
                if (v77 >= v10)
                {
                  v82 = *v80;
                  v77 = v81;
                }
                else
                {
                  v82 = *v80;
                  v83 = v80[2];
                  if (*v80 <= v83)
                    v82 = v80[2];
                  if (*v80 >= v83)
                    v77 = v81;
                  else
                    v80 += 2;
                }
                *v79 = v82;
                v79[1] = v80[1];
                v79 = v80;
              }
              while (v77 <= (uint64_t)((unint64_t)(v10 - 2) >> 1));
              if (v80 == a2 - 2)
              {
                *(_QWORD *)v80 = v78;
              }
              else
              {
                *v80 = *(a2 - 2);
                v80[1] = *(a2 - 1);
                *((_QWORD *)a2 - 1) = v78;
                v84 = (char *)v80 - (char *)v8 + 8;
                if (v84 >= 9)
                {
                  v85 = (((unint64_t)v84 >> 3) - 2) >> 1;
                  v86 = &v8[2 * v85];
                  v87 = *v86;
                  if (*v86 < *v80)
                  {
                    v88 = *v80;
                    v89 = v80[1];
                    do
                    {
                      v90 = v80;
                      v80 = v86;
                      *v90 = v87;
                      v90[1] = v86[1];
                      if (!v85)
                        break;
                      v85 = (v85 - 1) >> 1;
                      v86 = &v8[2 * v85];
                      v87 = *v86;
                    }
                    while (*v86 < v88);
                    *v80 = v88;
                    v80[1] = v89;
                  }
                }
              }
              a2 -= 2;
            }
            while (v10-- > 2);
          }
          return result;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = &v8[2 * ((unint64_t)v10 >> 1)];
        if ((unint64_t)v9 < 0x401)
        {
          result = sub_22E790C54(&v7[2 * ((unint64_t)v10 >> 1)], v7, a2 - 2);
        }
        else
        {
          sub_22E790C54(v7, &v7[2 * ((unint64_t)v10 >> 1)], a2 - 2);
          sub_22E790C54(v7 + 2, v12 - 2, a2 - 4);
          sub_22E790C54(v7 + 4, &v7[2 * v11 + 2], a2 - 6);
          result = sub_22E790C54(v12 - 2, v12, &v7[2 * v11 + 2]);
          v13 = *(_QWORD *)v7;
          *(_QWORD *)v7 = *(_QWORD *)v12;
          *(_QWORD *)v12 = v13;
        }
        --a3;
        if ((a4 & 1) == 0 && *(v7 - 2) >= *v7)
        {
          v27 = *(_QWORD *)v7;
          if (*(a2 - 2) <= *(_QWORD *)v7)
          {
            v29 = v7 + 2;
            do
            {
              v8 = v29;
              if (v29 >= a2)
                break;
              v29 += 2;
            }
            while (*v8 <= v27);
          }
          else
          {
            v8 = v7;
            do
            {
              v28 = v8[2];
              v8 += 2;
            }
            while (v28 <= v27);
          }
          v30 = a2;
          if (v8 < a2)
          {
            v30 = a2;
            do
            {
              v31 = *(v30 - 2);
              v30 -= 2;
            }
            while (v31 > v27);
          }
          if (v8 < v30)
          {
            v32 = *v8;
            v33 = *v30;
            do
            {
              *v8 = v33;
              *v30 = v32;
              v34 = v8[1];
              v8[1] = v30[1];
              v30[1] = v34;
              do
              {
                v35 = v8[2];
                v8 += 2;
                v32 = v35;
              }
              while (v35 <= v27);
              do
              {
                v36 = *(v30 - 2);
                v30 -= 2;
                v33 = v36;
              }
              while (v36 > v27);
            }
            while (v8 < v30);
          }
          if (v8 - 2 != v7)
          {
            *v7 = *(v8 - 2);
            v7[1] = *(v8 - 1);
          }
          a4 = 0;
          *((_QWORD *)v8 - 1) = v27;
          continue;
        }
        v14 = 0;
        v15 = *(_QWORD *)v7;
        do
        {
          v16 = v7[v14 + 2];
          v14 += 2;
        }
        while (v16 < v15);
        v17 = &v7[v14];
        v18 = a2;
        if (v14 == 2)
        {
          v18 = a2;
          do
          {
            if (v17 >= v18)
              break;
            v20 = *(v18 - 2);
            v18 -= 2;
          }
          while (v20 >= v15);
        }
        else
        {
          do
          {
            v19 = *(v18 - 2);
            v18 -= 2;
          }
          while (v19 >= v15);
        }
        if (v17 >= v18)
        {
          v8 = &v7[v14];
        }
        else
        {
          v21 = *v18;
          v8 = &v7[v14];
          v22 = v18;
          do
          {
            *v8 = v21;
            *v22 = v16;
            v23 = v8[1];
            v8[1] = v22[1];
            v22[1] = v23;
            do
            {
              v24 = v8[2];
              v8 += 2;
              v16 = v24;
            }
            while (v24 < v15);
            do
            {
              v25 = *(v22 - 2);
              v22 -= 2;
              v21 = v25;
            }
            while (v25 >= v15);
          }
          while (v8 < v22);
        }
        if (v8 - 2 != v7)
        {
          *v7 = *(v8 - 2);
          v7[1] = *(v8 - 1);
        }
        *((_QWORD *)v8 - 1) = v15;
        if (v17 < v18)
        {
LABEL_32:
          result = (unsigned int *)sub_22EAE2AE4(v7, v8 - 2, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v26 = sub_22EAE3208(v7, v8 - 2);
        result = (unsigned int *)sub_22EAE3208(v8, a2);
        if (!(_DWORD)result)
        {
          if (v26)
            continue;
          goto LABEL_32;
        }
        a2 = v8 - 2;
        if (!v26)
          goto LABEL_2;
        return result;
    }
  }
}

BOOL sub_22EAE3208(unsigned int *a1, unsigned int *a2)
{
  uint64_t v4;
  _BOOL8 result;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int *v9;
  unsigned int *v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  _DWORD *v17;
  int v18;
  unsigned int *v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;

  v4 = ((char *)a2 - (char *)a1) >> 3;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = *(a2 - 2);
      v7 = *a1;
      if (v6 < *a1)
      {
        *a1 = v6;
        *(a2 - 2) = v7;
        v8 = a1[1];
        a1[1] = *(a2 - 1);
        *(a2 - 1) = v8;
      }
      return result;
    case 3:
      sub_22E790C54(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_22E790E84(a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      sub_22E790E84(a1, a1 + 2, a1 + 4, a1 + 6);
      v20 = *(a2 - 2);
      v21 = a1[6];
      if (v20 < v21)
      {
        a1[6] = v20;
        *(a2 - 2) = v21;
        v22 = a1[7];
        a1[7] = *(a2 - 1);
        *(a2 - 1) = v22;
        v23 = a1[6];
        v24 = a1[4];
        if (v23 < v24)
        {
          v25 = a1[5];
          v26 = a1[7];
          a1[4] = v23;
          a1[5] = v26;
          a1[6] = v24;
          a1[7] = v25;
          v27 = a1[2];
          if (v23 < v27)
          {
            v28 = a1[3];
            a1[2] = v23;
            a1[3] = v26;
            a1[4] = v27;
            a1[5] = v28;
            v29 = *a1;
            if (v23 < *a1)
            {
              v30 = a1[1];
              *a1 = v23;
              a1[1] = v26;
              a1[2] = v29;
              a1[3] = v30;
            }
          }
        }
      }
      return 1;
    default:
      v9 = a1 + 4;
      sub_22E790C54(a1, a1 + 2, a1 + 4);
      v10 = a1 + 6;
      if (a1 + 6 == a2)
        return 1;
      v11 = 0;
      v12 = 0;
      break;
  }
  while (1)
  {
    v13 = *v9;
    if (*v10 < *v9)
    {
      v15 = *v10;
      v14 = v10[1];
      v16 = v11;
      while (1)
      {
        v17 = (unsigned int *)((char *)a1 + v16);
        v18 = *(unsigned int *)((char *)a1 + v16 + 20);
        v17[6] = v13;
        v17[7] = v18;
        if (v16 == -16)
          break;
        v13 = v17[2];
        v16 -= 8;
        if (v13 <= v15)
        {
          v19 = (unsigned int *)((char *)a1 + v16 + 24);
          goto LABEL_13;
        }
      }
      v19 = a1;
LABEL_13:
      *v19 = v15;
      v19[1] = v14;
      if (++v12 == 8)
        return v10 + 2 == a2;
    }
    v9 = v10;
    v11 += 8;
    v10 += 2;
    if (v10 == a2)
      return 1;
  }
}

uint64_t *sub_22EAE33F4(uint64_t *result, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6[2];

  v2 = a2[10];
  if ((v2 & 0x8000000) != 0)
  {
    if ((v2 & 0x20000000) != 0)
      return result;
  }
  else if (a2[16] | a2[10] & 0x20000000)
  {
    return result;
  }
  v3 = a2[7];
  v4 = (unint64_t *)(v3 & 0xFFFFFFFFFFFFFFF8);
  if ((v3 & 4) != 0)
    v4 = (unint64_t *)v4[4];
  if (v4)
  {
    v5 = *v4;
    v6[0] = (uint64_t)result;
    v6[1] = (uint64_t)a2;
    return sub_22EAE35B8(v6, v5, (uint64_t)(v4 + 1), 0xFFFFFFFFLL);
  }
  return result;
}

uint64_t *sub_22EAE3458(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int i;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *result;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16[2];

  if (!a2 || (v4 = a2, (*(_DWORD *)(a2 + 28) & 0x7F) != 0x53))
  {
    v5 = *(_QWORD *)(a2 + 16);
    v6 = v5 & 0xFFFFFFFFFFFFFFF8;
    if ((v5 & 4) != 0)
      v6 = *(_QWORD *)v6;
    for (i = *(_WORD *)(v6 + 8) & 0x7F; i != 83; i = *(_WORD *)(v6 + 8) & 0x7F)
    {
      v8 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v8 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_16;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_15;
        if (i == 16)
          goto LABEL_9;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_22;
        if (i == 24)
        {
LABEL_9:
          v8 = -48;
        }
        else
        {
LABEL_15:
          if (i != 70)
          {
LABEL_16:
            v9 = i - 52;
            if ((i - 33) >= 5)
              v10 = -48;
            else
              v10 = -64;
            if (v9 >= 6)
              v8 = v10;
            else
              v8 = -72;
            goto LABEL_22;
          }
          v8 = -64;
        }
      }
LABEL_22:
      v11 = *(_QWORD *)(v6 + v8 + 16);
      v6 = v11 & 0xFFFFFFFFFFFFFFF8;
      if ((v11 & 4) != 0)
        v6 = *(_QWORD *)v6;
    }
    v4 = v6 - 40;
  }
  result = (uint64_t *)sub_22EFBBF74(a2, *(_QWORD *)(v4 + 88));
  if (!(_DWORD)result)
  {
    v13 = *(_QWORD *)(a2 + 56);
    v14 = (unint64_t *)(v13 & 0xFFFFFFFFFFFFFFF8);
    if ((v13 & 4) != 0)
      v14 = (unint64_t *)v14[4];
    v15 = *v14;
    v16[0] = a1;
    v16[1] = a2;
    return sub_22EAE35B8(v16, v15, (uint64_t)(v14 + 1), 2);
  }
  return result;
}

uint64_t *sub_22EAE35B8(uint64_t *result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;

  v4 = result;
  if ((a2 & 0xF) == 0)
  {
    while (2)
    {
      switch(*(_BYTE *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 16))
      {
        case 0:
        case 1:
        case 7:
        case 8:
        case 9:
        case 0xB:
        case 0xC:
        case 0xD:
        case 0xE:
        case 0xF:
        case 0x10:
        case 0x11:
        case 0x12:
        case 0x13:
        case 0x14:
        case 0x15:
        case 0x16:
        case 0x17:
        case 0x18:
        case 0x19:
        case 0x1B:
        case 0x1C:
        case 0x1D:
        case 0x1E:
        case 0x20:
        case 0x21:
        case 0x22:
        case 0x23:
        case 0x24:
        case 0x25:
        case 0x26:
        case 0x2A:
        case 0x2B:
        case 0x2C:
        case 0x2D:
        case 0x2F:
        case 0x30:
        case 0x31:
        case 0x32:
        case 0x33:
        case 0x34:
        case 0x35:
        case 0x36:
        case 0x37:
        case 0x38:
        case 0x39:
          return (uint64_t *)sub_22EAE3A4C(result, a2, a3, a4);
        case 2:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
          goto LABEL_67;
        case 3:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
          goto LABEL_67;
        case 4:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
          goto LABEL_67;
        case 5:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
LABEL_67:
          a4 = 6;
          v16 = 15;
          goto LABEL_64;
        case 6:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
          a4 = 0xFFFFFFFFLL;
          v16 = 11;
          goto LABEL_64;
        case 0xA:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
          goto LABEL_66;
        case 0x1A:
          v29 = a2;
          v30 = a3;
          v21 = *(_QWORD *)(a2 + 24);
          v22 = sub_22E47EE80(&v29);
          result = (uint64_t *)sub_22EAE35B8(v4, v21, v22, 0);
          if (*(_BYTE *)(v29 + 16) != 25)
          {
            v23 = *(_QWORD *)(v29 + 16);
            if ((v23 & 0x3FFFC000000000) != 0)
            {
              v24 = 0;
              v25 = (unsigned __int16)(v23 >> 38);
              do
              {
                v26 = *(_QWORD *)(v30 + 8 * v24 + 16);
                if (v26)
                {
                  v27 = *(_QWORD *)(v26 + 56);
                  v28 = (_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF8);
                  if ((v27 & 4) != 0)
                    v28 = (_QWORD *)v28[4];
                  if (v28)
                    result = (uint64_t *)sub_22EAE35B8(v4, *v28, v28 + 1, 1);
                }
                ++v24;
              }
              while (v25 != v24);
            }
          }
          return result;
        case 0x1F:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
          v16 = 15;
          goto LABEL_68;
        case 0x27:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
          goto LABEL_66;
        case 0x28:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
          goto LABEL_66;
        case 0x29:
          a2 = *(_QWORD *)(a2 + 32);
          v5 = a2 & 0xF;
          if (a2 >= 0x10 && v5 == 0)
            __asm { BR              X14 }
LABEL_66:
          v16 = 3;
LABEL_68:
          a4 = 0xFFFFFFFFLL;
LABEL_64:
          a3 += v16 + 1;
          if (v5)
            return (uint64_t *)sub_22EAE3A4C(result, a2, a3, a4);
          continue;
        case 0x2E:
          v17 = *(unsigned int *)(a2 + 20);
          if ((_DWORD)v17)
          {
            v18 = (int *)(a2 + 40);
            v19 = (_QWORD *)(a3 + 16);
            do
            {
              v20 = *v18;
              v18 += 6;
              if (v20 == 1 && (*v19 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                result = (uint64_t *)sub_22EAE35B8(v4, *(_QWORD *)(*v19 & 0xFFFFFFFFFFFFFFFCLL), (*v19 & 0xFFFFFFFFFFFFFFFCLL) + 8, 0xFFFFFFFFLL);
              ++v19;
              --v17;
            }
            while (v17);
          }
          return result;
        default:
          return result;
      }
    }
  }
  return (uint64_t *)sub_22EAE3A4C(result, a2, a3, a4);
}

uint64_t sub_22EAE3A4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD **v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 **v28;
  unsigned __int8 *v29;
  unsigned int v30[4];
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  char v34;
  unsigned int v35;
  char v36;
  uint64_t v37;
  uint64_t v38[2];
  unint64_t v39;

  v5 = a2;
  v38[0] = a2;
  v38[1] = a3;
  result = sub_22F115B7C(a2);
  if (result)
    return sub_22EAE35B8(a1, result, v8, a4);
  if ((_DWORD)a4 != -1)
  {
    v37 = v5;
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(v9 + 16) & 0xFEu) - 2 < 4)
    {
      result = sub_22EF5BA38(*(_QWORD *)(*(_QWORD *)*a1 + 88), v5);
      v37 = result;
      v10 = (_QWORD **)*a1;
      if ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*a1 + 16))
        return result;
      v11 = a1 + 1;
LABEL_9:
      sub_22E8FCA40(*v10, *(_DWORD *)(*v11 + 24), 0xA9Bu, 0, (uint64_t)v30);
      v13 = sub_22E8901B8((uint64_t)v30, &v37);
      v14 = v5;
      while (1)
      {
        if ((v14 & 0xF) != 0)
          goto LABEL_20;
        v15 = *(unsigned __int8 *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v15 > 0x39)
        {
LABEL_15:
          if (sub_22F115668(v14))
            v5 = v14;
          v14 = sub_22F115B7C(v14);
          if (!v14)
            goto LABEL_40;
        }
        else
        {
          if (v15 == 24)
            goto LABEL_39;
          if (v15 == 26)
          {
            if ((*(_BYTE *)(v14 + 23) & 0x10) != 0)
              goto LABEL_39;
          }
          else if (((1 << v15) & 0x20000000200003CLL) == 0)
          {
            goto LABEL_15;
          }
LABEL_20:
          v14 = sub_22F115B7C(v14);
        }
      }
    }
    v12 = v9 & 0xFFFFFFFFFFFFFFF0;
    v10 = (_QWORD **)*a1;
    if (v12 != *(_QWORD *)(*a1 + 16))
      return result;
    v11 = a1 + 1;
    if ((_DWORD)a4 == 6)
      goto LABEL_9;
    sub_22E8FCA40(*v10, *(_DWORD *)(*v11 + 24), 0xA11u, 0, (uint64_t)v30);
    if (v34)
    {
      v16 = v32;
      if (!v32)
      {
        v16 = (unsigned __int8 *)sub_22E3B8AAC(v33);
        v32 = v16;
      }
      v17 = (int)a4;
      v16[*v16 + 1] = 2;
      v18 = v32;
    }
    else
    {
      if (!v36)
        goto LABEL_27;
      v23 = v31;
      v24 = (uint64_t *)(*(_QWORD *)v30 + 12784);
      if (v31)
        v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 32))(v31);
      v39 = v23;
      v25 = sub_22F2F1D6C(v24, (uint64_t *)&v39);
      v26 = v25[1] + 32 * v35;
      v29 = *(unsigned __int8 **)(v26 + 8);
      v28 = (unsigned __int8 **)(v26 + 8);
      v27 = v29;
      if (!v29)
      {
        v27 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v28[1]);
        *v28 = v27;
      }
      v17 = (int)a4;
      v27[*v27 + 1] = 2;
      v18 = *v28;
    }
    v19 = *v18;
    *v18 = v19 + 1;
    *(_QWORD *)&v18[8 * v19 + 16] = v17;
LABEL_27:
    v13 = sub_22E8901B8((uint64_t)v30, &v37);
    v14 = v5;
    while (1)
    {
      if ((v14 & 0xF) != 0)
        goto LABEL_38;
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v20 > 0x39)
      {
LABEL_33:
        if (sub_22F115668(v14))
          v5 = v14;
        v14 = sub_22F115B7C(v14);
        if (!v14)
          goto LABEL_40;
      }
      else
      {
        if (v20 == 24)
          goto LABEL_39;
        if (v20 == 26)
        {
          if ((*(_BYTE *)(v14 + 23) & 0x10) != 0)
          {
LABEL_39:
            v5 = v14;
LABEL_40:
            v21 = sub_22F115668(v5);
            v39 = v21 | ((unint64_t)sub_22F1167E8(v38) << 32);
            sub_22E8906A0(v13, (uint64_t *)&v39);
            result = (uint64_t)sub_22E903BEC(v30);
            v22 = *a1;
            if (!*(_BYTE *)(v22 + 24))
            {
              result = (uint64_t)sub_22F327E60(*(void ***)v22, *(void **)(v22 + 8));
              *(_BYTE *)(v22 + 24) = 1;
            }
            return result;
          }
        }
        else if (((1 << v20) & 0x20000000200003CLL) == 0)
        {
          goto LABEL_33;
        }
LABEL_38:
        v14 = sub_22F115B7C(v14);
      }
    }
  }
  return result;
}

uint64_t sub_22EAE3E28(_QWORD *a1, unsigned int a2, uint64_t a3, unsigned int (*a4)(uint64_t, _QWORD), uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  unsigned int v17[24];
  uint64_t v18;
  unsigned int v19[24];

  v10 = sub_22EFD7394(a3);
  if ((_QWORD *)v10 == v11)
  {
    v14 = 0;
  }
  else
  {
    v12 = (_QWORD *)v10;
    v13 = v11;
    v14 = 0;
    do
    {
      v15 = *v12;
      if (a4(a5, *v12))
      {
        if ((v14 & 1) == 0)
        {
          sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), a2, 0, (uint64_t)v19);
          v18 = *(_QWORD *)(a3 + 40);
          sub_22E894538((uint64_t)v19, &v18);
          sub_22E903BEC(v19);
        }
        sub_22E8FCA40(a1, *(_DWORD *)(v15 + 24), 0x1723u, 0, (uint64_t)v17);
        sub_22E903BEC(v17);
        v14 = 1;
      }
      ++v12;
    }
    while (v12 != v13);
  }
  return v14 & 1;
}

uint64_t sub_22EAE3F20()
{
  return 1;
}

uint64_t sub_22EAE3F28(_QWORD **a1, uint64_t a2)
{
  uint64_t v3;

  v3 = (*(_QWORD *)((*(uint64_t (**)(_QWORD))(*(_QWORD *)**a1 + 32))(**a1) + 80) >> 22) & 1;
  return v3 ^ ((*(_BYTE *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2)
                                                        + 82) & 0x40) >> 6);
}

uint64_t sub_22EAE3F7C(uint64_t a1, uint64_t a2)
{
  return ((*(_QWORD *)(**(_QWORD **)a1 + 80) & 0xC0000000) == 0x80000000) ^ ((*(_QWORD *)(a2 + 80) & 0xC0000000) == 0x80000000);
}

int32x2_t *sub_22EAE3FB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  int v52;
  uint64_t v53;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  int v68;
  _BYTE v69[32];
  void *v70;
  uint64_t v71;
  _QWORD v72[6];

  v72[4] = *MEMORY[0x24BDAC8D0];
  LODWORD(v55) = 7;
  BYTE4(v55) = 0;
  LODWORD(v56) = a3;
  v58 = 0;
  v59 = 0;
  v57 = a4;
  v60 = 0;
  v62 = 0;
  v63 = 0;
  sub_22EE012D0(a2, (unint64_t)&v55);
  v11 = *(_WORD *)(a4 + 80) & 0x7F;
  v12 = -40;
  if (v11 <= 0x46)
  {
    if (v11 <= 0x18)
    {
      if (v11 == 16)
      {
LABEL_4:
        v12 = -48;
        goto LABEL_16;
      }
      if (((1 << v11) & 0x1066) != 0)
        goto LABEL_16;
      if (v11 == 24)
        goto LABEL_4;
    }
    if (v11 == 70)
    {
LABEL_14:
      v12 = -64;
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  if (v11 == 83)
    goto LABEL_16;
  if (v11 == 71)
  {
    v12 = -56;
    goto LABEL_16;
  }
  if (v11 != 81)
  {
LABEL_12:
    if (v11 - 52 >= 6)
    {
      if (v11 - 33 >= 5)
        goto LABEL_4;
      goto LABEL_14;
    }
    v12 = -72;
  }
LABEL_16:
  v13 = *(_QWORD *)(a4 + 72 + v12 + 16);
  v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
  if ((v13 & 4) != 0)
    v14 = (_QWORD *)*v14;
  v15 = *(_DWORD *)(a4 + 24);
  if (v14)
    v16 = (uint64_t)(v14 - 8);
  else
    v16 = 0;
  v55 = (_QWORD *)a2;
  v56 = a4;
  LODWORD(v57) = a5;
  v58 = a6;
  LOWORD(v59) = 0;
  BYTE2(v59) = 0;
  HIDWORD(v59) = sub_22E46BB88(a4) >> 11;
  v60 = 0;
  v61 = (sub_22E46BB88(a4) >> 9) & 3;
  LODWORD(v62) = 0;
  if (a5 >= 3)
  {
    if (a5 - 3 < 2)
      BYTE1(v59) = 1;
  }
  else
  {
    LOBYTE(v59) = 1;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(a4 + 48) & 0xFFFFFFFFFFFFFFF0);
  if ((v17 && *(_BYTE *)(v17 + 16) == 26
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v17 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
     && (v17 = sub_22F10CF48(v17)) != 0)
    && (*(_DWORD *)(v17 + 20) & 0x3FFFC0) != 0)
  {
    v18 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(a4 + 120) + 48) & 0xFFFFFFFFFFFFFFF0);
    if (v18 && (v19 = *(_DWORD *)(v18 + 16), (v19 & 0xFE) == 0x28))
    {
      if ((v19 & 0x100000) != 0)
      {
        do
        {
LABEL_31:
          while (1)
          {
            v18 = *(_QWORD *)(*(_QWORD *)(v18 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v18)
              break;
            v20 = *(_DWORD *)(v18 + 16);
            if ((v20 & 0xFE) != 0x28)
              break;
            if ((v20 & 0x100000) == 0)
              goto LABEL_40;
          }
          v18 = sub_22F10CF48(v18);
        }
        while ((*(_DWORD *)(v18 + 16) & 0x100000) != 0);
      }
    }
    else
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_44;
      v18 = sub_22F10CF48(v18);
      if (!v18)
        goto LABEL_44;
      if ((*(_DWORD *)(v18 + 16) & 0x100000) != 0)
        goto LABEL_31;
    }
LABEL_40:
    v21 = *(_QWORD *)(v18 + 32);
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8);
    BYTE2(v59) = (v21 | v22) & 1;
    if ((v22 & 8) != 0)
      v23 = *(_DWORD *)((v22 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v23 = 0;
    v60 = v23;
  }
LABEL_44:
  HIDWORD(v62) = v15;
  v63 = a2;
  v64 = 5;
  v65 = v69;
  v66 = v69;
  v67 = 4;
  v68 = 0;
  v70 = v72;
  v71 = 0x400000000;
  if ((*(_BYTE *)(*(_QWORD *)(a2 + 72) + 1) & 2) == 0)
    v64 = 1;
  if ((*(_BYTE *)(v16 + 28) & 0x80) != 0)
    goto LABEL_107;
  v24 = *(_DWORD *)(a4 + 24);
  v25 = sub_22EF6477C(*(_QWORD *)(a2 + 88), v16);
  if (sub_22EE8B0B0(a2, v24, v25))
    goto LABEL_107;
  v26 = *(_WORD *)(v56 + 80) & 0x7F;
  v27 = -40;
  if (v26 > 0x46)
  {
    if (v26 == 83)
      goto LABEL_64;
    if (v26 == 71)
    {
      v27 = -56;
      goto LABEL_64;
    }
    if (v26 != 81)
    {
LABEL_59:
      v28 = v26 - 52;
      v29 = v26 - 33 >= 5;
      v30 = -48;
      if (!v29)
        v30 = -64;
      if (v28 >= 6)
        v27 = v30;
      else
        v27 = -72;
    }
  }
  else
  {
    if (v26 > 0x18)
      goto LABEL_58;
    if (v26 == 16)
    {
LABEL_51:
      v27 = -48;
      goto LABEL_64;
    }
    if (((1 << v26) & 0x1066) == 0)
    {
      if (v26 == 24)
        goto LABEL_51;
LABEL_58:
      if (v26 == 70)
      {
        v27 = -64;
        goto LABEL_64;
      }
      goto LABEL_59;
    }
  }
LABEL_64:
  v31 = *(_QWORD *)(v56 + 72 + v27 + 16);
  v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
  if ((v31 & 4) != 0)
    v32 = (_QWORD *)*v32;
  if (v32)
    v33 = (uint64_t)(v32 - 8);
  else
    v33 = 0;
  v34 = 3;
  if ((_BYTE)v59)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v33 + 104) + 96), *(_QWORD *)(v33 + 104));
    if ((**(_QWORD **)(v33 + 128) & 0x800) != 0)
      v34 = 0;
    else
      v34 = 3;
  }
  v35 = sub_22E46A3A0(v33);
  if (v35 != v36)
  {
    v37 = v35;
    v38 = v36;
    do
    {
      if ((*(_BYTE *)(v37 + 12) & 1) == 0)
        sub_22EAE461C((uint64_t *)&v55, v37);
      v37 += 24;
    }
    while (v37 != v38);
  }
  if (v34 == 3)
  {
    v39 = sub_22E483108(v33);
    if (v39 != v40)
    {
      v41 = v39;
      v42 = v40;
      do
      {
        sub_22EAE461C((uint64_t *)&v55, v41);
        v41 += 24;
      }
      while (v41 != v42);
    }
  }
  v43 = sub_22EFC3B90(v33);
  if (v43)
  {
    v44 = v43;
    v45 = *(_DWORD *)(v43 + 28);
LABEL_84:
    if ((v45 & 0x80) != 0)
      goto LABEL_96;
    v46 = *(_DWORD *)(v44 + 68);
    if ((v46 & 1) != 0 && !*(_QWORD *)(v44 + 40))
      goto LABEL_96;
    if (!(_DWORD)v57)
    {
      v47 = *(_QWORD *)(v44 + 72) & 3;
      if ((_DWORD)v47 && (_DWORD)v47 != 3)
      {
        v51 = (_QWORD *)(*(_QWORD *)(v44 + 72) & 0xFFFFFFFFFFFFFFFCLL);
        if ((v46 & 1) != 0)
        {
          v51 = (_QWORD *)*v51;
          if (v51)
            goto LABEL_104;
        }
        else if (v51)
        {
LABEL_104:
          if (v64 != 3)
          {
            sub_22EB17190(v63, (uint64_t)v51);
            if (v52)
              v64 = 0;
          }
          goto LABEL_96;
        }
        v51 = (_QWORD *)(sub_22EACC620(v55, SHIDWORD(v62), v44) & 0xFFFFFFFFFFFFFFFELL);
        if (!v51)
          goto LABEL_96;
        goto LABEL_104;
      }
    }
    v49 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22EF5BA38(v55[11], *(_QWORD *)(v44 + 48)) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v49 && *(_BYTE *)(v49 + 16) == 45)
    {
      v50 = sub_22F114198(*(_QWORD *)(v49 + 24));
      sub_22EAE4A6C((uint64_t *)&v55, v50, v44 | 4);
    }
LABEL_96:
    while (1)
    {
      v44 = *(_QWORD *)(v44 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v44)
        break;
      v45 = *(_DWORD *)(v44 + 28);
      if ((v45 & 0x7Fu) - 49 < 3)
        goto LABEL_84;
    }
  }
LABEL_107:
  *(_QWORD *)a1 = v63;
  *(_DWORD *)(a1 + 8) = v64;
  llvm::SmallPtrSetImplBase::SmallPtrSetImplBase((llvm::SmallPtrSetImplBase *)(a1 + 16), (const void **)(a1 + 48), (const llvm::SmallPtrSetImplBase *)&v65);
  *(_QWORD *)(a1 + 80) = a1 + 96;
  v53 = a1 + 80;
  *(_QWORD *)(v53 + 8) = 0x400000000;
  if ((_DWORD)v71)
    sub_22F24C890(v53, (uint64_t)&v70);
  if (v70 != v72)
    free(v70);
  if (v66 != v65)
    free(v66);
  return sub_22EE013E8((int32x2_t *)a2);
}

uint64_t sub_22EAE461C(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  result = *(_QWORD *)(**(_QWORD **)(a2 + 16) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(result + 8) & 0xF) != 0)
    result = (uint64_t)sub_22F10D2BC(**(_QWORD **)(a2 + 16));
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v5 && *(_BYTE *)(v5 + 16) == 45)
  {
    v6 = sub_22F114198(*(_QWORD *)(v5 + 24));
    if (a1[3]
      && (v7 = sub_22EAC8258()) != 0
      && (v8 = v7, (*(void (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7), (v9 = v8 & 0xFFFFFFFFFFFFFFF8) != 0))
    {
      v10 = ((*(_QWORD *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v9 + 32))(v9) + 80) >> 20) & 4 | v9) ^ 4;
      return sub_22EAE473C((uint64_t)a1, a2 & 0xFFFFFFFFFFFFFFFBLL, v10);
    }
    else
    {
      return sub_22EAE4A6C(a1, v6, a2 & 0xFFFFFFFFFFFFFFFBLL);
    }
  }
  return result;
}

uint64_t sub_22EAE473C(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v3 = a3 & 0xFFFFFFFFFFFFFFF8;
  if ((a3 & 0xFFFFFFFFFFFFFFF8) == 0)
    return result;
  v4 = result;
  v5 = a2 & 0xFFFFFFFFFFFFFFF8;
  if ((a2 & 4) != 0 || !v5)
  {
    result = *(unsigned int *)(v5 + 24);
    goto LABEL_19;
  }
  v6 = **(_QWORD **)(v5 + 16);
  for (i = v6; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_15;
      v8 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v8 <= 0x39)
        break;
LABEL_10:
      if (sub_22F115668(i))
        v6 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_18;
    }
    if (v8 == 24)
      goto LABEL_17;
    if (v8 == 26)
      break;
    if (((1 << v8) & 0x20000000200003CLL) == 0)
      goto LABEL_10;
LABEL_15:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_15;
LABEL_17:
  v6 = i;
LABEL_18:
  result = sub_22F115668(v6);
LABEL_19:
  if (*(_DWORD *)(v4 + 64) != 3)
  {
    v9 = result;
    v10 = *(_QWORD *)(*(_QWORD *)(v3 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (v10)
      v11 = *(_BYTE *)(v10 + 16) == 26;
    else
      v11 = 0;
    if (!v11 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(v3 + 48) & 0xFFFFFFFFFFFFFFF0));
    result = sub_22EB14850(*(_QWORD *)(v4 + 56), v9);
    if (result)
    {
      v12 = *(_DWORD *)(v4 + 64);
      if (v12)
      {
        v13 = (*(_QWORD *)(result + 16) >> 54) & 0xFLL;
        switch((int)v13)
        {
          case 0:
            result = sub_22E4725AC(v3);
            if ((result & 1) == 0)
              goto LABEL_30;
            return result;
          case 1:
            if (v12 == 5)
            {
              LODWORD(v13) = 1;
              goto LABEL_49;
            }
            return result;
          case 3:
LABEL_30:
            result = *(_QWORD *)(v4 + 80);
            if (result == *(_QWORD *)(v4 + 72))
              goto LABEL_47;
            v14 = *(unsigned int *)(v4 + 88);
            if (v14 < 0x21 || 4 * (*(_DWORD *)(v4 + 92) - *(_DWORD *)(v4 + 96)) >= v14)
            {
              result = (uint64_t)memset((void *)result, 255, 8 * v14);
              goto LABEL_47;
            }
            result = llvm::SmallPtrSetImplBase::shrink_and_clear((llvm::SmallPtrSetImplBase *)(v4 + 72));
            goto LABEL_48;
          case 4:
          case 5:
          case 8:
            return result;
          case 7:
            result = *(_QWORD *)(v4 + 80);
            if (result == *(_QWORD *)(v4 + 72))
              goto LABEL_46;
            v24 = *(unsigned int *)(v4 + 88);
            if (v24 >= 0x21 && 4 * (*(_DWORD *)(v4 + 92) - *(_DWORD *)(v4 + 96)) < v24)
            {
              result = llvm::SmallPtrSetImplBase::shrink_and_clear((llvm::SmallPtrSetImplBase *)(v4 + 72));
              LODWORD(v13) = 0;
            }
            else
            {
              result = (uint64_t)memset((void *)result, 255, 8 * v24);
LABEL_46:
              LODWORD(v13) = 0;
LABEL_47:
              *(_DWORD *)(v4 + 92) = 0;
              *(_DWORD *)(v4 + 96) = 0;
            }
LABEL_48:
            *(_DWORD *)(v4 + 144) = 0;
LABEL_49:
            *(_DWORD *)(v4 + 64) = v13;
            break;
          default:
            *(_DWORD *)(v4 + 64) = 2;
            v15 = *(_QWORD *)(result + 16);
            if ((v15 & 0x3C0000000000000) == 0x80000000000000)
            {
              v16 = (_DWORD *)((result + 8 * (unsigned __int16)(v15 >> 38) + 4 * ((v15 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
              v19 = *v16;
              v18 = (uint64_t *)(v16 + 2);
              v17 = v19;
              if (v19)
              {
                v20 = 8 * v17;
                do
                {
                  result = sub_22E3BA850(v4 + 72, (const void *)(*v18 & 7 | *(_QWORD *)((*v18 & 0xFFFFFFFFFFFFFFF0) + 8)));
                  if (v21)
                  {
                    v22 = *v18;
                    v23 = *(unsigned int *)(v4 + 144);
                    if (v23 >= *(unsigned int *)(v4 + 148))
                    {
                      result = llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v23 = *(unsigned int *)(v4 + 144);
                    }
                    *(_QWORD *)(*(_QWORD *)(v4 + 136) + 8 * v23) = v22;
                    ++*(_DWORD *)(v4 + 144);
                  }
                  ++v18;
                  v20 -= 8;
                }
                while (v20);
              }
            }
            return result;
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EAE4A6C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_22EAE4AE0(*a1, a2);
  return sub_22EAE473C((uint64_t)a1, a3, v5);
}

uint64_t sub_22EAE4AE0(uint64_t a1, uint64_t a2)
{
  return sub_22EC6602C(a1, a2);
}

BOOL sub_22EAE4B48(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_22EFC8868(a1);
  if ((*(_BYTE *)(v2 + 1) & 0x10) == 0)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
    v3 = *(_QWORD *)(a1 + 128);
    if ((*(_QWORD *)v3 & 0x100000000000) == 0)
      return 0;
    goto LABEL_3;
  }
  if ((sub_22F3B1A64(a1) & 1) == 0)
    return 0;
  v3 = *(_QWORD *)(a1 + 128);
  if (v3)
  {
LABEL_3:
    if (((*(unsigned __int16 *)(v3 + 8) | (*(unsigned __int8 *)(v3 + 10) << 16)) & 0x100000) != 0
      && (*(_BYTE *)(v2 + 1) & 8) == 0)
    {
      return 0;
    }
  }
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 0x20) != 0)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  return **(_QWORD **)(a1 + 128) & 0x80 | ((((unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 + 128) + 10) >> 4) & 1) << 20)
      || (sub_22E49F8B4(a1) & 1) != 0
      || sub_22E49F698(a1);
}

uint64_t sub_22EAE4C2C(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t v14;
  char v15;
  uint64_t v16;

  if (a10)
  {
    v14 = sub_22EAC8258(a11, a2, a10);
    if (v14)
    {
      v15 = *(_BYTE *)(v14 + 83);
      return (v15 & 0xC0) != 0;
    }
  }
  if (!a3)
    return sub_22EAE4D48(a2);
  if (a3 == 5)
    return sub_22F3B1A64(a2);
  v16 = sub_22EAE4AE0(a1, a2);
  if ((v16 & 0xFFFFFFFFFFFFFFF8) != 0)
  {
    v15 = *(_BYTE *)((v16 & 0xFFFFFFFFFFFFFFF8) + 83);
    return (v15 & 0xC0) != 0;
  }
  return 1;
}

uint64_t sub_22EAE4D48(unint64_t a1)
{
  uint64_t result;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 8) != 0)
    return 1;
  result = sub_22E49F6F8(a1);
  if ((_DWORD)result)
    return sub_22E49F910(a1);
  return result;
}

uint64_t sub_22EAE4DA4(uint64_t a1, _BYTE *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  char v35;
  int v36;
  __int128 v41;
  int v42;
  __int128 v43;
  int v44;
  unint64_t v45;

  v6 = sub_22E46A3A0(a3);
  if (v6 != v7)
  {
    v8 = v6;
    v9 = v7;
LABEL_3:
    v10 = *(_QWORD *)(*(_QWORD *)a1 + 88);
    v11 = *(_QWORD *)(**(_QWORD **)(v8 + 16) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v11 + 8) & 0xF) != 0)
      v11 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v8 + 16));
    v12 = v11 & 0xFFFFFFFFFFFFFFF0;
    if ((a4 & 0xCFFFFFFF8) != 0)
    {
      v45 = a4;
      v13 = sub_22E491354((unsigned int *)&v45, v12);
      v14 = sub_22EF5DBC4(v10, v13, v45);
    }
    else
    {
      v14 = v12 | a4 & 7;
    }
    LODWORD(v43) = 2;
    v15 = *(_QWORD *)(**(_QWORD **)(v8 + 16) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v15 + 8) & 0xF) != 0)
      v15 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v8 + 16));
    v16 = sub_22F10C2A4(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0));
    if (v16)
    {
      if ((*(_DWORD *)(v16 + 28) & 0x7Fu) - 35 >= 3)
        v17 = 0;
      else
        v17 = v16;
    }
    else
    {
      v17 = 0;
    }
    *((_QWORD *)&v43 + 1) = v17;
    v18 = **(_QWORD **)(v8 + 16);
    v19 = v18;
    while (1)
    {
      if ((v19 & 0xF) != 0)
        goto LABEL_26;
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v20 > 0x39)
      {
LABEL_21:
        if (sub_22F115668(v19))
          v18 = v19;
        v19 = sub_22F115B7C(v19);
        if (!v19)
          goto LABEL_28;
      }
      else
      {
        if (v20 == 24)
          goto LABEL_27;
        if (v20 == 26)
        {
          if ((*(_BYTE *)(v19 + 23) & 0x10) != 0)
          {
LABEL_27:
            v18 = v19;
LABEL_28:
            v44 = sub_22F115668(v18);
            v21 = sub_22EAE52A4(a1, v14, &v43);
            v22 = BYTE2(v21);
            v23 = *a2 | v21;
            *a2 = v23;
            a2[1] &= BYTE1(v21);
            if (a2[2] < BYTE2(v21))
              v22 = a2[2];
            a2[2] = v22;
            if (!v23)
            {
              v8 += 24;
              if (v8 == v9)
                break;
              goto LABEL_3;
            }
            return 1;
          }
        }
        else if (((1 << v20) & 0x20000000200003CLL) == 0)
        {
          goto LABEL_21;
        }
LABEL_26:
        v19 = sub_22F115B7C(v19);
      }
    }
  }
  v24 = sub_22EFC3B90(a3);
  if (!v24)
    return 0;
  v25 = v24;
LABEL_34:
  if (sub_22EFC2E8C(v25))
  {
    v26 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v25 + 48) & 0xFFFFFFFFFFFFFFF0));
    if (v26)
    {
      if ((*(_DWORD *)(v26 + 28) & 0x7Fu) - 35 >= 3)
        v27 = 0;
      else
        v27 = v26;
    }
    else
    {
      v27 = 0;
    }
    if ((sub_22EAE4DA4(a1, a2, v27, a4) & 1) == 0)
      goto LABEL_54;
    return 1;
  }
  if ((*(_BYTE *)(v25 + 68) & 2) != 0)
    v28 = a4 & 0xFFFFFFFE;
  else
    v28 = a4;
  v29 = *(_QWORD *)(v25 + 48);
  if (v28 & 0xFFFFFFF8 | a4 & 0xC00000000)
  {
    v30 = *(_QWORD *)(*(_QWORD *)a1 + 88);
    v45 = v28 | a4 & 0xFFFFFFFF00000000;
    v31 = sub_22E491354((unsigned int *)&v45, v29);
    v32 = sub_22EF5DBC4(v30, v31, v45);
  }
  else
  {
    v32 = v28 & 7 | (unint64_t)v29;
  }
  v33 = 1;
  LODWORD(v41) = 1;
  *((_QWORD *)&v41 + 1) = v25;
  v42 = *(_DWORD *)(v25 + 24);
  v34 = sub_22EAE52A4(a1, v32, &v41);
  v35 = BYTE2(v34);
  v36 = (*a2 | v34);
  *a2 |= v34;
  a2[1] &= BYTE1(v34);
  if (a2[2] < BYTE2(v34))
    v35 = a2[2];
  a2[2] = v35;
  if (v36 == 5 || v36 == 0)
  {
LABEL_54:
    while (1)
    {
      v25 = *(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v25)
        return 0;
      if ((*(_DWORD *)(v25 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_34;
    }
  }
  return v33;
}

uint64_t sub_22EAE515C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v7[24];
  unsigned int *v8;
  unsigned int *v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
  {
    v4 = 131329;
    if (*(_DWORD *)(a1 + 176) == 1)
    {
      sub_22E8FCA40(*(_QWORD **)a1, *(_DWORD *)(a3 + 16), 0x15A5u, 0, (uint64_t)v7);
      v5 = sub_22E890024((uint64_t)v7, (uint64_t *)(a1 + 16));
      sub_22E890024(v5, (uint64_t *)(a1 + 8));
      sub_22E903BEC(v7);
    }
  }
  else
  {
    sub_22E5BBE34((uint64_t)v7, *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), a2, 1, 0, 0);
    v8 = v7;
    v9 = v7;
    return sub_22EAE5338();
  }
  return v4;
}

uint64_t sub_22EAE52A4(uint64_t a1, unint64_t a2, __int128 *a3)
{
  unint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v6 = sub_22EF5C728(*(_QWORD *)(*(_QWORD *)a1 + 88), a2);
  if (v6 && *(_BYTE *)(v6 + 16) == 2)
  {
    v7 = *(_QWORD *)(v6 + 32);
    v11 = *a3;
    v12 = *((_QWORD *)a3 + 2);
    return sub_22EAE52A4(a1, v7, &v11);
  }
  else
  {
    v9 = *a3;
    v10 = *((_QWORD *)a3 + 2);
    return sub_22EAE515C(a1, a2, (uint64_t)&v9);
  }
}

uint64_t sub_22EAE5338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t *v11;
  uint64_t *v12;
  unsigned __int8 *v13;
  int v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  int v21;
  _BOOL4 v22;
  unint64_t v23;
  unsigned int v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t j;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  int v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  unsigned __int8 *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t i;
  uint64_t v95;
  int v96;
  uint64_t v97;
  int v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t *v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  int v106;
  _OWORD *v107;
  unint64_t v108;
  int v109;
  unint64_t v110;
  _BYTE v111[96];
  unint64_t *v112;
  void *v113;
  int v114[2];
  _DWORD v115[64];
  uint64_t v116[2];
  uint64_t v117;
  _QWORD v118[3];
  int v119;
  _OWORD v120[9];
  _QWORD *v121;
  uint64_t v122;
  _QWORD v123[6];
  _QWORD v124[2];
  int v125;
  int v126;
  unint64_t v127;
  int v128;
  int v129;
  uint64_t v130;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = (uint64_t *)v0;
  v130 = *MEMORY[0x24BDAC8D0];
  v12 = (uint64_t *)(v0 + 16);
  v13 = *(unsigned __int8 **)(v0 + 16);
  v14 = *((_DWORD *)v13 + 6);
  v116[0] = (uint64_t)&v117;
  v116[1] = 0x1000000000;
  v118[0] = v120;
  v118[1] = v120;
  v118[2] = 16;
  v119 = 0;
  v120[8] = 0u;
  v121 = v123;
  v122 = 0x400000000;
  v123[4] = v124;
  v124[0] = 0;
  v123[5] = 0;
  v124[1] = 1;
  v125 = v14;
  v126 = 1;
  v127 = v9 | ((unint64_t)(v1 == 0) << 32);
  v128 = 0;
  v129 = 0;
  v15 = (const void *)(*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v13 + 32))(v13);
  sub_22E3BA850((uint64_t)v118, v15);
  v16 = (*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v13 + 32))(v13);
  sub_22E3BA850((uint64_t)v118, (const void *)(v16 | 1));
  v17 = *(_QWORD *)(*(_QWORD *)(*v8 + 8) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v17 + 17) & 4) != 0
    || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x2C)
  {
    sub_22ED1741C((_QWORD *)*v11, (uint64_t)v116, v10, (uint64_t)(v11 + 4), v8, v6, 1);
  }
  else
  {
    sub_22ED0A498(*v11, v10, *(_DWORD *)(v11[2] + 24), (uint64_t)v8, v6, (uint64_t)v116);
  }
  v112 = 0;
  switch(sub_22ED03FCC(v116, (_QWORD *)*v11, *(_DWORD *)(v11[2] + 24), &v112))
  {
    case 0u:
      if (*((unsigned __int8 *)v11 + 24) - 3 <= 1 && (v112[13] & 0x60) == 0)
      {
        v41 = 131329;
        if (*((_DWORD *)v11 + 44) != 1)
          goto LABEL_72;
        if (*v112)
        {
          v72 = *(_DWORD *)(*v112 + 24);
          v73 = 5539;
        }
        else
        {
          v72 = *(_DWORD *)((*(_QWORD *)(v112[6] + 144) & 0xFFFFFFFFFFFFFFFCLL) + 24);
          v73 = 5540;
        }
        sub_22E8FCA40((_QWORD *)*v11, v72, v73, 0, (uint64_t)&v113);
        sub_22E890024((uint64_t)&v113, v12);
        goto LABEL_112;
      }
      v18 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(*v8 + 8) & 0xFFFFFFFFFFFFFFF0));
      if (v18)
      {
        v43 = v18;
        if ((*(_DWORD *)(v18 + 28) & 0x7Fu) - 35 <= 2)
        {
          v44 = v112[1] & 0xFFFFFFFFFFFFFFFCLL;
          if (v44)
          {
            if (sub_22E8BB0E8(v44))
            {
              if (*v4 == 1)
                v45 = *(_QWORD *)(*v8 + 8);
              else
                v45 = sub_22EF6477C(*(_QWORD *)(*v11 + 88), v11[1]);
              v77 = *v11;
              v78 = v112[1];
              v79 = v4[4];
              v80 = *((_DWORD *)v11 + 44);
              if (v80 == 1)
              {
                v98 = v4[4];
                v99 = v112[1];
                v100 = v45;
                v81 = *(_QWORD *)(v77 + 88) + 2128;
                v82 = *v12;
                v13 = (unsigned __int8 *)sub_22E3B8AAC(v81);
                v83 = *v13;
                v84 = v13 + 1;
                v84[v83] = 11;
                *v13 = v83 + 1;
                *(_QWORD *)&v13[8 * v83 + 16] = v82;
                v85 = *v4;
                v86 = (v83 + 1);
                v84[v86] = 2;
                *(_QWORD *)&v13[8 * v86 + 16] = v85;
                v87 = *((_QWORD *)v4 + 1);
                v88 = (v83 + 2);
                v84[v88] = 11;
                *v13 = v83 + 3;
                *(_QWORD *)&v13[8 * v88 + 16] = v87;
                v115[0] = 5534;
                v113 = 0;
                *(_QWORD *)v114 = v81;
                v101 = (uint64_t *)v81;
                v89 = (_OWORD *)sub_22E3B8AAC(v81);
                v113 = v89;
                v90 = *((_OWORD *)v13 + 5);
                v92 = *((_OWORD *)v13 + 2);
                v91 = *((_OWORD *)v13 + 3);
                v89[4] = *((_OWORD *)v13 + 4);
                v89[5] = v90;
                v89[2] = v92;
                v89[3] = v91;
                v93 = *((_OWORD *)v13 + 1);
                *v89 = *(_OWORD *)v13;
                v89[1] = v93;
                for (i = 96; i != 336; i += 24)
                  std::string::operator=((std::string *)((char *)v89 + i), (const std::string *)&v13[i]);
                sub_22E78D560((uint64_t)(v89 + 21), (uint64_t)(v13 + 336));
                sub_22E78D658((uint64_t)(v89 + 28), (uint64_t *)v13 + 56);
                v45 = v100;
                v8 = v101;
                v79 = v98;
                v78 = v99;
              }
              else
              {
                v95 = *(_QWORD *)(v77 + 88) + 2128;
                v113 = 0;
                *(_QWORD *)v114 = v95;
                v115[0] = 0;
              }
              v96 = sub_22E90A3A8(v77, v43, v78, v45, v79, (uint64_t)&v113);
              if (v113 && *(_QWORD *)v114)
              {
                sub_22E3BB10C(*(unint64_t *)v114, (unint64_t)v113);
                v113 = 0;
              }
              if (v80 == 1 && v13 && v8)
                sub_22E3BB10C((unint64_t)v8, (unint64_t)v13);
              if (!v96)
              {
                v41 = 131329;
                goto LABEL_72;
              }
            }
          }
        }
      }
      if (v10 == 34)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(*v12 + 48) & 0xFFFFFFFFFFFFFFF0);
        if (v19)
          v20 = *(unsigned __int8 *)(v19 + 16) - 27 > 0xFFFFFFFD;
        else
          v20 = 0;
        if (!v20)
          v19 = sub_22F10CF48(v19);
        v21 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 24) & 0xFFFFFFFFFFFFFFF0)
                                                         + 8) & 0xFFFFFFFFFFFFFFF0)
                                 + 16);
        v22 = v21 == 14;
        v23 = *v112;
        if (!*v112)
        {
          if (v21 != 14)
            goto LABEL_50;
          v24 = sub_22EFB1718(v112[2]);
          v25 = 0;
          goto LABEL_70;
        }
      }
      else
      {
        v23 = *v112;
        if (!*v112)
          goto LABEL_50;
        v22 = 0;
      }
      v40 = *(_QWORD *)(v23 + 80) & 0xC0000000;
      if (*((_DWORD *)v11 + 44) == 2 && !v40)
      {
        if (*v4)
        {
          sub_22E8FCA40((_QWORD *)*v11, v4[4], 0x15A1u, 0, (uint64_t)&v113);
          sub_22E8900C4((uint64_t)&v113, v4);
          sub_22E890024((uint64_t)&v113, (uint64_t *)v4 + 1);
          sub_22E903BEC((unsigned int *)&v113);
        }
        v41 = 131329;
        sub_22E8FCA40((_QWORD *)*v11, *(_DWORD *)(v23 + 24), 0x15A2u, 0, (uint64_t)v111);
        v42 = (unsigned int *)v111;
        goto LABEL_113;
      }
      v29 = v40 != 0;
      if (!v22)
      {
        v25 = 0;
        v24 = 2;
        goto LABEL_71;
      }
      v67 = *(_QWORD *)(*(_QWORD *)(v23 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (v67)
        v68 = *(unsigned __int8 *)(v67 + 16) - 27 > 0xFFFFFFFD;
      else
        v68 = 0;
      if (!v68)
        v67 = sub_22F10CF48(v67);
      v69 = *(_QWORD *)(*(_QWORD *)(v67 + 24) & 0xFFFFFFFFFFFFFFF0);
      LOBYTE(v113) = 0;
      v70 = sub_22F110500((uint64_t)&v113, v69);
      if (v70
        && *(_QWORD *)(v70 + 24) <= 0xFuLL
        && (*(_BYTE *)(v70 + 17) & 4) == 0
        && sub_22EDC6650((_QWORD *)*v11, v23, *(_DWORD *)(v11[2] + 24), 0))
      {
        v41 = 131329;
        if (*((_DWORD *)v11 + 44))
          goto LABEL_72;
        sub_22E8FCA40((_QWORD *)*v11, *(_DWORD *)(v11[2] + 24), 0xC87u, 0, (uint64_t)&v113);
        sub_22E8900C4((uint64_t)&v113, v4);
        v71 = (uint64_t *)(v4 + 2);
        sub_22E890024((uint64_t)&v113, (uint64_t *)v4 + 1);
        sub_22E903BEC((unsigned int *)&v113);
        sub_22E8FCA40((_QWORD *)*v11, v4[4], 0x159Du, 0, (uint64_t)&v113);
        sub_22E8900C4((uint64_t)&v113, v4);
        sub_22E890024((uint64_t)&v113, (uint64_t *)v4 + 1);
        goto LABEL_109;
      }
      v74 = *(_QWORD *)(*v11 + 88) + 18648;
      v75 = sub_22E8BBA74(v23);
      v76 = sub_22EFB1C68(v74, v75);
      if (v76)
      {
        v25 = 0;
        v24 = v76[112];
        goto LABEL_71;
      }
      v41 = 131329;
      if (*((_DWORD *)v11 + 44) == 1)
      {
        sub_22E8FCA40((_QWORD *)*v11, v4[4], 0x159Bu, 0, (uint64_t)&v113);
        sub_22E8900C4((uint64_t)&v113, v4);
        v71 = (uint64_t *)(v4 + 2);
        v97 = sub_22E890024((uint64_t)&v113, (uint64_t *)v4 + 1);
        v110 = sub_22E8BBA74(v23) & 0xFFFFFFFFFFFFFFF8;
        sub_22E8901B8(v97, (uint64_t *)&v110);
LABEL_109:
        sub_22E903BEC((unsigned int *)&v113);
        sub_22E8FCA40((_QWORD *)*v11, *(_DWORD *)(v23 + 24), 0x159Cu, 0, (uint64_t)&v113);
        sub_22E8900C4((uint64_t)&v113, v4);
        sub_22E890024((uint64_t)&v113, v71);
LABEL_112:
        v42 = (unsigned int *)&v113;
LABEL_113:
        sub_22E903BEC(v42);
      }
LABEL_72:
      sub_22E9DC79C(v116);
      return v41;
    case 1u:
      if (v10 == 34)
      {
        v26 = *(_QWORD *)(*v11 + 88) + 18648;
        v27 = *(_QWORD *)(*(_QWORD *)(v11[2] + 48) & 0xFFFFFFFFFFFFFFF0);
        if (!v27 || *(unsigned __int8 *)(v27 + 16) - 27 <= 0xFFFFFFFD)
          v27 = sub_22F10CF48(v27);
        if (sub_22EFB1C68(v26, *(_QWORD *)(v27 + 24)))
        {
          v104 = *(_OWORD *)v4;
          v105 = *((_QWORD *)v4 + 2);
          v28 = sub_22EAE5338(v11, 30, v8, v6, &v104, v116);
          v25 = v28;
          v29 = (v28 >> 8) & 1;
          if ((v28 & 0xFE0000) != 0)
            v24 = 2;
          else
            v24 = BYTE2(v28);
          if (!(_BYTE)v28)
          {
            v102 = *(_OWORD *)v4;
            v103 = *((_QWORD *)v4 + 2);
            v30 = sub_22EAE5338(v11, 16, v8, v6, &v102, v116);
            v25 |= v30;
            v29 &= (v30 & 0xFFFFFF) >> 8;
            if (v24 >= (v30 & 0xFFFFFF) >> 16)
              v24 = BYTE2(v30);
          }
          goto LABEL_71;
        }
      }
      if (*((_DWORD *)v11 + 44) == 1)
      {
        sub_22E8FCA40((_QWORD *)*v11, v4[4], 0x159Fu, 0, (uint64_t)&v113);
        v35 = sub_22E890024((uint64_t)&v113, v12);
        LOBYTE(v110) = v10 == 31;
        v36 = sub_22E894E38(v35, (unsigned __int8 *)&v110);
        v37 = sub_22E8900C4(v36, v4);
        sub_22E890024(v37, (uint64_t *)v4 + 1);
        sub_22E903BEC((unsigned int *)&v113);
        if (v2)
        {
          v38 = *v11;
          sub_22ECFE46C(v2, *v11, 0, (uint64_t)v8, v6, (unsigned int (*)(uint64_t, int64x2_t *))sub_22F32A18C, (uint64_t)&v110, (uint64_t)&v113);
          sub_22ECFEBA0(v2, v38, (int)v8, v6, (char *)v113, v114[0], "", 0, 0);
          if (v113 != v115)
            free(v113);
          sub_22E8FCA40((_QWORD *)*v11, v4[4], 0x15A0u, 0, (uint64_t)&v113);
          LODWORD(v110) = v10 != 30;
          sub_22E8900C4((uint64_t)&v113, (int *)&v110);
          sub_22E903BEC((unsigned int *)&v113);
        }
        v39 = *v11;
        sub_22ECFE46C((uint64_t)v116, *v11, 0, (uint64_t)v8, v6, (unsigned int (*)(uint64_t, int64x2_t *))sub_22F32A18C, (uint64_t)&v110, (uint64_t)&v113);
        sub_22ECFEBA0((uint64_t)v116, v39, (int)v8, v6, (char *)v113, v114[0], "", 0, 0);
        if (v113 != v115)
          free(v113);
      }
      goto LABEL_69;
    case 2u:
      if (*((_DWORD *)v11 + 44) == 1)
      {
        v31 = *v12;
        v32 = (*(_QWORD *)(*v12 + 40) & 7) == 6 && *(_DWORD *)(*(_QWORD *)(*v12 + 40) & 0xFFFFFFFFFFFFFFF8) == 34;
        v46 = v10 != 34;
        if (v10 == 30)
          v47 = 1;
        else
          v47 = 2;
        v48 = *(_QWORD *)(*v11 + 88) + 2128;
        v49 = (_BYTE *)sub_22E3B8AAC(v48);
        v50 = (unint64_t)v49;
        v51 = *v49;
        v52 = v49 + 1;
        v49[v51 + 1] = 11;
        v53 = v49 + 16;
        *(_QWORD *)&v49[8 * v51 + 16] = v31;
        if (v46 && v32)
          v54 = v47;
        else
          v54 = 0;
        v55 = (v51 + 1);
        v52[v55] = 3;
        *v49 = v51 + 2;
        *(_QWORD *)&v53[8 * v55] = v54;
        v56 = *v4;
        v57 = (v51 + 2);
        v52[v57] = 2;
        *(_QWORD *)&v53[8 * v57] = v56;
        v58 = *((_QWORD *)v4 + 1);
        v59 = (v51 + 3);
        v52[v59] = 11;
        *(_QWORD *)&v53[8 * v59] = v58;
        *v49 = v51 + 4;
        v106 = v4[4];
        v109 = 5529;
        v108 = v48;
        v60 = (_OWORD *)sub_22E3B8AAC(v48);
        v107 = v60;
        v61 = *(_OWORD *)(v50 + 80);
        v63 = *(_OWORD *)(v50 + 32);
        v62 = *(_OWORD *)(v50 + 48);
        v60[4] = *(_OWORD *)(v50 + 64);
        v60[5] = v61;
        v60[2] = v63;
        v60[3] = v62;
        v64 = *(_OWORD *)(v50 + 16);
        *v60 = *(_OWORD *)v50;
        v60[1] = v64;
        for (j = 96; j != 336; j += 24)
          std::string::operator=((std::string *)((char *)v60 + j), (const std::string *)(v50 + j));
        sub_22E78D560((uint64_t)(v60 + 21), v50 + 336);
        sub_22E78D658((uint64_t)(v60 + 28), (uint64_t *)(v50 + 448));
        sub_22ED1231C((uint64_t)v116, &v106, (_QWORD *)*v11, 2, (int)v8, v6, "", 0, 0);
        if (v107 && v108)
        {
          sub_22E3BB10C(v108, (unint64_t)v107);
          v107 = 0;
        }
        sub_22E3BB10C(v48, v50);
      }
      goto LABEL_69;
    case 3u:
      if (*((_DWORD *)v11 + 44) == 1)
      {
        if (*((unsigned __int8 *)v11 + 24) - 3 > 1 || (v112[13] & 0x60) != 0)
        {
          sub_22E8FCA40((_QWORD *)*v11, v4[4], 0x159Au, 0, (uint64_t)&v113);
          v33 = sub_22E890024((uint64_t)&v113, v12);
          v34 = sub_22E8900C4(v33, v4);
          sub_22E890024(v34, (uint64_t *)v4 + 1);
          sub_22E903BEC((unsigned int *)&v113);
          sub_22EB17D68(*v11, *v112);
        }
        else
        {
          sub_22E8FCA40((_QWORD *)*v11, *(_DWORD *)(*v112 + 24), 0x15A3u, 0, (uint64_t)&v113);
          sub_22E890024((uint64_t)&v113, v12);
          sub_22E903BEC((unsigned int *)&v113);
        }
      }
LABEL_69:
      v24 = 2;
      v25 = 1;
      goto LABEL_70;
    default:
LABEL_50:
      v25 = 0;
      v24 = 2;
LABEL_70:
      v29 = 1;
LABEL_71:
      v41 = (v29 << 8) | (v24 << 16) | v25;
      goto LABEL_72;
  }
}

uint64_t sub_22EAE5FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  uint64_t v12;
  int v14[3];
  int v15;
  uint64_t v16;
  int v17;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 216);
  v6 = *(_QWORD *)(a2 + 3200);
  *(_QWORD *)(a2 + 3200) = 0;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 10288);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 1944);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 2192);
  *(_QWORD *)(a2 + 216) = a3;
  *(_QWORD *)(a2 + 10288) = 0;
  *(_DWORD *)(a2 + 1944) = *(_DWORD *)(a2 + 1904);
  *(_DWORD *)(a2 + 2192) = *(_DWORD *)(a2 + 1960);
  *(_BYTE *)(a1 + 48) = 0;
  sub_22E904974(a2);
  v17 = 6;
  v16 = 0;
  v15 = 3;
  *(_QWORD *)v14 = *(unsigned int *)(a2 + 1704);
  sub_22EB4DDB8(a2 + 3688, &v17, v14, (__int16 *)(a2 + 1693), &v16, &v15);
  v7 = *(unsigned int *)(a2 + 3696);
  v8 = v7 - 2;
  v9 = *(_QWORD *)(a2 + 3688);
  v10 = *(_DWORD *)(v9 + 576 * (v7 - 2));
  if (v10 == 5)
  {
    *(_BYTE *)(v9 + 576 * v7 - 4) = *(_BYTE *)(v9 + 576 * v8 + 572);
    v11 = 1;
  }
  else if (v10 == 2)
  {
    *(_BYTE *)(v9 + 576 * v7 - 4) = 1;
    v11 = *(_BYTE *)(v9 + 576 * v8 + 573) != 0;
  }
  else
  {
    v11 = 0;
    *(_BYTE *)(v9 + 576 * v7 - 4) = 0;
  }
  v12 = v9 + 576 * v7;
  *(_BYTE *)(v12 - 3) = v11;
  *(_WORD *)(a2 + 1693) = 0;
  if (*(_DWORD *)(a2 + 1848))
  {
    llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(a2 + 1776), (llvm::SmallPtrSetImplBase *)(v12 - 560));
    sub_22EAEAE08(a2 + 1840, (uint64_t *)(v12 - 496));
    if (!a3)
      return a1;
  }
  else if (!a3)
  {
    return a1;
  }
  if ((*(_WORD *)(a3 + 8) & 0x7Eu) - 58 >= 0xFFFFFFFA)
    *(_QWORD *)(a3 + 8) |= 0x800000000uLL;
  return a1;
}

BOOL sub_22EAE6144(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;
  unint64_t v5;
  unsigned int v6;

  v2 = *a1;
  v3 = v2 | a2 & 1;
  *a1 = v2 | a2 & 1;
  if (!v3)
  {
    v5 = a2 & 0xFFFFFFFFFFFFFFFELL;
    v6 = *((_DWORD *)a1 + 4);
    if (v6 >= *((_DWORD *)a1 + 5))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v6 = *((_DWORD *)a1 + 4);
    }
    *(_QWORD *)(*((_QWORD *)a1 + 1) + 8 * v6) = v5;
    ++*((_DWORD *)a1 + 4);
  }
  return v3 != 0;
}

unint64_t sub_22EAE61C4(uint64_t a1, int a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  void *v11[2];

  v10 = 0u;
  *(_OWORD *)v11 = 0u;
  v7 = *(_QWORD *)(a3 + 40);
  v8 = a2;
  sub_22EFC6D6C((uint64_t)&v9, v7);
  v5 = sub_22EB24A3C(a1, (uint64_t *)&v10, (uint64_t)&v7, a3, 0, 0, 0);
  if (HIDWORD(v11[1]))
    free(v11[0]);
  return v5;
}

uint64_t sub_22EAE6248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  BOOL v5;
  _QWORD *v6;
  unsigned int v7;
  uint64_t *v8;
  unint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
    v5 = *(unsigned __int8 *)(v4 + 16) - 27 > 0xFFFFFFFD;
  else
    v5 = 0;
  if (!v5)
    v4 = sub_22F10CF48(v4);
  if ((*(_BYTE *)(a2 + 1) & 3) == 0
    && (*(_QWORD *)(a2 + 8) & 7 | *(_QWORD *)((*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 8)) == (*(_QWORD *)((*(_QWORD *)(v4 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v4 + 24) & 7))
  {
    return a2;
  }
  v6 = *(_QWORD **)a1;
  v7 = *(_DWORD *)(a1 + 176);
  v8 = sub_22EF579A8(*(_QWORD *)(*(_QWORD *)a1 + 88), *(_QWORD *)(v4 + 24), v7);
  v9 = *(unsigned int *)(a1 + 176) | ((unint64_t)*(unsigned int *)(a1 + 176) << 32);
  return sub_22E95ADCC(v6, v7, 146, v8, a2, v9, v9);
}

unint64_t sub_22EAE631C(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t result;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  _QWORD *v41;
  _QWORD *v42;
  int v43;
  unint64_t v44;
  __int128 v48;
  void *v49[2];
  uint64_t v50;
  int v51;
  uint64_t v52;
  void *v53[2];
  void *v54[2];
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  v5 = sub_22E46A3A0(a3);
  if (v5 != v6)
  {
    v7 = (char *)v5;
    v8 = v6;
    v9 = v5;
    do
    {
      v10 = *(_QWORD *)(*(_QWORD *)a1 + 88);
      v11 = *(_QWORD *)(**(_QWORD **)(v9 + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v11 + 8) & 0xF) != 0)
        v11 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v9 + 16));
      v12 = v11 & 0xFFFFFFFFFFFFFFF0;
      if ((a4 & 0xCFFFFFFF8) != 0)
      {
        v53[0] = (void *)a4;
        v13 = sub_22E491354((unsigned int *)v53, v12);
        v14 = sub_22EF5DBC4(v10, v13, (uint64_t)v53[0]);
      }
      else
      {
        v14 = v12 | a4 & 7;
      }
      v15 = sub_22EAE6B58((_QWORD **)a1);
      v17 = v16;
      if (((v15 | v16) & 1) != 0)
      {
        v18 = 1;
        v19 = 1;
      }
      else
      {
        v53[0] = v54;
        v54[0] = v7;
        v53[1] = (void *)0x400000001;
        v20 = *(_QWORD **)a1;
        v21 = *(_QWORD *)(**(_QWORD **)(v9 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v21 + 8) & 0xF) != 0)
          v21 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v9 + 16));
        v18 = sub_22E90092C((uint64_t)v20, v15 & 0xFFFFFFFFFFFFFFFELL, v21 & 0xFFFFFFFFFFFFFFF0, 7, 1, (uint64_t)v53);
        v22 = *(_QWORD **)a1;
        v23 = *(_QWORD *)(**(_QWORD **)(v9 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v23 + 8) & 0xF) != 0)
          v23 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v9 + 16));
        v19 = sub_22E90092C((uint64_t)v22, v17 & 0xFFFFFFFFFFFFFFFELL, v23 & 0xFFFFFFFFFFFFFFF0, 7, 1, (uint64_t)v53);
        if (v53[0] != v54)
          free(v53[0]);
      }
      v24 = sub_22EAE6BFC(a1, v14, v18, v19);
      if (sub_22EAE6144(a2, v24))
        return 1;
      v9 += 24;
      v7 += 24;
    }
    while (v9 != v8);
  }
  result = sub_22EFC3B90(a3);
  if (!result)
    return result;
  v26 = result;
LABEL_20:
  if (sub_22EFC2E8C(v26))
  {
    v27 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v26 + 48) & 0xFFFFFFFFFFFFFFF0));
    if (v27)
    {
      if ((*(_DWORD *)(v27 + 28) & 0x7Fu) - 35 >= 3)
        v28 = 0;
      else
        v28 = v27;
    }
    else
    {
      v28 = 0;
    }
    if ((sub_22EAE631C(a1, a2, v28, a4) & 1) == 0)
      goto LABEL_41;
    return 1;
  }
  if ((*(_BYTE *)(v26 + 68) & 2) != 0)
    v29 = a4 & 0xFFFFFFFE;
  else
    v29 = a4;
  v30 = *(_QWORD *)(v26 + 48);
  if (v29 & 0xFFFFFFF8 | a4 & 0xC00000000)
  {
    v31 = *(_QWORD *)(*(_QWORD *)a1 + 88);
    v53[0] = (void *)(v29 | a4 & 0xFFFFFFFF00000000);
    v32 = sub_22E491354((unsigned int *)v53, v30);
    v33 = sub_22EF5DBC4(v31, v32, (uint64_t)v53[0]);
  }
  else
  {
    v33 = v29 & 7 | (unint64_t)v30;
  }
  v34 = sub_22EAE6B58((_QWORD **)a1);
  v36 = v35;
  if (((v34 | v35) & 1) != 0)
  {
    v37 = 1;
    v38 = 1;
  }
  else
  {
    v39 = ((unint64_t)*(unsigned int *)(v26 + 28) >> 13) & 3 | v26;
    v40 = *(_DWORD *)(a1 + 176);
    v50 = *(_QWORD *)(v26 + 40);
    v51 = v40;
    sub_22EFC6D6C((uint64_t)&v52, v50);
    v41 = *(_QWORD **)a1;
    *(_OWORD *)v53 = 0u;
    *(_OWORD *)v54 = 0u;
    v37 = sub_22EC25974(v41, v34 & 0xFFFFFFFFFFFFFFFELL, 0, v40, (uint64_t)v53, v26, v39, (uint64_t)&v50);
    v42 = *(_QWORD **)a1;
    v43 = *(_DWORD *)(a1 + 176);
    v48 = 0u;
    *(_OWORD *)v49 = 0u;
    v38 = sub_22EC25974(v42, v36 & 0xFFFFFFFFFFFFFFFELL, 0, v43, (uint64_t)&v48, v26, v39, (uint64_t)&v50);
    if (HIDWORD(v49[1]))
      free(v49[0]);
    if (HIDWORD(v54[1]))
      free(v54[0]);
  }
  v44 = sub_22EAE6BFC(a1, v33, v37, v38);
  if (sub_22EAE6144(a2, v44))
    return 1;
LABEL_41:
  while (1)
  {
    v26 = *(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v26)
      return 0;
    if ((*(_DWORD *)(v26 + 28) & 0x7Fu) - 49 < 3)
      goto LABEL_20;
  }
}

unint64_t sub_22EAE6748(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;

  if (((a3 | a4) & 1) != 0)
    return 1;
  v8 = a1[2];
  v9 = (*(_QWORD *)(v8 + 40) & 7) == 6 ? *(_DWORD *)(*(_QWORD *)(v8 + 40) & 0xFFFFFFFFFFFFFFF8) : 0;
  v10 = sub_22EFFBA54(v9);
  v11 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v11 + 17) & 4) != 0
    || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x2C)
  {
    v12 = sub_22ED1767C(*a1, *((unsigned int *)a1 + 44), v10, (uint64_t)(a1 + 4), a3 & 0xFFFFFFFFFFFFFFFELL, a4 & 0xFFFFFFFFFFFFFFFELL, 1, 1, v8);
  }
  else
  {
    v12 = sub_22EB2D0B8();
  }
  v13 = v12;
  if ((v12 & 1) != 0)
    return 1;
  v14 = *((unsigned __int8 *)a1 + 24);
  if ((v14 - 3) < 2)
    return v12 & 0xFFFFFFFFFFFFFFFELL;
  if (v14 != 2)
  {
    v36 = sub_22ED025A8(*a1);
    if ((v36 & 1) != 0)
      return 1;
    else
      return v36 & 0xFFFFFFFFFFFFFFFELL;
  }
  v16 = *(_QWORD *)(*(_QWORD *)(a1[2] + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v16)
    v17 = *(unsigned __int8 *)(v16 + 16) - 27 > 0xFFFFFFFD;
  else
    v17 = 0;
  if (!v17)
    v16 = sub_22F10CF48(v16);
  v18 = *(_QWORD *)(v16 + 24);
  if ((sub_22EAE6248((uint64_t)a1, v13 & 0xFFFFFFFFFFFFFFFELL) & 1) != 0)
    return 1;
  v19 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(*a1 + 88) + 15192), "cmp", 3uLL);
  v20 = *(_QWORD *)(*a1 + 88);
  v21 = *(_QWORD *)(*a1 + 216);
  v22 = *((_DWORD *)a1 + 44);
  v23 = sub_22EF579A8(v20, v18, v22);
  v24 = sub_22EFBB670(v20, v21, v22, v22, v19, v18, (uint64_t)v23, 0);
  sub_22EA28AD8();
  v25 = sub_22E3CD3D4(*(_QWORD *)(*a1 + 88) + 2032, 24, 3);
  v26 = *((_DWORD *)a1 + 44);
  *(_BYTE *)v25 = 12;
  if (byte_255E04EB3)
  {
    v27 = sub_22F0D3748(12);
    ++*((_DWORD *)v27 + 2);
  }
  *(_QWORD *)(v25 + 8) = v24;
  *(_DWORD *)(v25 + 16) = v26;
  *(_DWORD *)(v25 + 20) = v26;
  v28 = sub_22EAE61C4(*a1, *((_DWORD *)a1 + 44), v24);
  if ((v28 & 1) != 0)
    return 1;
  v46 = sub_22EF6A330(*(_QWORD *)(*a1 + 88), *(_QWORD *)(*(_QWORD *)(*a1 + 88) + 16480));
  if (v46 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v45);
  else
    v45 = 0;
  v29 = *(_QWORD *)(*a1 + 88);
  v30 = *(_QWORD *)(v29 + 16480);
  v31 = *((_DWORD *)a1 + 44);
  v32 = sub_22E3CD3D4(v29 + 2032, 32, 3);
  sub_22EFF8F1C(v32, v29, (uint64_t)&v45, v30, v31);
  v33 = *(_QWORD *)(*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v33 + 17) & 4) != 0
    || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v33 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x2C)
  {
    v34 = sub_22ED1767C(*a1, *((unsigned int *)a1 + 44), 15, (uint64_t)(a1 + 4), v28 & 0xFFFFFFFFFFFFFFFELL, v32, 1, 1, a1[2]);
  }
  else
  {
    v34 = sub_22EB2D0B8();
  }
  if ((v34 & 1) != 0
    || (sub_22EB530EC(*a1, *((_DWORD *)a1 + 44), v34 & 0xFFFFFFFFFFFFFFFELL, 0, 0, (uint64_t)&v43), (_BYTE)v44)
    || (v37 = sub_22EAE61C4(*a1, *((_DWORD *)a1 + 44), v24), (v37 & 1) != 0)
    || (v38 = sub_22ED358AC(*a1, *((_DWORD *)a1 + 44), v37 & 0xFFFFFFFFFFFFFFFELL, 0), (v38 & 1) != 0))
  {
    v15 = 1;
  }
  else
  {
    v39 = *a1;
    v40 = *((_DWORD *)a1 + 44);
    v41 = v43;
    v42 = v44;
    v15 = sub_22ED2D6D0(v39, v40, 0, v40, v25, (uint64_t)&v41, v40, (unsigned int *)(v38 & 0xFFFFFFFFFFFFFFFELL), 0, 0);
  }
  if (v46 >= 0x41 && v45)
    MEMORY[0x2348A0E84](v45, 0x1000C8000313F17);
  return v15;
}

unint64_t sub_22EAE6B58(_QWORD **a1)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  if ((*((_DWORD *)v2 + 7) & 0x7Eu) - 54 > 3)
  {
    v3 = sub_22EAE61C4((uint64_t)*a1, *((_DWORD *)a1 + 44), *(_QWORD *)v2[15]);
    v4 = 1;
  }
  else
  {
    v3 = (unint64_t)sub_22EBBC0DC(*a1, *((_DWORD *)a1 + 44));
    if ((v3 & 1) == 0)
      v3 = sub_22EB2EA08((uint64_t)*a1, *((_DWORD *)a1 + 44), 5, v3 & 0xFFFFFFFFFFFFFFFELL);
    v4 = 0;
  }
  sub_22EAE61C4((uint64_t)*a1, *((_DWORD *)a1 + 44), *(_QWORD *)(a1[2][15] + 8 * v4));
  return v3;
}

unint64_t sub_22EAE6BFC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;
  const llvm::APInt *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  char *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (**v35)();
  unsigned int v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (**v40)();
  unsigned int v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  __int128 v62;
  void *v63[2];
  _BYTE *v64;
  uint64_t v65;
  _QWORD *v66;
  __int128 v67;
  _QWORD v68[3];

  v68[1] = *MEMORY[0x24BDAC8D0];
  v8 = sub_22EF5C728(*(_QWORD *)(*(_QWORD *)a1 + 88), a2);
  if (!v8 || *(_BYTE *)(v8 + 16) != 2)
    return sub_22EAE6748((_QWORD *)a1, a2, a3, a4);
  v55 = *(_QWORD *)(v8 + 32);
  v10 = (const llvm::APInt *)(v8 + 40);
  v59 = *(_DWORD *)(v8 + 48);
  if (v59 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v58, v10);
  else
    v58 = *(_QWORD *)v10;
  v11 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v12 = sub_22EF67C8C(v11);
  sub_22EF5CDF0(v11, *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0));
  llvm::APInt::zextOrTrunc((llvm::APInt *)&v58);
  if (v59 >= 0x41 && v58)
    MEMORY[0x2348A0E84](v58, 0x1000C8000313F17);
  v58 = v62;
  v59 = DWORD2(v62);
  v66 = v68;
  v67 = xmmword_22F44E360;
  sub_22F242C48((uint64_t)&v62, (uint64_t)&v66);
  if (v63[1] == v64)
    llvm::raw_ostream::write((llvm::raw_ostream *)&v62, "i");
  else
    *v64++ = 105;
  llvm::raw_ostream::operator<<();
  v57 = (_QWORD *)sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(*(_QWORD *)a1 + 88) + 15192), *(const void **)v65, *(_QWORD *)(v65 + 8));
  llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v62);
  if (v66 != v68)
    free(v66);
  v13 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v14 = *(_QWORD *)(*(_QWORD *)a1 + 216);
  v15 = *(_DWORD *)(a1 + 176);
  v16 = sub_22EF579A8(v13, v12, v15);
  v17 = sub_22EFBB670(v13, v14, v15, v15, (uint64_t)v57, v12, (uint64_t)v16, 0);
  v61 = sub_22EF5CDF0(*(_QWORD *)(*(_QWORD *)a1 + 88), *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0));
  if (v61 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v60);
  else
    v60 = 0;
  v18 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v19 = *(_DWORD *)(a1 + 176);
  v20 = sub_22E3CD3D4(v18 + 2032, 32, 3);
  v54 = v12;
  sub_22EFF8F1C(v20, v18, (uint64_t)&v60, v12, v19);
  sub_22EFBC9E4(v17, v20);
  v21 = sub_22E3CD3D4(*(_QWORD *)(*(_QWORD *)a1 + 88) + 2032, 24, 3);
  v22 = *(_DWORD *)(a1 + 176);
  *(_BYTE *)v21 = 12;
  if (byte_255E04EB3)
  {
    v23 = sub_22F0D3748(12);
    ++*((_DWORD *)v23 + 2);
  }
  *(_QWORD *)(v21 + 8) = v17;
  *(_DWORD *)(v21 + 16) = v22;
  *(_DWORD *)(v21 + 20) = v22;
  v53 = v21;
  v24 = *(_QWORD *)a1;
  v25 = *(_DWORD *)(a1 + 176);
  v62 = 0u;
  *(_OWORD *)v63 = 0u;
  v66 = v57;
  LODWORD(v67) = v25;
  sub_22EFC6D6C((uint64_t)&v67 + 8, (uint64_t)v57);
  v56 = v17;
  sub_22EB24A3C(v24, (uint64_t *)&v62, (uint64_t)&v66, v17, 0, 0, 0);
  if (HIDWORD(v63[1]))
    free(v63[0]);
  v26 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v27 = *(_DWORD *)(a1 + 176);
  v28 = sub_22E3CD3D4(v26 + 2032, 32, 3);
  sub_22EFF8F1C(v28, v26, (uint64_t)&v58, v54, v27);
  v29 = sub_22EB2D0B8();
  v30 = *(_QWORD *)a1;
  v31 = *(_DWORD *)(a1 + 176);
  v62 = 0u;
  *(_OWORD *)v63 = 0u;
  v66 = v57;
  LODWORD(v67) = v31;
  sub_22EFC6D6C((uint64_t)&v67 + 8, (uint64_t)v57);
  v32 = sub_22EB24A3C(v30, (uint64_t *)&v62, (uint64_t)&v66, v56, 0, 0, 0);
  if (HIDWORD(v63[1]))
    free(v63[0]);
  v33 = sub_22EB2EA08(v30, v31, 2, v32 & 0xFFFFFFFFFFFFFFFELL);
  if ((a3 & 1) != 0)
  {
    v38 = 1;
  }
  else
  {
    v34 = *(_QWORD *)a1;
    v35 = (uint64_t (**)())(a3 & 0xFFFFFFFFFFFFFFFELL);
    v36 = *(_DWORD *)(a1 + 176);
    v62 = 0u;
    *(_OWORD *)v63 = 0u;
    v66 = v57;
    LODWORD(v67) = v36;
    sub_22EFC6D6C((uint64_t)&v67 + 8, (uint64_t)v57);
    v37 = sub_22EB24A3C(v34, (uint64_t *)&v62, (uint64_t)&v66, v56, 0, 0, 0);
    if (HIDWORD(v63[1]))
      free(v63[0]);
    v38 = sub_22EB2AFE4(v34, v35, v36, (void *)(v37 & 0xFFFFFFFFFFFFFFFELL), *(_DWORD *)(a1 + 176));
  }
  if ((a4 & 1) != 0)
  {
    v43 = 1;
  }
  else
  {
    v39 = *(_QWORD *)a1;
    v40 = (uint64_t (**)())(a4 & 0xFFFFFFFFFFFFFFFELL);
    v41 = *(_DWORD *)(a1 + 176);
    v62 = 0u;
    *(_OWORD *)v63 = 0u;
    v66 = v57;
    LODWORD(v67) = v41;
    sub_22EFC6D6C((uint64_t)&v67 + 8, (uint64_t)v57);
    v42 = sub_22EB24A3C(v39, (uint64_t *)&v62, (uint64_t)&v66, v56, 0, 0, 0);
    if (HIDWORD(v63[1]))
      free(v63[0]);
    v43 = sub_22EB2AFE4(v39, v40, v41, (void *)(v42 & 0xFFFFFFFFFFFFFFFELL), *(_DWORD *)(a1 + 176));
  }
  ++*(_DWORD *)(a1 + 180);
  v44 = sub_22EAE6BFC(a1, v55, v38, v43);
  v45 = v44;
  --*(_DWORD *)(a1 + 180);
  if ((v44 & 1) != 0
    || (*(_BYTE *)(v44 & 0xFFFFFFFFFFFFFFFELL) + 21) >= 0x7Bu
    && (v45 = sub_22EAE72A8(a1, v44 & 0xFFFFFFFFFFFFFFFELL), (v45 & 1) != 0))
  {
    v51 = 1;
  }
  else
  {
    v46 = *(_QWORD *)a1;
    v47 = *(_DWORD *)(a1 + 176);
    sub_22EB530EC(*(_QWORD *)a1, v47, v29 & 0xFFFFFFFFFFFFFFFELL, 0, 0, (uint64_t)&v62);
    v48 = *(_QWORD *)a1;
    if ((v33 & 0xFFFFFFFFFFFFFFFELL) != 0)
    {
      sub_22EFF605C(v33 & 0xFFFFFFFFFFFFFFFELL);
      v50 = v49;
    }
    else
    {
      v50 = 0;
    }
    v52 = sub_22EBCF22C(v48, v33 & 0xFFFFFFFFFFFFFFFELL, v50, 1, 0);
    v51 = sub_22ED31008(v46, v47, v47, v53, (uint64_t)&v62, v52 & 0xFFFFFFFFFFFFFFFELL, *(_DWORD *)(a1 + 176), (_DWORD *)(v45 & 0xFFFFFFFFFFFFFFFELL));
  }
  if (v61 >= 0x41 && v60)
    MEMORY[0x2348A0E84](v60, 0x1000C8000313F17);
  if (v59 >= 0x41)
  {
    if (v58)
      MEMORY[0x2348A0E84](v58, 0x1000C8000313F17);
  }
  return v51;
}

uint64_t sub_22EAE72A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  _BYTE v9[24];

  if ((a2 & 1) != 0)
    return 1;
  v3 = sub_22EB2EA08(*(_QWORD *)a1, *(_DWORD *)(a1 + 176), 9, a2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v3 & 1) != 0)
    return 1;
  v4 = sub_22EBBA59C(*(_QWORD *)a1, *(_DWORD *)(a1 + 176), 136);
  v5 = sub_22ED358AC(*(_QWORD *)a1, *(_DWORD *)(a1 + 176), v4 & 0xFFFFFFFFFFFFFFFELL, 0);
  if ((v5 & 1) != 0)
    return 1;
  v6 = *(_QWORD *)a1;
  v7 = *(_DWORD *)(a1 + 176);
  sub_22EB530EC(*(_QWORD *)a1, v7, v3 & 0xFFFFFFFFFFFFFFFELL, 0, 0, (uint64_t)v9);
  return sub_22ED2D6D0(v6, v7, 0, v7, 0, (uint64_t)v9, *(_DWORD *)(a1 + 176), (unsigned int *)(v5 & 0xFFFFFFFFFFFFFFFELL), 0, 0);
}

uint64_t sub_22EAE7390(uint64_t a1)
{
  int32x2_t *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v10;
  uint64_t v11;

  if (*(_BYTE *)(a1 + 48))
    sub_22EE013E8(*(int32x2_t **)a1);
  v2 = *(int32x2_t **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 216);
  if (v3)
    v4 = (*(_WORD *)(v3 + 8) & 0x7Eu) - 58 >= 0xFFFFFFFA;
  else
    v4 = 0;
  if (v4)
  {
    *(_QWORD *)(v3 + 8) &= ~0x800000000uLL;
    v2 = *(int32x2_t **)a1;
  }
  sub_22EB48E64(v2);
  sub_22E904AD8(*(_QWORD *)a1, 0, 0, 0, (uint64_t *)&v10);
  v5 = v10;
  v10 = 0;
  if (v5)
  {
    if ((v5[8] & 7) != 0 || *(_QWORD *)(v11 + 1888))
      (*(void (**)(_BYTE *))(*(_QWORD *)v5 + 8))(v5);
    else
      *(_QWORD *)(v11 + 1888) = v5;
  }
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(v7 + 216) = v6;
    v8 = *(_QWORD *)(a1 + 32);
    *(_QWORD *)(v7 + 3200) = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(v7 + 10288) = v8;
    LODWORD(v8) = *(_DWORD *)(a1 + 44);
    *(_DWORD *)(v7 + 1944) = *(_DWORD *)(a1 + 40);
    *(_DWORD *)(v7 + 2192) = v8;
    *(_QWORD *)(a1 + 16) = 0;
  }
  return a1;
}

BOOL sub_22EAE7478(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  int v5;

  v1 = *(_QWORD *)(a1 + 48);
  if (!v1)
    return 0;
  if ((*(_BYTE *)(v1 + 3) & 0xFE) != 0)
    return 1;
  v3 = *(_QWORD *)(v1 + 32);
  if (v3 < 8)
    return 0;
  v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  if ((v3 & 4) != 0 && v4)
  {
    v5 = *(_DWORD *)(v4 + 8);
    if (!v5)
      return 0;
  }
  else
  {
    if ((v3 & 4) == 0)
      return 1;
    v5 = *(_DWORD *)(v4 + 8);
  }
  return v5 != 0;
}

unsigned int *sub_22EAE74D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v7;
  unsigned int *result;
  uint64_t v9;
  unsigned int v10[24];
  _QWORD v11[2];

  v11[0] = a3;
  v11[1] = a4;
  sub_22E8FCA40(*(_QWORD **)(a1 + 8), a5, *(_DWORD *)a1, 0, (uint64_t)v10);
  v7 = sub_22F2F2210((uint64_t)v10, (uint64_t)v11);
  LODWORD(v9) = a5;
  HIDWORD(v9) = a5;
  sub_22E8906A0(v7, &v9);
  result = sub_22E903BEC(v10);
  **(_BYTE **)(a1 + 16) = 1;
  return result;
}

void sub_22EAE7548()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22EAE755C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_22F2E6D78(a2);
  if (result)
    return (*(_DWORD *)(result + 28) & 0x7E) == 16;
  return result;
}

__n128 sub_22EAE7588@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;

  v4 = operator new();
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v4 + 8) = result;
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)v4 = &off_24FAB7DF0;
  *a2 = v4;
  return result;
}

void sub_22EAE75E0()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22EAE75F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unint64_t v10;
  int i;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  BOOL v28;
  char v29;
  uint64_t v30;

  result = sub_22F2E6D78(a2);
  if (!result)
    return result;
  v5 = result;
  if ((*(_DWORD *)(result + 28) & 0x7F) == 0x10)
    return 0;
  if (*(_BYTE *)(a2 + 60) && *(_QWORD *)(a2 + 8) == 0)
    return 0;
  v7 = *(_QWORD *)(a1 + 48);
  v8 = (*(_DWORD *)(result + 28) & 0x7F) - 38;
  if (!v7)
  {
    if (v8 >= 0xFFFFFFFD && sub_22EFC3A88(result))
      return 0;
    goto LABEL_43;
  }
  if (v8 < 0xFFFFFFFD || !sub_22EFC3A88(result))
  {
    v16 = *(_QWORD *)(v5 + 16);
    v17 = v16 & 0xFFFFFFFFFFFFFFF8;
    if ((v16 & 4) != 0)
      v17 = *(_QWORD *)v17;
    result = 0;
    if (!v17 || (*(_WORD *)(v17 + 8) & 0x7Fu) - 38 < 0xFFFFFFFD)
      return result;
    v30 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)(v17 - 64) + 32))(v17 - 64);
    if ((sub_22EFB3B2C(v7, (uint64_t (*)(uint64_t, uint64_t))sub_22EFB5694, (uint64_t)&v30) & 1) != 0)
      return 0;
LABEL_43:
    v18 = (*(_DWORD *)(v5 + 28) & 0x7F) - 33;
    if (*(_BYTE *)(a1 + 32))
      v19 = v18 >= 0xA;
    else
      v19 = 0;
    result = !v19;
    if (!*(_BYTE *)(a1 + 32) && v18 <= 9)
      return *(_BYTE *)(a1 + 33) == 0;
    return result;
  }
  v9 = *(_QWORD *)(v5 + 16);
  v10 = v9 & 0xFFFFFFFFFFFFFFF8;
  if ((v9 & 4) != 0)
    v10 = *(_QWORD *)v10;
  for (i = *(_WORD *)(v10 + 8) & 0x7F; i != 83; i = *(_WORD *)(v10 + 8) & 0x7F)
  {
    v12 = -40;
    if (i > 70)
    {
      if (i == 71)
      {
        v12 = -56;
      }
      else if (i != 81)
      {
        goto LABEL_23;
      }
    }
    else
    {
      if (i > 0x18)
        goto LABEL_22;
      if (i == 16)
        goto LABEL_16;
      if (((1 << i) & 0x1066) != 0)
        goto LABEL_29;
      if (i == 24)
      {
LABEL_16:
        v12 = -48;
      }
      else
      {
LABEL_22:
        if (i != 70)
        {
LABEL_23:
          v13 = i - 52;
          if ((i - 33) >= 5)
            v14 = -48;
          else
            v14 = -64;
          if (v13 >= 6)
            v12 = v14;
          else
            v12 = -72;
          goto LABEL_29;
        }
        v12 = -64;
      }
    }
LABEL_29:
    v15 = *(_QWORD *)(v10 + v12 + 16);
    v10 = v15 & 0xFFFFFFFFFFFFFFF8;
    if ((v15 & 4) != 0)
      v10 = *(_QWORD *)v10;
  }
  v20 = *(_QWORD *)(v10 + 48);
  if ((*(_BYTE *)(*(_QWORD *)(v20 + 2000) + 1) & 2) == 0)
    return 0;
  v21 = sub_22EF6477C(v20, v5);
  v22 = (uint64_t *)(*(_BYTE *)(a2 + 60) ? a2 + 8 : a1 + 40);
  v23 = *v22;
  if ((*(_BYTE *)(v23 + 8) & 4) == 0)
    return 0;
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24
    || *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF0) + 8) != (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8) | v21 & 7))
  {
    return 0;
  }
  v29 = 0;
  v25 = *(_QWORD *)(a1 + 48);
  v26 = sub_22EF6477C(v20, v5);
  v27 = sub_22EAC5B18(v25, v26, &v29);
  result = 0;
  if (v27)
    v28 = 0;
  else
    v28 = v29 == 0;
  if (!v28)
    goto LABEL_43;
  return result;
}

__n128 sub_22EAE78B4@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;

  v4 = operator new();
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)v4 = &off_24FAB7E28;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v4 + 32) = result;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(a1 + 48);
  *a2 = v4;
  return result;
}

BOOL sub_22EAE791C(uint64_t a1, unint64_t a2)
{
  if (*(_BYTE *)(a1 + 164))
    return 1;
  if (*(_BYTE *)(a1 + 161) && sub_22EFB948C(a2) >= 3)
    return sub_22EFB9D84(a2) == 0;
  return 0;
}

uint64_t sub_22EAE797C(uint64_t a1, _QWORD *a2, int a3, uint64_t a4)
{
  uint64_t v5;
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v26[24];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)a1 = a2;
  *(_DWORD *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = 0;
  v5 = a1 + 16;
  *(_QWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  v30 = 0;
  if (a4)
  {
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v12 = a4;
    do
    {
      v13 = v12;
      do
        v13 = *(_QWORD *)(v13 + 72);
      while (v13 && (*(_DWORD *)(v13 + 28) & 0x7E) == 0x2E);
      v14 = sub_22F0AABF8(*(_QWORD *)(v13 + 64));
      v29 = 0;
      v15 = *(_QWORD *)(v12 + 88);
      if (!v15)
        v15 = *(_QWORD *)(v12 + 64);
      v16 = *(_QWORD *)(v15 + 16);
      v17 = (_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
      if ((v16 & 4) != 0)
        v17 = (_QWORD *)*v17;
      if (v17)
        v18 = (uint64_t)(v17 - 8);
      else
        v18 = 0;
      v29 = v18;
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 32))(v14);
      v20 = *(_QWORD *)(v12 + 80);
      v27 = v19;
      v28 = v20;
      sub_22F2543D4((uint64_t)v26, v5, &v27, &v28);
      if ((*(_BYTE *)(v12 + 96) & 1) != 0)
      {
        v23 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v29 + 32))(v29);
        v24 = *(_QWORD *)(v12 + 88);
        v27 = v23;
        v28 = v24;
        sub_22F2543D4((uint64_t)v26, v5, &v27, &v28);
      }
      if (v30)
      {
        if (v30 != v29 && (*(_BYTE *)(a4 + 28) & 0x80) == 0)
        {
          if ((v8 & 1) == 0)
          {
            sub_22E8FCA40(a2, a3, 0xA42u, 0, (uint64_t)v26);
            v27 = *(_QWORD *)(a4 + 64);
            sub_22E890024((uint64_t)v26, &v27);
            sub_22E903BEC(v26);
            sub_22E8FCA40(a2, *(_DWORD *)(v9 + 24), 0x152Fu, 0, (uint64_t)v26);
            sub_22E890024((uint64_t)v26, &v30);
            sub_22E903BEC(v26);
          }
          v21 = v12;
          do
            v21 = *(_QWORD *)(v21 + 72);
          while (v21 && (*(_DWORD *)(v21 + 28) & 0x7E) == 0x2E);
          sub_22E8FCA40(a2, *(_DWORD *)(v21 + 24), 0x152Fu, 0, (uint64_t)v26);
          sub_22E890024((uint64_t)v26, &v29);
          sub_22E903BEC(v26);
          v8 = 1;
        }
      }
      else
      {
        v30 = v29;
        v9 = v12;
        do
          v9 = *(_QWORD *)(v9 + 72);
        while (v9 && (*(_DWORD *)(v9 + 28) & 0x7E) == 0x2E);
      }
      if ((*(_BYTE *)(v12 + 48) & 3) != 0)
      {
        if (v10)
          break;
        v10 = 1;
      }
      v22 = sub_22E3CD31C((uint64_t *)(v12 + 48), v12);
      if (v22 == a4)
        break;
      v12 = v22;
    }
    while (v22);
    if ((v8 & 1) != 0)
      sub_22EFC77E8(a4, 1);
  }
  return a1;
}

void sub_22EAE7BEC()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22EAE7C00(uint64_t a1, uint64_t a2, int a3)
{
  return sub_22F32D524(a2, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), 1, a3, 0);
}

void sub_22EAE7C20()
{
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22EAE7C34()
{
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22EAE7C48(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;

  v5 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), a2, a3);
  return sub_22E90092C(a2, v5, *(_QWORD *)(a1 + 16), 8, *(_DWORD *)(a1 + 24), *(_QWORD *)(a1 + 32)) & 0xFFFFFFFFFFFFFFFELL;
}

void sub_22EAE7CA4()
{
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22EAE7CB8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;

  v5 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), a2, a3);
  return sub_22EB2EA08(a2, a3, 5, v5) & 0xFFFFFFFFFFFFFFFELL;
}

unint64_t sub_22EAE7D04(_QWORD *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  size_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  unint64_t v45;
  unsigned int v46;
  _QWORD v47[3];
  unint64_t v48;
  void *v49;
  uint64_t v50;
  _BYTE v51[64];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  unsigned int v57;
  _QWORD v58[3];
  __int16 v59;
  int v60;
  char v61;
  uint64_t v62;

  v62 = *MEMORY[0x24BDAC8D0];
  v10 = a1[11];
  v44 = sub_22EF67C8C(v10);
  v11 = sub_22EF5CDF0(v10, *(_QWORD *)(v44 & 0xFFFFFFFFFFFFFFF0));
  sub_22EF5CCD0(a1[11], *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v48);
  v46 = v11;
  if (v11 > 0x40)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v45);
  }
  else
  {
    v12 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v11;
    if (!v11)
      v12 = 0;
    v45 = v12 & v48;
  }
  v13 = a2;
  v14 = (*(uint64_t (**)(uint64_t, _QWORD *, _QWORD))(*(_QWORD *)a5 + 16))(a5, a1, a2);
  v15 = a1[11];
  v16 = sub_22EF5B848(v15, *(_QWORD *)(v14 + 8), 0);
  if (a1[162] == a1[161])
  {
    v17 = 0;
LABEL_8:
    v18 = 24;
    goto LABEL_10;
  }
  v17 = a1[162];
  if (!HIDWORD(v17))
    goto LABEL_8;
  v18 = 32;
LABEL_10:
  v19 = sub_22E3CD3D4(v15 + 2032, v18, 3);
  sub_22F0031D0(v19, v15, v14, 4, v16, 0, 0, a2, 0, v17);
  v20 = (*(uint64_t (**)(uint64_t, _QWORD *, _QWORD))(*(_QWORD *)a4 + 16))(a4, a1, a2);
  v21 = a1[11];
  v22 = sub_22EF5B848(v21, *(_QWORD *)(v20 + 8), 0);
  if (a1[162] == a1[161])
  {
    v23 = 0;
  }
  else
  {
    v23 = a1[162];
    if (HIDWORD(v23))
    {
      v24 = 32;
      goto LABEL_15;
    }
  }
  v24 = 24;
LABEL_15:
  v25 = sub_22E3CD3D4(v21 + 2032, v24, 3);
  sub_22F0031D0(v25, v21, v20, 4, v22, 0, 0, a2, 0, v23);
  while (1)
  {
    v26 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
    if (v26)
      v27 = (*(_DWORD *)(v26 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v27 = 0;
    if (v27)
    {
      v29 = v26;
      goto LABEL_24;
    }
    v28 = *(_QWORD *)(*(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(v28 + 16) & 0xFEu) - 2 > 3)
      break;
    v29 = sub_22F10CF48(v26);
    if (!v29)
    {
      v28 = *(_QWORD *)(*(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF0);
      v41 = *(unsigned __int8 *)(v28 + 16);
      goto LABEL_26;
    }
LABEL_24:
    a3 = *(_QWORD *)(v29 + 32);
  }
  v41 = *(_DWORD *)(v28 + 16);
LABEL_26:
  v30 = "__builtin_memcpy";
  if (v41 == 45 && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v28 + 24)) + 75) & 2) != 0)
    v30 = "__builtin_objc_memmove_collectable";
  v31 = strlen(v30);
  v32 = sub_22E3CB704(*(llvm::StringMapImpl **)(a1[11] + 15192), v30, v31);
  v48 = 0;
  v49 = v51;
  v50 = 0x800000000;
  v52 = 0;
  v53 = 0;
  v54 = 0;
  v55 = a1;
  v56 = v32;
  v57 = a2;
  sub_22EFC6D6C((uint64_t)v58, v32);
  v58[1] = 0;
  v58[2] = 0;
  v59 = 0;
  v60 = 257;
  v61 = 0;
  sub_22EC56024((uint64_t)&v48);
  v33 = 1;
  sub_22EC63520(a1, &v48, a1[418], 1, 0);
  if ((_DWORD)v48 == 2)
  {
    v34 = *(_QWORD *)v49 & 0xFFFFFFFFFFFFFFFCLL;
    v35 = *(_DWORD *)(v34 + 28);
    if ((v35 & 0x7Fu) <= 0x2F && ((1 << (v35 & 0x7F)) & 0xC00000060000) != 0)
    {
      v34 = sub_22EFBAEA4(*(_QWORD *)v49 & 0xFFFFFFFFFFFFFFFCLL);
      v35 = *(_DWORD *)(v34 + 28);
    }
    if ((v35 & 0x7Eu) - 52 <= 5)
    {
      v38 = sub_22F32D524((uint64_t)a1, v34, *(_QWORD *)(a1[11] + 16864), 0, v13, 0);
      v47[0] = v25;
      v47[1] = v19;
      v39 = a1[11];
      v40 = sub_22E3CD3D4(v39 + 2032, 32, 3);
      v47[2] = sub_22EFF8F1C(v40, v39, (uint64_t)&v45, v44, v13);
      LOWORD(v43) = 0;
      v33 = sub_22EB1CFA4(a1, 0, v38 & 0xFFFFFFFFFFFFFFFELL, v13, v47, 3, v13, 0, v43) & 0xFFFFFFFFFFFFFFFELL;
    }
    else
    {
      v33 = 1;
    }
  }
  if (BYTE1(v60))
  {
    if ((_DWORD)v48 == 5)
    {
      sub_22EC64D18(v55, (uint64_t)&v48);
    }
    else if (v53 && (*(_DWORD *)(v55[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v55, (uint64_t)&v48);
    }
  }
  if (v52)
  {
    v42 = sub_22EC6CBD0(v52);
    MEMORY[0x2348A0E9C](v42, 0x10E0C409F09D3C3);
  }
  if (v49 != v51)
    free(v49);
  if (v46 >= 0x41 && v45)
    MEMORY[0x2348A0E84](v45, 0x1000C8000313F17);
  return v33;
}

unint64_t sub_22EAE8208(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, void *a5, unsigned int a6, uint64_t a7, int a8)
{
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  BOOL v28;
  char *v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t (***v39)();
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _WORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void **v59;
  uint64_t v60;
  _DWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _DWORD *v64;
  uint64_t v65;
  _DWORD *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  unsigned int v75;
  BOOL v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v85;
  uint64_t v87;
  unsigned int v88;
  unsigned int v90;
  uint64_t v92;
  _BYTE v93[24];
  uint64_t v94;
  unsigned int v95;
  _QWORD v96[2];
  uint64_t (**v97)();
  uint64_t (***v98)();
  uint64_t v99;
  unsigned int v100;
  __int128 v101;
  uint64_t (***v102)();
  void *v103[4];
  uint64_t (**v104)();
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  int v115;
  _QWORD v116[3];
  __int16 v117;
  int v118;
  char v119;
  uint64_t v120;

  v120 = *MEMORY[0x24BDAC8D0];
  v16 = a3 & 0xFFFFFFFFFFFFFFF0;
  v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v17 && *(_BYTE *)(v17 + 16) == 45)
  {
    v18 = sub_22F114198(*(_QWORD *)(v17 + 24));
    v19 = (a1[11] + 15520) | 6;
    v20 = a2;
    v104 = 0;
    v105 = &v107;
    v106 = 0x800000000;
    v110 = 0;
    v111 = 0;
    v112 = 0;
    v113 = a1;
    v114 = v19;
    v115 = a2;
    sub_22EFC6D6C((uint64_t)v116, v19);
    v116[1] = 0;
    v116[2] = 0;
    v117 = 0;
    v118 = 257;
    v119 = 0;
    sub_22EC56024((uint64_t)&v104);
    if (v18)
      v21 = v18 + 64;
    else
      v21 = 0;
    sub_22EC611AC(a1, &v104, v21, 0);
    if ((*(_BYTE *)(a1[9] + 1) & 2) == 0 && (_DWORD)v106)
    {
      v22 = 1;
      v23 = (char *)v105;
LABEL_9:
      v24 = v23;
      do
      {
        v25 = *(_QWORD *)v24;
        v24 += 8;
        v26 = v25 & 0xFFFFFFFFFFFFFFFCLL;
        v27 = (*(_DWORD *)((v25 & 0xFFFFFFFFFFFFFFFCLL) + 28) & 0x7E) - 58;
        v28 = (v25 & 0xFFFFFFFFFFFFFFFCLL) != 0 && v27 >= 0xFFFFFFFC;
        if (!v28 || (sub_22EFD3B9C(v26) & 1) == 0 && ((a7 & 1) != 0 || !sub_22EFD3F30(v26)))
        {
          v22 = 0;
          v29 = (char *)v105;
          v30 = *((_QWORD *)v105 + v106 - 1);
          LODWORD(v106) = v106 - 1;
          v31 = v106;
          *(_QWORD *)v23 = v30;
          if (v23 != &v29[8 * v31])
            goto LABEL_9;
          goto LABEL_28;
        }
        v23 = v24;
      }
      while (v24 != (char *)v105 + 8 * v106);
      if ((v22 & 1) != 0)
        goto LABEL_29;
LABEL_28:
      sub_22EA3DA00((uint64_t)&v104);
    }
LABEL_29:
    if (a6 && (_DWORD)v106)
    {
      v37 = v105;
      v38 = 8 * v106;
      do
      {
        if ((*v37 & 3) == 1)
          *v37 &= 0xFFFFFFFFFFFFFFFCLL;
        ++v37;
        v38 -= 8;
      }
      while (v38);
    }
    memset(v103, 0, sizeof(v103));
    v39 = *(uint64_t (****)())(*(_QWORD *)(*(_QWORD *)v16 + 8) & 0xFFFFFFFFFFFFFFF0);
    v40 = a1[11];
    v101 = xmmword_22F4559B0;
    v102 = v39;
    v41 = sub_22F0AA9D0(v40, (uint64_t)&v101);
    v42 = (void *)(a2 | (unint64_t)(a2 << 32));
    sub_22F0AB9D8((uint64_t)&v103[1], v40, v41, (unint64_t)v42);
    v103[0] = v42;
    v43 = (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(*(_QWORD *)a4 + 16))(a4, a1, v20);
    v36 = 1;
    v44 = sub_22EC24AB8((uint64_t)a1, v43, a3, v20, 0, (uint64_t *)v103, 0, 0, (uint64_t)&v104, 0, 0, 1, 0);
    if ((v44 & 1) == 0)
    {
      *(_QWORD *)&v101 = (*(uint64_t (**)(void *, _QWORD *, uint64_t))(*(_QWORD *)a5 + 16))(a5, a1, v20);
      LOWORD(v83) = 0;
      v36 = 1;
      v45 = sub_22ED199E0(a1, 0, v44 & 0xFFFFFFFFFFFFFFFELL, v20, &v101, 1, v20, 0, v83);
      v46 = v45;
      if ((v45 & 1) == 0)
      {
        v47 = v45 & 0xFFFFFFFFFFFFFFFELL;
        if (*(unsigned __int8 *)(v46 & 0xFFFFFFFFFFFFFFFELL) == 140
          && (v48 = sub_22F060FB4(v47), a8)
          && (*(_QWORD *)(v48 + 80) & 0x800000) != 0)
        {
          v36 = 0;
        }
        else
        {
          v36 = sub_22ED2B1FC((uint64_t)a1, v46, 1);
        }
      }
    }
    if (HIDWORD(v103[3]))
      free(v103[2]);
    if (BYTE1(v118))
    {
      if ((_DWORD)v104 == 5)
      {
        sub_22EC64D18(v113, (uint64_t)&v104);
      }
      else if (v111 && (*(_DWORD *)(v113[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v113, (uint64_t)&v104);
      }
    }
    if (v110)
    {
      v82 = sub_22EC6CBD0(v110);
      MEMORY[0x2348A0E9C](v82, 0x10E0C409F09D3C3);
    }
    if (v105 != &v107)
      free(v105);
    return v36;
  }
  v32 = sub_22EF5C728(a1[11], a3);
  if (v32)
  {
    v33 = v32;
    if (*(_BYTE *)(v32 + 16) == 2)
    {
      v87 = sub_22EF67C8C(a1[11]);
      v103[0] = &v103[3];
      *(_OWORD *)&v103[1] = xmmword_22F44E360;
      sub_22F242C48((uint64_t)&v104, (uint64_t)v103);
      v49 = (_WORD *)v108;
      if ((unint64_t)(v107 - v108) > 2)
      {
        *(_BYTE *)(v108 + 2) = 105;
        *v49 = 24415;
        v108 += 3;
      }
      else
      {
        llvm::raw_ostream::write((llvm::raw_ostream *)&v104, "__i");
      }
      v90 = a6;
      v92 = a4;
      llvm::raw_ostream::operator<<();
      v85 = sub_22E3CB704(*(llvm::StringMapImpl **)(a1[11] + 15192), *(const void **)v109, *(_QWORD *)(v109 + 8));
      llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v104);
      if (v103[0] != &v103[3])
        free(v103[0]);
      v50 = a1[11];
      v51 = a1[27];
      v52 = sub_22EF579A8(v50, v87, a2);
      v88 = a2;
      v53 = sub_22EFBB670(v50, v51, a2, a2, v85, v87, (uint64_t)v52, 0);
      v100 = sub_22EF5CDF0(a1[11], *(_QWORD *)(v87 & 0xFFFFFFFFFFFFFFF0));
      v54 = (void *)v53;
      if (v100 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v99);
      else
        v99 = 0;
      v55 = a1[11];
      v56 = sub_22E3CD3D4(v55 + 2032, 32, 3);
      sub_22EFF8F1C(v56, v55, (uint64_t)&v99, v87, a2);
      sub_22EFBC9E4((uint64_t)v54, v56);
      v104 = &off_24FAB7E60;
      v105 = v54;
      v106 = v87;
      v97 = &off_24FAB7F00;
      v98 = &v104;
      v57 = sub_22E3CD3D4(a1[11] + 2032, 24, 3);
      *(_BYTE *)v57 = 12;
      if (byte_255E04EB3)
      {
        v58 = sub_22F0D3748(12);
        ++*((_DWORD *)v58 + 2);
      }
      *(_QWORD *)(v57 + 8) = v54;
      *(_DWORD *)(v57 + 16) = a2;
      *(_DWORD *)(v57 + 20) = a2;
      v103[0] = &off_24FAB7F28;
      v103[1] = a5;
      v103[2] = &v97;
      v96[0] = &off_24FAB7F78;
      v96[1] = v103;
      if ((_DWORD)a7)
        v59 = v103;
      else
        v59 = (void **)v96;
      *(_QWORD *)&v101 = &off_24FAB7F28;
      *((_QWORD *)&v101 + 1) = v92;
      v102 = &v97;
      v60 = sub_22EAE8208(a1, a2, *(_QWORD *)(v33 + 32), &v101, v59, v90, a7, (a8 + 1));
      v36 = v60;
      if ((v60 & 1) != 0)
        goto LABEL_68;
      v61 = (_DWORD *)(v60 & 0xFFFFFFFFFFFFFFFELL);
      if ((v60 & 0xFFFFFFFFFFFFFFFELL) == 0)
        goto LABEL_68;
      sub_22EF5CDF0(a1[11], *(_QWORD *)(v87 & 0xFFFFFFFFFFFFFFF0));
      llvm::APInt::zextOrTrunc((llvm::APInt *)(v33 + 40));
      v62 = a1[11];
      v63 = ((uint64_t (*)(uint64_t (***)(), _QWORD *, _QWORD))(*v98)[2])(v98, a1, a2);
      v64 = (_DWORD *)(sub_22EB1A358(a1, v63, 0) & 0xFFFFFFFFFFFFFFFELL);
      v65 = a1[11];
      v66 = (_DWORD *)sub_22E3CD3D4(v65 + 2032, 32, 3);
      sub_22EFF8F1C((uint64_t)v66, v65, (uint64_t)&v94, v87, a2);
      v67 = *(_QWORD *)(a1[11] + 16400);
      if (a1[162] == a1[161])
      {
        v68 = 0;
      }
      else
      {
        v68 = a1[162];
        if (HIDWORD(v68))
        {
          v69 = 40;
LABEL_77:
          v70 = (int *)sub_22E3CD3D4(v62 + 2032, v69, 3);
          sub_22F002E24(v70, v71, v64, v66, 15, v67, 0, 0, v88, v68);
          v72 = a1[11];
          v73 = 1;
          v74 = sub_22F32D524((uint64_t)a1, (uint64_t)v105, v106, 1, v88, 0);
          v75 = v95;
          if (v95)
          {
            if (v95 > 0x40)
              v76 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)&v94) == v75;
            else
              v76 = v94 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v95;
            v73 = v76;
          }
          if (a1[162] == a1[161])
          {
            v77 = 0;
          }
          else
          {
            v77 = a1[162];
            if (HIDWORD(v77))
            {
              v78 = 32;
              goto LABEL_89;
            }
          }
          v78 = 24;
LABEL_89:
          v79 = sub_22E3CD3D4(v72 + 2032, v78, 3);
          sub_22F0031D0(v79, v72, v74, 2, v87, 1, 0, v88, v73, v77);
          sub_22EB530EC((unint64_t)a1, v88, (uint64_t)v70, 0, 0, (uint64_t)v93);
          sub_22EFF605C(v79);
          v81 = sub_22EBCF22C((uint64_t)a1, v79, v80, 1, 0);
          v36 = sub_22ED31008((uint64_t)a1, v88, v88, v57, (uint64_t)v93, v81 & 0xFFFFFFFFFFFFFFFELL, v88, v61);
          if (v95 >= 0x41 && v94)
            MEMORY[0x2348A0E84](v94, 0x1000C8000313F17);
LABEL_68:
          if (v100 >= 0x41 && v99)
            MEMORY[0x2348A0E84](v99, 0x1000C8000313F17);
          return v36;
        }
      }
      v69 = 32;
      goto LABEL_77;
    }
  }
  (*(void (**)(uint64_t, _QWORD *, _QWORD))(*(_QWORD *)a4 + 16))(a4, a1, a2);
  (*(void (**)(void *, _QWORD *, _QWORD))(*(_QWORD *)a5 + 16))(a5, a1, a2);
  v34 = sub_22EB2D0B8();
  if ((v34 & 1) == 0)
    return sub_22ED2B1FC((uint64_t)a1, v34, 1);
  return 1;
}

unint64_t sub_22EAE8BE0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unint64_t v4;

  v4 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), a2, a3);
  return sub_22EB1A358(a2, v4) & 0xFFFFFFFFFFFFFFFELL;
}

void sub_22EAE8C2C()
{
  JUMPOUT(0x2348A0E9CLL);
}

void sub_22EAE8C40()
{
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22EAE8C54(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t (**v6)();
  void *v7;

  v5 = a3;
  v6 = (uint64_t (**)())(*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), a2, a3);
  v7 = (void *)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1 + 16) + 16))(*(_QWORD *)(a1 + 16), a2, v5);
  return sub_22EB2AFE4(a2, v6, v5, v7, v5) & 0xFFFFFFFFFFFFFFFELL;
}

void sub_22EAE8CCC(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24FAB7F50;
  if (*(_DWORD *)(a1 + 52))
    free(*(void **)(a1 + 40));
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22EAE8D18(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a3;
  v6 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), a2, a3);
  return sub_22EC24AB8(a2, v6, *(_QWORD *)(a1 + 16), v5, *(unsigned __int8 *)(a1 + 56), (uint64_t *)(a1 + 24), 0, 0, *(_QWORD *)(a1 + 64), 0, 0, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
}

uint64_t sub_22EAE8D9C(unint64_t a1)
{
  uint64_t result;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 0x80000000000000) != 0)
    return 1;
  result = sub_22EABE940(a1);
  if ((_DWORD)result)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
    return (**(_QWORD **)(a1 + 128) & 0x80000000000) == 0;
  }
  return result;
}

void sub_22EAE8E04()
{
  JUMPOUT(0x2348A0E9CLL);
}

unint64_t sub_22EAE8E18(uint64_t a1, _QWORD *a2, unsigned int a3)
{
  uint64_t v4;

  v4 = (*(uint64_t (**)(_QWORD, _QWORD *, _QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8), a2, a3);
  return sub_22EAE23C0(a2, v4);
}

BOOL sub_22EAE8E50(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  int v6;
  int v7;
  _QWORD *v8;
  unsigned int v9;
  _BOOL8 v10;
  uint64_t v12;
  unsigned int v13[24];

  v4 = *(_QWORD *)(a2 + 16);
  v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (_QWORD *)*v5;
  v6 = *(_WORD *)(sub_22EFCBB30((unint64_t)v5) + 8) & 0x7F;
  if (v6 == 83)
  {
    if ((*(_QWORD *)(a2 + 80) & 0xE000) == 0x4000)
    {
      v7 = *(_DWORD *)(a2 + 24);
      v8 = a1;
      v9 = 4438;
      goto LABEL_8;
    }
    return 0;
  }
  if (v6 != 16)
    return 0;
  v7 = *(_DWORD *)(a2 + 24);
  v8 = a1;
  v9 = 4437;
LABEL_8:
  sub_22E8FCA40(v8, v7, v9, 0, (uint64_t)v13);
  v12 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(sub_22E894538((uint64_t)v13, &v12) + 80) != 0;
  sub_22E903BEC(v13);
  return v10;
}

BOOL sub_22EAE8F14(_QWORD *a1, uint64_t a2, unint64_t a3, unint64_t a4, unsigned int a5, unsigned int a6)
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _BOOL8 v21;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  int v33;
  _QWORD *v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37[24];
  unint64_t v38;
  unint64_t v39;

  v8 = a4;
  v9 = a3;
  v38 = a4;
  v39 = a3;
  v12 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
    v13 = *(unsigned __int8 *)(v12 + 16) - 27 > 0xFFFFFFFD;
  else
    v13 = 0;
  if (!v13)
    v12 = sub_22F10CF48(v12);
  v14 = *(_QWORD *)(v12 + 24);
  if ((*(_BYTE *)(a1[9] + 60) & 1) != 0)
  {
    v15 = *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0);
    if (v15 && *(_BYTE *)(v15 + 16) == 39
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
      && (v15 = sub_22F10CF48(v15)) != 0)
    {
      v14 = sub_22EAE926C(a1[11], *(_QWORD *)(v15 + 32));
    }
    if (v9 >= 0x10)
    {
      v16 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(v16 + 16) == 39)
      {
        v9 = sub_22EAE926C(a1[11], *(_QWORD *)(v16 + 32));
        v39 = v9;
      }
    }
  }
  if ((v14 & 7 | *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF0) + 8)) == v9)
  {
    v23 = *(_QWORD *)(a2 + 144);
    v24 = *(_QWORD *)(a2 + 48);
    if (v23 >= 8 && (v23 & 6) == 0)
    {
      v25 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0);
      if (v25)
        v26 = *(_BYTE *)(v25 + 16) == 26;
      else
        v26 = 0;
      if (!v26
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26
         || (v25 = sub_22F10CF48(v25)) == 0)
        || (*(_DWORD *)(v25 + 20) & 0x3FFF80) == 0)
      {
        v33 = *(_DWORD *)(a2 + 24);
        v34 = a1;
        v35 = 4441;
        goto LABEL_59;
      }
      v24 = *(_QWORD *)(a2 + 48);
    }
    v27 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0);
    if (v27)
      v28 = *(_BYTE *)(v27 + 16) == 26;
    else
      v28 = 0;
    if ((v28
       || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v27 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
       && (v27 = sub_22F10CF48(v27)) != 0)
      && (*(_DWORD *)(v27 + 20) & 0x3FFFC0) != 0)
    {
      v29 = *(_QWORD *)(**(_QWORD **)(a2 + 120) + 48);
      if ((*(_BYTE *)(a1[9] + 60) & 1) != 0)
      {
        v30 = *(_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF0);
        if (v30 && *(_BYTE *)(v30 + 16) == 39
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v30 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
          && (v30 = sub_22F10CF48(v30)) != 0)
        {
          v29 = sub_22EAE926C(a1[11], *(_QWORD *)(v30 + 32));
        }
        if (v8 >= 0x10)
        {
          v31 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0);
          if (*(_BYTE *)(v31 + 16) == 39)
          {
            v8 = sub_22EAE926C(a1[11], *(_QWORD *)(v31 + 32));
            v38 = v8;
          }
        }
      }
      if ((*(_QWORD *)(*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0) == v8)
        return 0;
      if ((*(_DWORD *)(*(_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF0) + 16) & 0x400) != 0)
        v32 = a5;
      else
        v32 = a6;
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v32, 0, (uint64_t)v37);
      v36 = *(_QWORD *)(a2 + 40);
      v18 = sub_22E894538((uint64_t)v37, &v36);
      v19 = (uint64_t *)&v38;
      goto LABEL_20;
    }
    v33 = *(_DWORD *)(a2 + 24);
    v34 = a1;
    v35 = 4442;
LABEL_59:
    sub_22E8FCA40(v34, v33, v35, 0, (uint64_t)v37);
    v36 = *(_QWORD *)(a2 + 40);
    v20 = sub_22E894538((uint64_t)v37, &v36);
    goto LABEL_21;
  }
  if ((*(_DWORD *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 16) & 0x400) != 0)
    v17 = 4439;
  else
    v17 = 4440;
  sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v17, 0, (uint64_t)v37);
  v36 = *(_QWORD *)(a2 + 40);
  v18 = sub_22E894538((uint64_t)v37, &v36);
  v19 = (uint64_t *)&v39;
LABEL_20:
  v20 = sub_22E8901B8(v18, v19);
LABEL_21:
  v21 = *(_BYTE *)(v20 + 80) != 0;
  sub_22E903BEC(v37);
  return v21;
}

unint64_t sub_22EAE926C(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;

  v2 = a2;
  v4 = a2 & 0xFFFFFFFFFFFFFFF0;
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v5 & 8) != 0)
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
    v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x7FFLL;
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v8 = *(_QWORD *)v4;
  if ((*(_BYTE *)(*(_QWORD *)v4 + 8) & 0xF) != 0)
    v8 = (unint64_t)sub_22F10D2BC(a2);
  v9 = v8 & 0xFFFFFFFFFFFFFFF0;
  if (v7 & 0xC000007F8 | v6 & 0xC000007F8)
  {
    v13 = v7 | (v5 | v2) & 7 | v6;
    v10 = sub_22E491354((unsigned int *)&v13, v9);
    v11 = sub_22EF5DBC4(a1, v10, v13);
  }
  else
  {
    v11 = v9 | v7 & 7 | (v5 | v2) & 7;
  }
  return sub_22EF5B848(a1, v11 & 7 | *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFFF0) + 8), 0);
}

uint64_t sub_22EAE934C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  BOOL v7;
  char v8;
  _QWORD *v10;
  char v11;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_22F0D492C(a2);
  v13 = v15;
  v3 = v17;
  v14 = v16;
  v4 = v18;
  v5 = *((_QWORD *)&v15 + 1);
  v6 = (uint64_t *)v15;
  v7 = (_QWORD)v15 == v17;
  v8 = 0;
  while (!v7 || v5 != v4)
  {
    if ((v5 & 3) != 0)
    {
      if ((v5 & 0xFFFFFFFFFFFFFFFCLL) != 0)
        v10 = (_QWORD *)((v5 & 0xFFFFFFFFFFFFFFFCLL) + 40);
      else
        v10 = (_QWORD *)sub_22F3AC1A8(*v6);
      v11 = sub_22EAA4478(a1, *v10);
      if (v5 >= 4)
        sub_22F0D8720((uint64_t)&v13);
      else
        sub_22F3F2FE0((uint64_t)&v13, 1);
    }
    else
    {
      v11 = sub_22EAA4478(a1, *v6);
      *(_QWORD *)&v13 = v6 + 1;
    }
    v8 |= v11;
    v5 = *((_QWORD *)&v13 + 1);
    v6 = (uint64_t *)v13;
    v7 = (_QWORD)v13 == v3;
  }
  return v8 & 1;
}

_QWORD *sub_22EAE9434(_DWORD *a1, _QWORD *a2)
{
  char v4;
  _QWORD *v5;
  _QWORD *v7;

  v7 = 0;
  v4 = sub_22E3B9914((uint64_t)a1, a2, &v7);
  v5 = v7;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22EAE9494(a1, (uint64_t)a2, a2, v7);
    *v5 = *a2;
    *((_DWORD *)v5 + 2) = 0;
  }
  return v5;
}

_QWORD *sub_22EAE9494(_DWORD *a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  int v6;
  unsigned int v7;
  _QWORD *v9;

  v6 = a1[2];
  v7 = a1[4];
  if (4 * v6 + 4 >= 3 * v7)
  {
    v7 *= 2;
  }
  else if (v7 + ~v6 - a1[3] > v7 >> 3)
  {
    goto LABEL_3;
  }
  sub_22E7449D8((uint64_t)a1, v7);
  v9 = 0;
  sub_22E3B9914((uint64_t)a1, a3, &v9);
  a4 = v9;
LABEL_3:
  ++a1[2];
  if (*a4 != -4096)
    --a1[3];
  return a4;
}

unint64_t sub_22EAE9544(uint64_t **a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  _QWORD *v10;
  unint64_t result;
  BOOL v12;
  unint64_t *v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  BOOL v17;
  int v18;
  BOOL v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t **v22;
  uint64_t **v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;

  v3 = *(_QWORD *)(**(_QWORD **)(a2 + 16) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v3 + 8) & 0xF) != 0)
    v3 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(a2 + 16));
  v4 = sub_22F10C2A4(*(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF0));
  if (v4)
  {
    if ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 >= 3)
      v5 = 0;
    else
      v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  v6 = (_QWORD *)(*a1)[1];
  if (!v6)
    goto LABEL_19;
  v7 = (uint64_t)(*a1 + 1);
  do
  {
    v8 = v6[4];
    v9 = v8 >= v5;
    if (v8 >= v5)
      v10 = v6;
    else
      v10 = v6 + 1;
    if (v9)
      v7 = (uint64_t)v6;
    v6 = (_QWORD *)*v10;
  }
  while (*v10);
  if ((uint64_t *)v7 == *a1 + 1 || v5 < *(_QWORD *)(v7 + 32))
  {
LABEL_19:
    result = sub_22EFCE144(v5 + 64, *a1[1]);
    if (!result)
      return result;
    while (1)
    {
      v12 = (result & 4) == 0;
      v13 = (unint64_t *)(result & 0xFFFFFFFFFFFFFFF8);
      if ((result & 0xFFFFFFFFFFFFFFF8) == 0)
        v12 = 1;
      v14 = result & 0xFFFFFFFFFFFFFFF8;
      if (!v12)
        v14 = *v13;
      v15 = *(_DWORD *)(v14 + 28);
      v16 = (v15 & 0x7F) - 49;
      v17 = v16 > 0x13;
      v18 = (1 << v16) & 0x80007;
      v19 = v17 || v18 == 0;
      if (!v19 && (v15 & 0x6000) != 0x4000)
        break;
      if (v12)
        return 0;
      result = v13[1];
      if (!result)
        return result;
    }
    v20 = *a1;
    v22 = (uint64_t **)(*a1 + 1);
    v21 = *v22;
    if (*v22)
    {
      while (1)
      {
        while (1)
        {
          v23 = (uint64_t **)v21;
          v24 = v21[4];
          if (v24 <= v5)
            break;
          v21 = *v23;
          v22 = v23;
          if (!*v23)
            goto LABEL_41;
        }
        if (v24 >= v5)
          break;
        v21 = v23[1];
        if (!v21)
        {
          v22 = v23 + 1;
          goto LABEL_41;
        }
      }
    }
    else
    {
      v23 = (uint64_t **)(*a1 + 1);
LABEL_41:
      v25 = (uint64_t *)v23;
      v23 = (uint64_t **)operator new(0x30uLL);
      v23[4] = (uint64_t *)v5;
      v23[5] = 0;
      *v23 = 0;
      v23[1] = 0;
      v23[2] = v25;
      *v22 = (uint64_t *)v23;
      v26 = *(_QWORD *)*v20;
      v27 = (uint64_t *)v23;
      if (v26)
      {
        *v20 = v26;
        v27 = *v22;
      }
      sub_22E49FD00((uint64_t *)v20[1], v27);
      ++v20[2];
    }
    v23[5] = (uint64_t *)v14;
  }
  return 1;
}

uint64_t sub_22EAE971C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  llvm *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[17];

  v14[16] = *MEMORY[0x24BDAC8D0];
  if (a2 >= 0x11)
  {
    v3 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
    v4 = v3 | (v3 >> 2) | ((v3 | (v3 >> 2)) >> 4);
    v5 = ((v4 | (v4 >> 8)) >> 16) | v4 | (v4 >> 8);
    if ((v5 + 1) > 0x40)
      a2 = v5 + 1;
    else
      a2 = 64;
  }
  if ((*(_DWORD *)a1 & 1) != 0)
  {
    v8 = v14;
    for (i = 8; i != 136; i += 8)
    {
      v10 = *(_QWORD *)(a1 + i);
      if ((v10 | 0x1000) != 0xFFFFFFFFFFFFF000)
        *v8++ = v10;
    }
    if (a2 > 0x10)
    {
      *(_DWORD *)a1 &= ~1u;
      v11 = a2;
      *(_QWORD *)(a1 + 8) = MEMORY[0x23489D23C](8 * a2, 8);
      *(_QWORD *)(a1 + 16) = v11;
    }
    return sub_22F32A30C(a1, v14, v8);
  }
  else
  {
    v6 = *(llvm **)(a1 + 8);
    v7 = *(unsigned int *)(a1 + 16);
    if (a2 > 0x10)
    {
      v13 = a2;
      *(_QWORD *)(a1 + 8) = MEMORY[0x23489D23C](8 * a2, 8);
      *(_QWORD *)(a1 + 16) = v13;
    }
    else
    {
      *(_DWORD *)a1 |= 1u;
    }
    sub_22F32A30C(a1, v6, (_QWORD *)v6 + v7);
    return llvm::deallocate_buffer(v6, (void *)(8 * v7));
  }
}

_QWORD *sub_22EAE9888(uint64_t a1, uint64_t *a2)
{
  char v4;
  _QWORD *v5;
  _QWORD *v7;

  v7 = 0;
  v4 = sub_22E4D6DA8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *a2, &v7);
  v5 = v7;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22EAE98EC(a1, a2, v7);
    *v5 = *a2;
    v5[1] = 0;
  }
  return v5;
}

_QWORD *sub_22EAE98EC(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  int v5;
  unsigned int v6;
  _QWORD *v8;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 >= 3 * v6)
  {
    v6 *= 2;
  }
  else if (v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
  {
    goto LABEL_6;
  }
  sub_22EAE99A0(a1, v6);
  v8 = 0;
  sub_22E4D6DA8(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), *a2, &v8);
  a3 = v8;
LABEL_6:
  ++*(_DWORD *)(a1 + 8);
  if (*a3 != -4096)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

_QWORD *sub_22EAE99A0(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(uint64_t **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = (_QWORD *)MEMORY[0x23489D23C](16 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F32A3C8(a1, v4, &v4[2 * v3]);
    return (_QWORD *)llvm::deallocate_buffer((llvm *)v4, (void *)(16 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 16 * v10;
      do
      {
        *result = -4096;
        result += 2;
        v11 -= 16;
      }
      while (v11);
    }
  }
  return result;
}

_QWORD *sub_22EAE9A60(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(uint64_t **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = (_QWORD *)MEMORY[0x23489D23C](16 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F32A5C0(a1, v4, &v4[2 * v3]);
    return (_QWORD *)llvm::deallocate_buffer((llvm *)v4, (void *)(16 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 16 * v10;
      do
      {
        *result = -4096;
        result += 2;
        v11 -= 16;
      }
      while (v11);
    }
  }
  return result;
}

_QWORD *sub_22EAE9B20(_QWORD *a1, unsigned int a2)
{
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  int v6;

  if (a2 <= 0x10)
  {
    *a1 = 1;
LABEL_3:
    result = a1 + 1;
    v4 = a1 + 17;
    goto LABEL_4;
  }
  *(_DWORD *)a1 &= ~1u;
  v5 = a2;
  result = (_QWORD *)MEMORY[0x23489D23C](8 * a2, 8);
  a1[1] = result;
  a1[2] = v5;
  v6 = *(_DWORD *)a1;
  *a1 = *(_DWORD *)a1 & 1;
  if ((v6 & 1) != 0)
    goto LABEL_3;
  v4 = &result[v5];
  do
LABEL_4:
    *result++ = -4096;
  while (result != v4);
  return result;
}

uint64_t sub_22EAE9BA0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  if (result != a2)
  {
    v3 = result;
    v4 = *(_QWORD *)result;
    if (*(_QWORD *)result == result + 16 || *(_QWORD *)a2 == a2 + 16)
    {
      if (*(_DWORD *)(result + 12) < *(_DWORD *)(a2 + 8))
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
      v7 = *(_DWORD *)(v3 + 8);
      if (*(_DWORD *)(a2 + 12) < v7)
      {
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
        v7 = *(_DWORD *)(v3 + 8);
      }
      v8 = *(unsigned int *)(a2 + 8);
      if (v7 >= v8)
        v9 = v8;
      else
        v9 = v7;
      if ((_DWORD)v9)
      {
        v10 = 0;
        do
        {
          v11 = (uint64_t *)(*(_QWORD *)v3 + v10);
          v12 = (uint64_t *)(*(_QWORD *)a2 + v10);
          v13 = *v11;
          *v11 = *v12;
          *v12 = v13;
          v14 = v11[1];
          v11[1] = v12[1];
          v12[1] = v14;
          v10 += 16;
        }
        while (16 * v9 != v10);
      }
      if (v8 >= v7)
      {
        if (v8 > v7)
        {
          v16 = v8 - v7;
          result = (uint64_t)memcpy((void *)(*(_QWORD *)v3 + 16 * v7), (const void *)(*(_QWORD *)a2 + 16 * v9), *(_QWORD *)a2 + 16 * v8 - (*(_QWORD *)a2 + 16 * v9));
          *(_DWORD *)(v3 + 8) += v16;
          *(_DWORD *)(a2 + 8) = v9;
        }
      }
      else
      {
        v15 = v7 - v8;
        result = (uint64_t)memcpy((void *)(*(_QWORD *)a2 + 16 * v8), (const void *)(*(_QWORD *)v3 + 16 * v9), *(_QWORD *)v3 + 16 * v7 - (*(_QWORD *)v3 + 16 * v9));
        *(_DWORD *)(a2 + 8) += v15;
        *(_DWORD *)(v3 + 8) = v9;
      }
    }
    else
    {
      *(_QWORD *)result = *(_QWORD *)a2;
      *(_QWORD *)a2 = v4;
      v5 = *(_DWORD *)(result + 8);
      *(_DWORD *)(result + 8) = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a2 + 8) = v5;
      v6 = *(_DWORD *)(result + 12);
      *(_DWORD *)(result + 12) = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a2 + 12) = v6;
    }
  }
  return result;
}

uint64_t sub_22EAE9D28(_QWORD **a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unsigned __int8 v29;
  int v30;
  unint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  int v34;
  unsigned int v35[24];

  v4 = *(_QWORD *)(**(_QWORD **)(a2 + 16) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v4 + 8) & 0xF) != 0)
    v4 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(a2 + 16));
  result = sub_22F10C2A4(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0));
  if (result)
  {
    v6 = result;
    if ((*(_DWORD *)(result + 28) & 0x7Fu) - 35 > 2)
      return 0;
    v7 = a1[3];
    if (!v7)
      return sub_22EAE9FDC((uint64_t *)a1, v6, a2 & 0xFFFFFFFFFFFFFFFBLL);
    v8 = a1[1];
    v9 = (*((_BYTE *)v8 + 87) & 0x20) != 0 ? v8[22] : 0;
    v10 = sub_22EAC8258(v7, v6, v9);
    if (!v10)
      return sub_22EAE9FDC((uint64_t *)a1, v6, a2 & 0xFFFFFFFFFFFFFFFBLL);
    v11 = v10;
    (*(void (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
    v12 = v11 & 0xFFFFFFFFFFFFFFF8;
    if (!v12)
      return sub_22EAE9FDC((uint64_t *)a1, v6, a2 & 0xFFFFFFFFFFFFFFFBLL);
    if ((*(_BYTE *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v12 + 32))(v12) + 82) & 0x40) == 0
      || !*((_BYTE *)a1 + 52))
    {
      return (*(unsigned __int8 *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v12 + 32))(v12) + 82) >> 6) & 1;
    }
    sub_22E8FCA40(*a1, *(_DWORD *)a2, 0x15B0u, 0, (uint64_t)v35);
    if (a1[3])
      v13 = 6;
    else
      v13 = *((_DWORD *)a1 + 4);
    v34 = v13;
    v14 = sub_22E8900C4((uint64_t)v35, &v34);
    v15 = a1[1];
    v16 = v15 + 9;
    v17 = v15[10] & 0x7F;
    v18 = 0x1FFFFFFFFFFFFFFBLL;
    if (v17 > 70)
    {
      switch(v17)
      {
        case 'S':
          goto LABEL_33;
        case 'G':
          v18 = 0x1FFFFFFFFFFFFFF9;
          goto LABEL_33;
        case 'Q':
          goto LABEL_33;
      }
    }
    else
    {
      if (v17 <= 0x18)
      {
        if (v17 == 16)
          goto LABEL_20;
        if (((1 << v17) & 0x1066) != 0)
          goto LABEL_33;
        if (v17 == 24)
        {
LABEL_20:
          v18 = 0x1FFFFFFFFFFFFFFALL;
LABEL_33:
          v19 = v16[v18 + 2];
          v20 = (_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
          if ((v19 & 4) != 0)
            v20 = (_QWORD *)*v20;
          if (v20)
            v21 = (uint64_t)(v20 - 8);
          else
            v21 = 0;
          v33 = v21;
          v22 = sub_22E890024(v14, &v33);
          v32 = 0;
          v23 = sub_22E894E38(v22, &v32);
          v24 = *(_QWORD *)(**(_QWORD **)(a2 + 16) & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v24 + 8) & 0xF) != 0)
            v24 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(a2 + 16));
          v31 = v24 & 0xFFFFFFFFFFFFFFF0;
          v25 = sub_22E8901B8(v23, (uint64_t *)&v31);
          v30 = 1;
          v26 = sub_22E8900C4(v25, &v30);
          v29 = 0;
          v27 = sub_22E894E38(v26, &v29);
          v28 = 0;
          sub_22E8900C4(v27, &v28);
          sub_22E903BEC(v35);
          sub_22EB17D68(*a1, v12);
          return (*(unsigned __int8 *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)v12 + 32))(v12) + 82) >> 6) & 1;
        }
      }
      if (v17 == 70)
      {
LABEL_31:
        v18 = 0x1FFFFFFFFFFFFFF8;
        goto LABEL_33;
      }
    }
    if ((v17 - 52) < 6)
    {
      v18 = 0x1FFFFFFFFFFFFFF7;
      goto LABEL_33;
    }
    if ((v17 - 33) < 5)
      goto LABEL_31;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_22EAE9FDC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if ((a3 & 4) == 0
    || (a3 & 0xFFFFFFFFFFFFFFF8) == 0
    || *((_DWORD *)a1 + 4)
    || ((v6 = *(_DWORD *)((a3 & 0xFFFFFFFFFFFFFFF8) + 72) & 3, v6 != 3) ? (v7 = v6 == 0) : (v7 = 1), v7))
  {
    v8 = sub_22EAE4AE0(*a1, a2);
    if ((sub_22EAEA0F8((_QWORD **)a1, a3, v8, 0) & 1) != 0)
      return 1;
  }
  if (!*((_BYTE *)a1 + 32))
    return 0;
  v10 = sub_22EC6602C(*a1, a2);
  v9 = 1;
  if ((sub_22EAEA0F8((_QWORD **)a1, a3, v10, 1u) & 1) == 0)
    return 0;
  return v9;
}

uint64_t sub_22EAEA0F8(_QWORD **a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  int v9;
  int v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t result;
  uint64_t v45;
  unint64_t v46;
  unsigned int v47;
  unint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  unint64_t v79;
  unsigned __int8 v80;
  int v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  int v85;
  int v86;
  unint64_t v87;
  unsigned __int8 v88;

  v88 = a4;
  v5 = a3 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = a2 & 0xFFFFFFFFFFFFFFF8 & (a2 << 61 >> 63);
  v87 = v7;
  v8 = (a3 >> 1) & 3;
  if (v8 == 1)
  {
    v9 = 2;
    goto LABEL_99;
  }
  if (!v8)
  {
    v9 = v5 != 0;
    goto LABEL_99;
  }
  v11 = (*(_DWORD *)(v5 + 28) >> 13) & 3;
  v12 = (*a1)[11];
  if ((a2 & 4) == 0 && v6)
  {
    v13 = a1[1];
    v14 = v13 + 9;
    v15 = v13[10] & 0x7F;
    v16 = -40;
    if (v15 > 70)
    {
      if (v15 != 83)
      {
        if (v15 == 71)
        {
          v16 = -56;
          goto LABEL_47;
        }
        if (v15 == 81)
          goto LABEL_47;
LABEL_42:
        v27 = v15 - 52;
        v20 = (v15 - 33) >= 5;
        v28 = -48;
        if (!v20)
          v28 = -64;
        if (v27 >= 6)
          v16 = v28;
        else
          v16 = -72;
      }
    }
    else
    {
      if (v15 > 0x18)
        goto LABEL_41;
      if (v15 != 16)
      {
        if (((1 << v15) & 0x1066) != 0)
          goto LABEL_47;
        if (v15 != 24)
        {
LABEL_41:
          if (v15 == 70)
          {
            v16 = -64;
            goto LABEL_47;
          }
          goto LABEL_42;
        }
      }
      v16 = -48;
    }
LABEL_47:
    v29 = *(_QWORD *)((char *)v14 + v16 + 16);
    v30 = (_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF8);
    if ((v29 & 4) != 0)
      v30 = (_QWORD *)*v30;
    if (v30)
      v31 = (unint64_t)(v30 - 8);
    else
      v31 = 0;
    v32 = *(_QWORD *)(v31 + 48);
    if (v32)
      v26 = v32 & 0xFFFFFFFFFFFFFFF0;
    else
      v26 = sub_22EF6462C(v12, v31);
    v33 = *(unsigned __int8 *)(v6 + 12);
    v34 = (v33 >> 2) & 3;
    v35 = v33 & 2;
    if (v34 != 3)
      v35 = v34;
    if (v35 <= v11)
      v35 = v11;
    if (v11 == 2)
      v11 = 3;
    else
      v11 = v35;
    goto LABEL_62;
  }
  v17 = *(_WORD *)(v5 + 80) & 0x7F;
  v18 = -40;
  if (v17 > 0x46)
  {
    if (v17 != 83)
    {
      if (v17 == 71)
      {
        v18 = -56;
        goto LABEL_31;
      }
      if (v17 == 81)
        goto LABEL_31;
LABEL_26:
      v19 = v17 - 52;
      v20 = v17 - 33 >= 5;
      v21 = -48;
      if (!v20)
        v21 = -64;
      if (v19 >= 6)
        v18 = v21;
      else
        v18 = -72;
    }
  }
  else
  {
    if (v17 > 0x18)
      goto LABEL_25;
    if (v17 != 16)
    {
      if (((1 << v17) & 0x1066) != 0)
        goto LABEL_31;
      if (v17 != 24)
      {
LABEL_25:
        if (v17 == 70)
        {
          v18 = -64;
          goto LABEL_31;
        }
        goto LABEL_26;
      }
    }
    v18 = -48;
  }
LABEL_31:
  v22 = *(_QWORD *)(v5 + 72 + v18 + 16);
  v23 = (_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
  if ((v22 & 4) != 0)
    v23 = (_QWORD *)*v23;
  if (v23)
    v24 = (unint64_t)(v23 - 8);
  else
    v24 = 0;
  v25 = *(_QWORD *)(v24 + 48);
  if (v25)
    v26 = v25 & 0xFFFFFFFFFFFFFFF0;
  else
    v26 = sub_22EF6462C(v12, v24);
LABEL_62:
  v36 = (uint64_t)*a1;
  v37 = *(_WORD *)(v5 + 80) & 0x7F;
  v38 = -40;
  if (v37 <= 0x46)
  {
    if (v37 <= 0x18)
    {
      if (v37 == 16)
      {
LABEL_65:
        v38 = -48;
        goto LABEL_77;
      }
      if (((1 << v37) & 0x1066) != 0)
        goto LABEL_77;
      if (v37 == 24)
        goto LABEL_65;
    }
    if (v37 == 70)
    {
LABEL_75:
      v38 = -64;
      goto LABEL_77;
    }
    goto LABEL_73;
  }
  if (v37 == 83)
    goto LABEL_77;
  if (v37 == 71)
  {
    v38 = -56;
    goto LABEL_77;
  }
  if (v37 != 81)
  {
LABEL_73:
    if (v37 - 52 >= 6)
    {
      if (v37 - 33 >= 5)
        goto LABEL_65;
      goto LABEL_75;
    }
    v38 = -72;
  }
LABEL_77:
  v39 = *(_QWORD *)(v5 + 72 + v38 + 16);
  v40 = (_QWORD *)(v39 & 0xFFFFFFFFFFFFFFF8);
  if ((v39 & 4) != 0)
    v40 = (_QWORD *)*v40;
  if (v40)
    v41 = (uint64_t)(v40 - 8);
  else
    v41 = 0;
  v42 = *(_QWORD *)(v36 + 88) + 2128;
  v83 = 0;
  v84 = v42;
  v85 = 0;
  v43 = sub_22E90A3A8(v36, v41, v5 | v11, v26, 0, (uint64_t)&v83);
  if (v83 && v84)
    sub_22E3BB10C(v84, v83);
  if ((v43 & 1) == 0)
  {
    v9 = 3;
    goto LABEL_99;
  }
  result = 0;
  if ((a4 & 1) == 0 && v7)
  {
    v45 = *(_QWORD *)(v7 + 16);
    v46 = v45 & 0xFFFFFFFFFFFFFFF8;
    if ((v45 & 4) != 0)
      v46 = *(_QWORD *)v46;
    v47 = (*(_WORD *)(v46 + 8) & 0x7E) - 34;
    if (v46)
      v48 = v46 - 64;
    else
      v48 = 0;
    if (v47 >= 4)
      v48 = 0;
    if ((*(_DWORD *)(v48 + 72) & 0xE000) != 0x4000 || (*(_BYTE *)(v5 + 82) & 0x80) != 0)
      return 0;
    v9 = 4;
LABEL_99:
    v86 = v9;
    if (!*((_BYTE *)a1 + 52))
      return 1;
    if (v7)
    {
      sub_22E8FCA40(*a1, *(_DWORD *)(v7 + 24), 0x15B0u, 0, (uint64_t)&v83);
      if (a1[3])
        v49 = 6;
      else
        v49 = *((_DWORD *)a1 + 4);
      LODWORD(v79) = v49;
      v51 = sub_22E8900C4((uint64_t)&v83, (int *)&v79);
      v52 = a1[1];
      v53 = v52 + 9;
      v54 = v52[10] & 0x7F;
      v55 = 0x1FFFFFFFFFFFFFFBLL;
      if (v54 > 70)
      {
        switch(v54)
        {
          case 'S':
            goto LABEL_131;
          case 'G':
            v55 = 0x1FFFFFFFFFFFFFF9;
            goto LABEL_131;
          case 'Q':
            goto LABEL_131;
        }
      }
      else
      {
        if (v54 <= 0x18)
        {
          if (v54 == 16)
            goto LABEL_109;
          if (((1 << v54) & 0x1066) != 0)
            goto LABEL_131;
          if (v54 == 24)
          {
LABEL_109:
            v55 = 0x1FFFFFFFFFFFFFFALL;
LABEL_131:
            v61 = v53[v55 + 2];
            v62 = (_QWORD *)(v61 & 0xFFFFFFFFFFFFFFF8);
            if ((v61 & 4) != 0)
              v62 = (_QWORD *)*v62;
            if (v62)
              v63 = (uint64_t)(v62 - 8);
            else
              v63 = 0;
            v82 = v63;
            v64 = sub_22E890024(v51, &v82);
            LOBYTE(v78) = 1;
            v65 = sub_22E894E38(v64, (unsigned __int8 *)&v78);
            v66 = sub_22E890024(v65, (uint64_t *)&v87);
            v67 = sub_22E8900C4(v66, &v86);
            v68 = sub_22E894E38(v67, &v88);
            v81 = 0;
            v69 = &v81;
LABEL_152:
            sub_22E8900C4(v68, v69);
            sub_22E903BEC((unsigned int *)&v83);
            if (v86 == 1)
              sub_22EB17D68(*a1, v5);
            return 1;
          }
        }
        if (v54 == 70)
        {
LABEL_129:
          v55 = 0x1FFFFFFFFFFFFFF8;
          goto LABEL_131;
        }
      }
      if ((v54 - 52) < 6)
      {
        v55 = 0x1FFFFFFFFFFFFFF7;
        goto LABEL_131;
      }
      if ((v54 - 33) < 5)
        goto LABEL_129;
      goto LABEL_109;
    }
    sub_22E8FCA40(*a1, *(_DWORD *)v6, 0x15B0u, 0, (uint64_t)&v83);
    if (a1[3])
      v50 = 6;
    else
      v50 = *((_DWORD *)a1 + 4);
    v81 = v50;
    v56 = sub_22E8900C4((uint64_t)&v83, &v81);
    v57 = a1[1];
    v58 = v57 + 9;
    v59 = v57[10] & 0x7F;
    v60 = 0x1FFFFFFFFFFFFFFBLL;
    if (v59 > 70)
    {
      switch(v59)
      {
        case 'S':
          goto LABEL_144;
        case 'G':
          v60 = 0x1FFFFFFFFFFFFFF9;
          goto LABEL_144;
        case 'Q':
          goto LABEL_144;
      }
    }
    else
    {
      if (v59 <= 0x18)
      {
        if (v59 == 16)
          goto LABEL_114;
        if (((1 << v59) & 0x1066) != 0)
          goto LABEL_144;
        if (v59 == 24)
        {
LABEL_114:
          v60 = 0x1FFFFFFFFFFFFFFALL;
LABEL_144:
          v70 = v58[v60 + 2];
          v71 = (_QWORD *)(v70 & 0xFFFFFFFFFFFFFFF8);
          if ((v70 & 4) != 0)
            v71 = (_QWORD *)*v71;
          if (v71)
            v72 = (uint64_t)(v71 - 8);
          else
            v72 = 0;
          v82 = v72;
          v73 = sub_22E890024(v56, &v82);
          v80 = 0;
          v74 = sub_22E894E38(v73, &v80);
          v75 = *(_QWORD *)(**(_QWORD **)(v6 + 16) & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v75 + 8) & 0xF) != 0)
            v75 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v6 + 16));
          v79 = v75 & 0xFFFFFFFFFFFFFFF0;
          v76 = sub_22E8901B8(v74, (uint64_t *)&v79);
          v77 = sub_22E8900C4(v76, &v86);
          v68 = sub_22E894E38(v77, &v88);
          v78 = 0;
          v69 = &v78;
          goto LABEL_152;
        }
      }
      if (v59 == 70)
      {
LABEL_142:
        v60 = 0x1FFFFFFFFFFFFFF8;
        goto LABEL_144;
      }
    }
    if ((v59 - 52) < 6)
    {
      v60 = 0x1FFFFFFFFFFFFFF7;
      goto LABEL_144;
    }
    if ((v59 - 33) < 5)
      goto LABEL_142;
    goto LABEL_114;
  }
  return result;
}

uint64_t sub_22EAEA7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unsigned __int8 v20;
  int v21;
  unsigned __int8 v22;
  int v23;
  unsigned int v24[24];
  uint64_t v25;
  uint64_t v26;

  v26 = a2;
  v3 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v3 & 8) == 0 || (*(_WORD *)((v3 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x180) == 0)
    return 0;
  if (!*(_DWORD *)(a1 + 16) && (*(_DWORD *)(a2 + 72) & 3) != 3 && (*(_DWORD *)(a2 + 72) & 3) != 0)
    return 0;
  if (!*(_BYTE *)(a1 + 52))
    return 1;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  if ((v6 & 4) != 0)
    v7 = *(_QWORD *)v7;
  v8 = (*(_WORD *)(v7 + 8) & 0x7E) - 34;
  if (v7)
    v9 = v7 - 64;
  else
    v9 = 0;
  if (v8 >= 4)
    v9 = 0;
  v25 = v9;
  sub_22E8FCA40(*(_QWORD **)a1, *(_DWORD *)(a2 + 24), 0x15B0u, 0, (uint64_t)v24);
  if (*(_QWORD *)(a1 + 24))
    v10 = 6;
  else
    v10 = *(_DWORD *)(a1 + 16);
  v23 = v10;
  v13 = sub_22E8900C4((uint64_t)v24, &v23);
  v14 = sub_22E890024(v13, &v25);
  v11 = 1;
  v22 = 1;
  v15 = sub_22E894E38(v14, &v22);
  v16 = sub_22E890024(v15, &v26);
  v21 = 4;
  v17 = sub_22E8900C4(v16, &v21);
  v20 = 0;
  v18 = sub_22E894E38(v17, &v20);
  v19 = 1;
  sub_22E8900C4(v18, &v19);
  sub_22E903BEC(v24);
  return v11;
}

uint64_t sub_22EAEA8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;
  int v5;
  int v6;
  int v9;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned __int8 v25;
  int v26;
  unsigned __int8 v27;
  int v28;
  unsigned int v29[24];
  uint64_t v30;
  uint64_t v31;

  v31 = a2;
  v3 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v3 & 8) == 0)
    return 0;
  v4 = *(_DWORD *)((v3 & 0xFFFFFFFFFFFFFFF0) + 0x1C);
  v5 = v4 & 0xC;
  v6 = v4 & 2;
  if (!v5 || v6 == 0)
    return 0;
  v9 = *(_DWORD *)(a1 + 16);
  if (!v9 || v9 == 5)
    return 0;
  if (!*(_BYTE *)(a1 + 52))
    return 1;
  v13 = *(_QWORD *)(a2 + 16);
  v14 = v13 & 0xFFFFFFFFFFFFFFF8;
  if ((v13 & 4) != 0)
    v14 = *(_QWORD *)v14;
  v15 = (*(_WORD *)(v14 + 8) & 0x7E) - 34;
  if (v14)
    v16 = v14 - 64;
  else
    v16 = 0;
  if (v15 >= 4)
    v16 = 0;
  v30 = v16;
  sub_22E8FCA40(*(_QWORD **)a1, *(_DWORD *)(a2 + 24), 0x15B0u, 0, (uint64_t)v29);
  if (*(_QWORD *)(a1 + 24))
    v17 = 6;
  else
    v17 = *(_DWORD *)(a1 + 16);
  v28 = v17;
  v18 = sub_22E8900C4((uint64_t)v29, &v28);
  v19 = sub_22E890024(v18, &v30);
  v11 = 1;
  v27 = 1;
  v20 = sub_22E894E38(v19, &v27);
  v21 = sub_22E890024(v20, &v31);
  v26 = 4;
  v22 = sub_22E8900C4(v21, &v26);
  v25 = 0;
  v23 = sub_22E894E38(v22, &v25);
  v24 = 2;
  sub_22E8900C4(v23, &v24);
  sub_22E903BEC(v29);
  return v11;
}

uint64_t sub_22EAEAA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v18;
  _QWORD v19[9];

  v19[8] = *MEMORY[0x24BDAC8D0];
  v5 = *(_QWORD *)(**(_QWORD **)(a2 + 16) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v5 + 8) & 0xF) != 0)
    v5 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(a2 + 16));
  v6 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 24));
  v18 = 0;
  v7 = sub_22EFCE144(v6 + 64, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 40));
  *(_QWORD *)(a3 + 120) = v7;
  if (!v7)
    return 0;
  v8 = v7;
  v9 = 0;
  v10 = 1;
  while (1)
  {
    v11 = (_DWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
    if ((v8 & 4) != 0 && v11)
      v11 = *(_DWORD **)v11;
    if (v11 && (v11[7] & 0x7Eu) - 58 >= 0xFFFFFFFC)
    {
      v12 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v11 + 32))(v11);
      v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 32))(v12);
      if ((*(_BYTE *)(v13 + 82) & 0xC) != 0 || sub_22EFD7260(v13))
      {
        if (!sub_22ECF9D50(*(_QWORD **)a1, *(_QWORD *)(a1 + 8), v12, 0, 1, 1))
          return v10;
        if ((sub_22EAEAC30(v12, (unsigned int *)(a1 + 16)) & 1) == 0)
        {
          v14 = v18;
          if (v18 >= 8uLL)
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v14 = v18;
          }
          v19[v14] = v12;
          ++v18;
        }
      }
      v9 = 1;
    }
    v15 = *(_QWORD *)(a3 + 120);
    if ((v15 & 4) == 0)
      break;
    v16 = v15 & 0xFFFFFFFFFFFFFFF8;
    if (!v16)
      break;
    v8 = *(_QWORD *)(v16 + 8);
    *(_QWORD *)(a3 + 120) = v8;
    if (!v8)
      goto LABEL_23;
  }
  *(_QWORD *)(a3 + 120) = 0;
LABEL_23:
  if ((v9 & 1) == 0)
    return 0;
  sub_22F2633B0(a1 + 112, v19, &v19[v18]);
  return 1;
}

uint64_t sub_22EAEAC30(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  BOOL v9;
  void *v10;
  void **v11;
  uint64_t v12;
  unsigned int *v13;

  if (sub_22EFD7260(a1))
  {
    v4 = sub_22EFD7394(a1);
    if (v4 == v5)
    {
      return 0;
    }
    else
    {
      v6 = v5;
      v7 = v4 + 8;
      do
      {
        result = sub_22EAEAC30(*(_QWORD *)(v7 - 8), a2);
        if ((result & 1) != 0)
          break;
        v9 = v7 == v6;
        v7 += 8;
      }
      while (!v9);
    }
  }
  else
  {
    v10 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 32))(a1);
    v11 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)a2, v10);
    v12 = *((_QWORD *)a2 + 1);
    if (v12 == *(_QWORD *)a2)
      v13 = a2 + 5;
    else
      v13 = a2 + 4;
    return v11 != (void **)(v12 + 8 * *v13);
  }
  return result;
}

_QWORD *sub_22EAEACE4(uint64_t a1, int a2)
{
  uint64_t v3;
  llvm *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(llvm **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = (_QWORD *)MEMORY[0x23489D23C](16 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F32AA34(a1, (uint64_t)v4, (uint64_t)v4 + 16 * v3);
    return (_QWORD *)llvm::deallocate_buffer(v4, (void *)(16 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 16 * v10;
      do
      {
        *result = -4096;
        result += 2;
        v11 -= 16;
      }
      while (v11);
    }
  }
  return result;
}

uint64_t sub_22EAEADA4(uint64_t *a1, const void *a2)
{
  sub_22E3BA850(*a1, a2);
  return 1;
}

BOOL sub_22EAEADC0(llvm::SmallPtrSetImplBase **a1, void *a2)
{
  llvm::SmallPtrSetImplBase *v2;
  void **v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = sub_22E3BA914(*a1, a2);
  v4 = *((_QWORD *)v2 + 1);
  v5 = 16;
  if (v4 == *(_QWORD *)v2)
    v5 = 20;
  return v3 == (void **)(v4 + 8 * *(unsigned int *)((char *)v2 + v5));
}

uint64_t sub_22EAEAE08(uint64_t result, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;

  if ((uint64_t *)result != a2)
  {
    v3 = result;
    v4 = *(_QWORD *)result;
    if (*(_QWORD *)result == result + 16 || (uint64_t *)*a2 == a2 + 2)
    {
      if (*(_DWORD *)(result + 12) < *((_DWORD *)a2 + 2))
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
      v7 = *(_DWORD *)(v3 + 8);
      if (*((_DWORD *)a2 + 3) < v7)
      {
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
        v7 = *(_DWORD *)(v3 + 8);
      }
      v8 = *((unsigned int *)a2 + 2);
      if (v7 >= v8)
        v9 = v8;
      else
        v9 = v7;
      if ((_DWORD)v9)
      {
        v10 = 0;
        do
        {
          v11 = *a2;
          v12 = *(_QWORD *)(*(_QWORD *)v3 + v10);
          *(_QWORD *)(*(_QWORD *)v3 + v10) = *(_QWORD *)(*a2 + v10);
          *(_QWORD *)(v11 + v10) = v12;
          v10 += 8;
        }
        while (8 * v9 != v10);
      }
      if (v8 >= v7)
      {
        if (v8 > v7)
        {
          v14 = v8 - v7;
          result = (uint64_t)memcpy((void *)(*(_QWORD *)v3 + 8 * v7), (const void *)(*a2 + 8 * v9), *a2 + 8 * v8 - (*a2 + 8 * v9));
          *(_DWORD *)(v3 + 8) += v14;
          *((_DWORD *)a2 + 2) = v9;
        }
      }
      else
      {
        v13 = v7 - v8;
        result = (uint64_t)memcpy((void *)(*a2 + 8 * v8), (const void *)(*(_QWORD *)v3 + 8 * v9), *(_QWORD *)v3 + 8 * v7 - (*(_QWORD *)v3 + 8 * v9));
        *((_DWORD *)a2 + 2) += v13;
        *(_DWORD *)(v3 + 8) = v9;
      }
    }
    else
    {
      *(_QWORD *)result = *a2;
      *a2 = v4;
      v5 = *(_DWORD *)(result + 8);
      *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
      *((_DWORD *)a2 + 2) = v5;
      v6 = *(_DWORD *)(result + 12);
      *(_DWORD *)(result + 12) = *((_DWORD *)a2 + 3);
      *((_DWORD *)a2 + 3) = v6;
    }
  }
  return result;
}

void sub_22EAEAF78(__int128 *a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  __int128 v15;
  uint64_t v16;
  int *v17;
  int v18;
  int v19;
  void *v20;
  uint64_t v21;
  _DWORD v22[4];
  void *v23;
  __int128 v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v18 = a3;
  v19 = a2;
  if (a2 == 13)
    return;
  v14 = (unsigned int *)&v19;
  v15 = *a1;
  v16 = *((_QWORD *)a1 + 2);
  v17 = &v18;
  v20 = v22;
  v22[0] = 0;
  v21 = 0x300000001;
  v3 = *(_QWORD *)(v15 + 72);
  v4 = *(_QWORD *)(v3 + 124);
  v5 = *(_QWORD *)(v3 + 116);
  v6 = 1;
  if ((v5 & 0x4000000000000000) != 0)
  {
    v22[1] = 1;
    v6 = 2;
    LODWORD(v21) = 2;
  }
  if (v5 < 0)
  {
    v22[v6] = 2;
    LODWORD(v21) = v6 + 1;
    v4 = *(_QWORD *)(v3 + 124);
  }
  v23 = (char *)&v24 + 8;
  v25 = 0xD0000000CLL;
  v24 = xmmword_22F47F3B0;
  if ((v4 & 0x8000) == 0)
  {
    v7 = 4;
    if ((v4 & 0x1000000000) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
  v7 = 5;
  v26 = 14;
  LODWORD(v24) = 5;
  if ((v4 & 0x1000000000) != 0)
  {
LABEL_10:
    *((_DWORD *)&v24 + v7++ + 2) = 15;
    LODWORD(v24) = v7;
  }
LABEL_11:
  v8 = (char *)&v24 + 4 * v7 + 8;
  if ((v4 & 0x4000000) != 0)
  {
    *(_DWORD *)v8 = 16;
    LODWORD(v24) = v7 + 1;
    v8 = (char *)&v24 + 4 * v7 + 12;
  }
  v9 = (char *)&v24 + 8;
  do
  {
    v10 = *(unsigned int *)v9;
    if ((_DWORD)v10 == 11)
    {
      if ((_DWORD)v21)
      {
        v11 = (unsigned int *)v20;
        v12 = 4 * v21;
        do
        {
          v13 = *v11++;
          sub_22EAEB13C(&v14, 11, v13);
          v12 -= 4;
        }
        while (v12);
      }
    }
    else
    {
      sub_22EAEB13C(&v14, v10, 0);
    }
    v9 += 4;
  }
  while (v9 != v8);
  if (v23 != (char *)&v24 + 8)
    free(v23);
  if (v20 != v22)
    free(v20);
}

unsigned int **sub_22EAEB13C(unsigned int **result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int i;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  unint64_t v40;

  v3 = **result;
  if (v3 | a2)
  {
    v6 = (uint64_t)result[1];
    v7 = *(_QWORD *)result[2];
    v8 = *result[4];
    v9 = *(_QWORD *)(v7 + 48);
    v39 = (uint64_t *)result[3];
    if (v9)
      v10 = v9 & 0xFFFFFFFFFFFFFFF0;
    else
      v10 = sub_22EF6462C(*(_QWORD *)(v6 + 88), v7);
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v7 + 104) + 96), *(_QWORD *)(v7 + 104));
    v11 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 128) + 10) << 16;
    v12 = (v11 >> 16) & 1;
    v37 = v11 & 0x10000;
    v13 = sub_22EF5DD84(*(_QWORD *)(v6 + 88), v10 | ((v11 & 0x10000) >> 16), a2);
    v14 = sub_22EF5DE18(*(_QWORD *)(v6 + 88), v13, a3);
    v40 = sub_22EF5F8C4(*(_QWORD *)(v6 + 88), v14, 1);
    v15 = sub_22EF5DD84(*(_QWORD *)(v6 + 88), v10, v3);
    v16 = sub_22EF5DE18(*(_QWORD *)(v6 + 88), v15, v8);
    v38 = sub_22EF5F8C4(*(_QWORD *)(v6 + 88), v16, 1);
    v17 = sub_22EAB8368(v6, v7, 3, v12, a2, a3, v3, v8, 0, 0);
    v18 = *(_DWORD *)(v7 + 24);
    v19 = *(_QWORD *)(v6 + 88);
    v20 = (*(_DWORD *)(v6 + 56) & 0xFC) != 4;
    v21 = sub_22EFC7430(160, v19, v7 + 64, 0);
    v22 = sub_22EFBF4FC(v21, 54, v19, v7 + 64, v18, v39, 0, 0, 0, 0, v20, 1, v17, 0);
    *(_QWORD *)v22 = &off_24FAC3B60;
    v23 = *(_DWORD *)(v22 + 28);
    *(_QWORD *)(v22 + 80) |= 0x2000000uLL;
    *(_DWORD *)(v22 + 28) = v23 & 0xFFFF9DFF | 0x200;
    sub_22EAC6FB8(v6, v21, v38, (uint64_t *)&v40, 1uLL, v3, v8);
    if ((*(_BYTE *)(*(_QWORD *)(v6 + 72) + 68) & 0x20) != 0)
      sub_22E9FE3F8(v6, v7, 3, v21, v37 != 0, 0);
    v24 = sub_22EFBF080(*(_QWORD *)(v6 + 88), v21 + 72, v18, v18, 0, v40, 0, 0, 0);
    v25 = v21;
    if ((*(_DWORD *)(v21 + 28) & 0x7F) != 0x53)
    {
      v26 = *(_QWORD *)(v21 + 16);
      v27 = v26 & 0xFFFFFFFFFFFFFFF8;
      if ((v26 & 4) != 0)
        v27 = *(_QWORD *)v27;
      for (i = *(_WORD *)(v27 + 8) & 0x7F; i != 83; i = *(_WORD *)(v27 + 8) & 0x7F)
      {
        v29 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v29 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_21;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_20;
          if (i == 16)
            goto LABEL_14;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_27;
          if (i == 24)
          {
LABEL_14:
            v29 = -48;
          }
          else
          {
LABEL_20:
            if (i != 70)
            {
LABEL_21:
              v30 = i - 52;
              if ((i - 33) >= 5)
                v31 = -48;
              else
                v31 = -64;
              if (v30 >= 6)
                v29 = v31;
              else
                v29 = -72;
              goto LABEL_27;
            }
            v29 = -64;
          }
        }
LABEL_27:
        v32 = *(_QWORD *)(v27 + v29 + 16);
        v27 = v32 & 0xFFFFFFFFFFFFFFF8;
        if ((v32 & 4) != 0)
          v27 = *(_QWORD *)v27;
      }
      v25 = v27 - 40;
    }
    v33 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v25 + 88) + 2032, 8, 3);
    *(_QWORD *)(v21 + 120) = v33;
    *v33 = v24;
    if (sub_22EABE304(v7))
    {
      LODWORD(v34) = sub_22EABBAB4(v6, v21, 3, 0, 0);
    }
    else
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v7 + 104) + 96), *(_QWORD *)(v7 + 104));
      v34 = (**(_QWORD **)(v7 + 128) >> 42) & 1;
    }
    v35 = 0x800000;
    if (!(_DWORD)v34)
      v35 = 0;
    *(_QWORD *)(v21 + 80) = *(_QWORD *)(v21 + 80) & 0xFFFFFFFFFF7FFFFFLL | v35;
    ++*(_DWORD *)(*(_QWORD *)(v6 + 88) + 18716);
    v36 = (uint64_t *)sub_22E90490C(v6, v7 + 64);
    sub_22EAC6C64(v6, v36, v21);
    if (sub_22EAB8670(v6, v21, 3, 0, 0))
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v7 + 104) + 96), *(_QWORD *)(v7 + 104));
      **(_QWORD **)(v7 + 128) |= 0x1000000000uLL;
      sub_22EAB9ED0((_QWORD *)v6, v21, v18);
    }
    if (v36)
      sub_22EA0483C(v6, v21, v36, 0);
    return (unsigned int **)sub_22EFCCFA0(v7 + 64, v21);
  }
  return result;
}

void sub_22EAEB5AC(__int128 *a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int *v14;
  __int128 v15;
  uint64_t v16;
  int *v17;
  int v18;
  int v19;
  void *v20;
  uint64_t v21;
  _DWORD v22[4];
  void *v23;
  __int128 v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  v18 = a3;
  v19 = a2;
  if (a2 == 13)
    return;
  v14 = (unsigned int *)&v19;
  v15 = *a1;
  v16 = *((_QWORD *)a1 + 2);
  v17 = &v18;
  v20 = v22;
  v22[0] = 0;
  v21 = 0x300000001;
  v3 = *(_QWORD *)(v15 + 72);
  v4 = *(_QWORD *)(v3 + 124);
  v5 = *(_QWORD *)(v3 + 116);
  v6 = 1;
  if ((v5 & 0x4000000000000000) != 0)
  {
    v22[1] = 1;
    v6 = 2;
    LODWORD(v21) = 2;
  }
  if (v5 < 0)
  {
    v22[v6] = 2;
    LODWORD(v21) = v6 + 1;
    v4 = *(_QWORD *)(v3 + 124);
  }
  v23 = (char *)&v24 + 8;
  v25 = 0xD0000000CLL;
  v24 = xmmword_22F47F3B0;
  if ((v4 & 0x8000) == 0)
  {
    v7 = 4;
    if ((v4 & 0x1000000000) == 0)
      goto LABEL_11;
    goto LABEL_10;
  }
  v7 = 5;
  v26 = 14;
  LODWORD(v24) = 5;
  if ((v4 & 0x1000000000) != 0)
  {
LABEL_10:
    *((_DWORD *)&v24 + v7++ + 2) = 15;
    LODWORD(v24) = v7;
  }
LABEL_11:
  v8 = (char *)&v24 + 4 * v7 + 8;
  if ((v4 & 0x4000000) != 0)
  {
    *(_DWORD *)v8 = 16;
    LODWORD(v24) = v7 + 1;
    v8 = (char *)&v24 + 4 * v7 + 12;
  }
  v9 = (char *)&v24 + 8;
  do
  {
    v10 = *(unsigned int *)v9;
    if ((_DWORD)v10 == 11)
    {
      if ((_DWORD)v21)
      {
        v11 = (unsigned int *)v20;
        v12 = 4 * v21;
        do
        {
          v13 = *v11++;
          sub_22EAEB770(&v14, 11, v13);
          v12 -= 4;
        }
        while (v12);
      }
    }
    else
    {
      sub_22EAEB770(&v14, v10, 0);
    }
    v9 += 4;
  }
  while (v9 != v8);
  if (v23 != (char *)&v24 + 8)
    free(v23);
  if (v20 != v22)
    free(v20);
}

unsigned int **sub_22EAEB770(unsigned int **result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int i;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39[13];

  if ((_DWORD)a2 != 13)
  {
    v39[11] = v3;
    v39[12] = v4;
    v6 = **result;
    if (v6 | a2)
    {
      v8 = (uint64_t)result[1];
      v9 = *(_QWORD *)result[2];
      v10 = *result[4];
      v11 = *(_QWORD *)(v9 + 48);
      v38 = (uint64_t *)result[3];
      if (v11)
        v12 = v11 & 0xFFFFFFFFFFFFFFF0;
      else
        v12 = sub_22EF6462C(*(_QWORD *)(v8 + 88), v9);
      v13 = sub_22EF5DD84(*(_QWORD *)(v8 + 88), v12, a2);
      v14 = sub_22EF5DE18(*(_QWORD *)(v8 + 88), v13, a3);
      v15 = sub_22EF5FB8C(*(_QWORD *)(v8 + 88), v14);
      v16 = sub_22EF5DD84(*(_QWORD *)(v8 + 88), v12, v6);
      v39[0] = sub_22EF5DE18(*(_QWORD *)(v8 + 88), v15, v10);
      v37 = sub_22EF5F8C4(*(_QWORD *)(v8 + 88), v16, 1);
      v17 = sub_22EAB8368(v8, v9, 4, 0, a2, a3, v6, v10, 0, 0);
      v18 = *(_DWORD *)(v9 + 24);
      v19 = *(_QWORD *)(v8 + 88);
      v20 = (*(_DWORD *)(v8 + 56) & 0xFC) != 4;
      v21 = sub_22EFC7430(160, v19, v9 + 64, 0);
      v22 = sub_22EFBF4FC(v21, 54, v19, v9 + 64, v18, v38, 0, 0, 0, 0, v20, 1, v17, 0);
      *(_QWORD *)v22 = &off_24FAC3B60;
      v23 = *(_DWORD *)(v22 + 28);
      *(_QWORD *)(v22 + 80) |= 0x2000000uLL;
      *(_DWORD *)(v22 + 28) = v23 & 0xFFFF9DFF | 0x200;
      sub_22EAC6FB8(v8, v21, v37, v39, 1uLL, v6, v10);
      if ((*(_BYTE *)(*(_QWORD *)(v8 + 72) + 68) & 0x20) != 0)
        sub_22E9FE3F8(v8, v9, 4, v21, 0, 0);
      v24 = sub_22EFBF080(*(_QWORD *)(v8 + 88), v21 + 72, v18, v18, 0, v39[0], 0, 0, 0);
      v25 = v21;
      if ((*(_DWORD *)(v21 + 28) & 0x7F) != 0x53)
      {
        v26 = *(_QWORD *)(v21 + 16);
        v27 = v26 & 0xFFFFFFFFFFFFFFF8;
        if ((v26 & 4) != 0)
          v27 = *(_QWORD *)v27;
        for (i = *(_WORD *)(v27 + 8) & 0x7F; i != 83; i = *(_WORD *)(v27 + 8) & 0x7F)
        {
          v29 = -40;
          if (i > 70)
          {
            if (i == 71)
            {
              v29 = -56;
            }
            else if (i != 81)
            {
              goto LABEL_22;
            }
          }
          else
          {
            if (i > 0x18)
              goto LABEL_21;
            if (i == 16)
              goto LABEL_15;
            if (((1 << i) & 0x1066) != 0)
              goto LABEL_28;
            if (i == 24)
            {
LABEL_15:
              v29 = -48;
            }
            else
            {
LABEL_21:
              if (i != 70)
              {
LABEL_22:
                v30 = i - 52;
                if ((i - 33) >= 5)
                  v31 = -48;
                else
                  v31 = -64;
                if (v30 >= 6)
                  v29 = v31;
                else
                  v29 = -72;
                goto LABEL_28;
              }
              v29 = -64;
            }
          }
LABEL_28:
          v32 = *(_QWORD *)(v27 + v29 + 16);
          v27 = v32 & 0xFFFFFFFFFFFFFFF8;
          if ((v32 & 4) != 0)
            v27 = *(_QWORD *)v27;
        }
        v25 = v27 - 40;
      }
      v33 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v25 + 88) + 2032, 8, 3);
      *(_QWORD *)(v21 + 120) = v33;
      *v33 = v24;
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
      if ((**(_QWORD **)(v9 + 128) & 0x100000000) != 0)
        v34 = sub_22EABBAB4(v8, v21, 4, 0, 0);
      else
        v34 = sub_22EACA488(v9);
      v35 = 0x800000;
      if (!v34)
        v35 = 0;
      *(_QWORD *)(v21 + 80) = *(_QWORD *)(v21 + 80) & 0xFFFFFFFFFF7FFFFFLL | v35;
      ++*(_DWORD *)(*(_QWORD *)(v8 + 88) + 18724);
      v36 = (uint64_t *)sub_22E90490C(v8, v9 + 64);
      sub_22EAC6C64(v8, v36, v21);
      if (sub_22EAB8670(v8, v21, 4, 0, 0))
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
        **(_QWORD **)(v9 + 128) |= 0x2000000000uLL;
        sub_22EAB9ED0((_QWORD *)v8, v21, v18);
      }
      if (v36)
        sub_22EA0483C(v8, v21, v36, 0);
      return (unsigned int **)sub_22EFCCFA0(v9 + 64, v21);
    }
  }
  return result;
}

uint64_t sub_22EAEBBBC(uint64_t result, uint64_t a2, signed int a3)
{
  unsigned int v3;
  BOOL v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int i;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t *v40;
  unint64_t v41;

  v3 = **(_DWORD **)result;
  if (!(v3 | a2))
    return result;
  v5 = v3 != 13 || (_DWORD)a2 == 13;
  if (!v5 && (_DWORD)a2 != 0)
    return result;
  v8 = *(_QWORD *)(result + 8);
  v9 = **(_QWORD **)(result + 16);
  v10 = *(_QWORD *)(v9 + 48);
  v40 = *(uint64_t **)(result + 24);
  if (v10)
    v11 = v10 & 0xFFFFFFFFFFFFFFF0;
  else
    v11 = sub_22EF6462C(*(_QWORD *)(v8 + 88), v9);
  v12 = sub_22EAB82EC(v9);
  v13 = sub_22EF5DD84(*(_QWORD *)(v8 + 88), v11 | v12, a2);
  v14 = sub_22EF5DE18(*(_QWORD *)(v8 + 88), v13, a3);
  v41 = sub_22EF5F8C4(*(_QWORD *)(v8 + 88), v14, 1);
  v15 = sub_22EAB8368(v8, v9, 1, v12, a2, a3, v3, 0, 0, 0);
  v16 = *(_DWORD *)(v9 + 24);
  v17 = *(_QWORD *)(v8 + 88);
  v18 = (*(_DWORD *)(v8 + 56) & 0xFC) != 4;
  v19 = sub_22EFC7430(168, v17, v9 + 64, 0);
  v20 = sub_22EFBF4FC(v19, 55, v17, v9 + 64, v16, v40, 0, 0, 0, 0, v18, 1, v15, 0);
  *(_QWORD *)v20 = &off_24FAC37B0;
  *(_QWORD *)(v20 + 160) = 0;
  v21 = *(_QWORD *)(v20 + 80) & 0xFFFFFFFFFFLL;
  *(_DWORD *)(v20 + 28) = *(_DWORD *)(v20 + 28) & 0xFFFF9DFF | 0x200;
  *(_QWORD *)(v20 + 80) = v21 | 0x2000000;
  sub_22EAC6FB8(v8, v19, *(_QWORD *)(*(_QWORD *)(v8 + 88) + 16392), (uint64_t *)&v41, 1uLL, v3, 0);
  if ((*(_BYTE *)(*(_QWORD *)(v8 + 72) + 68) & 0x20) != 0)
    sub_22E9FE3F8(v8, v9, 1, v19, v12, 0);
  if (*(_DWORD *)(v8 + 10680) > *(_DWORD *)(v8 + 11956)
    && (v22 = *(_QWORD *)(v9 + 128)) != 0
    && ((*(unsigned __int16 *)(v22 + 8) | (*(unsigned __int8 *)(v22 + 10) << 16)) & 0x100000) != 0)
  {
    v23 = sub_22EF579A8(*(_QWORD *)(v8 + 88), v41, 0);
  }
  else
  {
    v23 = 0;
  }
  v24 = sub_22EFBF080(*(_QWORD *)(v8 + 88), v19 + 72, v16, v16, 0, v41, (uint64_t)v23, 0, 0);
  v25 = v19;
  if ((*(_DWORD *)(v19 + 28) & 0x7F) != 0x53)
  {
    v26 = *(_QWORD *)(v19 + 16);
    v27 = v26 & 0xFFFFFFFFFFFFFFF8;
    if ((v26 & 4) != 0)
      v27 = *(_QWORD *)v27;
    for (i = *(_WORD *)(v27 + 8) & 0x7F; i != 83; i = *(_WORD *)(v27 + 8) & 0x7F)
    {
      v29 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v29 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_33;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_32;
        if (i == 16)
          goto LABEL_26;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_39;
        if (i == 24)
        {
LABEL_26:
          v29 = -48;
        }
        else
        {
LABEL_32:
          if (i != 70)
          {
LABEL_33:
            v30 = i - 52;
            if ((i - 33) >= 5)
              v31 = -48;
            else
              v31 = -64;
            if (v30 >= 6)
              v29 = v31;
            else
              v29 = -72;
            goto LABEL_39;
          }
          v29 = -64;
        }
      }
LABEL_39:
      v32 = *(_QWORD *)(v27 + v29 + 16);
      v27 = v32 & 0xFFFFFFFFFFFFFFF8;
      if ((v32 & 4) != 0)
        v27 = *(_QWORD *)v27;
    }
    v25 = v27 - 40;
  }
  v33 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v25 + 88) + 2032, 8, 3);
  *(_QWORD *)(v19 + 120) = v33;
  *v33 = v24;
  if (sub_22EABD2CC(v9))
  {
    LODWORD(v34) = sub_22EABBAB4((_QWORD *)v8, v19, 1, 0, 0);
  }
  else
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
    v34 = (**(_QWORD **)(v9 + 128) >> 40) & 1;
  }
  v35 = 0x800000;
  if (!(_DWORD)v34)
    v35 = 0;
  *(_QWORD *)(v19 + 80) = *(_QWORD *)(v19 + 80) & 0xFFFFFFFFFF7FFFFFLL | v35;
  if (!sub_22EAB5D40(v9))
  {
    if (sub_22EABD2CC(v9))
    {
      v38 = sub_22EABBAB4((_QWORD *)v8, v19, 1, 1, 0);
      v36 = *(_QWORD *)(v19 + 80);
      if ((v38 & 1) != 0)
        goto LABEL_53;
    }
    else
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
      v36 = *(_QWORD *)(v19 + 80);
      if ((**(_QWORD **)(v9 + 128) & 0x400000000000) != 0)
        goto LABEL_53;
    }
    v37 = 0;
    goto LABEL_59;
  }
  v36 = *(_QWORD *)(v19 + 80);
LABEL_53:
  v37 = 0x1000000;
LABEL_59:
  *(_QWORD *)(v19 + 80) = v36 & 0xFFFFFFFFFEFFFFFFLL | v37;
  ++*(_DWORD *)(*(_QWORD *)(v8 + 88) + 18700);
  v39 = (uint64_t *)sub_22E90490C(v8, v9 + 64);
  sub_22EAC6C64((_QWORD *)v8, (uint64_t)v39, v19);
  if (sub_22EAB8670(v8, v19, 1, 0, 0))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
    **(_QWORD **)(v9 + 128) |= 0x400000000uLL;
    sub_22EAB9ED0((_QWORD *)v8, v19, v16);
  }
  if (v39)
    sub_22EA0483C(v8, v19, v39, 0);
  return sub_22EFCCFA0(v9 + 64, v19);
}

unsigned int **sub_22EAEC0A8(unsigned int **result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;
  BOOL v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int i;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL4 v36;
  char v37;
  uint64_t *v38;
  unint64_t v39;

  v3 = **result;
  if (!(v3 | a2))
    return result;
  v5 = (_DWORD)a2 && (_DWORD)v3 == 13;
  v6 = v5;
  if ((_DWORD)a2 == 13 || v6)
    return result;
  v8 = (uint64_t)result[1];
  v9 = *(_QWORD *)result[2];
  v10 = (uint64_t *)result[3];
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    v12 = v11 & 0xFFFFFFFFFFFFFFF0;
  else
    v12 = sub_22EF6462C(*(_QWORD *)(v8 + 88), v9);
  v13 = sub_22EF5DD84(*(_QWORD *)(v8 + 88), v12, a2);
  v14 = sub_22EF5DE18(*(_QWORD *)(v8 + 88), v13, a3);
  v39 = sub_22EF5FB8C(*(_QWORD *)(v8 + 88), v14);
  v15 = sub_22EAB8368(v8, v9, 2, 0, a2, a3, v3, 0, 0, 0);
  v16 = *(_DWORD *)(v9 + 24);
  v17 = *(_QWORD *)(v8 + 88);
  v18 = (*(_DWORD *)(v8 + 56) & 0xFC) != 4;
  v19 = sub_22EFC7430(168, v17, v9 + 64, 0);
  v20 = sub_22EFBF4FC(v19, 55, v17, v9 + 64, v16, v10, 0, 0, 0, 0, v18, 1, v15, 0);
  *(_QWORD *)v20 = &off_24FAC37B0;
  *(_QWORD *)(v20 + 160) = 0;
  v21 = *(_QWORD *)(v20 + 80) & 0xFFFFFFFFFFLL;
  *(_DWORD *)(v20 + 28) = *(_DWORD *)(v20 + 28) & 0xFFFF9DFF | 0x200;
  *(_QWORD *)(v20 + 80) = v21 | 0x2000000;
  sub_22EAC6FB8(v8, v19, *(_QWORD *)(*(_QWORD *)(v8 + 88) + 16392), (uint64_t *)&v39, 1uLL, v3, 0);
  if ((*(_BYTE *)(*(_QWORD *)(v8 + 72) + 68) & 0x20) != 0)
    sub_22E9FE3F8(v8, v9, 2, v19, 0, 0);
  v22 = sub_22EFBF080(*(_QWORD *)(v8 + 88), v19 + 72, v16, v16, 0, v39, 0, 0, 0);
  v23 = v19;
  if ((*(_DWORD *)(v19 + 28) & 0x7F) != 0x53)
  {
    v24 = *(_QWORD *)(v19 + 16);
    v25 = v24 & 0xFFFFFFFFFFFFFFF8;
    if ((v24 & 4) != 0)
      v25 = *(_QWORD *)v25;
    for (i = *(_WORD *)(v25 + 8) & 0x7F; i != 83; i = *(_WORD *)(v25 + 8) & 0x7F)
    {
      v27 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v27 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_29;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_28;
        if (i == 16)
          goto LABEL_22;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_35;
        if (i == 24)
        {
LABEL_22:
          v27 = -48;
        }
        else
        {
LABEL_28:
          if (i != 70)
          {
LABEL_29:
            v28 = i - 52;
            if ((i - 33) >= 5)
              v29 = -48;
            else
              v29 = -64;
            if (v28 >= 6)
              v27 = v29;
            else
              v27 = -72;
            goto LABEL_35;
          }
          v27 = -64;
        }
      }
LABEL_35:
      v30 = *(_QWORD *)(v25 + v27 + 16);
      v25 = v30 & 0xFFFFFFFFFFFFFFF8;
      if ((v30 & 4) != 0)
        v25 = *(_QWORD *)v25;
    }
    v23 = v25 - 40;
  }
  v31 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v23 + 88) + 2032, 8, 3);
  *(_QWORD *)(v19 + 120) = v31;
  *v31 = v22;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
  if ((**(_QWORD **)(v9 + 128) & 0x40000000) != 0)
    v32 = sub_22EABBAB4((_QWORD *)v8, v19, 2, 0, 0);
  else
    v32 = sub_22EACBAD4(v9);
  v33 = 0x800000;
  if (!v32)
    v33 = 0;
  *(_QWORD *)(v19 + 80) = *(_QWORD *)(v19 + 80) & 0xFFFFFFFFFF7FFFFFLL | v33;
  if (!sub_22EAB5D40(v9))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
    if ((**(_QWORD **)(v9 + 128) & 0x40000000) != 0)
    {
      v37 = sub_22EABBAB4((_QWORD *)v8, v19, 2, 1, 0);
      v34 = *(_QWORD *)(v19 + 80);
      if ((v37 & 1) != 0)
        goto LABEL_49;
    }
    else
    {
      v36 = sub_22EACBB38(v9);
      v34 = *(_QWORD *)(v19 + 80);
      if (v36)
        goto LABEL_49;
    }
    v35 = 0;
    goto LABEL_55;
  }
  v34 = *(_QWORD *)(v19 + 80);
LABEL_49:
  v35 = 0x1000000;
LABEL_55:
  *(_QWORD *)(v19 + 80) = v34 & 0xFFFFFFFFFEFFFFFFLL | v35;
  ++*(_DWORD *)(*(_QWORD *)(v8 + 88) + 18708);
  v38 = (uint64_t *)sub_22E90490C(v8, v9 + 64);
  sub_22EAC6C64((_QWORD *)v8, (uint64_t)v38, v19);
  if (sub_22EAB8670(v8, v19, 2, 0, 0))
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
    **(_QWORD **)(v9 + 128) |= 0x800000000uLL;
    sub_22EAB9ED0((_QWORD *)v8, v19, v16);
  }
  if (v38)
    sub_22EA0483C(v8, v19, v38, 0);
  return (unsigned int **)sub_22EFCCFA0(v9 + 64, v19);
}

uint64_t sub_22EAEC53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a2;
  v9[1] = a3;
  if (!a2)
    return 1;
  v5 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v5 || (result = sub_22EAEC53C(a1, v5), (_DWORD)result))
  {
    if (*(_QWORD *)(a2 + 16) && (*(_BYTE *)(a2 + 8) & 4) != 0)
    {
      v7 = sub_22F0AB4E0((uint64_t)v9);
      return sub_22EAD26A8(a1, v7, v8);
    }
    return 1;
  }
  return result;
}

uint64_t sub_22EAEC5C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  int v9;
  unint64_t v10;

  v2 = *a2;
  v3 = *a2 & 7;
  v4 = v3;
  if ((_DWORD)v3 == 7)
  {
    v5 = *(_DWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
    if (v5 >= 3)
      v5 = 3;
    v4 = v5 | 8;
  }
  if ((v4 - 3) < 3)
  {
    if ((v3 - 3) <= 2)
    {
      v6 = (_QWORD *)a2[2];
      if (v6)
      {
        if ((sub_22EAD26A8(a1, *v6, v6 + 1) & 1) == 0)
          return 0;
      }
    }
    return 1;
  }
  if (v4 != 8)
    return 1;
  if ((~(_BYTE)v2 & 7) != 0)
    goto LABEL_15;
  v8 = v2 & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_DWORD *)v8;
  if (*(_DWORD *)v8 >= 3u)
    v9 = 3;
  if (v9)
LABEL_15:
    v10 = 0;
  else
    v10 = *(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFFF9;
  result = sub_22EAEC794(a1, v10);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22EAEC67C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      v6 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (v6)
        result = sub_22EAD26A8(a1, *v6, v6 + 1);
      else
        result = sub_22EADE928(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      v5 = (uint64_t *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (!*v5 || (result = sub_22EAEC53C(a1, *v5, v5[1]), (_DWORD)result))
        result = sub_22EAEC794(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL, 0);
      break;
    case 8:
      v7 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        v9 = v7 - 1;
        do
        {
          result = sub_22EAEC858(a1, v8);
          v11 = v9-- != 0;
          if (!(_DWORD)result)
            break;
          v8 += 24;
        }
        while (v11);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EAEC794(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  char v5;

  v2 = a2 & 0xFFFFFFFFFFFFFFF8;
  if ((a2 & 6) != 6 || v2 == 0)
  {
    if ((a2 & 6) != 4)
      return 1;
    if (!v2)
      return 1;
    result = sub_22EAEC7F4(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    if ((_DWORD)result)
      return 1;
  }
  else
  {
    v5 = sub_22EAEC7F4(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    return (v5 & 1) != 0;
  }
  return result;
}

uint64_t sub_22EAEC7F4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 1;
  v4 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v4 || (result = sub_22EAEC7F4(a1, v4), (_DWORD)result))
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 && (*(_BYTE *)(a2 + 8) & 4) != 0)
      return sub_22EADE928(a1, v6 & 0xFFFFFFFFFFFFFFF0);
    return 1;
  }
  return result;
}

uint64_t sub_22EAEC858(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      result = sub_22EADE928(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      result = sub_22EAEC794(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 8), 0);
      break;
    case 8:
      v4 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v4)
      {
        v5 = *(_QWORD *)(a2 + 8);
        v6 = v4 - 1;
        do
        {
          result = sub_22EAEC858(a1, v5);
          v8 = v6-- != 0;
          if (!(_DWORD)result)
            break;
          v5 += 24;
        }
        while (v8);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EAEC924(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  int v5;
  uint64_t result;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  unsigned int v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t **v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t **v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  BOOL v52;
  uint64_t v53;
  uint64_t **v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t **v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t **v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t **v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t **v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t **v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unsigned int v93;
  BOOL v94;
  uint64_t v95;
  uint64_t **v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t **v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD **v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t **v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t **v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t **v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t **v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  BOOL v127;
  uint64_t v128;
  uint64_t **v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int v133;
  BOOL v134;
  uint64_t v135;
  uint64_t **v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t **v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t **v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int v153;
  BOOL v154;
  uint64_t v155;
  uint64_t **v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t **v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t **v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t **v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t **v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  BOOL v185;
  uint64_t v186;
  uint64_t **v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  unint64_t v192;
  unint64_t v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t **v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t **v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  _QWORD *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t **v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t **v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t **v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  unsigned int v224;
  BOOL v225;
  uint64_t v226;
  uint64_t **v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  BOOL v235;
  uint64_t v236;
  uint64_t **v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int v241;
  BOOL v242;
  uint64_t v243;
  uint64_t **v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t **v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  unsigned int v257;
  uint64_t v258;
  uint64_t **v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t **v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _QWORD *v268;
  unsigned int v269;
  uint64_t v270;
  uint64_t **v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  _DWORD *v275;
  uint64_t v276;
  uint64_t *v277;
  unsigned int v278;
  uint64_t v279;
  unsigned int v280;
  BOOL v281;
  uint64_t v282;
  uint64_t **v283;
  uint64_t *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  uint64_t v289;
  unsigned int v290;
  BOOL v291;
  uint64_t v292;
  uint64_t **v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t **v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  _QWORD **v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int v305;
  BOOL v306;
  uint64_t v307;
  uint64_t **v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t **v312;
  uint64_t *v313;
  uint64_t v314;
  uint64_t v315;
  int v316;
  uint64_t v317;
  unsigned int v318;
  uint64_t v319;
  uint64_t **v320;
  uint64_t *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t **v324;
  uint64_t *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t **v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t **v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  _QWORD *v337;
  unsigned int v338;
  uint64_t v339;
  uint64_t **v340;
  uint64_t *v341;
  uint64_t v342;
  uint64_t v343;
  unsigned int v344;
  uint64_t v345;
  uint64_t **v346;
  uint64_t *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t **v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t *v356;
  uint64_t v357;
  _QWORD *v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t *v363;
  uint64_t v364;
  uint64_t **v365;
  uint64_t *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t **v369;
  uint64_t *v370;
  uint64_t v371;
  uint64_t v372;
  unsigned int v373;
  BOOL v374;
  uint64_t v375;
  uint64_t **v376;
  uint64_t *v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  unint64_t v381;
  unsigned int v382;
  uint64_t v383;
  uint64_t **v384;
  uint64_t *v385;
  uint64_t v386;
  uint64_t v387;
  unint64_t v388;
  uint64_t v389;
  unsigned int v390;
  uint64_t v391;
  uint64_t **v392;
  uint64_t *v393;
  uint64_t v394;
  uint64_t v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t **v398;
  uint64_t *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  unint64_t v403;
  _QWORD *v404;
  unsigned int v405;
  uint64_t v406;
  uint64_t **v407;
  uint64_t *v408;
  uint64_t v409;
  uint64_t v410;
  unsigned int v411;
  BOOL v412;
  uint64_t v413;
  uint64_t **v414;
  uint64_t *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t **v418;
  uint64_t *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t **v422;
  uint64_t *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t **v426;
  uint64_t *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t **v430;
  uint64_t *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t **v434;
  uint64_t *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t **v438;
  uint64_t *v439;
  uint64_t v440;
  uint64_t v441;
  int v442;
  uint64_t v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t **v446;
  uint64_t *v447;
  uint64_t v448;
  uint64_t v449;
  unint64_t v450;
  unsigned int v451;
  uint64_t v452;
  uint64_t **v453;
  uint64_t *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t **v457;
  uint64_t *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t **v461;
  uint64_t *v462;
  uint64_t v463;
  uint64_t v464;
  unint64_t v465;
  uint64_t v466;
  uint64_t i;
  uint64_t v468;
  uint64_t v469;
  _QWORD *v470;
  uint64_t v471;
  unsigned int v472;
  BOOL v473;
  uint64_t v474;
  uint64_t **v475;
  uint64_t *v476;
  uint64_t v477;
  uint64_t v478;
  unint64_t v479;
  unsigned int v480;
  uint64_t v481;
  uint64_t **v482;
  uint64_t *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t **v486;
  uint64_t *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t *v490;
  uint64_t **v491;
  uint64_t *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t *v495;
  unsigned int v496;
  uint64_t v497;
  uint64_t **v498;
  uint64_t *v499;
  uint64_t v500;
  uint64_t v501;
  char *v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t **v505;
  uint64_t *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t **v509;
  uint64_t *v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t **v514;
  uint64_t *v515;
  uint64_t v516;
  uint64_t v517;
  unint64_t v518;
  uint64_t v519;
  unsigned int v520;
  uint64_t v521;
  uint64_t **v522;
  uint64_t *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t **v533;
  uint64_t *v534;
  uint64_t v535;
  uint64_t v536;
  BOOL v537;
  uint64_t **v538;
  uint64_t *v539;
  uint64_t v540;
  uint64_t v541;
  BOOL v542;
  BOOL v543;
  BOOL v544;
  BOOL v545;
  BOOL v546;
  int *v547;
  BOOL v548;
  BOOL v549;
  BOOL v550;
  uint64_t **v551;
  uint64_t *v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  int v562;
  uint64_t v563;

  if (!a2)
    return 1;
  v4 = a2 + 28;
  v5 = *(_DWORD *)(a2 + 28) & 0x7F;
  if ((*(_DWORD *)(a2 + 28) & 0x200) != 0)
  {
    if (v5 == 38)
      return sub_22EAF07AC(a1, a2);
    return 1;
  }
  switch(v5)
  {
    case 0:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v8 = *v7;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v10 = *(_QWORD *)v9 + 8 * *(unsigned int *)(v9 + 8);
      }
      else
      {
        v10 = 0;
      }
      while (2)
      {
        if (v8 == (uint64_t *)v10)
          return 1;
        if ((sub_22EAF0B78(a1, *v8) & 1) != 0)
        {
          ++v8;
          continue;
        }
        break;
      }
      return 0;
    case 1:
      v248 = *(_QWORD **)(a2 + 96);
      if (v248)
      {
        result = sub_22EAD26A8(a1, *v248, v248 + 1);
        if (!(_DWORD)result)
          return result;
      }
      v249 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
      result = sub_22EAD2F20(a1, v249, 0);
      if (!(_DWORD)result)
        return result;
      v250 = *(unsigned int *)(a2 + 112);
      if (!(_DWORD)v250)
        goto LABEL_454;
      v251 = 16 * v250;
      v252 = (_QWORD *)(*(_QWORD *)(a2 + 104) + 8);
      while (1)
      {
        if (*v252)
        {
          result = sub_22EAD2F20(a1, *v252, 0);
          if (!(_DWORD)result)
            break;
        }
        v252 += 2;
        v251 -= 16;
        if (!v251)
        {
LABEL_454:
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v254 = *v253;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v256 = *(_QWORD *)v255 + 8 * *(unsigned int *)(v255 + 8);
            }
            else
            {
              v256 = 0;
            }
            while (v254 != (uint64_t *)v256)
            {
              if ((sub_22EAF0B78(a1, *v254) & 1) == 0)
                return 0;
              ++v254;
            }
          }
          return 1;
        }
      }
      return result;
    case 2:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v217 = *v216;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v219 = *(_QWORD *)v218 + 8 * *(unsigned int *)(v218 + 8);
      }
      else
      {
        v219 = 0;
      }
      while (2)
      {
        if (v217 == (uint64_t *)v219)
          return 1;
        if ((sub_22EAF0B78(a1, *v217) & 1) != 0)
        {
          ++v217;
          continue;
        }
        break;
      }
      return 0;
    case 3:
      result = sub_22EAEC924(a1, *(_QWORD *)(a2 + 40));
      if (!(_DWORD)result)
        return result;
      v231 = *(_QWORD *)(a2 + 48);
      if (!v231)
        goto LABEL_421;
      v232 = *(unsigned int *)(v231 + 8);
      if (!(_DWORD)v232)
        goto LABEL_421;
      v233 = v231 + 16;
      while ((sub_22EAEC67C(a1, v233) & 1) != 0)
      {
        v233 += 32;
        if (!--v232)
        {
LABEL_421:
          v234 = *(_DWORD *)v4 & 0x7F;
          v235 = v234 > 0x39 || ((1 << v234) & 0x3F0003E01011066) == 0;
          if (v235
            && (v234 - 70 <= 0xD ? (v544 = ((1 << (v234 - 70)) & 0x2803) == 0) : (v544 = 1), v544 && v234 - 19 > 4))
          {
            v236 = 0;
          }
          else
          {
            v236 = sub_22EFCAE04(a2);
          }
          result = sub_22EAF0ADC(a1, v236);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v238 = *v237;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v240 = *(_QWORD *)v239 + 8 * *(unsigned int *)(v239 + 8);
            }
            else
            {
              v240 = 0;
            }
            while (v238 != (uint64_t *)v240)
            {
              if ((sub_22EAF0B78(a1, *v238) & 1) == 0)
                return 0;
              ++v238;
            }
          }
          return 1;
        }
      }
      return 0;
    case 4:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v173 = *v172;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v175 = *(_QWORD *)v174 + 8 * *(unsigned int *)(v174 + 8);
      }
      else
      {
        v175 = 0;
      }
      while (2)
      {
        if (v173 == (uint64_t *)v175)
          return 1;
        if ((sub_22EAF0B78(a1, *v173) & 1) != 0)
        {
          ++v173;
          continue;
        }
        break;
      }
      return 0;
    case 5:
      result = sub_22EAF0ADC(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v298 = *v297;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v300 = *(_QWORD *)v299 + 8 * *(unsigned int *)(v299 + 8);
      }
      else
      {
        v300 = 0;
      }
      while (2)
      {
        if (v298 == (uint64_t *)v300)
          return 1;
        if ((sub_22EAF0B78(a1, *v298) & 1) != 0)
        {
          ++v298;
          continue;
        }
        break;
      }
      return 0;
    case 6:
      result = sub_22EAF0ADC(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v325 = *v324;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v327 = *(_QWORD *)v326 + 8 * *(unsigned int *)(v326 + 8);
      }
      else
      {
        v327 = 0;
      }
      while (2)
      {
        if (v325 == (uint64_t *)v327)
          return 1;
        if ((sub_22EAF0B78(a1, *v325) & 1) != 0)
        {
          ++v325;
          continue;
        }
        break;
      }
      return 0;
    case 7:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 40), 0);
      if (!(_DWORD)result)
        return result;
      v241 = *(_DWORD *)v4 & 0x7F;
      v242 = v241 > 0x39 || ((1 << v241) & 0x3F0003E01011066) == 0;
      v243 = !v242 || v241 - 70 <= 0xD && ((1 << (v241 - 70)) & 0x2803) != 0 || v241 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v243);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v245 = *v244;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v247 = *(_QWORD *)v246 + 8 * *(unsigned int *)(v246 + 8);
      }
      else
      {
        v247 = 0;
      }
      while (2)
      {
        if (v245 == (uint64_t *)v247)
          return 1;
        if ((sub_22EAF0B78(a1, *v245) & 1) != 0)
        {
          ++v245;
          continue;
        }
        break;
      }
      return 0;
    case 8:
      v336 = *(_QWORD *)(a2 + 40);
      v337 = (_QWORD *)(v336 & 0xFFFFFFFFFFFFFFF8);
      if ((v336 & 4) != 0 && v337)
      {
        if ((sub_22EAD26A8(a1, *v337, v337 + 1) & 1) == 0)
          return 0;
      }
      else
      {
        if ((v336 & 4) != 0)
          v479 = 0;
        else
          v479 = v336 & 0xFFFFFFFFFFFFFFF8;
        result = sub_22EAEC924(a1, v479);
        if (!(_DWORD)result)
          return result;
      }
      v480 = *(_DWORD *)v4 & 0x7F;
      if (v480 <= 0x39 && ((1 << v480) & 0x3F0003E01011066) != 0
        || v480 - 70 <= 0xD && ((1 << (v480 - 70)) & 0x2803) != 0
        || v480 - 19 <= 4)
      {
        v481 = sub_22EFCAE04(a2);
      }
      else
      {
        v481 = 0;
      }
      result = sub_22EAF0ADC(a1, v481);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v483 = *v482;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v485 = *(_QWORD *)v484 + 8 * *(unsigned int *)(v484 + 8);
      }
      else
      {
        v485 = 0;
      }
      while (1)
      {
        if (v483 == (uint64_t *)v485)
          return 1;
        if ((sub_22EAF0B78(a1, *v483) & 1) == 0)
          break;
        ++v483;
      }
      return 0;
    case 9:
      v204 = *(_QWORD *)(a2 + 48);
      v205 = (_QWORD *)(v204 & 0xFFFFFFFFFFFFFFF8);
      if ((v204 & 4) != 0 && v205)
      {
        if ((sub_22EAD26A8(a1, *v205, v205 + 1) & 1) == 0)
          return 0;
      }
      else
      {
        if ((v204 & 4) != 0)
          v465 = 0;
        else
          v465 = v204 & 0xFFFFFFFFFFFFFFF8;
        result = sub_22EAEC924(a1, v465);
        if (!(_DWORD)result)
          return result;
      }
      v466 = *(unsigned int *)(a2 + 36);
      if ((_DWORD)v466)
      {
        for (i = 0; i != v466; ++i)
        {
          v468 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * i);
          v469 = *(_DWORD *)(v468 + 12) & 0x1FFFFFFF;
          if ((_DWORD)v469)
          {
            v470 = (_QWORD *)(v468 + 16);
            v471 = 8 * v469;
            do
            {
              if ((sub_22EAEC924(a1, *v470) & 1) == 0)
                return 0;
              ++v470;
              v471 -= 8;
            }
            while (v471);
          }
        }
      }
      v472 = *(_DWORD *)v4 & 0x7F;
      v473 = v472 > 0x39 || ((1 << v472) & 0x3F0003E01011066) == 0;
      if (v473 && (v472 - 70 <= 0xD ? (v550 = ((1 << (v472 - 70)) & 0x2803) == 0) : (v550 = 1), v550 && v472 - 19 > 4))
        v474 = 0;
      else
        v474 = sub_22EFCAE04(a2);
      result = sub_22EAF0ADC(a1, v474);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v476 = *v475;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v478 = *(_QWORD *)v477 + 8 * *(unsigned int *)(v477 + 8);
      }
      else
      {
        v478 = 0;
      }
      while (1)
      {
        if (v476 == (uint64_t *)v478)
          return 1;
        if ((sub_22EAF0B78(a1, *v476) & 1) == 0)
          break;
        ++v476;
      }
      return 0;
    case 10:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v333 = *v332;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v335 = *(_QWORD *)v334 + 8 * *(unsigned int *)(v334 + 8);
      }
      else
      {
        v335 = 0;
      }
      while (2)
      {
        if (v333 == (uint64_t *)v335)
          return 1;
        if ((sub_22EAF0B78(a1, *v333) & 1) != 0)
        {
          ++v333;
          continue;
        }
        break;
      }
      return 0;
    case 11:
      return (sub_22EAF07F4(a1, a2) & 1) != 0;
    case 12:
      result = sub_22EAF0ADC(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v201 = *v200;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v203 = *(_QWORD *)v202 + 8 * *(unsigned int *)(v202 + 8);
      }
      else
      {
        v203 = 0;
      }
      while (2)
      {
        if (v201 == (uint64_t *)v203)
          return 1;
        if ((sub_22EAF0B78(a1, *v201) & 1) != 0)
        {
          ++v201;
          continue;
        }
        break;
      }
      return 0;
    case 13:
      if (!sub_22EAEC53C(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v316 = *(_DWORD *)(a2 + 24);
      v317 = *(_QWORD *)(a2 + 80);
      v561 = *(_QWORD *)(a2 + 40);
      v562 = v316;
      v563 = v317;
      if (!sub_22EAEC5C4(a1, &v561))
        return 0;
      if ((v318 = *(_DWORD *)v4 & 0x7F, v318 <= 0x39) && ((1 << v318) & 0x3F0003E01011066) != 0
        || v318 - 70 <= 0xD && ((1 << (v318 - 70)) & 0x2803) != 0
        || v318 - 19 <= 4)
      {
        v319 = sub_22EFCAE04(a2);
      }
      else
      {
        v319 = 0;
      }
      if (!sub_22EAF0ADC(a1, v319))
        return 0;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v321 = *v320;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v323 = *(_QWORD *)v322 + 8 * *(unsigned int *)(v322 + 8);
      }
      else
      {
        v323 = 0;
      }
      while (2)
      {
        if (v321 == (uint64_t *)v323)
          return 1;
        if ((sub_22EAF0B78(a1, *v321) & 1) != 0)
        {
          ++v321;
          continue;
        }
        break;
      }
      return 0;
    case 14:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v141 = *v140;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v143 = *(_QWORD *)v142 + 8 * *(unsigned int *)(v142 + 8);
      }
      else
      {
        v143 = 0;
      }
      while (2)
      {
        if (v141 == (uint64_t *)v143)
          return 1;
        if ((sub_22EAF0B78(a1, *v141) & 1) != 0)
        {
          ++v141;
          continue;
        }
        break;
      }
      return 0;
    case 15:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v221 = *v220;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v223 = *(_QWORD *)v222 + 8 * *(unsigned int *)(v222 + 8);
      }
      else
      {
        v223 = 0;
      }
      while (2)
      {
        if (v221 == (uint64_t *)v223)
          return 1;
        if ((sub_22EAF0B78(a1, *v221) & 1) != 0)
        {
          ++v221;
          continue;
        }
        break;
      }
      return 0;
    case 16:
      result = sub_22EAF0ADC(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v123 = *v122;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v125 = *(_QWORD *)v124 + 8 * *(unsigned int *)(v124 + 8);
      }
      else
      {
        v125 = 0;
      }
      while (2)
      {
        if (v123 == (uint64_t *)v125)
          return 1;
        if ((sub_22EAF0B78(a1, *v123) & 1) != 0)
        {
          ++v123;
          continue;
        }
        break;
      }
      return 0;
    case 17:
      result = sub_22EAEC53C(a1, *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80));
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v264 = *v263;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v266 = *(_QWORD *)v265 + 8 * *(unsigned int *)(v265 + 8);
      }
      else
      {
        v266 = 0;
      }
      while (2)
      {
        if (v264 == (uint64_t *)v266)
          return 1;
        if ((sub_22EAF0B78(a1, *v264) & 1) != 0)
        {
          ++v264;
          continue;
        }
        break;
      }
      return 0;
    case 18:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v329 = *v328;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v331 = *(_QWORD *)v330 + 8 * *(unsigned int *)(v330 + 8);
      }
      else
      {
        v331 = 0;
      }
      while (2)
      {
        if (v329 == (uint64_t *)v331)
          return 1;
        if ((sub_22EAF0B78(a1, *v329) & 1) != 0)
        {
          ++v329;
          continue;
        }
        break;
      }
      return 0;
    case 19:
      v361 = *(_QWORD *)(a2 + 112);
      if (!v361)
        goto LABEL_650;
      v362 = *(unsigned int *)(v361 + 8);
      if (!(_DWORD)v362)
        goto LABEL_650;
      v363 = (uint64_t *)(v361 + 16);
      v364 = 8 * v362;
      while ((sub_22EAF090C(a1, *v363) & 1) != 0)
      {
        ++v363;
        v364 -= 8;
        if (!v364)
        {
LABEL_650:
          result = sub_22EAF0ADC(a1, a2 + 48);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v366 = *v365;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v368 = *(_QWORD *)v367 + 8 * *(unsigned int *)(v367 + 8);
            }
            else
            {
              v368 = 0;
            }
            while (v366 != (uint64_t *)v368)
            {
              if ((sub_22EAF0B78(a1, *v366) & 1) == 0)
                return 0;
              ++v366;
            }
          }
          return 1;
        }
      }
      return 0;
    case 20:
      result = sub_22EAF0ADC(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v284 = *v283;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v286 = *(_QWORD *)v285 + 8 * *(unsigned int *)(v285 + 8);
      }
      else
      {
        v286 = 0;
      }
      while (2)
      {
        if (v284 == (uint64_t *)v286)
          return 1;
        if ((sub_22EAF0B78(a1, *v284) & 1) != 0)
        {
          ++v284;
          continue;
        }
        break;
      }
      return 0;
    case 21:
      result = sub_22EAF0ADC(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v313 = *v312;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v315 = *(_QWORD *)v314 + 8 * *(unsigned int *)(v314 + 8);
      }
      else
      {
        v315 = 0;
      }
      while (2)
      {
        if (v313 == (uint64_t *)v315)
          return 1;
        if ((sub_22EAF0B78(a1, *v313) & 1) != 0)
        {
          ++v313;
          continue;
        }
        break;
      }
      return 0;
    case 22:
      v354 = *(_QWORD *)(a2 + 112);
      if (!v354)
        goto LABEL_637;
      v355 = *(unsigned int *)(v354 + 8);
      if (!(_DWORD)v355)
        goto LABEL_637;
      v356 = (uint64_t *)(v354 + 16);
      v357 = 8 * v355;
      while ((sub_22EAF090C(a1, *v356) & 1) != 0)
      {
        ++v356;
        v357 -= 8;
        if (!v357)
        {
LABEL_637:
          v358 = (_QWORD *)sub_22F259044(a2);
          if (v358)
          {
            result = sub_22EAD26A8(a1, *v358, v358 + 1);
            if (!(_DWORD)result)
              return result;
          }
          v359 = *(_QWORD *)(a2 + 120);
          if (!v359)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
            v359 = *(_QWORD *)(a2 + 120);
          }
          if (v359 < 8)
            v360 = 0;
          else
            v360 = *(_QWORD *)(v359 & 0xFFFFFFFFFFFFFFF8);
          if (v360 == a2)
          {
            v555 = sub_22F2590A8(a2);
            v556 = sub_22F25910C(a2);
            v557 = sub_22F259178(a2);
            v558 = sub_22F2591DC(a2);
            if (v555 != v556 && v557 != v558)
            {
              v559 = v557 + 4;
              v560 = v555 + 8;
              do
              {
                if (v560 == v556)
                  break;
                v560 += 8;
                v31 = v559 == v558;
                v559 += 4;
              }
              while (!v31);
            }
          }
          result = sub_22EAF0ADC(a1, a2 + 48);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v534 = *v533;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v536 = *(_QWORD *)v535 + 8 * *(unsigned int *)(v535 + 8);
            }
            else
            {
              v536 = 0;
            }
            while (v534 != (uint64_t *)v536)
            {
              if ((sub_22EAF0B78(a1, *v534) & 1) == 0)
                return 0;
              ++v534;
            }
          }
          return 1;
        }
      }
      return 0;
    case 23:
      v388 = *(_QWORD *)(a2 + 104);
      if (!v388)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
        v388 = *(_QWORD *)(a2 + 104);
      }
      if (v388 < 8)
        v389 = 0;
      else
        v389 = *(_QWORD *)(v388 & 0xFFFFFFFFFFFFFFF8);
      if (v389 == a2)
      {
        v526 = sub_22F259248(a2);
        v528 = v527;
        v529 = sub_22F2592CC(a2);
        if (v526 != v528 && v529 != v530)
        {
          v531 = v529 + 4;
          v532 = v526 + 8;
          do
          {
            if (v532 == v528)
              break;
            v532 += 8;
            v31 = v531 == v530;
            v531 += 4;
          }
          while (!v31);
        }
      }
      result = sub_22EAF0ADC(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v487 = *v486;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v489 = *(_QWORD *)v488 + 8 * *(unsigned int *)(v488 + 8);
      }
      else
      {
        v489 = 0;
      }
      while (2)
      {
        if (v487 == (uint64_t *)v489)
          return 1;
        if ((sub_22EAF0B78(a1, *v487) & 1) != 0)
        {
          ++v487;
          continue;
        }
        break;
      }
      return 0;
    case 24:
      v207 = *(_QWORD **)(a2 + 88);
      if (v207)
      {
        result = sub_22EAD26A8(a1, *v207, v207 + 1);
        if (!(_DWORD)result)
          return result;
      }
      v208 = *(unsigned int *)(a2 + 104);
      if (!(_DWORD)v208)
        goto LABEL_379;
      v209 = *(_QWORD **)(a2 + 96);
      v210 = 8 * v208;
      while ((sub_22EAEC924(a1, *v209) & 1) != 0)
      {
        ++v209;
        v210 -= 8;
        if (!v210)
        {
LABEL_379:
          if ((*(unsigned int (**)(unint64_t))(*(_QWORD *)a2 + 72))(a2))
          {
            v211 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
            result = sub_22EAD2F20(a1, v211, 0);
            if (!(_DWORD)result)
              return result;
          }
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v213 = *v212;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v215 = *(_QWORD *)v214 + 8 * *(unsigned int *)(v214 + 8);
            }
            else
            {
              v215 = 0;
            }
            while (v213 != (uint64_t *)v215)
            {
              if ((sub_22EAF0B78(a1, *v213) & 1) == 0)
                return 0;
              ++v213;
            }
          }
          return 1;
        }
      }
      return 0;
    case 25:
      v206 = *(_QWORD **)(a2 + 64);
      if (v206)
      {
        if ((sub_22EAD26A8(a1, *v206, v206 + 1) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22EADE928(a1, *(_QWORD *)(a2 + 56));
        if (!(_DWORD)result)
          return result;
      }
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v510 = *v509;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v512 = *(_QWORD *)v511 + 8 * *(unsigned int *)(v511 + 8);
      }
      else
      {
        v512 = 0;
      }
      while (2)
      {
        if (v510 == (uint64_t *)v512)
          return 1;
        if ((sub_22EAF0B78(a1, *v510) & 1) != 0)
        {
          ++v510;
          continue;
        }
        break;
      }
      return 0;
    case 26:
      result = sub_22EAF1114(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      v411 = *(_DWORD *)v4 & 0x7F;
      v412 = v411 > 0x39 || ((1 << v411) & 0x3F0003E01011066) == 0;
      v413 = !v412 || v411 - 70 <= 0xD && ((1 << (v411 - 70)) & 0x2803) != 0 || v411 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v413);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v415 = *v414;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v417 = *(_QWORD *)v416 + 8 * *(unsigned int *)(v416 + 8);
      }
      else
      {
        v417 = 0;
      }
      while (2)
      {
        if (v415 == (uint64_t *)v417)
          return 1;
        if ((sub_22EAF0B78(a1, *v415) & 1) != 0)
        {
          ++v415;
          continue;
        }
        break;
      }
      return 0;
    case 27:
      result = sub_22EAF1114(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 64), 0);
      if (!(_DWORD)result)
        return result;
      if ((v112 = *(_DWORD *)v4 & 0x7F, v112 <= 0x39) && ((1 << v112) & 0x3F0003E01011066) != 0
        || v112 - 70 <= 0xD && ((1 << (v112 - 70)) & 0x2803) != 0
        || v112 - 19 <= 4)
      {
        v113 = sub_22EFCAE04(a2);
      }
      else
      {
        v113 = 0;
      }
      result = sub_22EAF0ADC(a1, v113);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v115 = *v114;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v117 = *(_QWORD *)v116 + 8 * *(unsigned int *)(v116 + 8);
      }
      else
      {
        v117 = 0;
      }
      while (2)
      {
        if (v115 == (uint64_t *)v117)
          return 1;
        if ((sub_22EAF0B78(a1, *v115) & 1) != 0)
        {
          ++v115;
          continue;
        }
        break;
      }
      return 0;
    case 28:
      result = sub_22EAF1114(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EAEC924(a1, *(_QWORD *)(a2 + 48));
      if (!(_DWORD)result)
        return result;
      if ((v390 = *(_DWORD *)v4 & 0x7F, v390 <= 0x39) && ((1 << v390) & 0x3F0003E01011066) != 0
        || v390 - 70 <= 0xD && ((1 << (v390 - 70)) & 0x2803) != 0
        || v390 - 19 <= 4)
      {
        v391 = sub_22EFCAE04(a2);
      }
      else
      {
        v391 = 0;
      }
      result = sub_22EAF0ADC(a1, v391);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v393 = *v392;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v395 = *(_QWORD *)v394 + 8 * *(unsigned int *)(v394 + 8);
      }
      else
      {
        v395 = 0;
      }
      while (2)
      {
        if (v393 == (uint64_t *)v395)
          return 1;
        if ((sub_22EAF0B78(a1, *v393) & 1) != 0)
        {
          ++v393;
          continue;
        }
        break;
      }
      return 0;
    case 29:
      result = sub_22EAF1114(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EAEC924(a1, *(_QWORD *)(a2 + 48));
      if (!(_DWORD)result)
        return result;
      if ((v396 = *(_DWORD *)v4 & 0x7F, v396 <= 0x39) && ((1 << v396) & 0x3F0003E01011066) != 0
        || v396 - 70 <= 0xD && ((1 << (v396 - 70)) & 0x2803) != 0
        || v396 - 19 <= 4)
      {
        v397 = sub_22EFCAE04(a2);
      }
      else
      {
        v397 = 0;
      }
      result = sub_22EAF0ADC(a1, v397);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v399 = *v398;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v401 = *(_QWORD *)v400 + 8 * *(unsigned int *)(v400 + 8);
      }
      else
      {
        v401 = 0;
      }
      while (2)
      {
        if (v399 == (uint64_t *)v401)
          return 1;
        if ((sub_22EAF0B78(a1, *v399) & 1) != 0)
        {
          ++v399;
          continue;
        }
        break;
      }
      return 0;
    case 30:
      result = sub_22EAEC924(a1, *(_QWORD *)(a2 + 48));
      if (!(_DWORD)result)
        return result;
      result = sub_22EAF1114(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      if ((v338 = *(_DWORD *)v4 & 0x7F, v338 <= 0x39) && ((1 << v338) & 0x3F0003E01011066) != 0
        || v338 - 70 <= 0xD && ((1 << (v338 - 70)) & 0x2803) != 0
        || v338 - 19 <= 4)
      {
        v339 = sub_22EFCAE04(a2);
      }
      else
      {
        v339 = 0;
      }
      result = sub_22EAF0ADC(a1, v339);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v341 = *v340;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v343 = *(_QWORD *)v342 + 8 * *(unsigned int *)(v342 + 8);
      }
      else
      {
        v343 = 0;
      }
      while (2)
      {
        if (v341 == (uint64_t *)v343)
          return 1;
        if ((sub_22EAF0B78(a1, *v341) & 1) != 0)
        {
          ++v341;
          continue;
        }
        break;
      }
      return 0;
    case 31:
      result = sub_22EAF1114(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EAEC924(a1, *(_QWORD *)(a2 + 48));
      if (!(_DWORD)result)
        return result;
      if ((v257 = *(_DWORD *)v4 & 0x7F, v257 <= 0x39) && ((1 << v257) & 0x3F0003E01011066) != 0
        || v257 - 70 <= 0xD && ((1 << (v257 - 70)) & 0x2803) != 0
        || v257 - 19 <= 4)
      {
        v258 = sub_22EFCAE04(a2);
      }
      else
      {
        v258 = 0;
      }
      result = sub_22EAF0ADC(a1, v258);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v260 = *v259;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v262 = *(_QWORD *)v261 + 8 * *(unsigned int *)(v261 + 8);
      }
      else
      {
        v262 = 0;
      }
      while (2)
      {
        if (v260 == (uint64_t *)v262)
          return 1;
        if ((sub_22EAF0B78(a1, *v260) & 1) != 0)
        {
          ++v260;
          continue;
        }
        break;
      }
      return 0;
    case 32:
      result = sub_22EAEC924(a1, *(_QWORD *)(a2 + 48));
      if (!(_DWORD)result)
        return result;
      if (*(_QWORD *)(a2 + 72) >= 8uLL && (*(_QWORD *)(a2 + 72) & 6) != 2)
      {
        v547 = sub_22F259350(a2);
        result = sub_22EAEC67C(a1, (uint64_t)v547);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EAF1114(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      if ((v344 = *(_DWORD *)v4 & 0x7F, v344 <= 0x39) && ((1 << v344) & 0x3F0003E01011066) != 0
        || v344 - 70 <= 0xD && ((1 << (v344 - 70)) & 0x2803) != 0
        || v344 - 19 <= 4)
      {
        v345 = sub_22EFCAE04(a2);
      }
      else
      {
        v345 = 0;
      }
      result = sub_22EAF0ADC(a1, v345);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v347 = *v346;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v349 = *(_QWORD *)v348 + 8 * *(unsigned int *)(v348 + 8);
      }
      else
      {
        v349 = 0;
      }
      if (v347 == (uint64_t *)v349)
        return 1;
      while ((sub_22EAF0B78(a1, *v347) & 1) != 0)
      {
        if (++v347 == (uint64_t *)v349)
          return 1;
      }
      return 0;
    case 33:
      v144 = *(_QWORD *)(a2 + 120);
      if ((v144 & 4) == 0)
        goto LABEL_252;
      v145 = 0;
      while (1)
      {
        v146 = v144 & 0xFFFFFFFFFFFFFFF8;
        if (v145 >= *(unsigned int *)(v146 + 16))
          break;
        sub_22EAF1114(a1, *(_QWORD *)(*(_QWORD *)(v146 + 24) + 8 * v145++));
        v144 = *(_QWORD *)(a2 + 120);
        if ((v144 & 4) == 0)
        {
LABEL_252:
          v147 = 0;
          v148 = 0;
          goto LABEL_952;
        }
      }
      v147 = *(_QWORD *)v146;
      v148 = *(_QWORD *)(v146 + 8);
LABEL_952:
      result = sub_22EAEC53C(a1, v147, v148);
      if (!(_DWORD)result)
        return result;
      v513 = *(_QWORD *)(a2 + 128);
      if ((v513 & 4) != 0 && (v513 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        result = sub_22EAD26A8(a1, *(_QWORD *)(v513 & 0xFFFFFFFFFFFFFFF8), (v513 & 0xFFFFFFFFFFFFFFF8) + 8);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EAF0ADC(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v515 = *v514;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v517 = *(_QWORD *)v516 + 8 * *(unsigned int *)(v516 + 8);
      }
      else
      {
        v517 = 0;
      }
      if (v515 == (uint64_t *)v517)
        return 1;
      while ((sub_22EAF0B78(a1, *v515) & 1) != 0)
      {
        if (++v515 == (uint64_t *)v517)
          return 1;
      }
      return 0;
    case 34:
      result = sub_22EAF11B4(a1, a2);
      if (!(_DWORD)result)
        return result;
      result = sub_22EAF0ADC(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v119 = *v118;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v121 = *(_QWORD *)v120 + 8 * *(unsigned int *)(v120 + 8);
      }
      else
      {
        v121 = 0;
      }
      if (v119 == (uint64_t *)v121)
        return 1;
      while ((sub_22EAF0B78(a1, *v119) & 1) != 0)
      {
        if (++v119 == (uint64_t *)v121)
          return 1;
      }
      return 0;
    case 35:
      result = sub_22EAF1228(a1, a2);
      if (!(_DWORD)result)
        return result;
      result = sub_22EAF0ADC(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v101 = *v100;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v103 = *(_QWORD *)v102 + 8 * *(unsigned int *)(v102 + 8);
      }
      else
      {
        v103 = 0;
      }
      if (v101 == (uint64_t *)v103)
        return 1;
      while ((sub_22EAF0B78(a1, *v101) & 1) != 0)
      {
        if (++v101 == (uint64_t *)v103)
          return 1;
      }
      return 0;
    case 36:
      v104 = *(_QWORD ***)(a2 + 160);
      if (v104)
      {
        if (*v104)
        {
          result = sub_22EAD26A8(a1, **v104, *v104 + 1);
          if (!(_DWORD)result)
            return result;
        }
      }
      v105 = *(_QWORD *)(a2 + 120);
      if ((v105 & 4) != 0)
      {
        v490 = (uint64_t *)(v105 & 0xFFFFFFFFFFFFFFF8);
        v106 = *v490;
        v107 = v490[1];
      }
      else
      {
        v106 = 0;
        v107 = 0;
      }
      result = sub_22EAEC53C(a1, v106, v107);
      if (!(_DWORD)result)
        return result;
      if (sub_22EFD5760(a2) != 2)
        return 1;
      result = sub_22EAF0ADC(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v492 = *v491;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v494 = *(_QWORD *)v493 + 8 * *(unsigned int *)(v493 + 8);
      }
      else
      {
        v494 = 0;
      }
      if (v492 == (uint64_t *)v494)
        return 1;
      while ((sub_22EAF0B78(a1, *v492) & 1) != 0)
      {
        if (++v492 == (uint64_t *)v494)
          return 1;
      }
      return 0;
    case 37:
      v63 = *(_QWORD *)(a2 + 184);
      if (!v63)
        goto LABEL_104;
      v64 = *(_DWORD *)(v63 + 12) & 0x1FFFFFFF;
      if (!(_DWORD)v64)
        goto LABEL_104;
      v65 = (_QWORD *)(v63 + 16);
      v66 = 8 * v64;
      while ((sub_22EAEC924(a1, *v65) & 1) != 0)
      {
        ++v65;
        v66 -= 8;
        if (!v66)
        {
LABEL_104:
          v67 = *(_QWORD *)(a2 + 192);
          v68 = *(unsigned int *)(v67 + 8);
          if ((_DWORD)v68)
          {
            v69 = v67 + 16;
            while ((sub_22EAEC67C(a1, v69) & 1) != 0)
            {
              v69 += 32;
              if (!--v68)
                goto LABEL_108;
            }
            return 0;
          }
LABEL_108:
          result = sub_22EAF1228(a1, a2);
          if (!(_DWORD)result)
            return result;
          result = sub_22EAF0ADC(a1, a2 + 64);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v71 = *v70;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v73 = *(_QWORD *)v72 + 8 * *(unsigned int *)(v72 + 8);
            }
            else
            {
              v73 = 0;
            }
            if (v71 != (uint64_t *)v73)
            {
              while ((sub_22EAF0B78(a1, *v71) & 1) != 0)
              {
                if (++v71 == (uint64_t *)v73)
                  return 1;
              }
              return 0;
            }
          }
          return 1;
        }
      }
      return 0;
    case 38:
      v402 = *(_QWORD *)(a2 + 48);
      if (v402)
      {
        result = sub_22EADE928(a1, v402 & 0xFFFFFFFFFFFFFFF0);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EAF07AC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v403 = *(_QWORD *)(a2 + 72);
      if (v403 >= 8 && (*(_QWORD *)(a2 + 72) & 6) != 2)
      {
        v404 = (_QWORD *)(v403 & 0xFFFFFFFFFFFFFFF8);
        if ((*(_QWORD *)(a2 + 72) & 6) == 4 && v404)
          v404 = (_QWORD *)v404[1];
        result = sub_22EAD26A8(a1, *v404, v404 + 1);
        if (!(_DWORD)result)
          return result;
      }
      if ((v405 = *(_DWORD *)v4 & 0x7F, v405 <= 0x39) && ((1 << v405) & 0x3F0003E01011066) != 0
        || v405 - 70 <= 0xD && ((1 << (v405 - 70)) & 0x2803) != 0
        || v405 - 19 <= 4)
      {
        v406 = sub_22EFCAE04(a2);
      }
      else
      {
        v406 = 0;
      }
      result = sub_22EAF0ADC(a1, v406);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v408 = *v407;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v410 = *(_QWORD *)v409 + 8 * *(unsigned int *)(v409 + 8);
      }
      else
      {
        v410 = 0;
      }
      if (v408 == (uint64_t *)v410)
        return 1;
      while ((sub_22EAF0B78(a1, *v408) & 1) != 0)
      {
        if (++v408 == (uint64_t *)v410)
          return 1;
      }
      return 0;
    case 39:
      return (sub_22EAF090C(a1, a2) & 1) != 0;
    case 40:
      v176 = *(_QWORD *)(a2 + 80);
      v177 = (_QWORD *)(v176 & 0xFFFFFFFFFFFFFFF8);
      if ((v176 & 4) != 0)
        v177 = (_QWORD *)*v177;
      result = sub_22EAD26A8(a1, *v177, v177 + 1);
      if (!(_DWORD)result)
        return result;
      if ((v178 = *(_DWORD *)v4 & 0x7F, v178 <= 0x39) && ((1 << v178) & 0x3F0003E01011066) != 0
        || v178 - 70 <= 0xD && ((1 << (v178 - 70)) & 0x2803) != 0
        || v178 - 19 <= 4)
      {
        v179 = sub_22EFCAE04(a2);
      }
      else
      {
        v179 = 0;
      }
      result = sub_22EAF0ADC(a1, v179);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v181 = *v180;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v183 = *(_QWORD *)v182 + 8 * *(unsigned int *)(v182 + 8);
      }
      else
      {
        v183 = 0;
      }
      if (v181 == (uint64_t *)v183)
        return 1;
      while ((sub_22EAF0B78(a1, *v181) & 1) != 0)
      {
        if (++v181 == (uint64_t *)v183)
          return 1;
      }
      return 0;
    case 41:
      v267 = *(_QWORD *)(a2 + 80);
      v268 = (_QWORD *)(v267 & 0xFFFFFFFFFFFFFFF8);
      if ((v267 & 4) != 0)
        v268 = (_QWORD *)*v268;
      result = sub_22EAD26A8(a1, *v268, v268 + 1);
      if (!(_DWORD)result)
        return result;
      if ((v269 = *(_DWORD *)v4 & 0x7F, v269 <= 0x39) && ((1 << v269) & 0x3F0003E01011066) != 0
        || v269 - 70 <= 0xD && ((1 << (v269 - 70)) & 0x2803) != 0
        || v269 - 19 <= 4)
      {
        v270 = sub_22EFCAE04(a2);
      }
      else
      {
        v270 = 0;
      }
      result = sub_22EAF0ADC(a1, v270);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v272 = *v271;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v274 = *(_QWORD *)v273 + 8 * *(unsigned int *)(v273 + 8);
      }
      else
      {
        v274 = 0;
      }
      if (v272 == (uint64_t *)v274)
        return 1;
      while ((sub_22EAF0B78(a1, *v272) & 1) != 0)
      {
        if (++v272 == (uint64_t *)v274)
          return 1;
      }
      return 0;
    case 42:
      result = sub_22EAEC53C(a1, *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80));
      if (!(_DWORD)result)
        return result;
      v373 = *(_DWORD *)v4 & 0x7F;
      v374 = v373 > 0x39 || ((1 << v373) & 0x3F0003E01011066) == 0;
      v375 = !v374 || v373 - 70 <= 0xD && ((1 << (v373 - 70)) & 0x2803) != 0 || v373 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v375);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v377 = *v376;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v379 = *(_QWORD *)v378 + 8 * *(unsigned int *)(v378 + 8);
      }
      else
      {
        v379 = 0;
      }
      if (v377 == (uint64_t *)v379)
        return 1;
      while ((sub_22EAF0B78(a1, *v377) & 1) != 0)
      {
        if (++v377 == (uint64_t *)v379)
          return 1;
      }
      return 0;
    case 43:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v41 = *v40;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v43 = *(_QWORD *)v42 + 8 * *(unsigned int *)(v42 + 8);
      }
      else
      {
        v43 = 0;
      }
      if (v41 == (uint64_t *)v43)
        return 1;
      while ((sub_22EAF0B78(a1, *v41) & 1) != 0)
      {
        if (++v41 == (uint64_t *)v43)
          return 1;
      }
      return 0;
    case 44:
      result = sub_22EAEC53C(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64));
      if (!(_DWORD)result)
        return result;
      v133 = *(_DWORD *)v4 & 0x7F;
      v134 = v133 > 0x39 || ((1 << v133) & 0x3F0003E01011066) == 0;
      v135 = !v134 || v133 - 70 <= 0xD && ((1 << (v133 - 70)) & 0x2803) != 0 || v133 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v135);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v137 = *v136;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v139 = *(_QWORD *)v138 + 8 * *(unsigned int *)(v138 + 8);
      }
      else
      {
        v139 = 0;
      }
      if (v137 == (uint64_t *)v139)
        return 1;
      while ((sub_22EAF0B78(a1, *v137) & 1) != 0)
      {
        if (++v137 == (uint64_t *)v139)
          return 1;
      }
      return 0;
    case 45:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v351 = *v350;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v353 = *(_QWORD *)v352 + 8 * *(unsigned int *)(v352 + 8);
      }
      else
      {
        v353 = 0;
      }
      if (v351 == (uint64_t *)v353)
        return 1;
      while ((sub_22EAF0B78(a1, *v351) & 1) != 0)
      {
        if (++v351 == (uint64_t *)v353)
          return 1;
      }
      return 0;
    case 46:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v435 = *v434;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v437 = *(_QWORD *)v436 + 8 * *(unsigned int *)(v436 + 8);
      }
      else
      {
        v437 = 0;
      }
      if (v435 == (uint64_t *)v437)
        return 1;
      while ((sub_22EAF0B78(a1, *v435) & 1) != 0)
      {
        if (++v435 == (uint64_t *)v437)
          return 1;
      }
      return 0;
    case 47:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v79 = *v78;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v81 = *(_QWORD *)v80 + 8 * *(unsigned int *)(v80 + 8);
      }
      else
      {
        v81 = 0;
      }
      if (v79 == (uint64_t *)v81)
        return 1;
      while ((sub_22EAF0B78(a1, *v79) & 1) != 0)
      {
        if (++v79 == (uint64_t *)v81)
          return 1;
      }
      return 0;
    case 48:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v150 = *v149;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v152 = *(_QWORD *)v151 + 8 * *(unsigned int *)(v151 + 8);
      }
      else
      {
        v152 = 0;
      }
      if (v150 == (uint64_t *)v152)
        return 1;
      while ((sub_22EAF0B78(a1, *v150) & 1) != 0)
      {
        if (++v150 == (uint64_t *)v152)
          return 1;
      }
      return 0;
    case 49:
      result = sub_22EAF12A0(a1, a2);
      if (!(_DWORD)result)
        return result;
      v171 = *(_QWORD *)(a2 + 72);
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v518 = v171 & 0xFFFFFFFFFFFFFFFCLL;
        v519 = *(_QWORD *)(a2 + 72) & 3;
        if ((_DWORD)v519 && (_DWORD)v519 != 3)
          v518 = *(_QWORD *)(v518 + 8);
        if ((sub_22EAD2F20(a1, v518, 0) & 1) == 0)
          return 0;
      }
      else if ((v171 & 3) != 0 && (v171 & 3) != 3)
      {
        result = sub_22EAD2F20(a1, v171 & 0xFFFFFFFFFFFFFFFCLL, 0);
        if (!(_DWORD)result)
          return result;
      }
      v520 = *(_DWORD *)v4 & 0x7F;
      if (v520 <= 0x39 && ((1 << v520) & 0x3F0003E01011066) != 0
        || v520 - 70 <= 0xD && ((1 << (v520 - 70)) & 0x2803) != 0
        || v520 - 19 <= 4)
      {
        v521 = sub_22EFCAE04(a2);
      }
      else
      {
        v521 = 0;
      }
      result = sub_22EAF0ADC(a1, v521);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v523 = *v522;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v525 = *(_QWORD *)v524 + 8 * *(unsigned int *)(v524 + 8);
        }
        else
        {
          v525 = 0;
        }
        for (; v523 != (uint64_t *)v525; ++v523)
        {
          if ((sub_22EAF0B78(a1, *v523) & 1) == 0)
            return 0;
        }
      }
      return 1;
    case 50:
      result = sub_22EAF12A0(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v33 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3)
          v33 = *(_QWORD *)(v33 + 8);
        result = sub_22EAD2F20(a1, v33, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v34 = *(_DWORD *)v4 & 0x7F, v34 <= 0x39) && ((1 << v34) & 0x3F0003E01011066) != 0
        || (v34 - 70 <= 0xD ? (v545 = ((1 << (v34 - 70)) & 0x2803) == 0) : (v545 = 1), !v545 || v34 - 19 <= 4))
      {
        v35 = sub_22EFCAE04(a2);
      }
      else
      {
        v35 = 0;
      }
      result = sub_22EAF0ADC(a1, v35);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v37 = *v36;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v39 = *(_QWORD *)v38 + 8 * *(unsigned int *)(v38 + 8);
      }
      else
      {
        v39 = 0;
      }
      if (v37 == (uint64_t *)v39)
        return 1;
      while ((sub_22EAF0B78(a1, *v37) & 1) != 0)
      {
        if (++v37 == (uint64_t *)v39)
          return 1;
      }
      return 0;
    case 51:
      result = sub_22EAF12A0(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v450 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3)
          v450 = *(_QWORD *)(v450 + 8);
        result = sub_22EAD2F20(a1, v450, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v451 = *(_DWORD *)v4 & 0x7F, v451 <= 0x39) && ((1 << v451) & 0x3F0003E01011066) != 0
        || (v451 - 70 <= 0xD ? (v546 = ((1 << (v451 - 70)) & 0x2803) == 0) : (v546 = 1), !v546 || v451 - 19 <= 4))
      {
        v452 = sub_22EFCAE04(a2);
      }
      else
      {
        v452 = 0;
      }
      result = sub_22EAF0ADC(a1, v452);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v454 = *v453;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v456 = *(_QWORD *)v455 + 8 * *(unsigned int *)(v455 + 8);
      }
      else
      {
        v456 = 0;
      }
      if (v454 == (uint64_t *)v456)
        return 1;
      while ((sub_22EAF0B78(a1, *v454) & 1) != 0)
      {
        if (++v454 == (uint64_t *)v456)
          return 1;
      }
      return 0;
    case 52:
      result = sub_22EAF136C(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v431 = *v430;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v433 = *(_QWORD *)v432 + 8 * *(unsigned int *)(v432 + 8);
      }
      else
      {
        v433 = 0;
      }
      if (v431 == (uint64_t *)v433)
        return 1;
      while ((sub_22EAF0B78(a1, *v431) & 1) != 0)
      {
        if (++v431 == (uint64_t *)v433)
          return 1;
      }
      return 0;
    case 53:
      result = sub_22EAF136C(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v75 = *v74;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v77 = *(_QWORD *)v76 + 8 * *(unsigned int *)(v76 + 8);
      }
      else
      {
        v77 = 0;
      }
      if (v75 == (uint64_t *)v77)
        return 1;
      while ((sub_22EAF0B78(a1, *v75) & 1) != 0)
      {
        if (++v75 == (uint64_t *)v77)
          return 1;
      }
      return 0;
    case 54:
      result = sub_22EAF136C(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v419 = *v418;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v421 = *(_QWORD *)v420 + 8 * *(unsigned int *)(v420 + 8);
      }
      else
      {
        v421 = 0;
      }
      if (v419 == (uint64_t *)v421)
        return 1;
      while ((sub_22EAF0B78(a1, *v419) & 1) != 0)
      {
        if (++v419 == (uint64_t *)v421)
          return 1;
      }
      return 0;
    case 55:
      result = sub_22EAF136C(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v427 = *v426;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v429 = *(_QWORD *)v428 + 8 * *(unsigned int *)(v428 + 8);
      }
      else
      {
        v429 = 0;
      }
      if (v427 == (uint64_t *)v429)
        return 1;
      while ((sub_22EAF0B78(a1, *v427) & 1) != 0)
      {
        if (++v427 == (uint64_t *)v429)
          return 1;
      }
      return 0;
    case 56:
      result = sub_22EAF136C(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v83 = *v82;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v85 = *(_QWORD *)v84 + 8 * *(unsigned int *)(v84 + 8);
      }
      else
      {
        v85 = 0;
      }
      if (v83 == (uint64_t *)v85)
        return 1;
      while ((sub_22EAF0B78(a1, *v83) & 1) != 0)
      {
        if (++v83 == (uint64_t *)v85)
          return 1;
      }
      return 0;
    case 57:
      result = sub_22EAF136C(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v370 = *v369;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v372 = *(_QWORD *)v371 + 8 * *(unsigned int *)(v371 + 8);
      }
      else
      {
        v372 = 0;
      }
      if (v370 == (uint64_t *)v372)
        return 1;
      while ((sub_22EAF0B78(a1, *v370) & 1) != 0)
      {
        if (++v370 == (uint64_t *)v372)
          return 1;
      }
      return 0;
    case 58:
      result = sub_22EAF12A0(a1, a2);
      if (!(_DWORD)result)
        return result;
      v153 = *(_DWORD *)v4 & 0x7F;
      v154 = v153 > 0x39 || ((1 << v153) & 0x3F0003E01011066) == 0;
      v155 = !v154 || v153 - 70 <= 0xD && ((1 << (v153 - 70)) & 0x2803) != 0 || v153 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v155);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v157 = *v156;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v159 = *(_QWORD *)v158 + 8 * *(unsigned int *)(v158 + 8);
      }
      else
      {
        v159 = 0;
      }
      if (v157 == (uint64_t *)v159)
        return 1;
      while ((sub_22EAF0B78(a1, *v157) & 1) != 0)
      {
        if (++v157 == (uint64_t *)v159)
          return 1;
      }
      return 0;
    case 59:
      result = sub_22EAF12A0(a1, a2);
      if (!(_DWORD)result)
        return result;
      v380 = *(_QWORD *)(a2 + 72);
      if (v380 >= 4 && (*(_QWORD *)(a2 + 72) & 3) != 1)
      {
        v381 = v380 & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_QWORD *)(a2 + 72) & 3) == 2 && v381)
          v381 = *(_QWORD *)(v381 + 8);
        result = sub_22EAD2F20(a1, v381, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v382 = *(_DWORD *)v4 & 0x7F, v382 <= 0x39) && ((1 << v382) & 0x3F0003E01011066) != 0
        || v382 - 70 <= 0xD && ((1 << (v382 - 70)) & 0x2803) != 0
        || v382 - 19 <= 4)
      {
        v383 = sub_22EFCAE04(a2);
      }
      else
      {
        v383 = 0;
      }
      result = sub_22EAF0ADC(a1, v383);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v385 = *v384;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v387 = *(_QWORD *)v386 + 8 * *(unsigned int *)(v386 + 8);
      }
      else
      {
        v387 = 0;
      }
      if (v385 == (uint64_t *)v387)
        return 1;
      while ((sub_22EAF0B78(a1, *v385) & 1) != 0)
      {
        if (++v385 == (uint64_t *)v387)
          return 1;
      }
      return 0;
    case 60:
      result = sub_22EAF1730(a1, a2);
      if (!(_DWORD)result)
        return result;
      v184 = *(_DWORD *)v4 & 0x7F;
      v185 = v184 > 0x39 || ((1 << v184) & 0x3F0003E01011066) == 0;
      v186 = !v185 || v184 - 70 <= 0xD && ((1 << (v184 - 70)) & 0x2803) != 0 || v184 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v186);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v188 = *v187;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v190 = *(_QWORD *)v189 + 8 * *(unsigned int *)(v189 + 8);
      }
      else
      {
        v190 = 0;
      }
      if (v188 == (uint64_t *)v190)
        return 1;
      while ((sub_22EAF0B78(a1, *v188) & 1) != 0)
      {
        if (++v188 == (uint64_t *)v190)
          return 1;
      }
      return 0;
    case 61:
      result = sub_22EAF1730(a1, a2);
      if (!(_DWORD)result)
        return result;
      v287 = *(unsigned int *)(a2 + 100);
      if (!(_DWORD)v287)
        goto LABEL_514;
      v288 = (_QWORD *)(a2 + 104);
      v289 = 8 * v287;
      while ((sub_22EAEC924(a1, *v288) & 1) != 0)
      {
        ++v288;
        v289 -= 8;
        if (!v289)
        {
LABEL_514:
          v290 = *(_DWORD *)v4 & 0x7F;
          v291 = v290 > 0x39 || ((1 << v290) & 0x3F0003E01011066) == 0;
          if (v291
            && (v290 - 70 <= 0xD ? (v548 = ((1 << (v290 - 70)) & 0x2803) == 0) : (v548 = 1), v548 && v290 - 19 > 4))
          {
            v292 = 0;
          }
          else
          {
            v292 = sub_22EFCAE04(a2);
          }
          result = sub_22EAF0ADC(a1, v292);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v294 = *v293;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v296 = *(_QWORD *)v295 + 8 * *(unsigned int *)(v295 + 8);
          }
          else
          {
            v296 = 0;
          }
          if (v294 == (uint64_t *)v296)
            return 1;
          while ((sub_22EAF0B78(a1, *v294) & 1) != 0)
          {
            if (++v294 == (uint64_t *)v296)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 62:
      result = sub_22EAF1730(a1, a2);
      if (!(_DWORD)result)
        return result;
      v305 = *(_DWORD *)v4 & 0x7F;
      v306 = v305 > 0x39 || ((1 << v305) & 0x3F0003E01011066) == 0;
      v307 = !v306 || v305 - 70 <= 0xD && ((1 << (v305 - 70)) & 0x2803) != 0 || v305 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v307);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v309 = *v308;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v311 = *(_QWORD *)v310 + 8 * *(unsigned int *)(v310 + 8);
      }
      else
      {
        v311 = 0;
      }
      if (v309 == (uint64_t *)v311)
        return 1;
      while ((sub_22EAF0B78(a1, *v309) & 1) != 0)
      {
        if (++v309 == (uint64_t *)v311)
          return 1;
      }
      return 0;
    case 63:
      result = sub_22EAF1730(a1, a2);
      if (!(_DWORD)result)
        return result;
      v224 = *(_DWORD *)v4 & 0x7F;
      v225 = v224 > 0x39 || ((1 << v224) & 0x3F0003E01011066) == 0;
      v226 = !v225 || v224 - 70 <= 0xD && ((1 << (v224 - 70)) & 0x2803) != 0 || v224 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v226);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v228 = *v227;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v230 = *(_QWORD *)v229 + 8 * *(unsigned int *)(v229 + 8);
      }
      else
      {
        v230 = 0;
      }
      if (v228 == (uint64_t *)v230)
        return 1;
      while ((sub_22EAF0B78(a1, *v228) & 1) != 0)
      {
        if (++v228 == (uint64_t *)v230)
          return 1;
      }
      return 0;
    case 64:
      result = sub_22EAF1730(a1, a2);
      if (!(_DWORD)result)
        return result;
      v191 = *(_DWORD *)(a2 + 96) & 0x600;
      if (v191 != 1024)
        goto LABEL_343;
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 88) & 0xFFFFFFFFFFFFFFF8, 0);
      if (!(_DWORD)result)
        return result;
      v191 = *(_DWORD *)(a2 + 96) & 0x600;
LABEL_343:
      if (v191 != 1024 && v191 != 512 && *(_QWORD *)(a2 + 88) >= 8uLL)
      {
        v192 = sub_22EFBC5B4(a2);
        v193 = v192;
        if (v192 && (*(_BYTE *)v192 & 0xFE) == 0xAC)
          v193 = *(_QWORD *)(v192 + 16);
        result = sub_22EAD2F20(a1, v193, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v194 = *(_DWORD *)v4 & 0x7F, v194 <= 0x39) && ((1 << v194) & 0x3F0003E01011066) != 0
        || v194 - 70 <= 0xD && ((1 << (v194 - 70)) & 0x2803) != 0
        || v194 - 19 <= 4)
      {
        v195 = sub_22EFCAE04(a2);
      }
      else
      {
        v195 = 0;
      }
      result = sub_22EAF0ADC(a1, v195);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v197 = *v196;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v199 = *(_QWORD *)v198 + 8 * *(unsigned int *)(v198 + 8);
      }
      else
      {
        v199 = 0;
      }
      if (v197 == (uint64_t *)v199)
        return 1;
      while ((sub_22EAF0B78(a1, *v197) & 1) != 0)
      {
        if (++v197 == (uint64_t *)v199)
          return 1;
      }
      return 0;
    case 65:
      v301 = *(_QWORD ***)(a2 + 120);
      if (v301)
      {
        if (*v301)
        {
          result = sub_22EAD26A8(a1, **v301, *v301 + 1);
          if (!(_DWORD)result)
            return result;
        }
      }
      v302 = *(_QWORD *)(a2 + 56);
      if ((v302 & 4) != 0)
      {
        v495 = (uint64_t *)(v302 & 0xFFFFFFFFFFFFFFF8);
        v303 = *v495;
        v304 = v495[1];
      }
      else
      {
        v303 = 0;
        v304 = 0;
      }
      result = sub_22EAEC53C(a1, v303, v304);
      if (!(_DWORD)result)
        return result;
      if (sub_22EFBC2B0(a2) != 2)
        return 1;
      v496 = *(_DWORD *)v4 & 0x7F;
      if (v496 <= 0x39 && ((1 << v496) & 0x3F0003E01011066) != 0
        || v496 - 70 <= 0xD && ((1 << (v496 - 70)) & 0x2803) != 0
        || v496 - 19 <= 4)
      {
        v497 = sub_22EFCAE04(a2);
      }
      else
      {
        v497 = 0;
      }
      result = sub_22EAF0ADC(a1, v497);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v499 = *v498;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v501 = *(_QWORD *)v500 + 8 * *(unsigned int *)(v500 + 8);
      }
      else
      {
        v501 = 0;
      }
      if (v499 == (uint64_t *)v501)
        return 1;
      while ((sub_22EAF0B78(a1, *v499) & 1) != 0)
      {
        if (++v499 == (uint64_t *)v501)
          return 1;
      }
      return 0;
    case 66:
      v44 = *(_QWORD *)(a2 + 424);
      if (!v44)
        goto LABEL_68;
      v45 = *(_DWORD *)(v44 + 12) & 0x1FFFFFFF;
      if (!(_DWORD)v45)
        goto LABEL_68;
      v46 = (_QWORD *)(v44 + 16);
      v47 = 8 * v45;
      while ((sub_22EAEC924(a1, *v46) & 1) != 0)
      {
        ++v46;
        v47 -= 8;
        if (!v47)
        {
LABEL_68:
          v48 = *(_QWORD *)(a2 + 432);
          v49 = *(unsigned int *)(v48 + 8);
          if ((_DWORD)v49)
          {
            v50 = v48 + 16;
            while ((sub_22EAEC67C(a1, v50) & 1) != 0)
            {
              v50 += 32;
              if (!--v49)
                goto LABEL_72;
            }
          }
          else
          {
LABEL_72:
            result = sub_22EAF1730(a1, a2);
            if (!(_DWORD)result)
              return result;
            v51 = *(_DWORD *)v4 & 0x7F;
            v52 = v51 > 0x39 || ((1 << v51) & 0x3F0003E01011066) == 0;
            if (v52
              && (v51 - 70 <= 0xD ? (v549 = ((1 << (v51 - 70)) & 0x2803) == 0) : (v549 = 1), v549 && v51 - 19 > 4))
            {
              v53 = 0;
            }
            else
            {
              v53 = sub_22EFCAE04(a2);
            }
            result = sub_22EAF0ADC(a1, v53);
            if (!(_DWORD)result)
              return result;
            if ((*(_BYTE *)(v4 + 1) & 1) == 0)
              return 1;
            sub_22EFC8E88(a2);
            v55 = *v54;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v57 = *(_QWORD *)v56 + 8 * *(unsigned int *)(v56 + 8);
            }
            else
            {
              v57 = 0;
            }
            if (v55 == (uint64_t *)v57)
              return 1;
            while ((sub_22EAF0B78(a1, *v55) & 1) != 0)
            {
              if (++v55 == (uint64_t *)v57)
                return 1;
            }
          }
          return 0;
        }
      }
      return 0;
    case 67:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 56), 0);
      if (!(_DWORD)result)
        return result;
      v126 = *(_DWORD *)v4 & 0x7F;
      v127 = v126 > 0x39 || ((1 << v126) & 0x3F0003E01011066) == 0;
      v128 = !v127 || v126 - 70 <= 0xD && ((1 << (v126 - 70)) & 0x2803) != 0 || v126 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EAF0ADC(a1, v128);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v130 = *v129;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v132 = *(_QWORD *)v131 + 8 * *(unsigned int *)(v131 + 8);
      }
      else
      {
        v132 = 0;
      }
      if (v130 == (uint64_t *)v132)
        return 1;
      while ((sub_22EAF0B78(a1, *v130) & 1) != 0)
      {
        if (++v130 == (uint64_t *)v132)
          return 1;
      }
      return 0;
    case 68:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v462 = *v461;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v464 = *(_QWORD *)v463 + 8 * *(unsigned int *)(v463 + 8);
      }
      else
      {
        v464 = 0;
      }
      if (v462 == (uint64_t *)v464)
        return 1;
      while ((sub_22EAF0B78(a1, *v462) & 1) != 0)
      {
        if (++v462 == (uint64_t *)v464)
          return 1;
      }
      return 0;
    case 69:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v109 = *v108;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v111 = *(_QWORD *)v110 + 8 * *(unsigned int *)(v110 + 8);
      }
      else
      {
        v111 = 0;
      }
      if (v109 == (uint64_t *)v111)
        return 1;
      while ((sub_22EAF0B78(a1, *v109) & 1) != 0)
      {
        if (++v109 == (uint64_t *)v111)
          return 1;
      }
      return 0;
    case 70:
      v21 = *(_DWORD **)(a2 + 56);
      v24 = *v21;
      v23 = (uint64_t *)(v21 + 4);
      v22 = v24;
      if (!v24)
        return (sub_22EADE928(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      v25 = 8 * v22;
      while ((sub_22EAF1790(a1, *v23) & 1) != 0)
      {
        ++v23;
        v25 -= 8;
        if (!v25)
          return (sub_22EADE928(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      }
      return 0;
    case 71:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 88), 0);
      if ((_DWORD)result)
      {
        v62 = *(_QWORD *)(a2 + 96);
        if (!v62)
          return (sub_22EADE928(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
        result = sub_22EAD2F20(a1, v62, 0);
        if ((_DWORD)result)
          return (sub_22EADE928(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      }
      return result;
    case 72:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v423 = *v422;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v425 = *(_QWORD *)v424 + 8 * *(unsigned int *)(v424 + 8);
      }
      else
      {
        v425 = 0;
      }
      if (v423 == (uint64_t *)v425)
        return 1;
      while ((sub_22EAF0B78(a1, *v423) & 1) != 0)
      {
        if (++v423 == (uint64_t *)v425)
          return 1;
      }
      return 0;
    case 73:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v439 = *v438;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v441 = *(_QWORD *)v440 + 8 * *(unsigned int *)(v440 + 8);
      }
      else
      {
        v441 = 0;
      }
      if (v439 == (uint64_t *)v441)
        return 1;
      while ((sub_22EAF0B78(a1, *v439) & 1) != 0)
      {
        if (++v439 == (uint64_t *)v441)
          return 1;
      }
      return 0;
    case 74:
      if (!sub_22EAEC53C(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v442 = *(_DWORD *)(a2 + 24);
      v443 = *(_QWORD *)(a2 + 80);
      v561 = *(_QWORD *)(a2 + 40);
      v562 = v442;
      v563 = v443;
      if (!sub_22EAEC5C4(a1, &v561))
        return 0;
      if ((v444 = *(_DWORD *)v4 & 0x7F, v444 <= 0x39) && ((1 << v444) & 0x3F0003E01011066) != 0
        || v444 - 70 <= 0xD && ((1 << (v444 - 70)) & 0x2803) != 0
        || v444 - 19 <= 4)
      {
        v445 = sub_22EFCAE04(a2);
      }
      else
      {
        v445 = 0;
      }
      if (!sub_22EAF0ADC(a1, v445))
        return 0;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v447 = *v446;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v449 = *(_QWORD *)v448 + 8 * *(unsigned int *)(v448 + 8);
      }
      else
      {
        v449 = 0;
      }
      while (2)
      {
        if (v447 == (uint64_t *)v449)
          return 1;
        if ((sub_22EAF0B78(a1, *v447) & 1) != 0)
        {
          ++v447;
          continue;
        }
        break;
      }
      return 0;
    case 75:
      v86 = *(unsigned int **)(a2 + 40);
      v87 = *v86;
      v88 = v86[1];
      if (!(_DWORD)v88)
        goto LABEL_146;
      v89 = &v86[2 * v87 + 4];
      v90 = 8 * v88;
      while ((sub_22EAD2F20(a1, *(_QWORD *)v89, 0) & 1) != 0)
      {
        v89 += 2;
        v90 -= 8;
        if (!v90)
        {
          v86 = *(unsigned int **)(a2 + 40);
          v87 = *v86;
LABEL_146:
          if ((_DWORD)v87)
          {
            v91 = (uint64_t *)(v86 + 4);
            v92 = 8 * v87;
            while ((sub_22EAF1790(a1, *v91) & 1) != 0)
            {
              ++v91;
              v92 -= 8;
              if (!v92)
                goto LABEL_150;
            }
          }
          else
          {
LABEL_150:
            v93 = *(_DWORD *)v4 & 0x7F;
            v94 = v93 > 0x39 || ((1 << v93) & 0x3F0003E01011066) == 0;
            if (v94
              && (v93 - 70 <= 0xD ? (v543 = ((1 << (v93 - 70)) & 0x2803) == 0) : (v543 = 1), v543 && v93 - 19 > 4))
            {
              v95 = 0;
            }
            else
            {
              v95 = sub_22EFCAE04(a2);
            }
            result = sub_22EAF0ADC(a1, v95);
            if (!(_DWORD)result)
              return result;
            if ((*(_BYTE *)(v4 + 1) & 1) == 0)
              return 1;
            sub_22EFC8E88(a2);
            v97 = *v96;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v99 = *(_QWORD *)v98 + 8 * *(unsigned int *)(v98 + 8);
            }
            else
            {
              v99 = 0;
            }
            if (v97 == (uint64_t *)v99)
              return 1;
            while ((sub_22EAF0B78(a1, *v97) & 1) != 0)
            {
              if (++v97 == (uint64_t *)v99)
                return 1;
            }
          }
          return 0;
        }
      }
      return 0;
    case 76:
      v275 = *(_DWORD **)(a2 + 40);
      v278 = *v275;
      v277 = (uint64_t *)(v275 + 4);
      v276 = v278;
      if (!v278)
        goto LABEL_1019;
      v279 = 8 * v276;
      while ((sub_22EAF1790(a1, *v277) & 1) != 0)
      {
        ++v277;
        v279 -= 8;
        if (!v279)
        {
          v280 = *(_DWORD *)v4 & 0x7F;
          v281 = v280 > 0x39 || ((1 << v280) & 0x3F0003E01011066) == 0;
          if (v281
            && (v280 - 70 <= 0xD ? (v542 = ((1 << (v280 - 70)) & 0x2803) == 0) : (v542 = 1), v542 && v280 - 19 > 4))
          {
LABEL_1019:
            v282 = 0;
          }
          else
          {
            v282 = sub_22EFCAE04(a2);
          }
          result = sub_22EAF0ADC(a1, v282);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v552 = *v551;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v554 = *(_QWORD *)v553 + 8 * *(unsigned int *)(v553 + 8);
          }
          else
          {
            v554 = 0;
          }
          if (v552 == (uint64_t *)v554)
            return 1;
          while ((sub_22EAF0B78(a1, *v552) & 1) != 0)
          {
            if (++v552 == (uint64_t *)v554)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 77:
      v26 = *(unsigned int **)(a2 + 40);
      v27 = v26[1];
      if (!(_DWORD)v27)
        goto LABEL_1004;
      v28 = &v26[2 * *v26 + 4];
      v29 = 8 * v27;
      while ((sub_22EAD2F20(a1, *(_QWORD *)v28, 0) & 1) != 0)
      {
        v28 += 2;
        v29 -= 8;
        if (!v29)
        {
          v30 = *(_DWORD *)v4 & 0x7F;
          v31 = v30 > 0x39 || ((1 << v30) & 0x3F0003E01011066) == 0;
          if (v31 && (v30 - 70 <= 0xD ? (v537 = ((1 << (v30 - 70)) & 0x2803) == 0) : (v537 = 1), v537 && v30 - 19 > 4))
LABEL_1004:
            v32 = 0;
          else
            v32 = sub_22EFCAE04(a2);
          result = sub_22EAF0ADC(a1, v32);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v539 = *v538;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v541 = *(_QWORD *)v540 + 8 * *(unsigned int *)(v540 + 8);
          }
          else
          {
            v541 = 0;
          }
          if (v539 == (uint64_t *)v541)
            return 1;
          while ((sub_22EAF0B78(a1, *v539) & 1) != 0)
          {
            if (++v539 == (uint64_t *)v541)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 78:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v458 = *v457;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v460 = *(_QWORD *)v459 + 8 * *(unsigned int *)(v459 + 8);
      }
      else
      {
        v460 = 0;
      }
      if (v458 == (uint64_t *)v460)
        return 1;
      while ((sub_22EAF0B78(a1, *v458) & 1) != 0)
      {
        if (++v458 == (uint64_t *)v460)
          return 1;
      }
      return 0;
    case 79:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v18 = *v17;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v20 = *(_QWORD *)v19 + 8 * *(unsigned int *)(v19 + 8);
      }
      else
      {
        v20 = 0;
      }
      if (v18 == (uint64_t *)v20)
        return 1;
      while ((sub_22EAF0B78(a1, *v18) & 1) != 0)
      {
        if (++v18 == (uint64_t *)v20)
          return 1;
      }
      return 0;
    case 80:
      result = sub_22EAF0ADC(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v59 = *v58;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v61 = *(_QWORD *)v60 + 8 * *(unsigned int *)(v60 + 8);
      }
      else
      {
        v61 = 0;
      }
      if (v59 == (uint64_t *)v61)
        return 1;
      while ((sub_22EAF0B78(a1, *v59) & 1) != 0)
      {
        if (++v59 == (uint64_t *)v61)
          return 1;
      }
      return 0;
    case 81:
      v166 = sub_22EFCAE04(a2);
      result = sub_22EAF0ADC(a1, v166);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v168 = *v167;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v170 = *(_QWORD *)v169 + 8 * *(unsigned int *)(v169 + 8);
      }
      else
      {
        v170 = 0;
      }
      if (v168 == (uint64_t *)v170)
        return 1;
      while ((sub_22EAF0B78(a1, *v168) & 1) != 0)
      {
        if (++v168 == (uint64_t *)v170)
          return 1;
      }
      return 0;
    case 82:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFFCLL, 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 48), 0);
      if (!(_DWORD)result)
        return result;
      if ((v160 = *(_DWORD *)v4 & 0x7F, v160 <= 0x39) && ((1 << v160) & 0x3F0003E01011066) != 0
        || v160 - 70 <= 0xD && ((1 << (v160 - 70)) & 0x2803) != 0
        || v160 - 19 <= 4)
      {
        v161 = sub_22EFCAE04(a2);
      }
      else
      {
        v161 = 0;
      }
      result = sub_22EAF0ADC(a1, v161);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v163 = *v162;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v165 = *(_QWORD *)v164 + 8 * *(unsigned int *)(v164 + 8);
      }
      else
      {
        v165 = 0;
      }
      if (v163 == (uint64_t *)v165)
        return 1;
      break;
    case 83:
      v11 = *(_QWORD *)(a2 + 88);
      v12 = *(_BYTE **)(v11 + 19016);
      v13 = *(_BYTE **)(v11 + 19024);
      v14 = v13 - v12;
      if (v13 == v12)
      {
        v15 = 0;
        v16 = 0;
      }
      else
      {
        if (v14 < 0)
          abort();
        v15 = (char *)operator new(v13 - v12);
        memmove(v15, v12, v14);
        v16 = &v15[8 * (v14 >> 3)];
      }
      if (v16 - v15 == 8 && (*(_DWORD *)(*(_QWORD *)v15 + 28) & 0x7F) == 0x53)
      {
        operator delete(v15);
        result = sub_22EAF0ADC(a1, a2 + 40);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        if (v15 != v16)
        {
          v502 = v15;
          do
          {
            v503 = *(_QWORD *)v502;
            if ((*(_DWORD *)(*(_QWORD *)v502 + 28) & 0x7Fu) - 1 >= 2
              && ((*(_DWORD *)(*(_QWORD *)v502 + 28) & 0x7Fu) - 35 > 2
               || (v504 = *(_QWORD *)(v503 + 128)) == 0
               || ((*(unsigned __int16 *)(v504 + 8) | (*(unsigned __int8 *)(v504 + 10) << 16)) & 0x100000) == 0)
              && !sub_22EAEC924(a1, v503))
            {
              if (v15)
                operator delete(v15);
              return 0;
            }
            v502 += 8;
          }
          while (v502 != v16);
        }
        if (v15)
          operator delete(v15);
      }
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v506 = *v505;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v508 = *(_QWORD *)v507 + 8 * *(unsigned int *)(v507 + 8);
        }
        else
        {
          v508 = 0;
        }
        for (; v506 != (uint64_t *)v508; ++v506)
        {
          if ((sub_22EAF0B78(a1, *v506) & 1) == 0)
            return 0;
        }
      }
      return 1;
    default:
      return 1;
  }
  while ((sub_22EAF0B78(a1, *v163) & 1) != 0)
  {
    if (++v163 == (uint64_t *)v165)
      return 1;
  }
  return 0;
}

uint64_t sub_22EAF07AC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((*(_BYTE *)(a2 + 60) & 4) != 0)
  {
    if (*(_QWORD *)(a2 + 152))
    {
      if ((sub_22EAD2F20(a1, *(_QWORD *)(a2 + 152), 0) & 1) == 0)
        return 0;
    }
    else
    {
      result = sub_22EAF0A3C(a1, a2 + 80);
      if (!(_DWORD)result)
        return result;
    }
  }
  return 1;
}

uint64_t sub_22EAF07F4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 40), 0);
  if ((_DWORD)result)
  {
    v5 = *(_DWORD *)(a2 + 28) & 0x7F;
    v6 = v5 > 0x39 || ((1 << v5) & 0x3F0003E01011066) == 0;
    if (v6 && (v5 - 70 <= 0xD ? (v8 = ((1 << (v5 - 70)) & 0x2803) == 0) : (v8 = 1), v8 && v5 - 19 > 4))
      v7 = 0;
    else
      v7 = sub_22EFCAE04(a2);
    result = sub_22EAF0ADC(a1, v7);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v10 = *v9;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v12 = *(_QWORD *)v11 + 8 * *(unsigned int *)(v11 + 8);
      }
      else
      {
        v12 = 0;
      }
      if (v10 == v12)
      {
        return 1;
      }
      else
      {
        v13 = v10 + 8;
        do
        {
          result = sub_22EAF0B78(a1, *(_QWORD *)(v13 - 8));
          if ((_DWORD)result)
            v14 = v13 == v12;
          else
            v14 = 1;
          v13 += 8;
        }
        while (!v14);
      }
    }
  }
  return result;
}

uint64_t sub_22EAF090C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  if (!*(_DWORD *)(a2 + 96))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 80);
  v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (_QWORD *)*v5;
  result = sub_22EAD26A8(a1, *v5, v5 + 1);
  if ((_DWORD)result)
  {
LABEL_5:
    v7 = *(_DWORD *)(a2 + 28) & 0x7F;
    v8 = v7 > 0x39 || ((1 << v7) & 0x3F0003E01011066) == 0;
    if (v8 && (v7 - 70 <= 0xD ? (v10 = ((1 << (v7 - 70)) & 0x2803) == 0) : (v10 = 1), v10 && v7 - 19 > 4))
      v9 = 0;
    else
      v9 = sub_22EFCAE04(a2);
    result = sub_22EAF0ADC(a1, v9);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v12 = *v11;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v14 = *(_QWORD *)v13 + 8 * *(unsigned int *)(v13 + 8);
      }
      else
      {
        v14 = 0;
      }
      if (v12 == v14)
      {
        return 1;
      }
      else
      {
        v15 = v12 + 8;
        do
        {
          result = sub_22EAF0B78(a1, *(_QWORD *)(v15 - 8));
          if ((_DWORD)result)
            v16 = v15 == v14;
          else
            v16 = 1;
          v15 += 8;
        }
        while (!v16);
      }
    }
  }
  return result;
}

uint64_t sub_22EAF0A3C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  __int128 v11;
  uint64_t v12;

  result = sub_22EAEC53C(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  if ((_DWORD)result)
  {
    v11 = *(_OWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 40);
    result = sub_22EAEC5C4(a1, (uint64_t *)&v11);
    if ((_DWORD)result)
    {
      v5 = *(_QWORD *)(a2 + 64);
      if (v5 && (v6 = *(unsigned int *)(v5 + 8), (_DWORD)v6))
      {
        v7 = v5 + 16;
        v8 = v6 - 1;
        do
        {
          result = sub_22EAEC67C(a1, v7);
          v10 = v8-- != 0;
          if (!(_DWORD)result)
            break;
          v7 += 32;
        }
        while (v10);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_22EAF0ADC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (!a2)
    return 1;
  if ((*(_WORD *)(a2 + 8) & 0x80) != 0)
    sub_22EFCC320(a2);
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 1;
  while (1)
  {
    if ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 1 >= 2
      && ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 > 2
       || (v5 = *(_QWORD *)(v4 + 128)) == 0
       || ((*(unsigned __int16 *)(v5 + 8) | (*(unsigned __int8 *)(v5 + 10) << 16)) & 0x100000) == 0))
    {
      result = sub_22EAEC924(a1, v4);
      if (!(_DWORD)result)
        break;
    }
    v4 = *(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v4)
      return 1;
  }
  return result;
}

uint64_t sub_22EAF0B78(uint64_t a1, uint64_t a2)
{
  if (a2)
    __asm { BR              X10 }
  return 1;
}

void sub_22EAF0BFC()
{
  uint64_t v0;
  uint64_t v1;

  if (sub_22EAD2F20(v0, *(_QWORD *)(v1 + 40), 0))
    JUMPOUT(0x22EAF0BB8);
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v2 = *(unsigned int *)(v1 + 48);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2;
    while ((sub_22EAD2F20(v0, *v3, 0) & 1) != 0)
    {
      ++v3;
      v4 -= 8;
      if (!v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v5 = *(unsigned int *)(v1 + 64);
    if (!(_DWORD)v5)
      JUMPOUT(0x22EAF0BE8);
    v6 = *(uint64_t **)(v1 + 72);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22EAD2F20(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EAD2F20(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EAF0BE8);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if (sub_22EAD2F20(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 56);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 64);
      v4 = 8 * v2;
      do
      {
        if ((sub_22EAD2F20(v0, *v3, 0) & 1) == 0)
          JUMPOUT(0x22EAF0D48);
        ++v3;
        v4 -= 8;
      }
      while (v4);
    }
    v5 = *(unsigned int *)(v1 + 72);
    if (!(_DWORD)v5)
      JUMPOUT(0x22EAF0BE8);
    v6 = *(uint64_t **)(v1 + 80);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22EAD2F20(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EAD2F20(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EAF0BE8);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF0FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EAD2F20(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EAF0BE8);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EAD2F20(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EAF0BECLL);
}

void sub_22EAF1000()
{
  JUMPOUT(0x22EAF0BD4);
}

void sub_22EAF1008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  if (sub_22EAD2F20(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 56);
      v4 = 8 * v2;
      while ((sub_22EAD2F20(v0, *v3, 0) & 1) != 0)
      {
        ++v3;
        v4 -= 8;
        if (!v4)
          goto LABEL_6;
      }
LABEL_33:
      JUMPOUT(0x22EAF0D48);
    }
LABEL_6:
    v5 = *(unsigned int *)(v1 + 64);
    if ((_DWORD)v5)
    {
      v6 = *(uint64_t **)(v1 + 72);
      v7 = 8 * v5;
      while ((sub_22EAD2F20(v0, *v6, 0) & 1) != 0)
      {
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_10;
      }
      goto LABEL_33;
    }
LABEL_10:
    v8 = *(unsigned int *)(v1 + 80);
    if ((_DWORD)v8)
    {
      v9 = *(uint64_t **)(v1 + 88);
      v10 = 8 * v8;
      while ((sub_22EAD2F20(v0, *v9, 0) & 1) != 0)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_14;
      }
      goto LABEL_33;
    }
LABEL_14:
    v11 = *(unsigned int *)(v1 + 96);
    if ((_DWORD)v11)
    {
      v12 = *(uint64_t **)(v1 + 104);
      v13 = 8 * v11;
      while ((sub_22EAD2F20(v0, *v12, 0) & 1) != 0)
      {
        ++v12;
        v13 -= 8;
        if (!v13)
          goto LABEL_18;
      }
      goto LABEL_33;
    }
LABEL_18:
    v14 = *(unsigned int *)(v1 + 128);
    if (!(_DWORD)v14)
      JUMPOUT(0x22EAF0BE8);
    v15 = *(uint64_t **)(v1 + 136);
    v16 = 8 * v14 - 8;
    do
    {
      v17 = *v15++;
      if (sub_22EAD2F20(v0, v17, 0))
        v18 = v16 == 0;
      else
        v18 = 1;
      v16 -= 8;
    }
    while (!v18);
  }
  JUMPOUT(0x22EAF0BECLL);
}

uint64_t sub_22EAF1114(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  if (!a2)
    return 1;
  v4 = a2 + 16;
  v5 = *(_DWORD *)(a2 + 12);
  if ((v5 & 0x1FFFFFFF) != 0)
  {
    v6 = 8 * (v5 & 0x1FFFFFFF);
    v7 = (_QWORD *)(a2 + 16);
    while ((sub_22EAEC924(a1, *v7) & 1) != 0)
    {
      ++v7;
      v6 -= 8;
      if (!v6)
      {
        v5 = *(_DWORD *)(a2 + 12);
        goto LABEL_7;
      }
    }
    return 0;
  }
  else
  {
LABEL_7:
    if ((v5 & 0x40000000) == 0)
      return 1;
    v8 = *(_QWORD *)(v4 + 8 * (v5 & 0x1FFFFFFF));
    if (!v8)
      return 1;
    result = sub_22EAD2F20(a1, v8, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22EAF11B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 120);
  if ((v3 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v3 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EAF1114(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v3 = *(_QWORD *)(a2 + 120);
      if ((v3 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  return sub_22EAEC53C(a1, v7, v8);
}

uint64_t sub_22EAF1228(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;

  result = sub_22EAF11B4(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_BYTE *)(a2 + 74) & 1) == 0)
      return 1;
    v5 = sub_22E46A3A0(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 24;
      do
      {
        result = sub_22EAD26A8(a1, **(_QWORD **)(v8 - 8), *(_QWORD *)(v8 - 8) + 8);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 24;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22EAF12A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EAF1114(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22EAEC53C(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_QWORD *)(a2 + 56);
    if ((v10 & 4) != 0)
    {
      v11 = *(_QWORD **)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
      if (v11)
        return (sub_22EAD26A8(a1, *v11, v11 + 1) & 1) != 0;
    }
    else if (v10 >= 8)
    {
      v11 = (_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF8);
      return (sub_22EAD26A8(a1, *v11, v11 + 1) & 1) != 0;
    }
    result = sub_22EADE928(a1, *(_QWORD *)(a2 + 48));
    if (!(_DWORD)result)
      return result;
    return 1;
  }
  return result;
}

uint64_t sub_22EAF136C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _BOOL4 v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EAF1114(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22EAEC53C(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_DWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 152);
    v38 = *(_QWORD *)(a2 + 40);
    v39 = v10;
    v40 = v11;
    result = sub_22EAEC5C4(a1, &v38);
    if ((_DWORD)result)
    {
      v12 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
      if ((*(_QWORD *)(a2 + 144) & 6) == 4 && v12 != 0 && (*(_BYTE *)(v12 + 16) & 6) != 0)
      {
        v14 = *(_QWORD *)(v12 + 32);
        if (v14)
        {
          v15 = *(unsigned int *)(v14 + 8);
          if ((_DWORD)v15)
          {
            v16 = v14 + 16;
            while ((sub_22EAEC67C(a1, v16) & 1) != 0)
            {
              v16 += 32;
              if (!--v15)
                goto LABEL_19;
            }
            return 0;
          }
        }
      }
LABEL_19:
      v17 = *(_QWORD *)(a2 + 56);
      v18 = (_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
      if ((v17 & 4) != 0)
        v18 = (_QWORD *)v18[4];
      if (v18)
      {
        result = sub_22EAD26A8(a1, *v18, v18 + 1);
        if (!(_DWORD)result)
          return result;
        v17 = *(_QWORD *)(a2 + 56);
      }
      if ((v17 & 4) == 0
        || (v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40)) == 0
        || (result = sub_22EAD2F20(a1, v19, 0), (_DWORD)result))
      {
        if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
        {
          v20 = sub_22EFD7ED0(a2);
          v21 = sub_22EFD7ED0(a2) + 8 * ((*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL);
          while (v20 != v21)
          {
            v22 = *(_QWORD *)v20;
            if ((*(_WORD *)(*(_QWORD *)v20 + 28) & 4) != 0)
            {
              v23 = (_QWORD *)(*(_QWORD *)v22 & 0xFFFFFFFFFFFFFFF8);
              if ((*(_QWORD *)v22 & 6) != 0 || v23 == 0)
                goto LABEL_37;
              result = sub_22EAD26A8(a1, *v23, v23 + 1);
              if (!(_DWORD)result)
                return result;
              if ((*(_WORD *)(v22 + 28) & 4) != 0)
              {
LABEL_37:
                result = sub_22EAD2F20(a1, *(_QWORD *)(v22 + 8), 0);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v20 += 8;
          }
        }
        v25 = sub_22E49F868(a2) && (*(_BYTE *)(a2 + 83) & 2) == 0;
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
          goto LABEL_70;
        v26 = *(_WORD *)(a2 + 80) & 0x7F;
        v27 = -40;
        if (v26 > 0x46)
        {
          if (v26 == 83)
            goto LABEL_60;
          if (v26 == 71)
          {
            v27 = -56;
            goto LABEL_60;
          }
          if (v26 != 81)
          {
LABEL_55:
            v28 = v26 - 52;
            v29 = v26 - 33 >= 5;
            v30 = -48;
            if (!v29)
              v30 = -64;
            if (v28 >= 6)
              v27 = v30;
            else
              v27 = -72;
          }
        }
        else
        {
          if (v26 > 0x18)
            goto LABEL_54;
          if (v26 == 16)
          {
LABEL_46:
            v27 = -48;
            goto LABEL_60;
          }
          if (((1 << v26) & 0x1066) == 0)
          {
            if (v26 == 24)
              goto LABEL_46;
LABEL_54:
            if (v26 == 70)
            {
              v27 = -64;
              goto LABEL_60;
            }
            goto LABEL_55;
          }
        }
LABEL_60:
        v31 = *(_QWORD *)(a2 + 72 + v27 + 16);
        v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
        if ((v31 & 4) != 0)
          v32 = (_QWORD *)*v32;
        if (v32)
        {
          v33 = v32[8];
          if (v33)
          {
            if (((*(unsigned __int16 *)(v33 + 8) | (*(unsigned __int8 *)(v33 + 10) << 16)) & 0x100000) != 0)
            {
              v34 = sub_22EFD462C((unint64_t)(v32 - 8));
              if (v34)
              {
                if ((*(_DWORD *)(v34 + 28) & 0x7F) != 0x1D || (v34 = *(_QWORD *)(v34 + 48)) != 0)
                {
                  if (v34 == a2
                    || (v35 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v34 + 32))(v34),
                        v35 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2)))
                  {
                    if (!v25)
                      return 1;
LABEL_71:
                    v36 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
                    result = sub_22EAD2F20(a1, v36, 0);
                    if (!(_DWORD)result)
                      return result;
                    if ((*(_WORD *)(a2 + 80) & 0x80) != 0)
                      sub_22EFCC320(a2 + 72);
                    v37 = *(_QWORD *)(a2 + 88);
                    if (v37)
                    {
                      do
                      {
                        if ((*(_DWORD *)(v37 + 28) & 0x7E) == 0x2E)
                        {
                          result = sub_22EAEC924(a1, v37);
                          if (!(_DWORD)result)
                            break;
                        }
                        result = 1;
                        v37 = *(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF8;
                      }
                      while (v37);
                      return result;
                    }
                    return 1;
                  }
                }
              }
            }
          }
        }
LABEL_70:
        if (!v25)
          return 1;
        goto LABEL_71;
      }
    }
  }
  return result;
}

uint64_t sub_22EAF1730(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = sub_22EAF12A0(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      return 1;
    if ((*(_BYTE *)(a2 + 97) & 8) != 0)
      return 1;
    v5 = sub_22EFBC5B4(a2);
    result = sub_22EAD2F20(a1, v5, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22EAF1790(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *mm;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *i2;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *n;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *ii;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *nn;
  uint64_t v79;
  uint64_t v80;
  _QWORD *i1;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *i;
  uint64_t v92;
  uint64_t v93;
  _QWORD *j;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *jj;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *kk;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *k;
  uint64_t v175;
  uint64_t v176;
  _QWORD *m;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  __int128 v208;
  uint64_t v209;

  if (!a2)
    return 1;
  switch(*(_DWORD *)(a2 + 8))
  {
    case 3:
      v85 = (_QWORD *)(a2 + 24);
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if ((_DWORD)result)
      {
        v86 = *(unsigned int *)(a2 + 16);
        if (!(_DWORD)v86)
          return 1;
        v87 = 8 * v86;
        do
        {
          if ((sub_22EAD2F20(a1, *v85, 0) & 1) == 0)
            return 0;
          ++v85;
          v87 -= 8;
        }
        while (v87);
        return 1;
      }
      return result;
    case 4:
    case 7:
    case 0xC:
    case 0x13:
    case 0x15:
    case 0x23:
    case 0x3C:
    case 0x3D:
    case 0x46:
    case 0x4B:
      v5 = *(_QWORD *)(a2 + 16);
      return (sub_22EAD2F20(a1, v5, 0) & 1) != 0;
    case 5:
      v137 = (_QWORD *)(a2 + 24);
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if (!(_DWORD)result)
        return result;
      v138 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v138)
        return 1;
      v139 = 8 * v138;
      while ((sub_22EAD2F20(a1, *v137, 0) & 1) != 0)
      {
        ++v137;
        v139 -= 8;
        if (!v139)
          return 1;
      }
      return 0;
    case 6:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24), 0);
      if (!(_DWORD)result)
        return result;
      v134 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v134)
        return 1;
      v135 = (_QWORD *)(a2 + 40);
      v136 = 8 * v134;
      while ((sub_22EAD2F20(a1, *v135, 0) & 1) != 0)
      {
        ++v135;
        v136 -= 8;
        if (!v136)
          return 1;
      }
      return 0;
    case 0xE:
      v88 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v88)
        return 1;
      v89 = a2 + 24;
      v90 = 8 * v88;
      for (i = (_QWORD *)(a2 + 24); (sub_22EAD2F20(a1, *i, 0) & 1) != 0; ++i)
      {
        v90 -= 8;
        if (!v90)
        {
          v92 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v92)
            return 1;
          v93 = 8 * v92;
          for (j = (_QWORD *)(v89 + 8 * v92); (sub_22EAD2F20(a1, *j, 0) & 1) != 0; ++j)
          {
            v93 -= 8;
            if (!v93)
            {
              v95 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v95)
                return 1;
              v96 = (_QWORD *)(v89 + 8 * v95 + 8 * v95);
              v97 = 8 * v95;
              while ((sub_22EAD2F20(a1, *v96, 0) & 1) != 0)
              {
                ++v96;
                v97 -= 8;
                if (!v97)
                {
                  v98 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v98)
                    return 1;
                  v99 = (_QWORD *)(v89 + 8 * v98 + 8 * v98 + 8 * v98);
                  v100 = 8 * v98;
                  while ((sub_22EAD2F20(a1, *v99, 0) & 1) != 0)
                  {
                    ++v99;
                    v100 -= 8;
                    if (!v100)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0xF:
      v171 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v171)
        return 1;
      v172 = a2 + 24;
      v173 = 8 * v171;
      for (k = (_QWORD *)(a2 + 24); (sub_22EAD2F20(a1, *k, 0) & 1) != 0; ++k)
      {
        v173 -= 8;
        if (!v173)
        {
          v175 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v175)
            return 1;
          v176 = 8 * v175;
          for (m = (_QWORD *)(v172 + 8 * v175); (sub_22EAD2F20(a1, *m, 0) & 1) != 0; ++m)
          {
            v176 -= 8;
            if (!v176)
            {
              v178 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v178)
                return 1;
              v179 = (_QWORD *)(v172 + 8 * v178 + 8 * v178);
              v180 = 8 * v178;
              while ((sub_22EAD2F20(a1, *v179, 0) & 1) != 0)
              {
                ++v179;
                v180 -= 8;
                if (!v180)
                {
                  v181 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v181)
                    return 1;
                  v182 = (_QWORD *)(v172 + 8 * v181 + 8 * v181 + 8 * v181);
                  v183 = 8 * v181;
                  while ((sub_22EAD2F20(a1, *v182, 0) & 1) != 0)
                  {
                    ++v182;
                    v183 -= 8;
                    if (!v183)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x12:
      v184 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v184)
        return 1;
      v185 = (_QWORD *)(a2 + 40);
      v186 = 8 * v184;
      while ((sub_22EAD2F20(a1, *v185, 0) & 1) != 0)
      {
        ++v185;
        v186 -= 8;
        if (!v186)
          return 1;
      }
      return 0;
    case 0x14:
    case 0x58:
      v5 = *(_QWORD *)(a2 + 24);
      return (sub_22EAD2F20(a1, v5, 0) & 1) != 0;
    case 0x16:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 40);
      return (sub_22EAD2F20(a1, v5, 0) & 1) != 0;
    case 0x18:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 48);
      return (sub_22EAD2F20(a1, v5, 0) & 1) != 0;
    case 0x1A:
      v193 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v193)
        return 1;
      v194 = (_QWORD *)(a2 + 24);
      v195 = 8 * v193;
      while ((sub_22EAD2F20(a1, *v194, 0) & 1) != 0)
      {
        ++v194;
        v195 -= 8;
        if (!v195)
          return 1;
      }
      return 0;
    case 0x1B:
    case 0x1C:
    case 0x21:
    case 0x24:
    case 0x34:
    case 0x37:
    case 0x38:
    case 0x39:
    case 0x3A:
    case 0x3E:
    case 0x4E:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 32);
      return (sub_22EAD2F20(a1, v5, 0) & 1) != 0;
    case 0x1D:
      v40 = a2 + 40;
      v41 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v41)
        goto LABEL_72;
      v42 = 8 * v41;
      v43 = (_QWORD *)(a2 + 40);
      while ((sub_22EAD2F20(a1, *v43, 0) & 1) != 0)
      {
        ++v43;
        v42 -= 8;
        if (!v42)
        {
LABEL_72:
          result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          v44 = *(unsigned int *)(a2 + 16);
          if ((_DWORD)v44)
          {
            v45 = 8 * v44;
            for (n = (_QWORD *)(v40 + 8 * v44); (sub_22EAD2F20(a1, *n, 0) & 1) != 0; ++n)
            {
              v45 -= 8;
              if (!v45)
              {
                v47 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v47)
                  return 1;
                v48 = (_QWORD *)(v40 + 8 * v47 + 8 * v47);
                v49 = 8 * v47;
                while ((sub_22EAD2F20(a1, *v48, 0) & 1) != 0)
                {
                  ++v48;
                  v49 -= 8;
                  if (!v49)
                    return 1;
                }
                return 0;
              }
            }
            return 0;
          }
          return 1;
        }
      }
      return 0;
    case 0x1E:
      v82 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v82)
        return 1;
      v83 = (_QWORD *)(a2 + 24);
      v84 = 8 * v82;
      while ((sub_22EAD2F20(a1, *v83, 0) & 1) != 0)
      {
        ++v83;
        v84 -= 8;
        if (!v84)
          return 1;
      }
      return 0;
    case 0x1F:
      v187 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v187)
        return 1;
      v188 = (_QWORD *)(a2 + 104);
      v189 = 8 * v187;
      while ((sub_22EAD2F20(a1, *v188, 0) & 1) != 0)
      {
        ++v188;
        v189 -= 8;
        if (!v189)
          return 1;
      }
      return 0;
    case 0x22:
      v199 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v199)
        return 1;
      v200 = (_QWORD *)(a2 + 80);
      v201 = 8 * v199;
      while ((sub_22EAD2F20(a1, *v200, 0) & 1) != 0)
      {
        ++v200;
        v201 -= 8;
        if (!v201)
          return 1;
      }
      return 0;
    case 0x25:
      if (!sub_22EAEC53C(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22EAEC5C4(a1, (uint64_t *)&v208))
        return 0;
      v56 = a2 + 96;
      v57 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v57)
        goto LABEL_98;
      v58 = 8 * v57;
      v59 = (_QWORD *)(a2 + 96);
      while ((sub_22EAD2F20(a1, *v59, 0) & 1) != 0)
      {
        ++v59;
        v58 -= 8;
        if (!v58)
        {
LABEL_98:
          if (sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EAD2F20(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v60 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v60)
              return 1;
            v61 = 8 * v60;
            for (ii = (_QWORD *)(v56 + 8 * v60); (sub_22EAD2F20(a1, *ii, 0) & 1) != 0; ++ii)
            {
              v61 -= 8;
              if (!v61)
              {
                v63 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v63)
                  return 1;
                v64 = (_QWORD *)(v56 + 8 * v63 + 8 * v63);
                v65 = 8 * v63;
                while ((sub_22EAD2F20(a1, *v64, 0) & 1) != 0)
                {
                  ++v64;
                  v65 -= 8;
                  if (!v65)
                  {
                    v66 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v66)
                      return 1;
                    v67 = (_QWORD *)(v56 + 8 * v66 + 8 * v66 + 8 * v66);
                    v68 = 8 * v66;
                    while ((sub_22EAD2F20(a1, *v67, 0) & 1) != 0)
                    {
                      ++v67;
                      v68 -= 8;
                      if (!v68)
                      {
                        v69 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v69)
                          return 1;
                        v70 = (_QWORD *)(v56 + 8 * v69 + 8 * v69 + 8 * v69 + 8 * v69);
                        v71 = 8 * v69;
                        while ((sub_22EAD2F20(a1, *v70, 0) & 1) != 0)
                        {
                          ++v70;
                          v71 -= 8;
                          if (!v71)
                          {
                            v72 = *(unsigned int *)(a2 + 16);
                            if (!(_DWORD)v72)
                              return 1;
                            v73 = (_QWORD *)(v56 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72);
                            v74 = 8 * v72;
                            while ((sub_22EAD2F20(a1, *v73, 0) & 1) != 0)
                            {
                              ++v73;
                              v74 -= 8;
                              if (!v74)
                                return 1;
                            }
                            return 0;
                          }
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x27:
      v168 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v168)
        return 1;
      v169 = (_QWORD *)(a2 + 24);
      v170 = 8 * v168;
      while ((sub_22EAD2F20(a1, *v169, 0) & 1) != 0)
      {
        ++v169;
        v170 -= 8;
        if (!v170)
          return 1;
      }
      return 0;
    case 0x29:
      v53 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v53)
        return 1;
      v54 = (_QWORD *)(a2 + 32);
      v55 = 8 * v53;
      while ((sub_22EAD2F20(a1, *v54, 0) & 1) != 0)
      {
        ++v54;
        v55 -= 8;
        if (!v55)
          return 1;
      }
      return 0;
    case 0x2A:
      v50 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v50)
        return 1;
      v51 = (_QWORD *)(a2 + 80);
      v52 = 8 * v50;
      while ((sub_22EAD2F20(a1, *v51, 0) & 1) != 0)
      {
        ++v51;
        v52 -= 8;
        if (!v52)
          return 1;
      }
      return 0;
    case 0x2B:
      v101 = a2 + 64;
      v102 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v102)
        goto LABEL_164;
      v103 = 8 * v102;
      v104 = (_QWORD *)(a2 + 64);
      while ((sub_22EAD2F20(a1, *v104, 0) & 1) != 0)
      {
        ++v104;
        v103 -= 8;
        if (!v103)
        {
LABEL_164:
          result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v105 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v105)
            return 1;
          v106 = 8 * v105;
          for (jj = (_QWORD *)(v101 + 8 * v105); (sub_22EAD2F20(a1, *jj, 0) & 1) != 0; ++jj)
          {
            v106 -= 8;
            if (!v106)
            {
              v108 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v108)
                return 1;
              v109 = (_QWORD *)(v101 + 8 * v108 + 8 * v108);
              v110 = 8 * v108;
              while ((sub_22EAD2F20(a1, *v109, 0) & 1) != 0)
              {
                ++v109;
                v110 -= 8;
                if (!v110)
                {
                  v111 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v111)
                    return 1;
                  v112 = (_QWORD *)(v101 + 8 * v111 + 8 * v111 + 8 * v111);
                  v113 = 8 * v111;
                  while ((sub_22EAD2F20(a1, *v112, 0) & 1) != 0)
                  {
                    ++v112;
                    v113 -= 8;
                    if (!v113)
                    {
                      v114 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v114)
                        return 1;
                      v115 = (_QWORD *)(v101 + 8 * v114 + 8 * v114 + 8 * v114 + 8 * v114);
                      v116 = 8 * v114;
                      while ((sub_22EAD2F20(a1, *v115, 0) & 1) != 0)
                      {
                        ++v115;
                        v116 -= 8;
                        if (!v116)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2C:
      v117 = a2 + 64;
      v118 = *(unsigned int *)(a2 + 16);
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 64 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118), 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22EAD2F20(a1, *(_QWORD *)(v117+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8), 0);
      if (!(_DWORD)result)
        return result;
      v119 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v119)
        goto LABEL_191;
      v120 = 8 * v119;
      v121 = (_QWORD *)(a2 + 64);
      while ((sub_22EAD2F20(a1, *v121, 0) & 1) != 0)
      {
        ++v121;
        v120 -= 8;
        if (!v120)
        {
LABEL_191:
          result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v122 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v122)
            return 1;
          v123 = 8 * v122;
          for (kk = (_QWORD *)(v117 + 8 * v122); (sub_22EAD2F20(a1, *kk, 0) & 1) != 0; ++kk)
          {
            v123 -= 8;
            if (!v123)
            {
              v125 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v125)
                return 1;
              v126 = (_QWORD *)(v117 + 8 * v125 + 8 * v125);
              v127 = 8 * v125;
              while ((sub_22EAD2F20(a1, *v126, 0) & 1) != 0)
              {
                ++v126;
                v127 -= 8;
                if (!v127)
                {
                  v128 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v128)
                    return 1;
                  v129 = (_QWORD *)(v117 + 8 * v128 + 8 * v128 + 8 * v128);
                  v130 = 8 * v128;
                  while ((sub_22EAD2F20(a1, *v129, 0) & 1) != 0)
                  {
                    ++v129;
                    v130 -= 8;
                    if (!v130)
                    {
                      v131 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v131)
                        return 1;
                      v132 = (_QWORD *)(v117 + 8 * v131 + 8 * v131 + 8 * v131 + 8 * v131);
                      v133 = 8 * v131;
                      while ((sub_22EAD2F20(a1, *v132, 0) & 1) != 0)
                      {
                        ++v132;
                        v133 -= 8;
                        if (!v133)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2E:
      v190 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v190)
        return 1;
      v191 = (_QWORD *)(a2 + 136);
      v192 = 8 * v190;
      while ((sub_22EAD2F20(a1, *v191, 0) & 1) != 0)
      {
        ++v191;
        v192 -= 8;
        if (!v192)
          return 1;
      }
      return 0;
    case 0x35:
      v6 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v6)
        return 1;
      v7 = a2 + 24;
      v8 = 8 * v6;
      for (mm = (_QWORD *)(a2 + 24); (sub_22EAD2F20(a1, *mm, 0) & 1) != 0; ++mm)
      {
        v8 -= 8;
        if (!v8)
        {
          v10 = *(unsigned int *)(a2 + 16);
          v11 = (uint64_t *)(v7 + 8 * v10);
          v208 = (unint64_t)v11;
          if ((_DWORD)v10)
          {
            v12 = 0;
            v13 = &v11[v10];
            while (1)
            {
              if ((v12 & 3) != 0)
              {
                if ((v12 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                  v14 = (_QWORD *)((v12 & 0xFFFFFFFFFFFFFFFCLL) + 40);
                else
                  v14 = (_QWORD *)sub_22F3AC1A8(*v11);
                if ((sub_22EAD2F20(a1, *v14, 0) & 1) == 0)
                  return 0;
                if (v12 < 4)
                  sub_22F3F2FE0((uint64_t)&v208, 1);
                else
                  sub_22F0D8720((uint64_t)&v208);
              }
              else
              {
                if (!sub_22EAD2F20(a1, *v11, 0))
                  return 0;
                *(_QWORD *)&v208 = v11 + 1;
              }
              v12 = *((_QWORD *)&v208 + 1);
              v11 = (uint64_t *)v208;
              if ((uint64_t *)v208 == v13 && *((_QWORD *)&v208 + 1) == 0)
                return 1;
            }
          }
          return 1;
        }
      }
      return 0;
    case 0x3F:
      v75 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v75)
        return 1;
      v76 = a2 + 24;
      v77 = 8 * v75;
      for (nn = (_QWORD *)(a2 + 24); (sub_22EAD2F20(a1, *nn, 0) & 1) != 0; ++nn)
      {
        v77 -= 8;
        if (!v77)
        {
          v79 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v79)
            return 1;
          v80 = 8 * v79;
          for (i1 = (_QWORD *)(v76 + 8 * v79); (sub_22EAD2F20(a1, *i1, 0) & 1) != 0; ++i1)
          {
            v80 -= 8;
            if (!v80)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 0x42:
      if (!sub_22EAEC53C(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v208 = *(_OWORD *)(a2 + 80);
      v209 = *(_QWORD *)(a2 + 96);
      if (!sub_22EAEC5C4(a1, (uint64_t *)&v208))
        return 0;
      v140 = a2 + 104;
      v141 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v141)
        goto LABEL_228;
      v142 = 8 * v141;
      v143 = (_QWORD *)(a2 + 104);
      while ((sub_22EAD2F20(a1, *v143, 0) & 1) != 0)
      {
        ++v143;
        v142 -= 8;
        if (!v142)
        {
LABEL_228:
          if (sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EAD2F20(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v144 = *(unsigned int *)(a2 + 16);
            if ((_DWORD)v144)
            {
              v145 = 8 * v144;
              v146 = (_QWORD *)(v140 + 8 * v144);
              while ((sub_22EAD2F20(a1, *v146, 0) & 1) != 0)
              {
                ++v146;
                v145 -= 8;
                if (!v145)
                {
                  v147 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v147)
                    goto LABEL_246;
                  v148 = (_QWORD *)(v140 + 8 * v147 + 8 * v147);
                  v149 = 8 * v147;
                  while ((sub_22EAD2F20(a1, *v148, 0) & 1) != 0)
                  {
                    ++v148;
                    v149 -= 8;
                    if (!v149)
                    {
                      v150 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v150)
                        goto LABEL_246;
                      v151 = (_QWORD *)(v140 + 8 * v150 + 8 * v150 + 8 * v150);
                      v152 = 8 * v150;
                      while ((sub_22EAD2F20(a1, *v151, 0) & 1) != 0)
                      {
                        ++v151;
                        v152 -= 8;
                        if (!v152)
                        {
                          v153 = *(unsigned int *)(a2 + 16);
                          if (!(_DWORD)v153)
                            goto LABEL_246;
                          v154 = (_QWORD *)(v140 + 8 * v153 + 8 * v153 + 8 * v153 + 8 * v153);
                          v155 = 8 * v153;
                          while ((sub_22EAD2F20(a1, *v154, 0) & 1) != 0)
                          {
                            ++v154;
                            v155 -= 8;
                            if (!v155)
                              goto LABEL_246;
                          }
                          return 0;
                        }
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
            else
            {
LABEL_246:
              if (*(_DWORD *)(a2 + 48) != 1)
                return 1;
              v156 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v156)
                return 1;
              v157 = (_QWORD *)(v140 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156);
              v158 = 8 * v156;
              while ((sub_22EAD2F20(a1, *v157, 0) & 1) != 0)
              {
                ++v157;
                v158 -= 8;
                if (!v158)
                {
                  v159 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v159)
                    return 1;
                  v160 = (_QWORD *)(v140 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159);
                  v161 = 8 * v159;
                  while ((sub_22EAD2F20(a1, *v160, 0) & 1) != 0)
                  {
                    ++v160;
                    v161 -= 8;
                    if (!v161)
                    {
                      v162 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v162)
                        return 1;
                      v163 = (_QWORD *)(v140 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162);
                      v164 = 8 * v162;
                      while ((sub_22EAD2F20(a1, *v163, 0) & 1) != 0)
                      {
                        ++v163;
                        v164 -= 8;
                        if (!v164)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x47:
      result = sub_22EAD2F20(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 64);
      return (sub_22EAD2F20(a1, v5, 0) & 1) != 0;
    case 0x49:
      v202 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v202)
        return 1;
      v203 = (_QWORD *)(a2 + 24);
      v204 = 8 * v202;
      while ((sub_22EAD2F20(a1, *v203, 0) & 1) != 0)
      {
        ++v203;
        v204 -= 8;
        if (!v204)
          return 1;
      }
      return 0;
    case 0x4C:
      v165 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v165)
        return 1;
      v166 = (_QWORD *)(a2 + 24);
      v167 = 8 * v165;
      while ((sub_22EAD2F20(a1, *v166, 0) & 1) != 0)
      {
        ++v166;
        v167 -= 8;
        if (!v167)
          return 1;
      }
      return 0;
    case 0x4D:
      if (!sub_22EAEC53C(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22EAEC5C4(a1, (uint64_t *)&v208))
        return 0;
      v24 = a2 + 96;
      v25 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v25)
        goto LABEL_49;
      v26 = 8 * v25;
      v27 = (_QWORD *)(a2 + 96);
      while ((sub_22EAD2F20(a1, *v27, 0) & 1) != 0)
      {
        ++v27;
        v26 -= 8;
        if (!v26)
        {
LABEL_49:
          if (sub_22EAD2F20(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EAD2F20(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v28 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v28)
              return 1;
            v29 = 8 * v28;
            for (i2 = (_QWORD *)(v24 + 8 * v28); (sub_22EAD2F20(a1, *i2, 0) & 1) != 0; ++i2)
            {
              v29 -= 8;
              if (!v29)
              {
                v31 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v31)
                  return 1;
                v32 = (_QWORD *)(v24 + 8 * v31 + 8 * v31);
                v33 = 8 * v31;
                while ((sub_22EAD2F20(a1, *v32, 0) & 1) != 0)
                {
                  ++v32;
                  v33 -= 8;
                  if (!v33)
                  {
                    v34 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v34)
                      return 1;
                    v35 = (_QWORD *)(v24 + 8 * v34 + 8 * v34 + 8 * v34);
                    v36 = 8 * v34;
                    while ((sub_22EAD2F20(a1, *v35, 0) & 1) != 0)
                    {
                      ++v35;
                      v36 -= 8;
                      if (!v36)
                      {
                        v37 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v37)
                          return 1;
                        v38 = (_QWORD *)(v24 + 8 * v37 + 8 * v37 + 8 * v37 + 8 * v37);
                        v39 = 8 * v37;
                        while ((sub_22EAD2F20(a1, *v38, 0) & 1) != 0)
                        {
                          ++v38;
                          v39 -= 8;
                          if (!v39)
                            return 1;
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x51:
      v16 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v16)
        return 1;
      v17 = (_QWORD *)(a2 + 104);
      v18 = 8 * v16;
      while ((sub_22EAD2F20(a1, *v17, 0) & 1) != 0)
      {
        ++v17;
        v18 -= 8;
        if (!v18)
          return 1;
      }
      return 0;
    case 0x59:
      v205 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v205)
        return 1;
      v206 = (_QWORD *)(a2 + 80);
      v207 = 8 * v205;
      while ((sub_22EAD2F20(a1, *v206, 0) & 1) != 0)
      {
        ++v206;
        v207 -= 8;
        if (!v207)
          return 1;
      }
      return 0;
    case 0x5A:
      v196 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v196)
        return 1;
      v197 = (_QWORD *)(a2 + 80);
      v198 = 8 * v196;
      while ((sub_22EAD2F20(a1, *v197, 0) & 1) != 0)
      {
        ++v197;
        v198 -= 8;
        if (!v198)
          return 1;
      }
      return 0;
    case 0x5B:
      v19 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v19)
        return 1;
      v20 = 0;
      v21 = a2 + 24;
      v22 = 2 * v19;
      break;
    default:
      return 1;
  }
  while (1)
  {
    v23 = *(_QWORD *)(v21 + 8 * (v20 + 1));
    result = sub_22EAD2F20(a1, *(_QWORD *)(v21 + 8 * v20), 0);
    if (!(_DWORD)result)
      break;
    if ((sub_22EAD2F20(a1, v23, 0) & 1) == 0)
      return 0;
    v20 += 2;
    if (v22 == v20)
      return 1;
  }
  return result;
}

uint64_t sub_22EAF2844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;

  if (!a2)
    return 1;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4 == v3)
    v5 = 0;
  else
    v5 = *(uint64_t **)(a2 + 24);
  if (v4 == v3)
    v6 = 0;
  else
    v6 = *(uint64_t **)(a2 + 16);
  v14 = 0;
  v15 = 0;
  v13 = v6;
  if (v6 == v5)
    return 1;
  v9 = 0;
  while (1)
  {
    if ((v9 & 3) == 0)
    {
      result = sub_22EAD2F20(a1, *v6, a3);
      if (!(_DWORD)result)
        return result;
      v13 = v6 + 1;
      goto LABEL_18;
    }
    v10 = (_QWORD *)((v9 & 0xFFFFFFFFFFFFFFFCLL) != 0 ? (v9 & 0xFFFFFFFFFFFFFFFCLL) + 40 : sub_22F3AC1A8(*v6));
    if ((sub_22EAD2F20(a1, *v10, a3) & 1) == 0)
      return 0;
    if (v9 < 4)
      sub_22F3F2FE0((uint64_t)&v13, 1);
    else
      sub_22F0D8720((uint64_t)&v13);
LABEL_18:
    v6 = v13;
    v9 = v14;
    if (v13 == v5 && v14 == 0)
      return 1;
  }
}

_BYTE *sub_22EAF293C(uint64_t a1, uint64_t a2, uint64_t *__src, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v10;
  unint64_t v11;
  _BYTE *v13;
  unint64_t v14;
  unsigned int v15;
  _QWORD *v16;
  uint64_t v17;
  _BYTE *__srca;
  uint64_t *v19;

  v5 = *(_QWORD *)a1;
  v6 = (a2 - *(_QWORD *)a1) >> 3;
  v7 = *(unsigned int *)(a1 + 8);
  if (*(_QWORD *)a1 + 8 * v7 == a2)
  {
    sub_22E3D0148(a1, __src, a4);
    return (_BYTE *)(*(_QWORD *)a1 + 8 * v6);
  }
  v19 = __src;
  v10 = (char *)a4 - (char *)__src;
  v11 = a4 - __src;
  if (v7 + v11 > *(unsigned int *)(a1 + 12))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v5 = *(_QWORD *)a1;
    v7 = *(unsigned int *)(a1 + 8);
  }
  v13 = (_BYTE *)(v5 + 8 * v7);
  __srca = (_BYTE *)(v5 + 8 * v6);
  v14 = (v13 - __srca) >> 3;
  if (v14 < v11)
  {
    v15 = v7 + (v10 >> 3);
    *(_DWORD *)(a1 + 8) = v15;
    if (v6 != v7)
    {
      v16 = (_QWORD *)(v5 + 8 * v6);
      memcpy((void *)(v5 + 8 * v15 - 8 * v14), __srca, v13 - __srca);
      do
      {
        v17 = *v19++;
        *v16++ = v17;
        --v14;
      }
      while (v14);
    }
    if (v19 != a4)
      memcpy(v13, v19, (char *)a4 - (char *)v19);
    return __srca;
  }
  sub_22F246808(a1, &v13[-8 * v11], (char *)(v5 + 8 * v7));
  if (&v13[-8 * v11] != __srca)
    memmove(&__srca[8 * v11], __srca, &v13[-8 * v11] - __srca);
  if (v19 == a4)
    return __srca;
  memmove(__srca, v19, v10);
  return __srca;
}

uint64_t sub_22EAF2AC0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  BOOL v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v28[24];
  __int128 v29;
  int v30;
  int v31;
  int v32;
  __int16 v33;
  char v34;

  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return 1;
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF0);
  if (!v6 || *(_BYTE *)(v6 + 16) != 32)
    v6 = sub_22F10CF48(v6);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 32) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
    v8 = *(unsigned __int8 *)(v7 + 16) - 35 > 0xFFFFFFFD;
  else
    v8 = 0;
  if (!v8)
    v7 = sub_22F10CF48(v7);
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_DWORD *)(v9 + 16) & 0xFF800FF;
  if (v9)
    v11 = v10 == 114819083;
  else
    v11 = 0;
  if (v11)
    return 0;
  if (v9)
    v12 = v10 == 115343371;
  else
    v12 = 0;
  if (v12)
  {
LABEL_19:
    v13 = *(_DWORD *)(a2 + 24);
    if (a3 <= 0xF)
    {
LABEL_20:
      v14 = sub_22F1E361C(*(_QWORD **)(a1 + 112), v13);
      if (!v14 || v14 == 3)
        goto LABEL_22;
      v25 = *(_QWORD *)(a1 + 88);
      v29 = 0uLL;
      v30 = v13;
      v31 = v13;
      v32 = 0;
      v34 = 120;
      v33 = 0;
      v26 = sub_22F3A4818(v25, "", 0, 5, &v29);
      sub_22EFCA95C(a2, v26);
      return 1;
    }
    goto LABEL_22;
  }
  v16 = sub_22F272660(v7);
  v17 = v16;
  v18 = *(_QWORD *)(v16 + 120);
  if (!v18)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v16 + 96) + 88), *(_QWORD *)(v16 + 96));
    v18 = *(_QWORD *)(v17 + 120);
  }
  if (v18 > 7)
  {
    v19 = *(_QWORD *)(a2 + 16);
    v20 = v19 & 0xFFFFFFFFFFFFFFF8;
    if ((v19 & 4) != 0)
      v20 = *(_QWORD *)v20;
    if ((*(_WORD *)(v20 + 8) & 0x7F) == 0x17)
    {
      if (a3 < 0x10)
        return 0;
      v21 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
      if (!v21 || *(_BYTE *)(v21 + 16) != 32)
        v21 = sub_22F10CF48(v21);
      v22 = sub_22F31179C(v21);
      if (!v22)
        return 0;
    }
    else
    {
      v22 = sub_22EFDC9F0(a2);
    }
    if ((sub_22E595B08(v22, v17) & 1) != 0 || (sub_22E595B08(v17, v22) & 1) != 0)
      return 0;
    goto LABEL_19;
  }
  if (a3 < 0x10)
  {
    v23 = *(_QWORD *)(a2 + 16);
    v24 = v23 & 0xFFFFFFFFFFFFFFF8;
    if ((v23 & 4) != 0)
      v24 = *(_QWORD *)v24;
    if ((*(_WORD *)(v24 + 8) & 0x7F) != 0x15)
      return 0;
    v13 = *(_DWORD *)(a2 + 24);
    goto LABEL_20;
  }
  v13 = *(_DWORD *)(a2 + 24);
LABEL_22:
  sub_22E8FCA40((_QWORD *)a1, v13, 0xA67u, 0, (uint64_t)v28);
  sub_22E903BEC(v28);
  v15 = 1;
  sub_22EFC77E8(a2, 1);
  return v15;
}

uint64_t sub_22EAF2D18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  __int16 v8;
  uint64_t *v9;
  BOOL v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  _BOOL4 v16;
  unsigned int v17;
  int v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL4 v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32[24];
  _BYTE v33[100];
  int v34;
  unint64_t v35;
  unsigned int v36[24];
  unint64_t v37;
  uint64_t v38[2];

  if ((*(_BYTE *)(a3 + 60) & 2) == 0 || (*(_BYTE *)(a2 + 60) & 2) != 0)
    goto LABEL_22;
  v38[0] = *(_QWORD *)(a2 + 80);
  v37 = sub_22F3B5740(a2);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  if ((v6 & 4) != 0)
  {
    v7 = *(_QWORD *)v7;
    v8 = *(_WORD *)(v7 + 8);
    if (v7)
      v10 = (v8 & 0x7F) == 22;
    else
      v10 = 0;
    if (v10)
      goto LABEL_6;
  }
  else
  {
    v8 = *(_WORD *)(v7 + 8);
    if (v7 && (v8 & 0x7F) == 0x16)
    {
LABEL_6:
      v9 = (uint64_t *)(v7 - 48);
LABEL_17:
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x1B27u, 0, (uint64_t)v36);
      v35 = sub_22F36D148(a1[11], v9, 0);
      v12 = (unsigned int *)sub_22E8901B8((uint64_t)v36, (uint64_t *)&v35);
      goto LABEL_18;
    }
  }
  if ((v8 & 0x7F) == 0x13)
  {
    v11 = 56;
  }
  else
  {
    if ((v8 & 0x7E) != 0x14)
      goto LABEL_16;
    v11 = 40;
  }
  v9 = *(uint64_t **)(v7 + v11);
  if (v9)
    goto LABEL_17;
LABEL_16:
  sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x1B28u, 0, (uint64_t)v36);
  v12 = v36;
LABEL_18:
  v13 = sub_22E8901B8((uint64_t)v12, v38);
  sub_22E8906A0(v13, (uint64_t *)&v37);
  sub_22E903BEC(v36);
  LODWORD(v35) = sub_22EFDBF50(a3);
  if ((_DWORD)v35)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x17B1u, 0, (uint64_t)v36);
    v34 = 0;
    v15 = sub_22E8900C4((uint64_t)v36, &v34);
    sub_22E8900C4(v15, (int *)&v35);
    v14 = v36;
  }
  else
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x17B3u, 0, (uint64_t)v33);
    v14 = (unsigned int *)v33;
  }
  sub_22E903BEC(v14);
LABEL_22:
  v16 = sub_22F24DC44(a2);
  if (v16 != sub_22F24DC44(a3))
  {
    if ((*(_WORD *)(a1[9] + 148) & 2) != 0)
      v17 = 4069;
    else
      v17 = 6795;
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v17, 0, (uint64_t)v36);
    LODWORD(v38[0]) = 1;
    sub_22E8900C4((uint64_t)v36, (int *)v38);
    sub_22E903BEC(v36);
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x1771u, 0, (uint64_t)v36);
    sub_22F2F30F4((uint64_t)v36, (uint64_t)"method");
    sub_22E903BEC(v36);
  }
  v18 = sub_22F32AD8C(a2);
  result = sub_22F32AD8C(a3);
  if (v18 != (_DWORD)result)
  {
    if ((*(_WORD *)(a1[9] + 148) & 2) != 0)
      v31 = 4069;
    else
      v31 = 6795;
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v31, 0, (uint64_t)v36);
    LODWORD(v38[0]) = 0;
    sub_22E8900C4((uint64_t)v36, (int *)v38);
    sub_22E903BEC(v36);
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x1771u, 0, (uint64_t)v36);
    sub_22F2F30F4((uint64_t)v36, (uint64_t)"method");
    result = (uint64_t)sub_22E903BEC(v36);
  }
  v20 = *(unsigned int *)(a2 + 104);
  if ((_DWORD)v20)
  {
    v21 = *(unsigned int *)(a3 + 104);
    if ((_DWORD)v21)
    {
      v22 = *(uint64_t **)(a3 + 96);
      v23 = *(uint64_t **)(a2 + 96);
      v24 = 8 * v20 - 8;
      v25 = 8 * v21 - 8;
      do
      {
        v26 = *v22;
        v27 = *v23;
        v28 = sub_22F24EBE4(*v23);
        if (v28 != sub_22F24EBE4(v26))
        {
          if ((*(_WORD *)(a1[9] + 148) & 2) != 0)
            v30 = 4065;
          else
            v30 = 6792;
          sub_22E8FCA40(a1, *(_DWORD *)(v27 + 24), v30, 0, (uint64_t)v32);
          sub_22E903BEC(v32);
          sub_22E8FCA40(a1, *(_DWORD *)(v26 + 24), 0x1771u, 0, (uint64_t)v36);
          sub_22F2F30F4((uint64_t)v36, (uint64_t)"parameter");
          sub_22E903BEC(v36);
        }
        result = sub_22EAF30F4(v27, v26, a1);
        if (!v24)
          break;
        ++v23;
        ++v22;
        v24 -= 8;
        v29 = v25;
        v25 -= 8;
      }
      while (v29);
    }
  }
  return result;
}

uint64_t sub_22EAF30F4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  unsigned int v7[24];
  unsigned int v8[24];

  if (!sub_22F24DBE4(a2) || sub_22F24DBE4(a1))
    return 1;
  sub_22E8FCA40(a3, *(_DWORD *)(a1 + 24), 0x1AD7u, 0, (uint64_t)v8);
  sub_22E903BEC(v8);
  sub_22E8FCA40(a3, *(_DWORD *)(a2 + 24), 0x1721u, 0, (uint64_t)v7);
  sub_22E903BEC(v7);
  return 0;
}

uint64_t sub_22EAF318C(_QWORD *a1, uint64_t a2)
{
  int v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _BYTE __p[24];
  char v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  char v27;

  v4 = sub_22EFDBF50(a2);
  result = 0;
  switch(v4)
  {
    case 0:
    case 6:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return result;
    case 1:
    case 2:
    case 4:
    case 5:
      if (sub_22F24DC44(a2) || sub_22F32AD8C(a2) || sub_22F32AE30(a2))
        goto LABEL_18;
      goto LABEL_17;
    case 3:
      if ((sub_22EAF2AC0((uint64_t)a1, a2, 0) & 1) != 0)
        goto LABEL_4;
      v9 = a1[11];
      v23 = 0uLL;
      v25 = 0;
      v24 = 0;
      v27 = 120;
      v26 = 0;
      v10 = sub_22F392F20(v9, &v23);
      sub_22EFCA95C(a2, v10);
      v11 = sub_22F24DC44(a2);
      result = 0;
      if (!v11)
      {
LABEL_17:
        v12 = a1[11];
        v23 = 0uLL;
        v25 = 0;
        v24 = 0;
        v27 = 120;
        v26 = 0;
        v13 = sub_22F3934B4(v12, &v23);
        sub_22EFCA95C(a2, v13);
LABEL_18:
        result = 0;
      }
      break;
    case 7:
      if ((*(_QWORD *)((*(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(a2 + 80) & 7) == (*(_QWORD *)((*(_QWORD *)(a1[11] + 16392) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(a1[11] + 16392) & 7))
        goto LABEL_18;
      v6 = sub_22F3B5740(a2);
      if (HIDWORD(v6) && (v7 = v6, (_DWORD)v6))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xC4Du, 0, (uint64_t)&v23);
        v22 = *(_QWORD *)(a2 + 80);
        v8 = sub_22E8901B8((uint64_t)&v23, &v22);
        v19 = 0;
        v18 = 0;
        *(_QWORD *)&__p[8] = 0;
        *(_QWORD *)&__p[16] = 0x400000000000000;
        v21 = 0;
        v16 = v7;
        v17 = 1;
        *(_QWORD *)__p = 1684631414;
      }
      else
      {
        sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xC4Du, 0, (uint64_t)&v23);
        v22 = *(_QWORD *)(a2 + 80);
        v14 = sub_22E8901B8((uint64_t)&v23, &v22);
        v15 = sub_22F32ADEC(a2, 0);
        v18 = 0;
        v19 = 0;
        v16 = v15 | ((unint64_t)v15 << 32);
        v17 = 0;
        *(_WORD *)&__p[22] = 1536;
        *(_OWORD *)&__p[6] = 0uLL;
        qmemcpy(__p, "(void)", 6);
        v21 = 0;
        v8 = v14;
      }
      sub_22E890748(v8, &v16);
      if ((__p[23] & 0x80000000) != 0)
        operator delete(*(void **)__p);
      sub_22E903BEC((unsigned int *)&v23);
LABEL_4:
      result = 1;
      break;
    default:
      goto LABEL_17;
  }
  return result;
}

unint64_t sub_22EAF341C(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  unint64_t v5;
  int v6;
  unint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unsigned int v43;
  unint64_t v44;
  BOOL v45;
  int v46;
  unint64_t v47;
  int v48;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v65;
  unint64_t v66;
  int i;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;

  *(_DWORD *)(a1 + 8640) = 0;
  if (a3)
  {
    if ((*(_DWORD *)(a3 + 28) & 0x7F) == 0x18)
      v5 = a3;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
  }
  v6 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
  v72 = 0;
  v75 = 3;
  v76 = v6;
  v74 = *(unsigned int *)(a1 + 1704);
  result = sub_22EB4DDB8(a1 + 3688, &v76, (int *)&v74, (__int16 *)(a1 + 1693), (uint64_t *)&v72, &v75);
  v8 = *(unsigned int *)(a1 + 3696);
  v9 = v8 - 2;
  v10 = *(_QWORD *)(a1 + 3688);
  v11 = *(_DWORD *)(v10 + 576 * (v8 - 2));
  if (v11 == 5)
  {
    *(_BYTE *)(v10 + 576 * v8 - 4) = *(_BYTE *)(v10 + 576 * v9 + 572);
    v12 = 1;
  }
  else if (v11 == 2)
  {
    *(_BYTE *)(v10 + 576 * v8 - 4) = 1;
    v12 = *(_BYTE *)(v10 + 576 * v9 + 573) != 0;
  }
  else
  {
    v12 = 0;
    *(_BYTE *)(v10 + 576 * v8 - 4) = 0;
  }
  v13 = v10 + 576 * v8;
  *(_BYTE *)(v13 - 3) = v12;
  *(_WORD *)(a1 + 1693) = 0;
  if (*(_DWORD *)(a1 + 1848))
  {
    llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(a1 + 1776), (llvm::SmallPtrSetImplBase *)(v13 - 560));
    result = sub_22EAEAE08(a1 + 1840, (uint64_t *)(v13 - 496));
    if (!v5)
      return result;
  }
  else if (!v5)
  {
    return result;
  }
  v14 = *(_QWORD *)(v5 + 80);
  v15 = *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v15 + 17) & 4) == 0)
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0);
    if ((!v16 || (*(_DWORD *)(v16 + 16) & 0xFF800FF) != 86507531) && (*(_BYTE *)(v5 + 28) & 0x80) == 0)
    {
      v18 = *(_DWORD *)(v5 + 24);
      v72 = &unk_24FAB6EF8;
      v73 = 3512;
      if (sub_22EE8B0B0(a1, v18, v14))
        sub_22EFC77E8(v5, 1);
    }
  }
  *(_QWORD *)(a1 + 216) = v5 + 48;
  a2[45] = v5 + 48;
  sub_22E904974(a1);
  v19 = *(_QWORD *)(a1 + 88);
  v20 = (uint64_t *)sub_22EFDC9F0(v5);
  sub_22F3B5618(v5, v19, v20);
  sub_22EA0483C(a1, *(_QWORD *)(v5 + 120), a2, 1);
  sub_22EA0483C(a1, *(_QWORD *)(v5 + 128), a2, 1);
  sub_22E98BD04(a1, *(uint64_t **)(v5 + 96), *(unsigned int *)(v5 + 104), 0, v5);
  v21 = *(unsigned int *)(v5 + 104);
  if ((_DWORD)v21)
  {
    v22 = *(unint64_t **)(v5 + 96);
    v23 = &v22[v21];
    while (1)
    {
      v24 = *v22;
      if ((*(_BYTE *)(*v22 + 28) & 0x80) == 0 && (*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 2) != 0)
      {
        v25 = *(_QWORD *)(v24 + 48) & 0xFFFFFFFFFFFFFFF0;
        v26 = *(_QWORD *)v25;
        v27 = *(unsigned __int8 *)(*(_QWORD *)v25 + 16);
        if (*(_QWORD *)v25 && v27 == 39)
          goto LABEL_39;
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
        {
          v26 = sub_22F10CF48(v26);
          if (v26)
            goto LABEL_39;
          v26 = *(_QWORD *)v25;
          v27 = *(_DWORD *)(*(_QWORD *)v25 + 16);
        }
        if ((v27 & 0xFE) == 0x28)
          break;
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
        {
          v26 = sub_22F10CF48(v26);
          if (v26)
            break;
        }
      }
LABEL_42:
      if (*(_QWORD *)(v24 + 40) >= 8uLL && (*(_QWORD *)(v24 + 40) & 7) == 0)
        sub_22EA0483C(a1, v24, a2, 1);
      if (++v22 == v23)
        goto LABEL_49;
    }
    if ((*(_BYTE *)(v26 + 18) & 0x10) != 0)
    {
      do
      {
        while (1)
        {
          v26 = *(_QWORD *)(*(_QWORD *)(v26 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v26)
            break;
          v28 = *(_DWORD *)(v26 + 16);
          if ((v28 & 0xFE) != 0x28)
            break;
          if ((v28 & 0x100000) == 0)
            goto LABEL_39;
        }
        v26 = sub_22F10CF48(v26);
      }
      while ((*(_DWORD *)(v26 + 16) & 0x100000) != 0);
    }
LABEL_39:
    v29 = *(_QWORD *)(v26 + 32);
    if ((v29 & 8) != 0 && (*(_WORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) != 0)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v24 + 24), 0x1840u, 0, (uint64_t)&v72);
      v74 = *(_QWORD *)(v24 + 48);
      sub_22E8901B8((uint64_t)&v72, &v74);
      sub_22E903BEC((unsigned int *)&v72);
    }
    goto LABEL_42;
  }
LABEL_49:
  if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 2) != 0)
  {
    v31 = sub_22EFDBF50(v5);
    if (v31 <= 0xB && ((1 << v31) & 0xE40) != 0)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v5 + 24), 0xA63u, 0, (uint64_t)&v72);
      v76 = 0;
      v32 = sub_22E8900C4((uint64_t)&v72, &v76);
      v74 = *(_QWORD *)(v5 + 40);
      sub_22E894538(v32, &v74);
      sub_22E903BEC((unsigned int *)&v72);
    }
  }
  result = sub_22EFDC9F0(v5);
  if (result)
  {
    v33 = result;
    v34 = sub_22EFDBA90(result, *(_QWORD *)(v5 + 40), (*(_QWORD *)(v5 + 56) >> 17) & 1, 0, 1, 0);
    if (!v34)
      goto LABEL_95;
    v35 = v34;
    v36 = *(_QWORD *)(v5 + 16);
    v37 = v36 & 0xFFFFFFFFFFFFFFF8;
    if ((v36 & 4) != 0)
      v37 = *(_QWORD *)v37;
    v38 = *(_WORD *)(v37 + 8) & 0x7E;
    if (v37)
      v39 = v37 - 48;
    else
      v39 = 0;
    if (v38 == 20)
      v40 = v39;
    else
      v40 = 0;
    v41 = *(_QWORD *)(v34 + 16);
    v42 = v41 & 0xFFFFFFFFFFFFFFF8;
    if ((v41 & 4) != 0)
      v42 = *(_QWORD *)v42;
    v43 = (*(_WORD *)(v42 + 8) & 0x7F) - 24;
    v44 = v42 - 48;
    if (v42)
      v45 = v43 >= 0xFFFFFFFB;
    else
      v45 = 0;
    v46 = !v45;
    if (v46)
      v47 = 0;
    else
      v47 = v42 - 48;
    v48 = *(_DWORD *)(v47 + 28) & 0x7F;
    if (v42)
    {
      if (v48 == 22 && v43 >= 0xFFFFFFFB)
      {
LABEL_80:
        v50 = sub_22F3B4E88(v47);
        goto LABEL_81;
      }
    }
    if (v48 == 19)
      v52 = v47;
    else
      v52 = 0;
    if (v48 == 19)
      v53 = v46;
    else
      v53 = 1;
    if ((v53 & 1) != 0)
      goto LABEL_94;
    if (*(_QWORD *)(v52 + 40) < 8uLL || (*(_QWORD *)(v52 + 40) & 7) != 0)
    {
      v47 = *(_QWORD *)(v52 + 104);
      if (!v47)
        goto LABEL_94;
      goto LABEL_80;
    }
    if ((*(_DWORD *)(v52 + 28) & 0x7F) != 0x53)
    {
      v65 = *(_QWORD *)(v52 + 16);
      v66 = v65 & 0xFFFFFFFFFFFFFFF8;
      if ((v65 & 4) != 0)
        v66 = *(_QWORD *)v66;
      for (i = *(_WORD *)(v66 + 8) & 0x7F; i != 83; i = *(_WORD *)(v66 + 8) & 0x7F)
      {
        v68 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v68 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_130;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_129;
          if (i == 16)
            goto LABEL_123;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_136;
          if (i == 24)
          {
LABEL_123:
            v68 = -48;
          }
          else
          {
LABEL_129:
            if (i != 70)
            {
LABEL_130:
              v69 = i - 52;
              if ((i - 33) >= 5)
                v70 = -48;
              else
                v70 = -64;
              if (v69 >= 6)
                v68 = v70;
              else
                v68 = -72;
              goto LABEL_136;
            }
            v68 = -64;
          }
        }
LABEL_136:
        v71 = *(_QWORD *)(v66 + v68 + 16);
        v66 = v71 & 0xFFFFFFFFFFFFFFF8;
        if ((v71 & 4) != 0)
          v66 = *(_QWORD *)v66;
      }
      v44 = v66 - 40;
    }
    v50 = sub_22F368C34(*(_QWORD *)(v44 + 88), v52);
LABEL_81:
    if (v50)
      v51 = v50 == v40;
    else
      v51 = 0;
    if (v51)
    {
LABEL_95:
      if (sub_22EFDBF50(v5) == 3)
      {
        if (sub_22EFDC2D0(v5, 0))
        {
          v54 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * *(unsigned int *)(a1 + 1904) - 8);
          *(_DWORD *)(v54 + 8) |= 0x2000u;
          v55 = sub_22F3B46CC(v33) != 0;
          v56 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * *(unsigned int *)(a1 + 1904) - 8);
          *(_DWORD *)(v56 + 8) = *(_DWORD *)(v56 + 8) & 0xFFFFBFFF | (v55 << 14);
        }
        else if (sub_22F3B4A28(v33))
        {
          v57 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * *(unsigned int *)(a1 + 1904) - 8);
          *(_DWORD *)(v57 + 8) |= 0x8000u;
          v58 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * *(unsigned int *)(a1 + 1904) - 8);
          *(_DWORD *)(v58 + 8) |= 0x10000u;
        }
      }
      result = sub_22F3B46CC(v33);
      if (result)
      {
        v59 = result;
        result = sub_22EFDBF50(v5);
        if ((_DWORD)result == 8)
        {
          if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 246) & 6) != 0)
          {
LABEL_107:
            v61 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * *(unsigned int *)(a1 + 1904) - 8);
            *(_DWORD *)(v61 + 8) |= 0x1000u;
            return result;
          }
        }
        else if ((_DWORD)result == 7)
        {
          v60 = *(_QWORD *)(a1 + 72);
          if ((*(_WORD *)(v60 + 148) & 2) == 0 && (*(_DWORD *)(v60 + 244) & 0x60000) != 0x20000)
            goto LABEL_107;
        }
        else
        {
          result = sub_22EFDBA90(v59, *(_QWORD *)(v5 + 40), (*(_QWORD *)(v5 + 56) >> 17) & 1, 0, 1, 0);
          v62 = 0;
          if (result)
          {
            result = sub_22F32AEB8(result);
            if ((_DWORD)result)
              v62 = 4096;
            else
              v62 = 0;
          }
          v63 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * *(unsigned int *)(a1 + 1904) - 8);
          *(_DWORD *)(v63 + 8) = *(_DWORD *)(v63 + 8) & 0xFFFFEFFF | v62;
        }
      }
      return result;
    }
LABEL_94:
    sub_22EAF3BE0((unsigned int *)a1, v35, *(_DWORD *)(v5 + 24));
    goto LABEL_95;
  }
  return result;
}

unsigned int *sub_22EAF3BE0(unsigned int *result, uint64_t a2, int a3)
{
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int v9;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int v19;
  int v20;
  const char *v21;
  const char *v22;
  unsigned int v23[24];
  unsigned int v24[24];
  uint64_t v25;
  unint64_t v26;
  __int128 v27;

  if (!a2)
    return result;
  v4 = a2;
  v5 = result;
  v6 = *(_QWORD *)(*((_QWORD *)result + 11) + 15088);
  v7 = *(void **)(v6 + 224);
  v8 = *(_QWORD *)(v6 + 232);
  v27 = *(_OWORD *)(v6 + 240);
  v25 = 0;
  v26 = 0;
  result = (unsigned int *)sub_22EFC93E8(a2, v7, v8, (uint64_t *)&v27, 0, &v25);
  v9 = (int)result;
  if ((_DWORD)result == 2)
  {
LABEL_19:
    sub_22E8FCA40(v5, a3, 0x1961u, 0, (uint64_t)v23);
    if ((*(_DWORD *)(v4 + 28) & 0x7F) != 0x13 && v9 == 2)
      v19 = 1;
    else
      v19 = 2;
    if ((*(_DWORD *)(v4 + 28) & 0x7F) == 0x18)
      v20 = 0;
    else
      v20 = v19;
    LODWORD(v22) = v20;
    sub_22E8900C4((uint64_t)v23, (int *)&v22);
    sub_22E903BEC(v23);
    if ((*(_DWORD *)(v4 + 28) & 0x7F) != 0x18)
    {
      sub_22E8FCA40(v5, *(_DWORD *)(v4 + 24), 0x1771u, 0, (uint64_t)v23);
      if ((*(_DWORD *)(v4 + 28) & 0x7F) == 0x13)
        v21 = "category";
      else
        v21 = "class";
      v22 = v21;
      sub_22E8AECC4((uint64_t)v23, (uint64_t *)&v22);
      return sub_22E903BEC(v23);
    }
LABEL_29:
    sub_22E8FCA40(v5, *(_DWORD *)(v4 + 24), 0x16B5u, 0, (uint64_t)v23);
    v22 = *(const char **)(v4 + 40);
    sub_22E894538((uint64_t)v23, (uint64_t *)&v22);
    return sub_22E903BEC(v23);
  }
  if ((*(_DWORD *)(v4 + 28) & 0x7F) == 0x13)
  {
    result = (unsigned int *)sub_22EFC93E8(*(_QWORD *)(v4 + 104), v7, v8, (uint64_t *)&v27, 0, 0);
    if ((_DWORD)result != 2)
      return result;
    v4 = *(_QWORD *)(v4 + 104);
    goto LABEL_19;
  }
  if ((*(_DWORD *)(v4 + 28) & 0x7F) == 0x18 && (_DWORD)result == 3)
  {
    v11 = v26;
    if (!v26)
    {
      v12 = *(_QWORD *)(*((_QWORD *)v5 + 11) + 15088);
      v13 = *(_QWORD *)(v12 + 224);
      v11 = *(_QWORD *)(v12 + 232);
      v25 = v13;
      v26 = v11;
    }
    if (v11 < 0xE
      || ((v14 = v25 + v11, v15 = *(_QWORD *)(v14 - 14), v16 = *(_QWORD *)(v14 - 8), v15 == 0x7478655F7070615FLL)
        ? (v17 = v16 == 0x6E6F69736E657478)
        : (v17 = 0),
          !v17))
    {
      sub_22E8FCA40(v5, a3, 0x1BA1u, 0, (uint64_t)v24);
      sub_22E903BEC(v24);
      goto LABEL_29;
    }
  }
  return result;
}

unint64_t sub_22EAF3E0C(_QWORD *a1, uint64_t a2, unsigned int a3, _QWORD *a4, uint64_t a5, unsigned int a6, void **a7, int a8, unint64_t *a9, uint64_t a10, unsigned int a11, unsigned int a12)
{
  int v12;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t result;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  char v31;
  uint64_t (***v32)();
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void **v36;
  uint64_t v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unsigned int v44[24];
  void **v45;
  unint64_t v46;
  int v47;
  uint64_t (**v48)();
  int v49;
  char v50;
  uint64_t v51;
  _BYTE v52[11];
  _QWORD *v53;
  void **v54;
  uint64_t v55;
  int v56;
  uint64_t (**v57)();
  uint64_t (***v58)();
  uint64_t (***v59)();
  uint64_t *v60;
  void ***v61;
  _QWORD v62[6];

  v12 = a8;
  v62[4] = *MEMORY[0x24BDAC8D0];
  v56 = a8;
  v55 = a5;
  v54 = a7;
  v20 = sub_22EC65CE0(a1, a1[418], (uint64_t)a7, a8, 0, 0);
  if (!v20)
  {
    v50 = 1;
    v49 = 16843009;
    memset(v52, 0, sizeof(v52));
    v51 = 0;
    v48 = &off_24FAB8148;
    v53 = a4;
    v45 = a7;
    LODWORD(v46) = v12;
    sub_22EFC6D6C((uint64_t)&v47, (uint64_t)a7);
    sub_22EC6AB20((uint64_t)a1, (uint64_t *)&v45, 0, (uint64_t *)a1[418], 0, (uint64_t)&v48, 1, 0, (uint64_t)&v57, 0, 0, 1u);
    if (v57)
    {
      v35 = a1[11] + 2128;
      v45 = 0;
      v46 = v35;
      v47 = 5054;
      v45 = (void **)sub_22E3B8AAC(v35);
      *((_BYTE *)v45 + *(unsigned __int8 *)v45 + 1) = 5;
      v36 = v45;
      v37 = *(unsigned __int8 *)v45;
      *(_BYTE *)v45 = v37 + 1;
      v36[v37 + 2] = a7;
      *((_BYTE *)v36 + (v37 + 1) + 1) = 5;
      v38 = v45;
      v39 = *(unsigned __int8 *)v45;
      *(_BYTE *)v45 = v39 + 1;
      v38[v39 + 2] = (void *)a5;
      sub_22EC6BEF8((uint64_t)a1, (uint64_t)&v57, (uint64_t)&v45, 1);
      if (v45 && v46)
        sub_22E3BB10C(v46, (unint64_t)v45);
      v40 = sub_22F2E6D78((uint64_t)&v57);
      if (v40)
      {
        if ((*(_DWORD *)(v40 + 28) & 0x7F) == 0x16)
          v20 = v40;
        else
          v20 = 0;
      }
      else
      {
        v20 = 0;
      }
    }
    v45 = (void **)v62;
    sub_22E8D19C8(&v45);
    if (v59 != (uint64_t (***)())&v61)
      free(v59);
  }
  if (a4 && v20)
  {
    if ((_QWORD *)v20 == a4)
    {
LABEL_10:
      sub_22E8FCA40(a1, v12, 0x1211u, 0, (uint64_t)&v57);
      v22 = sub_22E8BAE44((uint64_t)&v57, (uint64_t *)&v54);
      v23 = sub_22E8BAE44(v22, &v55);
      v48 = (uint64_t (**)())__PAIR64__(a6, a3);
      sub_22E8906A0(v23, (uint64_t *)&v48);
      result = (unint64_t)sub_22E903BEC((unsigned int *)&v57);
      *(_DWORD *)((a4[15] & 0xFFFFFFFFFFFFFFF8) + 80) = a6;
      return result;
    }
    v21 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v20 + 32))(v20);
    if (v21 == (*(uint64_t (**)(_QWORD *))(*a4 + 32))(a4))
    {
      v12 = v56;
      goto LABEL_10;
    }
  }
  else if (!v20)
  {
    v26 = 0;
LABEL_19:
    sub_22E8FCA40(a1, v12, 0x13BDu, 0, (uint64_t)&v57);
    v27 = sub_22E8BAE44((uint64_t)&v57, (uint64_t *)&v54);
    v28 = sub_22E8BAE44(v27, &v55);
    v48 = (uint64_t (**)())__PAIR64__(a6, a3);
    sub_22E8906A0(v28, (uint64_t *)&v48);
    result = (unint64_t)sub_22E903BEC((unsigned int *)&v57);
    goto LABEL_20;
  }
  if ((*(_DWORD *)(v20 + 28) & 0x7F) == 0x16)
  {
    sub_22EB17F48((uint64_t)a1, (_DWORD *)v20, (unsigned int *)&v56, 1, 0, 0, 0, 0);
    result = sub_22F36D148(a1[11], (uint64_t *)v20, 0);
    v26 = result;
    v34 = v20;
    goto LABEL_34;
  }
  if ((*(_DWORD *)(v20 + 28) & 0x7Fu) - 42 < 0xFFFFFFFD)
    goto LABEL_15;
  v25 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v20 + 80) & 0xFFFFFFFFFFFFFFF8)
                              + ((2 * *(_QWORD *)(v20 + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 33 > 1)
    goto LABEL_15;
  if (*(unsigned __int8 *)(v25 + 16) - 35 <= 0xFFFFFFFD)
    v25 = sub_22F10CF48(v25);
  v41 = sub_22F272660(v25);
  if (!v41)
  {
LABEL_15:
    v26 = 0;
LABEL_16:
    sub_22E8FCA40(a1, v56, 0x1215u, 0, (uint64_t)&v57);
    sub_22E8BAE44((uint64_t)&v57, (uint64_t *)&v54);
    sub_22E903BEC((unsigned int *)&v57);
    sub_22E8FCA40(a1, *(_DWORD *)(v20 + 24), 0x6Du, 0, (uint64_t)v44);
    result = (unint64_t)sub_22E903BEC(v44);
    if ((*(_DWORD *)(v20 + 28) & 0x7Fu) - 39 < 3)
      goto LABEL_20;
    v12 = v56;
    goto LABEL_19;
  }
  v34 = v41;
  v42 = *(_DWORD *)(v41 + 28) & 0x7F;
  v43 = *(_QWORD *)(v20 + 48);
  if (v43)
    v26 = v43 & 0xFFFFFFFFFFFFFFF0;
  else
    v26 = sub_22EF6462C(a1[11], v20);
  result = sub_22EB17F48((uint64_t)a1, (_DWORD *)v20, (unsigned int *)&v56, 1, 0, 0, 0, 0);
  if (v42 != 22)
    goto LABEL_16;
LABEL_34:
  if ((*(_DWORD *)(v20 + 28) & 0x7Fu) - 39 < 3)
    goto LABEL_20;
  v48 = *(uint64_t (***)())(v34 + 40);
  v45 = (void **)__PAIR64__(a6, a3);
  v57 = off_24FAB81F0;
  LODWORD(v58) = 3503;
  v59 = &v48;
  v60 = &v55;
  v61 = &v45;
  result = sub_22EE8B0B0((uint64_t)a1, v56, v26);
  if ((result & 1) == 0)
  {
LABEL_20:
    if (v26 < 0x10)
      return result;
    if (a10)
    {
      v29 = v56;
      v30 = sub_22EE7D030((uint64_t)a1, v26, 0);
      result = sub_22EE7D0A4(a1, a2, v29, v30, a11, a9, a10, a12, 0, 0, 0, 0, 0, 0);
      if (v31)
        return result;
      v26 = result;
      if (!result)
        return result;
      if (result >= 0x10)
      {
        v33 = *(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0);
        if (v33 && *(_BYTE *)(v33 + 16) == 57)
        {
          v32 = *(uint64_t (****)())(v33 + 24);
          if (v32)
            goto LABEL_27;
          v26 = *(_QWORD *)(v33 + 8);
        }
      }
      else
      {
        v26 = 0;
      }
    }
    v32 = (uint64_t (***)())sub_22EF579A8(a1[11], v26, v56);
LABEL_27:
    *(_QWORD *)((a4[15] & 0xFFFFFFFFFFFFFFF8) + 8) = v32;
    v57 = *v32;
    v58 = v32 + 1;
    result = sub_22F1167E8((uint64_t *)&v57);
    *(_DWORD *)((a4[15] & 0xFFFFFFFFFFFFFFF8) + 80) = result;
  }
  return result;
}

uint64_t sub_22EAF43B8(uint64_t a1, uint64_t a2, unsigned __int8 a3, int a4, __int16 a5, uint64_t a6, int a7, int a8, unint64_t a9)
{
  __int16 v10;
  unint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  unint64_t v30;
  size_t v31;
  unsigned __int32 v32;
  _QWORD *v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  __int16 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  unint64_t v66;
  unsigned __int8 v67;
  unsigned int v69;
  int v70;
  unint64_t v71;
  std::string v72;
  unint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  void *__p;
  uint64_t v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  int64x2_t v85;
  _QWORD v86[11];

  v10 = a5;
  v14 = a9;
  v86[9] = *MEMORY[0x24BDAC8D0];
  v83 = a6;
  if (!a9)
    goto LABEL_99;
  if (a9 >= 0x10)
  {
    v15 = 0;
    v16 = *(_QWORD *)(a9 & 0xFFFFFFFFFFFFFFF0);
    if (v16 && *(_BYTE *)(v16 + 16) == 57)
    {
      v14 = *(_QWORD *)(v16 + 8);
      v15 = *(unint64_t **)(v16 + 24);
    }
  }
  else
  {
    v15 = 0;
    v14 = 0;
  }
  v82 = v14;
  v17 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                           + 16);
  if (v17 == 32)
  {
    v70 = a8;
    if (v15)
      goto LABEL_44;
    goto LABEL_99;
  }
  if ((v17 - 33) > 1)
  {
    v22 = *v15;
    v23 = *v15;
    while (1)
    {
      if ((v23 & 0xF) != 0)
        goto LABEL_34;
      v24 = *(unsigned __int8 *)(*(_QWORD *)(v23 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v24 > 0x39)
      {
LABEL_29:
        if (sub_22F115668(v23))
          v22 = v23;
        v23 = sub_22F115B7C(v23);
        if (!v23)
          goto LABEL_98;
      }
      else
      {
        if (v24 == 24)
          goto LABEL_97;
        if (v24 == 26)
        {
          if ((*(_BYTE *)(v23 + 23) & 0x10) != 0)
          {
LABEL_97:
            v22 = v23;
LABEL_98:
            v55 = sub_22F115668(v22);
            sub_22E8FCA40((_QWORD *)a1, v55, 0x102Eu, 0, (uint64_t)&v84);
            v56 = sub_22E8901B8((uint64_t)&v84, (uint64_t *)&v82);
            sub_22E8BAE44(v56, &v83);
            sub_22E903BEC((unsigned int *)&v84);
            v10 = a5;
LABEL_99:
            v57 = *(_QWORD *)(a1 + 88);
            v58 = sub_22F36E1B8(v57);
            v59 = *(_QWORD *)(v58 + 48);
            if (v59)
              v60 = v59 & 0xFFFFFFFFFFFFFFF0;
            else
              v60 = sub_22EF6462C(v57, v58);
            v15 = sub_22EF579A8(v57, v60, 0);
            v54 = 0;
            return sub_22F3B5928(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), a3, a4, v10, a7, v83, v54, (uint64_t)v15);
          }
        }
        else if (((1 << v24) & 0x20000000200003CLL) == 0)
        {
          goto LABEL_29;
        }
LABEL_34:
        v23 = sub_22F115B7C(v23);
      }
    }
  }
  v70 = a8;
  v84 = (_QWORD *)*v15;
  v85.i64[0] = (uint64_t)(v15 + 1);
  v18 = sub_22F1167E8((uint64_t *)&v84);
  v65 = sub_22F141A3C(v18, 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
  v19 = *v15;
  for (i = *v15; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_22;
      v21 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v21 <= 0x39)
        break;
LABEL_17:
      if (sub_22F115668(i))
        v19 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_36;
    }
    if (v21 == 24)
      goto LABEL_35;
    if (v21 == 26)
      break;
    if (((1 << v21) & 0x20000000200003CLL) == 0)
      goto LABEL_17;
LABEL_22:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_22;
LABEL_35:
  v19 = i;
LABEL_36:
  v25 = sub_22F115668(v19);
  sub_22E8FCA40((_QWORD *)a1, v25, 0x102Du, 0, (uint64_t)&v84);
  v26 = sub_22E8901B8((uint64_t)&v84, (uint64_t *)&v82);
  v27 = sub_22E8BAE44(v26, &v83);
  v77 = 0;
  v76 = 0;
  v79 = 0;
  v80 = 0x200000000000000;
  v74 = v65 | ((unint64_t)v65 << 32);
  v75 = 0;
  __p = (void *)10784;
  v81 = 0;
  sub_22E890748(v27, &v74);
  if (SHIBYTE(v80) < 0)
    operator delete(__p);
  sub_22E903BEC((unsigned int *)&v84);
  v84 = v86;
  v85 = vdupq_n_s64(0x20uLL);
  v86[4] = 0;
  sub_22EEB4368((uint64_t)&v84, *v15, (uint64_t)(v15 + 1));
  v82 = sub_22F36CC4C(*(_QWORD *)(a1 + 88), v82);
  sub_22EEB5360((uint64_t)&v84, v82, 4uLL, 4);
  *v28 = v65;
  v29 = *(_QWORD *)(a1 + 88);
  v30 = v82;
  v31 = v85.i64[0] - v85.i64[1];
  v32 = v85.i32[0] - v85.i32[2];
  if (v85.i32[0] == v85.i32[2])
    v32 = sub_22F11598C(v82);
  v15 = (unint64_t *)sub_22E3CD3D4(v29 + 2032, v32 + 8, 3);
  *v15 = v30;
  v33 = v84;
  memcpy(v15 + 1, (char *)v84 + v85.i64[1], v31);
  if (v33 != v86 && v33)
    MEMORY[0x2348A0E84](v33, 0x1000C8077774924);
  v10 = a5;
LABEL_44:
  v73 = *v15;
  v84 = (_QWORD *)*v15;
  v85.i64[0] = (uint64_t)(v15 + 1);
  v34 = sub_22F116A3C((unint64_t *)&v84);
  if (v34)
  {
    v37 = v34;
    v67 = a3;
    if ((v34 & 0xF) != 0 || *(_BYTE *)(*(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF0) + 16) != 7)
    {
      LODWORD(v38) = 0;
      v66 = 0;
LABEL_54:
      v69 = v38;
      v39 = v10;
      goto LABEL_55;
    }
    if (*(_QWORD *)v35)
      v38 = *(_QWORD *)(*(_QWORD *)v35 + 16);
    else
      v38 = 0;
    if (((*(_DWORD *)(v34 + 16) >> 19) - 37) < 0xFFFFFFFC)
    {
      v66 = v38 & 0xFFFFFFFF00000000;
      goto LABEL_54;
    }
    v42 = v34;
    while (1)
    {
      if ((v42 & 0xF) != 0)
        goto LABEL_81;
      v43 = *(unsigned __int8 *)(*(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v43 > 0x39)
      {
LABEL_76:
        if (sub_22F115668(v42))
          v37 = v42;
        v42 = sub_22F115B7C(v42);
        if (!v42)
          goto LABEL_105;
      }
      else
      {
        if (v43 == 24)
          goto LABEL_104;
        if (v43 == 26)
        {
          if ((*(_BYTE *)(v42 + 23) & 0x10) != 0)
          {
LABEL_104:
            v37 = v42;
LABEL_105:
            v62 = sub_22F115668(v37);
            sub_22E8FCA40((_QWORD *)a1, v62, 0x102Bu, 0, (uint64_t)&v84);
            v63 = sub_22E8BAE44((uint64_t)&v84, &v83);
            v64 = sub_22E8901B8(v63, (uint64_t *)&v73);
            v77 = 0;
            v76 = 0;
            v79 = 0;
            v80 = 0;
            __p = 0;
            v81 = 0;
            v74 = v38;
            v75 = 1;
            sub_22E890748(v64, &v74);
            if (SHIBYTE(v80) < 0)
              operator delete(__p);
            sub_22E903BEC((unsigned int *)&v84);
            v36 = v70;
            goto LABEL_91;
          }
        }
        else if (((1 << v43) & 0x20000000200003CLL) == 0)
        {
          goto LABEL_76;
        }
LABEL_81:
        v42 = sub_22F115B7C(v42);
      }
    }
  }
  if ((v73 & 0xF) == 0 && (*(_BYTE *)((v73 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xF) == 0)
  {
    v36 = v70;
    goto LABEL_96;
  }
  v67 = a3;
  v39 = v10;
  v66 = 0;
  v69 = 0;
  v37 = *v15;
LABEL_55:
  v40 = v37;
  while (2)
  {
    while (2)
    {
      if ((v40 & 0xF) != 0)
        goto LABEL_66;
      v41 = *(unsigned __int8 *)(*(_QWORD *)(v40 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v41 > 0x39)
      {
LABEL_61:
        if (sub_22F115668(v40))
          v37 = v40;
        v40 = sub_22F115B7C(v40);
        if (!v40)
          goto LABEL_83;
        continue;
      }
      break;
    }
    if (v41 == 24)
      break;
    if (v41 != 26)
    {
      if (((1 << v41) & 0x20000000200003CLL) != 0)
        goto LABEL_66;
      goto LABEL_61;
    }
    if ((*(_BYTE *)(v40 + 23) & 0x10) == 0)
    {
LABEL_66:
      v40 = sub_22F115B7C(v40);
      continue;
    }
    break;
  }
  v37 = v40;
LABEL_83:
  v44 = sub_22F115668(v37);
  sub_22E8FCA40((_QWORD *)a1, v44, 0x102Fu, 0, (uint64_t)&v84);
  v45 = sub_22E8BAE44((uint64_t)&v84, &v83);
  v46 = sub_22E8901B8(v45, (uint64_t *)&v73);
  v47 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v47 & 8) != 0)
  {
    v49 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFF0) + 0x18);
    v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
  }
  else
  {
    v48 = 0;
    v49 = 0;
  }
  v10 = v39;
  v36 = v70;
  v71 = v48 | v49 | (v47 | v73) & 7;
  sub_22F40B554(&v71, &v72);
  v50 = sub_22F2F3734(v46, (void **)&v72.__r_.__value_.__l.__data_);
  v77 = 0;
  v76 = 0;
  v79 = 0;
  v80 = 0;
  __p = 0;
  v81 = 0;
  v74 = v69 | v66;
  v75 = 1;
  sub_22E890748(v50, &v74);
  a3 = v67;
  if (SHIBYTE(v80) < 0)
    operator delete(__p);
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v72.__r_.__value_.__l.__data_);
  sub_22E903BEC((unsigned int *)&v84);
LABEL_91:
  v51 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v51 & 8) != 0 && (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xCFFFFFFF8) != 0)
  {
    v52 = *(_QWORD *)(a1 + 88);
    v53 = *(_QWORD *)(v73 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v53 + 8) & 0xF) != 0)
      v53 = (unint64_t)sub_22F10D2BC(v73);
    v15 = sub_22EF579A8(v52, v53 & 0xFFFFFFFFFFFFFFF0, 0);
  }
LABEL_96:
  v54 = v36;
  return sub_22F3B5928(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), a3, a4, v10, a7, v83, v54, (uint64_t)v15);
}

_DWORD *sub_22EAF4C60(_QWORD *a1, uint64_t *a2, int a3, unint64_t *a4, uint64_t a5, int a6)
{
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int v34[24];
  uint64_t v35;
  llvm *v36;
  unsigned int v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v35 = 1;
  for (i = 8; i != 72; i += 16)
    *(uint64_t *)((char *)&v35 + i) = -4096;
  v11 = 8 * a5;
  if (a5)
  {
    v12 = 8 * a5;
    v13 = a4;
    do
    {
      v14 = *v13;
      v15 = *(_QWORD *)(*v13 + 40);
      if ((v15 & 7) != 0)
        v16 = 0;
      else
        v16 = v15 & 0xFFFFFFFFFFFFFFF8;
      v17 = sub_22F2E5664((uint64_t)&v35, v16);
      if ((v35 & 1) != 0)
        v18 = (char *)&v36;
      else
        v18 = (char *)v36;
      v19 = v37;
      if ((v35 & 1) != 0)
        v19 = 4;
      if (&v18[16 * v19] == (char *)v17)
      {
        v24 = *(_QWORD *)(v14 + 40);
        if ((v24 & 7) != 0)
          v25 = 0;
        else
          v25 = v24 & 0xFFFFFFFFFFFFFFF8;
        v31 = v25;
        v32 = v14;
        sub_22F289088((uint64_t)v34, (uint64_t)&v35, (uint64_t *)&v31, &v32);
        sub_22EA0483C((uint64_t)a1, v14, a2, 0);
      }
      else
      {
        v20 = v17;
        sub_22E8FCA40(a1, *(_DWORD *)(v14 + 24), 0x1030u, 0, (uint64_t)v34);
        v21 = *(_QWORD *)(v14 + 40);
        if ((v21 & 7) != 0)
          v22 = 0;
        else
          v22 = v21 & 0xFFFFFFFFFFFFFFF8;
        v31 = v22;
        v23 = sub_22E8BAE44((uint64_t)v34, (uint64_t *)&v31);
        LODWORD(v33) = *(_DWORD *)(*(_QWORD *)(v20 + 8) + 24);
        HIDWORD(v33) = v33;
        sub_22E8906A0(v23, &v33);
        sub_22E903BEC(v34);
        sub_22EFC77E8(v14, 1);
      }
      ++v13;
      v12 -= 8;
    }
    while (v12);
  }
  v26 = (_DWORD *)sub_22E3CD3D4(a1[11] + 2032, v11 + 16, 3);
  v27 = v26;
  *v26 = a3;
  v26[1] = a6;
  v26[2] = a5;
  if (a5)
    memmove(v26 + 4, a4, 8 * a5);
  if ((v35 & 1) == 0)
    llvm::deallocate_buffer(v36, (void *)(16 * v37));
  return v27;
}

uint64_t sub_22EAF4E7C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void **v5;
  llvm::SmallPtrSetImplBase *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v3)
  {
    v5 = (void **)(a3 + 16);
    v6 = (llvm::SmallPtrSetImplBase *)(a2 + 72);
    v7 = result + 3320;
    v8 = 8 * v3;
    do
    {
      v9 = *v5;
      if ((*((_BYTE *)*v5 + 28) & 0x80) == 0)
      {
        v10 = sub_22E3BA914(v6, *v5);
        v11 = *(_QWORD *)(a2 + 80);
        if (v11 == *(_QWORD *)(a2 + 72))
          v12 = 92;
        else
          v12 = 88;
        if (v10 != (void **)(v11 + 8 * *(unsigned int *)(a2 + v12)))
        {
          *v10 = (void *)-2;
          ++*(_DWORD *)(a2 + 96);
        }
        result = sub_22E8CEA58(v7, (uint64_t)v9);
      }
      ++v5;
      v8 -= 8;
    }
    while (v8);
  }
  return result;
}

BOOL sub_22EAF4F38(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  __int16 v19;
  __int16 v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  unsigned int v28;
  const char *v29;
  size_t v30;
  unsigned int v31;
  __int128 *v32;
  size_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  std::string *v47;
  const char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 *p_dst;
  size_t v53;
  uint64_t v54;
  uint64_t i;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  __int128 *v70;
  size_t v71;
  __int128 *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  __int128 __dst;
  const char *v93;
  __int16 v94;
  __int128 v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  uint64_t v99;
  char v100;
  __int128 __p;
  const char *v102;
  char v103;
  _BYTE v104[25];
  _BYTE v105[56];
  uint64_t v106;

  v4 = a4;
  v7 = a1;
  v8 = *(unsigned int *)(a2 + 8);
  v9 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v8 != (_DWORD)v9)
  {
    v10 = a3 + 16;
    if (v9 <= v8)
    {
      v75 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v10 + 8 * v9 - 8) + 16))(*(_QWORD *)(v10 + 8 * v9 - 8));
      v11 = sub_22F141A3C(HIDWORD(v75), 0, (_QWORD *)v7[14], (_DWORD *)v7[9]);
    }
    else
    {
      v11 = *(_DWORD *)(*(_QWORD *)(v10 + 8 * v8) + 24);
    }
    sub_22E8FCA40(v7, v11, 0x1029u, 0, (uint64_t)v104);
    LODWORD(v97) = v4;
    v76 = sub_22E89519C((uint64_t)v104, (unsigned int *)&v97);
    LOBYTE(v91) = *(_DWORD *)(a3 + 8) > *(_DWORD *)(a2 + 8);
    v77 = sub_22E894E38(v76, (unsigned __int8 *)&v91);
    LODWORD(__dst) = *(_DWORD *)(a2 + 8);
    v78 = sub_22E89519C(v77, (unsigned int *)&__dst);
    LODWORD(v95) = *(_DWORD *)(a3 + 8);
    sub_22E89519C(v78, (unsigned int *)&v95);
    sub_22E903BEC((unsigned int *)v104);
    return (_DWORD)v8 != (_DWORD)v9;
  }
  if (!(_DWORD)v8)
    return (_DWORD)v8 != (_DWORD)v9;
  v12 = 0;
  v13 = a2 + 16;
  v14 = a3 + 16;
  v84 = a2 + 16;
  v80 = a4 == 0;
  do
  {
    v15 = *(_QWORD *)(v13 + 8 * v12);
    v16 = *(_QWORD *)(v14 + 8 * v12);
    v17 = *(unsigned __int16 *)(v16 + 88);
    v18 = *(unsigned __int16 *)(v15 + 88);
    if (v17 >> 14 != v18 >> 14)
    {
      if (v4 != 1 && !(v17 >> 14))
      {
        v19 = v18 & 0xC000;
        v20 = v17 & 0x3FFF;
LABEL_47:
        *(_WORD *)(v16 + 88) = v19 | v20;
        goto LABEL_48;
      }
      if (!(v18 >> 14))
      {
        v35 = *(_QWORD *)(v15 + 16);
        v36 = v35 & 0xFFFFFFFFFFFFFFF8;
        if ((v35 & 4) != 0)
          v36 = *(_QWORD *)v36;
        if ((*(_WORD *)(v36 + 8) & 0x7F) != 0x16)
          goto LABEL_48;
        v37 = *(_QWORD *)(v36 + 72);
        if (!v37)
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v36 + 48) + 88), *(_QWORD *)(v36 + 48));
          v13 = v84;
          v37 = *(_QWORD *)(v36 + 72);
        }
        if (v37 < 8)
          v38 = 0;
        else
          v38 = *(_QWORD *)(v37 & 0xFFFFFFFFFFFFFFF8);
        if (v38)
          v57 = (_QWORD *)(v38 + 48);
        else
          v57 = 0;
        v58 = *(_QWORD *)(v15 + 16);
        v59 = (_QWORD *)(v58 & 0xFFFFFFFFFFFFFFF8);
        if ((v58 & 4) != 0)
          v59 = (_QWORD *)*v59;
        if (v57 != v59)
          goto LABEL_48;
      }
      v21 = *(_DWORD *)(v16 + 92);
      if (!v21)
        v21 = *(_DWORD *)(v16 + 56);
      sub_22E8FCA40(v7, v21, 0x1031u, 0, (uint64_t)&v97);
      LODWORD(v91) = *(unsigned __int16 *)(v16 + 88) >> 14;
      v22 = sub_22E89519C((uint64_t)&v97, (unsigned int *)&v91);
      *(_QWORD *)&__dst = *(_QWORD *)(v16 + 40);
      v23 = sub_22E894538(v22, (uint64_t *)&__dst);
      LODWORD(v90) = *(unsigned __int16 *)(v15 + 88) >> 14;
      v24 = sub_22E89519C(v23, (unsigned int *)&v90);
      *(_QWORD *)&v95 = *(_QWORD *)(v15 + 40);
      v25 = sub_22E894538(v24, (uint64_t *)&v95);
      v26 = v25;
      v27 = *(_OWORD *)(v25 + 9);
      *(_OWORD *)v104 = *(_OWORD *)v25;
      *(_OWORD *)&v104[9] = v27;
      v105[0] = 0;
      v105[48] = 0;
      if (*(_BYTE *)(v25 + 80))
        sub_22E907424((uint64_t)v105, v25 + 32);
      v106 = *(_QWORD *)(v26 + 88);
      sub_22E903BEC((unsigned int *)&v97);
      v28 = *(unsigned __int16 *)(v15 + 88);
      if ((v28 >> 14) - 1 >= 2)
      {
        if (v28 >> 14)
          goto LABEL_46;
        v39 = *(unsigned int *)(v16 + 92);
        v99 = 0;
        v100 = 0;
        v102 = 0;
        __p = 0uLL;
        v103 = 0;
        v97 = v39 | (v39 << 32);
        v98 = 1;
      }
      else
      {
        if ((v28 & 0xC000) == 0x4000)
          v29 = "__covariant";
        else
          v29 = "__contravariant";
        if ((v28 & 0xC000) == 0x4000)
          v30 = 11;
        else
          v30 = 15;
        if ((*(_WORD *)(v16 + 88) & 0xC000) == 0)
        {
          v31 = *(_DWORD *)(v16 + 56);
          v94 = 773;
          *(_QWORD *)&__dst = v29;
          *((_QWORD *)&__dst + 1) = v30;
          v93 = " ";
          llvm::Twine::str((llvm::Twine *)&__dst);
          if (v96 >= 0)
            v32 = &v95;
          else
            v32 = (__int128 *)v95;
          if (v96 >= 0)
            v33 = HIBYTE(v96) & 0x7F;
          else
            v33 = *((_QWORD *)&v95 + 1);
          sub_22E729148(v32, v33, v31, 0, (uint64_t)&v97);
          sub_22E890748((uint64_t)v104, &v97);
          if (SHIBYTE(v102) < 0)
            operator delete((void *)__p);
          v7 = a1;
          if ((SHIBYTE(v96) & 0x80000000) == 0)
            goto LABEL_46;
          v34 = (void *)v95;
          goto LABEL_45;
        }
        v40 = *(unsigned int *)(v16 + 92);
        v99 = 0;
        v100 = 0;
        v97 = v40 | (v40 << 32);
        v98 = 1;
        HIBYTE(v93) = v30;
        memcpy(&__dst, v29, v30);
        *((_BYTE *)&__dst + v30) = 0;
        v103 = 0;
        __p = __dst;
        v102 = v93;
      }
      sub_22E890748((uint64_t)v104, &v97);
      if (SHIBYTE(v102) < 0)
      {
        v34 = (void *)__p;
LABEL_45:
        operator delete(v34);
      }
LABEL_46:
      sub_22E903BEC((unsigned int *)v104);
      sub_22E8FCA40(v7, *(_DWORD *)(v15 + 24), 0x16F3u, 0, (uint64_t)v104);
      v97 = *(_QWORD *)(v15 + 40);
      sub_22E894538((uint64_t)v104, (uint64_t *)&v97);
      sub_22E903BEC((unsigned int *)v104);
      v20 = *(_WORD *)(v15 + 88) & 0xC000;
      v19 = *(_WORD *)(v16 + 88) & 0x3FFF;
      v13 = v84;
      goto LABEL_47;
    }
LABEL_48:
    v41 = *(_QWORD *)((*(_QWORD *)(v15 + 80) & 0xFFFFFFFFFFFFFFF8) + ((2 * *(_QWORD *)(v15 + 80)) & 8));
    v42 = *(_QWORD *)(v16 + 80);
    v43 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFF8);
    v44 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFFF8) + ((2 * (int)v42) & 8));
    if ((*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFFF0) + 8) | v41 & 7) == (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFFF0) + 8) | v44 & 7))
      goto LABEL_49;
    if (!*(_DWORD *)(v16 + 96))
    {
      if (v4 <= 1)
      {
        v45 = sub_22F141A3C(*(unsigned int *)(v16 + 24), 0, (_QWORD *)v7[14], (_DWORD *)v7[9]);
        v97 = *(_QWORD *)((*(_QWORD *)(v15 + 80) & 0xFFFFFFFFFFFFFFF8)
                        + ((2 * *(_QWORD *)(v15 + 80)) & 8));
        v46 = v7[11] + 15104;
        memset(v104, 0, 24);
        sub_22F119374((uint64_t *)&v97, (__int128 *)v104, v46);
        v47 = std::string::insert((std::string *)v104, 0, " : ");
        v48 = (const char *)v47->__r_.__value_.__r.__words[2];
        __dst = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
        v93 = v48;
        v47->__r_.__value_.__l.__size_ = 0;
        v47->__r_.__value_.__r.__words[2] = 0;
        v47->__r_.__value_.__r.__words[0] = 0;
        if ((v104[23] & 0x80000000) != 0)
          operator delete(*(void **)v104);
        sub_22E8FCA40(v7, *(_DWORD *)(v16 + 24), 0x102Cu, 0, (uint64_t)v104);
        *(_QWORD *)&v95 = *(_QWORD *)((*(_QWORD *)(v15 + 80) & 0xFFFFFFFFFFFFFFF8)
                                    + ((2 * *(_QWORD *)(v15 + 80)) & 8));
        v49 = sub_22E8901B8((uint64_t)v104, (uint64_t *)&v95);
        v91 = *(_QWORD *)(v16 + 40);
        v50 = sub_22E894538(v49, &v91);
        LOBYTE(v90) = v80;
        v51 = sub_22E894E38(v50, (unsigned __int8 *)&v90);
        if (SHIBYTE(v93) >= 0)
          p_dst = &__dst;
        else
          p_dst = (__int128 *)__dst;
        if (SHIBYTE(v93) >= 0)
          v53 = HIBYTE(v93) & 0x7F;
        else
          v53 = *((_QWORD *)&__dst + 1);
        sub_22E729148(p_dst, v53, v45, 0, (uint64_t)&v97);
        sub_22E890748(v51, &v97);
        if (SHIBYTE(v102) < 0)
          operator delete((void *)__p);
        sub_22E903BEC((unsigned int *)v104);
        sub_22E8FCA40(v7, *(_DWORD *)(v15 + 24), 0x16F3u, 0, (uint64_t)v104);
        v97 = *(_QWORD *)(v15 + 40);
        sub_22E894538((uint64_t)v104, (uint64_t *)&v97);
        sub_22E903BEC((unsigned int *)v104);
        if (SHIBYTE(v93) < 0)
          operator delete((void *)__dst);
      }
      goto LABEL_107;
    }
    v81 = v4;
    v82 = v9;
    if ((v42 & 4) != 0)
      v43 = (uint64_t *)*v43;
    v54 = *v43;
    *(_QWORD *)v104 = v54;
    *(_QWORD *)&v104[8] = v43 + 1;
    for (i = v54; ; i = sub_22F115B7C(i))
    {
      while (1)
      {
        if ((i & 0xF) != 0)
          goto LABEL_78;
        v56 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v56 <= 0x39)
          break;
LABEL_73:
        if (sub_22F115668(i))
          v54 = i;
        i = sub_22F115B7C(i);
        if (!i)
          goto LABEL_88;
      }
      if (v56 == 24)
        goto LABEL_87;
      if (v56 == 26)
        break;
      if (((1 << v56) & 0x20000000200003CLL) == 0)
        goto LABEL_73;
LABEL_78:
      ;
    }
    if ((*(_BYTE *)(i + 23) & 0x10) == 0)
      goto LABEL_78;
LABEL_87:
    v54 = i;
LABEL_88:
    v60 = sub_22F115668(v54);
    v61 = sub_22F1167E8((uint64_t *)v104);
    sub_22E8FCA40(a1, v60, 0x102Au, 0, (uint64_t)v104);
    v91 = *(_QWORD *)((*(_QWORD *)(v16 + 80) & 0xFFFFFFFFFFFFFFF8) + ((2 * *(_QWORD *)(v16 + 80)) & 8));
    v62 = sub_22E8901B8((uint64_t)v104, &v91);
    v90 = *(_QWORD *)(v16 + 40);
    v63 = sub_22E894538(v62, &v90);
    v89 = *(_DWORD *)(v15 + 96) != 0;
    v64 = sub_22E894E38(v63, (unsigned __int8 *)&v89);
    v88 = *(_QWORD *)((*(_QWORD *)(v15 + 80) & 0xFFFFFFFFFFFFFFF8) + ((2 * *(_QWORD *)(v15 + 80)) & 8));
    v65 = sub_22E8901B8(v64, &v88);
    v87 = *(_QWORD *)(v16 + 40) == *(_QWORD *)(v15 + 40);
    v66 = sub_22E894E38(v65, (unsigned __int8 *)&v87);
    v86 = *(_QWORD *)(v15 + 40);
    v67 = sub_22E894538(v66, &v86);
    v68 = v60 | ((unint64_t)v61 << 32);
    v85 = *(_QWORD *)((*(_QWORD *)(v15 + 80) & 0xFFFFFFFFFFFFFFF8) + ((2 * *(_QWORD *)(v15 + 80)) & 8));
    v69 = a1[11] + 15104;
    v96 = 0;
    v95 = 0uLL;
    sub_22F119374(&v85, &v95, v69);
    if (v96 >= 0)
      v70 = &v95;
    else
      v70 = (__int128 *)v95;
    if (v96 >= 0)
      v71 = HIBYTE(v96) & 0x7F;
    else
      v71 = *((_QWORD *)&v95 + 1);
    v99 = 0;
    v100 = 0;
    v102 = 0;
    __p = 0uLL;
    v103 = 0;
    v97 = v68;
    v98 = 1;
    if (v71 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    if (v71 >= 0x17)
    {
      v73 = (v71 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v71 | 7) != 0x17)
        v73 = v71 | 7;
      v74 = v73 + 1;
      v72 = (__int128 *)operator new(v73 + 1);
      *((_QWORD *)&__dst + 1) = v71;
      v93 = (const char *)(v74 | 0x8000000000000000);
      *(_QWORD *)&__dst = v72;
LABEL_101:
      memmove(v72, v70, v71);
      goto LABEL_102;
    }
    HIBYTE(v93) = v71;
    v72 = &__dst;
    if (v71)
      goto LABEL_101;
LABEL_102:
    *((_BYTE *)v72 + v71) = 0;
    __p = __dst;
    v102 = v93;
    sub_22E890748(v67, &v97);
    if (SHIBYTE(v102) < 0)
      operator delete((void *)__p);
    v9 = v82;
    v7 = a1;
    v4 = v81;
    if (SHIBYTE(v96) < 0)
      operator delete((void *)v95);
    sub_22E903BEC((unsigned int *)v104);
    sub_22E8FCA40(a1, *(_DWORD *)(v15 + 24), 0x16F3u, 0, (uint64_t)v104);
    v97 = *(_QWORD *)(v15 + 40);
    sub_22E894538((uint64_t)v104, (uint64_t *)&v97);
    sub_22E903BEC((unsigned int *)v104);
LABEL_107:
    sub_22F36D01C(v7[11], v15, v16);
    v13 = v84;
LABEL_49:
    ++v12;
  }
  while (v12 != v8);
  return (_DWORD)v8 != (_DWORD)v9;
}

uint64_t sub_22EAF58D4(uint64_t a1, uint64_t a2, _DWORD **a3, unsigned int a4, unsigned int *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t result;

  v8 = *(_QWORD *)(a1 + 216);
  v9 = *(_QWORD *)(a1 + 3200);
  v10 = a2 + 48;
  if (!a2)
    v10 = 0;
  *(_QWORD *)(a1 + 3200) = 0;
  v11 = *(_QWORD *)(a1 + 10288);
  v12 = *(_DWORD *)(a1 + 1944);
  v13 = *(_DWORD *)(a1 + 2192);
  *(_QWORD *)(a1 + 216) = v10;
  *(_QWORD *)(a1 + 10288) = 0;
  *(_DWORD *)(a1 + 1944) = *(_DWORD *)(a1 + 1904);
  *(_DWORD *)(a1 + 2192) = *(_DWORD *)(a1 + 1960);
  v14 = a4;
  do
  {
    v15 = *a3++;
    result = sub_22EB17F48(a1, v15, a5++, 1, 0, 0, 1, 0);
    --v14;
  }
  while (v14);
  if (v8)
  {
    *(_QWORD *)(a1 + 216) = v8;
    *(_QWORD *)(a1 + 3200) = v9;
    *(_QWORD *)(a1 + 10288) = v11;
    *(_DWORD *)(a1 + 1944) = v12;
    *(_DWORD *)(a1 + 2192) = v13;
  }
  return result;
}

uint64_t sub_22EAF59A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8;
  unint64_t v9;
  char *v10;

  if (a4)
  {
    result = sub_22EC65CE0((_QWORD *)result, *(_QWORD *)(result + 3344), a4, a5, 0, 0);
    if (result)
    {
      if ((*(_DWORD *)(result + 28) & 0x7Fu) - 42 >= 0xFFFFFFFD)
      {
        result = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(result + 80) & 0xFFFFFFFFFFFFFFF8)
                                       + ((2 * *(_QWORD *)(result + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0);
        if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 33 <= 1)
        {
          result = sub_22E4EBB74(result);
          if (result)
          {
            v8 = result;
            v9 = *(_QWORD *)(result + 16);
            v10 = (char *)(result + 8 * ((v9 >> 19) & 0x7F) + 48);
            sub_22F246808(a2, v10, &v10[8 * (v9 >> 26)]);
            return sub_22F32B57C(a3, *(_QWORD *)(v8 + 16) >> 26, a5);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EAF5A84(_QWORD *a1, int a2, uint64_t a3, int a4, void *a5, unsigned int a6, unsigned int *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  unsigned int v32[24];
  void *v33;
  unsigned int v34;
  uint64_t v35;
  int v36[3];

  v36[0] = a4;
  v35 = a3;
  v16 = a1[27];
  v17 = *(_WORD *)(v16 + 8) & 0x7F;
  v18 = -40;
  if (v17 > 0x46)
  {
    if (v17 == 83)
      goto LABEL_17;
    if (v17 == 71)
    {
      v18 = -56;
      goto LABEL_17;
    }
    if (v17 != 81)
    {
LABEL_12:
      if (v17 - 52 < 6)
      {
        v18 = -72;
      }
      else
      {
        v18 = -48;
        if (v17 - 33 < 5)
          v18 = -64;
      }
    }
  }
  else
  {
    if (v17 > 0x18)
      goto LABEL_11;
    if (v17 == 16)
    {
LABEL_4:
      v18 = -48;
      goto LABEL_17;
    }
    if (((1 << v17) & 0x1066) == 0)
    {
      if (v17 == 24)
        goto LABEL_4;
LABEL_11:
      if (v17 == 70)
      {
        v18 = -64;
        goto LABEL_17;
      }
      goto LABEL_12;
    }
  }
LABEL_17:
  if (sub_22EFB9D84(v16 + v18))
    v19 = 1;
  else
    v19 = 2;
  v20 = a4;
  v21 = sub_22EC65CE0(a1, a1[418], a3, a4, 11, v19);
  v22 = v21;
  if (!v21)
  {
    v23 = 0;
LABEL_29:
    v27 = sub_22F3B6240(a1[11], a1[27], a3, v20, a2, v22);
LABEL_30:
    sub_22EA0483C((uint64_t)a1, v27, (uint64_t *)a1[418], 1);
    v28 = v23;
    goto LABEL_31;
  }
  v24 = *(_QWORD *)(v21 + 104);
  if (!v24)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v21 + 96) + 88), *(_QWORD *)(v21 + 96));
    v24 = *(_QWORD *)(v22 + 104);
  }
  if (v24 < 8 || (v25 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF8)) == 0)
  {
    v34 = 0;
    v26 = a1[11];
    v33 = 0;
    if (a6)
    {
      v33 = (void *)sub_22E3CD3D4(v26 + 2032, 8 * a6, 3);
      v34 = a6;
      memcpy(v33, a5, 8 * a6);
    }
    v23 = sub_22F32B898(a1, a3, v36, *(_DWORD *)(v22 + 24), (uint64_t *)&v33);
    goto LABEL_29;
  }
  sub_22E8FCA40(a1, v20, 0x1980u, 0, (uint64_t)&v33);
  sub_22E8BAE44((uint64_t)&v33, &v35);
  sub_22E903BEC((unsigned int *)&v33);
  sub_22E8FCA40(a1, *(_DWORD *)(v25 + 24), 0x6Du, 0, (uint64_t)v32);
  sub_22E903BEC(v32);
  v27 = sub_22F3B6240(a1[11], a1[27], v35, v20, a2, 0);
  v23 = 0;
  v28 = 0;
  if ((*(_QWORD *)(a1[9] + 20) & 0x200000000000) != 0)
    goto LABEL_30;
LABEL_31:
  sub_22F3B6398(v27);
  sub_22EA63DD8(a1, a1[418], v27, a9, 1);
  sub_22E91049C((uint64_t)a1, a1[418], v27);
  sub_22E9114FC(a1, v27);
  if (v22)
    sub_22EA084D0((uint64_t)a1, v27, (_BYTE *)v22, 1);
  if (a6)
    v29 = v28;
  else
    v29 = 1;
  if ((v29 & 1) == 0)
  {
    sub_22EAF58D4((uint64_t)a1, v27, (_DWORD **)a5, a6, a7);
    sub_22F3B45C4((_QWORD *)((*(_QWORD *)(v27 + 104) & 0xFFFFFFFFFFFFFFF8) + 8), a5, a6, a7, a1[11]);
  }
  sub_22F32B4DC(a1, v27);
  v30 = v27 + 48;
  if (!v27)
    v30 = 0;
  a1[27] = v30;
  return v27;
}

void sub_22EAF5DCC(_QWORD *a1, int a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  _BYTE *v11;
  uint64_t v12;
  unsigned int *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  uint64_t v24;
  _BYTE *v25;
  void **v26;
  unint64_t v27;
  int v28;
  uint64_t (**v29)();
  _BYTE v30[24];
  unsigned int v31[4];
  void *v32;
  uint64_t v33;
  _QWORD v34[6];

  v34[4] = *MEMORY[0x24BDAC8D0];
  if (a5)
  {
    v7 = a4;
    v11 = v30;
    v12 = 16 * a5;
    v13 = (unsigned int *)(a4 + 8);
    do
    {
      v14 = sub_22EC65CE0(a1, a1[418], *(_QWORD *)v7, *(_DWORD *)(v7 + 8), 11, 0);
      if (v14)
        goto LABEL_4;
      v11[4] = 1;
      *(_DWORD *)v11 = 16843009;
      memset(&v30[5], 0, 19);
      v29 = &off_24FAB8180;
      v19 = *(_DWORD *)(v7 + 8);
      v26 = *(void ***)v7;
      LODWORD(v27) = v19;
      sub_22EFC6D6C((uint64_t)&v28, (uint64_t)v26);
      sub_22EC6AB20((uint64_t)a1, (uint64_t *)&v26, 11, (uint64_t *)a1[418], 0, (uint64_t)&v29, 1, 0, (uint64_t)v31, 0, 0, 1u);
      v20 = sub_22F2E6D78((uint64_t)v31);
      v14 = v20;
      if (v20)
      {
        if ((*(_DWORD *)(v20 + 28) & 0x7F) == 0x17)
        {
          v25 = v11;
          v21 = a1[11] + 2128;
          v26 = 0;
          v27 = v21;
          v28 = 5046;
          v22 = *(_QWORD *)v7;
          v26 = (void **)sub_22E3B8AAC(v21);
          *((_BYTE *)v26 + *(unsigned __int8 *)v26 + 1) = 5;
          v23 = v26;
          v24 = *(unsigned __int8 *)v26;
          *(_BYTE *)v26 = v24 + 1;
          v23[v24 + 2] = (void *)v22;
          sub_22EC6BEF8((uint64_t)a1, (uint64_t)v31, (uint64_t)&v26, 1);
          if (v26 && v27)
            sub_22E3BB10C(v27, (unint64_t)v26);
          v11 = v25;
        }
        else
        {
          v14 = 0;
        }
      }
      v26 = (void **)v34;
      sub_22E8D19C8(&v26);
      if (v32 != &v33)
        free(v32);
      if (v14)
      {
LABEL_4:
        v15 = *(_QWORD *)(v14 + 104);
        if (!v15)
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v14 + 96) + 88), *(_QWORD *)(v14 + 96));
          v15 = *(_QWORD *)(v14 + 104);
        }
        if (v15 < 8)
          v16 = 0;
        else
          v16 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
        if (v16 != v14)
        {
          if (!v15)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v14 + 96) + 88), *(_QWORD *)(v14 + 96));
            v15 = *(_QWORD *)(v14 + 104);
          }
          if (v15 >= 8)
          {
            v17 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
            if (v17)
              v14 = v17;
          }
        }
        if ((a3 & 1) == 0)
          sub_22EB17F48((uint64_t)a1, (_DWORD *)v14, v13, 1, 0, 0, 0, 0);
        v29 = 0;
        if (a2 && sub_22EAF6164(v14, (uint64_t *)&v29))
        {
          sub_22E8FCA40(a1, *(_DWORD *)(v7 + 8), 0x1BA8u, 0, (uint64_t)v31);
          sub_22E8BAE44((uint64_t)v31, (uint64_t *)v7);
          sub_22E903BEC(v31);
          sub_22E8FCA40(a1, *((_DWORD *)v29 + 6), 0x179Cu, 0, (uint64_t)v31);
          sub_22E890024((uint64_t)v31, (uint64_t *)&v29);
          sub_22E903BEC(v31);
        }
        v18 = *(unsigned int *)(a6 + 8);
        if (v18 >= *(unsigned int *)(a6 + 12))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v18 = *(unsigned int *)(a6 + 8);
        }
        *(_QWORD *)(*(_QWORD *)a6 + 8 * v18) = v14;
        ++*(_DWORD *)(a6 + 8);
      }
      else
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v7 + 8), 0x13B5u, 0, (uint64_t)v31);
        sub_22E8BAE44((uint64_t)v31, (uint64_t *)v7);
        sub_22E903BEC(v31);
      }
      v7 += 16;
      v13 += 4;
      v12 -= 16;
    }
    while (v12);
  }
}

uint64_t sub_22EAF6164(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;

  v3 = a1;
  v4 = *(_QWORD *)(a1 + 104);
  if (!v4)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 96) + 88), *(_QWORD *)(a1 + 96));
    v4 = *(_QWORD *)(v3 + 104);
  }
  if (v4 < 8 || (*(_BYTE *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8) + 8) & 4) != 0)
  {
LABEL_5:
    *a2 = v3;
    return 1;
  }
  v6 = sub_22F259248(v3);
  if ((uint64_t *)v6 != v7)
  {
    v8 = (uint64_t *)v6;
    v9 = v7;
    while (1)
    {
      v3 = *v8;
      result = sub_22EAF6164(*v8, a2);
      if ((_DWORD)result)
        break;
      if (++v8 == v9)
        return result;
    }
    goto LABEL_5;
  }
  return 0;
}

void sub_22EAF6208(_QWORD *a1, uint64_t *a2, uint64_t a3, int a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void **v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void **v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void **v51;
  uint64_t v52;
  void **v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void **v62;
  unint64_t v63;
  int v64[20];
  uint64_t (**v65)();
  int v66;
  char v67;
  uint64_t v68;
  _BYTE v69[19];
  int v70;
  _QWORD v71[10];
  _QWORD v72[3];
  _QWORD v73[12];
  unsigned int v74;
  char v75;
  uint64_t *v76;
  int v77;
  _QWORD v78[2];
  uint64_t *v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  _QWORD v83[2];
  void *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[12];
  char *v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD v91[6];

  v91[4] = *MEMORY[0x24BDAC8D0];
  v82 = a3;
  v81 = a4;
  v79 = a5;
  v80 = a6;
  v78[0] = a7;
  v78[1] = a8;
  v77 = a9;
  v76 = a2;
  v75 = a16;
  v74 = 0;
  v73[0] = &v82;
  v73[1] = &v74;
  v73[2] = a14;
  v73[3] = &v75;
  v73[4] = a1;
  v73[5] = v78;
  v73[6] = &v76;
  v73[7] = &v79;
  v73[8] = &v81;
  v73[9] = &v77;
  v73[10] = a13;
  v73[11] = a15;
  v17 = a6;
  if ((_DWORD)a6)
  {
    v18 = 0;
    do
    {
      v19 = sub_22EC65CE0(a1, a1[418], v79[v18], *(_DWORD *)(v78[0] + 4 * v18), 11, 0);
      v20 = *(unsigned int *)(a14 + 8);
      if (v20 >= *(unsigned int *)(a14 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v20 = *(unsigned int *)(a14 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a14 + 8 * v20) = v19;
      ++*(_DWORD *)(a14 + 8);
      if (v19)
        ++v74;
      ++v18;
    }
    while (v17 != v18);
    v21 = v74;
    a6 = v80;
  }
  else
  {
    v21 = 0;
  }
  if (a6 == v21)
  {
    sub_22EAF69A8((uint64_t)v73);
    return;
  }
  v89 = v91;
  v90 = 0x400000000;
  v22 = a6;
  if ((_DWORD)a6)
  {
    v55 = 0;
    v23 = 0;
    while (1)
    {
      v56 = sub_22EC65CE0(a1, (uint64_t)v76, v79[v55], *(_DWORD *)(v78[0] + 4 * v55), 0, 0);
      if (!v56)
        break;
      v57 = v56;
      if ((*(_DWORD *)(v56 + 28) & 0x7Fu) - 43 >= 0xFFFFFFF6)
      {
        v58 = v90;
        if (v90 >= (unint64_t)HIDWORD(v90))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v58 = v90;
        }
        v59 = v57 & 0xFFFFFFFFFFFFFFFBLL;
      }
      else
      {
        if ((*(_DWORD *)(v56 + 28) & 0x7F) != 0x16)
          break;
        v58 = v90;
        if (v90 >= (unint64_t)HIDWORD(v90))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v58 = v90;
        }
        v59 = v57 | 4;
      }
      v89[v58] = v59;
      LODWORD(v90) = v90 + 1;
      ++v23;
LABEL_75:
      if (v22 == ++v55)
        goto LABEL_15;
    }
    v60 = v90;
    if (v90 >= (unint64_t)HIDWORD(v90))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v60 = v90;
    }
    v89[v60] = 0;
    LODWORD(v90) = v90 + 1;
    goto LABEL_75;
  }
  v23 = 0;
LABEL_15:
  sub_22F30677C(v87);
  v72[0] = v87;
  v72[1] = a1;
  v72[2] = &v76;
  v71[0] = a14;
  v71[1] = &v79;
  v71[2] = v72;
  v71[3] = &v89;
  v71[4] = v78;
  v71[5] = a11;
  v71[6] = a10;
  v71[7] = &v81;
  v24 = v80;
  v71[8] = a12;
  v71[9] = &v77;
  if (v80 == v23)
    goto LABEL_79;
  v25 = v80;
  if ((_DWORD)v80)
  {
    v26 = 0;
    v27 = 0;
    v28 = 15;
    while (1)
    {
      v29 = *(_QWORD *)(*(_QWORD *)a14 + 8 * v27);
      if (!v29 && v89[v27] < 8uLL)
      {
        v30 = a1[11];
        v66 = 16843009;
        v67 = 1;
        v68 = 0;
        *(_QWORD *)v69 = 0;
        *(_DWORD *)&v69[7] = 0;
        v65 = &off_24FAB81B8;
        *(_QWORD *)&v69[11] = v30;
        v70 = v28;
        LODWORD(v30) = *(_DWORD *)(v78[0] + 4 * v27);
        v62 = (void **)v79[v27];
        LODWORD(v63) = v30;
        sub_22EFC6D6C((uint64_t)v64, (uint64_t)v62);
        sub_22EC6AB20((uint64_t)a1, (uint64_t *)&v62, v28, v76, 0, (uint64_t)&v65, 1, 0, (uint64_t)v83, 0, 0, 1u);
        if (v83[0])
        {
          v34 = sub_22F2E6D78((uint64_t)v83);
          if (v34 && (*(_DWORD *)(v34 + 28) & 0x7F) == 0x17)
          {
            v35 = v34;
            v36 = a1[11] + 2128;
            v62 = 0;
            v63 = v36;
            v64[0] = 5046;
            v37 = (void *)v79[v27];
            v62 = (void **)sub_22E3B8AAC(v36);
            *((_BYTE *)v62 + *(unsigned __int8 *)v62 + 1) = 5;
            v38 = v62;
            v39 = *(unsigned __int8 *)v62;
            *(_BYTE *)v62 = v39 + 1;
            v38[v39 + 2] = v37;
            sub_22EC6BEF8((uint64_t)a1, (uint64_t)v83, (uint64_t)&v62, 1);
            if (v62 && v63)
              sub_22E3BB10C(v63, (unint64_t)v62);
            *(_QWORD *)(*(_QWORD *)a14 + 8 * v27) = v35;
            ++v74;
            v33 = 1;
            v28 = 11;
          }
          else
          {
            v40 = sub_22F2E6D78((uint64_t)v83);
            if (v40 && (*(_DWORD *)(v40 + 28) & 0x7Fu) - 33 <= 9)
            {
              v61 = v40;
              v41 = a1[11] + 2128;
              v62 = 0;
              v63 = v41;
              v64[0] = 5076;
              v42 = (void *)v79[v27];
              v62 = (void **)sub_22E3B8AAC(v41);
              *((_BYTE *)v62 + *(unsigned __int8 *)v62 + 1) = 5;
              v43 = v62;
              v44 = *(unsigned __int8 *)v62;
              *(_BYTE *)v62 = v44 + 1;
              v43[v44 + 2] = v42;
              sub_22EC6BEF8((uint64_t)a1, (uint64_t)v83, (uint64_t)&v62, 1);
              if (v62 && v63)
                sub_22E3BB10C(v63, (unint64_t)v62);
              v28 = 0;
              v45 = v89;
              v46 = v61 & 0xFFFFFFFFFFFFFFFBLL;
            }
            else
            {
              v47 = sub_22F2E6D78((uint64_t)v83);
              if (!v47 || (*(_DWORD *)(v47 + 28) & 0x7F) != 0x16)
                goto LABEL_30;
              v48 = v47;
              v49 = a1[11] + 2128;
              v62 = 0;
              v63 = v49;
              v64[0] = 5074;
              v50 = (void *)v79[v27];
              v62 = (void **)sub_22E3B8AAC(v49);
              *((_BYTE *)v62 + *(unsigned __int8 *)v62 + 1) = 5;
              v51 = v62;
              v52 = *(unsigned __int8 *)v62;
              *(_BYTE *)v62 = v52 + 1;
              v51[v52 + 2] = v50;
              *((_BYTE *)v51 + (v52 + 1) + 1) = 2;
              v53 = v62;
              v54 = *(unsigned __int8 *)v62;
              *(_BYTE *)v62 = v54 + 1;
              v53[v54 + 2] = (void *)1;
              sub_22EC6BEF8((uint64_t)a1, (uint64_t)v83, (uint64_t)&v62, 1);
              if (v62 && v63)
                sub_22E3BB10C(v63, (unint64_t)v62);
              v28 = 0;
              v45 = v89;
              v46 = v48 | 4;
            }
            v45[v27] = v46;
            v33 = 1;
          }
        }
        else
        {
LABEL_30:
          if ((_DWORD)v28 == 11)
            v31 = 5045;
          else
            v31 = 5075;
          if ((_DWORD)v28 == 15)
            v32 = 4128;
          else
            v32 = v31;
          sub_22E8FCA40(a1, *(_DWORD *)(v78[0] + 4 * v27), v32, 0, (uint64_t)&v62);
          sub_22E8BAE44((uint64_t)&v62, &v79[v26]);
          sub_22E903BEC((unsigned int *)&v62);
          v33 = 0;
          *(_DWORD *)(a14 + 8) = 0;
          *(_DWORD *)(a11 + 8) = 0;
        }
        v62 = (void **)&v86;
        sub_22E8D19C8(&v62);
        if (v84 != &v85)
          free(v84);
        if (!v33)
          goto LABEL_80;
        goto LABEL_40;
      }
      if (!(_DWORD)v28)
        break;
      if ((_DWORD)v28 == 11)
      {
        if (!v29)
        {
LABEL_82:
          sub_22F32B9EC(a1, *v79, *(_DWORD *)v78[0], v79[v27], *(_DWORD *)(v78[0] + 4 * v27), v29 != 0);
          *(_DWORD *)(a14 + 8) = 0;
          *(_DWORD *)(a11 + 8) = 0;
          goto LABEL_80;
        }
LABEL_28:
        v28 = 11;
        goto LABEL_40;
      }
      if (!v29)
        goto LABEL_26;
      if (v89[v27] <= 7uLL)
        goto LABEL_28;
      v28 = 15;
LABEL_40:
      ++v27;
      ++v26;
      if (v25 == v27)
      {
        v24 = v80;
        goto LABEL_77;
      }
    }
    if (v89[v27] <= 7uLL)
      goto LABEL_82;
LABEL_26:
    v28 = 0;
    goto LABEL_40;
  }
LABEL_77:
  if (v24 != v74)
LABEL_79:
    sub_22EAF6DF8(v71);
  else
    sub_22EAF69A8((uint64_t)v73);
LABEL_80:
  sub_22E8FB19C(&v88);
  sub_22E3B4EF4((uint64_t)v87);
  if (v89 != v91)
    free(v89);
}

void sub_22EAF69A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  uint64_t v29;
  void **v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  void *__p;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[12];
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  int v54;
  _BYTE v55[72];

  v2 = *(_QWORD *)(a1 + 32);
  v3 = **(_QWORD **)a1;
  if (v3 < 0x10)
    goto LABEL_7;
  v4 = (uint64_t *)(v3 & 0xFFFFFFFFFFFFFFF0);
  v5 = *v4;
  if (*v4 && *(_BYTE *)(v5 + 16) == 57)
  {
    v6 = *(_QWORD *)(v5 + 8);
    if (v6 < 0x10)
      goto LABEL_7;
    v4 = (uint64_t *)(v6 & 0xFFFFFFFFFFFFFFF0);
  }
  v7 = sub_22E4EBB74(*v4);
  if (v7)
  {
    v38 = (uint64_t *)sub_22F272660(v7);
    v9 = (unint64_t)v38;
    v8 = v38 && (v39 = sub_22F3B4828(v38)) != 0 && *(_DWORD *)(v39 + 8) == **(_DWORD **)(a1 + 8);
    goto LABEL_8;
  }
LABEL_7:
  v8 = 0;
  v9 = 0;
LABEL_8:
  v10 = *(unsigned int *)(*(_QWORD *)(a1 + 16) + 8);
  if ((_DWORD)v10)
  {
    v11 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 8 * v10;
    do
    {
      v15 = **(_QWORD **)(a1 + 16);
      if (!**(_BYTE **)(a1 + 24))
        sub_22EB17F48(v2, *(_DWORD **)(v15 + v12), (unsigned int *)(v11 + **(_QWORD **)(a1 + 40)), 1, 0, 0, 0, 0);
      v16 = *(_QWORD *)(v15 + v12);
      v17 = *(_QWORD *)(v16 + 104);
      if (!v17)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v16 + 96) + 88), *(_QWORD *)(v16 + 96));
        v17 = *(_QWORD *)(v16 + 104);
      }
      if (v17 < 8)
        v18 = 0;
      else
        v18 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
      if (v18 != v16)
      {
        v19 = *(_QWORD *)(v15 + v12);
        v20 = *(_QWORD *)(v19 + 104);
        if (!v20)
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v19 + 96) + 88), *(_QWORD *)(v19 + 96));
          v20 = *(_QWORD *)(v19 + 104);
        }
        if (v20 >= 8 && *(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF8))
        {
          v21 = *(_QWORD *)(v15 + v12);
          v22 = *(_QWORD *)(v21 + 104);
          if (!v22)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v21 + 96) + 88), *(_QWORD *)(v21 + 96));
            v22 = *(_QWORD *)(v21 + 104);
          }
          if (v22 < 8)
            v23 = 0;
          else
            v23 = *(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
          *(_QWORD *)(v15 + v12) = v23;
        }
      }
      v50[0] = 0;
      if (**(_BYTE **)(a1 + 24) && sub_22EAF6164(*(_QWORD *)(v15 + v12), v50))
      {
        sub_22E8FCA40((_QWORD *)v2, *(_DWORD *)(**(_QWORD **)(a1 + 40) + v11), 0x1BA8u, 0, (uint64_t)&v51);
        v40 = *(_QWORD *)(*(_QWORD *)(v15 + v12) + 40);
        sub_22E894538((uint64_t)&v51, (uint64_t *)&v40);
        sub_22E903BEC((unsigned int *)&v51);
        sub_22E8FCA40((_QWORD *)v2, *(_DWORD *)(v50[0] + 24), 0x179Cu, 0, (uint64_t)&v51);
        sub_22E890024((uint64_t)&v51, v50);
        sub_22E903BEC((unsigned int *)&v51);
      }
      if (v8
        && (v24 = sub_22EC65CE0((_QWORD *)v2, **(_QWORD **)(a1 + 48), *(_QWORD *)(**(_QWORD **)(a1 + 56) + v12), *(_DWORD *)(**(_QWORD **)(a1 + 40) + v11), 0, 0)) != 0)
      {
        if ((*(_DWORD *)(v24 + 28) & 0x7F) == 0x16)
        {
          if (!v13)
            v13 = *(_DWORD *)(**(_QWORD **)(a1 + 40) + v11);
          v8 = 1;
        }
        else
        {
          v8 = (*(_DWORD *)(v24 + 28) & 0x7Fu) - 33 < 0xA;
        }
      }
      else
      {
        v8 = 0;
      }
      v12 += 8;
      v11 += 4;
    }
    while (v14 != v12);
    if (v13 && v8)
    {
      v51 = v55;
      v52 = v55;
      v53 = 8;
      v54 = 0;
      sub_22EF5D228(*(_QWORD *)(v2 + 88), v9, (uint64_t)&v51);
      v26 = *(_QWORD *)(a1 + 16);
      v27 = *(unsigned int *)(v26 + 8);
      if ((_DWORD)v27)
      {
        v28 = *(void ***)v26;
        v29 = 8 * v27;
        while (1)
        {
          v30 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v51, *v28);
          v32 = v51;
          v31 = v52;
          v33 = (uint64_t *)((char *)&v53 + 4);
          if (v52 != v51)
            v33 = &v53;
          if (v30 == (void **)&v52[8 * *(unsigned int *)v33])
            break;
          ++v28;
          v29 -= 8;
          if (!v29)
            goto LABEL_51;
        }
      }
      else
      {
LABEL_51:
        sub_22E8FCA40((_QWORD *)v2, v13, 0x1AB3u, 0, (uint64_t)v50);
        v49 = *(_QWORD *)(v9 + 40);
        v34 = sub_22E894538((uint64_t)v50, &v49);
        v35 = **(_DWORD **)(a1 + 72);
        LODWORD(v48) = **(_DWORD **)(a1 + 64);
        HIDWORD(v48) = v35;
        v36 = sub_22E8906A0(v34, &v48);
        v37 = sub_22F141A3C(v13, 0, *(_QWORD **)(v2 + 112), *(_DWORD **)(v2 + 72));
        v42 = 0;
        v43 = 0;
        v45 = 0;
        v46 = 0x200000000000000;
        v40 = v37 | ((unint64_t)v37 << 32);
        v41 = 0;
        __p = (void *)10784;
        v47 = 0;
        sub_22E890748(v36, &v40);
        if (SHIBYTE(v46) < 0)
          operator delete(__p);
        sub_22E903BEC((unsigned int *)v50);
        v32 = v51;
        v31 = v52;
      }
      if (v31 != v32)
        free(v31);
    }
  }
  **(_DWORD **)(a1 + 80) = **(_DWORD **)(a1 + 64);
  **(_DWORD **)(a1 + 88) = **(_DWORD **)(a1 + 72);
}

_QWORD *sub_22EAF6DF8(_QWORD *result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  void *__p;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  _QWORD v39[4];
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  int v52;
  uint64_t v53;
  unsigned int v54[4];
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  _QWORD *v62;
  __int128 v63;
  __int128 v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  __int16 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;

  v1 = result;
  v84 = *MEMORY[0x24BDAC8D0];
  *(_DWORD *)(*result + 8) = 0;
  v29 = *(unsigned int *)(result[1] + 8);
  if (!*(_DWORD *)(result[1] + 8))
  {
LABEL_25:
    *(_DWORD *)v1[6] = *(_DWORD *)v1[7];
    *(_DWORD *)v1[8] = *(_DWORD *)v1[9];
    return result;
  }
  v2 = 0;
  while (1)
  {
    v3 = v1[2];
    v4 = *(_QWORD *)(*(_QWORD *)v1[3] + 8 * v2);
    v5 = *(unsigned int *)(*(_QWORD *)v1[4] + 4 * v2);
    v6 = *(_QWORD *)v3;
    v7 = *(_QWORD *)(v3 + 8);
    v39[3] = 0;
    v40 = 0;
    v39[2] = 0;
    v38 = 0;
    v39[0] = 0;
    v41 = v6;
    v53 = 0;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v45 = 0u;
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    v49 = 0u;
    v50 = 0u;
    v51 = 0u;
    v52 = 0;
    v8 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8);
    if ((v4 & 4) != 0 || !v8)
    {
      v11 = sub_22F36D148(*(_QWORD *)(v7 + 88), v8, 0);
    }
    else
    {
      v9 = v8[6];
      if (v9)
      {
        v10 = v9 & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_9;
      }
      v11 = sub_22EF6462C(*(_QWORD *)(v7 + 88), (unint64_t)v8);
    }
    v10 = v11;
LABEL_9:
    v38 = v10;
    v12 = sub_22EF579A8(*(_QWORD *)(v7 + 88), v10, v5);
    v13 = sub_22EE7D030(v7, v38, (uint64_t)v12);
    v19 = v39[0] & 0x3F000;
    if ((v39[0] & 0x3F000) == 0)
    {
      DWORD2(v46) = v5;
      DWORD1(v47) = v5;
      v39[0] = v39[0] & 0xFFFFFFFFFFDC0FFFLL | 0x1C000;
      v39[1] = v13;
      v19 = 114688;
    }
    DWORD2(v44) = v5;
    HIDWORD(v44) = v5;
    v68 = *((_QWORD *)&v44 + 1);
    v62 = v39;
    v66 = 0;
    v67 = 0;
    v63 = 0u;
    v64 = 0u;
    v65 = 0;
    v69 = 5;
    v70 = 0;
    v71 = 0;
    v72 = 0;
    v73 = &v75;
    v74 = 0x800000000;
    v76 = v76 & 0xFC00 | (v19 == 204800);
    v77 = 0;
    v78 = 0;
    v79 = v41;
    v83 = 0;
    v81 = 0u;
    v82 = 0u;
    v80 = 0u;
    v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v38 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v20 && *(_BYTE *)(v20 + 16) == 34)
    {
      v26 = sub_22F141A3C(v5, 0, *(_QWORD **)(v7 + 112), *(_DWORD **)(v7 + 72));
      v28 = v26;
      v54[2] = 0;
      v55 = 0;
      v56 = 0;
      v54[0] = 0;
      v54[1] = v26;
      v57 &= 0x80u;
      v59 = 0;
      v60 = 0;
      v58 = 0;
      v61 = 0;
      sub_22F2E2950((uint64_t)&v62, (unint64_t)v54, v26);
      sub_22E80F94C(&v56);
      sub_22E8FCA40((_QWORD *)v7, v5, 0x1021u, 0, (uint64_t)v54);
      v27 = sub_22E8901B8((uint64_t)v54, (uint64_t *)&v38);
      v33 = 0;
      v32 = 0;
      v35 = 0;
      v36 = 0x200000000000000;
      __p = (void *)10784;
      v30 = v28 | (v28 << 32);
      v31 = 0;
      v37 = 0;
      sub_22E890748(v27, &v30);
      if (SHIBYTE(v36) < 0)
        operator delete(__p);
      sub_22E903BEC(v54);
    }
    v21 = sub_22EE89FC0(v7, **(_QWORD **)(v3 + 16), (uint64_t)&v62, v14, v15, v16, v17, v18);
    v23 = v22;
    sub_22E827F78((uint64_t)&v62);
    if (DWORD1(v44))
      free(*((void **)&v43 + 1));
    sub_22E8D1BC4(v41, (uint64_t)&v41);
    sub_22E80F94C((uint64_t *)&v42);
    result = sub_22E80F94C(&v40);
    v24 = v1[5];
    if (v23 || !v21)
      break;
    v25 = *(unsigned int *)(v24 + 8);
    if (v25 >= *(unsigned int *)(v24 + 12))
    {
      result = (_QWORD *)llvm::SmallVectorBase<unsigned int>::grow_pod();
      v25 = *(unsigned int *)(v24 + 8);
    }
    *(_QWORD *)(*(_QWORD *)v24 + 8 * v25) = v21;
    ++*(_DWORD *)(v24 + 8);
    if (v29 == ++v2)
      goto LABEL_25;
  }
  *(_DWORD *)(v24 + 8) = 0;
  return result;
}

uint64_t sub_22EAF7218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  _BOOL4 v20;
  _BOOL4 v21;

  result = sub_22EAFA7D0(*(_QWORD *)(a1 + 88), a4, *(_QWORD *)(a2 + 80), *(_QWORD *)(a3 + 80));
  if ((_DWORD)result)
  {
    if ((*(_BYTE *)(a2 + 8) & 4) != 0)
      return 0;
    if ((*(_BYTE *)(a3 + 8) & 4) != 0)
      return 0;
    v9 = sub_22EFDBD9C(a2);
    if (v9 != sub_22EFDBD9C(a3))
      return 0;
    if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 2) != 0
      && ((v20 = sub_22F24DC44(a2), v20 != sub_22F24DC44(a3)) || (v21 = sub_22F2727C8(a2), v21 != sub_22F2727C8(a3))))
    {
      return 0;
    }
    else
    {
      v10 = *(unsigned int *)(a2 + 104);
      result = 1;
      if ((_DWORD)v10)
      {
        v11 = *(unsigned int *)(a3 + 104);
        if ((_DWORD)v11)
        {
          v12 = *(uint64_t **)(a2 + 96);
          v13 = *(uint64_t **)(a3 + 96);
          v14 = 8 * v10 - 8;
          v15 = 8 * v11 - 8;
          while (1)
          {
            v16 = *v12;
            v17 = *v13;
            result = sub_22EAFA7D0(*(_QWORD *)(a1 + 88), a4, *(_QWORD *)(*v12 + 48), *(_QWORD *)(*v13 + 48));
            if (!(_DWORD)result)
              break;
            if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 2) != 0)
            {
              v19 = sub_22F24EBE4(v16);
              if (v19 != sub_22F24EBE4(v17))
                return 0;
            }
            result = 1;
            if (v14)
            {
              ++v12;
              ++v13;
              v14 -= 8;
              v18 = v15;
              v15 -= 8;
              if (v18)
                continue;
            }
            return result;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EAF7394(uint64_t a1, int a2, void **a3, unsigned int a4, uint64_t a5, unsigned int a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46[24];
  unsigned int v47[24];
  _BYTE v48[96];
  uint64_t (**v49)();
  int v50;
  char v51;
  uint64_t v52;
  _BYTE v53[11];
  uint64_t v54;
  unsigned int v55[24];
  void **v56;
  unint64_t v57;
  int v58[20];
  uint64_t v59;
  void **v60;
  uint64_t v61[2];
  uint64_t *v62;
  uint64_t v63;
  _QWORD v64[5];

  v64[3] = *MEMORY[0x24BDAC8D0];
  v59 = a5;
  v60 = a3;
  v14 = *(_QWORD *)(a1 + 3344);
  v15 = *(_QWORD *)(a1 + 216);
  v16 = *(_WORD *)(v15 + 8) & 0x7F;
  v17 = -40;
  if (v16 > 0x46)
  {
    if (v16 == 83)
      goto LABEL_17;
    if (v16 == 71)
    {
      v17 = -56;
      goto LABEL_17;
    }
    if (v16 != 81)
    {
LABEL_12:
      if (v16 - 52 < 6)
      {
        v17 = -72;
      }
      else
      {
        v17 = -48;
        if (v16 - 33 < 5)
          v17 = -64;
      }
    }
  }
  else
  {
    if (v16 > 0x18)
      goto LABEL_11;
    if (v16 == 16)
    {
LABEL_4:
      v17 = -48;
      goto LABEL_17;
    }
    if (((1 << v16) & 0x1066) == 0)
    {
      if (v16 == 24)
        goto LABEL_4;
LABEL_11:
      if (v16 == 70)
      {
        v17 = -64;
        goto LABEL_17;
      }
      goto LABEL_12;
    }
  }
LABEL_17:
  if (sub_22EFB9D84(v15 + v17))
    v18 = 1;
  else
    v18 = 2;
  v19 = a4;
  v20 = sub_22EC65CE0((_QWORD *)a1, v14, (uint64_t)a3, a4, 0, v18);
  if (v20)
  {
    v26 = (uint64_t *)v20;
    if ((*(_DWORD *)(v20 + 28) & 0x7F) == 0x16)
    {
      v27 = sub_22F36D148(*(_QWORD *)(a1 + 88), (uint64_t *)v20, 0);
      v56 = (void **)&unk_24FAB6EF8;
      LODWORD(v57) = 7077;
      sub_22EE8B0B0(a1, a4, v27);
      if (!a5)
      {
LABEL_47:
        v31 = 0;
        if (!v26)
          goto LABEL_48;
        goto LABEL_50;
      }
      goto LABEL_34;
    }
    sub_22E8FCA40((_QWORD *)a1, a4, 0x1215u, 0, (uint64_t)&v56);
    sub_22E8BAE44((uint64_t)&v56, (uint64_t *)&v60);
    sub_22E903BEC((unsigned int *)&v56);
    sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v26 + 6), 0x6Du, 0, (uint64_t)v55);
    sub_22E903BEC(v55);
  }
  else
  {
    v51 = 1;
    v50 = 16843009;
    memset(v53, 0, sizeof(v53));
    v52 = 0;
    v49 = &off_24FAB8148;
    v54 = 0;
    v56 = a3;
    LODWORD(v57) = a4;
    sub_22EFC6D6C((uint64_t)v58, (uint64_t)a3);
    sub_22EC6AB20(a1, (uint64_t *)&v56, 0, *(uint64_t **)(a1 + 3344), 0, (uint64_t)&v49, 0, 0, (uint64_t)v61, 0, 0, 1u);
    v21 = sub_22F2E6D78((uint64_t)v61);
    if (v21 && (*(_DWORD *)(v21 + 28) & 0x7F) == 0x16)
    {
      v22 = *(_QWORD *)(a1 + 88) + 2128;
      v56 = 0;
      v57 = v22;
      v58[0] = 7078;
      v23 = (uint64_t)v60;
      v56 = (void **)sub_22E3B8AAC(v22);
      *((_BYTE *)v56 + *(unsigned __int8 *)v56 + 1) = 5;
      v24 = v56;
      v25 = *(unsigned __int8 *)v56;
      *(_BYTE *)v56 = v25 + 1;
      v24[v25 + 2] = (void *)v23;
      sub_22EC6BEF8(a1, (uint64_t)v61, (uint64_t)&v56, 0);
      if (v56 && v57)
        sub_22E3BB10C(v57, (unint64_t)v56);
    }
    else
    {
      sub_22E8FCA40((_QWORD *)a1, a4, 0x1BA5u, 0, (uint64_t)&v56);
      sub_22E8BAE44((uint64_t)&v56, (uint64_t *)&v60);
      sub_22E903BEC((unsigned int *)&v56);
    }
    v56 = (void **)v64;
    sub_22E8D19C8(&v56);
    if (v62 != &v63)
      free(v62);
  }
  v26 = 0;
  if (!a5)
    goto LABEL_47;
LABEL_34:
  v28 = sub_22EC65CE0((_QWORD *)a1, *(_QWORD *)(a1 + 3344), a5, a6, 0, 0);
  if (!v28)
    goto LABEL_35;
  v31 = v28;
  if ((*(_DWORD *)(v28 + 28) & 0x7F) != 0x16)
  {
    sub_22E8FCA40((_QWORD *)a1, a6, 0x1215u, 0, (uint64_t)&v56);
    sub_22E8BAE44((uint64_t)&v56, &v59);
    sub_22E903BEC((unsigned int *)&v56);
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v31 + 24), 0x6Du, 0, (uint64_t)v48);
    v30 = (unsigned int *)v48;
    goto LABEL_46;
  }
  v32 = *(_QWORD *)(v28 + 120);
  if (!v32)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v28 + 96) + 88), *(_QWORD *)(v28 + 96));
    v32 = *(_QWORD *)(v31 + 120);
  }
  if (v32 <= 7)
  {
LABEL_35:
    sub_22E8FCA40((_QWORD *)a1, a6, 0x13BDu, 0, (uint64_t)&v56);
    v29 = sub_22E8BAE44((uint64_t)&v56, &v59);
    sub_22E8BAE44(v29, (uint64_t *)&v60);
    v30 = (unsigned int *)&v56;
LABEL_46:
    sub_22E903BEC(v30);
    goto LABEL_47;
  }
  if (!v26)
  {
LABEL_48:
    v26 = sub_22F3B5B14(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), a2, (uint64_t)v60, 0, 0, a4, 1);
    sub_22E91049C(a1, *(_QWORD *)(a1 + 3344), (uint64_t)v26);
    sub_22F3B4B38((unint64_t)v26);
    if (v31)
    {
      v37 = *(_QWORD *)(a1 + 88);
      v38 = sub_22F36D148(v37, (uint64_t *)v31, 0);
      v39 = sub_22EF579A8(v37, v38, a6);
      v35 = v26[15] & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)(v35 + 8) = v39;
      a4 = a6;
    }
    else
    {
      v35 = v26[15] & 0xFFFFFFFFFFFFFFF8;
    }
    *(_DWORD *)(v35 + 80) = a4;
    sub_22EA0483C(a1, (unint64_t)v26, *(uint64_t **)(a1 + 3344), 1);
    goto LABEL_56;
  }
  v33 = sub_22F3B46CC((unint64_t)v26);
  if (!v33
    || v33 != v31
    && (v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 32))(v33),
        v34 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)v31 + 32))(v31)))
  {
    sub_22E8FCA40((_QWORD *)a1, a6, 0xBFEu, 0, (uint64_t)&v56);
    v61[0] = *(_QWORD *)(v31 + 40);
    sub_22E894538((uint64_t)&v56, v61);
    sub_22E903BEC((unsigned int *)&v56);
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v31 + 24), 0x6Du, 0, (uint64_t)v47);
    sub_22E903BEC(v47);
  }
LABEL_50:
  v36 = v26[15];
  if (!v36)
  {
    sub_22E3CD31C((uint64_t *)(v26[12] + 88), v26[12]);
    v36 = v26[15];
  }
  if (v36 <= 7)
    sub_22F3B4B38((unint64_t)v26);
LABEL_56:
  v40 = sub_22F3B6CF8(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), (uint64_t)v26, v31, v19, a2, a6, 0, 0);
  sub_22EA63DD8((_QWORD *)a1, *(_QWORD *)(a1 + 3344), v40, a7, 1);
  sub_22E91049C(a1, *(_QWORD *)(a1 + 3344), v40);
  if ((sub_22F32B4DC((_QWORD *)a1, v40) & 1) == 0)
  {
    if (sub_22F3B4E88((unint64_t)v26))
    {
      sub_22E8FCA40((_QWORD *)a1, v19, 0xCCAu, 0, (uint64_t)&v56);
      sub_22E8BAE44((uint64_t)&v56, (uint64_t *)&v60);
      sub_22E903BEC((unsigned int *)&v56);
      v43 = sub_22F3B4E88((unint64_t)v26);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v43 + 24), 0x6Du, 0, (uint64_t)v46);
      sub_22E903BEC(v46);
      sub_22EFC77E8(v40, 1);
    }
    else
    {
      sub_22F3B5EF0((unint64_t)v26, v40);
      sub_22EA0483C(a1, v40, *(uint64_t **)(a1 + 3344), 1);
      sub_22EAF3BE0((unsigned int *)a1, (uint64_t)v26, *(_DWORD *)(v40 + 24));
    }
    if (sub_22F3B46CC((unint64_t)v26))
    {
      v44 = sub_22F3B46CC((unint64_t)v26);
      if (sub_22F278AC4(v44))
      {
        sub_22E8FCA40((_QWORD *)a1, v19, 0x1013u, 0, (uint64_t)&v56);
        v61[0] = v26[5];
        v45 = sub_22E894538((uint64_t)&v56, v61);
        v49 = *(uint64_t (***)())(sub_22F3B46CC((unint64_t)v26) + 40);
        sub_22E894538(v45, (uint64_t *)&v49);
        sub_22E903BEC((unsigned int *)&v56);
      }
    }
  }
  v41 = v40 + 48;
  if (!v40)
    v41 = 0;
  *(_QWORD *)(a1 + 216) = v41;
  return v40;
}

unsigned int *sub_22EAF7AE0(unsigned int *result, uint64_t a2, uint64_t *a3, int a4, int a5)
{
  unint64_t v5;
  uint64_t v7;
  unsigned int *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unsigned int *v39;
  _BYTE *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  BOOL v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  unsigned int *v60;
  uint64_t v61;
  char v62;
  unsigned int v63[24];
  _BYTE v64[96];
  _BYTE v65[96];
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unsigned int v69[24];
  unsigned int v70[24];
  unsigned int v71[24];
  unsigned int v72[24];
  unsigned int v73[24];
  unsigned int v74[26];

  v5 = *(_QWORD *)(a2 + 88);
  if (!v5)
    return result;
  LODWORD(v7) = a4;
  v10 = result;
  v11 = *(_QWORD *)(v5 + 120);
  if (!v11)
  {
    result = (unsigned int *)sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v5 + 96) + 88), *(_QWORD *)(v5 + 96));
    v11 = *(_QWORD *)(v5 + 120);
  }
  v12 = v5;
  if (v11 >= 8)
    v12 = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
  if ((*(_BYTE *)(v12 + 29) & 2) != 0)
  {
    *(_DWORD *)((v11 & 0xFFFFFFFFFFFFFFF8) + 80) = a5;
    if ((_DWORD)v7)
    {
      v28 = a2 + 48;
      v29 = v5 + 48;
      v7 = v7;
      do
      {
        sub_22EFC80C4(*a3, v28);
        if (((1 << *(_DWORD *)(*((_QWORD *)v10 + 9) + 400)) & 0xDD) != 0)
          sub_22EFCE90C(v29, *a3);
        v30 = *a3++;
        result = (unsigned int *)sub_22EFCCFA0(v28, v30);
        --v7;
      }
      while (v7);
    }
    return result;
  }
  if (!(_DWORD)v7)
    return result;
  if (((1 << *(_DWORD *)(*((_QWORD *)v10 + 9) + 400)) & 0xDD) != 0)
  {
    if (*(_QWORD *)(a2 + 96))
    {
      sub_22E8FCA40(v10, *(_DWORD *)(a2 + 24), 0x1ACEu, 0, (uint64_t)v74);
      sub_22E903BEC(v74);
    }
    v13 = 0;
    v14 = a2 + 48;
    v15 = v7;
    do
    {
      v16 = a3[v13];
      v17 = *(_QWORD *)(v16 + 40);
      if ((v17 & 7) != 0)
        v18 = 0;
      else
        v18 = v17 & 0xFFFFFFFFFFFFFFF8;
      v19 = sub_22F3B466C(v5, v18);
      if (v19)
      {
        v20 = v19;
        sub_22E8FCA40(v10, *(_DWORD *)(v16 + 24), 0xCCFu, 0, (uint64_t)v73);
        sub_22E903BEC(v73);
        sub_22E8FCA40(v10, *(_DWORD *)(v20 + 24), 0x6Du, 0, (uint64_t)v72);
        result = sub_22E903BEC(v72);
      }
      else
      {
        v21 = sub_22EB0C40C(v5);
        if (v21)
        {
          v22 = v21;
LABEL_19:
          v23 = *(_QWORD *)(v16 + 40);
          if ((v23 & 7) != 0)
            v24 = 0;
          else
            v24 = v23 & 0xFFFFFFFFFFFFFFF8;
          v25 = sub_22F3B466C(v22, v24);
          if (v25)
          {
            v26 = v25;
            sub_22E8FCA40(v10, *(_DWORD *)(v16 + 24), 0xCCFu, 0, (uint64_t)v71);
            sub_22E903BEC(v71);
            sub_22E8FCA40(v10, *(_DWORD *)(v26 + 24), 0x6Du, 0, (uint64_t)v70);
            sub_22E903BEC(v70);
          }
          while (1)
          {
            v22 = *(_QWORD *)(v22 + 128);
            if (!v22)
              break;
            if ((*(_BYTE *)(v22 + 28) & 0x80) == 0)
            {
              v27 = *(_QWORD *)(v22 + 40) >= 8uLL && (*(_QWORD *)(v22 + 40) & 7) == 0;
              if (!v27 && (*(_BYTE *)(v22 + 8) & 4) == 0)
                goto LABEL_19;
            }
          }
        }
        sub_22EFC80C4(v16, v14);
        sub_22EFCE90C(v5 + 48, v16);
        result = (unsigned int *)sub_22EFCCFA0(v14, v16);
      }
      ++v13;
    }
    while (v13 != v15);
    return result;
  }
  result = (unsigned int *)sub_22F32C4AC(v5);
  v31 = (unint64_t)result;
  if (!*(_QWORD *)(v5 + 120))
    result = (unsigned int *)sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v5 + 96) + 88), *(_QWORD *)(v5 + 96));
  if (v31)
  {
    v32 = 0;
LABEL_45:
    v33 = a3[v32];
    if ((*(_QWORD *)((*(_QWORD *)(v33 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v33 + 48) & 7) == (*(_QWORD *)((*(_QWORD *)(v31 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v31 + 48) & 7))
    {
      if ((*(_BYTE *)(v33 + 68) & 1) == 0)
        goto LABEL_54;
      if ((*(_BYTE *)(v31 + 68) & 1) == 0)
        goto LABEL_54;
      v41 = sub_22EFC2EF4(a3[v32], *((_QWORD *)v10 + 11));
      result = (unsigned int *)sub_22EFC2EF4(v31, *((_QWORD *)v10 + 11));
      if (v41 == (_DWORD)result)
        goto LABEL_54;
      if ((*(_BYTE *)(v33 + 68) & 1) != 0)
      {
        v51 = *(_QWORD *)(v33 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        v52 = *(_QWORD *)(v33 + 72) & 3;
        if ((_DWORD)v52)
          v53 = (_DWORD)v52 == 3;
        else
          v53 = 1;
        if (!v53)
          v51 = *(_QWORD *)(v51 + 8);
      }
      else
      {
        v51 = 0;
      }
      sub_22F0D5A50(v51);
      sub_22E8FCA40(v10, v54, 0xBFAu, 0, (uint64_t)v69);
      v55 = *(_QWORD *)(v33 + 40);
      if ((v55 & 7) != 0)
        v56 = 0;
      else
        v56 = v55 & 0xFFFFFFFFFFFFFFF8;
      v68 = v56;
      sub_22E8BAE44((uint64_t)v69, (uint64_t *)&v68);
      sub_22E903BEC(v69);
      v57 = 0;
      if ((*(_BYTE *)(v31 + 68) & 1) != 0)
      {
        v57 = *(_QWORD *)(v31 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(v31 + 72) & 3) != 0 && (*(_DWORD *)(v31 + 72) & 3) != 3)
          v57 = *(_QWORD *)(v57 + 8);
      }
      sub_22F0D5A50(v57);
      v38 = v58;
      v39 = (unsigned int *)v64;
      v40 = v64;
    }
    else
    {
      sub_22E8FCA40(v10, *(_DWORD *)(v33 + 24), 0xBFCu, 0, (uint64_t)v69);
      v34 = *(_QWORD *)(v33 + 40);
      if ((v34 & 7) != 0)
        v35 = 0;
      else
        v35 = v34 & 0xFFFFFFFFFFFFFFF8;
      v68 = v35;
      v36 = sub_22E8BAE44((uint64_t)v69, (uint64_t *)&v68);
      v67 = *(_QWORD *)(v33 + 48);
      v37 = sub_22E8901B8(v36, (uint64_t *)&v67);
      v66 = *(_QWORD *)(v31 + 48);
      sub_22E8901B8(v37, &v66);
      sub_22E903BEC(v69);
      v38 = *(_DWORD *)(v31 + 24);
      v39 = (unsigned int *)v65;
      v40 = v65;
    }
    sub_22E8FCA40(v10, v38, 0x6Du, 0, (uint64_t)v40);
    result = sub_22E903BEC(v39);
LABEL_54:
    v42 = *(_QWORD *)(v33 + 40);
    if ((v42 & 7) != 0)
      v43 = 0;
    else
      v43 = v42 & 0xFFFFFFFFFFFFFFF8;
    v44 = *(_QWORD *)(v31 + 40);
    if ((v44 & 7) != 0)
      v45 = 0;
    else
      v45 = v44 & 0xFFFFFFFFFFFFFFF8;
    if (v43 != v45)
    {
      sub_22E8FCA40(v10, *(_DWORD *)(v33 + 24), 0xBFBu, 0, (uint64_t)v69);
      v46 = *(_QWORD *)(v33 + 40);
      if ((v46 & 7) != 0)
        v47 = 0;
      else
        v47 = v46 & 0xFFFFFFFFFFFFFFF8;
      v68 = v47;
      v48 = sub_22E8BAE44((uint64_t)v69, (uint64_t *)&v68);
      v49 = *(_QWORD *)(v31 + 40);
      if ((v49 & 7) != 0)
        v50 = 0;
      else
        v50 = v49 & 0xFFFFFFFFFFFFFFF8;
      v67 = v50;
      sub_22E8BAE44(v48, (uint64_t *)&v67);
      sub_22E903BEC(v69);
      sub_22E8FCA40(v10, *(_DWORD *)(v31 + 24), 0x6Du, 0, (uint64_t)v63);
      result = sub_22E903BEC(v63);
    }
    ++v32;
    LODWORD(v7) = v7 - 1;
    while (1)
    {
      v31 = *(_QWORD *)(v31 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v31)
        break;
      if ((*(_DWORD *)(v31 + 28) & 0x7F) == 0x33)
      {
        if ((_DWORD)v7)
          goto LABEL_45;
        v60 = (unsigned int *)&v61;
        goto LABEL_92;
      }
    }
    if (!(_DWORD)v7)
      return result;
    v59 = v32;
    goto LABEL_91;
  }
  v59 = 0;
LABEL_91:
  v31 = a3[v59];
  v60 = (unsigned int *)&v62;
LABEL_92:
  sub_22E8FCA40(v10, *(_DWORD *)(v31 + 24), 0xE0Cu, 0, (uint64_t)v60);
  return sub_22E903BEC(v60);
}

uint64_t sub_22EAF803C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[96];
  unsigned int v31[24];
  _BOOL4 v32;
  int v33;
  unsigned int v34[24];

  if ((*(_WORD *)(a1[9] + 148) & 2) != 0
    && (v8 = sub_22EFDBF50(a2), result = sub_22EFDBF50(a3), v8 != (_DWORD)result))
  {
    if ((*(_BYTE *)(a2 + 28) & 0x80) == 0 && (*(_BYTE *)(a3 + 28) & 0x80) == 0)
    {
      if ((_DWORD)result)
        v22 = a2;
      else
        v22 = a3;
      if ((_DWORD)result)
        v23 = result;
      else
        v23 = v8;
      if ((_DWORD)result)
        v24 = 2664;
      else
        v24 = 2657;
      if ((_DWORD)result)
        v25 = 5438;
      else
        v25 = 5436;
      switch(v23)
      {
        case 2:
        case 4:
          v26 = 1;
          break;
        case 3:
          v26 = 2;
          break;
        case 5:
          v26 = 3;
          break;
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
          goto LABEL_3;
        default:
          v26 = 0;
          break;
      }
      v27 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 80) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 16) == 32;
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v24, 0, (uint64_t)v34);
      v33 = v26;
      v28 = sub_22E8900C4((uint64_t)v34, &v33);
      v32 = v27;
      sub_22E8900C4(v28, (int *)&v32);
      sub_22E903BEC(v34);
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), v25, 0, (uint64_t)v34);
      v33 = v26;
      v29 = sub_22E8900C4((uint64_t)v34, &v33);
      v32 = v27;
      sub_22E8900C4(v29, (int *)&v32);
      v21 = v34;
      return (uint64_t)sub_22E903BEC(v21);
    }
  }
  else
  {
LABEL_3:
    result = sub_22EAF8298(a1, a2, a3, a4, 0, 1);
    v10 = *(unsigned int *)(a2 + 104);
    v11 = *(unsigned int *)(a3 + 104);
    if ((_DWORD)v10)
      v12 = (_DWORD)v11 == 0;
    else
      v12 = 1;
    if (!v12)
    {
      v13 = *(uint64_t **)(a2 + 96);
      v14 = *(uint64_t **)(a3 + 96);
      v15 = 8 * v10 - 8;
      v16 = 8 * v11 - 8;
      do
      {
        v18 = *v13++;
        v17 = v18;
        v19 = *v14++;
        result = sub_22EAF86C0(a1, a2, v17, v19, a4, 0, 1);
        if (!v15)
          break;
        v15 -= 8;
        v20 = v16;
        v16 -= 8;
      }
      while (v20);
    }
    if (((*(unsigned __int8 *)(a2 + 58) ^ *(unsigned __int8 *)(a3 + 58)) & 4) != 0)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x18E8u, 0, (uint64_t)v31);
      sub_22E903BEC(v31);
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x6Cu, 0, (uint64_t)v30);
      v21 = (unsigned int *)v30;
      return (uint64_t)sub_22E903BEC(v21);
    }
  }
  return result;
}

BOOL sub_22EAF8298(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  _BOOL8 result;
  int v12;
  unsigned int v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37;
  char v38;
  uint64_t v39;
  char v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  unsigned int v45[24];
  unint64_t v46;
  unint64_t v47;
  unsigned int v48[24];

  if (a4 && ((*(_DWORD *)(a2 + 56) ^ *(_DWORD *)(a3 + 56)) & 0xFC000000) != 0)
  {
    if (!a6)
      return 0;
    v12 = *(_DWORD *)(a2 + 24);
    if (a5)
      v13 = 6369;
    else
      v13 = 6374;
    sub_22E8FCA40(a1, v12, v13, 0, (uint64_t)v48);
    v47 = *(_QWORD *)(a2 + 40);
    v14 = sub_22E894538((uint64_t)v48, (uint64_t *)&v47);
    v46 = sub_22F3B5740(a2);
    sub_22E8906A0(v14, (uint64_t *)&v46);
    sub_22E903BEC(v48);
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x6Cu, 0, (uint64_t)v48);
    v47 = sub_22F3B5740(a3);
    sub_22E8906A0((uint64_t)v48, (uint64_t *)&v47);
    sub_22E903BEC(v48);
  }
  v15 = a6 ^ 1;
  if (a5 && a6)
  {
    v16 = *(_QWORD *)(a2 + 16);
    v17 = v16 & 0xFFFFFFFFFFFFFFF8;
    if ((v16 & 4) != 0)
      v17 = *(_QWORD *)v17;
    if ((*(_WORD *)(v17 + 8) & 0x7F) != 0x15)
    {
      v18 = *(_QWORD *)(a2 + 80);
      v19 = *(_QWORD *)(a3 + 80);
      if ((sub_22EB0C450(v18, v19, 0) & 1) == 0)
      {
        v34 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
        if (v34)
        {
          while (1)
          {
            v41 = (*(_DWORD *)(v34 + 16) >> 19) - 33;
            if (v41 < 4)
              break;
            v34 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v34 + 40) & 0xFFFFFFFFFFFFFFF0));
            LOBYTE(v35) = 0;
            if (!v34)
              goto LABEL_42;
          }
          v35 = 0x3010200u >> (8 * v41);
        }
        else
        {
          LOBYTE(v35) = 0;
        }
LABEL_42:
        v36 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
        if (v36)
        {
          while (1)
          {
            v42 = (*(_DWORD *)(v36 + 16) >> 19) - 33;
            if (v42 < 4)
              break;
            v36 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v36 + 40) & 0xFFFFFFFFFFFFFFF0));
            LOBYTE(v37) = 0;
            if (!v36)
              goto LABEL_44;
          }
          v37 = 0x3010200u >> (8 * v42);
        }
        else
        {
          LOBYTE(v37) = 0;
        }
LABEL_44:
        sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x7Du, 0, (uint64_t)v48);
        v38 = *(_BYTE *)(a2 + 60) & 1;
        LOBYTE(v47) = v35;
        BYTE1(v47) = v38;
        v39 = sub_22F2F3884((uint64_t)v48, (__int16 *)&v47);
        v40 = *(_BYTE *)(a3 + 60) & 1;
        LOBYTE(v46) = v37;
        BYTE1(v46) = v40;
        sub_22F2F3884(v39, (__int16 *)&v46);
        sub_22E903BEC(v48);
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x6Cu, 0, (uint64_t)v45);
        sub_22E903BEC(v45);
      }
    }
  }
  v20 = (uint64_t *)(*(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v20[1] & 0xFFFFFFFFFFFFFFF0);
  v22 = (uint64_t *)(*(_QWORD *)(a3 + 80) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v22[1] & 0xFFFFFFFFFFFFFFF0);
  result = v21 == v23;
  if (v21 == v23)
    v24 = 1;
  else
    v24 = v15;
  if ((v24 & 1) == 0)
  {
    if (a5)
      v25 = 6370;
    else
      v25 = 6375;
    v26 = *v20;
    if (!*v20 || *(_BYTE *)(v26 + 16) != 32)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32)
        goto LABEL_36;
      v27 = sub_22F10CF48(v26);
      if (!v27)
        goto LABEL_36;
      v26 = v27;
      v22 = (uint64_t *)(*(_QWORD *)(a3 + 80) & 0xFFFFFFFFFFFFFFF0);
    }
    v28 = *v22;
    if (*v22 && *(_BYTE *)(v28 + 16) == 32
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
      && (v28 = sub_22F10CF48(v28)) != 0)
    {
      v29 = sub_22EB0C664(a1[11], v28, v26, 0);
      result = 0;
      v25 = a5 ? 6775 : 6776;
      if ((v29 & 1) != 0)
        return result;
    }
LABEL_36:
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v25, 0, (uint64_t)v48);
    v47 = *(_QWORD *)(a2 + 40);
    v30 = sub_22E894538((uint64_t)v48, (uint64_t *)&v47);
    v46 = *(_QWORD *)(a3 + 80);
    v31 = sub_22E8901B8(v30, (uint64_t *)&v46);
    v44 = *(_QWORD *)(a2 + 80);
    v32 = sub_22E8901B8(v31, &v44);
    v43 = sub_22F3B5740(a2);
    sub_22E8906A0(v32, (uint64_t *)&v43);
    sub_22E903BEC(v48);
    if (a5)
      v33 = 108;
    else
      v33 = 109;
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), v33, 0, (uint64_t)v48);
    v47 = sub_22F3B5740(a3);
    sub_22E8906A0((uint64_t)v48, (uint64_t *)&v47);
    sub_22E903BEC(v48);
    return 0;
  }
  return result;
}

BOOL sub_22EAF86C0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  int v13;
  unsigned int v14;
  _BOOL8 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t i;
  unsigned int v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  unsigned int v56[24];
  uint64_t v57;
  unint64_t v58;
  unsigned int v59[26];

  if (a5
    && ((*(_DWORD *)(a3 + 96) >> 13) & ((int)(*(_DWORD *)(a3 + 96) << 19) >> 31) & 0x3F) != ((*(_DWORD *)(a4 + 96) >> 13) & ((int)(*(_DWORD *)(a4 + 96) << 19) >> 31) & 0x3F))
  {
    if (!a7)
      return 0;
    v13 = *(_DWORD *)(a3 + 24);
    if (a6)
      v14 = 6367;
    else
      v14 = 6372;
    sub_22E8FCA40(a1, v13, v14, 0, (uint64_t)v59);
    v16 = *(_QWORD *)(a3 + 56);
    v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFF8);
    if ((v16 & 4) != 0)
      v17 = (uint64_t *)v17[4];
    v58 = sub_22EB0C6F8(v17);
    v18 = sub_22E8906A0((uint64_t)v59, (uint64_t *)&v58);
    v57 = *(_QWORD *)(a2 + 40);
    sub_22E894538(v18, &v57);
    sub_22E903BEC(v59);
    sub_22E8FCA40(a1, *(_DWORD *)(a4 + 24), 0x6Cu, 0, (uint64_t)v59);
    v19 = *(_QWORD *)(a4 + 56);
    v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFF8);
    if ((v19 & 4) != 0)
      v20 = (uint64_t *)v20[4];
    v58 = sub_22EB0C6F8(v20);
    sub_22E8906A0((uint64_t)v59, (uint64_t *)&v58);
    sub_22E903BEC(v59);
  }
  v21 = *(_QWORD *)(a3 + 48);
  v22 = *(_QWORD *)(a4 + 48);
  v57 = v22;
  v58 = v21;
  v23 = a7 ^ 1;
  if (a6 && a7)
  {
    v24 = *(_QWORD *)(a2 + 16);
    v25 = v24 & 0xFFFFFFFFFFFFFFF8;
    if ((v24 & 4) != 0)
      v25 = *(_QWORD *)v25;
    if ((*(_WORD *)(v25 + 8) & 0x7F) != 0x15 && (sub_22EB0C450(v21, v22, 1) & 1) == 0)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x7Cu, 0, (uint64_t)v59);
      for (i = *(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0); ; i = *(_QWORD *)(v46 + 40))
      {
        v46 = sub_22F10D774(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0));
        LOBYTE(v47) = 0;
        if (!v46)
          break;
        v45 = (*(_DWORD *)(v46 + 16) >> 19) - 33;
        if (v45 < 4)
        {
          v47 = 0x3010200u >> (8 * v45);
          break;
        }
      }
      v48 = (*(_DWORD *)(a3 + 96) >> 19) & (*(_DWORD *)(a3 + 96) << 19 >> 31);
      LOBYTE(v55) = v47;
      BYTE1(v55) = v48;
      v49 = sub_22F2F3884((uint64_t)v59, (__int16 *)&v55);
      v50 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
      if (v50)
      {
        while (1)
        {
          v53 = (*(_DWORD *)(v50 + 16) >> 19) - 33;
          if (v53 < 4)
            break;
          v50 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v50 + 40) & 0xFFFFFFFFFFFFFFF0));
          LOBYTE(v51) = 0;
          if (!v50)
            goto LABEL_53;
        }
        v51 = 0x3010200u >> (8 * v53);
      }
      else
      {
        LOBYTE(v51) = 0;
      }
LABEL_53:
      v52 = (*(_DWORD *)(a4 + 96) >> 19) & (*(_DWORD *)(a4 + 96) << 19 >> 31);
      LOBYTE(v54) = v51;
      BYTE1(v54) = v52;
      sub_22F2F3884(v49, (__int16 *)&v54);
      sub_22E903BEC(v59);
      sub_22E8FCA40(a1, *(_DWORD *)(a4 + 24), 0x6Cu, 0, (uint64_t)v56);
      sub_22E903BEC(v56);
    }
  }
  v26 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v28 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v15 = v27 == v29;
  if (v27 == v29)
    v30 = 1;
  else
    v30 = v23;
  if ((v30 & 1) == 0)
  {
    v31 = a6 ? 6368 : 6373;
    if (((v32 = *v26) == 0 || *(_BYTE *)(v32 + 16) != 32)
      && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v32 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32
       || (v32 = sub_22F10CF48(v32)) == 0)
      || ((v33 = *v28) == 0 || *(_BYTE *)(v33 + 16) != 32)
      && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v33 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32
       || (v33 = sub_22F10CF48(*v28)) == 0)
      || ((v34 = sub_22EB0C664(a1[11], v32, v33, 1), a6) ? (v31 = 6773) : (v31 = 6774), (v34 & 1) == 0))
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), v31, 0, (uint64_t)v59);
      v35 = *(_QWORD *)(a3 + 56);
      v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFF8);
      if ((v35 & 4) != 0)
        v36 = (uint64_t *)v36[4];
      v55 = sub_22EB0C6F8(v36);
      v37 = sub_22E8906A0((uint64_t)v59, (uint64_t *)&v55);
      v54 = *(_QWORD *)(a2 + 40);
      v38 = sub_22E894538(v37, &v54);
      v39 = sub_22E8901B8(v38, &v57);
      sub_22E8901B8(v39, (uint64_t *)&v58);
      sub_22E903BEC(v59);
      if (a6)
        v40 = 108;
      else
        v40 = 109;
      sub_22E8FCA40(a1, *(_DWORD *)(a4 + 24), v40, 0, (uint64_t)v59);
      v41 = *(_QWORD *)(a4 + 56);
      v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFF8);
      if ((v41 & 4) != 0)
        v42 = (uint64_t *)v42[4];
      v55 = sub_22EB0C6F8(v42);
      sub_22E8906A0((uint64_t)v59, (uint64_t *)&v55);
      sub_22E903BEC(v59);
    }
  }
  return v15;
}

uint64_t sub_22EAF8B1C(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18[24];
  unsigned int v19[24];

  if ((*(_QWORD *)(a3 + 56) & 0x3000000) != 0x2000000)
  {
    v7 = (_QWORD *)result;
    result = sub_22F3089DC(a3);
    if ((result & 1) == 0)
    {
      result = sub_22EAF8CC0(a3);
      if ((result & 1) == 0)
      {
        result = sub_22EAF8298(v7, a2, a3, a4, 0, 0);
        if ((_DWORD)result)
        {
          v8 = *(unsigned int *)(a2 + 104);
          if ((_DWORD)v8 && (v9 = *(unsigned int *)(a3 + 104), (_DWORD)v9))
          {
            v10 = *(uint64_t **)(a2 + 96);
            v11 = *(uint64_t **)(a3 + 96);
            v12 = 8 * v8 - 8;
            v13 = 8 * v9 - 8;
            while (1)
            {
              result = sub_22EAF86C0(v7, a2, *v10, *v11, a4, 0, 0);
              if (!(_DWORD)result)
                break;
              if (v12)
              {
                ++v10;
                ++v11;
                v12 -= 8;
                v14 = v13;
                v13 -= 8;
                if (v14)
                  continue;
              }
              goto LABEL_12;
            }
          }
          else
          {
LABEL_12:
            v15 = *(_QWORD *)(a3 + 56);
            if (((*(_BYTE *)(a2 + 58) & 4) == 0) != ((v15 >> 18) & 1))
            {
              if ((v15 & 0x20000) != 0
                || (v16 = *(_QWORD *)(a3 + 40),
                    result = sub_22E3CB704(*(llvm::StringMapImpl **)(v7[11] + 15192), "load", 4uLL),
                    v16 != (result | 1)))
              {
                sub_22E8FCA40(v7, *(_DWORD *)(a2 + 24), 0x18C3u, 0, (uint64_t)v19);
                sub_22E903BEC(v19);
                sub_22E8FCA40(v7, *(_DWORD *)(a3 + 24), 0x16B5u, 0, (uint64_t)v18);
                v17 = *(_QWORD *)(a3 + 40);
                sub_22E894538((uint64_t)v18, &v17);
                return (uint64_t)sub_22E903BEC(v18);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_22EAF8CC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 160)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

uint64_t sub_22EAF8D20(_QWORD *a1, unsigned int *a2, unsigned int *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, char a8, char a9)
{
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  void **v22;
  uint64_t v23;
  unsigned int *v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unsigned int *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *i;
  uint64_t v40;
  unint64_t v41;
  _BOOL8 v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  int v48;

  while (1)
  {
    v17 = sub_22F276230(a7);
    if (v17 != v18)
    {
      v19 = v17;
      v20 = v18;
      do
      {
        sub_22E3BA850(a4, *(const void **)(v19 + 40));
        if (v21)
        {
          if ((*(_BYTE *)(v19 + 58) & 8) == 0
            && ((v22 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)a2, *(void **)(v19 + 40)),
                 v23 = *((_QWORD *)a2 + 1),
                 v23 != *(_QWORD *)a2)
              ? (v24 = a2 + 4)
              : (v24 = a2 + 5),
                v22 == (void **)(v23 + 8 * *v24)))
          {
            if ((a8 & 1) != 0)
              sub_22EAF91A4(a1, a6, v19, 0x1BA7u, 0);
          }
          else
          {
            v25 = sub_22EFDA1A0(a6, *(_QWORD *)(v19 + 40), 1, 0);
            if (v25 && (*(_BYTE *)(v25 + 58) & 0x10) == 0)
            {
              if ((a9 & 1) != 0)
              {
                if ((*(_BYTE *)(v19 + 58) & 8) == 0)
                  sub_22EAF8B1C((uint64_t)a1, v25, v19, (*(_DWORD *)(a7 + 28) & 0x7F) == 23);
              }
              else
              {
                sub_22EAF803C(a1, v25, v19, (*(_DWORD *)(a7 + 28) & 0x7F) == 23);
              }
            }
          }
        }
        do
          v19 = *(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v19 && ((*(_DWORD *)(v19 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v19 + 58) & 2) == 0));
      }
      while (v19 != v20);
    }
    result = sub_22F27628C(a7);
    if (result != v27)
    {
      v28 = result;
      v29 = v27;
      do
      {
        result = sub_22E3BA850(a5, *(const void **)(v28 + 40));
        if (v30)
        {
          if ((*(_BYTE *)(v28 + 58) & 8) == 0
            && ((result = (uint64_t)sub_22E3BA914((llvm::SmallPtrSetImplBase *)a3, *(void **)(v28 + 40)),
                 v31 = *((_QWORD *)a3 + 1),
                 v31 != *(_QWORD *)a3)
              ? (v32 = a3 + 4)
              : (v32 = a3 + 5),
                result == v31 + 8 * *v32))
          {
            if ((a8 & 1) != 0)
              result = (uint64_t)sub_22EAF91A4(a1, a6, v28, 0x1BA7u, 0);
          }
          else
          {
            result = sub_22EFDA1A0(a6, *(_QWORD *)(v28 + 40), 0, 0);
            if (result && (*(_BYTE *)(result + 58) & 0x10) == 0)
            {
              if ((a9 & 1) != 0)
              {
                if ((*(_BYTE *)(v28 + 58) & 8) == 0)
                  result = sub_22EAF8B1C((uint64_t)a1, result, v28, (*(_DWORD *)(a7 + 28) & 0x7F) == 23);
              }
              else
              {
                result = sub_22EAF803C(a1, result, v28, (*(_DWORD *)(a7 + 28) & 0x7F) == 23);
              }
            }
          }
        }
        do
          v28 = *(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v28 && ((*(_DWORD *)(v28 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v28 + 58) & 2) != 0));
      }
      while (v28 != v29);
    }
    if (a7)
    {
      if ((*(_DWORD *)(a7 + 28) & 0x7F) == 0x17)
      {
        result = sub_22F259248(a7);
        if ((uint64_t *)result != v44)
        {
          v45 = (uint64_t *)result;
          v46 = v44;
          do
          {
            v47 = *v45++;
            LOBYTE(v48) = a9 & 1;
            result = sub_22EAF8D20(a1, a2, a3, a4, a5, a6, v47, 0, v48);
          }
          while (v45 != v46);
        }
      }
    }
    if (!a7 || (*(_DWORD *)(a7 + 28) & 0x7F) != 0x16)
      return result;
    if ((a9 & 1) != 0)
    {
      v33 = sub_22EB0C40C(a7);
      if (v33)
      {
        v34 = v33;
LABEL_48:
        LOBYTE(v48) = 1;
        sub_22EAF8D20(a1, a2, a3, a4, a5, a6, v34, 0, v48);
        while (1)
        {
          v34 = *(_QWORD *)(v34 + 128);
          if (!v34)
            break;
          if ((*(_BYTE *)(v34 + 28) & 0x80) == 0)
          {
            v35 = *(_QWORD *)(v34 + 40) >= 8uLL && (*(_QWORD *)(v34 + 40) & 7) == 0;
            if (!v35 && (*(_BYTE *)(v34 + 8) & 4) == 0)
              goto LABEL_48;
          }
        }
      }
    }
    else
    {
      v36 = sub_22F257E10(a7);
      if (v36)
      {
        v37 = v36;
        while ((*(_BYTE *)(v37 + 28) & 0x80) != 0 || (*(_BYTE *)(v37 + 8) & 4) != 0)
        {
          v37 = *(_QWORD *)(v37 + 128);
          if (!v37)
            goto LABEL_62;
        }
LABEL_67:
        if ((a8 & 1) != 0)
        {
          v41 = *(_QWORD *)(v37 + 40);
          v43 = (v41 & 7) != 0 || v41 < 8;
        }
        else
        {
          v43 = 0;
        }
        LOBYTE(v48) = 0;
        sub_22EAF8D20(a1, a2, a3, a4, a5, a6, v37, v43, v48);
        while (1)
        {
          v37 = *(_QWORD *)(v37 + 128);
          if (!v37)
            break;
          if ((*(_BYTE *)(v37 + 28) & 0x80) == 0 && (*(_BYTE *)(v37 + 8) & 4) == 0)
            goto LABEL_67;
        }
      }
    }
LABEL_62:
    v38 = (uint64_t *)sub_22F276134(a7);
    result = sub_22F2761B0(a7);
    for (i = (uint64_t *)result; v38 != i; result = sub_22EAF8D20(a1, a2, a3, a4, a5, a6, v40, 0, v48))
    {
      v40 = *v38++;
      LOBYTE(v48) = a9 & 1;
    }
    if ((a9 & 1) != 0)
      return result;
    result = sub_22F3B46CC(a7);
    if (!result)
      return result;
    a7 = sub_22F3B46CC(a7);
    a8 = 0;
    a9 = 0;
  }
}

unsigned int *sub_22EAF91A4(_QWORD *a1, unint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unsigned int *result;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int i;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  void *v23;
  size_t v24;
  int v25;
  _DWORD v26[6];
  void *__p;
  char v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int v36;
  void **v37;
  void *v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41[12];
  uint64_t v42;
  uint64_t v43;

  v42 = a5;
  v43 = a3;
  v10 = *(_QWORD *)(a1[11] + 15088);
  v11 = *(void **)(v10 + 224);
  v12 = *(_QWORD *)(v10 + 232);
  *(_OWORD *)v41 = *(_OWORD *)(v10 + 240);
  result = (unsigned int *)sub_22EFC93E8(a3, v11, v12, v41, 0, 0);
  if ((_DWORD)result == 3)
    return result;
  sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), a4, 0, (uint64_t)v41);
  sub_22E9AEF84((uint64_t)v41, &v43);
  if (a5)
    sub_22E890024((uint64_t)v41, &v42);
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v30 = 0;
  v34 = 0;
  v35 = 0;
  v36 = 1;
  v32 = 0;
  v33 = 0;
  v31 = 0;
  v29 = MEMORY[0x24BED83D8] + 16;
  v37 = &v38;
  llvm::raw_ostream::SetBufferAndMode();
  v14 = a2;
  if ((*(_DWORD *)(a2 + 28) & 0x7F) != 0x53)
  {
    v15 = *(_QWORD *)(a2 + 16);
    v16 = v15 & 0xFFFFFFFFFFFFFFF8;
    if ((v15 & 4) != 0)
      v16 = *(_QWORD *)v16;
    for (i = *(_WORD *)(v16 + 8) & 0x7F; i != 83; i = *(_WORD *)(v16 + 8) & 0x7F)
    {
      v18 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v18 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_19;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_18;
        if (i == 16)
          goto LABEL_12;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_25;
        if (i == 24)
        {
LABEL_12:
          v18 = -48;
        }
        else
        {
LABEL_18:
          if (i != 70)
          {
LABEL_19:
            v19 = i - 52;
            if ((i - 33) >= 5)
              v20 = -48;
            else
              v20 = -64;
            if (v19 >= 6)
              v18 = v20;
            else
              v18 = -72;
            goto LABEL_25;
          }
          v18 = -64;
        }
      }
LABEL_25:
      v21 = *(_QWORD *)(v16 + v18 + 16);
      v16 = v21 & 0xFFFFFFFFFFFFFFF8;
      if ((v21 & 4) != 0)
        v16 = *(_QWORD *)v16;
    }
    v14 = v16 - 40;
  }
  sub_22F3B8394(a3, (uint64_t)&v29, (__int128 *)(*(_QWORD *)(v14 + 88) + 15104), 0, 0);
  v22 = (_DWORD *)v33;
  if ((unint64_t)(v32 - v33) > 5)
  {
    *(_WORD *)(v33 + 4) = 2570;
    *v22 = 2097838880;
    v33 += 6;
  }
  else
  {
    llvm::raw_ostream::write((llvm::raw_ostream *)&v29, " {\n}\n\n");
  }
  if (v40 >= 0)
    v23 = &v38;
  else
    v23 = v38;
  if (v40 >= 0)
    v24 = HIBYTE(v40) & 0x7F;
  else
    v24 = v39;
  sub_22E729148(v23, v24, *(_DWORD *)(a2 + 80), 0, (uint64_t)v26);
  sub_22E890748((uint64_t)v41, v26);
  if (v28 < 0)
    operator delete(__p);
  llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v29);
  if (SHIBYTE(v40) < 0)
    operator delete(v38);
  result = sub_22E903BEC((unsigned int *)v41);
  v25 = *(_DWORD *)(a3 + 24);
  if (v25)
  {
    sub_22E8FCA40(a1, v25, 0x16B5u, 0, (uint64_t)v41);
    sub_22E9AEF84((uint64_t)v41, &v43);
    return sub_22E903BEC((unsigned int *)v41);
  }
  return result;
}

void sub_22EAF94A8(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD **v30;
  char **v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  const void *v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  const void *v47;
  _QWORD **v48;
  uint64_t v49;
  _QWORD **v50;
  char **v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  _QWORD *v59;
  unsigned __int8 *v60;
  _BYTE *v61;
  unsigned __int8 *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  unint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  _BOOL4 v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  int v81;
  _BYTE v82[64];
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  int v86;
  _BYTE v87[64];
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  int v91;
  _BYTE v92[64];
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  int v96;
  _BYTE v97[64];
  unsigned int *v98;
  unsigned int *v99;
  uint64_t v100;
  int v101;
  _BYTE v102[64];
  char *v103;
  char *v104;
  uint64_t v105;
  int v106;
  _BYTE v107[64];
  _BYTE *v108;
  void *v109;
  uint64_t v110;
  int v111;
  _BYTE v112[64];
  _BYTE v113[28];
  _BYTE v114[56];
  uint64_t v115;

  v93 = v97;
  v94 = v97;
  v95 = 8;
  v96 = 0;
  v8 = sub_22F276230(a3);
  if (v8 != v9)
  {
    v10 = v8;
    v11 = v9;
    do
    {
      sub_22E3BA850((uint64_t)&v93, *(const void **)(v10 + 40));
      do
        v10 = *(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF8;
      while (v10 && ((*(_DWORD *)(v10 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v10 + 58) & 2) == 0));
    }
    while (v10 != v11);
  }
  v12 = sub_22F276498(a3);
  if (v12 != v13)
  {
    v16 = v12;
    v17 = v13;
    do
    {
      if (!*(_QWORD *)(v16 + 56))
      {
        v18 = *(_QWORD *)(v16 + 48);
        if (v18)
        {
          sub_22E3BA850((uint64_t)&v93, *(const void **)(v18 + 80));
          v19 = *(const void **)(v18 + 88);
          if (v19)
            sub_22E3BA850((uint64_t)&v93, v19);
        }
      }
      do
        v16 = *(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF8;
      while (v16 && (*(_DWORD *)(v16 + 28) & 0x7F) != 0x4E);
    }
    while (v16 != v17);
  }
  if ((*(_DWORD *)(a4 + 28) & 0x7F) == 0x16)
  {
    v14 = *(_QWORD *)(a1 + 72);
    if ((*(_BYTE *)(v14 + 1) & 0x80) != 0)
    {
      v15 = 0;
      if (((1 << *(_DWORD *)(v14 + 400)) & 0xDD) != 0)
        v15 = sub_22EFDAC68(a4) == 0;
    }
    else
    {
      v15 = 0;
    }
    sub_22EC7C378((unsigned int *)a1, a2, a3, a4, v15);
  }
  sub_22EC7CD9C((_QWORD *)a1, a3);
  v88 = v92;
  v89 = v92;
  v90 = 8;
  v91 = 0;
  v20 = sub_22F27628C(a3);
  if (v20 != v21)
  {
    v22 = v20;
    v23 = v21;
    do
    {
      sub_22E3BA850((uint64_t)&v88, *(const void **)(v22 + 40));
      do
        v22 = *(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF8;
      while (v22 && ((*(_DWORD *)(v22 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v22 + 58) & 2) != 0));
    }
    while (v22 != v23);
  }
  v83 = v87;
  v84 = v87;
  v85 = 8;
  v86 = 0;
  v78 = v82;
  v79 = v82;
  v80 = 8;
  v81 = 0;
  sub_22EAF8D20((_QWORD *)a1, (unsigned int *)&v93, (unsigned int *)&v88, (uint64_t)&v83, (uint64_t)&v78, a3, a4, 1, 0);
  if (a3)
  {
    if ((*(_DWORD *)(a3 + 28) & 0x7F) == 0x14)
    {
      v35 = sub_22F3B55B8(a3);
      if (v35)
      {
        v36 = *(_QWORD *)(v35 + 104);
        if (v36)
        {
          v37 = sub_22F3B46CC(*(_QWORD *)(v35 + 104));
          *(_QWORD *)v113 = v114;
          *(_QWORD *)&v113[8] = v114;
          *(_QWORD *)&v113[16] = 8;
          *(_DWORD *)&v113[24] = 0;
          v108 = v112;
          v109 = v112;
          v110 = 8;
          v111 = 0;
          v38 = sub_22F276230(a3);
          if (v38 != v39)
          {
            v40 = v38;
            v41 = v39;
            do
            {
              v42 = *(const void **)(v40 + 40);
              if (!v37 || !sub_22EFDBA90(v37, *(_QWORD *)(v40 + 40), 1, 0, 1, 0))
                sub_22E3BA850((uint64_t)v113, v42);
              do
                v40 = *(_QWORD *)(v40 + 8) & 0xFFFFFFFFFFFFFFF8;
              while (v40 && ((*(_DWORD *)(v40 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v40 + 58) & 2) == 0));
            }
            while (v40 != v41);
          }
          v43 = sub_22F27628C(a3);
          if (v43 != v44)
          {
            v45 = v43;
            v46 = v44;
            do
            {
              v47 = *(const void **)(v45 + 40);
              if (!v37 || !sub_22EFDBA90(v37, *(_QWORD *)(v45 + 40), 0, 0, 1, 0))
                sub_22E3BA850((uint64_t)&v108, v47);
              do
                v45 = *(_QWORD *)(v45 + 8) & 0xFFFFFFFFFFFFFFF8;
              while (v45 && ((*(_DWORD *)(v45 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v45 + 58) & 2) != 0));
            }
            while (v45 != v46);
          }
          if (*(_DWORD *)&v113[20] != *(_DWORD *)&v113[24] || HIDWORD(v110) != v111)
          {
            v103 = v107;
            v104 = v107;
            v105 = 8;
            v106 = 0;
            v98 = (unsigned int *)v102;
            v99 = (unsigned int *)v102;
            v100 = 8;
            v101 = 0;
            sub_22EAF8D20((_QWORD *)a1, (unsigned int *)v113, (unsigned int *)&v108, (uint64_t)&v103, (uint64_t)&v98, a3, v36, 0, 1);
            if (v99 != v98)
              free(v99);
            if (v104 != v103)
              free(v104);
          }
          if (v109 != v108)
            free(v109);
          if (*(_QWORD *)&v113[8] != *(_QWORD *)v113)
            free(*(void **)&v113[8]);
        }
      }
    }
  }
  v98 = 0;
  v24 = *(_QWORD *)(*(_QWORD *)(a1 + 104) + 40);
  if (*(char *)(v24 + 95) < 0)
  {
    if (*(_QWORD *)(v24 + 80))
      goto LABEL_35;
  }
  else if (*(_BYTE *)(v24 + 95))
  {
LABEL_35:
    v25 = 1;
    goto LABEL_38;
  }
  v25 = (*(unsigned __int8 *)(*(_QWORD *)(a1 + 72) + 197) >> 5) & 1;
LABEL_38:
  v103 = v107;
  v104 = v107;
  v105 = 4;
  v106 = 0;
  if ((*(_DWORD *)(a4 + 28) & 0x7F) == 0x16)
  {
    v48 = (_QWORD **)sub_22F276134(a4);
    v49 = sub_22F2761B0(a4);
    if (v48 != (_QWORD **)v49)
    {
      v50 = (_QWORD **)v49;
      if (v25)
        v51 = &v103;
      else
        v51 = 0;
      do
      {
        v52 = *v48++;
        sub_22EAF9D2C((_QWORD *)a1, a3, v52, (unsigned int *)&v93, &v88, a4, (uint64_t *)&v98, (uint64_t)v51);
      }
      while (v48 != v50);
    }
  }
  else
  {
    if ((*(_DWORD *)(a4 + 28) & 0x7F) == 0x13)
      v26 = a4;
    else
      v26 = 0;
    v27 = *(_QWORD *)(v26 + 40) >= 8uLL && (*(_QWORD *)(v26 + 40) & 7) == 0;
    if (v27)
    {
      v28 = *(_QWORD *)(v26 + 120) & 0xFFFFFFFFFFFFFFF8;
      v29 = *(unsigned int *)(v28 + 24);
      if ((_DWORD)v29)
      {
        v30 = *(_QWORD ***)(v28 + 16);
        if (v25)
          v31 = &v103;
        else
          v31 = 0;
        v32 = 8 * v29;
        do
        {
          v33 = *v30++;
          sub_22EAF9D2C((_QWORD *)a1, a3, v33, (unsigned int *)&v93, &v88, a4, (uint64_t *)&v98, (uint64_t)v31);
          v32 -= 8;
        }
        while (v32);
      }
      sub_22EC7C378((unsigned int *)a1, a2, a3, a4, 0);
    }
  }
  if (HIDWORD(v105) == v106)
    goto LABEL_55;
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0x18C8u, 0, (uint64_t)&v108);
  v77 = (*(_DWORD *)(a4 + 28) & 0x7F) == 19;
  v53 = sub_22E8900C4((uint64_t)&v108, (int *)&v77);
  v54 = v53;
  if (*(_BYTE *)(v53 + 80))
  {
    v62 = *(unsigned __int8 **)(v53 + 32);
    if (!v62)
    {
      v62 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v54 + 40));
      *(_QWORD *)(v54 + 32) = v62;
    }
    v62[*v62 + 1] = 11;
    v61 = *(_BYTE **)(v54 + 32);
    goto LABEL_114;
  }
  if (*(_BYTE *)(v53 + 92))
  {
    v55 = (uint64_t *)(*(_QWORD *)v53 + 12784);
    v56 = *(_QWORD *)(v53 + 16);
    if (v56)
      v56 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v56 + 32))(v56);
    *(_QWORD *)v113 = v56;
    v57 = sub_22F2F1D6C(v55, (uint64_t *)v113)[1] + 32 * *(unsigned int *)(v54 + 88);
    v60 = *(unsigned __int8 **)(v57 + 8);
    v59 = (_QWORD *)(v57 + 8);
    v58 = v60;
    if (!v60)
    {
      v58 = (unsigned __int8 *)sub_22E3B8AAC(v59[1]);
      *v59 = v58;
    }
    v58[*v58 + 1] = 11;
    v61 = (_BYTE *)*v59;
LABEL_114:
    v63 = *v61;
    *v61 = v63 + 1;
    *(_QWORD *)&v61[8 * v63 + 16] = a4;
  }
  v76 = HIDWORD(v105) - v106;
  v64 = sub_22E89519C(v54, &v76);
  v65 = *(_OWORD *)(v64 + 9);
  *(_OWORD *)v113 = *(_OWORD *)v64;
  *(_OWORD *)&v113[9] = v65;
  v114[0] = 0;
  v114[48] = 0;
  if (*(_BYTE *)(v64 + 80))
    sub_22E907424((uint64_t)v114, v64 + 32);
  v115 = *(_QWORD *)(v64 + 88);
  sub_22E903BEC((unsigned int *)&v108);
  if (v104 == v103)
    v66 = (uint64_t *)((char *)&v105 + 4);
  else
    v66 = &v105;
  v67 = *(unsigned int *)v66;
  if ((_DWORD)v67)
  {
    v74 = 8 * v67;
    v68 = v104;
    while (*(_QWORD *)v68 >= 0xFFFFFFFFFFFFFFFELL)
    {
      v68 += 8;
      v74 -= 8;
      if (!v74)
        goto LABEL_133;
    }
  }
  else
  {
    v68 = v104;
  }
  v69 = &v104[8 * v67];
  if (v68 != v69)
  {
    v108 = 0;
    v108 = *(_BYTE **)v68;
    sub_22E890024((uint64_t)v113, (uint64_t *)&v108);
    v70 = 1;
LABEL_124:
    v71 = (unint64_t *)(v68 + 8);
    while (v71 != (unint64_t *)v69)
    {
      v73 = *v71++;
      v72 = v73;
      if (v73 <= 0xFFFFFFFFFFFFFFFDLL)
      {
        v108 = (_BYTE *)v72;
        sub_22E890024((uint64_t)v113, (uint64_t *)&v108);
        v68 = (char *)(v71 - 1);
        v27 = v70++ == 3;
        if (v27)
          break;
        goto LABEL_124;
      }
    }
  }
LABEL_133:
  sub_22E903BEC((unsigned int *)v113);
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0x1524u, 0, (uint64_t)v113);
  v75 = *(_QWORD *)(a1 + 88);
  v108 = v113;
  sub_22F364290(v75, a3, (void (*)(uint64_t, unint64_t **, double))sub_22EB0CFB4, (uint64_t)&v108);
  sub_22E903BEC((unsigned int *)v113);
LABEL_55:
  if (v104 != v103)
    free(v104);
  v34 = (uint64_t)v98;
  if (v98)
  {
    llvm::deallocate_buffer(*(llvm **)v98, (void *)(8 * v98[4]));
    MEMORY[0x2348A0E9C](v34, 0x1020C405AF6BDC9);
  }
  if (v79 != v78)
    free(v79);
  if (v84 != v83)
    free(v84);
  if (v89 != v88)
    free(v89);
  if (v94 != v93)
    free(v94);
}

uint64_t sub_22EAF9D2C(_QWORD *a1, unint64_t a2, _QWORD *a3, unsigned int *a4, _QWORD *a5, unint64_t a6, uint64_t *a7, uint64_t a8)
{
  int v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void **v29;
  uint64_t v30;
  unsigned int *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void **v48;
  uint64_t v49;
  unsigned int *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void **v57;
  uint64_t v58;
  unsigned int *v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  _QWORD *v65;
  const void *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  BOOL v70;
  uint64_t v71;
  __int128 v72;

  v15 = *(_DWORD *)(a6 + 28) & 0x7F;
  if (v15 == 19)
  {
    v16 = *(_QWORD *)(a6 + 104);
  }
  else if (v15 == 22)
  {
    v16 = a6;
  }
  else
  {
    v16 = 0;
  }
  v17 = sub_22F3B46CC(v16);
  if (!sub_22F32CAA0((uint64_t)a3))
  {
LABEL_25:
    v68 = a8;
    if (*(_DWORD *)(a1[9] + 400) > 4u
      || ((v28 = sub_22E3CB704(*(llvm::StringMapImpl **)(a1[11] + 15192), "forwardInvocation", 0x11uLL),
           v29 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)a4, (void *)(v28 | 2)),
           v30 = *((_QWORD *)a4 + 1),
           v30 != *(_QWORD *)a4)
        ? (v31 = a4 + 4)
        : (v31 = a4 + 5),
          v29 == (void **)(v30 + 8 * *v31)))
    {
      v32 = v16;
      v33 = 0;
    }
    else
    {
      v34 = sub_22E3CB704(*(llvm::StringMapImpl **)(a1[11] + 15192), "NSProxy", 7uLL);
      v32 = v16;
      v33 = sub_22F3B4BA0(v16, v34);
    }
    v35 = a3[13];
    if (!v35)
    {
      sub_22E3CD31C((uint64_t *)(a3[12] + 88), a3[12]);
      v35 = a3[13];
    }
    if (v35 < 8)
      v36 = 0;
    else
      v36 = *(_QWORD **)(v35 & 0xFFFFFFFFFFFFFFF8);
    if (v36 != a3)
    {
      if (!v35)
      {
        sub_22E3CD31C((uint64_t *)(a3[12] + 88), a3[12]);
        v35 = a3[13];
      }
      if (v35 >= 8)
      {
        v37 = *(_QWORD **)(v35 & 0xFFFFFFFFFFFFFFF8);
        if (v37)
          a3 = v37;
      }
    }
    v66 = a3;
    if (v33 || (v38 = sub_22F276230((uint64_t)a3), v38 == v39))
    {
      v70 = 0;
    }
    else
    {
      v54 = v38;
      v55 = v39;
      v70 = 0;
      do
      {
        if ((*(_QWORD *)(v54 + 56) & 0x3000000) != 0x2000000 && (*(_QWORD *)(v54 + 56) & 0x80000) == 0)
        {
          v57 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)a4, *(void **)(v54 + 40));
          v58 = *((_QWORD *)a4 + 1);
          v59 = v58 == *(_QWORD *)a4 ? a4 + 5 : a4 + 4;
          if (v57 == (void **)(v58 + 8 * *v59)
            && (!v17 || !sub_22EFDBA90(v17, *(_QWORD *)(v54 + 40), 1, 0, 1, 0)))
          {
            v60 = sub_22EFDBA90(v32, *(_QWORD *)(v54 + 40), 1, 1, 0, 0);
            if ((!v60 || v15 != 19 && (*(_BYTE *)(v60 + 58) & 8) == 0)
              && sub_22F1CF68C(*(_QWORD *)(a1[13] + 32), 0x1BAFu, *(_DWORD *)(a2 + 24), a1[13]) != 1)
            {
              if (v68)
              {
                if (v70)
                {
                  v70 = 1;
                }
                else
                {
                  v61 = *(_QWORD *)(a1[11] + 15088);
                  v62 = *(void **)(v61 + 224);
                  v63 = *(_QWORD *)(v61 + 232);
                  v72 = *(_OWORD *)(v61 + 240);
                  v70 = sub_22EFC93E8(v54, v62, v63, (uint64_t *)&v72, 0, 0) != 3;
                }
              }
              else
              {
                sub_22EAF91A4(a1, a2, v54, 0x1BAFu, (uint64_t)v66);
              }
            }
          }
        }
        do
          v54 = *(_QWORD *)(v54 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v54 && ((*(_DWORD *)(v54 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v54 + 58) & 2) == 0));
      }
      while (v54 != v55);
    }
    v40 = sub_22F27628C((uint64_t)v66);
    if (v40 != v41)
    {
      v46 = v40;
      v47 = v41;
      do
      {
        if ((*(_QWORD *)(v46 + 56) & 0x3000000) != 0x2000000)
        {
          v48 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)a5, *(void **)(v46 + 40));
          v49 = a5[1];
          v50 = v49 == *a5 ? (unsigned int *)((char *)a5 + 20) : (unsigned int *)(a5 + 2);
          if (v48 == (void **)(v49 + 8 * *v50)
            && (!v17 || !sub_22EFDBA90(v17, *(_QWORD *)(v46 + 40), 0, 0, 1, 0))
            && (v15 != 19 || !sub_22EFDBA90(v32, *(_QWORD *)(v46 + 40), 0, 1, 0, 0))
            && sub_22F1CF68C(*(_QWORD *)(a1[13] + 32), 0x1BAFu, *(_DWORD *)(a2 + 24), a1[13]) != 1)
          {
            if (v68)
            {
              if (v70)
              {
                v70 = 1;
              }
              else
              {
                v51 = *(_QWORD *)(a1[11] + 15088);
                v52 = *(void **)(v51 + 224);
                v53 = *(_QWORD *)(v51 + 232);
                v72 = *(_OWORD *)(v51 + 240);
                v70 = sub_22EFC93E8(v46, v52, v53, (uint64_t *)&v72, 0, 0) != 3;
              }
            }
            else
            {
              sub_22EAF91A4(a1, a2, v46, 0x1BAFu, (uint64_t)v66);
            }
          }
        }
        do
          v46 = *(_QWORD *)(v46 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v46 && ((*(_DWORD *)(v46 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v46 + 58) & 2) != 0));
      }
      while (v46 != v47);
    }
    if (v70)
      sub_22E3BA850(v68, v66);
    result = sub_22F259248((uint64_t)v66);
    if ((uint64_t *)result != v42)
    {
      v43 = (uint64_t *)result;
      v44 = v42;
      do
      {
        v45 = *v43++;
        result = sub_22EAF9D2C(a1, a2, v45, a4, a5, a6, a7, v68);
      }
      while (v43 != v44);
    }
    return result;
  }
  v69 = v16;
  v18 = *a7;
  if (!*a7)
  {
    v65 = a3;
    v18 = operator new();
    *(_QWORD *)v18 = 0;
    *(_QWORD *)(v18 + 8) = 0;
    *(_DWORD *)(v18 + 16) = 0;
    v19 = *a7;
    *a7 = v18;
    if (v19)
    {
      llvm::deallocate_buffer(*(llvm **)v19, (void *)(8 * *(unsigned int *)(v19 + 16)));
      MEMORY[0x2348A0E9C](v19, 0x1020C405AF6BDC9);
      v18 = *a7;
    }
    if (v17)
    {
      v67 = a8;
      do
      {
        v20 = (uint64_t *)sub_22F276134(v17);
        v21 = sub_22F2761B0(v17);
        while (v20 != (uint64_t *)v21)
        {
          v22 = *v20++;
          sub_22EB0C800(v22, v18);
        }
        v17 = sub_22F3B46CC(v17);
      }
      while (v17);
      v18 = *a7;
      a3 = v65;
      a8 = v67;
    }
    else
    {
      a3 = v65;
    }
  }
  v23 = a3[5];
  if ((v23 & 7) != 0)
    v24 = 0;
  else
    v24 = v23 & 0xFFFFFFFFFFFFFFF8;
  v71 = 0;
  *(_QWORD *)&v72 = v24;
  result = sub_22F275208((uint64_t *)v18, &v72, &v71);
  v26 = *(unsigned int *)(v18 + 16);
  if ((_DWORD)result)
    v27 = v71;
  else
    v27 = *(_QWORD *)v18 + 8 * v26;
  if (v27 == *(_QWORD *)v18 + 8 * v26)
  {
    v17 = 0;
    v16 = v69;
    goto LABEL_25;
  }
  return result;
}

unint64_t sub_22EAFA330(uint64_t a1, int a2, uint64_t *a3, int *a4, uint64_t **a5, uint64_t a6, unsigned int a7)
{
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41[24];
  unsigned int v42[24];
  unsigned int v43[24];
  unint64_t *v44;
  uint64_t v45;
  _QWORD v46[10];

  v46[8] = *MEMORY[0x24BDAC8D0];
  v44 = v46;
  v45 = 0x800000000;
  if (a7)
  {
    v12 = a7;
    while (1)
    {
      v13 = *(_QWORD *)(a1 + 216);
      v14 = *(_WORD *)(v13 + 8) & 0x7F;
      v15 = -40;
      if (v14 > 0x46)
      {
        if (v14 == 83)
          goto LABEL_18;
        if (v14 == 71)
        {
          v15 = -56;
          goto LABEL_18;
        }
        if (v14 != 81)
          goto LABEL_14;
      }
      else
      {
        if (v14 > 0x18)
          goto LABEL_13;
        if (v14 == 16)
          goto LABEL_6;
        if (((1 << v14) & 0x1066) == 0)
        {
          if (v14 == 24)
          {
LABEL_6:
            v15 = -48;
            goto LABEL_18;
          }
LABEL_13:
          if (v14 == 70)
          {
            v15 = -64;
            goto LABEL_18;
          }
LABEL_14:
          if (v14 - 52 < 6)
          {
            v15 = -72;
          }
          else
          {
            v15 = -64;
            if (v14 - 33 >= 5)
              v15 = -48;
          }
        }
      }
LABEL_18:
      v16 = *(_QWORD *)(a1 + 3344);
      v17 = *a3;
      v18 = *a4;
      if (sub_22EFB9D84(v13 + v15))
        v19 = 1;
      else
        v19 = 2;
      v20 = sub_22EC65CE0((_QWORD *)a1, v16, v17, v18, 0, v19);
      if (!v20)
        goto LABEL_41;
      v21 = v20;
      v22 = *(_DWORD *)(v20 + 28);
      if ((v22 & 0x7F) == 0x16)
        goto LABEL_28;
      if ((v22 & 0x7Fu) - 42 < 0xFFFFFFFD
        || (v23 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v20 + 80) & 0xFFFFFFFFFFFFFFF8)
                                        + ((2 * *(_QWORD *)(v20 + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0),
            *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 33 >= 2))
      {
        sub_22E8FCA40((_QWORD *)a1, a2, 0x1215u, 0, (uint64_t)v43);
        sub_22E8BAE44((uint64_t)v43, a3);
        sub_22E903BEC(v43);
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0x6Du, 0, (uint64_t)v42);
        sub_22E903BEC(v42);
        v22 = *(_DWORD *)(v21 + 28);
LABEL_28:
        if ((v22 & 0x7F) == 0x16)
        {
          v24 = *a3;
          v40 = *a3;
          v25 = *(_QWORD *)(v21 + 40);
          if ((v25 & 7) != 0)
            v26 = 0;
          else
            v26 = v25 & 0xFFFFFFFFFFFFFFF8;
          if (v26 != v24)
            v40 = v26;
          v27 = *a5;
          if (*a5)
          {
            v28 = sub_22F3B4828((uint64_t *)v21);
            if (v28)
            {
              if (sub_22EAF4F38((_QWORD *)a1, v28, (uint64_t)v27, 0))
                v27 = 0;
            }
            else
            {
              v29 = *(_QWORD *)(v21 + 120);
              if (!v29)
              {
                sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v21 + 96) + 88), *(_QWORD *)(v21 + 96));
                v29 = *(_QWORD *)(v21 + 120);
              }
              if (v29 >= 8)
              {
                v30 = *(_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF8);
                if (v30)
                {
                  sub_22E8FCA40((_QWORD *)a1, *a4, 0x100Cu, 0, (uint64_t)v43);
                  v31 = sub_22E8BAE44((uint64_t)v43, &v40);
                  v39 = *v27;
                  sub_22E8906A0(v31, &v39);
                  sub_22E903BEC(v43);
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v30 + 24), 0x15A7u, 0, (uint64_t)v43);
                  sub_22E8BAE44((uint64_t)v43, &v40);
                  sub_22E903BEC(v43);
                  v27 = 0;
                }
              }
            }
          }
          v32 = 1;
        }
        else
        {
LABEL_41:
          v21 = 0;
          v32 = 0;
          v40 = *a3;
          v27 = *a5;
        }
        v33 = sub_22F3B5B14(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 216), a2, v40, (uint64_t)v27, v21, *a4, 0);
        v33[10] = *a4 | ((unint64_t)*a4 << 32);
        if (v32)
          sub_22EA084D0(a1, (unint64_t)v33, (_BYTE *)v21, 1);
        sub_22EA0483C(a1, (unint64_t)v33, *(uint64_t **)(a1 + 3344), 1);
        sub_22F32B4DC((_QWORD *)a1, (uint64_t)v33);
        v34 = v45;
        if (v45 >= (unint64_t)HIDWORD(v45))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v34 = v45;
        }
        v44[v34] = (unint64_t)v33;
        LODWORD(v45) = v45 + 1;
        goto LABEL_50;
      }
      if (*(unsigned __int8 *)(v23 + 16) - 33 > 1)
        goto LABEL_28;
      sub_22E8FCA40((_QWORD *)a1, a2, 0x19C8u, 0, (uint64_t)v43);
      sub_22E8BAE44((uint64_t)v43, a3);
      sub_22E903BEC(v43);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0x6Du, 0, (uint64_t)v41);
      sub_22E903BEC(v41);
LABEL_50:
      ++a5;
      ++a4;
      ++a3;
      if (!--v12)
      {
        v35 = v44;
        v36 = v45;
        goto LABEL_55;
      }
    }
  }
  v36 = 0;
  v35 = v46;
LABEL_55:
  v37 = sub_22EA2D7B4((_QWORD *)a1, v35, v36);
  if (v44 != v46)
    free(v44);
  return v37;
}

uint64_t sub_22EAFA7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t result;
  unsigned int v14;
  unsigned int v15;
  uint64_t v17;
  unsigned int v18;
  BOOL v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v40;
  unsigned int v42;
  unsigned int v43;
  int v44;
  int v45;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)((a4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0);
  if (v4 == v5)
    return 1;
  if ((_DWORD)a2 == 1
    || (sub_22F1110EC(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0), 0) & 1) != 0|| (sub_22F1110EC(v5, 0) & 1) != 0)
  {
    return 0;
  }
  v8 = sub_22EF5CDF0(a1, v4);
  v10 = v9;
  if (v8 != sub_22EF5CDF0(a1, v5) || v10 != v11)
    return 0;
  v14 = *(unsigned __int8 *)(v4 + 16) - 55;
  v15 = *(unsigned __int8 *)(v5 + 16) - 55;
  result = v15 < 2 && v14 < 2;
  if (v14 >= 2 && v15 >= 2)
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0);
    v18 = *(_DWORD *)(v17 + 16);
    if (v17)
      v19 = v18 == 11;
    else
      v19 = 0;
    if (v19)
    {
      if (((v18 >> 19) & 0x1FF) - 166 >= 0x35)
        goto LABEL_45;
    }
    else if (v17 && v18 == 44)
    {
      v20 = sub_22F114198(*(_QWORD *)(v17 + 24));
      if ((*(_BYTE *)(v20 + 74) & 1) == 0 && *(_QWORD *)(v20 + 128) < 8uLL)
      {
LABEL_45:
        if (*(_BYTE *)(v4 + 16) != 45)
          return 0;
        if (*(_BYTE *)(v5 + 16) != 45)
          return 0;
        v28 = sub_22F114198(*(_QWORD *)(v4 + 24));
        v29 = sub_22F114198(*(_QWORD *)(v5 + 24));
        if (((*(_DWORD *)(v28 + 72) & 0xE000) == 0x4000) != ((*(_DWORD *)(v29 + 72) & 0xE000) == 0x4000))
          return 0;
        v30 = v29;
        if ((*(_DWORD *)(v28 + 28) & 0x7Fu) - 35 <= 2)
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v28 + 104) + 96), *(_QWORD *)(v28 + 104));
          if ((**(_QWORD **)(v28 + 128) & 0x100) == 0)
            return 0;
        }
        if ((*(_DWORD *)(v30 + 28) & 0x7Fu) - 35 <= 2)
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v30 + 104) + 96), *(_QWORD *)(v30 + 104));
          if ((**(_QWORD **)(v30 + 128) & 0x100) == 0)
            return 0;
        }
        v31 = sub_22EF5CDF0(a1, v4);
        v33 = v32;
        v35 = sub_22EF5CDF0(a1, v5);
        result = 0;
        if (v31 != v35 || v33 != v34)
          return result;
        v36 = sub_22EFC3B90(v28);
        v37 = sub_22EFC3B90(v30);
        v38 = v37;
        if (v36 && v37)
        {
LABEL_56:
          result = sub_22EAFA7D0(a1, a2, *(_QWORD *)(v36 + 48), *(_QWORD *)(v38 + 48));
          if (!(_DWORD)result)
            return result;
          do
            v36 = *(_QWORD *)(v36 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v36 && (*(_DWORD *)(v36 + 28) & 0x7Fu) - 49 > 2);
          while (1)
          {
            v38 = *(_QWORD *)(v38 + 8) & 0xFFFFFFFFFFFFFFF8;
            if (!v38)
              break;
            if ((*(_DWORD *)(v38 + 28) & 0x7Fu) - 49 <= 2)
            {
              if (v36)
                goto LABEL_56;
              break;
            }
          }
        }
        return (v36 | v38) == 0;
      }
    }
    else
    {
      v21 = v18 > 0x27u;
      v22 = (1 << v18) & 0x8180001600;
      if (v21 || v22 == 0)
        goto LABEL_45;
    }
    v24 = *(_QWORD *)(*(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF0);
    v25 = *(_DWORD *)(v24 + 16);
    if (v24)
      v26 = v25 == 11;
    else
      v26 = 0;
    if (v26)
    {
      if (((v25 >> 19) & 0x1FF) - 166 >= 0x35)
        goto LABEL_45;
    }
    else if (v24 && v25 == 44)
    {
      v27 = sub_22F114198(*(_QWORD *)(v24 + 24));
      if ((*(_BYTE *)(v27 + 74) & 1) == 0 && *(_QWORD *)(v27 + 128) <= 7uLL)
        goto LABEL_45;
    }
    else
    {
      v21 = v25 > 0x27u;
      v40 = (1 << v25) & 0x8180001600;
      if (v21 || v40 == 0)
        goto LABEL_45;
    }
    v42 = sub_22F110F44(v4);
    v43 = sub_22F110F44(v5);
    if (v42 <= 2)
      v44 = 2;
    else
      v44 = v42;
    if (v43 <= 2)
      v45 = 2;
    else
      v45 = v43;
    if (v42 == 4)
      v44 = 5;
    if (v43 == 4)
      v45 = 5;
    return v44 == v45;
  }
  return result;
}

uint64_t sub_22EAFAB98(uint64_t result, int8x16_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int8x16_t *v13;
  int8x16_t *v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  BOOL v24;
  int v25;
  unint64_t v26;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  int8x16_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  __int128 v37;

  v4 = result;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = v5 & 0xFFFFFFFFFFFFFFF8;
  if ((v5 & 4) != 0)
    v6 = *(_QWORD *)v6;
  if (v6)
    v7 = (*(_WORD *)(v6 + 8) & 0x7F) == 19;
  else
    v7 = 0;
  if (v7)
  {
    v8 = *(_QWORD *)(v6 - 8);
    if (v8 >= 8 && (v8 & 7) == 0)
    {
      v10 = a2->i64[1];
      v11 = (v10 >> 1) & 3;
      if (v11 <= 1)
        a2->i64[1] = v10 & 0xFFFFFFFFFFFFFFF9 | (2 * v11 + 2);
    }
  }
  if (a2->i64[0] < 8uLL)
  {
    v12 = a2->i64[1] & 7;
    a2->i64[0] |= a3;
    a2->i64[1] = v12;
    return result;
  }
  v13 = 0;
  while (1)
  {
    v14 = a2;
    if ((*(_BYTE *)(*(_QWORD *)(v4 + 72) + 240) & 0xE0) == 0)
      break;
LABEL_19:
    a2 = (int8x16_t *)(v14->i64[1] & 0xFFFFFFFFFFFFFFF8);
    if (!a2)
    {
      result = sub_22E3CD3D4(v4 + 8360, 16, 3);
      if (v13)
      {
        *(_QWORD *)result = v13->i64[0];
        *(_QWORD *)(result + 8) = v13->i64[1];
        v33.i64[0] = a3;
        v33.i64[1] = result;
        *v13 = vorrq_s8(vandq_s8(*v13, (int8x16_t)vdupq_n_s64(7uLL)), v33);
      }
      else
      {
        *(_QWORD *)result = a3 & 0xFFFFFFFFFFFFFFFBLL;
        *(_QWORD *)(result + 8) = 0;
        v14->i64[1] = v14->i64[1] & 7 | result;
      }
      return result;
    }
  }
  v15 = sub_22EAF7218(v4, a3, a2->i64[0] & 0xFFFFFFFFFFFFFFF8, 1);
  if (!v15)
    goto LABEL_41;
  v16 = *(_QWORD *)(a3 + 16);
  v17 = v16 & 0xFFFFFFFFFFFFFFF8;
  if ((v16 & 4) != 0)
    v17 = *(_QWORD *)v17;
  v18 = v14->i64[0];
  v19 = v14->i64[0] & 0xFFFFFFFFFFFFFFF8;
  if (v17)
    v20 = (*(_WORD *)(v17 + 8) & 0x7F) == 23;
  else
    v20 = 0;
  v21 = v20;
  v22 = *(_QWORD *)(v19 + 16);
  v23 = v22 & 0xFFFFFFFFFFFFFFF8;
  if ((v22 & 4) != 0)
    v23 = *(_QWORD *)v23;
  v24 = v23 && (*(_WORD *)(v23 + 8) & 0x7F) == 23;
  v25 = v24;
  if (v21 != v25 || (v21 & v25 & 1) == 0 && (v26 = sub_22EFDC9F0(a3), v26 != sub_22EFDC9F0(v19)))
  {
LABEL_41:
    if ((*(_BYTE *)(a3 + 58) & 0x20) == 0)
      v14->i64[0] |= 4uLL;
    if ((v15 & sub_22F3B120C(a3)) == 1 && v13 == 0)
    {
      if (sub_22F3B120C(v14->i64[0] & 0xFFFFFFFFFFFFFFF8))
        v13 = 0;
      else
        v13 = v14;
    }
    if ((v15 & sub_22EFCA12C(a3)) == 1 && v13 == 0)
    {
      v29 = v14->i64[0] & 0xFFFFFFFFFFFFFFF8;
      v30 = *(_QWORD *)(*(_QWORD *)(v4 + 88) + 15088);
      v31 = *(void **)(v30 + 224);
      v32 = *(_QWORD *)(v30 + 232);
      v37 = *(_OWORD *)(v30 + 240);
      if ((int)sub_22EFC93E8(v29, v31, v32, (uint64_t *)&v37, 0, 0) >= 2)
        v13 = 0;
      else
        v13 = v14;
    }
    goto LABEL_19;
  }
  if ((*(_BYTE *)(a3 + 58) & 0x20) != 0)
    *(_QWORD *)(v19 + 56) |= 0x200000uLL;
  else
    v14->i64[0] = v18 | 4;
  if (sub_22F3B120C(a3) && !sub_22F3B120C(v19))
    v14->i64[0] = v14->i64[0] & 7 | a3;
  result = sub_22EFCA12C(a3);
  if ((_DWORD)result)
  {
    v34 = *(_QWORD *)(*(_QWORD *)(v4 + 88) + 15088);
    v35 = *(void **)(v34 + 224);
    v36 = *(_QWORD *)(v34 + 232);
    v37 = *(_OWORD *)(v34 + 240);
    result = sub_22EFC93E8(v19, v35, v36, (uint64_t *)&v37, 0, 0);
    if ((int)result <= 1)
      v14->i64[0] = v14->i64[0] & 7 | a3;
  }
  return result;
}

uint64_t sub_22EAFAEBC(uint64_t result, _QWORD *a2, int a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[2];
  _QWORD v19[3];

  v7 = result;
  v8 = a2[2];
  v9 = v8 & 0xFFFFFFFFFFFFFFF8;
  if ((v8 & 4) != 0)
    v9 = *(_QWORD *)v9;
  v10 = *(_WORD *)(v9 + 8) & 0x7F;
  v11 = -40;
  if (v10 > 0x46)
  {
    if (v10 == 83)
      goto LABEL_19;
    if (v10 == 71)
    {
      v11 = -56;
      goto LABEL_19;
    }
    if (v10 != 81)
    {
LABEL_14:
      if (v10 - 52 < 6)
      {
        v11 = -72;
      }
      else
      {
        v11 = -48;
        if (v10 - 33 < 5)
          v11 = -64;
      }
    }
  }
  else
  {
    if (v10 > 0x18)
      goto LABEL_13;
    if (v10 == 16)
    {
LABEL_6:
      v11 = -48;
      goto LABEL_19;
    }
    if (((1 << v10) & 0x1066) == 0)
    {
      if (v10 == 24)
        goto LABEL_6;
LABEL_13:
      if (v10 == 70)
      {
        v11 = -64;
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
LABEL_19:
  if ((*(_BYTE *)(v9 + v11 + 28) & 0x80) == 0)
  {
    v12 = *(_QWORD *)(result + 8);
    if (v12)
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v12 + 232))(v12, a2[5]);
    v19[0] = a2[5];
    v17 = 0;
    v13 = sub_22F2BB328((uint64_t *)(v7 + 8560), v19, &v17);
    v14 = v17;
    if (!v13)
      v14 = *(_QWORD *)(v7 + 8560) + 40 * *(unsigned int *)(v7 + 8576);
    if (*(_QWORD *)(v7 + 8560) + 40 * *(unsigned int *)(v7 + 8576) == v14)
    {
      v17 = a2[5];
      memset(v18, 0, sizeof(v18));
      sub_22F2BB6A8(v7 + 8560, &v17, v18, (uint64_t)v19);
      v14 = v19[0];
    }
    v15 = 0x200000;
    if (!a3)
      v15 = 0;
    a2[7] = a2[7] & 0xFFFFFFFFFFDFFFFFLL | v15;
    v16 = 24;
    if (a4)
      v16 = 8;
    return sub_22EAFAB98(v7, (int8x16_t *)(v14 + v16), (uint64_t)a2);
  }
  return result;
}

BOOL sub_22EAFB090(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6)
{
  uint64_t v12;
  int v13;
  _BOOL8 result;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v12 = *(_QWORD *)(a1 + 8);
  if (v12)
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v12 + 232))(v12, a2);
  v26 = a2;
  v27 = 0;
  v13 = sub_22F2BB328((uint64_t *)(a1 + 8560), &v26, &v27);
  result = 0;
  if (v13 && v27 != *(_QWORD *)(a1 + 8560) + 40 * *(unsigned int *)(a1 + 8576))
  {
    v15 = (uint64_t *)(v27 + 8);
    v16 = (uint64_t *)(v27 + 24);
    if (a4)
      v17 = (uint64_t *)(v27 + 8);
    else
      v17 = (uint64_t *)(v27 + 24);
    do
    {
      v18 = *v17 & 0xFFFFFFFFFFFFFFF8;
      if (v18 && (*(_BYTE *)(v18 + 8) & 4) == 0 && sub_22EAFB270(v18, a6))
      {
        v19 = *v17;
        v20 = *(unsigned int *)(a3 + 8);
        if (v20 >= *(unsigned int *)(a3 + 12))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v20 = *(unsigned int *)(a3 + 8);
        }
        *(_QWORD *)(*(_QWORD *)a3 + 8 * v20) = v19 & 0xFFFFFFFFFFFFFFF8;
        ++*(_DWORD *)(a3 + 8);
      }
      v17 = (uint64_t *)(v17[1] & 0xFFFFFFFFFFFFFFF8);
    }
    while (v17);
    v21 = *(_DWORD *)(a3 + 8);
    if (v21)
    {
      return v21 != 1;
    }
    else if (a5)
    {
      if (a4)
        v22 = v16;
      else
        v22 = v15;
      do
      {
        v23 = *v22 & 0xFFFFFFFFFFFFFFF8;
        if (v23 && (*(_BYTE *)(v23 + 8) & 4) == 0 && sub_22EAFB270(v23, a6))
        {
          v24 = *v22;
          v25 = *(unsigned int *)(a3 + 8);
          if (v25 >= *(unsigned int *)(a3 + 12))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v25 = *(unsigned int *)(a3 + 8);
          }
          *(_QWORD *)(*(_QWORD *)a3 + 8 * v25) = v24 & 0xFFFFFFFFFFFFFFF8;
          ++*(_DWORD *)(a3 + 8);
        }
        v22 = (uint64_t *)(v22[1] & 0xFFFFFFFFFFFFFFF8);
      }
      while (v22);
      return *(_DWORD *)(a3 + 8) > 1u;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EAFB270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (!a2)
    return 1;
  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v2 && (*(_DWORD *)(v2 + 16) & 0xFF800FF) == 114819083)
    return 1;
  v6 = sub_22F272660(a2);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  if ((v7 & 4) != 0)
    v8 = *(_QWORD *)v8;
  if (v8 && (*(_WORD *)(v8 + 8) & 0x7F) == 0x17)
    return 1;
  v9 = sub_22EFDC9F0(a1);
  if (!v9)
    return 1;
  v10 = v9;
  if (v9 == v6)
    return 1;
  if (v6)
  {
    v11 = v6;
    while (1)
    {
      v12 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v10 + 32))(v10);
      if (v12 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)v11 + 32))(v11))
        break;
      v13 = sub_22F3B46CC(v11);
      v11 = v13;
      if (!v13 || v13 == v10)
      {
        if (v13)
          return 1;
        return sub_22E595B08(v6, v10);
      }
    }
    return 1;
  }
  return sub_22E595B08(v6, v10);
}

uint64_t sub_22EAFB384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[5];

  v23[4] = *MEMORY[0x24BDAC8D0];
  v21 = v23;
  v23[0] = a3;
  v22 = 0x400000001;
  v9 = *(unsigned int *)(a6 + 8);
  if ((_DWORD)v9)
  {
    v12 = *(uint64_t **)a6;
    v13 = 8 * v9;
    do
    {
      v14 = *v12;
      if (*v12 != a3 && !sub_22F3089DC(*v12))
      {
        v15 = v22;
        if (v22 >= (unint64_t)HIDWORD(v22))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v15 = v22;
        }
        *((_QWORD *)v21 + v15) = v14;
        LODWORD(v22) = v22 + 1;
      }
      ++v12;
      v13 -= 8;
    }
    while (v13);
    if (v22 > 1)
      sub_22EAFB528(a1, (uint64_t **)&v21, a2, a4, a5);
  }
  v19 = a2;
  v20 = 0;
  v16 = 1;
  if (sub_22F2BB328((uint64_t *)(a1 + 8560), &v19, &v20)
    && v20 != *(_QWORD *)(a1 + 8560) + 40 * *(unsigned int *)(a1 + 8576))
  {
    v17 = 8;
    if ((*(_BYTE *)(a3 + 58) & 2) == 0)
      v17 = 24;
    v16 = (*(unsigned __int8 *)(v20 + v17) >> 2) & 1;
  }
  if (v21 != v23)
    free(v21);
  return v16;
}

uint64_t sub_22EAFB528(uint64_t result, uint64_t **a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  _QWORD *v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  int v24;
  _QWORD *v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35[24];
  uint64_t v36;
  uint64_t v37;

  v5 = a4;
  v7 = (_QWORD *)result;
  v36 = a4;
  v37 = a3;
  if (a5
    && (result = sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(result + 104) + 32), 0x1B59u, a4, *(_QWORD *)(result + 104)),
        (_DWORD)result != 1))
  {
    v27 = *((_DWORD *)a2 + 2);
    if (v27 == 1)
      return result;
    v28 = 1;
    while (1)
    {
      result = sub_22EAF7218((uint64_t)v7, **a2, (*a2)[v28], 1);
      if ((result & 1) == 0)
        break;
      if (v27 == (_DWORD)++v28)
        return result;
    }
    if ((*(_WORD *)(v7[9] + 148) & 2) == 0)
      goto LABEL_46;
    v8 = 1;
  }
  else
  {
    v8 = 0;
  }
  v9 = *((_DWORD *)a2 + 2);
  if (v9 == 1)
  {
LABEL_5:
    if ((v8 & 1) != 0)
      goto LABEL_46;
    return result;
  }
  v10 = 1;
  while (1)
  {
    result = sub_22EAF7218((uint64_t)v7, **a2, (*a2)[v10], 0);
    if ((result & 1) != 0)
      goto LABEL_34;
    v11 = **a2;
    if ((*(_BYTE *)(v11 + 58) & 2) == 0)
      break;
    v12 = (*a2)[v10];
    v13 = sub_22EFDBD9C(**a2);
    result = sub_22EFDBD9C(v12);
    if (v13 != (_DWORD)result)
      break;
    v14 = *(_QWORD *)(v11 + 40) & 0xFFFFFFFFFFFFFFF8;
    if ((*(_QWORD *)(v11 + 40) & 7) != 1 || v14 == 0)
      break;
    v16 = *(_QWORD *)(v14 + 16);
    if (*(_DWORD *)v16 != 6)
      break;
    v17 = *(_DWORD *)(v16 + 16);
    v18 = *(unsigned __int16 *)(v16 + 20);
    if (v17 != 1735288172 || v18 != 26740)
      break;
    v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 80) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v21 = *(_DWORD *)(v20 + 16);
    if (v20)
      v22 = v21 == 11;
    else
      v22 = 0;
    if (v22)
    {
      if (((*(_DWORD *)(v20 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
        break;
    }
    else if (v20 && v21 == 44)
    {
      v23 = sub_22F114198(*(_QWORD *)(v20 + 24));
      if ((*(_BYTE *)(v23 + 74) & 1) == 0 && *(_QWORD *)(v23 + 128) <= 7uLL)
        break;
      result = sub_22F114198(*(_QWORD *)(v20 + 24));
      if ((*(_BYTE *)(result + 76) & 0x80) != 0)
        break;
    }
    else if (v21 != 9)
    {
      break;
    }
LABEL_34:
    if (v9 == (_DWORD)++v10)
      goto LABEL_5;
  }
  if ((*(_WORD *)(v7[9] + 148) & 2) != 0)
  {
    sub_22E8FCA40(v7, v5, 0xA6Cu, 0, (uint64_t)v35);
    v29 = sub_22E894538((uint64_t)v35, &v37);
    sub_22E8906A0(v29, &v36);
    sub_22E903BEC(v35);
    v30 = 106;
  }
  else
  {
    if (!v8)
    {
      v24 = v5;
      v25 = v7;
      v26 = 6756;
      goto LABEL_47;
    }
LABEL_46:
    v24 = v5;
    v25 = v7;
    v26 = 7001;
LABEL_47:
    sub_22E8FCA40(v25, v24, v26, 0, (uint64_t)v35);
    v31 = sub_22E894538((uint64_t)v35, &v37);
    sub_22E8906A0(v31, &v36);
    sub_22E903BEC(v35);
    v30 = 114;
  }
  sub_22E8FCA40(v7, *(_DWORD *)(**a2 + 24), v30, 0, (uint64_t)v35);
  v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)**a2 + 16))(**a2);
  sub_22E8906A0((uint64_t)v35, &v34);
  result = (uint64_t)sub_22E903BEC(v35);
  v32 = *((_DWORD *)a2 + 2);
  if (v32 != 1)
  {
    v33 = 1;
    do
    {
      sub_22E8FCA40(v7, *(_DWORD *)((*a2)[v33] + 24), 0x60u, 0, (uint64_t)v35);
      v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*a2)[v33] + 16))((*a2)[v33]);
      sub_22E8906A0((uint64_t)v35, &v34);
      result = (uint64_t)sub_22E903BEC(v35);
      ++v33;
    }
    while (v32 != (_DWORD)v33);
  }
  return result;
}

unint64_t sub_22EAFB888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8;
  int v9;
  unint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v8 = *(_QWORD *)(a1 + 8);
  if (v8)
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v8 + 232))(v8, a2);
  v13 = a2;
  v14 = 0;
  v9 = sub_22F2BB328((uint64_t *)(a1 + 8560), &v13, &v14);
  result = 0;
  if (v9 && v14 != *(_QWORD *)(a1 + 8560) + 40 * *(unsigned int *)(a1 + 8576))
  {
    v11 = 24;
    if (a5)
      v11 = 8;
    v12 = (_QWORD *)(v14 + v11);
    while (1)
    {
      result = *v12 & 0xFFFFFFFFFFFFFFF8;
      if (result)
      {
        if ((*(_BYTE *)(result + 8) & 4) == 0)
          break;
      }
      v12 = (_QWORD *)(v12[1] & 0xFFFFFFFFFFFFFFF8);
      if (!v12)
        return 0;
    }
  }
  return result;
}

unint64_t sub_22EAFB94C(uint64_t a1, uint64_t a2)
{
  int v3;
  unint64_t result;
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = 0;
  v3 = sub_22F2BB328((uint64_t *)(a1 + 8560), &v8, &v9);
  result = 0;
  if (v3)
    v5 = v9 == *(_QWORD *)(a1 + 8560) + 40 * *(unsigned int *)(a1 + 8576);
  else
    v5 = 1;
  if (!v5)
  {
    v6 = (_QWORD *)(v9 + 8);
    while (1)
    {
      result = *v6 & 0xFFFFFFFFFFFFFFF8;
      if (result)
      {
        if ((*(_BYTE *)(result + 58) & 0x28) != 0)
          break;
      }
      v6 = (_QWORD *)(v6[1] & 0xFFFFFFFFFFFFFFF8);
      if (!v6)
      {
        v7 = (_QWORD *)(v9 + 24);
        while (1)
        {
          result = *v7 & 0xFFFFFFFFFFFFFFF8;
          if (result)
          {
            if ((*(_BYTE *)(result + 58) & 0x28) != 0)
              break;
          }
          v7 = (_QWORD *)(v7[1] & 0xFFFFFFFFFFFFFFF8);
          if (!v7)
            return 0;
        }
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_22EAFBA08(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  void *v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  void *v47[2];
  char v48;
  uint64_t v49;
  uint64_t v50;
  void *__p;
  uint64_t v52;
  char v53;
  void **v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  _BYTE v58[64];
  void *v59;
  uint64_t v60;
  _QWORD v61[10];

  v3 = a3;
  v61[8] = *MEMORY[0x24BDAC8D0];
  v49 = a2;
  if ((a2 & 7u) >= 2)
  {
    if ((a2 & 7) == 2)
      v6 = 1;
    else
      v6 = *(_DWORD *)(a2 & 0xFFFFFFFFFFFFFFF8) - 3;
  }
  else
  {
    v6 = 0;
  }
  v59 = v61;
  v60 = 0x800000000;
  if (a3 >= 0x10)
  {
    v14 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFF0);
    v15 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32)
    {
      v41 = sub_22F40A264(v15);
      if (v41)
      {
        v7 = 0;
        v8 = 0;
        v3 = sub_22F40A120(v41) & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_8;
      }
      v42 = *v14;
      if ((*v14 && *(_BYTE *)(v42 + 16) == 32
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v42 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
         && (v42 = sub_22F10CF48(v42)) != 0)
        && sub_22E5761BC(v42)
        || ((v43 = *v14) != 0 && *(_BYTE *)(v43 + 16) == 32
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
         && (v43 = sub_22F10CF48(v43)) != 0)
        && sub_22E491464(v43))
      {
        v7 = 0;
        v8 = 1;
        goto LABEL_8;
      }
      v44 = *v14;
      if ((*v14 && *(_BYTE *)(v44 + 16) == 32
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v44 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
         && (v44 = sub_22F10CF48(v44)) != 0)
        && sub_22E509ED0(v44)
        || ((v45 = *v14) != 0 && *(_BYTE *)(v45 + 16) == 32
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v45 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
         && (v45 = sub_22F10CF48(v45)) != 0)
        && sub_22E509F54(v45))
      {
        v8 = 0;
        v7 = 1;
        goto LABEL_8;
      }
    }
    v16 = 0;
    goto LABEL_90;
  }
  v7 = 0;
  v8 = 0;
LABEL_8:
  v9 = *(_QWORD *)(a1 + 8560);
  v10 = *(unsigned int *)(a1 + 8576);
  v11 = (unint64_t *)(v9 + 40 * v10);
  if (*(_DWORD *)(a1 + 8568))
  {
    if ((_DWORD)v10)
    {
      v12 = 40 * v10;
      v13 = *(unint64_t **)(a1 + 8560);
      while (*v13 >= 0xFFFFFFFFFFFFFFFELL)
      {
        v13 += 5;
        v12 -= 40;
        if (!v12)
          goto LABEL_13;
      }
    }
    else
    {
      v13 = *(unint64_t **)(a1 + 8560);
    }
  }
  else
  {
LABEL_13:
    v13 = (unint64_t *)(v9 + 40 * v10);
  }
  v17 = (unint64_t *)(v9 + 40 * v10);
  v46 = v17;
LABEL_18:
  if (v13 != v17)
  {
    v18 = (uint64_t *)(v13 + 1);
    while (1)
    {
      v19 = *v18;
      if ((unint64_t)*v18 >= 8)
      {
        v20 = v19 & 0xFFFFFFFFFFFFFFF8;
        v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 40);
        if ((v21 & 7u) >= 2)
          v22 = (v21 & 7) == 2 ? 1 : *(_DWORD *)(v21 & 0xFFFFFFFFFFFFFFF8) - 3;
        else
          v22 = 0;
        if (v22 == v6 && v21 != a2)
        {
          if (v8)
            goto LABEL_32;
          if ((v7 & 1) == 0 && sub_22EAFBFC8(a1, v21, v3))
            break;
        }
      }
LABEL_35:
      v18 = (uint64_t *)(v18[1] & 0xFFFFFFFFFFFFFFF8);
      if (!v18)
      {
        v24 = (uint64_t *)(v13 + 3);
        while (2)
        {
          v25 = *v24;
          if ((unint64_t)*v24 >= 8)
          {
            v26 = v25 & 0xFFFFFFFFFFFFFFF8;
            v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFFF8) + 40);
            if ((v27 & 7u) >= 2)
              v28 = (v27 & 7) == 2 ? 1 : *(_DWORD *)(v27 & 0xFFFFFFFFFFFFFFF8) - 3;
            else
              v28 = 0;
            if (v28 == v6 && v27 != a2)
            {
              if (v7)
                goto LABEL_49;
              if ((v8 & 1) == 0 && sub_22EAFBFC8(a1, v27, v3))
              {
                v26 = *v24 & 0xFFFFFFFFFFFFFFF8;
LABEL_49:
                v29 = v60;
                if (v60 >= (unint64_t)HIDWORD(v60))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v29 = v60;
                }
                *((_QWORD *)v59 + v29) = v26;
                LODWORD(v60) = v60 + 1;
              }
            }
          }
          v24 = (uint64_t *)(v24[1] & 0xFFFFFFFFFFFFFFF8);
          if (v24)
            continue;
          break;
        }
        v30 = v13 + 5;
        while (v30 != v11)
        {
          v31 = *v30;
          v30 += 5;
          if (v31 <= 0xFFFFFFFFFFFFFFFDLL)
          {
            v13 = v30 - 5;
            goto LABEL_58;
          }
        }
        v13 = v11;
LABEL_58:
        v17 = v46;
        goto LABEL_18;
      }
    }
    v20 = *v18 & 0xFFFFFFFFFFFFFFF8;
LABEL_32:
    v23 = v60;
    if (v60 >= (unint64_t)HIDWORD(v60))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v23 = v60;
    }
    *((_QWORD *)v59 + v23) = v20;
    LODWORD(v60) = v60 + 1;
    goto LABEL_35;
  }
  v56 = v58;
  v57 = 0x800000000;
  if ((_DWORD)v60)
  {
    v32 = 0;
    v33 = 8 * v60;
    do
    {
      sub_22F1D3A38(&v49, (char *)v47);
      v34 = (void **)v47[0];
      if (v48 >= 0)
        v34 = v47;
      v35 = (void *)(v48 & 0x7F);
      if (v48 < 0)
        v35 = v47[1];
      v36 = *(_QWORD *)((char *)v59 + v32);
      v54 = v34;
      v55 = (unint64_t)v35;
      v50 = *(_QWORD *)(v36 + 40);
      sub_22F1D3A38(&v50, (char *)&__p);
      if (v53 >= 0)
        v37 = v53 & 0x7F;
      else
        v37 = v52;
      LODWORD(v38) = v37 - v55;
      if (v37 == (_DWORD)v55
        || ((v38 & 0x80000000) == 0 ? (v38 = v38) : (v38 = (v55 - v37)), v55 >= v38))
      {
        if (llvm::StringRef::edit_distance() <= 1)
        {
          LODWORD(v57) = 0;
          if (HIDWORD(v57))
          {
            v39 = 0;
          }
          else
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v39 = v57;
          }
          *((_QWORD *)v56 + v39) = v36;
          LODWORD(v57) = v57 + 1;
        }
      }
      if (v53 < 0)
        operator delete(__p);
      if (v48 < 0)
        operator delete(v47[0]);
      v32 += 8;
    }
    while (v33 != v32);
    if ((_DWORD)v57 == 1)
      v16 = *(_QWORD *)v56;
    else
      v16 = 0;
    if (v56 != v58)
      free(v56);
  }
  else
  {
    v16 = 0;
  }
LABEL_90:
  if (v59 != v61)
    free(v59);
  return v16;
}

BOOL sub_22EAFBFC8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  if (a3 < 0x10)
    return 1;
  v3 = 1;
  if (!sub_22F3345A0(a1, a2, a3, 1))
    return sub_22F3345A0(a1, a2, a3, 0) != 0;
  return v3;
}

unint64_t sub_22EAFC034(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned int v12[24];
  uint64_t v13[12];
  unint64_t v14;

  result = sub_22F32C4AC(a2);
  v7 = result;
  if (*(_QWORD *)(a2 + 120))
  {
    if (!result)
      return result;
  }
  else
  {
    result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
    if (!v7)
      return result;
  }
  v8 = *(_DWORD *)(v7 + 28);
LABEL_6:
  if ((v8 & 0x80) == 0)
  {
    v9 = *(_QWORD *)(v7 + 40);
    if ((v9 & 7) != 0)
      v10 = 0;
    else
      v10 = v9 & 0xFFFFFFFFFFFFFFF8;
    v14 = v10;
    if (v10)
    {
      result = sub_22EFDB894(a3, v10, v13);
      if (result)
      {
        v11 = result;
        sub_22E8FCA40(a1, *(_DWORD *)(v7 + 24), 0xCD1u, 0, (uint64_t)v13);
        sub_22E8BAE44((uint64_t)v13, (uint64_t *)&v14);
        sub_22E903BEC((unsigned int *)v13);
        sub_22E8FCA40(a1, *(_DWORD *)(v11 + 24), 0x6Cu, 0, (uint64_t)v12);
        sub_22E903BEC(v12);
        result = sub_22EFC77E8(v7, 1);
      }
    }
  }
  while (1)
  {
    v7 = *(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v7)
      return result;
    v8 = *(_DWORD *)(v7 + 28);
    if ((v8 & 0x7F) == 0x33)
      goto LABEL_6;
  }
}

uint64_t sub_22EAFC148(unint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, unsigned int a5, uint64_t a6, int a7)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  char v29;
  unsigned int *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  char v38;
  unsigned int v39;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  unsigned int v44;
  int v46;
  int v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  unsigned int v55;
  uint64_t v56;
  int v58;
  unint64_t v59;
  unint64_t v60;
  int v61;
  unint64_t v62;
  uint64_t i;
  uint64_t *v64;
  uint64_t **v65;
  unint64_t v66;
  uint64_t **v67;
  uint64_t v68;
  BOOL v69;
  uint64_t j;
  uint64_t *v71;
  uint64_t **v72;
  uint64_t **v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  int v101;
  unsigned int *v102;
  llvm **v103;
  _QWORD *v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unsigned int v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  BOOL v138;
  BOOL v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  unsigned int v154;
  unint64_t v155;
  _BYTE *v156;
  uint64_t v157;
  _BYTE *v158;
  unsigned __int8 *v160;
  unsigned __int8 *v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  unsigned __int8 *v167;
  unsigned __int8 **v168;
  unsigned __int8 *v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unsigned int *v174;
  uint64_t v175;
  unsigned int v176;
  unsigned int v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t k;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  _QWORD *v195;
  unint64_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  int v205;
  int v206;
  unsigned int v207[24];
  unsigned int v208[24];
  unsigned int v209[24];
  unsigned int v210[24];
  unsigned int v211[24];
  unsigned int v212[24];
  unsigned int v213[24];
  _BYTE v214[96];
  _BYTE v215[96];
  unsigned int v216[24];
  _BYTE v217[96];
  unsigned int v218[24];
  _BYTE v219[96];
  llvm *v220[2];
  unsigned int v221;
  llvm *v222[2];
  unsigned int v223;
  llvm *v224;
  unint64_t v225;
  unint64_t v226;
  __int16 v227;
  unint64_t v228;
  char v229;
  uint64_t v230;
  char v231;
  void *__p;
  int v233;
  uint64_t v234;
  int v235;
  char v236;
  uint64_t *v237;
  uint64_t *v238;
  uint64_t v239;
  unsigned __int8 *v240;
  uint64_t v241;
  char v242;
  unsigned int v243;
  char v244;
  uint64_t v245;
  uint64_t v246[2];

  v14 = sub_22F32C640(a1);
  if ((_DWORD)v14 != -1)
  {
    v204 = a3;
    v205 = a7;
    v15 = *(_QWORD *)(a1 + 216);
    v202 = a2;
    v203 = v15 - 48;
    if (v15)
      v16 = v15 - 48;
    else
      v16 = 0;
    v17 = *(_DWORD *)(v16 + 28) & 0x7F;
    v18 = ((0xC80000u >> *(_DWORD *)(v16 + 28)) & 1) == 0 || v17 > 0x17;
    v19 = v18;
    v206 = v19;
    if (v15)
    {
      if ((*(_WORD *)(v15 + 8) & 0x7F) == 0x15)
      {
        v14 = sub_22F276498(v203);
        if (v14 != v82)
        {
          v83 = v14;
          v84 = v82;
          do
          {
            v85 = *(_QWORD *)(v83 + 64);
            if (v85 && (*(_BYTE *)(v85 + 58) & 0x10) != 0)
              v14 = sub_22EFCCFA0(v15, v85);
            v86 = *(_QWORD *)(v83 + 72);
            if (v86 && (*(_BYTE *)(v86 + 58) & 0x10) != 0)
              v14 = sub_22EFCCFA0(v15, v86);
            do
              v83 = *(_QWORD *)(v83 + 8) & 0xFFFFFFFFFFFFFFF8;
            while (v83 && (*(_DWORD *)(v83 + 28) & 0x7F) != 0x4E);
          }
          while (v83 != v84);
        }
      }
    }
    v222[1] = 0;
    v222[0] = 0;
    v223 = 0;
    v220[1] = 0;
    v220[0] = 0;
    v221 = 0;
    v20 = a5;
    if (a5)
    {
      do
      {
        v21 = *a4;
        if (*a4)
        {
          if ((*(_BYTE *)(v21 + 58) & 2) != 0)
          {
            v237 = *(uint64_t **)(v21 + 40);
            v31 = sub_22F27729C((uint64_t)v222, &v237);
            v32 = v31[1];
            if (!v32)
              goto LABEL_52;
            v33 = v31;
            v34 = sub_22EAF7218(a1, v21, v32, 1);
            v35 = v33[1];
            v36 = v206;
            if (!v35)
              v36 = 1;
            v37 = v36 | v34;
            v38 = v34 ^ 1;
            if (v17 != 21)
              v38 = 1;
            if (v37 == 1 && (v38 & 1) != 0)
            {
              if (v35)
              {
                sub_22F3B5364(v21, v35);
                v44 = sub_22F1E361C(*(_QWORD **)(*(_QWORD *)(a1 + 88) + 1992), *(_DWORD *)(v21 + 24));
                if (v44 == 3 || v44 == 0)
                {
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0x197Fu, 0, (uint64_t)&v237);
                  v228 = *(_QWORD *)(v21 + 40);
                  sub_22E894538((uint64_t)&v237, (uint64_t *)&v228);
                  sub_22E903BEC((unsigned int *)&v237);
                }
                sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v33[1] + 24), 0x6Cu, 0, (uint64_t)v218);
                sub_22E903BEC(v218);
              }
LABEL_52:
              v237 = *(uint64_t **)(v21 + 40);
              sub_22F27729C((uint64_t)v222, &v237)[1] = v21;
              v41 = a1;
              v42 = (_QWORD *)v21;
              v43 = 1;
LABEL_53:
              v14 = sub_22EAFAEBC(v41, v42, 0, v43);
              goto LABEL_15;
            }
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0xCD2u, 0, (uint64_t)&v237);
            v228 = *(_QWORD *)(v21 + 40);
            sub_22E894538((uint64_t)&v237, (uint64_t *)&v228);
            sub_22E903BEC((unsigned int *)&v237);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v33[1] + 24), 0x6Cu, 0, (uint64_t)v219);
            v30 = (unsigned int *)v219;
          }
          else
          {
            v237 = *(uint64_t **)(v21 + 40);
            v22 = sub_22F27729C((uint64_t)v220, &v237);
            v23 = v22[1];
            if (!v23)
              goto LABEL_43;
            v24 = v22;
            v25 = sub_22EAF7218(a1, v21, v23, 1);
            v26 = v24[1];
            v27 = v206;
            if (!v26)
              v27 = 1;
            v28 = v27 | v25;
            v29 = v25 ^ 1;
            if (v17 != 21)
              v29 = 1;
            if (v28 == 1 && (v29 & 1) != 0)
            {
              if (v26)
              {
                sub_22F3B5364(v21, v26);
                v39 = sub_22F1E361C(*(_QWORD **)(*(_QWORD *)(a1 + 88) + 1992), *(_DWORD *)(v21 + 24));
                if (v39 == 3 || v39 == 0)
                {
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0x197Fu, 0, (uint64_t)&v237);
                  v228 = *(_QWORD *)(v21 + 40);
                  sub_22E894538((uint64_t)&v237, (uint64_t *)&v228);
                  sub_22E903BEC((unsigned int *)&v237);
                }
                sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v24[1] + 24), 0x6Cu, 0, (uint64_t)v216);
                sub_22E903BEC(v216);
              }
LABEL_43:
              v237 = *(uint64_t **)(v21 + 40);
              sub_22F27729C((uint64_t)v220, &v237)[1] = v21;
              v41 = a1;
              v42 = (_QWORD *)v21;
              v43 = 0;
              goto LABEL_53;
            }
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0xCD2u, 0, (uint64_t)&v237);
            v228 = *(_QWORD *)(v21 + 40);
            sub_22E894538((uint64_t)&v237, (uint64_t *)&v228);
            sub_22E903BEC((unsigned int *)&v237);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v24[1] + 24), 0x6Cu, 0, (uint64_t)v217);
            v30 = (unsigned int *)v217;
          }
          sub_22E903BEC(v30);
          v14 = sub_22EFC77E8(v21, 1);
        }
LABEL_15:
        ++a4;
        --v20;
      }
      while (v20);
    }
    v46 = *(_DWORD *)(v16 + 28);
    v47 = v46 & 0x7F;
    if (v47 == 22)
    {
      v48 = v204;
    }
    else
    {
      if (v47 == 19)
        v49 = (_QWORD *)v16;
      else
        v49 = 0;
      v48 = v204;
      if (v15 && v47 == 19)
      {
        if (v49[5] < 8uLL || (v49[5] & 7) != 0)
        {
          v51 = v49[13];
          if (v51)
          {
            v225 = 0;
            v224 = 0;
            LODWORD(v226) = 0;
            v148 = sub_22F2781C0(v51);
            if (v148 != v149)
            {
              v150 = v148;
              v151 = v149;
              do
              {
                v237 = *(uint64_t **)(v150 + 40);
                sub_22F27729C((uint64_t)&v224, &v237)[1] = v150;
                do
                  v150 = *(_QWORD *)(v150 + 8) & 0xFFFFFFFFFFFFFFF8;
                while (v150 && (*(_DWORD *)(v150 + 28) & 0x7F) != 0x18);
              }
              while (v150 != v151);
              if ((_DWORD)v225)
              {
                v189 = sub_22F2781C0((uint64_t)v49);
                if (v189 != v190)
                {
                  v191 = v189;
                  v192 = v190;
                  do
                  {
                    v237 = *(uint64_t **)(v191 + 40);
                    v193 = sub_22F27729C((uint64_t)&v224, &v237);
                    v194 = v193[1];
                    if (v194)
                    {
                      if (((*(unsigned __int8 *)(v194 + 58) ^ *(unsigned __int8 *)(v191 + 58)) & 2) == 0)
                      {
                        v195 = v193;
                        if ((sub_22EAF7218(a1, v191, v194, 1) & 1) == 0)
                        {
                          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v191 + 24), 0xCD2u, 0, (uint64_t)&v237);
                          v246[0] = *(_QWORD *)(v191 + 40);
                          sub_22E894538((uint64_t)&v237, v246);
                          sub_22E903BEC((unsigned int *)&v237);
                          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v195[1] + 24), 0x6Cu, 0, (uint64_t)&v228);
                          sub_22E903BEC((unsigned int *)&v228);
                        }
                      }
                    }
                    do
                      v191 = *(_QWORD *)(v191 + 8) & 0xFFFFFFFFFFFFFFF8;
                    while (v191 && (*(_DWORD *)(v191 + 28) & 0x7F) != 0x18);
                  }
                  while (v191 != v192);
                }
              }
            }
            llvm::deallocate_buffer(v224, (void *)(16 * v226));
          }
        }
        v52 = v49[15] & 0xFFFFFFFFFFFFFFF8;
        v53 = *(uint64_t **)(v52 + 16);
        v54 = &v53[*(unsigned int *)(v52 + 24)];
        v237 = v53;
        v238 = v54;
        sub_22EAFD73C((_QWORD *)a1, (uint64_t)v49, &v237);
        v46 = *(_DWORD *)(v16 + 28);
        v47 = v46 & 0x7F;
      }
    }
    v55 = v47 - 24;
    if (v55 >= 0xFFFFFFFB)
      v56 = v16;
    else
      v56 = 0;
    if (v15 && v55 >= 0xFFFFFFFB)
    {
      if (*(_QWORD *)(v56 + 40) >= 8uLL && (*(_QWORD *)(v56 + 40) & 7) == 0)
      {
        v14 = sub_22F256388(v56);
        if (v14 != v90)
        {
          v91 = v14;
          v92 = v90;
          do
          {
            sub_22EC778EC((_QWORD *)a1, v91);
            do
              v91 = *(_QWORD *)(v91 + 8) & 0xFFFFFFFFFFFFFFF8;
            while (v91 && (*(_DWORD *)(v91 + 28) & 0x7F) != 0x19);
          }
          while (v91 != v92);
        }
      }
      *(_QWORD *)(v56 + 80) = v48;
      v46 = *(_DWORD *)(v16 + 28);
    }
    v58 = v46 & 0x7F;
    if (v58 == 21)
      v59 = v16;
    else
      v59 = 0;
    if (!v15 || v58 != 21)
    {
      if (v58 == 20)
        v75 = (_QWORD *)v16;
      else
        v75 = 0;
      if (v15 && v58 == 20)
      {
        v75[10] = v48;
        v14 = v75[11];
        if (v14)
        {
          v76 = v75[5];
          v77 = (v76 & 7) != 0 ? 0 : v76 & 0xFFFFFFFFFFFFFFF8;
          v14 = sub_22EFDD7A0(v14, v77);
          if (v14)
            sub_22EAF94A8(a1, v202, (unint64_t)v75, v14);
        }
      }
      else
      {
        if (v58 == 22)
          v78 = v16;
        else
          v78 = 0;
        if (v15 && v58 == 22)
        {
          v79 = sub_22F3B46CC(v78);
          if (v79)
          {
            v80 = v79;
            if (!sub_22F32C6AC(v78) && sub_22F32C6AC(v80))
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v78 + 24), 0x123Du, 0, (uint64_t)v210);
              sub_22E903BEC(v210);
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v80 + 24), 0x1569u, 0, (uint64_t)v209);
              sub_22E903BEC(v209);
            }
          }
          v14 = sub_22F278E34(v78);
          if ((_DWORD)v14)
          {
            v14 = sub_22F32C6AC(v78);
            if ((v14 & 1) == 0)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v78 + 24), 0xBE1u, 0, (uint64_t)v208);
              v14 = (unint64_t)sub_22E903BEC(v208);
            }
          }
        }
      }
LABEL_85:
      v61 = *(_DWORD *)(v16 + 28) & 0x7F;
      if (v15 && v61 == 22)
      {
        v14 = sub_22F32C4AC(v16);
        v87 = v14;
        if (!*(_QWORD *)(v16 + 120))
          v14 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v16 + 96) + 88), *(_QWORD *)(v16 + 96));
        v88 = 0;
      }
      else
      {
        if (v15 && v61 == 21)
        {
          v203 = *(_QWORD *)(v16 + 88);
          v14 = sub_22F32CB00(v16);
        }
        else
        {
          if (!v15)
            goto LABEL_93;
          if (v61 != 19)
            goto LABEL_93;
          v62 = *(_QWORD *)(v16 + 40);
          if (v62 >= 8 && (v62 & 7) == 0)
            goto LABEL_93;
          v203 = *(_QWORD *)(v16 + 104);
          v14 = sub_22F32CB00(v16);
        }
        v87 = v14;
        v88 = v89;
      }
      if ((*(_DWORD *)(v16 + 28) & 0x7F) != 0x16 && v88 != v87)
      {
        v115 = v87;
        do
        {
          if ((*(_BYTE *)(v115 + 28) & 0x80) == 0)
          {
            v14 = sub_22EB0C88C(*(_QWORD *)(v115 + 48));
            if ((_DWORD)v14)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v115 + 24), 0x1BF7u, 0, (uint64_t)&v237);
              v228 = *(_QWORD *)(v115 + 40);
              v116 = sub_22E894538((uint64_t)&v237, (uint64_t *)&v228);
              v224 = *(llvm **)(v115 + 48);
              sub_22E8901B8(v116, (uint64_t *)&v224);
              v14 = (unint64_t)sub_22E903BEC((unsigned int *)&v237);
            }
          }
          do
            v115 = *(_QWORD *)(v115 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v115 && (*(_DWORD *)(v115 + 28) & 0x7F) != 0x33);
        }
        while (v88 != v115);
      }
      if (v203)
      {
        v14 = sub_22EFDD1E0(v203);
        if (v14)
        {
          v117 = v14;
          do
          {
            if ((*(_BYTE *)(v117 + 28) & 0x80) != 0 || !*(_QWORD *)(v117 + 80))
              goto LABEL_234;
            v228 = *(_QWORD *)(v117 + 48);
            v118 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v228 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            v119 = *(unsigned __int8 *)(v118 + 16);
            if (v119 == 45)
            {
              v14 = sub_22F114198(*(_QWORD *)(v118 + 24));
              if ((*(_BYTE *)(v14 + 74) & 0x80) != 0)
              {
                sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v117 + 24), 0x1033u, 0, (uint64_t)&v237);
                v224 = *(llvm **)(v117 + 40);
                v122 = sub_22E894538((uint64_t)&v237, (uint64_t *)&v224);
                sub_22E8901B8(v122, (uint64_t *)&v228);
                goto LABEL_233;
              }
            }
            else if (v119 == 4)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v117 + 24), 0xD9Bu, 0, (uint64_t)&v237);
              v224 = *(llvm **)(v117 + 40);
              v120 = sub_22E894538((uint64_t)&v237, (uint64_t *)&v224);
              v121 = sub_22E8901B8(v120, (uint64_t *)&v228);
              LODWORD(v246[0]) = 3;
              sub_22E8900C4(v121, (int *)v246);
LABEL_233:
              sub_22E903BEC((unsigned int *)&v237);
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(*(_QWORD *)(v117 + 80) + 24), 0x16C6u, 0, (uint64_t)&v237);
              LOBYTE(v224) = (*(_BYTE *)(*(_QWORD *)(v117 + 80) + 88) & 8) != 0;
              sub_22E894E38((uint64_t)&v237, (unsigned __int8 *)&v224);
              sub_22E903BEC((unsigned int *)&v237);
              v14 = sub_22EFC77E8(v117, 1);
            }
LABEL_234:
            v117 = *(_QWORD *)(v117 + 80);
          }
          while (v117);
        }
        if (v87)
        {
          if (v88 != v87)
          {
            v14 = sub_22EFDD1E0(v203);
            if (v14 == v87)
            {
              v14 = sub_22F3B46CC(v203);
              if (v14)
              {
                v123 = (_QWORD *)v14;
                while (1)
                {
                  v124 = sub_22F32C4AC((uint64_t)v123);
                  if (!v123[15])
                    sub_22E3CD31C((uint64_t *)(v123[12] + 88), v123[12]);
                  if (v124)
                    break;
                  v14 = sub_22F3B46CC((unint64_t)v123);
                  v123 = (_QWORD *)v14;
                  if (!v14)
                    goto LABEL_93;
                }
                v196 = sub_22F32C4AC((uint64_t)v123);
                v197 = sub_22F32CB54((uint64_t)v123);
                v198 = (v197 - 1);
                if (v197 != 1)
                {
                  do
                  {
                    do
                      v196 = *(_QWORD *)(v196 + 8) & 0xFFFFFFFFFFFFFFF8;
                    while (v196 && (*(_DWORD *)(v196 + 28) & 0x7F) != 0x33);
                    v18 = v198-- <= 1;
                  }
                  while (!v18);
                }
                v14 = sub_22EB0C88C(*(_QWORD *)(v196 + 48));
                if ((_DWORD)v14)
                {
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v87 + 24), 0x1B6Cu, 0, (uint64_t)&v237);
                  v228 = *(_QWORD *)(v87 + 40);
                  v199 = sub_22E894538((uint64_t)&v237, (uint64_t *)&v228);
                  v224 = *(llvm **)(v196 + 40);
                  v200 = sub_22E894538(v199, (uint64_t *)&v224);
                  v246[0] = *(_QWORD *)(v196 + 48);
                  v201 = sub_22E8901B8(v200, v246);
                  v245 = v123[5];
                  sub_22E894538(v201, &v245);
                  sub_22E903BEC((unsigned int *)&v237);
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v196 + 24), 0x15C9u, 0, (uint64_t)&v237);
                  v228 = *(_QWORD *)(v196 + 40);
                  sub_22E894538((uint64_t)&v237, (uint64_t *)&v228);
                  v14 = (unint64_t)sub_22E903BEC((unsigned int *)&v237);
                }
              }
            }
          }
        }
      }
LABEL_93:
      if ((v206 & 1) == 0)
      {
        if (!v205)
        {
          *(_QWORD *)(a1 + 216) = sub_22EA044C0(v14, *(_QWORD *)(a1 + 216));
LABEL_155:
          v237 = (uint64_t *)v16;
          sub_22EA2DB10(a1, (unint64_t *)&v237, 1uLL);
          llvm::deallocate_buffer(v220[0], (void *)(16 * v221));
          llvm::deallocate_buffer(v222[0], (void *)(16 * v223));
          return v16;
        }
        for (i = 0; i != v205; ++i)
        {
          v64 = *(uint64_t **)(a6 + 8 * i);
          v237 = v64;
          if (v64)
            v65 = &v237;
          else
            v65 = 0;
          if ((v64 & 1) != 0)
            v66 = ((unint64_t)v64 & 0xFFFFFFFFFFFFFFFELL) + 8;
          else
            v66 = (unint64_t)v65;
          if ((v64 & 1) != 0)
          {
            v67 = (uint64_t **)(((unint64_t)v64 & 0xFFFFFFFFFFFFFFFELL)
                             + 8
                             + 8 * *(unsigned int *)((unint64_t)v64 & 0xFFFFFFFFFFFFFFFELL));
          }
          else if (v64)
          {
            v67 = &v238;
          }
          else
          {
            v67 = 0;
          }
          while ((uint64_t **)v66 != v67)
          {
            v68 = *(_QWORD *)v66;
            if (*(_QWORD *)v66)
              v69 = (*(_DWORD *)(*(_QWORD *)v66 + 28) & 0x7Fu) - 67 >= 0xFFFFFFF9;
            else
              v69 = 0;
            if (v69 && (*(_BYTE *)(v68 + 96) & 5) != 1)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v68 + 24), 0x1032u, 0, (uint64_t)v207);
              v14 = (unint64_t)sub_22E903BEC(v207);
            }
            v66 += 8;
          }
        }
      }
      *(_QWORD *)(a1 + 216) = sub_22EA044C0(v14, *(_QWORD *)(a1 + 216));
      if (v205)
      {
        for (j = 0; j != v205; ++j)
        {
          v71 = *(uint64_t **)(a6 + 8 * j);
          v237 = v71;
          if (v71)
            v72 = &v237;
          else
            v72 = 0;
          if ((v71 & 1) != 0)
          {
            v72 = (uint64_t **)(((unint64_t)v71 & 0xFFFFFFFFFFFFFFFELL) + 8);
            v73 = &v72[*(unsigned int *)((unint64_t)v71 & 0xFFFFFFFFFFFFFFFELL)];
          }
          else if (v71)
          {
            v73 = &v238;
          }
          else
          {
            v73 = 0;
          }
          while (v72 != v73)
          {
            v74 = (uint64_t)*v72++;
            *(_DWORD *)(v74 + 28) |= 0x1000u;
          }
          (*(void (**)(_QWORD))(**(_QWORD **)(a1 + 96) + 80))(*(_QWORD *)(a1 + 96));
        }
      }
      goto LABEL_155;
    }
    *(_QWORD *)(v59 + 80) = v48;
    v60 = *(_QWORD *)(v59 + 88);
    if (!v60)
    {
LABEL_84:
      sub_22EAD1C68();
      goto LABEL_85;
    }
    v93 = *(_QWORD *)(v59 + 88);
    v94 = sub_22EB0C40C(v60);
    if (v94)
    {
      v125 = v94;
LABEL_246:
      v126 = sub_22F318070(v125);
      if (v126 == v127)
        goto LABEL_275;
      v128 = v126;
      v129 = v127;
      do
      {
        v130 = *(_QWORD *)(v128 + 40);
        if ((v130 & 7) != 0)
          v131 = 0;
        else
          v131 = v130 & 0xFFFFFFFFFFFFFFF8;
        if ((*(_DWORD *)(v128 + 72) & 0x4000) != 0)
          v132 = 2;
        else
          v132 = 1;
        v133 = sub_22EFDE638(v59, v131, v132);
        if (!v133 || *(_QWORD *)(v133 + 56))
        {
          v134 = sub_22EB0C40C(v93);
          if (v134)
          {
            v135 = v134;
LABEL_258:
            v136 = sub_22EFDA1A0(v135, *(_QWORD *)(v128 + 80), 1, 0);
            if (v136)
              *(_QWORD *)(v136 + 56) |= 0x80000uLL;
            if ((*(_BYTE *)(v128 + 72) & 1) == 0)
            {
              v137 = sub_22EFDA1A0(v135, *(_QWORD *)(v128 + 88), 1, 0);
              if (v137)
                *(_QWORD *)(v137 + 56) |= 0x80000uLL;
            }
            while (1)
            {
              v135 = *(_QWORD *)(v135 + 128);
              if (!v135)
                break;
              if ((*(_BYTE *)(v135 + 28) & 0x80) == 0)
              {
                v138 = *(_QWORD *)(v135 + 40) >= 8uLL && (*(_QWORD *)(v135 + 40) & 7) == 0;
                if (!v138 && (*(_BYTE *)(v135 + 8) & 4) == 0)
                  goto LABEL_258;
              }
            }
          }
        }
        do
          v128 = *(_QWORD *)(v128 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v128 && ((*(_DWORD *)(v128 + 28) & 0x7F) != 0x19 || (*(_BYTE *)(v128 + 73) & 0x40) != 0));
      }
      while (v128 != v129);
LABEL_275:
      while (1)
      {
        v125 = *(_QWORD *)(v125 + 128);
        if (!v125)
          break;
        if ((*(_BYTE *)(v125 + 28) & 0x80) == 0)
        {
          v139 = *(_QWORD *)(v125 + 40) >= 8uLL && (*(_QWORD *)(v125 + 40) & 7) == 0;
          if (!v139 && (*(_BYTE *)(v125 + 8) & 4) == 0)
            goto LABEL_246;
        }
      }
    }
    sub_22EAF94A8(a1, v202, v59, v93);
    sub_22EC7CEAC(a1, v59, v93);
    sub_22EC7D4CC(a1, v59);
    if (*(_DWORD *)(*(_QWORD *)(v202 + 400) + 176) > *(_DWORD *)(v202 + 412)
      || (v95 = sub_22F276230(v59), v95 == v96))
    {
LABEL_183:
      if ((sub_22F3B4A28(v93) & 1) != 0)
        sub_22EC7D8BC((_QWORD *)a1, v59, v93);
      if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 8) == 0)
      {
        v97 = sub_22EFDD1E0(*(_QWORD *)(v59 + 88));
        if (v97)
        {
          v98 = v97;
          do
          {
            v99 = *(_DWORD *)(v98 + 28);
            if ((v99 & 0x80) == 0)
            {
              v100 = *(_QWORD *)((*(_QWORD *)(v98 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
              if ((v100 & 8) != 0 && (*(_QWORD *)((v100 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) == 0xC0)
              {
                v101 = *(_DWORD *)(v98 + 24);
                if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 4) != 0)
                {
                  v102 = (unsigned int *)&v237;
                  v103 = (llvm **)&v237;
                  v104 = (_QWORD *)a1;
                  v105 = 2682;
                }
                else
                {
                  v102 = (unsigned int *)&v228;
                  v103 = (llvm **)&v228;
                  v104 = (_QWORD *)a1;
                  v105 = 2684;
                }
              }
              else
              {
                if ((v99 & 0x100) == 0)
                  goto LABEL_206;
                sub_22EFC8E88(v98);
                v107 = *(uint64_t **)v106;
                v108 = *(unsigned int *)(v106 + 8);
                v109 = *(uint64_t **)v106;
                if ((_DWORD)v108)
                {
                  v110 = 8 * v108;
                  v109 = *(uint64_t **)v106;
                  while (*(_WORD *)(*v109 + 32) != 337)
                  {
                    ++v109;
                    v110 -= 8;
                    if (!v110)
                      goto LABEL_206;
                  }
                }
                if (v109 == &v107[v108])
                  goto LABEL_206;
                do
                {
                  v112 = *v107++;
                  v111 = v112;
                  v113 = *(unsigned __int16 *)(v112 + 32) | (*(unsigned __int8 *)(v112 + 34) << 16);
                }
                while (*(_WORD *)(v112 + 32) != 337);
                if ((v113 & 0x40000) == 0 || *(_DWORD *)(v111 + 48) != 3)
                  goto LABEL_206;
                v101 = *(_DWORD *)(v98 + 24);
                v102 = (unsigned int *)&v224;
                v103 = &v224;
                v104 = (_QWORD *)a1;
                v105 = 6846;
              }
              sub_22E8FCA40(v104, v101, v105, 0, (uint64_t)v103);
              sub_22E903BEC(v102);
            }
LABEL_206:
            v98 = *(_QWORD *)(v98 + 80);
          }
          while (v98);
        }
      }
      if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 2) != 0)
      {
        v114 = sub_22EFDD1E0(v93);
        if (v114)
        {
          v170 = v114;
          do
          {
            if ((*(_BYTE *)(v170 + 28) & 0x80) == 0)
            {
              v171 = *(_QWORD *)(v170 + 48) & 0xFFFFFFFFFFFFFFF0;
              v172 = *(_QWORD *)v171;
              if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v171 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 4)
              {
                v173 = *(_QWORD *)((*(_QWORD *)(v170 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
                if (((v173 & 8) == 0 || (*(_QWORD *)((v173 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) != 0x40)
                  && sub_22F40ACB8(v172))
                {
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v170 + 24), 0xD95u, 0, (uint64_t)&v237);
                  sub_22E903BEC((unsigned int *)&v237);
                  sub_22EFC77E8(v170, 1);
                }
              }
            }
            v170 = *(_QWORD *)(v170 + 80);
          }
          while (v170);
        }
      }
      if ((*(_BYTE *)(v93 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v93);
        v141 = *(_QWORD *)v140;
        v142 = *(unsigned int *)(v140 + 8);
        v143 = *(_QWORD *)v140 + 8 * v142;
        if ((_DWORD)v142)
        {
          v144 = 8 * v142;
          while (*(_WORD *)(*(_QWORD *)v141 + 32) != 267)
          {
            v141 += 8;
            v144 -= 8;
            if (!v144)
            {
              v141 = v143;
              break;
            }
          }
        }
        if (sub_22F3B46CC(v93))
        {
          if (v141 == v143)
            goto LABEL_360;
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v93 + 24), 0x1011u, 0, (uint64_t)v214);
          v174 = (unsigned int *)v214;
          goto LABEL_359;
        }
        if (v141 != v143)
          goto LABEL_360;
      }
      else if (sub_22F3B46CC(v93))
      {
LABEL_360:
        v185 = sub_22F3B46CC(v93);
        if (v185)
        {
          v186 = v185;
          if (sub_22F32C6AC(v93) && sub_22F32C6AC(v186))
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v59 + 24), 0x123Du, 0, (uint64_t)v213);
            sub_22E903BEC(v213);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v186 + 24), 0x1569u, 0, (uint64_t)v212);
            sub_22E903BEC(v212);
          }
        }
        if (sub_22F278E34(v93))
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v59 + 24), 0xDECu, 0, (uint64_t)v211);
          sub_22E903BEC(v211);
        }
        if (((1 << *(_DWORD *)(*(_QWORD *)(a1 + 72) + 400)) & 0x22) == 0)
        {
          for (k = v93; sub_22F3B46CC(k); v93 = k)
          {
            v188 = sub_22F3B46CC(v93);
            sub_22EAFC034((_QWORD *)a1, v93, v188);
            k = sub_22F3B46CC(v93);
          }
        }
        goto LABEL_84;
      }
      if ((*(_BYTE *)(v93 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v93);
        v146 = *((unsigned int *)v145 + 2);
        if ((_DWORD)v146)
        {
          v175 = 8 * v146;
          v147 = *v145;
          while (*(_WORD *)(*(_QWORD *)v147 + 32) != 256)
          {
            v147 += 8;
            v175 -= 8;
            if (!v175)
              goto LABEL_349;
          }
        }
        else
        {
          v147 = *v145;
        }
        if (v147 != *v145 + 8 * v146)
          goto LABEL_360;
      }
LABEL_349:
      v176 = *(_DWORD *)(v93 + 24);
      v177 = sub_22F141A3C(v176, 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
      sub_22E8FCA40((_QWORD *)a1, v176, 0x1AB5u, 0, (uint64_t)&v237);
      v178 = *(_QWORD *)(v93 + 40);
      if ((v178 & 7) != 0)
        v179 = 0;
      else
        v179 = v178 & 0xFFFFFFFFFFFFFFF8;
      v228 = v179;
      sub_22E8BAE44((uint64_t)&v237, (uint64_t *)&v228);
      sub_22E903BEC((unsigned int *)&v237);
      v180 = *(_QWORD *)(a1 + 3344);
      v181 = sub_22F3E8F0C(*(_QWORD *)(a1 + 3440), 0);
      v182 = sub_22EC65CE0((_QWORD *)a1, v180, v181, v176, 0, 0);
      if (!v182)
        goto LABEL_358;
      v183 = v182;
      if ((*(_DWORD *)(v182 + 28) & 0x7F) != 0x16)
        goto LABEL_358;
      v184 = *(_QWORD *)(v182 + 120);
      if (!v184)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v182 + 96) + 88), *(_QWORD *)(v182 + 96));
        v184 = *(_QWORD *)(v183 + 120);
      }
      if (v184 >= 8 && *(_QWORD *)(v184 & 0xFFFFFFFFFFFFFFF8))
      {
        sub_22E8FCA40((_QWORD *)a1, v177, 0x16F2u, 0, (uint64_t)&v237);
        v231 = 0;
        v230 = 0;
        v228 = v177 | ((unint64_t)v177 << 32);
        v229 = 0;
        v234 = 0;
        v235 = 201326592;
        v233 = 544498533;
        __p = *(void **)" : NSObject ";
        v236 = 0;
        sub_22E890748((uint64_t)&v237, &v228);
        if (SHIBYTE(v235) < 0)
          operator delete(__p);
        v174 = (unsigned int *)&v237;
      }
      else
      {
LABEL_358:
        sub_22E8FCA40((_QWORD *)a1, v177, 0x16F2u, 0, (uint64_t)v215);
        v174 = (unsigned int *)v215;
      }
LABEL_359:
      sub_22E903BEC(v174);
      goto LABEL_360;
    }
    v152 = v95;
    v153 = v96;
    while (1)
    {
      v154 = *(_DWORD *)(v152 + 24);
      if (sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x1BE1u, v154, *(_QWORD *)(a1 + 104)) == 1)
        goto LABEL_305;
      v245 = 0;
      v155 = sub_22F32C964(v152, (unint64_t *)&v245);
      if (!v155)
        goto LABEL_305;
      if ((*(_BYTE *)(v152 + 58) & 0x10) != 0)
        goto LABEL_305;
      v156 = (_BYTE *)v155;
      v224 = (llvm *)a1;
      v225 = v152;
      v226 = v155;
      v227 = 0;
      v157 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v152 + 64))(v152);
      sub_22EB007F8((uint64_t)&v224, v157, 0);
      if ((_BYTE)v227)
        goto LABEL_305;
      if ((v156[29] & 8) == 0)
      {
        v158 = v156;
        while ((v158[29] & 8) == 0)
        {
          v158 = (_BYTE *)(*(uint64_t (**)(_BYTE *))(*(_QWORD *)v158 + 40))(v158);
          if (v158 == v156 || v158 == 0)
            goto LABEL_323;
        }
      }
      if (HIBYTE(v227))
        goto LABEL_305;
LABEL_323:
      sub_22E8FCA40((_QWORD *)a1, v154, 0x1BE1u, 0, (uint64_t)&v237);
      if (v242)
      {
        v160 = v240;
        if (!v240)
        {
          v160 = (unsigned __int8 *)sub_22E3B8AAC(v241);
          v240 = v160;
        }
        v160[*v160 + 1] = 11;
        v161 = v240;
      }
      else
      {
        if (!v244)
          goto LABEL_329;
        v163 = v237;
        v164 = v239;
        if (v239)
          v164 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v239 + 32))(v239);
        v246[0] = v164;
        v165 = sub_22F2F1D6C(v163 + 1598, v246);
        v166 = v165[1] + 32 * v243;
        v169 = *(unsigned __int8 **)(v166 + 8);
        v168 = (unsigned __int8 **)(v166 + 8);
        v167 = v169;
        if (!v169)
        {
          v167 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v168[1]);
          *v168 = v167;
        }
        v167[*v167 + 1] = 11;
        v161 = *v168;
      }
      v162 = *v161;
      *v161 = v162 + 1;
      *(_QWORD *)&v161[8 * v162 + 16] = v156;
LABEL_329:
      sub_22E903BEC((unsigned int *)&v237);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v245 + 24), 0x1780u, 0, (uint64_t)&v228);
      sub_22E903BEC((unsigned int *)&v228);
      do
LABEL_305:
        v152 = *(_QWORD *)(v152 + 8) & 0xFFFFFFFFFFFFFFF8;
      while (v152 && ((*(_DWORD *)(v152 + 28) & 0x7F) != 0x18 || (*(_BYTE *)(v152 + 58) & 2) == 0));
      if (v152 == v153)
        goto LABEL_183;
    }
  }
  return 0;
}

void sub_22EAFD73C(_QWORD *a1, uint64_t a2, uint64_t **a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t i;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  _BYTE *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 *v54;
  _QWORD *v55;
  unsigned __int8 *v56;
  unsigned __int8 v57;
  _QWORD v58[12];
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  _QWORD v64[6];

  v64[4] = *MEMORY[0x24BDAC8D0];
  v3 = *a3;
  v4 = a3[1];
  if (*a3 != v4)
  {
    while (1)
    {
      v7 = *v3;
      v60 = v7;
      v8 = *(_QWORD *)(v7 + 104);
      if (!v8)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v7 + 96) + 88), *(_QWORD *)(v7 + 96));
        v8 = *(_QWORD *)(v7 + 104);
      }
      if (v8 < 8)
        v9 = 0;
      else
        v9 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
      v10 = v60;
      if (v9 != v7)
      {
        v11 = *(_QWORD *)(v60 + 104);
        if (!v11)
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v60 + 96) + 88), *(_QWORD *)(v60 + 96));
          v11 = *(_QWORD *)(v10 + 104);
        }
        if (v11 <= 7)
        {
          v10 = v60;
        }
        else
        {
          v10 = v60;
          if (*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8))
          {
            v12 = *(_QWORD *)(v60 + 104);
            if (!v12)
            {
              sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v60 + 96) + 88), *(_QWORD *)(v60 + 96));
              v12 = *(_QWORD *)(v10 + 104);
            }
            if (v12 < 8)
              v10 = 0;
            else
              v10 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
            v60 = v10;
          }
        }
      }
      v62 = v64;
      v63 = 0x400000000;
      v59 = *(_QWORD *)(a2 + 104);
      v13 = sub_22F2781C0(v10);
      if (v13 != v14)
      {
        v40 = v13;
        v41 = v14;
        do
        {
          v42 = *(_QWORD *)(v40 + 56);
          if ((v42 & 0x80000) == 0)
          {
            v43 = sub_22EFDA1A0(v59, *(_QWORD *)(v40 + 40), (v42 >> 17) & 1, 0);
            if (v43)
            {
              v44 = v43;
              if (sub_22EFDBD9C(v43))
              {
                v45 = v63;
                if (v63 >= (unint64_t)HIDWORD(v63))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v45 = v63;
                }
                *((_QWORD *)v62 + v45) = v44;
                LODWORD(v63) = v63 + 1;
              }
            }
          }
          do
            v40 = *(_QWORD *)(v40 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v40 && (*(_DWORD *)(v40 + 28) & 0x7F) != 0x18);
        }
        while (v40 != v41);
      }
      v15 = sub_22F256388(v60);
      if (v15 != v16)
      {
        v17 = v15;
        v18 = v16;
        do
        {
          v19 = *(_QWORD *)(v17 + 40);
          if ((v19 & 7) != 0)
            v20 = 0;
          else
            v20 = v19 & 0xFFFFFFFFFFFFFFF8;
          if ((*(_DWORD *)(v17 + 72) & 0x4000) != 0)
            v21 = 2;
          else
            v21 = 1;
          v22 = sub_22F3B4908(v59, v20, v21);
          if (v22)
          {
            v23 = v22;
            if ((*(_DWORD *)(v22 + 72) & 0x18000) == 0x8000)
            {
              v24 = v22;
              if ((*(_DWORD *)(v22 + 28) & 0x7F) != 0x53)
              {
                for (i = *(_QWORD *)(v22 + 16); ; i = *(_QWORD *)(v26 + v28 + 16))
                {
                  v26 = i & 0xFFFFFFFFFFFFFFF8;
                  if ((i & 4) != 0)
                    v26 = *(_QWORD *)v26;
                  v27 = *(_WORD *)(v26 + 8) & 0x7F;
                  if (v27 == 83)
                  {
                    v24 = v26 - 40;
                    break;
                  }
                  v28 = -40;
                  if ((*(_WORD *)(v26 + 8) & 0x7Fu) > 0x46)
                  {
                    if (v27 == 71)
                    {
                      v28 = -56;
                      continue;
                    }
                    if (v27 != 81)
                      goto LABEL_45;
                  }
                  else
                  {
                    if (v27 > 0x18)
                      goto LABEL_44;
                    if (v27 == 16)
                      goto LABEL_38;
                    if (((1 << v27) & 0x1066) == 0)
                    {
                      if (v27 == 24)
                      {
LABEL_38:
                        v28 = -48;
                        continue;
                      }
LABEL_44:
                      if (v27 == 70)
                      {
                        v28 = -64;
                        continue;
                      }
LABEL_45:
                      v29 = v27 - 52;
                      v33 = v27 - 33 >= 5;
                      v30 = -64;
                      if (v33)
                        v30 = -48;
                      v33 = v29 >= 6;
                      v28 = -72;
                      if (v33)
                        v28 = v30;
                      continue;
                    }
                  }
                }
              }
              if ((*(_WORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 88) + 2000) + 148) & 0x80) == 0)
              {
                v31 = v63;
                if (v63 >= (unint64_t)HIDWORD(v63))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v31 = v63;
                }
                *((_QWORD *)v62 + v31) = v23;
                LODWORD(v63) = v63 + 1;
              }
            }
          }
          do
            v17 = *(_QWORD *)(v17 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v17 && (*(_DWORD *)(v17 + 28) & 0x7F) != 0x19);
        }
        while (v17 != v18);
      }
      if ((_DWORD)v63)
        break;
      v58[0] = sub_22F259248(v60);
      v58[1] = v50;
      sub_22EAFD73C(a1, a2, v58);
LABEL_89:
      if (v62 != v64)
        free(v62);
      if (++v3 == v4)
        return;
    }
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xFF8u, 0, (uint64_t)v58);
    v32 = *(_QWORD *)(a2 + 40);
    v33 = (v32 & 7) == 0 && v32 >= 8;
    v34 = !v33;
    v57 = v34;
    v35 = sub_22E894E38((uint64_t)v58, &v57);
    v36 = v35;
    if (*(_BYTE *)(v35 + 80))
    {
      v37 = *(unsigned __int8 **)(v35 + 32);
      if (!v37)
      {
        v37 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v36 + 40));
        *(_QWORD *)(v36 + 32) = v37;
      }
      v37[*v37 + 1] = 11;
      v38 = *(_BYTE **)(v36 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v35 + 92))
      {
LABEL_86:
        v46 = sub_22E890024(v36, &v60);
        sub_22E890024(v46, (uint64_t *)&v59);
        sub_22E903BEC((unsigned int *)v58);
        if ((_DWORD)v63)
        {
          v47 = (uint64_t *)v62;
          v48 = 8 * v63;
          do
          {
            v49 = *v47++;
            sub_22E8FCA40(a1, *(_DWORD *)(v49 + 24), 0x15B9u, 0, (uint64_t)v58);
            sub_22E903BEC((unsigned int *)v58);
            v48 -= 8;
          }
          while (v48);
        }
        goto LABEL_89;
      }
      v51 = *(_QWORD *)v35;
      v52 = *(_QWORD *)(v35 + 16);
      if (v52)
        v52 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v52 + 32))(v52);
      v61 = v52;
      v53 = sub_22F2F1D6C((uint64_t *)(v51 + 12784), &v61)[1] + 32 * *(unsigned int *)(v36 + 88);
      v56 = *(unsigned __int8 **)(v53 + 8);
      v55 = (_QWORD *)(v53 + 8);
      v54 = v56;
      if (!v56)
      {
        v54 = (unsigned __int8 *)sub_22E3B8AAC(v55[1]);
        *v55 = v54;
      }
      v54[*v54 + 1] = 11;
      v38 = (_BYTE *)*v55;
    }
    v39 = *v38;
    *v38 = v39 + 1;
    *(_QWORD *)&v38[8 * v39 + 16] = a2;
    goto LABEL_86;
  }
}

void sub_22EAFDC80(uint64_t a1, unint64_t a2, uint64_t a3, int a4)
{
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unsigned int v44[24];
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char v48;
  llvm *v49;
  unsigned int v50;
  void *v51;
  unsigned int v52;
  uint64_t v53;
  _BYTE v54[16];
  llvm *v55;
  unsigned int v56;
  uint64_t *v57;
  int v58;
  _QWORD v59[7];

  v59[5] = *MEMORY[0x24BDAC8D0];
  if (!a2)
    return;
  sub_22EAFE16C((uint64_t)v54, a1, a2);
  v7 = v57;
  if (!v58)
  {
    v40 = 0;
    goto LABEL_71;
  }
  LOBYTE(v8) = 0;
  v41 = a3 + 48;
  v42 = &v57[v58];
  do
  {
    v9 = *v7;
    if ((v8 & 1) != 0)
      goto LABEL_24;
    v10 = *(_QWORD *)(v9 + 16);
    v11 = v10 & 0xFFFFFFFFFFFFFFF8;
    if ((v10 & 4) != 0)
      v11 = *(_QWORD *)v11;
    if ((*(_WORD *)(v11 + 8) & 0x7F) == 0x17
      || (v12 = *(_QWORD *)(sub_22EFDC9F0(*v7) + 96),
          v12 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 32))(a3))
      || (*(_BYTE *)(v9 + 60) & 0x10) != 0)
    {
      sub_22F32C70C((_QWORD *)a1, a2, v9);
LABEL_24:
      v8 = 1;
      goto LABEL_25;
    }
    v13 = *(_QWORD *)(a2 + 16);
    v14 = v13 & 0xFFFFFFFFFFFFFFF8;
    if ((v13 & 4) != 0)
      v14 = *(_QWORD *)v14;
    if ((*(_WORD *)(v14 + 8) & 0x7E) != 0x14)
    {
LABEL_22:
      v8 = 0;
      goto LABEL_25;
    }
    v46 = *(_QWORD *)(a2 + 40);
    v47 = 0;
    v8 = 0;
    if (sub_22F2BB328((uint64_t *)(a1 + 8560), &v46, &v47)
      && v47 != *(_QWORD *)(a1 + 8560) + 40 * *(unsigned int *)(a1 + 8576))
    {
      v15 = v47 + 24;
      if ((*(_BYTE *)(a2 + 58) & 2) != 0)
        v15 = v47 + 8;
      v16 = (*(_DWORD *)(v15 + 8) >> 1) & 3;
      if (!v16)
        goto LABEL_22;
      if (v16 == 1)
      {
        v17 = *(_QWORD *)(v9 + 16);
        v18 = v17 & 0xFFFFFFFFFFFFFFF8;
        if ((v17 & 4) != 0)
          v18 = *(_QWORD *)v18;
        if ((*(_WORD *)(v18 + 8) & 0x7F) == 0x14)
          goto LABEL_22;
      }
      sub_22EAFE16C((uint64_t)&v47, a1, v9);
      if (v52)
      {
        v33 = (uint64_t *)v51;
        v34 = 8 * v52;
        while (1)
        {
          v35 = *v33;
          v36 = *(_QWORD *)(*v33 + 16);
          v37 = v36 & 0xFFFFFFFFFFFFFFF8;
          if ((v36 & 4) != 0)
            v37 = *(_QWORD *)v37;
          if ((*(_WORD *)(v37 + 8) & 0x7F) == 0x17)
            break;
          v38 = *(_QWORD *)(sub_22EFDC9F0(*v33) + 96);
          if (v38 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)a3 + 32))(a3))
            break;
          ++v33;
          v34 -= 8;
          if (!v34)
            goto LABEL_60;
        }
        sub_22F32C70C((_QWORD *)a1, a2, v35);
        *(_QWORD *)(v9 + 56) |= 0x1000000000uLL;
        v8 = 1;
      }
      else
      {
LABEL_60:
        v8 = 0;
      }
      if (v51 != &v53)
        free(v51);
      if ((v48 & 1) == 0)
        llvm::deallocate_buffer(v49, (void *)(8 * v50));
    }
LABEL_25:
    if (a4 != 1 && (*(_BYTE *)(v9 + 60) & 2) != 0)
      *(_QWORD *)(a2 + 56) |= 0x200000000uLL;
    sub_22F31D690((_QWORD *)a1, a2, v9);
    if ((*(_BYTE *)(a2 + 29) & 2) == 0 || (*(_BYTE *)(v9 + 29) & 2) == 0)
    {
      v19 = *(_QWORD *)(a2 + 16);
      v20 = v19 & 0xFFFFFFFFFFFFFFF8;
      if ((v19 & 4) != 0)
        v20 = *(_QWORD *)v20;
      v21 = *(_WORD *)(v20 + 8) & 0x7F;
      if (v21 == 22 || v21 == 21)
      {
        v31 = *(_QWORD *)(v9 + 16);
        v32 = v31 & 0xFFFFFFFFFFFFFFF8;
        if ((v31 & 4) != 0)
          v32 = *(_QWORD *)v32;
        sub_22F32C530((_QWORD *)a1, a2, v9, (*(_WORD *)(v32 + 8) & 0x7F) == 23);
        if (!a3)
          goto LABEL_51;
      }
      else if (!a3)
      {
        goto LABEL_51;
      }
      v22 = *(_QWORD *)(v9 + 16);
      v23 = v22 & 0xFFFFFFFFFFFFFFF8;
      if ((v22 & 4) != 0)
      {
        v23 = *(_QWORD *)v23;
        if (v23 == v41)
          goto LABEL_51;
      }
      else if (v41 == v23)
      {
        goto LABEL_51;
      }
      if ((*(_WORD *)(v23 + 8) & 0x7F) == 0x16 && (*(_BYTE *)(v9 + 29) & 2) == 0)
      {
        v24 = *(unsigned int *)(a2 + 104);
        if ((_DWORD)v24)
        {
          v25 = *(unsigned int *)(v9 + 104);
          if ((_DWORD)v25)
          {
            v26 = *(_QWORD *)(a2 + 96);
            v27 = *(_QWORD *)(v9 + 96);
            v28 = 8 * v25 - 8;
            v29 = 8 * v24 - 8;
            while (1)
            {
              v46 = *(_QWORD *)(*(_QWORD *)v26 + 48) & 7 | *(_QWORD *)((*(_QWORD *)(*(_QWORD *)v26 + 48) & 0xFFFFFFFFFFFFFFF0)
                                                                         + 8);
              v45 = *(_QWORD *)(*(_QWORD *)v27 + 48) & 7 | *(_QWORD *)((*(_QWORD *)(*(_QWORD *)v27 + 48) & 0xFFFFFFFFFFFFFFF0)
                                                                         + 8);
              if (!sub_22F36EDA0(*(_QWORD *)(a1 + 88), v46, v45, 0))
                break;
              if (v29)
              {
                v26 += 8;
                v27 += 8;
                v30 = v28;
                v28 -= 8;
                v29 -= 8;
                if (v30)
                  continue;
              }
              goto LABEL_51;
            }
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(*(_QWORD *)v26 + 24), 0x14F6u, 0, (uint64_t)&v47);
            v39 = sub_22E8901B8((uint64_t)&v47, (uint64_t *)&v46);
            sub_22E8901B8(v39, (uint64_t *)&v45);
            sub_22E903BEC((unsigned int *)&v47);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v9 + 24), 0x6Cu, 0, (uint64_t)v44);
            sub_22E903BEC(v44);
          }
        }
      }
    }
LABEL_51:
    ++v7;
  }
  while (v7 != v42);
  v7 = v57;
  v40 = 0x1000000000;
  if (!v8)
    v40 = 0;
LABEL_71:
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a2 + 56) & 0xFFFFFFEFFFFFFFFFLL | v40;
  if (v7 != v59)
    free(v7);
  if ((v54[8] & 1) == 0)
    llvm::deallocate_buffer(v55, (void *)(8 * v56));
}

uint64_t sub_22EAFE16C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64x2_t v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  int v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = a3;
  *(_QWORD *)(a1 + 8) = 1;
  v6 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  *(int64x2_t *)(a1 + 16) = v6;
  *(int64x2_t *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = a1 + 64;
  *(_QWORD *)(a1 + 56) = 0x400000000;
  v7 = *(_QWORD *)(a3 + 40);
  v8 = (uint64_t *)(a2 + 8560);
  v20 = v7;
  v21 = 0;
  v9 = sub_22F2BB328((uint64_t *)(a2 + 8560), &v20, &v21);
  v10 = v21;
  if (!v9)
    v10 = *(_QWORD *)(a2 + 8560) + 40 * *(unsigned int *)(a2 + 8576);
  if (*(_QWORD *)(a2 + 8560) + 40 * *(unsigned int *)(a2 + 8576) != v10)
    goto LABEL_4;
  v17 = *(_QWORD *)(a2 + 8);
  if (v17)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v17 + 232))(v17, v7);
    v20 = v7;
    v21 = 0;
    v19 = sub_22F2BB328(v8, &v20, &v21);
    v10 = v21;
    if (!v19)
      v10 = *(_QWORD *)(a2 + 8560) + 40 * *(unsigned int *)(a2 + 8576);
    if (*(_QWORD *)(a2 + 8560) + 40 * *(unsigned int *)(a2 + 8576) != v10)
    {
LABEL_4:
      v11 = 8;
      if ((*(_BYTE *)(a3 + 58) & 2) == 0)
        v11 = 24;
      if (*(_QWORD *)(v10 + v11) >= 8uLL)
      {
        v12 = *(_QWORD *)(a3 + 16);
        v13 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
        if ((v12 & 4) != 0)
          v13 = (_QWORD *)*v13;
        if (v13)
          v14 = (unint64_t)(v13 - 6);
        else
          v14 = 0;
        v15 = *(_DWORD *)(v14 + 28);
        sub_22EB0C8E4(a1, v14);
        if (v13)
        {
          if ((v15 & 0x7F) == 0x13)
          {
            v16 = *(_QWORD *)(v14 + 104);
            if (v16)
              sub_22EB0C8E4(a1, v16);
          }
        }
      }
    }
  }
  return a1;
}

char *sub_22EAFE2E4(_QWORD *a1, _QWORD *a2, unsigned int a3, int a4, int a5, _DWORD *a6, unint64_t a7, uint64_t a8, unsigned int *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, int a16, char a17, char a18)
{
  int v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  BOOL v64;
  int *v65;
  unsigned int v66;
  BOOL v67;
  uint64_t v68;
  void **v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t i;
  uint64_t v75;
  unsigned int v76;
  int v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  int *v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  int v114;
  unsigned int v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  int v129;
  int v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  const char *v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  void *v142;
  unint64_t v143;
  void **v144;
  size_t v145;
  _BOOL4 v146;
  _BOOL4 v147;
  uint64_t v148;
  uint64_t v149;
  char v150;
  void *v151;
  unint64_t v152;
  void **v153;
  size_t v154;
  _BOOL4 v155;
  _BOOL4 v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t **v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  int v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  __n128 v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  BOOL v223;
  char v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  _QWORD *v230;
  unsigned __int8 *v231;
  _BYTE *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  unsigned __int8 *v237;
  _QWORD *v238;
  unsigned __int8 *v239;
  __int16 v240;
  int v241;
  uint64_t v242;
  _DWORD *v243;
  uint64_t v244;
  unsigned int v245;
  _QWORD *v246;
  uint64_t v247;
  uint64_t v248;
  llvm::SmallPtrSetImplBase *v249;
  uint64_t v251;
  uint64_t *v252;
  unsigned int v253[24];
  unsigned int v254[24];
  unsigned int v255[24];
  unsigned int v256[24];
  unsigned int v257[24];
  unsigned int v258[24];
  __int128 v259;
  int v260;
  int v261;
  int v262;
  __int16 v263;
  unsigned __int8 v264;
  char *v265;
  unsigned int v266[24];
  uint64_t v267;
  _BOOL4 v268;
  uint64_t v269;
  void *v270[2];
  uint64_t v271;
  _QWORD v272[8];
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  int v278;
  _QWORD v279[3];
  char v280;
  BOOL v281;
  char v282;
  int v283;
  void *v284;
  _BYTE v285[12];
  char v286;
  void *__p;
  uint64_t v288;
  uint64_t v289;
  char v290;
  uint64_t v291;

  v18 = a3;
  v19 = a1;
  v291 = *MEMORY[0x24BDAC8D0];
  v20 = a1[27];
  if ((*(_WORD *)(v20 + 8) & 0x7Fu) - 19 >= 5)
  {
    sub_22E8FCA40(a1, a3, 0xF56u, 0, (uint64_t)v266);
    sub_22E903BEC(v266);
    return 0;
  }
  v21 = (void *)a7;
  if (a7)
  {
    if (a7 >= 0x10)
    {
      v25 = 0;
      v26 = *(_QWORD *)(a7 & 0xFFFFFFFFFFFFFFF0);
      if (v26 && *(_BYTE *)(v26 + 16) == 57)
      {
        v21 = *(void **)(v26 + 8);
        v25 = *(_QWORD *)(v26 + 24);
      }
    }
    else
    {
      v25 = 0;
      v21 = 0;
    }
    v18 = a3;
    if ((sub_22EE80084(a1, (uint64_t)v21, a3) & 1) != 0)
      return 0;
    v270[0] = v21;
    sub_22F114F34(v270);
    v32 = v19[11];
    v33 = sub_22F36E044(v32);
    v34 = *(_QWORD *)(v33 + 48);
    if (v34)
      v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFF0);
    else
      v35 = (void *)sub_22EF6462C(v32, v33);
    v242 = (uint64_t)a9;
    v243 = a6;
    v244 = v20;
    v37 = v270[0] == v35;
  }
  else
  {
    v29 = a1[11];
    v30 = sub_22F36E1B8(v29);
    v31 = *(_QWORD *)(v30 + 48);
    if (v31)
      v21 = (void *)(v31 & 0xFFFFFFFFFFFFFFF0);
    else
      v21 = (void *)sub_22EF6462C(v29, v30);
    sub_22E8FCA40(v19, v18, 0x1A5Cu, 0, (uint64_t)v270);
    v36 = *a9;
    v286 = 0;
    *(_QWORD *)&v285[4] = 0;
    v289 = 0x400000000000000;
    v288 = 0;
    v284 = (void *)(v36 | (v36 << 32));
    v285[0] = 0;
    __p = (void *)694446376;
    v290 = 0;
    sub_22E890748((uint64_t)v270, &v284);
    if (SHIBYTE(v289) < 0)
      operator delete(__p);
    v242 = (uint64_t)a9;
    v243 = a6;
    v244 = v20;
    sub_22E903BEC((unsigned int *)v270);
    v25 = 0;
    v37 = 0;
  }
  v38 = a14;
  v265 = 0;
  v241 = a5;
  if (a16 == 22)
    v39 = 2;
  else
    v39 = 1;
  v265 = (char *)sub_22F3B51C0(v19[11], v18, a4, a11, (uint64_t)v21, v25, v19[27], a5 == 35, a17, 0, 0, 0, 0, v240, v39, SHIWORD(v39), v37);
  v284 = &v285[8];
  *(_QWORD *)v285 = 0x1000000000;
  v246 = v19;
  if ((a11 & 7u) < 2)
    goto LABEL_26;
  v46 = 1;
  if ((a11 & 7) != 2)
  {
    v46 = *(_DWORD *)(a11 & 0xFFFFFFFFFFFFFFF8) - 3;
    if (*(_DWORD *)(a11 & 0xFFFFFFFFFFFFFFF8) == 3)
      goto LABEL_26;
  }
  v47 = 0;
  v48 = a12;
  v249 = (llvm::SmallPtrSetImplBase *)(a2 + 9);
  if (a18)
    v49 = 135;
  else
    v49 = 134;
  v245 = v49;
  v248 = (uint64_t)(v19 + 415);
  v247 = v46;
  do
  {
    v50 = (uint64_t *)(v48 + 72 * v47);
    v51 = v50[2];
    if (v51)
    {
      if (v51 >= 0x10)
      {
        v52 = 0;
        v53 = *(_QWORD *)(v51 & 0xFFFFFFFFFFFFFFF0);
        if (v53 && *(_BYTE *)(v53 + 16) == 57)
        {
          v51 = *(_QWORD *)(v53 + 8);
          v52 = *(uint64_t **)(v53 + 24);
        }
      }
      else
      {
        v52 = 0;
        v51 = 0;
      }
    }
    else
    {
      v78 = v19[11];
      v79 = sub_22F36E1B8(v78);
      v80 = *(_QWORD *)(v79 + 48);
      if (v80)
      {
        v52 = 0;
        v51 = v80 & 0xFFFFFFFFFFFFFFF0;
      }
      else
      {
        v51 = sub_22EF6462C(v78, v79);
        v52 = 0;
      }
    }
    v54 = v48 + 72 * v47;
    v57 = *(_DWORD *)(v54 + 8);
    v55 = (int *)(v54 + 8);
    v56 = v57;
    v58 = *v50;
    v59 = v19[27];
    v60 = *(_WORD *)(v59 + 8) & 0x7F;
    v61 = -40;
    if (v60 > 0x46)
    {
      if (v60 != 83)
      {
        if (v60 == 71)
        {
          v61 = -56;
        }
        else if (v60 != 81)
        {
          goto LABEL_56;
        }
      }
    }
    else
    {
      if (v60 > 0x18)
        goto LABEL_55;
      if (v60 == 16)
        goto LABEL_48;
      if (((1 << v60) & 0x1066) != 0)
        goto LABEL_62;
      if (v60 == 24)
      {
LABEL_48:
        v61 = -48;
      }
      else
      {
LABEL_55:
        if (v60 != 70)
        {
LABEL_56:
          v62 = v60 - 52;
          v223 = v60 - 33 >= 5;
          v63 = -64;
          if (v223)
            v63 = -48;
          v223 = v62 >= 6;
          v61 = -72;
          if (v223)
            v61 = v63;
          goto LABEL_62;
        }
        v61 = -64;
      }
    }
LABEL_62:
    v64 = sub_22EFB9D84(v59 + v61) == 0;
    v270[0] = 0;
    v270[1] = v272;
    v271 = 0x800000000;
    v274 = 0;
    v275 = 0;
    v273 = 0;
    v276 = v19;
    v277 = v58;
    v278 = v56;
    sub_22EFC6D6C((uint64_t)v279, v58);
    v279[1] = 0;
    v279[2] = 0;
    v280 = 1;
    v281 = v64;
    v282 = 1;
    v283 = 0;
    sub_22EC56024((uint64_t)v270);
    sub_22EC63520((uint64_t)v19, (uint64_t)v270, a2, 0, 0);
    if (LODWORD(v270[0]) == 2)
    {
      v65 = (int *)(*(_QWORD *)v270[1] & 0xFFFFFFFFFFFFFFFCLL);
      v66 = v65[7] & 0x7F;
      v67 = v66 > 0x2F;
      v68 = (1 << v66) & 0xC00000060000;
      if (!v67 && v68 != 0)
        v65 = (int *)sub_22EFBAEA4(*(_QWORD *)v270[1] & 0xFFFFFFFFFFFFFFFCLL);
      v70 = sub_22E3BA914(v249, v65);
      v71 = a2[10];
      v72 = 88;
      if (v71 == a2[9])
        v72 = 92;
      if (v70 != (void **)(v71 + 8 * *(unsigned int *)((char *)a2 + v72)))
      {
        sub_22E8FCA40(v19, *v55, v245, 0, (uint64_t)&v259);
        sub_22E8BAE44((uint64_t)&v259, v50);
        sub_22E903BEC((unsigned int *)&v259);
        sub_22E8FCA40(v19, v65[6], 0x6Cu, 0, (uint64_t)v258);
        sub_22E903BEC(v258);
      }
    }
    if (!v52)
    {
      v76 = *v55;
      v77 = *v55;
      goto LABEL_91;
    }
    v73 = *v52;
    for (i = *v52; ; i = sub_22F115B7C(i))
    {
      while (1)
      {
        if ((i & 0xF) != 0)
          goto LABEL_84;
        v75 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v75 <= 0x39)
          break;
LABEL_79:
        if (sub_22F115668(i))
          v73 = i;
        i = sub_22F115B7C(i);
        if (!i)
          goto LABEL_90;
      }
      if (v75 == 24)
        goto LABEL_89;
      if (v75 == 26)
        break;
      if (((1 << v75) & 0x20000000200003CLL) == 0)
        goto LABEL_79;
LABEL_84:
      ;
    }
    if ((*(_BYTE *)(i + 23) & 0x10) == 0)
      goto LABEL_84;
LABEL_89:
    v73 = i;
LABEL_90:
    v77 = sub_22F115668(v73);
    v76 = *v55;
    v19 = v246;
LABEL_91:
    if (v265)
      v81 = (uint64_t)(v265 + 48);
    else
      v81 = 0;
    v82 = sub_22EA2E3A8((uint64_t)v19, v81, v77, v76, *v50, v51, v52, 0);
    v83 = (int *)v82;
    v84 = *(_DWORD *)(v82 + 96) | 0x1000;
    *(_DWORD *)(v82 + 96) = v84;
    v48 = a12;
    if (v47 >= 0xFF)
    {
      sub_22F3AC2B8(v82, v47);
      v85 = v83[24];
    }
    else
    {
      v85 = v84 & 0xF00FFFFF | (v47 << 20);
      *(_DWORD *)(v82 + 96) = v85;
    }
    v86 = a12 + 72 * v47;
    v83[24] = v85 & 0xFFF01FFF | ((*(_DWORD *)(v86 + 24) & 0x7F) << 13);
    sub_22EA63DD8(v19, v19[418], (uint64_t)v83, v86 + 56, 1);
    sub_22E91049C((uint64_t)v19, v19[418], (uint64_t)v83);
    sub_22E9114FC(v19, (uint64_t)v83);
    if (sub_22E49C868((uint64_t)v83))
    {
      sub_22E8FCA40(v19, v83[6], 0xB8Au, 0, (uint64_t)v257);
      sub_22E903BEC(v257);
      sub_22EFC77E8((uint64_t)v83, 1);
    }
    sub_22E3BA850((uint64_t)v249, v83);
    sub_22E8CE7E8(v248, (uint64_t)v83);
    v87 = *(unsigned int *)v285;
    if (*(unsigned int *)v285 >= (unint64_t)*(unsigned int *)&v285[4])
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v87 = *(unsigned int *)v285;
    }
    *((_QWORD *)v284 + v87) = v83;
    ++*(_DWORD *)v285;
    if ((_BYTE)v283)
    {
      if (LODWORD(v270[0]) == 5)
      {
        sub_22EC64D18(v276, (uint64_t)v270);
      }
      else if (v274 && (*(_DWORD *)(v276[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v276, (uint64_t)v270);
      }
    }
    if (v273)
    {
      v88 = sub_22EC6CBD0(v273);
      MEMORY[0x2348A0E9C](v88, 0x10E0C409F09D3C3);
    }
    if (v270[1] != v272)
      free(v270[1]);
    ++v47;
  }
  while (v47 != v247);
LABEL_26:
  v40 = v244 - 48;
  if (a14)
  {
    v89 = (uint64_t *)(a13 + 16);
    do
    {
      v90 = *v89;
      v91 = *(_QWORD *)(*v89 + 48);
      v92 = v19[11];
      if (v91 <= 0xF)
      {
        v95 = sub_22F36E1B8(v19[11]);
        if (!*(_QWORD *)(v95 + 48))
          sub_22EF6462C(v92, v95);
      }
      else
      {
        sub_22EF69F90(v19[11], v91);
      }
      if (v265)
        v93 = (unint64_t)(v265 + 48);
      else
        v93 = 0;
      *(_QWORD *)(v90 + 16) = v93 & 0xFFFFFFFFFFFFFFFBLL;
      v94 = *(unsigned int *)v285;
      if (*(unsigned int *)v285 >= (unint64_t)*(unsigned int *)&v285[4])
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v94 = *(unsigned int *)v285;
      }
      *((_QWORD *)v284 + v94) = v90;
      v41 = ++*(_DWORD *)v285;
      v89 += 4;
      --v38;
    }
    while (v38);
  }
  else
  {
    v41 = *(_DWORD *)v285;
  }
  sub_22F3B551C((uint64_t)v265, v19[11], v284, v41, v242, a10);
  v42 = (uint64_t)v265;
  *((_QWORD *)v265 + 7) = *((_QWORD *)v265 + 7) & 0xFFFFFFFE03FFFFFFLL | ((*v243 & 0x7FLL) << 26);
  sub_22EA63DD8(v19, v19[418], v42, a15, 1);
  sub_22E91049C((uint64_t)v19, v19[418], (uint64_t)v265);
  sub_22E9114FC(v19, (uint64_t)v265);
  v43 = v244;
  v44 = *(_DWORD *)(v244 - 20);
  if ((v44 & 0x7E) == 0x14)
    v45 = v244 - 48;
  else
    v45 = 0;
  v267 = v45;
  if ((v44 & 0x7E) == 0x14)
  {
    v100 = sub_22EFDA1A0(v40, a11, v241 == 35, 0);
    v101 = (unint64_t)v265;
    v102 = v267 + 48;
    sub_22EFC80C4((uint64_t)v265, v267 + 48);
    sub_22EFCCFA0(v102, v101);
    v104 = sub_22F276498(v267);
    v105 = v265;
    while (v104 != v103)
    {
      v106 = *(_QWORD *)(v104 + 72);
      if (v106
        && *(_QWORD *)(v106 + 40) == a11
        && ((*(unsigned __int8 *)(v106 + 58) ^ v105[58]) & 2) == 0)
      {
        *(_QWORD *)(v104 + 72) = v105;
      }
      v107 = *(_QWORD *)(v104 + 64);
      if (v107
        && *(_QWORD *)(v107 + 40) == a11
        && ((*(unsigned __int8 *)(v107 + 58) ^ v105[58]) & 2) == 0)
      {
        *(_QWORD *)(v104 + 64) = v105;
        break;
      }
      do
        v104 = *(_QWORD *)(v104 + 8) & 0xFFFFFFFFFFFFFFF8;
      while (v104 && (*(_DWORD *)(v104 + 28) & 0x7F) != 0x4E);
    }
    if (!sub_22EFDBD9C((uint64_t)v105))
    {
      v111 = (*(uint64_t (**)(char *))(*(_QWORD *)v265 + 32))(v265);
      if (sub_22EFDBD9C(v111))
      {
        sub_22EFC8E88(v111);
        v165 = *v164;
        v166 = *((unsigned int *)v164 + 2);
        if ((_DWORD)v166 && *(_WORD *)(*v165 + 32) != 484)
        {
          v167 = 8 * v166 - 8;
          v168 = *v164;
          do
          {
            v169 = v168[1];
            ++v168;
            v167 -= 8;
          }
          while (*(_WORD *)(v169 + 32) != 484);
        }
        do
        {
          v171 = *v165++;
          v170 = v171;
        }
        while (*(_WORD *)(v171 + 32) != 484);
        v172 = (uint64_t)v265;
        v173 = v19[11];
        v174 = *(_DWORD *)(v170 + 16);
        v270[1] = 0;
        v270[0] = 0;
        LODWORD(v271) = v174;
        HIDWORD(v271) = v174;
        LODWORD(v272[0]) = 0;
        WORD2(v272[0]) = 0;
        BYTE6(v272[0]) = ((((BYTE6(v272[0]) >> 7) & 1) << 23) | 0x780000u) >> 16;
        v175 = sub_22F397994(v173, v270);
        sub_22EFCA95C(v172, v175);
      }
    }
    v112 = *(_QWORD *)(v267 + 88);
    if (v112)
    {
      v269 = 0;
      v117 = sub_22EFDBA90(v112, *((_QWORD *)v265 + 5), (*((_QWORD *)v265 + 7) >> 17) & 1, 0, 1, 0);
      v269 = v117;
      v118 = (uint64_t)v265;
      if (v117)
      {
        v176 = v117;
        if (sub_22F32AEB8(v117) && !sub_22F32AEB8(v118))
        {
          v177 = v19[11];
          v178 = *(_DWORD *)(v118 + 24);
          v270[1] = 0;
          v270[0] = 0;
          LODWORD(v271) = v178;
          HIDWORD(v271) = v178;
          LODWORD(v272[0]) = 0;
          WORD2(v272[0]) = 0;
          BYTE6(v272[0]) = ((((BYTE6(v272[0]) >> 7) & 1) << 23) | 0x780000u) >> 16;
          v179 = sub_22F398CBC(v177, v270);
          sub_22EFCA95C(v118, v179);
        }
        v180 = sub_22F3B5740(v118);
        v181 = v19;
        v182 = *(_QWORD *)(v118 + 80);
        v183 = HIDWORD(*(_QWORD *)(v118 + 56)) & 1;
        sub_22F3B5740(v176);
        *(_QWORD *)(v118 + 80) = sub_22EB0CC98(v181, v180, v182, v183, *(_QWORD *)(v176 + 80), HIDWORD(*(_QWORD *)(v176 + 56)) & 1);
        v184 = *(_DWORD *)(v118 + 104);
        if (*(_DWORD *)(v176 + 104) < v184)
          v184 = *(_DWORD *)(v176 + 104);
        if (v184)
        {
          v185 = 0;
          v186 = 8 * v184;
          do
          {
            v187 = *(_QWORD *)(*(_QWORD *)(v118 + 96) + v185);
            *(_QWORD *)(v187 + 48) = sub_22EB0CC98(v181, *(_DWORD *)(v187 + 24), *(_QWORD *)(v187 + 48), (~*(_DWORD *)(v187 + 96) & 0x81000) == 0, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v176 + 96) + v185) + 48), (~*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v176 + 96) + v185) + 96) & 0x81000) == 0);
            v185 += 8;
          }
          while (v186 != v185);
        }
        v19 = v181;
        if (v112 == sub_22EFDC9F0(v269))
        {
          v270[0] = &v269;
          v270[1] = &v267;
          v271 = (uint64_t)v181;
          v272[0] = &v265;
          if (sub_22EFDBD9C((uint64_t)v265))
          {
            if ((v265[29] & 1) != 0)
            {
              sub_22EFC8E88((uint64_t)v265);
              v197 = *(uint64_t **)v196;
              v198 = *(unsigned int *)(v196 + 8);
              v199 = *(uint64_t **)v196;
              if ((_DWORD)v198)
              {
                v201 = 8 * v198;
                v199 = *(uint64_t **)v196;
                while (*(_WORD *)(*v199 + 32) != 484)
                {
                  ++v199;
                  v201 -= 8;
                  if (!v201)
                    goto LABEL_301;
                }
              }
              if (v199 == &v197[v198])
              {
LABEL_301:
                v188 = 0;
              }
              else
              {
                do
                {
                  v200 = *v197++;
                  v188 = v200;
                }
                while (*(_WORD *)(v200 + 32) != 484);
              }
              v19 = v246;
            }
            else
            {
              v188 = 0;
            }
            v202 = (*(uint64_t (**)(char *))(*(_QWORD *)v265 + 32))(v265);
            if (v202 == v269)
            {
              if (!sub_22EFDBD9C(v202))
              {
                sub_22E8FCA40(v19, *(_DWORD *)(v188 + 16), 0xFF5u, 0, (uint64_t)v256);
                sub_22E903BEC(v256);
                sub_22E8FCA40(v19, *(_DWORD *)(v269 + 24), 0x6Cu, 0, (uint64_t)v255);
                sub_22E903BEC(v255);
              }
            }
            else
            {
              sub_22EAFFB64((uint64_t)v270);
            }
          }
          else if (sub_22EFDBD9C(v269))
          {
            if ((*(_BYTE *)(v269 + 29) & 1) == 0)
              goto LABEL_312;
            v189.n128_f64[0] = sub_22EFC8E88(v269);
            v191 = *(uint64_t **)v190;
            v192 = *(unsigned int *)(v190 + 8);
            v193 = *(uint64_t **)v190;
            if ((_DWORD)v192)
            {
              v204 = 8 * v192;
              v193 = *(uint64_t **)v190;
              while (*(_WORD *)(*v193 + 32) != 484)
              {
                ++v193;
                v204 -= 8;
                if (!v204)
                  goto LABEL_312;
              }
            }
            if (v193 == &v191[v192])
            {
LABEL_312:
              v194 = 0;
            }
            else
            {
              do
              {
                v195 = *v191++;
                v194 = v195;
              }
              while (*(_WORD *)(v195 + 32) != 484);
            }
            v205 = (*(uint64_t (**)(char *, __n128))(*(_QWORD *)v265 + 32))(v265, v189);
            if (v205 == v269)
            {
              v206 = (uint64_t)v265;
              v19 = v246;
              v207 = v246[11];
              v208 = *(_DWORD *)(v194 + 16);
              v259 = 0uLL;
              v260 = v208;
              v261 = v208;
              v262 = 0;
              v263 = 0;
              v264 = ((((v264 >> 7) & 1) << 23) | 0x780000u) >> 16;
              v209 = sub_22F397994(v207, &v259);
              sub_22EFCA95C(v206, v209);
            }
            else
            {
              sub_22EAFFB64((uint64_t)v270);
              v19 = v246;
            }
          }
        }
        if ((*(_DWORD *)(v267 + 28) & 0x7F) == 0x14
          && (*(_BYTE *)(v269 + 60) & 0x10) != 0
          && sub_22F41F330(*((_QWORD *)v265 + 5)) == 7)
        {
          sub_22E8FCA40(v19, *((_DWORD *)v265 + 6), 0x1946u, 0, (uint64_t)v270);
          *(_QWORD *)&v259 = *((_QWORD *)v265 + 5);
          sub_22E894538((uint64_t)v270, (uint64_t *)&v259);
          sub_22E903BEC((unsigned int *)v270);
        }
      }
      else
      {
        sub_22EAFFC64((uint64_t)v19, v40, (uint64_t)v265);
        sub_22EAFFCF4((uint64_t)v19, v112, (uint64_t)v265, v267);
      }
      v210 = sub_22F257E10(v112);
      if (v210)
      {
        v211 = v210;
        while ((*(_BYTE *)(v211 + 28) & 0x80) != 0 || (*(_BYTE *)(v211 + 8) & 4) != 0)
        {
          v211 = *(_QWORD *)(v211 + 128);
          if (!v211)
            goto LABEL_163;
        }
        while (1)
        {
          v212 = *(_QWORD *)(v211 + 120) & 0xFFFFFFFFFFFFFFF8;
          v213 = *(unsigned int *)(v212 + 24);
          if ((_DWORD)v213)
            break;
LABEL_358:
          v211 = *(_QWORD *)(v211 + 128);
          v19 = v246;
          if (!v211)
            goto LABEL_163;
          while ((*(_BYTE *)(v211 + 28) & 0x80) != 0 || (*(_BYTE *)(v211 + 8) & 4) != 0)
          {
            v211 = *(_QWORD *)(v211 + 128);
            if (!v211)
              goto LABEL_163;
          }
        }
        v214 = *(uint64_t **)(v212 + 16);
        v252 = &v214[v213];
        while (1)
        {
          v215 = sub_22F3B4CBC(*v214, *((_QWORD *)v265 + 5), (*((_QWORD *)v265 + 7) >> 17) & 1);
          if (v215)
          {
            v216 = *(unsigned int *)(v215 + 104);
            if ((_DWORD)v216)
              break;
          }
LABEL_357:
          if (++v214 == v252)
            goto LABEL_358;
        }
        v217 = *(uint64_t **)(v215 + 96);
        v218 = (uint64_t *)*((_QWORD *)v265 + 12);
        v219 = 8 * v216;
        while (2)
        {
          v220 = *v218;
          v221 = *v217;
          v269 = *v214;
          if ((sub_22EAF30F4(v220, v221, v246) & 1) == 0)
          {
            sub_22E8FCA40(v246, *(_DWORD *)(v211 + 24), 0x1562u, 0, (uint64_t)v270);
            v222 = *(_QWORD *)(v211 + 40);
            v223 = (v222 & 7) == 0 && v222 >= 8;
            v224 = !v223;
            LOBYTE(v268) = v224;
            v225 = sub_22E894E38((uint64_t)v270, (unsigned __int8 *)&v268);
            v226 = sub_22E890024(v225, &v269);
            v227 = v226;
            v228 = *(_QWORD *)(v220 + 16);
            v229 = (_QWORD *)(v228 & 0xFFFFFFFFFFFFFFF8);
            if ((v228 & 4) != 0)
              v229 = (_QWORD *)*v229;
            if (v229)
              v230 = v229 - 6;
            else
              v230 = 0;
            if (*(_BYTE *)(v226 + 80))
            {
              v231 = *(unsigned __int8 **)(v226 + 32);
              if (!v231)
              {
                v231 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v227 + 40));
                *(_QWORD *)(v227 + 32) = v231;
              }
              v231[*v231 + 1] = 11;
              v232 = *(_BYTE **)(v227 + 32);
              goto LABEL_347;
            }
            if (*(_BYTE *)(v226 + 92))
            {
              v234 = *(_QWORD *)v226;
              v235 = *(_QWORD *)(v226 + 16);
              if (v235)
              {
                v251 = *(_QWORD *)v227;
                v235 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v235 + 32))(v235);
                v234 = v251;
              }
              *(_QWORD *)&v259 = v235;
              v236 = sub_22F2F1D6C((uint64_t *)(v234 + 12784), (uint64_t *)&v259)[1] + 32 * *(unsigned int *)(v227 + 88);
              v239 = *(unsigned __int8 **)(v236 + 8);
              v238 = (_QWORD *)(v236 + 8);
              v237 = v239;
              if (!v239)
              {
                v237 = (unsigned __int8 *)sub_22E3B8AAC(v238[1]);
                *v238 = v237;
              }
              v237[*v237 + 1] = 11;
              v232 = (_BYTE *)*v238;
LABEL_347:
              v233 = *v232;
              *v232 = v233 + 1;
              *(_QWORD *)&v232[8 * v233 + 16] = v230;
            }
            sub_22E903BEC((unsigned int *)v270);
          }
          ++v217;
          ++v218;
          v219 -= 8;
          if (!v219)
            goto LABEL_357;
          continue;
        }
      }
    }
LABEL_163:
    v43 = v244;
    if (v100)
    {
      sub_22E8FCA40(v19, *((_DWORD *)v265 + 6), 0xCD2u, 0, (uint64_t)v270);
      *(_QWORD *)&v259 = *((_QWORD *)v265 + 5);
      sub_22E894538((uint64_t)v270, (uint64_t *)&v259);
      sub_22E903BEC((unsigned int *)v270);
      sub_22E8FCA40(v19, *(_DWORD *)(v100 + 24), 0x6Cu, 0, (uint64_t)v254);
      sub_22E903BEC(v254);
      sub_22EFC77E8((uint64_t)v265, 1);
      goto LABEL_260;
    }
  }
  else
  {
    if ((v44 & 0x7F) != 0x17)
    {
      sub_22EAFFC64((uint64_t)v19, v40, (uint64_t)v265);
      v96 = v244 - 48;
      if ((*(_DWORD *)(v244 - 20) & 0x7F) == 0x16 || (v96 = *(_QWORD *)(v244 + 56)) != 0)
        sub_22EAFFCF4((uint64_t)v19, v96, (uint64_t)v265, 0);
    }
    v97 = sub_22EFCAE04(v40);
    sub_22EFCCFA0(v97, (unint64_t)v265);
  }
  v98 = *(_DWORD *)(v43 - 20);
  if ((v98 & 0x7F) == 0x13)
  {
    v99 = 56;
LABEL_148:
    v40 = *(_QWORD *)(v43 + v99);
  }
  else if ((v98 & 0x7F) != 0x16)
  {
    if ((v98 & 0x7E) == 0x14)
    {
      v99 = 40;
      goto LABEL_148;
    }
    v40 = 0;
  }
  v108 = *(_QWORD *)(*((_QWORD *)v265 + 10) & 0xFFFFFFFFFFFFFFF0);
  if (!v108 || *(_BYTE *)(v108 + 16) != 32)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v108 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32)
      goto LABEL_166;
    v108 = sub_22F10CF48(v108);
    if (!v108)
      goto LABEL_166;
  }
  if (sub_22E5761BC(v108) || sub_22E491464(v108))
    goto LABEL_156;
  if (!v40)
  {
    v110 = 2;
    v109 = 1;
    goto LABEL_167;
  }
  v113 = sub_22F31179C(v108);
  if (v113)
  {
    v159 = v113;
    if (v113 != v40)
    {
      v160 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v40 + 32))(v40);
      if (v160 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)v159 + 32))(v159))
      {
        v161 = v40;
        while (1)
        {
          v162 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v159 + 32))(v159);
          if (v162 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)v161 + 32))(v161))
            break;
          v163 = sub_22F3B46CC(v161);
          v161 = v163;
          if (!v163 || v163 == v159)
          {
            if (v163)
              break;
            goto LABEL_166;
          }
        }
      }
    }
LABEL_156:
    v109 = 0;
    v110 = 0;
  }
  else
  {
LABEL_166:
    v109 = 1;
    v110 = 1;
  }
LABEL_167:
  sub_22EAFDC80((uint64_t)v19, (unint64_t)v265, v40, v110);
  if ((*(_WORD *)(v19[9] + 148) & 2) != 0)
    v114 = sub_22EAF318C(v19, (uint64_t)v265);
  else
    v114 = 0;
  if (((v109 | v114) & 1) == 0 && (v265[60] & 2) == 0 && (*(_BYTE *)(v19[9] + 2) & 4) != 0)
  {
    v115 = sub_22EFDBF50((uint64_t)v265);
    if (v115 <= 0xC)
    {
      if (((1 << v115) & 0x1448) != 0)
      {
        v116 = v265;
        if ((v265[58] & 2) == 0)
          goto LABEL_186;
LABEL_181:
        v119 = *(_QWORD *)(*((_QWORD *)v116 + 10) & 0xFFFFFFFFFFFFFFF0);
        if (v119 && *(_BYTE *)(v119 + 16) == 50)
        {
          if (!sub_22F1150C0(*(_QWORD *)(v119 + 24)))
          {
            v116 = v265;
            goto LABEL_185;
          }
        }
        else
        {
LABEL_185:
          *((_QWORD *)v116 + 7) |= 0x200000000uLL;
        }
      }
      else if (((1 << v115) & 0x22) != 0)
      {
        v116 = v265;
        if ((v265[58] & 2) == 0)
          goto LABEL_181;
      }
    }
  }
LABEL_186:
  if (a18)
  {
    v120 = *(_QWORD *)(v19[11] + 15088);
    if (*(_DWORD *)(v120 + 56) == 41)
    {
      v121 = v265;
      v122 = *((unsigned int *)v265 + 26);
      if ((_DWORD)v122)
      {
        v123 = (uint64_t *)*((_QWORD *)v265 + 12);
        v124 = 8 * v122;
        while (1)
        {
          v125 = *v123;
          v126 = *(_QWORD *)(*v123 + 48);
          if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v126 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                + 16)
             - 55 <= 1)
            break;
          ++v123;
          v124 -= 8;
          if (!v124)
            goto LABEL_196;
        }
        v127 = *(_QWORD *)(v125 + 56);
        if ((v127 & 4) != 0 && (v203 = v127 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v203 + 16)))
          v128 = **(int ***)(v203 + 24);
        else
          v128 = (int *)(v125 + 64);
        v129 = *v128;
        v269 = v126;
        if (v129)
        {
LABEL_198:
          v130 = *(_DWORD *)(v120 + 68);
          if (v130 == 7)
          {
            v131 = 9;
          }
          else
          {
            if ((v130 & 0xFFFFFFF7) != 3)
              goto LABEL_207;
            v131 = 0x8000000B0000000ALL;
          }
          v259 = v131;
          *(_OWORD *)v270 = *(_OWORD *)(v120 + 240);
          if (sub_22E3B38EC(v270, &v259))
          {
            sub_22E8FCA40(v19, v129, 0x1003u, 0, (uint64_t)v270);
            v132 = sub_22E8901B8((uint64_t)v270, &v269);
            v268 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v121 + 10) & 0xFFFFFFFFFFFFFFF0)
                                                                            + 8) & 0xFFFFFFFFFFFFFFF0)
                                                    + 16)
                 - 55 < 2;
            v133 = sub_22E8900C4(v132, (int *)&v268);
            if ((*(_DWORD *)(v120 + 68) & 0xFFFFFFF7) == 3)
              v134 = "macOS 10.11";
            else
              v134 = "iOS 9";
            v267 = (uint64_t)v134;
            sub_22E8AECC4(v133, &v267);
            sub_22E903BEC((unsigned int *)v270);
          }
          goto LABEL_207;
        }
      }
LABEL_196:
      if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v265 + 10) & 0xFFFFFFFFFFFFFFF0)
                                                                    + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 16)
         - 55 <= 1)
      {
        v129 = sub_22F3B5740((uint64_t)v265);
        v269 = *((_QWORD *)v121 + 10);
        v120 = *(_QWORD *)(v19[11] + 15088);
        goto LABEL_198;
      }
    }
  }
LABEL_207:
  if ((v265[29] & 1) != 0)
  {
    sub_22EFC8E88((uint64_t)v265);
    v136 = *(uint64_t **)v135;
    v137 = *(unsigned int *)(v135 + 8);
    v138 = *(uint64_t **)v135;
    if ((_DWORD)v137)
    {
      v148 = 8 * v137;
      v138 = *(uint64_t **)v135;
      while (*(_WORD *)(*v138 + 32) != 115)
      {
        ++v138;
        v148 -= 8;
        if (!v148)
          goto LABEL_237;
      }
    }
    if (v138 != &v136[v137])
    {
      do
      {
        v140 = *v136++;
        v139 = v140;
      }
      while (*(_WORD *)(v140 + 32) != 115);
      if ((*((_QWORD *)v265 + 7) & 0x20000) == 0)
      {
        *(_QWORD *)&v259 = *((_QWORD *)v265 + 5);
        sub_22F1D3A38((uint64_t *)&v259, (char *)v270);
        v141 = HIBYTE(v271);
        if (v271 >= 0)
          v142 = (void *)(HIBYTE(v271) & 0x7F);
        else
          v142 = v270[1];
        if (v142 == (void *)4)
        {
          if (v271 >= 0)
            v143 = HIBYTE(v271);
          else
            v143 = (unint64_t)v270[1];
          if (v271 >= 0)
            v144 = v270;
          else
            v144 = (void **)v270[0];
          if (v143 >= 4)
            v145 = 4;
          else
            v145 = v143;
          v146 = memcmp(v144, "load", v145) == 0;
          v147 = v143 == 4 && v146;
        }
        else
        {
          v147 = 0;
        }
        if (v141 < 0)
          operator delete(v270[0]);
        if (v147)
        {
          sub_22E8FCA40(v19, *(_DWORD *)(v139 + 16), 0x189Cu, 0, (uint64_t)v270);
          LODWORD(v259) = 0;
          sub_22E8900C4((uint64_t)v270, (int *)&v259);
          sub_22E903BEC((unsigned int *)v270);
          sub_22EA27284((uint64_t)v265);
        }
      }
    }
  }
LABEL_237:
  v149 = (uint64_t)v265;
  if ((*((_QWORD *)v265 + 7) & 0x20000) == 0)
  {
    *(_QWORD *)&v259 = *((_QWORD *)v265 + 5);
    sub_22F1D3A38((uint64_t *)&v259, (char *)v270);
    v150 = HIBYTE(v271);
    if (v271 >= 0)
      v151 = (void *)(HIBYTE(v271) & 0x7F);
    else
      v151 = v270[1];
    if (v151 == (void *)4)
    {
      if (v271 >= 0)
        v152 = HIBYTE(v271);
      else
        v152 = (unint64_t)v270[1];
      if (v271 >= 0)
        v153 = v270;
      else
        v153 = (void **)v270[0];
      if (v152 >= 4)
        v154 = 4;
      else
        v154 = v152;
      v155 = memcmp(v153, "load", v154) == 0;
      v156 = v152 == 4 && v155;
    }
    else
    {
      v156 = 0;
    }
    if (v150 < 0)
      operator delete(v270[0]);
    v149 = (uint64_t)v265;
    if (v156)
    {
      sub_22E8FCA40(v19, *((_DWORD *)v265 + 6), 0x1AA6u, 0, (uint64_t)v253);
      sub_22E903BEC(v253);
      v149 = (uint64_t)v265;
    }
  }
  v157 = v19[11];
  v158 = (uint64_t *)sub_22EFDC9F0(v149);
  sub_22F3B5618(v149, v157, v158);
  v270[0] = v265;
  sub_22EA2DB10((unint64_t)v19, (unint64_t *)v270, 1uLL);
LABEL_260:
  v27 = v265;
  if (v284 != &v285[8])
    free(v284);
  return v27;
}

unsigned int *sub_22EAFFB64(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;
  int v6;
  unint64_t v7;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v13[24];
  unsigned int v14[24];
  uint64_t v15;

  v2 = *(_QWORD **)(a1 + 16);
  v15 = 0;
  v3 = *(_QWORD *)(**(_QWORD **)a1 + 16);
  v4 = v3 & 0xFFFFFFFFFFFFFFF8;
  if ((v3 & 4) != 0)
    v4 = *(_QWORD *)v4;
  if (v4)
    v5 = (*(_WORD *)(v4 + 8) & 0x7F) == 19;
  else
    v5 = 0;
  v6 = !v5;
  if (v5)
  {
    v7 = *(_QWORD *)(v4 - 8);
    if ((v7 & 7) == 0 && v7 >= 8)
      v9 = 2;
    else
      v9 = 1;
    HIDWORD(v15) = v9;
  }
  if ((*(_DWORD *)(**(_QWORD **)(a1 + 8) + 28) & 0x7F) == 0x14)
  {
    if (v6)
      v10 = 1;
    else
      v10 = 2;
    LODWORD(v15) = v10;
  }
  sub_22E8FCA40(v2, *(_DWORD *)(**(_QWORD **)(a1 + 24) + 24), 0xFF4u, 0, (uint64_t)v14);
  v11 = sub_22E8900C4((uint64_t)v14, (int *)&v15 + 1);
  sub_22E8900C4(v11, (int *)&v15);
  sub_22E903BEC(v14);
  sub_22E8FCA40(v2, *(_DWORD *)(**(_QWORD **)a1 + 24), 0x6Cu, 0, (uint64_t)v13);
  return sub_22E903BEC(v13);
}

void sub_22EAFFC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int128 v9;
  int v10;
  int v11;
  int v12;
  __int16 v13;
  char v14;

  if (!sub_22EFDBD9C(a3) && !sub_22F3089DC(a3) && sub_22EB0CE48(a2))
  {
    v6 = *(_QWORD *)(a1 + 88);
    v7 = *(_DWORD *)(a3 + 24);
    v9 = 0uLL;
    v10 = v7;
    v11 = v7;
    v12 = 0;
    v14 = 120;
    v13 = 0;
    v8 = sub_22F397994(v6, &v9);
    sub_22EFCA95C(a3, v8);
  }
}

unint64_t sub_22EAFFCF4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t result;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t i;
  unint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  BOOL v21;
  _QWORD v22[3];
  char v23;
  uint64_t v24;

  v24 = a3;
  v6 = *(_QWORD *)(a3 + 40);
  v7 = (*(_QWORD *)(a3 + 56) >> 17) & 1;
  v23 = 0;
  v22[0] = &v23;
  v22[1] = &v24;
  v22[2] = a1;
  v8 = sub_22EFDA1A0(a2, v6, v7, 0);
  if (v8
    || (v9 = sub_22F3B4E88(a2)) != 0 && v9 != a4 && (v10 = sub_22F3B4E88(a2), (v8 = sub_22EFDA1A0(v10, v6, v7, 0)) != 0))
  {
    sub_22EB0CEA8((unsigned int *)v22, v8);
  }
  result = sub_22F257E10(a2);
  if (!result)
    return result;
  v12 = result;
  while ((*(_BYTE *)(v12 + 28) & 0x80) != 0 || (*(_BYTE *)(v12 + 8) & 4) != 0)
  {
    v12 = *(_QWORD *)(v12 + 128);
    if (!v12)
      return result;
  }
LABEL_12:
  v13 = sub_22EFDA1A0(v12, v6, v7, 0);
  if (v13)
  {
LABEL_13:
    result = (unint64_t)sub_22EB0CEA8((unsigned int *)v22, v13);
    goto LABEL_44;
  }
  v14 = v12;
  if ((*(_DWORD *)(v12 + 28) & 0x7F) == 0x53)
    goto LABEL_39;
  for (i = *(_QWORD *)(v12 + 16); ; i = *(_QWORD *)(v16 + v18 + 16))
  {
    v16 = i & 0xFFFFFFFFFFFFFFF8;
    if ((i & 4) != 0)
      v16 = *(_QWORD *)v16;
    v17 = *(_WORD *)(v16 + 8) & 0x7F;
    if (v17 == 83)
      break;
    v18 = -40;
    if ((*(_WORD *)(v16 + 8) & 0x7Fu) > 0x46)
    {
      if (v17 == 71)
      {
        v18 = -56;
        continue;
      }
      if (v17 != 81)
        goto LABEL_29;
    }
    else
    {
      if (v17 > 0x18)
        goto LABEL_28;
      if (v17 == 16)
        goto LABEL_22;
      if (((1 << v17) & 0x1066) == 0)
      {
        if (v17 == 24)
        {
LABEL_22:
          v18 = -48;
          continue;
        }
LABEL_28:
        if (v17 == 70)
        {
          v18 = -64;
          continue;
        }
LABEL_29:
        v19 = v17 - 52;
        if (v17 - 33 >= 5)
          v20 = -48;
        else
          v20 = -64;
        if (v19 >= 6)
          v18 = v20;
        else
          v18 = -72;
        continue;
      }
    }
  }
  v14 = v16 - 40;
LABEL_39:
  result = sub_22F368C34(*(_QWORD *)(v14 + 88), v12);
  if (result)
    v21 = result == a4;
  else
    v21 = 1;
  if (!v21)
  {
    result = sub_22EFDA1A0(v12, v6, v7, 0);
    v13 = result;
    if (result)
      goto LABEL_13;
  }
LABEL_44:
  while (1)
  {
    v12 = *(_QWORD *)(v12 + 128);
    if (!v12)
      return result;
    if ((*(_BYTE *)(v12 + 28) & 0x80) == 0 && (*(_BYTE *)(v12 + 8) & 4) == 0)
      goto LABEL_12;
  }
}

void sub_22EAFFF38(_QWORD *a1, uint64_t *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  unint64_t v11;
  unsigned int *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v22;
  unint64_t v23;
  int v24;
  unint64_t *v25;
  unint64_t v26;
  _QWORD *v27;
  _BYTE v28[96];
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD v32[33];

  v32[32] = *MEMORY[0x24BDAC8D0];
  v29 = a5;
  v11 = sub_22EA06918(a1, &v29, a4, 0);
  if (!v11)
  {
    sub_22E8FCA40(a1, a4, 0x13BBu, 0, (uint64_t)&v30);
    sub_22E8BAE44((uint64_t)&v30, &v29);
    v12 = (unsigned int *)&v30;
    goto LABEL_5;
  }
  if (((1 << *(_DWORD *)(a1[9] + 400)) & 0xDD) != 0)
  {
    sub_22E8FCA40(a1, a4, 0xABFu, 0, (uint64_t)v28);
    v12 = (unsigned int *)v28;
LABEL_5:
    sub_22E903BEC(v12);
    return;
  }
  v30 = v32;
  v31 = 0x2000000000;
  sub_22F368A6C(a1[11], v11, 1, (uint64_t)&v30);
  if ((_DWORD)v31)
  {
    v13 = 0;
    do
    {
      v14 = 0;
      v15 = *((_QWORD *)v30 + v13);
      if ((*(_DWORD *)(a3 + 28) & 0x7Eu) - 34 >= 4)
        v16 = 0;
      else
        v16 = a3;
      if (v16)
        v17 = v16 + 64;
      else
        v17 = 0;
      v18 = *(_QWORD *)(v15 + 40);
      if ((v18 & 7) != 0)
        v19 = 0;
      else
        v19 = v18 & 0xFFFFFFFFFFFFFFF8;
      if ((*(_BYTE *)(v15 + 68) & 1) != 0)
      {
        v14 = *(_QWORD *)(v15 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        v20 = *(_QWORD *)(v15 + 72) & 3;
        if ((_DWORD)v20 && (_DWORD)v20 != 3)
          v14 = *(_QWORD *)(v14 + 8);
      }
      v22 = sub_22F3B6074(a1[11], v17, *(_DWORD *)(v15 + 24), *(_DWORD *)(v15 + 24), v19, *(_QWORD *)(v15 + 48), v14);
      v23 = *(unsigned int *)(a6 + 8);
      if (v23 >= *(unsigned int *)(a6 + 12))
      {
        v27 = v22;
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v22 = v27;
        v23 = *(unsigned int *)(a6 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a6 + 8 * v23) = v22;
      v24 = *(_DWORD *)(a6 + 8) + 1;
      *(_DWORD *)(a6 + 8) = v24;
      ++v13;
    }
    while (v13 < v31);
  }
  else
  {
    v24 = *(_DWORD *)(a6 + 8);
  }
  if (v24)
  {
    v25 = *(unint64_t **)a6;
    do
    {
      v26 = *v25;
      if ((*(_BYTE *)(a1[9] + 1) & 1) != 0)
      {
        sub_22EA0483C((uint64_t)a1, v26, a2, 1);
      }
      else if (a3 && (*(_DWORD *)(a3 + 28) & 0x7Eu) - 38 >= 0xFFFFFFFC)
      {
        sub_22EFCCFA0(a3 + 64, v26);
      }
      ++v25;
    }
    while (v25 != (unint64_t *)(*(_QWORD *)a6 + 8 * *(unsigned int *)(a6 + 8)));
  }
  if (v30 != v32)
    free(v30);
}

uint64_t sub_22EB001B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, char a7)
{
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int *v16;
  _BYTE *v17;
  unsigned int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v25;
  _BYTE v26[96];
  _BYTE v27[96];
  _BYTE v28[96];
  _BYTE v29[96];

  v12 = a1;
  v13 = a3 & 0xFFFFFFFFFFFFFFF0;
  v14 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v14 & 8) != 0 && (*(_DWORD *)((v14 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0)
  {
    v15 = a5;
    v16 = (unsigned int *)v29;
    v17 = v29;
    v18 = 2687;
LABEL_4:
    sub_22E8FCA40(a1, v15, v18, 0, (uint64_t)v17);
    sub_22E903BEC(v16);
LABEL_6:
    v19 = 1;
    goto LABEL_19;
  }
  if ((a7 & 1) != 0)
    goto LABEL_6;
  v20 = *(_QWORD *)v13;
  if ((*(_DWORD *)(*(_QWORD *)v13 + 16) & 0x400) == 0)
  {
    if ((*(_DWORD *)(*(_QWORD *)v13 + 16) == 32
       || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v20 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
       && (v20 = sub_22F10CF48(v20)) != 0)
      && sub_22E491464(v20))
    {
      v15 = a5;
      v16 = (unsigned int *)v28;
      v17 = v28;
      a1 = v12;
      v18 = 3560;
      goto LABEL_4;
    }
    if (((v21 = *(_QWORD *)v13) == 0 || *(_BYTE *)(v21 + 16) != 32)
      && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32
       || (v21 = sub_22F10CF48(v21)) == 0)
      || !sub_22E5761BC(v21))
    {
      v25 = *(_QWORD *)v13;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32)
      {
        if (*(_BYTE *)(v25 + 16) != 32)
          v25 = sub_22F10CF48(v25);
        if (sub_22F40A120(v25))
          goto LABEL_18;
        v15 = a5;
        v16 = (unsigned int *)v26;
        v17 = v26;
      }
      else
      {
        v15 = a5;
        v16 = (unsigned int *)v27;
        v17 = v27;
      }
      a1 = v12;
      v18 = 3024;
      goto LABEL_4;
    }
  }
LABEL_18:
  v19 = 0;
LABEL_19:
  v22 = sub_22EFBB670(v12[11], v12[27], a4, a5, a6, a3, a2, 0);
  *(_DWORD *)(v22 + 96) |= 0x200u;
  if ((*(_WORD *)(v12[9] + 148) & 2) == 0)
  {
    if (!v19)
      return v22;
    goto LABEL_23;
  }
  sub_22EA1D5B8(v12, v22);
  if (((v19 | v23) & 1) != 0)
LABEL_23:
    sub_22EFC77E8(v22, 1);
  return v22;
}

int *sub_22EB003C0(uint64_t a1, uint64_t a2, _QWORD **a3)
{
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  int *v21;
  unsigned int v23[24];
  char *v24;
  char v25;
  uint64_t v26;
  char v27;
  void *__p;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned int v32[24];

  v6 = *a3;
  v7 = **a3 & 7;
  if ((**a3 & 7) != 0)
  {
    if ((_DWORD)v7 == 5)
    {
      sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v6 + 24), 0x1B25u, 0, (uint64_t)v32);
      v8 = *((unsigned int *)v6 + 24);
      v26 = 0;
      v27 = 0;
      v29 = 0;
      v30 = 0;
      __p = 0;
      v31 = 0;
      v24 = (char *)(v8 | (v8 << 32));
      v25 = 1;
      sub_22E890748((uint64_t)v32, &v24);
      if (SHIBYTE(v30) < 0)
        operator delete(__p);
    }
    else
    {
      sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v6 + 24), 0x1285u, 0, (uint64_t)v32);
      v24 = off_24FAB8208[v7 - 1];
      sub_22E8AECC4((uint64_t)v32, (uint64_t *)&v24);
    }
    sub_22E903BEC(v32);
  }
  if ((*v6 & 0x300000000) != 0)
  {
    v9 = 164;
    if ((*v6 & 0x100000000) == 0)
      v9 = 184;
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)((char *)v6 + v9), 0xE2Au, 0, (uint64_t)v32);
    LODWORD(v24) = (**(_DWORD **)(a1 + 72) >> 11) & 1;
    sub_22E89519C((uint64_t)v32, (unsigned int *)&v24);
    sub_22E903BEC(v32);
  }
  v10 = *a3;
  v11 = **a3;
  v12 = (v11 >> 3) & 3;
  if ((_DWORD)v12)
  {
    sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v10 + 25), 0xE66u, 0, (uint64_t)v32);
    v24 = off_24FAB8240[v12 - 1];
    sub_22E8AECC4((uint64_t)v32, (uint64_t *)&v24);
    sub_22E903BEC(v32);
    v10 = *a3;
    v11 = **a3;
  }
  *v10 = v11 & 0xFFFFFFFFFFFFFFC0;
  v10[12] = 0;
  sub_22EA11438((unsigned int *)a1, (uint64_t)*a3);
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
    sub_22EAA474C(a1, (uint64_t)a3);
  v18 = sub_22EE8156C(a1, (uint64_t)a3, a2, v13, v14, v15, v16, v17);
  if (*((_DWORD *)a3 + 10))
    v19 = 0;
  else
    v19 = (uint64_t)a3[6];
  v20 = ((_WORD)a3[136] & 1) != 0 || (**a3 & 0x3F000) == 204800;
  v21 = (int *)sub_22EB001B8((_QWORD *)a1, (uint64_t)v18, *v18, *((_DWORD *)a3 + 18), *((_DWORD *)a3 + 16), v19, v20);
  if (a3[2])
  {
    sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)a3 + 16), 0x1209u, 0, (uint64_t)v32);
    v24 = (char *)a3[1];
    sub_22E8906A0((uint64_t)v32, (uint64_t *)&v24);
    sub_22E903BEC(v32);
    sub_22EFC77E8((uint64_t)v21, 1);
  }
  sub_22E3BA850(a2 + 72, v21);
  if (!*((_DWORD *)a3 + 10) && a3[6])
    sub_22E8CE7E8(a1 + 3320, (uint64_t)v21);
  sub_22EA7E768((_QWORD *)a1, a2, (uint64_t)v21, (uint64_t)a3);
  if (sub_22E49C868((uint64_t)v21))
  {
    sub_22E8FCA40((_QWORD *)a1, v21[6], 0xB8Au, 0, (uint64_t)v23);
    sub_22E903BEC(v23);
  }
  return v21;
}

void sub_22EB006AC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[11];

  v12[10] = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  if (v2)
  {
    v10 = v12;
    v11 = 0x400000000;
    (*(void (**)(uint64_t, void **))(*(_QWORD *)v2 + 320))(v2, &v10);
    if ((_DWORD)v11)
    {
      v3 = 0;
      v4 = 16 * v11;
      do
      {
        v5 = (char *)v10 + v3;
        *(_DWORD *)sub_22F2D0558((uint64_t)(a1 + 1073), (unint64_t *)((char *)v10 + v3)) = *((_DWORD *)v5 + 2);
        v3 += 16;
      }
      while (v4 != v3);
    }
    if (v10 != v12)
      free(v10);
  }
  v6 = a1[1076];
  v7 = a1[1077];
  if (v6 != v7 && *(_DWORD *)(a1[11] + 1056))
  {
    do
    {
      v9 = *(_QWORD *)v6;
      v8 = *(_DWORD *)(v6 + 8);
      if (!sub_22EAFB94C((uint64_t)a1, v9))
      {
        sub_22E8FCA40(a1, v8, 0x1BB0u, 0, (uint64_t)&v10);
        sub_22E894538((uint64_t)&v10, &v9);
        sub_22E903BEC((unsigned int *)&v10);
      }
      v6 += 16;
    }
    while (v6 != v7);
  }
}

uint64_t sub_22EB007F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unsigned int v5;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD v17[10];

  v17[8] = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    if (a3)
    {
      v4 = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v5 = *(_DWORD *)(a3 + 8);
      if (v5 >= *(_DWORD *)(a3 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v5 = *(_DWORD *)(a3 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a3 + 8 * v5) = v4;
      ++*(_DWORD *)(a3 + 8);
    }
    else
    {
      v17[0] = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v16 = 0x800000001;
      v7 = 1;
      do
      {
        v8 = v7;
        v9 = &v17[v7];
        v10 = *(v9 - 1);
        if ((v10 & 4) != 0)
        {
          v7 = v8 - 1;
          LODWORD(v16) = v8 - 1;
        }
        else
        {
          *(v9 - 1) = v10 | 4;
          v11 = *(unsigned __int8 *)(v10 & 0xFFFFFFFFFFFFFFF8) - 1;
          if (v11 <= 0xEB)
            __asm { BR              X9 }
          v7 = v16;
          if ((_DWORD)v8 != (_DWORD)v16)
          {
            v12 = &v17[v16 - 1];
            if (&v17[v8] < v12)
            {
              v13 = &v17[v8 + 1];
              do
              {
                v14 = *(v13 - 1);
                *(v13 - 1) = *v12;
                *v12-- = v14;
              }
              while (v13++ < v12);
            }
          }
        }
      }
      while (v7);
    }
  }
  return 1;
}

void sub_22EB0C198()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22EB0C1AC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  result = sub_22F2E6D78(a2);
  if (result)
  {
    if ((*(_DWORD *)(result + 28) & 0x7F) != 0x16)
      return 0;
    v4 = *(_QWORD *)(a1 + 32);
    if (v4)
    {
      if (result != v4)
      {
        v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
        return v5 != (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      }
      return 0;
    }
    return 1;
  }
  return result;
}

__n128 sub_22EB0C22C@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;
  uint64_t v6;

  v4 = operator new();
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v4 + 8) = result;
  *(_QWORD *)v4 = &off_24FAB8148;
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v4 + 32) = v6;
  *a2 = v4;
  return result;
}

void sub_22EB0C284()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22EB0C298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t result;
  uint64_t v11;

  if (*(_DWORD *)(a1 + 40))
  {
    v11 = sub_22F2E6D78(a2);
    if (v11 && (*(_DWORD *)(v11 + 28) & 0x7F) == 0x17)
      return 1;
    if (*(_DWORD *)(a1 + 40) == 11)
      return 0;
  }
  v4 = sub_22F2E6D78(a2);
  if (v4 && (v5 = v4, v6 = *(_DWORD *)(v4 + 28), (v6 & 0x7Fu) - 33 <= 9))
  {
    if ((v6 & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 2000) + 1) & 1) == 0)
      return 0;
    v7 = *(_QWORD *)(v4 + 48);
    if (!v7)
      v7 = sub_22EF6462C(*(_QWORD *)(a1 + 32), v5);
    v8 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0);
    v9 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    result = 1;
    if (v9 != 10 && v9 != 32 && (*(_BYTE *)(v8 + 17) & 4) == 0)
      return (v9 - 33) < 2;
  }
  else
  {
    result = sub_22F2E6D78(a2);
    if (result)
      return (*(_DWORD *)(result + 28) & 0x7F) == 22;
  }
  return result;
}

__n128 sub_22EB0C3AC@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;
  uint64_t v6;

  v4 = operator new();
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v4 + 8) = result;
  *(_QWORD *)v4 = &off_24FAB81B8;
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v4 + 32) = v6;
  *(_DWORD *)(v4 + 40) = *(_DWORD *)(a1 + 40);
  *a2 = v4;
  return result;
}

uint64_t sub_22EB0C40C(unint64_t a1)
{
  uint64_t result;
  BOOL v2;

  for (result = sub_22F257E10(a1); result; result = *(_QWORD *)(result + 128))
  {
    if ((*(_BYTE *)(result + 28) & 0x80) == 0)
    {
      v2 = *(_QWORD *)(result + 40) >= 8uLL && (*(_QWORD *)(result + 40) & 7) == 0;
      if (!v2 && (*(_BYTE *)(result + 8) & 4) == 0)
        break;
    }
  }
  return result;
}

uint64_t sub_22EB0C450(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  int v6;
  char v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  char v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  char v19;
  unsigned int v20;
  int v21;

  v5 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
  if (v5)
  {
    while (2)
    {
      v7 = 0;
      v8 = 0;
      v9 = 0;
      v6 = 1;
      v10 = 1;
      switch(*(_DWORD *)(v5 + 16) >> 19)
      {
        case '!':
          break;
        case '"':
          v10 = 0;
          v8 = 0;
          v9 = 2;
          v7 = 1;
          break;
        case '#':
          v7 = 0;
          v10 = 0;
          v8 = 1;
          v9 = 1;
          break;
        case '$':
          v7 = 0;
          v10 = 0;
          v8 = 0;
          v9 = 3;
          break;
        default:
          v5 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v5 + 40) & 0xFFFFFFFFFFFFFFF0));
          v6 = 0;
          v7 = 0;
          v8 = 0;
          v9 = 0;
          if (v5)
            continue;
          break;
      }
      break;
    }
  }
  else
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v10 = 1;
  }
  v11 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
  if (v11)
  {
    while (2)
    {
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v12 = 1;
      v16 = 1;
      switch(*(_DWORD *)(v11 + 16) >> 19)
      {
        case '!':
          break;
        case '"':
          v14 = 0;
          v16 = 0;
          v15 = 2;
          v13 = 1;
          break;
        case '#':
          v13 = 0;
          v16 = 0;
          v14 = 1;
          v15 = 1;
          break;
        case '$':
          v13 = 0;
          v14 = 0;
          v16 = 0;
          v15 = 3;
          break;
        default:
          v11 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v11 + 40) & 0xFFFFFFFFFFFFFFF0));
          v12 = 0;
          v13 = 0;
          v14 = 0;
          v15 = 0;
          v16 = 1;
          if (v11)
            continue;
          break;
      }
      break;
    }
  }
  else
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 1;
  }
  if (v6)
    v17 = v12 == 0;
  else
    v17 = 1;
  if (v17 || v9 == v15)
    v19 = 1;
  else
    v19 = v7;
  v20 = v10 & v14;
  v21 = v8 & v16;
  if (a3)
    v20 = v21;
  if ((v19 & 1) != 0)
    v20 = 1;
  if ((v13 & 1) != 0)
    return 1;
  else
    return v20;
}

unint64_t sub_22EB0C664(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  if (a4 && sub_22E5761BC(a3))
    return 0;
  if (sub_22E491464(a3))
  {
    if (sub_22E491464(a2))
      return sub_22EF6E900(a1, a2, a3, 0);
    return 0;
  }
  return sub_22EF6ED94(a1, a2, a3);
}

unint64_t sub_22EB0C6F8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  unsigned int v5;
  uint64_t v7[2];

  v1 = a1;
  if (!a1)
    return (unint64_t)v1;
  v2 = *a1;
  v7[0] = v2;
  v7[1] = (uint64_t)(a1 + 1);
  for (i = v2; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_13;
      v4 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v4 <= 0x39)
        break;
LABEL_8:
      if (sub_22F115668(i))
        v2 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_15;
    }
    if (v4 == 24)
      goto LABEL_14;
    if (v4 == 26)
      break;
    if (((1 << v4) & 0x20000000200003CLL) == 0)
      goto LABEL_8;
LABEL_13:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_13;
LABEL_14:
  v2 = i;
LABEL_15:
  v5 = sub_22F115668(v2);
  return v5 | ((unint64_t)sub_22F1167E8(v7) << 32);
}

uint64_t sub_22EB0C800(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12[31];

  if (sub_22F32CAA0(a1))
  {
    v4 = *(_QWORD *)(a1 + 40);
    if ((v4 & 7) != 0)
      v5 = 0;
    else
      v5 = v4 & 0xFFFFFFFFFFFFFFF8;
    v11 = v5;
    sub_22F275184(a2, &v11, (uint64_t)v12);
  }
  result = sub_22F259248(a1);
  if ((uint64_t *)result != v7)
  {
    v8 = (uint64_t *)result;
    v9 = v7;
    do
    {
      v10 = *v8++;
      result = sub_22EB0C800(v10, a2);
    }
    while (v8 != v9);
  }
  return result;
}

uint64_t sub_22EB0C88C(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v2 = *(unsigned __int8 *)(v1 + 16);
  if (v2 == 4)
    return 1;
  if (v2 == 45)
    return *(unsigned __int8 *)(sub_22F114198(*(_QWORD *)(v1 + 24)) + 74) >> 7;
  return 0;
}

uint64_t sub_22EB0C8E4(uint64_t result, unint64_t a2)
{
  _BYTE *v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((*(_BYTE *)(a2 + 28) & 0x80) == 0)
  {
    v3 = (_BYTE *)result;
    v4 = *(_WORD *)(a2 + 56) & 0x7F;
    v5 = v4 >= 0x14;
    v6 = v4 - 20;
    if (v5)
    {
      switch(v6)
      {
        case 0u:
          result = sub_22F3B55B8(a2);
          if (!result)
            goto LABEL_8;
          v27 = result;
          result = sub_22EB0CAA8(v3, result);
          v12 = *(_QWORD *)(v27 + 104);
          if (v12)
            goto LABEL_9;
          break;
        case 1u:
LABEL_8:
          v12 = *(_QWORD *)(a2 + 88);
          if (v12)
LABEL_9:
            result = sub_22EB0CAA8(v3, v12);
          break;
        case 2u:
          v13 = *(_QWORD *)(a2 + 120);
          if (!v13)
          {
            result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
            v13 = *(_QWORD *)(a2 + 120);
          }
          if (v13 >= 8)
          {
            v14 = sub_22F257E10(a2);
            if (v14)
            {
              v15 = v14;
              do
              {
                sub_22EB0CAA8(v3, v15);
                v15 = *(_QWORD *)(v15 + 128);
              }
              while (v15);
            }
            result = sub_22F3B46CC(a2);
            if (result)
              result = sub_22EB0CAA8(v3, result);
            v16 = *(_QWORD *)(a2 + 120) & 0xFFFFFFFFFFFFFFF8;
            if ((*(_BYTE *)(v16 + 72) & 1) != 0)
            {
              result = sub_22F3B48C4(a2);
              v16 = *(_QWORD *)(a2 + 120) & 0xFFFFFFFFFFFFFFF8;
            }
            v17 = *(unsigned int *)(v16 + 24);
            if ((_DWORD)v17)
            {
              v18 = *(uint64_t **)(v16 + 16);
              v19 = 8 * v17;
              do
              {
                v20 = *v18++;
                result = sub_22EB0CAA8(v3, v20);
                v19 -= 8;
              }
              while (v19);
            }
          }
          break;
        case 3u:
          v21 = *(_QWORD *)(a2 + 104);
          if (!v21)
          {
            result = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
            v21 = *(_QWORD *)(a2 + 104);
          }
          if (v21 >= 8)
          {
            v22 = v21 & 0xFFFFFFFFFFFFFFF8;
            v23 = *(unsigned int *)((v21 & 0xFFFFFFFFFFFFFFF8) + 16);
            if ((_DWORD)v23)
            {
              v24 = *(uint64_t **)(v22 + 8);
              v25 = 8 * v23;
              do
              {
                v26 = *v24++;
                result = sub_22EB0CAA8(v3, v26);
                v25 -= 8;
              }
              while (v25);
            }
          }
          break;
        default:
          return result;
      }
    }
    else
    {
      v7 = *(_QWORD *)(a2 + 120) & 0xFFFFFFFFFFFFFFF8;
      v8 = *(unsigned int *)(v7 + 24);
      if ((_DWORD)v8)
      {
        v9 = *(uint64_t **)(v7 + 16);
        v10 = 8 * v8;
        do
        {
          v11 = *v9++;
          result = sub_22EB0CAA8(v3, v11);
          v10 -= 8;
        }
        while (v10);
      }
    }
  }
  return result;
}

uint64_t sub_22EB0CAA8(_BYTE *a1, uint64_t a2)
{
  unint64_t v5;

  v5 = sub_22EFDA1A0(a2, *(_QWORD *)(*(_QWORD *)a1 + 40), (*(_QWORD *)(*(_QWORD *)a1 + 56) >> 17) & 1, 1);
  if (v5)
    return sub_22F32CBB8((uint64_t)(a1 + 8), (uint64_t *)&v5);
  a1[96] = 1;
  return sub_22EB0C8E4(a1, a2);
}

uint64_t sub_22EB0CB2C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14[5];

  v14[4] = *MEMORY[0x24BDAC8D0];
  if (a2 >= 5)
  {
    v3 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
    v4 = v3 | (v3 >> 2) | ((v3 | (v3 >> 2)) >> 4);
    v5 = ((v4 | (v4 >> 8)) >> 16) | v4 | (v4 >> 8);
    if ((v5 + 1) > 0x40)
      a2 = v5 + 1;
    else
      a2 = 64;
  }
  if ((*(_DWORD *)a1 & 1) != 0)
  {
    v8 = v14;
    for (i = 8; i != 40; i += 8)
    {
      v10 = *(_QWORD *)(a1 + i);
      if ((v10 | 0x1000) != 0xFFFFFFFFFFFFF000)
        *v8++ = v10;
    }
    if (a2 > 4)
    {
      *(_DWORD *)a1 &= ~1u;
      v11 = a2;
      *(_QWORD *)(a1 + 8) = MEMORY[0x23489D23C](8 * a2, 8);
      *(_QWORD *)(a1 + 16) = v11;
    }
    return sub_22F32CE5C(a1, v14, v8);
  }
  else
  {
    v6 = *(uint64_t **)(a1 + 8);
    v7 = *(unsigned int *)(a1 + 16);
    if (a2 > 4)
    {
      v13 = a2;
      *(_QWORD *)(a1 + 8) = MEMORY[0x23489D23C](8 * a2, 8);
      *(_QWORD *)(a1 + 16) = v13;
    }
    else
    {
      *(_DWORD *)a1 |= 1u;
    }
    sub_22F32CE5C(a1, v6, &v6[v7]);
    return llvm::deallocate_buffer((llvm *)v6, (void *)(8 * v7));
  }
}

unint64_t sub_22EB0CC98(_QWORD *a1, int a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v12;
  int v13;
  int v14;
  uint64_t i;
  unsigned int v16;
  uint64_t v17;
  unsigned int v19;
  uint64_t v20;
  __int16 v21;
  __int16 v22;
  unsigned int v23[24];

  v12 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
  if (v12)
  {
    while (2)
    {
      v14 = 0;
      v13 = 1;
      switch(*(_DWORD *)(v12 + 16) >> 19)
      {
        case '!':
          break;
        case '"':
          v14 = 2;
          break;
        case '#':
          v14 = 1;
          break;
        case '$':
          v14 = 3;
          break;
        default:
          v12 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v12 + 40) & 0xFFFFFFFFFFFFFFF0));
          v13 = 0;
          v14 = 0;
          if (v12)
            continue;
          break;
      }
      break;
    }
  }
  else
  {
    v13 = 0;
    v14 = 0;
  }
  for (i = *(_QWORD *)(a5 & 0xFFFFFFFFFFFFFFF0); ; i = *(_QWORD *)(v17 + 40))
  {
    v17 = sub_22F10D774(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0));
    if (!v17)
      return a3;
    v16 = (*(_DWORD *)(v17 + 16) >> 19) - 33;
    if (v16 < 4)
      break;
  }
  v19 = (0x3010200u >> (8 * v16)) & 3;
  if (v13)
  {
    if (v14 != v19)
    {
      sub_22E8FCA40(a1, a2, 0x30u, 0, (uint64_t)v23);
      LOBYTE(v22) = v14;
      HIBYTE(v22) = a4;
      v20 = sub_22F2F3884((uint64_t)v23, &v22);
      LOBYTE(v21) = v19;
      HIBYTE(v21) = a6;
      sub_22F2F3884(v20, &v21);
      sub_22E903BEC(v23);
    }
    return a3;
  }
  return sub_22F369798(a1[11], dword_22F46A4D0[v19], a3, a3);
}

BOOL sub_22EB0CE48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 485)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

unsigned int *sub_22EB0CEA8(unsigned int *result, uint64_t a2)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7[24];
  uint64_t v8;
  BOOL v9;
  int v10;
  BOOL v11;
  unsigned int v12[24];

  if (!**(_BYTE **)result && (*(_BYTE *)(a2 + 29) & 2) == 0)
  {
    v3 = result;
    if (sub_22EFDBD9C(**((_QWORD **)result + 1)) || (result = (unsigned int *)sub_22EFDBD9C(a2), (_DWORD)result))
    {
      sub_22E8FCA40(*((_QWORD **)v3 + 2), *(_DWORD *)(**((_QWORD **)v3 + 1) + 24), 0xFF2u, 0, (uint64_t)v12);
      v11 = sub_22EFDBD9C(**((_QWORD **)v3 + 1));
      v4 = sub_22E894E38((uint64_t)v12, (unsigned __int8 *)&v11);
      v10 = 0;
      v5 = sub_22E8900C4(v4, &v10);
      v9 = sub_22EFDBD9C(a2);
      v6 = sub_22E894E38(v5, (unsigned __int8 *)&v9);
      v8 = *(_QWORD *)(**((_QWORD **)v3 + 1) + 40);
      sub_22E894538(v6, &v8);
      sub_22E903BEC(v12);
      sub_22E8FCA40(*((_QWORD **)v3 + 2), *(_DWORD *)(a2 + 24), 0x6Cu, 0, (uint64_t)v7);
      result = sub_22E903BEC(v7);
      **(_BYTE **)v3 = 1;
    }
  }
  return result;
}

uint64_t sub_22EB0CFB4(uint64_t *a1, _DWORD *a2)
{
  return sub_22E890748(*a1, a2);
}

uint64_t sub_22EB0CFBC(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  int v5;
  uint64_t result;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  unsigned int v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t **v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t **v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  BOOL v52;
  uint64_t v53;
  uint64_t **v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t **v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t **v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t **v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t **v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t **v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unsigned int v93;
  BOOL v94;
  uint64_t v95;
  uint64_t **v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t **v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t **v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t **v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t **v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t **v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t **v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  BOOL v127;
  uint64_t v128;
  uint64_t **v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int v133;
  BOOL v134;
  uint64_t v135;
  uint64_t **v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t **v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t **v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int v153;
  BOOL v154;
  uint64_t v155;
  uint64_t **v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t **v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t **v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t **v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t *v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t **v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  BOOL v185;
  uint64_t v186;
  uint64_t **v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  unint64_t v192;
  unint64_t v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t **v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t **v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t *v205;
  unint64_t *v206;
  unint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t **v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t **v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t **v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  unsigned int v224;
  BOOL v225;
  uint64_t v226;
  uint64_t **v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  BOOL v235;
  uint64_t v236;
  uint64_t **v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int v241;
  BOOL v242;
  uint64_t v243;
  uint64_t **v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t **v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  unsigned int v257;
  uint64_t v258;
  uint64_t **v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t **v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t *v268;
  unsigned int v269;
  uint64_t v270;
  uint64_t **v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  _DWORD *v275;
  uint64_t v276;
  uint64_t *v277;
  unsigned int v278;
  uint64_t v279;
  unsigned int v280;
  BOOL v281;
  uint64_t v282;
  uint64_t **v283;
  uint64_t *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  unsigned int v290;
  BOOL v291;
  uint64_t v292;
  uint64_t **v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t **v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t **v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int v305;
  BOOL v306;
  uint64_t v307;
  uint64_t **v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t **v312;
  uint64_t *v313;
  uint64_t v314;
  uint64_t v315;
  int v316;
  uint64_t v317;
  unsigned int v318;
  uint64_t v319;
  uint64_t **v320;
  uint64_t *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t **v324;
  uint64_t *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t **v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t **v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t *v337;
  unsigned int v338;
  uint64_t v339;
  uint64_t **v340;
  uint64_t *v341;
  uint64_t v342;
  uint64_t v343;
  unsigned int v344;
  uint64_t v345;
  uint64_t **v346;
  uint64_t *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t **v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t *v356;
  uint64_t v357;
  unint64_t *v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t *v363;
  uint64_t v364;
  uint64_t **v365;
  uint64_t *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t **v369;
  uint64_t *v370;
  uint64_t v371;
  uint64_t v372;
  unsigned int v373;
  BOOL v374;
  uint64_t v375;
  uint64_t **v376;
  uint64_t *v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  unint64_t v381;
  unsigned int v382;
  uint64_t v383;
  uint64_t **v384;
  uint64_t *v385;
  uint64_t v386;
  uint64_t v387;
  unint64_t v388;
  uint64_t v389;
  unsigned int v390;
  uint64_t v391;
  uint64_t **v392;
  uint64_t *v393;
  uint64_t v394;
  uint64_t v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t **v398;
  uint64_t *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  unint64_t v403;
  unint64_t *v404;
  unsigned int v405;
  uint64_t v406;
  uint64_t **v407;
  uint64_t *v408;
  uint64_t v409;
  uint64_t v410;
  unsigned int v411;
  BOOL v412;
  uint64_t v413;
  uint64_t **v414;
  uint64_t *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t **v418;
  uint64_t *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t **v422;
  uint64_t *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t **v426;
  uint64_t *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t **v430;
  uint64_t *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t **v434;
  uint64_t *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t **v438;
  uint64_t *v439;
  uint64_t v440;
  uint64_t v441;
  int v442;
  uint64_t v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t **v446;
  uint64_t *v447;
  uint64_t v448;
  uint64_t v449;
  unint64_t v450;
  unsigned int v451;
  uint64_t v452;
  uint64_t **v453;
  uint64_t *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t **v457;
  uint64_t *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t **v461;
  uint64_t *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t i;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  unsigned int v471;
  BOOL v472;
  uint64_t v473;
  uint64_t **v474;
  uint64_t *v475;
  uint64_t v476;
  uint64_t v477;
  unsigned int v478;
  uint64_t v479;
  uint64_t **v480;
  uint64_t *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t **v484;
  uint64_t *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t *v488;
  uint64_t **v489;
  uint64_t *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t *v493;
  unsigned int v494;
  uint64_t v495;
  uint64_t **v496;
  uint64_t *v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  uint64_t v501;
  uint64_t **v502;
  uint64_t *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t **v506;
  uint64_t *v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t **v511;
  uint64_t *v512;
  uint64_t v513;
  uint64_t v514;
  unint64_t v515;
  uint64_t v516;
  unsigned int v517;
  uint64_t v518;
  uint64_t **v519;
  uint64_t *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t **v530;
  uint64_t *v531;
  uint64_t v532;
  uint64_t v533;
  BOOL v534;
  uint64_t **v535;
  uint64_t *v536;
  uint64_t v537;
  uint64_t v538;
  BOOL v539;
  BOOL v540;
  BOOL v541;
  BOOL v542;
  BOOL v543;
  int *v544;
  BOOL v545;
  BOOL v546;
  BOOL v547;
  uint64_t **v548;
  uint64_t *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  int v559;
  uint64_t v560;

  if (!a2)
    return 1;
  v4 = a2 + 28;
  v5 = *(_DWORD *)(a2 + 28) & 0x7F;
  if ((*(_DWORD *)(a2 + 28) & 0x200) != 0)
  {
    if (v5 == 38)
      return sub_22EB10E44(a1, a2);
    return 1;
  }
  switch(v5)
  {
    case 0:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v8 = *v7;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v10 = *(_QWORD *)v9 + 8 * *(unsigned int *)(v9 + 8);
      }
      else
      {
        v10 = 0;
      }
      while (2)
      {
        if (v8 == (uint64_t *)v10)
          return 1;
        if ((sub_22EB12204(a1, *v8) & 1) != 0)
        {
          ++v8;
          continue;
        }
        break;
      }
      return 0;
    case 1:
      v248 = *(unint64_t **)(a2 + 96);
      if (v248)
      {
        result = sub_22EB112B4(a1, *v248, (uint64_t)(v248 + 1));
        if (!(_DWORD)result)
          return result;
      }
      v249 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
      result = sub_22EB007F8(a1, v249, 0);
      if (!(_DWORD)result)
        return result;
      v250 = *(unsigned int *)(a2 + 112);
      if (!(_DWORD)v250)
        goto LABEL_454;
      v251 = 16 * v250;
      v252 = (_QWORD *)(*(_QWORD *)(a2 + 104) + 8);
      while (1)
      {
        if (*v252)
        {
          result = sub_22EB007F8(a1, *v252, 0);
          if (!(_DWORD)result)
            break;
        }
        v252 += 2;
        v251 -= 16;
        if (!v251)
        {
LABEL_454:
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v254 = *v253;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v256 = *(_QWORD *)v255 + 8 * *(unsigned int *)(v255 + 8);
            }
            else
            {
              v256 = 0;
            }
            while (v254 != (uint64_t *)v256)
            {
              if ((sub_22EB12204(a1, *v254) & 1) == 0)
                return 0;
              ++v254;
            }
          }
          return 1;
        }
      }
      return result;
    case 2:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v217 = *v216;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v219 = *(_QWORD *)v218 + 8 * *(unsigned int *)(v218 + 8);
      }
      else
      {
        v219 = 0;
      }
      while (2)
      {
        if (v217 == (uint64_t *)v219)
          return 1;
        if ((sub_22EB12204(a1, *v217) & 1) != 0)
        {
          ++v217;
          continue;
        }
        break;
      }
      return 0;
    case 3:
      result = sub_22EB0CFBC(a1);
      if (!(_DWORD)result)
        return result;
      v231 = *(_QWORD *)(a2 + 48);
      if (!v231)
        goto LABEL_421;
      v232 = *(unsigned int *)(v231 + 8);
      if (!(_DWORD)v232)
        goto LABEL_421;
      v233 = v231 + 16;
      while ((sub_22EB12050(a1, v233) & 1) != 0)
      {
        v233 += 32;
        if (!--v232)
        {
LABEL_421:
          v234 = *(_DWORD *)v4 & 0x7F;
          v235 = v234 > 0x39 || ((1 << v234) & 0x3F0003E01011066) == 0;
          if (v235
            && (v234 - 70 <= 0xD ? (v541 = ((1 << (v234 - 70)) & 0x2803) == 0) : (v541 = 1), v541 && v234 - 19 > 4))
          {
            v236 = 0;
          }
          else
          {
            v236 = sub_22EFCAE04(a2);
          }
          result = sub_22EB12168(a1, v236);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v238 = *v237;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v240 = *(_QWORD *)v239 + 8 * *(unsigned int *)(v239 + 8);
            }
            else
            {
              v240 = 0;
            }
            while (v238 != (uint64_t *)v240)
            {
              if ((sub_22EB12204(a1, *v238) & 1) == 0)
                return 0;
              ++v238;
            }
          }
          return 1;
        }
      }
      return 0;
    case 4:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v173 = *v172;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v175 = *(_QWORD *)v174 + 8 * *(unsigned int *)(v174 + 8);
      }
      else
      {
        v175 = 0;
      }
      while (2)
      {
        if (v173 == (uint64_t *)v175)
          return 1;
        if ((sub_22EB12204(a1, *v173) & 1) != 0)
        {
          ++v173;
          continue;
        }
        break;
      }
      return 0;
    case 5:
      result = sub_22EB12168(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v298 = *v297;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v300 = *(_QWORD *)v299 + 8 * *(unsigned int *)(v299 + 8);
      }
      else
      {
        v300 = 0;
      }
      while (2)
      {
        if (v298 == (uint64_t *)v300)
          return 1;
        if ((sub_22EB12204(a1, *v298) & 1) != 0)
        {
          ++v298;
          continue;
        }
        break;
      }
      return 0;
    case 6:
      result = sub_22EB12168(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v325 = *v324;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v327 = *(_QWORD *)v326 + 8 * *(unsigned int *)(v326 + 8);
      }
      else
      {
        v327 = 0;
      }
      while (2)
      {
        if (v325 == (uint64_t *)v327)
          return 1;
        if ((sub_22EB12204(a1, *v325) & 1) != 0)
        {
          ++v325;
          continue;
        }
        break;
      }
      return 0;
    case 7:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 40), 0);
      if (!(_DWORD)result)
        return result;
      v241 = *(_DWORD *)v4 & 0x7F;
      v242 = v241 > 0x39 || ((1 << v241) & 0x3F0003E01011066) == 0;
      v243 = !v242 || v241 - 70 <= 0xD && ((1 << (v241 - 70)) & 0x2803) != 0 || v241 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v243);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v245 = *v244;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v247 = *(_QWORD *)v246 + 8 * *(unsigned int *)(v246 + 8);
      }
      else
      {
        v247 = 0;
      }
      while (2)
      {
        if (v245 == (uint64_t *)v247)
          return 1;
        if ((sub_22EB12204(a1, *v245) & 1) != 0)
        {
          ++v245;
          continue;
        }
        break;
      }
      return 0;
    case 8:
      v336 = *(_QWORD *)(a2 + 40);
      v337 = (unint64_t *)(v336 & 0xFFFFFFFFFFFFFFF8);
      if ((v336 & 4) != 0 && v337)
      {
        if ((sub_22EB112B4(a1, *v337, (uint64_t)(v337 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22EB0CFBC(a1);
        if (!(_DWORD)result)
          return result;
      }
      v478 = *(_DWORD *)v4 & 0x7F;
      if (v478 <= 0x39 && ((1 << v478) & 0x3F0003E01011066) != 0
        || v478 - 70 <= 0xD && ((1 << (v478 - 70)) & 0x2803) != 0
        || v478 - 19 <= 4)
      {
        v479 = sub_22EFCAE04(a2);
      }
      else
      {
        v479 = 0;
      }
      result = sub_22EB12168(a1, v479);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v481 = *v480;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v483 = *(_QWORD *)v482 + 8 * *(unsigned int *)(v482 + 8);
      }
      else
      {
        v483 = 0;
      }
      while (2)
      {
        if (v481 == (uint64_t *)v483)
          return 1;
        if ((sub_22EB12204(a1, *v481) & 1) != 0)
        {
          ++v481;
          continue;
        }
        break;
      }
      return 0;
    case 9:
      v204 = *(_QWORD *)(a2 + 48);
      v205 = (unint64_t *)(v204 & 0xFFFFFFFFFFFFFFF8);
      if ((v204 & 4) != 0 && v205)
      {
        if ((sub_22EB112B4(a1, *v205, (uint64_t)(v205 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22EB0CFBC(a1);
        if (!(_DWORD)result)
          return result;
      }
      v465 = *(unsigned int *)(a2 + 36);
      if (!(_DWORD)v465)
        goto LABEL_859;
      for (i = 0; i != v465; ++i)
      {
        v467 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * i);
        v468 = *(_DWORD *)(v467 + 12) & 0x1FFFFFFF;
        if ((_DWORD)v468)
        {
          v469 = v467 + 16;
          v470 = 8 * v468;
          while ((sub_22EB0CFBC(a1) & 1) != 0)
          {
            v469 += 8;
            v470 -= 8;
            if (!v470)
              goto LABEL_858;
          }
          return 0;
        }
LABEL_858:
        ;
      }
LABEL_859:
      v471 = *(_DWORD *)v4 & 0x7F;
      v472 = v471 > 0x39 || ((1 << v471) & 0x3F0003E01011066) == 0;
      if (v472 && (v471 - 70 <= 0xD ? (v547 = ((1 << (v471 - 70)) & 0x2803) == 0) : (v547 = 1), v547 && v471 - 19 > 4))
        v473 = 0;
      else
        v473 = sub_22EFCAE04(a2);
      result = sub_22EB12168(a1, v473);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v475 = *v474;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v477 = *(_QWORD *)v476 + 8 * *(unsigned int *)(v476 + 8);
        }
        else
        {
          v477 = 0;
        }
        while (v475 != (uint64_t *)v477)
        {
          if ((sub_22EB12204(a1, *v475) & 1) == 0)
            return 0;
          ++v475;
        }
      }
      return 1;
    case 10:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v333 = *v332;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v335 = *(_QWORD *)v334 + 8 * *(unsigned int *)(v334 + 8);
      }
      else
      {
        v335 = 0;
      }
      while (2)
      {
        if (v333 == (uint64_t *)v335)
          return 1;
        if ((sub_22EB12204(a1, *v333) & 1) != 0)
        {
          ++v333;
          continue;
        }
        break;
      }
      return 0;
    case 11:
      return (sub_22EB10E8C(a1, a2) & 1) != 0;
    case 12:
      result = sub_22EB12168(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v201 = *v200;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v203 = *(_QWORD *)v202 + 8 * *(unsigned int *)(v202 + 8);
      }
      else
      {
        v203 = 0;
      }
      while (2)
      {
        if (v201 == (uint64_t *)v203)
          return 1;
        if ((sub_22EB12204(a1, *v201) & 1) != 0)
        {
          ++v201;
          continue;
        }
        break;
      }
      return 0;
    case 13:
      if (!sub_22EB11174(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v316 = *(_DWORD *)(a2 + 24);
      v317 = *(_QWORD *)(a2 + 80);
      v558 = *(_QWORD *)(a2 + 40);
      v559 = v316;
      v560 = v317;
      if (!sub_22EB111FC(a1, &v558))
        return 0;
      if ((v318 = *(_DWORD *)v4 & 0x7F, v318 <= 0x39) && ((1 << v318) & 0x3F0003E01011066) != 0
        || v318 - 70 <= 0xD && ((1 << (v318 - 70)) & 0x2803) != 0
        || v318 - 19 <= 4)
      {
        v319 = sub_22EFCAE04(a2);
      }
      else
      {
        v319 = 0;
      }
      if (!sub_22EB12168(a1, v319))
        return 0;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v321 = *v320;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v323 = *(_QWORD *)v322 + 8 * *(unsigned int *)(v322 + 8);
      }
      else
      {
        v323 = 0;
      }
      while (2)
      {
        if (v321 == (uint64_t *)v323)
          return 1;
        if ((sub_22EB12204(a1, *v321) & 1) != 0)
        {
          ++v321;
          continue;
        }
        break;
      }
      return 0;
    case 14:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v141 = *v140;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v143 = *(_QWORD *)v142 + 8 * *(unsigned int *)(v142 + 8);
      }
      else
      {
        v143 = 0;
      }
      while (2)
      {
        if (v141 == (uint64_t *)v143)
          return 1;
        if ((sub_22EB12204(a1, *v141) & 1) != 0)
        {
          ++v141;
          continue;
        }
        break;
      }
      return 0;
    case 15:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v221 = *v220;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v223 = *(_QWORD *)v222 + 8 * *(unsigned int *)(v222 + 8);
      }
      else
      {
        v223 = 0;
      }
      while (2)
      {
        if (v221 == (uint64_t *)v223)
          return 1;
        if ((sub_22EB12204(a1, *v221) & 1) != 0)
        {
          ++v221;
          continue;
        }
        break;
      }
      return 0;
    case 16:
      result = sub_22EB12168(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v123 = *v122;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v125 = *(_QWORD *)v124 + 8 * *(unsigned int *)(v124 + 8);
      }
      else
      {
        v125 = 0;
      }
      while (2)
      {
        if (v123 == (uint64_t *)v125)
          return 1;
        if ((sub_22EB12204(a1, *v123) & 1) != 0)
        {
          ++v123;
          continue;
        }
        break;
      }
      return 0;
    case 17:
      result = sub_22EB11174(a1, *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80));
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v264 = *v263;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v266 = *(_QWORD *)v265 + 8 * *(unsigned int *)(v265 + 8);
      }
      else
      {
        v266 = 0;
      }
      while (2)
      {
        if (v264 == (uint64_t *)v266)
          return 1;
        if ((sub_22EB12204(a1, *v264) & 1) != 0)
        {
          ++v264;
          continue;
        }
        break;
      }
      return 0;
    case 18:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v329 = *v328;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v331 = *(_QWORD *)v330 + 8 * *(unsigned int *)(v330 + 8);
      }
      else
      {
        v331 = 0;
      }
      while (2)
      {
        if (v329 == (uint64_t *)v331)
          return 1;
        if ((sub_22EB12204(a1, *v329) & 1) != 0)
        {
          ++v329;
          continue;
        }
        break;
      }
      return 0;
    case 19:
      v361 = *(_QWORD *)(a2 + 112);
      if (!v361)
        goto LABEL_650;
      v362 = *(unsigned int *)(v361 + 8);
      if (!(_DWORD)v362)
        goto LABEL_650;
      v363 = (uint64_t *)(v361 + 16);
      v364 = 8 * v362;
      while ((sub_22EB10FA4(a1, *v363) & 1) != 0)
      {
        ++v363;
        v364 -= 8;
        if (!v364)
        {
LABEL_650:
          result = sub_22EB12168(a1, a2 + 48);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v366 = *v365;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v368 = *(_QWORD *)v367 + 8 * *(unsigned int *)(v367 + 8);
            }
            else
            {
              v368 = 0;
            }
            while (v366 != (uint64_t *)v368)
            {
              if ((sub_22EB12204(a1, *v366) & 1) == 0)
                return 0;
              ++v366;
            }
          }
          return 1;
        }
      }
      return 0;
    case 20:
      result = sub_22EB12168(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v284 = *v283;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v286 = *(_QWORD *)v285 + 8 * *(unsigned int *)(v285 + 8);
      }
      else
      {
        v286 = 0;
      }
      while (2)
      {
        if (v284 == (uint64_t *)v286)
          return 1;
        if ((sub_22EB12204(a1, *v284) & 1) != 0)
        {
          ++v284;
          continue;
        }
        break;
      }
      return 0;
    case 21:
      result = sub_22EB12168(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v313 = *v312;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v315 = *(_QWORD *)v314 + 8 * *(unsigned int *)(v314 + 8);
      }
      else
      {
        v315 = 0;
      }
      while (2)
      {
        if (v313 == (uint64_t *)v315)
          return 1;
        if ((sub_22EB12204(a1, *v313) & 1) != 0)
        {
          ++v313;
          continue;
        }
        break;
      }
      return 0;
    case 22:
      v354 = *(_QWORD *)(a2 + 112);
      if (!v354)
        goto LABEL_637;
      v355 = *(unsigned int *)(v354 + 8);
      if (!(_DWORD)v355)
        goto LABEL_637;
      v356 = (uint64_t *)(v354 + 16);
      v357 = 8 * v355;
      while ((sub_22EB10FA4(a1, *v356) & 1) != 0)
      {
        ++v356;
        v357 -= 8;
        if (!v357)
        {
LABEL_637:
          v358 = (unint64_t *)sub_22F259044(a2);
          if (v358)
          {
            result = sub_22EB112B4(a1, *v358, (uint64_t)(v358 + 1));
            if (!(_DWORD)result)
              return result;
          }
          v359 = *(_QWORD *)(a2 + 120);
          if (!v359)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
            v359 = *(_QWORD *)(a2 + 120);
          }
          if (v359 < 8)
            v360 = 0;
          else
            v360 = *(_QWORD *)(v359 & 0xFFFFFFFFFFFFFFF8);
          if (v360 == a2)
          {
            v552 = sub_22F2590A8(a2);
            v553 = sub_22F25910C(a2);
            v554 = sub_22F259178(a2);
            v555 = sub_22F2591DC(a2);
            if (v552 != v553 && v554 != v555)
            {
              v556 = v554 + 4;
              v557 = v552 + 8;
              do
              {
                if (v557 == v553)
                  break;
                v557 += 8;
                v31 = v556 == v555;
                v556 += 4;
              }
              while (!v31);
            }
          }
          result = sub_22EB12168(a1, a2 + 48);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v531 = *v530;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v533 = *(_QWORD *)v532 + 8 * *(unsigned int *)(v532 + 8);
            }
            else
            {
              v533 = 0;
            }
            while (v531 != (uint64_t *)v533)
            {
              if ((sub_22EB12204(a1, *v531) & 1) == 0)
                return 0;
              ++v531;
            }
          }
          return 1;
        }
      }
      return 0;
    case 23:
      v388 = *(_QWORD *)(a2 + 104);
      if (!v388)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
        v388 = *(_QWORD *)(a2 + 104);
      }
      if (v388 < 8)
        v389 = 0;
      else
        v389 = *(_QWORD *)(v388 & 0xFFFFFFFFFFFFFFF8);
      if (v389 == a2)
      {
        v523 = sub_22F259248(a2);
        v525 = v524;
        v526 = sub_22F2592CC(a2);
        if (v523 != v525 && v526 != v527)
        {
          v528 = v526 + 4;
          v529 = v523 + 8;
          do
          {
            if (v529 == v525)
              break;
            v529 += 8;
            v31 = v528 == v527;
            v528 += 4;
          }
          while (!v31);
        }
      }
      result = sub_22EB12168(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v485 = *v484;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v487 = *(_QWORD *)v486 + 8 * *(unsigned int *)(v486 + 8);
      }
      else
      {
        v487 = 0;
      }
      while (2)
      {
        if (v485 == (uint64_t *)v487)
          return 1;
        if ((sub_22EB12204(a1, *v485) & 1) != 0)
        {
          ++v485;
          continue;
        }
        break;
      }
      return 0;
    case 24:
      v207 = *(unint64_t **)(a2 + 88);
      if (v207)
      {
        result = sub_22EB112B4(a1, *v207, (uint64_t)(v207 + 1));
        if (!(_DWORD)result)
          return result;
      }
      v208 = *(unsigned int *)(a2 + 104);
      if (!(_DWORD)v208)
        goto LABEL_379;
      v209 = *(_QWORD *)(a2 + 96);
      v210 = 8 * v208;
      while ((sub_22EB0CFBC(a1) & 1) != 0)
      {
        v209 += 8;
        v210 -= 8;
        if (!v210)
        {
LABEL_379:
          if ((*(unsigned int (**)(unint64_t))(*(_QWORD *)a2 + 72))(a2))
          {
            v211 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
            result = sub_22EB007F8(a1, v211, 0);
            if (!(_DWORD)result)
              return result;
          }
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v213 = *v212;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v215 = *(_QWORD *)v214 + 8 * *(unsigned int *)(v214 + 8);
            }
            else
            {
              v215 = 0;
            }
            while (v213 != (uint64_t *)v215)
            {
              if ((sub_22EB12204(a1, *v213) & 1) == 0)
                return 0;
              ++v213;
            }
          }
          return 1;
        }
      }
      return 0;
    case 25:
      v206 = *(unint64_t **)(a2 + 64);
      if (v206)
      {
        if ((sub_22EB112B4(a1, *v206, (uint64_t)(v206 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22EB11A1C(a1, *(_QWORD *)(a2 + 56));
        if (!(_DWORD)result)
          return result;
      }
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v507 = *v506;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v509 = *(_QWORD *)v508 + 8 * *(unsigned int *)(v508 + 8);
      }
      else
      {
        v509 = 0;
      }
      while (2)
      {
        if (v507 == (uint64_t *)v509)
          return 1;
        if ((sub_22EB12204(a1, *v507) & 1) != 0)
        {
          ++v507;
          continue;
        }
        break;
      }
      return 0;
    case 26:
      result = sub_22EB127A0(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      v411 = *(_DWORD *)v4 & 0x7F;
      v412 = v411 > 0x39 || ((1 << v411) & 0x3F0003E01011066) == 0;
      v413 = !v412 || v411 - 70 <= 0xD && ((1 << (v411 - 70)) & 0x2803) != 0 || v411 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v413);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v415 = *v414;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v417 = *(_QWORD *)v416 + 8 * *(unsigned int *)(v416 + 8);
      }
      else
      {
        v417 = 0;
      }
      while (2)
      {
        if (v415 == (uint64_t *)v417)
          return 1;
        if ((sub_22EB12204(a1, *v415) & 1) != 0)
        {
          ++v415;
          continue;
        }
        break;
      }
      return 0;
    case 27:
      result = sub_22EB127A0(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 64), 0);
      if (!(_DWORD)result)
        return result;
      if ((v112 = *(_DWORD *)v4 & 0x7F, v112 <= 0x39) && ((1 << v112) & 0x3F0003E01011066) != 0
        || v112 - 70 <= 0xD && ((1 << (v112 - 70)) & 0x2803) != 0
        || v112 - 19 <= 4)
      {
        v113 = sub_22EFCAE04(a2);
      }
      else
      {
        v113 = 0;
      }
      result = sub_22EB12168(a1, v113);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v115 = *v114;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v117 = *(_QWORD *)v116 + 8 * *(unsigned int *)(v116 + 8);
      }
      else
      {
        v117 = 0;
      }
      while (2)
      {
        if (v115 == (uint64_t *)v117)
          return 1;
        if ((sub_22EB12204(a1, *v115) & 1) != 0)
        {
          ++v115;
          continue;
        }
        break;
      }
      return 0;
    case 28:
      result = sub_22EB127A0(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EB0CFBC(a1);
      if (!(_DWORD)result)
        return result;
      if ((v390 = *(_DWORD *)v4 & 0x7F, v390 <= 0x39) && ((1 << v390) & 0x3F0003E01011066) != 0
        || v390 - 70 <= 0xD && ((1 << (v390 - 70)) & 0x2803) != 0
        || v390 - 19 <= 4)
      {
        v391 = sub_22EFCAE04(a2);
      }
      else
      {
        v391 = 0;
      }
      result = sub_22EB12168(a1, v391);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v393 = *v392;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v395 = *(_QWORD *)v394 + 8 * *(unsigned int *)(v394 + 8);
      }
      else
      {
        v395 = 0;
      }
      while (2)
      {
        if (v393 == (uint64_t *)v395)
          return 1;
        if ((sub_22EB12204(a1, *v393) & 1) != 0)
        {
          ++v393;
          continue;
        }
        break;
      }
      return 0;
    case 29:
      result = sub_22EB127A0(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EB0CFBC(a1);
      if (!(_DWORD)result)
        return result;
      if ((v396 = *(_DWORD *)v4 & 0x7F, v396 <= 0x39) && ((1 << v396) & 0x3F0003E01011066) != 0
        || v396 - 70 <= 0xD && ((1 << (v396 - 70)) & 0x2803) != 0
        || v396 - 19 <= 4)
      {
        v397 = sub_22EFCAE04(a2);
      }
      else
      {
        v397 = 0;
      }
      result = sub_22EB12168(a1, v397);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v399 = *v398;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v401 = *(_QWORD *)v400 + 8 * *(unsigned int *)(v400 + 8);
      }
      else
      {
        v401 = 0;
      }
      while (2)
      {
        if (v399 == (uint64_t *)v401)
          return 1;
        if ((sub_22EB12204(a1, *v399) & 1) != 0)
        {
          ++v399;
          continue;
        }
        break;
      }
      return 0;
    case 30:
      result = sub_22EB0CFBC(a1);
      if (!(_DWORD)result)
        return result;
      result = sub_22EB127A0(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      if ((v338 = *(_DWORD *)v4 & 0x7F, v338 <= 0x39) && ((1 << v338) & 0x3F0003E01011066) != 0
        || v338 - 70 <= 0xD && ((1 << (v338 - 70)) & 0x2803) != 0
        || v338 - 19 <= 4)
      {
        v339 = sub_22EFCAE04(a2);
      }
      else
      {
        v339 = 0;
      }
      result = sub_22EB12168(a1, v339);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v341 = *v340;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v343 = *(_QWORD *)v342 + 8 * *(unsigned int *)(v342 + 8);
      }
      else
      {
        v343 = 0;
      }
      while (2)
      {
        if (v341 == (uint64_t *)v343)
          return 1;
        if ((sub_22EB12204(a1, *v341) & 1) != 0)
        {
          ++v341;
          continue;
        }
        break;
      }
      return 0;
    case 31:
      result = sub_22EB127A0(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EB0CFBC(a1);
      if (!(_DWORD)result)
        return result;
      if ((v257 = *(_DWORD *)v4 & 0x7F, v257 <= 0x39) && ((1 << v257) & 0x3F0003E01011066) != 0
        || v257 - 70 <= 0xD && ((1 << (v257 - 70)) & 0x2803) != 0
        || v257 - 19 <= 4)
      {
        v258 = sub_22EFCAE04(a2);
      }
      else
      {
        v258 = 0;
      }
      result = sub_22EB12168(a1, v258);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v260 = *v259;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v262 = *(_QWORD *)v261 + 8 * *(unsigned int *)(v261 + 8);
      }
      else
      {
        v262 = 0;
      }
      while (2)
      {
        if (v260 == (uint64_t *)v262)
          return 1;
        if ((sub_22EB12204(a1, *v260) & 1) != 0)
        {
          ++v260;
          continue;
        }
        break;
      }
      return 0;
    case 32:
      result = sub_22EB0CFBC(a1);
      if (!(_DWORD)result)
        return result;
      if (*(_QWORD *)(a2 + 72) >= 8uLL && (*(_QWORD *)(a2 + 72) & 6) != 2)
      {
        v544 = sub_22F259350(a2);
        result = sub_22EB12050(a1, (uint64_t)v544);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EB127A0(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      if ((v344 = *(_DWORD *)v4 & 0x7F, v344 <= 0x39) && ((1 << v344) & 0x3F0003E01011066) != 0
        || v344 - 70 <= 0xD && ((1 << (v344 - 70)) & 0x2803) != 0
        || v344 - 19 <= 4)
      {
        v345 = sub_22EFCAE04(a2);
      }
      else
      {
        v345 = 0;
      }
      result = sub_22EB12168(a1, v345);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v347 = *v346;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v349 = *(_QWORD *)v348 + 8 * *(unsigned int *)(v348 + 8);
      }
      else
      {
        v349 = 0;
      }
      if (v347 == (uint64_t *)v349)
        return 1;
      while ((sub_22EB12204(a1, *v347) & 1) != 0)
      {
        if (++v347 == (uint64_t *)v349)
          return 1;
      }
      return 0;
    case 33:
      v144 = *(_QWORD *)(a2 + 120);
      if ((v144 & 4) == 0)
        goto LABEL_252;
      v145 = 0;
      while (1)
      {
        v146 = v144 & 0xFFFFFFFFFFFFFFF8;
        if (v145 >= *(unsigned int *)(v146 + 16))
          break;
        sub_22EB127A0(a1, *(_QWORD *)(*(_QWORD *)(v146 + 24) + 8 * v145++));
        v144 = *(_QWORD *)(a2 + 120);
        if ((v144 & 4) == 0)
        {
LABEL_252:
          v147 = 0;
          v148 = 0;
          goto LABEL_946;
        }
      }
      v147 = *(_QWORD *)v146;
      v148 = *(_QWORD *)(v146 + 8);
LABEL_946:
      result = sub_22EB11174(a1, v147, v148);
      if (!(_DWORD)result)
        return result;
      v510 = *(_QWORD *)(a2 + 128);
      if ((v510 & 4) != 0 && (v510 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        result = sub_22EB112B4(a1, *(_QWORD *)(v510 & 0xFFFFFFFFFFFFFFF8), (v510 & 0xFFFFFFFFFFFFFFF8) + 8);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EB12168(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v512 = *v511;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v514 = *(_QWORD *)v513 + 8 * *(unsigned int *)(v513 + 8);
      }
      else
      {
        v514 = 0;
      }
      if (v512 == (uint64_t *)v514)
        return 1;
      while ((sub_22EB12204(a1, *v512) & 1) != 0)
      {
        if (++v512 == (uint64_t *)v514)
          return 1;
      }
      return 0;
    case 34:
      result = sub_22EB12840(a1, a2);
      if (!(_DWORD)result)
        return result;
      result = sub_22EB12168(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v119 = *v118;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v121 = *(_QWORD *)v120 + 8 * *(unsigned int *)(v120 + 8);
      }
      else
      {
        v121 = 0;
      }
      if (v119 == (uint64_t *)v121)
        return 1;
      while ((sub_22EB12204(a1, *v119) & 1) != 0)
      {
        if (++v119 == (uint64_t *)v121)
          return 1;
      }
      return 0;
    case 35:
      result = sub_22EB128B4(a1, a2);
      if (!(_DWORD)result)
        return result;
      result = sub_22EB12168(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v101 = *v100;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v103 = *(_QWORD *)v102 + 8 * *(unsigned int *)(v102 + 8);
      }
      else
      {
        v103 = 0;
      }
      if (v101 == (uint64_t *)v103)
        return 1;
      while ((sub_22EB12204(a1, *v101) & 1) != 0)
      {
        if (++v101 == (uint64_t *)v103)
          return 1;
      }
      return 0;
    case 36:
      v104 = *(unint64_t ***)(a2 + 160);
      if (v104)
      {
        if (*v104)
        {
          result = sub_22EB112B4(a1, **v104, (uint64_t)(*v104 + 1));
          if (!(_DWORD)result)
            return result;
        }
      }
      v105 = *(_QWORD *)(a2 + 120);
      if ((v105 & 4) != 0)
      {
        v488 = (uint64_t *)(v105 & 0xFFFFFFFFFFFFFFF8);
        v106 = *v488;
        v107 = v488[1];
      }
      else
      {
        v106 = 0;
        v107 = 0;
      }
      result = sub_22EB11174(a1, v106, v107);
      if (!(_DWORD)result)
        return result;
      if (sub_22EFD5760(a2) != 2)
        return 1;
      result = sub_22EB12168(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v490 = *v489;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v492 = *(_QWORD *)v491 + 8 * *(unsigned int *)(v491 + 8);
      }
      else
      {
        v492 = 0;
      }
      if (v490 == (uint64_t *)v492)
        return 1;
      while ((sub_22EB12204(a1, *v490) & 1) != 0)
      {
        if (++v490 == (uint64_t *)v492)
          return 1;
      }
      return 0;
    case 37:
      v63 = *(_QWORD *)(a2 + 184);
      if (!v63)
        goto LABEL_104;
      v64 = *(_DWORD *)(v63 + 12) & 0x1FFFFFFF;
      if (!(_DWORD)v64)
        goto LABEL_104;
      v65 = v63 + 16;
      v66 = 8 * v64;
      while ((sub_22EB0CFBC(a1) & 1) != 0)
      {
        v65 += 8;
        v66 -= 8;
        if (!v66)
        {
LABEL_104:
          v67 = *(_QWORD *)(a2 + 192);
          v68 = *(unsigned int *)(v67 + 8);
          if ((_DWORD)v68)
          {
            v69 = v67 + 16;
            while ((sub_22EB12050(a1, v69) & 1) != 0)
            {
              v69 += 32;
              if (!--v68)
                goto LABEL_108;
            }
            return 0;
          }
LABEL_108:
          result = sub_22EB128B4(a1, a2);
          if (!(_DWORD)result)
            return result;
          result = sub_22EB12168(a1, a2 + 64);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v71 = *v70;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v73 = *(_QWORD *)v72 + 8 * *(unsigned int *)(v72 + 8);
            }
            else
            {
              v73 = 0;
            }
            if (v71 != (uint64_t *)v73)
            {
              while ((sub_22EB12204(a1, *v71) & 1) != 0)
              {
                if (++v71 == (uint64_t *)v73)
                  return 1;
              }
              return 0;
            }
          }
          return 1;
        }
      }
      return 0;
    case 38:
      v402 = *(_QWORD *)(a2 + 48);
      if (v402)
      {
        result = sub_22EB11A1C(a1, v402 & 0xFFFFFFFFFFFFFFF0);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EB10E44(a1, a2);
      if (!(_DWORD)result)
        return result;
      v403 = *(_QWORD *)(a2 + 72);
      if (v403 >= 8 && (*(_QWORD *)(a2 + 72) & 6) != 2)
      {
        v404 = (unint64_t *)(v403 & 0xFFFFFFFFFFFFFFF8);
        if ((*(_QWORD *)(a2 + 72) & 6) == 4 && v404)
          v404 = (unint64_t *)v404[1];
        result = sub_22EB112B4(a1, *v404, (uint64_t)(v404 + 1));
        if (!(_DWORD)result)
          return result;
      }
      if ((v405 = *(_DWORD *)v4 & 0x7F, v405 <= 0x39) && ((1 << v405) & 0x3F0003E01011066) != 0
        || v405 - 70 <= 0xD && ((1 << (v405 - 70)) & 0x2803) != 0
        || v405 - 19 <= 4)
      {
        v406 = sub_22EFCAE04(a2);
      }
      else
      {
        v406 = 0;
      }
      result = sub_22EB12168(a1, v406);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v408 = *v407;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v410 = *(_QWORD *)v409 + 8 * *(unsigned int *)(v409 + 8);
      }
      else
      {
        v410 = 0;
      }
      if (v408 == (uint64_t *)v410)
        return 1;
      while ((sub_22EB12204(a1, *v408) & 1) != 0)
      {
        if (++v408 == (uint64_t *)v410)
          return 1;
      }
      return 0;
    case 39:
      return (sub_22EB10FA4(a1, a2) & 1) != 0;
    case 40:
      v176 = *(_QWORD *)(a2 + 80);
      v177 = (unint64_t *)(v176 & 0xFFFFFFFFFFFFFFF8);
      if ((v176 & 4) != 0)
        v177 = (unint64_t *)*v177;
      result = sub_22EB112B4(a1, *v177, (uint64_t)(v177 + 1));
      if (!(_DWORD)result)
        return result;
      if ((v178 = *(_DWORD *)v4 & 0x7F, v178 <= 0x39) && ((1 << v178) & 0x3F0003E01011066) != 0
        || v178 - 70 <= 0xD && ((1 << (v178 - 70)) & 0x2803) != 0
        || v178 - 19 <= 4)
      {
        v179 = sub_22EFCAE04(a2);
      }
      else
      {
        v179 = 0;
      }
      result = sub_22EB12168(a1, v179);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v181 = *v180;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v183 = *(_QWORD *)v182 + 8 * *(unsigned int *)(v182 + 8);
      }
      else
      {
        v183 = 0;
      }
      if (v181 == (uint64_t *)v183)
        return 1;
      while ((sub_22EB12204(a1, *v181) & 1) != 0)
      {
        if (++v181 == (uint64_t *)v183)
          return 1;
      }
      return 0;
    case 41:
      v267 = *(_QWORD *)(a2 + 80);
      v268 = (unint64_t *)(v267 & 0xFFFFFFFFFFFFFFF8);
      if ((v267 & 4) != 0)
        v268 = (unint64_t *)*v268;
      result = sub_22EB112B4(a1, *v268, (uint64_t)(v268 + 1));
      if (!(_DWORD)result)
        return result;
      if ((v269 = *(_DWORD *)v4 & 0x7F, v269 <= 0x39) && ((1 << v269) & 0x3F0003E01011066) != 0
        || v269 - 70 <= 0xD && ((1 << (v269 - 70)) & 0x2803) != 0
        || v269 - 19 <= 4)
      {
        v270 = sub_22EFCAE04(a2);
      }
      else
      {
        v270 = 0;
      }
      result = sub_22EB12168(a1, v270);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v272 = *v271;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v274 = *(_QWORD *)v273 + 8 * *(unsigned int *)(v273 + 8);
      }
      else
      {
        v274 = 0;
      }
      if (v272 == (uint64_t *)v274)
        return 1;
      while ((sub_22EB12204(a1, *v272) & 1) != 0)
      {
        if (++v272 == (uint64_t *)v274)
          return 1;
      }
      return 0;
    case 42:
      result = sub_22EB11174(a1, *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80));
      if (!(_DWORD)result)
        return result;
      v373 = *(_DWORD *)v4 & 0x7F;
      v374 = v373 > 0x39 || ((1 << v373) & 0x3F0003E01011066) == 0;
      v375 = !v374 || v373 - 70 <= 0xD && ((1 << (v373 - 70)) & 0x2803) != 0 || v373 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v375);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v377 = *v376;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v379 = *(_QWORD *)v378 + 8 * *(unsigned int *)(v378 + 8);
      }
      else
      {
        v379 = 0;
      }
      if (v377 == (uint64_t *)v379)
        return 1;
      while ((sub_22EB12204(a1, *v377) & 1) != 0)
      {
        if (++v377 == (uint64_t *)v379)
          return 1;
      }
      return 0;
    case 43:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v41 = *v40;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v43 = *(_QWORD *)v42 + 8 * *(unsigned int *)(v42 + 8);
      }
      else
      {
        v43 = 0;
      }
      if (v41 == (uint64_t *)v43)
        return 1;
      while ((sub_22EB12204(a1, *v41) & 1) != 0)
      {
        if (++v41 == (uint64_t *)v43)
          return 1;
      }
      return 0;
    case 44:
      result = sub_22EB11174(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64));
      if (!(_DWORD)result)
        return result;
      v133 = *(_DWORD *)v4 & 0x7F;
      v134 = v133 > 0x39 || ((1 << v133) & 0x3F0003E01011066) == 0;
      v135 = !v134 || v133 - 70 <= 0xD && ((1 << (v133 - 70)) & 0x2803) != 0 || v133 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v135);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v137 = *v136;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v139 = *(_QWORD *)v138 + 8 * *(unsigned int *)(v138 + 8);
      }
      else
      {
        v139 = 0;
      }
      if (v137 == (uint64_t *)v139)
        return 1;
      while ((sub_22EB12204(a1, *v137) & 1) != 0)
      {
        if (++v137 == (uint64_t *)v139)
          return 1;
      }
      return 0;
    case 45:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v351 = *v350;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v353 = *(_QWORD *)v352 + 8 * *(unsigned int *)(v352 + 8);
      }
      else
      {
        v353 = 0;
      }
      if (v351 == (uint64_t *)v353)
        return 1;
      while ((sub_22EB12204(a1, *v351) & 1) != 0)
      {
        if (++v351 == (uint64_t *)v353)
          return 1;
      }
      return 0;
    case 46:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v435 = *v434;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v437 = *(_QWORD *)v436 + 8 * *(unsigned int *)(v436 + 8);
      }
      else
      {
        v437 = 0;
      }
      if (v435 == (uint64_t *)v437)
        return 1;
      while ((sub_22EB12204(a1, *v435) & 1) != 0)
      {
        if (++v435 == (uint64_t *)v437)
          return 1;
      }
      return 0;
    case 47:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v79 = *v78;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v81 = *(_QWORD *)v80 + 8 * *(unsigned int *)(v80 + 8);
      }
      else
      {
        v81 = 0;
      }
      if (v79 == (uint64_t *)v81)
        return 1;
      while ((sub_22EB12204(a1, *v79) & 1) != 0)
      {
        if (++v79 == (uint64_t *)v81)
          return 1;
      }
      return 0;
    case 48:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v150 = *v149;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v152 = *(_QWORD *)v151 + 8 * *(unsigned int *)(v151 + 8);
      }
      else
      {
        v152 = 0;
      }
      if (v150 == (uint64_t *)v152)
        return 1;
      while ((sub_22EB12204(a1, *v150) & 1) != 0)
      {
        if (++v150 == (uint64_t *)v152)
          return 1;
      }
      return 0;
    case 49:
      result = sub_22EB1292C(a1, a2);
      if (!(_DWORD)result)
        return result;
      v171 = *(_QWORD *)(a2 + 72);
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v515 = v171 & 0xFFFFFFFFFFFFFFFCLL;
        v516 = *(_QWORD *)(a2 + 72) & 3;
        if ((_DWORD)v516 && (_DWORD)v516 != 3)
          v515 = *(_QWORD *)(v515 + 8);
        if ((sub_22EB007F8(a1, v515, 0) & 1) == 0)
          return 0;
      }
      else if ((v171 & 3) != 0 && (v171 & 3) != 3)
      {
        result = sub_22EB007F8(a1, v171 & 0xFFFFFFFFFFFFFFFCLL, 0);
        if (!(_DWORD)result)
          return result;
      }
      v517 = *(_DWORD *)v4 & 0x7F;
      if (v517 <= 0x39 && ((1 << v517) & 0x3F0003E01011066) != 0
        || v517 - 70 <= 0xD && ((1 << (v517 - 70)) & 0x2803) != 0
        || v517 - 19 <= 4)
      {
        v518 = sub_22EFCAE04(a2);
      }
      else
      {
        v518 = 0;
      }
      result = sub_22EB12168(a1, v518);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v520 = *v519;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v522 = *(_QWORD *)v521 + 8 * *(unsigned int *)(v521 + 8);
        }
        else
        {
          v522 = 0;
        }
        for (; v520 != (uint64_t *)v522; ++v520)
        {
          if ((sub_22EB12204(a1, *v520) & 1) == 0)
            return 0;
        }
      }
      return 1;
    case 50:
      result = sub_22EB1292C(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v33 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3)
          v33 = *(_QWORD *)(v33 + 8);
        result = sub_22EB007F8(a1, v33, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v34 = *(_DWORD *)v4 & 0x7F, v34 <= 0x39) && ((1 << v34) & 0x3F0003E01011066) != 0
        || (v34 - 70 <= 0xD ? (v542 = ((1 << (v34 - 70)) & 0x2803) == 0) : (v542 = 1), !v542 || v34 - 19 <= 4))
      {
        v35 = sub_22EFCAE04(a2);
      }
      else
      {
        v35 = 0;
      }
      result = sub_22EB12168(a1, v35);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v37 = *v36;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v39 = *(_QWORD *)v38 + 8 * *(unsigned int *)(v38 + 8);
      }
      else
      {
        v39 = 0;
      }
      if (v37 == (uint64_t *)v39)
        return 1;
      while ((sub_22EB12204(a1, *v37) & 1) != 0)
      {
        if (++v37 == (uint64_t *)v39)
          return 1;
      }
      return 0;
    case 51:
      result = sub_22EB1292C(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v450 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3)
          v450 = *(_QWORD *)(v450 + 8);
        result = sub_22EB007F8(a1, v450, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v451 = *(_DWORD *)v4 & 0x7F, v451 <= 0x39) && ((1 << v451) & 0x3F0003E01011066) != 0
        || (v451 - 70 <= 0xD ? (v543 = ((1 << (v451 - 70)) & 0x2803) == 0) : (v543 = 1), !v543 || v451 - 19 <= 4))
      {
        v452 = sub_22EFCAE04(a2);
      }
      else
      {
        v452 = 0;
      }
      result = sub_22EB12168(a1, v452);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v454 = *v453;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v456 = *(_QWORD *)v455 + 8 * *(unsigned int *)(v455 + 8);
      }
      else
      {
        v456 = 0;
      }
      if (v454 == (uint64_t *)v456)
        return 1;
      while ((sub_22EB12204(a1, *v454) & 1) != 0)
      {
        if (++v454 == (uint64_t *)v456)
          return 1;
      }
      return 0;
    case 52:
      result = sub_22EB129F8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v431 = *v430;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v433 = *(_QWORD *)v432 + 8 * *(unsigned int *)(v432 + 8);
      }
      else
      {
        v433 = 0;
      }
      if (v431 == (uint64_t *)v433)
        return 1;
      while ((sub_22EB12204(a1, *v431) & 1) != 0)
      {
        if (++v431 == (uint64_t *)v433)
          return 1;
      }
      return 0;
    case 53:
      result = sub_22EB129F8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v75 = *v74;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v77 = *(_QWORD *)v76 + 8 * *(unsigned int *)(v76 + 8);
      }
      else
      {
        v77 = 0;
      }
      if (v75 == (uint64_t *)v77)
        return 1;
      while ((sub_22EB12204(a1, *v75) & 1) != 0)
      {
        if (++v75 == (uint64_t *)v77)
          return 1;
      }
      return 0;
    case 54:
      result = sub_22EB129F8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v419 = *v418;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v421 = *(_QWORD *)v420 + 8 * *(unsigned int *)(v420 + 8);
      }
      else
      {
        v421 = 0;
      }
      if (v419 == (uint64_t *)v421)
        return 1;
      while ((sub_22EB12204(a1, *v419) & 1) != 0)
      {
        if (++v419 == (uint64_t *)v421)
          return 1;
      }
      return 0;
    case 55:
      result = sub_22EB129F8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v427 = *v426;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v429 = *(_QWORD *)v428 + 8 * *(unsigned int *)(v428 + 8);
      }
      else
      {
        v429 = 0;
      }
      if (v427 == (uint64_t *)v429)
        return 1;
      while ((sub_22EB12204(a1, *v427) & 1) != 0)
      {
        if (++v427 == (uint64_t *)v429)
          return 1;
      }
      return 0;
    case 56:
      result = sub_22EB129F8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v83 = *v82;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v85 = *(_QWORD *)v84 + 8 * *(unsigned int *)(v84 + 8);
      }
      else
      {
        v85 = 0;
      }
      if (v83 == (uint64_t *)v85)
        return 1;
      while ((sub_22EB12204(a1, *v83) & 1) != 0)
      {
        if (++v83 == (uint64_t *)v85)
          return 1;
      }
      return 0;
    case 57:
      result = sub_22EB129F8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v370 = *v369;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v372 = *(_QWORD *)v371 + 8 * *(unsigned int *)(v371 + 8);
      }
      else
      {
        v372 = 0;
      }
      if (v370 == (uint64_t *)v372)
        return 1;
      while ((sub_22EB12204(a1, *v370) & 1) != 0)
      {
        if (++v370 == (uint64_t *)v372)
          return 1;
      }
      return 0;
    case 58:
      result = sub_22EB1292C(a1, a2);
      if (!(_DWORD)result)
        return result;
      v153 = *(_DWORD *)v4 & 0x7F;
      v154 = v153 > 0x39 || ((1 << v153) & 0x3F0003E01011066) == 0;
      v155 = !v154 || v153 - 70 <= 0xD && ((1 << (v153 - 70)) & 0x2803) != 0 || v153 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v155);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v157 = *v156;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v159 = *(_QWORD *)v158 + 8 * *(unsigned int *)(v158 + 8);
      }
      else
      {
        v159 = 0;
      }
      if (v157 == (uint64_t *)v159)
        return 1;
      while ((sub_22EB12204(a1, *v157) & 1) != 0)
      {
        if (++v157 == (uint64_t *)v159)
          return 1;
      }
      return 0;
    case 59:
      result = sub_22EB1292C(a1, a2);
      if (!(_DWORD)result)
        return result;
      v380 = *(_QWORD *)(a2 + 72);
      if (v380 >= 4 && (*(_QWORD *)(a2 + 72) & 3) != 1)
      {
        v381 = v380 & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_QWORD *)(a2 + 72) & 3) == 2 && v381)
          v381 = *(_QWORD *)(v381 + 8);
        result = sub_22EB007F8(a1, v381, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v382 = *(_DWORD *)v4 & 0x7F, v382 <= 0x39) && ((1 << v382) & 0x3F0003E01011066) != 0
        || v382 - 70 <= 0xD && ((1 << (v382 - 70)) & 0x2803) != 0
        || v382 - 19 <= 4)
      {
        v383 = sub_22EFCAE04(a2);
      }
      else
      {
        v383 = 0;
      }
      result = sub_22EB12168(a1, v383);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v385 = *v384;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v387 = *(_QWORD *)v386 + 8 * *(unsigned int *)(v386 + 8);
      }
      else
      {
        v387 = 0;
      }
      if (v385 == (uint64_t *)v387)
        return 1;
      while ((sub_22EB12204(a1, *v385) & 1) != 0)
      {
        if (++v385 == (uint64_t *)v387)
          return 1;
      }
      return 0;
    case 60:
      result = sub_22EB12DBC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v184 = *(_DWORD *)v4 & 0x7F;
      v185 = v184 > 0x39 || ((1 << v184) & 0x3F0003E01011066) == 0;
      v186 = !v185 || v184 - 70 <= 0xD && ((1 << (v184 - 70)) & 0x2803) != 0 || v184 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v186);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v188 = *v187;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v190 = *(_QWORD *)v189 + 8 * *(unsigned int *)(v189 + 8);
      }
      else
      {
        v190 = 0;
      }
      if (v188 == (uint64_t *)v190)
        return 1;
      while ((sub_22EB12204(a1, *v188) & 1) != 0)
      {
        if (++v188 == (uint64_t *)v190)
          return 1;
      }
      return 0;
    case 61:
      result = sub_22EB12DBC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v287 = *(unsigned int *)(a2 + 100);
      if (!(_DWORD)v287)
        goto LABEL_514;
      v288 = a2 + 104;
      v289 = 8 * v287;
      while ((sub_22EB0CFBC(a1) & 1) != 0)
      {
        v288 += 8;
        v289 -= 8;
        if (!v289)
        {
LABEL_514:
          v290 = *(_DWORD *)v4 & 0x7F;
          v291 = v290 > 0x39 || ((1 << v290) & 0x3F0003E01011066) == 0;
          if (v291
            && (v290 - 70 <= 0xD ? (v545 = ((1 << (v290 - 70)) & 0x2803) == 0) : (v545 = 1), v545 && v290 - 19 > 4))
          {
            v292 = 0;
          }
          else
          {
            v292 = sub_22EFCAE04(a2);
          }
          result = sub_22EB12168(a1, v292);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v294 = *v293;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v296 = *(_QWORD *)v295 + 8 * *(unsigned int *)(v295 + 8);
          }
          else
          {
            v296 = 0;
          }
          if (v294 == (uint64_t *)v296)
            return 1;
          while ((sub_22EB12204(a1, *v294) & 1) != 0)
          {
            if (++v294 == (uint64_t *)v296)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 62:
      result = sub_22EB12DBC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v305 = *(_DWORD *)v4 & 0x7F;
      v306 = v305 > 0x39 || ((1 << v305) & 0x3F0003E01011066) == 0;
      v307 = !v306 || v305 - 70 <= 0xD && ((1 << (v305 - 70)) & 0x2803) != 0 || v305 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v307);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v309 = *v308;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v311 = *(_QWORD *)v310 + 8 * *(unsigned int *)(v310 + 8);
      }
      else
      {
        v311 = 0;
      }
      if (v309 == (uint64_t *)v311)
        return 1;
      while ((sub_22EB12204(a1, *v309) & 1) != 0)
      {
        if (++v309 == (uint64_t *)v311)
          return 1;
      }
      return 0;
    case 63:
      result = sub_22EB12DBC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v224 = *(_DWORD *)v4 & 0x7F;
      v225 = v224 > 0x39 || ((1 << v224) & 0x3F0003E01011066) == 0;
      v226 = !v225 || v224 - 70 <= 0xD && ((1 << (v224 - 70)) & 0x2803) != 0 || v224 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v226);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v228 = *v227;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v230 = *(_QWORD *)v229 + 8 * *(unsigned int *)(v229 + 8);
      }
      else
      {
        v230 = 0;
      }
      if (v228 == (uint64_t *)v230)
        return 1;
      while ((sub_22EB12204(a1, *v228) & 1) != 0)
      {
        if (++v228 == (uint64_t *)v230)
          return 1;
      }
      return 0;
    case 64:
      result = sub_22EB12DBC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v191 = *(_DWORD *)(a2 + 96) & 0x600;
      if (v191 != 1024)
        goto LABEL_343;
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 88) & 0xFFFFFFFFFFFFFFF8, 0);
      if (!(_DWORD)result)
        return result;
      v191 = *(_DWORD *)(a2 + 96) & 0x600;
LABEL_343:
      if (v191 != 1024 && v191 != 512 && *(_QWORD *)(a2 + 88) >= 8uLL)
      {
        v192 = sub_22EFBC5B4(a2);
        v193 = v192;
        if (v192 && (*(_BYTE *)v192 & 0xFE) == 0xAC)
          v193 = *(_QWORD *)(v192 + 16);
        result = sub_22EB007F8(a1, v193, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v194 = *(_DWORD *)v4 & 0x7F, v194 <= 0x39) && ((1 << v194) & 0x3F0003E01011066) != 0
        || v194 - 70 <= 0xD && ((1 << (v194 - 70)) & 0x2803) != 0
        || v194 - 19 <= 4)
      {
        v195 = sub_22EFCAE04(a2);
      }
      else
      {
        v195 = 0;
      }
      result = sub_22EB12168(a1, v195);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v197 = *v196;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v199 = *(_QWORD *)v198 + 8 * *(unsigned int *)(v198 + 8);
      }
      else
      {
        v199 = 0;
      }
      if (v197 == (uint64_t *)v199)
        return 1;
      while ((sub_22EB12204(a1, *v197) & 1) != 0)
      {
        if (++v197 == (uint64_t *)v199)
          return 1;
      }
      return 0;
    case 65:
      v301 = *(unint64_t ***)(a2 + 120);
      if (v301)
      {
        if (*v301)
        {
          result = sub_22EB112B4(a1, **v301, (uint64_t)(*v301 + 1));
          if (!(_DWORD)result)
            return result;
        }
      }
      v302 = *(_QWORD *)(a2 + 56);
      if ((v302 & 4) != 0)
      {
        v493 = (uint64_t *)(v302 & 0xFFFFFFFFFFFFFFF8);
        v303 = *v493;
        v304 = v493[1];
      }
      else
      {
        v303 = 0;
        v304 = 0;
      }
      result = sub_22EB11174(a1, v303, v304);
      if (!(_DWORD)result)
        return result;
      if (sub_22EFBC2B0(a2) != 2)
        return 1;
      v494 = *(_DWORD *)v4 & 0x7F;
      if (v494 <= 0x39 && ((1 << v494) & 0x3F0003E01011066) != 0
        || v494 - 70 <= 0xD && ((1 << (v494 - 70)) & 0x2803) != 0
        || v494 - 19 <= 4)
      {
        v495 = sub_22EFCAE04(a2);
      }
      else
      {
        v495 = 0;
      }
      result = sub_22EB12168(a1, v495);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v497 = *v496;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v499 = *(_QWORD *)v498 + 8 * *(unsigned int *)(v498 + 8);
      }
      else
      {
        v499 = 0;
      }
      if (v497 == (uint64_t *)v499)
        return 1;
      while ((sub_22EB12204(a1, *v497) & 1) != 0)
      {
        if (++v497 == (uint64_t *)v499)
          return 1;
      }
      return 0;
    case 66:
      v44 = *(_QWORD *)(a2 + 424);
      if (!v44)
        goto LABEL_68;
      v45 = *(_DWORD *)(v44 + 12) & 0x1FFFFFFF;
      if (!(_DWORD)v45)
        goto LABEL_68;
      v46 = v44 + 16;
      v47 = 8 * v45;
      while ((sub_22EB0CFBC(a1) & 1) != 0)
      {
        v46 += 8;
        v47 -= 8;
        if (!v47)
        {
LABEL_68:
          v48 = *(_QWORD *)(a2 + 432);
          v49 = *(unsigned int *)(v48 + 8);
          if ((_DWORD)v49)
          {
            v50 = v48 + 16;
            while ((sub_22EB12050(a1, v50) & 1) != 0)
            {
              v50 += 32;
              if (!--v49)
                goto LABEL_72;
            }
          }
          else
          {
LABEL_72:
            result = sub_22EB12DBC(a1, a2);
            if (!(_DWORD)result)
              return result;
            v51 = *(_DWORD *)v4 & 0x7F;
            v52 = v51 > 0x39 || ((1 << v51) & 0x3F0003E01011066) == 0;
            if (v52
              && (v51 - 70 <= 0xD ? (v546 = ((1 << (v51 - 70)) & 0x2803) == 0) : (v546 = 1), v546 && v51 - 19 > 4))
            {
              v53 = 0;
            }
            else
            {
              v53 = sub_22EFCAE04(a2);
            }
            result = sub_22EB12168(a1, v53);
            if (!(_DWORD)result)
              return result;
            if ((*(_BYTE *)(v4 + 1) & 1) == 0)
              return 1;
            sub_22EFC8E88(a2);
            v55 = *v54;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v57 = *(_QWORD *)v56 + 8 * *(unsigned int *)(v56 + 8);
            }
            else
            {
              v57 = 0;
            }
            if (v55 == (uint64_t *)v57)
              return 1;
            while ((sub_22EB12204(a1, *v55) & 1) != 0)
            {
              if (++v55 == (uint64_t *)v57)
                return 1;
            }
          }
          return 0;
        }
      }
      return 0;
    case 67:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 56), 0);
      if (!(_DWORD)result)
        return result;
      v126 = *(_DWORD *)v4 & 0x7F;
      v127 = v126 > 0x39 || ((1 << v126) & 0x3F0003E01011066) == 0;
      v128 = !v127 || v126 - 70 <= 0xD && ((1 << (v126 - 70)) & 0x2803) != 0 || v126 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EB12168(a1, v128);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v130 = *v129;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v132 = *(_QWORD *)v131 + 8 * *(unsigned int *)(v131 + 8);
      }
      else
      {
        v132 = 0;
      }
      if (v130 == (uint64_t *)v132)
        return 1;
      while ((sub_22EB12204(a1, *v130) & 1) != 0)
      {
        if (++v130 == (uint64_t *)v132)
          return 1;
      }
      return 0;
    case 68:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v462 = *v461;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v464 = *(_QWORD *)v463 + 8 * *(unsigned int *)(v463 + 8);
      }
      else
      {
        v464 = 0;
      }
      if (v462 == (uint64_t *)v464)
        return 1;
      while ((sub_22EB12204(a1, *v462) & 1) != 0)
      {
        if (++v462 == (uint64_t *)v464)
          return 1;
      }
      return 0;
    case 69:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v109 = *v108;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v111 = *(_QWORD *)v110 + 8 * *(unsigned int *)(v110 + 8);
      }
      else
      {
        v111 = 0;
      }
      if (v109 == (uint64_t *)v111)
        return 1;
      while ((sub_22EB12204(a1, *v109) & 1) != 0)
      {
        if (++v109 == (uint64_t *)v111)
          return 1;
      }
      return 0;
    case 70:
      v21 = *(_DWORD **)(a2 + 56);
      v24 = *v21;
      v23 = (uint64_t *)(v21 + 4);
      v22 = v24;
      if (!v24)
        return (sub_22EB11A1C(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      v25 = 8 * v22;
      while ((sub_22EB12E1C(a1, *v23) & 1) != 0)
      {
        ++v23;
        v25 -= 8;
        if (!v25)
          return (sub_22EB11A1C(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      }
      return 0;
    case 71:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 88), 0);
      if ((_DWORD)result)
      {
        v62 = *(_QWORD *)(a2 + 96);
        if (!v62)
          return (sub_22EB11A1C(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
        result = sub_22EB007F8(a1, v62, 0);
        if ((_DWORD)result)
          return (sub_22EB11A1C(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      }
      return result;
    case 72:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v423 = *v422;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v425 = *(_QWORD *)v424 + 8 * *(unsigned int *)(v424 + 8);
      }
      else
      {
        v425 = 0;
      }
      if (v423 == (uint64_t *)v425)
        return 1;
      while ((sub_22EB12204(a1, *v423) & 1) != 0)
      {
        if (++v423 == (uint64_t *)v425)
          return 1;
      }
      return 0;
    case 73:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v439 = *v438;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v441 = *(_QWORD *)v440 + 8 * *(unsigned int *)(v440 + 8);
      }
      else
      {
        v441 = 0;
      }
      if (v439 == (uint64_t *)v441)
        return 1;
      while ((sub_22EB12204(a1, *v439) & 1) != 0)
      {
        if (++v439 == (uint64_t *)v441)
          return 1;
      }
      return 0;
    case 74:
      if (!sub_22EB11174(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v442 = *(_DWORD *)(a2 + 24);
      v443 = *(_QWORD *)(a2 + 80);
      v558 = *(_QWORD *)(a2 + 40);
      v559 = v442;
      v560 = v443;
      if (!sub_22EB111FC(a1, &v558))
        return 0;
      if ((v444 = *(_DWORD *)v4 & 0x7F, v444 <= 0x39) && ((1 << v444) & 0x3F0003E01011066) != 0
        || v444 - 70 <= 0xD && ((1 << (v444 - 70)) & 0x2803) != 0
        || v444 - 19 <= 4)
      {
        v445 = sub_22EFCAE04(a2);
      }
      else
      {
        v445 = 0;
      }
      if (!sub_22EB12168(a1, v445))
        return 0;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v447 = *v446;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v449 = *(_QWORD *)v448 + 8 * *(unsigned int *)(v448 + 8);
      }
      else
      {
        v449 = 0;
      }
      while (2)
      {
        if (v447 == (uint64_t *)v449)
          return 1;
        if ((sub_22EB12204(a1, *v447) & 1) != 0)
        {
          ++v447;
          continue;
        }
        break;
      }
      return 0;
    case 75:
      v86 = *(unsigned int **)(a2 + 40);
      v87 = *v86;
      v88 = v86[1];
      if (!(_DWORD)v88)
        goto LABEL_146;
      v89 = &v86[2 * v87 + 4];
      v90 = 8 * v88;
      while ((sub_22EB007F8(a1, *(_QWORD *)v89, 0) & 1) != 0)
      {
        v89 += 2;
        v90 -= 8;
        if (!v90)
        {
          v86 = *(unsigned int **)(a2 + 40);
          v87 = *v86;
LABEL_146:
          if ((_DWORD)v87)
          {
            v91 = (uint64_t *)(v86 + 4);
            v92 = 8 * v87;
            while ((sub_22EB12E1C(a1, *v91) & 1) != 0)
            {
              ++v91;
              v92 -= 8;
              if (!v92)
                goto LABEL_150;
            }
          }
          else
          {
LABEL_150:
            v93 = *(_DWORD *)v4 & 0x7F;
            v94 = v93 > 0x39 || ((1 << v93) & 0x3F0003E01011066) == 0;
            if (v94
              && (v93 - 70 <= 0xD ? (v540 = ((1 << (v93 - 70)) & 0x2803) == 0) : (v540 = 1), v540 && v93 - 19 > 4))
            {
              v95 = 0;
            }
            else
            {
              v95 = sub_22EFCAE04(a2);
            }
            result = sub_22EB12168(a1, v95);
            if (!(_DWORD)result)
              return result;
            if ((*(_BYTE *)(v4 + 1) & 1) == 0)
              return 1;
            sub_22EFC8E88(a2);
            v97 = *v96;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v99 = *(_QWORD *)v98 + 8 * *(unsigned int *)(v98 + 8);
            }
            else
            {
              v99 = 0;
            }
            if (v97 == (uint64_t *)v99)
              return 1;
            while ((sub_22EB12204(a1, *v97) & 1) != 0)
            {
              if (++v97 == (uint64_t *)v99)
                return 1;
            }
          }
          return 0;
        }
      }
      return 0;
    case 76:
      v275 = *(_DWORD **)(a2 + 40);
      v278 = *v275;
      v277 = (uint64_t *)(v275 + 4);
      v276 = v278;
      if (!v278)
        goto LABEL_1013;
      v279 = 8 * v276;
      while ((sub_22EB12E1C(a1, *v277) & 1) != 0)
      {
        ++v277;
        v279 -= 8;
        if (!v279)
        {
          v280 = *(_DWORD *)v4 & 0x7F;
          v281 = v280 > 0x39 || ((1 << v280) & 0x3F0003E01011066) == 0;
          if (v281
            && (v280 - 70 <= 0xD ? (v539 = ((1 << (v280 - 70)) & 0x2803) == 0) : (v539 = 1), v539 && v280 - 19 > 4))
          {
LABEL_1013:
            v282 = 0;
          }
          else
          {
            v282 = sub_22EFCAE04(a2);
          }
          result = sub_22EB12168(a1, v282);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v549 = *v548;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v551 = *(_QWORD *)v550 + 8 * *(unsigned int *)(v550 + 8);
          }
          else
          {
            v551 = 0;
          }
          if (v549 == (uint64_t *)v551)
            return 1;
          while ((sub_22EB12204(a1, *v549) & 1) != 0)
          {
            if (++v549 == (uint64_t *)v551)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 77:
      v26 = *(unsigned int **)(a2 + 40);
      v27 = v26[1];
      if (!(_DWORD)v27)
        goto LABEL_998;
      v28 = &v26[2 * *v26 + 4];
      v29 = 8 * v27;
      while ((sub_22EB007F8(a1, *(_QWORD *)v28, 0) & 1) != 0)
      {
        v28 += 2;
        v29 -= 8;
        if (!v29)
        {
          v30 = *(_DWORD *)v4 & 0x7F;
          v31 = v30 > 0x39 || ((1 << v30) & 0x3F0003E01011066) == 0;
          if (v31 && (v30 - 70 <= 0xD ? (v534 = ((1 << (v30 - 70)) & 0x2803) == 0) : (v534 = 1), v534 && v30 - 19 > 4))
LABEL_998:
            v32 = 0;
          else
            v32 = sub_22EFCAE04(a2);
          result = sub_22EB12168(a1, v32);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v536 = *v535;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v538 = *(_QWORD *)v537 + 8 * *(unsigned int *)(v537 + 8);
          }
          else
          {
            v538 = 0;
          }
          if (v536 == (uint64_t *)v538)
            return 1;
          while ((sub_22EB12204(a1, *v536) & 1) != 0)
          {
            if (++v536 == (uint64_t *)v538)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 78:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v458 = *v457;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v460 = *(_QWORD *)v459 + 8 * *(unsigned int *)(v459 + 8);
      }
      else
      {
        v460 = 0;
      }
      if (v458 == (uint64_t *)v460)
        return 1;
      while ((sub_22EB12204(a1, *v458) & 1) != 0)
      {
        if (++v458 == (uint64_t *)v460)
          return 1;
      }
      return 0;
    case 79:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v18 = *v17;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v20 = *(_QWORD *)v19 + 8 * *(unsigned int *)(v19 + 8);
      }
      else
      {
        v20 = 0;
      }
      if (v18 == (uint64_t *)v20)
        return 1;
      while ((sub_22EB12204(a1, *v18) & 1) != 0)
      {
        if (++v18 == (uint64_t *)v20)
          return 1;
      }
      return 0;
    case 80:
      result = sub_22EB12168(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v59 = *v58;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v61 = *(_QWORD *)v60 + 8 * *(unsigned int *)(v60 + 8);
      }
      else
      {
        v61 = 0;
      }
      if (v59 == (uint64_t *)v61)
        return 1;
      while ((sub_22EB12204(a1, *v59) & 1) != 0)
      {
        if (++v59 == (uint64_t *)v61)
          return 1;
      }
      return 0;
    case 81:
      v166 = sub_22EFCAE04(a2);
      result = sub_22EB12168(a1, v166);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v168 = *v167;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v170 = *(_QWORD *)v169 + 8 * *(unsigned int *)(v169 + 8);
      }
      else
      {
        v170 = 0;
      }
      if (v168 == (uint64_t *)v170)
        return 1;
      while ((sub_22EB12204(a1, *v168) & 1) != 0)
      {
        if (++v168 == (uint64_t *)v170)
          return 1;
      }
      return 0;
    case 82:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFFCLL, 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 48), 0);
      if (!(_DWORD)result)
        return result;
      if ((v160 = *(_DWORD *)v4 & 0x7F, v160 <= 0x39) && ((1 << v160) & 0x3F0003E01011066) != 0
        || v160 - 70 <= 0xD && ((1 << (v160 - 70)) & 0x2803) != 0
        || v160 - 19 <= 4)
      {
        v161 = sub_22EFCAE04(a2);
      }
      else
      {
        v161 = 0;
      }
      result = sub_22EB12168(a1, v161);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v163 = *v162;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v165 = *(_QWORD *)v164 + 8 * *(unsigned int *)(v164 + 8);
      }
      else
      {
        v165 = 0;
      }
      if (v163 == (uint64_t *)v165)
        return 1;
      break;
    case 83:
      v11 = *(_QWORD *)(a2 + 88);
      v12 = *(_BYTE **)(v11 + 19016);
      v13 = *(_BYTE **)(v11 + 19024);
      v14 = v13 - v12;
      if (v13 == v12)
      {
        v15 = 0;
        v16 = 0;
      }
      else
      {
        if (v14 < 0)
          abort();
        v15 = (char *)operator new(v13 - v12);
        memmove(v15, v12, v14);
        v16 = &v15[8 * (v14 >> 3)];
      }
      if (v16 - v15 == 8 && (*(_DWORD *)(*(_QWORD *)v15 + 28) & 0x7F) == 0x53)
      {
        operator delete(v15);
        result = sub_22EB12168(a1, a2 + 40);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        if (v15 != v16)
        {
          v500 = v15;
          do
          {
            if ((*(_DWORD *)(*(_QWORD *)v500 + 28) & 0x7Fu) - 1 >= 2
              && ((*(_DWORD *)(*(_QWORD *)v500 + 28) & 0x7Fu) - 35 > 2
               || (v501 = *(_QWORD *)(*(_QWORD *)v500 + 128)) == 0
               || ((*(unsigned __int16 *)(v501 + 8) | (*(unsigned __int8 *)(v501 + 10) << 16)) & 0x100000) == 0)
              && !sub_22EB0CFBC(a1))
            {
              if (v15)
                operator delete(v15);
              return 0;
            }
            v500 += 8;
          }
          while (v500 != v16);
        }
        if (v15)
          operator delete(v15);
      }
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v503 = *v502;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v505 = *(_QWORD *)v504 + 8 * *(unsigned int *)(v504 + 8);
        }
        else
        {
          v505 = 0;
        }
        for (; v503 != (uint64_t *)v505; ++v503)
        {
          if ((sub_22EB12204(a1, *v503) & 1) == 0)
            return 0;
        }
      }
      return 1;
    default:
      return 1;
  }
  while ((sub_22EB12204(a1, *v163) & 1) != 0)
  {
    if (++v163 == (uint64_t *)v165)
      return 1;
  }
  return 0;
}

uint64_t sub_22EB10E44(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((*(_BYTE *)(a2 + 60) & 4) != 0)
  {
    if (*(_QWORD *)(a2 + 152))
    {
      if ((sub_22EB007F8(a1, *(_QWORD *)(a2 + 152), 0) & 1) == 0)
        return 0;
    }
    else
    {
      result = sub_22EB110D4(a1, a2 + 80);
      if (!(_DWORD)result)
        return result;
    }
  }
  return 1;
}

uint64_t sub_22EB10E8C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 40), 0);
  if ((_DWORD)result)
  {
    v5 = *(_DWORD *)(a2 + 28) & 0x7F;
    v6 = v5 > 0x39 || ((1 << v5) & 0x3F0003E01011066) == 0;
    if (v6 && (v5 - 70 <= 0xD ? (v8 = ((1 << (v5 - 70)) & 0x2803) == 0) : (v8 = 1), v8 && v5 - 19 > 4))
      v7 = 0;
    else
      v7 = sub_22EFCAE04(a2);
    result = sub_22EB12168(a1, v7);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v10 = *v9;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v12 = *(_QWORD *)v11 + 8 * *(unsigned int *)(v11 + 8);
      }
      else
      {
        v12 = 0;
      }
      if (v10 == v12)
      {
        return 1;
      }
      else
      {
        v13 = v10 + 8;
        do
        {
          result = sub_22EB12204(a1, *(_QWORD *)(v13 - 8));
          if ((_DWORD)result)
            v14 = v13 == v12;
          else
            v14 = 1;
          v13 += 8;
        }
        while (!v14);
      }
    }
  }
  return result;
}

uint64_t sub_22EB10FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  uint64_t result;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  if (!*(_DWORD *)(a2 + 96))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 80);
  v5 = (unint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (unint64_t *)*v5;
  result = sub_22EB112B4(a1, *v5, (uint64_t)(v5 + 1));
  if ((_DWORD)result)
  {
LABEL_5:
    v7 = *(_DWORD *)(a2 + 28) & 0x7F;
    v8 = v7 > 0x39 || ((1 << v7) & 0x3F0003E01011066) == 0;
    if (v8 && (v7 - 70 <= 0xD ? (v10 = ((1 << (v7 - 70)) & 0x2803) == 0) : (v10 = 1), v10 && v7 - 19 > 4))
      v9 = 0;
    else
      v9 = sub_22EFCAE04(a2);
    result = sub_22EB12168(a1, v9);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v12 = *v11;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v14 = *(_QWORD *)v13 + 8 * *(unsigned int *)(v13 + 8);
      }
      else
      {
        v14 = 0;
      }
      if (v12 == v14)
      {
        return 1;
      }
      else
      {
        v15 = v12 + 8;
        do
        {
          result = sub_22EB12204(a1, *(_QWORD *)(v15 - 8));
          if ((_DWORD)result)
            v16 = v15 == v14;
          else
            v16 = 1;
          v15 += 8;
        }
        while (!v16);
      }
    }
  }
  return result;
}

uint64_t sub_22EB110D4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  __int128 v11;
  uint64_t v12;

  result = sub_22EB11174(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  if ((_DWORD)result)
  {
    v11 = *(_OWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 40);
    result = sub_22EB111FC(a1, (uint64_t *)&v11);
    if ((_DWORD)result)
    {
      v5 = *(_QWORD *)(a2 + 64);
      if (v5 && (v6 = *(unsigned int *)(v5 + 8), (_DWORD)v6))
      {
        v7 = v5 + 16;
        v8 = v6 - 1;
        do
        {
          result = sub_22EB12050(a1, v7);
          v10 = v8-- != 0;
          if (!(_DWORD)result)
            break;
          v7 += 32;
        }
        while (v10);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_22EB11174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a2;
  v9[1] = a3;
  if (!a2)
    return 1;
  v5 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v5 || (result = sub_22EB11174(a1, v5, a3), (_DWORD)result))
  {
    if (*(_QWORD *)(a2 + 16) && (*(_BYTE *)(a2 + 8) & 4) != 0)
    {
      v7 = sub_22F0AB4E0((uint64_t)v9);
      return sub_22EB112B4(a1, v7, v8);
    }
    return 1;
  }
  return result;
}

uint64_t sub_22EB111FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  int v9;
  unint64_t v10;

  v2 = *a2;
  v3 = *a2 & 7;
  v4 = v3;
  if ((_DWORD)v3 == 7)
  {
    v5 = *(_DWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
    if (v5 >= 3)
      v5 = 3;
    v4 = v5 | 8;
  }
  if ((v4 - 3) < 3)
  {
    if ((v3 - 3) <= 2)
    {
      v6 = (_QWORD *)a2[2];
      if (v6)
      {
        if ((sub_22EB112B4(a1, *v6, v6 + 1) & 1) == 0)
          return 0;
      }
    }
    return 1;
  }
  if (v4 != 8)
    return 1;
  if ((~(_BYTE)v2 & 7) != 0)
    goto LABEL_15;
  v8 = v2 & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_DWORD *)v8;
  if (*(_DWORD *)v8 >= 3u)
    v9 = 3;
  if (v9)
LABEL_15:
    v10 = 0;
  else
    v10 = *(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFFF9;
  result = sub_22EB11F8C(a1, v10);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22EB112B4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v10;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  uint64_t v53;
  unint64_t *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  char v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;

  if (a2)
  {
    v4 = a2;
    do
    {
      v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      if ((v4 & 0xF) != 0)
      {
LABEL_4:
        if ((v6 & 0xFFFFFFFFFFFFFFF0) != 0)
          v7 = *(_QWORD *)((char *)&unk_22F47FC00
                         + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
        else
          v7 = 1;
        a3 = (a3 + v7 - 1) & -v7;
        v4 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      }
      else
      {
        result = 1;
        switch(*(_BYTE *)(v6 + 16))
        {
          case 0:
          case 1:
          case 0x16:
          case 0x17:
          case 0x36:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47FC00
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 - 1;
            goto LABEL_62;
          case 2:
          case 3:
          case 4:
          case 5:
            v21 = *(_QWORD *)(v4 + 32);
            if (v21 >= 0x10 && (*(_QWORD *)(v4 + 32) & 0xFLL) == 0)
              v73 = *(_QWORD *)((char *)&unk_22F47FC00
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v73 = 1;
            result = sub_22EB112B4(a1, v21, (a3 + v73 + 15) & -v73);
            if (!(_DWORD)result)
              return result;
            v23 = *(_QWORD *)(a3 + 8);
            return sub_22EB007F8(a1, v23, 0);
          case 6:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47FC00
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 11;
            goto LABEL_62;
          case 7:
          case 0x25:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47FC00
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 7;
            goto LABEL_62;
          case 8:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47FC00
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = v20 + a3;
            goto LABEL_62;
          case 0xA:
          case 0x20:
          case 0x24:
          case 0x26:
          case 0x27:
          case 0x28:
          case 0x29:
            v4 = *(_QWORD *)(v4 + 32);
            goto LABEL_9;
          case 0xC:
          case 0x37:
          case 0x38:
            goto LABEL_76;
          case 0xD:
          case 0x30:
            v23 = *(_QWORD *)(v4 + 24);
            return sub_22EB007F8(a1, v23, 0);
          case 0xE:
            result = sub_22EB11A1C(a1, *(_QWORD *)(v4 + 24));
            if (!(_DWORD)result)
              return result;
            if (!*(_QWORD *)(v4 + 40))
              return 1;
            result = sub_22EB11174(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 16));
            if (!(_DWORD)result)
              return result;
            v25 = *(_DWORD *)(a3 + 28);
            v74 = *(_QWORD *)(*(_QWORD *)(v4 + 40) + 40);
            v75 = v25;
            sub_22EFC6D6C((uint64_t)&v76, v74);
            result = sub_22EB111FC(a1, &v74);
            if (!(_DWORD)result)
              return result;
            v26 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v26)
              return 1;
            v27 = v4 + 48;
            v28 = (uint64_t *)(a3 + 56);
            v29 = v26 - 1;
            do
            {
              v30 = *v28++;
              v77 = *(_OWORD *)v27;
              v78 = *(_QWORD *)(v27 + 16);
              v79 = v30;
              result = sub_22EB12050(a1, (uint64_t)&v77);
              v31 = v29-- != 0;
              v32 = v31;
              if (!(_DWORD)result)
                break;
              v27 += 24;
            }
            while ((v32 & 1) != 0);
            return result;
          case 0xF:
            result = sub_22EB11F8C(a1, *(_QWORD *)(v4 + 40));
            if (!(_DWORD)result)
              return result;
            v24 = *(_QWORD *)(v4 + 24);
            return sub_22EB11A1C(a1, v24);
          case 0x10:
            v33 = *(_QWORD *)(v4 + 40);
            goto LABEL_96;
          case 0x11:
            v23 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
            return sub_22EB007F8(a1, v23, 0);
          case 0x12:
            return sub_22EB11174(a1, *(_QWORD *)(v4 + 32), *(_QWORD *)(a3 + 8));
          case 0x13:
            v33 = *(_QWORD *)(v4 + 40);
            if (!v33)
              goto LABEL_97;
LABEL_96:
            result = sub_22EB007F8(a1, v33, 0);
            if (!(_DWORD)result)
              return result;
LABEL_97:
            v24 = *(_QWORD *)(v4 + 48);
            return sub_22EB11A1C(a1, v24);
          case 0x14:
            v34 = *(_QWORD *)(a3 + 8);
            if (v34)
            {
              v35 = *(_QWORD *)(v4 + 32);
              if (v35)
              {
                result = sub_22EB11174(a1, v35, v34);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v36 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v36)
              return 1;
            v37 = v4 + 48;
            v38 = (uint64_t *)(a3 + 32);
            v39 = v36 - 1;
            do
            {
              v40 = *v38++;
              v77 = *(_OWORD *)v37;
              v78 = *(_QWORD *)(v37 + 16);
              v79 = v40;
              result = sub_22EB12050(a1, (uint64_t)&v77);
              v31 = v39-- != 0;
              v41 = v31;
              if (!(_DWORD)result)
                break;
              v37 += 24;
            }
            while ((v41 & 1) != 0);
            return result;
          case 0x15:
            v42 = *(_QWORD *)(v4 + 48);
            if (v42)
            {
              result = sub_22EB007F8(a1, v42, 0);
              if (!(_DWORD)result)
                return result;
            }
            v24 = *(_QWORD *)(v4 + 40);
            return sub_22EB11A1C(a1, v24);
          case 0x18:
            v17 = *(_QWORD *)(v4 + 32);
            if (v17)
            {
              result = sub_22EB11174(a1, v17, *(_QWORD *)(a3 + 8));
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 40);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              goto LABEL_60;
            v20 = 1;
            goto LABEL_61;
          case 0x19:
            *(_QWORD *)&v77 = v4;
            *((_QWORD *)&v77 + 1) = a3;
            v43 = *(_QWORD *)(v4 + 24);
            v44 = sub_22E47EE80(&v77);
            return sub_22EB112B4(a1, v43, v44);
          case 0x1A:
            *(_QWORD *)&v77 = v4;
            *((_QWORD *)&v77 + 1) = a3;
            v45 = *(_QWORD *)(v4 + 24);
            v46 = sub_22E47EE80(&v77);
            result = sub_22EB112B4(a1, v45, v46);
            if (!(_DWORD)result)
              return result;
            v47 = v77;
            v48 = *(_QWORD *)(v77 + 16);
            if (*(_BYTE *)(v77 + 16) == 25 || (v48 & 0x3FFFC000000000) == 0)
              goto LABEL_126;
            v50 = 0;
            v51 = (unsigned __int16)(v48 >> 38);
            do
            {
              if (*(_QWORD *)(*((_QWORD *)&v77 + 1) + 8 * v50 + 16))
              {
                if ((sub_22EB0CFBC(a1) & 1) == 0)
                  return 0;
              }
              else if (v50 < (unsigned __int16)(*(_QWORD *)(v47 + 16) >> 38))
              {
                result = sub_22EB11A1C(a1, *(_QWORD *)(v47 + 40 + 8 * v50));
                if (!(_DWORD)result)
                  return result;
              }
              ++v50;
            }
            while (v51 != v50);
            v48 = *(_QWORD *)(v47 + 16);
LABEL_126:
            if ((v48 & 0x3C0000000000000) == 0x80000000000000)
            {
              v52 = (_DWORD *)((v47 + 8 * (unsigned __int16)(v48 >> 38) + 4 * ((v48 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
              v55 = *v52;
              v54 = (unint64_t *)(v52 + 2);
              v53 = v55;
              if (v55)
              {
                v56 = 8 * v53;
                while ((sub_22EB11A1C(a1, *v54) & 1) != 0)
                {
                  ++v54;
                  v56 -= 8;
                  if (!v56)
                    goto LABEL_131;
                }
                return 0;
              }
            }
LABEL_131:
            v57 = sub_22F257D3C(v47);
            if (!v57)
              return 1;
            result = sub_22EB007F8(a1, v57, 0);
            if ((_DWORD)result)
              return 1;
            return result;
          case 0x1C:
            v4 = *(_QWORD *)(v4 + 24);
LABEL_9:
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47FC00
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 3;
            goto LABEL_62;
          case 0x1D:
          case 0x1E:
            result = sub_22EB007F8(a1, *(_QWORD *)(a3 + 16), 0);
            if (!(_DWORD)result)
              return result;
            result = sub_22EB007F8(a1, *(_QWORD *)(a3 + 24), 0);
            if (!(_DWORD)result)
              return result;
LABEL_76:
            v24 = *(_QWORD *)(v4 + 32);
            return sub_22EB11A1C(a1, v24);
          case 0x1F:
            v19 = *(_QWORD **)(a3 + 8);
            if (v19)
            {
              if ((sub_22EB112B4(a1, *v19, v19 + 1) & 1) == 0)
                return 0;
            }
            else
            {
              result = sub_22EB11A1C(a1, *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0);
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 32);
            v20 = 1;
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
LABEL_60:
              v20 = *(_QWORD *)((char *)&unk_22F47FC00
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
LABEL_61:
            v10 = a3 + v20 + 15;
LABEL_62:
            a3 = v10 & -v20;
            break;
          case 0x21:
            v58 = *(_QWORD *)(v4 + 24);
            v59 = *(_QWORD *)(v58 & 0xFFFFFFFFFFFFFFF0);
            if (v59 != v4)
            {
              v60 = 1;
              if (v58 >= 0x10 && (v58 & 0xF) == 0)
                v60 = *(_QWORD *)((char *)&unk_22F47FC00
                                + ((uint64_t)((unint64_t)*(unsigned int *)(v59 + 16) << 56) >> 53));
              result = sub_22EB112B4(a1, v58, (a3+ (((HIWORD(*(_DWORD *)(v4 + 16)) & 0x3F8) + 4 * (*(_DWORD *)(v4 + 16) >> 26) + 31) & 0x7F8)+ v60- 1) & -v60);
              if (!(_DWORD)result)
                return result;
            }
            v61 = (*(_DWORD *)(v4 + 16) >> 19) & 0x7F;
            if (!(_DWORD)v61)
              return 1;
            v62 = (_QWORD *)(a3 + 24);
            v63 = v61 - 1;
            do
            {
              v64 = (_QWORD *)*v62++;
              result = sub_22EB112B4(a1, *v64, v64 + 1);
              v31 = v63-- != 0;
              v65 = v31;
            }
            while ((_DWORD)result && (v65 & 1) != 0);
            return result;
          case 0x2A:
            v66 = *(_DWORD *)(v4 + 20);
            *((_QWORD *)&v77 + 1) = *(_QWORD *)(v4 + 40);
            LODWORD(v77) = 8;
            DWORD1(v77) = v66;
            return sub_22EB11EC0(a1, (uint64_t)&v77);
          case 0x2B:
            v24 = *(_QWORD *)(v4 + 8);
            return sub_22EB11A1C(a1, v24);
          case 0x2E:
            result = sub_22EB11F8C(a1, *(_QWORD *)(v4 + 32));
            if (!(_DWORD)result)
              return result;
            v67 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v67)
              return 1;
            v68 = v4 + 40;
            v69 = (uint64_t *)(a3 + 16);
            v70 = v67 - 1;
            do
            {
              v71 = *v69++;
              v77 = *(_OWORD *)v68;
              v78 = *(_QWORD *)(v68 + 16);
              v79 = v71;
              result = sub_22EB12050(a1, (uint64_t)&v77);
              v31 = v70-- != 0;
              v72 = v31;
              if (!(_DWORD)result)
                break;
              v68 += 24;
            }
            while ((v72 & 1) != 0);
            return result;
          case 0x31:
          case 0x33:
            v13 = *(unint64_t **)(a3 + 16);
            v14 = *v13;
            a3 = (uint64_t)(v13 + 1);
            v4 = v14;
            break;
          case 0x39:
            goto LABEL_4;
          default:
            return result;
        }
      }
    }
    while (v4);
  }
  return 1;
}

uint64_t sub_22EB11A1C(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _DWORD v45[2];
  uint64_t v46;

  if (a2 < 0x10)
    return 1;
  while (2)
  {
    v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    v5 = *(_DWORD *)(v4 + 16);
    result = 1;
    switch((char)v5)
    {
      case 0:
      case 1:
      case 4:
      case 6:
      case 7:
      case 8:
      case 10:
      case 12:
      case 29:
      case 32:
      case 36:
      case 37:
      case 38:
      case 39:
      case 54:
      case 55:
      case 56:
        goto LABEL_5;
      case 2:
        result = sub_22EB11A1C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        if ((*(_BYTE *)(v4 + 19) & 2) == 0)
          return 1;
        v14 = *(_QWORD *)(v4 + 56);
        if (!v14)
          return 1;
        goto LABEL_49;
      case 3:
        result = sub_22EB11A1C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v14 = *(_QWORD *)(v4 + 48);
        if (v14)
          goto LABEL_49;
        return 1;
      case 5:
        result = sub_22EB11A1C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v13 = *(_QWORD *)(v4 + 40);
        return sub_22EB007F8(a1, v13, 0);
      case 13:
      case 48:
        v13 = *(_QWORD *)(v4 + 24);
        return sub_22EB007F8(a1, v13, 0);
      case 14:
        result = sub_22EB11A1C(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        if (!*(_QWORD *)(v4 + 40))
          return 1;
        result = sub_22EB0CFBC(a1);
        if (!(_DWORD)result)
          return result;
        v15 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v15)
          return 1;
        v16 = v4 + 48;
        v17 = v15 - 1;
        do
        {
          result = sub_22EB11EC0(a1, v16);
          v18 = v17-- != 0;
          v19 = v18;
          if (!(_DWORD)result)
            break;
          v16 += 24;
        }
        while ((v19 & 1) != 0);
        return result;
      case 15:
        result = sub_22EB11F8C(a1, *(_QWORD *)(v4 + 40));
        if ((_DWORD)result)
          goto LABEL_19;
        return result;
      case 16:
        v7 = *(_QWORD *)(v4 + 40);
        goto LABEL_22;
      case 17:
        v13 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
        return sub_22EB007F8(a1, v13, 0);
      case 18:
        return sub_22EB11FEC(a1, *(_QWORD *)(v4 + 32));
      case 19:
        v7 = *(_QWORD *)(v4 + 40);
        if (!v7)
          goto LABEL_23;
LABEL_22:
        result = sub_22EB007F8(a1, v7, 0);
        if (!(_DWORD)result)
          return result;
LABEL_23:
        v6 = (unint64_t *)(v4 + 48);
        goto LABEL_6;
      case 20:
        result = sub_22EB11FEC(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v20 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v20)
          return 1;
        v21 = v4 + 48;
        v22 = v20 - 1;
        do
        {
          result = sub_22EB11EC0(a1, v21);
          v18 = v22-- != 0;
          v23 = v18;
          if (!(_DWORD)result)
            break;
          v21 += 24;
        }
        while ((v23 & 1) != 0);
        return result;
      case 21:
        v8 = *(_QWORD *)(v4 + 48);
        if (v8)
        {
          result = sub_22EB007F8(a1, v8, 0);
          if (!(_DWORD)result)
            return result;
        }
        goto LABEL_31;
      case 22:
        goto LABEL_34;
      case 23:
        v9 = *(_QWORD *)(v4 + 64);
        if (!v9)
          goto LABEL_5;
        goto LABEL_35;
      case 24:
        v10 = *(_QWORD *)(v4 + 32);
        if (v10)
        {
          result = sub_22EB11FEC(a1, v10);
          if (!(_DWORD)result)
            return result;
        }
LABEL_31:
        v6 = (unint64_t *)(v4 + 40);
        goto LABEL_6;
      case 25:
      case 28:
      case 49:
LABEL_19:
        v6 = (unint64_t *)(v4 + 24);
        goto LABEL_6;
      case 26:
        result = sub_22EB11A1C(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        v24 = *(_QWORD *)(v4 + 16);
        v25 = (unsigned __int16)(v24 >> 38);
        if (!(unsigned __int16)(v24 >> 38))
          goto LABEL_82;
        v26 = 8 * v25;
        v27 = (_QWORD *)(v4 + 40);
        break;
      case 30:
        v11 = *(_QWORD *)(v4 + 48);
        if (v11)
        {
          result = sub_22EB007F8(a1, v11, 0);
          if (!(_DWORD)result)
            return result;
        }
LABEL_34:
        v9 = *(_QWORD *)(v4 + 56);
        if (!v9)
          goto LABEL_5;
LABEL_35:
        result = sub_22EB007F8(a1, v9, 0);
        if (!(_DWORD)result)
          return result;
LABEL_5:
        v6 = (unint64_t *)(v4 + 32);
LABEL_6:
        a2 = *v6;
        if (*v6 < 0x10)
          return 1;
        continue;
      case 31:
        v12 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_40;
      case 33:
        v34 = *(_QWORD *)(v4 + 24);
        if (*(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF0) != v4)
        {
          result = sub_22EB11A1C(a1, v34);
          if (!(_DWORD)result)
            return result;
        }
        v35 = (*(_QWORD *)(v4 + 16) >> 19) & 0x7FLL;
        if (!v35)
          return 1;
        v36 = (uint64_t *)(v4 + 48);
        v37 = 8 * v35 - 8;
        do
        {
          v38 = *v36++;
          result = sub_22EB11A1C(a1, v38);
          if ((_DWORD)result)
            v39 = v37 == 0;
          else
            v39 = 1;
          v37 -= 8;
        }
        while (!v39);
        return result;
      case 40:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 41:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 42:
        v40 = *(_DWORD *)(v4 + 20);
        v46 = *(_QWORD *)(v4 + 40);
        v45[0] = 8;
        v45[1] = v40;
        return sub_22EB11EC0(a1, (uint64_t)v45);
      case 43:
        v6 = (unint64_t *)(v4 + 8);
        goto LABEL_6;
      case 46:
        result = sub_22EB11F8C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v41 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v41)
          return 1;
        v42 = v4 + 40;
        v43 = v41 - 1;
        do
        {
          result = sub_22EB11EC0(a1, v42);
          v18 = v43-- != 0;
          v44 = v18;
          if (!(_DWORD)result)
            break;
          v42 += 24;
        }
        while ((v44 & 1) != 0);
        return result;
      case 51:
        v12 = *(_QWORD *)(v4 + 24);
LABEL_40:
        result = sub_22EB11A1C(a1, v12);
        if (!(_DWORD)result)
          return result;
        goto LABEL_5;
      default:
        return result;
    }
    break;
  }
  do
  {
    if ((sub_22EB11A1C(a1, *v27) & 1) == 0)
      return 0;
    ++v27;
    v26 -= 8;
  }
  while (v26);
  v24 = *(_QWORD *)(v4 + 16);
  v25 = (unsigned __int16)(v24 >> 38);
LABEL_82:
  if ((v24 & 0x3C0000000000000) == 0x80000000000000)
  {
    v28 = (_DWORD *)((v4 + 40 + 8 * v25 + 4 * ((v24 >> 59) & 1) + 7) & 0xFFFFFFFFFFFFFFF8);
    v31 = *v28;
    v30 = v28 + 2;
    v29 = v31;
    if (v31)
    {
      v32 = 8 * v29;
      while ((sub_22EB11A1C(a1, *v30) & 1) != 0)
      {
        ++v30;
        v32 -= 8;
        if (!v32)
          goto LABEL_87;
      }
      return 0;
    }
  }
LABEL_87:
  v33 = sub_22F257D3C(v4);
  if (!v33)
    return 1;
  v14 = v33;
LABEL_49:
  result = sub_22EB007F8(a1, v14, 0);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22EB11EC0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      result = sub_22EB11A1C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      result = sub_22EB11F8C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 8), 0);
      break;
    case 8:
      v4 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v4)
      {
        v5 = *(_QWORD *)(a2 + 8);
        v6 = v4 - 1;
        do
        {
          result = sub_22EB11EC0(a1, v5);
          v8 = v6-- != 0;
          if (!(_DWORD)result)
            break;
          v5 += 24;
        }
        while (v8);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EB11F8C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  char v5;

  v2 = a2 & 0xFFFFFFFFFFFFFFF8;
  if ((a2 & 6) != 6 || v2 == 0)
  {
    if ((a2 & 6) != 4)
      return 1;
    if (!v2)
      return 1;
    result = sub_22EB11FEC(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    if ((_DWORD)result)
      return 1;
  }
  else
  {
    v5 = sub_22EB11FEC(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    return (v5 & 1) != 0;
  }
  return result;
}

uint64_t sub_22EB11FEC(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 1;
  v4 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v4 || (result = sub_22EB11FEC(a1, v4), (_DWORD)result))
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 && (*(_BYTE *)(a2 + 8) & 4) != 0)
      return sub_22EB11A1C(a1, v6 & 0xFFFFFFFFFFFFFFF0);
    return 1;
  }
  return result;
}

uint64_t sub_22EB12050(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      v6 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (v6)
        result = sub_22EB112B4(a1, *v6, v6 + 1);
      else
        result = sub_22EB11A1C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      v5 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (!*v5 || (result = sub_22EB11174(a1, *v5, v5[1]), (_DWORD)result))
        result = sub_22EB11F8C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL, 0);
      break;
    case 8:
      v7 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        v9 = v7 - 1;
        do
        {
          result = sub_22EB11EC0(a1, v8);
          v11 = v9-- != 0;
          if (!(_DWORD)result)
            break;
          v8 += 24;
        }
        while (v11);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EB12168(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (!a2)
    return 1;
  if ((*(_WORD *)(a2 + 8) & 0x80) != 0)
    sub_22EFCC320(a2);
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 1;
  while (1)
  {
    if ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 1 >= 2
      && ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 > 2
       || (v5 = *(_QWORD *)(v4 + 128)) == 0
       || ((*(unsigned __int16 *)(v5 + 8) | (*(unsigned __int8 *)(v5 + 10) << 16)) & 0x100000) == 0))
    {
      result = sub_22EB0CFBC(a1);
      if (!(_DWORD)result)
        break;
    }
    v4 = *(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v4)
      return 1;
  }
  return result;
}

uint64_t sub_22EB12204(uint64_t a1, uint64_t a2)
{
  if (a2)
    __asm { BR              X10 }
  return 1;
}

void sub_22EB12288()
{
  uint64_t v0;
  uint64_t v1;

  if (sub_22EB007F8(v0, *(_QWORD *)(v1 + 40), 0))
    JUMPOUT(0x22EB12244);
  JUMPOUT(0x22EB12278);
}

void sub_22EB122A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v2 = *(unsigned int *)(v1 + 48);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2;
    while ((sub_22EB007F8(v0, *v3, 0) & 1) != 0)
    {
      ++v3;
      v4 -= 8;
      if (!v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v5 = *(unsigned int *)(v1 + 64);
    if (!(_DWORD)v5)
      JUMPOUT(0x22EB12274);
    v6 = *(uint64_t **)(v1 + 72);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22EB007F8(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB123DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB12414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB1244C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB12484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EB007F8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EB12274);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB124D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB12508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if (sub_22EB007F8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 56);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 64);
      v4 = 8 * v2;
      do
      {
        if ((sub_22EB007F8(v0, *v3, 0) & 1) == 0)
          JUMPOUT(0x22EB123D4);
        ++v3;
        v4 -= 8;
      }
      while (v4);
    }
    v5 = *(unsigned int *)(v1 + 72);
    if (!(_DWORD)v5)
      JUMPOUT(0x22EB12274);
    v6 = *(uint64_t **)(v1 + 80);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22EB007F8(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB12584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB125BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB125F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EB007F8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EB12274);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB12640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EB007F8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EB12274);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EB007F8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EB12278);
}

void sub_22EB1268C()
{
  JUMPOUT(0x22EB12260);
}

void sub_22EB12694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  if (sub_22EB007F8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 56);
      v4 = 8 * v2;
      while ((sub_22EB007F8(v0, *v3, 0) & 1) != 0)
      {
        ++v3;
        v4 -= 8;
        if (!v4)
          goto LABEL_6;
      }
LABEL_33:
      JUMPOUT(0x22EB123D4);
    }
LABEL_6:
    v5 = *(unsigned int *)(v1 + 64);
    if ((_DWORD)v5)
    {
      v6 = *(uint64_t **)(v1 + 72);
      v7 = 8 * v5;
      while ((sub_22EB007F8(v0, *v6, 0) & 1) != 0)
      {
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_10;
      }
      goto LABEL_33;
    }
LABEL_10:
    v8 = *(unsigned int *)(v1 + 80);
    if ((_DWORD)v8)
    {
      v9 = *(uint64_t **)(v1 + 88);
      v10 = 8 * v8;
      while ((sub_22EB007F8(v0, *v9, 0) & 1) != 0)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_14;
      }
      goto LABEL_33;
    }
LABEL_14:
    v11 = *(unsigned int *)(v1 + 96);
    if ((_DWORD)v11)
    {
      v12 = *(uint64_t **)(v1 + 104);
      v13 = 8 * v11;
      while ((sub_22EB007F8(v0, *v12, 0) & 1) != 0)
      {
        ++v12;
        v13 -= 8;
        if (!v13)
          goto LABEL_18;
      }
      goto LABEL_33;
    }
LABEL_18:
    v14 = *(unsigned int *)(v1 + 128);
    if (!(_DWORD)v14)
      JUMPOUT(0x22EB12274);
    v15 = *(uint64_t **)(v1 + 136);
    v16 = 8 * v14 - 8;
    do
    {
      v17 = *v15++;
      if (sub_22EB007F8(v0, v17, 0))
        v18 = v16 == 0;
      else
        v18 = 1;
      v16 -= 8;
    }
    while (!v18);
  }
  JUMPOUT(0x22EB12278);
}

uint64_t sub_22EB127A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (!a2)
    return 1;
  v4 = a2 + 16;
  v5 = *(_DWORD *)(a2 + 12);
  if ((v5 & 0x1FFFFFFF) != 0)
  {
    v6 = 8 * (v5 & 0x1FFFFFFF);
    v7 = a2 + 16;
    while ((sub_22EB0CFBC(a1) & 1) != 0)
    {
      v7 += 8;
      v6 -= 8;
      if (!v6)
      {
        v5 = *(_DWORD *)(a2 + 12);
        goto LABEL_7;
      }
    }
    return 0;
  }
  else
  {
LABEL_7:
    if ((v5 & 0x40000000) == 0)
      return 1;
    v8 = *(_QWORD *)(v4 + 8 * (v5 & 0x1FFFFFFF));
    if (!v8)
      return 1;
    result = sub_22EB007F8(a1, v8, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22EB12840(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 120);
  if ((v3 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v3 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EB127A0(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v3 = *(_QWORD *)(a2 + 120);
      if ((v3 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  return sub_22EB11174(a1, v7, v8);
}

uint64_t sub_22EB128B4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;

  result = sub_22EB12840(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_BYTE *)(a2 + 74) & 1) == 0)
      return 1;
    v5 = sub_22E46A3A0(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 24;
      do
      {
        result = sub_22EB112B4(a1, **(_QWORD **)(v8 - 8), *(_QWORD *)(v8 - 8) + 8);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 24;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22EB1292C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t *v11;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EB127A0(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22EB11174(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_QWORD *)(a2 + 56);
    if ((v10 & 4) != 0)
    {
      v11 = *(unint64_t **)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
      if (v11)
        return (sub_22EB112B4(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    else if (v10 >= 8)
    {
      v11 = (unint64_t *)(v10 & 0xFFFFFFFFFFFFFFF8);
      return (sub_22EB112B4(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    result = sub_22EB11A1C(a1, *(_QWORD *)(a2 + 48));
    if (!(_DWORD)result)
      return result;
    return 1;
  }
  return result;
}

uint64_t sub_22EB129F8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  _BOOL4 v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EB127A0(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22EB11174(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_DWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 152);
    v38 = *(_QWORD *)(a2 + 40);
    v39 = v10;
    v40 = v11;
    result = sub_22EB111FC(a1, &v38);
    if ((_DWORD)result)
    {
      v12 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
      if ((*(_QWORD *)(a2 + 144) & 6) == 4 && v12 != 0 && (*(_BYTE *)(v12 + 16) & 6) != 0)
      {
        v14 = *(_QWORD *)(v12 + 32);
        if (v14)
        {
          v15 = *(unsigned int *)(v14 + 8);
          if ((_DWORD)v15)
          {
            v16 = v14 + 16;
            while ((sub_22EB12050(a1, v16) & 1) != 0)
            {
              v16 += 32;
              if (!--v15)
                goto LABEL_19;
            }
            return 0;
          }
        }
      }
LABEL_19:
      v17 = *(_QWORD *)(a2 + 56);
      v18 = (unint64_t *)(v17 & 0xFFFFFFFFFFFFFFF8);
      if ((v17 & 4) != 0)
        v18 = (unint64_t *)v18[4];
      if (v18)
      {
        result = sub_22EB112B4(a1, *v18, (uint64_t)(v18 + 1));
        if (!(_DWORD)result)
          return result;
        v17 = *(_QWORD *)(a2 + 56);
      }
      if ((v17 & 4) == 0
        || (v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40)) == 0
        || (result = sub_22EB007F8(a1, v19, 0), (_DWORD)result))
      {
        if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
        {
          v20 = sub_22EFD7ED0(a2);
          v21 = sub_22EFD7ED0(a2) + 8 * ((*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL);
          while (v20 != v21)
          {
            v22 = *(_QWORD *)v20;
            if ((*(_WORD *)(*(_QWORD *)v20 + 28) & 4) != 0)
            {
              v23 = (unint64_t *)(*(_QWORD *)v22 & 0xFFFFFFFFFFFFFFF8);
              if ((*(_QWORD *)v22 & 6) != 0 || v23 == 0)
                goto LABEL_37;
              result = sub_22EB112B4(a1, *v23, (uint64_t)(v23 + 1));
              if (!(_DWORD)result)
                return result;
              if ((*(_WORD *)(v22 + 28) & 4) != 0)
              {
LABEL_37:
                result = sub_22EB007F8(a1, *(_QWORD *)(v22 + 8), 0);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v20 += 8;
          }
        }
        v25 = sub_22E49F868(a2) && (*(_BYTE *)(a2 + 83) & 2) == 0;
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
          goto LABEL_70;
        v26 = *(_WORD *)(a2 + 80) & 0x7F;
        v27 = -40;
        if (v26 > 0x46)
        {
          if (v26 == 83)
            goto LABEL_60;
          if (v26 == 71)
          {
            v27 = -56;
            goto LABEL_60;
          }
          if (v26 != 81)
          {
LABEL_55:
            v28 = v26 - 52;
            v29 = v26 - 33 >= 5;
            v30 = -48;
            if (!v29)
              v30 = -64;
            if (v28 >= 6)
              v27 = v30;
            else
              v27 = -72;
          }
        }
        else
        {
          if (v26 > 0x18)
            goto LABEL_54;
          if (v26 == 16)
          {
LABEL_46:
            v27 = -48;
            goto LABEL_60;
          }
          if (((1 << v26) & 0x1066) == 0)
          {
            if (v26 == 24)
              goto LABEL_46;
LABEL_54:
            if (v26 == 70)
            {
              v27 = -64;
              goto LABEL_60;
            }
            goto LABEL_55;
          }
        }
LABEL_60:
        v31 = *(_QWORD *)(a2 + 72 + v27 + 16);
        v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
        if ((v31 & 4) != 0)
          v32 = (_QWORD *)*v32;
        if (v32)
        {
          v33 = v32[8];
          if (v33)
          {
            if (((*(unsigned __int16 *)(v33 + 8) | (*(unsigned __int8 *)(v33 + 10) << 16)) & 0x100000) != 0)
            {
              v34 = sub_22EFD462C((unint64_t)(v32 - 8));
              if (v34)
              {
                if ((*(_DWORD *)(v34 + 28) & 0x7F) != 0x1D || (v34 = *(_QWORD *)(v34 + 48)) != 0)
                {
                  if (v34 == a2
                    || (v35 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v34 + 32))(v34),
                        v35 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2)))
                  {
                    if (!v25)
                      return 1;
LABEL_71:
                    v36 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
                    result = sub_22EB007F8(a1, v36, 0);
                    if (!(_DWORD)result)
                      return result;
                    if ((*(_WORD *)(a2 + 80) & 0x80) != 0)
                      sub_22EFCC320(a2 + 72);
                    v37 = *(_QWORD *)(a2 + 88);
                    if (v37)
                    {
                      do
                      {
                        if ((*(_DWORD *)(v37 + 28) & 0x7E) == 0x2E)
                        {
                          result = sub_22EB0CFBC(a1);
                          if (!(_DWORD)result)
                            break;
                        }
                        result = 1;
                        v37 = *(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF8;
                      }
                      while (v37);
                      return result;
                    }
                    return 1;
                  }
                }
              }
            }
          }
        }
LABEL_70:
        if (!v25)
          return 1;
        goto LABEL_71;
      }
    }
  }
  return result;
}

uint64_t sub_22EB12DBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = sub_22EB1292C(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      return 1;
    if ((*(_BYTE *)(a2 + 97) & 8) != 0)
      return 1;
    v5 = sub_22EFBC5B4(a2);
    result = sub_22EB007F8(a1, v5, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22EB12E1C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *mm;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *i2;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *n;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *ii;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *nn;
  uint64_t v79;
  uint64_t v80;
  _QWORD *i1;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *i;
  uint64_t v92;
  uint64_t v93;
  _QWORD *j;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *jj;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *kk;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *k;
  uint64_t v175;
  uint64_t v176;
  _QWORD *m;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  __int128 v208;
  uint64_t v209;

  if (!a2)
    return 1;
  switch(*(_DWORD *)(a2 + 8))
  {
    case 3:
      v85 = (_QWORD *)(a2 + 24);
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if ((_DWORD)result)
      {
        v86 = *(unsigned int *)(a2 + 16);
        if (!(_DWORD)v86)
          return 1;
        v87 = 8 * v86;
        do
        {
          if ((sub_22EB007F8(a1, *v85, 0) & 1) == 0)
            return 0;
          ++v85;
          v87 -= 8;
        }
        while (v87);
        return 1;
      }
      return result;
    case 4:
    case 7:
    case 0xC:
    case 0x13:
    case 0x15:
    case 0x23:
    case 0x3C:
    case 0x3D:
    case 0x46:
    case 0x4B:
      v5 = *(_QWORD *)(a2 + 16);
      return (sub_22EB007F8(a1, v5, 0) & 1) != 0;
    case 5:
      v137 = (_QWORD *)(a2 + 24);
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if (!(_DWORD)result)
        return result;
      v138 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v138)
        return 1;
      v139 = 8 * v138;
      while ((sub_22EB007F8(a1, *v137, 0) & 1) != 0)
      {
        ++v137;
        v139 -= 8;
        if (!v139)
          return 1;
      }
      return 0;
    case 6:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 24), 0);
      if (!(_DWORD)result)
        return result;
      v134 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v134)
        return 1;
      v135 = (_QWORD *)(a2 + 40);
      v136 = 8 * v134;
      while ((sub_22EB007F8(a1, *v135, 0) & 1) != 0)
      {
        ++v135;
        v136 -= 8;
        if (!v136)
          return 1;
      }
      return 0;
    case 0xE:
      v88 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v88)
        return 1;
      v89 = a2 + 24;
      v90 = 8 * v88;
      for (i = (_QWORD *)(a2 + 24); (sub_22EB007F8(a1, *i, 0) & 1) != 0; ++i)
      {
        v90 -= 8;
        if (!v90)
        {
          v92 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v92)
            return 1;
          v93 = 8 * v92;
          for (j = (_QWORD *)(v89 + 8 * v92); (sub_22EB007F8(a1, *j, 0) & 1) != 0; ++j)
          {
            v93 -= 8;
            if (!v93)
            {
              v95 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v95)
                return 1;
              v96 = (_QWORD *)(v89 + 8 * v95 + 8 * v95);
              v97 = 8 * v95;
              while ((sub_22EB007F8(a1, *v96, 0) & 1) != 0)
              {
                ++v96;
                v97 -= 8;
                if (!v97)
                {
                  v98 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v98)
                    return 1;
                  v99 = (_QWORD *)(v89 + 8 * v98 + 8 * v98 + 8 * v98);
                  v100 = 8 * v98;
                  while ((sub_22EB007F8(a1, *v99, 0) & 1) != 0)
                  {
                    ++v99;
                    v100 -= 8;
                    if (!v100)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0xF:
      v171 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v171)
        return 1;
      v172 = a2 + 24;
      v173 = 8 * v171;
      for (k = (_QWORD *)(a2 + 24); (sub_22EB007F8(a1, *k, 0) & 1) != 0; ++k)
      {
        v173 -= 8;
        if (!v173)
        {
          v175 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v175)
            return 1;
          v176 = 8 * v175;
          for (m = (_QWORD *)(v172 + 8 * v175); (sub_22EB007F8(a1, *m, 0) & 1) != 0; ++m)
          {
            v176 -= 8;
            if (!v176)
            {
              v178 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v178)
                return 1;
              v179 = (_QWORD *)(v172 + 8 * v178 + 8 * v178);
              v180 = 8 * v178;
              while ((sub_22EB007F8(a1, *v179, 0) & 1) != 0)
              {
                ++v179;
                v180 -= 8;
                if (!v180)
                {
                  v181 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v181)
                    return 1;
                  v182 = (_QWORD *)(v172 + 8 * v181 + 8 * v181 + 8 * v181);
                  v183 = 8 * v181;
                  while ((sub_22EB007F8(a1, *v182, 0) & 1) != 0)
                  {
                    ++v182;
                    v183 -= 8;
                    if (!v183)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x12:
      v184 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v184)
        return 1;
      v185 = (_QWORD *)(a2 + 40);
      v186 = 8 * v184;
      while ((sub_22EB007F8(a1, *v185, 0) & 1) != 0)
      {
        ++v185;
        v186 -= 8;
        if (!v186)
          return 1;
      }
      return 0;
    case 0x14:
    case 0x58:
      v5 = *(_QWORD *)(a2 + 24);
      return (sub_22EB007F8(a1, v5, 0) & 1) != 0;
    case 0x16:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 40);
      return (sub_22EB007F8(a1, v5, 0) & 1) != 0;
    case 0x18:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 48);
      return (sub_22EB007F8(a1, v5, 0) & 1) != 0;
    case 0x1A:
      v193 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v193)
        return 1;
      v194 = (_QWORD *)(a2 + 24);
      v195 = 8 * v193;
      while ((sub_22EB007F8(a1, *v194, 0) & 1) != 0)
      {
        ++v194;
        v195 -= 8;
        if (!v195)
          return 1;
      }
      return 0;
    case 0x1B:
    case 0x1C:
    case 0x21:
    case 0x24:
    case 0x34:
    case 0x37:
    case 0x38:
    case 0x39:
    case 0x3A:
    case 0x3E:
    case 0x4E:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 32);
      return (sub_22EB007F8(a1, v5, 0) & 1) != 0;
    case 0x1D:
      v40 = a2 + 40;
      v41 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v41)
        goto LABEL_72;
      v42 = 8 * v41;
      v43 = (_QWORD *)(a2 + 40);
      while ((sub_22EB007F8(a1, *v43, 0) & 1) != 0)
      {
        ++v43;
        v42 -= 8;
        if (!v42)
        {
LABEL_72:
          result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          v44 = *(unsigned int *)(a2 + 16);
          if ((_DWORD)v44)
          {
            v45 = 8 * v44;
            for (n = (_QWORD *)(v40 + 8 * v44); (sub_22EB007F8(a1, *n, 0) & 1) != 0; ++n)
            {
              v45 -= 8;
              if (!v45)
              {
                v47 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v47)
                  return 1;
                v48 = (_QWORD *)(v40 + 8 * v47 + 8 * v47);
                v49 = 8 * v47;
                while ((sub_22EB007F8(a1, *v48, 0) & 1) != 0)
                {
                  ++v48;
                  v49 -= 8;
                  if (!v49)
                    return 1;
                }
                return 0;
              }
            }
            return 0;
          }
          return 1;
        }
      }
      return 0;
    case 0x1E:
      v82 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v82)
        return 1;
      v83 = (_QWORD *)(a2 + 24);
      v84 = 8 * v82;
      while ((sub_22EB007F8(a1, *v83, 0) & 1) != 0)
      {
        ++v83;
        v84 -= 8;
        if (!v84)
          return 1;
      }
      return 0;
    case 0x1F:
      v187 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v187)
        return 1;
      v188 = (_QWORD *)(a2 + 104);
      v189 = 8 * v187;
      while ((sub_22EB007F8(a1, *v188, 0) & 1) != 0)
      {
        ++v188;
        v189 -= 8;
        if (!v189)
          return 1;
      }
      return 0;
    case 0x22:
      v199 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v199)
        return 1;
      v200 = (_QWORD *)(a2 + 80);
      v201 = 8 * v199;
      while ((sub_22EB007F8(a1, *v200, 0) & 1) != 0)
      {
        ++v200;
        v201 -= 8;
        if (!v201)
          return 1;
      }
      return 0;
    case 0x25:
      if (!sub_22EB11174(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22EB111FC(a1, (uint64_t *)&v208))
        return 0;
      v56 = a2 + 96;
      v57 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v57)
        goto LABEL_98;
      v58 = 8 * v57;
      v59 = (_QWORD *)(a2 + 96);
      while ((sub_22EB007F8(a1, *v59, 0) & 1) != 0)
      {
        ++v59;
        v58 -= 8;
        if (!v58)
        {
LABEL_98:
          if (sub_22EB007F8(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EB007F8(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v60 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v60)
              return 1;
            v61 = 8 * v60;
            for (ii = (_QWORD *)(v56 + 8 * v60); (sub_22EB007F8(a1, *ii, 0) & 1) != 0; ++ii)
            {
              v61 -= 8;
              if (!v61)
              {
                v63 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v63)
                  return 1;
                v64 = (_QWORD *)(v56 + 8 * v63 + 8 * v63);
                v65 = 8 * v63;
                while ((sub_22EB007F8(a1, *v64, 0) & 1) != 0)
                {
                  ++v64;
                  v65 -= 8;
                  if (!v65)
                  {
                    v66 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v66)
                      return 1;
                    v67 = (_QWORD *)(v56 + 8 * v66 + 8 * v66 + 8 * v66);
                    v68 = 8 * v66;
                    while ((sub_22EB007F8(a1, *v67, 0) & 1) != 0)
                    {
                      ++v67;
                      v68 -= 8;
                      if (!v68)
                      {
                        v69 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v69)
                          return 1;
                        v70 = (_QWORD *)(v56 + 8 * v69 + 8 * v69 + 8 * v69 + 8 * v69);
                        v71 = 8 * v69;
                        while ((sub_22EB007F8(a1, *v70, 0) & 1) != 0)
                        {
                          ++v70;
                          v71 -= 8;
                          if (!v71)
                          {
                            v72 = *(unsigned int *)(a2 + 16);
                            if (!(_DWORD)v72)
                              return 1;
                            v73 = (_QWORD *)(v56 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72);
                            v74 = 8 * v72;
                            while ((sub_22EB007F8(a1, *v73, 0) & 1) != 0)
                            {
                              ++v73;
                              v74 -= 8;
                              if (!v74)
                                return 1;
                            }
                            return 0;
                          }
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x27:
      v168 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v168)
        return 1;
      v169 = (_QWORD *)(a2 + 24);
      v170 = 8 * v168;
      while ((sub_22EB007F8(a1, *v169, 0) & 1) != 0)
      {
        ++v169;
        v170 -= 8;
        if (!v170)
          return 1;
      }
      return 0;
    case 0x29:
      v53 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v53)
        return 1;
      v54 = (_QWORD *)(a2 + 32);
      v55 = 8 * v53;
      while ((sub_22EB007F8(a1, *v54, 0) & 1) != 0)
      {
        ++v54;
        v55 -= 8;
        if (!v55)
          return 1;
      }
      return 0;
    case 0x2A:
      v50 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v50)
        return 1;
      v51 = (_QWORD *)(a2 + 80);
      v52 = 8 * v50;
      while ((sub_22EB007F8(a1, *v51, 0) & 1) != 0)
      {
        ++v51;
        v52 -= 8;
        if (!v52)
          return 1;
      }
      return 0;
    case 0x2B:
      v101 = a2 + 64;
      v102 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v102)
        goto LABEL_164;
      v103 = 8 * v102;
      v104 = (_QWORD *)(a2 + 64);
      while ((sub_22EB007F8(a1, *v104, 0) & 1) != 0)
      {
        ++v104;
        v103 -= 8;
        if (!v103)
        {
LABEL_164:
          result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v105 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v105)
            return 1;
          v106 = 8 * v105;
          for (jj = (_QWORD *)(v101 + 8 * v105); (sub_22EB007F8(a1, *jj, 0) & 1) != 0; ++jj)
          {
            v106 -= 8;
            if (!v106)
            {
              v108 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v108)
                return 1;
              v109 = (_QWORD *)(v101 + 8 * v108 + 8 * v108);
              v110 = 8 * v108;
              while ((sub_22EB007F8(a1, *v109, 0) & 1) != 0)
              {
                ++v109;
                v110 -= 8;
                if (!v110)
                {
                  v111 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v111)
                    return 1;
                  v112 = (_QWORD *)(v101 + 8 * v111 + 8 * v111 + 8 * v111);
                  v113 = 8 * v111;
                  while ((sub_22EB007F8(a1, *v112, 0) & 1) != 0)
                  {
                    ++v112;
                    v113 -= 8;
                    if (!v113)
                    {
                      v114 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v114)
                        return 1;
                      v115 = (_QWORD *)(v101 + 8 * v114 + 8 * v114 + 8 * v114 + 8 * v114);
                      v116 = 8 * v114;
                      while ((sub_22EB007F8(a1, *v115, 0) & 1) != 0)
                      {
                        ++v115;
                        v116 -= 8;
                        if (!v116)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2C:
      v117 = a2 + 64;
      v118 = *(unsigned int *)(a2 + 16);
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 64 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118), 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22EB007F8(a1, *(_QWORD *)(v117+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8), 0);
      if (!(_DWORD)result)
        return result;
      v119 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v119)
        goto LABEL_191;
      v120 = 8 * v119;
      v121 = (_QWORD *)(a2 + 64);
      while ((sub_22EB007F8(a1, *v121, 0) & 1) != 0)
      {
        ++v121;
        v120 -= 8;
        if (!v120)
        {
LABEL_191:
          result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v122 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v122)
            return 1;
          v123 = 8 * v122;
          for (kk = (_QWORD *)(v117 + 8 * v122); (sub_22EB007F8(a1, *kk, 0) & 1) != 0; ++kk)
          {
            v123 -= 8;
            if (!v123)
            {
              v125 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v125)
                return 1;
              v126 = (_QWORD *)(v117 + 8 * v125 + 8 * v125);
              v127 = 8 * v125;
              while ((sub_22EB007F8(a1, *v126, 0) & 1) != 0)
              {
                ++v126;
                v127 -= 8;
                if (!v127)
                {
                  v128 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v128)
                    return 1;
                  v129 = (_QWORD *)(v117 + 8 * v128 + 8 * v128 + 8 * v128);
                  v130 = 8 * v128;
                  while ((sub_22EB007F8(a1, *v129, 0) & 1) != 0)
                  {
                    ++v129;
                    v130 -= 8;
                    if (!v130)
                    {
                      v131 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v131)
                        return 1;
                      v132 = (_QWORD *)(v117 + 8 * v131 + 8 * v131 + 8 * v131 + 8 * v131);
                      v133 = 8 * v131;
                      while ((sub_22EB007F8(a1, *v132, 0) & 1) != 0)
                      {
                        ++v132;
                        v133 -= 8;
                        if (!v133)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2E:
      v190 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v190)
        return 1;
      v191 = (_QWORD *)(a2 + 136);
      v192 = 8 * v190;
      while ((sub_22EB007F8(a1, *v191, 0) & 1) != 0)
      {
        ++v191;
        v192 -= 8;
        if (!v192)
          return 1;
      }
      return 0;
    case 0x35:
      v6 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v6)
        return 1;
      v7 = a2 + 24;
      v8 = 8 * v6;
      for (mm = (_QWORD *)(a2 + 24); (sub_22EB007F8(a1, *mm, 0) & 1) != 0; ++mm)
      {
        v8 -= 8;
        if (!v8)
        {
          v10 = *(unsigned int *)(a2 + 16);
          v11 = (uint64_t *)(v7 + 8 * v10);
          v208 = (unint64_t)v11;
          if ((_DWORD)v10)
          {
            v12 = 0;
            v13 = &v11[v10];
            while (1)
            {
              if ((v12 & 3) != 0)
              {
                if ((v12 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                  v14 = (_QWORD *)((v12 & 0xFFFFFFFFFFFFFFFCLL) + 40);
                else
                  v14 = (_QWORD *)sub_22F3AC1A8(*v11);
                if ((sub_22EB007F8(a1, *v14, 0) & 1) == 0)
                  return 0;
                if (v12 < 4)
                  sub_22F3F2FE0((uint64_t)&v208, 1);
                else
                  sub_22F0D8720((uint64_t)&v208);
              }
              else
              {
                if (!sub_22EB007F8(a1, *v11, 0))
                  return 0;
                *(_QWORD *)&v208 = v11 + 1;
              }
              v12 = *((_QWORD *)&v208 + 1);
              v11 = (uint64_t *)v208;
              if ((uint64_t *)v208 == v13 && *((_QWORD *)&v208 + 1) == 0)
                return 1;
            }
          }
          return 1;
        }
      }
      return 0;
    case 0x3F:
      v75 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v75)
        return 1;
      v76 = a2 + 24;
      v77 = 8 * v75;
      for (nn = (_QWORD *)(a2 + 24); (sub_22EB007F8(a1, *nn, 0) & 1) != 0; ++nn)
      {
        v77 -= 8;
        if (!v77)
        {
          v79 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v79)
            return 1;
          v80 = 8 * v79;
          for (i1 = (_QWORD *)(v76 + 8 * v79); (sub_22EB007F8(a1, *i1, 0) & 1) != 0; ++i1)
          {
            v80 -= 8;
            if (!v80)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 0x42:
      if (!sub_22EB11174(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v208 = *(_OWORD *)(a2 + 80);
      v209 = *(_QWORD *)(a2 + 96);
      if (!sub_22EB111FC(a1, (uint64_t *)&v208))
        return 0;
      v140 = a2 + 104;
      v141 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v141)
        goto LABEL_228;
      v142 = 8 * v141;
      v143 = (_QWORD *)(a2 + 104);
      while ((sub_22EB007F8(a1, *v143, 0) & 1) != 0)
      {
        ++v143;
        v142 -= 8;
        if (!v142)
        {
LABEL_228:
          if (sub_22EB007F8(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EB007F8(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v144 = *(unsigned int *)(a2 + 16);
            if ((_DWORD)v144)
            {
              v145 = 8 * v144;
              v146 = (_QWORD *)(v140 + 8 * v144);
              while ((sub_22EB007F8(a1, *v146, 0) & 1) != 0)
              {
                ++v146;
                v145 -= 8;
                if (!v145)
                {
                  v147 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v147)
                    goto LABEL_246;
                  v148 = (_QWORD *)(v140 + 8 * v147 + 8 * v147);
                  v149 = 8 * v147;
                  while ((sub_22EB007F8(a1, *v148, 0) & 1) != 0)
                  {
                    ++v148;
                    v149 -= 8;
                    if (!v149)
                    {
                      v150 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v150)
                        goto LABEL_246;
                      v151 = (_QWORD *)(v140 + 8 * v150 + 8 * v150 + 8 * v150);
                      v152 = 8 * v150;
                      while ((sub_22EB007F8(a1, *v151, 0) & 1) != 0)
                      {
                        ++v151;
                        v152 -= 8;
                        if (!v152)
                        {
                          v153 = *(unsigned int *)(a2 + 16);
                          if (!(_DWORD)v153)
                            goto LABEL_246;
                          v154 = (_QWORD *)(v140 + 8 * v153 + 8 * v153 + 8 * v153 + 8 * v153);
                          v155 = 8 * v153;
                          while ((sub_22EB007F8(a1, *v154, 0) & 1) != 0)
                          {
                            ++v154;
                            v155 -= 8;
                            if (!v155)
                              goto LABEL_246;
                          }
                          return 0;
                        }
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
            else
            {
LABEL_246:
              if (*(_DWORD *)(a2 + 48) != 1)
                return 1;
              v156 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v156)
                return 1;
              v157 = (_QWORD *)(v140 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156);
              v158 = 8 * v156;
              while ((sub_22EB007F8(a1, *v157, 0) & 1) != 0)
              {
                ++v157;
                v158 -= 8;
                if (!v158)
                {
                  v159 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v159)
                    return 1;
                  v160 = (_QWORD *)(v140 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159);
                  v161 = 8 * v159;
                  while ((sub_22EB007F8(a1, *v160, 0) & 1) != 0)
                  {
                    ++v160;
                    v161 -= 8;
                    if (!v161)
                    {
                      v162 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v162)
                        return 1;
                      v163 = (_QWORD *)(v140 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162);
                      v164 = 8 * v162;
                      while ((sub_22EB007F8(a1, *v163, 0) & 1) != 0)
                      {
                        ++v163;
                        v164 -= 8;
                        if (!v164)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x47:
      result = sub_22EB007F8(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 64);
      return (sub_22EB007F8(a1, v5, 0) & 1) != 0;
    case 0x49:
      v202 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v202)
        return 1;
      v203 = (_QWORD *)(a2 + 24);
      v204 = 8 * v202;
      while ((sub_22EB007F8(a1, *v203, 0) & 1) != 0)
      {
        ++v203;
        v204 -= 8;
        if (!v204)
          return 1;
      }
      return 0;
    case 0x4C:
      v165 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v165)
        return 1;
      v166 = (_QWORD *)(a2 + 24);
      v167 = 8 * v165;
      while ((sub_22EB007F8(a1, *v166, 0) & 1) != 0)
      {
        ++v166;
        v167 -= 8;
        if (!v167)
          return 1;
      }
      return 0;
    case 0x4D:
      if (!sub_22EB11174(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22EB111FC(a1, (uint64_t *)&v208))
        return 0;
      v24 = a2 + 96;
      v25 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v25)
        goto LABEL_49;
      v26 = 8 * v25;
      v27 = (_QWORD *)(a2 + 96);
      while ((sub_22EB007F8(a1, *v27, 0) & 1) != 0)
      {
        ++v27;
        v26 -= 8;
        if (!v26)
        {
LABEL_49:
          if (sub_22EB007F8(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EB007F8(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v28 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v28)
              return 1;
            v29 = 8 * v28;
            for (i2 = (_QWORD *)(v24 + 8 * v28); (sub_22EB007F8(a1, *i2, 0) & 1) != 0; ++i2)
            {
              v29 -= 8;
              if (!v29)
              {
                v31 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v31)
                  return 1;
                v32 = (_QWORD *)(v24 + 8 * v31 + 8 * v31);
                v33 = 8 * v31;
                while ((sub_22EB007F8(a1, *v32, 0) & 1) != 0)
                {
                  ++v32;
                  v33 -= 8;
                  if (!v33)
                  {
                    v34 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v34)
                      return 1;
                    v35 = (_QWORD *)(v24 + 8 * v34 + 8 * v34 + 8 * v34);
                    v36 = 8 * v34;
                    while ((sub_22EB007F8(a1, *v35, 0) & 1) != 0)
                    {
                      ++v35;
                      v36 -= 8;
                      if (!v36)
                      {
                        v37 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v37)
                          return 1;
                        v38 = (_QWORD *)(v24 + 8 * v37 + 8 * v37 + 8 * v37 + 8 * v37);
                        v39 = 8 * v37;
                        while ((sub_22EB007F8(a1, *v38, 0) & 1) != 0)
                        {
                          ++v38;
                          v39 -= 8;
                          if (!v39)
                            return 1;
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x51:
      v16 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v16)
        return 1;
      v17 = (_QWORD *)(a2 + 104);
      v18 = 8 * v16;
      while ((sub_22EB007F8(a1, *v17, 0) & 1) != 0)
      {
        ++v17;
        v18 -= 8;
        if (!v18)
          return 1;
      }
      return 0;
    case 0x59:
      v205 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v205)
        return 1;
      v206 = (_QWORD *)(a2 + 80);
      v207 = 8 * v205;
      while ((sub_22EB007F8(a1, *v206, 0) & 1) != 0)
      {
        ++v206;
        v207 -= 8;
        if (!v207)
          return 1;
      }
      return 0;
    case 0x5A:
      v196 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v196)
        return 1;
      v197 = (_QWORD *)(a2 + 80);
      v198 = 8 * v196;
      while ((sub_22EB007F8(a1, *v197, 0) & 1) != 0)
      {
        ++v197;
        v198 -= 8;
        if (!v198)
          return 1;
      }
      return 0;
    case 0x5B:
      v19 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v19)
        return 1;
      v20 = 0;
      v21 = a2 + 24;
      v22 = 2 * v19;
      break;
    default:
      return 1;
  }
  while (1)
  {
    v23 = *(_QWORD *)(v21 + 8 * (v20 + 1));
    result = sub_22EB007F8(a1, *(_QWORD *)(v21 + 8 * v20), 0);
    if (!(_DWORD)result)
      break;
    if ((sub_22EB007F8(a1, v23, 0) & 1) == 0)
      return 0;
    v20 += 2;
    if (v22 == v20)
      return 1;
  }
  return result;
}

uint64_t sub_22EB13ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;

  if (!a2)
    return 1;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4 == v3)
    v5 = 0;
  else
    v5 = *(uint64_t **)(a2 + 24);
  if (v4 == v3)
    v6 = 0;
  else
    v6 = *(uint64_t **)(a2 + 16);
  v14 = 0;
  v15 = 0;
  v13 = v6;
  if (v6 == v5)
    return 1;
  v9 = 0;
  while (1)
  {
    if ((v9 & 3) == 0)
    {
      result = sub_22EB007F8(a1, *v6, a3);
      if (!(_DWORD)result)
        return result;
      v13 = v6 + 1;
      goto LABEL_18;
    }
    v10 = (_QWORD *)((v9 & 0xFFFFFFFFFFFFFFFCLL) != 0 ? (v9 & 0xFFFFFFFFFFFFFFFCLL) + 40 : sub_22F3AC1A8(*v6));
    if ((sub_22EB007F8(a1, *v10, a3) & 1) == 0)
      return 0;
    if (v9 < 4)
      sub_22F3F2FE0((uint64_t)&v13, 1);
    else
      sub_22F0D8720((uint64_t)&v13);
LABEL_18:
    v6 = v13;
    v9 = v14;
    if (v13 == v5 && v14 == 0)
      return 1;
  }
}

unint64_t sub_22EB13FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  unint64_t result;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  unint64_t v12;
  _BOOL4 v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  unsigned int v21;
  int v22;
  BOOL v23;
  unint64_t v24;
  uint64_t v26;
  int v27;
  int v28;
  BOOL v29;
  int v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *(_QWORD *)(a1 + 216);
  if (v2)
    v3 = (*(_WORD *)(v2 + 8) & 0x7Fu) - 38 >= 0xFFFFFFFD;
  else
    v3 = 0;
  if (!v3)
    return 0;
  if (*(_QWORD *)(v2 - 24) < 8uLL || (*(_QWORD *)(v2 - 24) & 7) != 0)
    return 0;
  if (*(_QWORD *)(v2 + 72) < 8uLL || (*(_QWORD *)(v2 + 72) & 4) != 0)
    return 0;
  result = 0;
  if (*(_DWORD *)(a2 + 40))
    return result;
  v9 = *(_QWORD *)(a2 + 48);
  if (!v9)
    return result;
  v10 = *(_DWORD **)(v9 + 16);
  if (*v10 != 4 || v10[4] != 1885435763)
    return 0;
  v11 = *(_QWORD *)(v2 - 48);
  v12 = v11 & 0xFFFFFFFFFFFFFFF8;
  if ((v11 & 4) != 0)
    v12 = *(_QWORD *)v12;
  result = 0;
  if (!v12 || (*(_WORD *)(v12 + 8) & 0x7F) != 0x10)
    return result;
  v13 = sub_22EFC84D4(v12);
  if (v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v12 - 8) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_QWORD *)(v12 - 8) & 7) != 0 || v24 == 0)
    return 0;
  v26 = *(_QWORD *)(v24 + 16);
  if (*(_DWORD *)v26 != 9)
  {
    if (*(_DWORD *)v26 == 7)
    {
      v27 = *(_DWORD *)(v26 + 16);
      v28 = *(_DWORD *)(v26 + 19);
      v29 = v27 == 1701076831;
      v30 = 1735746149;
      goto LABEL_54;
    }
    return 0;
  }
  v31 = *(_QWORD *)(v26 + 16);
  v28 = *(unsigned __int8 *)(v26 + 24);
  v29 = v31 == 0x6C69666F72705F5FLL;
  v30 = 101;
LABEL_54:
  if (!v29 || v28 != v30)
    return 0;
  v33 = *(_QWORD *)(v12 - 32);
  result = v33 & 0xFFFFFFFFFFFFFFF8;
  if ((v33 & 4) != 0)
  {
    result = *(_QWORD *)result;
    if (!result)
      return result;
  }
  else if (!result)
  {
    return result;
  }
  result = sub_22EFC84D4(result);
  if ((_DWORD)result)
  {
LABEL_26:
    v14 = sub_22F1E361C(*(_QWORD **)(*(_QWORD *)(a1 + 88) + 1992), *(_DWORD *)(a2 + 72));
    result = 0;
    if (v14 && v14 != 3)
    {
      v15 = *(_QWORD *)(v2 - 24);
      if ((v15 & 7) != 0)
        v16 = 0;
      else
        v16 = v15 & 0xFFFFFFFFFFFFFFF8;
      v17 = *(unsigned int **)(v16 + 16);
      v18 = *v17;
      if (v18 == 5)
      {
        if (v17[4] == 1634890337 && *((_BYTE *)v17 + 20) == 121)
        {
          v13 = 1;
        }
        else if (v17[4] != 1667331187 || *((_BYTE *)v17 + 20) != 107)
        {
          v21 = v17[4];
          v22 = *((unsigned __int8 *)v17 + 20);
          v23 = v21 == 1969583473 && v22 == 101;
          goto LABEL_68;
        }
        v34 = 1;
      }
      else
      {
        if ((_DWORD)v18 == 14)
        {
          v35 = *((_QWORD *)v17 + 2);
          v36 = *(_QWORD *)((char *)v17 + 22);
          v23 = v35 == 0x797469726F697270 && v36 == 0x65756575715F7974;
LABEL_68:
          v34 = v23;
          if (!v23)
            v13 = 0;
          return v13 & v34;
        }
        if ((_DWORD)v18 == 4)
        {
          v23 = v17[4] == 1919508848;
          goto LABEL_68;
        }
        v13 = 0;
        v34 = 0;
      }
      return v13 & v34;
    }
  }
  return result;
}

__n128 *sub_22EB14270(uint64_t *a1, unsigned __int8 *a2, int *a3)
{
  __n128 *v5;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  char *v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v20;
  unsigned int v21;
  char v22;
  uint64_t v23[2];
  int v24;
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if ((a2[1] & 0xA0) != 0)
  {
    *a3 = 6;
    return (__n128 *)a2;
  }
  else
  {
    v21 = 1;
    v20 = 0;
    v22 = 0;
    v7 = sub_22ED02FD4(a1, a2, *(_QWORD *)(a1[11] + 16400), (uint64_t)&v20, 5);
    v5 = (__n128 *)v7;
    if ((v7 & 1) != 0)
    {
      *a3 = 7;
      v10 = sub_22E3CD3D4(a1[11] + 2032, 16, 3);
      v11 = *(_QWORD *)(a1[11] + 16400);
      sub_22F0D5A50((uint64_t)a2);
      v13 = v12;
      *(_BYTE *)v10 = 117;
      if (byte_255E04EB3)
      {
        v14 = sub_22F0D3748(117);
        ++*((_DWORD *)v14 + 2);
      }
      v15 = *(_DWORD *)v10;
      *(_QWORD *)(v10 + 8) = v11;
      *(_DWORD *)v10 = v15 & 0xFFF800FF;
      *(_DWORD *)(v10 + 4) = v13;
      v16 = a1[11];
      LODWORD(v23[0]) = 2;
      v23[1] = 0;
      v24 = 1;
      v25 = 1;
      v5 = sub_22EFF6628(v16, (int *)v10, v23);
      if (LODWORD(v23[0]) >= 2)
        sub_22EF53BC0(v23);
    }
    else
    {
      if ((*(_BYTE *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 2) & 1) != 0)
      {
        v17 = 6;
      }
      else
      {
        v8 = v21;
        if (v21 > 0x40)
          v9 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v20) == v8;
        else
          v9 = v20 == 0;
        if (v9)
          v17 = 7;
        else
          v17 = 8;
      }
      *a3 = v17;
    }
    if (v21 >= 0x41 && v20)
      MEMORY[0x2348A0E84](v20, 0x1000C8000313F17);
  }
  return v5;
}

uint64_t sub_22EB14454(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t (***v16)();
  uint64_t *v17;
  _BOOL8 v18;
  int v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _BOOL4 v24;
  uint64_t (**v25)();
  int v26;
  int *v27;
  uint64_t *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v3 = a3;
  v31 = a3;
  v6 = *a2;
  v7 = (uint64_t *)(*a2 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
  {
    v8 = sub_22EF5F824(*(_QWORD *)(a1 + 88), *a2);
LABEL_5:
    v6 = v8;
    *a2 = v8;
    v7 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFF0);
    goto LABEL_6;
  }
  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 25 <= 1)
  {
    v8 = sub_22EF5B848(*(_QWORD *)(a1 + 88), *a2, 0);
    goto LABEL_5;
  }
LABEL_6:
  v30 = 0;
  v29 = v6;
  v9 = *v7;
  v10 = *(_DWORD *)(*v7 + 16);
  if (*v7 && *(_DWORD *)(*v7 + 16) == 39)
    goto LABEL_10;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
  {
    v9 = sub_22F10CF48(*v7);
    if (v9)
    {
LABEL_10:
      v6 = *(_QWORD *)(v9 + 32);
      v29 = v6;
      LODWORD(v9) = 1;
      v30 = 1;
      v7 = (uint64_t *)(v6 & 0xFFFFFFFFFFFFFFF0);
      v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v11)
        v12 = (*(_DWORD *)(v11 + 16) & 0xFF800FF) == 86507531;
      else
        v12 = 0;
      if (v12)
        return 0;
      goto LABEL_32;
    }
    v9 = *(_QWORD *)(*a2 & 0xFFFFFFFFFFFFFFF0);
    v10 = *(_DWORD *)(v9 + 16);
  }
  if ((v10 & 0xFE) != 0x28)
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
    {
      LODWORD(v9) = 0;
      goto LABEL_32;
    }
    v13 = sub_22F10CF48(v9);
    v9 = v13;
    if (!v13)
      goto LABEL_32;
    v10 = *(_DWORD *)(v13 + 16);
  }
  v14 = v9;
  if ((v10 & 0x100000) != 0)
  {
    v14 = v9;
    do
    {
      while (1)
      {
        v14 = *(_QWORD *)(*(_QWORD *)(v14 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v14)
          break;
        v15 = *(_DWORD *)(v14 + 16);
        if ((v15 & 0xFE) != 0x28)
          break;
        if ((v15 & 0x100000) == 0)
          goto LABEL_28;
      }
      v14 = sub_22F10CF48(v14);
    }
    while ((*(_DWORD *)(v14 + 16) & 0x100000) != 0);
  }
LABEL_28:
  v6 = *(_QWORD *)(v14 + 32);
  v29 = v6;
  v30 = 2;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 41)
  {
    sub_22E8FCA40((_QWORD *)a1, v3, 0x124Au, 0, (uint64_t)&v25);
    v16 = &v25;
    v17 = (uint64_t *)a2;
LABEL_45:
    v22 = sub_22E8901B8((uint64_t)v16, v17);
    sub_22E8906A0(v22, &v31);
    sub_22E903BEC((unsigned int *)&v25);
    return 1;
  }
  v7 = (uint64_t *)(v6 & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v9) = 2;
LABEL_32:
  v18 = (**(_QWORD **)(a1 + 72) & 0x10) == 0;
  if ((**(_QWORD **)(a1 + 72) & 0x10) != 0)
    v19 = 5268;
  else
    v19 = 3585;
  v20 = *(_QWORD *)(*(_QWORD *)(*v7 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v20 + 16) == 45 && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v20 + 24)) + 74) & 2) != 0)
  {
LABEL_39:
    if (sub_22F111384(*v7))
      v21 = (_DWORD)v9 == 1;
    else
      v21 = 1;
    if (!v21)
    {
      sub_22E8FCA40((_QWORD *)a1, v31, 0x125Fu, 0, (uint64_t)&v25);
      v24 = v30 == 2;
      v16 = (uint64_t (***)())sub_22E8900C4((uint64_t)&v25, (int *)&v24);
      v17 = &v29;
      goto LABEL_45;
    }
    return 0;
  }
  v25 = off_24FAB8268;
  v26 = v19;
  v27 = &v30;
  v28 = &v31;
  if ((sub_22EE8B0B0(a1, v3, v6) & 1) == 0)
  {
    LODWORD(v9) = v30;
    goto LABEL_39;
  }
  return v18;
}

uint64_t sub_22EB14770(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  int v4;
  BOOL v5;

  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 8) != 0)
    return 0;
  v2 = a2 & 0xFFFFFFFFFFFFFFF0;
  result = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  v4 = *(unsigned __int8 *)(result + 16);
  if (result && v4 == 39)
    goto LABEL_10;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
  {
    result = sub_22F10CF48(result);
    if (result)
      goto LABEL_10;
    result = *(_QWORD *)v2;
    v4 = *(unsigned __int8 *)(*(_QWORD *)v2 + 16);
  }
  if (v4 != 31)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 31)
      return 0;
    result = sub_22F10CF48(result);
    if (!result)
      return result;
  }
LABEL_10:
  result = *(_QWORD *)(*(_QWORD *)(result + 32) & 0xFFFFFFFFFFFFFFF0);
  if (result)
    v5 = *(_BYTE *)(result + 16) == 26;
  else
    v5 = 0;
  if (v5)
    return (*(_WORD *)(result + 22) & 0x3C0) != 0;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
  {
    result = sub_22F10CF48(result);
    if (!result)
      return result;
    return (*(_WORD *)(result + 22) & 0x3C0) != 0;
  }
  return 0;
}

uint64_t sub_22EB14850(int32x2_t *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v13;
  BOOL v14;
  uint64_t v15;
  unsigned int *v17;
  uint64_t v18;
  char v19;

  v8 = a2;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = (v10 >> 54) & 0xF;
  if ((_DWORD)v11 == 11)
  {
    v8 = a2;
    v17 = (unsigned int *)&v19;
    goto LABEL_20;
  }
  if ((v11 - 9) <= 1)
  {
    v13 = *(uint64_t **)(((a3 + 8 * (unsigned __int16)(v10 >> 38) + 4 * ((v10 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 8 * ((v10 & 0x3C0000000000000) == 0x80000000000000));
    a3 = *(_QWORD *)(v13[6] & 0xFFFFFFFFFFFFFFF0);
    if (a3)
      v14 = *(_BYTE *)(a3 + 16) == 26;
    else
      v14 = 0;
    if (!v14)
      a3 = sub_22F10CF48(*(_QWORD *)(v13[6] & 0xFFFFFFFFFFFFFFF0));
    v15 = (*(_QWORD *)(a3 + 16) >> 54) & 0xFLL;
    if ((v15 - 9) <= 1)
    {
      if ((_DWORD)v15 == 9)
        sub_22EAB6658((uint64_t)a1, v8, (unint64_t)v13);
      else
        sub_22EE448D0(a1, v8, v13, a4, a5, a6, a7, a8);
      a3 = *(_QWORD *)(v13[6] & 0xFFFFFFFFFFFFFFF0);
      if (!a3 || *(_BYTE *)(a3 + 16) != 26)
        a3 = sub_22F10CF48(*(_QWORD *)(v13[6] & 0xFFFFFFFFFFFFFFF0));
      if ((*(_QWORD *)(a3 + 16) & 0x3C0000000000000) == 0x2C0000000000000)
      {
        v17 = (unsigned int *)&v18;
LABEL_20:
        sub_22E8FCA40(a1, v8, 0xCE8u, 0, (uint64_t)v17);
        sub_22E903BEC(v17);
        return 0;
      }
    }
  }
  return a3;
}

uint64_t *sub_22EB149A8(uint64_t *result, uint64_t *a2, __int128 *a3)
{
  uint64_t *v5;
  int v6;
  uint64_t v7;

  v5 = result;
  if ((*(_DWORD *)a3 - 9) >= 2)
  {
    result = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)result[12] + 136))(result[12]);
    if (result)
      result = (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *))(*result + 64))(result, a2);
  }
  if (a2)
  {
    v6 = 0;
    v7 = (uint64_t)a2;
    do
    {
      *(_QWORD *)(v7 + 48) = sub_22EF5F294(v5[11], *(_QWORD *)(v7 + 48), a3);
      result = (uint64_t *)(v7 + 104);
      if ((*(_BYTE *)(v7 + 104) & 3) != 0)
      {
        if (v6)
          return result;
        v6 = 1;
      }
      result = (uint64_t *)sub_22E3CD31C(result, v7);
      if (result == a2)
        break;
      v7 = (uint64_t)result;
    }
    while (result);
  }
  return result;
}

BOOL sub_22EB14A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BOOL8 v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL4 v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unsigned int *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int *v37;
  int v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unsigned int v42;
  _QWORD *v43;
  _DWORD *v44;
  uint64_t v45;
  const char *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  unsigned int v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  _DWORD *v58;
  _DWORD *v59;
  unint64_t v60;
  _DWORD *v61;
  uint64_t v62;
  uint64_t *v63;
  unsigned int v64;
  uint64_t v65;
  char v66;
  unint64_t v67;
  const char *p_p;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  const void *v74;
  std::string::size_type v75;
  std::string *p_dst;
  uint64_t v77;
  uint64_t v78;
  std::string *v79;
  std::string::size_type v80;
  void **v81;
  size_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86[4];
  std::string __dst;
  void *v88[2];
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  void *v92;
  char v93;
  _QWORD v94[2];
  __int128 __p;
  uint64_t v96;
  __int128 v97;
  _BYTE v98[24];
  uint64_t v99;
  uint64_t v100;
  unint64_t *v101;
  unsigned int v102[25];
  __int16 v103;
  unint64_t v104;
  _BYTE v105[24];
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;

  v110 = *MEMORY[0x24BDAC8D0];
  v104 = a3;
  v6 = *(_QWORD *)(a1 + 72);
  if ((*(_QWORD *)(v6 + 8) & 0x400000000000) == 0 && (*(_BYTE *)(v6 + 1) & 8) == 0)
    return 0;
  if ((*(_QWORD *)(a3 + 40) & 7) == 6)
    v8 = *(_DWORD *)(*(_QWORD *)(a3 + 40) & 0xFFFFFFFFFFFFFFF8);
  else
    v8 = 0;
  v103 = 0;
  v7 = (*(_QWORD *)v6 & 0x10) == 0;
  if ((*(_QWORD *)v6 & 0x10) != 0)
    v9 = 5287;
  else
    v9 = 3913;
  if ((sub_22EB1558C(a2) & 1) != 0 || sub_22EB1558C(a3))
  {
    v10 = *(_DWORD *)(a1 + 3056);
    if (v10 >= *(_DWORD *)(a1 + 3060))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v10 = *(_DWORD *)(a1 + 3056);
    }
    v7 = 0;
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 3048) + 16 * v10);
    *v11 = a3;
    v11[1] = a2;
    ++*(_DWORD *)(a1 + 3056);
    return v7;
  }
  v13 = *(_QWORD *)(a1 + 88) + 2128;
  *(_QWORD *)v105 = 0;
  *(_QWORD *)&v105[8] = v13;
  *(_DWORD *)&v105[16] = v9;
  *(_QWORD *)&__p = 0;
  *((_QWORD *)&__p + 1) = v13;
  LODWORD(v96) = 108;
  v14 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v14)
    v15 = *(_BYTE *)(v14 + 16) == 26;
  else
    v15 = 0;
  if (!v15)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v14 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0));
    else
      v14 = 0;
  }
  v16 = v8 & 0xFFFFFFFD;
  v17 = *(unsigned int *)(a2 + 24);
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (!v18 || *(_BYTE *)(v18 + 16) != 26)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v18 = sub_22F10CF48(v18);
    else
      v18 = 0;
  }
  v19 = sub_22EB156D8((int32x2_t *)a1, (uint64_t)v105, (uint64_t)&__p, v14, v17, v18, *(unsigned int *)(a3 + 24), (_BYTE *)&v103 + 1, &v103, 1, v16 == 1);
  if ((_QWORD)__p && *((_QWORD *)&__p + 1))
    sub_22E3BB10C(*((unint64_t *)&__p + 1), __p);
  if (*(_QWORD *)v105 && *(_QWORD *)&v105[8])
    sub_22E3BB10C(*(unint64_t *)&v105[8], *(unint64_t *)v105);
  if ((v19 & 1) == 0)
  {
    v28 = *(_QWORD *)(a1 + 72);
    if ((*(_BYTE *)(v28 + 1) & 2) != 0 && (*(_QWORD *)(v28 + 8) & 0x400000000000) != 0)
    {
      v29 = sub_22EB15CCC(a2);
      if (v29 != sub_22EB15CCC(v104))
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v104 + 24), 0x148Du, 0, (uint64_t)v105);
        LOBYTE(__p) = sub_22EB15CCC(a2);
        sub_22E894E38((uint64_t)v105, (unsigned __int8 *)&__p);
        sub_22E903BEC((unsigned int *)v105);
        v30 = *(_DWORD *)(a2 + 24);
        if (v30)
        {
          sub_22E8FCA40((_QWORD *)a1, v30, 0x6Cu, 0, (uint64_t)v102);
          sub_22E903BEC(v102);
        }
      }
    }
    return 0;
  }
  if (!HIBYTE(v103))
    return v7;
  v20 = *(_QWORD *)(*(_QWORD *)(v104 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (!v20 || *(_BYTE *)(v20 + 16) != 26)
    v20 = sub_22F10CF48(v20);
  if ((_BYTE)v103)
  {
    if ((v21 = *(_DWORD *)(a2 + 24)) == 0
      || (v22 = sub_22F1E361C(*(_QWORD **)(*(_QWORD *)(a1 + 88) + 1992), v21), v22 != 3) && v22
      || sub_22EFC01DC(a2, 0))
    {
      if (sub_22EFB9440(a2))
      {
        v23 = v104;
        v24 = *(_QWORD *)(a1 + 88);
        v25 = *(_QWORD *)(v20 + 24);
        v26 = (unsigned __int16)(*(_QWORD *)(v20 + 16) >> 38);
        sub_22E4913B4(v20, (uint64_t)&__p);
        v109 = v97;
        *(_OWORD *)v105 = __p;
        *(_DWORD *)&v105[20] = HIDWORD(v96);
        *(_DWORD *)&v105[16] = 1;
        v106 = 0u;
        v108 = 0;
        v107 = 0u;
        v27 = sub_22EF63D8C(v24, v25, (uint64_t *)(v20 + 40), v26, (__int128 *)v105, 0);
        v7 = 0;
        *(_QWORD *)(v23 + 48) = v27;
        return v7;
      }
    }
  }
  v31 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (!v31 || *(_BYTE *)(v31 + 16) != 26)
    v31 = sub_22F10CF48(v31);
  v32 = *(_QWORD *)(v31 + 16);
  v33 = (v32 >> 54) & 0xF;
  if ((_DWORD)v33 == 2)
  {
    v34 = (unsigned int *)((v31 + 8 * (unsigned __int16)(v32 >> 38) + 4 * ((v32 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
    v35 = v32 & 0x3C0000000000000;
    if (v35 == 0x80000000000000)
      v36 = *v34;
    else
      v36 = 0;
    v37 = &v34[2 * (v35 == 0x80000000000000)];
  }
  else
  {
    v37 = 0;
    v36 = 0;
  }
  if ((_DWORD)v33 == 7)
    LODWORD(v33) = 0;
  if ((_DWORD)v33 == 8)
    v38 = 5;
  else
    v38 = v33;
  v39 = v104;
  if (v38 == 6)
  {
    sub_22EFC77E8(v104, 1);
  }
  else
  {
    v85 = *(_QWORD *)(a1 + 88);
    v84 = *(_QWORD *)(v20 + 24);
    v40 = (unsigned __int16)(*(_QWORD *)(v20 + 16) >> 38);
    sub_22E4913B4(v20, (uint64_t)&__p);
    v109 = v97;
    *(_OWORD *)v105 = __p;
    *(_DWORD *)&v105[20] = HIDWORD(v96);
    *(_DWORD *)&v105[16] = v38;
    *(_QWORD *)&v106 = v37;
    *((_QWORD *)&v106 + 1) = v36;
    v107 = 0uLL;
    v108 = 0;
    *(_QWORD *)(v39 + 48) = sub_22EF63D8C(v85, v84, (uint64_t *)(v20 + 40), v40, (__int128 *)v105, 0);
  }
  if ((v38 - 1) <= 2 && (**(_QWORD **)(a1 + 72) & 0x10) != 0
    || (v41 = sub_22EFBFDCC(v104, 0, 0), v38 != 6) && (v41 & 1) != 0)
  {
    v7 = 0;
LABEL_76:
    v42 = 5290;
    goto LABEL_78;
  }
  if (v38 == 4)
  {
    v7 = 0;
    if ((**(_BYTE **)(a1 + 72) & 0x10) != 0)
      return v7;
    goto LABEL_76;
  }
  v42 = 3924;
  v7 = 1;
LABEL_78:
  *(_QWORD *)v105 = &v106;
  *(_OWORD *)&v105[8] = xmmword_22F44E310;
  sub_22F242C48((uint64_t)v98, (uint64_t)v105);
  switch((*(_QWORD *)(v31 + 16) >> 54) & 0xF)
  {
    case 1:
      v58 = (_DWORD *)v100;
      if ((unint64_t)(v99 - v100) <= 6)
      {
        v46 = "throw()";
        goto LABEL_84;
      }
      *(_DWORD *)(v100 + 3) = 690517871;
      *v58 = 1869768820;
      v83 = v100 + 7;
      goto LABEL_155;
    case 2:
      v59 = (_DWORD *)v100;
      if ((unint64_t)(v99 - v100) > 5)
      {
        *(_WORD *)(v100 + 4) = 10359;
        *v59 = 1869768820;
        v100 += 6;
      }
      else
      {
        llvm::raw_ostream::write((llvm::raw_ostream *)v98, "throw(");
      }
      v60 = *(_QWORD *)(v31 + 16);
      if ((v60 & 0x3C0000000000000) == 0x80000000000000)
      {
        v61 = (_DWORD *)((v31 + 8 * (unsigned __int16)(v60 >> 38) + 4 * ((v60 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
        v64 = *v61;
        v63 = (uint64_t *)(v61 + 2);
        v62 = v64;
        if (v64)
        {
          v65 = 8 * v62;
          v66 = 1;
          do
          {
            if ((v66 & 1) == 0)
            {
              if ((unint64_t)(v99 - v100) > 1)
              {
                *(_WORD *)v100 = 8236;
                v100 += 2;
              }
              else
              {
                llvm::raw_ostream::write((llvm::raw_ostream *)v98, ", ");
              }
            }
            v90 = sub_22E8FCD8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
            v91 = v67;
            v96 = 0;
            __p = 0uLL;
            sub_22F119374(v63, &__p, (uint64_t)&v90);
            if (v96 >= 0)
              p_p = (const char *)&__p;
            else
              p_p = (const char *)__p;
            llvm::raw_ostream::write((llvm::raw_ostream *)v98, p_p);
            if (SHIBYTE(v96) < 0)
              operator delete((void *)__p);
            v66 = 0;
            ++v63;
            v65 -= 8;
          }
          while (v65);
        }
      }
      goto LABEL_82;
    case 4:
      v69 = v100;
      if ((unint64_t)(v99 - v100) <= 0x17)
      {
        v46 = "__attribute__((nothrow))";
        goto LABEL_84;
      }
      *(_OWORD *)v100 = *(_OWORD *)"__attribute__((nothrow))";
      *(_QWORD *)(v69 + 16) = *(_QWORD *)"othrow))";
      v83 = v100 + 24;
      goto LABEL_155;
    case 5:
      if ((unint64_t)(v99 - v100) <= 7)
      {
        v46 = "noexcept";
        goto LABEL_84;
      }
      *(_QWORD *)v100 = 0x7470656378656F6ELL;
      v83 = v100 + 8;
      goto LABEL_155;
    case 6:
    case 7:
    case 8:
      v43 = (_QWORD *)v100;
      if ((unint64_t)(v99 - v100) > 8)
      {
        *(_BYTE *)(v100 + 8) = 40;
        *v43 = *(_QWORD *)"noexcept(";
        v100 += 9;
      }
      else
      {
        llvm::raw_ostream::write((llvm::raw_ostream *)v98, "noexcept(");
      }
      v44 = (_DWORD *)sub_22F257D3C(v31);
      *(_QWORD *)&__p = sub_22E8FCD8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
      *((_QWORD *)&__p + 1) = v45;
      sub_22F0D9044(v44, (uint64_t)v98, 0, &__p, 0, "\n", 1uLL, 0);
LABEL_82:
      if (v99 == v100)
      {
        v46 = ")";
LABEL_84:
        llvm::raw_ostream::write((llvm::raw_ostream *)v98, v46);
      }
      else
      {
        *(_BYTE *)v100 = 41;
        v83 = v100 + 1;
LABEL_155:
        v100 = v83;
      }
LABEL_85:
      v47 = v104;
      v48 = *(_QWORD *)(v104 + 56);
      v49 = (unint64_t *)(v48 & 0xFFFFFFFFFFFFFFF8);
      if ((v48 & 4) != 0)
        v49 = (unint64_t *)v49[4];
      if (!v49)
        goto LABEL_99;
      v52 = *v49;
      v51 = (uint64_t)(v49 + 1);
      v50 = v52;
      if ((v52 & 0xF) == 0 && *(_BYTE *)(*(_QWORD *)(v50 & 0xFFFFFFFFFFFFFFF0) + 16) == 37)
        v50 = sub_22F1169C8(v50, v51);
      if ((v50 & 0xF) != 0
        || (v50 ? (v53 = *(_BYTE *)(*(_QWORD *)(v50 & 0xFFFFFFFFFFFFFFF0) + 16) == 26) : (v53 = 0),
            !v53
         || (*(_BYTE *)(v50 + 23) & 0x10) != 0
         || (v54 = sub_22F141A3C(*(unsigned int *)(v51 + 12), 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72)),
             v47 = v104,
             !v54)))
      {
LABEL_99:
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v47 + 24), v42, 0, (uint64_t)&__p);
        v55 = sub_22E890024((uint64_t)&__p, (uint64_t *)&v104);
        v56 = v101[1];
        v90 = *v101;
        v91 = v56;
        sub_22F2F2210(v55, (uint64_t)&v90);
        goto LABEL_100;
      }
      v70 = v54;
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v104 + 24), v42, 0, (uint64_t)&__p);
      v71 = sub_22E890024((uint64_t)&__p, (uint64_t *)&v104);
      v72 = v101[1];
      v94[0] = *v101;
      v94[1] = v72;
      v73 = sub_22F2F2210(v71, (uint64_t)v94);
      v74 = (const void *)*v101;
      if (!*v101)
      {
        memset(&__dst, 0, sizeof(__dst));
        goto LABEL_137;
      }
      v75 = v101[1];
      if (v75 >= 0x7FFFFFFFFFFFFFF8)
        abort();
      if (v75 >= 0x17)
      {
        v77 = (v75 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v75 | 7) != 0x17)
          v77 = v75 | 7;
        v78 = v77 + 1;
        p_dst = (std::string *)operator new(v77 + 1);
        __dst.__r_.__value_.__l.__size_ = v75;
        __dst.__r_.__value_.__r.__words[2] = v78 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      }
      else
      {
        *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v101[1];
        p_dst = &__dst;
        if (!v75)
          goto LABEL_136;
      }
      memmove(p_dst, v74, v75);
LABEL_136:
      p_dst->__r_.__value_.__s.__data_[v75] = 0;
LABEL_137:
      v79 = std::string::insert(&__dst, 0, " ");
      v80 = v79->__r_.__value_.__r.__words[2];
      *(_OWORD *)v88 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
      v89 = v80;
      v79->__r_.__value_.__l.__size_ = 0;
      v79->__r_.__value_.__r.__words[2] = 0;
      v79->__r_.__value_.__r.__words[0] = 0;
      if (v89 >= 0)
        v81 = v88;
      else
        v81 = (void **)v88[0];
      if (v89 >= 0)
        v82 = HIBYTE(v89) & 0x7F;
      else
        v82 = (size_t)v88[1];
      sub_22E729148(v81, v82, v70, 0, (uint64_t)&v90);
      sub_22E890748(v73, &v90);
      if (v93 < 0)
        operator delete(v92);
      if (SHIBYTE(v89) < 0)
        operator delete(v88[0]);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__dst.__r_.__value_.__l.__data_);
LABEL_100:
      sub_22E903BEC((unsigned int *)&__p);
      v57 = *(_DWORD *)(a2 + 24);
      if (v57)
      {
        sub_22E8FCA40((_QWORD *)a1, v57, 0x6Cu, 0, (uint64_t)v86);
        sub_22E903BEC(v86);
      }
      llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v98);
      if (*(__int128 **)v105 != &v106)
        free(*(void **)v105);
      break;
    default:
      goto LABEL_85;
  }
  return v7;
}

uint64_t sub_22EB1558C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  result = 0;
  if (!a1 || (*(_DWORD *)(a1 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
    return result;
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v3)
    v4 = *(_BYTE *)(v3 + 16) == 26;
  else
    v4 = 0;
  if (!v4)
    v3 = sub_22F10CF48(v3);
  v5 = (*(_QWORD *)(v3 + 16) >> 54) & 0xFLL;
  if ((_DWORD)v5 == 11)
    return 1;
  if ((_DWORD)v5 != 9)
    return 0;
  v6 = *(_WORD *)(a1 + 80) & 0x7F;
  v7 = -40;
  if (v6 > 0x46)
  {
    if (v6 != 83)
    {
      if (v6 == 71)
      {
        v7 = -56;
        goto LABEL_28;
      }
      if (v6 == 81)
        goto LABEL_28;
LABEL_23:
      v8 = v6 - 52;
      v9 = v6 - 33 >= 5;
      v10 = -48;
      if (!v9)
        v10 = -64;
      if (v8 >= 6)
        v7 = v10;
      else
        v7 = -72;
    }
  }
  else
  {
    if (v6 > 0x18)
      goto LABEL_22;
    if (v6 != 16)
    {
      if (((1 << v6) & 0x1066) != 0)
        goto LABEL_28;
      if (v6 != 24)
      {
LABEL_22:
        if (v6 == 70)
        {
          v7 = -64;
          goto LABEL_28;
        }
        goto LABEL_23;
      }
    }
    v7 = -48;
  }
LABEL_28:
  v11 = *(_QWORD *)(a1 + 72 + v7 + 16);
  v12 = (_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
  if ((v11 & 4) != 0)
    v12 = (_QWORD *)*v12;
  if (v12)
    v13 = v12 - 8;
  else
    v13 = 0;
  return (*((unsigned __int8 *)v13 + 74) >> 1) & 1;
}

uint64_t sub_22EB156D8(int32x2_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _BYTE *a8, _BYTE *a9, char a10, char a11)
{
  int v13;
  int v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  _DWORD *v36;
  uint64_t *v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _DWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  unsigned int v45;
  uint64_t v46;
  void *v47;
  void **v48;
  uint64_t *v49;
  int v50;
  void *v51;
  void *v52;
  int v53;
  int v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v66;
  _QWORD *v67;
  BOOL v68;
  unsigned __int8 *v69;
  int32x2_t v70;
  unsigned __int8 *v71;
  int32x2_t v72;
  char v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unsigned int v80[24];
  unsigned int v81[24];
  uint64_t (**v82)();
  void **v83;
  char v84;
  int32x2_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  int v89;
  _BYTE v90[112];
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  _QWORD v95[16];

  v13 = a5;
  v95[14] = *MEMORY[0x24BDAC8D0];
  if (a8)
    *a8 = 0;
  if (a9)
    *a9 = 0;
  v17 = a7;
  result = sub_22EB14850(a1, a7, a4, a4, a5, a6, a7, (uint64_t)a8);
  if (result)
  {
    v24 = result;
    result = sub_22EB14850(a1, v17, a6, v19, v20, v21, v22, v23);
    if (result)
    {
      v25 = result;
      v78 = a2;
      v79 = v13;
      v26 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(result + 16);
      v28 = sub_22F113A44(v24);
      v29 = sub_22F113A44(v25);
      if (!(v28 | v29))
        return 0;
      v30 = (v26 >> 54) & 0xF;
      v31 = (v27 >> 54) & 0xF;
      if (v28 == 2 && (_DWORD)v30 != 2 && v29 == 2 && (_DWORD)v31 != 2)
      {
        v32 = v79;
        if ((a10 & 1) != 0)
          return 0;
        v77 = a3;
        if ((_DWORD)v30 || (_DWORD)v31 != 7)
        {
          result = 0;
          if ((_DWORD)v30 != 7)
            return result;
          v33 = 0;
          if ((_DWORD)v31)
            return result;
        }
        else
        {
          LOBYTE(result) = 0;
          v33 = 0;
        }
LABEL_51:
        if ((*(_BYTE *)(*(_QWORD *)&a1[9] + 1) & 2) == 0 || !a11)
          goto LABEL_76;
        if (v33 && (_DWORD)v31 == 0)
          v55 = v24;
        else
          v55 = 0;
        if ((((_DWORD)v30 == 0) & result) != 0)
          v55 = v25;
        if (!v55)
          goto LABEL_76;
        v56 = *(_QWORD *)(v55 + 16);
        if ((v56 & 0x3C0000000000000) != 0x80000000000000)
          goto LABEL_76;
        v57 = (v55 + 8 * (unsigned __int16)(v56 >> 38) + 4 * ((v56 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8;
        if (*(_DWORD *)v57 != 1)
          goto LABEL_76;
        v58 = v30;
        v59 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v57 + 8) & 0xFFFFFFFFFFFFFFF0));
        LODWORD(v30) = v58;
        if (!v59 || (*(_DWORD *)(v59 + 28) & 0x7Fu) - 35 > 2)
          goto LABEL_76;
        v60 = *(_QWORD *)(v59 + 40) & 0xFFFFFFFFFFFFFFF8;
        if ((*(_QWORD *)(v59 + 40) & 7) != 0 || v60 == 0)
          goto LABEL_76;
        v62 = *(_QWORD *)(v60 + 16);
        if (*(_DWORD *)v62 != 9)
          goto LABEL_76;
        v63 = *(_QWORD *)(v62 + 16);
        v64 = *(unsigned __int8 *)(v62 + 24);
        if (v63 != 0x6F6C6C615F646162 || v64 != 99)
          goto LABEL_76;
        v66 = *(_QWORD *)(v59 + 16);
        v67 = (_QWORD *)(v66 & 0xFFFFFFFFFFFFFFF8);
        if ((v66 & 4) != 0)
        {
          v67 = (_QWORD *)*v67;
          if (v67)
          {
LABEL_75:
            v68 = sub_22EFC84D4((unint64_t)v67);
            LODWORD(v30) = v58;
            if (v68)
              return 0;
          }
        }
        else if (v67)
        {
          goto LABEL_75;
        }
LABEL_76:
        if (a8 && (_DWORD)v30 && !(_DWORD)v31)
        {
          result = 1;
          *a8 = 1;
          if (a9)
          {
            if (!v28)
              *a9 = 1;
          }
        }
        else
        {
          sub_22E90379C(a1, v17, v78, 0, (uint64_t)v81);
          sub_22E903BEC(v81);
          result = 1;
          if (*(_DWORD *)(v77 + 16) && v32)
          {
            sub_22E90379C(a1, v32, v77, 0, (uint64_t)v80);
            sub_22E903BEC(v80);
            return 1;
          }
        }
        return result;
      }
      v32 = v79;
      v77 = a3;
      if ((_DWORD)v30 != 6 || (_DWORD)v31 != 6)
      {
        LOBYTE(result) = (_DWORD)v31 == 2;
        v33 = (_DWORD)v30 == 2;
        if ((_DWORD)v30 == 2 && (_DWORD)v31 == 2)
        {
          LODWORD(v34) = 0;
          v91 = v95;
          v92 = (uint64_t)v95;
          v93 = 8;
          v94 = 0;
          v86 = v90;
          v87 = v90;
          v88 = 8;
          v89 = 0;
          v35 = *(_QWORD *)(v24 + 16);
          if ((v35 & 0x3C0000000000000) == 0x80000000000000)
          {
            v36 = (_DWORD *)((v24 + 8 * (unsigned __int16)(v35 >> 38) + 4 * ((v35 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
            v38 = *v36;
            v37 = (uint64_t *)(v36 + 2);
            v34 = v38;
            if (v38)
            {
              v74 = v30;
              v39 = 8 * v34;
              do
              {
                v40 = *v37++;
                sub_22E3BA850((uint64_t)&v91, (const void *)(*(_QWORD *)(*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
                v39 -= 8;
              }
              while (v39);
              LODWORD(v34) = HIDWORD(v93);
              v32 = v79;
              LODWORD(v30) = v74;
            }
          }
          v41 = *(_QWORD *)(v25 + 16);
          if ((v41 & 0x3C0000000000000) == 0x80000000000000
            && (v42 = (_DWORD *)((v25 + 8 * (unsigned __int16)(v41 >> 38) + 4 * ((v41 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8),
                v45 = *v42,
                v44 = v42 + 2,
                (v43 = v45) != 0))
          {
            v75 = v30;
            v46 = 8 * v43;
            while (1)
            {
              v47 = (void *)(*(_QWORD *)(*(_QWORD *)((*v44 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0);
              v48 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v91, v47);
              v49 = (uint64_t *)v92 == v91 ? (uint64_t *)((char *)&v93 + 4) : &v93;
              if (v48 == (void **)(v92 + 8 * *(unsigned int *)v49))
                break;
              sub_22E3BA850((uint64_t)&v86, v47);
              ++v44;
              v46 -= 8;
              if (!v46)
              {
                v50 = HIDWORD(v88);
                v51 = v87;
                LODWORD(v34) = HIDWORD(v93);
                v32 = v79;
                LODWORD(v30) = v75;
                goto LABEL_37;
              }
            }
            v52 = v86;
            v51 = v87;
            v32 = v79;
            LODWORD(v30) = v75;
          }
          else
          {
            v50 = HIDWORD(v88);
            v51 = v87;
LABEL_37:
            v52 = v86;
            if ((_DWORD)v34 - v94 == v50 - v89)
            {
              if (v51 != v86)
                free(v51);
              if ((uint64_t *)v92 != v91)
                free((void *)v92);
              return 0;
            }
          }
          LODWORD(v31) = 2;
          if (v51 != v52)
          {
            v53 = v30;
            free(v51);
            LODWORD(v30) = v53;
          }
          if ((uint64_t *)v92 != v91)
          {
            v54 = v30;
            free((void *)v92);
            LODWORD(v30) = v54;
          }
          LOBYTE(result) = 1;
          v33 = 1;
        }
        goto LABEL_51;
      }
      v76 = v30;
      v91 = &v93;
      v92 = 0x2000000000;
      v86 = &v88;
      v87 = (void *)0x2000000000;
      v69 = (unsigned __int8 *)sub_22F257D3C(v24);
      v70 = a1[11];
      v84 = 1;
      v82 = &off_24FAC6E70;
      v83 = (void **)&v91;
      v85 = v70;
      sub_22F0E9FEC(&v82, v69);
      v71 = (unsigned __int8 *)sub_22F257D3C(v25);
      v72 = a1[11];
      v84 = 1;
      v82 = &off_24FAC6E70;
      v83 = &v86;
      v85 = v72;
      sub_22F0E9FEC(&v82, v71);
      v73 = llvm::FoldingSetNodeID::operator==();
      if (v86 != &v88)
        free(v86);
      v32 = v79;
      if (v91 != &v93)
        free(v91);
      result = 0;
      v33 = 0;
      LODWORD(v30) = v76;
      if ((v73 & 1) == 0)
        goto LABEL_51;
    }
  }
  return result;
}

BOOL sub_22EB15CCC(uint64_t a1)
{
  _BOOL8 result;
  int v3;
  BOOL v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;

  v4 = (*(_DWORD *)(a1 + 28) & 0x7F) == 57;
  result = v4;
  if (!v4)
  {
    if ((*(_QWORD *)(a1 + 40) & 7) != 6)
      return 0;
    v3 = *(_DWORD *)(*(_QWORD *)(a1 + 40) & 0xFFFFFFFFFFFFFFF8);
    v4 = v3 == 4 || v3 == 2;
    if (!v4)
      return 0;
  }
  v5 = *(_QWORD *)(a1 + 56);
  if ((v5 & 4) != 0)
  {
    v6 = *(_QWORD **)((v5 & 0xFFFFFFFFFFFFFFF8) + 32);
    if (!v6)
      return result;
  }
  else
  {
    if (v5 < 8)
      return result;
    v6 = (_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  }
  v7 = *(_QWORD *)(*v6 & 0xFFFFFFFFFFFFFFF0);
  if (v7)
    v8 = *(_BYTE *)(v7 + 16) == 26;
  else
    v8 = 0;
  if (!v8)
    v7 = sub_22F10CF48(v7);
  return (*(_WORD *)(v7 + 22) & 0x3C0) == 0;
}

uint64_t sub_22EB15D70(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5)
{
  _QWORD *v5;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  unint64_t v14;
  unint64_t v15;
  int v16;

  v5 = *(_QWORD **)(a1 + 72);
  if ((v5[1] & 0x400000000000) == 0)
    return 0;
  if ((*v5 & 0x10) != 0)
    v8 = 5287;
  else
    v8 = 3913;
  v9 = *(_QWORD *)(a1 + 88) + 2128;
  v14 = 0;
  v15 = v9;
  v16 = v8;
  v11 = 0;
  v12 = v9;
  v13 = 108;
  v10 = sub_22EB156D8(a1, &v14, &v11, a2, a3, a4, a5, 0, 0, 0);
  if (v11 && v12)
    sub_22E3BB10C(v12, v11);
  if (v14 && v15)
    sub_22E3BB10C(v15, v14);
  if ((**(_BYTE **)(a1 + 72) & 0x10) != 0)
    return 0;
  else
    return v10;
}

uint64_t sub_22EB15E40(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  int v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t i;
  _QWORD *v27;
  unsigned int v29[3];
  char v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD v36[2];
  unsigned int v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  _QWORD v42[5];
  void *v43;
  uint64_t v44;
  _DWORD v45[26];
  uint64_t v46;
  __int16 v47;
  char v48;
  uint64_t v49;

  v4 = a2;
  v49 = *MEMORY[0x24BDAC8D0];
  v6 = (uint64_t *)(a2 & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (v7)
  {
    v8 = *(_DWORD *)(v7 + 16);
    if ((v8 & 0xFE) == 0x28)
    {
      if ((v8 & 0x100000) != 0)
      {
        do
        {
LABEL_4:
          while (1)
          {
            v7 = *(_QWORD *)(*(_QWORD *)(v7 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v7)
              break;
            v9 = *(_DWORD *)(v7 + 16);
            if ((v9 & 0xFE) != 0x28)
              break;
            if ((v9 & 0x100000) == 0)
              goto LABEL_13;
          }
          v7 = sub_22F10CF48(v7);
        }
        while ((*(_DWORD *)(v7 + 16) & 0x100000) != 0);
      }
      goto LABEL_13;
    }
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
  {
    v7 = sub_22F10CF48(v7);
    if (v7)
    {
      if ((*(_DWORD *)(v7 + 16) & 0x100000) != 0)
        goto LABEL_4;
LABEL_13:
      v10 = 0;
      v4 = *(_QWORD *)(v7 + 32);
      v6 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFFF0);
      goto LABEL_15;
    }
  }
  v10 = 1;
LABEL_15:
  v11 = a3 & 0xFFFFFFFFFFFFFFF0;
  v12 = v6[1];
  if (*(_QWORD *)(*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0))
    return 1;
  v13 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v13 != 39 && v13 != 31)
    goto LABEL_49;
  if ((v10 & 1) == 0)
  {
    if ((v4 & 1) != 0)
    {
      if ((v4 & 4) != 0)
        return 0;
    }
    else
    {
      v17 = 0;
      if ((v4 & 4) != 0 || (v12 & 1) == 0)
        return v17;
    }
    if ((v12 & 4) == 0)
      goto LABEL_22;
    return 0;
  }
LABEL_22:
  v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v15)
    v16 = (*(_DWORD *)(v15 + 16) & 0xFF800FF) == 114294795;
  else
    v16 = 0;
  if (v16)
    return 1;
  v32 = 0;
  if (sub_22ECFD738(a1, a3, v4, 0, &v30) || (sub_22ECFAE0C(a1, a3, v4, &v32) & 1) != 0)
    return 1;
  v18 = *(_QWORD *)v11;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
  {
    return 0;
  }
  v31 = 0;
  *(_QWORD *)v29 = 0;
  v19 = *(_QWORD *)(a1 + 88);
  v20 = sub_22F10ACF8(v18);
  a3 = sub_22EF67F34(v19, v20, &v31);
  v21 = *(_QWORD *)(a1 + 88);
  v22 = sub_22F10ACF8(*v6);
  v4 = sub_22EF67F34(v21, v22, v29);
  v17 = sub_22E95F24C(v29, v31);
  if (!(_DWORD)v17)
    return v17;
  v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v11 = a3 & 0xFFFFFFFFFFFFFFF0;
  v24 = v23 && (*(_DWORD *)(v23 + 16) & 0xFF800FF) == 86507531;
  if (v24
    && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
    && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFF800FF) != 0x528000B
    && *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                + 16)
     - 25 >= 2)
  {
    return v17;
  }
LABEL_49:
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 45
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 45)
  {
    return 0;
  }
  v32 = 0;
  v33 = (uint64_t)&v33;
  v34 = &v33;
  v35 = 0;
  v36[0] = 1;
  for (i = 40; i != 168; i += 16)
    *(unint64_t *)((char *)&v32 + i) = 0;
  v38 = v42;
  v39 = v42;
  v40 = 4;
  v41 = 0;
  v42[4] = 0;
  v43 = v45;
  v44 = 0x400000000;
  v45[24] = 0;
  v46 = 0;
  v47 = 257;
  v48 = 0;
  v17 = 0;
  if (sub_22EAAB2A0(a1, 0, a3, v4, &v32))
  {
    v31 = *(_QWORD *)(*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
    v27 = sub_22EFB50E0(v36, &v31);
    v17 = ((_DWORD)v27[1] & 1u) + (*((_DWORD *)v27 + 2) >> 1) <= 1
       && sub_22E90B400(a1, 0, v4, a3, (uint64_t)(v34 + 2), 0, 1, 1) == 0;
  }
  if (v43 != v45)
    free(v43);
  if (v39 != v38)
    free(v39);
  if ((v36[0] & 1) == 0)
    llvm::deallocate_buffer((llvm *)v36[1], (void *)(16 * v37));
  sub_22E687D9C(&v33);
  return v17;
}

uint64_t sub_22EB162C4(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, unsigned int a9)
{
  uint64_t result;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v25;
  int v26;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  unsigned int v32;
  unsigned int *v33;
  _DWORD *v36;
  uint64_t v37;
  unint64_t *v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  int v44;
  unint64_t v45;
  _DWORD *v46;
  uint64_t v47;
  unint64_t *v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  _BYTE v55[96];
  unsigned int v56[24];
  _BYTE v57[96];
  unsigned int v58[24];
  _BYTE v59[96];
  unsigned int v60[26];

  if ((*(_QWORD *)(a1[9] + 8) & 0x400000000000) == 0)
    return 0;
  result = sub_22EB14850(a1, a7);
  if (result)
  {
    v17 = result;
    v18 = a9 ? a9 : a7;
    v19 = v18;
    result = sub_22EB14850(a1, v18);
    if (result)
    {
      v20 = result;
      v53 = a7;
      v54 = v19;
      v21 = (*(_QWORD *)(v17 + 16) >> 54) & 0xFLL;
      v22 = *(_QWORD *)(result + 16);
      v23 = (v22 >> 54) & 0xF;
      if ((_DWORD)v21 == 6 || (_DWORD)v23 == 6)
        return 0;
      v52 = a4;
      v25 = sub_22F113A44(v17);
      v26 = sub_22F113A44(v20);
      if (v25 == 2 && (_DWORD)v21 != 2 || v26 == 0)
      {
        v29 = (uint64_t)a1;
        v30 = a3;
        v31 = (_QWORD *)v17;
        v32 = v53;
        return sub_22EB16654(v29, v30, v31, v32, v20, v54);
      }
      if ((_DWORD)v21 == 4 && *(_DWORD *)(a5 + 16) && v26 == 2 && !v25)
      {
        sub_22E90379C(a1, v54, a5, 0, (uint64_t)v60);
        sub_22E903BEC(v60);
        if (*(_DWORD *)(v52 + 16))
        {
          sub_22E90379C(a1, v53, v52, 0, (uint64_t)v59);
          v33 = (unsigned int *)v59;
          goto LABEL_65;
        }
        return 1;
      }
      if (((_DWORD)v23 == 2 || v26 != 2) && v25 != 0)
      {
        v32 = v53;
        if ((v22 & 0x3C0000000000000) == 0x80000000000000)
        {
          v36 = (_DWORD *)((v20 + 8 * (unsigned __int16)(v22 >> 38) + 4 * ((v22 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
          v39 = *v36;
          v38 = (unint64_t *)(v36 + 2);
          v37 = v39;
          if (v39)
          {
            v51 = &v38[v37];
            while (1)
            {
              v40 = *v38;
              v41 = *(_QWORD *)(*v38 & 0xFFFFFFFFFFFFFFF0);
              if (v41)
              {
                v42 = *(_DWORD *)(v41 + 16);
                if ((v42 & 0xFE) == 0x28)
                  goto LABEL_46;
              }
              if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v41 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
              {
                v43 = v54;
                goto LABEL_55;
              }
              v41 = sub_22F10CF48(v41);
              v43 = v54;
              if (v41)
                break;
LABEL_55:
              v45 = *(_QWORD *)(v17 + 16);
              if ((v45 & 0x3C0000000000000) != 0x80000000000000
                || (v46 = (_DWORD *)((v17 + 40 + 8 * (unsigned __int16)(v45 >> 38) + 4 * ((v45 >> 59) & 1) + 7) & 0xFFFFFFFFFFFFFFF8),
                    v49 = *v46,
                    v48 = (unint64_t *)(v46 + 2),
                    (v47 = v49) == 0))
              {
LABEL_63:
                sub_22E90379C(a1, v43, a2, 0, (uint64_t)v56);
                sub_22E903BEC(v56);
                if (*(_DWORD *)(v52 + 16))
                {
                  sub_22E90379C(a1, v53, v52, 0, (uint64_t)v55);
                  v33 = (unsigned int *)v55;
LABEL_65:
                  sub_22E903BEC(v33);
                }
                return 1;
              }
              v50 = 8 * v47;
              while ((sub_22EB15E40((uint64_t)a1, *v48, v40) & 1) == 0)
              {
                ++v48;
                v50 -= 8;
                if (!v50)
                  goto LABEL_63;
              }
              ++v38;
              v32 = v53;
              if (v38 == v51)
                goto LABEL_62;
            }
            v42 = *(_DWORD *)(v41 + 16);
LABEL_46:
            if ((v42 & 0x100000) != 0)
            {
              v43 = v54;
              do
              {
                v41 = *(_QWORD *)(*(_QWORD *)(v41 + 32) & 0xFFFFFFFFFFFFFFF0);
                if (v41)
                {
                  v44 = *(_DWORD *)(v41 + 16);
                  if ((v44 & 0xFE) == 0x28)
                    continue;
                }
                v41 = sub_22F10CF48(v41);
                v44 = *(_DWORD *)(v41 + 16);
              }
              while ((v44 & 0x100000) != 0);
            }
            else
            {
              v43 = v54;
            }
            v40 = *(_QWORD *)(v41 + 32);
            goto LABEL_55;
          }
        }
LABEL_62:
        v29 = (uint64_t)a1;
        v30 = a3;
        v31 = (_QWORD *)v17;
        return sub_22EB16654(v29, v30, v31, v32, v20, v54);
      }
      sub_22E90379C(a1, v54, a2, 0, (uint64_t)v58);
      sub_22E903BEC(v58);
      if (*(_DWORD *)(v52 + 16))
      {
        sub_22E90379C(a1, v53, v52, 0, (uint64_t)v57);
        v33 = (unsigned int *)v57;
        goto LABEL_65;
      }
      return 1;
    }
  }
  return result;
}

uint64_t sub_22EB16654(uint64_t a1, uint64_t *a2, _QWORD *a3, unsigned int a4, uint64_t a5, unsigned int a6)
{
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unsigned __int8 *v31;
  unint64_t v32;
  int v33;
  unsigned __int8 *v34;
  unint64_t v35;

  sub_22E78D434((uint64_t)&v34, a2);
  v12 = v34;
  if (!v34)
  {
    v12 = (unsigned __int8 *)sub_22E3B8AAC(v35);
    v34 = v12;
  }
  v12[*v12 + 1] = 2;
  v13 = v34;
  v14 = *v34;
  *v34 = v14 + 1;
  *(_QWORD *)&v13[8 * v14 + 16] = 0;
  v15 = *(_QWORD *)(a1 + 88) + 2128;
  v31 = 0;
  v32 = v15;
  v33 = 0;
  v16 = sub_22EB1684C(a1, (uint64_t)&v34, (uint64_t)&v31, a3[3], a4, *(_QWORD *)(a5 + 24), a6);
  if (v31 && v32)
    sub_22E3BB10C(v32, (unint64_t)v31);
  if ((v16 & 1) != 0)
  {
    v17 = 1;
  }
  else
  {
    v18 = a3[2];
    if ((v18 & 0x3FFFC000000000) != 0)
    {
      v19 = a3 + 5;
      v20 = (uint64_t *)(a5 + 40);
      v21 = (unsigned __int16)(v18 >> 38) - 1;
      do
      {
        sub_22E78D434((uint64_t)&v31, a2);
        v22 = v31;
        if (!v31)
        {
          v22 = (unsigned __int8 *)sub_22E3B8AAC(v32);
          v31 = v22;
        }
        v22[*v22 + 1] = 2;
        v23 = v31;
        v24 = *v31;
        *v31 = v24 + 1;
        *(_QWORD *)&v23[8 * v24 + 16] = 1;
        v25 = *(_QWORD *)(a1 + 88) + 2128;
        v28 = 0;
        v29 = v25;
        v30 = 0;
        v17 = sub_22EB1684C(a1, (uint64_t)&v31, (uint64_t)&v28, *v19, a4, *v20, a6);
        if (v28 && v29)
          sub_22E3BB10C(v29, v28);
        if (v31 && v32)
          sub_22E3BB10C(v32, (unint64_t)v31);
        if (v21)
          v26 = v17;
        else
          v26 = 1;
        --v21;
        ++v20;
        ++v19;
      }
      while (v26 != 1);
    }
    else
    {
      v17 = 0;
    }
  }
  if (v34 && v35)
    sub_22E3BB10C(v35, (unint64_t)v34);
  return v17;
}

uint64_t sub_22EB1684C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, unsigned int a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = sub_22EB16A4C(a4);
  if (v13
    && (v14 = v13, (v15 = sub_22EB16A4C(a6)) != 0)
    && (*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) & 0x400000000000) != 0)
  {
    return sub_22EB156D8(a1, a2, a3, v14, a5, v15, a7, 0, 0, 0);
  }
  else
  {
    return 0;
  }
}

BOOL sub_22EB168F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  int v26;

  v5 = sub_22EB16A4C(a3);
  v6 = v5;
  if (v5)
  {
    if ((sub_22F1138E4(v5) & 1) != 0)
      return 0;
    v7 = sub_22EB16A4C(*(_QWORD *)(a2 + 8));
    if (!v7)
      return 0;
    v8 = v7;
    if ((sub_22F1138E4(v7) & 1) != 0)
    {
      return 0;
    }
    else
    {
      if ((**(_QWORD **)(a1 + 72) & 0x800) != 0)
        v10 = 6668;
      else
        v10 = 3578;
      if ((**(_QWORD **)(a1 + 72) & 0x800) != 0)
        v11 = 6476;
      else
        v11 = 3200;
      v12 = *(_QWORD *)(a1 + 88) + 2128;
      v24 = 0;
      v25 = v12;
      v26 = v10;
      v21 = 0;
      v22 = v12;
      v23 = v11;
      v18 = 0;
      v19 = v12;
      v20 = 0;
      v15 = 0;
      v16 = v12;
      v17 = 0;
      sub_22F0D4E74(a2);
      v14 = sub_22EB162C4((_QWORD *)a1, (uint64_t)&v24, (uint64_t *)&v21, (uint64_t)&v18, (uint64_t)&v15, v6, v13, v8, 0);
      v6 = 0;
      if (v14)
        v6 = (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 8) == 0;
      if (v15 && v16)
        sub_22E3BB10C(v16, v15);
      if (v18 && v19)
        sub_22E3BB10C(v19, v18);
      if (v21 && v22)
        sub_22E3BB10C(v22, v21);
      if (v24 && v25)
        sub_22E3BB10C(v25, v24);
    }
  }
  return v6;
}

uint64_t sub_22EB16A4C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t result;
  BOOL v6;

  v1 = a1 & 0xFFFFFFFFFFFFFFF0;
  v2 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  v3 = *(unsigned __int8 *)(v2 + 16);
  if (!v2 || v3 != 39)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
      goto LABEL_6;
    v2 = sub_22F10CF48(v2);
    if (!v2)
    {
      v2 = *(_QWORD *)v1;
      v3 = *(unsigned __int8 *)(*(_QWORD *)v1 + 16);
LABEL_6:
      if ((v3 & 0xFE) == 0x28)
        goto LABEL_9;
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
      {
        v2 = sub_22F10CF48(v2);
        if (v2)
        {
LABEL_9:
          if ((*(_BYTE *)(v2 + 18) & 0x10) != 0)
          {
            do
            {
              while (1)
              {
                v2 = *(_QWORD *)(*(_QWORD *)(v2 + 32) & 0xFFFFFFFFFFFFFFF0);
                if (!v2)
                  break;
                v4 = *(_DWORD *)(v2 + 16);
                if ((v4 & 0xFE) != 0x28)
                  break;
                if ((v4 & 0x100000) == 0)
                  goto LABEL_20;
              }
              v2 = sub_22F10CF48(v2);
            }
            while ((*(_DWORD *)(v2 + 16) & 0x100000) != 0);
          }
          goto LABEL_20;
        }
        v2 = *(_QWORD *)v1;
        v3 = *(unsigned __int8 *)(*(_QWORD *)v1 + 16);
      }
      if (v3 != 31)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 31)
          goto LABEL_21;
        v2 = sub_22F10CF48(v2);
        if (!v2)
          goto LABEL_21;
      }
    }
  }
LABEL_20:
  v1 = *(_QWORD *)(v2 + 32) & 0xFFFFFFFFFFFFFFF0;
LABEL_21:
  result = *(_QWORD *)v1;
  if (*(_QWORD *)v1)
    v6 = *(_BYTE *)(*(_QWORD *)v1 + 16) == 26;
  else
    v6 = 0;
  if (!v6)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      return sub_22F10CF48(result);
    else
      return 0;
  }
  return result;
}

uint64_t sub_22EB16B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unsigned int v17;
  uint64_t *v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  unint64_t v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  int v36;

  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_BYTE *)(v6 + 16) == 26;
  else
    v7 = 0;
  if (!v7)
    v6 = sub_22F10CF48(v6);
  if ((*(_QWORD *)(v6 + 16) & 0x3C0000000000000) == 0x2C0000000000000)
    return 0;
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x39)
  {
    v9 = *(_WORD *)(a2 + 80) & 0x7F;
    v10 = -40;
    if (v9 > 0x46)
    {
      if (v9 == 83)
        goto LABEL_25;
      if (v9 == 71)
      {
        v10 = -56;
        goto LABEL_25;
      }
      if (v9 != 81)
      {
LABEL_20:
        v11 = v9 - 52;
        v12 = v9 - 33 >= 5;
        v13 = -48;
        if (!v12)
          v13 = -64;
        if (v11 >= 6)
          v10 = v13;
        else
          v10 = -72;
      }
    }
    else
    {
      if (v9 > 0x18)
        goto LABEL_19;
      if (v9 == 16)
      {
LABEL_12:
        v10 = -48;
        goto LABEL_25;
      }
      if (((1 << v9) & 0x1066) == 0)
      {
        if (v9 == 24)
          goto LABEL_12;
LABEL_19:
        if (v9 == 70)
        {
          v10 = -64;
          goto LABEL_25;
        }
        goto LABEL_20;
      }
    }
LABEL_25:
    v14 = *(_QWORD *)(a2 + 72 + v10 + 16);
    v15 = (_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF8);
    if ((v14 & 4) != 0)
      v15 = (_QWORD *)*v15;
    if (v15)
      v16 = v15 - 8;
    else
      v16 = 0;
    if ((sub_22EFC7ADC((unint64_t)(v16 + 8)) & 1) != 0)
      return 0;
  }
  if ((sub_22EB1558C(a3) & 1) != 0 || sub_22EB1558C(a2))
  {
    v17 = *(_DWORD *)(a1 + 3008);
    if (v17 >= *(_DWORD *)(a1 + 3012))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v17 = *(_DWORD *)(a1 + 3008);
    }
    v8 = 0;
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 3000) + 16 * v17);
    *v18 = a2;
    v18[1] = a3;
    ++*(_DWORD *)(a1 + 3008);
  }
  else
  {
    if ((**(_QWORD **)(a1 + 72) & 0x10) != 0)
      v20 = 5324;
    else
      v20 = 4459;
    v21 = *(_QWORD *)(a1 + 88) + 2128;
    v34 = 0;
    v35 = v21;
    v36 = v20;
    v31 = 0;
    v32 = v21;
    v33 = 3200;
    v28 = 0;
    v29 = v21;
    v30 = 5923;
    v25 = 0;
    v26 = v21;
    v27 = 5324;
    v22 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (!v22 || *(_BYTE *)(v22 + 16) != 26)
      v22 = sub_22F10CF48(v22);
    v23 = *(_DWORD *)(a3 + 24);
    v24 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (!v24 || *(_BYTE *)(v24 + 16) != 26)
      v24 = sub_22F10CF48(v24);
    v8 = sub_22EB162C4((_QWORD *)a1, (uint64_t)&v34, (uint64_t *)&v31, (uint64_t)&v28, (uint64_t)&v25, v22, v23, v24, *(_DWORD *)(a2 + 24));
    if (v25 && v26)
      sub_22E3BB10C(v26, v25);
    if (v28 && v29)
      sub_22E3BB10C(v29, v28);
    if (v31 && v32)
      sub_22E3BB10C(v32, v31);
    if (v34 && v35)
      sub_22E3BB10C(v35, v34);
  }
  return v8;
}

uint64_t sub_22EB16E5C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  unsigned __int8 *v12;
  uint64_t v13;
  BOOL v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  int v19;
  BOOL v20;
  unsigned int v21;

  if (a3 && (*(_DWORD *)(a3 + 28) & 0x7Eu) - 52 <= 5 && sub_22E4725AC(a3))
    return 0;
  if (!a2 || (**(_QWORD **)(a1 + 72) & 0x800) == 0 || (*(_BYTE *)a2 + 118) > 4u)
  {
    if (!a3 || (*(_DWORD *)(a3 + 28) & 0x7Fu) - 48 > 0x1A)
      return 2;
    v15 = (_QWORD *)(a3 + 48);
    goto LABEL_24;
  }
  a2 = *(_QWORD *)(a2 + *(unsigned __int8 *)(a2 + 3));
  v9 = (uint64_t *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v10)
    v11 = (*(_DWORD *)(v10 + 16) & 0xFF800FF) == 136839179;
  else
    v11 = 0;
  if (v11)
  {
    v12 = sub_22EFFA6B0((unsigned __int8 *)a2);
    a2 = (uint64_t)v12;
    if ((*v12 & 0xFE) == 0x70)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)v12 + 3) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v13)
        v14 = *(_BYTE *)(v13 + 16) == 31;
      else
        v14 = 0;
      if (!v14)
        v13 = sub_22F10CF48(v13);
      v15 = (_QWORD *)(v13 + 32);
    }
    else
    {
      v15 = (_QWORD *)(*((_QWORD *)v12 + 3) + 48);
    }
LABEL_24:
    v9 = (uint64_t *)(*v15 & 0xFFFFFFFFFFFFFFF0);
  }
  v16 = *v9;
  v17 = *(unsigned __int8 *)(*v9 + 16);
  if (*v9)
    v18 = v17 == 26;
  else
    v18 = 0;
  if (!v18)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
      goto LABEL_32;
    v16 = sub_22F10CF48(*v9);
    if (!v16)
    {
      v16 = *v9;
      v17 = *(unsigned __int8 *)(*v9 + 16);
LABEL_32:
      if (v17 == 39)
        goto LABEL_53;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      {
        v16 = sub_22F10CF48(v16);
        if (v16)
          goto LABEL_53;
        v16 = *v9;
        v17 = *(unsigned __int8 *)(*v9 + 16);
      }
      if ((v17 & 0xFE) == 0x28)
        goto LABEL_39;
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
      {
        v16 = sub_22F10CF48(v16);
        if (v16)
        {
LABEL_39:
          if ((*(_BYTE *)(v16 + 18) & 0x10) != 0)
          {
            do
            {
              v16 = *(_QWORD *)(*(_QWORD *)(v16 + 32) & 0xFFFFFFFFFFFFFFF0);
              if (v16)
              {
                v19 = *(_DWORD *)(v16 + 16);
                if ((v19 & 0xFE) == 0x28)
                  continue;
              }
              v16 = sub_22F10CF48(v16);
              v19 = *(_DWORD *)(v16 + 16);
            }
            while ((v19 & 0x100000) != 0);
          }
LABEL_53:
          v16 = *(_QWORD *)(*(_QWORD *)(v16 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v16)
            v20 = *(_BYTE *)(v16 + 16) == 26;
          else
            v20 = 0;
          if (!v20)
          {
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
              return 2;
            v16 = sub_22F10CF48(v16);
            if (!v16)
              return 2;
          }
          goto LABEL_59;
        }
        v16 = *v9;
        v17 = *(unsigned __int8 *)(*v9 + 16);
      }
      if (v17 == 31)
        goto LABEL_53;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 31)
      {
        v16 = sub_22F10CF48(v16);
        if (v16)
          goto LABEL_53;
        v16 = *v9;
        v17 = *(unsigned __int8 *)(*v9 + 16);
      }
      if (v17 != 10)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 10)
          return 2;
        v16 = sub_22F10CF48(v16);
        if (!v16)
          return 2;
      }
      goto LABEL_53;
    }
  }
LABEL_59:
  if (!a4 && !a2)
    return sub_22F113A44(v16);
  if (!a4)
  {
    sub_22F0D5A50(a2);
    a4 = v21;
  }
  v16 = sub_22EB14850(a1, a4);
  if (v16)
    return sub_22F113A44(v16);
  return 2;
}

void sub_22EB17190(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22EB171D4()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)(v1 + 8 * *(unsigned int *)(v1 + 12) + 16) + 16))
    JUMPOUT(0x22EB171BCLL);
  return sub_22EB178E8(v0, v1);
}

uint64_t sub_22EB172F4()
{
  uint64_t v0;
  unsigned int *v1;
  unint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  unsigned int v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  uint64_t result;

  v2 = *v1;
  if ((v2 & 0x8000) != 0)
  {
    v10 = 1;
LABEL_24:
    LODWORD(result) = sub_22EB178E8(v0, (uint64_t)v1);
    if (v10 <= (int)result)
      return result;
    else
      return v10;
  }
  v3 = *(unsigned __int8 **)((char *)v1 + (v2 >> 24));
  v4 = v3;
  do
  {
    v5 = *v4;
    if (v5 > 0xD5)
    {
      if (v5 == 233)
      {
        if ((*(_DWORD *)v4 & 0x7C0000) != 0x300000)
          goto LABEL_21;
        v5 = *(_DWORD *)v4;
        v7 = v4 + 16;
      }
      else
      {
        if (v5 != 214)
          break;
        v7 = v4 + 24;
      }
    }
    else if (v5 == 155)
    {
      if ((**((_DWORD **)v4 + 2) & 0x18000) != 0)
        goto LABEL_21;
      v7 = v4 + 24;
      if (!v4[48])
        v7 = v4 + 32;
      v5 = 155;
    }
    else
    {
      if (v5 != 176)
        break;
      v6 = *((unsigned int *)v4 + 5);
      if ((_DWORD)v6 == -1)
        goto LABEL_21;
      v7 = &v4[8 * v6 + 40];
      v5 = 176;
    }
    v8 = *(unsigned __int8 **)v7;
    v9 = v8 == v4;
    v4 = v8;
  }
  while (!v9);
  if (v5 == 129)
  {
    v10 = 0;
    goto LABEL_24;
  }
LABEL_21:
  v11 = sub_22EFFA604(v3);
  result = sub_22EB16E5C(v0, (uint64_t)v1, v11, 0);
  v10 = result;
  if ((_DWORD)result != 2)
    goto LABEL_24;
  return result;
}

void sub_22EB173E0()
{
  uint64_t v0;

  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 8) & 0xFFFFFFFFFFFFFFF0) + 17) & 8) != 0)
LABEL_9:
    JUMPOUT(0x22EB177B0);
  if ((*(_DWORD *)v0 & 0x8000) == 0)
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v0 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) & 0xFE) != 0x28)
      goto LABEL_8;
    if ((*(_BYTE *)(*(_QWORD *)(v0 + 16) + 1) & 0x80) == 0)
    {
      if ((*(_DWORD *)v0 & 0x1FC0000) == 0x240000)
        goto LABEL_9;
LABEL_8:
      JUMPOUT(0x22EB173B4);
    }
  }
  JUMPOUT(0x22EB17614);
}

uint64_t sub_22EB17448()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v2 = *(unsigned __int16 *)(v1 + 12) | (*(unsigned __int8 *)(v1 + 14) << 16);
  if ((v2 & 0x10000) != 0
    && (v3 = *(_QWORD *)(v1 + 8 * (*(unsigned __int16 *)(v1 + 12) + 1) + 16)) != 0)
  {
    sub_22EB17190(v0, v3);
    LODWORD(v5) = v4 & ~(v4 >> 31);
    LOWORD(v2) = *(_WORD *)(v1 + 12);
  }
  else
  {
    LODWORD(v5) = 0;
  }
  v6 = (unsigned __int16)v2;
  if (!(_WORD)v2)
  {
LABEL_11:
    sub_22EB17190(v0, *(_QWORD *)(v1 + 16));
    JUMPOUT(0x22EB17620);
  }
  while (1)
  {
    v7 = *(_QWORD *)(v1 + 16 + 8 * v6);
    sub_22EB17190(v0, v7);
    v5 = (int)v5 <= v8 ? v8 : v5;
    if (!*(_QWORD *)(v7 + 8))
      return v5;
    if (!(_DWORD)--v6)
      goto LABEL_11;
  }
}

uint64_t sub_22EB17488()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v3 = *v1;
  v2 = (uint64_t *)(v1 + 6);
  v4 = 8 * ((unint64_t)v3 >> 18);
  v5 = v4 - 8;
  if (v4 == 8)
    return 0;
  LODWORD(v6) = 0;
  do
  {
    sub_22EB17190(v0, *v2);
    if ((int)v6 <= v7)
      v6 = v7;
    else
      v6 = v6;
    if ((_DWORD)v6 == 2)
      break;
    ++v2;
    v5 -= 8;
  }
  while (v5);
  return v6;
}

void sub_22EB174CC()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 1) & 0x80) == 0)
    JUMPOUT(0x22EB174D4);
  JUMPOUT(0x22EB17614);
}

void sub_22EB174DC()
{
  JUMPOUT(0x22EB174E4);
}

uint64_t sub_22EB17504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int **v4;
  unsigned int **v5;
  unsigned int *v6;
  int v7;
  BOOL v8;
  int v9;
  uint64_t v11;

  v3 = *(_QWORD *)(v2 + 8);
  if ((v3 & 1) != 0)
  {
    v4 = (unsigned int **)((v3 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v5 = &v4[*(unsigned int *)(v3 & 0xFFFFFFFFFFFFFFFELL)];
  }
  else
  {
    if (v3)
      v4 = (unsigned int **)(v2 + 8);
    else
      v4 = 0;
    if (v3)
      v5 = (unsigned int **)(v2 + 16);
    else
      v5 = 0;
  }
  if (v4 == v5)
    return 0;
  v0 = 0;
  while (1)
  {
    v6 = *v4;
    v7 = (*v4)[7] & 0x7F;
    if (*v4)
      v8 = ((*v4)[7] & 0x7F) - 67 >= 0xFFFFFFF9;
    else
      v8 = 0;
    if (v8)
    {
      v9 = sub_22EB179E4(v1, *v4);
      if ((int)v0 <= v9)
        v0 = v9;
      else
        v0 = v0;
      v7 = v6[7] & 0x7F;
    }
    if (v6 && (v7 - 42) >= 0xFFFFFFFD)
    {
      v11 = *(_QWORD *)((*((_QWORD *)v6 + 10) & 0xFFFFFFFFFFFFFFF8) + ((2 * *((_QWORD *)v6 + 10)) & 8));
    }
    else
    {
      if (!v6 || (v7 - 75) < 0xFFFFFFE5)
        goto LABEL_30;
      v11 = *((_QWORD *)v6 + 6);
    }
    if ((*(_BYTE *)(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0) + 17) & 8) != 0)
      return 2;
LABEL_30:
    if (++v4 == v5)
      return v0;
  }
}

uint64_t sub_22EB17524()
{
  uint64_t v0;
  uint64_t v1;

  return sub_22EB16E5C(v0, v1, *(_QWORD *)(v1 + 16), 0);
}

uint64_t sub_22EB1754C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  v2 = *(unsigned __int16 *)(v1 + 4);
  if (!*(_WORD *)(v1 + 4))
    return 0;
  LODWORD(v3) = 0;
  v4 = (uint64_t *)(v1 + 32);
  v5 = 8 * v2;
  do
  {
    v6 = *v4++;
    sub_22EB17190(v0, v6);
    if ((int)v3 <= v7)
      v3 = v7;
    else
      v3 = v3;
    v5 -= 8;
  }
  while (v5);
  return v3;
}

uint64_t sub_22EB17580()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t result;

  v2 = sub_22F0602E8(v1);
  if (v2 < 0x10
    || (v3 = v2 & 0xFFFFFFFFFFFFFFF0, (*(_BYTE *)(*(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0))
  {
    LODWORD(v4) = 1;
  }
  else
  {
    v4 = sub_22EB16E5C(v0, v1, *(_QWORD *)(v1 + 16), 0);
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v5)
    {
      if (*(_BYTE *)(v5 + 16) == 45)
      {
        v6 = sub_22F114198(*(_QWORD *)(v5 + 24));
        v7 = sub_22EFD10F8(v6);
        if (v7)
        {
          v8 = sub_22EB16E5C(v0, v1, v7, 0);
          if ((int)v4 <= v8)
            v4 = v8;
          else
            v4 = v4;
        }
      }
    }
    if ((_DWORD)v4 == 2)
      return v4;
  }
  LODWORD(result) = sub_22EB178E8(v0, v1);
  if ((int)v4 <= (int)result)
    return result;
  else
    return v4;
}

uint64_t sub_22EB1762C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 16);
  if ((v2 & 4) != 0)
    return 0;
  v3 = v2 & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)((v2 & 0xFFFFFFFFFFFFFFF8) + 1) & 0x80) != 0)
    return 1;
  v4 = 0;
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v5 && *(_BYTE *)(v5 + 16) == 45)
  {
    v6 = sub_22F114198(*(_QWORD *)(v5 + 24));
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v6 + 104) + 96), *(_QWORD *)(v6 + 104));
    if ((**(_QWORD **)(v6 + 128) & 0x400) != 0)
      return 2 * ((sub_22F003E64(v3, *(_QWORD *)(v0 + 88), 0) & 0xFFFE) == 0);
    return 0;
  }
  return v4;
}

uint64_t sub_22EB177CC()
{
  uint64_t v1;
  unsigned __int16 *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  unsigned __int16 *v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;

  v3 = *v2;
  if ((v3 & 0x2000) != 0 && (v4 = *((_QWORD *)v2 + 2)) != 0)
  {
    sub_22EB17190(v1, v4);
    LODWORD(v5) = v6 & ~(v6 >> 31);
    v3 = *v2;
  }
  else
  {
    LODWORD(v5) = 0;
  }
  if ((v3 & 0x1000) != 0)
  {
    v7 = *(_QWORD *)&v2[4 * ((v3 >> 13) & 1) + 8];
    if (v7)
    {
      sub_22EB17190(v1, v7);
      if ((int)v5 <= v8)
        LODWORD(v5) = v8;
      v3 = *v2;
    }
  }
  v9 = v2 + 8;
  sub_22EB17190(v1, *(_QWORD *)&v2[4 * ((v3 >> 13) & 1) + 8 + 4 * ((v3 >> 12) & 1)]);
  if ((int)v5 <= v10)
    v5 = v10;
  else
    v5 = v5;
  v11 = sub_22F3F2344(v2, *(_QWORD *)(v1 + 88));
  if (v12)
  {
    if (v11)
      JUMPOUT(0x22EB176F4);
    return v5;
  }
  else
  {
    sub_22EB17190(v1, *(_QWORD *)&v9[4 * ((*v2 >> 12) & 1) + 4 + 4 * ((*v2 >> 13) & 1)]);
    v18 = v13;
    v14 = *v2;
    if ((v14 & 0x800) != 0 && (v15 = *(_QWORD *)&v9[4 * ((v14 >> 13) & 1) + 8 + 4 * ((v14 >> 12) & 1)]) != 0)
      sub_22EB17190(v1, v15);
    else
      v16 = 0;
    v17 = v18;
    if (v18 != v16)
    {
      if (v18 <= v16)
        v17 = v16;
      if ((*v2 & 0x700) == 0x100)
        v17 = 1;
    }
    if ((int)v5 <= v17)
      return v17;
    else
      return v5;
  }
}

uint64_t sub_22EB178E8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v9;
  int v10;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;

  sub_22F0D492C(a2);
  v12 = v14;
  v3 = v16;
  v13 = v15;
  v4 = v17;
  v6 = *((_QWORD *)&v14 + 1);
  v5 = (uint64_t *)v14;
  v7 = 0;
  if ((_QWORD)v14 != v16 || *((_QWORD *)&v14 + 1) != v17)
  {
    do
    {
      v9 = v5;
      if ((v6 & 3) != 0)
      {
        if ((v6 & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v9 = (_QWORD *)((v6 & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v9 = (_QWORD *)sub_22F3AC1A8(*v5);
      }
      if (*v9)
      {
        v10 = sub_22EB17190(a1);
        v7 = (int)v7 <= v10 ? v10 : v7;
        if ((_DWORD)v7 == 2)
          break;
      }
      if ((v6 & 3) != 0)
      {
        if (v6 >= 4)
          sub_22F0D8720((uint64_t)&v12);
        else
          sub_22F3F2FE0((uint64_t)&v12, 1);
      }
      else
      {
        *(_QWORD *)&v12 = v5 + 1;
      }
      v6 = *((_QWORD *)&v12 + 1);
      v5 = (uint64_t *)v12;
    }
    while (v12 != __PAIR128__(v4, v3));
  }
  return v7;
}

uint64_t sub_22EB179E4(uint64_t a1, unsigned int *a2)
{
  unint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *i;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  int v19;
  uint64_t v21;

  if ((sub_22EFBCBC4((uint64_t)a2, *(_QWORD *)(a1 + 88)) & 1) != 0 || (v4 = sub_22EFBC5B4((uint64_t)a2)) == 0)
  {
    v6 = 0;
  }
  else
  {
    sub_22EB17190(a1, v4);
    v6 = v5 & ~(v5 >> 31);
  }
  if (sub_22EFBEA2C((uint64_t)a2, *(_QWORD *)(a1 + 88)) != 1)
    goto LABEL_22;
  for (i = a2 + 12; ; i = (_QWORD *)(v10 + 32))
  {
    v8 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
    if (v8)
      v9 = (*(_DWORD *)(v8 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v9 = 0;
    if (v9)
    {
      v10 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
      continue;
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
      break;
    v21 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
    v10 = sub_22F10CF48(v8);
    v8 = v21;
    if (!v10)
      break;
  }
  v11 = sub_22F10C2A4(v8);
  if (v11)
  {
    if ((*(_DWORD *)(v11 + 28) & 0x7Fu) - 35 <= 2)
    {
      v12 = sub_22EFD10F8(v11);
      if (v12)
      {
        v13 = sub_22EB16E5C(a1, 0, v12, a2[6]);
        if ((int)v6 <= v13)
          v6 = v13;
        else
          v6 = v6;
      }
    }
  }
LABEL_22:
  if ((a2[7] & 0x7F) == 0x3D)
  {
    v14 = a2[25];
    if ((_DWORD)v14)
    {
      v15 = a2 + 26;
      v16 = 8 * v14;
      do
      {
        v17 = *(unsigned __int8 **)(*(_QWORD *)v15 + 64);
        if (v17)
        {
          v18 = sub_22EFFED0C(v17);
          if (*v18 == 161)
          {
            if (*((_QWORD *)v18 + 2))
            {
              v19 = sub_22EB179E4(a1);
              if ((int)v6 <= v19)
                v6 = v19;
              else
                v6 = v6;
            }
          }
        }
        v15 += 2;
        v16 -= 8;
      }
      while (v16);
    }
  }
  return v6;
}

BOOL sub_22EB17B6C(_QWORD *a1, unint64_t a2, int a3)
{
  void **v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  char v18;

  v6 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(a1 + 337), (void *)a2);
  v7 = a1[338];
  v8 = 2712;
  if (v7 == a1[337])
    v8 = 2716;
  if (v6 != (void **)(v7 + 8 * *(unsigned int *)((char *)a1 + v8)))
    return 0;
  if (!a2 || (*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFA)
  {
    if (!a3)
      return (*(_DWORD *)(a2 + 28) & 0x7F) != 43;
    goto LABEL_22;
  }
  if ((*(_BYTE *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2) + 82) & 0x40) != 0)
    return 0;
  if ((*(_BYTE *)(a1[9] + 1) & 4) == 0)
    goto LABEL_18;
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (!v10 || *(unsigned __int8 *)(v10 + 16) - 27 <= 0xFFFFFFFD)
    v10 = sub_22F10CF48(v10);
  v12 = *(_QWORD *)(*(_QWORD *)(v10 + 24) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  v13 = sub_22F110500((uint64_t)&v18, v12);
  if (!v13
    || *(_QWORD *)(v13 + 24) > 0xFuLL
    || (*(_BYTE *)(v13 + 17) & 4) != 0
    || (v14 = sub_22EDC6650(a1, a2, 0, 0), result = 0, (v14 & 1) == 0))
  {
LABEL_18:
    if (!a3)
      return (*(_DWORD *)(a2 + 28) & 0x7F) != 43;
    if ((sub_22EBBF514((uint64_t)a1, a2) & 1) == 0)
    {
LABEL_22:
      if (sub_22EFCA12C(a2))
      {
        v15 = a1[27];
        v16 = *(_WORD *)(v15 + 8) & 0x7F;
        v17 = -40;
        if (v16 > 0x46)
        {
          switch(v16)
          {
            case 'S':
              goto LABEL_38;
            case 'G':
              v17 = -56;
              goto LABEL_38;
            case 'Q':
LABEL_38:
              result = sub_22EFCA12C(v15 + v17);
              if (!result)
                return result;
              return (*(_DWORD *)(a2 + 28) & 0x7F) != 43;
          }
        }
        else
        {
          if (v16 <= 0x18)
          {
            if (v16 == 16)
            {
LABEL_26:
              v17 = -48;
              goto LABEL_38;
            }
            if (((1 << v16) & 0x1066) != 0)
              goto LABEL_38;
            if (v16 == 24)
              goto LABEL_26;
          }
          if (v16 == 70)
          {
LABEL_36:
            v17 = -64;
            goto LABEL_38;
          }
        }
        if (v16 - 52 >= 6)
        {
          if (v16 - 33 >= 5)
            goto LABEL_26;
          goto LABEL_36;
        }
        v17 = -72;
        goto LABEL_38;
      }
      return (*(_DWORD *)(a2 + 28) & 0x7F) != 43;
    }
    return 0;
  }
  return result;
}

void sub_22EB17D68(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7[24];
  unsigned int v8[24];
  uint64_t v9;

  v9 = a2;
  v4 = *(_QWORD *)(a2 + 80);
  if ((v4 & 0x2000000) != 0)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x200) == 0)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x1624u, 0, (uint64_t)v8);
      sub_22E903BEC(v8);
    }
    sub_22F328148((uint64_t)a1, a2);
  }
  else if ((v4 & 0x2000000000000000) != 0 && (*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
  {
    sub_22F32916C(a1, a2);
  }
  else
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x1554u, 0, (uint64_t)v7);
    v5 = sub_22E890024((uint64_t)v7, &v9);
    v6 = 1;
    sub_22E8900C4(v5, &v6);
    sub_22E903BEC(v7);
  }
}

unsigned int *sub_22EB17E38(unsigned int *result, uint64_t a2)
{
  unsigned int *v2;
  unsigned int *v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  _BYTE __p[23];
  __int16 v12;
  unsigned int v13[24];
  uint64_t v14;

  v2 = result;
  v14 = a2;
  v3 = *(unsigned int **)(a2 + 112);
  if (v3)
  {
    v4 = 0;
    a2 = *(_QWORD *)(a2 + 112);
    while ((*(_BYTE *)(a2 + 81) & 0xE0) == 0)
    {
      if ((*(_BYTE *)(a2 + 104) & 3) != 0)
      {
        if (v4)
          goto LABEL_9;
        v4 = 1;
      }
      result = (unsigned int *)sub_22E3CD31C((uint64_t *)(a2 + 104), a2);
      if (result != v3)
      {
        a2 = (uint64_t)result;
        if (result)
          continue;
      }
      goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    v5 = (*(uint64_t (**)(unsigned int *, uint64_t))(*(_QWORD *)v3 + 16))(v3, a2);
    sub_22E8FCA40(v2, v5, 0x157Fu, 0, (uint64_t)v13);
    v6 = sub_22E890024((uint64_t)v13, &v14);
    v10 = 0;
    v9 = 0;
    v7 = v5 | ((unint64_t)v5 << 32);
    v8 = 0;
    memset(&__p[8], 0, 15);
    strcpy(__p, "static ");
    v12 = 7;
    sub_22E890748(v6, &v7);
    if ((char)v12 < 0)
      operator delete(*(void **)__p);
    return sub_22E903BEC(v13);
  }
  return result;
}

uint64_t sub_22EB17F48(uint64_t a1, _DWORD *a2, unsigned int *a3, uint64_t a4, uint64_t a5, char a6, char a7, uint64_t a8)
{
  unsigned int v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void **v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int *v40;
  uint64_t v41;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  _QWORD *v76;
  char v77;
  int v78;
  int v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _DWORD *v95;
  unint64_t v96;
  uint64_t v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  int v106;
  uint64_t v107;
  unint64_t v108;
  unsigned int v109;
  unsigned int v111;
  uint64_t v112;
  unsigned int v113[24];
  _BYTE v114[96];
  unsigned int v115[24];
  uint64_t v116[12];
  _BYTE v117[96];
  uint64_t v118;
  unsigned int v119[24];
  unsigned int v120[24];
  void *v121;
  _QWORD v122[2];
  void *v123;
  uint64_t v124;
  _BYTE v125[96];
  char v126;
  void *v127;
  uint64_t v128;
  _QWORD v129[10];

  v129[8] = *MEMORY[0x24BDAC8D0];
  v121 = a2;
  v15 = *a3;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0 && (a2[7] & 0x7Eu) - 52 <= 5)
  {
    v116[0] = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 32))(a2);
    v122[0] = 0;
    if (sub_22EB88D5C((uint64_t *)(a1 + 12000), v116, v122))
    {
      v16 = v122[0];
      if (v122[0] != *(_QWORD *)(a1 + 12000) + 56 * *(unsigned int *)(a1 + 12016))
      {
        v111 = v15;
        v112 = a5;
        v17 = a6;
        v18 = a7;
        v19 = a8;
        v20 = *(unsigned int *)(v122[0] + 16);
        if ((_DWORD)v20)
        {
          v21 = *(int **)(v122[0] + 8);
          v22 = &v21[8 * v20];
          do
          {
            v23 = (uint64_t)(v21 + 2);
            v24 = *v21;
            v21 += 8;
            sub_22E90379C((_QWORD *)a1, v24, v23, 0, (uint64_t)v120);
            sub_22E903BEC(v120);
          }
          while (v21 != v22);
          v25 = *(unsigned int *)(v16 + 16);
          if ((_DWORD)v25)
          {
            v26 = *(_QWORD *)(v16 + 8);
            v27 = 32 * v25;
            do
            {
              v28 = v26 + v27;
              v29 = *(_QWORD *)(v26 + v27 - 24);
              if (v29)
              {
                v30 = *(_QWORD *)(v28 - 16);
                if (v30)
                {
                  sub_22E3BB10C(v30, v29);
                  *(_QWORD *)(v28 - 24) = 0;
                }
              }
              v27 -= 32;
            }
            while (v27);
          }
        }
        *(_DWORD *)(v16 + 16) = 0;
        a8 = v19;
        a7 = v18;
        a6 = v17;
        v15 = v111;
        a5 = v112;
      }
    }
    if (sub_22EFBFAF0((uint64_t)v121))
    {
      sub_22E8FCA40((_QWORD *)a1, v15, 0x14A4u, 0, (uint64_t)v119);
      sub_22E903BEC(v119);
    }
    sub_22EBBF588((_QWORD *)a1, (unint64_t)v121, v15);
    a2 = v121;
  }
  v31 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(a1 + 2696), a2);
  v32 = *(_QWORD *)(a1 + 2704);
  v33 = 2712;
  if (v32 == *(_QWORD *)(a1 + 2696))
    v33 = 2716;
  v34 = v121;
  if (v31 != (void **)(v32 + 8 * *(unsigned int *)(a1 + v33)))
  {
    if ((*((_DWORD *)v121 + 7) & 0x7F) == 0x30)
    {
      sub_22E8FCA40((_QWORD *)a1, v15, 0xB7Eu, 0, (uint64_t)v122);
      v116[0] = *((_QWORD *)v121 + 5);
      sub_22E894538((uint64_t)v122, v116);
    }
    else
    {
      sub_22E8FCA40((_QWORD *)a1, v15, 0xB51u, 0, (uint64_t)v122);
      v116[0] = *((_QWORD *)v121 + 5);
      v39 = sub_22E894538((uint64_t)v122, v116);
      v118 = *((_QWORD *)v121 + 6);
      sub_22E8901B8(v39, &v118);
    }
    goto LABEL_31;
  }
  if ((*((_DWORD *)v121 + 7) & 0x7Eu) - 58 < 0xFFFFFFFA)
  {
LABEL_24:
    v35 = v121;
    if (!v121)
      goto LABEL_92;
    v36 = *((_DWORD *)v121 + 7);
    if ((v36 & 0x7Eu) - 58 < 0xFFFFFFFC)
      goto LABEL_92;
    v37 = *((_WORD *)v121 + 40) & 0x7F;
    v38 = -40;
    if (v37 > 0x46)
    {
      if (v37 != 83)
      {
        if (v37 == 71)
        {
          v38 = -56;
          goto LABEL_80;
        }
        if (v37 == 81)
          goto LABEL_80;
LABEL_75:
        v51 = v37 - 52;
        v52 = v37 - 33 >= 5;
        v53 = -48;
        if (!v52)
          v53 = -64;
        if (v51 >= 6)
          v38 = v53;
        else
          v38 = -72;
      }
    }
    else
    {
      if (v37 > 0x18)
        goto LABEL_74;
      if (v37 != 16)
      {
        if (((1 << v37) & 0x1066) != 0)
          goto LABEL_80;
        if (v37 != 24)
        {
LABEL_74:
          if (v37 == 70)
          {
            v38 = -64;
            goto LABEL_80;
          }
          goto LABEL_75;
        }
      }
      v38 = -48;
    }
LABEL_80:
    v54 = *(_QWORD *)((char *)v121 + v38 + 88);
    v55 = (_QWORD *)(v54 & 0xFFFFFFFFFFFFFFF8);
    if ((v54 & 4) != 0)
      v55 = (_QWORD *)*v55;
    if (v55)
      v56 = v55 - 8;
    else
      v56 = 0;
    v57 = v56[16];
    if (v57
      && ((*(unsigned __int16 *)(v57 + 8) | (*(unsigned __int8 *)(v57 + 10) << 16)) & 0x100000) != 0
      && ((v36 & 0x7F) == 0x37 && !sub_22EFC0EB8((uint64_t)v121)
       || (sub_22EFD3B9C((unint64_t)v35) & 1) != 0
       || sub_22EFD3F30((unint64_t)v35)))
    {
      sub_22E8FCA40((_QWORD *)a1, v15, 0x1910u, 0, (uint64_t)v122);
      LOBYTE(v116[0]) = (v35[7] & 0x7F) != 55;
      sub_22E894E38((uint64_t)v122, (unsigned __int8 *)v116);
      sub_22E903BEC((unsigned int *)v122);
    }
LABEL_92:
    v58 = (uint64_t)v121;
    if (v121 && (*((_DWORD *)v121 + 7) & 0x7F) == 0x18)
    {
      v59 = sub_22EFDCBF0((unint64_t)v121, 1);
      if (v59)
        v58 = v59;
      else
        v58 = (uint64_t)v121;
    }
    if ((sub_22ED0737C((_QWORD *)a1, v58, v15) & 1) != 0)
      return 1;
    v60 = *(_QWORD *)(a1 + 72);
    v61 = *(unsigned int *)(v60 + 72);
    v62 = v121;
    if (*(_DWORD *)(v60 + 72) && (v63 = *(_QWORD *)(a1 + 216)) != 0 && (*(_WORD *)(v63 + 8) & 0x7F) == 0x47)
    {
      v64 = *((_QWORD *)v121 + 2);
      v65 = v64 & 0xFFFFFFFFFFFFFFF8;
      if ((v64 & 4) != 0)
        v65 = *(_QWORD *)(v65 + 8);
      if ((v65 != v63 || *((_QWORD *)v121 + 1) <= 7uLL && *(void **)(v63 + 24) != v121)
        && (*((_DWORD *)v121 + 7) & 0x7Fu) - 60 <= 6)
      {
        sub_22E8FCA40((_QWORD *)a1, v15, 0x1116u, 0, (uint64_t)v122);
        LOBYTE(v116[0]) = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * *(unsigned int *)(a1 + 1904) - 8) + 9) & 1;
        sub_22E894E38((uint64_t)v122, (unsigned __int8 *)v116);
LABEL_123:
        sub_22E903BEC((unsigned int *)v122);
        sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v121 + 6), 0x15C9u, 0, (uint64_t)v122);
        sub_22E890024((uint64_t)v122, (uint64_t *)&v121);
LABEL_31:
        v40 = (unsigned int *)v122;
LABEL_32:
        sub_22E903BEC(v40);
        return 1;
      }
    }
    else if (!v61)
    {
      goto LABEL_113;
    }
    if ((*((_DWORD *)v121 + 7) & 0x7Fu) - 60 <= 6)
    {
      if (!sub_22ECB07F4(a1, (uint64_t)v121))
      {
        sub_22E8FCA40((_QWORD *)a1, v15, 0x1059u, 0, (uint64_t)v122);
        v116[0] = *(_QWORD *)(*(_QWORD *)(sub_22ECB1B04(*(_QWORD *)(a1 + 12288)) + 1304) + 16);
        sub_22E890024((uint64_t)v122, v116);
        goto LABEL_123;
      }
      v62 = v121;
    }
LABEL_113:
    if (v62 && (v62[7] & 0x7F) == 0x2B)
    {
      sub_22E8FCA40((_QWORD *)a1, v15, 0x13DEu, 0, (uint64_t)v115);
      sub_22E903BEC(v115);
      sub_22E8FCA40((_QWORD *)a1, v62[6], 0x15C2u, 0, (uint64_t)v114);
      v40 = (unsigned int *)v114;
      goto LABEL_32;
    }
    sub_22E91BDE0((_QWORD *)a1, (uint64_t)v62, a3, a4, a5, a6, a7, a8);
    v116[0] = (uint64_t)v121;
    if ((*((_BYTE *)v121 + 29) & 1) == 0)
      goto LABEL_199;
    sub_22EFC8E88((uint64_t)v121);
    v67 = *(uint64_t **)v66;
    v68 = *(unsigned int *)(v66 + 8);
    v69 = *(uint64_t **)v66;
    if ((_DWORD)v68)
    {
      v70 = 8 * v68;
      v69 = *(uint64_t **)v66;
      while (*(_WORD *)(*v69 + 32) != 339)
      {
        ++v69;
        v70 -= 8;
        if (!v70)
          goto LABEL_199;
      }
    }
    if (v69 == &v67[v68])
      goto LABEL_199;
    do
    {
      v72 = *v67++;
      v71 = v72;
    }
    while (*(_WORD *)(v72 + 32) != 339);
    v73 = *(unsigned __int8 *)(v71 + 30);
    v74 = (~(v73 << 16) & 0x780000) != 0
        ? ((*(unsigned __int16 *)(v71 + 28) | (v73 << 16)) >> 19) & 0xF
        : sub_22F1BFAD0(v71);
    if (!v74
      || ((v78 = *(unsigned __int8 *)(v71 + 30), (~(v78 << 16) & 0x780000) != 0)
        ? (v79 = ((*(unsigned __int16 *)(v71 + 28) | (v78 << 16)) >> 19) & 0xF)
        : (v79 = sub_22F1BFAD0(v71)),
          v79 == 4))
    {
LABEL_199:
      v95 = v121;
      v116[0] = (uint64_t)v121;
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
        goto LABEL_216;
      v96 = sub_22E903070(a1, 0);
      if (!v96)
        goto LABEL_216;
      if ((*(_WORD *)(v96 + 8) & 0x7Eu) - 58 < 0xFFFFFFFA)
        goto LABEL_216;
      if ((*(_BYTE *)(v96 + 10) & 1) == 0)
        goto LABEL_216;
      v97 = v96 - 72;
      if (sub_22EFB948C(v96 - 72) < 3)
        goto LABEL_216;
      v98 = sub_22EFB948C((uint64_t)v95);
      if (v98 != 4 && v98 != 1)
        goto LABEL_216;
      if ((v95[7] & 0x7Eu) - 52 >= 6)
        v95 = 0;
      v99 = sub_22F1E3734(*(_QWORD **)(a1 + 112), v15);
      if ((v99 & 1) != 0 || !v95)
      {
        if (!v99)
        {
LABEL_212:
          v100 = 5281;
LABEL_215:
          sub_22E8FCA40((_QWORD *)a1, v15, v100, 0, (uint64_t)v122);
          LOBYTE(v118) = v95 == 0;
          v101 = sub_22E894E38((uint64_t)v122, (unsigned __int8 *)&v118);
          sub_22E890024(v101, v116);
          sub_22E903BEC((unsigned int *)v122);
          sub_22EB17E38((unsigned int *)a1, v97);
          v102 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v116[0] + 32))(v116[0]);
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v102 + 24), 0x15C9u, 0, (uint64_t)v122);
          sub_22E890024((uint64_t)v122, v116);
          sub_22E903BEC((unsigned int *)v122);
LABEL_216:
          if (v121 && (*((_DWORD *)v121 + 7) & 0x7Fu) - 75 >= 0xFFFFFFE5)
            sub_22E903E38(a1, *((_QWORD *)v121 + 6), v15, (uint64_t)v121);
          v103 = *(_QWORD *)(a1 + 72);
          if ((*(_BYTE *)(v103 + 104) & 4) != 0
            || ((v104 = *(_QWORD *)(v103 + 72), (_DWORD)v104) ? (v105 = (v104 & 0x800000000) == 0) : (v105 = 1), !v105))
          {
            if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 81))
            {
              if (v121)
              {
                if ((*((_DWORD *)v121 + 7) & 0x7Fu) - 67 >= 0xFFFFFFF9)
                {
                  sub_22EFBB794((uint64_t)v121);
                  if (v106)
                  {
                    sub_22F308EA4((_QWORD *)a1, *a3, 0x130Au, 0, (uint64_t)v113);
                    sub_22E903BEC(v113);
                  }
                }
              }
            }
          }
          if ((*((_DWORD *)v121 + 7) & 0x7F) != 0x40)
            return 0;
          v107 = *((_QWORD *)v121 + 2);
          v108 = v107 & 0xFFFFFFFFFFFFFFF8;
          if ((v107 & 4) != 0)
            v108 = *(_QWORD *)v108;
          if ((*(_WORD *)(v108 + 8) & 0x7F) != 0x51)
            return 0;
          v109 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
          if (v109 <= 3 && v109 != 2)
            return 0;
          sub_22E8FCA40((_QWORD *)a1, v15, 0x123Bu, 0, (uint64_t)v122);
          sub_22E890024((uint64_t)v122, (uint64_t *)&v121);
          goto LABEL_123;
        }
      }
      else if ((*((_BYTE *)v95 + 82) & 1) == 0 && !sub_22E3E3190((uint64_t)v95))
      {
        goto LABEL_212;
      }
      v100 = 5282;
      goto LABEL_215;
    }
    v80 = *(_QWORD *)(a1 + 224);
    if (!v80)
      v80 = *(_QWORD *)(a1 + 216);
    v81 = *(_WORD *)(v80 + 8) & 0x7F;
    if (v80 && v81 == 19)
    {
      v82 = *(_QWORD *)(v80 + 56);
      if (!v82)
        goto LABEL_199;
      v80 = v82 + 48;
      v81 = *(_WORD *)(v82 + 56) & 0x7F;
    }
    v83 = -40;
    if (v81 > 70)
    {
      switch(v81)
      {
        case 'S':
          goto LABEL_197;
        case 'G':
          v83 = -56;
          goto LABEL_197;
        case 'Q':
LABEL_197:
          if (!sub_22EA057AC(v80 + v83))
          {
            sub_22E8FCA40((_QWORD *)a1, v15, 0x1BEBu, 0, (uint64_t)v122);
            sub_22E890024((uint64_t)v122, v116);
            sub_22E903BEC((unsigned int *)v122);
          }
          goto LABEL_199;
      }
    }
    else
    {
      if (v81 <= 0x18)
      {
        if (v81 == 16)
        {
LABEL_151:
          v83 = -48;
          goto LABEL_197;
        }
        if (((1 << v81) & 0x1066) != 0)
          goto LABEL_197;
        if (v81 == 24)
          goto LABEL_151;
      }
      if (v81 == 70)
      {
LABEL_195:
        v83 = -64;
        goto LABEL_197;
      }
    }
    if ((v81 - 52) >= 6)
    {
      if ((v81 - 33) >= 5)
        goto LABEL_151;
      goto LABEL_195;
    }
    v83 = -72;
    goto LABEL_197;
  }
  if ((*(_BYTE *)((*(uint64_t (**)(void *))(*(_QWORD *)v121 + 32))(v121) + 82) & 0x40) != 0)
  {
    if ((v34[7] & 0x7F) != 0x37 || (*((_BYTE *)v34 + 87) & 0x20) == 0)
    {
      sub_22E8FCA40((_QWORD *)a1, v15, 0xCA1u, 0, (uint64_t)v117);
      v44 = (unsigned int *)v117;
LABEL_185:
      sub_22E903BEC(v44);
      sub_22EB17D68(a1, v34);
      return 1;
    }
    sub_22E8FCA40((_QWORD *)a1, v15, 0xCA2u, 0, (uint64_t)v122);
    v45 = v34[20] & 0x7F;
    v46 = 0x3FFFFFFFFFFFFFF6;
    if (v45 > 0x46)
    {
      switch(v45)
      {
        case 'S':
          goto LABEL_159;
        case 'G':
          v46 = 0x3FFFFFFFFFFFFFF2;
          goto LABEL_159;
        case 'Q':
LABEL_159:
          v84 = *(_QWORD *)&v34[v46 + 22];
          v85 = (_QWORD *)(v84 & 0xFFFFFFFFFFFFFFF8);
          if ((v84 & 4) != 0)
            v85 = (_QWORD *)*v85;
          if (v85)
            v86 = (uint64_t)(v85 - 8);
          else
            v86 = 0;
          v116[0] = v86;
          v87 = sub_22E890024((uint64_t)v122, v116);
          v88 = *((_QWORD *)v34 + 22);
          v89 = v88 + 72;
          v90 = *(_WORD *)(v88 + 80) & 0x7F;
          v91 = -40;
          if (v90 > 70)
          {
            switch(v90)
            {
              case 'S':
                goto LABEL_179;
              case 'G':
                v91 = -56;
                goto LABEL_179;
              case 'Q':
                goto LABEL_179;
            }
          }
          else
          {
            if (v90 <= 0x18)
            {
              if (v90 == 16)
                goto LABEL_167;
              if (((1 << v90) & 0x1066) != 0)
                goto LABEL_179;
              if (v90 == 24)
              {
LABEL_167:
                v91 = -48;
LABEL_179:
                v92 = *(_QWORD *)(v89 + v91 + 16);
                v93 = (_QWORD *)(v92 & 0xFFFFFFFFFFFFFFF8);
                if ((v92 & 4) != 0)
                  v93 = (_QWORD *)*v93;
                if (v93)
                  v94 = (uint64_t)(v93 - 8);
                else
                  v94 = 0;
                v118 = v94;
                sub_22E890024(v87, &v118);
                v44 = (unsigned int *)v122;
                goto LABEL_185;
              }
            }
            if (v90 == 70)
            {
LABEL_177:
              v91 = -64;
              goto LABEL_179;
            }
          }
          if ((v90 - 52) < 6)
          {
            v91 = -72;
            goto LABEL_179;
          }
          if ((v90 - 33) < 5)
            goto LABEL_177;
          goto LABEL_167;
      }
    }
    else
    {
      if (v45 <= 0x18)
      {
        if (v45 == 16)
        {
LABEL_49:
          v46 = 0x3FFFFFFFFFFFFFF4;
          goto LABEL_159;
        }
        if (((1 << v45) & 0x1066) != 0)
          goto LABEL_159;
        if (v45 == 24)
          goto LABEL_49;
      }
      if (v45 == 70)
      {
LABEL_157:
        v46 = 0x3FFFFFFFFFFFFFF0;
        goto LABEL_159;
      }
    }
    if (v45 - 52 >= 6)
    {
      if (v45 - 33 >= 5)
        goto LABEL_49;
      goto LABEL_157;
    }
    v46 = 0x3FFFFFFFFFFFFFEELL;
    goto LABEL_159;
  }
  v43 = *((_QWORD *)v34 + 7);
  if ((v43 & 4) != 0 && *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFFF8) + 40))
  {
    v122[1] = 0;
    v122[0] = 0;
    v123 = v125;
    v124 = 0x400000000;
    v126 = 0;
    v127 = v129;
    v128 = 0x400000000;
    if ((sub_22E9F3C18(a1, (uint64_t)v34, (uint64_t)v122, v15) & 1) != 0)
    {
LABEL_39:
      if (v127 != v129)
        free(v127);
      if (v123 != v125)
        free(v123);
      return 1;
    }
    if (!v126)
    {
      sub_22E8FCA40((_QWORD *)a1, v15, 0x1232u, 0, (uint64_t)v116);
      sub_22E890024((uint64_t)v116, (uint64_t *)&v121);
      sub_22E903BEC((unsigned int *)v116);
      if ((_DWORD)v128)
      {
        v75 = 16 * v128;
        v76 = (char *)v127 + 8;
        v77 = 1;
        do
        {
          sub_22E9F4654((_QWORD *)a1, v76, v77 & 1);
          v77 = 0;
          v76 += 2;
          v75 -= 16;
        }
        while (v75);
      }
      goto LABEL_39;
    }
    if (v127 != v129)
      free(v127);
    if (v123 != v125)
      free(v123);
  }
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 4) == 0)
    goto LABEL_246;
  v47 = *(_QWORD *)(*((_QWORD *)v34 + 6) & 0xFFFFFFFFFFFFFFF0);
  if (v47)
    v48 = *(unsigned __int8 *)(v47 + 16) - 27 > 0xFFFFFFFD;
  else
    v48 = 0;
  if (!v48)
    v47 = sub_22F10CF48(v47);
  v49 = *(_QWORD *)(*(_QWORD *)(v47 + 24) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v122[0]) = 0;
  v50 = sub_22F110500((uint64_t)v122, v49);
  if (!v50
    || *(_QWORD *)(v50 + 24) > 0xFuLL
    || (*(_BYTE *)(v50 + 17) & 4) != 0
    || (v41 = 1, (sub_22EDC6650((_QWORD *)a1, (unint64_t)v34, v15, 1) & 1) == 0))
  {
LABEL_246:
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0 && !sub_22F31C760(a1, v15, (uint64_t)v34))
      return 1;
    goto LABEL_24;
  }
  return v41;
}

void sub_22EB18D60(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  unsigned int v24;
  BOOL v25;
  unsigned int v26;
  unsigned __int8 *v27;
  unsigned int v28;
  int v29;
  const char *v30;
  unsigned int v31;
  uint64_t v32;
  void **v33;
  size_t v34;
  unint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  BOOL v41;
  unint64_t v42;
  llvm *v43;
  unint64_t v44;
  llvm *v45;
  void *v46[2];
  char v47;
  uint64_t v48[5];
  char v49;
  int v50;
  void *v51[2];
  uint64_t v52;
  unsigned int v53[24];

  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v11 = *(uint64_t **)v10;
    v12 = *(unsigned int *)(v10 + 8);
    i = *(uint64_t **)v10;
    if ((_DWORD)v12)
    {
      v14 = 8 * v12;
      for (i = *(uint64_t **)v10; *(_WORD *)(*i + 32) != 307; ++i)
      {
        v14 -= 8;
        if (!v14)
          return;
      }
    }
    if (i != &v11[v12])
    {
      do
      {
        v16 = *v11++;
        v15 = v16;
      }
      while (*(_WORD *)(v16 + 32) != 307);
      v17 = *(_DWORD *)(a2 + 28);
      v18 = v17 & 0x7F;
      if (a2 && v18 == 24)
      {
        v19 = *(_DWORD *)(a2 + 104);
        v20 = 1;
LABEL_20:
        v23 = *(unsigned int *)(v15 + 36);
        v24 = *(_DWORD *)(v15 + 40);
        v25 = v19 >= v24;
        v26 = v19 - v24;
        if (!v25)
          v26 = 0;
        if (a5 >= v23 + v26 + 1)
        {
          v27 = *(unsigned __int8 **)(a4 + 8 * (a5 + ~v23));
          if (v27 && (v27[2] & 1) == 0 && !sub_22EF5DAC4(*(_QWORD *)(a1 + 88), v27))
          {
            sub_22F0D60E4((uint64_t)v27);
            v29 = sub_22F141A3C(v28, 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
            v51[0] = 0;
            v51[1] = 0;
            v52 = 0;
            if (v20 != 1
              || (v42 = *(_QWORD *)(a1 + 80),
                  v30 = "nil",
                  v43 = (llvm *)sub_22E3CB704((llvm::StringMapImpl *)(v42 + 544), "nil", 3uLL),
                  !sub_22F2EE534(v42, v43)))
            {
              if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
              {
                v30 = "nullptr";
              }
              else
              {
                v44 = *(_QWORD *)(a1 + 80);
                v45 = (llvm *)sub_22E3CB704((llvm::StringMapImpl *)(v44 + 544), "NULL", 4uLL);
                if (sub_22F2EE534(v44, v45))
                  v30 = "NULL";
                else
                  v30 = "(void*) 0";
              }
            }
            MEMORY[0x2348A0C14](v51, v30);
            if (v29)
            {
              v31 = v29;
              sub_22E8FCA40((_QWORD *)a1, v29, 0x1A5Fu, 0, (uint64_t)v53);
              v50 = v20;
              v32 = sub_22E8900C4((uint64_t)v53, &v50);
              std::operator+<char>();
              if (v47 >= 0)
                v33 = v46;
              else
                v33 = (void **)v46[0];
              if (v47 >= 0)
                v34 = v47 & 0x7F;
              else
                v34 = (size_t)v46[1];
              sub_22E729148(v33, v34, v31, 0, (uint64_t)v48);
              sub_22E890748(v32, v48);
              if (v49 < 0)
                operator delete((void *)v48[3]);
              if (v47 < 0)
                operator delete(v46[0]);
            }
            else
            {
              sub_22E8FCA40((_QWORD *)a1, a3, 0x1A5Fu, 0, (uint64_t)v53);
              LODWORD(v48[0]) = v20;
              sub_22E8900C4((uint64_t)v53, (int *)v48);
            }
            sub_22E903BEC(v53);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x17BCu, 0, (uint64_t)v53);
            LODWORD(v48[0]) = v20;
            sub_22E8900C4((uint64_t)v53, (int *)v48);
            sub_22E903BEC(v53);
            if (SHIBYTE(v52) < 0)
              operator delete(v51[0]);
          }
        }
        else
        {
          sub_22E8FCA40((_QWORD *)a1, a3, 0x1A81u, 0, (uint64_t)v53);
          v48[0] = *(_QWORD *)(a2 + 40);
          sub_22E894538((uint64_t)v53, v48);
          sub_22E903BEC(v53);
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x17BCu, 0, (uint64_t)v53);
          LODWORD(v48[0]) = v20;
          sub_22E8900C4((uint64_t)v53, (int *)v48);
          sub_22E903BEC(v53);
        }
        return;
      }
      if (a2 && (v17 & 0x7Eu) - 58 >= 0xFFFFFFFA)
      {
        v21 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
        if (v21)
          v22 = *(_BYTE *)(v21 + 16) == 26;
        else
          v22 = 0;
        if (v22
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
          && (v21 = sub_22F10CF48(v21)) != 0)
        {
          v20 = 0;
          v19 = (unsigned __int16)(*(_QWORD *)(v21 + 16) >> 38);
          goto LABEL_20;
        }
        v20 = 0;
LABEL_69:
        v19 = 0;
        goto LABEL_20;
      }
      if ((v18 - 60) > 6)
        return;
      v35 = *(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0;
      v36 = *(_QWORD *)v35;
      v37 = *(unsigned __int8 *)(*(_QWORD *)v35 + 16);
      if (*(_QWORD *)v35 && v37 == 39)
        goto LABEL_46;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v36 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      {
        v36 = sub_22F10CF48(v36);
        if (v36)
        {
LABEL_46:
          v38 = *(_QWORD *)(*(_QWORD *)(v36 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v38)
            v39 = *(unsigned __int8 *)(v38 + 16) - 27 > 0xFFFFFFFD;
          else
            v39 = 0;
          if (!v39)
          {
            if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v38 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
               - 25 > 1)
              return;
            v38 = sub_22F10CF48(v38);
            if (!v38)
              return;
          }
          v20 = 0;
LABEL_65:
          if (v38)
            v41 = *(_BYTE *)(v38 + 16) == 26;
          else
            v41 = 0;
          if (v41)
          {
            v19 = (unsigned __int16)(*(_QWORD *)(v38 + 16) >> 38);
            goto LABEL_20;
          }
          goto LABEL_69;
        }
        v36 = *(_QWORD *)v35;
        v37 = *(unsigned __int8 *)(*(_QWORD *)v35 + 16);
      }
      if (v37 != 10)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v36 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 10)
          return;
        v36 = sub_22F10CF48(v36);
        if (!v36)
          return;
      }
      v38 = *(_QWORD *)(*(_QWORD *)(v36 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (v38)
        v40 = *(unsigned __int8 *)(v38 + 16) - 27 > 0xFFFFFFFD;
      else
        v40 = 0;
      if (!v40)
        v38 = sub_22F10CF48(v38);
      v20 = 2;
      goto LABEL_65;
    }
  }
}

uint64_t sub_22EB1922C(uint64_t a1, unsigned __int8 *a2, int a3)
{
  unsigned __int8 *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v10;
  int v11;
  unsigned __int8 *v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 **v19;
  unsigned int v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  unint64_t v31;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int *v41;
  unsigned int *v42;
  uint64_t v43;
  _BOOL4 v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int *v56;
  int *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64[3];
  void *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  _BYTE v70[16];
  void *v71[2];
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD v75[3];

  v4 = a2;
  v75[1] = *MEMORY[0x24BDAC8D0];
  v6 = *((_QWORD *)a2 + 1);
  v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)(v7 + 16) & 0xFE00000u) >= 0x8180001 && v7 != 0 && *(_DWORD *)(v7 + 16) == 11)
  {
    v10 = sub_22EB19A28(a1, a2);
    if ((v10 & 1) != 0)
      return 1;
    v4 = (unsigned __int8 *)(v10 & 0xFFFFFFFFFFFFFFFELL);
    v6 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0);
  }
  v11 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if ((v11 - 25) <= 1)
  {
    v12 = sub_22EFFBBCC(v4);
    if (*v12 != 161
      || (v13 = *((_QWORD *)v12 + 2)) == 0
      || (*(_DWORD *)(v13 + 28) & 0x7Eu) - 58 < 0xFFFFFFFA
      || (sub_22EFF605C((uint64_t)v4), sub_22ED10E50((_QWORD *)a1, v13, a3, 0, v14)))
    {
      v15 = sub_22EF5B848(*(_QWORD *)(a1 + 88), v6, 0);
      return sub_22E90092C(a1, (uint64_t)v4, v15, 13, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
    }
    return 1;
  }
  if ((v11 & 0xFEu) - 2 <= 3 && ((**(_WORD **)(a1 + 72) & 0x101) != 0 || (*(_DWORD *)v4 & 0x300) == 0x100))
  {
    v16 = sub_22EF5F824(*(_QWORD *)(a1 + 88), v6);
    v17 = sub_22E90092C(a1, (uint64_t)v4, v16, 12, 0, 0);
    if ((v17 & 1) != 0)
      return 1;
    v18 = sub_22EF5C728(*(_QWORD *)(a1 + 88), v6);
    if (!v18 || *(_BYTE *)(v18 + 16) != 4 || !*(_QWORD *)(v18 + 40))
      return v17 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      v19 = (unsigned __int8 **)v4;
      v20 = *v4;
      if (v20 > 0xD5)
      {
        if (v20 == 233)
        {
          if ((*(_DWORD *)v4 & 0x7C0000) != 0x300000)
            return v17 & 0xFFFFFFFFFFFFFFFELL;
          v20 = *(_DWORD *)v4;
          v22 = v4 + 16;
        }
        else
        {
          if (v20 != 214)
            break;
          v22 = v4 + 24;
        }
      }
      else if (v20 == 155)
      {
        if ((**((_DWORD **)v4 + 2) & 0x18000) != 0)
          return v17 & 0xFFFFFFFFFFFFFFFELL;
        v22 = v4 + 24;
        if (!v4[48])
          v22 = v4 + 32;
        v20 = 155;
      }
      else
      {
        if (v20 != 176)
          break;
        v21 = *((unsigned int *)v4 + 5);
        if ((_DWORD)v21 == -1)
          return v17 & 0xFFFFFFFFFFFFFFFELL;
        v22 = &v4[8 * v21 + 40];
        v20 = 176;
      }
      v4 = *(unsigned __int8 **)v22;
    }
    while (*(unsigned __int8 ***)v22 != v19);
    if (v20 != 188)
      return v17 & 0xFFFFFFFFFFFFFFFELL;
    v23 = v17 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8) = sub_22EF5F824(*(_QWORD *)(a1 + 88), v6);
    v65 = &v67;
    v66 = 0x100000000;
    v24 = (uint64_t *)sub_22F3C2EEC(*(_QWORD *)(a1 + 88), v19[2], (uint64_t)&v65);
    v19[2] = (unsigned __int8 *)v24;
    v25 = *(_QWORD *)(v24[1] & 0xFFFFFFFFFFFFFFF0);
    if ((!v25 || *(_BYTE *)(v25 + 16) != 39)
      && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
       || (v25 = sub_22F10CF48(v25)) == 0))
    {
      sub_22F0D5A50((uint64_t)v24);
      v24 = (uint64_t *)(sub_22EB2EA08(a1, v29, 4, (uint64_t)v24) & 0xFFFFFFFFFFFFFFFELL);
      if (!v24)
      {
LABEL_55:
        v17 = 1;
        goto LABEL_58;
      }
LABEL_57:
      sub_22F0D5A50(v23);
      v17 = 1;
      v31 = sub_22EB54020((_QWORD *)a1, v24, 1, v30, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
      if (v31)
      {
        v33 = sub_22F369668(*(_QWORD *)(a1 + 88), *(_QWORD *)(v23 + 8), 2);
        v17 = sub_22F3C1F7C(*(_QWORD *)(a1 + 88), v33, v23, v31, 0);
        if ((_DWORD)v66)
        {
          v34 = (int *)sub_22F3C2100(*(_QWORD *)(a1 + 88), (int *)v17, (uint64_t *)v65, v66, 0);
          v17 = sub_22F3C2100(*(_QWORD *)(a1 + 88), v34, (uint64_t *)v65, v66, 1);
        }
      }
LABEL_58:
      if (v65 != &v67)
        free(v65);
      if ((v17 & 1) != 0)
        return 1;
      return v17 & 0xFFFFFFFFFFFFFFFELL;
    }
    if ((*(_DWORD *)(v25 + 40) & 6) == 2)
      goto LABEL_57;
    v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v25 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(v26 + 16) != 45)
      v26 = 0;
    v27 = sub_22F114198(*(_QWORD *)(v26 + 24));
    v63 = a1;
    v73 = v75;
    v74 = 0x100000000;
    v71[0] = &v72;
    v71[1] = (void *)0x100000000;
    if ((sub_22E8AEF5C((uint64_t)&v63, v27, (uint64_t)&v73, (uint64_t)v71) & 1) == 0)
    {
      v28 = (uint64_t)v24;
      goto LABEL_50;
    }
    v68 = v70;
    v69 = 0x200000000;
    v35 = sub_22F3C2EEC(*(_QWORD *)(a1 + 88), (unsigned __int8 *)v24, (uint64_t)&v68);
    v36 = (unsigned __int8 *)sub_22F2F3394(&v63, (uint64_t)&v73, v35);
    v37 = sub_22F3C2EEC(*(_QWORD *)(a1 + 88), v36, (uint64_t)&v68);
    v62 = sub_22E8AF0A4(&v63, v73[v74 - 1], (uint64_t)v71, v37, (uint64_t)&v68, 0) & 0xFFFFFFFFFFFFFFFELL;
    if (!v62)
      goto LABEL_66;
    if (sub_22EB5472C(a1, *(_QWORD *)(v62 + 8)))
    {
      v38 = (int *)sub_22F3C2EEC(*(_QWORD *)(a1 + 88), (unsigned __int8 *)v62, (uint64_t)&v68);
      if ((sub_22EB54790(a1, (uint64_t)v38, v38) & 0xFFFFFFFFFFFFFFFELL) == 0)
        goto LABEL_66;
    }
    v39 = v73[v74 - 1];
    v59 = *(_QWORD *)(v37 + 8);
    v61 = *(_QWORD *)(v39 + 48);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v59 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
      && (*(_BYTE *)(v37 + 1) & 3) != 0)
    {
      if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
      {
        v58 = 0;
        v40 = 24;
      }
      else
      {
        v58 = *(_QWORD *)(a1 + 1296);
        if (HIDWORD(v58))
          v40 = 32;
        else
          v40 = 24;
      }
      v41 = (unsigned int *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, v40, 3);
      v42 = sub_22F003694(v41, v59, 4, v37, 0, v58, 0);
      v39 = v73[v74 - 1];
      v37 = (uint64_t)v42;
    }
    v43 = *(_QWORD *)(a1 + 88);
    v44 = *v36 == 210;
    v45 = ((unint64_t)*(unsigned int *)(v39 + 28) >> 13) & 3 | v39;
    memset(v64, 0, sizeof(v64));
    v28 = 1;
    v60 = sub_22EFFAF50(v43, v37, v44, 0, 0, 0, 0, v39, v45, (uint64_t)v64, 0, v61, 1, 0, 0, 0, 0);
    v46 = sub_22EF5F824(*(_QWORD *)(a1 + 88), v61);
    v47 = sub_22F369668(*(_QWORD *)(a1 + 88), v46, 0);
    v48 = sub_22E90092C(a1, v60, v47, 12, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
    if (!v48)
      goto LABEL_67;
    *(_QWORD *)(v48 + 8) = v47;
    sub_22F0D5A50((uint64_t)v24);
    v49 = sub_22EB2D0B8() & 0xFFFFFFFFFFFFFFFELL;
    if (v49
      && (v50 = sub_22F369668(*(_QWORD *)(a1 + 88), v24[1], 0),
          v51 = sub_22EF579A8(*(_QWORD *)(a1 + 88), v50, 0),
          (v52 = sub_22E95CFA4(a1, 0, v51, 0, v49) & 0xFFFFFFFFFFFFFFFELL) != 0))
    {
      v53 = *(_QWORD *)(a1 + 88);
      v54 = sub_22F10ACF8(*(_QWORD *)(v24[1] & 0xFFFFFFFFFFFFFFF0));
      v55 = sub_22EF5B848(v53, v54, 2u);
      v56 = (int *)sub_22F3C1F7C(*(_QWORD *)(a1 + 88), v55, v35, v52, 0);
      v57 = (int *)sub_22F3C2100(*(_QWORD *)(a1 + 88), v56, (uint64_t *)v68, v69, 0);
      v28 = sub_22F3C2100(*(_QWORD *)(a1 + 88), v57, (uint64_t *)v68, v69, 1);
    }
    else
    {
LABEL_66:
      v28 = 1;
    }
LABEL_67:
    if (v68 != v70)
      free(v68);
LABEL_50:
    if (v71[0] != &v72)
      free(v71[0]);
    if (v73 != v75)
      free(v73);
    v24 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFELL);
    if ((v28 & 0xFFFFFFFFFFFFFFFELL) == 0)
      goto LABEL_55;
    goto LABEL_57;
  }
  return (uint64_t)v4;
}

uint64_t sub_22EB19A28(uint64_t a1, _DWORD *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  void *v11[36];

  v2 = (unint64_t)a2;
  v11[35] = *(void **)MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000);
  if ((*(_BYTE *)(v3 + 1) & 1) == 0 && (*(_QWORD *)(v3 + 20) & 0x2000000000) == 0)
  {
    v4 = (unint64_t)sub_22EBBCB14(a1, a2, 0, 0, (uint64_t)sub_22F2E6FA4, (uint64_t)v11);
    if (v4 < 2)
      return 1;
    v2 = v4 & 0xFFFFFFFFFFFFFFFELL;
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 0xFE00000u) >= 0x8180001 && v5 != 0 && *(_DWORD *)(v5 + 16) == 11)
    __asm { BR              X10 }
  return v2;
}

uint64_t sub_22EB1A358(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int *v21;
  int v22;
  int v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  unsigned __int8 *v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  BOOL v95;
  _BOOL4 v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int *v105;
  unsigned __int8 *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unsigned int *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t *v144;
  unint64_t v145;
  unsigned int *v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  int *v151;
  unsigned __int8 *v152;
  unsigned __int8 *v153;
  uint64_t v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  _BYTE v158[96];
  unint64_t v159;
  __int128 v160;
  void *__p;
  uint64_t v162;
  uint64_t v163;
  char v164;
  unint64_t v165;
  uint64_t v166[3];
  int v167;
  _BYTE *v168;
  _BYTE *v169;
  uint64_t v170;
  int v171;
  _BYTE v172[16];
  void *v173;
  uint64_t v174;
  _BYTE v175[16];
  uint64_t *v176;
  _BYTE v177[12];
  char v178;
  __int128 v179;
  uint64_t v180;
  char v181;
  uint64_t v182;

  v2 = a2;
  v182 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)(v4 + 16) & 0xFE00000u) >= 0x8180001 && v4 != 0 && *(_DWORD *)(v4 + 16) == 11)
  {
    v7 = sub_22EB19A28(a1, (_DWORD *)a2);
    if ((v7 & 1) != 0)
      return 1;
    v2 = v7 & 0xFFFFFFFFFFFFFFFELL;
  }
  if ((*(_BYTE *)(v2 + 1) & 3) == 0)
    return v2;
  v8 = *(_QWORD *)(v2 + 8);
  v165 = v8;
  v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v11 - 25 < 2 || (v11 & 0xFEu) - 2 <= 3)
    return v2;
  v12 = *(_QWORD *)(a1 + 72);
  if ((*(_BYTE *)(v12 + 1) & 1) != 0)
  {
    if (v8 == *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16840))
      return v2;
    v22 = *(_DWORD *)(v10 + 16) & 0x400;
    if (v11 == 45 || v22 != 0)
      return v2;
  }
  if ((v11 & 0xFF800FF) == 0x528000B)
    return v2;
  if ((*(_DWORD *)(v12 + 52) & 0x40000000) != 0 && !sub_22F420564(a1 + 24, (uint64_t)"cl_khr_fp16", 11, v12))
  {
    v44 = *(_QWORD *)(*(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v44 && (*(_DWORD *)(v44 + 16) & 0xFF800FF) == 110100491)
    {
      sub_22EFF605C(v2);
      sub_22E8FCA40((_QWORD *)a1, v46, 0x1133u, 0, (uint64_t)v166);
      LODWORD(v176) = 0;
      v47 = sub_22E8900C4((uint64_t)v166, (int *)&v176);
      sub_22E8901B8(v47, (uint64_t *)&v165);
      sub_22E903BEC((unsigned int *)v166);
      return 1;
    }
  }
  sub_22EB1B210(a1, (unsigned __int8 *)v2);
  v13 = sub_22EFFBBCC((unsigned __int8 *)v2);
  v14 = *v13;
  if (v14 == 199)
  {
    sub_22EB1B398((unsigned int *)a1, (uint64_t)v13, 0, 0);
  }
  else if (v14 == 198)
  {
    v15 = *(_QWORD *)(a1 + 3344);
    v16 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(a1 + 88) + 15192), "object_getClass", 0xFuLL);
    if (sub_22EC65CE0((_QWORD *)a1, v15, v16, 0, 0, 0))
    {
      sub_22EFF605C(v2);
      sub_22E8FCA40((_QWORD *)a1, v17, 0x1AA4u, 0, (uint64_t)v166);
      sub_22F0D5A50(*((_QWORD *)v13 + 2));
      *(_QWORD *)&v177[4] = 0;
      v178 = 0;
      v176 = (uint64_t *)(v18 | ((unint64_t)v18 << 32));
      v177[0] = 0;
      v180 = 0x1000000000000000;
      v179 = *(_OWORD *)"object_getClass(";
      v181 = 0;
      v19 = sub_22E890748((uint64_t)v166, &v176);
      v20 = *((unsigned int *)v13 + 7) | ((unint64_t)*((unsigned int *)v13 + 6) << 32);
      *(_QWORD *)((char *)&v160 + 4) = 0;
      BYTE12(v160) = 0;
      v162 = 0;
      v163 = 0x100000000000000;
      v164 = 0;
      v159 = v20;
      LOBYTE(v160) = 1;
      __p = (void *)41;
      sub_22E890748(v19, &v159);
      if (SHIBYTE(v163) < 0)
        operator delete(__p);
      if (SHIBYTE(v180) < 0)
        operator delete((void *)v179);
      v21 = (unsigned int *)v166;
    }
    else
    {
      sub_22EFF605C(v2);
      sub_22E8FCA40((_QWORD *)a1, v24, 0x1AA4u, 0, (uint64_t)v158);
      v21 = (unsigned int *)v158;
    }
    sub_22E903BEC(v21);
  }
  if ((v8 & 0xF) != 0 || (*(_BYTE *)((v8 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xF) != 0)
  {
    v25 = *v9;
    if ((*(_BYTE *)(*v9 + 8) & 0xF) != 0)
      v25 = (unint64_t)sub_22F10D2BC(v8);
    v9 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFF0);
    v165 = v25 & 0xFFFFFFFFFFFFFFF0;
    v8 = v25 & 0xFFFFFFFFFFFFFFF0;
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 31
    && *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 148) == 11)
  {
    sub_22EFF605C(v2);
    sub_22EE8B180(a1, v26);
  }
  v27 = sub_22EB1B770(a1, v2);
  v2 = v27;
  if ((v27 & 1) == 0)
  {
    v28 = (unsigned __int8 *)(v27 & 0xFFFFFFFFFFFFFFFELL);
    v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v30 & 8) != 0 && (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) == 0xC0)
      *(_WORD *)(a1 + 1693) = 257;
    if (sub_22F115260(v29) == 4)
      *(_WORD *)(a1 + 1693) = 257;
    v31 = sub_22F10D8C0(*v9);
    if (!v31)
    {
      v32 = *(_QWORD *)(*(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_DWORD *)(v32 + 16) & 0xFF80000) != 0x6D00000 || *(_DWORD *)(v32 + 16) != 11 || v32 == 0)
        v35 = 4;
      else
        v35 = 14;
      if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
      {
        v36 = 0;
        v37 = 24;
      }
      else
      {
        v36 = *(_QWORD *)(a1 + 1296);
        if (HIDWORD(v36))
          v37 = 32;
        else
          v37 = 24;
      }
      v2 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, v37, 3);
      sub_22F003694((unsigned int *)v2, v8, v35, (uint64_t)v28, 0, v36, 0);
      v38 = *v9;
      if (*v9 && *(_BYTE *)(v38 + 16) == 6
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v38 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 6
        && (v38 = sub_22F10CF48(v38)) != 0)
      {
        v39 = *(_QWORD *)(v38 + 32);
        v40 = *(_QWORD *)(v39 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v40 + 8) & 0xF) != 0)
          v40 = (unint64_t)sub_22F10D2BC(v39);
        v41 = v40 & 0xFFFFFFFFFFFFFFF0;
        v42 = *(_QWORD *)(a1 + 88);
        v43 = v2 & 0xFFFFFFFFFFFFFFFELL;
        v2 = sub_22E3CD3D4(v42 + 2032, 24, 3);
        sub_22F003694((unsigned int *)v2, v41, 61, v43, 0, 0, 0);
      }
      return v2;
    }
    v49 = v31;
    v166[1] = 0;
    v166[2] = 0;
    v166[0] = a1;
    v167 = 0;
    v168 = v172;
    v169 = v172;
    v170 = 2;
    v171 = 0;
    v173 = v175;
    v174 = 0x100000000;
    v176 = (uint64_t *)&v177[8];
    *(_QWORD *)v177 = 0x200000000;
    v50 = *(_QWORD *)(v31 + 48);
    v151 = (int *)(v2 & 0xFFFFFFFFFFFFFFFELL);
    if (v50)
    {
      v51 = 0;
      v52 = *(_QWORD **)(v31 + 40);
      while ((*(_DWORD *)((v52[v51] & 0xFFFFFFFFFFFFFFF8) + 28) & 0x7Fu) - 49 > 2)
      {
        if (v50 == ++v51)
          goto LABEL_98;
      }
      v53 = (unsigned __int8 *)(v2 & 0xFFFFFFFFFFFFFFFELL);
      if (*v28 == 210)
        v53 = (unsigned __int8 *)*((_QWORD *)v28 + 2);
      v54 = sub_22EFFBBCC(v53);
      v55 = (unsigned __int8 *)*((_QWORD *)v54 + 2);
      if (*v55 != 210)
      {
        v55 = (unsigned __int8 *)sub_22F3C2EEC(*(_QWORD *)(a1 + 88), v55, (uint64_t)&v176);
        v56 = *(_QWORD *)(a1 + 88);
        v58 = *(unsigned int *)v54;
        v57 = *((_DWORD *)v54 + 1);
        if ((v58 & 0x80000) != 0)
        {
          v59 = *((_QWORD *)v54 + 6);
          v60 = *((_QWORD *)v54 + 7);
        }
        else
        {
          v59 = 0;
          v60 = 0;
        }
        if ((v58 & 0x100000) != 0)
          v61 = *(_DWORD *)&v54[24 * ((v58 >> 19) & 1) + 56];
        else
          v61 = 0;
        v62 = *((_QWORD *)v54 + 3);
        if ((v58 & 0x80000) != 0)
          v63 = *((_QWORD *)v54 + 8);
        else
          v63 = ((unint64_t)*(unsigned int *)(v62 + 28) >> 13) & 3 | v62;
        v64 = *((_DWORD *)v54 + 10);
        v65 = *((_QWORD *)v54 + 4);
        v155 = *(_QWORD *)(v62 + 40);
        v156 = v64;
        v157 = v65;
        v2 = sub_22EFFAF50(v56, (uint64_t)v55, (v58 >> 18) & 1, v57, v59, v60, v61, v62, v63, (uint64_t)&v155, 0, *((_QWORD *)v54 + 1), BYTE1(*(_DWORD *)v54) & 3, ((*(_DWORD *)v54 >> 8) & 3u) >> 16, (*(_DWORD *)v54 >> 10) & 7, ((*(_DWORD *)v54 >> 10) & 7u) >> 16, (*(_DWORD *)v54 >> 22) & 3);
        v52 = *(_QWORD **)(v49 + 40);
        v50 = *(_QWORD *)(v49 + 48);
      }
      if (v50)
      {
        v150 = v49;
        v92 = 8 * v50;
        v152 = v55;
        v153 = v54;
        while (1)
        {
          v93 = *v52 & 0xFFFFFFFFFFFFFFF8;
          v94 = *(unsigned int *)(v93 + 28);
          v95 = v93 && (*(_DWORD *)(v93 + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD;
          v154 = v92;
          v96 = v95 && *(_DWORD *)(v93 + 68) & 1;
          v97 = *(_QWORD *)(a1 + 88);
          v98 = (*(_DWORD *)v54 >> 18) & 1;
          v99 = *(_QWORD *)(v93 + 48);
          v159 = 0;
          v160 = 0uLL;
          v100 = sub_22EFFAF50(v97, (uint64_t)v55, v98, 0, 0, 0, 0, v93, v93 | (v94 >> 13) & 3, (uint64_t)&v159, 0, v99, 1, 0, v96, SHIWORD(v96), 0);
          v101 = v100;
          if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
          {
            v102 = 0;
            v103 = 24;
          }
          else
          {
            v102 = *(_QWORD *)(a1 + 1296);
            v103 = HIDWORD(v102) ? 32 : 24;
          }
          v104 = *(_QWORD *)(v100 + 8);
          v105 = (unsigned int *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, v103, 3);
          v106 = (unsigned __int8 *)((unint64_t)sub_22F003694(v105, v104, 4, v101, 0, v102, 0) & 0xFFFFFFFFFFFFFFFELL);
          if (!v106)
            break;
          v107 = sub_22F3C2EEC(*(_QWORD *)(a1 + 88), v106, (uint64_t)&v176);
          sub_22E8BBCA0((uint64_t)v166, v93, v107);
          ++v52;
          v54 = v153;
          v92 = v154 - 8;
          v55 = v152;
          if (v154 == 8)
          {
            v49 = v150;
            goto LABEL_98;
          }
        }
        v2 = 1;
        goto LABEL_140;
      }
    }
LABEL_98:
    v66 = v49;
    v67 = *(_QWORD *)(*(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(v67 + 16) & 0xFF800FF) != 0x6D0000B || v67 == 0)
      v69 = 4;
    else
      v69 = 14;
    v70 = v2 & 0xFFFFFFFFFFFFFFFELL;
    if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
    {
      v71 = 0;
      v72 = 24;
    }
    else
    {
      v71 = *(_QWORD *)(a1 + 1296);
      if (HIDWORD(v71))
        v72 = 32;
      else
        v72 = 24;
    }
    v73 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, v72, 3);
    sub_22F003694((unsigned int *)v73, v8, v69, v70, 0, v71, 0);
    v75 = v66;
    if (*(_BYTE *)(v66 + 16) == 22)
    {
      sub_22F2F34EC(v166, *(int **)(v66 + 56), v74);
      if ((v76 & 0xFFFFFFFFFFFFFFFELL) != 0)
      {
        v77 = (unsigned __int8 *)(sub_22EB1A358(a1, v76 & 0xFFFFFFFFFFFFFFFELL, 0) & 0xFFFFFFFFFFFFFFFELL);
        if (v77)
        {
          v78 = sub_22F3C2EEC(*(_QWORD *)(a1 + 88), (unsigned __int8 *)(v73 & 0xFFFFFFFFFFFFFFFELL), (uint64_t)&v176);
          v79 = sub_22F3C2EEC(*(_QWORD *)(a1 + 88), v77, (uint64_t)&v176);
          v80 = *(_DWORD *)(v66 + 16);
          v81 = *(_QWORD *)(v78 + 8);
          v82 = *(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0);
          if (!v82 || *(_BYTE *)(v82 + 16) != 39)
            v82 = sub_22F10CF48(v82);
          if ((*(_BYTE *)(v82 + 40) & 6) != 0)
          {
            v113 = *(_QWORD *)(a1 + 88);
            v114 = sub_22F10ACF8(*(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0));
            v81 = sub_22EF5B848(v113, v114, 0);
            if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
            {
              v115 = 0;
              v116 = 24;
            }
            else
            {
              v115 = *(_QWORD *)(a1 + 1296);
              if (HIDWORD(v115))
                v116 = 32;
              else
                v116 = 24;
            }
            v83 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, v116, 3);
            sub_22F003694((unsigned int *)v83, v81, 68, v78 & 0xFFFFFFFFFFFFFFFELL, 0, v115, 0);
          }
          else
          {
            v83 = v78;
          }
          if (v80 < 0
            && (v120 = *(_QWORD *)(a1 + 88),
                v121 = (uint64_t *)(v81 & 0xFFFFFFFFFFFFFFF0),
                v122 = sub_22F10ACF8(*(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0)),
                sub_22EF5CCD0(v120, *(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v159),
                v159 != 1))
          {
            v133 = v83 & 0xFFFFFFFFFFFFFFFELL;
            v134 = *v121;
            if (!*v121 || *(_BYTE *)(v134 + 16) != 39)
              v134 = sub_22F10CF48(v134);
            v135 = *(_DWORD *)(v134 + 40);
            sub_22F0D5A50(v83 & 0xFFFFFFFFFFFFFFFELL);
            v137 = v136;
            v138 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v133 + 8) & 0xFFFFFFFFFFFFFFF0));
            if ((v138 & 8) != 0)
              v139 = *(_QWORD *)((v138 & 0xFFFFFFFFFFFFFFF0) + 0x18) | v138 & 7;
            else
              v139 = v138 & 7;
            v140 = *(_QWORD *)(a1 + 88);
            v141 = *(_QWORD *)(*(_QWORD *)(v140 + 16408) & 0xFFFFFFFFFFFFFFF0);
            if ((v139 & 0xCFFFFFFF8) != 0)
            {
              v142 = sub_22EF5DBC4(v140, v141, v139);
              v140 = *(_QWORD *)(a1 + 88);
            }
            else
            {
              v142 = v141 & 0xFFFFFFFFFFFFFFF0 | v139 & 7;
            }
            v143 = sub_22EF5B848(v140, v142, v135);
            v144 = sub_22EF579A8(*(_QWORD *)(a1 + 88), v143, 0);
            v145 = sub_22E95CFA4((_QWORD *)a1, v137, v144, v137, (unsigned __int8 *)v133);
            v2 = 1;
            if (v145 < 2)
              goto LABEL_140;
            v83 = v145;
          }
          else
          {
            LODWORD(v2) = 0;
          }
          if (sub_22EB5472C(a1, *(_QWORD *)(v79 + 8))
            && (sub_22EB54790(a1, v79, (int *)v79) & 0xFFFFFFFFFFFFFFFELL) == 0)
          {
            goto LABEL_194;
          }
          sub_22F0D5A50(v83 & 0xFFFFFFFFFFFFFFFELL);
          v123 = sub_22EB2D0B8() & 0xFFFFFFFFFFFFFFFELL;
          if (!v123)
            goto LABEL_194;
          if ((_DWORD)v2)
          {
            if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
            {
              v124 = 0;
              v125 = 24;
            }
            else
            {
              v124 = *(_QWORD *)(a1 + 1296);
              if (HIDWORD(v124))
                v125 = 32;
              else
                v125 = 24;
            }
            v146 = (unsigned int *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, v125, 3);
            v123 = (unint64_t)sub_22F003694(v146, v81, 1, v123, 0, v124, 0) & 0xFFFFFFFFFFFFFFFELL;
          }
          v147 = *(_QWORD *)(a1 + 88);
          v148 = sub_22F10ACF8(*(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0));
          v149 = sub_22EF5B848(v147, v148, 2u);
          v2 = sub_22F3C1F7C(*(_QWORD *)(a1 + 88), v149, v78 & 0xFFFFFFFFFFFFFFFELL, v123, 0);
          if (v2 <= 1)
          {
LABEL_194:
            v2 = 1;
            goto LABEL_140;
          }
LABEL_176:
          v130 = *(unsigned int *)v177;
          if (*(_DWORD *)v177)
          {
            v131 = v176;
            v132 = sub_22F3C2100(*(_QWORD *)(a1 + 88), (int *)(v2 & 0xFFFFFFFFFFFFFFFELL), v176, *(unsigned int *)v177, 0);
            v2 = sub_22F3C2100(*(_QWORD *)(a1 + 88), (int *)(v132 & 0xFFFFFFFFFFFFFFFELL), v131, v130, 1);
          }
          goto LABEL_140;
        }
      }
    }
    else
    {
      v84 = *(int **)(v66 + 56);
      if (v84)
      {
        sub_22F2F34EC(v166, v84, v74);
        v88 = v89;
        v85 = (uint64_t)v151;
      }
      else
      {
        v85 = (uint64_t)v151;
        sub_22F2F34EC(v166, v151, v74);
        v88 = v87;
      }
      v90 = v88 & 0xFFFFFFFFFFFFFFFELL;
      if ((v88 & 0xFFFFFFFFFFFFFFFELL) != 0)
      {
        v91 = *(int **)(v75 + 64);
        if (!v91)
          v91 = (int *)v85;
        sub_22F2F34EC(v166, v91, v86);
        v109 = v108 & 0xFFFFFFFFFFFFFFFELL;
        if ((v108 & 0xFFFFFFFFFFFFFFFELL) != 0)
        {
          if ((*(_BYTE *)(v90 + 1) & 3) != 0)
          {
            v110 = *(_QWORD *)(v90 + 8);
            if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
            {
              v111 = 0;
              v112 = 24;
            }
            else
            {
              v111 = *(_QWORD *)(a1 + 1296);
              if (HIDWORD(v111))
                v112 = 32;
              else
                v112 = 24;
            }
            v88 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, v112, 3);
            sub_22F003694((unsigned int *)v88, v110, 4, v90, 0, v111, 0);
            v85 = (uint64_t)v151;
          }
          if ((*(_BYTE *)(v109 + 1) & 3) != 0)
          {
            v117 = *(_QWORD *)(v109 + 8);
            if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
            {
              v118 = 0;
              v119 = 24;
            }
            else
            {
              v118 = *(_QWORD *)(a1 + 1296);
              if (HIDWORD(v118))
                v119 = 32;
              else
                v119 = 24;
            }
            v126 = (unsigned int *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, v119, 3);
            v109 = (unint64_t)sub_22F003694(v126, v117, 4, v109, 0, v118, 0) & 0xFFFFFFFFFFFFFFFELL;
            v85 = (uint64_t)v151;
          }
          v127 = *(_QWORD *)(a1 + 88);
          v128 = sub_22F10ACF8(*v9);
          v129 = sub_22EF5B848(v127, v128, 2u);
          v2 = sub_22F3C1F7C(*(_QWORD *)(a1 + 88), v129, v85, v109, v88 & 0xFFFFFFFFFFFFFFFELL);
          goto LABEL_176;
        }
      }
    }
    v2 = 1;
LABEL_140:
    if (v176 != (uint64_t *)&v177[8])
      free(v176);
    if (v173 != v175)
      free(v173);
    sub_22F2F4694((uint64_t)v166);
  }
  return v2;
}

unint64_t sub_22EB1B210(uint64_t a1, unsigned __int8 *a2)
{
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;

  result = (unint64_t)sub_22EFFBBCC(a2);
  if (*(unsigned __int8 *)result == 233)
  {
    v4 = result;
    if ((*(_DWORD *)result & 0x7C0000) == 0x140000)
    {
      result = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 16) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      {
        result = sub_22F10ACF8(result);
        v5 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v5 & 8) == 0 || *(_DWORD *)((v5 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 13 <= 6u)
        {
          v6 = sub_22EFFBBCC(*(unsigned __int8 **)(v4 + 16));
          result = sub_22EFFBE1C((unint64_t)v6, *(_QWORD *)(a1 + 88), 2);
          if ((_DWORD)result)
          {
            v7 = *(_QWORD *)(v4 + 8);
            if ((v7 & 4) == 0 && (*(_BYTE *)((v7 & 0xFFFFFFFFFFFFFFF0) + 8) & 4) == 0)
            {
              v8 = *(_DWORD *)(v4 + 4);
              v14 = *(_QWORD *)(a1 + 88) + 2128;
              v15 = 6676;
              sub_22F0D4E74(*(_QWORD *)(v4 + 16));
              v10 = v9;
              v13 = sub_22E3B8AAC(v14);
              sub_22E4D6448(v13 + 336, v10, 1);
              v16 = v4;
              sub_22EB52944(a1, v8, &v16, 1uLL, (uint64_t *)&v13);
              if (v13 && v14)
                sub_22E3BB10C(v14, v13);
              v11 = *(_DWORD *)(v4 + 4);
              v12 = *(_QWORD *)(a1 + 88) + 2128;
              v13 = 0;
              v14 = v12;
              v15 = 5679;
              v16 = v4;
              result = sub_22EB52944(a1, v11, &v16, 1uLL, (uint64_t *)&v13);
              if (v13)
              {
                result = v14;
                if (v14)
                  return sub_22E3BB10C(v14, v13);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

unsigned int *sub_22EB1B398(unsigned int *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  int v9;
  int v10;
  unsigned int *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  llvm::StringMapImpl *v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unsigned int v35[24];
  _BYTE v36[96];
  _BYTE v37[96];
  unint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  void *__p;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  __int128 v58;
  uint64_t v59;
  char v60;
  _BYTE v61[96];
  unint64_t v62;

  v4 = *(_QWORD *)(a2 + 16);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 40);
    v6 = v5 & 0xFFFFFFFFFFFFFFF8;
    if ((v5 & 7) == 0 && v6 != 0)
    {
      v8 = *(_QWORD *)(v6 + 16);
      if (*(_DWORD *)v8 == 3)
      {
        v9 = *(unsigned __int16 *)(v8 + 16);
        v10 = *(unsigned __int8 *)(v8 + 18);
        if (v9 == 29545 && v10 == 97)
        {
          v15 = result;
          v16 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 8);
          if ((*(_BYTE *)(a2 + 40) & 1) != 0)
            v16 = sub_22F10ACF8(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0));
          result = (unsigned int *)sub_22E4EBB74(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0));
          if (result)
          {
            result = (unsigned int *)sub_22F272660((uint64_t)result);
            if (result)
            {
              v62 = 0;
              v17 = sub_22EFDB894((uint64_t)result, v6, (uint64_t *)&v62);
              v18 = v62;
              result = (unsigned int *)sub_22F3B46CC(v62);
              if (!result)
              {
                result = (unsigned int *)sub_22F32C4AC(v18);
                if ((unsigned int *)v17 == result)
                {
                  v19 = *((_QWORD *)v15 + 418);
                  v20 = *(llvm::StringMapImpl **)(*((_QWORD *)v15 + 11) + 15192);
                  if (a4)
                  {
                    v21 = sub_22E3CB704(v20, "object_setClass", 0xFuLL);
                    if (sub_22EC65CE0(v15, v19, v21, 0, 0, 0))
                    {
                      sub_22F0D60E4(a4);
                      v23 = sub_22F141A3C(v22, 0, *((_QWORD **)v15 + 14), *((_DWORD **)v15 + 9));
                      sub_22EFF605C(a2);
                      sub_22E8FCA40(v15, v24, 0x1AA3u, 0, (uint64_t)v61);
                      if ((*(_BYTE *)(a2 + 40) & 2) != 0)
                        v25 = *(_DWORD *)(a2 + 32);
                      else
                        sub_22F0D5A50(*(_QWORD *)(a2 + 24));
                      v57 = 0;
                      v56 = 0;
                      v54 = v25 | ((unint64_t)v25 << 32);
                      v55 = 0;
                      v59 = 0x1000000000000000;
                      v58 = *(_OWORD *)"object_setClass(";
                      v60 = 0;
                      v30 = sub_22E890748((uint64_t)v61, &v54);
                      v31 = *(unsigned int *)(a2 + 36);
                      v48 = 0;
                      v49 = 0;
                      v51 = 0;
                      v52 = 0x100000000000000;
                      v53 = 0;
                      v46 = v31 | (a3 << 32);
                      v47 = 1;
                      v50 = (void *)44;
                      v32 = sub_22E890748(v30, &v46);
                      v41 = 0;
                      v40 = 0;
                      v43 = 0;
                      v44 = 0x100000000000000;
                      v38 = v23 | ((unint64_t)v23 << 32);
                      v39 = 0;
                      __p = (void *)41;
                      v45 = 0;
                      sub_22E890748(v32, &v38);
                      if (SHIBYTE(v44) < 0)
                        operator delete(__p);
                      goto LABEL_33;
                    }
                    sub_22E8FCA40(v15, *(_DWORD *)(a2 + 32), 0x1AA3u, 0, (uint64_t)v37);
                    v29 = (unsigned int *)v37;
                  }
                  else
                  {
                    v26 = sub_22E3CB704(v20, "object_getClass", 0xFuLL);
                    if (sub_22EC65CE0(v15, v19, v26, 0, 0, 0))
                    {
                      sub_22EFF605C(a2);
                      sub_22E8FCA40(v15, v27, 0x1AA4u, 0, (uint64_t)v61);
                      if ((*(_BYTE *)(a2 + 40) & 2) != 0)
                        v28 = *(_DWORD *)(a2 + 32);
                      else
                        sub_22F0D5A50(*(_QWORD *)(a2 + 24));
                      v57 = 0;
                      v56 = 0;
                      v54 = v28 | ((unint64_t)v28 << 32);
                      v55 = 0;
                      v59 = 0x1000000000000000;
                      v58 = *(_OWORD *)"object_getClass(";
                      v60 = 0;
                      v33 = sub_22E890748((uint64_t)v61, &v54);
                      v34 = *(unsigned int *)(a2 + 36) | ((unint64_t)*(unsigned int *)(a2 + 32) << 32);
                      v48 = 0;
                      v49 = 0;
                      v51 = 0;
                      v52 = 0x100000000000000;
                      v53 = 0;
                      v46 = v34;
                      v47 = 1;
                      v50 = (void *)41;
                      sub_22E890748(v33, &v46);
LABEL_33:
                      if (SHIBYTE(v52) < 0)
                        operator delete(v50);
                      if (SHIBYTE(v59) < 0)
                        operator delete((void *)v58);
                      v29 = (unsigned int *)v61;
                      goto LABEL_38;
                    }
                    sub_22E8FCA40(v15, *(_DWORD *)(a2 + 32), 0x1AA4u, 0, (uint64_t)v36);
                    v29 = (unsigned int *)v36;
                  }
LABEL_38:
                  sub_22E903BEC(v29);
                  sub_22E8FCA40(v15, *(_DWORD *)(v17 + 24), 0x163Cu, 0, (uint64_t)v35);
                  return sub_22E903BEC(v35);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EB1B770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v2 = a2;
  v5 = (_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  if ((v4 & 4) == 0 && (*(_BYTE *)((v4 & 0xFFFFFFFFFFFFFFF0) + 8) & 4) == 0)
    goto LABEL_25;
  while (1)
  {
    v7 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
    if (v7)
      v8 = (*(_DWORD *)(v7 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v8 = 0;
    if (v8)
    {
      v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      goto LABEL_7;
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
      break;
    v21 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
    v6 = sub_22F10CF48(v7);
    v7 = v21;
    if (!v6)
      break;
LABEL_7:
    v4 = *(_QWORD *)(v6 + 32);
  }
  v9 = sub_22F10C2A4(v7);
  if (v9 && (*(_DWORD *)(v9 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v9 + 76) & 1) != 0)
  {
LABEL_41:
    v19 = *(_QWORD *)(v2 + 8);
    sub_22EFF605C(v2);
    sub_22F31DBEC(a1, v19, v20, 8, 6);
    goto LABEL_25;
  }
  v10 = v5;
  while (2)
  {
    v11 = *(_QWORD *)(*v10 & 0xFFFFFFFFFFFFFFF0);
    if (v11)
      v12 = (*(_DWORD *)(v11 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v12 = 0;
    if (v12)
    {
      v13 = *(_QWORD *)(*v10 & 0xFFFFFFFFFFFFFFF0);
LABEL_23:
      v10 = (_QWORD *)(v13 + 32);
      continue;
    }
    break;
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
  {
    v22 = *(_QWORD *)(*v10 & 0xFFFFFFFFFFFFFFF0);
    v13 = sub_22F10CF48(v11);
    v11 = v22;
    if (v13)
      goto LABEL_23;
  }
  v14 = sub_22F10C2A4(v11);
  if (v14 && (*(_DWORD *)(v14 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v14 + 76) & 2) != 0)
    goto LABEL_41;
LABEL_25:
  if ((*v5 & 4) == 0 && (*(_BYTE *)((*v5 & 0xFFFFFFFFFFFFFFF0) + 8) & 4) == 0)
  {
    v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v5 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (!v15 || *(_BYTE *)(v15 + 16) != 45)
    {
      v16 = sub_22EB50C80(a1, (_DWORD *)v2);
      if (v16 >= 2)
        v17 = v16;
      else
        v17 = v2;
      if ((v16 & 1) != 0)
        return 1;
      else
        return v17;
    }
  }
  return v2;
}

uint64_t sub_22EB1B954(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22EB1922C(a1, a2);
  if ((v3 & 1) != 0)
    return 1;
  result = sub_22EB1A358(a1, v3 & 0xFFFFFFFFFFFFFFFELL, 0);
  if ((result & 1) != 0)
    return 1;
  return result;
}

unint64_t sub_22EB1B998(uint64_t a1, void *a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  _BOOL4 v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  BOOL v21;
  unint64_t v23;

  v3 = 1;
  v4 = sub_22EB1B954(a1, a2);
  if ((v4 & 1) == 0)
  {
    v3 = v4 & 0xFFFFFFFFFFFFFFFELL;
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v6 = *(_DWORD *)(a1 + 56);
    v7 = (unsigned __int16)v6 >> 14;
    v8 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFF0);
    v9 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0);
    if ((unsigned __int16)v6 >> 14
      && sub_22F10E0EC(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0))
      && ((~*(_DWORD *)(*(_QWORD *)(a1 + 72) + 244) & 0x600) != 0 || *(_DWORD *)(*(_QWORD *)(a1 + 80) + 524)))
    {
      v10 = *(_QWORD *)(a1 + 88);
      if (v7 == 2)
      {
        v11 = sub_22EF6A108(v10, *(_QWORD *)(v10 + 16576), v5);
        v9 = *v8;
        if (v11 == 1)
        {
          v12 = sub_22F10E0B8(*v8);
          v13 = *(_QWORD *)(a1 + 88);
          v14 = *(_QWORD *)(v13 + 16576);
          if (v12)
            goto LABEL_12;
          goto LABEL_20;
        }
      }
      else
      {
        v15 = sub_22EF6A108(v10, *(_QWORD *)(v10 + 16568), v5);
        v9 = *v8;
        if (v15 == 1)
        {
          v16 = sub_22F10E0B8(*v8);
          v13 = *(_QWORD *)(a1 + 88);
          v14 = *(_QWORD *)(v13 + 16568);
          if (v16)
          {
LABEL_12:
            v14 = sub_22F369F4C(v13, v14);
            v17 = a1;
            v18 = v3;
            v19 = 50;
            return sub_22E90092C(v17, v18, v14, v19, 0, 0);
          }
LABEL_20:
          v17 = a1;
          v18 = v3;
          v19 = 42;
          return sub_22E90092C(v17, v18, v14, v19, 0, 0);
        }
      }
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v20)
      v21 = (*(_DWORD *)(v20 + 16) & 0xFF800FF) == 110100491;
    else
      v21 = 0;
    if (v21 && (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 8) == 0)
    {
      v14 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16560);
      goto LABEL_20;
    }
    if (sub_22F1107D8(v9))
    {
      v23 = (unint64_t)sub_22EF6A3F8(*(_QWORD *)(a1 + 88), v3);
      if (v23 >= 0x10)
        return sub_22E90092C(a1, v3, v23, 30, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
      if (sub_22F1124D8(*v8))
      {
        v23 = sub_22EF6A4D4(*(uint64_t **)(a1 + 88), v5);
        return sub_22E90092C(a1, v3, v23, 30, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
      }
    }
  }
  return v3;
}

unint64_t sub_22EB1BB84(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  _QWORD v29[3];
  int v30;
  uint64_t v31;

  v3 = a2[1];
  v4 = sub_22EB1B998(a1, a2);
  if ((v4 & 1) != 0)
    return 1;
  v5 = v4 & 0xFFFFFFFFFFFFFFFELL;
  v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v7 && *(_BYTE *)(v7 + 16) == 39 && (*(_DWORD *)(v7 + 40) & 6) == 2)
  {
    v18 = sub_22F369668(*(_QWORD *)(a1 + 88), v6, 1);
    v19 = sub_22E90092C(a1, v5, v18, 68, 0, 0);
    v5 = 1;
    if ((v19 & 1) != 0)
      return v5;
    v5 = v19 & 0xFFFFFFFFFFFFFFFELL;
  }
  v8 = (uint64_t *)(v3 & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
    v10 = *(_DWORD *)(v9 + 16) == 11;
  else
    v10 = 0;
  if (!v10)
    goto LABEL_35;
  if ((*(_DWORD *)(v9 + 16) & 0xFF00000) == 0x6900000)
  {
    v11 = *(_QWORD *)(a1 + 72);
    if ((*(_DWORD *)(v11 + 52) & 0x40000000) == 0 || sub_22F420564(a1 + 24, (uint64_t)"cl_khr_fp64", 11, v11))
    {
      v12 = *(_QWORD *)(a1 + 88);
      v13 = 16568;
    }
    else
    {
      if ((*(_DWORD *)(v9 + 16) & 0xFF80000) != 0x6900000)
        goto LABEL_14;
      v12 = *(_QWORD *)(a1 + 88);
      v13 = 16560;
    }
    v5 = sub_22E90092C(a1, v5, *(_QWORD *)(v12 + v13), 42, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
  }
LABEL_14:
  if (((*(unsigned __int16 *)(*(_QWORD *)(a1 + 72) + 248) | (*(char *)(*(_QWORD *)(a1 + 72) + 250) << 16)) & 0x80000000) == 0
    || !(*(unsigned int (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) + 704))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088)))
  {
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(*v8 + 8) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_DWORD *)(v14 + 16);
  if (v14)
    v16 = v15 == 11;
  else
    v16 = 0;
  if (v16)
  {
    if (((*(_DWORD *)(v14 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
      goto LABEL_35;
  }
  else if (v14 && v15 == 44)
  {
    v17 = sub_22F114198(*(_QWORD *)(v14 + 24));
    if ((*(_BYTE *)(v17 + 74) & 1) == 0 && *(_QWORD *)(v17 + 128) <= 7uLL
      || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v14 + 24)) + 76) & 0x80) != 0)
    {
      goto LABEL_35;
    }
  }
  else if (v15 != 9)
  {
    goto LABEL_35;
  }
  sub_22EF5CCD0(*(_QWORD *)(a1 + 88), v9, (uint64_t)v29);
  v20 = v29[0];
  sub_22EF5CCD0(*(_QWORD *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16496) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v29);
  if (v20 < v29[0])
  {
    v21 = sub_22F110B50(*v8);
    v22 = 16496;
    if (v21)
      v22 = 16544;
    v5 = sub_22E90092C(a1, v5, *(_QWORD *)(*(_QWORD *)(a1 + 88) + v22), 30, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
  }
LABEL_35:
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0 && (*(_BYTE *)(v5 + 1) & 3) != 0)
  {
    v23 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
    if (v23 > 3 || v23 == 2)
    {
      v25 = *(_QWORD *)(v5 + 8);
      LODWORD(v29[0]) = 9;
      v29[1] = 0;
      v29[2] = v25;
      v30 = 0;
      v31 = 0;
      sub_22EFF605C(v5);
      v27 = sub_22EC45014(a1, v29, v26, v5, 0, 0);
      if ((v27 & 1) == 0)
        return v27 & 0xFFFFFFFFFFFFFFFELL;
      return 1;
    }
  }
  return v5;
}

uint64_t sub_22EB1BEA4(uint64_t a1, unint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v4 = sub_22F1110EC(*(_QWORD *)(*a2 & 0xFFFFFFFFFFFFFFF0), 0);
  v5 = *a2;
  if (v4)
  {
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v6)
      v7 = (*(_DWORD *)(v6 + 16) & 0xFF800FF) == 86507531;
    else
      v7 = 0;
    if (!v7)
      return 4 * (*(_DWORD *)(v6 + 16) - 33 < 2);
    return 4;
  }
  result = sub_22F115260(v5);
  if ((_DWORD)result == 4)
    return result;
  if ((sub_22F111624(a2, *(_QWORD *)(a1 + 88)) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
  {
    v9 = *(_QWORD *)(*a2 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v9 + 17) & 4) == 0)
    {
      v10 = sub_22F10C2A4(v9);
      if (v10)
      {
        v11 = v10;
        if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 35 <= 2 && !sub_22E3CD2C4(v10) && (sub_22EB1C044(v11) & 1) == 0)
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v11 + 104) + 96), *(_QWORD *)(v11 + 104));
          if ((**(_QWORD **)(v11 + 128) & 0x100000000000) != 0)
            return 1;
        }
      }
    }
  }
  v12 = *a2;
  if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 2) != 0)
  {
    if (sub_22F40ACB8(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0)))
      return 0;
    v12 = *a2;
  }
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 33 < 2)
    return 4;
  if ((**(_BYTE **)(a1 + 72) & 0x10) != 0)
    return 3;
  else
    return 2;
}

uint64_t sub_22EB1C044(uint64_t a1)
{
  uint64_t result;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((**(_QWORD **)(a1 + 128) & 0x20000000000000) != 0)
    return 1;
  result = sub_22EABDAF8(a1);
  if ((_DWORD)result)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
    return (**(_QWORD **)(a1 + 128) & 0x20000000000) == 0;
  }
  return result;
}

unsigned int *sub_22EB1C0AC(uint64_t a1, unsigned __int8 *a2, int a3)
{
  uint64_t v6;
  unsigned int *result;
  int v8;
  int v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  unint64_t *v18;
  int v19;
  int v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  unsigned int *v45;
  int v46;
  unint64_t v47;
  int v48;

  v48 = a3;
  v6 = *((_QWORD *)a2 + 1);
  v47 = v6;
  result = (unsigned int *)sub_22EB1BEA4(a1, &v47);
  switch((int)result)
  {
    case 0:
      goto LABEL_9;
    case 1:
      sub_22F0D5A50((uint64_t)a2);
      v20 = v19;
      v45 = (unsigned int *)(*(_QWORD *)(a1 + 88) + 2128);
      v46 = 6448;
      v21 = (_BYTE *)sub_22E3B8AAC((uint64_t)v45);
      v44 = (unint64_t)v21;
      v22 = v21 + 1;
      v23 = *v21;
      v22[v23] = 9;
      *v21 = v23 + 2;
      v21 += 16;
      *(_QWORD *)&v21[8 * v23] = v6;
      v24 = (v23 + 1);
      v22[v24] = 2;
      *(_QWORD *)&v21[8 * v24] = a3;
      result = (unsigned int *)sub_22EB52944(a1, v20, 0, 0, (uint64_t *)&v44);
      if (v44)
      {
        result = v45;
        if (v45)
          result = (unsigned int *)sub_22E3BB10C((unint64_t)v45, v44);
      }
LABEL_9:
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) != 45)
        return result;
      sub_22F0D5A50((uint64_t)a2);
      v26 = v25;
      v45 = (unsigned int *)(*(_QWORD *)(a1 + 88) + 2128);
      v46 = 6878;
      v27 = (_BYTE *)sub_22E3B8AAC((uint64_t)v45);
      v44 = (unint64_t)v27;
      v28 = v27 + 1;
      v29 = *v27;
      v28[v29] = 9;
      v30 = v27 + 16;
      *(_QWORD *)&v27[8 * v29 + 16] = v6;
      v31 = (v29 + 1);
      v28[v31] = 2;
      *v27 = v29 + 2;
      *(_QWORD *)&v27[8 * v31 + 16] = a3;
      v32 = sub_22E9866D4((_QWORD *)a1, (uint64_t)a2);
      v33 = *v27;
      v28[v33] = 2;
      *(_QWORD *)&v30[8 * v33] = v32;
      v34 = (v33 + 1);
      v28[v34] = 1;
      *v27 = v33 + 2;
      *(_QWORD *)&v30[8 * v34] = ".c_str()";
      v16 = v26;
      goto LABEL_11;
    case 2:
    case 3:
      sub_22F0D5A50((uint64_t)a2);
      v9 = v8;
      v45 = (unsigned int *)(*(_QWORD *)(a1 + 88) + 2128);
      v46 = 6328;
      v10 = (**(_QWORD **)(a1 + 72) >> 9) & 1;
      v11 = (_BYTE *)sub_22E3B8AAC((uint64_t)v45);
      v44 = (unint64_t)v11;
      v12 = v11 + 1;
      v13 = *v11;
      v12[v13] = 3;
      *v11 = v13 + 3;
      v11 += 16;
      *(_QWORD *)&v11[8 * v13] = v10;
      v14 = (v13 + 1);
      v12[v14] = 9;
      *(_QWORD *)&v11[8 * v14] = v6;
      v15 = (v13 + 2);
      v12[v15] = 2;
      *(_QWORD *)&v11[8 * v15] = a3;
      goto LABEL_3;
    case 4:
      if (sub_22F115260(v6) == 4)
      {
        sub_22F0D5A50((uint64_t)a2);
        sub_22E8FCA40((_QWORD *)a1, v17, 0xBB9u, 0, (uint64_t)&v44);
        v18 = &v44;
LABEL_17:
        v42 = sub_22E8901B8((uint64_t)v18, (uint64_t *)&v47);
        sub_22E8900C4(v42, &v48);
        return sub_22E903BEC((unsigned int *)&v44);
      }
      if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 16)
         - 33 > 1)
      {
        sub_22F0D5A50((uint64_t)a2);
        sub_22E8FCA40((_QWORD *)a1, v41, 0xBBCu, 0, (uint64_t)&v44);
        v43 = *a2 == 180;
        v18 = (unint64_t *)sub_22E894E38((uint64_t)&v44, (unsigned __int8 *)&v43);
        goto LABEL_17;
      }
      sub_22F0D5A50((uint64_t)a2);
      v9 = v35;
      v45 = (unsigned int *)(*(_QWORD *)(a1 + 88) + 2128);
      v46 = 3002;
      v36 = (_BYTE *)sub_22E3B8AAC((uint64_t)v45);
      v44 = (unint64_t)v36;
      v37 = v36 + 1;
      v38 = *v36;
      v37[v38] = 9;
      v39 = v38 + 1;
      *v36 = v38 + 2;
      v36 += 16;
      *(_QWORD *)&v36[8 * v38] = v6;
      v40 = v48;
      v37[v39] = 2;
      *(_QWORD *)&v36[8 * v39] = v40;
LABEL_3:
      v16 = v9;
LABEL_11:
      result = (unsigned int *)sub_22EB52944(a1, v16, 0, 0, (uint64_t *)&v44);
      if (v44)
      {
        result = v45;
        if (v45)
          return (unsigned int *)sub_22E3BB10C((unint64_t)v45, v44);
      }
      return result;
    default:
      return result;
  }
}

uint64_t sub_22EB1C438(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned int a4, _DWORD *a5, int a6, int a7, uint64_t a8, char a9, uint64_t a10)
{
  BOOL v10;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  __int16 v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _OWORD *v65;
  uint64_t v66;
  int v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  int v74;
  BOOL v75;
  unint64_t v76;
  unsigned int v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  _WORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  _OWORD v95[2];
  __int16 v96;
  int v97;
  uint64_t v98;
  __int16 v99;
  char v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  _BYTE v107[64];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  int v116;
  int v117;
  __int16 v118;
  char v119;
  void *v120[2];
  _QWORD v121[33];
  uint64_t v122[2];
  _QWORD *v123;
  int v124;
  _DWORD v125[8];
  _QWORD v126[6];

  v126[4] = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)a3)
    v10 = *(_DWORD *)(a3 + 4) == 0;
  else
    v10 = 1;
  if (!v10 && *(_QWORD *)(a3 + 8) == 0)
    return 1;
  v90 = 0;
  v120[0] = v121;
  v120[1] = (void *)0x800000000;
  v121[32] = 0;
  *(_QWORD *)&v91 = 0;
  DWORD2(v91) = 0;
  v92 = 0;
  sub_22EB223B4(a1, (uint64_t)a5, (uint64_t)v120, (uint64_t)&v91, &v90);
  v18 = v91 & 7;
  v19 = v91 & 0xFFFFFFFFFFFFFFF8;
  if ((v91 & 7) != 0)
    v20 = 0;
  else
    v20 = v91 & 0xFFFFFFFFFFFFFFF8;
  v21 = DWORD2(v91);
  if (v20 && sub_22E95A25C(v20))
    goto LABEL_18;
  if (v18 != 5 || (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
  {
    if (!*(_QWORD *)(a3 + 8))
      goto LABEL_20;
    v22 = sub_22E958204(a1, a3, 0);
    if (v22)
    {
      if ((sub_22E958490(a1, a3, v22) & 1) != 0)
      {
LABEL_18:
        v23 = 1;
        goto LABEL_57;
      }
LABEL_20:
      v10 = *a5 == 8;
      v104 = 0;
      v105 = v107;
      if (v10)
        v24 = 12;
      else
        v24 = 0;
      v106 = 0x800000000;
      v108 = 0;
      v109 = 0;
      v110 = 0;
      v111 = (_QWORD *)a1;
      v112 = v91;
      v113 = v92;
      v114 = 0;
      v115 = v24;
      v116 = 0;
      v117 = 16842752;
      v118 = 0;
      v119 = 0;
      sub_22EC56024((uint64_t)&v104);
      v25 = v90;
      v26 = a4;
      if (a4 || v90)
      {
        LOBYTE(v95[0]) = 0;
        LODWORD(v122[0]) = 0;
        v23 = 1;
        if ((sub_22ED566F4(a1, (uint64_t)&v104, a2, a3, 0, 0, v95, v26 | 0x100000000, (int *)v122, 1) & 1) != 0)
          goto LABEL_48;
        if (LOBYTE(v95[0]) || (v28 = v104, (_DWORD)v104 == 1))
        {
          v29 = a1;
          v30 = a3;
          v31 = v26;
          v32 = a7;
          v33 = v25;
          goto LABEL_35;
        }
      }
      else
      {
        v27 = 0;
        if (v20 && !*(_QWORD *)(a3 + 8))
          v27 = sub_22E90328C(a1) != 0;
        sub_22EC64BE8(a1, (uint64_t)&v104, (uint64_t)a2, a3, !v27, 0);
        v28 = v104;
        if ((_DWORD)v104 == 1)
        {
          v29 = a1;
          v30 = a3;
          v31 = 0;
          v32 = a7;
          v33 = 0;
LABEL_35:
          v34 = sub_22ED57D18(v29, v30, v31, (uint64_t)&v91, v32, v33);
LABEL_36:
          v23 = v34;
          goto LABEL_48;
        }
        if (v27)
        {
          v35 = sub_22EB233F0((_QWORD *)a1, (int *)&v104, (uint64_t)a2, v20, 1);
          v36 = v35 & 0xFFFFFFFFFFFFFFFELL;
          if ((v35 & 0xFFFFFFFFFFFFFFFELL) == 0)
            v36 = 1;
          if ((v35 & 1) != 0)
            v23 = 1;
          else
            v23 = v36;
          if (v35)
            goto LABEL_48;
          v28 = v104;
LABEL_46:
          if (v28 == 5)
          {
LABEL_47:
            v23 = 1;
            goto LABEL_48;
          }
          if (v20)
          {
            if (!(_DWORD)v106)
            {
              if (a6)
              {
                if ((**(_WORD **)(a1 + 72) & 0x108) == 0)
                {
                  v38 = sub_22EA03278(a1, v21, v20, a2);
                  if (v38)
                  {
                    v39 = v38;
                    v40 = *(unsigned int *)(v38 + 28);
                    v41 = v106;
                    if (v106 >= HIDWORD(v106))
                    {
                      v87 = *(unsigned int *)(v38 + 28);
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v40 = v87;
                      v41 = v106;
                    }
                    *((_QWORD *)v105 + v41) = (v40 >> 13) & 3 | v39;
                    LODWORD(v106) = v106 + 1;
                    LODWORD(v104) = 2;
                  }
                }
              }
            }
          }
          v42 = sub_22EB2348C(a1, a3, (uint64_t)&v104, a6);
          v43 = v42;
          v44 = v106;
          if ((_DWORD)v106 || (v42 & 1) != 0)
            goto LABEL_132;
          if (*(_DWORD *)(a3 + 4))
            v45 = *(_DWORD *)a3 == 0;
          else
            v45 = 1;
          if (v45 && !*(_QWORD *)(a3 + 8) && (**(_BYTE **)(a1 + 72) & 0x10) != 0)
          {
            v86 = *(_QWORD *)(a1 + 88);
            v46 = sub_22EBBB18C(a1);
            v47 = v46;
            if (v46 > 0xF)
            {
              v52 = sub_22F10ACF8(*(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF0));
              v53 = sub_22F10C2A4(*(_QWORD *)(v52 & 0xFFFFFFFFFFFFFFF0));
              if (v53 && (*(_DWORD *)(v53 + 28) & 0x7Fu) - 35 <= 2)
                goto LABEL_86;
            }
            else
            {
              v48 = *(_QWORD *)(a1 + 216);
              if (v48)
              {
                v49 = *(_WORD *)(v48 + 8);
                if ((v49 & 0x7Eu) - 58 >= 0xFFFFFFFC)
                {
                  v50 = v49 & 0x7F;
                  v51 = -40;
                  if (v50 > 70)
                  {
                    switch(v50)
                    {
                      case 'S':
                        goto LABEL_104;
                      case 'G':
                        v51 = -56;
                        goto LABEL_104;
                      case 'Q':
                        goto LABEL_104;
                    }
                  }
                  else
                  {
                    if (v50 <= 0x18)
                    {
                      if (v50 == 16)
                        goto LABEL_83;
                      if (((1 << v50) & 0x1066) != 0)
                        goto LABEL_104;
                      if (v50 == 24)
                      {
LABEL_83:
                        v51 = -48;
LABEL_104:
                        v62 = *(_QWORD *)(v48 + v51 + 16);
                        v63 = (_QWORD *)(v62 & 0xFFFFFFFFFFFFFFF8);
                        if ((v62 & 4) != 0)
                          v63 = (_QWORD *)*v63;
                        if (!v63)
                          goto LABEL_107;
                        v53 = (uint64_t)(v63 - 8);
LABEL_86:
                        v101 = v53;
                        if (sub_22F3B1AA4(v53))
                        {
                          v54 = DWORD2(v91);
                          sub_22E8FCA40((_QWORD *)a1, SDWORD2(v91), 0x1511u, 0, (uint64_t)v122);
                          *(_QWORD *)&v95[0] = v91;
                          v55 = sub_22E894538((uint64_t)v122, (uint64_t *)v95);
                          sub_22E890024(v55, &v101);
                          if (v47 >= 0x10)
                          {
                            BYTE4(v95[1]) = 0;
                            *(_QWORD *)((char *)v95 + 12) = 0;
                            *(_QWORD *)&v95[0] = v54 | (v54 << 32);
                            BYTE8(v95[0]) = 0;
                            v99 = 1536;
                            v98 = 0;
                            HIBYTE(v95[1]) = 0;
                            v96 = 0;
                            v97 = 0;
                            strcpy((char *)&v95[1] + 8, "this->");
                            v100 = 0;
                            sub_22E890748((uint64_t)v122, v95);
                            if (SHIBYTE(v99) < 0)
                              operator delete(*((void **)&v95[1] + 1));
                            v93 = v91;
                            v94 = v92;
                            v23 = sub_22F061D9C(v86, 0, v47, 1, 0, 0, 0, v26, 0, (uint64_t)&v93, v25);
                          }
                          else
                          {
                            memset(v95, 0, sizeof(v95));
                            v56 = *(_QWORD *)(v101 + 48);
                            v102 = xmmword_22F4605B0;
                            v103 = v56;
                            v57 = v86;
                            v58 = sub_22F0AA9D0(v86, (uint64_t)&v102);
                            v59 = v54 | (v54 << 32);
                            sub_22F0AB9D8((uint64_t)v95 + 8, v86, v58, v59);
                            *(_QWORD *)&v95[0] = v59;
                            v60 = *((_QWORD *)&v95[0] + 1);
                            if (*((_QWORD *)&v95[0] + 1))
                            {
                              if (HIDWORD(v95[1]))
                              {
                                v61 = (void *)sub_22E3CD3D4(v86 + 2032, DWORD2(v95[1]), 3);
                                memcpy(v61, *(const void **)&v95[1], DWORD2(v95[1]));
                                v60 = *((_QWORD *)&v95[0] + 1);
                              }
                              else
                              {
                                v61 = *(void **)&v95[1];
                              }
                              v57 = v86;
                            }
                            else
                            {
                              v61 = 0;
                            }
                            v23 = sub_22F060928(v57, v60, (uint64_t)v61, v26, &v91, v25);
                            if (HIDWORD(v95[1]))
                              free(*(void **)&v95[1]);
                          }
                          sub_22E903BEC((unsigned int *)v122);
                          goto LABEL_48;
                        }
                        goto LABEL_107;
                      }
                    }
                    if (v50 == 70)
                    {
LABEL_102:
                      v51 = -64;
                      goto LABEL_104;
                    }
                  }
                  if ((v50 - 52) < 6)
                  {
                    v51 = -72;
                    goto LABEL_104;
                  }
                  if ((v50 - 33) < 5)
                    goto LABEL_102;
                  goto LABEL_83;
                }
              }
            }
          }
LABEL_107:
          if ((a9 & 1) != 0)
            goto LABEL_47;
          *(_QWORD *)&v93 = 0;
          v64 = *(_QWORD *)(a3 + 8);
          DWORD2(v95[0]) = 16843009;
          BYTE12(v95[0]) = 1;
          *(_WORD *)((char *)v95 + 13) = 0;
          *(_QWORD *)&v95[1] = v20;
          *((_QWORD *)&v95[1] + 1) = v64;
          *(_QWORD *)&v95[0] = &unk_24FAB8500;
          HIBYTE(v95[0]) = a7;
          v65 = (_OWORD *)a8;
          if (a8)
          {
            *(_QWORD *)(a8 + 16) = v20;
            if (v64)
              *(_QWORD *)(a8 + 24) = v64;
          }
          else
          {
            v65 = v95;
          }
          if (sub_22EB22808(a1, (uint64_t)a2, a3, (uint64_t)&v104, (uint64_t)v65, 0, 0, 0, (uint64_t *)&v93))
          {
            v66 = v93;
            if (a10 && (_QWORD)v93)
            {
              v122[0] = v93;
              v80 = sub_22F338CC8(a1 + 10176, v122);
              v81 = sub_22EC68FEC(*(_QWORD *)(v80 + 8));
              sub_22F330280((uint64_t)v122, v81);
              if (v124 && !*v123)
              {
                if ((v122[0] & 7) != 0)
                  v83 = 0;
                else
                  v83 = (_WORD *)(v122[0] & 0xFFFFFFFFFFFFFFF8);
                v84 = *(_QWORD *)(v80 + 40);
                if (v84)
                  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v84 + 48))(v84, v122);
                *(_QWORD *)a10 = 0;
                *(_QWORD *)(a10 + 8) = 0;
                *(_DWORD *)(a10 + 16) = 0;
                *(_WORD *)(a10 + 16) = *v83 & 0x1FF;
                *(_QWORD *)(a10 + 8) = v83;
                *(_DWORD *)a10 = v125[5];
                sub_22F338D48(a1, v93);
                v23 = 0;
                v82 = 1;
              }
              else
              {
                v82 = 0;
                *(_QWORD *)(*(_QWORD *)(v80 + 8) + 408) = 0;
              }
              *(_QWORD *)&v102 = v126;
              sub_22E8D19C8((void ***)&v102);
              if (v123 != (_QWORD *)v125)
                free(v123);
              if ((v82 & 1) != 0)
                goto LABEL_48;
              v66 = v93;
            }
            if (v66)
              v23 = v66;
            else
              v23 = 1;
LABEL_48:
            if (HIBYTE(v117))
            {
              if ((_DWORD)v104 == 5)
              {
                sub_22EC64D18(v111, (uint64_t)&v104);
              }
              else if (v109 && (*(_DWORD *)(v111[9] + 52) & 0x400000) != 0)
              {
                sub_22E90B5FC((unint64_t)v111, (uint64_t)&v104);
              }
            }
            if (v108)
            {
              v85 = sub_22EC6CBD0(v108);
              MEMORY[0x2348A0E9C](v85, 0x10E0C409F09D3C3);
            }
            if (v105 != v107)
              free(v105);
            goto LABEL_57;
          }
          v67 = v43;
          if ((_DWORD)v104 == 2)
          {
            v68 = *(_QWORD *)v105 & 0xFFFFFFFFFFFFFFFCLL;
            v69 = *(_DWORD *)(v68 + 28);
            if ((v69 & 0x7Fu) <= 0x2F && ((1 << (v69 & 0x7F)) & 0xC00000060000) != 0)
            {
              v68 = sub_22EFBAEA4(*(_QWORD *)v105 & 0xFFFFFFFFFFFFFFFCLL);
              v69 = *(_DWORD *)(v68 + 28);
            }
            if ((v69 & 0x7F) == 0x33)
            {
              LODWORD(v104) = 0;
              LODWORD(v106) = 0;
              if (v108)
              {
                v70 = sub_22EC6CBD0(v108);
                MEMORY[0x2348A0E9C](v70, 0x10E0C409F09D3C3);
              }
              HIBYTE(v118) = 0;
              v108 = 0;
              v109 = 0;
              v71 = *(_QWORD *)(v68 + 40);
              if ((v71 & 7) != 0)
                v72 = 0;
              else
                v72 = v71 & 0xFFFFFFFFFFFFFFF8;
              v73 = sub_22EB233F0((_QWORD *)a1, (int *)&v104, (uint64_t)a2, v72, 0);
              if (v73 <= 1)
                v23 = 1;
              else
                v23 = v73;
              goto LABEL_48;
            }
          }
          v44 = v106;
          v43 = v67;
LABEL_132:
          v74 = v43;
          if (!v44 || !sub_22E8BB0E8(*(_QWORD *)v105 & 0xFFFFFFFFFFFFFFFCLL))
            goto LABEL_157;
          if (!a7)
            goto LABEL_155;
          v75 = !*(_DWORD *)(a3 + 4) || *(_DWORD *)a3 == 0;
          if (!v75 || *(_QWORD *)(a3 + 8) || (_DWORD)v104 == 3)
            goto LABEL_157;
          if ((_DWORD)v104 == 4)
            goto LABEL_155;
          v76 = *(_QWORD *)v105 & 0xFFFFFFFFFFFFFFFCLL;
          v77 = *(_DWORD *)(v76 + 28) & 0x7F;
          v78 = v77;
          if (v77 <= 0x2F)
          {
            v78 = *(_DWORD *)(v76 + 28) & 0x7F;
            if (((1 << v77) & 0xC00000060000) != 0)
              v78 = *(_DWORD *)(sub_22EFBAEA4(*(_QWORD *)v105 & 0xFFFFFFFFFFFFFFFCLL) + 28) & 0x7F;
          }
          if ((v78 - 49) < 3)
            goto LABEL_155;
          v79 = v77;
          if (v77 <= 0x2F)
          {
            v79 = v77;
            if (((1 << v77) & 0xC00000060000) != 0)
              v79 = *(_DWORD *)(sub_22EFBAEA4(v76) + 28) & 0x7F;
          }
          if (v79 == 68)
            goto LABEL_155;
          if (v77 <= 0x2F && ((1 << v77) & 0xC00000060000) != 0)
            v77 = *(_DWORD *)(sub_22EFBAEA4(v76) + 28) & 0x7F;
          if (v77 == 58)
          {
LABEL_155:
            v34 = sub_22EC21A04(a1, (uint64_t *)a3, v26, (uint64_t)&v104, v90, a2, 0);
          }
          else
          {
LABEL_157:
            if (v26 || v90)
              v34 = sub_22ED66318((_QWORD *)a1, a3, v26, (uint64_t)&v104, v74, v90);
            else
              v34 = sub_22EB235A8((_QWORD *)a1, a3, (uint64_t)&v104, v74, 0);
          }
          goto LABEL_36;
        }
      }
      v23 = 1;
      goto LABEL_46;
    }
  }
  v23 = sub_22ED57D18(a1, a3, a4, (uint64_t)&v91, a7, v90);
LABEL_57:
  if (v120[0] != v121)
    free(v120[0]);
  return v23;
}

uint64_t sub_22EB1CFA4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t *a5, unint64_t a6, unsigned int a7, uint64_t a8, int a9)
{
  char v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v20;
  uint64_t v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  __int16 v24;
  uint64_t v25;
  unsigned int v26;
  BOOL v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  unsigned int v45;
  uint64_t v46;
  unsigned __int8 *v47;
  int v48;
  unsigned __int8 *v49;
  int v50;
  uint64_t v51;
  unsigned __int8 *v52;
  _BYTE *v53;
  char v54;
  unint64_t v55;
  unsigned __int8 *v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  unsigned __int8 **v61;
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  _DWORD *v66;
  unsigned __int8 *v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t *v73;
  unsigned int v74;
  char **v75;
  BOOL v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unsigned int v96;
  unint64_t v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  __int16 v102;
  unsigned int v103;
  uint64_t v104;
  unsigned int v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  int v110;
  uint64_t v111;
  void *v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  int v116;
  unint64_t v117;
  void *v118;
  _QWORD *v119;
  int v120;
  unint64_t v121;
  unint64_t v122;
  int v123;
  int v124;
  uint64_t v125;
  unsigned int v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  int i;
  uint64_t v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  void *v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  _BOOL4 v147;
  uint64_t v148;
  BOOL v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned int v159;
  unint64_t v160;
  char v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  BOOL v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unsigned int v176;
  unsigned int v177;
  uint64_t v178;
  int v179;
  unsigned int v180;
  uint64_t v181;
  unint64_t v182;
  unsigned int *v183;
  unsigned int *v184;
  __int16 v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  char v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  int v203;
  unsigned int v204;
  unsigned __int8 *v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unsigned int v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unsigned int v227;
  uint64_t v228;
  uint64_t v229;
  _QWORD *v230;
  uint64_t v231;
  unsigned int v232;
  uint64_t v233;
  uint64_t v234;
  int v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  unint64_t v240;
  _QWORD *v241;
  void *__src;
  unsigned __int8 *v243;
  unsigned int v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247[3];
  __int128 v248;
  __int128 v249;
  __int128 v250;
  int v251;
  uint64_t v252;
  void *v253;
  uint64_t v254;
  _BYTE v255[128];
  uint64_t *v256;
  _BYTE v257[12];
  char v258;
  void *v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  uint64_t v263;

  v16 = a9;
  v263 = *MEMORY[0x24BDAC8D0];
  v17 = sub_22EB29350(a1, a2, a3);
  if ((v17 & 1) != 0 || (sub_22EB2AE1C(a1, (uint64_t)a5, a6) & 1) != 0)
    return 1;
  v20 = (unsigned __int8 *)(v17 & 0xFFFFFFFFFFFFFFFELL);
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0)
  {
    v21 = *((_QWORD *)v20 + 1);
    v22 = *(_QWORD **)(a1 + 88);
LABEL_7:
    if (v21 == v22[2105])
    {
      v23 = sub_22E9058F0(v20);
      if ((v24 & 0x100) == 0)
      {
        if (a6)
        {
          v25 = 0;
          v26 = 1;
          while ((*(_BYTE *)(a5[v25] + 1) & 0x80) == 0)
          {
            v25 = v26;
            v27 = a6 > v26++;
            if (!v27)
              goto LABEL_13;
          }
          goto LABEL_110;
        }
LABEL_13:
        if (*v23 == 211)
          return (uint64_t)sub_22ED15954(a1, a2, (uint64_t)v20, (uint64_t)v23, a4, (uint64_t)a5, a6, a7, a8, 1, v24 & 1);
        return sub_22ED199E0(a1, a2, v20, a4, a5, a6, a7, a8, a9);
      }
      v21 = *((_QWORD *)v20 + 1);
      v22 = *(_QWORD **)(a1 + 88);
    }
    if (v21 != v22[2107])
    {
LABEL_38:
      v43 = v20;
      do
      {
        v44 = v43;
        v45 = *v43;
        if (v45 > 0xD5)
        {
          if (v45 == 233)
          {
            v48 = *(_DWORD *)v43;
            v45 = *(_DWORD *)v44;
            if ((v48 & 0x7C0000) != 0x300000)
              goto LABEL_56;
            v47 = v44 + 16;
          }
          else
          {
            if (v45 != 214)
              goto LABEL_54;
            v47 = v43 + 24;
          }
        }
        else if (v45 == 155)
        {
          if ((**((_DWORD **)v43 + 2) & 0x18000) != 0)
            goto LABEL_78;
          v47 = v43 + 24;
          if (!v44[48])
            v47 = v44 + 32;
          v45 = 155;
        }
        else
        {
          if (v45 != 176)
            goto LABEL_54;
          v46 = *((unsigned int *)v43 + 5);
          if ((_DWORD)v46 == -1)
            goto LABEL_78;
          v47 = &v43[8 * v46 + 40];
          v45 = 176;
        }
        v43 = *(unsigned __int8 **)v47;
      }
      while (v43 != v44);
      if (v45 != 233)
        goto LABEL_75;
LABEL_54:
      v48 = *(_DWORD *)v44;
      v45 = *(_DWORD *)v44;
LABEL_56:
      if ((v48 & 0x7C0000) == 0x100000)
      {
        v49 = (unsigned __int8 *)*((_QWORD *)v44 + 2);
        if (!v49)
        {
          v44 = 0;
          v50 = 1;
LABEL_121:
          v70 = *((_QWORD *)v44 + 2);
          if (!v70 || (*(_DWORD *)(v70 + 28) & 0x7Eu) - 58 < 0xFFFFFFFA)
          {
            v53 = (_BYTE *)*((_QWORD *)v44 + 2);
            goto LABEL_250;
          }
          v71 = *((_QWORD *)v44 + 2);
          if (!sub_22EFC01DC(v70, 0))
          {
            v53 = (_BYTE *)v71;
            v16 = a9;
            goto LABEL_250;
          }
          v243 = v20;
          v72 = *(_QWORD **)(*(_QWORD *)(v71 + 48) & 0xFFFFFFFFFFFFFFF0);
          if (*((_BYTE *)v72 + 16) != 26)
            v72 = 0;
          v240 = v71;
          v241 = v72;
          v239 = *(_QWORD *)(a1 + 88);
          v73 = *(uint64_t **)(v239 + 15208);
          v74 = sub_22EFC01DC(v71, 0);
          if (v74 > 0x7E7)
          {
            v231 = v73[1];
            if (v231 + 2024 <= (unint64_t)v74)
            {
              v232 = v74 - v231 - 2024;
              v233 = v73[2];
            }
            else
            {
              v232 = v74 - 2024;
              v233 = *v73;
            }
            v75 = (char **)(v233 + 48 * v232);
          }
          else
          {
            v75 = &(&off_24FAC8C40)[6 * v74];
          }
          v16 = a9;
          if (strchr(v75[1], 42))
            v76 = v241 == 0;
          else
            v76 = 1;
          v20 = v243;
          if (v76 || (v77 = v241[2], a6 < (unsigned __int16)(v77 >> 38)))
          {
            v53 = (_BYTE *)v240;
            goto LABEL_250;
          }
          v78 = (unsigned __int16)(v77 >> 38);
          v256 = (uint64_t *)&v257[8];
          *(_QWORD *)v257 = 0x800000000;
          LODWORD(v245) = a7;
          LODWORD(v237) = v50;
          if (!v78)
          {
            v97 = 0;
            goto LABEL_239;
          }
          v79 = 0;
          LOBYTE(v236) = 0;
          v80 = v241 + 5;
          __src = &v241[v78 + 5];
          while (1)
          {
            v81 = *v80;
            v246 = v79;
            v82 = sub_22EB1B954(a1, (void *)a5[v79]);
            if ((v82 & 1) != 0)
            {
              v97 = 0;
              v20 = v243;
              v50 = v237;
              goto LABEL_239;
            }
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16) != 39)
              break;
            v83 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFFFELL) + 8);
            v84 = *(_QWORD *)((v81 & 0xFFFFFFFFFFFFFFF0) + 8);
            if ((v84 & 8) != 0 && (*(_DWORD *)((v84 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0)
              break;
            v238 = v83 & 0xFFFFFFFFFFFFFFF0;
            v85 = *(_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF0);
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v85 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
              break;
            v86 = *(_QWORD *)((sub_22F10ACF8(v85) & 0xFFFFFFFFFFFFFFF0) + 8);
            if ((v86 & 8) == 0 || (*(_DWORD *)((v86 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0)
              break;
            v87 = sub_22F10ACF8(*(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0));
            v88 = *(_QWORD *)((v87 & 0xFFFFFFFFFFFFFFF0) + 8);
            a7 = v245;
            v89 = v246;
            if ((v88 & 8) != 0 && (*(_DWORD *)((v88 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0)
            {
LABEL_152:
              ++v80;
              v79 = v89 + 1;
              if (v80 == __src)
              {
                v50 = v237;
                if ((v236 & 1) != 0)
                {
                  v96 = *(_DWORD *)v257;
LABEL_163:
                  LOWORD(v247[0]) = 0;
                  *(uint64_t *)((char *)&v247[1] + 4) = 0;
                  *(uint64_t *)((char *)v247 + 4) = 0;
                  v248 = 0u;
                  v249 = 0u;
                  v250 = 0u;
                  v251 = 0;
                  v98 = v241[3];
                  BYTE2(v247[0]) = ((v241[2] & 0x800000000000000) != 0) | BYTE2(v247[0]) & 0xFC;
                  v246 = sub_22EF63D8C(v239, v98, v256, v96, (__int128 *)v247, 0);
                  v99 = *(_WORD *)(v240 + 80) & 0x7F;
                  v100 = -40;
                  if (v99 > 0x46)
                  {
                    if (v99 != 83)
                    {
                      if (v99 != 71)
                      {
                        v16 = a9;
                        if (v99 != 81)
                          goto LABEL_184;
                        goto LABEL_189;
                      }
                      v100 = -56;
                    }
                    v16 = a9;
                    goto LABEL_189;
                  }
                  if (v99 > 0x18)
                    goto LABEL_183;
                  if (v99 == 16)
                    goto LABEL_166;
                  if (((1 << v99) & 0x1066) == 0)
                  {
                    if (v99 == 24)
                    {
LABEL_166:
                      v100 = -48;
                    }
                    else
                    {
LABEL_183:
                      if (v99 == 70)
                      {
                        v100 = -64;
                      }
                      else
                      {
LABEL_184:
                        v105 = v99 - 52;
                        v106 = v99 - 33 >= 5;
                        v107 = -48;
                        if (!v106)
                          v107 = -64;
                        if (v105 >= 6)
                          v100 = v107;
                        else
                          v100 = -72;
                      }
                    }
                  }
LABEL_189:
                  v108 = *(_QWORD *)(v240 + 72 + v100 + 16);
                  v109 = (_QWORD *)(v108 & 0xFFFFFFFFFFFFFFF8);
                  if ((v108 & 4) != 0)
                    v109 = (_QWORD *)*v109;
                  v110 = *(_DWORD *)(v240 + 24);
                  v111 = *(_QWORD *)(v240 + 40);
                  if ((v111 & 7) != 0)
                    v112 = 0;
                  else
                    v112 = (void *)(v111 & 0xFFFFFFFFFFFFFFF8);
                  LOBYTE(__src) = (*(_DWORD *)(a1 + 56) & 0xFC) != 4;
                  v253 = v112;
                  LODWORD(v254) = v110;
                  sub_22EFC6D6C((uint64_t)v255, (uint64_t)v112);
                  v113 = sub_22EFC4400(v239, (uint64_t)v109, v110, (uint64_t *)&v253, v246, 0, 1, (char)__src, 0, 1, 0, 0);
                  v253 = v255;
                  v254 = 0x1000000000;
                  v114 = *(_QWORD *)(v246 & 0xFFFFFFFFFFFFFFF0);
                  v115 = *(_QWORD *)(v114 + 16);
                  v246 = v113;
                  if ((v115 & 0x3FFFC000000000) != 0)
                  {
                    v116 = 0;
                    v117 = 0;
                    v118 = (void *)(v114 + 40);
                    v119 = (_QWORD *)(v113 + 72);
                    if (!v113)
                      v119 = 0;
                    v241 = v119;
                    __src = v118;
                    v238 = (unsigned __int16)(v115 >> 38);
                    do
                    {
                      v120 = v116;
                      v121 = sub_22EFBF080(v239, (uint64_t)v241, 0, 0, 0, *((_QWORD *)__src + v117), 0, 0, 0);
                      v122 = v121;
                      v123 = *(_DWORD *)(v121 + 96);
                      *(_DWORD *)(v121 + 96) = v123 & 0xFFF01FFF;
                      if (v117 >= 0xFF)
                      {
                        sub_22F3AC2B8(v121, v117);
                        v124 = v120;
                      }
                      else
                      {
                        v124 = v120;
                        *(_DWORD *)(v121 + 96) = v123 & 0xF0001FFF | v120 & 0xFF00000;
                      }
                      v125 = v254;
                      v113 = v246;
                      if (v254 >= (unint64_t)HIDWORD(v254))
                      {
                        llvm::SmallVectorBase<unsigned int>::grow_pod();
                        v124 = v120;
                        v113 = v246;
                        v125 = v254;
                      }
                      *((_QWORD *)v253 + v125) = v122;
                      v126 = v254 + 1;
                      LODWORD(v254) = v254 + 1;
                      ++v117;
                      v116 = v124 + 0x100000;
                    }
                    while (v238 != v117);
                    __src = v253;
                  }
                  else
                  {
                    v126 = 0;
                    __src = v255;
                  }
                  v20 = v243;
                  if (!v113 || (v127 = v113, (*(_DWORD *)(v113 + 28) & 0x7F) != 0x53))
                  {
                    v128 = *(_QWORD *)(v113 + 16);
                    v129 = v128 & 0xFFFFFFFFFFFFFFF8;
                    if ((v128 & 4) != 0)
                      v129 = *(_QWORD *)v129;
                    for (i = *(_WORD *)(v129 + 8) & 0x7F; i != 83; i = *(_WORD *)(v129 + 8) & 0x7F)
                    {
                      v131 = -40;
                      if (i > 70)
                      {
                        if (i == 71)
                        {
                          v131 = -56;
                          v20 = v243;
                          v113 = v246;
                          v16 = a9;
                        }
                        else
                        {
                          v20 = v243;
                          v113 = v246;
                          v16 = a9;
                          if (i != 81)
                            goto LABEL_221;
                        }
                      }
                      else
                      {
                        if (i > 0x18)
                          goto LABEL_220;
                        if (i == 16)
                          goto LABEL_214;
                        if (((1 << i) & 0x1066) != 0)
                          goto LABEL_227;
                        if (i == 24)
                        {
LABEL_214:
                          v131 = -48;
                        }
                        else
                        {
LABEL_220:
                          if (i != 70)
                          {
LABEL_221:
                            v132 = i - 52;
                            if ((i - 33) >= 5)
                              v133 = -48;
                            else
                              v133 = -64;
                            if (v132 >= 6)
                              v131 = v133;
                            else
                              v131 = -72;
                            goto LABEL_227;
                          }
                          v131 = -64;
                        }
                      }
LABEL_227:
                      v134 = *(_QWORD *)(v129 + v131 + 16);
                      v129 = v134 & 0xFFFFFFFFFFFFFFF8;
                      if ((v134 & 4) != 0)
                        v129 = *(_QWORD *)v129;
                    }
                    v127 = v129 - 40;
                  }
                  v135 = v113;
                  if (v126)
                  {
                    v136 = 8 * v126;
                    v137 = (void *)sub_22E3CD3D4(*(_QWORD *)(v127 + 88) + 2032, v136, 3);
                    *(_QWORD *)(v135 + 120) = v137;
                    memmove(v137, __src, v136);
                  }
                  sub_22EA084D0(a1, v135, (_BYTE *)v240, 1);
                  v50 = v237;
                  if (v253 != v255)
                    free(v253);
                  a7 = v245;
                  v97 = v246;
                }
                else
                {
                  v97 = 0;
                  v20 = v243;
                }
LABEL_239:
                if (v256 != (uint64_t *)&v257[8])
                {
                  v138 = v97;
                  free(v256);
                  v97 = v138;
                  v50 = v237;
                }
                if (v97)
                {
                  v139 = *(_QWORD *)(a1 + 88);
                  v140 = *(_QWORD *)(v97 + 56);
                  if ((v140 & 4) != 0)
                  {
                    v142 = (uint64_t *)(v140 & 0xFFFFFFFFFFFFFFF8);
                    v141 = *v142;
                    v246 = v142[1];
                  }
                  else
                  {
                    v141 = 0;
                    v246 = 0;
                  }
                  v244 = (*(_DWORD *)v20 >> 8) & 3;
                  v143 = (*(_DWORD *)v44 >> 23) & 3;
                  v243 = *(unsigned __int8 **)(v97 + 48);
                  v253 = *(void **)(v97 + 40);
                  LODWORD(v254) = 0;
                  v144 = v97;
                  sub_22EFC6D6C((uint64_t)v255, (uint64_t)v253);
                  if (v141)
                    v145 = 48;
                  else
                    v145 = 32;
                  LOBYTE(v235) = v143;
                  v20 = (unsigned __int8 *)sub_22E3CD3D4(v139 + 2032, v145, 3);
                  sub_22EFF6AE4((uint64_t)v20, v139, v141, v246, 0, v144, 0, (uint64_t)&v253, 0, 0, (uint64_t)v243, v244, SHIWORD(v244), v235);
                  v53 = (_BYTE *)v144;
                  a7 = v245;
                  v50 = v237;
                }
                else
                {
                  v53 = (_BYTE *)v240;
                }
LABEL_250:
                if ((*((_DWORD *)v53 + 7) & 0x7Eu) - 52 > 5)
                  goto LABEL_267;
                v246 = (unint64_t)v53;
                if (v50)
                {
                  sub_22F0D5A50((uint64_t)v20);
                  v18 = 1;
                  v147 = sub_22ED10E50((_QWORD *)a1, v246, 1, 0, v146);
                  v53 = (_BYTE *)v246;
                  if (!v147)
                    return v18;
                }
                v247[0] = (uint64_t)v53;
                v148 = *(_QWORD *)(*((_QWORD *)v53 + 6) & 0xFFFFFFFFFFFFFFF0);
                if (v148)
                  v149 = *(_BYTE *)(v148 + 16) == 26;
                else
                  v149 = 0;
                if (v149
                  || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v148 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
                  && (v148 = sub_22F10CF48(v148)) != 0)
                {
                  v150 = (unsigned __int16)(*(_QWORD *)(v148 + 16) >> 38);
                }
                else
                {
                  v150 = 0;
                }
                v151 = v247[0];
                if (a6 > v150)
                {
                  if (!sub_22EFBF68C(v247[0]))
                  {
LABEL_264:
                    v155 = *(_QWORD *)(a1 + 72);
                    if ((*(_BYTE *)(v155 + 68) & 0x40) == 0)
                    {
LABEL_265:
                      v54 = 0;
                      v53 = (_BYTE *)v246;
                      goto LABEL_268;
                    }
                    v53 = (_BYTE *)v246;
                    if ((*(_WORD *)(v155 + 96) & 0x80) == 0)
                    {
LABEL_267:
                      v54 = 0;
                      goto LABEL_268;
                    }
                    if (!sub_22EFC01DC(v246, 0))
                      goto LABEL_265;
                    v162 = 0;
                    LOBYTE(__src) = v161;
                    v243 = v20;
                    v53 = (_BYTE *)v246;
                    LODWORD(v245) = a7;
                    while (1)
                    {
                      v163 = *(_QWORD *)(*((_QWORD *)v53 + 6) & 0xFFFFFFFFFFFFFFF0);
                      if (v163 && *(_BYTE *)(v163 + 16) == 26)
                        break;
                      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v163 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
                      {
                        v163 = sub_22F10CF48(v163);
                        v53 = (_BYTE *)v246;
                        if (v163)
                          break;
                        v165 = 0;
                      }
                      else
                      {
                        v165 = 0;
                        v53 = (_BYTE *)v246;
                      }
LABEL_294:
                      if (v162 >= v165)
                        goto LABEL_267;
                      v166 = *(_QWORD *)(*((_QWORD *)v53 + 15) + 8 * v162);
                      v167 = a5[v162];
                      if (v167)
                        v168 = v166 == 0;
                      else
                        v168 = 1;
                      if (!v168)
                      {
                        v169 = *(_QWORD *)(*(_QWORD *)(v166 + 48) & 0xFFFFFFFFFFFFFFF0);
                        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v169 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
                          && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v167 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                              + 8) & 0xFFFFFFFFFFFFFFF0)
                                      + 16) == 39)
                        {
                          v170 = *(_QWORD *)((sub_22F10ACF8(v169) & 0xFFFFFFFFFFFFFFF0) + 8);
                          if ((v170 & 8) != 0)
                            v244 = *(_DWORD *)((v170 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
                          else
                            v244 = 0;
                          v171 = *(_QWORD *)(a5[v162] + 8);
                          v241 = (_QWORD *)(v171 & 0xFFFFFFFFFFFFFFF0);
                          v172 = sub_22F10ACF8(*(_QWORD *)(v171 & 0xFFFFFFFFFFFFFFF0));
                          v173 = v172;
                          v174 = v172 & 0xFFFFFFFFFFFFFFF0;
                          v175 = *(_QWORD *)((v172 & 0xFFFFFFFFFFFFFFF0) + 8);
                          if ((v175 & 8) != 0)
                          {
                            v53 = (_BYTE *)v246;
                            if (!v244)
                              goto LABEL_318;
                            v176 = *(_DWORD *)((v175 & 0xFFFFFFFFFFFFFFF0) + 0x18);
                            if (v176 >= 0x800)
                            {
                              v177 = v176 >> 11;
                              v178 = *(_QWORD *)(a1 + 88);
                              v179 = (v176 >> 11) - 27;
                              if (v177 < 0x1B)
                                v179 = *(_DWORD *)(*(_QWORD *)(v178 + 15072) + 4 * v177);
                              v180 = v244 - 27;
                              if (v244 < 0x1B)
                                v180 = *(_DWORD *)(*(_QWORD *)(v178 + 15072) + 4 * v244);
                              if (v179 != v180)
                              {
LABEL_318:
                                a7 = v245;
                                goto LABEL_332;
                              }
                            }
                          }
                          else
                          {
                            v53 = (_BYTE *)v246;
                            if (!v244)
                              goto LABEL_318;
                          }
                          LOBYTE(v239) = v171;
                          v181 = a5[v162];
                          if ((*(_BYTE *)(v181 + 1) & 3) != 0)
                          {
                            v237 = *(_QWORD *)(v181 + 8);
                            v238 = v172;
                            v182 = v172 & 0xFFFFFFFFFFFFFFF0;
                            v183 = (unsigned int *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 24, 3);
                            v184 = sub_22F003694(v183, v237, 5, v181, 0, 0, 0);
                            v174 = v182;
                            v173 = v238;
                            a5[v162] = (uint64_t)v184;
                            v175 = *(_QWORD *)(v182 + 8);
                          }
                          if ((v175 & 8) != 0)
                          {
                            v185 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFFFF0) + 0x18);
                            v186 = *(_QWORD *)((v175 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
                          }
                          else
                          {
                            v186 = 0;
                            v185 = 0;
                          }
                          v187 = *(_QWORD *)(a1 + 88);
                          v188 = *(_QWORD *)v174;
                          if ((*(_BYTE *)(*(_QWORD *)v174 + 8) & 0xF) != 0)
                          {
                            LOWORD(v237) = v185;
                            v238 = *(_QWORD *)(a1 + 88);
                            v189 = v173;
                            v188 = (unint64_t)sub_22F10D2BC(v173);
                            LOBYTE(v173) = v189;
                            v185 = v237;
                            v187 = v238;
                          }
                          v190 = v185 & 0x7FF | (v175 | v173) & 7 | (v244 << 11);
                          v191 = v188 & 0xFFFFFFFFFFFFFFF0;
                          if (((v186 | v190) & 0xCFFFFFFF8) != 0)
                          {
                            v253 = (void *)(v186 | v190);
                            v192 = sub_22E491354((unsigned int *)&v253, v191);
                            v193 = sub_22EF5DBC4(v187, v192, (uint64_t)v253);
                          }
                          else
                          {
                            v193 = v191 | v185 & 7 | (v175 | v173) & 7u;
                          }
                          v20 = v243;
                          v194 = *(_QWORD *)(a1 + 88);
                          v240 = v240 & 0xFFFFFFFF00000000 | __src & 0xE0;
                          v195 = sub_22EF5B848(v194, v193, __src & 0xE0);
                          v196 = v241[1];
                          if ((v196 & 8) != 0)
                          {
                            v198 = *(_QWORD *)((v196 & 0xFFFFFFFFFFFFFFF0) + 0x18);
                            v197 = *(_QWORD *)((v196 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
                          }
                          else
                          {
                            v197 = 0;
                            v198 = 0;
                          }
                          v199 = v198 | (v196 | v239) & 7;
                          if (((v199 | v197) & 0xCFFFFFFF8) != 0)
                          {
                            v253 = (void *)(v199 | v197);
                            v200 = sub_22E491354((unsigned int *)&v253, v195);
                            v201 = sub_22EF5DBC4(v194, v200, (uint64_t)v253);
                          }
                          else
                          {
                            v201 = v199 & 7 | v195;
                          }
                          a7 = v245;
                          LOBYTE(__src) = __src & 0xE0;
                          a5[v162] = sub_22E90092C(a1, a5[v162], v201, 66, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
                          v53 = (_BYTE *)v246;
                        }
                      }
LABEL_332:
                      ++v162;
                    }
                    v165 = (unsigned __int16)(*(_QWORD *)(v163 + 16) >> 38);
                    goto LABEL_294;
                  }
                  v151 = v247[0];
                }
                if (a6 >= sub_22EFC0EB8(v151))
                {
                  v152 = v247[0];
                  sub_22F0D5A50((uint64_t)v20);
                  v154 = sub_22ED0649C(a1, v152, v153, (uint64_t)a5, a6);
                  if (v154)
                  {
                    v202 = v154;
                    sub_22F0D5A50((uint64_t)v20);
                    if ((*(_DWORD *)(v247[0] + 28) & 0x7Eu) - 54 >= 4)
                      v204 = 4481;
                    else
                      v204 = 4484;
                    sub_22E8FCA40((_QWORD *)a1, v203, v204, 0, (uint64_t)&v253);
                    v205 = v20;
                    v206 = a7;
                    v207 = sub_22E890024((uint64_t)&v253, v247);
                    v256 = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v247[0] + 16))(v247[0]);
                    v208 = v207;
                    a7 = v206;
                    v20 = v205;
                    sub_22E8906A0(v208, (uint64_t *)&v256);
                    sub_22E903BEC((unsigned int *)&v253);
                    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v247[0] + 24), 0x1740u, 0, (uint64_t)&v253);
                    sub_22F0D4E74(*(_QWORD *)(v202 + 40));
                    v252 = v209;
                    v210 = sub_22E8906A0((uint64_t)&v253, &v252);
                    v211 = *(unsigned int *)(v202 + 48);
                    v256 = *(uint64_t **)(v202 + 56);
                    *(_QWORD *)v257 = v211;
                    sub_22F2F2210(v210, (uint64_t)&v256);
                    sub_22E903BEC((unsigned int *)&v253);
                  }
                }
                goto LABEL_264;
              }
            }
            else
            {
              v90 = *(_QWORD *)((sub_22F10ACF8(*(_QWORD *)v238) & 0xFFFFFFFFFFFFFFF0) + 8);
              if ((v90 & 8) != 0)
                v91 = *(_DWORD *)((v90 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
              else
                v91 = 0;
              v93 = sub_22EF5DD84(v239, v87, v91);
              v94 = sub_22EF5B848(v239, v93, 0);
              v95 = *(unsigned int *)v257;
              if (*(unsigned int *)v257 >= (unint64_t)*(unsigned int *)&v257[4])
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v95 = *(unsigned int *)v257;
              }
              a7 = v245;
              v79 = v246 + 1;
              v256[v95] = v94;
              v96 = ++*(_DWORD *)v257;
              ++v80;
              LOBYTE(v236) = 1;
              v16 = a9;
              if (v80 == __src)
                goto LABEL_163;
            }
          }
          v92 = *(unsigned int *)v257;
          if (*(unsigned int *)v257 >= (unint64_t)*(unsigned int *)&v257[4])
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v92 = *(unsigned int *)v257;
          }
          a7 = v245;
          v89 = v246;
          v256[v92] = v81;
          ++*(_DWORD *)v257;
          goto LABEL_152;
        }
        v50 = 1;
        do
        {
          v44 = v49;
          v45 = *v49;
          if (v45 > 0xD5)
          {
            if (v45 == 233)
            {
              v45 = *(_DWORD *)v49;
              if ((*(_DWORD *)v49 & 0x7C0000) != 0x300000)
                break;
              v52 = v49 + 16;
            }
            else
            {
              if (v45 != 214)
                goto LABEL_76;
              v52 = v49 + 24;
            }
          }
          else if (v45 == 155)
          {
            if ((**((_DWORD **)v49 + 2) & 0x18000) != 0)
              goto LABEL_78;
            v52 = v49 + 24;
            if (!v44[48])
              v52 = v44 + 32;
            v45 = 155;
          }
          else
          {
            if (v45 != 176)
              goto LABEL_76;
            v51 = *((unsigned int *)v49 + 5);
            if ((_DWORD)v51 == -1)
              goto LABEL_78;
            v52 = &v49[8 * v51 + 40];
            v45 = 176;
          }
          v49 = *(unsigned __int8 **)v52;
        }
        while (v49 != v44);
        v50 = 1;
      }
      else
      {
LABEL_75:
        v50 = 0;
      }
LABEL_76:
      if (v45 == 188)
      {
        v53 = (_BYTE *)*((_QWORD *)v44 + 3);
        if (!v53)
          goto LABEL_79;
        goto LABEL_250;
      }
      if (v45 != 161)
      {
LABEL_78:
        v53 = 0;
LABEL_79:
        v54 = 1;
LABEL_268:
        v156 = *(_QWORD *)(a1 + 88);
        v157 = *(_QWORD *)(v156 + 2000);
        if ((*(_BYTE *)(v157 + 1) & 1) != 0 || (*(_QWORD *)(v157 + 20) & 0x2000000000) != 0)
        {
          if ((v20[1] & 0x80) != 0)
          {
LABEL_276:
            if ((v54 & 1) != 0 || (*((_DWORD *)v53 + 7) & 0x7Eu) - 52 > 5)
            {
              v160 = *(_QWORD *)(v156 + 16832);
            }
            else
            {
              v160 = sub_22E8BBA74((unint64_t)v53);
              v156 = *(_QWORD *)(a1 + 88);
            }
            v68 = sub_22E8BBBD0(v160);
            if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
              v34 = 0;
            else
              v34 = *(_QWORD *)(a1 + 1296);
            v38 = a7;
            memset(&v234, 0, 5);
            v32 = v156;
            v39 = (uint64_t)v20;
            v40 = (uint64_t)a5;
            v41 = a6;
            v33 = v160;
            return (uint64_t)sub_22EFFA488(v32, v39, v40, v41, v33, v68, v38, v34, v234, SBYTE4(v234));
          }
          if (a6)
          {
            v158 = 0;
            v159 = 1;
            while ((*(_BYTE *)(a5[v158] + 1) & 0x80) == 0)
            {
              v158 = v159;
              v27 = a6 > v159++;
              if (!v27)
                return sub_22EB334BC((_QWORD *)a1, (uint64_t)v20, (uint64_t)v53, a4, (uint64_t)a5, a6, a7, a8, v16, 0);
            }
            goto LABEL_276;
          }
        }
        return sub_22EB334BC((_QWORD *)a1, (uint64_t)v20, (uint64_t)v53, a4, (uint64_t)a5, a6, a7, a8, v16, 0);
      }
      goto LABEL_121;
    }
    v42 = sub_22EB3346C((_QWORD *)a1, v20);
    if ((v42 & 1) == 0)
    {
      v20 = (unsigned __int8 *)(v42 & 0xFFFFFFFFFFFFFFFELL);
      goto LABEL_38;
    }
    return 1;
  }
  if (*v20 == 129)
  {
    if (a6)
    {
      sub_22F0D5A50((uint64_t)v20);
      sub_22E8FCA40((_QWORD *)a1, v28, 0x11E3u, 0, (uint64_t)&v253);
      sub_22F0D5A50(*a5);
      v30 = v29;
      sub_22F0D60E4(a5[a6 - 1]);
      *(_QWORD *)&v257[4] = 0;
      v258 = 0;
      v260 = 0;
      v261 = 0;
      v259 = 0;
      v262 = 0;
      v256 = (uint64_t *)(v30 | (unint64_t)(v31 << 32));
      v257[0] = 1;
      sub_22E890748((uint64_t)&v253, &v256);
      if (SHIBYTE(v261) < 0)
        operator delete(v259);
      sub_22E903BEC((unsigned int *)&v253);
    }
    v32 = *(_QWORD *)(a1 + 88);
    v33 = *(_QWORD *)(v32 + 16392);
    if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
      v34 = 0;
    else
      v34 = *(_QWORD *)(a1 + 1296);
    v38 = a7;
    memset(&v234, 0, 5);
    v39 = (uint64_t)v20;
    v40 = 0;
    v41 = 0;
    goto LABEL_114;
  }
  if (*((_QWORD *)v20 + 1) == *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16872))
  {
    v35 = sub_22EB19A28(a1);
    if ((v35 & 1) != 0)
      return 1;
    v20 = (unsigned __int8 *)(v35 & 0xFFFFFFFFFFFFFFFELL);
  }
  if ((v20[1] & 0x80) != 0)
  {
LABEL_80:
    if (a8)
    {
      if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
        v55 = 0;
      else
        v55 = *(_QWORD *)(a1 + 1296);
      return (uint64_t)sub_22F062638(*(_QWORD *)(a1 + 88), (uint64_t)v20, a8, (uint64_t)a5, a6, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16832), 0, a7, v55, 0);
    }
    v57 = v20;
    do
    {
      v58 = (uint64_t)v57;
      v59 = *v57;
      if (v59 > 0xD5)
      {
        if (v59 == 233)
        {
          v62 = *(_DWORD *)v57;
          if ((v62 & 0x7C0000) != 0x300000)
            goto LABEL_110;
          v59 = v62;
          v61 = (unsigned __int8 **)(v58 + 16);
        }
        else
        {
          if (v59 != 214)
            break;
          v61 = (unsigned __int8 **)(v57 + 24);
        }
      }
      else if (v59 == 155)
      {
        if ((**((_DWORD **)v57 + 2) & 0x18000) != 0)
          goto LABEL_110;
        if (v57[48])
          v61 = (unsigned __int8 **)(v57 + 24);
        else
          v61 = (unsigned __int8 **)(v57 + 32);
        v59 = 155;
      }
      else
      {
        if (v59 != 176)
          break;
        v60 = *((unsigned int *)v57 + 5);
        if ((_DWORD)v60 == -1)
          goto LABEL_110;
        v61 = (unsigned __int8 **)(v58 + 8 * v60 + 40);
        v59 = 176;
      }
      v57 = *v61;
    }
    while (v57 != (unsigned __int8 *)v58);
    sub_22F0D5A50((uint64_t)v20);
    if (v59 != 212)
      goto LABEL_110;
    v64 = v63;
    v65 = sub_22E904A34(a1, 0);
    if (!v65)
      goto LABEL_110;
    v66 = (_DWORD *)v65;
    if (!*(_DWORD *)(v65 + 1224))
      goto LABEL_110;
    v67 = *(unsigned __int8 **)(v58 + 56);
    if (v67)
    {
      if (!sub_22EFFFB48(v67))
        goto LABEL_110;
    }
    if (v66[314])
      goto LABEL_110;
    v101 = sub_22E903070(a1, 0);
    if (!v101)
      goto LABEL_110;
    v102 = *(_WORD *)(v101 + 8);
    v103 = v102 & 0x7F;
    v104 = -40;
    if (v103 > 0x46)
    {
      if (v103 == 83)
        goto LABEL_348;
      if (v103 == 71)
      {
        v104 = -56;
        goto LABEL_348;
      }
      if (v103 != 81)
      {
LABEL_344:
        if (v103 - 52 < 6)
        {
          v104 = -72;
        }
        else if (v103 - 33 >= 5)
        {
          v104 = -48;
        }
        else
        {
          v104 = -64;
        }
      }
    }
    else
    {
      if (v103 > 0x18)
        goto LABEL_343;
      if (v103 == 16)
      {
LABEL_172:
        v104 = -48;
        goto LABEL_348;
      }
      if (((1 << v103) & 0x1066) == 0)
      {
        if (v103 == 24)
          goto LABEL_172;
LABEL_343:
        if (v103 == 70)
        {
          v104 = -64;
          goto LABEL_348;
        }
        goto LABEL_344;
      }
    }
LABEL_348:
    v212 = *(_QWORD *)(v101 + v104 + 16);
    v213 = (_QWORD *)(v212 & 0xFFFFFFFFFFFFFFF8);
    if ((v212 & 4) != 0)
      v213 = (_QWORD *)*v213;
    if (!v213)
      goto LABEL_110;
    if ((v102 & 0x7Eu) - 58 < 0xFFFFFFFC)
    {
      if (v103 - 38 < 0xFFFFFFFD)
        goto LABEL_110;
      v214 = (_QWORD *)(v101 - 64);
LABEL_374:
      v218 = (*(uint64_t (**)(_QWORD *))(*v214 + 32))(v214);
      if (v218)
      {
        v219 = v218;
        v220 = sub_22F0621BC(v58);
        v221 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v220 + 32))(v220);
        if (v219 == v221 || sub_22EFB35BC(v219, v221))
        {
          v222 = *(_QWORD *)(a1 + 216);
          v223 = *(_WORD *)(v222 + 8) & 0x7F;
          v224 = -40;
          if (v223 > 0x46)
          {
            switch(v223)
            {
              case 'S':
                goto LABEL_392;
              case 'G':
                v224 = -56;
                goto LABEL_392;
              case 'Q':
LABEL_392:
                v225 = *(_QWORD *)(v222 + v224 + 16);
                v226 = v225 & 0xFFFFFFFFFFFFFFF8;
                if ((v225 & 4) != 0)
                  v226 = *(_QWORD *)v226;
                v227 = *(_WORD *)(v226 + 8) & 0x7F;
                v228 = -40;
                if (v227 > 0x46)
                {
                  switch(v227)
                  {
                    case 'S':
                      goto LABEL_409;
                    case 'G':
                      v228 = -56;
                      goto LABEL_409;
                    case 'Q':
                      goto LABEL_409;
                  }
                }
                else
                {
                  if (v227 <= 0x18)
                  {
                    if (v227 == 16)
                      goto LABEL_397;
                    if (((1 << v227) & 0x1066) != 0)
                      goto LABEL_409;
                    if (v227 == 24)
                    {
LABEL_397:
                      v228 = -48;
LABEL_409:
                      v229 = *(_QWORD *)(v226 + v228 + 16);
                      v230 = (_QWORD *)(v229 & 0xFFFFFFFFFFFFFFF8);
                      if ((v229 & 4) != 0)
                        v230 = (_QWORD *)*v230;
                      if ((sub_22EFC7ADC((unint64_t)v230) & 1) != 0)
                      {
                        if (sub_22EFC7ADC(*(_QWORD *)(a1 + 216)) && v66[306])
                          v66[460] = v64;
                      }
                      else if ((sub_22EBBBBEC(a1, v64, 0, 0, 0, 0) & 1) == 0)
                      {
                        sub_22EBBBBEC(a1, v64, 0, 1, 0, 0);
                      }
                      goto LABEL_110;
                    }
                  }
                  if (v227 == 70)
                  {
LABEL_407:
                    v228 = -64;
                    goto LABEL_409;
                  }
                }
                if (v227 - 52 < 6)
                {
                  v228 = -72;
                  goto LABEL_409;
                }
                if (v227 - 33 < 5)
                  goto LABEL_407;
                goto LABEL_397;
            }
          }
          else
          {
            if (v223 <= 0x18)
            {
              if (v223 == 16)
              {
LABEL_380:
                v224 = -48;
                goto LABEL_392;
              }
              if (((1 << v223) & 0x1066) != 0)
                goto LABEL_392;
              if (v223 == 24)
                goto LABEL_380;
            }
            if (v223 == 70)
            {
LABEL_390:
              v224 = -64;
              goto LABEL_392;
            }
          }
          if (v223 - 52 >= 6)
          {
            if (v223 - 33 >= 5)
              goto LABEL_380;
            goto LABEL_390;
          }
          v224 = -72;
          goto LABEL_392;
        }
      }
LABEL_110:
      v32 = *(_QWORD *)(a1 + 88);
      v33 = *(_QWORD *)(v32 + 16832);
      if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
        v34 = 0;
      else
        v34 = *(_QWORD *)(a1 + 1296);
      v38 = a7;
      memset(&v234, 0, 5);
      v39 = (uint64_t)v20;
      v40 = (uint64_t)a5;
      v41 = a6;
LABEL_114:
      v68 = 0;
      return (uint64_t)sub_22EFFA488(v32, v39, v40, v41, v33, v68, v38, v34, v234, SBYTE4(v234));
    }
    v215 = -40;
    if ((int)v103 > 70)
    {
      if (v103 != 83)
      {
        if (v103 == 71)
        {
          v215 = -56;
          goto LABEL_369;
        }
        if (v103 == 81)
          goto LABEL_369;
LABEL_365:
        if (v103 - 52 < 6)
        {
          v215 = -72;
        }
        else
        {
          v215 = -64;
          if (v103 - 33 >= 5)
            v215 = -48;
        }
      }
    }
    else
    {
      if (v103 > 0x18)
        goto LABEL_364;
      if (v103 != 16)
      {
        if (((1 << v103) & 0x1066) != 0)
          goto LABEL_369;
        if (v103 != 24)
        {
LABEL_364:
          if (v103 == 70)
          {
            v215 = -64;
            goto LABEL_369;
          }
          goto LABEL_365;
        }
      }
      v215 = -48;
    }
LABEL_369:
    v216 = *(_QWORD *)(v101 + v215 + 16);
    v217 = (_QWORD *)(v216 & 0xFFFFFFFFFFFFFFF8);
    if ((v216 & 4) != 0)
      v217 = (_QWORD *)*v217;
    if (v217)
      v214 = v217 - 8;
    else
      v214 = 0;
    goto LABEL_374;
  }
  if (a6)
  {
    v36 = 0;
    v37 = 1;
    while ((*(_BYTE *)(a5[v36] + 1) & 0x80) == 0)
    {
      v36 = v37;
      v27 = a6 > v37++;
      if (!v27)
        goto LABEL_30;
    }
    goto LABEL_80;
  }
LABEL_30:
  v21 = *((_QWORD *)v20 + 1);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
    return sub_22ED1B080();
  v22 = *(_QWORD **)(a1 + 88);
  if (v21 == v22[2107])
  {
    v69 = sub_22EB3346C((_QWORD *)a1, v20);
    if ((v69 & 1) != 0)
      return 1;
    v20 = (unsigned __int8 *)(v69 & 0xFFFFFFFFFFFFFFFELL);
    v21 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v22 = *(_QWORD **)(a1 + 88);
  }
  if (v21 != v22[2106])
    goto LABEL_7;
  return sub_22ED199E0(a1, a2, v20, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_22EB1E9A8(_QWORD *a1, uint64_t a2, unsigned int a3, __int16 a4, unsigned int *a5, uint64_t a6)
{
  uint64_t v11;
  unsigned int v12;
  unsigned int *v13;
  uint64_t v14;
  int v15;
  int v16;
  _BOOL4 v17;
  _BOOL4 v18;
  int v19;
  unsigned __int8 *v20;
  _QWORD *v21;
  unsigned int v22;
  _DWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const char *v33;
  int v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned __int8 *v43;
  unsigned int v45;
  unsigned int v46;
  size_t v47;
  size_t v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  size_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  size_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68[2];
  char *v69;
  size_t v70;
  unint64_t v71;
  unsigned __int8 *v72;
  uint64_t v73;
  int v74;

  v11 = sub_22EB45EB4(a4);
  v12 = a3;
  if ((v11 - 16) > 2)
    goto LABEL_20;
  if ((*(_BYTE *)a5 & 0xFE) == 0x70)
    v13 = a5;
  else
    v13 = 0;
  if ((*(_BYTE *)a6 & 0xFE) == 0x70)
    v14 = a6;
  else
    v14 = 0;
  if (v13)
  {
    v15 = ((*v13 >> 18) & 0x3F) - 9 < 7;
    if (v14)
    {
LABEL_10:
      v16 = ((*(_DWORD *)v14 >> 18) & 0x3Fu) - 9 < 7;
      goto LABEL_13;
    }
  }
  else
  {
    v15 = 0;
    if (v14)
      goto LABEL_10;
  }
  v16 = 0;
LABEL_13:
  if (v16 == v15)
    goto LABEL_20;
  if (v13)
  {
    v17 = ((*v13 >> 18) & 0x3F) - 16 < 3;
    if (v14)
    {
LABEL_16:
      v18 = ((*(_DWORD *)v14 >> 18) & 0x3Fu) - 16 < 3;
      goto LABEL_19;
    }
  }
  else
  {
    v17 = 0;
    if (v14)
      goto LABEL_16;
  }
  v18 = 0;
LABEL_19:
  if (!v17 && !v18)
  {
    if (v15)
    {
      sub_22F0D5A50((uint64_t)a5);
      v46 = v45;
      v64 = sub_22EFFBA38((*v13 >> 18) & 0x3F);
      v48 = v47;
      sub_22F0D5A50(*((_QWORD *)v13 + 3));
      v67 = v49;
      sub_22F0D60E4(a6);
      v65 = (uint64_t)a5;
      v66 = v50;
      v51 = a3;
    }
    else
    {
      sub_22F0D60E4(a6);
      v51 = v52;
      v64 = sub_22EFFBA38((*(_DWORD *)v14 >> 18) & 0x3F);
      v48 = v53;
      sub_22F0D5A50((uint64_t)a5);
      v67 = v54;
      sub_22F0D60E4(*(_QWORD *)(v14 + 16));
      v65 = a6;
      v66 = v55;
      v46 = a3;
    }
    v71 = __PAIR64__(v51, v46);
    v69 = v64;
    v70 = v48;
    sub_22E8FCA40(a1, a3, 0x1AF6u, 0, (uint64_t)&v72);
    v56 = sub_22E8906A0((uint64_t)&v72, (uint64_t *)&v71);
    v57 = sub_22EFFBA38(v11);
    v59 = v58;
    v68[0] = (uint64_t)v57;
    v68[1] = v58;
    v60 = sub_22F2F2210(v56, (uint64_t)v68);
    sub_22F2F2210(v60, (uint64_t)&v69);
    sub_22E903BEC((unsigned int *)&v72);
    v61 = a1[11] + 2128;
    v72 = 0;
    v73 = v61;
    v74 = 5993;
    sub_22E3B89A8(&v72, v69, v70);
    sub_22F0D4E74(v65);
    sub_22EB55520((uint64_t)a1, a3, (uint64_t)&v72, v62);
    if (v72 && v73)
      sub_22E3BB10C(v73, (unint64_t)v72);
    v63 = a1[11] + 2128;
    v72 = 0;
    v73 = v63;
    v74 = 5991;
    sub_22E3B89A8(&v72, v57, v59);
    sub_22EB55520((uint64_t)a1, a3, (uint64_t)&v72, v67 | (unint64_t)(v66 << 32));
    if (v72 && v73)
      sub_22E3BB10C(v73, (unint64_t)v72);
  }
LABEL_20:
  if ((v11 - 19) < 0xFFFFFFFE || (a3 & 0x80000000) != 0)
  {
    if ((_DWORD)v11 != 20 || (a3 & 0x80000000) != 0)
      goto LABEL_36;
    if ((*(_BYTE *)a5 & 0xFE) == 0x70)
    {
      v19 = (*a5 >> 18) & 0x3F;
      if (v19 == 20)
      {
        v41 = *((_QWORD *)a5 + 3);
        if ((*(_BYTE *)v41 & 0xFE) != 0x70)
          goto LABEL_61;
        if ((*(_DWORD *)v41 & 0xFC0000) != 0x4C0000)
          goto LABEL_61;
        v42 = *(unsigned __int8 **)(v41 + 24);
        LOBYTE(v72) = 0;
        if ((v42[2] & 1) != 0 || !sub_22F005310(v42, (uint64_t)&v72, a1[11], 0) || !(_BYTE)v72)
          goto LABEL_61;
        v21 = a1;
        v22 = v12;
        v23 = (_DWORD *)v41;
        goto LABEL_35;
      }
      if (v19 == 19)
      {
        LOBYTE(v72) = 0;
        if ((*(_BYTE *)(a6 + 2) & 1) != 0
          || !sub_22F005310((unsigned __int8 *)a6, (uint64_t)&v72, a1[11], 0)
          || (_BYTE)v72)
        {
          v20 = (unsigned __int8 *)*((_QWORD *)a5 + 2);
          LOBYTE(v72) = 0;
          if ((v20[2] & 1) != 0 || !sub_22F005310(v20, (uint64_t)&v72, a1[11], 0) || !(_BYTE)v72)
          {
            v21 = a1;
            v22 = a3;
            v23 = a5;
LABEL_35:
            sub_22EB56A00(v21, v22, v23);
          }
        }
      }
    }
LABEL_61:
    if ((*(_BYTE *)a6 & 0xFE) == 0x70 && (*(_DWORD *)a6 & 0xFC0000) == 0x4C0000)
    {
      LOBYTE(v72) = 0;
      if ((*((_BYTE *)a5 + 2) & 1) != 0
        || !sub_22F005310((unsigned __int8 *)a5, (uint64_t)&v72, a1[11], 0)
        || (_BYTE)v72)
      {
        v43 = *(unsigned __int8 **)(a6 + 24);
        LOBYTE(v72) = 0;
        if ((v43[2] & 1) != 0 || !sub_22F005310(v43, (uint64_t)&v72, a1[11], 0) || !(_BYTE)v72)
          sub_22EB56A00(a1, v12, (_DWORD *)a6);
      }
    }
    return sub_22EB4785C((uint64_t)a1, a2, v12, v11, (uint64_t)a5, a6);
  }
  sub_22EB567B0((unsigned int *)a1, v11, a3, a5);
  sub_22EB567B0((unsigned int *)a1, v11, a3, (_DWORD *)a6);
LABEL_36:
  if ((_DWORD)v11 == 8)
  {
LABEL_39:
    v24 = sub_22EFFBA38(v11);
    v26 = v25;
    sub_22EB568F4((unint64_t)a1, v12, a5, (uint64_t)v24, v25);
    sub_22EB568F4((unint64_t)a1, v12, (_DWORD *)a6, (uint64_t)v24, v26);
    return sub_22EB4785C((uint64_t)a1, a2, v12, v11, (uint64_t)a5, a6);
  }
  if ((_DWORD)v11 == 7)
  {
    if (sub_22F110744(*(_QWORD *)(*((_QWORD *)a5 + 1) & 0xFFFFFFFFFFFFFFF0), a1[11]))
      goto LABEL_39;
  }
  else if ((v11 - 9) <= 6 && *(unsigned __int8 *)a5 == 141)
  {
    v27 = sub_22EFFA604(*(unsigned __int8 **)((char *)a5 + *((unsigned __int8 *)a5 + 3)));
    if (v27)
    {
      if ((*(_DWORD *)(v27 + 28) & 0x7Eu) - 52 <= 5 && (*(_QWORD *)(v27 + 40) & 7) == 6)
      {
        v28 = *(_DWORD *)(*(_QWORD *)(v27 + 40) & 0xFFFFFFFFFFFFFFF8);
        if ((v28 - 28) >= 0xFFFFFFFE)
        {
          sub_22E8FCA40(a1, a3, 0x1AD5u, 0, (uint64_t)&v72);
          sub_22F0D4E74((uint64_t)a5);
          v69 = v29;
          v30 = sub_22E8906A0((uint64_t)&v72, (uint64_t *)&v69);
          sub_22F0D4E74(a6);
          v68[0] = v31;
          v32 = sub_22E8906A0(v30, v68);
          LOBYTE(v71) = v28 == 26;
          if (v28 == 26)
            v33 = "<<";
          else
            v33 = ">>";
          sub_22E894E38(v32, (unsigned __int8 *)&v71);
          sub_22E903BEC((unsigned int *)&v72);
          v34 = a5[5];
          v73 = a1[11] + 2128;
          v74 = 5993;
          v35 = (unsigned __int8 *)sub_22E3B8AAC(v73);
          v72 = v35;
          v36 = *v35;
          v35[v36 + 1] = 1;
          *v35 = v36 + 1;
          *(_QWORD *)&v35[8 * v36 + 16] = v33;
          sub_22EB55520((uint64_t)a1, v34, (uint64_t)&v72, *((_QWORD *)a5 + 3));
          if (v72 && v73)
            sub_22E3BB10C(v73, (unint64_t)v72);
          v37 = a1[11] + 2128;
          v72 = 0;
          v73 = v37;
          v74 = 5582;
          sub_22F0D5A50(*(_QWORD *)((char *)&a5[2 * (((unint64_t)*a5 >> 18) & 1) + 4]
                                  + ((unint64_t)*a5 >> 24)));
          v39 = v38;
          sub_22F0D60E4(a6);
          sub_22EB55520((uint64_t)a1, v12, (uint64_t)&v72, v39 | (unint64_t)(v40 << 32));
          if (v72 && v73)
            sub_22E3BB10C(v73, (unint64_t)v72);
        }
      }
    }
  }
  return sub_22EB4785C((uint64_t)a1, a2, v12, v11, (uint64_t)a5, a6);
}

uint64_t sub_22EB1F050(uint64_t a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  _BOOL4 v14;
  char v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  BOOL v30;
  BOOL v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v47;
  unsigned int v49;
  BOOL v51;
  int v52;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  char v66;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  BOOL v83;
  unint64_t v85;
  unsigned int v86;
  BOOL v87;
  char v88;
  uint64_t v89;
  unsigned int v90;
  _BOOL4 v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  int v96;
  int v98;
  BOOL v99;
  unsigned int v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  unint64_t v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  char v138;
  char v139;
  BOOL v140;
  unint64_t v141;
  unint64_t v142;
  int v143;
  BOOL v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  int v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int v154[25];
  BOOL v155;
  uint64_t v156;
  uint64_t v157[2];

  v7 = a2;
  v8 = *a2 & 0xFFFFFFFFFFFFFFFELL;
  v9 = *a3 & 0xFFFFFFFFFFFFFFFELL;
  v11 = *(_QWORD *)(v8 + 8);
  v156 = *(_QWORD *)(v9 + 8);
  v157[0] = v11;
  v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_22F110854(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0));
  v13 = (uint64_t *)(v156 & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22F110854(*(_QWORD *)(v156 & 0xFFFFFFFFFFFFFFF0));
  v15 = a5 == 4 || !v155;
  if ((v15 & 1) == 0 && sub_22F10E0EC(*v13))
    goto LABEL_8;
  if (!v14)
    goto LABEL_12;
  v16 = *v12;
  if (sub_22F10E0EC(*v12))
  {
LABEL_8:
    if ((**(_QWORD **)(a1 + 72) & 0x1000) != 0)
      v17 = 6212;
    else
      v17 = 6211;
    sub_22E8FCA40((_QWORD *)a1, a4, v17, 0, (uint64_t)v154);
    sub_22F0D4E74(v8);
    v153 = v18;
    v19 = sub_22E8906A0((uint64_t)v154, &v153);
    sub_22F0D4E74(v9);
    v152 = v20;
    v21 = sub_22E8906A0(v19, &v152);
    v151 = a5;
    v22 = sub_22E8900C4(v21, &v151);
    v23 = sub_22E894E38(v22, (unsigned __int8 *)&v155);
    v24 = sub_22E8901B8(v23, v157);
    sub_22E8901B8(v24, &v156);
    sub_22E903BEC(v154);
  }
  else if ((v15 & 1) == 0)
  {
    v25 = a1;
    if (*(_QWORD *)(v12[1] & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((v156 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
    {
      v27 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 24));
      if ((*(_QWORD *)(v27 + 40)
         || (*(_QWORD *)(v27 + 120) >= 8uLL ? (v28 = (*(_QWORD *)(v27 + 120) & 4) == 0) : (v28 = 0), v28))
        && ((v29 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 24)),
             *(_QWORD *)(v29 + 40))
         || (*(_QWORD *)(v29 + 120) >= 8uLL ? (v30 = (*(_QWORD *)(v29 + 120) & 4) == 0) : (v30 = 0), v30)))
      {
        if (a5 == 2)
        {
          v31 = (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 0x10) == 0;
          v32 = 6355;
        }
        else
        {
          v31 = (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 0x10) == 0;
          if (a5 == 3)
            v32 = 6365;
          else
            v32 = 6215;
        }
      }
      else
      {
        v31 = (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 0x10) == 0;
        v32 = 6213;
      }
      if (v31)
        v33 = v32;
      else
        v33 = v32 + 1;
      sub_22E8FCA40((_QWORD *)a1, a4, v33, 0, (uint64_t)v154);
      sub_22F0D4E74(v8);
      v153 = v34;
      v35 = sub_22E8906A0((uint64_t)v154, &v153);
      sub_22F0D4E74(v9);
      v152 = v36;
      v37 = sub_22E8906A0(v35, &v152);
      v151 = a5;
      v38 = sub_22E8900C4(v37, &v151);
      v39 = sub_22E8901B8(v38, v157);
      sub_22E8901B8(v39, &v156);
      sub_22E903BEC(v154);
    }
    goto LABEL_37;
  }
LABEL_12:
  v25 = a1;
  if (a5 == 4)
  {
    v26 = 0;
    goto LABEL_39;
  }
LABEL_37:
  v40 = sub_22EB1B998(v25, (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL));
  *v7 = v40;
  if ((v40 & 1) != 0)
    return 0;
  v26 = 1;
LABEL_39:
  v41 = sub_22EB1B998(v25, (void *)(*a3 & 0xFFFFFFFFFFFFFFFELL));
  *a3 = v41;
  if ((v41 & 1) != 0)
    return 0;
  v42 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
  v43 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)((v41 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
  v44 = *(_QWORD *)v42;
  if (!*(_QWORD *)v42 || *(_BYTE *)(v44 + 16) != 39)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v44 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      v44 = sub_22F10CF48(*(_QWORD *)v42);
    else
      v44 = 0;
  }
  v45 = *(_QWORD *)v43;
  if (*(_QWORD *)v43 && *(_BYTE *)(v45 + 16) == 39)
    goto LABEL_49;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v45 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
  {
    v45 = sub_22F10CF48(*(_QWORD *)v43);
LABEL_49:
    if (a5 == 3)
      goto LABEL_75;
    if (!v44 || v45 == 0)
      goto LABEL_75;
    v47 = *(_BYTE *)(v44 + 40) & 7;
    if (v47 > 4 || ((1 << v47) & 0x13) == 0)
      goto LABEL_68;
    v49 = *(_BYTE *)(v45 + 40) & 7;
    if (v49 <= 4 && ((1 << v49) & 0x13) != 0)
      goto LABEL_75;
    v51 = v47 > 4;
    v52 = (1 << v47) & 0x13;
    if (v51 || v52 == 0)
    {
LABEL_68:
      v54 = *v7 & 0xFFFFFFFFFFFFFFFELL;
      v55 = sub_22EF5B848(*(_QWORD *)(a1 + 88), *(_QWORD *)(v44 + 32), 0);
      v56 = v54;
      v25 = a1;
      *v7 = sub_22E90092C(a1, v56, v55, 68, 0, 0);
      v49 = *(_BYTE *)(v45 + 40) & 7;
    }
    v51 = v49 > 4;
    v57 = (1 << v49) & 0x13;
    if (v51 || v57 == 0)
    {
      v59 = *a3 & 0xFFFFFFFFFFFFFFFELL;
      v60 = sub_22EF5B848(*(_QWORD *)(v25 + 88), *(_QWORD *)(v45 + 32), 0);
      *a3 = sub_22E90092C(v25, v59, v60, 68, 0, 0);
    }
  }
LABEL_75:
  v61 = *(_QWORD *)v42;
  if (*(_QWORD *)v42)
    v62 = *(_BYTE *)(*(_QWORD *)v42 + 16) == 6;
  else
    v62 = 0;
  if (v62
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v61 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 6
    && (v61 = sub_22F10CF48(v61)) != 0)
  {
    v42 = *(_QWORD *)(v61 + 32);
  }
  if (v42 == v43)
    return v43;
  if (!sub_22F110E9C(*(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF0)) || !sub_22F110E9C(*(_QWORD *)v43))
    return 0;
  v64 = v42;
  if (sub_22F1124D8(*(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF0)))
    v64 = sub_22EF6A4D4(*(uint64_t **)(v25 + 88), v42);
  v65 = sub_22EF6A3F8(*(_QWORD *)(v25 + 88), *v7 & 0xFFFFFFFFFFFFFFFELL);
  if ((unint64_t)v65 >= 0x10)
    v64 = (uint64_t)v65;
  v66 = v26 ^ 1;
  if (v64 == v42)
    v66 = 1;
  if ((v66 & 1) == 0)
    *v7 = sub_22E90092C(v25, *v7 & 0xFFFFFFFFFFFFFFFELL, v64, 30, 0, 0);
  if (v64 == v43)
    return v43;
  if (sub_22EB1FFD8(v25, v64, v43))
    return 0;
  v68 = (uint64_t *)(v64 & 0xFFFFFFFFFFFFFFF0);
  v69 = *(_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF0);
  if (!sub_22F10E0B8(v69))
  {
    v70 = *(_QWORD *)v43;
    if (!sub_22F10E0B8(*(_QWORD *)v43))
    {
      v80 = *(_QWORD *)(*(_QWORD *)(v69 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v80)
        v81 = *(_DWORD *)(v80 + 16) == 11;
      else
        v81 = 0;
      if (v81 && ((*(_DWORD *)(v80 + 16) >> 19) & 0x1FEu) - 210 < 8)
        return sub_22EB20124(a1, v7, a3, v64, v43, a5 == 4);
      v82 = *(_QWORD *)(*(_QWORD *)(v70 + 8) & 0xFFFFFFFFFFFFFFF0);
      v83 = v82 && *(_DWORD *)(v82 + 16) == 11;
      if (v83 && ((*(_DWORD *)(v82 + 16) >> 19) & 0x1FEu) - 210 <= 7)
        return sub_22EB20124(a1, v7, a3, v64, v43, a5 == 4);
      if (!sub_22F10E148(v69) && !sub_22F10E148(*(_QWORD *)v43))
      {
        v85 = *(_QWORD *)(*v68 + 8) & 0xFFFFFFFFFFFFFFF0;
        v86 = *(_DWORD *)(*(_QWORD *)v85 + 16);
        if (*(_QWORD *)v85)
          v87 = *(_DWORD *)(*(_QWORD *)v85 + 16) == 11;
        else
          v87 = 0;
        v88 = !v87;
        if (v87 && ((v86 >> 19) & 0x1FE) - 186 <= 0x17)
        {
          v89 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v43 + 8) & 0xFFFFFFFFFFFFFFF0);
          v90 = *(_DWORD *)(v89 + 16);
          v91 = v89 != 0;
          v92 = a1;
        }
        else
        {
          v93 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v43 + 8) & 0xFFFFFFFFFFFFFFF0);
          v90 = *(_DWORD *)(v93 + 16);
          if (v93)
            v94 = *(_DWORD *)(v93 + 16) == 11;
          else
            v94 = 0;
          v92 = a1;
          if (!v94 || ((v90 >> 19) & 0x1FE) - 186 > 0x17)
            return sub_22EB20358(a1, v7, a3, v64, v43, a5 == 4);
          v91 = 1;
        }
        if (!v91 || v90 != 11)
          goto LABEL_174;
        v96 = (v90 >> 19) & 0x1FF;
        if ((v96 - 186) > 0xE || ((1 << ((v90 >> 19) + 70)) & 0x71C7) == 0)
        {
          if ((v96 - 207) < 0xFFFFFFFD)
            v138 = 1;
          else
            v138 = v88;
          if ((v138 & 1) != 0)
            goto LABEL_169;
        }
        else if ((v88 & 1) != 0)
        {
          goto LABEL_169;
        }
        if (((v86 >> 19) & 0x1FE) - 186 <= 0x17)
        {
          v98 = (v86 >> 19) & 0x1FF;
          v99 = (v98 - 186) > 0xE || ((1 << ((v86 >> 19) + 70)) & 0x71C7) == 0;
          if (v99 && (v98 - 207) <= 0xFFFFFFFC)
          {
            v64 = sub_22F36FA64(*(_QWORD *)(v92 + 88), v64);
            v85 = *(_QWORD *)(*(_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
LABEL_174:
            v101 = sub_22EB54B48(v64);
            if (v101 <= sub_22EB54B48(v43))
              v63 = v43;
            else
              v63 = v64;
            if (!*(_QWORD *)v85
              || *(_DWORD *)(*(_QWORD *)v85 + 16) != 11
              || ((*(_DWORD *)(*(_QWORD *)v85 + 16) >> 19) & 0x1FEu) - 198 >= 0xC)
            {
              v102 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
              if (!v102)
                return v63;
              v103 = *(_DWORD *)(v102 + 16);
              if (v103 != 11 || ((v103 >> 19) & 0x1FE) - 198 > 0xB)
                return v63;
            }
            return sub_22EF74250(*(_QWORD *)(v92 + 88), v63);
          }
        }
LABEL_169:
        if (((v90 >> 19) & 0x1FE) - 186 <= 0x17
          && ((v96 - 186) > 0xE || ((1 << ((v90 >> 19) + 70)) & 0x71C7) == 0))
        {
          if ((v96 - 204) < 3)
            v88 = 1;
          if ((v88 & 1) != 0
            || ((v143 = (v86 >> 19) & 0x1FF, (v143 - 186) <= 0xE)
              ? (v144 = ((1 << (v143 + 70)) & 0x71C7) == 0)
              : (v144 = 1),
                v144 && (v143 - 204) > 2))
          {
            v92 = a1;
          }
          else
          {
            v92 = a1;
            v43 = sub_22F36FA64(*(_QWORD *)(a1 + 88), v43);
          }
        }
        goto LABEL_174;
      }
      v104 = sub_22F10E148(*v68);
      v105 = sub_22F10E148(*(_QWORD *)v43);
      if (v104 && v105)
      {
        v106 = *(_QWORD *)(v104 + 32);
        v107 = *(_QWORD *)(v105 + 32);
        v108 = sub_22EF6A694(*(_QWORD *)(a1 + 88), v106, v107);
        v109 = sub_22F110B20(*(_QWORD *)(v106 & 0xFFFFFFFFFFFFFFF0));
        v110 = sub_22F110B20(*(_QWORD *)(v107 & 0xFFFFFFFFFFFFFFF0));
        if (v109 == v110)
        {
          if (v108 < 0)
            v106 = v107;
          else
            v7 = a3;
          if (a5 == 4)
          {
            v113 = a1;
            if (v108 < 0)
            {
LABEL_271:
              v149 = *(_QWORD *)(v113 + 88);
              return sub_22F369F4C(v149, v107);
            }
          }
          else
          {
            v113 = a1;
          }
        }
        else
        {
          if (v109)
            v111 = 1;
          else
            v111 = -1;
          if (v108 == v111)
          {
            v112 = sub_22EF6A330(*(_QWORD *)(a1 + 88), v106);
            if (v112 == sub_22EF6A330(*(_QWORD *)(a1 + 88), v107))
            {
              v113 = a1;
              if (v109)
                v114 = v106;
              else
                v114 = v107;
              v106 = sub_22EF67D20(*(_QWORD *)(a1 + 88), v114);
              v115 = *a3 & 0xFFFFFFFFFFFFFFFELL;
              v116 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v106);
              *a3 = sub_22E90092C(a1, v115, v116, 55, 0, 0);
              v107 = v106;
              if (a5 == 4)
                goto LABEL_271;
              goto LABEL_270;
            }
            if (a5 == 4)
              v139 = v109;
            else
              v139 = 1;
            v140 = v109 == 0;
          }
          else
          {
            if (a5 == 4)
              v139 = v110;
            else
              v139 = 1;
            v140 = v110 == 0;
          }
          if (v140)
            v106 = v107;
          else
            v7 = a3;
          v113 = a1;
          if ((v139 & 1) == 0)
            goto LABEL_271;
        }
LABEL_270:
        v147 = *v7 & 0xFFFFFFFFFFFFFFFELL;
        v148 = sub_22F369F4C(*(_QWORD *)(v113 + 88), v106);
        *v7 = sub_22E90092C(v113, v147, v148, 55, 0, 0);
        v107 = v106;
        goto LABEL_271;
      }
      if (v104)
      {
        v121 = *(_QWORD *)(v104 + 32);
        v122 = sub_22EF6A694(*(_QWORD *)(a1 + 88), v121, v43);
        v123 = sub_22F110B20(*(_QWORD *)(v121 & 0xFFFFFFFFFFFFFFF0));
        v124 = sub_22F110B20(*(_QWORD *)v43);
        if (v123 == v124)
        {
          if (v122 < 0)
            goto LABEL_264;
        }
        else
        {
          if (v123)
            v125 = 1;
          else
            v125 = -1;
          if (v122 == v125)
          {
            v126 = sub_22EF6A330(*(_QWORD *)(a1 + 88), v121);
            if (v126 == sub_22EF6A330(*(_QWORD *)(a1 + 88), v43))
            {
              if (v123)
                v127 = v121;
              else
                v127 = v43;
              v121 = sub_22EF67D20(*(_QWORD *)(a1 + 88), v127);
              *a3 = sub_22E90092C(a1, *a3 & 0xFFFFFFFFFFFFFFFELL, v121, 30, 0, 0);
              if (a5 != 4)
              {
                v128 = *v7 & 0xFFFFFFFFFFFFFFFELL;
                v129 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v121);
                *v7 = sub_22E90092C(a1, v128, v129, 55, 0, 0);
              }
              goto LABEL_267;
            }
            if (!v123)
            {
LABEL_264:
              if (a5 != 4)
              {
                v145 = *v7 & 0xFFFFFFFFFFFFFFFELL;
                v146 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v43);
                *v7 = sub_22E90092C(a1, v145, v146, 55, 0, 0);
              }
              v121 = v43;
              goto LABEL_267;
            }
          }
          else if (!v124)
          {
            goto LABEL_264;
          }
        }
        *a3 = sub_22E90092C(a1, *a3 & 0xFFFFFFFFFFFFFFFELL, v121, 30, 0, 0);
LABEL_267:
        v63 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v121);
        v117 = *a3 & 0xFFFFFFFFFFFFFFFELL;
        v118 = a1;
        v119 = v63;
        v120 = 52;
LABEL_268:
        *a3 = sub_22E90092C(v118, v117, v119, v120, 0, 0);
        return v63;
      }
      v107 = *(_QWORD *)(v105 + 32);
      v130 = sub_22EF6A694(*(_QWORD *)(a1 + 88), v64, v107);
      v131 = sub_22F110B20(*v68);
      v132 = sub_22F110B20(*(_QWORD *)(v107 & 0xFFFFFFFFFFFFFFF0));
      if (v131 == v132)
      {
        if (v130 < 0)
          goto LABEL_274;
      }
      else
      {
        if (v131)
          v133 = 1;
        else
          v133 = -1;
        if (v130 == v133)
        {
          v134 = sub_22EF6A330(*(_QWORD *)(a1 + 88), v64);
          if (v134 == sub_22EF6A330(*(_QWORD *)(a1 + 88), v107))
          {
            if (v131)
              v135 = v64;
            else
              v135 = v107;
            v107 = sub_22EF67D20(*(_QWORD *)(a1 + 88), v135);
            v136 = *a3 & 0xFFFFFFFFFFFFFFFELL;
            v137 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v107);
            *a3 = sub_22E90092C(a1, v136, v137, 55, 0, 0);
            goto LABEL_274;
          }
          if ((v131 & 1) == 0)
          {
LABEL_274:
            if (a5 == 4)
            {
              v149 = *(_QWORD *)(a1 + 88);
              return sub_22F369F4C(v149, v107);
            }
            *v7 = sub_22E90092C(a1, *v7 & 0xFFFFFFFFFFFFFFFELL, v107, 30, 0, 0);
            v63 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v107);
LABEL_277:
            v76 = *v7 & 0xFFFFFFFFFFFFFFFELL;
            v77 = a1;
            v78 = v63;
            v79 = 52;
LABEL_278:
            *v7 = sub_22E90092C(v77, v76, v78, v79, 0, 0);
            return v63;
          }
        }
        else if ((v132 & 1) == 0)
        {
          goto LABEL_274;
        }
      }
      v141 = *a3 & 0xFFFFFFFFFFFFFFFELL;
      v142 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v64);
      *a3 = sub_22E90092C(a1, v141, v142, 55, 0, 0);
      v63 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v64);
      if (a5 == 4)
        return v63;
      goto LABEL_277;
    }
  }
  if (!sub_22EB5486C(a1, a3, v43, v64, 0))
    return v64;
  if (!sub_22EB5486C(a1, v7, v64, v43, a5 == 4))
    return v43;
  v71 = sub_22EF6A108(*(_QWORD *)(a1 + 88), v64, v43);
  v72 = *v68;
  if (*(_BYTE *)(*(_QWORD *)v43 + 16) == 12)
    v73 = *(_QWORD *)v43;
  else
    v73 = 0;
  if (v72)
    v74 = *(_BYTE *)(*v68 + 16) == 12;
  else
    v74 = 0;
  v75 = !v74;
  if (v74)
    v64 = *(_QWORD *)(v72 + 32);
  if (v73)
    v43 = *(_QWORD *)(v73 + 32);
  v63 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v64);
  if (v71 == 1)
  {
    v117 = *a3 & 0xFFFFFFFFFFFFFFFELL;
    v118 = a1;
    if (v73)
    {
      v119 = v63;
      v120 = 50;
    }
    else
    {
      v119 = v64;
      v120 = 42;
    }
    goto LABEL_268;
  }
  if (v71 == -1)
  {
    v63 = sub_22F369F4C(*(_QWORD *)(a1 + 88), v43);
    if (a5 != 4)
    {
      v76 = *v7 & 0xFFFFFFFFFFFFFFFELL;
      v77 = a1;
      if ((v75 & 1) != 0)
      {
        v78 = v43;
        v79 = 42;
      }
      else
      {
        v78 = v63;
        v79 = 50;
      }
      goto LABEL_278;
    }
  }
  return v63;
}

BOOL sub_22EB1FFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t *v6;
  _BOOL8 result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  llvm::APFloatBase *v12;
  llvm::APFloatBase *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a2;
  v6 = (uint64_t *)(a2 & 0xFFFFFFFFFFFFFFF0);
  result = sub_22F10E0EC(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  if (result)
  {
    v8 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFF0);
    result = sub_22F10E0EC(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0));
    if (result)
    {
      if (sub_22EF6A108(*(_QWORD *)(a1 + 88), v4, a3) == -2)
        return 1;
      v9 = *v6;
      if (!v9 || *(_BYTE *)(v9 + 16) != 12)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 12)
          v9 = sub_22F10CF48(v9);
        else
          v9 = 0;
      }
      v10 = *v8;
      if (!*v8 || *(_BYTE *)(v10 + 16) != 12)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 12)
          v10 = sub_22F10CF48(v10);
        else
          v10 = 0;
      }
      if (v9)
        v4 = *(_QWORD *)(v9 + 32);
      if (v10)
        a3 = *(_QWORD *)(v10 + 32);
      v11 = sub_22EF5B2E0(*(_QWORD *)(a1 + 88), v4);
      v12 = (llvm::APFloatBase *)sub_22EF5B2E0(*(_QWORD *)(a1 + 88), a3);
      v13 = (llvm::APFloatBase *)llvm::APFloatBase::PPCDoubleDouble(v12);
      v14 = llvm::APFloatBase::IEEEquad(v13);
      v15 = v14;
      if ((llvm::APFloatBase *)v11 == v13 && v12 == (llvm::APFloatBase *)v14)
        return 1;
      result = 0;
      if (v12 == v13 && v11 == v15)
        return 1;
    }
  }
  return result;
}

unint64_t sub_22EB20124(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  int v15;
  int v16;
  _BOOL4 v17;
  uint64_t v18;
  BOOL v19;
  int v20;
  int v21;
  _BOOL4 v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  unint64_t v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  int v33;

  v6 = a6;
  v7 = a5;
  v8 = a4;
  v9 = a3;
  v10 = a2;
  v11 = a1;
  v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_DWORD *)(v12 + 16);
  if (v12)
    v14 = *(_DWORD *)(v12 + 16) == 11;
  else
    v14 = 0;
  v15 = v14;
  v16 = (v13 >> 19) & 0x1FE;
  v17 = (v16 - 210) < 8;
  if (v15 != 1)
    v17 = 0;
  v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a5 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v18)
    v19 = *(_DWORD *)(v18 + 16) == 11;
  else
    v19 = 0;
  v20 = v19;
  v21 = *(_DWORD *)(v18 + 16) >> 19;
  v22 = (v21 & 0x1FEu) - 210 < 8;
  if (v20 != 1)
    v22 = 0;
  if (v15 && (v16 - 186) < 0x18 || v20 && (v21 & 0x1FEu) - 186 <= 0x17)
  {
    if (v17)
    {
      v23 = *a3 & 0xFFFFFFFFFFFFFFFELL;
      v24 = a4;
      v25 = 34;
LABEL_26:
      *v9 = sub_22E90092C(a1, v23, v24, v25, 0, 0);
      return v8;
    }
    if ((a6 & 1) == 0)
    {
      v31 = *a2 & 0xFFFFFFFFFFFFFFFELL;
      v32 = a5;
      v33 = 34;
LABEL_40:
      *v10 = sub_22E90092C(a1, v31, v32, v33, 0, 0);
      return v7;
    }
    return v7;
  }
  if (v17 && v22)
  {
    if (sub_22EF6A108(*(_QWORD *)(a1 + 88), a4, a5) == 1)
    {
      v23 = *v9 & 0xFFFFFFFFFFFFFFFELL;
      a1 = v11;
      v24 = v8;
      v25 = 42;
      goto LABEL_26;
    }
    if ((v6 & 1) == 0)
    {
      v31 = *v10 & 0xFFFFFFFFFFFFFFFELL;
      a1 = v11;
      v32 = v7;
      v33 = 42;
      goto LABEL_40;
    }
    return v7;
  }
  if (v17)
  {
    v26 = v13 & 0xFF800FF;
    if (v12)
      v27 = v26 == 110100491;
    else
      v27 = 0;
    if (v27 && (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 8) == 0)
      v8 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16560);
    v28 = a6 ^ 1;
    v29 = v8;
    v30 = 1;
  }
  else
  {
    v30 = a6 ^ 1;
    a2 = a3;
    a3 = v10;
    v29 = a5;
    a5 = v8;
    v28 = 1;
  }
  return sub_22EB549D8(a1, a2, a3, v29, a5, v28, v30);
}

unint64_t sub_22EB20358(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7;
  unint64_t v8;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  char v19;
  BOOL v20;

  v7 = a5;
  v8 = a4;
  v12 = sub_22EF6A694(*(_QWORD *)(a1 + 88), a4, a5);
  v13 = sub_22F110B20(*(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_22F110B20(*(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0));
  if (v13 != v14)
  {
    if (v13)
      v15 = 1;
    else
      v15 = -1;
    if (v12 == v15)
    {
      v16 = sub_22EF6A330(*(_QWORD *)(a1 + 88), v8);
      if (v16 == sub_22EF6A330(*(_QWORD *)(a1 + 88), v7))
      {
        if (v13)
          v17 = v8;
        else
          v17 = v7;
        v8 = sub_22EF67D20(*(_QWORD *)(a1 + 88), v17);
        *a3 = sub_22E90092C(a1, *a3 & 0xFFFFFFFFFFFFFFFELL, v8, 30, 0, 0);
        v7 = v8;
        goto LABEL_15;
      }
      v19 = v13 | a6 ^ 1;
      v20 = v13 == 0;
    }
    else
    {
      v19 = v14 | a6 ^ 1;
      v20 = v14 == 0;
    }
    if (v20)
      v8 = v7;
    else
      a2 = a3;
    if ((v19 & 1) != 0)
      goto LABEL_16;
    return v7;
  }
  if (v12 < 0)
    v8 = v7;
  else
    a2 = a3;
  if ((v12 & 0x80000000) == 0)
    goto LABEL_16;
LABEL_15:
  if ((a6 & 1) == 0)
  {
LABEL_16:
    *a2 = sub_22E90092C(a1, *a2 & 0xFFFFFFFFFFFFFFFELL, v8, 30, 0, 0);
    return v8;
  }
  return v7;
}

uint64_t sub_22EB204CC(uint64_t a1, int a2, int a3, int a4, _DWORD *a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  BOOL v46;
  uint64_t i;
  uint64_t v48;
  int v49;
  void **v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  void **v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  void **v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  uint64_t v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  unint64_t *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  _DWORD **v88;
  _QWORD *v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  _DWORD **v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int *v102;
  unsigned int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t j;
  uint64_t v107;
  int v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int v113;
  uint64_t v114;
  int v115;
  _DWORD *v116;
  int v119;
  _QWORD *v120;
  uint64_t v121[2];
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127[12];
  unsigned int v128[26];

  LODWORD(v121[0]) = 0;
  v127[0] = 0;
  LODWORD(v126) = 3;
  v122 = (void *)*(unsigned int *)(a1 + 1704);
  sub_22EB4DDB8(a1 + 3688, (int *)v121, (int *)&v122, (__int16 *)(a1 + 1693), v127, (int *)&v126);
  v15 = *(unsigned int *)(a1 + 3696);
  v16 = v15 - 2;
  v17 = *(_QWORD *)(a1 + 3688);
  v18 = *(_DWORD *)(v17 + 576 * (v15 - 2));
  if (v18 == 5)
  {
    *(_BYTE *)(v17 + 576 * v15 - 4) = *(_BYTE *)(v17 + 576 * v16 + 572);
    v19 = 1;
  }
  else if (v18 == 2)
  {
    *(_BYTE *)(v17 + 576 * v15 - 4) = 1;
    v19 = *(_BYTE *)(v17 + 576 * v16 + 573) != 0;
  }
  else
  {
    v19 = 0;
    *(_BYTE *)(v17 + 576 * v15 - 4) = 0;
  }
  v20 = v17 + 576 * v15;
  *(_BYTE *)(v20 - 3) = v19;
  *(_WORD *)(a1 + 1693) = 0;
  if (*(_DWORD *)(a1 + 1848))
  {
    llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(a1 + 1776), (llvm::SmallPtrSetImplBase *)(v20 - 560));
    sub_22EAEAE08(a1 + 1840, (uint64_t *)(v20 - 496));
  }
  v21 = 1;
  v22 = sub_22EB1B954(a1, a5);
  v23 = v22;
  v24 = (unsigned int *)(v22 & 0xFFFFFFFFFFFFFFFELL);
  if ((v22 & 1) == 0)
    a5 = (_DWORD *)(v22 & 0xFFFFFFFFFFFFFFFELL);
  sub_22EB48E64(a1);
  if ((v23 & 1) == 0)
  {
    v115 = a4;
    v30 = a10;
    if (*(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956)
      && sub_22F0005B0((unint64_t)v24, *(_QWORD *)(a1 + 88), 0, v25, v26, v27, v28, v29))
    {
      sub_22EFF605C((uint64_t)v24);
      sub_22E8FCA40((_QWORD *)a1, v31, 0x1B4Bu, 0, (uint64_t)v128);
      sub_22E903BEC(v128);
    }
    v120 = (_QWORD *)a1;
    v32 = *v24;
    v33 = (*v24 >> 13) & 1;
    if ((_DWORD)a7)
    {
      v116 = a5;
      v34 = 0;
      v35 = 0;
      v119 = (v32 >> 15) & 1;
      v36 = a7;
      v37 = 1;
      v38 = a9;
      do
      {
        v33 |= (*(_BYTE *)(v38[v34] + 1) & 0x20) >> 5;
        v39 = (_QWORD *)a6[v34];
        if (!v39)
          goto LABEL_115;
        v40 = *(_QWORD *)(*v39 & 0xFFFFFFFFFFFFFFF0);
        v33 |= (*(_DWORD *)(v40 + 16) & 0x100u) >> 8;
        if ((*(_DWORD *)(v40 + 16) & 0x400) != 0)
        {
          LOBYTE(v119) = 1;
          goto LABEL_115;
        }
        v41 = sub_22F1110EC(v40, 0);
        v42 = (uint64_t *)a6[v34];
        v43 = *v42;
        if ((v41 & 1) != 0)
        {
          v44 = 2748;
        }
        else
        {
          v45 = *(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v45 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
            && ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v45 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFF800FF) != 0x528000B
              ? (v46 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v45 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                + 16)
                     - 25 >= 2)
              : (v46 = 0),
                v46))
          {
            if ((*(_BYTE *)(v45 + 17) & 8) == 0)
              goto LABEL_54;
            v44 = 2750;
          }
          else
          {
            v44 = 2749;
          }
        }
        for (i = *v42; ; i = sub_22F115B7C(i))
        {
          while (1)
          {
            if ((i & 0xF) != 0)
              goto LABEL_36;
            v48 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
            if (v48 <= 0x39)
              break;
LABEL_31:
            if (sub_22F115668(i))
              v43 = i;
            i = sub_22F115B7C(i);
            if (!i)
              goto LABEL_40;
          }
          if (v48 == 24)
            goto LABEL_39;
          if (v48 == 26)
            break;
          if (((1 << v48) & 0x20000000200003CLL) == 0)
            goto LABEL_31;
LABEL_36:
          ;
        }
        if ((*(_BYTE *)(i + 23) & 0x10) == 0)
          goto LABEL_36;
LABEL_39:
        v43 = i;
LABEL_40:
        v49 = sub_22F115668(v43);
        sub_22E8FCA40(v120, v49, v44, 0, (uint64_t)v127);
        v50 = (void **)a6[v34];
        v51 = *v50;
        v122 = v51;
        v123 = (uint64_t)(v50 + 1);
        v52 = (uint64_t)v51;
        while (2)
        {
          while (2)
          {
            if ((v52 & 0xF) != 0)
              goto LABEL_51;
            v53 = *(unsigned __int8 *)(*(_QWORD *)(v52 & 0xFFFFFFFFFFFFFFF0) + 16);
            if (v53 > 0x39)
            {
LABEL_46:
              if (sub_22F115668(v52))
                v51 = (void *)v52;
              v52 = sub_22F115B7C(v52);
              if (!v52)
                goto LABEL_53;
              continue;
            }
            break;
          }
          if (v53 == 24)
            break;
          if (v53 != 26)
          {
            if (((1 << v53) & 0x20000000200003CLL) != 0)
              goto LABEL_51;
            goto LABEL_46;
          }
          if ((*(_BYTE *)(v52 + 23) & 0x10) == 0)
          {
LABEL_51:
            v52 = sub_22F115B7C(v52);
            continue;
          }
          break;
        }
        v51 = (void *)v52;
LABEL_53:
        v54 = sub_22F115668((uint64_t)v51);
        v121[0] = v54 | ((unint64_t)sub_22F1167E8((uint64_t *)&v122) << 32);
        v55 = sub_22E8906A0((uint64_t)v127, v121);
        v126 = *(_QWORD *)a6[v34];
        sub_22E8901B8(v55, (uint64_t *)&v126);
        sub_22E903BEC((unsigned int *)v127);
        v35 = 1;
        v36 = a7;
LABEL_54:
        if (v34 + 1 >= v36)
          goto LABEL_114;
        v56 = v37;
        while (2)
        {
          v57 = (unint64_t *)a6[v56];
          if (!v57
            || (*(_BYTE *)(*(_QWORD *)(*v57 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0
            || !sub_22F36EDA0(v120[11], *(_QWORD *)a6[v34], *v57, 0))
          {
            goto LABEL_58;
          }
          v58 = *(_QWORD *)a6[v56];
          v59 = v58;
          while (2)
          {
            while (2)
            {
              if ((v59 & 0xF) != 0)
                goto LABEL_72;
              v60 = *(unsigned __int8 *)(*(_QWORD *)(v59 & 0xFFFFFFFFFFFFFFF0) + 16);
              if (v60 > 0x39)
              {
LABEL_67:
                if (sub_22F115668(v59))
                  v58 = v59;
                v59 = sub_22F115B7C(v59);
                if (!v59)
                  goto LABEL_74;
                continue;
              }
              break;
            }
            if (v60 == 24)
              break;
            if (v60 != 26)
            {
              if (((1 << v60) & 0x20000000200003CLL) != 0)
                goto LABEL_72;
              goto LABEL_67;
            }
            if ((*(_BYTE *)(v59 + 23) & 0x10) == 0)
            {
LABEL_72:
              v59 = sub_22F115B7C(v59);
              continue;
            }
            break;
          }
          v58 = v59;
LABEL_74:
          v61 = sub_22F115668(v58);
          sub_22E8FCA40(v120, v61, 0xABBu, 0, (uint64_t)v127);
          v62 = (void **)a6[v56];
          v63 = *v62;
          v122 = v63;
          v123 = (uint64_t)(v62 + 1);
          v64 = (uint64_t)v63;
          while (2)
          {
            while (2)
            {
              if ((v64 & 0xF) != 0)
                goto LABEL_85;
              v65 = *(unsigned __int8 *)(*(_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF0) + 16);
              if (v65 > 0x39)
              {
LABEL_80:
                if (sub_22F115668(v64))
                  v63 = (void *)v64;
                v64 = sub_22F115B7C(v64);
                if (!v64)
                  goto LABEL_87;
                continue;
              }
              break;
            }
            if (v65 == 24)
              break;
            if (v65 != 26)
            {
              if (((1 << v65) & 0x20000000200003CLL) != 0)
                goto LABEL_85;
              goto LABEL_80;
            }
            if ((*(_BYTE *)(v64 + 23) & 0x10) == 0)
            {
LABEL_85:
              v64 = sub_22F115B7C(v64);
              continue;
            }
            break;
          }
          v63 = (void *)v64;
LABEL_87:
          v66 = sub_22F115668((uint64_t)v63);
          v121[0] = v66 | ((unint64_t)sub_22F1167E8((uint64_t *)&v122) << 32);
          v67 = sub_22E8906A0((uint64_t)v127, v121);
          v126 = *(_QWORD *)a6[v56];
          v68 = sub_22E8901B8(v67, (uint64_t *)&v126);
          v125 = *(_QWORD *)a6[v34];
          sub_22E8901B8(v68, &v125);
          sub_22E903BEC((unsigned int *)v127);
          v69 = *(_QWORD *)a6[v34];
          v70 = v69;
          while (2)
          {
            while (2)
            {
              if ((v70 & 0xF) != 0)
                goto LABEL_98;
              v71 = *(unsigned __int8 *)(*(_QWORD *)(v70 & 0xFFFFFFFFFFFFFFF0) + 16);
              if (v71 > 0x39)
              {
LABEL_93:
                if (sub_22F115668(v70))
                  v69 = v70;
                v70 = sub_22F115B7C(v70);
                if (!v70)
                  goto LABEL_100;
                continue;
              }
              break;
            }
            if (v71 == 24)
              break;
            if (v71 != 26)
            {
              if (((1 << v71) & 0x20000000200003CLL) != 0)
                goto LABEL_98;
              goto LABEL_93;
            }
            if ((*(_BYTE *)(v70 + 23) & 0x10) == 0)
            {
LABEL_98:
              v70 = sub_22F115B7C(v70);
              continue;
            }
            break;
          }
          v69 = v70;
LABEL_100:
          v72 = sub_22F115668(v69);
          sub_22E8FCA40(v120, v72, 0x156Du, 0, (uint64_t)v127);
          v73 = (void **)a6[v34];
          v74 = *v73;
          v122 = v74;
          v123 = (uint64_t)(v73 + 1);
          v75 = (uint64_t)v74;
          while (2)
          {
            while (2)
            {
              if ((v75 & 0xF) != 0)
                goto LABEL_111;
              v76 = *(unsigned __int8 *)(*(_QWORD *)(v75 & 0xFFFFFFFFFFFFFFF0) + 16);
              if (v76 > 0x39)
              {
LABEL_106:
                if (sub_22F115668(v75))
                  v74 = (void *)v75;
                v75 = sub_22F115B7C(v75);
                if (!v75)
                  goto LABEL_113;
                continue;
              }
              break;
            }
            if (v76 == 24)
              break;
            if (v76 != 26)
            {
              if (((1 << v76) & 0x20000000200003CLL) != 0)
                goto LABEL_111;
              goto LABEL_106;
            }
            if ((*(_BYTE *)(v75 + 23) & 0x10) == 0)
            {
LABEL_111:
              v75 = sub_22F115B7C(v75);
              continue;
            }
            break;
          }
          v74 = (void *)v75;
LABEL_113:
          v77 = sub_22F115668((uint64_t)v74);
          v121[0] = v77 | ((unint64_t)sub_22F1167E8((uint64_t *)&v122) << 32);
          v78 = sub_22E8906A0((uint64_t)v127, v121);
          v126 = *(_QWORD *)a6[v34];
          sub_22E8901B8(v78, (uint64_t *)&v126);
          sub_22E903BEC((unsigned int *)v127);
          v35 = 1;
          v36 = a7;
LABEL_58:
          if ((_DWORD)++v56 != (_DWORD)a7)
            continue;
          break;
        }
LABEL_114:
        v38 = a9;
LABEL_115:
        ++v34;
        ++v37;
      }
      while (v34 != v36);
      a5 = v116;
      if ((v35 & 1) != 0)
        return 1;
      if ((v119 & 1) == 0)
      {
        v81 = 0;
        v122 = &v124;
        v123 = 0x100000000;
        v80 = -1;
        do
        {
          v82 = (unint64_t *)a6[v81];
          if (v82)
          {
            if (sub_22F36EDA0(v120[11], *((_QWORD *)v116 + 1), *v82, 0))
            {
              v83 = v123;
              if (v123 >= (unint64_t)HIDWORD(v123))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v83 = v123;
              }
              *((_DWORD *)v122 + v83) = v81;
              LODWORD(v123) = v123 + 1;
            }
          }
          else
          {
            v80 = v81;
          }
          ++v81;
        }
        while (v36 != v81);
        v79 = v123;
        if (v123 > 1)
        {
          if (v116)
          {
            v84 = v120;
            while (1)
            {
              v85 = (uint64_t)a5;
              v86 = *(unsigned __int8 *)a5;
              if (v86 > 0xD5)
              {
                if (v86 == 233)
                {
                  if ((*a5 & 0x7C0000) != 0x300000)
                    goto LABEL_176;
                  v88 = (_DWORD **)(a5 + 4);
                }
                else
                {
                  if (v86 != 214)
                    goto LABEL_176;
                  v88 = (_DWORD **)(a5 + 6);
                }
              }
              else if (v86 == 155)
              {
                if ((**((_DWORD **)a5 + 2) & 0x18000) != 0)
                  goto LABEL_176;
                if (*((_BYTE *)a5 + 48))
                  v88 = (_DWORD **)(a5 + 6);
                else
                  v88 = (_DWORD **)(a5 + 8);
              }
              else
              {
                if (v86 != 176)
                  goto LABEL_176;
                v87 = a5[5];
                if ((_DWORD)v87 == -1)
                  goto LABEL_176;
                v88 = (_DWORD **)&a5[2 * v87 + 10];
              }
              a5 = *v88;
              if (*v88 == (_DWORD *)v85)
                goto LABEL_176;
            }
          }
          v85 = 0;
          v84 = v120;
LABEL_176:
          sub_22F0D5A50(v85);
          sub_22E8FCA40(v84, v98, 0xDC4u, 0, (uint64_t)v127);
          sub_22F0D4E74(v85);
          v121[0] = v99;
          v100 = sub_22E8906A0((uint64_t)v127, v121);
          v126 = *(_QWORD *)(v85 + 8);
          v101 = sub_22E8901B8(v100, (uint64_t *)&v126);
          LODWORD(v125) = v123;
          sub_22E89519C(v101, (unsigned int *)&v125);
          sub_22E903BEC((unsigned int *)v127);
          if ((_DWORD)v123)
          {
            v102 = (unsigned int *)v122;
            v103 = (unsigned int *)((char *)v122 + 4 * v123);
            v21 = 1;
            while (1)
            {
              v104 = *v102;
              v105 = *(_QWORD *)a6[v104];
              for (j = v105; ; j = sub_22F115B7C(j))
              {
                while (1)
                {
                  if ((j & 0xF) != 0)
                    goto LABEL_189;
                  v107 = *(unsigned __int8 *)(*(_QWORD *)(j & 0xFFFFFFFFFFFFFFF0) + 16);
                  if (v107 <= 0x39)
                    break;
LABEL_184:
                  if (sub_22F115668(j))
                    v105 = j;
                  j = sub_22F115B7C(j);
                  if (!j)
                    goto LABEL_191;
                }
                if (v107 == 24)
                  goto LABEL_190;
                if (v107 == 26)
                  break;
                if (((1 << v107) & 0x20000000200003CLL) == 0)
                  goto LABEL_184;
LABEL_189:
                ;
              }
              if ((*(_BYTE *)(j + 23) & 0x10) == 0)
                goto LABEL_189;
LABEL_190:
              v105 = j;
LABEL_191:
              v108 = sub_22F115668(v105);
              sub_22E8FCA40(v120, v108, 0x156Du, 0, (uint64_t)v127);
              v109 = (uint64_t *)a6[v104];
              v110 = *v109;
              v121[0] = v110;
              v121[1] = (uint64_t)(v109 + 1);
              v111 = v110;
              while (2)
              {
                while (2)
                {
                  if ((v111 & 0xF) != 0)
                    goto LABEL_202;
                  v112 = *(unsigned __int8 *)(*(_QWORD *)(v111 & 0xFFFFFFFFFFFFFFF0) + 16);
                  if (v112 > 0x39)
                  {
LABEL_197:
                    if (sub_22F115668(v111))
                      v110 = v111;
                    v111 = sub_22F115B7C(v111);
                    if (!v111)
                      goto LABEL_204;
                    continue;
                  }
                  break;
                }
                if (v112 == 24)
                  break;
                if (v112 != 26)
                {
                  if (((1 << v112) & 0x20000000200003CLL) != 0)
                    goto LABEL_202;
                  goto LABEL_197;
                }
                if ((*(_BYTE *)(v111 + 23) & 0x10) == 0)
                {
LABEL_202:
                  v111 = sub_22F115B7C(v111);
                  continue;
                }
                break;
              }
              v110 = v111;
LABEL_204:
              v113 = sub_22F115668(v110);
              v126 = v113 | ((unint64_t)sub_22F1167E8(v121) << 32);
              v114 = sub_22E8906A0((uint64_t)v127, (uint64_t *)&v126);
              v125 = *(_QWORD *)a6[v104];
              sub_22E8901B8(v114, &v125);
              sub_22E903BEC((unsigned int *)v127);
              if (++v102 == v103)
              {
LABEL_172:
                if (v122 != &v124)
                  free(v122);
                return v21;
              }
            }
          }
LABEL_171:
          v21 = 1;
          goto LABEL_172;
        }
LABEL_149:
        if (v80 != -1 || v79)
        {
          if (v79)
            v80 = *(_DWORD *)v122;
          v21 = sub_22F3C26AC(v120[11], a2, (uint64_t)a5, a6, a7, v38, a10, a3, v115, 0, v33 & 1, v80);
          goto LABEL_172;
        }
        if (a5)
        {
          v89 = v120;
          while (1)
          {
            v90 = (uint64_t)a5;
            v91 = *(unsigned __int8 *)a5;
            if (v91 > 0xD5)
            {
              if (v91 == 233)
              {
                if ((*a5 & 0x7C0000) != 0x300000)
                  goto LABEL_170;
                v93 = (_DWORD **)(a5 + 4);
              }
              else
              {
                if (v91 != 214)
                  goto LABEL_170;
                v93 = (_DWORD **)(a5 + 6);
              }
            }
            else if (v91 == 155)
            {
              if ((**((_DWORD **)a5 + 2) & 0x18000) != 0)
                goto LABEL_170;
              if (*((_BYTE *)a5 + 48))
                v93 = (_DWORD **)(a5 + 6);
              else
                v93 = (_DWORD **)(a5 + 8);
            }
            else
            {
              if (v91 != 176)
                goto LABEL_170;
              v92 = a5[5];
              if ((_DWORD)v92 == -1)
                goto LABEL_170;
              v93 = (_DWORD **)&a5[2 * v92 + 10];
            }
            a5 = *v93;
            if (*v93 == (_DWORD *)v90)
              goto LABEL_170;
          }
        }
        v90 = 0;
        v89 = v120;
LABEL_170:
        sub_22F0D5A50(v90);
        sub_22E8FCA40(v89, v94, 0xDC5u, 0, (uint64_t)v127);
        sub_22F0D4E74(v90);
        v121[0] = v95;
        v96 = sub_22E8906A0((uint64_t)v127, v121);
        v126 = *(_QWORD *)(v90 + 8);
        sub_22E8901B8(v96, (uint64_t *)&v126);
        sub_22E903BEC((unsigned int *)v127);
        goto LABEL_171;
      }
      v30 = a10;
    }
    else
    {
      v38 = a9;
      if ((v32 & 0x8000) == 0)
      {
        v79 = 0;
        v122 = &v124;
        v123 = 0x100000000;
        v80 = -1;
        goto LABEL_149;
      }
    }
    return sub_22F3C275C(v120[11], a2, (uint64_t)a5, a6, a7, v38, v30, a3, v115, 0, v33 & 1);
  }
  return v21;
}

uint64_t sub_22EB21338(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  unint64_t *v16;
  int v17;
  void *v18;
  int v19;
  uint64_t v20;
  _WORD *v21;
  uint64_t v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  int v28;
  void *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42[24];
  unsigned int v43[24];
  void *v44;
  _DWORD v45[3];
  char v46;
  void *__p;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  _BYTE v54[88];
  uint64_t v55;
  uint64_t v56;
  int v57;
  _QWORD v58[3];
  __int16 v59;
  int v60;
  char v61;
  uint64_t v62[2];
  void *v63;
  uint64_t v64;
  _BYTE v65[16];
  _BYTE v66[40];
  unsigned int v67;
  __int16 v68;
  void *v69;
  uint64_t v70;
  int v71;
  void *v72;
  size_t v73;
  _DWORD v74[10];
  char v75;
  unsigned __int8 v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  sub_22F14E1D0((uint64_t)v66, a2, a3, *(_QWORD **)(a1 + 80));
  if (v75)
  {
    v8 = 1;
  }
  else
  {
    v39 = a4;
    v63 = v65;
    v64 = 0x400000000;
    if (a3)
    {
      v9 = 0;
      v10 = 24 * a3;
      v11 = (int *)a2;
      do
      {
        v12 = *v11;
        if (v9 >= HIDWORD(v64))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v9 = v64;
        }
        *((_DWORD *)v63 + v9) = v12;
        v9 = v64 + 1;
        LODWORD(v64) = v64 + 1;
        v11 += 6;
        v10 -= 24;
      }
      while (v10);
    }
    v13 = *(_QWORD *)(a1 + 88);
    v14 = *(_QWORD *)(v13 + 16408);
    switch(v68)
    {
      case 14:
        v15 = 0;
        v16 = (unint64_t *)(v13 + 16424);
        v17 = 1;
        goto LABEL_17;
      case 16:
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 3) & 4) == 0)
        {
          v17 = 2;
          v15 = 1;
          goto LABEL_18;
        }
        v16 = (unint64_t *)(v13 + 16440);
        v17 = 2;
        v15 = 1;
        goto LABEL_17;
      case 17:
        v15 = 0;
        v16 = (unint64_t *)(v13 + 16448);
        v17 = 3;
        goto LABEL_17;
      case 18:
        v15 = 0;
        v16 = (unint64_t *)(v13 + 16456);
        v17 = 4;
        goto LABEL_17;
      default:
        v15 = v76;
        if (v76)
        {
          v15 = 0;
          v17 = 0;
          v16 = (unint64_t *)(v13 + 16512);
LABEL_17:
          v14 = *v16;
        }
        else
        {
          v17 = 0;
        }
LABEL_18:
        if ((**(_QWORD **)(a1 + 72) & 0x1100) == 0x100 && !((v15 ^ 1) & 1 | (**(_QWORD **)(a1 + 72) >> 26) & 1))
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)v63, 0x191Du, 0, (uint64_t)v43);
          sub_22E903BEC(v43);
          v18 = (void *)(*(_QWORD *)(a1 + 88) + 2128);
          v51 = 0;
          v52 = v18;
          LODWORD(v53) = 5515;
          v19 = 0;
          if (a3)
          {
            v20 = 24 * a3;
            v21 = (_WORD *)(a2 + 16);
            do
            {
              if (*v21 == 16)
              {
                v22 = *((unsigned int *)v21 - 4);
                if (!v19)
                  v19 = *((_DWORD *)v21 - 4);
                v23 = sub_22F1418F4(*((_DWORD *)v21 - 4), 2u, *(uint64_t **)(a1 + 112), *(_QWORD **)(a1 + 72));
                *(_QWORD *)&v45[1] = 0;
                v46 = 0;
                v48 = 0;
                v49 = 0;
                __p = 0;
                v50 = 0;
                v44 = (void *)(v22 | ((unint64_t)(v23 + v22) << 32));
                LOBYTE(v45[0]) = 0;
                sub_22E6D82D0((uint64_t *)&v51, &v44);
                if (SHIBYTE(v49) < 0)
                  operator delete(__p);
              }
              v21 += 12;
              v20 -= 24;
            }
            while (v20);
          }
          sub_22E90379C((_QWORD *)a1, v19, (uint64_t)&v51, 0, (uint64_t)v42);
          sub_22E903BEC(v42);
          if (v51 && v52)
            sub_22E3BB10C((unint64_t)v52, v51);
          v13 = *(_QWORD *)(a1 + 88);
        }
        v24 = sub_22EF7411C(v13, v14, (v71 - (int)v69) / v67);
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 104) & 0x20) != 0)
          v24 = sub_22EF5DD84(*(_QWORD *)(a1 + 88), v24, 13);
        v25 = *(_QWORD *)(a1 + 88);
        v26 = v69;
        v27 = (v71 - (_DWORD)v69);
        v28 = v76;
        v29 = v63;
        v30 = v64;
        v31 = sub_22E3CD3D4(v25 + 2032, v27 + 4 * v64 + 20, 3);
        sub_22EFF95DC(v31, v25, v26, v27, v17, v28, v24, v29, v30);
        if (v73)
        {
          v32 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(a1 + 88) + 15192), v72, v73);
          v33 = *((_DWORD *)v63 + v74[8]);
          v34 = sub_22F1418F4(v33, v74[9], *(uint64_t **)(a1 + 112), *(_QWORD **)(a1 + 72)) + v33;
          if (v39)
          {
            v36 = *(_QWORD *)(a1 + 88);
            v37 = sub_22EF67C8C(v36);
            v40 = sub_22F3AE768((_QWORD *)(v36 + 15224), v32);
            sub_22EFC6D6C((uint64_t)&v41, v40);
            v41 = v34;
            v62[0] = sub_22EF5F824(*(_QWORD *)(a1 + 88), v24);
            v62[1] = v37;
            v51 = 0;
            v52 = v54;
            v53 = 0x800000000;
            memset(&v54[64], 0, 24);
            v55 = a1;
            v56 = v40;
            v57 = v34;
            sub_22EFC6D6C((uint64_t)v58, v40);
            v58[2] = 0;
            v58[1] = 0;
            v59 = 0;
            v60 = 257;
            v61 = 0;
            sub_22EC56024((uint64_t)&v51);
            v38 = (char *)&loc_22EB218B4
                + 4 * byte_22F47FFC4[sub_22EC66D18(a1, v39, (uint64_t)&v51, v62, 2, 0, 1, 1, 1, v31)];
            __asm { BR              X10 }
          }
          sub_22E8FCA40((_QWORD *)a1, v34, 0x20u, 0, (uint64_t)&v44);
          sub_22E903BEC((unsigned int *)&v44);
          v8 = 1;
        }
        else
        {
          v8 = v31;
        }
        if (v63 != v65)
          free(v63);
        break;
    }
  }
  if (v72 != v74)
    free(v72);
  if (v69 != &v70)
    free(v69);
  return v8;
}

uint64_t sub_22EB21CE8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10)
{
  int v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  _DWORD *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v42;
  __int128 v43;

  if ((*(_DWORD *)(a2 + 28) & 0x7Fu) - 60 > 6)
  {
    v17 = 0;
  }
  else
  {
    v16 = *(_DWORD *)(a5 + 8);
    v42 = 0;
    *(_QWORD *)&v43 = 0;
    v17 = sub_22EB4EE10(a1, a2, v16, 0, 0, 0, (uint64_t *)&v43, &v42, 0) ^ 1;
  }
  v18 = *(_QWORD *)(a1 + 88);
  v19 = sub_22EB22004(a1, a2);
  v20 = sub_22EFF6DB8(v18, a6, a7, a9, a2, v17, a5, a3, a4, SHIWORD(a4), a8, a10, v19);
  sub_22EB22288(a1, v20, 0);
  v21 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
  if (v21)
    v22 = *(_BYTE *)(v21 + 16) == 26;
  else
    v22 = 0;
  if ((v22
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
     && (v21 = sub_22F10CF48(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0))) != 0)
    && ((*(_QWORD *)(v21 + 16) >> 54) & 0xF) - 9 <= 1)
  {
    v23 = sub_22EB14850(a1, *(unsigned int *)(a5 + 8));
    if (v23)
    {
      v24 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v24 & 8) != 0)
      {
        v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF0) + 0x18);
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
      }
      else
      {
        v25 = 0;
        v26 = 0;
      }
      v27 = v26 | (v24 | a3) & 7;
      if (((v27 | v25) & 0xCFFFFFFF8) != 0)
        v28 = sub_22EF5DBC4(*(_QWORD *)(a1 + 88), v23, v27 | v25);
      else
        v28 = v23 & 0xFFFFFFFFFFFFFFF0 | v27 & 7;
      *(_QWORD *)(v20 + 8) = v28;
    }
  }
  v29 = *(_DWORD *)(a2 + 28);
  if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 8) != 0 && (*(_DWORD *)(a2 + 28) & 0x7Fu) - 60 <= 6)
  {
    v30 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v30 & 8) != 0 && (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) == 0xC0)
    {
      v31 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
      if (v31 > 3 || v31 == 2)
      {
        v33 = *(_QWORD *)(a1 + 104);
        if ((*(_BYTE *)(v20 + 2) & 4) != 0)
        {
          v43 = *(_OWORD *)(v20 + 32);
          v34 = sub_22F0AB0EC((unint64_t *)&v43);
        }
        else
        {
          v34 = *(_DWORD *)(v20 + 4);
        }
        if (sub_22F1CF68C(*(_QWORD *)(v33 + 32), 0x183Cu, v34, v33) != 1)
        {
          v38 = *(unsigned int *)(a1 + 1904);
          if ((_DWORD)v38)
            v39 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * v38 - 8);
          else
            v39 = 0;
          sub_22F32D5CC(v39, v20);
          v29 = *(_DWORD *)(a2 + 28);
        }
      }
    }
  }
  if ((v29 & 0x7Fu) - 49 >= 3)
    v35 = 0;
  else
    v35 = a2;
  if ((v29 & 0x7F) == 0x44)
    v35 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * *(unsigned int *)(a2 + 64) - 8);
  if (v35)
  {
    *(_QWORD *)&v43 = v35;
    sub_22EAE2514(a1 + 2272, &v43);
    if ((*(_BYTE *)(v35 + 68) & 1) != 0)
      *(_DWORD *)v20 = *(_DWORD *)v20 & 0xFFFFE3FF | 0x400;
  }
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x30)
  {
    v36 = *(_DWORD **)(a2 + 64);
    if (v36)
      *(_DWORD *)v20 = *(_DWORD *)v20 & 0xFFFFE3FF | (((*v36 >> 10) & 7) << 10);
  }
  return v20;
}

uint64_t sub_22EB22004(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
  if (v2 <= 3 && v2 != 2)
    return 1;
  if (!a2
    || (*(_DWORD *)(a2 + 28) & 0x7Fu) - 67 < 0xFFFFFFF9
    || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) & 0xFE) != 0x28)
  {
    return 0;
  }
  v7 = *(_QWORD *)(a1 + 72);
  if (*(_DWORD *)(v7 + 72))
  {
    if (sub_22EC7ECC4(a1, a2, 0, 0))
      return 0;
    v7 = *(_QWORD *)(a1 + 72);
  }
  if ((*(_BYTE *)(v7 + 68) & 0x20) != 0
    && ((*(_DWORD *)(a2 + 28) & 0x7F) != 0x40 || (*(_DWORD *)(a2 + 96) & 0x600u) - 1536 <= 0xFFFFFBFF)
    && *(_QWORD *)(a2 + 88) >= 8uLL)
  {
    v8 = (unsigned __int8 *)sub_22EFBC5B4(a2);
    if (*v8 == 161)
    {
      v9 = *((_QWORD *)v8 + 2);
      if (v9)
      {
        if ((*(_DWORD *)(v9 + 28) & 0x7Fu) - 67 >= 0xFFFFFFF9
          && !sub_22E3CB5E0(*((_QWORD *)v8 + 2))
          && !sub_22E466E5C(v9))
        {
          v10 = *(_QWORD *)(a1 + 216);
          if (v10)
          {
            v11 = *(_WORD *)(v10 + 8);
            if ((v11 & 0x7Eu) - 54 <= 3)
            {
              v12 = v11 & 0x7F;
              v13 = -40;
              if (v12 > 70)
              {
                switch(v12)
                {
                  case 'S':
                    goto LABEL_38;
                  case 'G':
                    v13 = -56;
                    goto LABEL_38;
                  case 'Q':
LABEL_38:
                    v14 = *(_QWORD *)(v10 + v13 + 16);
                    v15 = (_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF8);
                    if ((v14 & 4) != 0)
                      v15 = (_QWORD *)*v15;
                    if (v15)
                      v16 = v15 - 8;
                    else
                      v16 = 0;
                    v17 = v16[16];
                    if (v17
                      && ((*(unsigned __int16 *)(v17 + 8) | (*(unsigned __int8 *)(v17 + 10) << 16)) & 0x100000) != 0
                      && (*(_QWORD *)(v10 - 32) & 7) == 6
                      && *(_DWORD *)(*(_QWORD *)(v10 - 32) & 0xFFFFFFFFFFFFFFF8) == 42
                      && sub_22E466E5C(v10 - 72))
                    {
                      v18 = *(_QWORD *)(a2 + 16);
                      v19 = (_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF8);
                      if ((v18 & 4) != 0)
                        v19 = (_QWORD *)*v19;
                      if (v19 != (_QWORD *)v10)
                        return 0;
                    }
                    goto LABEL_51;
                }
              }
              else
              {
                if (v12 <= 0x18)
                {
                  if (v12 == 16)
                  {
LABEL_26:
                    v13 = -48;
                    goto LABEL_38;
                  }
                  if (((1 << v12) & 0x1066) != 0)
                    goto LABEL_38;
                  if (v12 == 24)
                    goto LABEL_26;
                }
                if (v12 == 70)
                {
LABEL_36:
                  v13 = -64;
                  goto LABEL_38;
                }
              }
              if ((v12 - 52) >= 6)
              {
                if ((v12 - 33) >= 5)
                  goto LABEL_26;
                goto LABEL_36;
              }
              v13 = -72;
              goto LABEL_38;
            }
          }
        }
      }
    }
  }
LABEL_51:
  if ((sub_22EFBCBC4(a2, *(_QWORD *)(a1 + 88)) & 1) != 0)
    return 2;
  return 0;
}

uint64_t sub_22EB22288(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  _DWORD *v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  unsigned int v15;
  BOOL v16;

  v5 = *(_DWORD **)(a2 + 16);
  if (v5)
    v6 = (v5[7] & 0x7Eu) - 58 >= 0xFFFFFFFC;
  else
    v6 = 0;
  v7 = !v6
    || (v9 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v5 + 32))(*(_QWORD *)(a2 + 16)),
        (*(_BYTE *)(v9 + 82) & 0xC) == 0)
    && !sub_22EFD7260(v9)
    || sub_22EFD6C34((uint64_t)v5, a3, (*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) & 0x2000000000) != 0) != 0;
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
    v11 = (*(_DWORD *)(v10 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA;
  else
    v11 = 0;
  if (v11)
  {
    v12 = *(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696);
    v13 = *(_DWORD *)(v12 - 576);
    v14 = v13 > 3 || v13 == 2;
    v15 = v13 & 0xFFFFFFFE;
    v16 = !v14 || v15 == 4;
    if (!v16
      && !*(_BYTE *)(a1 + 3209)
      && (*(_QWORD *)(v10 + 80) & 0xC0000000) == 0x80000000
      && !*(_BYTE *)(a1 + 3208))
    {
      sub_22E3BA850(v12 - 72, (const void *)a2);
      v10 = *(_QWORD *)(a2 + 16);
    }
  }
  return sub_22EB520E4(a1, *(_DWORD *)(a2 + 4), v10, (unsigned __int8 *)a2, v7, a1 + 8848);
}

double sub_22EB223B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[2];

  if (*(_DWORD *)a2 == 7)
  {
    v8 = a3;
    *(_DWORD *)(a3 + 272) = *(_DWORD *)(*(_QWORD *)(a2 + 8) + 36);
    *(_DWORD *)(a3 + 276) = *(_DWORD *)(*(_QWORD *)(a2 + 8) + 40);
    v10 = *(_QWORD *)(a2 + 8);
    v11 = v10 + 56;
    v12 = *(unsigned int *)(v10 + 44);
    v15[0] = v11;
    v15[1] = v12;
    sub_22ED58288(a1, (uint64_t)v15, a3);
    sub_22EF685D4(*(_QWORD *)(*(_QWORD *)(a2 + 8) + 24), *(_DWORD *)(*(_QWORD *)(a2 + 8) + 4), (uint64_t)&v13);
  }
  else
  {
    sub_22EA12DB4(a1, a2);
    v8 = 0;
  }
  result = *(double *)&v13;
  *(_OWORD *)a4 = v13;
  *(_QWORD *)(a4 + 16) = v14;
  *a5 = v8;
  return result;
}

BOOL sub_22EB2247C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _BOOL4 v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL8 result;
  unsigned int v28[24];
  unsigned int v29[24];
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  void *__p;
  __int16 v35;
  int v36;
  uint64_t v37;
  __int16 v38;
  char v39;
  uint64_t v40;
  unsigned int v41[24];

  v4 = *(unsigned int *)(a1 + 10680);
  if ((_DWORD)v4)
    v5 = *(_DWORD *)(*(_QWORD *)(a1 + 10672) + (v4 << 6) - 64) == 2;
  else
    v5 = 0;
  v6 = *(_QWORD *)(a1 + 216);
  if (v6)
    v7 = (*(_WORD *)(v6 + 8) & 0x7Eu) - 58 >= 0xFFFFFFFC;
  else
    v7 = 0;
  if (!v7
    || (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 - 72) + 32))(v6 - 72) + 80) & 0xE000) == 0x4000
    || (*(_QWORD *)(v6 - 32) & 7) == 6
    && (*(_DWORD *)(*(_QWORD *)(v6 - 32) & 0xFFFFFFFFFFFFFFF8) - 1) < 4)
  {
    v8 = 0;
    goto LABEL_37;
  }
  v9 = *(_WORD *)(v6 + 8) & 0x7F;
  v10 = -40;
  if (v9 > 0x46)
  {
    if (v9 != 83)
    {
      if (v9 == 71)
      {
        v10 = -56;
        goto LABEL_29;
      }
      if (v9 == 81)
        goto LABEL_29;
LABEL_24:
      if (v9 - 52 < 6)
      {
        v10 = -72;
      }
      else
      {
        v10 = -48;
        if (v9 - 33 < 5)
          v10 = -64;
      }
    }
  }
  else
  {
    if (v9 > 0x18)
      goto LABEL_23;
    if (v9 != 16)
    {
      if (((1 << v9) & 0x1066) != 0)
        goto LABEL_29;
      if (v9 != 24)
      {
LABEL_23:
        if (v9 == 70)
        {
          v10 = -64;
          goto LABEL_29;
        }
        goto LABEL_24;
      }
    }
    v10 = -48;
  }
LABEL_29:
  v11 = *(_QWORD *)(v6 + v10 + 16);
  v12 = (_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
  if ((v11 & 4) != 0)
    v12 = (_QWORD *)*v12;
  if (v12)
    v13 = v12 - 8;
  else
    v13 = 0;
  v8 = *(_QWORD **)(a2 + 96) == v13 && !v5;
LABEL_37:
  v14 = *(_QWORD *)((**(_QWORD **)(a2 + 8) & 0xFFFFFFFFFFFFFFFCLL) + 16);
  v15 = (_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF8);
  if ((v14 & 4) != 0)
    v15 = (_QWORD *)*v15;
  v16 = *(_QWORD *)(a2 + 96);
  if (v16)
  {
    v17 = v16 + 64;
    v18 = sub_22EFCC008((uint64_t)v15);
    if (v18 == sub_22EFCC008(v17))
    {
      if ((**(_BYTE **)(a1 + 72) & 0x10) != 0)
        v20 = 5252;
      else
        v20 = 3505;
      v19 = 5712;
      if (v8)
        goto LABEL_48;
LABEL_55:
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 128), v20, 0, (uint64_t)v41);
      v30 = *(_QWORD *)(a2 + 120);
      sub_22E894538((uint64_t)v41, &v30);
      sub_22E903BEC(v41);
      goto LABEL_56;
    }
  }
  if ((**(_QWORD **)(a1 + 72) & 0x10) != 0)
    v19 = 5555;
  else
    v19 = 5712;
  if ((**(_QWORD **)(a1 + 72) & 0x10) != 0)
    v20 = 5251;
  else
    v20 = 3504;
  if (!v8)
    goto LABEL_55;
LABEL_48:
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 128), v20, 0, (uint64_t)v41);
  v40 = *(_QWORD *)(a2 + 120);
  v21 = sub_22E894538((uint64_t)v41, &v40);
  v22 = *(unsigned int *)(a2 + 128);
  v32 = 0;
  v33 = 0;
  v30 = v22 | (v22 << 32);
  v31 = 0;
  v38 = 1536;
  v37 = 0;
  HIBYTE(__p) = 0;
  v35 = 0;
  v36 = 0;
  strcpy((char *)&__p, "this->");
  v39 = 0;
  sub_22E890748(v21, &v30);
  if (SHIBYTE(v38) < 0)
    operator delete(__p);
  sub_22E903BEC(v41);
  sub_22EBBBBEC(a1, *(_DWORD *)(a2 + 128), 0, 1, 0, 0);
LABEL_56:
  v23 = *(unsigned int *)(a2 + 16);
  if ((_DWORD)v23)
  {
    v24 = *(uint64_t **)(a2 + 8);
    v25 = 8 * v23;
    do
    {
      v26 = *v24++;
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)((v26 & 0xFFFFFFFFFFFFFFFCLL) + 24), v19, 0, (uint64_t)v29);
      sub_22E903BEC(v29);
      v25 -= 8;
    }
    while (v25);
  }
  if (!v5)
    return 0;
  result = sub_22EFBAEF8(**(_QWORD **)(a2 + 8) & 0xFFFFFFFFFFFFFFFCLL);
  if (result)
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 128), 0xEB4u, 0, (uint64_t)v28);
    sub_22E903BEC(v28);
    return 1;
  }
  return result;
}

uint64_t sub_22EB22808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  BOOL v26;
  BOOL v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  unint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  __int128 v38;
  void (**v39)(void);
  uint64_t v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void **v44;
  uint64_t v45;
  __int128 *p_s1;
  int v47;
  int v48;
  int v49;
  int v50;
  char v51;
  _BOOL4 v52;
  void (**v53)(void);
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  unint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  int v80;
  unsigned int v82;
  unsigned int v83;
  BOOL v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  BOOL v88;
  BOOL v89;
  uint64_t v90;
  int v91;
  uint64_t *v92;
  BOOL v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  uint64_t v111;
  uint64_t *v112;
  __int128 v113;
  unint64_t v114;
  unint64_t v115;
  int v116;
  void *__p[2];
  char v118;
  uint64_t v119;
  unint64_t v120;
  void *v121[2];
  int v122;
  __int128 v123;
  __int128 v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD v127[3];
  _QWORD *v128;
  _QWORD v129[3];
  _QWORD *v130;
  __int128 v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE v135[22];
  __int128 v136;
  uint64_t v137;
  __int128 __s1;
  void *v139[2];
  uint64_t v140;
  _BYTE v141[22];
  __int128 v142;
  uint64_t v143;
  _BYTE *v144;
  _BYTE *v145;
  uint64_t v146;
  int v147;
  _BYTE v148[128];
  __int128 v149;
  _BYTE *v150;
  uint64_t v151;
  _BYTE v152[32];
  char *v153;
  __int128 v154;
  uint64_t v155;
  unsigned int v156;
  __int128 v157;
  int v158;
  uint64_t v159;

  v9 = MEMORY[0x24BDAC7A8]();
  *((_QWORD *)&v113 + 1) = v12;
  v14 = v13;
  v111 = v15;
  v16 = v11;
  v17 = v10;
  v19 = v18;
  v20 = v9;
  v159 = *MEMORY[0x24BDAC8D0];
  v21 = *(_QWORD *)(v11 + 120);
  v112 = (uint64_t *)(v11 + 120);
  *(_QWORD *)&v113 = v22;
  v126 = v21;
  if ((v21 & 7) - 5 < 2)
    goto LABEL_6;
  if ((v21 & 7) != 7)
    goto LABEL_7;
  v23 = *(_DWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
  if (v23 >= 3)
    v23 = 3;
  if (v23 == 1)
  {
LABEL_6:
    v24 = 5047;
    v25 = 5048;
  }
  else
  {
LABEL_7:
    v24 = 5049;
    v25 = 5050;
  }
  v110 = v25;
  if (*(_DWORD *)(v10 + 4))
    v26 = *(_DWORD *)v10 == 0;
  else
    v26 = 1;
  v27 = v26 && *(_QWORD *)(v10 + 8) == 0;
  if (!v27 || (v28 = *(_QWORD *)(v9 + 216)) == 0)
  {
LABEL_24:
    v131 = 0uLL;
    v132 = &v134;
    v133 = 0x100000000;
    *(_QWORD *)v135 = 0;
    *(_QWORD *)&v135[8] = 0;
    *(_QWORD *)&v135[14] = 0;
    v137 = 0;
    v136 = 0uLL;
    if (v19 && a9)
    {
      v33 = v24;
      v34 = *(_DWORD *)(v16 + 128);
      v109 = *(_DWORD *)(v16 + 152);
      v35 = *(_QWORD *)v17;
      v119 = v20;
      v120 = v35;
      sub_22F0AB560(v121, v17 + 8);
      *(_QWORD *)&v123 = v21;
      DWORD2(v123) = v34;
      v24 = v33;
      v124 = v113;
      v125 = __PAIR64__(v110, v33);
      v36 = operator new(0x58uLL);
      v37 = v120;
      *v36 = &off_24FAB8418;
      v36[1] = v20;
      v36[2] = v37;
      sub_22F0AB560(v36 + 3, (uint64_t)v121);
      v38 = v124;
      *((_OWORD *)v36 + 3) = v123;
      *((_OWORD *)v36 + 4) = v38;
      v36[10] = v125;
      v130 = v36;
      v128 = 0;
      *a9 = sub_22EC6B26C(v20, (uint64_t)v112, v109, v19, v17, v111, v129, v127, 1, 0, 0, 0);
      if (v128 == v127)
      {
        v39 = (void (**)(void))(v127[0] + 32);
      }
      else
      {
        if (!v128)
          goto LABEL_54;
        v39 = (void (**)(void))(*v128 + 40);
      }
      (*v39)();
LABEL_54:
      if (v130 == v129)
      {
        v53 = (void (**)(void))(v129[0] + 32);
      }
      else
      {
        if (!v130)
          goto LABEL_59;
        v53 = (void (**)(void))(*v130 + 40);
      }
      (*v53)();
LABEL_59:
      if (v122)
        free(v121[1]);
      if (*a9)
        goto LABEL_73;
      goto LABEL_62;
    }
    if (!v19)
      goto LABEL_62;
    sub_22EC6AB20(v20, v112, *(unsigned int *)(v16 + 152), v19, v17, v111, 1, 0, (uint64_t)&__s1, 0, 0, 1u);
    v131 = __s1;
    sub_22F24C77C((uint64_t)&v132, (uint64_t)v139);
    *(_OWORD *)v135 = *(_OWORD *)v141;
    *(_QWORD *)&v135[14] = *(_QWORD *)&v141[14];
    v40 = (uint64_t)&v142;
    sub_22EA44D30((void **)&v136);
    v136 = v142;
    v137 = v143;
    v143 = 0;
    v142 = 0uLL;
    v41 = v131;
    __p[0] = &v142;
    sub_22E8D19C8((void ***)__p);
    if (v139[0] != &v140)
      free(v139[0]);
    if (!v41)
    {
LABEL_62:
      *(_DWORD *)v16 = 0;
      *(_DWORD *)(v16 + 16) = 0;
      v54 = *(_QWORD *)(v16 + 88);
      if (v54)
      {
        v55 = sub_22EC6CBD0(v54);
        MEMORY[0x2348A0E9C](v55, 0x10E0C409F09D3C3);
      }
      *(_BYTE *)(v16 + 165) = 0;
      *(_QWORD *)(v16 + 88) = 0;
      *(_QWORD *)(v16 + 96) = 0;
      if (*(_DWORD *)(v17 + 4))
        v56 = *(_DWORD *)v17 == 0;
      else
        v56 = 1;
      if (!v56 || *(_QWORD *)(v17 + 8))
      {
        sub_22E8FCA40((_QWORD *)v20, *(_DWORD *)(v16 + 128), 0xFAAu, 0, (uint64_t)&__s1);
        v57 = sub_22E894538((uint64_t)&__s1, &v126);
        __p[0] = (void *)sub_22E958204(v20, v17, 0);
        v58 = sub_22E894FB4(v57, (uint64_t *)__p);
        v114 = *(_QWORD *)v17;
        sub_22E8906A0(v58, (uint64_t *)&v114);
      }
      else
      {
        sub_22E8FCA40((_QWORD *)v20, *(_DWORD *)(v16 + 128), v24, 0, (uint64_t)&__s1);
        sub_22E894538((uint64_t)&__s1, &v126);
      }
      sub_22E903BEC((unsigned int *)&__s1);
LABEL_73:
      LOBYTE(v40) = 1;
LABEL_74:
      *(_QWORD *)&__s1 = &v136;
      sub_22E8D19C8((void ***)&__s1);
      if (v132 != &v134)
        free(v132);
      return v40 & 1;
    }
    sub_22EC6887C((uint64_t *)&v131, *(unsigned int **)(v20 + 72), (uint64_t)__p);
    if (v135[20])
    {
      sub_22EFC683C(&v126, &__s1);
      if (SHIBYTE(v139[0]) >= 0)
        v42 = (void *)(HIBYTE(v139[0]) & 0x7F);
      else
        v42 = (void *)*((_QWORD *)&__s1 + 1);
      v43 = (void *)(v118 & 0x7F);
      if (v118 < 0)
        v43 = __p[1];
      if (v42 == v43)
      {
        if (v118 >= 0)
          v44 = __p;
        else
          v44 = (void **)__p[0];
        if ((HIBYTE(v139[0]) & 0x80) != 0)
        {
          v40 = __s1;
          v52 = memcmp((const void *)__s1, v44, *((size_t *)&__s1 + 1)) == 0;
          goto LABEL_92;
        }
        if ((HIBYTE(v139[0]) & 0x7F) == 0)
        {
          v52 = 1;
          goto LABEL_94;
        }
        v45 = (HIBYTE(v139[0]) & 0x7F) - 1;
        p_s1 = &__s1;
        do
        {
          v48 = *(unsigned __int8 *)p_s1;
          p_s1 = (__int128 *)((char *)p_s1 + 1);
          v47 = v48;
          v50 = *(unsigned __int8 *)v44;
          v44 = (void **)((char *)v44 + 1);
          v49 = v50;
          v84 = v45-- != 0;
          v51 = v84;
          v52 = v47 == v49;
        }
        while (v47 == v49 && (v51 & 1) != 0);
      }
      else
      {
        v52 = 0;
      }
      if ((HIBYTE(v139[0]) & 0x80) != 0)
      {
        v40 = __s1;
LABEL_92:
        operator delete((void *)v40);
      }
    }
    else
    {
      v52 = 0;
    }
LABEL_94:
    *v112 = v131;
    v108 = v24;
    if ((_DWORD)v133 && (v69 = (char *)v132, (v70 = *(_QWORD *)v132) != 0))
    {
      if (v133 >= 2)
      {
        v86 = *(_DWORD *)(v16 + 128);
        *(_QWORD *)&__s1 = v139;
        *((_QWORD *)&__s1 + 1) = 0x1000000000;
        v144 = v148;
        v145 = v148;
        v146 = 16;
        v147 = 0;
        v149 = 0u;
        v150 = v152;
        v151 = 0x400000000;
        v153 = (char *)&v154 + 8;
        v154 = 0u;
        v155 = 1;
        v156 = v86;
        v158 = 0;
        v157 = 0u;
        v114 = 0;
        if (*(_QWORD *)v132)
        {
          v40 = 8 * v133;
          do
          {
            v87 = *(_QWORD *)v69;
            if (*(_QWORD *)v69)
              v88 = (*(_DWORD *)(*(_QWORD *)v69 + 28) & 0x7F) == 29;
            else
              v88 = 0;
            if (v88)
            {
              BYTE4(v106) = 0;
              LODWORD(v106) = 0x10000;
              sub_22ED07F48(v20, v87, v87 | 3, 0, v14, v113, *((_QWORD *)&v113 + 1), &__s1, v106);
            }
            else
            {
              if (v87)
                v89 = (*(_DWORD *)(*(_QWORD *)v69 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA;
              else
                v89 = 0;
              if (v89 && (!v14 || !*(_DWORD *)(v14 + 8)))
              {
                LOBYTE(v107) = 0;
                LODWORD(v106) = 256;
                sub_22ED0475C(v20, v87, v87 | 3, 0, v113, *((_QWORD *)&v113 + 1), &__s1, 0, v106, 0, 0, v107);
              }
            }
            v69 += 8;
            v40 -= 8;
          }
          while (v40);
          v86 = *(_DWORD *)(v16 + 128);
        }
        if (!sub_22ED03FCC(&__s1, v20, v86, &v114))
          v70 = *(_QWORD *)(v114 + 8) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v133) = 0;
        sub_22F33852C((uint64_t)&v131, v70);
        sub_22E9DC79C((uint64_t *)&__s1);
      }
      v71 = *(unsigned int *)(v70 + 28);
      v72 = *(_DWORD *)(v16 + 16);
      if (v72 >= *(_DWORD *)(v16 + 20))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v72 = *(_DWORD *)(v16 + 16);
      }
      *(_QWORD *)(*(_QWORD *)(v16 + 8) + 8 * v72) = (v71 >> 13) & 3 | v70;
      ++*(_DWORD *)(v16 + 16);
      *(_DWORD *)v16 = 2;
      if ((*(_BYTE *)(*(_QWORD *)(v20 + 72) + 1) & 1) != 0 && sub_22E8BB0E8(v70))
      {
        if (!*((_QWORD *)&v131 + 1)
          || ((*(_BYTE *)(*((_QWORD *)&v131 + 1) + 8) & 4) != 0
            ? (v73 = *(_QWORD *)(*((_QWORD *)&v131 + 1) + 16))
            : (v73 = 0),
              (v76 = sub_22F10C2A4(v73)) == 0 || (*(_DWORD *)(v76 + 28) & 0x7Fu) - 35 >= 3))
        {
          v77 = *(_QWORD *)(v70 + 16);
          v78 = (_QWORD *)(v77 & 0xFFFFFFFFFFFFFFF8);
          if ((v77 & 4) != 0)
            v78 = (_QWORD *)*v78;
          v79 = sub_22EFCBB30((unint64_t)v78);
          if (v79)
            v76 = v79 - 64;
          else
            v76 = 0;
        }
        *(_QWORD *)(v16 + 96) = v76;
      }
      v80 = *(_DWORD *)(v70 + 28);
      v74 = v17;
      if ((v80 & 0x7Fu) <= 0x2F && ((1 << (v80 & 0x7F)) & 0xC00000060000) != 0)
        v80 = *(_DWORD *)(sub_22EFBAEA4(v70) + 28);
      v82 = v80 & 0x7F;
      v83 = v82 - 48;
      v84 = v82 != 29 && v83 >= 0x1B;
      v75 = !v84;
      if (v82 - 33 >= 0xA && (v82 - 33 < 0xFFFFFFF9 || v82 > 0x20 || ((1 << v82) & 0x150000000) == 0))
      {
        if (v83 < 0x1B)
        {
          v75 = 1;
        }
        else if (v82 != 29 && v82 != 22)
        {
          v85 = 0;
          goto LABEL_173;
        }
      }
    }
    else
    {
      v74 = v17;
      v75 = 0;
    }
    v90 = sub_22F2E6D78((uint64_t)&v131);
    v91 = 6001;
    if (v90)
    {
      if ((*(_DWORD *)(v90 + 28) & 0x7F) == 0x3E)
        v91 = 5667;
      else
        v91 = 6001;
    }
    v92 = (uint64_t *)v74;
    if (*(_DWORD *)(v74 + 4))
      v93 = *(_DWORD *)v74 == 0;
    else
      v93 = 1;
    if (!v93 || *(_QWORD *)(v74 + 8))
    {
      *((_QWORD *)&__s1 + 1) = *(_QWORD *)(v20 + 88) + 2128;
      LODWORD(v139[0]) = 4012;
      v97 = v126;
      v98 = (_BYTE *)sub_22E3B8AAC(*((uint64_t *)&__s1 + 1));
      *(_QWORD *)&__s1 = v98;
      v99 = *v98;
      v100 = v98 + 1;
      v98[v99 + 1] = 10;
      *v98 = v99 + 1;
      v101 = v98 + 16;
      *(_QWORD *)&v98[8 * v99 + 16] = v97;
      v102 = sub_22E958204(v20, (uint64_t)v92, 0);
      v103 = *v98;
      v100[v103] = 13;
      *(_QWORD *)&v101[8 * v103] = v102;
      v104 = (v103 + 1);
      v100[v104] = 2;
      *v98 = v103 + 2;
      *(_QWORD *)&v101[8 * v104] = v52;
      v74 = (uint64_t)v92;
      sub_22E4D6448((uint64_t)(v98 + 336), *v92, 1);
    }
    else
    {
      *((_QWORD *)&__s1 + 1) = *(_QWORD *)(v20 + 88) + 2128;
      LODWORD(v139[0]) = v110;
      v94 = v126;
      v95 = (_BYTE *)sub_22E3B8AAC(*((uint64_t *)&__s1 + 1));
      *(_QWORD *)&__s1 = v95;
      v96 = *v95;
      v95[v96 + 1] = 10;
      *v95 = v96 + 1;
      *(_QWORD *)&v95[8 * v96 + 16] = v94;
    }
    v105 = *(_QWORD *)(v20 + 88) + 2128;
    v114 = 0;
    v115 = v105;
    v116 = v91;
    sub_22EC6BF44(v20, (uint64_t)&v131, (uint64_t)&__s1, (uint64_t)&v114, v75);
    if (v114 && v115)
      sub_22E3BB10C(v115, v114);
    if ((_QWORD)__s1 && *((_QWORD *)&__s1 + 1))
      sub_22E3BB10C(*((unint64_t *)&__s1 + 1), __s1);
    LOBYTE(v40) = v75 ^ 1;
    v85 = 1;
LABEL_173:
    v17 = v74;
    if (v118 < 0)
      operator delete(__p[0]);
    v24 = v108;
    if ((v85 & 1) != 0)
      goto LABEL_74;
    goto LABEL_62;
  }
  v29 = (_QWORD *)(v11 + 88);
  while ((*(_WORD *)(v28 + 8) & 0x7Fu) - 35 > 2)
  {
LABEL_23:
    v28 = sub_22EFCB77C(v28);
    if (!v28)
      goto LABEL_24;
  }
  sub_22EC611AC(v20, v16, v28, 0);
  v30 = *(unsigned int *)(v16 + 16);
  if (!(_DWORD)v30)
  {
    *(_DWORD *)v16 = 0;
    *(_DWORD *)(v16 + 16) = 0;
    v31 = *(_QWORD *)(v16 + 88);
    if (v31)
    {
      v32 = sub_22EC6CBD0(v31);
      MEMORY[0x2348A0E9C](v32, 0x10E0C409F09D3C3);
    }
    *(_BYTE *)(v16 + 165) = 0;
    *v29 = 0;
    *(_QWORD *)(v16 + 96) = 0;
    goto LABEL_23;
  }
  *(_BYTE *)(v16 + 163) = 0;
  v60 = *(uint64_t **)(v16 + 8);
  v61 = *(_DWORD *)(v16 + 128);
  *(_QWORD *)&__s1 = v139;
  *((_QWORD *)&__s1 + 1) = 0x1000000000;
  v144 = v148;
  v145 = v148;
  v146 = 16;
  v147 = 0;
  v149 = 0u;
  v150 = v152;
  v151 = 0x400000000;
  v153 = (char *)&v154 + 8;
  v154 = 0u;
  v155 = 1;
  v156 = v61;
  v158 = 0;
  v62 = 8 * v30;
  v157 = 0u;
  do
  {
    v63 = *v60++;
    sub_22ED155EC(v20, v63, v14, v113, *((uint64_t *)&v113 + 1), (uint64_t)&__s1, 0);
    v62 -= 8;
  }
  while (v62);
  v64 = *(unsigned int *)(v16 + 128);
  *(_QWORD *)&v131 = 0;
  if (!sub_22ED03FCC(&__s1, v20, v64, &v131))
  {
    *(_DWORD *)v16 = 0;
    *(_DWORD *)(v16 + 16) = 0;
    v65 = *(_QWORD *)(v16 + 88);
    if (v65)
    {
      v66 = sub_22EC6CBD0(v65);
      MEMORY[0x2348A0E9C](v66, 0x10E0C409F09D3C3);
      v67 = *(_DWORD *)(v16 + 16);
    }
    else
    {
      v67 = 0;
    }
    *(_BYTE *)(v16 + 165) = 0;
    *v29 = 0;
    *(_QWORD *)(v16 + 96) = 0;
    v68 = *(_QWORD *)(v131 + 8);
    if (v67 >= *(_DWORD *)(v16 + 20))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v67 = *(_DWORD *)(v16 + 16);
    }
    *(_QWORD *)(*(_QWORD *)(v16 + 8) + 8 * v67) = v68;
    ++*(_DWORD *)(v16 + 16);
    *(_DWORD *)v16 = 2;
    sub_22EC561E4(v16);
  }
  LOBYTE(v40) = sub_22EB2247C(v20, v16);
  sub_22E9DC79C((uint64_t *)&__s1);
  return v40 & 1;
}

uint64_t sub_22EB233F0(_QWORD *a1, int *a2, uint64_t a3, uint64_t a4, int a5)
{
  unint64_t v10;
  char v11;
  uint64_t result;

  v10 = sub_22EB23CEC(a1, a2, a3, a4);
  if (v11)
    return 1;
  if (v10)
    return sub_22EB23FF0((uint64_t)a1, a3, a2[32], v10);
  result = 0;
  if (a4 && !a2[4])
  {
    if (a5)
    {
      sub_22EC56E74(a1, a2);
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EB2348C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  BOOL v15;

  v4 = 0;
  if (a4 && !*(_QWORD *)(a2 + 8))
  {
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
    {
      v6 = *(unsigned int *)(a3 + 16);
      v4 = 1;
      if (!(_DWORD)v6)
        return v4;
      v7 = *(_QWORD **)(a3 + 8);
      v8 = 8 * v6;
      while (1)
      {
        v9 = *v7 & 0xFFFFFFFFFFFFFFFCLL;
        if (sub_22E8BB0E8(v9))
          break;
        v10 = *(_DWORD *)(v9 + 28);
        v11 = v10 & 0x7E;
        if (v11 == 46)
        {
          v9 = *(_QWORD *)(v9 + 64);
          v10 = *(_DWORD *)(v9 + 28);
          v11 = v10 & 0x7E;
        }
        else
        {
          v12 = *(_QWORD *)(v9 + 16);
          v13 = v12 & 0xFFFFFFFFFFFFFFF8;
          if ((v12 & 4) != 0)
            v13 = *(_QWORD *)(v13 + 8);
          v14 = *(_WORD *)(v13 + 8) & 0x7F;
          v15 = v14 > 0x18 || ((1 << v14) & 0x1000006) == 0;
          if (!v15 || v14 - 52 < 6)
            return 0;
        }
        if ((v11 - 52) > 5)
        {
          if ((v10 & 0x7F) != 0x1D)
            return 0;
        }
        else if (sub_22EFC01DC(v9, 0) && (*(_BYTE *)(v9 + 29) & 2) != 0)
        {
          return 0;
        }
        ++v7;
        v8 -= 8;
        if (!v8)
          return 1;
      }
    }
    return 0;
  }
  return v4;
}

uint64_t sub_22EB235A8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v9;
  int v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v30;

  v9 = *(_DWORD *)a3;
  if ((a4 & 1) == 0 && v9 == 2)
  {
    if (!sub_22EB24910(a3) && !sub_22EB2497C(a3))
    {
      v25 = a3 + 120;
      v26 = **(_QWORD **)(a3 + 8) & 0xFFFFFFFFFFFFFFFCLL;
      v27 = *(_DWORD *)(v26 + 28) & 0x7F;
      v14 = v27 > 0x2F;
      v28 = (1 << v27) & 0xC00000060000;
      if (v14 || v28 == 0)
        v30 = v26;
      else
        v30 = sub_22EFBAEA4(v26);
      return sub_22EB24A3C(a1, a2, v25, v30, v26, 0, a5);
    }
    v9 = *(_DWORD *)a3;
  }
  if (v9 != 2 || sub_22EB2497C(a3))
    goto LABEL_15;
  v11 = *(_DWORD *)(a3 + 128);
  v12 = **(_QWORD **)(a3 + 8) & 0xFFFFFFFFFFFFFFFCLL;
  v13 = *(_DWORD *)(v12 + 28) & 0x7F;
  v14 = v13 > 0x2F;
  v15 = (1 << v13) & 0xC00000060000;
  if (!v14 && v15 != 0)
    v12 = sub_22EFBAEA4(**(_QWORD **)(a3 + 8) & 0xFFFFFFFFFFFFFFFCLL);
  if ((sub_22EB25148(a1, v11, v12) & 1) != 0)
    return 1;
LABEL_15:
  *(_BYTE *)(a3 + 163) = 0;
  v18 = a1[11];
  v19 = *(_QWORD *)(a3 + 96);
  v21 = *(_QWORD *)(a2 + 8);
  v20 = (uint64_t *)(a2 + 8);
  if (v21)
  {
    v22 = sub_22F0ABC50(v20, v18);
    v23 = v24;
  }
  else
  {
    v22 = 0;
    v23 = 0;
  }
  return (uint64_t)sub_22F0605AC(v18, v19, v22, v23, a3 + 120, a4, *(_DWORD *)a3 == 3, *(const void **)(a3 + 8), *(_QWORD *)(a3 + 8) + 8 * *(unsigned int *)(a3 + 16));
}

uint64_t sub_22EB23760(uint64_t a1, unsigned int *a2, uint64_t a3, char a4, uint64_t *a5, _QWORD *a6)
{
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t v33;
  _DWORD *v34;
  _DWORD *v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  unsigned __int32 v40;
  _QWORD *v41;
  _BYTE *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47[24];
  unint64_t v48;
  void *__p;
  int64x2_t v50;
  _BYTE v51[23];
  __int16 v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _BYTE v57[64];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int16 v66;
  int v67;
  char v68;
  uint64_t v69;

  v69 = *MEMORY[0x24BDAC8D0];
  v12 = sub_22E958204(a1, (uint64_t)a2, 0);
  v48 = v12;
  if (!v12)
    return sub_22ED57EC0(a1, (uint64_t)a2, 0, (__int128 *)a3, 0);
  v13 = v12;
  if ((sub_22E958490(a1, a2, v12) & 1) == 0)
  {
    v54 = 0;
    v55 = v57;
    v56 = 0x800000000;
    v58 = 0;
    v59 = 0;
    v60 = 0;
    v61 = (_QWORD *)a1;
    v62 = *(_OWORD *)a3;
    v16 = *(_QWORD *)(a3 + 16);
    v64 = 0;
    v65 = 0;
    v63 = v16;
    v66 = 0;
    v67 = 257;
    v68 = 0;
    sub_22EC56024((uint64_t)&v54);
    sub_22EC611AC(a1, &v54, v13, 0);
    if ((_DWORD)v54 != 5)
    {
      if ((_DWORD)v54 == 1)
      {
        v17 = sub_22ED57EC0(a1, (uint64_t)a2, 0, (__int128 *)a3, 0);
LABEL_24:
        v14 = v17;
        goto LABEL_25;
      }
      if ((_DWORD)v56)
      {
        v18 = *(_QWORD *)v55 & 0xFFFFFFFFFFFFFFFCLL;
        if ((_DWORD)v54 == 2)
        {
          v19 = *(_DWORD *)(v18 + 28) & 0x7F;
          if (v19 > 0x2F || ((1 << v19) & 0xC00000060000) == 0)
          {
            v21 = *(_QWORD *)v55 & 0xFFFFFFFFFFFFFFFCLL;
          }
          else
          {
            v21 = sub_22EFBAEA4(*(_QWORD *)v55 & 0xFFFFFFFFFFFFFFFCLL);
            v19 = *(_DWORD *)(v21 + 28) & 0x7F;
          }
          if (v19 - 33 <= 9)
          {
            v24 = 5027;
            if (a6)
            {
              if ((**(_BYTE **)(a1 + 72) & 0x10) != 0)
                v24 = 5391;
              else
                v24 = 5027;
            }
            v25 = *a2;
            sub_22E8FCA40((_QWORD *)a1, *a2, v24, 0, (uint64_t)v47);
            v27 = *((_QWORD *)a2 + 1);
            v26 = (unint64_t *)(a2 + 2);
            v46 = v27;
            v28 = sub_22EA02390((uint64_t)v47, &v46);
            v45 = *(_QWORD *)a3;
            sub_22EFC683C(&v45, &__p);
            v29 = sub_22F2F3734(v28, &__p);
            sub_22EFC70E8((_QWORD *)a3);
            v31 = *(_DWORD *)(a3 + 8);
            if (v30)
              v31 = v30;
            v44 = __PAIR64__(v31, v25);
            sub_22E8906A0(v29, (uint64_t *)&v44);
            if (v50.i8[15] < 0)
              operator delete(__p);
            if (a6)
            {
              v50.i8[12] = 0;
              *(uint64_t *)((char *)v50.i64 + 4) = 0;
              __p = (void *)(v25 | (v25 << 32));
              v50.i8[0] = 0;
              *(_QWORD *)&v51[10] = 0;
              *(_QWORD *)&v51[15] = 0;
              strcpy(v51, "typename ");
              v52 = 9;
              sub_22E890748((uint64_t)v47, &__p);
              if ((char)v52 < 0)
                operator delete(*(void **)v51);
              v32 = *(_QWORD *)(v21 + 48);
              if (v32)
                v33 = v32 & 0xFFFFFFFFFFFFFFF0;
              else
                v33 = sub_22EF6462C(*(_QWORD *)(a1 + 88), v21);
              __p = v51;
              v50 = vdupq_n_s64(0x20uLL);
              v53 = 0;
              sub_22EEB5360((uint64_t)&__p, v33, 4uLL, 4);
              *v34 = *(_DWORD *)(a3 + 8);
              if (v33 >= 0x10 && *v26)
                v33 = sub_22EF65684(*(_QWORD *)(a1 + 88), 6, *v26, v33, 0);
              sub_22EEB5360((uint64_t)&__p, v33, 0x10uLL, 8);
              v36 = v35;
              *v35 = 0;
              if (*v26)
                sub_22F0ABC50((uint64_t *)v26, *(_QWORD *)(a1 + 88));
              else
                v37 = 0;
              *((_QWORD *)v36 + 1) = v37;
              v38 = *(_QWORD *)(a1 + 88);
              v39 = v50.i64[0] - v50.i64[1];
              v40 = v50.i32[0] - v50.i32[2];
              if (v50.i32[0] == v50.i32[2])
                v40 = sub_22F11598C(v33);
              v41 = (_QWORD *)sub_22E3CD3D4(v38 + 2032, v40 + 8, 3);
              *v41 = v33;
              v42 = __p;
              memcpy(v41 + 1, (char *)__p + v50.i64[1], v39);
              *a6 = v41;
              if (v42 != v51 && v42)
                MEMORY[0x2348A0E84](v42, 0x1000C8077774924);
              v14 = 0;
            }
            else
            {
              v14 = 1;
            }
            sub_22E903BEC(v47);
            goto LABEL_25;
          }
        }
        if (!sub_22E8BB0E8(v18) || (a4 & 1) != 0)
          v17 = sub_22EB235A8((_QWORD *)a1, (uint64_t)a2, (uint64_t)&v54, 0, 0);
        else
          v17 = sub_22EC21A04(a1, (uint64_t *)a2, 0, (uint64_t)&v54, 0, a5, 0);
        goto LABEL_24;
      }
      if ((*(_WORD *)(v13 + 8) & 0x7Fu) - 38 < 0xFFFFFFFD || (*(_BYTE *)(v13 - 36) & 0x80) == 0)
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 8), 0xFAAu, 0, (uint64_t)v47);
        __p = *(void **)a3;
        v22 = sub_22E894538((uint64_t)v47, (uint64_t *)&__p);
        v23 = sub_22E894FB4(v22, (uint64_t *)&v48);
        v46 = *(_QWORD *)a2;
        sub_22E8906A0(v23, &v46);
        sub_22E903BEC(v47);
      }
    }
    v14 = 1;
LABEL_25:
    if (BYTE1(v67))
    {
      if ((_DWORD)v54 == 5)
      {
        sub_22EC64D18(v61, (uint64_t)&v54);
      }
      else if (v59 && (*(_DWORD *)(v61[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v61, (uint64_t)&v54);
      }
    }
    if (v58)
    {
      v43 = sub_22EC6CBD0(v58);
      MEMORY[0x2348A0E9C](v43, 0x10E0C409F09D3C3);
    }
    if (v55 != v57)
      free(v55);
    return v14;
  }
  return 1;
}

unint64_t sub_22EB23CEC(_QWORD *a1, int *a2, uint64_t a3, uint64_t a4)
{
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  unsigned int v37[24];
  uint64_t v38;

  v7 = a2[32];
  v8 = sub_22E90328C((uint64_t)a1);
  if (!v8)
    return 0;
  v9 = v8;
  v10 = *(_QWORD *)(v8 + 56);
  if (a2[4])
  {
    v11 = *a2;
    if ((v10 & 0x20000) != 0 && v11 == 2)
    {
      v12 = **((_QWORD **)a2 + 1) & 0xFFFFFFFFFFFFFFFCLL;
      v13 = *(_DWORD *)(v12 + 28) & 0x7F;
      v14 = v13 > 0x2F;
      v15 = (1 << v13) & 0xC00000060000;
      if (!v14 && v15 != 0)
        v12 = sub_22EFBAEA4(v12);
      if (!sub_22EFC8010(v12))
        goto LABEL_11;
    }
    else if ((v10 & 0x20000) == 0)
    {
      if (v11 == 2)
      {
        v22 = **((_QWORD **)a2 + 1) & 0xFFFFFFFFFFFFFFFCLL;
        v23 = *(_DWORD *)(v22 + 28);
        v24 = v23 & 0x7F;
        v25 = v22;
        if (v24 <= 0x2F && ((1 << (v23 & 0x7F)) & 0xC00000060000) != 0)
          v25 = sub_22EFBAEA4(v22);
        if (!sub_22EFC8010(v25))
        {
          if (v24 <= 0x2F && ((1 << v24) & 0xC00000060000) != 0)
          {
            v22 = sub_22EFBAEA4(v22);
            v23 = *(_DWORD *)(v22 + 28);
          }
          if ((v23 & 0x7F) == 0x33)
          {
            sub_22E8FCA40(a1, v7, 0xE79u, 0, (uint64_t)v37);
            v38 = *(_QWORD *)(v22 + 40);
            v28 = &v38;
LABEL_45:
            sub_22E894538((uint64_t)v37, v28);
            sub_22E903BEC(v37);
            return 0;
          }
        }
      }
      return 0;
    }
    v29 = sub_22EFDC9F0(v9);
    if (v29)
    {
      v30 = v29;
      v38 = 0;
      v31 = sub_22EFDB894(v29, a4, &v38);
      if (v31)
      {
        v32 = v31;
        if ((*(_BYTE *)(v31 + 88) & 7) != 1
          || (v33 = v38) != 0
          && (v30 == v38
           || (v34 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v30 + 32))(v30),
               v34 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)v33 + 32))(v33))))
        {
          sub_22E8FCA40(a1, v7, 0x1A27u, 0, (uint64_t)v37);
          v36 = *(_QWORD *)(v32 + 40);
          sub_22E894538((uint64_t)v37, &v36);
          sub_22E903BEC(v37);
        }
      }
    }
    return 0;
  }
LABEL_11:
  v17 = sub_22EFDC9F0(v9);
  v38 = 0;
  if (!v17)
    return 0;
  v18 = v17;
  v19 = sub_22EFDB894(v17, a4, &v38);
  if (!v19)
    return 0;
  v20 = v19;
  if ((v10 & 0x20000) == 0)
  {
    sub_22E8FCA40(a1, v7, 0xE79u, 0, (uint64_t)v37);
    v36 = *(_QWORD *)(v20 + 40);
    v28 = &v36;
    goto LABEL_45;
  }
  if ((*(_BYTE *)(v19 + 88) & 7) == 1)
  {
    if (!v38
      || v38 != v18
      && (v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v38 + 32))(v38),
          v21 != (*(uint64_t (**)(unint64_t))(*(_QWORD *)v18 + 32))(v18)))
    {
      if ((*(_QWORD *)(a1[9] + 140) & 0x20000000000000) == 0)
      {
        sub_22E8FCA40(a1, v7, 0x11CCu, 0, (uint64_t)v37);
        v36 = *(_QWORD *)(v20 + 40);
        sub_22E894538((uint64_t)v37, &v36);
        sub_22E903BEC(v37);
      }
    }
  }
  return v20;
}

uint64_t sub_22EB23FF0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28[24];
  __int128 v29;
  void *v30[2];
  unsigned int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v31 = a3;
  v7 = sub_22E90328C(a1);
  v8 = sub_22EFDC9F0(v7);
  if ((*(_BYTE *)(a4 + 28) & 0x80) != 0)
    return 1;
  v9 = v8;
  v10 = 1;
  if ((sub_22EB17F48(a1, a4, &v31, 1, 0, 0, 0, 0) & 1) == 0)
  {
    v11 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(a1 + 88) + 15192), "self", 4uLL);
    v32 = 8;
    v33 = v11;
    v34 = 0;
    v29 = 0u;
    *(_OWORD *)v30 = 0u;
    v12 = sub_22EB1C438(a1, a2, &v29, 0, &v32, 0, 0, 0, 0, 0);
    if ((v12 & 1) != 0 || (v13 = sub_22EB1A358(a1, v12 & 0xFFFFFFFFFFFFFFFELL, 0), (v13 & 1) != 0))
    {
      v10 = 1;
    }
    else
    {
      sub_22EB24348(a1, v31, a4, 1);
      v15 = sub_22EFDBF50(v7);
      if ((v15 > 8 || ((1 << v15) & 0x188) == 0) && (sub_22EC7BB24(a1, v9, v7, a4) & 1) == 0)
      {
        sub_22E8FCA40((_QWORD *)a1, v31, 0x1973u, 0, (uint64_t)v28);
        v27 = *(_QWORD *)(a4 + 40);
        sub_22E894538((uint64_t)v28, &v27);
        sub_22E903BEC(v28);
      }
      v10 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 48, 3);
      sub_22F3B6034(a4, *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFFELL) + 8));
      sub_22F2750A4(v10, a4, v16, v31, *(_DWORD *)(a4 + 24), v13 & 0xFFFFFFFFFFFFFFFELL, 1, 1);
      v17 = *(_QWORD *)((*(_QWORD *)(a4 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v17 & 8) != 0 && (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) == 0xC0)
      {
        v18 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
        if ((v18 > 3 || v18 == 2)
          && sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x183Cu, v31, *(_QWORD *)(a1 + 104)) != 1)
        {
          v25 = *(unsigned int *)(a1 + 1904);
          if ((_DWORD)v25)
            v26 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * v25 - 8);
          else
            v26 = 0;
          sub_22F32D650(v26, v10, 1);
        }
      }
      if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 148) & 2) != 0)
      {
        v19 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
        if (v19 > 3 || v19 == 2)
        {
          v20 = sub_22F3B1300(*(_QWORD *)(a1 + 216));
          if (v20)
          {
            v21 = v20;
            v22 = v31;
            v23 = *(_DWORD *)(a1 + 8640);
            if (v23 >= *(_DWORD *)(a1 + 8644))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v23 = *(_DWORD *)(a1 + 8640);
            }
            v24 = (_QWORD *)(*(_QWORD *)(a1 + 8632) + 16 * v23);
            *v24 = v22;
            v24[1] = v21;
            ++*(_DWORD *)(a1 + 8640);
          }
        }
      }
    }
    if (HIDWORD(v30[1]))
      free(v30[0]);
  }
  return v10;
}

uint64_t sub_22EB24348(uint64_t result, unsigned int a2, uint64_t a3, uint64_t a4)
{
  if ((_DWORD)a4 && (*(_DWORD *)(a3 + 28) & 0x7Fu) - 67 >= 0xFFFFFFF9)
    return sub_22EB51AEC(result, a2, a3, 0, result + 8848);
  if ((*(_DWORD *)(a3 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
    return sub_22EB4E494(result, a2, a3, a4);
  *(_DWORD *)(a3 + 28) |= 0x800u;
  return result;
}

_DWORD *sub_22EB24398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _DWORD *v7;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  _BOOL4 v43;
  unint64_t v44;
  unint64_t v46;
  unint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD v50[5];

  v7 = (_DWORD *)a2;
  v50[4] = *MEMORY[0x24BDAC8D0];
  v9 = *(_QWORD *)(a5 + 16);
  v10 = v9 & 0xFFFFFFFFFFFFFFF8;
  if ((v9 & 4) != 0)
    v10 = *(_QWORD *)v10;
  if (v10)
    v11 = (*(_WORD *)(v10 + 8) & 0x7Fu) - 38 > 0xFFFFFFFC;
  else
    v11 = 0;
  if (!v11)
    return v7;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_DWORD *)(a5 + 28);
  if ((v13 & 0x7Fu) - 49 > 2)
  {
    if ((v13 & 0x7Eu) - 58 < 0xFFFFFFFC
      || (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)a5 + 32))(a5) + 80) & 0xE000) == 0x4000
      || (*(_QWORD *)(a5 + 40) & 7) == 6
      && (*(_DWORD *)(*(_QWORD *)(a5 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) <= 3)
    {
      return v7;
    }
    v16 = sub_22EFD7558(a5);
    v17 = sub_22F10ACF8(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0));
    v18 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFF0);
    v19 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0);
    if (!v19 || *(_BYTE *)(v19 + 16) != 39)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39 || !sub_22F10CF48(v19))
      {
        v21 = 0;
        v20 = v12;
        v16 = v17;
LABEL_38:
        v31 = v18[1];
        if ((v31 & 8) != 0)
          v32 = *(_DWORD *)((v31 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
        else
          v32 = 0;
        v33 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v33 & 8) != 0)
          v34 = *(_DWORD *)((v33 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
        else
          v34 = 0;
        if (v32 != v34)
        {
          v35 = sub_22EF5DEB0(*(_QWORD *)(a1 + 88), v20);
          v36 = sub_22EF5DD84(*(_QWORD *)(a1 + 88), v35, v34);
          if (v21)
            v36 = sub_22EF5B848(*(_QWORD *)(a1 + 88), v36, 0);
          v7 = (_DWORD *)(sub_22E90092C(a1, (uint64_t)v7, v36, 66, (*v7 >> 8) & 3, 0) & 0xFFFFFFFFFFFFFFFELL);
        }
        goto LABEL_48;
      }
      v19 = *v18;
    }
    v20 = sub_22F10ACF8(v19);
    v18 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFF0);
    v21 = 1;
    goto LABEL_38;
  }
  v14 = *(_QWORD *)(v10 - 16);
  if (v14)
    v15 = v14 & 0xFFFFFFFFFFFFFFF0;
  else
    v15 = sub_22EF6462C(*(_QWORD *)(a1 + 88), v10 - 64);
  v22 = v15 & 7 | *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF0) + 8);
  v23 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0);
  if (v23 && *(_BYTE *)(v23 + 16) == 39)
  {
    v24 = *(_QWORD *)(a1 + 88);
    v25 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0);
LABEL_28:
    v27 = *(_QWORD *)((sub_22F10ACF8(v23) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v27 & 8) != 0)
      v28 = *(_DWORD *)((v27 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v28 = 0;
    v17 = sub_22EF5DD84(v24, v22, v28);
    v16 = sub_22EF5B848(*(_QWORD *)(a1 + 88), v17, 0);
    v20 = *(_QWORD *)(v25 + 32);
    v21 = 1;
    goto LABEL_48;
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
  {
    v26 = sub_22F10CF48(v23);
    v24 = *(_QWORD *)(a1 + 88);
    if (v26)
    {
      v25 = v26;
      v23 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0);
      goto LABEL_28;
    }
  }
  else
  {
    v24 = *(_QWORD *)(a1 + 88);
  }
  v29 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v29 & 8) != 0)
    v30 = *(_DWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
  else
    v30 = 0;
  v16 = sub_22EF5DD84(v24, v22, v30);
  v21 = 0;
  v20 = v12;
  v17 = v16;
LABEL_48:
  if ((*(_BYTE *)(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0
    || (*(_BYTE *)(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0
    || *(_QWORD *)(*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
  {
    return v7;
  }
  sub_22F0D4E74((uint64_t)v7);
  v38 = v37;
  v39 = (*v7 >> 8) & 3;
  v40 = &loc_22F44E000;
  if (!a3 || (*(_BYTE *)(a3 + 8) & 4) == 0 || (v41 = *(_QWORD *)(a3 + 16)) == 0)
  {
    v42 = v20;
LABEL_60:
    v48 = v50;
    v49 = v40[91];
    v44 = 1;
    if ((sub_22EAAB46C(a1, v42, v17, 5082, 0xA41u, v38, v38, 0, (uint64_t)&v48, 1) & 1) == 0)
      v44 = sub_22E90092C(a1, (uint64_t)v7, v16, 8, v39, (uint64_t)&v48);
    if (v48 != v50)
      free(v48);
    return (_DWORD *)v44;
  }
  v47 = v41 & 0xFFFFFFFFFFFFFFF0;
  v42 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
  if (!sub_22EAAB1B8(a1, v37, v20, v42))
  {
    v42 = v20;
    v40 = (_QWORD *)&loc_22F44E000;
    goto LABEL_60;
  }
  v48 = v50;
  v49 = 0x400000000;
  if ((sub_22EAAB46C(a1, v20, v42, 5082, 0xA41u, v38, v38, 0, (uint64_t)&v48, 0) & 1) != 0)
  {
    v43 = 0;
    v44 = 1;
    v42 = v20;
  }
  else
  {
    if (v21)
      v46 = sub_22EF5B848(*(_QWORD *)(a1 + 88), v47, 0);
    else
      v46 = v47;
    v44 = sub_22E90092C(a1, (uint64_t)v7, v46, 8, v39, (uint64_t)&v48) & 0xFFFFFFFFFFFFFFFELL;
    v43 = *(_QWORD *)(*(_QWORD *)(v42 + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0)
                                                                                            + 8) & 0xFFFFFFFFFFFFFFF0);
    v7 = (_DWORD *)v44;
  }
  if (v48 != v50)
    free(v48);
  v40 = (_QWORD *)&loc_22F44E000;
  if (v43)
    goto LABEL_60;
  return (_DWORD *)v44;
}

uint64_t sub_22EB24910(uint64_t a1)
{
  uint64_t result;
  unsigned int v2;

  if (*(_DWORD *)a1 != 2)
    return 0;
  result = **(_QWORD **)(a1 + 8) & 0xFFFFFFFFFFFFFFFCLL;
  v2 = *(_DWORD *)(result + 28) & 0x7F;
  if (v2 <= 0x2F && ((1 << v2) & 0xC00000060000) != 0)
  {
    result = sub_22EFBAEA4(result);
    v2 = *(_DWORD *)(result + 28) & 0x7F;
  }
  if (v2 != 29)
    return 0;
  return result;
}

BOOL sub_22EB2497C(uint64_t a1)
{
  _DWORD *v1;
  int v2;

  v1 = (_DWORD *)(**(_QWORD **)(a1 + 8) & 0xFFFFFFFFFFFFFFFCLL);
  v2 = v1[7];
  if ((v2 & 0x7Fu) <= 0x2F && ((1 << (v2 & 0x7F)) & 0xC00000060000) != 0)
  {
    v1 = (_DWORD *)sub_22EFBAEA4(**(_QWORD **)(a1 + 8) & 0xFFFFFFFFFFFFFFFCLL);
    v2 = v1[7];
  }
  if ((v2 & 0x7Eu) - 58 < 0xFFFFFFFA)
    return 0;
  if ((*(_BYTE *)((*(uint64_t (**)(_DWORD *))(*(_QWORD *)v1 + 32))(v1) + 84) & 0x10) != 0
    && sub_22E631558((uint64_t)v1))
  {
    return 1;
  }
  if ((*(_BYTE *)((*(uint64_t (**)(_DWORD *))(*(_QWORD *)v1 + 32))(v1) + 84) & 0x10) == 0)
    return 0;
  return sub_22EFC0D04((uint64_t)v1);
}

unint64_t sub_22EB24A3C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v14;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v23;
  int v24;
  unsigned int v25;
  int v27;
  uint64_t v29;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60[24];
  uint64_t v61[12];
  int v62;
  uint64_t v63;
  unint64_t v64;

  v63 = a4;
  v62 = *(_DWORD *)(a3 + 8);
  if (!sub_22EB25148((_QWORD *)a1, v62, a4))
  {
    v14 = *(_DWORD *)(a4 + 28) & 0x7F;
    if (a4 && (v14 - 33) >= 0xFFFFFFF9)
    {
      sub_22F345DF8((_QWORD *)a1, a4 & 0xFFFFFFFFFFFFFFF9, v62);
    }
    else if (v14 != 43 && (v14 - 48) >= 0x1B)
    {
      sub_22E8FCA40((_QWORD *)a1, v62, 0x1222u, 0, (uint64_t)v61);
      v29 = sub_22E890024((uint64_t)v61, &v63);
      v64 = *a2;
      sub_22E8906A0(v29, (uint64_t *)&v64);
      sub_22E903BEC((unsigned int *)v61);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v63 + 24), 0x64u, 0, (uint64_t)v60);
      sub_22E903BEC(v60);
    }
    else
    {
      v16 = 1;
      if ((sub_22EB17F48(a1, a4, &v62, 1, 0, 0, 0, 0) & 1) != 0)
        return v16;
      if ((*(_DWORD *)(a4 + 28) & 0x80) == 0 || a7)
      {
        if ((*(_DWORD *)(a4 + 28) & 0x7F) == 0x44 && !sub_22E8BB0E8(a4))
          return sub_22EC257BC((_QWORD *)a1, (uint64_t)a2, *(_DWORD *)(a3 + 8), a4, 3, 0);
        v17 = *(_QWORD *)(a4 + 48);
        if (v17 >= 0x10)
        {
          v18 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
          v19 = *(unsigned __int8 *)(v18 + 16);
          if (v18 && v19 == 36)
            v17 = *(_QWORD *)(v18 + 32);
          v20 = 0;
          switch(*(_DWORD *)(a4 + 28) & 0x7F)
          {
            case '0':
              v37 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
              if (v37)
              {
                v38 = *(_DWORD *)(v37 + 16);
                if ((v38 & 0xFE) == 0x28)
                  goto LABEL_119;
              }
              if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
              {
                v37 = sub_22F10CF48(v37);
                if (v37)
                {
                  v38 = *(_DWORD *)(v37 + 16);
LABEL_119:
                  if ((v38 & 0x100000) != 0)
                  {
                    do
                    {
                      v37 = *(_QWORD *)(*(_QWORD *)(v37 + 32) & 0xFFFFFFFFFFFFFFF0);
                      if (v37)
                      {
                        v59 = *(_DWORD *)(v37 + 16);
                        if ((v59 & 0xFE) == 0x28)
                          continue;
                      }
                      v37 = sub_22F10CF48(v37);
                      v59 = *(_DWORD *)(v37 + 16);
                    }
                    while ((v59 & 0x100000) != 0);
                  }
                  v17 = *(_QWORD *)(v37 + 32);
                }
              }
              v39 = *(_QWORD *)(a4 + 16);
              v40 = (_QWORD *)(v39 & 0xFFFFFFFFFFFFFFF8);
              if ((v39 & 4) != 0)
                v40 = (_QWORD *)*v40;
              if (v40 != *(_QWORD **)(a1 + 216))
              {
                v41 = *(_QWORD *)(a4 + 56);
                if (v41)
                {
                  if ((*(_DWORD *)(v41 + 28) & 0x7Fu) - 60 <= 6 && sub_22E3CB5E0(v41))
                    sub_22EB251F0((unsigned int *)a1, v62, a4);
                }
              }
              goto LABEL_93;
            case '1':
            case '3':
            case 'D':
              v35 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
              if (v35)
              {
                v36 = *(_DWORD *)(v35 + 16);
                if ((v36 & 0xFE) == 0x28)
                  goto LABEL_52;
              }
              if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v35 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
                goto LABEL_93;
              v35 = sub_22F10CF48(v35);
              if (!v35)
                goto LABEL_93;
              v36 = *(_DWORD *)(v35 + 16);
LABEL_52:
              if ((v36 & 0x100000) != 0)
              {
                do
                {
                  v35 = *(_QWORD *)(*(_QWORD *)(v35 + 32) & 0xFFFFFFFFFFFFFFF0);
                  if (v35)
                  {
                    v58 = *(_DWORD *)(v35 + 16);
                    if ((v58 & 0xFE) == 0x28)
                      continue;
                  }
                  v35 = sub_22F10CF48(v35);
                  v58 = *(_DWORD *)(v35 + 16);
                }
                while ((v58 & 0x100000) != 0);
              }
              goto LABEL_53;
            case '4':
              v42 = sub_22EFC01DC(a4, 0);
              if (v42 && (sub_22EB2542C(*(uint64_t **)(*(_QWORD *)(a1 + 88) + 15208), v42) & 1) == 0)
              {
                v20 = 0;
                v17 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16864);
                goto LABEL_94;
              }
              v43 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
              if (!v43 || *(unsigned __int8 *)(v43 + 16) - 27 <= 0xFFFFFFFD)
                v43 = sub_22F10CF48(v43);
              v44 = *(_QWORD *)(v43 + 24);
              v45 = *(_QWORD *)(a1 + 88);
              if (v44 == *(_QWORD *)(v45 + 16856))
              {
                v20 = 0;
                v17 = *(_QWORD *)(v43 + 24);
                goto LABEL_94;
              }
              if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
                goto LABEL_93;
              if ((*(_BYTE *)(a4 + 82) & 0x30) == 0 && *(_BYTE *)(v43 + 16) == 26)
              {
                LOWORD(v61[0]) = *(_DWORD *)(v43 + 16) >> 19;
                v17 = sub_22F369930(v45, v44, (unsigned __int16 *)v61);
              }
              goto LABEL_92;
            case '6':
              if (v18)
              {
                if (v19 == 26)
                {
                  v46 = *(_QWORD *)(v18 + 24);
                  if (v46 == *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16856))
                  {
                    v20 = 0;
                    v17 = v46;
                    goto LABEL_94;
                  }
                }
              }
              if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)a4 + 32))(a4) + 80) & 0xE000) == 0x4000
                || (*(_QWORD *)(a4 + 40) & 7) == 6
                && (*(_DWORD *)(*(_QWORD *)(a4 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) < 4)
              {
                goto LABEL_93;
              }
LABEL_92:
              v20 = 0;
              goto LABEL_94;
            case '7':
            case '8':
            case '9':
              goto LABEL_92;
            case ':':
            case 'E':
            case 'H':
            case 'I':
              goto LABEL_93;
            case ';':
              v47 = v17 & 0xFFFFFFFFFFFFFFF0;
              v35 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
              if (v35)
              {
                v48 = *(_DWORD *)(v35 + 16);
                if ((v48 & 0xFE) == 0x28)
                  goto LABEL_127;
              }
              v49 = *(_QWORD *)(v35 + 8);
              v50 = v49 & 0xFFFFFFFFFFFFFFF0;
              if ((*(_DWORD *)(*(_QWORD *)(v49 & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
                goto LABEL_80;
              v35 = sub_22F10CF48(v35);
              if (v35)
              {
LABEL_126:
                v48 = *(_DWORD *)(v35 + 16);
LABEL_127:
                while ((v48 & 0x100000) != 0)
                {
                  v35 = *(_QWORD *)(*(_QWORD *)(v35 + 32) & 0xFFFFFFFFFFFFFFF0);
                  if (v35)
                  {
                    v48 = *(_DWORD *)(v35 + 16);
                    if ((v48 & 0xFE) == 0x28)
                      continue;
                  }
                  v35 = sub_22F10CF48(v35);
                  goto LABEL_126;
                }
LABEL_53:
                v17 = *(_QWORD *)(v35 + 32);
LABEL_93:
                v20 = 1;
                goto LABEL_94;
              }
              v35 = *(_QWORD *)v47;
              v49 = *(_QWORD *)(*(_QWORD *)v47 + 8);
              v50 = v49 & 0xFFFFFFFFFFFFFFF0;
LABEL_80:
              v51 = v49 & 0xF;
              if (*(_BYTE *)(*(_QWORD *)v50 + 16) == 45)
              {
                if (v51)
                  v35 = (uint64_t)sub_22F10D2BC(v17);
                v17 = v35 & 0xFFFFFFFFFFFFFFF0 | 1;
                goto LABEL_93;
              }
              if (v51)
                v35 = (uint64_t)sub_22F10D2BC(v17);
              v20 = 0;
              v17 = v35 & 0xFFFFFFFFFFFFFFF0;
LABEL_94:
              v53 = a2[1];
              v52 = a2 + 1;
              if (v53)
              {
                v54 = sub_22F0ABC50(v52, *(_QWORD *)(a1 + 88));
                v55 = v56;
              }
              else
              {
                v54 = 0;
                v55 = 0;
              }
              v34 = sub_22EB21CE8(a1, a4, v17, v20, a3, v54, v55, a5, 0, a6);
              break;
            case '<':
            case '=':
            case '?':
            case 'A':
            case 'B':
              if (**(_QWORD **)(a1 + 72) & 0x100 | v17 & 0xF
                || (*(_BYTE *)((v17 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xF) != 0)
              {
                goto LABEL_24;
              }
              v21 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
              if (!v21 || (*(_DWORD *)(v21 + 16) & 0xFF800FF) != 86507531)
                goto LABEL_24;
              goto LABEL_92;
            case '>':
            case '@':
LABEL_24:
              v23 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
              if (v23)
              {
                v24 = *(_DWORD *)(v23 + 16);
                if ((v24 & 0xFE) == 0x28)
                  goto LABEL_105;
              }
              if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
              {
                v23 = sub_22F10CF48(v23);
                if (v23)
                {
                  v24 = *(_DWORD *)(v23 + 16);
LABEL_105:
                  if ((v24 & 0x100000) != 0)
                  {
                    do
                    {
                      v23 = *(_QWORD *)(*(_QWORD *)(v23 + 32) & 0xFFFFFFFFFFFFFFF0);
                      if (v23)
                      {
                        v57 = *(_DWORD *)(v23 + 16);
                        if ((v57 & 0xFE) == 0x28)
                          continue;
                      }
                      v23 = sub_22F10CF48(v23);
                      v57 = *(_DWORD *)(v23 + 16);
                    }
                    while ((v57 & 0x100000) != 0);
                  }
                  v17 = *(_QWORD *)(v23 + 32);
                }
              }
              v25 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
              if (v25 > 3 || v25 == 2)
              {
                v61[0] = 0;
                v64 = 0;
                v27 = sub_22EB4EE10(a1, a4, v62, 0, 0, 0, v61, (uint64_t *)&v64, 0);
                if (!(v64 < 0x10 ? 1 : v27))
                  v17 = v64;
              }
              goto LABEL_93;
            default:
              goto LABEL_94;
          }
          return v34;
        }
      }
    }
    return 1;
  }
  v31 = *(_DWORD *)(a3 + 8);
  sub_22EFC70E8((_QWORD *)a3);
  if (v32)
    v33 = v32;
  else
    v33 = *(_DWORD *)(a3 + 8);
  return sub_22F32D6EC(a1, v31, v33, 0, 0, 0);
}

uint64_t sub_22EB25148(_QWORD *a1, int a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  uint64_t v7;
  unsigned int v8[24];

  if ((*(_DWORD *)(a3 + 28) & 0x80) == 0)
  {
    v4 = *(_DWORD *)(a3 + 28) & 0x7F;
    if ((v4 - 39) > 2)
    {
      if (v4 == 16)
      {
        v5 = 5061;
      }
      else
      {
        if (v4 != 22)
          return 0;
        v5 = 5060;
      }
    }
    else
    {
      v5 = 5062;
    }
    sub_22E8FCA40(a1, a2, v5, 0, (uint64_t)v8);
    v7 = *(_QWORD *)(a3 + 40);
    sub_22E894538((uint64_t)v8, &v7);
    sub_22E903BEC(v8);
  }
  return 1;
}

unsigned int *sub_22EB251F0(unsigned int *result, int a2, uint64_t a3)
{
  unsigned int *v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  unsigned int v7;
  BOOL v8;
  __int16 v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20[24];
  int v21;
  _BOOL4 v22;
  unint64_t v23;
  uint64_t v24;

  v3 = result;
  v24 = a3;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = v4 & 0xFFFFFFFFFFFFFFF8;
  if ((v4 & 4) != 0)
    v5 = *(_QWORD *)v5;
  v23 = v5;
  v6 = *(_DWORD *)(a3 + 28) & 0x7F;
  if (v6 != 64 || (*(_WORD *)(v5 + 8) & 0x7F) != 0x53)
  {
    if ((*(_BYTE *)(*((_QWORD *)result + 9) + 1) & 1) != 0
      || ((v7 = *(_WORD *)(*((_QWORD *)result + 27) + 8) & 0x7F, v7 <= 0x18)
        ? (v8 = ((1 << v7) & 0x1000006) == 0)
        : (v8 = 1),
          !v8 || v7 - 52 <= 5))
    {
      v21 = 3;
      v22 = v6 == 48;
      v9 = *(_WORD *)(v5 + 8);
      if ((v9 & 0x7Eu) - 54 > 3)
      {
        if ((v9 & 0x7Eu) - 52 <= 5)
        {
LABEL_39:
          v21 = 0;
LABEL_42:
          sub_22E8FCA40(result, a2, 0x1233u, 0, (uint64_t)v20);
          v17 = sub_22E890024((uint64_t)v20, &v24);
          v18 = sub_22E89519C(v17, (unsigned int *)&v22);
          v19 = sub_22E89519C(v18, (unsigned int *)&v21);
          sub_22E894FB4(v19, (uint64_t *)&v23);
          sub_22E903BEC(v20);
          sub_22E8FCA40(v3, *(_DWORD *)(v24 + 24), 0x15C9u, 0, (uint64_t)v20);
          sub_22E890024((uint64_t)v20, &v24);
          return sub_22E903BEC(v20);
        }
        v12 = v9 & 0x7F;
        if (v12 != 1)
          goto LABEL_42;
LABEL_41:
        v21 = v12;
        goto LABEL_42;
      }
      v10 = v9 & 0x7F;
      v11 = -40;
      if (v10 > 70)
      {
        if (v10 != 83)
        {
          if (v10 == 71)
          {
            v11 = -56;
            goto LABEL_32;
          }
          if (v10 == 81)
            goto LABEL_32;
LABEL_27:
          if ((v10 - 52) < 6)
          {
            v11 = -72;
          }
          else
          {
            v11 = -48;
            if ((v10 - 33) < 5)
              v11 = -64;
          }
        }
      }
      else
      {
        if (v10 > 0x18)
          goto LABEL_26;
        if (v10 != 16)
        {
          if (((1 << v10) & 0x1066) != 0)
            goto LABEL_32;
          if (v10 != 24)
          {
LABEL_26:
            if (v10 == 70)
            {
              v11 = -64;
              goto LABEL_32;
            }
            goto LABEL_27;
          }
        }
        v11 = -48;
      }
LABEL_32:
      v13 = *(_QWORD *)(v5 + v11 + 16);
      v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
      if ((v13 & 4) != 0)
        v14 = (_QWORD *)*v14;
      if (v14)
        v15 = v14 - 8;
      else
        v15 = 0;
      v16 = v15[16];
      if (!v16 || ((*(unsigned __int16 *)(v16 + 8) | (*(unsigned __int8 *)(v16 + 10) << 16)) & 0x100000) == 0)
        goto LABEL_39;
      v12 = 2;
      goto LABEL_41;
    }
  }
  return result;
}

char *sub_22EB2542C(uint64_t *a1, unsigned int a2)
{
  unsigned int v2;
  char **v3;
  char **v4;
  char *result;
  uint64_t v6;
  uint64_t v7;
  char **v8;
  unsigned int v9;

  v2 = a2;
  if (a2 < 0x7E8)
  {
    v3 = &off_24FAC8C40;
    v4 = &(&off_24FAC8C40)[6 * a2];
LABEL_3:
    result = strchr(v4[2], 102);
    if (!result)
      return result;
    v8 = &v3[6 * v2];
    return (char *)(strchr(v8[2], 122) == 0);
  }
  v9 = a2 - 2024;
  v6 = a1[1];
  if (v6 + 2024 <= (unint64_t)a2)
  {
    v2 = a2 - v6 - 2024;
    v3 = (char **)a1[2];
    v4 = &v3[6 * v2];
    goto LABEL_3;
  }
  v7 = *a1;
  result = strchr(*(char **)(*a1 + 48 * v9 + 16), 102);
  if (result)
  {
    v8 = (char **)(v7 + 48 * v9);
    return (char *)(strchr(v8[2], 122) == 0);
  }
  return result;
}

uint64_t sub_22EB254F4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  const void *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  const void *p_p;
  uint64_t v29;
  uint64_t v31;
  unsigned int v32;
  void *__p;
  uint64_t v34;
  char v35;
  unsigned int v36[24];
  uint64_t v37;
  unsigned int v38[6];
  char *v39;
  __int128 v40;
  _QWORD v41[5];

  v41[4] = *MEMORY[0x24BDAC8D0];
  v6 = sub_22F30914C(a1);
  if (v6)
  {
    v10 = *(_QWORD *)(v6 + 1424);
    if (!v10)
      goto LABEL_10;
  }
  else
  {
    v7 = sub_22E904A34(a1, 0);
    if (v7)
    {
      v10 = *(_QWORD *)(v7 + 1488);
      if (v10)
        goto LABEL_11;
      goto LABEL_10;
    }
    v8 = *(unsigned int *)(a1 + 1904);
    if ((_DWORD)v8)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * v8 - 8);
      if ((*(_DWORD *)(v9 + 8) & 7) == 3)
      {
        v10 = *(_QWORD *)(v9 + 1424);
        if (v10)
          goto LABEL_11;
LABEL_10:
        sub_22E8FCA40((_QWORD *)a1, a2, 0x14D7u, 0, (uint64_t)v36);
        sub_22E903BEC(v36);
        v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 1960) + 80);
        v10 = sub_22E3CD31C((uint64_t *)(v11 + 72), v11);
        goto LABEL_11;
      }
    }
    v10 = sub_22E903398(a1);
    if (!v10)
      goto LABEL_10;
  }
LABEL_11:
  v12 = sub_22EFCAE04(v10);
  if (sub_22EFC7ADC(v12))
  {
    v13 = 0;
    v14 = *(_QWORD *)(a1 + 88);
    v15 = *(_QWORD *)(v14 + 16832);
  }
  else
  {
    sub_22EFF7250(a3, v10, &__p);
    if (v35 >= 0)
      v16 = v35 & 0x7F;
    else
      v16 = v34;
    v32 = 32;
    v31 = (v16 + 1);
    if ((_DWORD)a3 == 5 || (_DWORD)a3 == 2)
    {
      v17 = sub_22EF64524(*(_QWORD *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16424) | 1);
      v39 = (char *)v41;
      v40 = xmmword_22F44E330;
      sub_22EF5CCD0(*(_QWORD *)(a1 + 88), *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0), (uint64_t)v38);
      if (v35 >= 0)
        v18 = v35 & 0x7F;
      else
        v18 = v34;
      v19 = v38[0] * v18 + v38[0];
      v20 = v40;
      if ((_QWORD)v40 != v19)
      {
        if ((unint64_t)v40 <= v19)
        {
          if (*((_QWORD *)&v40 + 1) < v19)
          {
            llvm::SmallVectorBase<unsigned long long>::grow_pod();
            v20 = v40;
          }
          if (v19 != v20)
            bzero(&v39[v20], v19 - v20);
        }
        *(_QWORD *)&v40 = v19;
      }
      v37 = 0;
      *(_QWORD *)v38 = v39;
      llvm::ConvertUTF8toWide();
      v21 = v40;
      v22 = *(_QWORD *)v38 - (_QWORD)v39;
      if ((_QWORD)v40 != *(_QWORD *)v38 - (_QWORD)v39)
      {
        if ((unint64_t)v40 <= v22)
        {
          if (*((_QWORD *)&v40 + 1) < v22)
          {
            llvm::SmallVectorBase<unsigned long long>::grow_pod();
            v21 = v40;
          }
          if (v22 != v21)
            bzero(&v39[v21], v22 - v21);
        }
        *(_QWORD *)&v40 = v22;
      }
      v15 = sub_22EF5FE30(*(_QWORD *)(a1 + 88), v17, (const llvm::APInt *)&v31, 0, 0, 0);
      v23 = *(_QWORD *)(a1 + 88);
      v24 = v39;
      v25 = v40;
      v38[0] = a2;
      v13 = sub_22E3CD3D4(v23 + 2032, v40 + 24, 3);
      sub_22EFF95DC(v13, v23, v24, v25, 1, 0, v15, v38, 1u);
      if (v39 != (char *)v41)
        free(v39);
    }
    else
    {
      v26 = sub_22EF64524(*(_QWORD *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408) | 1);
      v15 = sub_22EF5FE30(*(_QWORD *)(a1 + 88), v26, (const llvm::APInt *)&v31, 0, 0, 0);
      v27 = *(_QWORD *)(a1 + 88);
      if (v35 >= 0)
        p_p = &__p;
      else
        p_p = __p;
      if (v35 >= 0)
        v29 = v35 & 0x7F;
      else
        v29 = v34;
      LODWORD(v39) = a2;
      v13 = sub_22E3CD3D4(v27 + 2032, v29 + 24, 3);
      sub_22EFF95DC(v13, v27, p_p, v29, 0, 0, v15, &v39, 1u);
    }
    if (v32 >= 0x41 && v31)
      MEMORY[0x2348A0E84](v31, 0x1000C8000313F17);
    if (v35 < 0)
      operator delete(__p);
    v14 = *(_QWORD *)(a1 + 88);
  }
  return sub_22F3C1248(v14, a2, v15, a3, v13);
}

uint64_t sub_22EB25910(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  char *v20;
  int v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  __int16 v34;
  char v35;
  char v36;
  void *v37;
  size_t v38;
  unsigned int v39[10];
  void *v40;
  __int128 v41;
  _BYTE v42[16];
  uint64_t v43;
  void *v44;
  uint64_t v45;
  _BYTE v46[64];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  int v52;
  _QWORD v53[3];
  __int16 v54;
  int v55;
  char v56;
  uint64_t v57[4];

  v57[2] = *MEMORY[0x24BDAC8D0];
  v40 = v42;
  v41 = xmmword_22F44E350;
  v29 = 0;
  v6 = sub_22F18E170(*(_QWORD *)(a1 + 80), a2, (uint64_t *)&v40, &v29);
  if (v29)
  {
    v8 = 1;
  }
  else
  {
    sub_22F14B96C((uint64_t)&v33, v6, v6 + v7, *(_DWORD *)a2, *(_QWORD **)(a1 + 80), *(unsigned __int16 *)(a2 + 16));
    if (v36)
    {
      v8 = 1;
    }
    else
    {
      switch(v34)
      {
        case 9:
          v9 = *(uint64_t **)(a1 + 88);
          v10 = v9 + 2053;
          v11 = 0x40000;
          break;
        case 10:
          v12 = **(_QWORD **)(a1 + 72);
          if ((v12 & 8) != 0)
          {
            v9 = *(uint64_t **)(a1 + 88);
            v13 = 2064;
          }
          else
          {
            if ((v12 & 0x4000000) == 0)
              goto LABEL_13;
            v9 = *(uint64_t **)(a1 + 88);
            v13 = 2055;
          }
          goto LABEL_20;
        case 11:
          v9 = *(uint64_t **)(a1 + 88);
          v10 = v9 + 2056;
          v11 = 786432;
          break;
        case 12:
          v9 = *(uint64_t **)(a1 + 88);
          v10 = v9 + 2057;
          v11 = 0x100000;
          break;
        default:
          v12 = **(_QWORD **)(a1 + 72);
LABEL_13:
          v14 = v12 & 0x100;
          if (v35)
            v15 = 1;
          else
            v15 = v14 == 0;
          v9 = *(uint64_t **)(a1 + 88);
          v13 = 2051;
          if (v15)
            v13 = 2060;
LABEL_20:
          v10 = &v9[v13];
          v11 = (v34 == 10) << 19;
          break;
      }
      v16 = *v10;
      v17 = sub_22E3CD3D4((uint64_t)(v9 + 254), 24, 3);
      v18 = v33;
      v19 = *(_DWORD *)a2;
      *(_BYTE *)v17 = -102;
      if (byte_255E04EB3)
      {
        v20 = sub_22F0D3748(154);
        ++*((_DWORD *)v20 + 2);
      }
      v21 = *(_DWORD *)v17;
      *(_QWORD *)(v17 + 8) = v16;
      *(_DWORD *)(v17 + 16) = v18;
      *(_DWORD *)(v17 + 20) = v19;
      *(_DWORD *)v17 = v21 & 0xFFE000FF | v11;
      if (v38)
      {
        v22 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(a1 + 88) + 15192), v37, v38);
        v23 = *(_DWORD *)a2;
        v24 = sub_22F1418F4(*(_DWORD *)a2, v39[8], *(uint64_t **)(a1 + 112), *(_QWORD **)(a1 + 72)) + v23;
        if (a3)
        {
          v8 = 1;
          v57[1] = 0;
          v26 = *(_QWORD *)(v17 + 8);
          v57[0] = v26;
          if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16) & 0xFEu)
             - 2 <= 3)
            v57[0] = sub_22EF5F824(*(_QWORD *)(a1 + 88), v26);
          v27 = sub_22F3AE768((_QWORD *)(*(_QWORD *)(a1 + 88) + 15224), v22);
          v30 = v27;
          v31 = v24;
          sub_22EFC6D6C((uint64_t)&v32, v27);
          v32 = v24;
          v43 = 0;
          v44 = v46;
          v45 = 0x800000000;
          v47 = 0;
          v48 = 0;
          v49 = 0;
          v50 = (_QWORD *)a1;
          v51 = v27;
          v52 = v24;
          sub_22EFC6D6C((uint64_t)v53, v27);
          v53[1] = 0;
          v53[2] = 0;
          v54 = 0;
          v55 = 257;
          v56 = 0;
          sub_22EC56024((uint64_t)&v43);
          if (sub_22EC66D18(a1, a3, (uint64_t)&v43, v57, 1, 0, 0, 0, 1, 0))
            v8 = sub_22ED1CDDC();
          if (BYTE1(v55))
          {
            if ((_DWORD)v43 == 5)
            {
              sub_22EC64D18(v50, (uint64_t)&v43);
            }
            else if (v48 && (*(_DWORD *)(v50[9] + 52) & 0x400000) != 0)
            {
              sub_22E90B5FC((unint64_t)v50, (uint64_t)&v43);
            }
          }
          if (v47)
          {
            v28 = sub_22EC6CBD0(v47);
            MEMORY[0x2348A0E9C](v28, 0x10E0C409F09D3C3);
          }
          if (v44 != v46)
            free(v44);
        }
        else
        {
          sub_22E8FCA40((_QWORD *)a1, v24, 0x1Bu, 0, (uint64_t)&v43);
          sub_22E903BEC((unsigned int *)&v43);
          v8 = 1;
        }
      }
      else
      {
        v8 = v17;
      }
    }
    if (v37 != v39)
      free(v37);
  }
  if (v40 != v42)
    free(v40);
  return v8;
}

uint64_t sub_22EB25D60(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v12;
  unint64_t v13;
  unsigned int v14;

  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 15088) + *(_QWORD *)(**(_QWORD **)(v3 + 15088) - 24) + 4);
  v14 = v4;
  if (v4 > 0x40)
  {
    v12 = a2;
    llvm::APInt::initSlowCase((llvm::APInt *)&v13);
    a2 = v12;
    v6 = *(_QWORD *)(a1 + 88);
  }
  else
  {
    if (v4)
      v5 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v4;
    else
      v5 = 0;
    v13 = v5 & a3;
    v6 = v3;
  }
  v7 = *(_QWORD *)(v6 + 16480);
  v8 = a2;
  v9 = sub_22E3CD3D4(v3 + 2032, 32, 3);
  sub_22EFF8F1C(v9, v3, (uint64_t)&v13, v7, v8);
  if (v14 >= 0x41 && v13)
    MEMORY[0x2348A0E84](v13, 0x1000C8000313F17);
  return v9;
}

uint64_t sub_22EB25E50(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v12;
  unsigned int v13;
  int v14;
  int v16;
  int v18;
  void *v19;
  const void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *__p[2];
  unint64_t v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t (**v31)();
  char v32;
  uint64_t v33;
  _QWORD *v34;
  __int128 v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a2 + 2) & 1) != 0)
    return 0;
  v33 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v33 & 0xFFFFFFFFFFFFFFF0) + 8);
  v5 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_DWORD *)(v5 + 16);
  if (v5)
    v7 = v6 == 11;
  else
    v7 = 0;
  if (v7)
  {
    if (((v6 >> 19) & 0x1FE) - 166 < 0x14)
      goto LABEL_16;
LABEL_29:
    sub_22EFF605C(a2);
    sub_22E8FCA40(a1, v16, 0x11BDu, 0, (uint64_t)&v31);
    sub_22E8901B8((uint64_t)&v31, &v33);
    sub_22E903BEC((unsigned int *)&v31);
    return 1;
  }
  if (!v5 || v6 != 44)
  {
    if (v6 == 9)
      goto LABEL_16;
    goto LABEL_29;
  }
  v8 = sub_22F114198(*(_QWORD *)(v5 + 24));
  if ((*(_BYTE *)(v8 + 74) & 1) == 0 && *(_QWORD *)(v8 + 128) <= 7uLL
    || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v5 + 24)) + 76) & 0x80) != 0)
  {
    goto LABEL_29;
  }
  v4 = *(_QWORD *)(*(_QWORD *)(v33 & 0xFFFFFFFFFFFFFFF0) + 8);
  v6 = *(_DWORD *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0) + 16);
LABEL_16:
  if ((v6 & 0xFF800FF) == 0x530000B)
    goto LABEL_29;
  v10 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
  if (v10
    && *(_DWORD *)(v10 + 16) == 11
    && ((*(_DWORD *)(v10 + 16) >> 19) & 0x1FFu) - 167 <= 0xC
    && ((1 << ((*(_DWORD *)(v10 + 16) >> 19) + 89)) & 0x1803) != 0)
  {
    goto LABEL_29;
  }
  v9 = 1;
  v29 = 1;
  v28 = 0;
  v30 = 0;
  v32 = 0;
  v31 = off_24FAB82C8;
  if ((sub_22EB4CB24(a1, a2, &v28, &v31, 0) & 1) != 0)
    goto LABEL_34;
  v12 = sub_22E984E5C((uint64_t)&v28);
  v27 = v12;
  if (!v12
    || ((v13 = v29, v29 > 0x40)
      ? (v14 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v28))
      : (v14 = v29 + __clz(v28) - 64),
        v13 - v14 >= 0x20))
  {
    sub_22EFF605C(a2);
    sub_22E8FCA40(a1, v18, 0x11BEu, 0, (uint64_t)&v31);
    v34 = v36;
    v35 = xmmword_22F455490;
    llvm::APInt::toString();
    v19 = (void *)v35;
    if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v20 = v34;
    if ((unint64_t)v35 >= 0x17)
    {
      v22 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v35 | 7) != 0x17)
        v22 = v35 | 7;
      v23 = v22 + 1;
      v21 = operator new(v22 + 1);
      __p[1] = v19;
      v26 = v23 | 0x8000000000000000;
      __p[0] = v21;
    }
    else
    {
      HIBYTE(v26) = v35;
      v21 = __p;
      if (!(_QWORD)v35)
        goto LABEL_45;
    }
    memmove(v21, v20, (size_t)v19);
LABEL_45:
    *((_BYTE *)v19 + (_QWORD)v21) = 0;
    if (v34 != v36)
      free(v34);
    v24 = sub_22F2F3734((uint64_t)&v31, __p);
    sub_22E894E38(v24, &v27);
    if (SHIBYTE(v26) < 0)
      operator delete(__p[0]);
    sub_22E903BEC((unsigned int *)&v31);
    v9 = 1;
    goto LABEL_34;
  }
  v9 = 0;
LABEL_34:
  if (v29 >= 0x41 && v28)
    MEMORY[0x2348A0E84](v28, 0x1000C8000313F17);
  return v9;
}

uint64_t sub_22EB261BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (**v5)();
  char v6;

  v6 = 0;
  v5 = off_24FAB82C8;
  return sub_22EB4CB24(a1, a2, a3, &v5, a4);
}

uint64_t sub_22EB261F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  const char *v6;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  unsigned __int16 v45;
  unsigned int *v46;
  _BYTE *v47;
  _QWORD *v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int SufficientBitsNeeded;
  int v64;
  unint64_t v65;
  unsigned __int16 v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  unint64_t *v71;
  uint64_t v72;
  unint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  BOOL v81;
  int v82;
  unsigned int v83;
  char *v84;
  int v85;
  int v86;
  uint64_t v87;
  int v88;
  unsigned int v89;
  int v90;
  uint64_t v91;
  unsigned int v92;
  int v93;
  void **v94;
  uint64_t v95;
  unsigned int v96;
  int v97;
  void **v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v102;
  int v103;
  void **v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unint64_t *v110;
  uint64_t v111;
  unsigned int v112;
  int v113;
  unsigned int *v114;
  void **v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _BOOL4 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  unsigned int v133;
  uint64_t v134;
  unsigned int v135[24];
  _BYTE v136[96];
  _QWORD v137[3];
  __int16 v138;
  unsigned int v139[24];
  _BYTE v140[96];
  _BYTE v141[89];
  _BYTE v142[96];
  unsigned int v143[24];
  char *v144;
  unsigned int v145;
  __int128 v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  _QWORD *v151;
  unsigned int v152;
  BOOL v153;
  int v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 v159;
  void *v160;
  uint64_t v161;
  _QWORD v162[33];
  char *v163;
  void *v164;
  uint64_t v165;
  _BYTE v166[33];
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  int v172;
  _QWORD v173[3];
  __int16 v174;
  int v175;
  char v176;
  _QWORD v177[3];
  uint64_t v178;
  uint64_t v179;
  int v180;
  unsigned __int8 v181;
  unsigned __int8 v182;
  char v183;
  char v184;
  void *v185;
  size_t v186;
  uint64_t v187;
  unsigned __int16 v188;
  unsigned __int8 v189;
  void *v190;
  __int128 v191;
  _QWORD v192[18];

  v192[16] = *MEMORY[0x24BDAC8D0];
  v5 = *(_DWORD *)(a2 + 4);
  if (v5 == 1)
  {
    v6 = *(const char **)(a2 + 8);
    if (!v6)
      v6 = sub_22F1E2D38(*(uint64_t **)(*(_QWORD *)(a1 + 80) + 88), *(_DWORD *)a2, 0);
    return sub_22EB25D60(a1, *(_DWORD *)a2, *v6 - 48);
  }
  v190 = v192;
  v191 = xmmword_22F44E310;
  v9 = (v5 + 1);
  if (v5 != -1)
  {
    if (v9 < 0x81)
    {
      v17 = 0;
    }
    else
    {
      llvm::SmallVectorBase<unsigned long long>::grow_pod();
      v17 = v191;
    }
    if (v9 != v17)
      bzero((char *)v190 + v17, v9 - v17);
    *(_QWORD *)&v191 = v9;
  }
  v159 = 0;
  v10 = (unsigned __int8 *)sub_22F18E170(*(_QWORD *)(a1 + 80), a2, (uint64_t *)&v190, &v159);
  if (!v159)
  {
    v12 = v10;
    sub_22F1497C4((uint64_t)v177, v10, v11, *(_DWORD *)a2, *(uint64_t **)(*(_QWORD *)(a1 + 80) + 88), *(_QWORD *)(*(_QWORD *)(a1 + 80) + 56), *(_QWORD *)(*(_QWORD *)(a1 + 80) + 64), *(_QWORD *)(*(_QWORD *)(a1 + 80) + 48));
    if ((v188 & 1) != 0)
    {
LABEL_13:
      a3 = 1;
      goto LABEL_14;
    }
    if (v183)
    {
      v13 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(a1 + 88) + 15192), v185, v186);
      v14 = *(_DWORD *)a2;
      v15 = sub_22F1418F4(*(_DWORD *)a2, (int)v179 - (int)v178, *(uint64_t **)(a1 + 112), *(_QWORD **)(a1 + 72))+ v14;
      if (!a3)
      {
        sub_22E8FCA40((_QWORD *)a1, v15, 0x1Eu, 0, (uint64_t)&v160);
        v16 = (unsigned int *)&v160;
LABEL_12:
        sub_22E903BEC(v16);
        goto LABEL_13;
      }
      if (v184)
        v18 = 1;
      else
        v18 = (v182 | v181) == 0;
      v19 = *(_QWORD *)(a1 + 88);
      v20 = 16544;
      if (!v18)
        v20 = 16576;
      v158 = *(_QWORD *)(v19 + v20);
      v155 = sub_22F3AE768((_QWORD *)(v19 + 15224), v13);
      v156 = v15;
      sub_22EFC6D6C((uint64_t)&v157, v155);
      v157 = v15;
      v154 = *(_DWORD *)a2;
      v163 = 0;
      v164 = v166;
      v165 = 0x800000000;
      v167 = 0;
      v168 = 0;
      v169 = 0;
      v170 = (_QWORD *)a1;
      v171 = v155;
      v172 = v15;
      sub_22EFC6D6C((uint64_t)v173, v155);
      v173[2] = 0;
      v173[1] = 0;
      v174 = 0;
      v175 = 257;
      v176 = 0;
      sub_22EC56024((uint64_t)&v163);
      v21 = 1;
      switch(sub_22EC66D18(a1, (_QWORD *)a3, (uint64_t)&v163, &v158, 1, 1u, 1, 0, (v188 & 0x100) == 0, 0))
      {
        case 0u:
          v21 = 0;
          a3 = 1;
          break;
        case 2u:
          *(_QWORD *)&v149 = 0;
          if (!(v182 | v181) || v184)
          {
            DWORD2(v146) = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088)
                                              + *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) - 24)
                                              + 22);
            if (DWORD2(v146) > 0x40)
              llvm::APInt::initSlowCase((llvm::APInt *)&v146);
            else
              *(_QWORD *)&v146 = 0;
            sub_22F14AEF4((uint64_t)v177);
            if (v38)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0x1Au, 0, (uint64_t)&v160);
              LODWORD(v151) = 1;
              sub_22E8900C4((uint64_t)&v160, (int *)&v151);
              sub_22E903BEC((unsigned int *)&v160);
            }
            v39 = *(_QWORD *)(a1 + 88);
            v40 = v158;
            v41 = *(_DWORD *)a2;
            v42 = sub_22E3CD3D4(v39 + 2032, 32, 3);
            *(_QWORD *)&v149 = sub_22EFF8F1C(v42, v39, (uint64_t)&v146, v40, v41);
            if (DWORD2(v146) >= 0x41 && (_QWORD)v146)
              MEMORY[0x2348A0E84](v146, 0x1000C8000313F17);
          }
          else
          {
            *(_QWORD *)&v149 = sub_22EB2773C((_QWORD *)a1, v177, v158, *(_DWORD *)a2);
          }
          goto LABEL_61;
        case 3u:
          v22 = v179 - v178;
          v23 = *(_QWORD *)(a1 + 88);
          v24 = sub_22EF64524(v23, *(_QWORD *)(v23 + 16408) | 1);
          LODWORD(v161) = 32;
          v160 = (void *)(v22 + 1);
          v25 = sub_22EF5FE30(v23, v24, (const llvm::APInt *)&v160, 0, 0, 0);
          if (v161 >= 0x41 && v160)
            MEMORY[0x2348A0E84](v160, 0x1000C8000313F17);
          v160 = 0;
          v26 = *(_QWORD *)(a1 + 88);
          v27 = sub_22E3CD3D4(v26 + 2032, v22 + 24, 3);
          v160 = (void *)sub_22EFF95DC(v27, v26, v12, v22, 0, 0, v25, &v154, 1u);
LABEL_61:
          a3 = sub_22ED1CDDC();
          goto LABEL_62;
        case 4u:
          v160 = v162;
          v161 = 0x800000000;
          v162[32] = 0;
          v28 = sub_22EF6A330(*(_QWORD *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408));
          v29 = sub_22F110B50(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408) & 0xFFFFFFFFFFFFFFF0));
          v152 = v28;
          if (v28 > 0x40)
            llvm::APInt::initSlowCase((llvm::APInt *)&v151);
          else
            v151 = 0;
          v153 = v29;
          v30 = (v179 - v178);
          if ((_DWORD)v179 != (_DWORD)v178)
          {
            do
            {
              v32 = (char)*v12++;
              v31 = v32;
              v33 = v152;
              if (v152 > 0x40)
              {
                *v151 = v31;
                bzero(v151 + 1, (((unint64_t)(v33 + 63) >> 3) - 8) & 0xFFFFFFF8);
              }
              else
              {
                if (v152)
                  v34 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v152;
                else
                  v34 = 0;
                v151 = (_QWORD *)(v34 & v31);
              }
              sub_22F0EEA4C((uint64_t)&v149, *(_QWORD *)(a1 + 88), &v151, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408));
              v146 = v149;
              v147 = v150;
              v148 = 0;
              v35 = (_OWORD *)sub_22E78DF7C((uint64_t)&v160, (unint64_t)&v146, 1);
              v36 = (char *)v160 + 32 * v161;
              v37 = v35[1];
              *v36 = *v35;
              v36[1] = v37;
              LODWORD(v161) = v161 + 1;
              --v30;
            }
            while (v30);
          }
          a3 = sub_22ED1CDDC();
          if (v152 >= 0x41 && v151)
            MEMORY[0x2348A0E84](v151, 0x1000C8000313F17);
          if (v160 != v162)
            free(v160);
LABEL_62:
          v21 = 0;
          break;
        default:
          break;
      }
      if (BYTE1(v175))
      {
        if ((_DWORD)v163 == 5)
        {
          sub_22EC64D18(v170, (uint64_t)&v163);
        }
        else if (v168 && (*(_DWORD *)(v170[9] + 52) & 0x400000) != 0)
        {
          sub_22E90B5FC((unint64_t)v170, (uint64_t)&v163);
        }
      }
      if (v167)
      {
        v134 = sub_22EC6CBD0(v167);
        MEMORY[0x2348A0E9C](v134, 0x10E0C409F09D3C3);
      }
      if (v164 == v166)
      {
        if (v21)
          goto LABEL_72;
      }
      else
      {
        free(v164);
        if (v21)
          goto LABEL_72;
      }
LABEL_14:
      if (v185 != &v187)
        free(v185);
      goto LABEL_16;
    }
LABEL_72:
    v43 = v182 | v181;
    if (!v43 || !v184)
    {
      if (!v43)
      {
        v44 = **(_QWORD **)(a1 + 72);
        v45 = v188;
        if ((v44 & 1) == 0 && (v188 & 8) != 0)
        {
          if ((v44 & 0x100) != 0)
          {
            if ((v44 & 0x200) != 0)
              v49 = 128;
            else
              v49 = 88;
            v46 = (unsigned int *)v141;
            v47 = v141;
            v48 = (_QWORD *)a1;
          }
          else
          {
            v46 = (unsigned int *)v140;
            v47 = v140;
            v48 = (_QWORD *)a1;
            v49 = 85;
          }
          sub_22E8FCA40(v48, *(_DWORD *)a2, v49, 0, (uint64_t)v47);
          sub_22E903BEC(v46);
          v45 = v188;
        }
        if ((v45 & 0x10) != 0)
        {
          v52 = **(_QWORD **)(a1 + 72);
          if ((v52 & 0x2000) != 0)
            v53 = 127;
          else
            v53 = 89;
          if ((v52 & 0x100) != 0)
            v54 = v53;
          else
            v54 = 10;
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, v54, 0, (uint64_t)v139);
          sub_22E903BEC(v139);
          v45 = v188;
        }
        if ((v45 & 0x2000) != 0)
        {
          v55 = **(_QWORD **)(a1 + 72);
          if ((v55 & 0x100) == 0)
          {
            if ((v55 & 8) != 0)
              v56 = 123;
            else
              v56 = 84;
            v57 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 48);
            *(_DWORD *)(v57 + 312) = *(_DWORD *)a2;
            *(_DWORD *)(v57 + 316) = v56;
            if (*(char *)(v57 + 311) < 0)
            {
              **(_BYTE **)(v57 + 288) = 0;
              *(_QWORD *)(v57 + 296) = 0;
            }
            else
            {
              *(_BYTE *)(v57 + 288) = 0;
              *(_BYTE *)(v57 + 311) = 0;
            }
            v137[0] = v57 + 320;
            v137[1] = 0;
            v137[2] = v57;
            v138 = 1;
            *(_BYTE *)(v57 + 320) = 0;
            *(_DWORD *)(v57 + 664) = 0;
            v60 = *(unsigned int *)(v57 + 776);
            if ((_DWORD)v60)
            {
              v61 = *(_QWORD *)(v57 + 768);
              v62 = 56 * v60;
              do
              {
                if (*(char *)(v61 + v62 - 9) < 0)
                  operator delete(*(void **)(v61 + v62 - 32));
                v62 -= 56;
              }
              while (v62);
            }
            *(_DWORD *)(v57 + 776) = 0;
            sub_22E3BB0B8((uint64_t)v137);
            v45 = v188;
          }
        }
        if ((v45 & 0x2000) != 0)
          SufficientBitsNeeded = llvm::APInt::getSufficientBitsNeeded();
        else
          SufficientBitsNeeded = sub_22F1E724C(*(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088), *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088)+ *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) - 24)+ 116));
        LODWORD(v164) = SufficientBitsNeeded;
        if (SufficientBitsNeeded > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v163);
        else
          v163 = 0;
        sub_22F14AEF4((uint64_t)v177);
        if (v64)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0x1Au, 0, (uint64_t)&v160);
          LODWORD(v146) = 1;
          sub_22E8900C4((uint64_t)&v160, (int *)&v146);
          sub_22E903BEC((unsigned int *)&v160);
          v65 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16544);
LABEL_280:
          v118 = *(_QWORD *)(a1 + 88);
          v119 = *(_DWORD *)a2;
          v87 = sub_22E3CD3D4(v118 + 2032, 32, 3);
          sub_22EFF8F1C(v87, v118, (uint64_t)&v163, v65, v119);
          v120 = *(_QWORD *)(a1 + 72);
          if ((*(_BYTE *)(v120 + 104) & 0x20) != 0 && (*(_BYTE *)(v120 + 127) & 0x10) == 0)
          {
            v121 = *(_QWORD *)(v65 & 0xFFFFFFFFFFFFFFF0);
            v122 = *(_QWORD *)(*(_QWORD *)(v121 + 8) & 0xFFFFFFFFFFFFFFF0);
            if (v122 && (*(_DWORD *)(v122 + 16) & 0xFB800FF) == 92274699)
            {
              v124 = sub_22F110930(v121);
              v125 = 16536;
              if (v124)
                v125 = 16488;
              v87 = sub_22E90092C(a1, v87, *(_QWORD *)(*(_QWORD *)(a1 + 88) + v125), 30, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
            }
          }
LABEL_290:
          if (v164 >= 0x41 && v163)
            MEMORY[0x2348A0E84](v163, 0x1000C8000313F17);
LABEL_305:
          if ((v188 & 0x100) != 0)
          {
            a3 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 24, 3);
            v131 = sub_22F369F4C(*(_QWORD *)(a1 + 88), *(_QWORD *)(v87 + 8));
            *(_BYTE *)a3 = -78;
            if (byte_255E04EB3)
            {
              v132 = sub_22F0D3748(178);
              ++*((_DWORD *)v132 + 2);
            }
            v133 = *(_DWORD *)a3 & 0xFFFC00FF;
            *(_QWORD *)(a3 + 8) = v131;
            *(_QWORD *)(a3 + 16) = v87;
            *(_DWORD *)a3 = v133;
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0x148Cu, 0, (uint64_t)v135);
            sub_22E903BEC(v135);
          }
          else
          {
            a3 = v87;
          }
          goto LABEL_14;
        }
        v66 = v188;
        if (v180 == 10)
          v67 = (v188 >> 1) & 1;
        else
          v67 = 1;
        v68 = v189;
        if (v189)
        {
          if (v189 != 8 || (v188 & 2) != 0)
          {
            v65 = sub_22EF60A6C(*(_QWORD *)(a1 + 88), v189, (v188 & 2) == 0);
            v66 = v188;
          }
          else
          {
            v65 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408);
            v68 = 8;
          }
        }
        else
        {
          v65 = 0;
        }
        if ((v66 & 0x2000) != 0)
        {
          v76 = (int)v164;
          if (v164 > 0x40)
            v77 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v163);
          else
            v77 = (_DWORD)v164 + __clz((unint64_t)v163) - 64;
          v88 = v76 - v77;
          if (v76 == v77)
            v88 = 1;
          if ((v66 & 2) != 0)
            v68 = v88;
          else
            v68 = v88 + 1;
          v89 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) + 64))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088));
          if (v68 > v89)
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0x1Au, 0, (uint64_t)&v160);
            LOBYTE(v146) = (v188 & 2) != 0;
            sub_22E894E38((uint64_t)&v160, (unsigned __int8 *)&v146);
            sub_22E903BEC((unsigned int *)&v160);
            v68 = v89;
          }
          llvm::APInt::zextOrTrunc((llvm::APInt *)&v163);
          if (v164 >= 0x41 && v163)
            MEMORY[0x2348A0E84](v163, 0x1000C8000313F17);
          v163 = (char *)v160;
          LODWORD(v164) = v161;
          v65 = sub_22F36C2DC(*(_QWORD *)(a1 + 88), (v188 >> 1) & 1, v68);
          LOBYTE(v66) = v188;
          if ((v188 & 0x10) == 0)
            goto LABEL_139;
        }
        else if ((v66 & 0x10) == 0)
        {
LABEL_139:
          v69 = v68;
          goto LABEL_217;
        }
        v90 = v67;
        v91 = *(_QWORD *)(a1 + 88);
        v69 = sub_22F1E724C(*(_QWORD **)(v91 + 15088), *(_DWORD *)(*(_QWORD *)(v91 + 15088) + *(_QWORD *)(**(_QWORD **)(v91 + 15088) - 24) + 112));
        v92 = v164;
        if (v164 > 0x40)
          v93 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v163);
        else
          v93 = (_DWORD)v164 + __clz((unint64_t)v163) - 64;
        if (v92 - v93 <= v69)
        {
          if ((v66 & 2) != 0)
            goto LABEL_215;
          v94 = (void **)&v163[8 * ((v69 - 1) >> 6)];
          if (v92 < 0x41)
            v94 = (void **)&v163;
          if ((((unint64_t)*v94 >> (v69 - 1)) & 1) != 0)
          {
LABEL_215:
            v67 = v90;
            if (v90)
              v65 = sub_22EF67C8C(v91);
LABEL_217:
            if (v65 > 0xF)
              goto LABEL_275;
            if ((v66 & 0x1C) == 0)
            {
              v95 = *(_QWORD *)(a1 + 88);
              v69 = *(unsigned __int8 *)(*(_QWORD *)(v95 + 15088) + *(_QWORD *)(**(_QWORD **)(v95 + 15088) - 24) + 4);
              v96 = v164;
              v97 = v164 > 0x40
                  ? llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v163)
                  : v164 + __clz((unint64_t)v163) - 64;
              if (v96 - v97 <= v69)
              {
                if ((v66 & 2) != 0)
                  goto LABEL_227;
                v98 = (void **)&v163[8 * ((v69 - 1) >> 6)];
                if (v96 < 0x41)
                  v98 = (void **)&v163;
                if ((((unint64_t)*v98 >> (v69 - 1)) & 1) != 0)
                {
LABEL_227:
                  if (!v67)
                    goto LABEL_234;
                  v99 = 16528;
                }
                else
                {
                  v99 = 16480;
                }
                v65 = *(_QWORD *)(v95 + v99);
                if (v65 > 0xF)
                  goto LABEL_275;
              }
            }
LABEL_234:
            if ((v66 & 0x18) != 0)
              goto LABEL_257;
            v100 = *(_QWORD *)(a1 + 88);
            v101 = *(_QWORD *)(v100 + 15088) + *(_QWORD *)(**(_QWORD **)(v100 + 15088) - 24);
            v69 = *(unsigned __int8 *)(v101 + 20);
            v102 = v164;
            v103 = v164 > 0x40
                 ? llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v163)
                 : v164 + __clz((unint64_t)v163) - 64;
            if (v102 - v103 > v69)
              goto LABEL_257;
            if ((v66 & 2) != 0)
              goto LABEL_243;
            v104 = (void **)&v163[8 * ((v69 - 1) >> 6)];
            if (v102 < 0x41)
              v104 = (void **)&v163;
            if ((((unint64_t)*v104 >> (v69 - 1)) & 1) != 0)
            {
LABEL_243:
              if (!v67)
              {
                v106 = **(_QWORD **)(a1 + 72);
                if ((v106 & 0x201) != 0)
                  goto LABEL_257;
                v107 = *(unsigned __int8 *)(v101 + 22);
                if ((v66 & 4) != 0)
                  v108 = 139;
                else
                  v108 = 92;
                if ((v106 & 0x100) != 0)
                  v109 = v108;
                else
                  v109 = 138;
                sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, v109, 0, (uint64_t)&v160);
                LODWORD(v146) = v107 <= v69;
                sub_22E8900C4((uint64_t)&v160, (int *)&v146);
                sub_22E903BEC((unsigned int *)&v160);
                v110 = (unint64_t *)(*(_QWORD *)(a1 + 88) + 16536);
                goto LABEL_255;
              }
              v105 = 16536;
            }
            else
            {
              v105 = 16488;
            }
            v110 = (unint64_t *)(v100 + v105);
LABEL_255:
            v65 = *v110;
            if (*v110 > 0xF)
              goto LABEL_275;
            LOBYTE(v66) = v188;
LABEL_257:
            if ((v66 & 0x10) != 0)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0x3Fu, 0, (uint64_t)&v160);
              LOBYTE(v146) = (v188 & 2) != 0;
              sub_22E894E38((uint64_t)&v160, (unsigned __int8 *)&v146);
              v114 = (unsigned int *)&v160;
LABEL_274:
              sub_22E903BEC(v114);
              v117 = *(_QWORD *)(a1 + 88);
              v65 = *(_QWORD *)(v117 + 16544);
              v69 = *(unsigned __int8 *)(*(_QWORD *)(v117 + 15088)
                                       + *(_QWORD *)(**(_QWORD **)(v117 + 15088) - 24)
                                       + 22);
LABEL_275:
              if ((_DWORD)v164 != v69)
              {
                llvm::APInt::trunc((llvm::APInt *)&v163);
                if (v164 >= 0x41 && v163)
                  MEMORY[0x2348A0E84](v163, 0x1000C8000313F17);
                v163 = (char *)v160;
                LODWORD(v164) = v161;
              }
              goto LABEL_280;
            }
            v111 = *(_QWORD *)(a1 + 88);
            v69 = *(unsigned __int8 *)(*(_QWORD *)(v111 + 15088) + *(_QWORD *)(**(_QWORD **)(v111 + 15088) - 24) + 22);
            v112 = v164;
            if (v164 > 0x40)
              v113 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v163);
            else
              v113 = (_DWORD)v164 + __clz((unint64_t)v163) - 64;
            if (v112 - v113 <= v69)
            {
              if ((v66 & 2) == 0)
              {
                v115 = (void **)&v163[8 * ((v69 - 1) >> 6)];
                if (v112 < 0x41)
                  v115 = (void **)&v163;
                if ((((unint64_t)*v115 >> (v69 - 1)) & 1) == 0
                  || (v66 & 8) != 0 && (**(_QWORD **)(a1 + 72) & 0x10) != 0)
                {
                  v116 = 16496;
                  goto LABEL_272;
                }
              }
              if (v67)
              {
                v116 = 16544;
LABEL_272:
                v65 = *(_QWORD *)(v111 + v116);
                if (v65 >= 0x10)
                  goto LABEL_275;
              }
            }
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0x5Bu, 0, (uint64_t)v136);
            v114 = (unsigned int *)v136;
            goto LABEL_274;
          }
          v65 = sub_22F36D77C(v91);
        }
        else
        {
          v69 = v68;
        }
        v67 = v90;
        goto LABEL_217;
      }
      if (v184)
        goto LABEL_13;
      if ((v188 & 0x40) != 0)
      {
        v58 = *(_QWORD *)(a1 + 72);
        if ((*(_BYTE *)(v58 + 104) & 0x20) == 0 && !sub_22F420564(a1 + 24, (uint64_t)"cl_khr_fp16", 11, v58))
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0xDCDu, 0, (uint64_t)v142);
          v16 = (unsigned int *)v142;
          goto LABEL_12;
        }
        v50 = *(_QWORD *)(a1 + 88);
        v51 = 16792;
        goto LABEL_294;
      }
      if ((v188 & 0x20) != 0)
      {
        v50 = *(_QWORD *)(a1 + 88);
        v51 = 16800;
        goto LABEL_294;
      }
      if ((v188 & 0x80) == 0)
      {
        if ((v188 & 4) != 0)
        {
          v50 = *(_QWORD *)(a1 + 88);
          v51 = 16576;
        }
        else if ((v188 & 0x200) != 0)
        {
          v50 = *(_QWORD *)(a1 + 88);
          v51 = 16808;
        }
        else
        {
          if ((v188 & 0x400) == 0)
          {
            v50 = *(_QWORD *)(a1 + 88);
            if ((*(_QWORD *)(*(_QWORD *)(a1 + 72) + 140) & 0x200000000000000) == 0)
            {
              v51 = 16568;
              goto LABEL_294;
            }
            goto LABEL_143;
          }
          v50 = *(_QWORD *)(a1 + 88);
          v51 = 16584;
        }
LABEL_294:
        v126 = *(_QWORD *)(v50 + v51);
        v87 = sub_22EB2773C((_QWORD *)a1, v177, v126, *(_DWORD *)a2);
        v127 = *(_QWORD *)(a1 + 88);
        if (v126 == *(_QWORD *)(v127 + 16568))
        {
          v128 = *(_QWORD *)(a1 + 72);
          if ((*(_QWORD *)(v128 + 140) & 0x200000000000000) != 0)
          {
            if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v126 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                            + 16) & 0xFF80000) != 0x6980000)
              v87 = sub_22E90092C(a1, v87, *(_QWORD *)(v127 + 16560), 42, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
          }
          else if ((*(_DWORD *)(v128 + 52) & 0x40000000) != 0
                 && !sub_22F420564(a1 + 24, (uint64_t)"cl_khr_fp64", 11, v128))
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0x1979u, 0, (uint64_t)&v160);
            v129 = *(_QWORD *)(a1 + 72);
            v130 = *(_QWORD *)(v129 + 56);
            if ((v130 & 0x100000000) != 0)
            {
              if (*(_DWORD *)(v129 + 64) == 100)
                LODWORD(v130) = 200;
              else
                LODWORD(v130) = 300;
            }
            LOBYTE(v163) = v130 > 0x12B;
            sub_22E894E38((uint64_t)&v160, (unsigned __int8 *)&v163);
            sub_22E903BEC((unsigned int *)&v160);
            v87 = sub_22E90092C(a1, v87, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16560), 42, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
          }
        }
        goto LABEL_305;
      }
      v50 = *(_QWORD *)(a1 + 88);
LABEL_143:
      v51 = 16560;
      goto LABEL_294;
    }
    if ((v188 & 0x1000) != 0)
    {
      if ((v188 & 0x40) == 0)
      {
        v70 = *(_QWORD *)(a1 + 88);
        v71 = (unint64_t *)(v70 + 16608);
        v72 = 16616;
        goto LABEL_146;
      }
      v74 = *(_QWORD *)(a1 + 88);
      v75 = 16600;
    }
    else
    {
      if ((v188 & 0x800) == 0)
      {
        v59 = 0;
        goto LABEL_156;
      }
      if ((v188 & 0x40) == 0)
      {
        v70 = *(_QWORD *)(a1 + 88);
        v71 = (unint64_t *)(v70 + 16656);
        v72 = 16664;
LABEL_146:
        v73 = (unint64_t *)(v70 + v72);
        if ((v188 & 4) == 0)
          v73 = v71;
        goto LABEL_155;
      }
      v74 = *(_QWORD *)(a1 + 88);
      v75 = 16648;
    }
    v73 = (unint64_t *)(v74 + v75);
LABEL_155:
    v59 = *v73;
LABEL_156:
    if ((v188 & 2) != 0)
      v59 = sub_22EF67D20(*(_QWORD *)(a1 + 88), v59);
    v78 = sub_22F36F89C(*(_QWORD *)(a1 + 88), v59);
    LODWORD(v164) = sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *(_QWORD *)(v59 & 0xFFFFFFFFFFFFFFF0));
    if (v164 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v163);
    else
      v163 = 0;
    v79 = sub_22F14B48C((uint64_t)v177, (llvm::APInt *)&v163, v78);
    v80 = (int)v164;
    if (v164 > 0x40)
      v81 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v163) == v80;
    else
      v81 = v163 == 0;
    v82 = v81;
    sub_22F36F9F4(*(_QWORD *)(a1 + 88), v59);
    sub_22F26307C(&v160, (uint64_t)&v146);
    if (v161 >= 0x41 && v160)
      MEMORY[0x2348A0E84](v160, 0x1000C8000313F17);
    if ((v188 & 0x800) == 0)
      goto LABEL_185;
    v145 = DWORD2(v146);
    if (DWORD2(v146) > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v144, (const llvm::APInt *)&v146);
    else
      v144 = (char *)v146;
    llvm::APInt::operator+=();
    v83 = v145;
    LODWORD(v161) = v145;
    v84 = v144;
    v160 = v144;
    v145 = 0;
    if (v164 > 0x40)
    {
      if (!llvm::APInt::equalSlowCase((llvm::APInt *)&v163, (const llvm::APInt *)&v160))
        goto LABEL_175;
    }
    else if (v163 != v144)
    {
LABEL_175:
      v85 = 0;
LABEL_178:
      if (v83 >= 0x41)
      {
        if (v84)
        {
          MEMORY[0x2348A0E84](v84, 0x1000C8000313F17);
          if (v145 >= 0x41)
          {
            if (v144)
              MEMORY[0x2348A0E84](v144, 0x1000C8000313F17);
          }
        }
      }
      if (v85)
      {
        llvm::APInt::operator--();
LABEL_190:
        v87 = sub_22F3C13FC(*(_QWORD *)(a1 + 88), (uint64_t)&v163, v59, *(_DWORD *)a2, v78);
        if (DWORD2(v146) >= 0x41 && (_QWORD)v146)
          MEMORY[0x2348A0E84](v146, 0x1000C8000313F17);
        goto LABEL_290;
      }
LABEL_185:
      if ((int)llvm::APInt::compare((llvm::APInt *)&v163, (const llvm::APInt *)&v146) > 0)
        v86 = 1;
      else
        v86 = v79;
      if (v86 == 1)
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a2, 0x4Cu, 0, (uint64_t)v143);
        sub_22E903BEC(v143);
      }
      goto LABEL_190;
    }
    v85 = v82 ^ 1 | v79;
    goto LABEL_178;
  }
  a3 = 1;
LABEL_16:
  if (v190 != v192)
    free(v190);
  return a3;
}

uint64_t sub_22EB2773C(_QWORD *a1, _QWORD *a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  llvm::APFloatBase *v17;
  uint64_t v18;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[80];
  void *v29;
  __int128 v30;
  _BYTE v31[24];
  _BYTE v32[8];
  uint64_t v33;
  _QWORD v34[3];

  v5 = a3;
  v34[2] = *MEMORY[0x24BDAC8D0];
  v25 = a3;
  v8 = sub_22EF5B2E0(a1[11], a3);
  sub_22E99C474((llvm::APFloatBase *)&v33, v8);
  v9 = sub_22F14B2C0(a2);
  v10 = v9;
  if ((v9 & 4) != 0)
  {
    v29 = v31;
    v30 = xmmword_22F45EE20;
    v20 = llvm::APFloatBase::PPCDoubleDouble((llvm::APFloatBase *)v9);
    if (v20 == v8)
      llvm::detail::DoubleAPFloat::DoubleAPFloat();
    else
      llvm::detail::IEEEFloat::IEEEFloat();
    sub_22E54C37C(&v26);
    sub_22E99A6BC((llvm::APFloatBase *)&v26);
    if (v20 == v27)
      sub_22E463170((llvm::APFloatBase *)v28);
    else
      llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v27);
    v21 = 6567;
    goto LABEL_19;
  }
  if ((v9 & 8) != 0)
  {
    v11 = v33;
    v12 = llvm::APFloatBase::PPCDoubleDouble((llvm::APFloatBase *)v9);
    v13 = (_BYTE *)v34[0];
    if (v12 != v11)
      v13 = v32;
    if ((v13[28] & 7) == 3)
    {
      v22 = v12;
      v29 = v31;
      v30 = xmmword_22F45EE20;
      if (v12 == v8)
        llvm::detail::DoubleAPFloat::DoubleAPFloat();
      else
        llvm::detail::IEEEFloat::IEEEFloat();
      sub_22F33030C(&v26);
      sub_22E99A6BC((llvm::APFloatBase *)&v26);
      if (v22 == v27)
        sub_22E463170((llvm::APFloatBase *)v28);
      else
        llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v27);
      v21 = 6568;
LABEL_19:
      sub_22E8FCA40(a1, a4, v21, 0, (uint64_t)&v26);
      v23 = sub_22E8901B8((uint64_t)&v26, &v25);
      v24[0] = v29;
      v24[1] = v30;
      sub_22F2F2210(v23, (uint64_t)v24);
      sub_22E903BEC((unsigned int *)&v26);
      if (v29 != v31)
        free(v29);
      v5 = v25;
    }
  }
  v14 = a1[11];
  v15 = a4;
  v16 = sub_22E3CD3D4(v14 + 2032, 32, 3);
  v17 = (llvm::APFloatBase *)sub_22EFF9470(v16, v14, (uint64_t)v32, v10 == 0, v5, v15);
  v18 = v33;
  if (llvm::APFloatBase::PPCDoubleDouble(v17) == v18)
    sub_22E463170((llvm::APFloatBase *)v34);
  else
    llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v33);
  return v16;
}

unint64_t sub_22EB27A20(_QWORD *a1, int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  _BOOL4 v9;
  _QWORD *v10;
  uint64_t v11;

  v11 = a4;
  if ((*(_DWORD *)(a1[9] + 52) & 0x4000) != 0 && (*((_BYTE *)a1 + 57) & 1) != 0 && (*(_DWORD *)a4 & 0x300) != 0x100)
  {
    v10 = a1;
    v9 = sub_22F110DD0(*(_QWORD *)(*(_QWORD *)(a4 + 8) & 0xFFFFFFFFFFFFFFF0));
    a1 = v10;
    if (v9)
      return sub_22EB27ADC(v10, a3, 0x516u, &v11, 1uLL);
  }
  v7 = sub_22E3CD3D4(a1[11] + 2032, 32, 3);
  return sub_22EB54C14(v7, a2, a3, (int *)a4);
}

unint64_t sub_22EB27ADC(_QWORD *a1, unsigned int a2, unsigned int a3, uint64_t *a4, unint64_t a5)
{
  uint64_t v9;
  const char **v10;
  const char *v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _BYTE v34[64];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unsigned int v40;
  _QWORD v41[3];
  __int16 v42;
  int v43;
  char v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v9 = a1[11];
  if (a3 > 0x7E7)
  {
    v22 = *(uint64_t **)(v9 + 15208);
    v23 = v22[1];
    if (v23 + 2024 <= (unint64_t)a3)
    {
      v24 = a3 - v23 - 2024;
      v25 = v22[2];
    }
    else
    {
      v24 = a3 - 2024;
      v25 = *v22;
    }
    v10 = (const char **)(v25 + 48 * v24);
  }
  else
  {
    v10 = (const char **)&(&off_24FAC8C40)[6 * a3];
  }
  v11 = *v10;
  if (*v10)
    v12 = strlen(*v10);
  else
    v12 = 0;
  v13 = sub_22E3CB704(*(llvm::StringMapImpl **)(v9 + 15192), v11, v12);
  v31 = 0;
  v32 = v34;
  v33 = 0x800000000;
  v35 = 0;
  v36 = 0;
  v37 = 0;
  v38 = a1;
  v39 = v13;
  v40 = a2;
  sub_22EFC6D6C((uint64_t)v41, v13);
  v41[1] = 0;
  v41[2] = 0;
  v42 = 0;
  v43 = 257;
  v44 = 0;
  sub_22EC56024((uint64_t)&v31);
  sub_22EC63520(a1, &v31, a1[418], 1, 0);
  v14 = 0;
  if ((_DWORD)v31 == 2)
  {
    v15 = *(_QWORD *)v32 & 0xFFFFFFFFFFFFFFFCLL;
    v16 = *(_DWORD *)(v15 + 28);
    if ((v16 & 0x7Fu) <= 0x2F && ((1 << (v16 & 0x7F)) & 0xC00000060000) != 0)
    {
      v15 = sub_22EFBAEA4(v15);
      v16 = *(_DWORD *)(v15 + 28);
    }
    if ((v16 & 0x7Eu) - 52 >= 6)
      v14 = 0;
    else
      v14 = v15;
  }
  v18 = *(_QWORD *)(v14 + 48);
  v28 = *(_QWORD *)(v14 + 40);
  v29 = a2;
  sub_22EFC6D6C((uint64_t)&v30, v28);
  v19 = sub_22EB21CE8((uint64_t)a1, v14, v18, 1, (uint64_t)&v28, 0, 0, 0, 0, 0);
  LOWORD(v27) = 0;
  v20 = sub_22EB1CFA4((uint64_t)a1, 0, v19 & 0xFFFFFFFFFFFFFFFELL, a2, a4, a5, a2, 0, v27);
  if (BYTE1(v43))
  {
    if ((_DWORD)v31 == 5)
    {
      sub_22EC64D18(v38, (uint64_t)&v31);
    }
    else if (v36 && (*(_DWORD *)(v38[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v38, (uint64_t)&v31);
    }
  }
  if (v35)
  {
    v26 = sub_22EC6CBD0(v35);
    MEMORY[0x2348A0E9C](v26, 0x10E0C409F09D3C3);
  }
  if (v32 != v34)
    free(v32);
  return v20 & 0xFFFFFFFFFFFFFFFELL;
}

uint64_t sub_22EB27D8C(uint64_t a1, unsigned __int8 *a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v9;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t result;
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int *v33;
  unsigned int v34;
  uint64_t v35;
  unsigned __int8 *v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t *v46;
  uint64_t v47;
  unsigned int v48[24];
  uint64_t (**v49)();
  int v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55[24];

  v9 = (unint64_t)a2;
  v11 = *((_QWORD *)a2 + 1);
  if (a3 <= 8 && ((1 << a3) & 0x107) != 0)
  {
    sub_22EB4E1D8((unsigned __int8 *)a1, a2);
    if ((v9 & 1) != 0)
      return 1;
    v9 &= ~1uLL;
  }
  if (a3 <= 8 && ((1 << a3) & 0x107) != 0)
  {
    if (*(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956)
      && (*(_BYTE *)(v9 + 1) & 0x40) == 0
      && sub_22F0005B0(v9, *(_QWORD *)(a1 + 88), 0, a4, a5, a6, a7, a8))
    {
      sub_22EFF605C(v9);
      sub_22E8FCA40((_QWORD *)a1, v12, 0x1B4Bu, 0, (uint64_t)v55);
      sub_22E903BEC(v55);
    }
    if (a3 == 8)
    {
      sub_22EFF605C(v9);
      v14 = v13;
      sub_22F0D4E74(v9);
      return sub_22EB282C4((_QWORD *)a1, v11, v14, v15);
    }
  }
  sub_22EFF605C(v9);
  v18 = v17;
  sub_22F0D4E74(v9);
  result = sub_22EB28388((_QWORD *)a1, v11, v18, v19, a3);
  if (!(_DWORD)result)
    return result;
  if (a3 - 1 > 1)
  {
    v23 = off_24FCAED20[a3];
    v54 = (uint64_t)v23;
    sub_22F0D4E74(v9);
    v53 = v47;
    v50 = 4706;
    v51 = &v54;
    v52 = &v53;
    v49 = off_24FAB8460;
    if ((sub_22F34BAD0(a1, v9) & 1) != 0)
      return 1;
    goto LABEL_16;
  }
  sub_22EFF605C(v9);
  v21 = v20;
  v22 = sub_22EF5BA38(*(_QWORD *)(a1 + 88), *(_QWORD *)(v9 + 8));
  v23 = off_24FCAED20[a3];
  v54 = (uint64_t)v23;
  sub_22F0D4E74(v9);
  v53 = v24;
  v50 = 4706;
  v51 = &v54;
  v52 = &v53;
  v49 = off_24FAB8460;
  if ((sub_22EE8B0B0(a1, v21, v22) & 1) != 0)
    return 1;
LABEL_16:
  v25 = *(_QWORD *)(v9 + 8);
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v25 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 25 <= 1)
  {
    sub_22EFF605C(v9);
    sub_22E8FCA40((_QWORD *)a1, v26, 0x1261u, 0, (uint64_t)&v49);
    v54 = (uint64_t)v23;
    v27 = sub_22E8AECC4((uint64_t)&v49, &v54);
    sub_22F0D4E74(v9);
    v53 = v28;
    sub_22E8906A0(v27, &v53);
    sub_22E903BEC((unsigned int *)&v49);
    return 1;
  }
  sub_22EFF605C(v9);
  v30 = v29;
  sub_22F0D4E74(v9);
  result = sub_22EB28500((_QWORD *)a1, v25, v30, v31, a3);
  if (!a3 && (result & 1) == 0)
  {
    v32 = (unsigned int *)v9;
    do
    {
      v33 = v32;
      v34 = *(unsigned __int8 *)v32;
      if (v34 > 0xD5)
      {
        if (v34 == 233)
        {
          if ((*v32 & 0x7C0000) != 0x300000)
            goto LABEL_46;
          v34 = *v32;
          v36 = (unsigned __int8 *)(v32 + 4);
        }
        else
        {
          if (v34 != 214)
            break;
          v36 = (unsigned __int8 *)(v32 + 6);
        }
      }
      else if (v34 == 155)
      {
        if ((**((_DWORD **)v32 + 2) & 0x18000) != 0)
          goto LABEL_46;
        v36 = (unsigned __int8 *)(v32 + 6);
        if (!*((_BYTE *)v33 + 48))
          v36 = (unsigned __int8 *)(v33 + 8);
        v34 = 155;
      }
      else
      {
        if (v34 != 176)
          break;
        v35 = v32[5];
        if ((_DWORD)v35 == -1)
          goto LABEL_46;
        v36 = (unsigned __int8 *)&v32[2 * v35 + 10];
        v34 = 176;
      }
      v32 = *(unsigned int **)v36;
    }
    while (v32 != v33);
    if (v34 == 161)
    {
      v37 = (uint64_t *)(v33 + 4);
      v38 = *v33;
      v39 = (uint64_t *)&v33[4 * ((v38 >> 18) & 1) + 8];
      if ((v38 & 0x100000) == 0)
        v39 = v37;
      v40 = *v39;
      if (*v39)
      {
        if ((*(_DWORD *)(v40 + 28) & 0x7F) == 0x40)
        {
          v41 = sub_22EFBF144(v40);
          v53 = *(_QWORD *)(v40 + 48);
          v54 = v41;
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v53 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) == 39
            && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16) & 0xFEu)
             - 2 <= 3)
          {
            sub_22EFF605C(v9);
            sub_22E8FCA40((_QWORD *)a1, v42, 0x1B4Eu, 0, (uint64_t)&v49);
            v43 = sub_22E8901B8((uint64_t)&v49, &v53);
            sub_22E8901B8(v43, &v54);
            sub_22E903BEC((unsigned int *)&v49);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v40 + 24), 0x64u, 0, (uint64_t)v48);
            sub_22E903BEC(v48);
          }
        }
      }
    }
    do
    {
LABEL_46:
      v44 = v9;
      LODWORD(v45) = *(unsigned __int8 *)v9;
      if (v45 > 0xD5)
      {
        if ((_DWORD)v45 == 233)
        {
          LOBYTE(v45) = *(_DWORD *)v9;
          if ((*(_DWORD *)v9 & 0x7C0000) != 0x300000)
            break;
          v46 = (unint64_t *)(v9 + 16);
        }
        else
        {
          if ((_DWORD)v45 != 214)
            break;
          v46 = (unint64_t *)(v9 + 24);
        }
      }
      else if ((_DWORD)v45 == 155)
      {
        if ((**(_DWORD **)(v9 + 16) & 0x18000) != 0)
          return 0;
        v46 = (unint64_t *)(v9 + 24);
        if (!*(_BYTE *)(v9 + 48))
          v46 = (unint64_t *)(v9 + 32);
        LOBYTE(v45) = -101;
      }
      else
      {
        if ((_DWORD)v45 != 176)
          break;
        v45 = *(unsigned int *)(v9 + 20);
        if ((_DWORD)v45 == -1)
          return 0;
        v46 = (unint64_t *)(v9 + 8 * v45 + 40);
        LOBYTE(v45) = -80;
      }
      v9 = *v46;
    }
    while (*v46 != v44);
    if ((v45 & 0xFE) == 0x70)
    {
      sub_22EB285C0((unsigned int *)a1, *(_DWORD *)(v44 + 4), *(_QWORD *)(v44 + 8), *(unsigned __int8 **)(v44 + 16));
      sub_22EB285C0((unsigned int *)a1, *(_DWORD *)(v44 + 4), *(_QWORD *)(v44 + 8), *(unsigned __int8 **)(v44 + 24));
    }
    return 0;
  }
  return result;
}

uint64_t sub_22EB282C4(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v10;
  unsigned int v11[24];
  uint64_t v12;
  uint64_t v13;

  v12 = a4;
  v13 = a2;
  v6 = a2 & 0xFFFFFFFFFFFFFFF0;
  if (sub_22F110E9C(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0)))
    return 0;
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 8) & 0xFFFFFFFFFFFFFFF0);
  v8 = v7 && (*(_DWORD *)(v7 + 16) & 0xFF800FF) == 86507531;
  if (v8 || *(_DWORD *)(v7 + 16) - 55 < 2)
    return 0;
  sub_22E8FCA40(a1, a3, 0x140Du, 0, (uint64_t)v11);
  v10 = sub_22E8901B8((uint64_t)v11, &v13);
  sub_22E8906A0(v10, &v12);
  sub_22E903BEC(v11);
  return 1;
}

uint64_t sub_22EB28388(_QWORD *a1, uint64_t a2, int a3, uint64_t a4, unsigned int a5)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int v18;
  uint64_t v19;
  char *v20;
  unsigned int v21[24];
  uint64_t v22;

  v22 = a4;
  v6 = a1[9];
  if ((*(_BYTE *)(v6 + 1) & 1) != 0)
  {
    if (a5 == 6)
    {
      v14 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
      v15 = *(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (!v15 || (*(_DWORD *)(v15 + 16) & 0xFF800FF) != 86507531)
        return sub_22F1110EC(v14, 0);
    }
    return 1;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_DWORD *)(v7 + 16);
  if (v7)
    v9 = (v8 & 0xFF800FF) == 86507531;
  else
    v9 = 0;
  v10 = v9;
  if (!v9 && *(_DWORD *)(v7 + 16) - 25 > 1)
    return 1;
  if (a5 <= 7)
  {
    v11 = 1;
    if (((1 << a5) & 0xB0) != 0)
      return v11;
  }
  if (a5 > 2 || v8 - 25 > 1)
  {
    if (v10)
    {
      if ((*(_DWORD *)(v6 + 52) & 0x40000000) != 0)
        v18 = 4421;
      else
        v18 = 5348;
      v12 = a3;
      v13 = v18;
      goto LABEL_26;
    }
    return 1;
  }
  v12 = a3;
  v13 = 5347;
LABEL_26:
  sub_22E8FCA40(a1, v12, v13, 0, (uint64_t)v21);
  v20 = off_24FCAED20[a5];
  v19 = sub_22E8AECC4((uint64_t)v21, (uint64_t *)&v20);
  sub_22E8906A0(v19, &v22);
  sub_22E903BEC(v21);
  return 0;
}

uint64_t sub_22EB28500(_QWORD *a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  unsigned int v11[24];
  uint64_t v12;
  uint64_t v13;

  v12 = a4;
  v13 = a2;
  v5 = 0;
  if (((1 << *(_DWORD *)(a1[9] + 400)) & 0xDD) != 0)
  {
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                          + 16)
       - 33 > 1)
    {
      return 0;
    }
    else
    {
      sub_22E8FCA40(a1, a3, 0x1264u, 0, (uint64_t)v11);
      v7 = sub_22E8901B8((uint64_t)v11, &v13);
      v10 = a5 == 0;
      v8 = sub_22E894E38(v7, (unsigned __int8 *)&v10);
      sub_22E8906A0(v8, &v12);
      sub_22E903BEC(v11);
      return 1;
    }
  }
  return v5;
}

unsigned int *sub_22EB285C0(unsigned int *result, int a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11[24];

  if (*((_QWORD *)a4 + 1) == a3 && *a4 == 153 && (*(_DWORD *)a4 & 0x1FC0000) == 0x300000)
  {
    sub_22E8FCA40(result, a2, 0x1B4Du, 0, (uint64_t)v11);
    sub_22F0D4E74((uint64_t)a4);
    v10 = v5;
    v6 = sub_22E8906A0((uint64_t)v11, &v10);
    v9 = *((_QWORD *)a4 + 1);
    v7 = sub_22E8901B8(v6, &v9);
    v8 = *(_QWORD *)(*((_QWORD *)a4 + 2) + 8);
    sub_22E8901B8(v7, &v8);
    return sub_22E903BEC(v11);
  }
  return result;
}

uint64_t sub_22EB28664(uint64_t a1, unint64_t *a2, unsigned int a3, unsigned int a4, uint64_t a5)
{
  uint64_t *v8;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  uint64_t v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unsigned int v41;
  BOOL v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t (***v49)();
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char *v56;
  int v57;
  uint64_t v58;
  int v59;
  BOOL v60;
  uint64_t (**v61)();
  int v62;
  uint64_t *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;

  if (!a2)
    return 1;
  v8 = (uint64_t *)a2;
  v10 = *a2;
  v11 = *a2 & 0xFFFFFFFFFFFFFFF0;
  v12 = *(_QWORD *)v11;
  v13 = *(_DWORD *)(*(_QWORD *)v11 + 16);
  if ((v13 & 0x400) == 0)
  {
    v58 = a5;
    v14 = *(_QWORD *)v11;
    v15 = *(_DWORD *)(*(_QWORD *)v11 + 16);
    if ((v15 & 0x400) != 0)
    {
LABEL_27:
      v12 = *(_QWORD *)v11;
      v13 = *(_DWORD *)(*(_QWORD *)v11 + 16);
      goto LABEL_28;
    }
    if ((*(_DWORD *)(*(_QWORD *)v11 + 16) & 0xFE) != 0x28)
    {
      v16 = v10;
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_15;
      v14 = sub_22F10CF48(v14);
      v16 = v10;
      if (!v14)
        goto LABEL_15;
      v15 = *(_DWORD *)(v14 + 16);
    }
    if ((v15 & 0x100000) != 0)
    {
      do
      {
        while (1)
        {
          v14 = *(_QWORD *)(*(_QWORD *)(v14 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v14)
            break;
          v17 = *(_DWORD *)(v14 + 16);
          if ((v17 & 0xFE) != 0x28)
            break;
          if ((v17 & 0x100000) == 0)
            goto LABEL_14;
        }
        v14 = sub_22F10CF48(v14);
      }
      while ((*(_DWORD *)(v14 + 16) & 0x100000) != 0);
    }
LABEL_14:
    v16 = *(_QWORD *)(v14 + 32);
LABEL_15:
    switch(a4)
    {
      case 1u:
      case 2u:
      case 9u:
        v16 = sub_22EF5BA38(*(_QWORD *)(a1 + 88), v16);
        if (a4 == 3)
          goto LABEL_24;
        if (a4 != 8)
          goto LABEL_20;
        goto LABEL_18;
      case 3u:
LABEL_24:
        v65 = a5;
        v66 = v16;
        v21 = v16 & 0xFFFFFFFFFFFFFFF0;
        v22 = *(_QWORD *)v21;
        v23 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        if ((v23 - 25) < 2)
          goto LABEL_27;
        if ((*(_BYTE *)(v22 + 16) == 39 || v23 == 39 && (v22 = sub_22F10CF48(v22)) != 0)
          && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                      + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 25 < 2)
        {
          goto LABEL_27;
        }
        v46 = *(_QWORD *)v21;
        if (*(_QWORD *)v21)
        {
          v47 = *(_DWORD *)(v46 + 16);
          if ((v47 & 0xFE) == 0x28)
            goto LABEL_99;
        }
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v46 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
        {
          v46 = sub_22F10CF48(v46);
          if (v46)
          {
            v47 = *(_DWORD *)(v46 + 16);
LABEL_99:
            if ((v47 & 0x100000) != 0)
            {
              do
              {
                v46 = *(_QWORD *)(*(_QWORD *)(v46 + 32) & 0xFFFFFFFFFFFFFFF0);
                if (v46)
                {
                  v57 = *(_DWORD *)(v46 + 16);
                  if ((v57 & 0xFE) == 0x28)
                    continue;
                }
                v46 = sub_22F10CF48(v46);
                v57 = *(_DWORD *)(v46 + 16);
              }
              while ((v57 & 0x100000) != 0);
            }
            if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v46 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                          + 8) & 0xFFFFFFFFFFFFFFF0)
                                                  + 16)
               - 25 < 2)
              goto LABEL_27;
          }
        }
        if (((v48 = *(_QWORD *)v21) != 0 && *(_BYTE *)(v48 + 16) == 31
           || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v48 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 31
           && (v48 = sub_22F10CF48(v48)) != 0)
          && sub_22F28C8B4(v48))
        {
          goto LABEL_27;
        }
        sub_22E8FCA40((_QWORD *)a1, a3, 0x11FEu, 0, (uint64_t)&v61);
        v49 = &v61;
        goto LABEL_79;
      case 8u:
LABEL_18:
        if ((sub_22EB282C4((_QWORD *)a1, v16, a3, a5) & 1) != 0)
          return 1;
        goto LABEL_27;
      default:
LABEL_20:
        if (!sub_22EB28388((_QWORD *)a1, v16, a3, a5, a4))
          goto LABEL_27;
        v18 = off_24FCAED20[a4];
        v66 = (uint64_t)v18;
        v62 = 4706;
        v63 = &v66;
        v64 = &v58;
        v61 = off_24FAB8460;
        if ((sub_22EE8B0B0(a1, a3, v16) & 1) != 0)
          return 1;
        if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 25 <= 1)
        {
          sub_22E8FCA40((_QWORD *)a1, a3, 0x1261u, 0, (uint64_t)&v61);
          v66 = (uint64_t)v18;
          v19 = sub_22E8AECC4((uint64_t)&v61, &v66);
          v20 = &v58;
LABEL_80:
          sub_22E8906A0(v19, v20);
          sub_22E903BEC((unsigned int *)&v61);
          return 1;
        }
        v51 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFF0);
        if ((sub_22EB28500((_QWORD *)a1, v16, a3, v58, a4) & 1) != 0)
          return 1;
        if ((a4 & 0xFFFFFFFE) == 4)
        {
          v65 = v58;
          v66 = v16;
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v51 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 5)
          {
            sub_22E8FCA40((_QWORD *)a1, a3, 0xE68u, 0, (uint64_t)&v61);
            v60 = a4 != 4;
            v52 = sub_22E894E38((uint64_t)&v61, (unsigned __int8 *)&v60);
            v59 = 0;
            v49 = (uint64_t (***)())sub_22E8900C4(v52, &v59);
LABEL_79:
            v19 = sub_22E8901B8((uint64_t)v49, &v66);
            v20 = &v65;
            goto LABEL_80;
          }
        }
        else if (a4 == 7 || a4 == 6)
        {
          v65 = v58;
          v66 = v16;
          v53 = *(_QWORD *)(*(_QWORD *)(*v51 + 8) & 0xFFFFFFFFFFFFFFF0);
          v54 = v53 && (*(_DWORD *)(v53 + 16) & 0xFF800FF) == 86507531;
          if (v54 || sub_22F1110EC(*v51, 0))
          {
            sub_22E8FCA40((_QWORD *)a1, a3, 0x1262u, 0, (uint64_t)&v61);
            v55 = sub_22E8901B8((uint64_t)&v61, &v66);
            sub_22E8906A0(v55, &v65);
            sub_22E903BEC((unsigned int *)&v61);
          }
        }
        break;
    }
    goto LABEL_27;
  }
LABEL_28:
  if ((v13 & 0x800) != 0 && *(_DWORD *)(a1 + 1904) >= 2u)
  {
    v24 = sub_22F10D4DC(v12);
    if (v24)
    {
      v25 = *(unsigned int *)(a1 + 1904);
      if ((_DWORD)v25 != 1)
      {
        v26 = v24;
        v27 = *(_QWORD *)(a1 + 1896);
        for (i = 8 * v25 - 8; i; i -= 8)
        {
          v29 = *(_QWORD *)(v27 + i);
          v30 = *(_DWORD *)(v29 + 8) & 7;
          if (v29)
            v31 = (*(_DWORD *)(v29 + 8) & 7u) - 4 >= 0xFFFFFFFD;
          else
            v31 = 0;
          if (!v31)
            break;
          if (v30 == 1 || v30 == 3)
          {
            v34 = *(_QWORD *)(v29 + 1424);
            if (!v34)
              continue;
            v33 = v34 + 40;
          }
          else
          {
            if (v30 != 2)
              continue;
            v32 = *(_QWORD *)(v29 + 1488);
            if (!v32)
              continue;
            v33 = v32 + 72;
          }
          v35 = *(_QWORD *)(v26 + 24);
          v36 = *(_QWORD *)(v35 + 16);
          v37 = v36 & 0xFFFFFFFFFFFFFFF8;
          if ((v36 & 4) != 0)
            v37 = *(_QWORD *)(v37 + 8);
          if (v37 == v33 && (*(_QWORD *)(v35 + 8) > 7uLL || *(_QWORD *)(v33 + 24) == v35))
            break;
          sub_22EB28D0C(*(_OWORD **)(a1 + 88), v10, v29);
        }
      }
    }
  }
  if (a4 == 6)
  {
    v40 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16816);
  }
  else
  {
    if (a4 == 4)
    {
      v38 = sub_22EF64524(*(_QWORD *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408) | 1);
      v39 = sub_22EF5B848(*(_QWORD *)(a1 + 88), v38, 0);
    }
    else
    {
      v39 = sub_22EF67C8C(*(_QWORD *)(a1 + 88));
    }
    v40 = v39;
  }
  v41 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
  v43 = v41 <= 3 && v41 != 2 && a4 == 0;
  if (v43 && (*(_BYTE *)(*(_QWORD *)(*v8 & 0xFFFFFFFFFFFFFFF0) + 17) & 8) != 0)
    v8 = (uint64_t *)sub_22F32D92C(a1, v8);
  v44 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 32, 3);
  *(_BYTE *)v44 = -24;
  if (byte_255E04EB3)
  {
    v56 = sub_22F0D3748(232);
    ++*((_DWORD *)v56 + 2);
  }
  v45 = *(_DWORD *)v44;
  *(_DWORD *)(v44 + 24) = a3;
  *(_DWORD *)(v44 + 28) = HIDWORD(a5);
  *(_DWORD *)v44 = v45 & 0xFF8000FF | ((a4 & 0xF) << 18) | 0x400000;
  *(_QWORD *)(v44 + 8) = v40;
  *(_QWORD *)(v44 + 16) = v8;
  *(_DWORD *)v44 = *(_DWORD *)v44 & 0xFFFC1FFF | ((sub_22EFB23D4(v44) & 0x1F) << 13);
  return v44;
}

_OWORD *sub_22EB28D0C(_OWORD *result, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char v21;

  v4 = (uint64_t)result;
  v5 = a3 + 1264;
  do
  {
    v6 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    v7 = *(_DWORD *)(v6 + 16);
    switch((char)v7)
    {
      case 0:
      case 2:
      case 4:
      case 6:
      case 10:
      case 31:
      case 39:
        goto LABEL_3;
      case 1:
        v17 = *(_QWORD *)(v6 + 40);
        result = (_OWORD *)sub_22F114F34(&v17);
        a2 = *(_QWORD *)(*(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0) + 32);
        continue;
      case 3:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 27:
      case 30:
      case 36:
      case 42:
      case 47:
      case 52:
        return result;
      case 5:
        result = *(_OWORD **)(v6 + 40);
        if (!result)
          goto LABEL_3;
        v9 = *(unsigned int *)(a3 + 1272);
        if (!(_DWORD)v9)
          goto LABEL_23;
        v10 = *(_QWORD *)(a3 + 1264);
        v11 = 32 * v9;
        while ((~*(unsigned __int8 *)(v10 + 24) & 3) != 0 || *(_QWORD *)v10 != v6)
        {
          v10 += 32;
          v11 -= 32;
          if (!v11)
          {
LABEL_23:
            if ((*(_DWORD *)(a3 + 8) & 6) == 2)
            {
              sub_22EFF605C((uint64_t)result);
              v13 = v12;
              v14 = sub_22EF67C8C(v4);
              v17 = v6;
              v18 = v13;
              v19 = 0;
              v20 = v14;
              v21 = v21 & 0x80 | 3;
              result = (_OWORD *)sub_22E78DF7C(v5, (unint64_t)&v17, 1);
              v15 = (_OWORD *)(*(_QWORD *)(a3 + 1264) + 32 * *(unsigned int *)(a3 + 1272));
              v16 = result[1];
              *v15 = *result;
              v15[1] = v16;
              ++*(_DWORD *)(a3 + 1272);
            }
            goto LABEL_3;
          }
        }
        goto LABEL_3;
      case 7:
      case 8:
      case 22:
      case 23:
      case 28:
      case 37:
      case 43:
      case 49:
      case 51:
      case 54:
        result = (_OWORD *)sub_22F4098F0(a2, v4);
        a2 = (unint64_t)result;
        continue;
      case 13:
        if ((*(_BYTE *)(*(_QWORD *)(v6 + 24) + 1) & 0x40) == 0)
          goto LABEL_3;
        a2 = v6 & 0xFFFFFFFFFFFFFFF0;
        continue;
      case 14:
      case 15:
      case 25:
      case 26:
        a2 = *(_QWORD *)(v6 + 24);
        continue;
      case 40:
      case 41:
        if ((v7 & 0x100000) == 0)
          goto LABEL_3;
        break;
      case 48:
        a2 = *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8);
        continue;
      case 50:
        a2 = *(_QWORD *)((*(_QWORD *)(*(_QWORD *)(v6 + 24) + 80) & 0xFFFFFFFFFFFFFFF8)
                       + ((2 * *(_QWORD *)(*(_QWORD *)(v6 + 24) + 80)) & 8));
        continue;
      case 53:
        a2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 32) + 64) + 48) & 0xFFFFFFFFFFFFFFF0;
        continue;
      default:
        continue;
    }
    do
    {
      while (1)
      {
        v6 = *(_QWORD *)(*(_QWORD *)(v6 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v6)
          break;
        v8 = *(_DWORD *)(v6 + 16);
        if ((v8 & 0xFE) != 0x28)
          break;
        if ((v8 & 0x100000) == 0)
          goto LABEL_3;
      }
      result = (_OWORD *)sub_22F10CF48(v6);
      v6 = (uint64_t)result;
    }
    while ((result[1] & 0x100000) != 0);
LABEL_3:
    a2 = *(_QWORD *)(v6 + 32);
  }
  while (a2 >= 0x10 && (*(_BYTE *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 17) & 8) != 0);
  return result;
}

uint64_t sub_22EB28F24(_QWORD *a1, uint64_t a2, int a3, unsigned int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  int v20;
  uint64_t v21;
  unsigned __int8 **v22;
  uint64_t v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t *v29;
  int v30;
  unsigned int *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v42;
  int v43;
  _BYTE v44[96];
  uint64_t v45;
  int v46;
  unsigned int v47[24];

  v7 = sub_22EB19A28(a1);
  if ((v7 & 1) != 0)
    return 1;
  v13 = v7 & 0xFFFFFFFFFFFFFFFELL;
  if ((*(_DWORD *)(v7 & 0xFFFFFFFFFFFFFFFELL) & 0x8000) != 0)
    goto LABEL_51;
  if (a4 - 1 > 1)
  {
    if (a4 == 9)
    {
      sub_22EFF605C(v7 & 0xFFFFFFFFFFFFFFFELL);
      sub_22E8FCA40(a1, v30, 0x114Eu, 0, (uint64_t)v44);
      v31 = (unsigned int *)v44;
LABEL_49:
      sub_22E903BEC(v31);
      return 1;
    }
    if (a4 == 8)
    {
      v18 = (unsigned __int8 *)(v7 & 0xFFFFFFFFFFFFFFFELL);
      while (1)
      {
        v19 = v18;
        v20 = *v18;
        if (v20 > 213)
        {
          if (v20 == 233)
          {
            if ((*(_DWORD *)v19 & 0x7C0000) != 0x300000)
              goto LABEL_24;
            v22 = (unsigned __int8 **)(v19 + 16);
          }
          else
          {
            if (v20 != 214)
              goto LABEL_24;
            v22 = (unsigned __int8 **)(v19 + 24);
          }
        }
        else if (v20 == 155)
        {
          if ((**((_DWORD **)v19 + 2) & 0x18000) != 0)
            goto LABEL_24;
          if (v19[48])
            v22 = (unsigned __int8 **)(v19 + 24);
          else
            v22 = (unsigned __int8 **)(v19 + 32);
        }
        else
        {
          if (v20 != 176 || (v21 = *((unsigned int *)v19 + 5), (_DWORD)v21 == -1))
          {
LABEL_24:
            if ((v19[1] & 0x80) == 0)
            {
              v23 = (uint64_t)a1;
              v24 = 8;
LABEL_69:
              if ((sub_22EB27D8C(v23, v19, v24, v8, v9, v10, v11, v12) & 1) != 0)
                return 1;
            }
LABEL_72:
            v15 = sub_22E3CD3D4(a1[11] + 2032, 32, 3);
            v42 = sub_22EF67C8C(a1[11]);
            sub_22F0D4E74(v13);
            sub_22F3C1B38(v15, a4, v13, v42, a3, v43);
            return v15;
          }
          v22 = (unsigned __int8 **)&v19[8 * v21 + 40];
        }
        v18 = *v22;
        if (v18 == v19)
          goto LABEL_24;
      }
    }
    if ((*(_DWORD *)(v7 & 0xFFFFFFFFFFFFFFFELL) & 0x1C00) == 0x400)
    {
      sub_22EFF605C(v7 & 0xFFFFFFFFFFFFFFFELL);
      sub_22E8FCA40(a1, v32, 0x1263u, 0, (uint64_t)v47);
      LODWORD(v45) = 0;
      sub_22E8900C4((uint64_t)v47, (int *)&v45);
LABEL_48:
      v31 = v47;
      goto LABEL_49;
    }
    if ((sub_22EB27D8C((uint64_t)a1, (unsigned __int8 *)v13, 0, v8, v9, v10, v11, v12) & 1) != 0)
      return 1;
LABEL_51:
    if (!a4
      && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 5)
    {
      v33 = sub_22F32D9C4(a1, v13);
      if ((v33 & 1) != 0)
        return 1;
      v13 = v33 & 0xFFFFFFFFFFFFFFFELL;
    }
    goto LABEL_72;
  }
  if ((*(_DWORD *)(v7 & 0xFFFFFFFFFFFFFFFELL) & 0x1C00) != 0x400)
  {
    v25 = (unsigned __int8 *)(v7 & 0xFFFFFFFFFFFFFFFELL);
    do
    {
      v26 = v25;
      LODWORD(v27) = *v25;
      if (v27 > 0xD5)
      {
        if ((_DWORD)v27 == 233)
        {
          LODWORD(v27) = *(_DWORD *)v25;
          if ((*(_DWORD *)v25 & 0x7C0000) != 0x300000)
            goto LABEL_68;
          v28 = v25 + 16;
        }
        else
        {
          if ((_DWORD)v27 != 214)
            break;
          v28 = v25 + 24;
        }
      }
      else if ((_DWORD)v27 == 155)
      {
        if ((**((_DWORD **)v25 + 2) & 0x18000) != 0)
          goto LABEL_68;
        v28 = v25 + 24;
        if (!v26[48])
          v28 = v26 + 32;
        LOBYTE(v27) = -101;
      }
      else
      {
        if ((_DWORD)v27 != 176)
          break;
        v27 = *((unsigned int *)v25 + 5);
        if ((_DWORD)v27 == -1)
          goto LABEL_68;
        v28 = &v25[8 * v27 + 40];
        LOBYTE(v27) = -80;
      }
      v25 = *(unsigned __int8 **)v28;
    }
    while (v25 != v26);
    if (v27 == 188)
    {
      v29 = (uint64_t *)(v26 + 24);
    }
    else
    {
      if (v27 != 161)
        goto LABEL_68;
      v29 = (uint64_t *)(v26 + 16);
    }
    v34 = *v29;
    if (v34 && (*(_DWORD *)(v34 + 28) & 0x7Fu) - 49 <= 2)
    {
      v35 = *(_QWORD *)(v34 + 16);
      v36 = v35 & 0xFFFFFFFFFFFFFFF8;
      if ((v35 & 4) != 0)
        v36 = *(_QWORD *)v36;
      v37 = (*(_WORD *)(v36 + 8) & 0x7E) - 34;
      if (v36)
        v38 = v36 - 64;
      else
        v38 = 0;
      if (v37 >= 4)
        v38 = 0;
      if ((*(_BYTE *)(v38 + 74) & 1) == 0)
      {
        sub_22EFF605C(v7 & 0xFFFFFFFFFFFFFFFELL);
        sub_22E8FCA40(a1, v39, 0xA3Cu, 0, (uint64_t)v47);
        sub_22F0D4E74(v13);
        v45 = v40;
        sub_22E8906A0((uint64_t)v47, &v45);
        goto LABEL_48;
      }
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v34 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) & 0xFE) != 0x28)
        goto LABEL_72;
    }
LABEL_68:
    v23 = (uint64_t)a1;
    v19 = (unsigned __int8 *)v13;
    v24 = a4;
    goto LABEL_69;
  }
  sub_22EFF605C(v7 & 0xFFFFFFFFFFFFFFFELL);
  sub_22E8FCA40(a1, v14, 0x1263u, 0, (uint64_t)v47);
  v15 = 1;
  v46 = 1;
  v16 = sub_22E8900C4((uint64_t)v47, &v46);
  sub_22F0D4E74(v13);
  v45 = v17;
  sub_22E8906A0(v16, &v45);
  sub_22E903BEC(v47);
  return v15;
}

unint64_t sub_22EB29350(_QWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v10;
  int v11;
  unsigned int v12;

  v3 = (uint64_t)a3;
  if (*a3 != 215)
    return v3;
  v5 = *((_QWORD *)a3 + 3);
  v6 = *((_DWORD *)a3 + 1);
  v7 = v5 & 1;
  if (v6 != 1 && v7 == 0)
  {
    v10 = 0;
    v11 = v6 - 2;
    do
    {
      sub_22EFF605C(v3);
      v5 = sub_22EB4785C((uint64_t)a1, a2, v12, 32, v5 & 0xFFFFFFFFFFFFFFFELL, *(_QWORD *)(v3 + 8 * v10 + 32));
      v7 = v5 & 1;
      if (v11 == (_DWORD)v10)
        break;
      ++v10;
    }
    while ((v5 & 1) == 0);
  }
  if (v7)
    return 1;
  return sub_22EB27A20(a1, *(_DWORD *)(v3 + 16), *(_DWORD *)(v3 + 20), v5 & 0xFFFFFFFFFFFFFFFELL);
}

uint64_t sub_22EB2941C(_QWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unsigned int v6;
  _QWORD *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  int v18;
  uint64_t v20;
  unsigned int v21;
  uint64_t v23;
  void *v24[2];
  _QWORD v25[17];

  v5 = a5;
  v6 = a4;
  v9 = a1;
  v25[16] = *MEMORY[0x24BDAC8D0];
  v10 = *(_QWORD *)(*(_QWORD *)(a5 + 8) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_DWORD *)(v10 + 16);
  if ((v11 & 0xFE00000) < 0x8180001 || v10 == 0 || *(_DWORD *)(v10 + 16) != 11)
  {
LABEL_8:
    if ((*(_BYTE *)(v9[9] + 1) & 1) == 0
      || (v14 = *(_QWORD *)(*(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF0), (*(_BYTE *)(v14 + 17) & 4) == 0)
      && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x2C
      || (v15 = sub_22EFFA1CC(v6), !(_DWORD)v15)
      || (v16 = v15, v6 == 4) && sub_22EB48AD0(v15, (unsigned __int8 *)v5))
    {
      v17 = a3;
      a1 = v9;
      v18 = v6;
      return sub_22EB2EA08((uint64_t)a1, v17, v18, v5);
    }
    v24[0] = v25;
    v24[1] = (void *)0x1000000000;
    if (a2)
      sub_22EC65EB4(v9, v16, a2, (uint64_t)v24);
    v20 = sub_22ED1677C();
    if (v24[0] != v25)
      free(v24[0]);
    return v20;
  }
  if ((int)a4 <= 3 && (v11 & 0xFF80000) == 0x8300000)
    return sub_22ED2720C(a1, a2, a3, a4, a5);
  if ((_DWORD)a4 == 4)
  {
    v21 = ((v11 >> 19) & 0x1FF) - 260;
    if (v21 <= 3 && v21 != 2)
    {
      v17 = a3;
      v18 = 4;
      return sub_22EB2EA08((uint64_t)a1, v17, v18, v5);
    }
  }
  else if ((_DWORD)a4 == 12)
  {
    v17 = a3;
    v18 = 12;
    return sub_22EB2EA08((uint64_t)a1, v17, v18, v5);
  }
  v23 = sub_22EB19A28(a1);
  if ((v23 & 1) == 0)
  {
    v5 = v23 & 0xFFFFFFFFFFFFFFFELL;
    goto LABEL_8;
  }
  return 1;
}

uint64_t sub_22EB296C0(uint64_t a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4, uint64_t *a5, uint64_t a6, int a7)
{
  unsigned __int8 *v11;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  unsigned int v21;
  BOOL v22;
  int v24;
  _DWORD *v25;
  uint64_t v26;
  int v27;
  int v28;
  _QWORD *v29;
  unsigned int v30;
  uint64_t v31;
  _DWORD *v32;
  int v33;
  _QWORD *v34;
  int v36;
  unsigned int v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned __int8 *v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  int v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v52;
  uint64_t v53;
  int v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unsigned __int8 **v63;
  uint64_t v64;
  int v65;
  BOOL v66;
  uint64_t v67;
  unsigned __int8 *v68;
  unint64_t v69;
  uint64_t v70;
  int v71;
  unsigned __int8 *v73;
  uint64_t v74;
  unint64_t v75;
  unsigned int v76[24];

  v11 = a3;
  if (!a3
    || (v13 = *((_QWORD *)a3 + 1), v13 < 0x10)
    || ((v14 = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0)) != 0
      ? (v15 = (*(_DWORD *)(v14 + 16) & 0xFF800FF) == 139984907)
      : (v15 = 0),
        !v15))
  {
    v16 = *a3;
    if (v16 == 215)
    {
      v17 = sub_22EB29350((_QWORD *)a1, a2, a3);
      if ((v17 & 1) != 0)
        return 1;
      v11 = (unsigned __int8 *)(v17 & 0xFFFFFFFFFFFFFFFELL);
      v16 = *(unsigned __int8 *)(v17 & 0xFFFFFFFFFFFFFFFELL);
    }
    v18 = *(_QWORD *)(*((_QWORD *)v11 + 1) & 0xFFFFFFFFFFFFFFF0);
    v19 = *(_DWORD *)(v18 + 16);
    if (v18)
      v20 = (v19 & 0xFF800FF) == 139460619;
    else
      v20 = 0;
    if (v20)
    {
      if (v16 != 187)
      {
        sub_22EFF605C((uint64_t)v11);
        v28 = v36;
        v29 = (_QWORD *)a1;
        v30 = 3759;
        goto LABEL_31;
      }
    }
    else if (v16 != 187)
    {
      v21 = v19 & 0xFF80000;
      if (v18)
        v22 = *(_DWORD *)(v18 + 16) == 11;
      else
        v22 = 0;
      if (v22 && v21 >= 0x8200001)
      {
        v39 = v11;
        do
        {
          v40 = v39;
          LODWORD(v41) = *v39;
          if (v41 > 0xD5)
          {
            if ((_DWORD)v41 == 233)
            {
              LODWORD(v41) = *(_DWORD *)v39;
              if ((*(_DWORD *)v39 & 0x7C0000) != 0x300000)
                goto LABEL_56;
              v42 = v39 + 16;
            }
            else
            {
              if ((_DWORD)v41 != 214)
                break;
              v42 = v39 + 24;
            }
          }
          else if ((_DWORD)v41 == 155)
          {
            if ((**((_DWORD **)v39 + 2) & 0x18000) != 0)
              goto LABEL_56;
            v42 = v39 + 24;
            if (!v40[48])
              v42 = v40 + 32;
            LOBYTE(v41) = -101;
          }
          else
          {
            if ((_DWORD)v41 != 176)
              break;
            v41 = *((unsigned int *)v39 + 5);
            if ((_DWORD)v41 == -1)
              goto LABEL_56;
            v42 = &v39[8 * v41 + 40];
            LOBYTE(v41) = -80;
          }
          v39 = *(unsigned __int8 **)v42;
        }
        while (v39 != v40);
        if (v41 == 184
          || v41 == 183
          && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v40 + 3) + 48) & 0xFFFFFFFFFFFFFFF0)
                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFEu)
           - 2 < 4)
        {
          v24 = 1;
          goto LABEL_55;
        }
LABEL_56:
        v44 = sub_22EB19A28(a1);
        if ((v44 & 1) != 0)
          return 1;
        v24 = 0;
        v43 = v44 & 0xFFFFFFFFFFFFFFFELL;
        v18 = *(_QWORD *)(*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
      }
      else
      {
        v24 = 0;
LABEL_55:
        v43 = (unint64_t)v11;
      }
      if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 29 <= 1)
      {
        v32 = (_DWORD *)*a5;
        if ((*(_BYTE *)*a5 & 0xFE) == 0x70 && (*v32 & 0xFC0000) == 0x800000)
        {
          v26 = *a5;
          goto LABEL_27;
        }
        v33 = a7;
        v34 = (_QWORD *)a1;
        v31 = v43;
        v25 = 0;
        return sub_22EB2AC58(v34, v31, (uint64_t)v32, (uint64_t)v25, v33);
      }
      if (a6 != 1)
        goto LABEL_78;
      v45 = (unsigned __int8 *)*a5;
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 0x10) != 0)
      {
        v46 = *v45;
        if ((v46 & 0xFE) == 0x70)
        {
          if ((*(_DWORD *)v45 & 0xFC0000) != 0x800000)
            goto LABEL_71;
        }
        else if (v46 != 141 || (*(_QWORD *)v45 & 0x3F00000000) != 0x2700000000)
        {
          goto LABEL_71;
        }
        sub_22EFF605C(*a5);
        sub_22E8FCA40((_QWORD *)a1, v47, 0x195Au, 0, (uint64_t)v76);
        sub_22F0D5A50(v43);
        v75 = __PAIR64__(a7, v48);
        sub_22E8906A0((uint64_t)v76, (uint64_t *)&v75);
        sub_22E903BEC(v76);
        v45 = (unsigned __int8 *)*a5;
      }
LABEL_71:
      v49 = *(_QWORD *)(*((_QWORD *)v45 + 1) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_DWORD *)(v49 + 16) & 0xFF80000u) >= 0x8200001 && v49 != 0 && *(_DWORD *)(v49 + 16) == 11)
      {
        v52 = sub_22EB19A28(a1);
        if ((v52 & 1) != 0)
          return 1;
        *a5 = v52 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_82;
      }
LABEL_78:
      if ((sub_22EB2AE1C(a1, (uint64_t)a5, a6) & 1) != 0)
        return 1;
LABEL_82:
      v53 = **(_QWORD **)(a1 + 72);
      if (a6 == 1 && (v53 & 0x100) != 0 && ((*(_BYTE *)(v43 + 1) & 0x80) != 0 || (*(_BYTE *)(*a5 + 1) & 0x80) != 0))
      {
        v38 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 32, 3);
        v56 = *a5;
        v57 = sub_22EB2AEC0(*(_QWORD *)(v43 + 8), *(_QWORD *)(v56 + 8), *(_QWORD *)(a1 + 88));
        sub_22EB54CBC(v38, (_DWORD *)v43, (_DWORD *)v56, v57, 1, 0, a7);
        return v38;
      }
      if (v24)
      {
        v38 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 40, 3);
        sub_22F330354(v38, v43, *a5, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16872), 1, 0, a7);
        return v38;
      }
      if ((v53 & 0x100) != 0)
      {
        v54 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                 + 16);
        if (v54 != 32)
        {
          v55 = v54 != 45 && a6 == 1;
          if (!v55
            || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*a5 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) == 45)
          {
            return sub_22ED18C00();
          }
        }
      }
      v58 = sub_22EB2AFE4(a1, (uint64_t (**)())v43, a4, (void *)*a5, a7);
      v38 = v58;
      if ((v58 & 1) != 0)
        return v38;
      v59 = v58 & 0xFFFFFFFFFFFFFFFELL;
      if (*(_BYTE *)(v58 & 0xFFFFFFFFFFFFFFFELL) != 107)
        return v38;
      v60 = *(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696);
      v61 = *(_DWORD *)(v60 - 576);
      if (v61 <= 3 && v61 != 2)
        return v38;
      v62 = *(_QWORD *)(*(_QWORD *)(v59 + 8) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_DWORD *)(v62 + 16) & 0xFEu) - 2 < 4)
        return v38;
      if (sub_22F10E1FC(v62, 12))
      {
LABEL_102:
        sub_22E3BA850(v60 - 248, (const void *)(v38 & 0xFFFFFFFFFFFFFFFELL));
        return v38;
      }
      v63 = (unsigned __int8 **)(v59 + 24);
      v64 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v59 + 24) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v65 = *(_DWORD *)(v64 + 16);
      if (v64)
        v66 = v65 == 11;
      else
        v66 = 0;
      if (v66)
      {
        if (((*(_DWORD *)(v64 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
        {
LABEL_116:
          v68 = *v63;
          v69 = *((_QWORD *)*v63 + 1) & 0xFFFFFFFFFFFFFFF0;
          v70 = *(_QWORD *)v69;
          v71 = *(_DWORD *)(*(_QWORD *)v69 + 16);
          if (v71 != 39 && (*(_DWORD *)(*(_QWORD *)v69 + 16) & 0xFEu) - 2 > 3)
            return v38;
          v73 = sub_22EFFBBCC(v68);
          if (*v73 == 188)
          {
            if ((v73[2] & 4) != 0)
            {
              do
              {
                v74 = *((_QWORD *)v73 + 2);
                v73 = sub_22EFFBBCC((unsigned __int8 *)v74);
              }
              while (*v73 == 188 && (v73[2] & 4) != 0);
              v69 = *(_QWORD *)(v74 + 8) & 0xFFFFFFFFFFFFFFF0;
            }
            v70 = *(_QWORD *)v69;
            v71 = *(unsigned __int8 *)(*(_QWORD *)v69 + 16);
          }
          if (v71 != 39 || !sub_22F10E1FC(*(_QWORD *)(*(_QWORD *)(v70 + 32) & 0xFFFFFFFFFFFFFFF0), 12))
            return v38;
          goto LABEL_102;
        }
      }
      else if (v64 && v65 == 44)
      {
        v67 = sub_22F114198(*(_QWORD *)(v64 + 24));
        if ((*(_BYTE *)(v67 + 74) & 1) == 0 && *(_QWORD *)(v67 + 128) <= 7uLL
          || (*(_QWORD *)(sub_22F114198(*(_QWORD *)(v64 + 24)) + 72) & 0x8000000000) != 0)
        {
          goto LABEL_116;
        }
      }
      else if (v65 != 9)
      {
        goto LABEL_116;
      }
      v63 = (unsigned __int8 **)(v59 + 16);
      goto LABEL_116;
    }
    v25 = (_DWORD *)*a5;
    if ((*(_BYTE *)*a5 & 0xFE) == 0x70 && (*v25 & 0xFC0000) == 0x800000)
    {
      v26 = *a5;
LABEL_27:
      sub_22EFF605C(v26);
      v28 = v27;
      v29 = (_QWORD *)a1;
      v30 = 3760;
LABEL_31:
      sub_22E8FCA40(v29, v28, v30, 0, (uint64_t)v76);
      sub_22F0D5A50((uint64_t)v11);
      v75 = __PAIR64__(a7, v37);
      sub_22E8906A0((uint64_t)v76, (uint64_t *)&v75);
      sub_22E903BEC(v76);
      return 1;
    }
    v31 = *((_QWORD *)v11 + 2);
    v32 = (_DWORD *)*((_QWORD *)v11 + 3);
    v33 = a7;
    v34 = (_QWORD *)a1;
    return sub_22EB2AC58(v34, v31, (uint64_t)v32, (uint64_t)v25, v33);
  }
  return sub_22EB29E14((_QWORD *)a1, a3, (uint64_t)a3, *a5, 0, 0, 0, 0, a7);
}

uint64_t sub_22EB29E14(_QWORD *a1, unsigned __int8 *a2, uint64_t a3, unint64_t a4, int a5, int a6, unint64_t a7, unint64_t a8, int a9)
{
  unsigned __int8 *v14;
  uint64_t v16;
  int v17;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v28;
  BOOL v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  _BOOL4 v41;
  BOOL v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int v55;
  _BOOL4 v57;
  BOOL v58;
  int v59;
  int v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  int64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  _BOOL4 v80;
  BOOL v81;
  int v82;
  int v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t (***v91)();
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  unint64_t v99;
  unsigned int v100;
  unint64_t v101;
  int v102;
  unsigned int v103;
  int v104;
  uint64_t v105;
  unsigned int v106;
  BOOL v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  char *v112;
  int v113;
  void **v114;
  int v115;
  size_t v116;
  const void *v117;
  void **p_dst;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  size_t v124;
  const void *v125;
  void **v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  void **__dst;
  size_t v132;
  unint64_t v133;
  char *v134;
  unsigned int v135;
  char v136;
  uint64_t (**v137)();
  int v138;
  _QWORD **v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  unsigned int v146;
  char v147;
  char *v148;
  __int128 v149;
  _QWORD v150[7];

  v14 = a2;
  v150[5] = *MEMORY[0x24BDAC8D0];
  v141 = a2;
  v16 = *(_QWORD *)(*((_QWORD *)a2 + 1) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_DWORD *)(v16 + 16);
  if ((v17 & 0xFF80000) != 0x8580000
    && (v17 & 0xFE00000u) >= 0x8180001
    && v16 != 0
    && *(_DWORD *)(v16 + 16) == 11)
  {
    v21 = sub_22EB19A28(a1);
    if ((v21 & 1) != 0)
      return 1;
    v14 = (unsigned __int8 *)(v21 & 0xFFFFFFFFFFFFFFFELL);
    v141 = (_QWORD *)(v21 & 0xFFFFFFFFFFFFFFFELL);
  }
  if (a4
    && ((v22 = *(_QWORD *)(*(_QWORD *)(a4 + 8) & 0xFFFFFFFFFFFFFFF0), (*(_DWORD *)(v22 + 16) & 0xFF80000u) >= 0x8200001)
      ? (v23 = v22 == 0)
      : (v23 = 1),
        !v23 ? (v24 = *(_DWORD *)(v22 + 16) == 11) : (v24 = 0),
        v24))
  {
    v66 = sub_22EB19A28(a1);
    if ((v66 & 1) != 0)
      return 1;
    v67 = sub_22EB1A358(a1, v66 & 0xFFFFFFFFFFFFFFFELL, 0);
    if ((v67 & 1) != 0)
      return 1;
    a4 = v67 & 0xFFFFFFFFFFFFFFFELL;
    if (!a7)
      goto LABEL_30;
  }
  else if (!a7)
  {
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(*(_QWORD *)(a7 + 8) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)(v25 + 16) & 0xFF80000u) >= 0x8200001 && v25 != 0 && *(_DWORD *)(v25 + 16) == 11)
  {
    v68 = sub_22EB19A28(a1);
    if ((v68 & 1) != 0)
      return 1;
    v69 = sub_22EB1A358(a1, v68 & 0xFFFFFFFFFFFFFFFELL, 0);
    if ((v69 & 1) != 0)
      return 1;
    a7 = v69 & 0xFFFFFFFFFFFFFFFELL;
  }
LABEL_30:
  if (a8)
  {
    v28 = *(_QWORD *)(*(_QWORD *)(a8 + 8) & 0xFFFFFFFFFFFFFFF0);
    v29 = (*(_DWORD *)(v28 + 16) & 0xFF80000u) < 0x8200001 || v28 == 0;
    if (!v29 && *(_DWORD *)(v28 + 16) == 11)
    {
      v70 = sub_22EB19A28(a1);
      if ((v70 & 1) != 0)
        return 1;
      v71 = sub_22EB1A358(a1, v70 & 0xFFFFFFFFFFFFFFFELL, 0);
      if ((v71 & 1) != 0)
        return 1;
      a8 = v71 & 0xFFFFFFFFFFFFFFFELL;
    }
  }
  if ((v14[1] & 0x80) == 0
    && (!a4 || (*(_DWORD *)a4 & 0x18000) == 0)
    && (!a7 || (*(_DWORD *)a7 & 0x18000) == 0)
    && (!a8 || (*(_DWORD *)a8 & 0x18000) == 0))
  {
    v31 = sub_22F00338C(v14);
    v32 = v31 & 0xFFFFFFFFFFFFFFF0;
    v33 = *(_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF0);
    v34 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v33 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v34 == 39 || v34 == 32)
    {
      v35 = sub_22F10ACF8(v33);
    }
    else
    {
      if ((v34 & 0xFEu) - 2 > 3)
      {
        sub_22EFF605C((uint64_t)v14);
        sub_22E8FCA40(a1, v96, 0x10FCu, 0, (uint64_t)&v137);
        sub_22F0D4E74((uint64_t)v141);
        v142 = v97;
        v91 = &v137;
        goto LABEL_109;
      }
      if ((*(_DWORD *)(v33 + 16) & 0xFEu) - 6 <= 0xFFFFFFFB)
        v33 = sub_22F10CF48(v33);
      v35 = *(_QWORD *)(v33 + 32);
    }
    v140 = v35;
    if (a4)
    {
      sub_22EFF605C(a4);
      LOWORD(v138) = 256;
      BYTE2(v138) = 0;
      v137 = off_24FAB8D98;
      v37 = sub_22ED03140(a1, v36, a4, &v137);
      if ((v37 & 1) != 0)
      {
        sub_22EFF605C(a4);
        sub_22E8FCA40(a1, v72, 0x10FBu, 0, (uint64_t)&v137);
        LODWORD(v148) = 0;
        v73 = sub_22E8900C4((uint64_t)&v137, (int *)&v148);
        v74 = a4;
LABEL_105:
        sub_22F0D4E74(v74);
        v142 = v90;
        v91 = (uint64_t (***)())v73;
LABEL_109:
        sub_22E8906A0((uint64_t)v91, &v142);
LABEL_110:
        sub_22E903BEC((unsigned int *)&v137);
        return 1;
      }
      a4 = v37 & 0xFFFFFFFFFFFFFFFELL;
      v38 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                  + 8) & 0xFFFFFFFFFFFFFFF0);
      v39 = *(_DWORD *)(v38 + 16) & 0xFF800FF;
      v41 = v39 == 93323275 || v39 == 87556107;
      if (v38)
        v42 = !v41;
      else
        v42 = 1;
      if (!v42)
      {
        sub_22EFF605C(v37 & 0xFFFFFFFFFFFFFFFELL);
        sub_22E8FCA40(a1, v43, 0x1ACCu, 0, (uint64_t)&v137);
        LODWORD(v148) = 0;
        v44 = v31;
        v45 = a5;
        v46 = a6;
        v47 = v32;
        v48 = sub_22E8900C4((uint64_t)&v137, (int *)&v148);
        sub_22F0D4E74(a4);
        v142 = v49;
        v50 = v48;
        v32 = v47;
        a6 = v46;
        a5 = v45;
        v31 = v44;
        sub_22E8906A0(v50, &v142);
        sub_22E903BEC((unsigned int *)&v137);
      }
    }
    if (a7)
    {
      sub_22EFF605C(a7);
      LOWORD(v138) = 256;
      BYTE2(v138) = 0;
      v137 = off_24FAB8D98;
      v52 = sub_22ED03140(a1, v51, a7, &v137);
      if ((v52 & 1) != 0)
      {
        sub_22EFF605C(a7);
        sub_22E8FCA40(a1, v93, 0x10FBu, 0, (uint64_t)&v137);
        v92 = 1;
        LODWORD(v148) = 1;
        v94 = sub_22E8900C4((uint64_t)&v137, (int *)&v148);
        v95 = a7;
        goto LABEL_121;
      }
      v130 = v31;
      v53 = v52 & 0xFFFFFFFFFFFFFFFELL;
      v54 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                  + 8) & 0xFFFFFFFFFFFFFFF0);
      v55 = *(_DWORD *)(v54 + 16) & 0xFF800FF;
      v57 = v55 == 93323275 || v55 == 87556107;
      if (v54)
        v58 = !v57;
      else
        v58 = 1;
      if (!v58)
      {
        sub_22EFF605C(v52 & 0xFFFFFFFFFFFFFFFELL);
        sub_22E8FCA40(a1, v59, 0x1ACCu, 0, (uint64_t)&v137);
        LODWORD(v148) = 1;
        v60 = a6;
        v61 = a4;
        v62 = v32;
        v63 = sub_22E8900C4((uint64_t)&v137, (int *)&v148);
        sub_22F0D4E74(v53);
        v142 = v64;
        v65 = v63;
        v32 = v62;
        a4 = v61;
        a6 = v60;
        sub_22E8906A0(v65, &v142);
        sub_22E903BEC((unsigned int *)&v137);
      }
    }
    else
    {
      v130 = v31;
      v53 = 0;
    }
    if (!a8)
      goto LABEL_103;
    sub_22EFF605C(a8);
    LOWORD(v138) = 256;
    BYTE2(v138) = 0;
    v137 = off_24FAB8D98;
    v76 = sub_22ED03140(a1, v75, a8, &v137);
    if ((v76 & 1) == 0)
    {
      a8 = v76 & 0xFFFFFFFFFFFFFFFELL;
      v77 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v76 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                  + 8) & 0xFFFFFFFFFFFFFFF0);
      v78 = *(_DWORD *)(v77 + 16) & 0xFF800FF;
      v80 = v78 == 93323275 || v78 == 87556107;
      if (v77)
        v81 = !v80;
      else
        v81 = 1;
      if (!v81)
      {
        sub_22EFF605C(v76 & 0xFFFFFFFFFFFFFFFELL);
        sub_22E8FCA40(a1, v82, 0x1ACCu, 0, (uint64_t)&v137);
        LODWORD(v148) = 1;
        v83 = a6;
        v84 = a4;
        v85 = v32;
        v86 = sub_22E8900C4((uint64_t)&v137, (int *)&v148);
        sub_22F0D4E74(a8);
        v142 = v87;
        v88 = v86;
        v32 = v85;
        a4 = v84;
        a6 = v83;
        sub_22E8906A0(v88, &v142);
        sub_22E903BEC((unsigned int *)&v137);
      }
LABEL_103:
      if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 16)
         - 25 <= 1)
      {
        sub_22EFF605C((uint64_t)v141);
        sub_22E8FCA40(a1, v89, 0x10E6u, 0, (uint64_t)&v137);
        v73 = sub_22E8901B8((uint64_t)&v137, &v140);
        v74 = (int64_t)v141;
        goto LABEL_105;
      }
      v99 = v32;
      sub_22EFF605C((uint64_t)v141);
      v137 = (uint64_t (**)())&unk_24FAB6ED0;
      v138 = 4327;
      v139 = &v141;
      v92 = 1;
      if ((sub_22EE8B0B0((uint64_t)a1, v100, v35) & 1) != 0)
        return v92;
      v101 = v99;
      if (a4)
      {
        v102 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v99 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v102 != 32 && v102 != 39)
        {
          LOWORD(v142) = 0;
          v143 = 0;
          LODWORD(v144) = 0;
          if (sub_22F00554C(a4, (uint64_t)&v142, a1[11], 0, 0))
          {
            v103 = v146;
            LODWORD(v149) = v146;
            if (v146 > 0x40)
            {
              llvm::APInt::initSlowCase((llvm::APInt *)&v148, (const llvm::APInt *)&v145);
              v103 = v149;
            }
            else
            {
              v148 = v145;
            }
            BYTE4(v149) = v147;
            if (!v147)
            {
              v112 = &v148[8 * ((v103 - 1) >> 6)];
              if (v103 < 0x41)
                v112 = (char *)&v148;
              if (((*(_QWORD *)v112 >> (v103 - 1)) & 1) != 0)
              {
                sub_22EFF605C(a4);
                sub_22E8FCA40(a1, v113, 0x10EAu, 0, (uint64_t)&v137);
                sub_22F0D4E74(a4);
                __dst = v114;
                sub_22E8906A0((uint64_t)&v137, (uint64_t *)&__dst);
                sub_22E903BEC((unsigned int *)&v137);
                if (v149 >= 0x41 && v148)
                  MEMORY[0x2348A0E84](v148, 0x1000C8000313F17);
                if (v144 < 2)
                  return 1;
LABEL_203:
                sub_22EF53BC0(&v144);
                return 1;
              }
            }
            if (v103 >= 0x41 && v148)
              MEMORY[0x2348A0E84](v148, 0x1000C8000313F17);
          }
          if (v144 >= 2)
            sub_22EF53BC0(&v144);
          v101 = v99;
        }
      }
      if (!v53)
      {
        if (!a5)
          goto LABEL_147;
        if (v130 >= 0x10)
        {
          v111 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v101 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
          if (v111 == 2 || v111 == 5)
            goto LABEL_147;
          sub_22E8FCA40(a1, a5, 0x10E9u, 0, (uint64_t)&v137);
          v107 = (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v101 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu)
               - 2 < 4;
        }
        else
        {
          sub_22E8FCA40(a1, a5, 0x10E9u, 0, (uint64_t)&v137);
          v107 = 0;
        }
        LOBYTE(v142) = v107;
        sub_22E894E38((uint64_t)&v137, (unsigned __int8 *)&v142);
        goto LABEL_110;
      }
      LOWORD(v142) = 0;
      v143 = 0;
      LODWORD(v144) = 0;
      if (!sub_22F00554C(v53, (uint64_t)&v142, a1[11], 0, 0))
      {
LABEL_145:
        if (v144 >= 2)
          sub_22EF53BC0(&v144);
LABEL_147:
        if (!a8)
          goto LABEL_158;
        LOWORD(v142) = 0;
        v143 = 0;
        LODWORD(v144) = 0;
        if (!sub_22F00554C(a8, (uint64_t)&v142, a1[11], 0, 0))
        {
LABEL_156:
          if (v144 >= 2)
            sub_22EF53BC0(&v144);
LABEL_158:
          v109 = *(_QWORD *)(v141[1] & 0xFFFFFFFFFFFFFFF0);
          if (!v109 || (*(_DWORD *)(v109 + 16) & 0xFF800FF) != 0x858000B)
          {
            v92 = 1;
            v110 = sub_22EB1B954((uint64_t)a1, v141);
            if ((v110 & 1) != 0)
              return v92;
            v141 = (_QWORD *)(v110 & 0xFFFFFFFFFFFFFFFELL);
          }
          v92 = sub_22E3CD3D4(a1[11] + 2032, 64, 3);
          sub_22F3304BC(v92, (uint64_t)v141, a4, v53, a8, *(_QWORD *)(a1[11] + 17256), a5, a6, a9);
          return v92;
        }
        v135 = v146;
        if (v146 > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v134, (const llvm::APInt *)&v145);
        else
          v134 = v145;
        v136 = v147;
        if ((sub_22E984E5C((uint64_t)&v134) & 1) != 0)
        {
          if (v135 >= 0x41 && v134)
            MEMORY[0x2348A0E84](v134, 0x1000C8000313F17);
          goto LABEL_156;
        }
        sub_22EFF605C(a8);
        sub_22E8FCA40(a1, v115, 0x10EBu, 0, (uint64_t)&v137);
        v148 = (char *)v150;
        v149 = xmmword_22F455490;
        llvm::APInt::toString();
        v116 = v149;
        if ((unint64_t)v149 <= 0x7FFFFFFFFFFFFFF7)
        {
          v117 = v148;
          if ((unint64_t)v149 >= 0x17)
          {
            v119 = (v149 & 0xFFFFFFFFFFFFFFF8) + 8;
            if (((unint64_t)v149 | 7) != 0x17)
              v119 = v149 | 7;
            v120 = v119 + 1;
            p_dst = (void **)operator new(v119 + 1);
            v132 = v116;
            v133 = v120 | 0x8000000000000000;
            __dst = p_dst;
          }
          else
          {
            HIBYTE(v133) = v149;
            p_dst = (void **)&__dst;
            if (!(_QWORD)v149)
              goto LABEL_183;
          }
          memmove(p_dst, v117, v116);
LABEL_183:
          *((_BYTE *)p_dst + v116) = 0;
          if (v148 != (char *)v150)
            free(v148);
          v121 = sub_22F2F3734((uint64_t)&v137, (void **)&__dst);
          v122 = a8;
          goto LABEL_197;
        }
LABEL_204:
        abort();
      }
      v106 = v146;
      v135 = v146;
      if (v146 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&v134, (const llvm::APInt *)&v145);
        v106 = v135;
      }
      else
      {
        v134 = v145;
      }
      v136 = v147;
      if (v147)
        goto LABEL_143;
      v108 = &v134[8 * ((v106 - 1) >> 6)];
      if (v106 < 0x41)
        v108 = (char *)&v134;
      if (((*(_QWORD *)v108 >> (v106 - 1)) & 1) == 0)
      {
LABEL_143:
        if (v106 >= 0x41 && v134)
          MEMORY[0x2348A0E84](v134, 0x1000C8000313F17);
        goto LABEL_145;
      }
      sub_22EFF605C(v53);
      sub_22E8FCA40(a1, v123, 0x10E8u, 0, (uint64_t)&v137);
      v148 = (char *)v150;
      v149 = xmmword_22F455490;
      llvm::APInt::toString();
      v124 = v149;
      if ((unint64_t)v149 > 0x7FFFFFFFFFFFFFF7)
        goto LABEL_204;
      v125 = v148;
      if ((unint64_t)v149 >= 0x17)
      {
        v127 = (v149 & 0xFFFFFFFFFFFFFFF8) + 8;
        if (((unint64_t)v149 | 7) != 0x17)
          v127 = v149 | 7;
        v128 = v127 + 1;
        v126 = (void **)operator new(v127 + 1);
        v132 = v124;
        v133 = v128 | 0x8000000000000000;
        __dst = v126;
      }
      else
      {
        HIBYTE(v133) = v149;
        v126 = (void **)&__dst;
        if (!(_QWORD)v149)
          goto LABEL_194;
      }
      memmove(v126, v125, v124);
LABEL_194:
      *((_BYTE *)v126 + v124) = 0;
      if (v148 != (char *)v150)
        free(v148);
      v121 = sub_22F2F3734((uint64_t)&v137, (void **)&__dst);
      v122 = v53;
LABEL_197:
      sub_22F0D4E74(v122);
      v148 = v129;
      sub_22E8906A0(v121, (uint64_t *)&v148);
      if (SHIBYTE(v133) < 0)
        operator delete(__dst);
      sub_22E903BEC((unsigned int *)&v137);
      if (v135 >= 0x41 && v134)
        MEMORY[0x2348A0E84](v134, 0x1000C8000313F17);
      if (v144 < 2)
        return 1;
      goto LABEL_203;
    }
    sub_22EFF605C(a8);
    sub_22E8FCA40(a1, v104, 0x10FBu, 0, (uint64_t)&v137);
    v92 = 1;
    LODWORD(v148) = 1;
    v94 = sub_22E8900C4((uint64_t)&v137, (int *)&v148);
    v95 = a8;
LABEL_121:
    sub_22F0D4E74(v95);
    v142 = v105;
    sub_22E8906A0(v94, &v142);
    sub_22E903BEC((unsigned int *)&v137);
    return v92;
  }
  v92 = sub_22E3CD3D4(a1[11] + 2032, 64, 3);
  sub_22F3304BC(v92, (uint64_t)v14, a4, a7, a8, *(_QWORD *)(a1[11] + 16832), a5, a6, a9);
  return v92;
}

uint64_t sub_22EB2AC58(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v26;

  v8 = sub_22EB19A28(a1);
  v9 = v8;
  if ((v8 & 1) == 0)
  {
    v10 = sub_22EB19A28(a1);
    v9 = v10;
    if ((v10 & 1) == 0)
    {
      v11 = v8 & 0xFFFFFFFFFFFFFFFELL;
      v12 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if (!a4)
      {
        v17 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
        v9 = v17;
        v18 = *(_QWORD *)(a1[11] + 17248);
        v19 = a5;
        v20 = (int *)v11;
        v21 = v12;
        v22 = 0;
        goto LABEL_22;
      }
      if ((*(_BYTE *)(v11 + 1) & 0x80) != 0 || (*(_BYTE *)(v12 + 1) & 0x80) != 0 || (*(_BYTE *)(a4 + 1) & 0x80) != 0)
      {
        v17 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
        v9 = v17;
        v18 = *(_QWORD *)(a1[11] + 16832);
        v19 = a5;
        v20 = (int *)v11;
        v21 = v12;
        v22 = a4;
LABEL_22:
        sub_22F330408(v17, v20, v21, v22, v18, v19);
        return v9;
      }
      v13 = sub_22EB19A28(a1);
      v9 = v13;
      if ((v13 & 1) == 0)
      {
        v14 = v13 & 0xFFFFFFFFFFFFFFFELL;
        v15 = *(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v15)
          v16 = *(_BYTE *)(v15 + 16) == 29;
        else
          v16 = 0;
        if (!v16)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 29)
            v15 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0));
          else
            v15 = 0;
        }
        v23 = sub_22EB2BBA4(a1, v12, *(_DWORD *)(v15 + 40), 0);
        v9 = 1;
        v24 = sub_22EB2BBA4(a1, v14, *(_DWORD *)(v15 + 44), 1u);
        if (v23 && v24 != 0)
        {
          v26 = v24;
          v17 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
          v9 = v17;
          v18 = *(_QWORD *)(v15 + 32);
          v19 = a5;
          v20 = (int *)v11;
          v21 = v23;
          v22 = v26;
          goto LABEL_22;
        }
      }
    }
  }
  return v9;
}

uint64_t sub_22EB2AE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  BOOL v8;
  unsigned int v9;
  BOOL v10;
  unsigned int v11;
  uint64_t v12;

  if (a3)
  {
    v3 = a3;
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a2 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v7)
        v8 = *(_DWORD *)(v7 + 16) == 11;
      else
        v8 = 0;
      if (v8)
      {
        v9 = (*(_DWORD *)(v7 + 16) >> 19) & 0x1FF;
        v10 = v9 >= 0x105;
        v11 = v9 - 261;
        if (v10 && v11 != 4)
        {
          v12 = sub_22EB19A28(a1);
          if ((v12 & 1) != 0)
            v6 = 1;
          else
            *(_QWORD *)a2 = v12 & 0xFFFFFFFFFFFFFFFELL;
        }
      }
      a2 += 8;
      --v3;
    }
    while (v3);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_22EB2AEC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;

  v5 = *(_QWORD *)(a3 + 16832);
  v6 = a2 & 0xFFFFFFFFFFFFFFF0;
  v7 = sub_22F1107D8(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  v8 = (uint64_t *)(a1 & 0xFFFFFFFFFFFFFFF0);
  v9 = *v8;
  if (v7)
  {
    v10 = *(unsigned __int8 *)(v9 + 16);
    if (v9 && v10 == 39)
      goto LABEL_12;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
    {
      v9 = sub_22F10CF48(v9);
      if (!v9)
      {
        v9 = *v8;
LABEL_14:
        v10 = *(_DWORD *)(v9 + 16);
        goto LABEL_15;
      }
      goto LABEL_12;
    }
LABEL_15:
    if ((v10 & 0xFEu) - 6 <= 0xFFFFFFFB)
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
        goto LABEL_17;
      v9 = sub_22F10CF48(v9);
      if (!v9)
        goto LABEL_17;
    }
    goto LABEL_12;
  }
  if (!sub_22F1107D8(v9))
    goto LABEL_17;
  v9 = *(_QWORD *)v6;
  v10 = *(unsigned __int8 *)(*(_QWORD *)v6 + 16);
  if (*(_QWORD *)v6 && v10 == 39)
    goto LABEL_12;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
    goto LABEL_15;
  v9 = sub_22F10CF48(v9);
  if (!v9)
  {
    v9 = *(_QWORD *)v6;
    goto LABEL_14;
  }
LABEL_12:
  v5 = *(_QWORD *)(v9 + 32);
LABEL_17:
  if ((*(_BYTE *)(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
    return v5;
  else
    return *(_QWORD *)(a3 + 16832);
}

uint64_t sub_22EB2AFE4(uint64_t a1, uint64_t (**a2)(), unsigned int a3, void *a4, int a5)
{
  unint64_t v8;
  int v10;
  char v11;
  uint64_t v12;
  char v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  _DWORD *v28;
  uint64_t v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (***v34)();
  uint64_t v35;
  int v36;
  _BOOL4 v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _OWORD *v62;
  unsigned __int8 *v63;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _DWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  BOOL v79;
  int v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (**v85)();
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (**v90)();
  uint64_t v92;
  int v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  _QWORD *v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t (**v107)();
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t (**v123)();
  void *v124;
  uint64_t *v125;
  uint64_t v126;

  v8 = (unint64_t)a2;
  v126 = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
  {
    v11 = 0;
    v12 = 0;
    v123 = a2;
    v124 = a4;
    LOBYTE(v10) = 1;
    do
    {
      v13 = v11;
      v14 = sub_22EFFED0C((unsigned __int8 *)(&v123)[v12]);
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v14 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) & 0xFEu)
         - 2 <= 3
        && (*(_DWORD *)v14 & 0x300) != 0x100)
      {
        LOBYTE(v10) = 2;
      }
      v11 = 1;
      v12 = 1;
    }
    while ((v13 & 1) == 0);
  }
  else
  {
    LOBYTE(v10) = 1;
  }
  if (!sub_22E3E4B64(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0)))
  {
    v15 = 1;
    v16 = sub_22EB1B954(a1, (void *)v8);
    if ((v16 & 1) != 0)
      return v15;
    v8 = v16 & 0xFFFFFFFFFFFFFFFELL;
  }
  v15 = 1;
  v17 = sub_22EB1B954(a1, a4);
  if ((v17 & 1) == 0)
  {
    v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
    v19 = *(_QWORD *)(v8 + 8);
    v20 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v121 = 0;
    v21 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFF0);
    v22 = *(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF0);
    v119 = a5;
    if ((*(_DWORD *)(v22 + 16) & 0x400) != 0
      || (v23 = v20 & 0xFFFFFFFFFFFFFFF0, (*(_BYTE *)(*(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0))
    {
      v122 = v8;
      v25 = 0;
      v121 = sub_22EB2AEC0(*(_QWORD *)(v8 + 8), *(_QWORD *)(v18 + 8), *(_QWORD *)(a1 + 88));
LABEL_27:
      v27 = v8;
      v28 = (_DWORD *)v18;
      goto LABEL_28;
    }
    v24 = *(_DWORD *)(v22 + 16);
    if (v24 == 39)
      goto LABEL_17;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
    {
      v22 = sub_22F10CF48(v22);
      if (v22)
      {
LABEL_17:
        v25 = 0;
        v122 = v8;
LABEL_26:
        v121 = *(_QWORD *)(v22 + 32);
        goto LABEL_27;
      }
      v22 = *v21;
      v24 = *(unsigned __int8 *)(*v21 + 16);
    }
    if (v24 == 32
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
      && (v22 = sub_22F10CF48(v22)) != 0)
    {
      v122 = v8;
      v26 = *(_QWORD *)(a1 + 72);
      if (((1 << *(_DWORD *)(v26 + 400)) & 0x22) == 0 || (*(_WORD *)(v26 + 148) & 0x20) != 0)
        return sub_22F3341E8(a1, a5, v8, v18, 0, 0);
      v25 = 0;
      goto LABEL_26;
    }
    v65 = *(_QWORD *)v23;
    v66 = *(unsigned __int8 *)(*(_QWORD *)v23 + 16);
    if (*(_QWORD *)v23 && v66 == 39)
      goto LABEL_98;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v65 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
    {
      v65 = sub_22F10CF48(v65);
      if (v65)
      {
LABEL_98:
        v25 = 0;
        v27 = v18;
        v122 = v18;
LABEL_99:
        v121 = *(_QWORD *)(v65 + 32);
LABEL_100:
        v18 = v8;
        v28 = (_DWORD *)v27;
        goto LABEL_28;
      }
      v65 = *(_QWORD *)v23;
      v66 = *(unsigned __int8 *)(*(_QWORD *)v23 + 16);
    }
    if (v66 == 32
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v65 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
      && (v65 = sub_22F10CF48(v65)) != 0)
    {
      v121 = *(_QWORD *)(v65 + 32);
      v122 = v18;
      v67 = *(_QWORD *)(a1 + 72);
      if (((1 << *(_DWORD *)(v67 + 400)) & 0xDD) == 0 && (*(_WORD *)(v67 + 148) & 0x20) == 0)
      {
        v25 = 0;
        v27 = v18;
        goto LABEL_100;
      }
      sub_22E8FCA40((_QWORD *)a1, a3, 0x128Bu, 0, (uint64_t)&v123);
      v68 = sub_22E8901B8((uint64_t)&v123, &v121);
LABEL_108:
      v43 = v68;
      v44 = v18;
      goto LABEL_57;
    }
    v69 = sub_22E3E4B64(*v21);
    if (v69)
    {
      v122 = v8;
      v70 = (_DWORD *)v8;
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
      {
        v70 = (_DWORD *)v8;
        if ((*(_BYTE *)(v8 + 1) & 3) == 0)
        {
          v116 = v69;
          v117 = sub_22F335E6C(a1, v8);
          if ((v117 & 1) != 0)
            return 1;
          v70 = (_DWORD *)(v117 & 0xFFFFFFFFFFFFFFFELL);
          v69 = v116;
        }
      }
      v10 = (*v70 >> 8) & 3;
      v71 = *(_QWORD *)(v69 + 32);
      v121 = v71;
      v72 = *(_QWORD *)(v8 + 8);
      v73 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v73 & 8) != 0)
      {
        v75 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFFF0) + 0x18);
        v74 = *(_QWORD *)((v73 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
      }
      else
      {
        v74 = 0;
        v75 = 0;
      }
      v25 = 2 * (v10 != 0);
      v85 = (uint64_t (**)())(v74 | v75 | (v73 | v72) & 7);
      v86 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v86 & 8) != 0)
      {
        v88 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFFF0) + 0x18);
        v87 = *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
      }
      else
      {
        v87 = 0;
        v88 = 0;
      }
      v89 = v88 | (v86 | v71) & 7;
      v123 = v85;
      sub_22E49FA0C(&v123, v89 | v87);
      v90 = v123;
      if ((_DWORD)v123 == (_DWORD)v89 && HIDWORD(v123) == HIDWORD(v87))
        goto LABEL_163;
      v92 = *(_QWORD *)(a1 + 72);
      if ((*(_BYTE *)(v92 + 104) & 0x20) != 0 && (*(_BYTE *)(v92 + 120) & 0x20) != 0)
        goto LABEL_163;
LABEL_159:
      if (((unint64_t)v90 & 0xCFFFFFFF8) != 0)
      {
        v113 = *(_QWORD *)(a1 + 88);
        v123 = v90;
        v114 = sub_22E491354((unsigned int *)&v123, v121);
        v115 = sub_22EF5DBC4(v113, v114, (uint64_t)v123);
      }
      else
      {
        v115 = v121 | v90 & 7;
      }
      v121 = v115;
LABEL_163:
      v27 = v8;
      v28 = (_DWORD *)v18;
      v8 = (unint64_t)v70;
      goto LABEL_28;
    }
    v76 = *(_QWORD *)(*(_QWORD *)(*v21 + 8) & 0xFFFFFFFFFFFFFFF0);
    v77 = *(_DWORD *)(v76 + 16);
    if (v77 == 11
      && ((v78 = *(_QWORD *)(*(_QWORD *)(v76 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
        ? (v79 = *(_DWORD *)(v78 + 16) == 11)
        : (v79 = 0),
          v79 && ((v97 = (*(_DWORD *)(v78 + 16) >> 19) & 0x1FF, (v97 - 48) < 0xC) || v97 == 96)))
    {
      if ((v77 & 0xFF80000) != 0x3000000)
      {
        v122 = v8;
        v70 = (_DWORD *)v8;
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
        {
          v70 = (_DWORD *)v8;
          if ((*(_BYTE *)(v8 + 1) & 3) == 0)
          {
            v118 = sub_22F335E6C(a1, v8);
            if ((v118 & 1) != 0)
              return 1;
            v70 = (_DWORD *)(v118 & 0xFFFFFFFFFFFFFFFELL);
          }
        }
        v10 = (*v70 >> 8) & 3;
        v102 = sub_22F1113D8(v76, *(_QWORD *)(a1 + 88));
        v121 = v102;
        v103 = *(_QWORD *)(v8 + 8);
        v104 = *(_QWORD *)((v103 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v104 & 8) != 0)
        {
          v106 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v105 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v105 = 0;
          v106 = 0;
        }
        v25 = 2 * (v10 != 0);
        v107 = (uint64_t (**)())(v105 | v106 | (v104 | v103) & 7);
        v108 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v108 & 8) != 0)
        {
          v110 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v109 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v109 = 0;
          v110 = 0;
        }
        v111 = v110 | (v108 | v102) & 7;
        v123 = v107;
        sub_22E49FA0C(&v123, v111 | v109);
        v90 = v123;
        if ((_DWORD)v123 == (_DWORD)v111 && HIDWORD(v123) == HIDWORD(v109))
          goto LABEL_163;
        goto LABEL_159;
      }
      v98 = a3;
      v99 = (_QWORD *)a1;
      v100 = 4748;
    }
    else
    {
      if ((v77 & 0xFEu) - 2 <= 3)
      {
        sub_22F0D5A50(v8);
        sub_22E8FCA40((_QWORD *)a1, v80, 0x14EBu, 0, (uint64_t)&v123);
        sub_22F0D4E74(v8);
        v122 = v81;
        sub_22E8906A0((uint64_t)&v123, (uint64_t *)&v122);
        sub_22E903BEC((unsigned int *)&v123);
        v82 = sub_22EF5F824(*(_QWORD *)(a1 + 88), v19);
        v27 = sub_22E90092C(a1, v8, v82, 12, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
        v83 = *(_QWORD *)(v27 + 8);
        v122 = v27;
        v84 = *(_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF0);
        if (!v84 || *(_BYTE *)(v84 + 16) != 39)
          v84 = sub_22F10CF48(v84);
        v25 = 0;
        v121 = *(_QWORD *)(v84 + 32);
        v28 = (_DWORD *)v18;
        v8 = v27;
LABEL_28:
        v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v30 = *(_DWORD *)(v29 + 16);
        if (v29)
          v31 = v30 == 11;
        else
          v31 = 0;
        if (v31)
        {
          if (((*(_DWORD *)(v29 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
            goto LABEL_41;
        }
        else
        {
          if (v29 && v30 == 44)
          {
            v32 = sub_22F114198(*(_QWORD *)(v29 + 24));
            if (((*(_BYTE *)(v32 + 74) & 1) != 0 || *(_QWORD *)(v32 + 128) > 7uLL)
              && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v29 + 24)) + 76) & 0x80) == 0)
            {
              goto LABEL_43;
            }
LABEL_41:
            if ((*(_BYTE *)(v18 + 1) & 0x80) == 0)
            {
              sub_22E8FCA40((_QWORD *)a1, a3, 0x1393u, 0, (uint64_t)&v123);
              sub_22F0D4E74(v18);
              v120 = v33;
              v34 = &v123;
LABEL_58:
              sub_22E8906A0((uint64_t)v34, &v120);
              sub_22E903BEC((unsigned int *)&v123);
              return 1;
            }
            goto LABEL_43;
          }
          if (v30 != 9)
            goto LABEL_41;
        }
LABEL_43:
        v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v36 = *(_DWORD *)(v35 + 16) & 0xFF800FF;
        v38 = v36 == 93323275 || v36 == 87556107;
        if (v35)
          v39 = !v38;
        else
          v39 = 1;
        if (!v39 && (*(_BYTE *)(v18 + 1) & 0x80) == 0)
        {
          sub_22E8FCA40((_QWORD *)a1, a3, 0x1B67u, 0, (uint64_t)&v123);
          sub_22F0D4E74(v18);
          v120 = v40;
          sub_22E8906A0((uint64_t)&v123, &v120);
          sub_22E903BEC((unsigned int *)&v123);
        }
        v41 = *(_QWORD *)(v121 & 0xFFFFFFFFFFFFFFF0);
        if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v41 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
           - 25 <= 1)
        {
          sub_22F0D5A50(v27);
          sub_22E8FCA40((_QWORD *)a1, v42, 0x1289u, 0, (uint64_t)&v123);
          v43 = sub_22E8901B8((uint64_t)&v123, &v121);
          v44 = v27;
LABEL_57:
          sub_22F0D4E74(v44);
          v120 = v45;
          v34 = (uint64_t (***)())v43;
          goto LABEL_58;
        }
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v41 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFF800FF) != 0x528000B
          || (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
        {
          if ((*(_BYTE *)(v41 + 17) & 4) == 0)
          {
            LODWORD(v124) = 4746;
            v125 = (uint64_t *)&v122;
            v123 = off_24FAB8488;
            if ((sub_22EE8B0B0(a1, a3, v121) & 1) != 0)
              return 1;
          }
        }
        else
        {
          sub_22E8FCA40((_QWORD *)a1, a3, 0x1489u, 0, (uint64_t)&v123);
          sub_22F0D4E74(v27);
          v120 = v46;
          sub_22E8906A0((uint64_t)&v123, &v120);
          sub_22E903BEC((unsigned int *)&v123);
          if ((v121 & 0xF) == 0 && (*(_BYTE *)((v121 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xF) == 0)
            LOBYTE(v10) = 0;
        }
        v47 = *(_QWORD *)(*((_QWORD *)sub_22EFFA6B0((unsigned __int8 *)v8) + 1) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v47 + 17) & 8) == 0
          || *(_DWORD *)(a1 + 1904) < 2u
          || (v48 = sub_22F10D4DC(v47)) == 0
          || (v49 = *(unsigned int *)(a1 + 1904), (_DWORD)v49 == 1))
        {
LABEL_92:
          v15 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 32, 3);
          sub_22EB54CBC(v15, (_DWORD *)v8, v28, v121, v10, v25, v119);
          return v15;
        }
        v50 = v48;
        v51 = *(_QWORD *)(a1 + 1896);
        v52 = 8 * v49 - 8;
        while (1)
        {
          v53 = *(_QWORD *)(v51 + v52);
          v54 = *(_DWORD *)(v53 + 8) & 7;
          if (v53)
            v55 = (*(_DWORD *)(v53 + 8) & 7u) - 4 >= 0xFFFFFFFD;
          else
            v55 = 0;
          if (!v55)
            goto LABEL_92;
          if (v54 == 1 || v54 == 3)
          {
            v58 = *(_QWORD *)(v53 + 1424);
            if (!v58)
              goto LABEL_91;
            v57 = v58 + 40;
          }
          else
          {
            if (v54 != 2)
              goto LABEL_91;
            v56 = *(_QWORD *)(v53 + 1488);
            if (!v56)
              goto LABEL_91;
            v57 = v56 + 72;
          }
          v59 = *(_QWORD *)(v50 + 24);
          v60 = *(_QWORD *)(v59 + 16);
          v61 = v60 & 0xFFFFFFFFFFFFFFF8;
          if ((v60 & 4) != 0)
            v61 = *(_QWORD *)(v61 + 8);
          if (v61 == v57 && (*(_QWORD *)(v59 + 8) > 7uLL || *(_QWORD *)(v57 + 24) == v59))
            goto LABEL_92;
          v62 = *(_OWORD **)(a1 + 88);
          v63 = sub_22EFFA6B0((unsigned __int8 *)v8);
          sub_22EB28D0C(v62, *((_QWORD *)v63 + 1), v53);
LABEL_91:
          v52 -= 8;
          if (!v52)
            goto LABEL_92;
        }
      }
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
      {
        sub_22F0D5A50(v18);
        sub_22E8FCA40((_QWORD *)a1, v93, 0x14EBu, 0, (uint64_t)&v123);
        sub_22F0D4E74(v18);
        v122 = v94;
        sub_22E8906A0((uint64_t)&v123, (uint64_t *)&v122);
        sub_22E903BEC((unsigned int *)&v123);
        v95 = sub_22EF5F824(*(_QWORD *)(a1 + 88), v20);
        v27 = sub_22E90092C(a1, v18, v95, 12, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
        v96 = *(_QWORD *)(v27 + 8);
        v122 = v27;
        v65 = *(_QWORD *)(v96 & 0xFFFFFFFFFFFFFFF0);
        if (!v65 || *(_BYTE *)(v65 + 16) != 39)
          v65 = sub_22F10CF48(v65);
        v25 = 0;
        goto LABEL_99;
      }
      v98 = a3;
      v99 = (_QWORD *)a1;
      v100 = 5012;
    }
    sub_22E8FCA40(v99, v98, v100, 0, (uint64_t)&v123);
    sub_22F0D4E74(v8);
    v122 = v101;
    v68 = sub_22E8906A0((uint64_t)&v123, (uint64_t *)&v122);
    goto LABEL_108;
  }
  return v15;
}

unint64_t sub_22EB2BBA4(_QWORD *a1, uint64_t a2, unsigned int a3, unsigned __int8 a4)
{
  uint64_t v7;
  int v8;
  BOOL v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  unsigned int v17;
  char v18;
  unsigned int v19[24];
  unsigned __int8 v20;
  unsigned int v21;

  v21 = a3;
  v20 = a4;
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_DWORD *)(v7 + 16);
  if (v7)
    v9 = v8 == 11;
  else
    v9 = 0;
  if (v9)
  {
    if (((*(_DWORD *)(v7 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
      goto LABEL_16;
  }
  else if (v7 && v8 == 44)
  {
    v10 = sub_22F114198(*(_QWORD *)(v7 + 24));
    if (((*(_BYTE *)(v10 + 74) & 1) != 0 || *(_QWORD *)(v10 + 128) > 7uLL)
      && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v7 + 24)) + 76) & 0x80) == 0)
    {
      goto LABEL_16;
    }
  }
  else if (v8 == 9)
  {
    goto LABEL_16;
  }
  if ((*(_BYTE *)(a2 + 1) & 0x80) == 0)
  {
    sub_22F0D5A50(a2);
    sub_22E8FCA40(a1, v11, 0xEADu, 0, (uint64_t)v19);
    sub_22E894E38((uint64_t)v19, &v20);
    sub_22E903BEC(v19);
    return 0;
  }
LABEL_16:
  sub_22F00905C(a2, a1[11], 0, (uint64_t)&v16);
  if (!v18)
    goto LABEL_28;
  if ((sub_22E8BAD7C((uint64_t)&v16, 0) & 1) == 0 && !sub_22F30FDA8((uint64_t)&v16, a3))
  {
    if (!v18)
      goto LABEL_28;
    v14 = 1;
    goto LABEL_19;
  }
  sub_22F0D5A50(a2);
  sub_22E8FCA40(a1, v12, 0xEAEu, 0, (uint64_t)v19);
  v13 = sub_22E894E38((uint64_t)v19, &v20);
  sub_22E89519C(v13, &v21);
  sub_22E903BEC(v19);
  v14 = 0;
  if (v18)
  {
LABEL_19:
    if (v17 >= 0x41)
    {
      if (v16)
        MEMORY[0x2348A0E84](v16, 0x1000C8000313F17);
    }
    if ((v14 & 1) == 0)
      return 0;
LABEL_28:
    sub_22EF67C8C(a1[11]);
    return sub_22F32DB2C() & 0xFFFFFFFFFFFFFFFELL;
  }
  return 0;
}

void **sub_22EB2BD90(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  unsigned __int8 *v4;
  void **result;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696);
  while (1)
  {
    v4 = sub_22EFFA6B0(a2);
    if (*v4 != 188 || (v4[2] & 4) != 0)
      break;
    a2 = (unsigned __int8 *)*((_QWORD *)v4 + 2);
  }
  result = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(v2 - 248), v4);
  v6 = *(_QWORD *)(v2 - 240);
  v7 = -232;
  if (v6 == *(_QWORD *)(v2 - 248))
    v7 = -228;
  if (result != (void **)(v6 + 8 * *(unsigned int *)(v2 + v7)))
  {
    *result = (void *)-2;
    ++*(_DWORD *)(v2 - 224);
  }
  return result;
}

uint64_t sub_22EB2BE20(_QWORD *a1, uint64_t a2, int a3, int a4, char *a5, uint64_t a6, void *__src, uint64_t a8)
{
  int *v14;
  uint64_t v16;
  int v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  void *v37;
  const void *v38;
  void **v39;
  uint64_t v40;
  void *v41;
  void **v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  int v54;
  void *v55;
  void *__dst[2];
  unint64_t v57;
  uint64_t v58;
  unsigned int v59;
  char v60;
  uint64_t (**v61)();
  __int16 v62;
  char v63;
  uint64_t v64[2];
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  char v68;
  _QWORD *v69;
  uint64_t v70;
  _BYTE v71[32];
  _QWORD *v72;
  __int128 v73;
  _QWORD v74[7];

  v14 = (int *)a2;
  v74[5] = *MEMORY[0x24BDAC8D0];
  v16 = *(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)(v16 + 16) & 0xFE00000u) >= 0x8180001 && v16 != 0 && *(_DWORD *)(v16 + 16) == 11)
  {
    v45 = sub_22EB19A28(a1);
    if ((v45 & 1) != 0)
      return 1;
    v46 = sub_22EB1A358(a1, v45 & 0xFFFFFFFFFFFFFFFELL, 0);
    if ((v46 & 1) != 0)
      return 1;
    v14 = (int *)(v46 & 0xFFFFFFFFFFFFFFFELL);
    v16 = *(_QWORD *)(*(_QWORD *)((v46 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
  }
  v19 = *v14;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
  {
    if ((v19 & 0x8000) != 0)
      return sub_22F3C3598(a1[11], *(_QWORD *)(a1[11] + 16832), (uint64_t)v14, a3, a4, a5, a6, a8, __src, a8);
    goto LABEL_64;
  }
  if ((v19 & 0x8000) == 0)
  {
    v20 = sub_22F10ACF8(v16);
    if (sub_22F1110EC(*(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF0), 0))
    {
LABEL_64:
      sub_22EFF605C((uint64_t)v14);
      sub_22E8FCA40(a1, v47, 0x10B9u, 0, (uint64_t)&v61);
      sub_22F0D4E74((uint64_t)v14);
      v64[0] = v48;
      sub_22E8906A0((uint64_t)&v61, v64);
      sub_22E903BEC((unsigned int *)&v61);
      return 1;
    }
  }
  v69 = v71;
  v70 = 0x400000000;
  if (!a6)
  {
    v51 = 0;
    v52 = v71;
LABEL_74:
    v49 = sub_22F3C3598(a1[11], *(_QWORD *)(a1[11] + 17264), (uint64_t)v14, a3, a4, v52, v51, a8, __src, a8);
    goto LABEL_69;
  }
  v54 = a4;
  v55 = __src;
  v21 = 0;
  v22 = 8 * a6;
  do
  {
    v23 = *(_QWORD *)a5;
    v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 8) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(v24 + 16) & 0xFE00000u) >= 0x8180001 && v24 != 0 && *(_DWORD *)(v24 + 16) == 11)
    {
      v29 = sub_22EB19A28(a1);
      if ((v29 & 1) != 0)
        goto LABEL_30;
      v30 = sub_22EB1A358(a1, v29 & 0xFFFFFFFFFFFFFFFELL, 0);
      if ((v30 & 1) != 0)
        goto LABEL_30;
      v23 = v30 & 0xFFFFFFFFFFFFFFFELL;
    }
    if ((*(_BYTE *)(v23 + 1) & 0x80) != 0)
    {
LABEL_42:
      v35 = v70;
      if (v70 >= (unint64_t)HIDWORD(v70))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v35 = v70;
      }
      v69[v35] = v23;
      LODWORD(v70) = v70 + 1;
      goto LABEL_45;
    }
    sub_22EFF605C(v23);
    v62 = 256;
    v63 = 0;
    v61 = off_24FAB8D98;
    v28 = sub_22ED03140(a1, v27, v23, &v61);
    if ((v28 & 1) != 0)
    {
      sub_22EFF605C(v23);
      sub_22E8FCA40(a1, v31, 0x10FDu, 0, (uint64_t)&v61);
      sub_22F0D4E74(v23);
      v64[0] = v32;
      sub_22E8906A0((uint64_t)&v61, v64);
      sub_22E903BEC((unsigned int *)&v61);
LABEL_30:
      v21 = 1;
      goto LABEL_45;
    }
    v23 = v28 & 0xFFFFFFFFFFFFFFFELL;
    LOWORD(v64[0]) = 0;
    v64[1] = 0;
    LODWORD(v65) = 0;
    if ((*(_BYTE *)((v28 & 0xFFFFFFFFFFFFFFFELL) + 2) & 1) != 0
      || !sub_22F00554C(v28 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)v64, a1[11], 0, 0))
    {
LABEL_38:
      v34 = 0;
      goto LABEL_39;
    }
    v59 = v67;
    if (v67 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v58, (const llvm::APInt *)&v66);
    else
      v58 = v66;
    v60 = v68;
    v33 = sub_22E984E5C((uint64_t)&v58);
    if ((v33 & 1) != 0)
    {
      v34 = 0;
      goto LABEL_34;
    }
    sub_22EFF605C(v23);
    sub_22E8FCA40(a1, v36, 0x10F0u, 0, (uint64_t)&v61);
    v72 = v74;
    v73 = xmmword_22F455490;
    llvm::APInt::toString();
    v37 = (void *)v73;
    if ((unint64_t)v73 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v38 = v72;
    if ((unint64_t)v73 >= 0x17)
    {
      v40 = (v73 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v73 | 7) != 0x17)
        v40 = v73 | 7;
      v53 = v40 + 1;
      v41 = v72;
      v42 = (void **)operator new(v40 + 1);
      v38 = v41;
      v39 = v42;
      __dst[1] = v37;
      v57 = v53 | 0x8000000000000000;
      __dst[0] = v42;
    }
    else
    {
      HIBYTE(v57) = v73;
      v39 = __dst;
      if (!(_QWORD)v73)
        goto LABEL_55;
    }
    memmove(v39, v38, (size_t)v37);
LABEL_55:
    *((_BYTE *)v37 + (_QWORD)v39) = 0;
    if (v72 != v74)
      free(v72);
    v43 = sub_22F2F3734((uint64_t)&v61, __dst);
    sub_22F0D4E74(v23);
    v72 = v44;
    sub_22E8906A0(v43, (uint64_t *)&v72);
    if (SHIBYTE(v57) < 0)
      operator delete(__dst[0]);
    sub_22E903BEC((unsigned int *)&v61);
    v34 = 3;
    v21 = 1;
LABEL_34:
    if (v59 >= 0x41 && v58)
      MEMORY[0x2348A0E84](v58, 0x1000C8000313F17);
    if (v33)
      goto LABEL_38;
LABEL_39:
    if (v65 >= 2)
      sub_22EF53BC0(&v65);
    if (!v34)
      goto LABEL_42;
LABEL_45:
    a5 += 8;
    v22 -= 8;
  }
  while (v22);
  if ((v21 & 1) == 0)
  {
    v52 = v69;
    v51 = v70;
    __src = v55;
    a4 = v54;
    goto LABEL_74;
  }
  v49 = 1;
LABEL_69:
  if (v69 != (_QWORD *)v71)
    free(v69);
  return v49;
}

uint64_t sub_22EB2C3A8(_QWORD *a1, uint64_t *a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unsigned int v58;
  unsigned int v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  unsigned int v74;
  unint64_t v75;
  unint64_t v76;
  unsigned int v77;
  unsigned int v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unsigned int v83;
  unsigned int v84;
  unint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  int v93;
  int v94;
  int v95;
  _OWORD *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  _OWORD *v100;
  unint64_t v101;
  _OWORD *v102;
  uint64_t v108;
  unsigned int v109[24];
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  _BYTE v113[80];
  __int128 v114;
  uint64_t v115;
  unint64_t v116;
  void *v117;
  void *v118;
  uint64_t v119;
  _BYTE v120[64];
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int16 v129;
  char v130;
  int v131;
  void *v132;
  uint64_t v133;
  _QWORD v134[26];

  v134[24] = *MEMORY[0x24BDAC8D0];
  v132 = v134;
  v133 = 0x400000000;
  if (!a7)
    goto LABEL_85;
  v8 = a6;
  v10 = 1;
  v108 = a6 + (a7 << 6);
  do
  {
    v11 = *(_QWORD *)(v8 + 16);
    if (!v11)
    {
      v12 = 0;
      v13 = a1[11];
      v14 = *(_QWORD *)(v13 + 16480);
      v116 = v14;
      v15 = *(_DWORD *)(v8 + 8);
      goto LABEL_24;
    }
    if (v11 >= 0x10)
    {
      v12 = 0;
      v16 = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0);
      if (v16 && *(_BYTE *)(v16 + 16) == 57)
      {
        v11 = *(_QWORD *)(v16 + 8);
        v12 = *(uint64_t **)(v16 + 24);
      }
    }
    else
    {
      v12 = 0;
      v11 = 0;
    }
    v116 = v11;
    v17 = *v12;
    for (i = *v12; ; i = sub_22F115B7C(i))
    {
      while (1)
      {
        if ((i & 0xF) != 0)
          goto LABEL_21;
        v19 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v19 <= 0x39)
          break;
LABEL_16:
        if (sub_22F115668(i))
          v17 = i;
        i = sub_22F115B7C(i);
        if (!i)
          goto LABEL_23;
      }
      if (v19 == 24)
        goto LABEL_22;
      if (v19 == 26)
        break;
      if (((1 << v19) & 0x20000000200003CLL) == 0)
        goto LABEL_16;
LABEL_21:
      ;
    }
    if ((*(_BYTE *)(i + 23) & 0x10) == 0)
      goto LABEL_21;
LABEL_22:
    v17 = i;
LABEL_23:
    v15 = sub_22F115668(v17);
    v14 = v116;
    v13 = a1[11];
LABEL_24:
    v20 = *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0);
    v21 = *(_DWORD *)(v20 + 16) & 0x700;
    if (!v21)
    {
      if (sub_22F110744(v20, v13)
        || (v26 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v116 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                     + 16),
            v26 == 32)
        || v26 == 39)
      {
        if (!sub_22F10AFE4(v116, a1[11]))
        {
          v13 = a1[11];
          v14 = v116;
          goto LABEL_25;
        }
      }
      sub_22E8FCA40(a1, v15, 0x109Cu, 0, (uint64_t)&v117);
      sub_22E8901B8((uint64_t)&v117, (uint64_t *)&v116);
      sub_22E903BEC((unsigned int *)&v117);
      v10 = 0;
      goto LABEL_75;
    }
LABEL_25:
    v22 = sub_22EFBB670(v13, a1[27], v15, *(_DWORD *)(v8 + 8), *(_QWORD *)v8, v14, (uint64_t)v12, 0);
    v23 = v22;
    *(_DWORD *)(v22 + 28) |= 0x200u;
    if (a2)
    {
      v24 = *(_DWORD *)(v8 + 8);
      *(_QWORD *)&v114 = *(_QWORD *)(v22 + 40);
      DWORD2(v114) = v24;
      sub_22EFC6D6C((uint64_t)&v115, v114);
      v117 = 0;
      v118 = v120;
      v119 = 0x800000000;
      v122 = 0;
      v123 = 0;
      v121 = 0;
      v124 = a1;
      v125 = v114;
      v126 = v115;
      v127 = 0;
      v128 = 0;
      v129 = 1;
      v130 = 1;
      v131 = 0;
      sub_22EC56024((uint64_t)&v117);
      LOBYTE(v131) = 0;
      sub_22EC63520(a1, &v117, a2, 0, 0);
      sub_22EA04CD4((uint64_t)a1, (uint64_t)&v117, a1[27], a2, 0, 0);
      if ((_DWORD)v119)
      {
        v25 = *(_QWORD *)v118 & 0xFFFFFFFFFFFFFFFCLL;
        sub_22E8FCA40(a1, *(_DWORD *)(v8 + 8), 0x1214u, 0, (uint64_t)&v111);
        v110 = *(_QWORD *)(v23 + 40);
        sub_22E894538((uint64_t)&v111, &v110);
        sub_22E903BEC((unsigned int *)&v111);
        sub_22E8FCA40(a1, *(_DWORD *)(v25 + 24), 0x6Du, 0, (uint64_t)v109);
        sub_22E903BEC(v109);
      }
      else
      {
        sub_22EA0483C((uint64_t)a1, v23, a2, 1);
      }
      if ((_BYTE)v131)
      {
        if ((_DWORD)v117 == 5)
        {
          sub_22EC64D18(v124, (uint64_t)&v117);
        }
        else if (v122 && (*(_DWORD *)(v124[9] + 52) & 0x400000) != 0)
        {
          sub_22E90B5FC((unint64_t)v124, (uint64_t)&v117);
        }
      }
      if (v121)
      {
        v42 = sub_22EC6CBD0(v121);
        MEMORY[0x2348A0E9C](v42, 0x10E0C409F09D3C3);
      }
      if (v118 != v120)
        free(v118);
    }
    else
    {
      sub_22EFCCFA0(a1[27], v22);
    }
    v27 = *(_QWORD *)(v8 + 24);
    if (v21)
      v28 = 1;
    else
      v28 = v27 == 0;
    if (!v28 && (*(_BYTE *)(v27 + 1) & 0x80) == 0)
      v27 = sub_22ECFABE8(a1, *(unsigned __int8 **)(v8 + 24), v116, 3, 0) & 0xFFFFFFFFFFFFFFFELL;
    v29 = *(_QWORD *)(v8 + 32);
    if (v21)
      v30 = 1;
    else
      v30 = v29 == 0;
    if (!v30 && (*(_BYTE *)(v29 + 1) & 0x80) == 0)
      v29 = sub_22ECFABE8(a1, *(unsigned __int8 **)(v8 + 32), v116, 3, 0) & 0xFFFFFFFFFFFFFFFELL;
    v31 = *(_QWORD *)(v8 + 40);
    *(_QWORD *)&v114 = v31;
    if (v21)
      v32 = 1;
    else
      v32 = v31 == 0;
    if (v32 || (*(_BYTE *)(v31 + 1) & 0x80) != 0)
      goto LABEL_70;
    if (!sub_22F110744(*(_QWORD *)(*(_QWORD *)(v31 + 8) & 0xFFFFFFFFFFFFFFF0), a1[11]))
    {
      sub_22EFF605C(v114);
      sub_22E8FCA40(a1, v36, 0x109Eu, 0, (uint64_t)&v117);
      v37 = sub_22F2F37E0((uint64_t)&v117, (uint64_t *)&v114);
      sub_22F0D4E74(v114);
      v111 = v38;
      sub_22E8906A0(v37, &v111);
      sub_22E903BEC((unsigned int *)&v117);
      goto LABEL_78;
    }
    sub_22F00905C(v114, a1[11], 0, (uint64_t)&v111);
    if (!v113[0])
      goto LABEL_70;
    v33 = v112;
    if (v112 > 0x40)
    {
      if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v111) != v33)
      {
        if (v111)
          MEMORY[0x2348A0E84](v111, 0x1000C8000313F17);
        goto LABEL_70;
      }
LABEL_79:
      sub_22EFF605C(v114);
      sub_22E8FCA40(a1, v39, 0x109Du, 0, (uint64_t)&v117);
      v40 = sub_22F2F37E0((uint64_t)&v117, (uint64_t *)&v114);
      sub_22F0D4E74(v114);
      v110 = v41;
      sub_22E8906A0(v40, &v110);
      sub_22E903BEC((unsigned int *)&v117);
      if (v113[0] && v112 > 0x40)
      {
        v34 = v111;
        if (!v111)
          goto LABEL_74;
        MEMORY[0x2348A0E84](v111, 0x1000C8000313F17);
      }
LABEL_78:
      v34 = 0;
      goto LABEL_74;
    }
    if (!v111)
      goto LABEL_79;
LABEL_70:
    v34 = 0;
    if (v27 && v29 && ((v10 ^ 1) & 1) == 0)
    {
      v35 = sub_22F32DC14((uint64_t)&v132);
      *(_QWORD *)v35 = v23;
      *(_DWORD *)(v35 + 32) = *(_DWORD *)(v8 + 48);
      *(_QWORD *)(v35 + 8) = v27;
      *(_QWORD *)(v35 + 16) = v29;
      *(_QWORD *)(v35 + 24) = v114;
      *(_DWORD *)(v35 + 36) = *(_DWORD *)(v8 + 52);
      *(_DWORD *)(v35 + 40) = *(_DWORD *)(v8 + 56);
      v34 = v10;
    }
LABEL_74:
    v10 = v34;
LABEL_75:
    v8 += 64;
  }
  while (v8 != v108);
  if ((v10 & 1) == 0)
  {
    if ((_DWORD)v133)
    {
      v91 = (uint64_t *)v132;
      v92 = 48 * v133;
      v90 = 1;
      do
      {
        if (*v91)
          sub_22EFC77E8(*v91, 1);
        v91 += 6;
        v92 -= 48;
      }
      while (v92);
    }
    else
    {
      v90 = 1;
    }
    goto LABEL_158;
  }
LABEL_85:
  v117 = &v119;
  v118 = (void *)0x400000000;
  v43 = sub_22EFC7ADC(a1[27]);
  v45 = v133;
  if ((v43 & 1) != 0)
  {
    v94 = a4;
    v93 = a5;
    v95 = a3;
    if (HIDWORD(v118) >= v133)
    {
      v98 = v118;
      if (v118 >= (unint64_t)v133)
        v99 = v133;
      else
        v99 = v118;
      if (v99)
      {
        v100 = v117;
        do
        {
          *v100 = 0uLL;
          v100[1] = 0uLL;
          v100 += 2;
          --v99;
        }
        while (v99);
        v98 = v118;
      }
      v101 = v98 - v45;
      if (v98 < v45)
      {
        v102 = (char *)v117 + 32 * v98;
        do
        {
          *v102 = 0uLL;
          v102[1] = 0uLL;
          v102 += 2;
        }
        while (!__CFADD__(v101++, 1));
      }
    }
    else
    {
      LODWORD(v118) = 0;
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v96 = v117;
      v97 = v45;
      do
      {
        *v96 = 0uLL;
        v96[1] = 0uLL;
        v96 += 2;
        --v97;
      }
      while (v97);
    }
    LODWORD(v118) = v45;
    v46 = (uint64_t *)v132;
    v88 = v133;
    goto LABEL_155;
  }
  v46 = (uint64_t *)v132;
  if (!(_DWORD)v133)
  {
    v88 = 0;
    v93 = a5;
    v95 = a3;
    v94 = a4;
LABEL_155:
    v90 = sub_22F3C395C(a1[11], *(_QWORD *)(a1[11] + 17272), v95, v94, v93, (uint64_t)v46, v88, v44, (uint64_t)v117, v118);
    goto LABEL_156;
  }
  v47 = 48 * v133;
  v48 = (int *)((char *)v132 + 32);
  v49 = 1;
  while (2)
  {
    v50 = v49;
    v51 = sub_22EB2D0B8();
    if (v51 < 2)
      goto LABEL_116;
    if (*((_QWORD *)v48 - 1))
    {
      if ((unint64_t)sub_22EB2D0B8() < 2)
        goto LABEL_116;
      sub_22EB25D60((uint64_t)a1, *v48, 1);
      if ((unint64_t)sub_22EB2D0B8() < 2)
        goto LABEL_116;
      v52 = sub_22EB2D0B8();
      if (v52 < 2)
        goto LABEL_116;
      v53 = v52;
      sub_22EB2EA08((uint64_t)a1, *v48, 7, *((_QWORD *)v48 - 1));
      if ((unint64_t)sub_22EB2D0B8() < 2)
        goto LABEL_116;
      if ((unint64_t)sub_22EB2D0B8() < 2)
        goto LABEL_116;
      sub_22EB25D60((uint64_t)a1, *v48, 1);
      if ((unint64_t)sub_22EB2D0B8() < 2)
        goto LABEL_116;
      v54 = sub_22EB2D0B8();
      if (v54 < 2)
        goto LABEL_116;
      v55 = v54;
      sub_22EB25D60((uint64_t)a1, *v48, 0);
      v56 = sub_22EB2D0B8();
      if (v56 < 2)
        goto LABEL_116;
      v51 = sub_22EB2F86C(a1, *v48, *v48, v56 & 0xFFFFFFFFFFFFFFFELL, v53 & 0xFFFFFFFFFFFFFFFELL, v55 & 0xFFFFFFFFFFFFFFFELL);
      if (v51 < 2)
        goto LABEL_116;
    }
    v57 = v51 & 0xFFFFFFFFFFFFFFFELL;
    if ((v51 & 0xFFFFFFFFFFFFFFFELL) != 0)
    {
      sub_22EFF605C(v51 & 0xFFFFFFFFFFFFFFFELL);
      v59 = v58;
    }
    else
    {
      v59 = 0;
    }
    v60 = sub_22EBCF22C((uint64_t)a1, v57, v59, 0, 0);
    v49 = 0;
    if (v60 < 2)
      goto LABEL_117;
    v61 = v60;
    v62 = a1[11];
    v63 = a1[27];
    v64 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)v48 - 4) + 16))(*((_QWORD *)v48 - 4));
    v65 = v61 & 0xFFFFFFFFFFFFFFFELL;
    v66 = sub_22EFBB670(v62, v63, v64, v64, 0, *(_QWORD *)((v61 & 0xFFFFFFFFFFFFFFFELL) + 8), 0, 0);
    *(_DWORD *)(v66 + 28) |= 0x200u;
    v67 = *(_QWORD *)(v66 + 48);
    v68 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)v48 - 4) + 16))(*((_QWORD *)v48 - 4));
    v111 = *(_QWORD *)(v66 + 40);
    v112 = v68;
    sub_22EFC6D6C((uint64_t)v113, v111);
    v69 = sub_22EB21CE8((uint64_t)a1, v66, v67, 1, (uint64_t)&v111, 0, 0, 0, 0, 0);
    v70 = v69;
    if (*((_QWORD *)v48 - 1))
    {
      sub_22EB1A358(a1, v69 & 0xFFFFFFFFFFFFFFFELL, 0);
      v71 = sub_22EB2D0B8();
    }
    else
    {
      v71 = sub_22EB1A358(a1, v69 & 0xFFFFFFFFFFFFFFFELL, 0);
    }
    if (v71 < 2)
      goto LABEL_116;
    if ((unint64_t)sub_22EB2D0B8() < 2)
      goto LABEL_116;
    v72 = (_QWORD *)*((_QWORD *)v48 - 4);
    v73 = v72[6];
    v74 = (*(uint64_t (**)(_QWORD *))(*v72 + 16))(v72);
    v111 = v72[5];
    v112 = v74;
    sub_22EFC6D6C((uint64_t)v113, v111);
    sub_22EB21CE8((uint64_t)a1, (uint64_t)v72, v73, 1, (uint64_t)&v111, 0, 0, 0, 0, 0);
    v75 = sub_22EB2D0B8();
    if (v75 < 2)
      goto LABEL_116;
    v76 = v75 & 0xFFFFFFFFFFFFFFFELL;
    if ((v75 & 0xFFFFFFFFFFFFFFFELL) != 0)
    {
      sub_22EFF605C(v75 & 0xFFFFFFFFFFFFFFFELL);
      v78 = v77;
    }
    else
    {
      v78 = 0;
    }
    v79 = sub_22EBCF22C((uint64_t)a1, v76, v78, 1, 0);
    v49 = 0;
    if (v79 < 2)
      goto LABEL_117;
    v80 = v79;
    v81 = sub_22EB2EA08((uint64_t)a1, *v48, 2, v70 & 0xFFFFFFFFFFFFFFFELL);
    if (v81 < 2)
    {
LABEL_116:
      v49 = 0;
      goto LABEL_117;
    }
    v82 = v81 & 0xFFFFFFFFFFFFFFFELL;
    if ((v81 & 0xFFFFFFFFFFFFFFFELL) != 0)
    {
      sub_22EFF605C(v81 & 0xFFFFFFFFFFFFFFFELL);
      v84 = v83;
    }
    else
    {
      v84 = 0;
    }
    v85 = sub_22EBCF22C((uint64_t)a1, v82, v84, 1, 0);
    v49 = 0;
    if (v85 >= 2)
    {
      v86 = v85;
      v87 = (_QWORD *)sub_22F32DC58((uint64_t)&v117);
      *v87 = v66;
      v87[1] = v65;
      v87[2] = v80 & 0xFFFFFFFFFFFFFFFELL;
      v87[3] = v86 & 0xFFFFFFFFFFFFFFFELL;
      v49 = v50;
    }
LABEL_117:
    v48 += 12;
    v47 -= 48;
    if (v47)
      continue;
    break;
  }
  v46 = (uint64_t *)v132;
  v88 = v133;
  if ((v49 & 1) != 0)
  {
    v93 = a5;
    v95 = a3;
    v94 = a4;
    goto LABEL_155;
  }
  if ((_DWORD)v133)
  {
    v89 = 48 * v133;
    v90 = 1;
    do
    {
      if (*v46)
        sub_22EFC77E8(*v46, 1);
      v46 += 6;
      v89 -= 48;
    }
    while (v89);
  }
  else
  {
    v90 = 1;
  }
LABEL_156:
  if (v117 != &v119)
    free(v117);
LABEL_158:
  if (v132 != v134)
    free(v132);
  return v90;
}

uint64_t sub_22EB2D0B8()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  unint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  int32x4_t v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  unint64_t v40;
  int v41;
  char v42;
  uint64_t v43;
  char v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  unint64_t v52;
  unint64_t v53;
  int v54;
  int v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  unint64_t v71;
  uint64_t v72;
  int v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int v79;
  BOOL v80;
  uint64_t v81;
  unsigned __int8 *v82;
  unsigned __int8 *v83;
  unsigned int v84;
  uint64_t v85;
  unsigned __int8 *v86;
  unsigned __int8 *v87;
  unsigned __int8 *v88;
  unsigned int v89;
  uint64_t v90;
  unsigned __int8 *v91;
  _DWORD *v92;
  uint64_t v93;
  void **v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *i;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  unint64_t v104;
  uint64_t v105;
  int v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unsigned __int8 *v115;
  uint64_t v116;
  unsigned __int8 *v117;
  uint64_t v118;
  _BOOL4 v119;
  unsigned __int8 *v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unsigned __int8 *v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int *v133;
  int v135;
  unint64_t v136;
  uint64_t v137;
  unsigned int v138;
  unint64_t v139;
  uint64_t v140;
  _DWORD *v141;
  _DWORD *v142;
  char v143;
  unint64_t v144;
  uint64_t v145;
  _DWORD *v146;
  _DWORD *v147;
  char v148;
  uint64_t v149;
  unint64_t v150;
  unint64_t v151;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int *v157;
  uint64_t v158;
  uint64_t v160;
  unsigned int v161;
  BOOL v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v166;
  BOOL v167;
  int v168;
  unint64_t v169;
  uint64_t v170;
  const char *v171;
  const char *v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  unsigned int v176;
  uint64_t v177;
  unint64_t v178;
  _BYTE v179[96];
  unint64_t v180;
  unsigned int v181;
  uint64_t v182;
  char v183;
  void *__p;
  uint64_t v185;
  uint64_t v186;
  char v187;
  int v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  _BYTE v194[12];
  char v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  void *v200;
  unint64_t v201;
  unint64_t v202;
  __int128 v203;
  __int128 v204;
  uint64_t v205;
  char v206;
  uint64_t v207;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = (uint64_t)v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = v0;
  v207 = *MEMORY[0x24BDAC8D0];
  v192 = (unint64_t)v1;
  if ((*(_BYTE *)(*(_QWORD *)(v0 + 72) + 1) & 2) != 0 && *v1 == 180)
  {
    sub_22F0D5A50((uint64_t)v1);
    v11 = v10;
    sub_22F0D60E4(v2);
    v193 = ((unint64_t)v11 << 32) | 1;
    *(_QWORD *)v194 = v11 | (unint64_t)(v12 << 32);
    v13 = *(_QWORD *)(v4 + 8);
    LODWORD(v202) = 9;
    *(_QWORD *)&v203 = 0;
    *((_QWORD *)&v203 + 1) = v13;
    LODWORD(v204) = 0;
    *((_QWORD *)&v204 + 1) = 0;
    sub_22EC395BC(&v200, v9, &v202, &v193, &v192, 1, 0, 1);
    v14 = sub_22EC3DF80((int)&v200, v9);
    v15 = v14;
    if ((v14 & 1) != 0)
    {
      sub_22EC3CE2C((uint64_t)&v200);
      return v15;
    }
    v192 = v14 & 0xFFFFFFFFFFFFFFFELL;
    sub_22EC3CE2C((uint64_t)&v200);
    v2 = v192;
  }
  v189 = 0;
  v188 = 0;
  v16 = sub_22EB45EC8(v9, v6, v4, v2);
  v190 = v17;
  v191 = v16;
  v15 = 1;
  if (v16 >= 2 && v17 >= 2)
  {
    v21 = *(_QWORD *)(v4 + 8);
    if ((*(_DWORD *)(*(_QWORD *)(v9 + 72) + 52) & 0x40000000) == 0)
    {
LABEL_8:
      v22 = v8;
      sub_22E903E38(v9, v21, v8, 0);
      sub_22E903E38(v9, *(_QWORD *)(v192 + 8), v8, 0);
      switch(v6)
      {
        case 0:
        case 1:
          v40 = sub_22EBC8F38(v9, (uint64_t *)&v191, (uint64_t *)&v190, &v188, v8, v6 == 1);
          goto LABEL_225;
        case 2:
        case 3:
          v26 = (unint64_t)sub_22EB3AC80((_QWORD *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, 0, v6 == 3);
          goto LABEL_63;
        case 4:
          v40 = (unint64_t)sub_22EB3B87C((_QWORD *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, 0);
          goto LABEL_225;
        case 5:
          v26 = sub_22EB3BB1C(v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, 5, 0);
          goto LABEL_63;
        case 6:
          v26 = sub_22EB3C804((unsigned int *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, 0);
          goto LABEL_63;
        case 7:
        case 8:
          v40 = (unint64_t)sub_22EB3D520((_QWORD *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, v6, 0);
          goto LABEL_225;
        case 9:
          v23 = v9;
          v24 = v8;
          v25 = 9;
          goto LABEL_10;
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
          v23 = v9;
          v24 = v8;
          v25 = v6;
LABEL_10:
          v26 = sub_22EB3EEE0(v23, (uint64_t *)&v191, (uint64_t *)&v190, v24, v25);
          goto LABEL_63;
        case 16:
          if ((*(_BYTE *)(*(_QWORD *)(v9 + 72) + 1) & 0x40) == 0)
            goto LABEL_224;
          v56 = (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL);
          v57 = (unsigned __int8 *)(v190 & 0xFFFFFFFFFFFFFFFELL);
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)sub_22EFFBBCC((unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL))
                                                              + 1) & 0xFFFFFFFFFFFFFFF0)
                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) == 32)
            goto LABEL_71;
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)sub_22EFFBBCC(v57) + 1) & 0xFFFFFFFFFFFFFFF0)
                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) == 32)
          {
            v57 = (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL);
            v56 = (unsigned __int8 *)(v190 & 0xFFFFFFFFFFFFFFFELL);
LABEL_71:
            if (v56 && *sub_22EFFBBCC(v57) == 181)
            {
              v58 = sub_22EFFBBCC(v56);
              if (*v58 != 200)
                goto LABEL_222;
              v59 = v58 + 16;
              if ((v58[27] & 1) != 0)
                v59 = (_QWORD *)(*v59 + 40);
              v60 = *v59;
              v61 = ~(_BYTE)v60;
              v62 = v60 & 0xFFFFFFFFFFFFFFF8;
              if ((v61 & 7) == 0)
                v62 = *(_QWORD *)(v62 + 16);
              if (v62)
              {
                v63 = *(unsigned int **)(v62 + 16);
                v64 = 6825;
                if (*v63 >= 0xFuLL)
                {
                  if (*((_QWORD *)v63 + 2) ^ 0x536D726F66726570 | *(_QWORD *)((char *)v63 + 23) ^ 0x726F7463656C6553)
                    v64 = 6825;
                  else
                    v64 = 6826;
                }
              }
              else
              {
LABEL_222:
                v64 = 6825;
              }
              sub_22E8FCA40((_QWORD *)v9, v8, v64, 0, (uint64_t)&v200);
              sub_22F0D4E74((uint64_t)v56);
              v202 = v111;
              sub_22E8906A0((uint64_t)&v200, (uint64_t *)&v202);
              sub_22E903BEC((unsigned int *)&v200);
            }
          }
LABEL_224:
          v40 = (unint64_t)sub_22EB46270(v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, v6);
LABEL_225:
          v52 = v40;
          goto LABEL_226;
        case 17:
        case 18:
          goto LABEL_224;
        case 19:
        case 20:
          if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL)
                                                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                        + 8) & 0xFFFFFFFFFFFFFFF0)
                                                + 16)
             - 55 < 2
            || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v190 & 0xFFFFFFFFFFFFFFFELL)
                                                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                        + 8) & 0xFFFFFFFFFFFFFFF0)
                                                + 16)
             - 55 <= 1)
          {
            v26 = sub_22F32F4EC((_QWORD *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8);
LABEL_63:
            v52 = v26;
LABEL_64:
            v53 = 0;
LABEL_65:
            LOBYTE(v54) = 0;
            v55 = 1;
LABEL_228:
            if (v52 >= 0x10)
            {
              v112 = v191;
              if ((v191 & 1) == 0)
              {
                v113 = v190;
                if ((v190 & 1) == 0)
                {
                  if (!v55)
                    goto LABEL_240;
                  v114 = *(_QWORD *)(v9 + 88);
                  if ((*(_BYTE *)(*(_QWORD *)(v114 + 2000) + 68) & 8) != 0)
                    goto LABEL_240;
                  if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(v114 + 15088) + 248))(*(_QWORD *)(v114 + 15088)) & 1) != 0)
                    goto LABEL_240;
                  v115 = sub_22EFFED0C((unsigned __int8 *)(v112 & 0xFFFFFFFFFFFFFFFELL));
                  v116 = sub_22E3E4B64(*(_QWORD *)(*((_QWORD *)v115 + 1) & 0xFFFFFFFFFFFFFFF0));
                  if (!v116
                    || (*(_DWORD *)(v116 + 16) & 0x780000) == 0x280000
                    || (*(_QWORD *)(v116 + 32) & 7 | *(_QWORD *)((*(_QWORD *)(v116 + 32) & 0xFFFFFFFFFFFFFFF0) + 8)) != *(_QWORD *)(v114 + 16792))
                  {
                    goto LABEL_240;
                  }
                  if ((v113 & 0xFFFFFFFFFFFFFFFELL) != 0)
                  {
                    v117 = sub_22EFFED0C((unsigned __int8 *)(v113 & 0xFFFFFFFFFFFFFFFELL));
                    v118 = sub_22E3E4B64(*(_QWORD *)(*((_QWORD *)v117 + 1) & 0xFFFFFFFFFFFFFFF0));
                    if (!v118 || (*(_DWORD *)(v118 + 16) & 0x780000) == 0x280000)
                    {
LABEL_240:
                      v119 = 0;
                      goto LABEL_241;
                    }
                    v119 = (*(_QWORD *)(v118 + 32) & 7 | *(_QWORD *)((*(_QWORD *)(v118 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                     + 8)) == *(_QWORD *)(v114 + 16792);
                  }
                  else
                  {
                    v119 = 1;
                  }
LABEL_241:
                  sub_22E9890B4(v9, (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL));
                  sub_22E9890B4(v9, (unsigned __int8 *)(v190 & 0xFFFFFFFFFFFFFFFELL));
                  v120 = sub_22EFFBBCC((unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL));
                  v121 = *v120;
                  if (v121 == 199)
                  {
                    sub_22EB1B398((unsigned int *)v9, (uint64_t)v120, v8, v190 & 0xFFFFFFFFFFFFFFFELL);
                  }
                  else if (v121 == 198)
                  {
                    v122 = *(_QWORD *)(v9 + 3344);
                    v123 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(v9 + 88) + 15192), "object_setClass", 0xFuLL);
                    v124 = sub_22EC65CE0((_QWORD *)v9, v122, v123, 0, 0, 0);
                    v125 = (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL);
                    if (v124 && *v125 == 198)
                    {
                      sub_22F0D60E4(v190 & 0xFFFFFFFFFFFFFFFELL);
                      v127 = sub_22F141A3C(v126, 0, *(_QWORD **)(v9 + 112), *(_DWORD **)(v9 + 72));
                      sub_22EFF605C(v191 & 0xFFFFFFFFFFFFFFFELL);
                      sub_22E8FCA40((_QWORD *)v9, v128, 0x1AA3u, 0, (uint64_t)&v200);
                      sub_22F0D5A50(v191 & 0xFFFFFFFFFFFFFFFELL);
                      *(_QWORD *)((char *)&v203 + 4) = 0;
                      BYTE12(v203) = 0;
                      LOBYTE(v203) = 0;
                      v202 = v129 | ((unint64_t)v129 << 32);
                      v205 = 0x1000000000000000;
                      v204 = *(_OWORD *)"object_setClass(";
                      v206 = 0;
                      v130 = sub_22E890748((uint64_t)&v200, &v202);
                      v131 = *((unsigned int *)v120 + 7);
                      *(_QWORD *)&v194[4] = 0;
                      v195 = 0;
                      v197 = 0;
                      v198 = 0x100000000000000;
                      v199 = 0;
                      v193 = v131 | (v8 << 32);
                      v194[0] = 1;
                      v196 = (void *)44;
                      v132 = sub_22E890748(v130, &v193);
                      v183 = 0;
                      v182 = 0;
                      v185 = 0;
                      v186 = 0x100000000000000;
                      v180 = v127 | ((unint64_t)v127 << 32);
                      LOBYTE(v181) = 0;
                      __p = (void *)41;
                      v187 = 0;
                      sub_22E890748(v132, &v180);
                      if (SHIBYTE(v186) < 0)
                        operator delete(__p);
                      if (SHIBYTE(v198) < 0)
                        operator delete(v196);
                      if (SHIBYTE(v205) < 0)
                        operator delete((void *)v204);
                      v133 = (unsigned int *)&v200;
                    }
                    else
                    {
                      sub_22EFF605C((uint64_t)v125);
                      sub_22E8FCA40((_QWORD *)v9, v135, 0x1AA3u, 0, (uint64_t)v179);
                      v133 = (unsigned int *)v179;
                    }
                    sub_22E903BEC(v133);
                  }
                  if (v53 <= 0xF)
                  {
                    if (v119)
                    {
                      if (*(_QWORD *)(v9 + 1296) == *(_QWORD *)(v9 + 1288))
                        v136 = 0;
                      else
                        v136 = *(_QWORD *)(v9 + 1296);
                      return (uint64_t)sub_22EB476A8(v9, v191, v190, v6, v52, v188, v54, 0, v8, v136);
                    }
                    v140 = *(_QWORD *)(v9 + 88);
                    v141 = (_DWORD *)(v191 & 0xFFFFFFFFFFFFFFFELL);
                    v142 = (_DWORD *)(v190 & 0xFFFFFFFFFFFFFFFELL);
                    v143 = v188;
                    if (*(_QWORD *)(v9 + 1296) == *(_QWORD *)(v9 + 1288))
                    {
                      v144 = 0;
                    }
                    else
                    {
                      v144 = *(_QWORD *)(v9 + 1296);
                      if (HIDWORD(v144))
                      {
                        v153 = 40;
                        goto LABEL_287;
                      }
                    }
                    v153 = 32;
LABEL_287:
                    v15 = sub_22E3CD3D4(v140 + 2032, v153, 3);
                    sub_22F002E24((int *)v15, v155, v141, v142, v6, v52, v143, v54, v22, v144);
                    return v15;
                  }
                  if ((*(_BYTE *)(*(_QWORD *)(v9 + 72) + 1) & 1) != 0
                    && (*(_DWORD *)(v191 & 0xFFFFFFFFFFFFFFFELL) & 0x1C00) != 0xC00)
                  {
                    v188 = 1;
                    v54 = (*(_DWORD *)(v191 & 0xFFFFFFFFFFFFFFFELL) >> 10) & 7;
                  }
                  v137 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v53 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
                  if (v137)
                  {
                    v138 = *(_DWORD *)(v137 + 16);
                    if (v138 == 11 && ((v138 >> 19) & 0x1FE) - 186 <= 0x17)
                      v189 = *(_QWORD *)((sub_22EB1B998(v9, (void *)(v191 & 0xFFFFFFFFFFFFFFFELL)) & 0xFFFFFFFFFFFFFFFELL)
                                       + 8);
                  }
                  if (v119)
                  {
                    if (*(_QWORD *)(v9 + 1296) == *(_QWORD *)(v9 + 1288))
                      v139 = 0;
                    else
                      v139 = *(_QWORD *)(v9 + 1296);
                    return (uint64_t)sub_22EB476A8(v9, v191, v190, v6, v52, v188, v54, 1, v8, v139);
                  }
                  v145 = *(_QWORD *)(v9 + 88);
                  v146 = (_DWORD *)(v191 & 0xFFFFFFFFFFFFFFFELL);
                  v147 = (_DWORD *)(v190 & 0xFFFFFFFFFFFFFFFELL);
                  v148 = v188;
                  v149 = *(_QWORD *)(v9 + 1288);
                  if (*(_DWORD *)(v9 + 1296) == (_DWORD)v149)
                  {
                    v150 = v189;
                    if (*(_DWORD *)(v9 + 1300) == HIDWORD(v149))
                    {
                      v178 = v189;
                      v151 = 0;
                      goto LABEL_285;
                    }
                  }
                  else
                  {
                    v150 = v189;
                  }
                  v151 = *(_QWORD *)(v9 + 1296);
                  v178 = v150;
                  if (HIDWORD(v151))
                  {
                    v154 = 56;
                    goto LABEL_289;
                  }
LABEL_285:
                  v154 = 48;
LABEL_289:
                  v15 = sub_22E3CD3D4(v145 + 2032, v154, 3);
                  v157 = sub_22F002F18((int *)v15, v156, v146, v147, v6, v52, v148, v54, v22, v151);
                  *((_QWORD *)v157 + 4) = v178;
                  *((_QWORD *)v157 + 5) = v53;
                  return v15;
                }
              }
            }
            return 1;
          }
          v41 = 0;
          v42 = 0;
          v43 = 0;
          v200 = (void *)v191;
          v201 = v190;
          do
          {
            v44 = v42;
            v45 = (unsigned __int8 *)((unint64_t)*(&v200 + v43) & 0xFFFFFFFFFFFFFFFELL);
            if (*v45 == 161)
            {
              v46 = *((_QWORD *)v45 + 2);
              if (v46)
              {
                if ((*(_DWORD *)(v46 + 28) & 0x7F) == 0x43)
                {
                  v47 = v46 + 64;
                  if (sub_22E508590(v46 + 64, 0))
                    v41 |= sub_22E508590(v47, 1);
                }
              }
            }
            v42 = 1;
            v43 = 1;
          }
          while ((v44 & 1) == 0);
          if ((v41 & 1) != 0)
          {
            sub_22E8FCA40((_QWORD *)v9, v8, 0x1989u, 0, (uint64_t)&v200);
            sub_22E903BEC((unsigned int *)&v200);
            goto LABEL_51;
          }
          v71 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0;
          v72 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v71 + 8) & 0xFFFFFFFFFFFFFFF0);
          v73 = *(_DWORD *)(v72 + 16);
          if (v72)
            v74 = v73 == 11;
          else
            v74 = 0;
          if (v74)
          {
            if (((*(_DWORD *)(v72 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
              goto LABEL_51;
          }
          else if (v72 && v73 == 44)
          {
            v75 = sub_22F114198(*(_QWORD *)(v72 + 24));
            if ((*(_BYTE *)(v75 + 74) & 1) == 0 && *(_QWORD *)(v75 + 128) <= 7uLL
              || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v72 + 24)) + 76) & 0x80) != 0)
            {
              goto LABEL_51;
            }
            v71 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0;
          }
          else if (v73 != 9)
          {
            goto LABEL_51;
          }
          v102 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v71 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v102)
            v103 = (*(_DWORD *)(v102 + 16) & 0xFF800FF) == 87031819;
          else
            v103 = 0;
          if (!v103)
          {
            v104 = v190 & 0xFFFFFFFFFFFFFFFELL;
            v105 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v190 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                         + 8) & 0xFFFFFFFFFFFFFFF0);
            v106 = *(_DWORD *)(v105 + 16);
            if (v105)
              v107 = v106 == 11;
            else
              v107 = 0;
            if (v107)
            {
              if (((*(_DWORD *)(v105 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
                goto LABEL_51;
            }
            else if (v105 && v106 == 44)
            {
              v108 = sub_22F114198(*(_QWORD *)(v105 + 24));
              if ((*(_BYTE *)(v108 + 74) & 1) == 0 && *(_QWORD *)(v108 + 128) <= 7uLL
                || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v105 + 24)) + 76) & 0x80) != 0)
              {
                goto LABEL_51;
              }
              v104 = v190 & 0xFFFFFFFFFFFFFFFELL;
            }
            else if (v106 != 9)
            {
              goto LABEL_51;
            }
            if ((*(_BYTE *)(v104 + 2) & 1) == 0
              && (v8 & 0x80000000) == 0
              && *(_DWORD *)(v9 + 10680) <= *(_DWORD *)(v9 + 11956))
            {
              LOWORD(v202) = 0;
              *(_QWORD *)&v203 = 0;
              DWORD2(v203) = 0;
              if (sub_22F00554C(v104, (uint64_t)&v202, *(_QWORD *)(v9 + 88), 0, 0))
              {
                v181 = DWORD2(v204);
                if (DWORD2(v204) > 0x40)
                  llvm::APInt::initSlowCase((llvm::APInt *)&v180, (const llvm::APInt *)&v204);
                else
                  v180 = v204;
                LOBYTE(v182) = BYTE12(v204);
                if ((*(_BYTE *)(*(_QWORD *)(v9 + 72) + 2) & 0x80) != 0
                  && ((v166 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v190 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                    + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
                    ? (v167 = (*(_DWORD *)(v166 + 16) & 0xFF800FF) == 87031819)
                    : (v167 = 0),
                      !v167 && (sub_22EFF605C(v190 & 0xFFFFFFFFFFFFFFFELL), (v168 & 0x80000000) == 0))
                  || sub_22E508590((uint64_t)&v180, 0) && sub_22E508590((uint64_t)&v180, 1))
                {
                  sub_22E8FCA40((_QWORD *)v9, v8, 0x1A33u, 0, (uint64_t)&v200);
                  sub_22F0D4E74(v190 & 0xFFFFFFFFFFFFFFFELL);
                  v193 = v169;
                  v170 = sub_22E8906A0((uint64_t)&v200, (uint64_t *)&v193);
                  if (v6 == 19)
                    v171 = "&&";
                  else
                    v171 = "||";
                  if (v6 == 19)
                    v172 = "&";
                  else
                    v172 = "|";
                  sub_22F2F30F4(v170, (uint64_t)v171);
                  sub_22E903BEC((unsigned int *)&v200);
                  sub_22E8FCA40((_QWORD *)v9, v8, 0x1649u, 0, (uint64_t)&v200);
                  v173 = sub_22F311B00((uint64_t)&v200, (uint64_t)v172);
                  v174 = sub_22F141A3C(v8, 0, *(_QWORD **)(v9 + 112), *(_DWORD **)(v9 + 72));
                  *(_QWORD *)&v194[4] = 0;
                  v195 = 0;
                  v197 = 0;
                  v198 = 0;
                  v196 = 0;
                  v199 = 0;
                  v193 = v8 | (unint64_t)(v174 << 32);
                  v194[0] = 1;
                  LOBYTE(v196) = *v172;
                  HIBYTE(v198) = 1;
                  sub_22E890748(v173, &v193);
                  if (SHIBYTE(v198) < 0)
                    operator delete(v196);
                  sub_22E903BEC((unsigned int *)&v200);
                  if (v6 == 19)
                  {
                    sub_22E8FCA40((_QWORD *)v9, v8, 0x164Au, 0, (uint64_t)&v200);
                    sub_22F0D60E4(v191 & 0xFFFFFFFFFFFFFFFELL);
                    v176 = sub_22F141A3C(v175, 0, *(_QWORD **)(v9 + 112), *(_DWORD **)(v9 + 72));
                    sub_22F0D60E4(v190 & 0xFFFFFFFFFFFFFFFELL);
                    *(_QWORD *)&v194[4] = 0;
                    v195 = 0;
                    v197 = 0;
                    v198 = 0;
                    v196 = 0;
                    v199 = 0;
                    v193 = v176 | (unint64_t)(v177 << 32);
                    v194[0] = 1;
                    sub_22E890748((uint64_t)&v200, &v193);
                    if (SHIBYTE(v198) < 0)
                      operator delete(v196);
                    sub_22E903BEC((unsigned int *)&v200);
                  }
                }
                if (v181 >= 0x41 && v180)
                  MEMORY[0x2348A0E84](v180, 0x1000C8000313F17);
              }
              if (DWORD2(v203) >= 2)
                sub_22EF53BC0((uint64_t *)&v203 + 1);
            }
          }
LABEL_51:
          v48 = *(_QWORD *)(*(_QWORD *)(v9 + 88) + 2000);
          if ((*(_BYTE *)(v48 + 1) & 1) != 0)
          {
            v76 = sub_22ED025A8(v9);
            if ((v76 & 1) == 0)
            {
              v191 = v76;
              v77 = sub_22ED025A8(v9);
              if ((v77 & 1) == 0)
              {
                v190 = v77;
                v52 = *(_QWORD *)(*(_QWORD *)(v9 + 88) + 16400);
                goto LABEL_64;
              }
            }
            goto LABEL_302;
          }
          if ((*(_DWORD *)(v48 + 52) & 0x40000000) != 0)
          {
            v49 = v191;
            if (*(_DWORD *)(v48 + 56) <= 0x77u
              && (sub_22F10E0EC(*(_QWORD *)(*(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0))
               || sub_22F10E0EC(*(_QWORD *)(*(_QWORD *)((v190 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0))))
            {
              goto LABEL_302;
            }
          }
          else
          {
            v49 = v191;
          }
          v191 = sub_22EB1B998(v9, (void *)(v49 & 0xFFFFFFFFFFFFFFFELL));
          if ((v191 & 1) != 0)
            goto LABEL_303;
          v190 = sub_22EB1B998(v9, (void *)(v190 & 0xFFFFFFFFFFFFFFFELL));
          if ((v190 & 1) != 0)
            goto LABEL_303;
          v78 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                      + 8) & 0xFFFFFFFFFFFFFFF0);
          v79 = *(_DWORD *)(v78 + 16);
          if (v78)
            v80 = v79 == 11;
          else
            v80 = 0;
          if (v80)
          {
            if (((v79 >> 19) & 0x1FF) - 166 >= 0x35)
              goto LABEL_302;
          }
          else if (v78 && v79 == 44)
          {
            v81 = sub_22F114198(*(_QWORD *)(v78 + 24));
            if ((*(_BYTE *)(v81 + 74) & 1) == 0 && *(_QWORD *)(v81 + 128) < 8uLL)
              goto LABEL_302;
          }
          else
          {
            v99 = v79 > 0x27u;
            v158 = (1 << v79) & 0x8180001600;
            if (v99 || v158 == 0)
              goto LABEL_302;
          }
          v160 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v190 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                       + 8) & 0xFFFFFFFFFFFFFFF0);
          v161 = *(_DWORD *)(v160 + 16);
          if (v160)
            v162 = v161 == 11;
          else
            v162 = 0;
          if (!v162)
          {
            if (v160 && v161 == 44)
            {
              v163 = sub_22F114198(*(_QWORD *)(v160 + 24));
              if ((*(_BYTE *)(v163 + 74) & 1) == 0 && *(_QWORD *)(v163 + 128) <= 7uLL)
                goto LABEL_302;
            }
            else
            {
              v99 = v161 > 0x27u;
              v164 = (1 << v161) & 0x8180001600;
              if (v99 || v164 == 0)
                goto LABEL_302;
            }
            goto LABEL_305;
          }
          if (((v161 >> 19) & 0x1FF) - 166 < 0x35)
          {
LABEL_305:
            v52 = *(_QWORD *)(*(_QWORD *)(v9 + 88) + 16480);
            goto LABEL_64;
          }
LABEL_302:
          sub_22F32EE84((_QWORD *)v9, v8, &v191, &v190);
LABEL_303:
          v52 = 0;
          goto LABEL_64;
        case 21:
          v65 = sub_22EB42668(v9, (uint64_t *)(v191 & 0xFFFFFFFFFFFFFFFELL), &v190, v8, 0);
          v52 = v65;
          if ((*(_BYTE *)(*(_QWORD *)(v9 + 72) + 1) & 1) != 0
            && (*(_DWORD *)(v191 & 0xFFFFFFFFFFFFFFFELL) & 0x1C00) != 0xC00)
          {
            v188 = (*(_DWORD *)(v191 & 0xFFFFFFFFFFFFFFFELL) >> 8) & 3;
            v54 = (*(_DWORD *)(v191 & 0xFFFFFFFFFFFFFFFELL) >> 10) & 7;
          }
          else
          {
            LOBYTE(v54) = 0;
          }
          if (v65 < 0x10)
            goto LABEL_198;
          sub_22EB45F78((unsigned int *)v9, (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)(v190 & 0xFFFFFFFFFFFFFFFELL), v8, 1);
          sub_22E9906A8(v9, (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)(v190 & 0xFFFFFFFFFFFFFFFELL), v8);
          v82 = (unsigned __int8 *)(v190 & 0xFFFFFFFFFFFFFFFELL);
          if ((v190 & 0xFFFFFFFFFFFFFFFELL) == 0)
          {
            v83 = 0;
            goto LABEL_163;
          }
          while (1)
          {
            v83 = v82;
            v84 = *v82;
            if (v84 > 0xD5)
            {
              if (v84 == 233)
              {
                if ((*(_DWORD *)v82 & 0x7C0000) != 0x300000)
                  goto LABEL_187;
                v84 = *(_DWORD *)v82;
                v86 = v82 + 16;
              }
              else
              {
                if (v84 != 214)
                  goto LABEL_160;
                v86 = v82 + 24;
              }
            }
            else if (v84 == 155)
            {
              if ((**((_DWORD **)v82 + 2) & 0x18000) != 0)
                goto LABEL_187;
              v86 = v82 + 24;
              if (!v83[48])
                v86 = v83 + 32;
              v84 = 155;
            }
            else
            {
              if (v84 != 176)
                goto LABEL_160;
              v85 = *((unsigned int *)v82 + 5);
              if ((_DWORD)v85 == -1)
                goto LABEL_187;
              v86 = &v82[8 * v85 + 40];
              v84 = 176;
            }
            v82 = *(unsigned __int8 **)v86;
            if (v82 == v83)
            {
LABEL_160:
              if (v84 != 114)
                goto LABEL_187;
LABEL_163:
              v87 = (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL);
              while (1)
              {
                v88 = v87;
                v89 = *v87;
                if (v89 > 0xD5)
                {
                  if (v89 == 233)
                  {
                    if ((*(_DWORD *)v87 & 0x7C0000) != 0x300000)
                      goto LABEL_187;
                    v89 = *(_DWORD *)v87;
                    v91 = v87 + 16;
                  }
                  else
                  {
                    if (v89 != 214)
                      goto LABEL_179;
                    v91 = v87 + 24;
                  }
                }
                else if (v89 == 155)
                {
                  if ((**((_DWORD **)v87 + 2) & 0x18000) != 0)
                    goto LABEL_187;
                  v91 = v87 + 24;
                  if (!v88[48])
                    v91 = v88 + 32;
                  v89 = 155;
                }
                else
                {
                  if (v89 != 176)
                    goto LABEL_179;
                  v90 = *((unsigned int *)v87 + 5);
                  if ((_DWORD)v90 == -1)
                    goto LABEL_187;
                  v91 = &v87[8 * v90 + 40];
                  v89 = 176;
                }
                v87 = *(unsigned __int8 **)v91;
                if (v87 == v88)
                {
LABEL_179:
                  if (v89 == 161)
                  {
                    v92 = (_DWORD *)*((_QWORD *)v88 + 2);
                    if (v92)
                    {
                      if ((v92[7] & 0x7Fu) - 67 >= 0xFFFFFFF9 && sub_22E3CB5E0((uint64_t)v92))
                      {
                        v93 = *(_QWORD *)(v9 + 12888);
                        v94 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(v93 + 72), v92);
                        v95 = *(_QWORD *)(v93 + 80);
                        v96 = 88;
                        if (v95 == *(_QWORD *)(v93 + 72))
                          v96 = 92;
                        if (v94 != (void **)(v95 + 8 * *(unsigned int *)(v93 + v96)))
                          *(_DWORD *)(*((_QWORD *)v83 + 2) + 48) |= 0x40000u;
                      }
                    }
                  }
LABEL_187:
                  for (i = (_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8); ; i = (_QWORD *)(v100 + 32))
                  {
                    v98 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
                    if (v98)
                      v99 = (*(_DWORD *)(v98 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
                    else
                      v99 = 0;
                    if (v99)
                    {
                      v100 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
                    }
                    else if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v98 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3
                           || (v100 = sub_22F10CF48(v98)) == 0)
                    {
                      v101 = sub_22F10C2A4(v98);
                      if (v101 && (*(_DWORD *)(v101 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v101 + 76) & 2) != 0)
                      {
                        v109 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8);
                        sub_22EFF605C(v191 & 0xFFFFFFFFFFFFFFFELL);
                        sub_22F31DBEC(v9, v109, v110, 5, 4);
                      }
LABEL_198:
                      sub_22EB46180((void **)v9, (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL));
                      v53 = 0;
                      v55 = 0;
                      goto LABEL_228;
                    }
                  }
                }
              }
            }
          }
        case 22:
        case 23:
          v15 = 1;
          v50 = (unint64_t)sub_22EB3AC80((_QWORD *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, 1, v6 == 23);
          v189 = v50;
          if (v50 >= 0x10)
            goto LABEL_94;
          return v15;
        case 24:
          v15 = 1;
          v51 = sub_22EB3B87C((_QWORD *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, 1);
          goto LABEL_87;
        case 25:
          v50 = sub_22EB3BB1C(v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, 25, &v189);
          goto LABEL_93;
        case 26:
          v50 = sub_22EB3C804((unsigned int *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, &v189);
LABEL_93:
          if (v50 < 0x10)
            return 1;
LABEL_94:
          if ((v191 & 1) != 0 || (v190 & 1) != 0)
            return 1;
          v53 = v50;
          v52 = sub_22EB42668(v9, (uint64_t *)(v191 & 0xFFFFFFFFFFFFFFFELL), &v190, v8, v50);
          goto LABEL_65;
        case 27:
        case 28:
          v15 = 1;
          v51 = sub_22EB3D520((_QWORD *)v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, v6, 1);
LABEL_87:
          v189 = (unint64_t)v51;
          if ((unint64_t)v51 >= 0x10)
            goto LABEL_88;
          return v15;
        case 29:
        case 31:
          sub_22EB45F78((unsigned int *)v9, (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)(v190 & 0xFFFFFFFFFFFFFFFELL), v8, 1);
          goto LABEL_58;
        case 30:
LABEL_58:
          v51 = sub_22EB46270(v9, (uint64_t *)&v191, (uint64_t *)&v190, v8, v6);
          v189 = (unint64_t)v51;
          if ((unint64_t)v51 < 0x10)
            return 1;
LABEL_88:
          if ((v191 & 1) != 0 || (v190 & 1) != 0)
            return 1;
          v53 = (unint64_t)v51;
          v52 = sub_22EB42668(v9, (uint64_t *)(v191 & 0xFFFFFFFFFFFFFFFELL), &v190, v8, (unint64_t)v51);
          goto LABEL_227;
        case 32:
          v191 = sub_22EB19A28(v9);
          v190 = sub_22EB19A28(v9);
          if (((v191 | v190) & 1) != 0)
            goto LABEL_122;
          v66 = sub_22EBCEBF8(v9, (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL));
          v191 = v66;
          if ((v66 & 1) != 0)
            goto LABEL_122;
          sub_22ED2B458(v9, (unsigned __int8 *)(v66 & 0xFFFFFFFFFFFFFFFELL), 7122);
          if ((*(_BYTE *)(*(_QWORD *)(v9 + 72) + 1) & 1) != 0)
            goto LABEL_106;
          v67 = sub_22EB1B954(v9, (void *)(v190 & 0xFFFFFFFFFFFFFFFELL));
          v190 = v67;
          if ((v67 & 1) != 0)
          {
LABEL_122:
            v52 = 0;
          }
          else
          {
            v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFFFELL) + 8);
            v69 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v68 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            if (v69)
              v70 = (*(_DWORD *)(v69 + 16) & 0xFF800FF) == 86507531;
            else
              v70 = 0;
            if (!v70)
            {
              v200 = &unk_24FAB6EF8;
              LODWORD(v201) = 3591;
              sub_22EE8B0B0(v9, v8, v68);
            }
LABEL_106:
            if (sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(v9 + 104) + 32), 0x18CFu, v8, *(_QWORD *)(v9 + 104)) != 1)sub_22EB44A14((unsigned int *)v9, v191 & 0xFFFFFFFFFFFFFFFELL, v8);
            v52 = *(_QWORD *)((v190 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          if ((*(_BYTE *)(*(_QWORD *)(v9 + 72) + 1) & 1) == 0 || (v190 & 1) != 0)
          {
LABEL_226:
            v53 = 0;
LABEL_227:
            v55 = 0;
            LOBYTE(v54) = 0;
          }
          else
          {
            v53 = 0;
            v55 = 0;
            v188 = (*(_DWORD *)(v190 & 0xFFFFFFFFFFFFFFFELL) >> 8) & 3;
            v54 = (*(_DWORD *)(v190 & 0xFFFFFFFFFFFFFFFELL) >> 10) & 7;
          }
          goto LABEL_228;
        default:
          return 1;
      }
    }
    v27 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16);
    v28 = v192;
    if (v27 == 6
      || (v29 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v192 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16),
          v29 == 6))
    {
      sub_22F0D5A50(v4);
      v31 = v30;
      sub_22F0D60E4(v28);
      v202 = __PAIR64__(v32, v31);
      v33 = v8;
      if (v6 == 21)
      {
        sub_22E8FCA40((_QWORD *)v9, v8, 0x111Bu, 0, (uint64_t)&v200);
        LODWORD(v193) = 0;
        v34 = sub_22E8900C4((uint64_t)&v200, (int *)&v193);
        sub_22E8906A0(v34, (uint64_t *)&v202);
        sub_22E903BEC((unsigned int *)&v200);
        return 1;
      }
    }
    else
    {
      v18.i32[0] = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                             + 16);
      v19.i32[0] = 264241407;
      v35 = vceqq_s32(vdupq_lane_s32((int32x2_t)*(_OWORD *)&vandq_s8(v18, v19), 0), (int32x4_t)xmmword_22F45AEA0);
      *(int16x4_t *)v35.i8 = vmovn_s32(v35);
      if ((vmaxv_u16(*(uint16x4_t *)v35.i8) & 1) == 0 && (v27 & 0xFE000FF) != 0x100000B)
      {
        v35.i32[0] = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v192 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 16);
        v20.i32[0] = 264241407;
        if ((vmaxv_u16((uint16x4_t)vmovn_s32(vceqq_s32(vdupq_lane_s32((int32x2_t)*(_OWORD *)&vandq_s8((int8x16_t)v35, v20), 0), (int32x4_t)xmmword_22F45AEA0))) & 1) == 0)
        {
          v36 = (v29 & 0xFE000FF) == 0x100000B || (v27 & 0xFF800FF) == 116391947;
          v37 = v36 || (v29 & 0xFF800FF) == 116391947;
          v38 = v37 || v27 == 10;
          if (!v38 && v27 != 38 && v29 != 38 && v29 != 10)
            goto LABEL_8;
        }
      }
      v33 = v8;
    }
    sub_22F32EE84((_QWORD *)v9, v33, &v191, &v190);
    return 1;
  }
  return v15;
}

uint64_t sub_22EB2EA08(uint64_t a1, unsigned int a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  BOOL v15;
  BOOL v16;
  int32x4_t v17;
  int32x4_t v18;
  int32x4_t v19;
  uint8x16_t v20;
  __int32 v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int v28;
  int *v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  BOOL v56;
  uint64_t v57;
  unsigned int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  BOOL v68;
  uint64_t v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  BOOL v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  unint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  unint64_t v102;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unsigned int v107;
  uint64_t v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned int v118[26];

  v4 = a4;
  v115 = 0;
  v116 = a4;
  v114 = 0;
  v8 = *(_QWORD *)(a1 + 72);
  if ((*(_DWORD *)(v8 + 52) & 0x40000000) != 0)
  {
    v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
    if (a3 != 4 && *(_BYTE *)(*(_QWORD *)v11 + 16) == 6)
      goto LABEL_28;
    v12 = *(_QWORD *)v11;
    v13 = *(_DWORD *)(*(_QWORD *)v11 + 16);
    v14 = v13 & 0xFF800FF;
    v15 = (v13 & 0xFF800FF) == 0x108000B || v14 == 17825803;
    v16 = v15;
    if (v12)
    {
      *(int8x8_t *)v17.i8 = vand_s8((int8x8_t)vdup_n_s32(v13), (int8x8_t)0xFF000FF0FC000FFLL);
      v17.i64[1] = __PAIR64__(v17.u32[1], v14);
      v18 = vdupq_laneq_s32(v17, 2);
      v17.i32[3] = v13 & 0xFF800FF;
      v19 = vdupq_n_s32(v14);
      v20 = (uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqq_s32(v17, (int32x4_t)xmmword_22F45AEC0), (int16x8_t)vceqq_s32(v18, (int32x4_t)xmmword_22F45AEB0)), (int8x16_t)vuzp1q_s16((int16x8_t)vceqq_s32(v18, (int32x4_t)xmmword_22F45AED0), (int16x8_t)vceqq_s32(v18, (int32x4_t)xmmword_22F45AEE0)));
      v20.i8[0] = vmaxvq_u8(v20);
      v21 = v20.i32[0];
      *(int8x8_t *)v20.i8 = vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_s32(v19, (int32x4_t)xmmword_22F45AEF0), (int16x8_t)vceqq_s32(v19, (int32x4_t)xmmword_22F45AF00)));
      v20.i8[0] = vmaxv_u8(*(uint8x8_t *)v20.i8);
      if ((v21 | v20.i32[0]) & 1 | ((v13 & 0xFF800FF) == 16777227 || v16))
        goto LABEL_28;
    }
    v22 = v14 == 18350091 || v14 == 116391947;
    v23 = v22;
    if (v12 && v23 || (v13 != 38 ? (v24 = v13 == 10) : (v24 = 1), v24))
    {
LABEL_28:
      sub_22E8FCA40((_QWORD *)a1, a2, 0x1398u, 0, (uint64_t)v118);
      v117 = *(_QWORD *)(v4 + 8);
      v25 = sub_22E8901B8((uint64_t)v118, &v117);
      sub_22F0D4E74(v4 & 0xFFFFFFFFFFFFFFFELL);
      v113 = v26;
      v27 = &v113;
LABEL_29:
      sub_22E8906A0(v25, v27);
LABEL_30:
      sub_22E903BEC(v118);
      return 1;
    }
  }
  if ((*(_WORD *)(v8 + 96) & 0x40) != 0)
  {
    v9 = 0;
    switch(a3)
    {
      case 0:
      case 1:
      case 2:
      case 3:
LABEL_32:
        v10 = sub_22EB480D4((_QWORD *)a1, a4 & 0xFFFFFFFFFFFFFFFELL, (_DWORD *)&v115 + 1, (int *)&v115, a2, (a3 & 0xFFFFFFFD) == 0, (a3 & 0xFFFFFFFE) == 2);
        v114 = v10;
        v9 = sub_22EB48670(*(_QWORD *)(a1 + 88), v10);
        v28 = 0;
        goto LABEL_184;
      case 4:
        sub_22E8FCA40((_QWORD *)a1, a2, 0xDD3u, 0, (uint64_t)v118);
        LODWORD(v117) = 0;
        sub_22E8900C4((uint64_t)v118, (int *)&v117);
        goto LABEL_30;
      case 5:
        sub_22E8FCA40((_QWORD *)a1, a2, 0xDD3u, 0, (uint64_t)v118);
        v4 = 1;
        LODWORD(v117) = 1;
        sub_22E8900C4((uint64_t)v118, (int *)&v117);
        sub_22E903BEC(v118);
        return v4;
      case 6:
        goto LABEL_50;
      case 7:
LABEL_49:
        v9 = sub_22EB48670(*(_QWORD *)(a1 + 88), *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFELL) + 8));
LABEL_50:
        v36 = sub_22EB1B998(a1, (void *)(v4 & 0xFFFFFFFFFFFFFFFELL));
        v116 = v36;
        if ((v36 & 1) != 0)
          return 1;
        v37 = *(_QWORD *)(a1 + 88);
        v38 = v36 & 0xFFFFFFFFFFFFFFFELL;
        if ((*(_BYTE *)(*(_QWORD *)(v37 + 2000) + 68) & 8) != 0
          || ((*(uint64_t (**)(_QWORD))(**(_QWORD **)(v37 + 15088) + 248))(*(_QWORD *)(v37 + 15088)) & 1) != 0
          || (v39 = sub_22EFFED0C((unsigned __int8 *)v38),
              (v40 = sub_22E3E4B64(*(_QWORD *)(*((_QWORD *)v39 + 1) & 0xFFFFFFFFFFFFFFF0))) == 0)
          || (*(_DWORD *)(v40 + 16) & 0x780000) == 0x280000
          || (*(_QWORD *)(v40 + 32) & 7 | *(_QWORD *)((*(_QWORD *)(v40 + 32) & 0xFFFFFFFFFFFFFFF0) + 8)) != *(_QWORD *)(v37 + 16792))
        {
          v28 = 0;
        }
        else
        {
          v116 = sub_22EB48984((unsigned __int8 *)v38, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16560), a1);
          v38 = v116 & 0xFFFFFFFFFFFFFFFELL;
          v28 = 1;
        }
        v10 = *(_QWORD *)(v38 + 8);
        v114 = v10;
        v59 = v10 & 0xFFFFFFFFFFFFFFF0;
        v60 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v60 + 17) & 4) != 0 || sub_22F110E9C(v60))
          goto LABEL_184;
        v61 = *(_QWORD *)v59;
        if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v59 + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 55 <= 1)
        {
          if ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 8) & 0x80000000000) == 0)
            goto LABEL_184;
          v62 = *(_DWORD *)(v61 + 16);
          if (v62 - 57 <= 0xFFFFFFFD)
            v62 = *(_DWORD *)(sub_22F10CF48(v61) + 16);
          if ((v62 & 0x780000) != 0x200000)
            goto LABEL_184;
        }
        if (a3 == 6
          && (**(_QWORD **)(a1 + 72) & 0x100) != 0
          && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v59 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
        {
          goto LABEL_184;
        }
        sub_22E8FCA40((_QWORD *)a1, a2, 0x1398u, 0, (uint64_t)v118);
        v25 = sub_22E8901B8((uint64_t)v118, (uint64_t *)&v114);
        v63 = v38;
        goto LABEL_220;
      case 8:
LABEL_57:
        v41 = sub_22EB1B998(a1, (void *)(a4 & 0xFFFFFFFFFFFFFFFELL));
        v116 = v41;
        if ((v41 & 1) != 0)
          return 1;
        v42 = v41 & 0xFFFFFFFFFFFFFFFELL;
        v10 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v114 = v10;
        v43 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFF0);
        v44 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v44 + 17) & 4) != 0)
          goto LABEL_183;
        if (sub_22F10E0B8(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0)) || sub_22F10E148(v44))
        {
          sub_22E8FCA40((_QWORD *)a1, a2, 0x149Eu, 0, (uint64_t)v118);
          v45 = sub_22E8901B8((uint64_t)v118, (uint64_t *)&v114);
          sub_22F0D4E74(v42);
          v117 = v46;
          sub_22E8906A0(v45, &v117);
          sub_22E903BEC(v118);
          v28 = 0;
          v9 = 0;
          v10 = v114;
          goto LABEL_184;
        }
        if ((sub_22F1105F0(*v43) & 1) != 0)
          goto LABEL_183;
        v91 = *v43;
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
          || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 52) & 0x40000000) == 0)
        {
          goto LABEL_219;
        }
        if (*(_BYTE *)(v91 + 16) != 56)
          v91 = sub_22F10CF48(v91);
        v92 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v91 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v93 = *(_DWORD *)(v92 + 16);
        if (v92)
          v94 = v93 == 11;
        else
          v94 = 0;
        if (v94)
        {
          if (((*(_DWORD *)(v92 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
            goto LABEL_183;
          goto LABEL_219;
        }
        if (!v92 || v93 != 44)
        {
          if (v93 == 9)
            goto LABEL_183;
          goto LABEL_219;
        }
        v95 = sub_22F114198(*(_QWORD *)(v92 + 24));
        if ((*(_BYTE *)(v95 + 74) & 1) == 0 && *(_QWORD *)(v95 + 128) <= 7uLL
          || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v92 + 24)) + 76) & 0x80) != 0)
        {
LABEL_219:
          sub_22E8FCA40((_QWORD *)a1, a2, 0x1398u, 0, (uint64_t)v118);
          v25 = sub_22E8901B8((uint64_t)v118, (uint64_t *)&v114);
          v63 = v42;
          goto LABEL_220;
        }
        goto LABEL_183;
      case 9:
LABEL_62:
        v4 = 1;
        v47 = sub_22EB1B954(a1, (void *)(a4 & 0xFFFFFFFFFFFFFFFELL));
        v48 = v47;
        v116 = v47;
        if ((v47 & 1) != 0)
          return v4;
        v10 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v114 = v10;
        v49 = v10 & 0xFFFFFFFFFFFFFFF0;
        v50 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0);
        v51 = *(_QWORD *)(*(_QWORD *)(v50 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v51)
          v52 = (*(_DWORD *)(v51 + 16) & 0xFF800FF) == 110100491;
        else
          v52 = 0;
        if (v52)
        {
          v53 = *(_QWORD *)(a1 + 88);
          if ((*(_BYTE *)(*(_QWORD *)(v53 + 2000) + 68) & 8) == 0)
          {
            v48 = sub_22E90092C(a1, v47 & 0xFFFFFFFFFFFFFFFELL, *(_QWORD *)(v53 + 16560), 42, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
            v116 = v48;
            v10 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16560);
            v114 = v10;
            v49 = v10 & 0xFFFFFFFFFFFFFFF0;
            v50 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0);
          }
        }
        if ((*(_BYTE *)(v50 + 17) & 4) != 0)
          goto LABEL_183;
        v54 = *(_QWORD *)(*(_QWORD *)(v50 + 8) & 0xFFFFFFFFFFFFFFF0);
        v55 = *(_DWORD *)(v54 + 16);
        if (v54)
          v56 = v55 == 11;
        else
          v56 = 0;
        if (v56)
        {
          if (((v55 >> 19) & 0x1FF) - 166 >= 0x35)
            goto LABEL_134;
        }
        else if (v54 && v55 == 44)
        {
          v57 = sub_22F114198(*(_QWORD *)(v54 + 24));
          if ((*(_BYTE *)(v57 + 74) & 1) == 0 && *(_QWORD *)(v57 + 128) < 8uLL)
            goto LABEL_134;
        }
        else
        {
          v68 = v55 > 0x27u;
          v69 = (1 << v55) & 0x8180001600;
          if (v68 || v69 == 0)
          {
LABEL_134:
            v78 = *(_QWORD *)v49;
            v79 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v49 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
            v80 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000);
            if (v79 == 56)
            {
              if ((*(_BYTE *)(v80 + 104) & 0x20) != 0)
              {
                if (*(_BYTE *)(v78 + 16) != 56)
                  v78 = sub_22F10CF48(v78);
                v96 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v78 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
                if (v96)
                  v97 = (*(_DWORD *)(v96 + 16) & 0xFF800FF) == 87031819;
                else
                  v97 = 0;
                if (v97)
                {
LABEL_183:
                  v28 = 0;
                  v9 = 0;
                  goto LABEL_184;
                }
                goto LABEL_213;
              }
              if ((*(_DWORD *)(v80 + 52) & 0x40000000) != 0)
              {
                v81 = *(_QWORD *)(v80 + 56);
                if ((v81 & 0x100000000) == 0 && v81 <= 0x77)
                {
                  if (*(_BYTE *)(v78 + 16) != 56)
                    v78 = sub_22F10CF48(v78);
                  v82 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v78 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
                  v83 = *(_DWORD *)(v82 + 16);
                  if (v82)
                    v84 = v83 == 11;
                  else
                    v84 = 0;
                  if (v84)
                  {
                    if (((*(_DWORD *)(v82 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
                      goto LABEL_213;
                  }
                  else if (v82 && v83 == 44)
                  {
                    v85 = sub_22F114198(*(_QWORD *)(v82 + 24));
                    if ((*(_BYTE *)(v85 + 74) & 1) == 0 && *(_QWORD *)(v85 + 128) <= 7uLL
                      || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v82 + 24)) + 76) & 0x80) != 0)
                    {
                      goto LABEL_213;
                    }
                  }
                  else if (v83 != 9)
                  {
                    goto LABEL_213;
                  }
                }
              }
            }
            else
            {
              if ((*(_BYTE *)(v80 + 1) & 1) == 0 || (v79 - 55) > 1)
                goto LABEL_213;
              v86 = *(_DWORD *)(v78 + 16);
              if (v86 - 57 <= 0xFFFFFFFD)
                v86 = *(_DWORD *)(sub_22F10CF48(v78) + 16);
              if ((v86 & 0x780000) != 0)
              {
LABEL_213:
                sub_22E8FCA40((_QWORD *)a1, a2, 0x1398u, 0, (uint64_t)v118);
                v25 = sub_22E8901B8((uint64_t)v118, (uint64_t *)&v114);
                v63 = v48 & 0xFFFFFFFFFFFFFFFELL;
LABEL_220:
                sub_22F0D4E74(v63);
                v117 = v110;
                v27 = &v117;
                goto LABEL_29;
              }
            }
            v65 = sub_22EB423E0(a1, v10);
            goto LABEL_95;
          }
        }
        v71 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v49 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v71 && *(_BYTE *)(v71 + 16) == 44 && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v71 + 24)) + 76) & 0x80) != 0)
          goto LABEL_134;
        v72 = *(_QWORD *)(a1 + 88);
        v73 = *(_QWORD *)(v72 + 2000);
        if ((*(_BYTE *)(v73 + 1) & 1) != 0)
        {
          v87 = *(_QWORD *)(v72 + 16400);
          v88 = sub_22E900D98(v10);
          v116 = sub_22E90092C(a1, v48 & 0xFFFFFFFFFFFFFFFELL, v87, v88, 0, 0);
        }
        else
        {
          if ((*(_DWORD *)(v73 + 52) & 0x40000000) == 0 || *(_DWORD *)(v73 + 56) > 0x77u)
            goto LABEL_158;
          v74 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v49 + 8) & 0xFFFFFFFFFFFFFFF0);
          v75 = *(_DWORD *)(v74 + 16);
          if (v74)
            v76 = v75 == 11;
          else
            v76 = 0;
          if (v76)
          {
            if (((*(_DWORD *)(v74 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
              goto LABEL_158;
          }
          else if (v74 && v75 == 44)
          {
            v77 = sub_22F114198(*(_QWORD *)(v74 + 24));
            if (((*(_BYTE *)(v77 + 74) & 1) != 0 || *(_QWORD *)(v77 + 128) > 7uLL)
              && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v74 + 24)) + 76) & 0x80) == 0)
            {
              goto LABEL_158;
            }
          }
          else if (v75 == 9)
          {
            goto LABEL_158;
          }
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v49 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
            goto LABEL_213;
        }
LABEL_158:
        v28 = 0;
        v9 = 0;
        v89 = *(_QWORD *)(a1 + 88);
        v90 = 16400;
        if ((**(_QWORD **)(v89 + 2000) & 0x100) == 0)
          v90 = 16480;
        v10 = *(_QWORD *)(v89 + v90);
        v114 = v10;
        goto LABEL_184;
      case 10:
      case 11:
LABEL_33:
        v29 = (int *)(a4 & 0xFFFFFFFFFFFFFFFELL);
        v30 = *(_DWORD *)(a4 & 0xFFFFFFFFFFFFFFFELL);
        if ((v30 & 0x8000) != 0)
          goto LABEL_48;
        do
        {
          v31 = v4;
          if ((v30 & 0x1C00) != 0)
          {
            v31 = sub_22EB1A358(a1, v29, 0);
            if ((v31 & 1) != 0)
            {
LABEL_98:
              v10 = 0;
              v116 = v31;
              goto LABEL_101;
            }
          }
          v32 = v31 & 0xFFFFFFFFFFFFFFFELL;
          v33 = *(_QWORD *)(*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v33)
            v34 = *(_BYTE *)(v33 + 16) == 12;
          else
            v34 = 0;
          if (v34)
          {
LABEL_99:
            v116 = v31;
            v10 = *(_QWORD *)(v33 + 32);
            goto LABEL_101;
          }
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v33 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 12)
          {
            v33 = sub_22F10CF48(v33);
            if (v33)
              goto LABEL_99;
            v33 = *(_QWORD *)(*(_QWORD *)(v32 + 8) & 0xFFFFFFFFFFFFFFF0);
          }
          if (sub_22F110E9C(v33))
          {
            v116 = v31;
            v10 = *(_QWORD *)(v32 + 8);
            goto LABEL_101;
          }
          v35 = sub_22EB19A28(a1);
          v4 = v35;
          if ((v35 & 1) != 0)
            goto LABEL_98;
          v29 = (int *)(v35 & 0xFFFFFFFFFFFFFFFELL);
          if ((v35 & 0xFFFFFFFFFFFFFFFELL) == v32)
          {
            v116 = v31;
            sub_22E8FCA40((_QWORD *)a1, a2, 0x120Eu, 0, (uint64_t)v118);
            v117 = *(_QWORD *)(v32 + 8);
            v108 = sub_22E8901B8((uint64_t)v118, &v117);
            if (a3 == 10)
              v109 = "__real";
            else
              v109 = "__imag";
            sub_22F2F30F4(v108, (uint64_t)v109);
            sub_22E903BEC(v118);
            v10 = 0;
            goto LABEL_101;
          }
          v30 = *v29;
        }
        while ((*v29 & 0x8000) == 0);
        v116 = v35;
LABEL_48:
        v10 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16832);
        v31 = v4;
LABEL_101:
        v114 = v10;
        if ((v31 & 1) != 0)
          return 1;
        v66 = v31 & 0xFFFFFFFFFFFFFFFELL;
        if (a3 == 10
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v66 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) == 12)
        {
          if ((*(_DWORD *)v66 & 0x300) != 0 && (*(_DWORD *)v66 & 0x1C00) == 0)
          {
            v28 = 0;
            v9 = 0;
            HIDWORD(v115) = (*(_DWORD *)v66 >> 8) & 3;
            goto LABEL_184;
          }
          goto LABEL_183;
        }
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
          goto LABEL_183;
        v28 = 0;
        v9 = 0;
        v116 = sub_22EB1A358(a1, v66, 0);
        goto LABEL_184;
      case 12:
LABEL_80:
        v28 = 0;
        v9 = 0;
        v10 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v114 = v10;
        v58 = *(_DWORD *)(a4 & 0xFFFFFFFFFFFFFFFELL);
        LODWORD(v115) = (v58 >> 10) & 7;
        HIDWORD(v115) = (v58 >> 8) & 3;
        goto LABEL_184;
      case 13:
        return v4;
      default:
        return 1;
    }
  }
  v9 = 0;
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      goto LABEL_32;
    case 4:
      v10 = sub_22EB44D0C((_QWORD *)a1, &v116, a2);
      v114 = v10;
      sub_22EB2BD90(a1, (unsigned __int8 *)v4);
      sub_22EB46180((void **)a1, (unsigned __int8 *)v4);
      goto LABEL_183;
    case 5:
      v4 = 1;
      v64 = sub_22EB1B954(a1, (void *)(a4 & 0xFFFFFFFFFFFFFFFELL));
      v116 = v64;
      if ((v64 & 1) != 0)
        return v4;
      v65 = sub_22EB486EC((_QWORD *)a1, (_BYTE *)(v64 & 0xFFFFFFFFFFFFFFFELL), (_DWORD *)&v115 + 1, a2);
      break;
    case 6:
      goto LABEL_50;
    case 7:
      goto LABEL_49;
    case 8:
      goto LABEL_57;
    case 9:
      goto LABEL_62;
    case 10:
    case 11:
      goto LABEL_33;
    case 12:
      goto LABEL_80;
    case 13:
      return v4;
    default:
      return 1;
  }
LABEL_95:
  v10 = v65;
  v28 = 0;
  v9 = 0;
  v114 = v65;
LABEL_184:
  if (v10 < 0x10 || (v116 & 1) != 0)
    return 1;
  v98 = v116 & 0xFFFFFFFFFFFFFFFELL;
  if ((a3 - 6) <= 0xFFFFFFFD)
  {
    sub_22E9890B4(a1, (unsigned __int8 *)(v116 & 0xFFFFFFFFFFFFFFFELL));
    v10 = v114;
  }
  v111 = v10;
  v112 = v28;
  v99 = *(_QWORD *)(a1 + 88);
  v101 = v115;
  v100 = BYTE4(v115);
  if (*(_QWORD *)(a1 + 1296) == *(_QWORD *)(a1 + 1288))
  {
    v102 = 0;
LABEL_193:
    v104 = 24;
    goto LABEL_195;
  }
  v102 = *(_QWORD *)(a1 + 1296);
  if (!HIDWORD(v102))
    goto LABEL_193;
  v104 = 32;
LABEL_195:
  v4 = sub_22E3CD3D4(v99 + 2032, v104, 3);
  sub_22F0031D0(v4, v99, v98, a3, v111, v100, v101, a2, v9, v102);
  if (a3 == 5)
  {
    v105 = *(_QWORD *)(v4 + 8);
    if (sub_22F10E1FC(*(_QWORD *)(v105 & 0xFFFFFFFFFFFFFFF0), 12))
    {
      if ((*(_DWORD *)(*(_QWORD *)(sub_22F40989C(v105, *(_QWORD *)(a1 + 88)) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu)
         - 2 >= 4)
      {
        v106 = *(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696);
        v107 = *(_DWORD *)(v106 - 576);
        if (v107 > 3 || v107 == 2)
          sub_22E3BA850(v106 - 248, (const void *)v4);
      }
    }
  }
  if (v112)
    return sub_22EB48984((unsigned __int8 *)v4, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16792), a1);
  return v4;
}

uint64_t sub_22EB2F86C(_QWORD *a1, int a2, int a3, uint64_t *a4, unint64_t a5, unint64_t a6)
{
  uint64_t *v8;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  int v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  int v53;
  uint64_t v54;
  unint64_t v55;
  unsigned int v56;
  unsigned __int8 **v57;
  unsigned __int8 *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  int v61;
  BOOL v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  uint64_t v66;
  char *v67;
  size_t v68;
  size_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  int v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  unint64_t v86;
  unsigned int v87;
  unint64_t v88;
  uint64_t v89;
  unsigned int v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  int v104;
  unsigned int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  char v113;
  uint64_t v114;
  unsigned int v115;
  _DWORD *v116;
  _DWORD *v117;
  _DWORD *v118;
  char v119;
  char v120;
  unint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  int v128;
  BOOL v129;
  uint64_t v130;
  BOOL v131;
  uint64_t v132;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t *v145;
  uint64_t i;
  uint64_t v147;
  char v148;
  char v149;
  uint64_t *v150;
  unint64_t v151;
  int v152;
  unint64_t v153;
  int v154;
  uint64_t v155;
  unsigned int v156;
  uint64_t v157;
  int v158;
  BOOL v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  int v173;
  unint64_t v174;
  uint64_t v175;
  int v176;
  unint64_t v177;
  uint64_t v178;
  unsigned int v179;
  uint64_t v180;
  unsigned int v181;
  uint64_t v182;
  unsigned int v183;
  unint64_t v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  unint64_t v193;
  _QWORD *v194;
  llvm::raw_ostream *v195;
  _WORD *v196;
  const char *p_p;
  llvm::raw_ostream *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  int v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  unint64_t v235;
  uint64_t v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  unsigned __int8 *v243;
  unint64_t v244;
  uint64_t v245;
  int v246;
  unsigned int v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  _QWORD v253[2];
  uint64_t v254[4];
  uint64_t v255;
  _QWORD *v256;
  void *__p;
  char v258;
  uint64_t v259;
  unsigned __int8 *v260;
  unint64_t v261;
  int v262;
  unint64_t v263;
  __int128 v264;
  _QWORD v265[10];

  v8 = a4;
  v265[8] = *MEMORY[0x24BDAC8D0];
  v12 = *(_QWORD *)(a1[11] + 2000);
  if ((*(_BYTE *)(v12 + 1) & 1) == 0 && (*(_QWORD *)(v12 + 20) & 0x2000000000) == 0)
  {
    v13 = sub_22EBBCB14(a1, a4, 0, 0, sub_22F2E6FA4, &v260);
    v14 = sub_22EBBCB14(a1, a5, 0, 0, sub_22F2E6FA4, &v260);
    v15 = sub_22EBBCB14(a1, a6, 0, 0, sub_22F2E6FA4, &v260);
    if (v13 < 2)
      return 1;
    v16 = v14 > 1 || a5 == 0;
    v17 = 1;
    if (!v16 || v15 < 2)
      return v17;
    v8 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFELL);
    a5 = v14 & 0xFFFFFFFFFFFFFFFELL;
    a6 = v15 & 0xFFFFFFFFFFFFFFFELL;
  }
  if (a5)
  {
    v18 = 0;
    v19 = 0;
  }
  else
  {
    v28 = *(_QWORD *)(v8[1] & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(v28 + 16) & 0xFE00000u) >= 0x8180001 && v28 != 0 && *(_DWORD *)(v28 + 16) == 11)
    {
      v31 = sub_22EB19A28(a1);
      if (v31 < 2)
        return 1;
      v8 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFELL);
    }
    if ((*(_BYTE *)(a1[9] + 1) & 1) == 0
      || (v32 = *(_DWORD *)v8, (*(_DWORD *)v8 & 0x8000) != 0)
      || (v32 & 0x300) == 0
      || ((unsigned __int16)*(_DWORD *)a6 ^ (unsigned __int16)v32) & 0x300 | ((unsigned __int16)*(_DWORD *)a6 | (unsigned __int16)v32) & 0x1800
      || (*(_QWORD *)((v8[1] & 0xFFFFFFFFFFFFFFF0) + 8) | v8[1] & 7) != (*(_QWORD *)((*(_QWORD *)(a6 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                                     + 8) | *(_QWORD *)(a6 + 8) & 7))
    {
      v33 = sub_22EB1B998((uint64_t)a1, v8);
      if ((v33 & 1) != 0)
        return 1;
      v8 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFELL);
      v32 = *(_DWORD *)(v33 & 0xFFFFFFFFFFFFFFFELL);
    }
    if ((v32 & 0x300) == 0)
    {
      v34 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8[1] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 16);
      if (v34 == 45 || (v34 & 0xFEu) - 2 <= 3)
      {
        v82 = sub_22F335E6C((uint64_t)a1, (uint64_t)v8);
        if ((v82 & 1) != 0)
          return 1;
        v8 = (uint64_t *)(v82 & 0xFFFFFFFFFFFFFFFELL);
      }
    }
    v19 = sub_22E3CD3D4(a1[11] + 2032, 24, 3);
    sub_22EFF605C((uint64_t)v8);
    sub_22E5BBE34(v19, v35, v8[1], BYTE1(*(_DWORD *)v8) & 3, (*(_DWORD *)v8 >> 10) & 7, (uint64_t)v8);
    v18 = (uint64_t)v8;
    a5 = v19;
    v8 = (uint64_t *)v19;
  }
  v20 = *(_QWORD *)(a5 + 8);
  v21 = *(_QWORD *)(a6 + 8);
  v250 = (unint64_t)v8;
  v251 = 0;
  v248 = a6;
  v249 = a5;
  v22 = sub_22EB19A28(a1);
  if (v22 < 2)
    return 1;
  v249 = v22;
  v23 = sub_22EB19A28(a1);
  if (v23 < 2)
    return 1;
  v248 = v23;
  v24 = a1[9];
  if ((*(_BYTE *)(v24 + 1) & 1) != 0)
  {
    v36 = sub_22EBC96A0();
LABEL_41:
    v37 = v36;
    goto LABEL_60;
  }
  v251 = 0;
  v25 = a1[11];
  v26 = *(_QWORD *)(v25 + 2000);
  if ((*(_BYTE *)(v26 + 1) & 1) != 0 || (*(_QWORD *)(v26 + 20) & 0x2000000000) != 0)
  {
    v27 = (_QWORD *)(v250 & 0xFFFFFFFFFFFFFFFELL);
    if ((*(_BYTE *)((v250 & 0xFFFFFFFFFFFFFFFELL) + 1) & 0x80) != 0
      || (*(_BYTE *)(v249 | 1) & 0x80) != 0
      || (*(_BYTE *)(v23 | 1) & 0x80) != 0)
    {
      v37 = *(_QWORD *)(v25 + 16832);
      goto LABEL_60;
    }
  }
  else
  {
    v27 = (_QWORD *)(v250 & 0xFFFFFFFFFFFFFFFELL);
  }
  v38 = *(_DWORD *)(v24 + 52);
  v39 = v27[1] & 0xFFFFFFFFFFFFFFF0;
  if (((v38 & 0x40000000) == 0
     || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v39 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
      - 55 >= 2)
    && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v39 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
  {
    v77 = sub_22EB1B998((uint64_t)a1, v27);
    v250 = v77;
    if ((v77 & 1) != 0)
      return 1;
    v41 = v77 & 0xFFFFFFFFFFFFFFFELL;
    v263 = *(_QWORD *)((v77 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v78 = *(_QWORD *)(v263 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(a1[9] + 52) & 0x40000000) != 0 && sub_22F10E0EC(*(_QWORD *)(v263 & 0xFFFFFFFFFFFFFFF0)))
    {
      v79 = a1;
      v80 = a2;
      v81 = 4945;
LABEL_125:
      sub_22E8FCA40(v79, v80, v81, 0, (uint64_t)&v260);
      v93 = sub_22E8901B8((uint64_t)&v260, (uint64_t *)&v263);
      goto LABEL_126;
    }
    v89 = *(_QWORD *)(*(_QWORD *)(v78 + 8) & 0xFFFFFFFFFFFFFFF0);
    v90 = *(_DWORD *)(v89 + 16);
    if (v89)
      v91 = v90 == 11;
    else
      v91 = 0;
    if (v91)
    {
      if (((v90 >> 19) & 0x1FF) - 166 < 0x35)
        goto LABEL_178;
    }
    else if (v89 && v90 == 44)
    {
      v92 = sub_22F114198(*(_QWORD *)(v89 + 24));
      if ((*(_BYTE *)(v92 + 74) & 1) != 0 || *(_QWORD *)(v92 + 128) > 7uLL)
        goto LABEL_178;
    }
    else
    {
      v131 = v90 > 0x27u;
      v132 = (1 << v90) & 0x8180001600;
      if (!v131 && v132 != 0)
      {
LABEL_178:
        if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v249 & 0xFFFFFFFFFFFFFFFELL)
                                                                                              + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                      + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 55 < 2
          || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v248 & 0xFFFFFFFFFFFFFFFELL)
                                                                                              + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                      + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 55 <= 1)
        {
          v36 = sub_22EB36814(a1, &v249, &v248, a2, 0, 1, 0, (*(_QWORD *)(a1[9] + 100) & 0x2000000000) != 0, 1);
          goto LABEL_41;
        }
        v135 = sub_22EB1F050((uint64_t)a1, &v249, &v248, a2, 3);
        if ((v249 & 1) != 0 || (v248 & 1) != 0)
          return 1;
        v136 = v135;
        v246 = a2;
        v137 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v259 = v137;
        v138 = *(_QWORD *)((v248 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v252 = v138;
        if (sub_22EB1FFD8((uint64_t)a1, v137, v138))
          goto LABEL_186;
        v244 = v136;
        if ((*(_DWORD *)(a1[9] + 52) & 0x40000000) != 0)
        {
          v148 = sub_22EB372DC(a1, (_BYTE *)(v249 & 0xFFFFFFFFFFFFFFFELL));
          v149 = sub_22EB372DC(a1, (_BYTE *)(v248 & 0xFFFFFFFFFFFFFFFELL));
          v37 = 0;
          if ((v148 & 1) != 0 || (v149 & 1) != 0)
            goto LABEL_259;
        }
        v150 = (uint64_t *)(v137 & 0xFFFFFFFFFFFFFFF0);
        if (sub_22F110E9C(*(_QWORD *)(v137 & 0xFFFFFFFFFFFFFFF0))
          && sub_22F110E9C(*(_QWORD *)(v138 & 0xFFFFFFFFFFFFFFF0)))
        {
          if (v244 > 0xF
            || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v150 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 9
            && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v138 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) != 9)
          {
            v151 = v249 & 0xFFFFFFFFFFFFFFFELL;
            v137 = v244;
            v152 = sub_22EB3547C((uint64_t)a1, &v249, v244);
            v249 = sub_22E90092C((uint64_t)a1, v151, v244, v152, 0, 0);
            v153 = v248 & 0xFFFFFFFFFFFFFFFELL;
            v154 = sub_22EB3547C((uint64_t)a1, &v248, v244);
            v248 = sub_22E90092C((uint64_t)a1, v153, v244, v154, 0, 0);
            goto LABEL_315;
          }
          goto LABEL_186;
        }
        v163 = *(_QWORD *)(*(_QWORD *)(*v150 + 8) & 0xFFFFFFFFFFFFFFF0);
        v164 = *(_DWORD *)(v163 + 16);
        if (v163)
        {
          if (*(_DWORD *)(v163 + 16) == 45)
          {
            v165 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v138 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            if (v165)
            {
              if (*(_BYTE *)(v165 + 16) == 45)
              {
                v245 = sub_22F114198(*(_QWORD *)(v163 + 24));
                v166 = sub_22F114198(*(_QWORD *)(v165 + 24));
                v167 = *v150;
                v168 = *(_QWORD *)(*v150 + 8);
                if (v245 == v166)
                {
                  if ((v168 & 0xF) != 0)
                    v167 = (unint64_t)sub_22F10D2BC(v137);
                  v37 = v167 & 0xFFFFFFFFFFFFFFF0;
                  goto LABEL_259;
                }
                v164 = *(_DWORD *)(*(_QWORD *)(v168 & 0xFFFFFFFFFFFFFFF0) + 16);
              }
            }
          }
        }
        if ((v164 & 0xFF800FF) == 0x528000B
          || (v169 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v138 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
          && (*(_DWORD *)(v169 + 16) & 0xFF800FF) == 0x528000B)
        {
          v170 = v249 & 0xFFFFFFFFFFFFFFFELL;
          v171 = v248 & 0xFFFFFFFFFFFFFFFELL;
          v172 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v249 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                       + 8) & 0xFFFFFFFFFFFFFFF0);
          if (!v172 || (*(_DWORD *)(v172 + 16) & 0xFF800FF) != 0x528000B)
          {
            sub_22F0D5A50(v248 & 0xFFFFFFFFFFFFFFFELL);
            sub_22E8FCA40(a1, v173, 0x14FFu, 0, (uint64_t)&v260);
            sub_22F0D4E74(v171);
            v263 = v174;
            sub_22E8906A0((uint64_t)&v260, (uint64_t *)&v263);
            sub_22E903BEC((unsigned int *)&v260);
          }
          v175 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v171 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (!v175 || (*(_DWORD *)(v175 + 16) & 0xFF800FF) != 0x528000B)
          {
            sub_22F0D5A50(v170);
            sub_22E8FCA40(a1, v176, 0x14FFu, 0, (uint64_t)&v260);
            sub_22F0D4E74(v170);
            v263 = v177;
            sub_22E8906A0((uint64_t)&v260, (uint64_t *)&v263);
            sub_22E903BEC((unsigned int *)&v260);
          }
          v249 = sub_22E90092C((uint64_t)a1, v249 & 0xFFFFFFFFFFFFFFFELL, *(_QWORD *)(a1[11] + 16392), 25, 0, 0);
          v248 = sub_22E90092C((uint64_t)a1, v248 & 0xFFFFFFFFFFFFFFFELL, *(_QWORD *)(a1[11] + 16392), 25, 0, 0);
          v37 = *(_QWORD *)(a1[11] + 16392);
          goto LABEL_259;
        }
        if (!sub_22EB37374((uint64_t)a1, &v248, v137))
          goto LABEL_315;
        if (!sub_22EB37374((uint64_t)a1, &v249, v138))
        {
          v37 = v138;
          goto LABEL_259;
        }
        v202 = sub_22F32E638(a1, &v249, &v248, v246);
        if ((v249 & 1) != 0 || (v248 & 1) != 0)
          goto LABEL_258;
        v37 = v202;
        if (v202 > 0xF)
          goto LABEL_259;
        v203 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v150 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v203 == 10
          || (v204 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v138 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16),
              v204 == 10))
        {
          v263 = *(_QWORD *)((v249 & 0xFFFFFFFFFFFFFFFELL) + 8);
          v205 = *(_QWORD *)((v248 & 0xFFFFFFFFFFFFFFFELL) + 8);
          v254[0] = v205;
          v206 = *(_QWORD *)(v263 & 0xFFFFFFFFFFFFFFF0);
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v206 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 10
            && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v205 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) == 10)
          {
LABEL_291:
            v37 = sub_22EB54E1C(a1, &v249, &v248, v246);
            goto LABEL_259;
          }
          if ((sub_22F10DFD8(v206) & 1) == 0 && !sub_22F10DFD8(*(_QWORD *)(v205 & 0xFFFFFFFFFFFFFFF0)))
          {
            sub_22E8FCA40(a1, v246, 0x1353u, 0, (uint64_t)&v260);
            v221 = sub_22E8901B8((uint64_t)&v260, (uint64_t *)&v263);
            v222 = sub_22E8901B8(v221, v254);
            sub_22F0D4E74(v249 & 0xFFFFFFFFFFFFFFFELL);
            __p = v223;
            v142 = sub_22E8906A0(v222, (uint64_t *)&__p);
            sub_22F0D4E74(v248 & 0xFFFFFFFFFFFFFFFELL);
            v253[0] = v224;
            v144 = v253;
            goto LABEL_187;
          }
          v37 = sub_22EF5B848(a1[11], *(_QWORD *)(a1[11] + 16392), 0);
          v207 = v249 & 0xFFFFFFFFFFFFFFFELL;
          v208 = (uint64_t)a1;
          v209 = v37;
          v210 = 1;
        }
        else
        {
          if (v203 != 39 || v204 != 39)
          {
            v37 = v138;
            if ((sub_22EB37430(a1, &v249, v248 & 0xFFFFFFFFFFFFFFFELL, v246, 1) & 1) != 0)
              goto LABEL_259;
            if ((sub_22EB37430(a1, &v248, v249 & 0xFFFFFFFFFFFFFFFELL, v246, 0) & 1) != 0)
            {
LABEL_315:
              v37 = v137;
              goto LABEL_259;
            }
            if (sub_22F111384(*v150))
            {
              v37 = v137;
              if ((*(_QWORD *)((v137 & 0xFFFFFFFFFFFFFFF0) + 8) | v137 & 7) == (*(_QWORD *)((v138 & 0xFFFFFFFFFFFFFFF0)
                                                                                             + 8) | v138 & 7))
                goto LABEL_259;
            }
            if ((sub_22F32E518(a1, v249 & 0xFFFFFFFFFFFFFFFELL, v248 & 0xFFFFFFFFFFFFFFFELL, v246) & 1) != 0)
              goto LABEL_258;
LABEL_186:
            sub_22E8FCA40(a1, v246, 0x1353u, 0, (uint64_t)&v260);
            v139 = sub_22E8901B8((uint64_t)&v260, &v259);
            v140 = sub_22E8901B8(v139, &v252);
            sub_22F0D4E74(v249 & 0xFFFFFFFFFFFFFFFELL);
            v263 = v141;
            v142 = sub_22E8906A0(v140, (uint64_t *)&v263);
            sub_22F0D4E74(v248 & 0xFFFFFFFFFFFFFFFELL);
            v254[0] = v143;
            v144 = v254;
LABEL_187:
            sub_22E8906A0(v142, v144);
            sub_22E903BEC((unsigned int *)&v260);
            goto LABEL_258;
          }
          v211 = *(_QWORD *)((v248 & 0xFFFFFFFFFFFFFFFELL) + 8);
          v212 = *(_QWORD *)(*(_QWORD *)((v249 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (!v212 || *(_BYTE *)(v212 + 16) != 39)
            v212 = sub_22F10CF48(v212);
          v213 = *(_QWORD *)(v212 + 32);
          v214 = *(_QWORD *)(v211 & 0xFFFFFFFFFFFFFFF0);
          if (!v214 || *(_BYTE *)(v214 + 16) != 39)
            v214 = sub_22F10CF48(v214);
          v215 = *(_QWORD *)(v214 + 32);
          v216 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v213 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (!v216
            || (*(_DWORD *)(v216 + 16) & 0xFF800FF) != 0x528000B
            || *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v215 & 0xFFFFFFFFFFFFFFF0)
                                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                                        + 16)
             - 27 > 0xFFFFFFFD)
          {
            if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v215 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                            + 16) & 0xFF800FF) == 0x528000B
              && *(_DWORD *)(v216 + 16) - 27 <= 0xFFFFFFFD)
            {
              v225 = a1[11];
              v226 = *(_QWORD *)((v213 & 0xFFFFFFFFFFFFFFF0) + 8);
              if ((v226 & 8) != 0)
              {
                v228 = *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFFF0) + 0x18);
                v227 = *(_QWORD *)((v226 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
              }
              else
              {
                v227 = 0;
                v228 = 0;
              }
              v233 = v228 | (v226 | v213) & 7;
              v234 = v233 | v227;
              if ((v234 & 0xCFFFFFFF8) != 0)
              {
                v260 = (unsigned __int8 *)v234;
                v235 = sub_22E491354((unsigned int *)&v260, v215);
                v236 = sub_22EF5DBC4(v225, v235, (uint64_t)v260);
                v225 = a1[11];
              }
              else
              {
                v236 = v233 & 7 | v215;
              }
              v37 = sub_22EF5B848(v225, v236, 0);
              v248 = sub_22E90092C((uint64_t)a1, v248 & 0xFFFFFFFFFFFFFFFELL, v37, 5, 0, 0);
              v249 = sub_22E90092C((uint64_t)a1, v249 & 0xFFFFFFFFFFFFFFFELL, v37, 1, 0, 0);
              goto LABEL_259;
            }
            goto LABEL_291;
          }
          v217 = a1[11];
          v218 = *(_QWORD *)((v215 & 0xFFFFFFFFFFFFFFF0) + 8);
          if ((v218 & 8) != 0)
          {
            v220 = *(_QWORD *)((v218 & 0xFFFFFFFFFFFFFFF0) + 0x18);
            v219 = *(_QWORD *)((v218 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
          }
          else
          {
            v219 = 0;
            v220 = 0;
          }
          v229 = v220 | (v218 | v215) & 7;
          v230 = v229 | v219;
          if ((v230 & 0xCFFFFFFF8) != 0)
          {
            v260 = (unsigned __int8 *)v230;
            v231 = sub_22E491354((unsigned int *)&v260, v213);
            v232 = sub_22EF5DBC4(v217, v231, (uint64_t)v260);
            v217 = a1[11];
          }
          else
          {
            v232 = v229 & 7 | v213;
          }
          v37 = sub_22EF5B848(v217, v232, 0);
          v207 = v249 & 0xFFFFFFFFFFFFFFFELL;
          v208 = (uint64_t)a1;
          v209 = v37;
          v210 = 5;
        }
        v249 = sub_22E90092C(v208, v207, v209, v210, 0, 0);
        v189 = v248 & 0xFFFFFFFFFFFFFFFELL;
        v190 = (uint64_t)a1;
        v191 = v37;
        v192 = 1;
        goto LABEL_262;
      }
    }
    v79 = a1;
    v80 = a2;
    v81 = 4946;
    goto LABEL_125;
  }
  v17 = 1;
  v40 = sub_22EB1B954((uint64_t)a1, v27);
  v250 = v40;
  if ((v40 & 1) != 0)
    return v17;
  v246 = a2;
  v41 = v40 & 0xFFFFFFFFFFFFFFFELL;
  v42 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFFFELL) + 8);
  v43 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFF0);
  v44 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22E3E4B64(*(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF0)) + 32) & 0xFFFFFFFFFFFFFFF0)
                              + 8) & 0xFFFFFFFFFFFFFFF0);
  v45 = *(_DWORD *)(v44 + 16);
  if (v44)
    v46 = v45 == 11;
  else
    v46 = 0;
  if (v46)
  {
    if (((*(_DWORD *)(v44 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
      goto LABEL_97;
LABEL_119:
    sub_22E8FCA40(a1, v246, 0x1351u, 0, (uint64_t)&v260);
    v263 = *(_QWORD *)(v41 + 8);
    v93 = sub_22E8901B8((uint64_t)&v260, (uint64_t *)&v263);
LABEL_126:
    v94 = v93;
    sub_22F0D4E74(v41);
    v254[0] = v95;
    sub_22E8906A0(v94, v254);
LABEL_127:
    sub_22E903BEC((unsigned int *)&v260);
    return 1;
  }
  if (!v44 || v45 != 44)
  {
    if (v45 == 9)
      goto LABEL_97;
    goto LABEL_119;
  }
  v47 = sub_22F114198(*(_QWORD *)(v44 + 24));
  if ((*(_BYTE *)(v47 + 74) & 1) == 0 && *(_QWORD *)(v47 + 128) <= 7uLL
    || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v44 + 24)) + 76) & 0x80) != 0)
  {
    goto LABEL_119;
  }
LABEL_97:
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v249 & 0xFFFFFFFFFFFFFFFELL)
                                                                                        + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 55 >= 2
    && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v248 & 0xFFFFFFFFFFFFFFFELL)
                                                                                        + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 55 > 1)
  {
    v259 = v42;
    v249 = sub_22EB1B954((uint64_t)a1, (void *)(v249 & 0xFFFFFFFFFFFFFFFELL));
    if ((v249 & 1) != 0)
      goto LABEL_258;
    v124 = sub_22EB1B954((uint64_t)a1, (void *)(v248 & 0xFFFFFFFFFFFFFFFELL));
    v248 = v124;
    if ((v124 & 1) != 0)
      goto LABEL_258;
    v125 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)((v249 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
    v263 = v125;
    v126 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)((v124 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
    v254[0] = v126;
    v127 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v125 + 8) & 0xFFFFFFFFFFFFFFF0);
    v128 = *(_DWORD *)(v127 + 16);
    if (v127)
      v129 = v128 == 11;
    else
      v129 = 0;
    if (v129)
    {
      if (((*(_DWORD *)(v127 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
        goto LABEL_212;
    }
    else if (v127 && v128 == 44)
    {
      v130 = sub_22F114198(*(_QWORD *)(v127 + 24));
      if (((*(_BYTE *)(v130 + 74) & 1) != 0 || *(_QWORD *)(v130 + 128) > 7uLL)
        && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v127 + 24)) + 76) & 0x80) == 0)
      {
        goto LABEL_212;
      }
    }
    else if (v128 == 9)
    {
      goto LABEL_212;
    }
    v155 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v125 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (!v155 || (v156 = *(_DWORD *)(v155 + 16), v156 != 11) || ((v156 >> 19) & 0x1FE) - 210 >= 8)
    {
      a2 = v246;
      sub_22E8FCA40(a1, v246, 0x1350u, 0, (uint64_t)&v260);
      v161 = sub_22E8901B8((uint64_t)&v260, (uint64_t *)&v263);
      v162 = v249;
      goto LABEL_254;
    }
LABEL_212:
    v157 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v126 + 8) & 0xFFFFFFFFFFFFFFF0);
    v158 = *(_DWORD *)(v157 + 16);
    if (v157)
      v159 = v158 == 11;
    else
      v159 = 0;
    if (v159)
    {
      if (((*(_DWORD *)(v157 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
        goto LABEL_242;
    }
    else
    {
      if (v157 && v158 == 44)
      {
        v160 = sub_22F114198(*(_QWORD *)(v157 + 24));
        if (((*(_BYTE *)(v160 + 74) & 1) != 0 || *(_QWORD *)(v160 + 128) > 7uLL)
          && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v157 + 24)) + 76) & 0x80) == 0)
        {
          goto LABEL_245;
        }
        goto LABEL_242;
      }
      if (v158 != 9)
      {
LABEL_242:
        v178 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v126 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v178)
        {
          v179 = *(_DWORD *)(v178 + 16);
          if (v179 == 11 && ((v179 >> 19) & 0x1FE) - 210 < 8)
            goto LABEL_245;
        }
        a2 = v246;
        sub_22E8FCA40(a1, v246, 0x1350u, 0, (uint64_t)&v260);
        v161 = sub_22E8901B8((uint64_t)&v260, v254);
        v162 = v248;
LABEL_254:
        sub_22F0D4E74(v162 & 0xFFFFFFFFFFFFFFFELL);
        __p = v185;
        sub_22E8906A0(v161, (uint64_t *)&__p);
        sub_22E903BEC((unsigned int *)&v260);
        v37 = 0;
        goto LABEL_60;
      }
    }
LABEL_245:
    if (v125 != v126)
    {
      v180 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v125 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v180 && (v181 = *(_DWORD *)(v180 + 16), v181 == 11) && ((v181 >> 19) & 0x1FE) - 210 < 8
        || (v182 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v126 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
        && (v183 = *(_DWORD *)(v182 + 16), v183 == 11)
        && ((v183 >> 19) & 0x1FE) - 210 <= 7)
      {
        v184 = sub_22EB20124((uint64_t)a1, &v249, &v248, v125, v126, 0);
      }
      else
      {
        v184 = sub_22EB20358((uint64_t)a1, &v249, &v248, v125, v126, 0);
      }
      v125 = v184;
    }
    if (v125 < 0x10)
      goto LABEL_258;
    v186 = sub_22E3E4B64(*v43);
    v37 = sub_22EF63724(a1[11], v125, *(unsigned int *)(v186 + 20), 0);
    v187 = sub_22EF5CDF0(a1[11], *(_QWORD *)(*(_QWORD *)(v186 + 32) & 0xFFFFFFFFFFFFFFF0));
    v188 = v125 & 0xFFFFFFFFFFFFFFF0;
    if (v187 == sub_22EF5CDF0(a1[11], *(_QWORD *)(v125 & 0xFFFFFFFFFFFFFFF0)))
    {
      v249 = sub_22E90092C((uint64_t)a1, v249 & 0xFFFFFFFFFFFFFFFELL, v37, 27, 0, 0);
      v189 = v248 & 0xFFFFFFFFFFFFFFFELL;
      v190 = (uint64_t)a1;
      v191 = v37;
      v192 = 27;
LABEL_262:
      v248 = sub_22E90092C(v190, v189, v191, v192, 0, 0);
      goto LABEL_259;
    }
    v193 = *(_QWORD *)v188;
    if ((*(_BYTE *)(*(_QWORD *)v188 + 8) & 0xF) != 0)
      v193 = (unint64_t)sub_22F10D2BC(v125);
    v260 = (unsigned __int8 *)(v193 & 0xFFFFFFFFFFFFFFF0);
    sub_22F1192C0(&v260, (uint64_t)&__p);
    v263 = (unint64_t)v265;
    v264 = xmmword_22F44E300;
    sub_22F242C48((uint64_t)v254, (uint64_t)&v263);
    v194 = (_QWORD *)v255;
    if ((unint64_t)(v254[3] - v255) > 0xA)
    {
      *(_DWORD *)(v255 + 7) = 543584032;
      *v194 = *(_QWORD *)"(vector of ";
      v255 += 11;
    }
    else
    {
      llvm::raw_ostream::write((llvm::raw_ostream *)v254, "(vector of ");
    }
    v195 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
    v196 = (_WORD *)*((_QWORD *)v195 + 4);
    if (*((_QWORD *)v195 + 3) - (_QWORD)v196 > 1uLL)
    {
      *v196 = 10016;
      *((_QWORD *)v195 + 4) += 2;
    }
    else
    {
      v195 = (llvm::raw_ostream *)llvm::raw_ostream::write(v195, " '");
    }
    if (v258 >= 0)
      p_p = (const char *)&__p;
    else
      p_p = (const char *)__p;
    v198 = (llvm::raw_ostream *)llvm::raw_ostream::write(v195, p_p);
    v199 = *((_QWORD *)v198 + 4);
    if ((unint64_t)(*((_QWORD *)v198 + 3) - v199) > 8)
    {
      *(_BYTE *)(v199 + 8) = 41;
      *(_QWORD *)v199 = *(_QWORD *)"' values)";
      *((_QWORD *)v198 + 4) += 9;
    }
    else
    {
      llvm::raw_ostream::write(v198, "' values)");
    }
    sub_22E8FCA40(a1, v246, 0xBF0u, 0, (uint64_t)&v260);
    v200 = sub_22E8901B8((uint64_t)&v260, &v259);
    v201 = v256[1];
    v253[0] = *v256;
    v253[1] = v201;
    sub_22F2F2210(v200, (uint64_t)v253);
    sub_22E903BEC((unsigned int *)&v260);
    llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v254);
    if ((_QWORD *)v263 != v265)
      free((void *)v263);
    if (v258 < 0)
      operator delete(__p);
LABEL_258:
    v37 = 0;
LABEL_259:
    a2 = v246;
LABEL_60:
    if (v37 >= 0x10)
      goto LABEL_61;
    return 1;
  }
  v83 = a1[9];
  v84 = (*(_DWORD *)(v83 + 52) & 0x40000000) == 0 && (*(_BYTE *)(v83 + 60) & 1) == 0;
  v17 = 1;
  v97 = sub_22EB36814(a1, &v249, &v248, v246, 0, 1, 0, v84, 1);
  if (v97 >= 0x10)
  {
    v37 = v97;
    v263 = v42;
    v254[0] = v97;
    v98 = sub_22E3E4B64(*v43);
    v99 = sub_22E3E4B64(*(_QWORD *)(v37 & 0xFFFFFFFFFFFFFFF0));
    if (*(_DWORD *)(v98 + 20) != *(_DWORD *)(v99 + 20))
    {
      v103 = a1;
      v104 = v246;
      v105 = 3060;
      goto LABEL_182;
    }
    v100 = *(_QWORD *)(v99 + 32);
    v101 = sub_22EF5CDF0(a1[11], *(_QWORD *)(*(_QWORD *)(v98 + 32) & 0xFFFFFFFFFFFFFFF0));
    v102 = sub_22EF5CDF0(a1[11], *(_QWORD *)(v100 & 0xFFFFFFFFFFFFFFF0));
    a2 = v246;
    if (v101 != v102)
    {
      v103 = a1;
      v104 = v246;
      v105 = 3056;
LABEL_182:
      sub_22E8FCA40(v103, v104, v105, 0, (uint64_t)&v260);
      v134 = sub_22E8901B8((uint64_t)&v260, (uint64_t *)&v263);
      sub_22E8901B8(v134, v254);
      goto LABEL_127;
    }
LABEL_61:
    if ((v250 & 1) != 0)
      return 1;
    if ((v249 & 1) != 0)
      return 1;
    v48 = v248;
    if ((v248 & 1) != 0)
      return 1;
    v243 = (unsigned __int8 *)(v250 & 0xFFFFFFFFFFFFFFFELL);
    v247 = a2;
    v49 = sub_22EFFEB40((unsigned __int8 *)(v250 & 0xFFFFFFFFFFFFFFFELL));
    v50 = (unsigned __int8 *)sub_22EFFF078(v49);
    v51 = sub_22EFFEB40(v50);
    v52 = v51;
    v53 = *v51;
    if (v53 == 186)
    {
      v54 = *((_QWORD *)v51 + 2);
      v55 = v54 & 0xFFFFFFFFFFFFFFF8;
      if ((v54 & 4) != 0)
        v55 = *(_QWORD *)(v55 + 40);
      v52 = sub_22EFFEB40((unsigned __int8 *)v55);
      v53 = *v52;
    }
    if ((v53 & 0xFE) == 0x70)
    {
      v56 = (*(_DWORD *)v52 >> 18) & 0x3F;
      if (v56 - 2 >= 5 && (v56 > 0x12 || ((1 << v56) & 0x50180) == 0))
        goto LABEL_136;
      v57 = (unsigned __int8 **)(v52 + 24);
    }
    else
    {
      if (v53 != 141)
        goto LABEL_136;
      if (*((_DWORD *)v52 + 4) != 2)
        goto LABEL_136;
      v85 = HIDWORD(*(_QWORD *)v52) & 0x3FLL;
      if ((v85 - 5) > 0x24)
        goto LABEL_136;
      if ((v85 - 39) > 0xFFFFFFFD)
        goto LABEL_136;
      v86 = *(_QWORD *)v52;
      v87 = sub_22EFFBA54(v85);
      v88 = v86;
      v56 = v87;
      if (v87 - 2 >= 5 && (v87 > 0x12 || ((1 << v87) & 0x50180) == 0))
        goto LABEL_136;
      v57 = (unsigned __int8 **)&v52[8 * ((v88 >> 18) & 1) + 16 + BYTE3(v88)];
    }
    v58 = *v57;
    v59 = sub_22EFFA6B0(*v57);
    v60 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v59 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v61 = *(_DWORD *)(v60 + 16);
    if (v60)
      v62 = (v61 & 0xFF800FF) == 87031819;
    else
      v62 = 0;
    if (!v62)
    {
      v63 = *v59;
      if ((v63 & 0xFE) == 0x70)
      {
        v64 = (*(_DWORD *)v59 >> 18) & 0x3F;
        if (v64 > 0x14 || ((1 << v64) & 0x18FE00) == 0)
          goto LABEL_136;
      }
      else if (v63 == 233)
      {
        if ((*(_DWORD *)v59 & 0x7C0000) != 0x240000)
          goto LABEL_136;
      }
      else if (v61 != 39)
      {
        goto LABEL_136;
      }
    }
    v241 = v48 & 0xFFFFFFFFFFFFFFFELL;
    v242 = (uint64_t)v58;
    if (v56 - 16 >= 3)
      v65 = 6903;
    else
      v65 = 6901;
    sub_22E8FCA40(a1, v247, v65, 0, (uint64_t)&v260);
    sub_22F0D4E74((uint64_t)v243);
    v254[0] = v66;
    v240 = sub_22E8906A0((uint64_t)&v260, v254);
    v67 = sub_22EFFBA38(v56);
    v69 = v68;
    v263 = (unint64_t)v67;
    *(_QWORD *)&v264 = v68;
    sub_22F2F2210(v240, (uint64_t)&v263);
    sub_22E903BEC((unsigned int *)&v260);
    v70 = a1[11] + 2128;
    v260 = 0;
    v261 = v70;
    v262 = 5993;
    sub_22E3B89A8(&v260, v67, v69);
    sub_22F0D5A50((uint64_t)v243);
    LODWORD(v69) = v71;
    sub_22F0D60E4((uint64_t)v243);
    sub_22EB55520((uint64_t)a1, v247, (uint64_t)&v260, v69 | (unint64_t)(v72 << 32));
    if (v260 && v261)
      sub_22E3BB10C(v261, (unint64_t)v260);
    v73 = a1[11] + 2128;
    v260 = 0;
    v261 = v73;
    v262 = 5992;
    sub_22F0D5A50(v242);
    v75 = v74;
    sub_22F0D60E4(v241);
    sub_22EB55520((uint64_t)a1, v247, (uint64_t)&v260, v75 | (unint64_t)(v76 << 32));
    if (v260 && v261)
      sub_22E3BB10C(v261, (unint64_t)v260);
    v243 = (unsigned __int8 *)(v250 & 0xFFFFFFFFFFFFFFFELL);
LABEL_136:
    v106 = v247;
    sub_22E98AF9C((uint64_t)a1, v243, v247);
    v107 = a1[11];
    v108 = *(_QWORD *)(v37 & 0xFFFFFFFFFFFFFFF0);
    v109 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v108 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v109 == 39 || v109 == 32)
    {
      v110 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
      LOBYTE(v20) = 2;
      if (v110)
      {
        while (1)
        {
          v237 = (*(_DWORD *)(v110 + 16) >> 19) - 33;
          if (v237 < 4)
            break;
          v110 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v110 + 40) & 0xFFFFFFFFFFFFFFF0));
          if (!v110)
            goto LABEL_139;
        }
        LODWORD(v20) = 0x1010200u >> (8 * v237);
      }
LABEL_139:
      v111 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
      if (v111)
      {
        while (1)
        {
          v238 = (*(_DWORD *)(v111 + 16) >> 19) - 33;
          if (v238 < 4)
            break;
          v111 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v111 + 40) & 0xFFFFFFFFFFFFFFF0));
          LOBYTE(v112) = 2;
          if (!v111)
            goto LABEL_141;
        }
        v112 = 0x1010200u >> (8 * v238);
      }
      else
      {
        LOBYTE(v112) = 2;
      }
LABEL_141:
      if (v18)
      {
        if ((_BYTE)v20)
          v113 = v112;
        else
          v113 = 0;
      }
      else
      {
        v113 = 1;
        if (v20 != 1 && v112 != 1)
        {
          if ((_BYTE)v20)
          {
            if ((_BYTE)v112)
              v113 = 2;
            else
              v113 = v20;
          }
          else
          {
            v113 = v112;
          }
        }
      }
      v114 = sub_22F10D774(*(_QWORD *)(v108 & 0xFFFFFFFFFFFFFFF0));
      if (v114)
      {
        while (1)
        {
          v239 = (*(_DWORD *)(v114 + 16) >> 19) - 33;
          if (v239 < 4)
            break;
          v114 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v114 + 40) & 0xFFFFFFFFFFFFFFF0));
          LOBYTE(v115) = 2;
          if (!v114)
            goto LABEL_147;
        }
        v115 = 0x1010200u >> (8 * v239);
      }
      else
      {
        LOBYTE(v115) = 2;
      }
LABEL_147:
      if (v115 != v113)
      {
        v145 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFF0);
LABEL_191:
        for (i = *v145; ; i = *(_QWORD *)(v147 + 40))
        {
          v147 = sub_22F10D774(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0));
          if (!v147)
            break;
          if (((*(_DWORD *)(v147 + 16) >> 19) - 37) > 0xFFFFFFFB)
          {
            v37 = sub_22F4098F0(v37, v107);
            v145 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFF0);
            goto LABEL_191;
          }
        }
        v37 = sub_22F369798(v107, dword_22F481C14[v113], v37, v37);
        v107 = a1[11];
      }
      v106 = v247;
    }
    if (v18)
    {
      v17 = sub_22E3CD3D4(v107 + 2032, 64, 3);
      sub_22F330644(v17, v18, v19, v250 & 0xFFFFFFFFFFFFFFFELL, v249 & 0xFFFFFFFFFFFFFFFELL, v248 & 0xFFFFFFFFFFFFFFFELL, v106, a3, v37, SBYTE4(v251), SHIWORD(v251), v251);
      return v17;
    }
    v116 = (_DWORD *)(v250 & 0xFFFFFFFFFFFFFFFELL);
    v117 = (_DWORD *)(v249 & 0xFFFFFFFFFFFFFFFELL);
    v118 = (_DWORD *)(v248 & 0xFFFFFFFFFFFFFFFELL);
    v119 = v251;
    v120 = BYTE4(v251);
    if (a1[162] == a1[161])
    {
      v121 = 0;
      v122 = a3;
    }
    else
    {
      v121 = a1[162];
      v122 = a3;
      if (HIDWORD(v121))
      {
        v123 = 56;
        goto LABEL_155;
      }
    }
    v123 = 48;
LABEL_155:
    v17 = sub_22E3CD3D4(v107 + 2032, v123, 3);
    sub_22F0038A4(v17, v116, v247, v117, v122, v118, v37, v120, v119, v121);
  }
  return v17;
}

