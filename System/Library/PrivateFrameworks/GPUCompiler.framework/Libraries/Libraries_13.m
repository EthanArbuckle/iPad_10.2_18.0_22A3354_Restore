uint64_t sub_22EA27E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, int a7, unsigned __int8 *a8)
{
  unsigned __int8 v11;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 **v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int v41;
  BOOL v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unsigned __int8 *v69[2];
  unint64_t v70;
  uint64_t v71[2];
  int v72;
  uint64_t v73;
  __int16 v74;
  unsigned __int8 *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void *v79;
  uint64_t v80;
  _QWORD v81[12];

  v11 = a4;
  v81[10] = *MEMORY[0x24BDAC8D0];
  v76 = a6;
  v77 = a4;
  v75 = a8;
  v15 = a4 & 0xFFFFFFFFFFFFFFF0;
  v16 = *(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v79) = 0;
  v17 = sub_22F110500((uint64_t)&v79, v16);
  if (a8)
  {
    if (!a7)
    {
      if (*(_BYTE *)(v17 + 16) != 15)
      {
        v69[0] = a8;
        v23 = a8;
        goto LABEL_14;
      }
      v18 = &v75;
      v19 = 1;
LABEL_87:
      LODWORD(v70) = 0;
      v56 = *(_QWORD *)(a2 + 48);
      v71[0] = 0;
      v71[1] = v56;
      v72 = 0;
      v73 = a2;
      v74 = 0;
      v69[0] = (unsigned __int8 *)sub_22E9F92B0(*(unsigned int *)(a2 + 24), a7, a8);
      v69[1] = v57;
      v79 = v81;
      v80 = 0x800000000;
      sub_22E3D0148((uint64_t)&v79, v18, &v18[v19]);
      v78 = sub_22EC4531C();
      if (v79 != v81)
        free(v79);
      return v78;
    }
    if (*a8 == 215)
    {
      v18 = (unsigned __int8 **)(a8 + 24);
      v19 = *((unsigned int *)a8 + 1);
    }
    else
    {
      v18 = &v75;
      v19 = 1;
    }
  }
  else
  {
    if (*(_BYTE *)(v17 + 16) != 15 || (*(_BYTE *)(a2 + 96) & 5) == 1)
      goto LABEL_11;
    if ((*(_DWORD *)(a2 + 28) & 0x7F) != 0x40)
    {
      v20 = *(_QWORD *)(a2 + 16);
      v21 = v20 & 0xFFFFFFFFFFFFFFF8;
      if ((v20 & 4) != 0)
        v21 = *(_QWORD *)v21;
      if ((*(_WORD *)(v21 + 8) & 0x7Eu) - 34 <= 3)
      {
LABEL_11:
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0xB50u, 0, (uint64_t)&v79);
        v70 = *(_QWORD *)(a2 + 40);
        v22 = sub_22E894538((uint64_t)&v79, (uint64_t *)&v70);
        sub_22E8901B8(v22, &v77);
LABEL_79:
        sub_22E903BEC((unsigned int *)&v79);
        return 0;
      }
    }
    v18 = 0;
    v19 = 0;
  }
  if (*(_BYTE *)(v17 + 16) == 15)
    goto LABEL_87;
  if (a7 && *a8 == 180)
  {
    v18 = (unsigned __int8 **)*((_QWORD *)a8 + 2);
    v19 = ((*((_QWORD *)a8 + 3) - (_QWORD)v18) >> 3);
  }
  if (v19 != 1)
  {
    if (v19)
    {
      sub_22F0D5A50((uint64_t)v18[1]);
      v42 = a2 == 0;
      v43 = 2893;
      v44 = 3607;
    }
    else
    {
      sub_22F0D5A50((uint64_t)a8);
      v42 = a2 == 0;
      v43 = 2894;
      v44 = 3608;
    }
    if (v42)
      v48 = v44;
    else
      v48 = v43;
    sub_22E8FCA40((_QWORD *)a1, v41, v48, 0, (uint64_t)&v79);
    v70 = a2;
    v71[0] = a3;
    if (a2)
    {
      v47 = (uint64_t)&v79;
LABEL_75:
      v49 = sub_22E890024(v47, (uint64_t *)&v70);
LABEL_78:
      v50 = sub_22E8901B8(v49, &v77);
      sub_22E8906A0(v50, &v76);
      goto LABEL_79;
    }
    v47 = (uint64_t)&v79;
LABEL_77:
    v49 = sub_22E894538(v47, v71);
    goto LABEL_78;
  }
  v69[0] = 0;
  v23 = *v18;
  v69[0] = v23;
  if (a7 && *v23 == 180)
  {
    sub_22F0D5A50((uint64_t)a8);
    if (a2)
      v46 = 2895;
    else
      v46 = 3609;
    sub_22E8FCA40((_QWORD *)a1, v45, v46, 0, (uint64_t)&v79);
    LOBYTE(v68) = *a8 == 180;
    v47 = sub_22E894E38((uint64_t)&v79, (unsigned __int8 *)&v68);
    v70 = a2;
    v71[0] = a3;
    if (a2)
      goto LABEL_75;
    goto LABEL_77;
  }
LABEL_14:
  if ((*(_QWORD *)(*(_QWORD *)(a1 + 72) + 140) & 0x40000000000000) != 0
    && a2
    && (v24 = *(_QWORD *)(a1 + 88), *((_QWORD *)a8 + 1) == *(_QWORD *)(v24 + 16856)))
  {
    v58 = sub_22F36E1B8(*(_QWORD *)(a1 + 88));
    v59 = *(_QWORD *)(v58 + 48);
    if (v59)
      v60 = v59 & 0xFFFFFFFFFFFFFFF0;
    else
      v60 = sub_22EF6462C(v24, v58);
    v79 = (void *)a1;
    v80 = v60;
    if ((sub_22EB53364((uint64_t)&v79, a8) & 1) != 0)
      return 0;
    v25 = 1;
  }
  else
  {
    if (!a2)
    {
      v78 = 0;
      if (sub_22EDC7260((_QWORD *)a1, *a5, (uint64_t)(a5 + 1), (uint64_t *)v69, (uint64_t *)&v78, 0, 0) == 1)
      {
        if (*a8 == 180)
        {
          sub_22E8FCA40((_QWORD *)a1, v76, 0xE16u, 0, (uint64_t)&v79);
          v70 = 0;
          v71[0] = a3;
          v36 = sub_22E894538((uint64_t)&v79, v71);
          v37 = *((_QWORD *)v69[0] + 1);
          if (v37 <= 0xF)
            v37 = *a5;
          v70 = v37;
          v38 = sub_22E8901B8(v36, (uint64_t *)&v70);
          sub_22F0D4E74((uint64_t)v69[0]);
          v68 = v39;
          v40 = (uint64_t *)&v68;
        }
        else
        {
          sub_22E8FCA40((_QWORD *)a1, v76, 0xE15u, 0, (uint64_t)&v79);
          v70 = 0;
          v71[0] = a3;
          v52 = sub_22E894538((uint64_t)&v79, v71);
          v70 = *a5;
          v53 = sub_22E8901B8(v52, (uint64_t *)&v70);
          v54 = *((_QWORD *)v69[0] + 1);
          if (v54 <= 0xF)
            v54 = *a5;
          v68 = v54;
          v38 = sub_22E8901B8(v53, (uint64_t *)&v68);
          sub_22F0D4E74((uint64_t)v69[0]);
          v67 = v55;
          v40 = &v67;
        }
        sub_22E8906A0(v38, v40);
        goto LABEL_101;
      }
      return v78;
    }
    v25 = 0;
  }
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x3D)
  {
    v26 = sub_22EF67C08(*(_QWORD *)(a1 + 88));
    v27 = *(_QWORD *)(v15 + 8);
    if (*(_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
    {
      v28 = *((_QWORD *)v23 + 1);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v28 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 2)
      {
        if ((v27 & 8) != 0)
        {
          v30 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v29 = 0;
          v30 = 0;
        }
        v61 = v30 | (v27 | v11) & 7;
        if (((v61 | v29) & 0xCFFFFFFF8) == 0)
          return v61 & 7 | v28;
        v62 = *(_QWORD *)(a1 + 88);
        v79 = (void *)(v61 | v29);
        v63 = sub_22E491354((unsigned int *)&v79, v28);
        return sub_22EF5DBC4(v62, v63, (uint64_t)v79);
      }
    }
  }
  v78 = 0;
  if (sub_22EDC7260((_QWORD *)a1, *a5, (uint64_t)(a5 + 1), (uint64_t *)v69, (uint64_t *)&v78, 0, 0) == 1)
    sub_22F347444((_QWORD *)a1, a2, v69[0]);
  if (*(_DWORD *)(a1 + 10680) > *(_DWORD *)(a1 + 11956))
    v31 = 1;
  else
    v31 = v25;
  if ((v31 & 1) == 0
    && v78 >= 0x10
    && ((v32 = *(_QWORD *)(v78 & 0xFFFFFFFFFFFFFFF0)) != 0 && *(_BYTE *)(v32 + 16) == 32
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v32 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
     && (v32 = sub_22F10CF48(v32)) != 0)
    && sub_22E5761BC(v32))
  {
    v33 = *a5;
    v34 = v33;
    while (1)
    {
      if ((v34 & 0xF) != 0)
        goto LABEL_47;
      v35 = *(unsigned __int8 *)(*(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v35 > 0x39)
      {
LABEL_42:
        if (sub_22F115668(v34))
          v33 = v34;
        v34 = sub_22F115B7C(v34);
        if (!v34)
          goto LABEL_100;
      }
      else
      {
        if (v35 == 24)
          goto LABEL_99;
        if (v35 == 26)
        {
          if ((*(_BYTE *)(v34 + 23) & 0x10) != 0)
          {
LABEL_99:
            v33 = v34;
LABEL_100:
            v65 = sub_22F115668(v33);
            sub_22E8FCA40((_QWORD *)a1, v65, 0x1898u, 0, (uint64_t)&v79);
            v70 = a2;
            v71[0] = a3;
            v66 = sub_22E890024((uint64_t)&v79, (uint64_t *)&v70);
            sub_22E8906A0(v66, &v76);
LABEL_101:
            sub_22E903BEC((unsigned int *)&v79);
            return v78;
          }
        }
        else if (((1 << v35) & 0x20000000200003CLL) == 0)
        {
          goto LABEL_42;
        }
LABEL_47:
        v34 = sub_22F115B7C(v34);
      }
    }
  }
  return v78;
}

uint64_t sub_22EA28548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v8[5];

  if ((a3 & 0xCFFFFFFF8) == 0)
    return a3 & 7 | a2;
  v8[3] = v3;
  v8[4] = v4;
  v8[0] = a3;
  v6 = sub_22E491354((unsigned int *)v8, a2);
  return sub_22EF5DBC4(a1, v6, v8[0]);
}

uint64_t sub_22EA285A4(_QWORD *a1, unint64_t a2, int a3, unsigned __int8 *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v16;
  unint64_t v17;

  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = (unint64_t *)(v10 & 0xFFFFFFFFFFFFFFF8);
  if ((v10 & 4) != 0)
    v11 = (unint64_t *)v11[4];
  v12 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 16))(a2);
  v13 = sub_22EA27E18((uint64_t)a1, a2, v8, v9, v11, v12, a3, a4);
  if (v13 <= 0xF)
  {
    v14 = 1;
    sub_22EFC77E8(a2, 1);
  }
  else
  {
    *(_QWORD *)(a2 + 48) = v13;
    if ((*(_WORD *)(a1[9] + 148) & 2) != 0)
    {
      sub_22EA1D5B8(a1, a2);
      if (v16)
        sub_22EFC77E8(a2, 1);
    }
    if ((*(_DWORD *)(a1[9] + 52) & 0x40000000) != 0)
      sub_22EA1D764((unint64_t)a1, a2);
    if ((*(_BYTE *)(a2 + 72) & 3) == 0)
    {
      v17 = sub_22E3CD31C((uint64_t *)(a2 + 72), a2);
      if (v17)
        sub_22EA0EA3C((unint64_t)a1, a2, v17, 0);
    }
    sub_22EA203D8((uint64_t)a1, a2);
    return *(unsigned __int8 *)(a2 + 28) >> 7;
  }
  return v14;
}

void sub_22EA286EC(uint64_t a1, _QWORD *a2, unsigned int a3)
{
  int v5;
  uint64_t v6;
  uint64_t j;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *i;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t k;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = *(unsigned __int8 *)a2;
  if (v5 == 173)
  {
    a2 = (_QWORD *)a2[2];
    v5 = *(unsigned __int8 *)a2;
  }
  if (v5 == 172)
  {
    a2 = (_QWORD *)a2[2];
    v5 = *(unsigned __int8 *)a2;
  }
  if (v5 == 180)
  {
    v11 = (uint64_t *)a2[2];
    v12 = a2[3] - (_QWORD)v11;
    if (!(v12 >> 3))
      return;
    v13 = &v11[(v12 >> 3)];
    while (1)
    {
      v14 = *v11;
      v15 = (_QWORD *)(*v11 + 8);
      for (i = v15; ; i = (_QWORD *)(v19 + 32))
      {
        v17 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
        if (v17)
          v18 = (*(_DWORD *)(v17 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
        else
          v18 = 0;
        if (v18)
        {
          v19 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
          continue;
        }
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
          break;
        v39 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
        v19 = sub_22F10CF48(v17);
        v17 = v39;
        if (!v19)
          break;
      }
      v20 = sub_22F10C2A4(v17);
      if (v20 && (*(_DWORD *)(v20 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v20 + 75) & 0x80) != 0)
        goto LABEL_47;
      while (2)
      {
        v21 = *(_QWORD *)(*v15 & 0xFFFFFFFFFFFFFFF0);
        if (v21)
          v22 = (*(_DWORD *)(v21 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
        else
          v22 = 0;
        if (v22)
        {
          v23 = *(_QWORD *)(*v15 & 0xFFFFFFFFFFFFFFF0);
LABEL_38:
          v15 = (_QWORD *)(v23 + 32);
          continue;
        }
        break;
      }
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
      {
        v40 = *(_QWORD *)(*v15 & 0xFFFFFFFFFFFFFFF0);
        v23 = sub_22F10CF48(v21);
        v21 = v40;
        if (v23)
          goto LABEL_38;
      }
      v24 = sub_22F10C2A4(v21);
      if (v24 && (*(_DWORD *)(v24 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v24 + 76) & 2) != 0)
      {
LABEL_47:
        sub_22EFF605C(v14);
        if (v25)
          v26 = v25;
        else
          v26 = a3;
        sub_22EA286EC(a1, v14, v26);
      }
      if (++v11 == v13)
        return;
    }
  }
  v6 = a2[1];
  if (v5 == 179)
  {
    for (j = a2[1]; ; j = *(_QWORD *)(v10 + 32))
    {
      v8 = *(_QWORD *)(j & 0xFFFFFFFFFFFFFFF0);
      if (v8)
        v9 = (*(_DWORD *)(v8 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
      else
        v9 = 0;
      if (v9)
      {
        v10 = *(_QWORD *)(j & 0xFFFFFFFFFFFFFFF0);
      }
      else if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3
             || (v38 = *(_QWORD *)(j & 0xFFFFFFFFFFFFFFF0), v10 = sub_22F10CF48(v8), v8 = v38, !v10))
      {
        v31 = sub_22F10C2A4(v8);
        if (v31 && (*(_DWORD *)(v31 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v31 + 75) & 0x80) != 0)
        {
          v32 = a3;
          v33 = a1;
          v34 = v6;
          v35 = 2;
          v36 = 1;
          goto LABEL_70;
        }
        return;
      }
    }
  }
  for (k = a2[1]; ; k = *(_QWORD *)(v30 + 32))
  {
    v28 = *(_QWORD *)(k & 0xFFFFFFFFFFFFFFF0);
    if (v28)
      v29 = (*(_DWORD *)(v28 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v29 = 0;
    if (v29)
    {
      v30 = *(_QWORD *)(k & 0xFFFFFFFFFFFFFFF0);
      continue;
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
      break;
    v41 = *(_QWORD *)(k & 0xFFFFFFFFFFFFFFF0);
    v30 = sub_22F10CF48(v28);
    v28 = v41;
    if (!v30)
      break;
  }
  v37 = sub_22F10C2A4(v28);
  if (v37 && (*(_DWORD *)(v37 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v37 + 76) & 2) != 0)
  {
    v32 = a3;
    v33 = a1;
    v34 = v6;
    v35 = 4;
    v36 = 4;
LABEL_70:
    sub_22F31DBEC(v33, v34, v32, v35, v36);
  }
}

uint64_t sub_22EA28A28(_QWORD *a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  while (1)
  {
    v1 = *(_QWORD *)(*a1 & 0xFFFFFFFFFFFFFFF0);
    if (v1)
      v2 = (*(_DWORD *)(v1 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v2 = 0;
    if (v2)
    {
      v3 = v1;
      goto LABEL_9;
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
      break;
    v5 = v1;
    v3 = sub_22F10CF48(v1);
    v1 = v5;
    if (!v3)
      break;
LABEL_9:
    a1 = (_QWORD *)(v3 + 32);
  }
  result = sub_22F10C2A4(v1);
  if (result)
  {
    if ((*(_DWORD *)(result + 28) & 0x7Eu) - 34 > 3)
      return 0;
    else
      return *(unsigned __int8 *)(result + 75) >> 7;
  }
  return result;
}

void sub_22EA28AD8()
{
  _QWORD *v0;
  unint64_t v1;
  int v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int i;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  unsigned int *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int v64;
  unsigned int v65;
  uint64_t v66;
  unsigned __int8 *v68;
  uint64_t v69;
  unsigned __int8 *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 **v73;
  uint64_t v74;
  uint64_t m;
  unsigned __int8 *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  unsigned __int8 *v81;
  unsigned __int8 *v82;
  int v83;
  uint64_t v84;
  unsigned __int8 **v85;
  unint64_t v86;
  unint64_t v87;
  unsigned __int8 *v88;
  void (**v89)(_QWORD, uint64_t, _QWORD, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 *v97;
  unsigned int v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 *v109;
  unsigned __int8 *v110;
  unsigned int v111;
  uint64_t v112;
  unsigned __int8 *v113;
  int v114;
  uint64_t v115;
  unint64_t *v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  _QWORD *v122;
  unsigned int v123;
  uint64_t v124;
  void (***v125)(_QWORD, uint64_t, _QWORD, uint64_t);
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t j;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  unsigned __int8 *v151;
  int v152;
  int v153;
  int v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  _BOOL4 v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int *v170;
  unint64_t v171;
  unsigned int *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int *v178;
  uint64_t v179;
  unsigned int *v180;
  unint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  BOOL v191;
  uint64_t v192;
  char v193;
  _QWORD *v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  _QWORD *v198;
  unint64_t v199;
  int v200;
  unsigned __int8 *v201;
  unsigned int v202;
  unint64_t v203;
  uint64_t v204;
  unint64_t v205;
  int k;
  uint64_t v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  unint64_t v214;
  unint64_t v215;
  int v216;
  uint64_t v217;
  unsigned int v218[24];
  _BYTE v219[96];
  __int128 v220;
  uint64_t v221;
  _BYTE v222[96];
  _BYTE v223[48];
  char v224;
  _BYTE v225[96];
  _BYTE v226[96];
  _BYTE v227[96];
  _BYTE v228[96];
  unsigned __int8 *v229;
  void (**v230)(_QWORD, uint64_t, _QWORD, uint64_t);
  __int128 v231;
  __int128 v232;
  _OWORD v233[772];
  uint64_t v234;

  v0 = (_QWORD *)MEMORY[0x24BDAC7A8]();
  v4 = v3;
  v5 = (uint64_t)v0;
  v234 = *MEMORY[0x24BDAC8D0];
  v229 = v3;
  if (!v1)
  {
    v8 = 0;
LABEL_10:
    sub_22EBBCB14(v0, v4, v8, 0, sub_22F2E6FA4, &v230);
    return;
  }
  v6 = v1;
  if ((*(_DWORD *)(v1 + 28) & 0x80) != 0)
  {
    if ((*(_DWORD *)(v1 + 28) & 0x7Fu) - 60 >= 7)
      v8 = 0;
    else
      v8 = v1;
    goto LABEL_10;
  }
  if ((*(_DWORD *)(v1 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFC)
  {
    sub_22E8FCA40(v0, *(_DWORD *)(v1 + 24), 0xEBDu, 0, (uint64_t)&v230);
    *(_QWORD *)v223 = *(_QWORD *)(v6 + 40);
    v9 = sub_22E894538((uint64_t)&v230, (uint64_t *)v223);
    sub_22F0D4E74((uint64_t)v229);
    *(_QWORD *)&v220 = v10;
    sub_22E8906A0(v9, (uint64_t *)&v220);
LABEL_12:
    v7 = (unsigned int *)&v230;
    goto LABEL_13;
  }
  if ((*(_DWORD *)(v1 + 28) & 0x7Fu) - 67 <= 0xFFFFFFF8)
  {
    sub_22E8FCA40(v0, *(_DWORD *)(v1 + 24), 0xDE5u, 0, (uint64_t)v228);
    v7 = (unsigned int *)v228;
LABEL_13:
    sub_22E903BEC(v7);
LABEL_14:
    sub_22EFC77E8(v6, 1);
    return;
  }
  v11 = v2;
  v12 = *(_QWORD *)(*(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v230) = 0;
  v13 = sub_22F110500((uint64_t)&v230, v12);
  if (!v13 || *(_QWORD *)(v13 + 24) > 0xFuLL || (*(_BYTE *)(v13 + 17) & 4) != 0)
    goto LABEL_26;
  v14 = sub_22EBBCB14(v5, v4, v6, 0, sub_22F2E6FA4, &v230);
  if (v14 <= 1)
    goto LABEL_14;
  v15 = (unsigned __int8 *)(v14 & 0xFFFFFFFFFFFFFFFELL);
  if ((*(_BYTE *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 2) & 2) != 0)
  {
    sub_22EFC77E8(v6, 1);
    sub_22EFBC9E4(v6, (uint64_t)v15);
    return;
  }
  v229 = (unsigned __int8 *)(v14 & 0xFFFFFFFFFFFFFFFELL);
  if ((sub_22EA285A4((_QWORD *)v5, v6, v11, v15) & 1) == 0)
  {
LABEL_26:
    if (sub_22E49F808(v6))
    {
      if ((*(_DWORD *)(v6 + 28) & 0x7F) == 0x40)
        goto LABEL_63;
      v16 = *(_QWORD *)(v6 + 16);
      v17 = v16 & 0xFFFFFFFFFFFFFFF8;
      if ((v16 & 4) != 0)
        v17 = *(_QWORD *)v17;
      if ((*(_WORD *)(v17 + 8) & 0x7Eu) - 34 >= 4)
      {
LABEL_63:
        sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0xAF9u, 0, (uint64_t)v227);
        v7 = (unsigned int *)v227;
        goto LABEL_13;
      }
    }
    if (sub_22E3CEC2C(v6) && (*(_BYTE *)(v6 + 96) & 5) == 1)
    {
      sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0xB89u, 0, (uint64_t)v226);
      v7 = (unsigned int *)v226;
      goto LABEL_13;
    }
    v18 = *(_QWORD *)(v6 + 48);
    if ((*(_BYTE *)(*(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
    {
      v19 = sub_22EF5C728(*(_QWORD *)(v5 + 88), *(_QWORD *)(v6 + 48));
      if (v19 && *(_BYTE *)(v19 + 16) == 4)
        v18 = *(_QWORD *)(v19 + 32);
      v20 = *(_DWORD *)(v6 + 24);
      v230 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB6EF8;
      LODWORD(v231) = 4962;
      if ((sub_22EE8B0B0(v5, v20, v18) & 1) != 0)
        goto LABEL_14;
      v21 = *(unsigned int *)(v6 + 24);
      v22 = *(_QWORD *)(v6 + 48);
      *(_DWORD *)v223 = 2;
      v230 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB7980;
      LODWORD(v231) = 2577;
      *((_QWORD *)&v231 + 1) = v223;
      if (sub_22EAB2EB4(v5, v21, v22, &v230))
        sub_22EFC77E8(v6, 1);
    }
    v23 = v6;
    if ((*(_DWORD *)(v6 + 28) & 0x7F) != 0x53)
    {
      v24 = *(_QWORD *)(v6 + 16);
      v25 = v24 & 0xFFFFFFFFFFFFFFF8;
      if ((v24 & 4) != 0)
        v25 = *(_QWORD *)v25;
      for (i = *(_WORD *)(v25 + 8) & 0x7F; i != 83; i = *(_WORD *)(v25 + 8) & 0x7F)
      {
        v27 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v27 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_51;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_50;
          if (i == 16)
            goto LABEL_44;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_57;
          if (i == 24)
          {
LABEL_44:
            v27 = -48;
          }
          else
          {
LABEL_50:
            if (i != 70)
            {
LABEL_51:
              v28 = i - 52;
              if ((i - 33) >= 5)
                v29 = -48;
              else
                v29 = -64;
              if (v28 >= 6)
                v27 = v29;
              else
                v27 = -72;
              goto LABEL_57;
            }
            v27 = -64;
          }
        }
LABEL_57:
        v30 = *(_QWORD *)(v25 + v27 + 16);
        v25 = v30 & 0xFFFFFFFFFFFFFFF8;
        if ((v30 & 4) != 0)
          v25 = *(_QWORD *)v25;
      }
      v23 = v25 - 40;
    }
    v31 = *(_QWORD *)(v6 + 80);
    if (v31)
    {
      v32 = 0;
      v33 = *(_QWORD *)(v23 + 88);
      v34 = *(_QWORD *)(v6 + 80);
      while (sub_22EFBBF74(v34, v33) != 2)
      {
        if ((*(_BYTE *)(v34 + 72) & 3) != 0)
        {
          if (v32)
            goto LABEL_83;
          v32 = 1;
        }
        v35 = sub_22E3CD31C((uint64_t *)(v34 + 72), v34);
        if (v35 != v31)
        {
          v34 = v35;
          if (v35)
            continue;
        }
        goto LABEL_83;
      }
      if (v34 != v6)
      {
        v36 = *(_DWORD *)(v6 + 28) & 0x7F;
        if (v36 != 64)
        {
          v37 = *(_QWORD *)(v6 + 16);
          v38 = v37 & 0xFFFFFFFFFFFFFFF8;
          if ((v37 & 4) != 0)
            v38 = *(_QWORD *)v38;
          if ((*(_WORD *)(v38 + 8) & 0x7Eu) - 34 <= 3)
          {
            if (!(*(unsigned int (**)(unint64_t))(*(_QWORD *)v6 + 24))(v6))
              goto LABEL_83;
            v36 = *(_DWORD *)(v6 + 28) & 0x7F;
          }
          if (v36 != 64 && (*(_BYTE *)(v6 + 97) & 1) != 0)
            goto LABEL_83;
        }
        if ((sub_22F31D794((_QWORD *)v5, v34, v6) & 1) != 0)
          return;
      }
    }
LABEL_83:
    if ((*(_BYTE *)(*(_QWORD *)(v5 + 72) + 1) & 1) != 0)
    {
      if ((*(_DWORD *)(v6 + 28) & 0x7F) != 0x40)
      {
        v39 = *(_QWORD *)(v6 + 16);
        v40 = v39 & 0xFFFFFFFFFFFFFFF8;
        if ((v39 & 4) != 0)
          v40 = *(_QWORD *)v40;
        if ((*(_WORD *)(v40 + 8) & 0x7Eu) - 34 <= 3)
        {
          v41 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v6 + 32))(v6);
          if ((!v41 || (*(_DWORD *)(v41 + 28) & 0x7F) != 0x40 || (*(_DWORD *)(v41 + 96) & 0x600u) - 1536 <= 0xFFFFFBFF)
            && *(_QWORD *)(v41 + 88) >= 8uLL)
          {
            sub_22EFF605C((uint64_t)v229);
            sub_22E8FCA40((_QWORD *)v5, v42, 0x1273u, 0, (uint64_t)&v230);
            *(_QWORD *)v223 = *(_QWORD *)(v6 + 40);
            sub_22E894538((uint64_t)&v230, (uint64_t *)v223);
            sub_22E903BEC((unsigned int *)&v230);
            v43 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v6 + 32))(v6);
            v44 = sub_22EFBC5B4(v43);
            sub_22EFF605C(v44);
            sub_22E8FCA40((_QWORD *)v5, v45, 0x1775u, 0, (uint64_t)&v230);
            *(_DWORD *)v223 = 0;
            sub_22E8900C4((uint64_t)&v230, (int *)v223);
            sub_22E903BEC((unsigned int *)&v230);
            return;
          }
        }
      }
      if (sub_22E3CB5E0(v6))
      {
        v46 = *(unsigned int *)(v5 + 1904);
        if ((_DWORD)v46)
        {
          v47 = *(_QWORD *)(*(_QWORD *)(v5 + 1896) + 8 * v46 - 8);
          *(_DWORD *)(v47 + 8) |= 8u;
        }
      }
      if (sub_22EE67384(v5, (unint64_t)v229, 11))
        goto LABEL_14;
    }
    v48 = *(_QWORD *)((*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v48 & 8) != 0 && (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x1000)
    {
      sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0xE9Du, 0, (uint64_t)v225);
      v7 = (unsigned int *)v225;
      goto LABEL_13;
    }
    if ((*(_BYTE *)(*(_QWORD *)(v5 + 72) + 104) & 0x20) != 0
      && (*(_BYTE *)(v6 + 28) & 0x80) == 0
      && sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0)&& (*(_BYTE *)(*(_QWORD *)(v5 + 72) + 122) & 8) == 0&& ((*(_DWORD *)(v6 + 28) & 0x7F) == 0x40 || (*(_BYTE *)(v6 + 97) & 0x80) == 0))
    {
      v49 = *(_QWORD *)(v6 + 56);
      if ((v49 & 4) != 0 && (v86 = v49 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v86 + 16)))
        v50 = **(int ***)(v86 + 24);
      else
        v50 = (int *)(v6 + 64);
      sub_22E8FCA40((_QWORD *)v5, *v50, 0xF1Bu, 0, (uint64_t)&v230);
      v51 = *(_QWORD *)(v6 + 56);
      if ((v51 & 4) != 0 && (v87 = v51 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v87 + 16)))
        v52 = **(unsigned int ***)(v87 + 24);
      else
        v52 = (unsigned int *)(v6 + 64);
      v53 = *v52 | ((unint64_t)*v52 << 32);
      v223[20] = 0;
      *(_QWORD *)&v223[12] = 0;
      *(_QWORD *)v223 = v53;
      v223[8] = 0;
      *(_QWORD *)&v223[40] = 0xA00000000000000;
      v223[35] = 0;
      *(_WORD *)&v223[36] = 0;
      *(_DWORD *)&v223[38] = 0;
      strcpy(&v223[24], "constexpr ");
      v224 = 0;
      sub_22E890748((uint64_t)&v230, v223);
      if ((v223[47] & 0x80000000) != 0)
        operator delete(*(void **)&v223[24]);
      goto LABEL_12;
    }
    if (sub_22E4C7388(v6))
    {
      sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0xE99u, 0, (uint64_t)v222);
      v7 = (unsigned int *)v222;
      goto LABEL_13;
    }
    v54 = sub_22E547004(v6);
    if (v54)
      goto LABEL_115;
    if ((*(_BYTE *)(v6 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v6);
      v57 = *(uint64_t **)v56;
      v58 = *(unsigned int *)(v56 + 8);
      v59 = *(uint64_t **)v56;
      if ((_DWORD)v58)
      {
        v60 = 8 * v58;
        v59 = *(uint64_t **)v56;
        while (*(_WORD *)(*v59 + 32) != 175)
        {
          ++v59;
          v60 -= 8;
          if (!v60)
            goto LABEL_128;
        }
      }
      if (v59 != &v57[v58])
      {
        do
        {
          v61 = *v57++;
          v54 = v61;
        }
        while (*(_WORD *)(v61 + 32) != 175);
        goto LABEL_115;
      }
    }
LABEL_128:
    if ((*(_BYTE *)(v6 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v6);
      v63 = *(_QWORD *)v62;
      if (!sub_22E6543E4(*(_QWORD *)v62, *(_QWORD *)v62 + 8 * *(unsigned int *)(v62 + 8)))
      {
        while (1)
        {
          v54 = *(_QWORD *)v63;
          v64 = *(unsigned __int16 *)(*(_QWORD *)v63 + 32);
          if (v64 == 379)
            break;
          v65 = v64 - 411;
          v139 = v65 > 0x2A;
          v66 = (1 << v65) & 0x41000000001;
          if (!v139 && v66 != 0)
            break;
          v63 += 8;
        }
        goto LABEL_115;
      }
    }
    v54 = sub_22F26A504(v6);
    if (v54)
    {
LABEL_115:
      sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0x1405u, 0, (uint64_t)&v230);
      sub_22EF97918(v54);
      *(_QWORD *)v223 = v55;
      sub_22E8AECC4((uint64_t)&v230, (uint64_t *)v223);
      goto LABEL_12;
    }
    v217 = *(_QWORD *)(v6 + 48);
    v221 = v217;
    if ((*(_QWORD *)(*(_QWORD *)(v5 + 72) + 140) & 0x40000000000000) != 0)
    {
      v68 = v229;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v217 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 32)
      {
        v69 = *(_QWORD *)(v5 + 88);
        if (*((_QWORD *)v229 + 1) == *(_QWORD *)(v69 + 16856))
        {
          v148 = sub_22F36E1B8(*(_QWORD *)(v5 + 88));
          v149 = *(_QWORD *)(v148 + 48);
          if (v149)
            v150 = v149 & 0xFFFFFFFFFFFFFFF0;
          else
            v150 = sub_22EF6462C(v69, v148);
          v230 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))v5;
          *(_QWORD *)&v231 = v150;
          v156 = sub_22EB53364((uint64_t)&v230, v68);
          if ((v156 & 1) != 0)
            goto LABEL_14;
          v68 = (unsigned __int8 *)(v156 & 0xFFFFFFFFFFFFFFFELL);
          v229 = (unsigned __int8 *)(v156 & 0xFFFFFFFFFFFFFFFELL);
        }
      }
    }
    else
    {
      v68 = v229;
    }
    v216 = *v68;
    if (v216 == 215)
      v70 = v68;
    else
      v70 = 0;
    if ((*(_BYTE *)(v6 + 28) & 0x80) != 0)
    {
LABEL_159:
      if ((*(_BYTE *)(*(_QWORD *)(v5 + 72) + 1) & 1) != 0)
      {
        if (!sub_22E3CB5E0(v6)
          || (v79 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                              + 16),
              v79 == 45)
          || (v79 & 0xFE) == 0x28)
        {
          v80 = *(_DWORD *)(v6 + 28) & 0x7F;
          if (v80 != 64)
          {
            v81 = v229;
            if (v229)
            {
              while (1)
              {
                v82 = v81;
                v83 = *v81;
                if (v83 > 213)
                {
                  if (v83 == 233)
                  {
                    if ((*(_DWORD *)v82 & 0x7C0000) != 0x300000)
                      goto LABEL_186;
                    v85 = (unsigned __int8 **)(v82 + 16);
                  }
                  else
                  {
                    if (v83 != 214)
                      goto LABEL_186;
                    v85 = (unsigned __int8 **)(v82 + 24);
                  }
                }
                else if (v83 == 155)
                {
                  if ((**((_DWORD **)v82 + 2) & 0x18000) != 0)
                    goto LABEL_186;
                  if (v82[48])
                    v85 = (unsigned __int8 **)(v82 + 24);
                  else
                    v85 = (unsigned __int8 **)(v82 + 32);
                }
                else
                {
                  if (v83 != 176)
                    goto LABEL_186;
                  v84 = *((unsigned int *)v82 + 5);
                  if ((_DWORD)v84 == -1)
                    goto LABEL_186;
                  v85 = (unsigned __int8 **)&v82[8 * v84 + 40];
                }
                v81 = *v85;
                if (v81 == v82)
                  goto LABEL_186;
              }
            }
            v82 = 0;
LABEL_186:
            if ((v11 & 1) != 0
              || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16) == 45
              || *v82 != 153
              || (*(_DWORD *)v82 & 0x1FC0000) != 0x100000
              || (v88 = (unsigned __int8 *)*((_QWORD *)v82 + 2), *v88 != 161)
              || *((_QWORD *)v88 + 2) != v6)
            {
              v89 = *(void (***)(_QWORD, uint64_t, _QWORD, uint64_t))(v5 + 88);
              v230 = v89;
              *(_QWORD *)&v231 = v5;
              *((_QWORD *)&v231 + 1) = v6;
              *((_QWORD *)&v232 + 1) = (char *)v233 + 8;
              *(_QWORD *)&v233[0] = 0x400000000;
              LODWORD(v232) = 0;
              if ((v80 - 75) >= 0xFFFFFFE5)
              {
                *(_QWORD *)v223 = *(_QWORD *)(v6 + 48);
                BYTE1(v232) = sub_22F111438(v223, (uint64_t)v89);
                v90 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
                LOBYTE(v232) = *(_BYTE *)(v90 + 16) == 45;
                BYTE2(v232) = (*(_DWORD *)(v90 + 16) & 0xFE) == 40;
              }
              sub_22EA43D7C((unint64_t)&v230, v82);
              if (*((_OWORD **)&v232 + 1) != (_OWORD *)((char *)v233 + 8))
                free(*((void **)&v232 + 1));
            }
          }
        }
      }
      if ((*(_BYTE *)(v6 + 28) & 0x80) == 0)
      {
        v91 = v221;
        if (v221 == v217)
          v91 = *(_QWORD *)(v6 + 48);
        else
          *(_QWORD *)(v6 + 48) = v221;
        sub_22E98FF9C((_QWORD *)v5, *(_DWORD *)(v6 + 24), v91, v229);
        if (sub_22E49C868(v6))
          sub_22E98FF04((unsigned __int8 *)v5, v6, v229);
        v92 = *(unsigned int *)(v5 + 1904);
        if ((_DWORD)v92)
        {
          v93 = *(_QWORD *)(*(_QWORD *)(v5 + 1896) + 8 * v92 - 8);
          if (v93)
          {
            v94 = *(_QWORD *)((*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
            if ((v94 & 8) != 0)
            {
              v95 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0;
              if (v95 != 128
                && ((*(_WORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 88) + 2000) + 148) & 0xALL) != 8 || v95 == 192))
              {
                goto LABEL_211;
              }
            }
            else if ((*(_WORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 88) + 2000) + 148) & 0xALL) != 8)
            {
              goto LABEL_211;
            }
            v96 = *(_QWORD *)(v5 + 104);
            v97 = v229;
            sub_22F0D5A50((uint64_t)v229);
            if (sub_22F1CF68C(*(_QWORD *)(v96 + 32), 0x183Cu, v98, v96) != 1)
              sub_22E8FBEA0(v93, (unint64_t)v97);
          }
        }
      }
LABEL_211:
      if ((*(_DWORD *)(v6 + 28) & 0x7F) == 0x40)
        LOBYTE(v99) = 0;
      else
        v99 = *(unsigned __int8 *)(v6 + 97) >> 7;
      v100 = sub_22EBCF22C(v5, (unint64_t)v229, *(_DWORD *)(v6 + 24), 0, v99);
      if ((v100 & 1) != 0)
        goto LABEL_14;
      v229 = (unsigned __int8 *)(v100 & 0xFFFFFFFFFFFFFFFELL);
      sub_22EFBC9E4(v6, v100 & 0xFFFFFFFFFFFFFFFELL);
      if (sub_22E3CEC2C(v6))
      {
        if ((*(_DWORD *)(v6 + 28) & 0x80) != 0)
          goto LABEL_222;
        v107 = *(_QWORD *)((*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v107 & 8) != 0 && (*(_QWORD *)((v107 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x1800)
          goto LABEL_221;
        v108 = **(_QWORD **)(v5 + 72);
        if ((v108 & 0x100) != 0)
          goto LABEL_222;
        if ((*(_BYTE *)(v6 + 96) & 7) == 2)
        {
LABEL_221:
          sub_22EA27BBC((_QWORD *)v5, v229, v101, v102, v103, v104, v105, v106);
        }
        else if ((v108 & 1) == 0
               && sub_22F111060(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0))
               && *v229 == 180)
        {
          *(_QWORD *)v223 = 0;
          if (!sub_22EFFFBEC((uint64_t)v229, *(_QWORD *)(v5 + 88), 0, (unsigned __int8 **)v223, v142, v143, v144, v145))
          {
            sub_22EFF605C(*(uint64_t *)v223);
            sub_22E8FCA40((_QWORD *)v5, v146, 0x1433u, 0, (uint64_t)&v230);
            sub_22F0D4E74(*(uint64_t *)v223);
            *(_QWORD *)&v220 = v147;
            sub_22E8906A0((uint64_t)&v230, (uint64_t *)&v220);
            sub_22E903BEC((unsigned int *)&v230);
          }
        }
LABEL_222:
        if (*v229 != 173)
          goto LABEL_278;
        v109 = (unsigned __int8 *)*((_QWORD *)v229 + 2);
        if (v109)
        {
          do
          {
            v110 = v109;
            v111 = *v109;
            if (v111 > 0xD5)
            {
              if (v111 == 233)
              {
                if ((*(_DWORD *)v109 & 0x7C0000) != 0x300000)
                  goto LABEL_278;
                v111 = *(_DWORD *)v109;
                v113 = v109 + 16;
              }
              else
              {
                if (v111 != 214)
                  break;
                v113 = v109 + 24;
              }
            }
            else if (v111 == 155)
            {
              if ((**((_DWORD **)v109 + 2) & 0x18000) != 0)
                goto LABEL_278;
              v113 = v109 + 24;
              if (!v110[48])
                v113 = v110 + 32;
              v111 = 155;
            }
            else
            {
              if (v111 != 176)
                break;
              v112 = *((unsigned int *)v109 + 5);
              if ((_DWORD)v112 == -1)
                goto LABEL_278;
              v113 = &v109[8 * v112 + 40];
              v111 = 176;
            }
            v109 = *(unsigned __int8 **)v113;
          }
          while (v109 != v110);
          if (v111 != 114)
          {
LABEL_278:
            v136 = *((_QWORD *)v229 + 1);
            if (v136 < 0x10)
              goto LABEL_376;
            for (j = *((_QWORD *)v229 + 1); ; j = *(_QWORD *)(v140 + 32))
            {
              v138 = *(_QWORD *)(j & 0xFFFFFFFFFFFFFFF0);
              if (v138)
                v139 = (*(_DWORD *)(v138 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
              else
                v139 = 0;
              if (v139)
              {
                v140 = *(_QWORD *)(j & 0xFFFFFFFFFFFFFFF0);
              }
              else if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v138 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3
                     || (v140 = sub_22F10CF48(v138)) == 0)
              {
                v141 = sub_22F10C2A4(v138);
                if (v141 && (*(_DWORD *)(v141 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v141 + 75) & 0x80) != 0)
                {
LABEL_394:
                  v201 = v229;
                  sub_22EFF605C((uint64_t)v229);
                  sub_22EA286EC(v5, v201, v202);
                  goto LABEL_376;
                }
                while (1)
                {
                  v190 = *(_QWORD *)(v136 & 0xFFFFFFFFFFFFFFF0);
                  if (v190)
                    v191 = (*(_DWORD *)(v190 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
                  else
                    v191 = 0;
                  if (v191)
                  {
                    v189 = *(_QWORD *)(v136 & 0xFFFFFFFFFFFFFFF0);
                  }
                  else if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v190 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3
                         || (v189 = sub_22F10CF48(*(_QWORD *)(v136 & 0xFFFFFFFFFFFFFFF0))) == 0)
                  {
                    v192 = sub_22F10C2A4(v190);
                    if (v192 && (*(_DWORD *)(v192 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v192 + 76) & 2) != 0)
                      goto LABEL_394;
LABEL_376:
                    if (v216 == 215 || v11)
                    {
                      if (v216 == 215)
                        v193 = 32;
                      else
                        v193 = 64;
                      *(_BYTE *)(v6 + 96) = *(_BYTE *)(v6 + 96) & 0x9F | v193;
                    }
                    v194 = *(_QWORD **)(v5 + 72);
                    v195 = v194[9];
                    if ((_DWORD)v195 && ((v195 & 0x800000000) != 0 || v194[78] != v194[79]))
                    {
                      v196 = *(_DWORD *)(v6 + 28) & 0x7F;
                      if (v196 != 64 && v196 != 62)
                      {
                        v197 = *(_QWORD *)(v6 + 16);
                        v198 = (_QWORD *)(v197 & 0xFFFFFFFFFFFFFFF8);
                        v199 = v197 & 0xFFFFFFFFFFFFFFF8;
                        if ((v197 & 4) != 0)
                          v199 = v198[1];
                        v200 = *(_WORD *)(sub_22EFCBB30(v199) + 8) & 0x7F;
                        if (v200 == 16 || v200 == 83)
                          goto LABEL_390;
                        if ((v197 & 4) != 0)
                          v198 = (_QWORD *)*v198;
                        if (((_WORD)v198[1] & 0x7Eu) - 34 <= 3)
                        {
LABEL_390:
                          v230 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))v6;
                          sub_22F2B3BA8(v5 + 8896, (uint64_t *)&v230);
                        }
                      }
                    }
                    sub_22EA2A59C(v5, v6);
                    return;
                  }
                  v136 = *(_QWORD *)(v189 + 32);
                }
              }
            }
          }
        }
        else
        {
          v110 = 0;
        }
        if (sub_22E3CB5E0(v6))
          *(_DWORD *)(*((_QWORD *)v110 + 2) + 48) |= 0x40000u;
        goto LABEL_278;
      }
      v114 = *(_DWORD *)(v6 + 28) & 0x7F;
      if (v114 == 64)
        goto LABEL_278;
      v115 = *(_QWORD *)(v6 + 16);
      v116 = (unint64_t *)(v115 & 0xFFFFFFFFFFFFFFF8);
      v117 = v115 & 0xFFFFFFFFFFFFFFF8;
      if ((v115 & 4) != 0)
        v117 = *v116;
      if ((*(_WORD *)(v117 + 8) & 0x7Eu) - 34 <= 3 && (*(_DWORD *)(v6 + 96) & 0x2000) == 0)
      {
        v118 = v115 & 0xFFFFFFFFFFFFFFF8;
        if ((v115 & 4) != 0)
          v118 = v116[1];
        if ((*(_WORD *)(v118 + 8) & 0x7Eu) - 34 <= 3)
        {
          v119 = v221;
          v120 = *(_QWORD *)(v221 & 0xFFFFFFFFFFFFFFF0);
          if (*(_DWORD *)(v120 + 16) & 0x400 | *(_DWORD *)(v6 + 96) & 0x8000)
            goto LABEL_278;
          if ((v221 & 1) == 0 && (*(_BYTE *)((v221 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
          {
            v121 = *(_DWORD *)(v6 + 24);
            v122 = (_QWORD *)v5;
            v123 = 3575;
LABEL_253:
            sub_22E8FCA40(v122, v121, v123, 0, (uint64_t)&v230);
            sub_22F0D4E74((uint64_t)v229);
            *(_QWORD *)v223 = v124;
            v125 = &v230;
LABEL_344:
            sub_22E8906A0((uint64_t)v125, (uint64_t *)v223);
            sub_22E903BEC((unsigned int *)&v230);
            sub_22EFC77E8(v6, 1);
            goto LABEL_278;
          }
          v157 = *(_QWORD *)(*(_QWORD *)(v120 + 8) & 0xFFFFFFFFFFFFFFF0);
          v158 = *(_DWORD *)(v157 + 16);
          if (v157 && v158 == 11)
          {
            if (((*(_DWORD *)(v157 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
              goto LABEL_330;
LABEL_321:
            LODWORD(v220) = 0;
            if ((*(_BYTE *)(*(_QWORD *)(v5 + 72) + 1) & 2) != 0
              && ((v221 & 4) != 0 || (*(_BYTE *)((v221 & 0xFFFFFFFFFFFFFFF0) + 8) & 4) != 0))
            {
              sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0xDF9u, 0, (uint64_t)v219);
              v172 = (unsigned int *)v219;
LABEL_352:
              sub_22E903BEC(v172);
              goto LABEL_278;
            }
            if ((v229[2] & 1) != 0
              || (sub_22F0085E8((uint64_t)v229, *(_QWORD *)(v5 + 88), &v220) & 1) != 0
              || sub_22F10E1B8(*(_QWORD *)(*((_QWORD *)v229 + 1) & 0xFFFFFFFFFFFFFFF0))
              && sub_22F0092DC((uint64_t)v229, *(_QWORD *)(v5 + 88), 0, 0))
            {
              goto LABEL_278;
            }
            if (!sub_22F007CB0(v229, *(_QWORD *)(v5 + 88), 0))
            {
              v121 = v220;
LABEL_359:
              v122 = (_QWORD *)v5;
              v123 = 3576;
              goto LABEL_253;
            }
            sub_22E8FCA40((_QWORD *)v5, v220, 0x1493u, 0, (uint64_t)&v230);
            sub_22F0D4E74((uint64_t)v229);
            *(_QWORD *)v223 = v160;
            sub_22E8906A0((uint64_t)&v230, (uint64_t *)v223);
LABEL_351:
            v172 = (unsigned int *)&v230;
            goto LABEL_352;
          }
          if (v157 && v158 == 44)
          {
            v159 = sub_22F114198(*(_QWORD *)(v157 + 24));
            if ((*(_BYTE *)(v159 + 74) & 1) != 0 || *(_QWORD *)(v159 + 128) > 7uLL)
              goto LABEL_321;
            v119 = v221;
            v120 = *(_QWORD *)(v221 & 0xFFFFFFFFFFFFFFF0);
          }
          else if (v158 == 9)
          {
            goto LABEL_321;
          }
LABEL_330:
          v161 = sub_22F10E0EC(v120);
          v162 = **(_QWORD **)(v5 + 72);
          if (!v161)
          {
            if ((v162 & 0x200) != 0 && sub_22F111D3C(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0), *(_QWORD *)(v5 + 88)))
            {
              sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0xDF6u, 0, (uint64_t)&v230);
              v166 = sub_22E8901B8((uint64_t)&v230, &v221);
              sub_22F0D4E74((uint64_t)v229);
              *(_QWORD *)&v220 = v167;
              v168 = sub_22E8906A0(v166, (uint64_t *)&v220);
              v169 = *(_QWORD *)(v6 + 56);
              if ((v169 & 4) != 0 && (v188 = v169 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v188 + 16)))
                v170 = **(unsigned int ***)(v188 + 24);
              else
                v170 = (unsigned int *)(v6 + 64);
              v171 = *v170 | ((unint64_t)*v170 << 32);
              v223[20] = 0;
              *(_QWORD *)&v223[12] = 0;
              *(_QWORD *)v223 = v171;
              v223[8] = 0;
              *(_QWORD *)&v223[40] = 0xA00000000000000;
              v223[35] = 0;
              *(_WORD *)&v223[36] = 0;
              *(_DWORD *)&v223[38] = 0;
              strcpy(&v223[24], "constexpr ");
              v224 = 0;
              sub_22E890748(v168, v223);
              if ((v223[47] & 0x80000000) != 0)
                operator delete(*(void **)&v223[24]);
              sub_22E903BEC((unsigned int *)&v230);
              *(_DWORD *)(v6 + 96) |= 0x8000u;
              goto LABEL_278;
            }
            sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0xDF5u, 0, (uint64_t)&v230);
            v173 = sub_22E8901B8((uint64_t)&v230, &v221);
            sub_22F0D4E74((uint64_t)v229);
            *(_QWORD *)v223 = v174;
            v125 = (void (***)(_QWORD, uint64_t, _QWORD, uint64_t))v173;
            goto LABEL_344;
          }
          if ((v162 & 0x200) == 0)
          {
            sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0x1491u, 0, (uint64_t)&v230);
            v163 = sub_22E8901B8((uint64_t)&v230, &v221);
            sub_22F0D4E74((uint64_t)v229);
            *(_QWORD *)v223 = v164;
            sub_22E8906A0(v163, (uint64_t *)v223);
            sub_22E903BEC((unsigned int *)&v230);
            if ((v229[2] & 1) != 0 || sub_22F007CB0(v229, *(_QWORD *)(v5 + 88), 0))
              goto LABEL_278;
            sub_22EFF605C((uint64_t)v229);
            v121 = v165;
            goto LABEL_359;
          }
          sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0x1492u, 0, (uint64_t)&v230);
          v175 = sub_22E8901B8((uint64_t)&v230, &v221);
          sub_22F0D4E74((uint64_t)v229);
          *(_QWORD *)v223 = v176;
          sub_22E8906A0(v175, (uint64_t *)v223);
          sub_22E903BEC((unsigned int *)&v230);
          v177 = *(_QWORD *)(v6 + 56);
          if ((v177 & 4) != 0 && (v186 = v177 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v186 + 16)))
            v178 = **(int ***)(v186 + 24);
          else
            v178 = (int *)(v6 + 64);
          sub_22E8FCA40((_QWORD *)v5, *v178, 0x1626u, 0, (uint64_t)&v230);
          v179 = *(_QWORD *)(v6 + 56);
          if ((v179 & 4) != 0 && (v187 = v179 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v187 + 16)))
            v180 = **(unsigned int ***)(v187 + 24);
          else
            v180 = (unsigned int *)(v6 + 64);
          v181 = *v180 | ((unint64_t)*v180 << 32);
          v223[20] = 0;
          *(_QWORD *)&v223[12] = 0;
          *(_QWORD *)v223 = v181;
          v223[8] = 0;
          *(_QWORD *)&v223[40] = 0xA00000000000000;
          v223[35] = 0;
          *(_WORD *)&v223[36] = 0;
          *(_DWORD *)&v223[38] = 0;
          strcpy(&v223[24], "constexpr ");
          v224 = 0;
          sub_22E890748((uint64_t)&v230, v223);
          if ((v223[47] & 0x80000000) != 0)
            operator delete(*(void **)&v223[24]);
          goto LABEL_351;
        }
      }
      if (v114 == 62)
        goto LABEL_278;
      v126 = v115 & 0xFFFFFFFFFFFFFFF8;
      if ((v115 & 4) != 0)
        v126 = v116[1];
      v133 = *(_WORD *)(sub_22EFCBB30(v126) + 8) & 0x7F;
      if (v133 != 16 && v133 != 83)
      {
        if ((v115 & 4) != 0)
          v116 = (unint64_t *)*v116;
        if ((v116[1] & 0x7E) - 34 > 3)
          goto LABEL_278;
      }
      if ((*(_BYTE *)(v6 + 96) & 7) == 1)
      {
        if ((*(_BYTE *)(*(_QWORD *)(v5 + 72) + 1) & 1) == 0 && !sub_22E46B3EC(v6)
          || (v134 = sub_22EF5BA38(*(_QWORD *)(v5 + 88), *(_QWORD *)(v6 + 48)), (v134 & 1) == 0)
          && (*(_BYTE *)((v134 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
        {
          if (((*(_BYTE *)(*(_QWORD *)(v5 + 72) + 1) & 1) == 0 || !sub_22EFB93F4(v6))
            && (sub_22EFBC2B0(v6) & 0xFFFFFFFD) == 0)
          {
            sub_22E8FCA40((_QWORD *)v5, *(_DWORD *)(v6 + 24), 0x1995u, 0, (uint64_t)v218);
            sub_22E903BEC(v218);
          }
        }
      }
      if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 88) + 15088) + 148) == 11
        && (*(_BYTE *)(*(_QWORD *)(v5 + 72) + 1) & 1) != 0)
      {
        v135 = *(_QWORD *)(v6 + 48);
        if (((v135 & 1) != 0 || (*(_BYTE *)((v135 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) != 0)
          && (*(_BYTE *)(v6 + 29) & 1) != 0)
        {
          sub_22EFC8E88(v6);
          v183 = *((unsigned int *)v182 + 2);
          if ((_DWORD)v183)
          {
            v184 = 8 * v183;
            v185 = *v182;
            while (*(_WORD *)(*(_QWORD *)v185 + 32) != 155)
            {
              v185 += 8;
              v184 -= 8;
              if (!v184)
                goto LABEL_272;
            }
          }
          else
          {
            v185 = *v182;
          }
          if (v185 != *v182 + 8 * v183)
          {
            v203 = v6;
            if ((*(_DWORD *)(v6 + 28) & 0x7F) != 0x53)
            {
              v204 = *(_QWORD *)(v6 + 16);
              v205 = v204 & 0xFFFFFFFFFFFFFFF8;
              if ((v204 & 4) != 0)
                v205 = *(_QWORD *)v205;
              for (k = *(_WORD *)(v205 + 8) & 0x7F; k != 83; k = *(_WORD *)(v205 + 8) & 0x7F)
              {
                v207 = -40;
                if (k > 70)
                {
                  if (k == 71)
                  {
                    v207 = -56;
                  }
                  else if (k != 81)
                  {
LABEL_417:
                    v208 = k - 52;
                    if ((k - 33) >= 5)
                      v209 = -48;
                    else
                      v209 = -64;
                    if (v208 >= 6)
                      v207 = v209;
                    else
                      v207 = -72;
                  }
                }
                else
                {
                  if (k > 0x18)
                    goto LABEL_413;
                  if (k == 16)
                    goto LABEL_423;
                  if (((1 << k) & 0x1066) == 0)
                  {
                    if (k == 24)
                    {
LABEL_423:
                      v207 = -48;
                      goto LABEL_425;
                    }
LABEL_413:
                    if (k != 70)
                      goto LABEL_417;
                    v207 = -64;
                  }
                }
LABEL_425:
                v210 = *(_QWORD *)(v205 + v207 + 16);
                v205 = v210 & 0xFFFFFFFFFFFFFFF8;
                if ((v210 & 4) != 0)
                  v205 = *(_QWORD *)v205;
              }
              v203 = v205 - 40;
            }
            v211 = *(_QWORD *)(v6 + 80);
            if (v211)
            {
              v212 = 0;
              v213 = *(_QWORD *)(v203 + 88);
              v214 = *(_QWORD *)(v6 + 80);
              while (sub_22EFBBF74(v214, v213) != 2)
              {
                if ((*(_BYTE *)(v214 + 72) & 3) != 0)
                {
                  if (v212)
                    goto LABEL_272;
                  v212 = 1;
                }
                v215 = sub_22E3CD31C((uint64_t *)(v214 + 72), v214);
                if (v215 != v211)
                {
                  v214 = v215;
                  if (v215)
                    continue;
                }
                goto LABEL_272;
              }
              *(_BYTE *)(v6 + 96) = *(_BYTE *)(v6 + 96) & 0xF8 | 1;
            }
          }
        }
      }
LABEL_272:
      if ((*(_BYTE *)(*(_QWORD *)(v5 + 72) + 1) & 1) == 0 && (*(_BYTE *)(v6 + 28) & 0x80) == 0)
        sub_22EA27BBC((_QWORD *)v5, v229, v127, v128, v129, v130, v131, v132);
      goto LABEL_278;
    }
    *(_DWORD *)v223 = 0;
    v71 = *(_QWORD *)(v6 + 48);
    *(_QWORD *)&v223[8] = 0;
    *(_QWORD *)&v223[16] = v71;
    *(_DWORD *)&v223[24] = 0;
    *(_QWORD *)&v223[32] = v6;
    *(_WORD *)&v223[40] = 0;
    *(_QWORD *)&v220 = sub_22E9F92B0(*(unsigned int *)(v6 + 24), v11, v68);
    *((_QWORD *)&v220 + 1) = v72;
    if (v70)
    {
      v73 = (unsigned __int8 **)(v70 + 24);
      v74 = *((unsigned int *)v70 + 1);
      if (!(_DWORD)v74)
      {
        v74 = 0;
LABEL_156:
        if ((*(_BYTE *)(v6 + 28) & 0x80) != 0)
          return;
        sub_22EC395BC(&v230, v5, v223, &v220, v73, v74, 0, 0);
        v78 = sub_22EC3DF80((int)&v230, v5);
        if ((v78 & 1) != 0)
        {
          v151 = v229;
          sub_22F0D5A50((uint64_t)v229);
          v153 = v152;
          sub_22F0D60E4((uint64_t)v151);
          v155 = sub_22F32D6EC(v5, v153, v154, v73, v74, 0) & 0xFFFFFFFFFFFFFFFELL;
          if (v155)
            sub_22EFBC9E4(v6, v155);
          sub_22EC3CE2C((uint64_t)&v230);
          return;
        }
        v229 = (unsigned __int8 *)(v78 & 0xFFFFFFFFFFFFFFFELL);
        sub_22EC3CE2C((uint64_t)&v230);
        goto LABEL_159;
      }
    }
    else
    {
      v73 = &v229;
      v74 = 1;
    }
    for (m = 0; m != v74; ++m)
    {
      v76 = v73[m];
      v230 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))v5;
      v231 = *(_OWORD *)v223;
      v232 = *(_OWORD *)&v223[16];
      v233[0] = *(_OWORD *)&v223[32];
      v233[1] = v220;
      v77 = sub_22EBBCB14(v5, v76, v6, 1, sub_22EA4713C, &v230);
      if ((v77 & 1) != 0)
      {
        sub_22EFC77E8(v6, 1);
      }
      else if (v73[m] != (unsigned __int8 *)(v77 & 0xFFFFFFFFFFFFFFFELL))
      {
        v73[m] = (unsigned __int8 *)(v77 & 0xFFFFFFFFFFFFFFFELL);
      }
    }
    goto LABEL_156;
  }
}

_QWORD *sub_22EA2A59C(_QWORD *result, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int i;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int v22;
  int v24;
  int v25;
  int v26;
  int v27;
  _BOOL4 v28;
  unsigned int *v29;
  _BOOL4 v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  unsigned __int8 *v39;
  _BOOL4 v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  _BOOL4 v52;
  uint64_t *v53;
  uint64_t v54;
  _BOOL4 v55;
  char v56;
  unint64_t v57;
  unint64_t v58;
  int v59;
  uint64_t v60;
  _QWORD *v61;
  unint64_t v62;
  int v63;
  unint64_t v64;
  unsigned __int16 v65;
  _BOOL4 v67;
  _BOOL4 v68;
  unint64_t v69;
  uint64_t v70;
  BOOL v71;
  int v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  int v76;
  unint64_t v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  int k;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  _DWORD *v115;
  _DWORD *v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  void *v141;
  int v142;
  char *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  _DWORD *v152;
  size_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  const void *v158;
  unint64_t v159;
  unsigned __int8 *v160;
  unsigned __int8 *v161;
  uint64_t v162;
  _DWORD *v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  int v171;
  int *v172;
  char *v173;
  uint64_t v174;
  int v175;
  int v176;
  uint64_t v177;
  uint64_t *v178;
  void *v179;
  unint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t j;
  unint64_t v184;
  unsigned int v185;
  uint64_t v186;
  unsigned int v187;
  uint64_t v188;
  unsigned int v189;
  unint64_t v190;
  char *v191;
  __int128 v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  _BOOL4 v196;
  int v197;
  unsigned int v198[25];
  BOOL v199;
  unsigned int v200[24];
  uint64_t v201;
  unsigned int v202[24];
  char v203;
  char v204;
  unsigned int v205[24];
  unsigned __int8 *v206;
  unint64_t v207;
  void *v208;
  unint64_t v209;
  _DWORD v210[20];
  char *v211;
  __int128 v212;
  void *__p;
  uint64_t v214;
  uint64_t v215;
  char v216;
  uint64_t v217;

  v217 = *MEMORY[0x24BDAC8D0];
  v207 = a2;
  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return result;
  v2 = a2;
  v3 = (uint64_t)result;
  sub_22E9FF910((uint64_t)result, a2);
  v4 = *(_QWORD *)(v3 + 72);
  if ((*(_DWORD *)(v4 + 52) & 0x40000000) != 0)
  {
    v5 = *(_QWORD *)(v2 + 56);
    v6 = (_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
    if ((v5 & 4) != 0)
      v6 = (_QWORD *)v6[4];
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v6 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 10
      && ((*(_DWORD *)(v2 + 28) & 0x7F) == 0x40 && (*(_DWORD *)(v2 + 96) & 0x600u) - 1536 > 0xFFFFFBFF
       || *(_QWORD *)(v2 + 88) <= 7uLL))
    {
      sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v2 + 24), 0x1137u, 0, (uint64_t)&v211);
      LODWORD(v208) = 1;
      sub_22E8900C4((uint64_t)&v211, (int *)&v208);
      sub_22E903BEC((unsigned int *)&v211);
      return (_QWORD *)sub_22EFC77E8(v207, 1);
    }
  }
  if ((*(_BYTE *)(v4 + 1) & 0x40) != 0 && sub_22E3CB5E0(v2))
  {
    v7 = *(_QWORD *)((*(_QWORD *)(v2 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v7 & 8) != 0 && (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x180) == 0x80)
    {
      v8 = *(unsigned int *)(v3 + 1904);
      if ((_DWORD)v8)
      {
        v9 = *(_QWORD *)(*(_QWORD *)(v3 + 1896) + 8 * v8 - 8);
        *(_DWORD *)(v9 + 8) |= 8u;
      }
    }
  }
  if (sub_22E3CB5E0(v2) && sub_22F115260(*(_QWORD *)(v2 + 48)) == 4)
  {
    v10 = *(unsigned int *)(v3 + 1904);
    if ((_DWORD)v10)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v3 + 1896) + 8 * v10 - 8);
      *(_DWORD *)(v11 + 8) |= 8u;
    }
  }
  v12 = v2;
  if ((*(_DWORD *)(v2 + 28) & 0x7F) != 0x53)
  {
    v13 = *(_QWORD *)(v2 + 16);
    v14 = v13 & 0xFFFFFFFFFFFFFFF8;
    if ((v13 & 4) != 0)
      v14 = *(_QWORD *)v14;
    for (i = *(_WORD *)(v14 + 8) & 0x7F; i != 83; i = *(_WORD *)(v14 + 8) & 0x7F)
    {
      v16 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v16 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_33;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_32;
        if (i == 16)
          goto LABEL_26;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_39;
        if (i == 24)
        {
LABEL_26:
          v16 = -48;
        }
        else
        {
LABEL_32:
          if (i != 70)
          {
LABEL_33:
            v17 = i - 52;
            if ((i - 33) >= 5)
              v18 = -48;
            else
              v18 = -64;
            if (v17 >= 6)
              v16 = v18;
            else
              v16 = -72;
            goto LABEL_39;
          }
          v16 = -64;
        }
      }
LABEL_39:
      v19 = *(_QWORD *)(v14 + v16 + 16);
      v14 = v19 & 0xFFFFFFFFFFFFFFF8;
      if ((v19 & 4) != 0)
        v14 = *(_QWORD *)v14;
    }
    v12 = v14 - 40;
  }
  if (!sub_22EFBBF74(v2, *(_QWORD *)(v12 + 88)))
    goto LABEL_65;
  v20 = *(_QWORD *)(v2 + 16);
  v21 = (_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF8);
  if ((v20 & 4) != 0)
    v21 = (_QWORD *)*v21;
  v22 = *(_WORD *)(sub_22EFCBB30((unint64_t)v21) + 8) & 0x7F;
  if (v22 != 83 && v22 != 16)
    goto LABEL_65;
  if (sub_22EFB948C(v2) < 3)
    goto LABEL_65;
  v24 = sub_22EFB948C(v2);
  if (!v24 || v24 == 3 || (*(_DWORD *)(v2 + 28) & 0x7F) != 0x40 && (*(_BYTE *)(v2 + 97) & 0x20) != 0)
    goto LABEL_65;
  if (sub_22EFB6870(v2)
    || (*(_DWORD *)(v2 + 28) & 0x7F) == 0x42
    || (sub_22EFBC2B0(v2) & 0xFFFFFFFD) != 0
    || sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(v3 + 104) + 32), 0x1A60u, *(_DWORD *)(v2 + 24), *(_QWORD *)(v3 + 104)) == 1)
  {
    goto LABEL_65;
  }
  if ((*(_BYTE *)(v2 + 72) & 3) != 0 || (v180 = sub_22E3CD31C((uint64_t *)(v2 + 72), v2)) == 0)
  {
LABEL_64:
    sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v2 + 24), 0x1A60u, 0, (uint64_t)&v211);
    sub_22E890024((uint64_t)&v211, (uint64_t *)&v207);
    sub_22E903BEC((unsigned int *)&v211);
    v25 = sub_22EFBAFDC(v207);
    sub_22E8FCA40((_QWORD *)v3, v25, 0x17C2u, 0, (uint64_t)&v211);
    LODWORD(v208) = 0;
    sub_22E8900C4((uint64_t)&v211, (int *)&v208);
    sub_22E903BEC((unsigned int *)&v211);
    v2 = v207;
    goto LABEL_65;
  }
  v181 = v180;
  while (2)
  {
    v182 = v181;
    if ((*(_DWORD *)(v181 + 28) & 0x7F) == 0x53)
      goto LABEL_313;
    for (j = *(_QWORD *)(v181 + 16); ; j = *(_QWORD *)(v184 + v186 + 16))
    {
      v184 = j & 0xFFFFFFFFFFFFFFF8;
      if ((j & 4) != 0)
        v184 = *(_QWORD *)v184;
      v185 = *(_WORD *)(v184 + 8) & 0x7F;
      if (v185 == 83)
        break;
      v186 = -40;
      if ((*(_WORD *)(v184 + 8) & 0x7Fu) > 0x46)
      {
        if (v185 == 71)
        {
          v186 = -56;
          continue;
        }
        if (v185 != 81)
          goto LABEL_303;
      }
      else
      {
        if (v185 > 0x18)
          goto LABEL_302;
        if (v185 == 16)
          goto LABEL_296;
        if (((1 << v185) & 0x1066) == 0)
        {
          if (v185 == 24)
          {
LABEL_296:
            v186 = -48;
            continue;
          }
LABEL_302:
          if (v185 == 70)
          {
            v186 = -64;
            continue;
          }
LABEL_303:
          v187 = v185 - 52;
          if (v185 - 33 >= 5)
            v188 = -48;
          else
            v188 = -64;
          if (v187 >= 6)
            v186 = v188;
          else
            v186 = -72;
          continue;
        }
      }
    }
    v182 = v184 - 40;
LABEL_313:
    if (sub_22EFBBF74(v181, *(_QWORD *)(v182 + 88)))
    {
      if ((*(_BYTE *)(v181 + 72) & 3) != 0)
        goto LABEL_64;
      v181 = sub_22E3CD31C((uint64_t *)(v181 + 72), v181);
      if (!v181)
        goto LABEL_64;
      continue;
    }
    break;
  }
LABEL_65:
  v206 = 0;
  sub_22EFBB794(v2);
  if (v26 != 1)
    goto LABEL_78;
  v27 = sub_22F115260(*(_QWORD *)(v207 + 48));
  v28 = v27 != 0;
  if (v27)
  {
    sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v207 + 24), 0x1308u, 0, (uint64_t)v205);
    sub_22E903BEC(v205);
    if ((*(_BYTE *)(*(_QWORD *)(v3 + 72) + 1) & 2) != 0)
    {
      v197 = 0;
      v29 = (unsigned int *)&v204;
      goto LABEL_69;
    }
LABEL_78:
    v197 = 0;
    v30 = 0;
    v28 = 1;
  }
  else
  {
    if ((*(_BYTE *)(*(_QWORD *)(v3 + 72) + 1) & 1) == 0)
      goto LABEL_78;
    v31 = v207;
    if (v207)
    {
      if ((*(_DWORD *)(v207 + 28) & 0x7F) == 0x40 && (*(_DWORD *)(v207 + 96) & 0x600u) - 1536 > 0xFFFFFBFF)
        goto LABEL_78;
    }
    if (*(_QWORD *)(v207 + 88) < 8uLL)
      goto LABEL_78;
    v32 = sub_22EFBC5B4(v207);
    if (sub_22EFFFBEC(v32, *(_QWORD *)(v3 + 88), (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v31 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)+ 16) & 0xFE) == 40, &v206, v33, v34, v35, v36))
    {
      v28 = 0;
      v197 = 1;
      v30 = 1;
    }
    else
    {
      sub_22EFF605C((uint64_t)v206);
      sub_22E8FCA40((_QWORD *)v3, v140, 0x1305u, 0, (uint64_t)&v211);
      sub_22F0D4E74((uint64_t)v206);
      v208 = v141;
      sub_22E8906A0((uint64_t)&v211, (uint64_t *)&v208);
      sub_22E903BEC((unsigned int *)&v211);
      if ((*(_BYTE *)(*(_QWORD *)(v3 + 72) + 1) & 2) != 0)
      {
        v197 = 1;
        v29 = (unsigned int *)&v203;
LABEL_69:
        sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v207 + 24), 0x180Au, 0, (uint64_t)v29);
        sub_22E903BEC(v29);
      }
      else
      {
        v197 = 1;
        v28 = 0;
      }
      v30 = 0;
    }
  }
  v37 = sub_22F10DE3C(*(_QWORD *)(*(_QWORD *)(v207 + 48) & 0xFFFFFFFFFFFFFFF0));
  v38 = v207;
  if (!v37
    && (!v207 || (*(_DWORD *)(v207 + 28) & 0x7F) != 0x40 || (*(_DWORD *)(v207 + 96) & 0x600u) - 1536 <= 0xFFFFFBFF)
    && *(_QWORD *)(v207 + 88) >= 8uLL)
  {
    v39 = (unsigned __int8 *)sub_22EFBC5B4(v207);
    if (*v39 == 180)
    {
      v40 = v28;
      v41 = *((_QWORD *)v39 + 2);
      v42 = *((_QWORD *)v39 + 3) - v41;
      if ((v42 >> 3) >= 3)
      {
        v43 = 0;
        v44 = (v42 >> 3);
        do
        {
          v45 = *(unsigned __int8 **)(v41 + 8 * v43);
          if (!v45)
            break;
          v46 = sub_22EFFEB40(v45);
          if (*v46 != 225)
            break;
          v47 = v46;
          if (*((_DWORD *)v46 + 1) == 2)
          {
            v48 = *((unsigned int *)v46 + 5);
            if ((v48 & 0x80000000) == 0)
            {
              v159 = v43 + 1;
              while (v159 < v44)
              {
                v160 = *(unsigned __int8 **)(v41 + 8 * v159);
                if (!v160)
                  break;
                v161 = sub_22EFFEB40(v160);
                if (*v161 == 225)
                {
                  ++v159;
                  if (*((_DWORD *)v161 + 1) < 2u)
                    continue;
                }
                goto LABEL_92;
              }
              v208 = v210;
              v209 = 0x100000000;
              v189 = sub_22F141A3C(v48, 0, *(_QWORD **)(*(_QWORD *)(v3 + 80) + 88), *(_DWORD **)(*(_QWORD *)(v3 + 80) + 56));
              *(_QWORD *)((char *)&v212 + 4) = 0;
              BYTE12(v212) = 0;
              v215 = 0x100000000000000;
              v214 = 0;
              v211 = (char *)(v189 | ((unint64_t)v189 << 32));
              LOBYTE(v212) = 0;
              __p = (void *)44;
              v216 = 0;
              v190 = sub_22E6C9D38((uint64_t)&v208, (unint64_t)&v211, 1);
              v191 = (char *)v208 + 56 * v209;
              v192 = *(_OWORD *)v190;
              *(_QWORD *)(v191 + 13) = *(_QWORD *)(v190 + 13);
              *(_OWORD *)v191 = v192;
              v193 = *(_QWORD *)(v190 + 40);
              *(_OWORD *)(v191 + 24) = *(_OWORD *)(v190 + 24);
              *((_QWORD *)v191 + 5) = v193;
              *(_QWORD *)(v190 + 32) = 0;
              *(_QWORD *)(v190 + 40) = 0;
              *(_QWORD *)(v190 + 24) = 0;
              v191[48] = *(_BYTE *)(v190 + 48);
              LODWORD(v209) = v209 + 1;
              if (SHIBYTE(v215) < 0)
                operator delete(__p);
              sub_22E8FCA40((_QWORD *)v3, *((_DWORD *)v47 + 6), 0x18D9u, 0, (uint64_t)&v211);
              sub_22F30C378((uint64_t)&v211, (uint64_t)&v208);
              sub_22E903BEC((unsigned int *)&v211);
              sub_22E8FCA40((_QWORD *)v3, *((_DWORD *)v47 + 5), 0x156Eu, 0, (uint64_t)v202);
              sub_22E903BEC(v202);
              v194 = (char *)v208;
              if ((_DWORD)v209)
              {
                v195 = 56 * v209;
                do
                {
                  if (v194[v195 - 9] < 0)
                    operator delete(*(void **)&v194[v195 - 32]);
                  v195 -= 56;
                }
                while (v195);
                v194 = (char *)v208;
              }
              v28 = v40;
              if (v194 != (char *)v210)
                free(v194);
              v38 = v207;
              goto LABEL_93;
            }
          }
          ++v43;
        }
        while (v44 != v43);
      }
LABEL_92:
      v28 = v40;
    }
  }
LABEL_93:
  v49 = *(_QWORD *)(v38 + 48);
  if (sub_22E49C868(v38))
  {
    v110 = *(unsigned int *)(v3 + 1904);
    if ((_DWORD)v110)
      v111 = *(_QWORD *)(*(_QWORD *)(v3 + 1896) + 8 * v110 - 8);
    else
      v111 = 0;
    sub_22F2998B8(v111 + 424, v207);
  }
  v50 = v207;
  v51 = sub_22EFBC5B4(v207);
  v52 = sub_22E3CB5E0(v50);
  if (v52)
  {
    v53 = (uint64_t *)(v3 + 88);
    v54 = sub_22EF5BA38(*(_QWORD *)(v3 + 88), v49);
    v55 = 0;
  }
  else
  {
    v56 = *(_BYTE *)(v207 + 96);
    if ((v56 & 7) == 2 || (*(_BYTE *)(v207 + 96) & 7) == 0 && (v56 & 0x18) == 0x10)
    {
      v57 = v49;
      v58 = v51;
      v55 = 0;
      v59 = *(_DWORD *)(v207 + 28) & 0x7F;
      if (v59 != 64 && v59 != 62)
      {
        v60 = *(_QWORD *)(v207 + 16);
        v61 = (_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF8);
        v62 = v60 & 0xFFFFFFFFFFFFFFF8;
        if ((v60 & 4) != 0)
          v62 = v61[1];
        v63 = *(_WORD *)(sub_22EFCBB30(v62) + 8) & 0x7F;
        v55 = 1;
        if (v63 != 16 && v63 != 83)
        {
          if ((v60 & 4) != 0)
            v61 = (_QWORD *)*v61;
          v55 = ((_WORD)v61[1] & 0x7Eu) - 34 < 4;
        }
      }
    }
    else
    {
      v57 = v49;
      v58 = v51;
      v55 = 1;
    }
    v53 = (uint64_t *)(v3 + 88);
    v64 = v57;
    v54 = sub_22EF5BA38(*(_QWORD *)(v3 + 88), v57);
    v65 = sub_22EF5EB64(*(_QWORD *)(v3 + 88), *(_QWORD *)(v207 + 48));
    if (v65 < 0x100u || v65 == 0)
    {
      v51 = v58;
      v49 = v64;
    }
    else
    {
      v196 = v52;
      v67 = v30;
      v68 = v28;
      v69 = v64;
      v70 = v54;
      sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v207 + 24), 0x11EFu, 0, (uint64_t)&v211);
      v71 = 0;
      v72 = *(_DWORD *)(v207 + 28) & 0x7F;
      if (v72 != 64 && v72 != 62)
      {
        v73 = *(_QWORD *)(v207 + 16);
        v74 = (_QWORD *)(v73 & 0xFFFFFFFFFFFFFFF8);
        v75 = v73 & 0xFFFFFFFFFFFFFFF8;
        if ((v73 & 4) != 0)
          v75 = v74[1];
        v76 = *(_WORD *)(sub_22EFCBB30(v75) + 8) & 0x7F;
        v71 = 1;
        if (v76 != 16 && v76 != 83)
        {
          if ((v73 & 4) != 0)
            v74 = (_QWORD *)*v74;
          v71 = ((_WORD)v74[1] & 0x7Eu) - 34 < 4;
        }
      }
      LOBYTE(v208) = v71;
      sub_22E894E38((uint64_t)&v211, (unsigned __int8 *)&v208);
      sub_22E903BEC((unsigned int *)&v211);
      sub_22EFC77E8(v207, 1);
      v54 = v70;
      v77 = v69;
      v28 = v68;
      v30 = v67;
      v52 = v196;
      v53 = (uint64_t *)(v3 + 88);
      v51 = v58;
      v49 = v77;
    }
  }
  v78 = *(_QWORD *)(v3 + 72);
  if ((*(_BYTE *)(v78 + 1) & 1) == 0)
  {
    v79 = 1;
    goto LABEL_123;
  }
  v79 = 1;
  if ((*(_BYTE *)(*(_QWORD *)(v49 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0 || !v51 || (*(_BYTE *)(v51 + 2) & 1) != 0)
  {
LABEL_123:
    if (v52)
      goto LABEL_204;
    if (!v207 || (v80 = v207, (*(_DWORD *)(v207 + 28) & 0x7F) != 0x53))
    {
      v81 = *(_QWORD *)(v207 + 16);
      v82 = v81 & 0xFFFFFFFFFFFFFFF8;
      if ((v81 & 4) != 0)
        v82 = *(_QWORD *)v82;
      for (k = *(_WORD *)(v82 + 8) & 0x7F; k != 83; k = *(_WORD *)(v82 + 8) & 0x7F)
      {
        v84 = -40;
        if (k > 70)
        {
          if (k == 71)
          {
            v84 = -56;
          }
          else if (k != 81)
          {
            goto LABEL_139;
          }
        }
        else
        {
          if (k > 0x18)
            goto LABEL_138;
          if (k == 16)
            goto LABEL_132;
          if (((1 << k) & 0x1066) != 0)
            goto LABEL_145;
          if (k == 24)
          {
LABEL_132:
            v84 = -48;
          }
          else
          {
LABEL_138:
            if (k != 70)
            {
LABEL_139:
              v85 = k - 52;
              if ((k - 33) >= 5)
                v86 = -48;
              else
                v86 = -64;
              if (v85 >= 6)
                v84 = v86;
              else
                v84 = -72;
              goto LABEL_145;
            }
            v84 = -64;
          }
        }
LABEL_145:
        v87 = *(_QWORD *)(v82 + v84 + 16);
        v82 = v87 & 0xFFFFFFFFFFFFFFF8;
        if ((v87 & 4) != 0)
          v82 = *(_QWORD *)v82;
      }
      v80 = v82 - 40;
    }
    if (!sub_22EFBBF74(v207, *(_QWORD *)(v80 + 88)) || *(_DWORD *)(v3 + 10680) > *(_DWORD *)(v3 + 11956))
      goto LABEL_204;
    v101 = *(_QWORD *)(v207 + 48);
    if ((v101 & 1) != 0 || (*(_BYTE *)((v101 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) != 0)
    {
      if (v79)
      {
        v103 = v3 + 1000;
        v104 = 1;
        goto LABEL_186;
      }
    }
    else if ((*(_DWORD *)(v207 + 28) & 0x7F) != 0x40 || (*(_DWORD *)(v207 + 96) & 0x600u) - 1536 <= 0xFFFFFBFF)
    {
      v102 = v79 ^ 1;
      if (*(_QWORD *)(v207 + 88) < 8uLL)
        v102 = 1;
      if ((v102 & 1) == 0)
      {
        v103 = v3 + 792;
LABEL_185:
        v104 = 3;
LABEL_186:
        if ((*(_BYTE *)(v207 + 29) & 1) == 0)
          goto LABEL_200;
        sub_22EFC8E88(v207);
        v106 = *(uint64_t **)v105;
        v107 = *(unsigned int *)(v105 + 8);
        v108 = *(uint64_t **)v105;
        if ((_DWORD)v107)
        {
          v109 = 8 * v107;
          v108 = *(uint64_t **)v105;
          while (*(_WORD *)(*v108 + 32) != 305)
          {
            ++v108;
            v109 -= 8;
            if (!v109)
              goto LABEL_200;
          }
        }
        if (v108 == &v106[v107])
        {
LABEL_200:
          v115 = *(_DWORD **)(v103 + 88);
          if (v115)
          {
            v150 = v104 | 8;
            v151 = v54;
            v152 = &v115[v115[1] + 5];
            v153 = ((*v115 >> 21) & 7u) * v115[4];
            v154 = v207;
            v155 = *(_QWORD *)(v3 + 88);
            v156 = *(unsigned int *)(v103 + 96) | ((unint64_t)*(unsigned int *)(v103 + 96) << 32);
            *(_QWORD *)&v212 = 0;
            v211 = 0;
            *((_QWORD *)&v212 + 1) = v156;
            LODWORD(__p) = 0;
            BYTE6(__p) = 30;
            WORD2(__p) = 478;
            v157 = sub_22F39F9D8(v155, v152, v153, &v211);
            sub_22EFCA95C(v154, v157);
            v158 = v152;
            v54 = v151;
            if (sub_22E90EAA0((_QWORD *)v3, v158, v153, v150, v207))
              sub_22EA22308(v207);
          }
        }
        else
        {
          do
          {
            v113 = *v106++;
            v112 = v113;
          }
          while (*(_WORD *)(v113 + 32) != 305);
          if ((*(_BYTE *)(v112 + 30) & 7) << 16 == 196608)
            v114 = v104 | 8;
          else
            v114 = v104;
          sub_22E90EAA0((_QWORD *)v3, *(const void **)(v112 + 40), *(unsigned int *)(v112 + 36), v114, v207);
        }
        v116 = *(_DWORD **)(v3 + 1352);
        if (v116)
        {
          v117 = v207;
          if (sub_22EFBC5B4(v207))
          {
            v162 = *(_QWORD *)(v3 + 88);
            v163 = &v116[v116[1] + 5];
            v164 = ((*v116 >> 21) & 7u) * v116[4];
            v165 = *(unsigned int *)(v3 + 1360) | ((unint64_t)*(unsigned int *)(v3 + 1360) << 32);
            *(_QWORD *)&v212 = 0;
            v211 = 0;
            *((_QWORD *)&v212 + 1) = v165;
            LODWORD(__p) = 0;
            BYTE6(__p) = 126;
            WORD2(__p) = 478;
            v166 = sub_22F3882D4(v162, v163, v164, &v211);
            sub_22EFCA95C(v117, v166);
          }
        }
        goto LABEL_204;
      }
    }
    v103 = v3 + 896;
    goto LABEL_185;
  }
  if (!v52 || (*(_DWORD *)(v207 + 28) & 0x7F) != 0x40 && (*(_BYTE *)(v207 + 97) & 0x80) != 0)
  {
LABEL_159:
    v211 = (char *)&v212 + 8;
    *(_QWORD *)&v212 = 0x800000000;
    if ((*(_BYTE *)(v78 + 1) & 2) != 0)
    {
      if ((sub_22EFBD218(v207, (uint64_t)&v211) & 1) != 0)
        goto LABEL_281;
    }
    else
    {
      v88 = v51;
      v89 = v54;
      if (v28)
      {
        v90 = v207;
        v91 = sub_22EFBC5B4(v207);
        v30 = sub_22EFFFBEC(v91, *v53, (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v90 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)+ 16) & 0xFE) == 40, &v206, v92, v93, v94, v95);
        v197 = 1;
      }
      if (v30)
      {
        sub_22EFBD218(v207, (uint64_t)&v211);
        if ((_DWORD)v212)
        {
          v96 = v211;
          v97 = 32 * v212;
          do
          {
            v98 = &v96[v97];
            v99 = *(_QWORD *)&v96[v97 - 24];
            if (v99)
            {
              v100 = *((_QWORD *)v98 - 2);
              if (v100)
              {
                sub_22E3BB10C(v100, v99);
                *((_QWORD *)v98 - 3) = 0;
              }
            }
            v97 -= 32;
          }
          while (v97);
        }
        LODWORD(v212) = 0;
        v79 = 1;
        v54 = v89;
        goto LABEL_281;
      }
      if (v206)
      {
        sub_22EFF605C((uint64_t)v206);
        LODWORD(v201) = v176;
        v177 = *v53 + 2128;
        v208 = 0;
        v209 = v177;
        v210[0] = 103;
        sub_22F31E1DC((unint64_t)&v211, &v201, (uint64_t)&v208);
        if (v208 && v209)
          sub_22E3BB10C(v209, (unint64_t)v208);
        v178 = (uint64_t *)&v211[32 * v212 - 24];
        sub_22F0D4E74((uint64_t)v206);
        v208 = v179;
        LODWORD(v209) = 1;
        sub_22E8907D4(v178, (uint64_t)&v208);
      }
      v30 = 0;
      v54 = v89;
      v51 = v88;
    }
    if ((*(_DWORD *)(v207 + 28) & 0x7F) != 0x40 && (*(_BYTE *)(v207 + 97) & 0x80) != 0)
    {
      v142 = *(_DWORD *)(v207 + 24);
      v127 = v54;
      if ((_DWORD)v212 == 1 && *((_DWORD *)v211 + 6) == 103)
      {
        v142 = *(_DWORD *)v211;
        v143 = &v211[32 * v212];
        v144 = *((_QWORD *)v143 - 3);
        if (v144)
        {
          v145 = *((_QWORD *)v143 - 2);
          if (v145)
          {
            sub_22E3BB10C(v145, v144);
            *((_QWORD *)v143 - 3) = 0;
          }
        }
        LODWORD(v212) = 0;
      }
      sub_22E8FCA40((_QWORD *)v3, v142, 0xC11u, 0, (uint64_t)&v208);
      v146 = sub_22E890024((uint64_t)&v208, (uint64_t *)&v207);
      sub_22F0D4E74(v51);
      v201 = v147;
      sub_22E8906A0(v146, &v201);
      sub_22E903BEC((unsigned int *)&v208);
      if ((_DWORD)v212)
      {
        v148 = 0;
        v149 = 32 * v212;
        do
        {
          sub_22E90379C((_QWORD *)v3, *(_DWORD *)&v211[v148], (uint64_t)&v211[v148 + 8], 0, (uint64_t)v200);
          sub_22E903BEC(v200);
          v148 += 32;
        }
        while (v149 != v148);
      }
      goto LABEL_280;
    }
    if (v52 || !sub_22E46B38C(v207))
    {
      if (v55
        && sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(v3 + 104) + 32), 0x19D6u, *(_DWORD *)(v207 + 24), *(_QWORD *)(v3 + 104)) != 1)
      {
        v129 = sub_22F10C2A4(*(_QWORD *)(v54 & 0xFFFFFFFFFFFFFFF0));
        if (!v129
          || (v130 = v129, (*(_DWORD *)(v129 + 28) & 0x7Fu) - 35 > 2)
          || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v129 + 104) + 96), *(_QWORD *)(v129 + 104)),
              (**(_QWORD **)(v130 + 128) & 0x100000000000) != 0))
        {
          if (!v197)
          {
            v131 = v54;
            v132 = v207;
            v133 = sub_22EFBC5B4(v207);
            v134 = *(_QWORD *)(v132 + 48);
            v54 = v131;
            v30 = sub_22EFFFBEC(v133, *v53, (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v134 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)+ 16) & 0xFE) == 40, &v206, v135, v136, v137, v138);
          }
          if (!v30)
          {
            sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v207 + 24), 0x19D6u, 0, (uint64_t)&v208);
            sub_22F0D4E74(v51);
            v201 = v139;
            sub_22E8906A0((uint64_t)&v208, &v201);
            sub_22E903BEC((unsigned int *)&v208);
          }
        }
      }
      v79 = 0;
      goto LABEL_281;
    }
    if ((*(_BYTE *)(v207 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v207);
      v123 = *(uint64_t **)v122;
      v124 = *(unsigned int *)(v122 + 8);
      v125 = *(uint64_t **)v122;
      if ((_DWORD)v124)
      {
        v126 = 8 * v124;
        v125 = *(uint64_t **)v122;
        while (*(_WORD *)(*v125 + 32) != 149)
        {
          ++v125;
          v126 -= 8;
          if (!v126)
            goto LABEL_239;
        }
      }
      v127 = v54;
      if (v125 != &v123[v124])
      {
        do
        {
          v167 = *v123++;
          v128 = v167;
        }
        while (*(_WORD *)(v167 + 32) != 149);
        goto LABEL_274;
      }
    }
    else
    {
LABEL_239:
      v127 = v54;
    }
    v128 = 0;
LABEL_274:
    sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v207 + 24), 0x1239u, 0, (uint64_t)&v208);
    sub_22F0D4E74(v51);
    v201 = v168;
    sub_22E8906A0((uint64_t)&v208, &v201);
    sub_22E903BEC((unsigned int *)&v208);
    sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v128 + 16), 0x1591u, 0, (uint64_t)&v208);
    v201 = *(_QWORD *)(v128 + 16);
    v169 = sub_22E8906A0((uint64_t)&v208, &v201);
    v170 = *(unsigned __int8 *)(v128 + 30);
    if ((~(v170 << 16) & 0x780000) != 0)
      v171 = ((*(unsigned __int16 *)(v128 + 28) | (v170 << 16)) >> 19) & 0xF;
    else
      v171 = sub_22F1BFAD0(v128);
    v199 = v171 == 0;
    sub_22E894E38(v169, (unsigned __int8 *)&v199);
    sub_22E903BEC((unsigned int *)&v208);
    if ((_DWORD)v212)
    {
      v172 = (int *)v211;
      v173 = &v211[32 * v212];
      do
      {
        v174 = (uint64_t)(v172 + 2);
        v175 = *v172;
        v172 += 8;
        sub_22E90379C((_QWORD *)v3, v175, v174, 0, (uint64_t)v198);
        sub_22E903BEC(v198);
      }
      while (v172 != (int *)v173);
    }
LABEL_280:
    v79 = 0;
    v54 = v127;
LABEL_281:
    sub_22E89277C(&v211);
    goto LABEL_123;
  }
  if (sub_22EFBCA2C(v207, *v53))
  {
    v78 = *(_QWORD *)(v3 + 72);
    goto LABEL_159;
  }
LABEL_204:
  if ((*(_BYTE *)(*(_QWORD *)(v3 + 72) + 1) & 1) != 0)
  {
    if ((*(_BYTE *)(*(_QWORD *)(v49 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
    {
      v119 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v54 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v119)
      {
        if (*(_BYTE *)(v119 + 16) == 45)
          sub_22EACC8BC(v3, v207, v119);
      }
    }
    if (sub_22EF736B8((_QWORD *)*v53, v207))
    {
      v120 = *(_DWORD *)(v3 + 8992);
      if (v120)
        sub_22EF5934C(*(_QWORD *)(v3 + 88), *(_QWORD *)(*(_QWORD *)(v3 + 8984) + 56 * v120 - 48), v207);
    }
    v121 = v207;
    if (v207 && (*(_DWORD *)(v207 + 28) & 0x7F) == 0x3D)
    {
      sub_22EAA6234();
      v121 = v207;
    }
    return (_QWORD *)sub_22E98EF80(v3, v121);
  }
  else
  {
    result = (_QWORD *)sub_22EF736B8((_QWORD *)*v53, v207);
    if ((_DWORD)result)
    {
      v118 = *(_DWORD *)(v3 + 8992);
      if (v118)
        return sub_22EF5934C(*(_QWORD *)(v3 + 88), *(_QWORD *)(*(_QWORD *)(v3 + 8984) + 56 * v118 - 48), v207);
    }
  }
  return result;
}

uint64_t sub_22EA2BABC(uint64_t result, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  void (**v15)(_QWORD, uint64_t, _QWORD, uint64_t);
  int v16;
  int *v17;

  if (a2)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x80) == 0)
    {
      v3 = *(_DWORD *)(a2 + 28) & 0x7F;
      if ((v3 - 67) >= 0xFFFFFFF9)
      {
        v4 = result;
        if (v3 == 61)
        {
          v5 = *(unsigned int *)(a2 + 100);
          if ((_DWORD)v5)
          {
            v6 = (uint64_t *)(a2 + 104);
            v7 = 8 * v5;
            do
            {
              v8 = *v6++;
              sub_22EFC77E8(v8, 1);
              v7 -= 8;
            }
            while (v7);
          }
        }
        v9 = *(_QWORD *)(a2 + 48);
        v10 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
        LOBYTE(v15) = 0;
        result = sub_22F110500((uint64_t)&v15, v10);
        if (result && *(_QWORD *)(result + 24) <= 0xFuLL && (*(_BYTE *)(result + 17) & 4) == 0)
          return sub_22EFC77E8(a2, 1);
        if ((*(_BYTE *)(v10 + 17) & 4) != 0)
          return result;
        v11 = *(_DWORD *)(a2 + 24);
        v12 = sub_22EF5BA38(*(_QWORD *)(v4 + 88), v9);
        v15 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB6EF8;
        v16 = 4962;
        if (sub_22EE8B0B0(v4, v11, v12))
        {
          return sub_22EFC77E8(a2, 1);
        }
        else
        {
          v13 = *(unsigned int *)(a2 + 24);
          v14 = 2;
          v15 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB7980;
          v16 = 2577;
          v17 = &v14;
          result = sub_22EAB2EB4(v4, v13, v9, &v15);
          if ((_DWORD)result)
            return sub_22EFC77E8(a2, 1);
        }
      }
    }
  }
  return result;
}

void sub_22EA2BC1C(uint64_t a1, unint64_t a2)
{
  void **v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int i;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int v21;
  char v22;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int j;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  unint64_t v63;
  int v64;
  unsigned int v65;
  int v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  int k;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 *v94;
  unsigned __int8 *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  const void *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  const void *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  const void *v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  const void *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  int m;
  uint64_t v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  unsigned __int8 *v149;
  unsigned __int8 *v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  int v167;
  unsigned int v169;
  int v170;
  int v171;
  uint64_t v172;
  _QWORD *v173;
  unint64_t v174;
  int v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t n;
  uint64_t v180;
  int v181;
  BOOL v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t *v185;
  uint64_t *v186;
  uint64_t *v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  int v193;
  unsigned int v194;
  int v195;
  int v196;
  _QWORD *v197;
  unsigned int v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t *v203;
  _QWORD *v204;
  uint64_t v205;
  unsigned __int8 *v206;
  unsigned __int8 **v207;
  unsigned __int8 *v208;
  uint64_t v209;
  uint64_t *v210;
  _QWORD *v211;
  uint64_t v212;
  unsigned __int8 *v213;
  unsigned __int8 **v214;
  unsigned __int8 *v215;
  uint64_t v216;
  int v217;
  unint64_t v218;
  unsigned int v219;
  unsigned __int8 v220;
  unsigned int v221[24];
  unsigned int v222[24];
  uint64_t v223;
  __int128 v224;
  unint64_t v225;
  int v226;
  __int16 v227;
  char v228;
  unsigned __int8 *v229;
  uint64_t v230;
  char v231;
  unsigned int v232;
  char v233;
  unint64_t v234;

  v4 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(a1 + 2696), (void *)a2);
  v5 = *(_QWORD *)(a1 + 2704);
  v6 = 2712;
  if (v5 == *(_QWORD *)(a1 + 2696))
    v6 = 2716;
  if (v4 != (void **)(v5 + 8 * *(unsigned int *)(a1 + v6)))
  {
    *v4 = (void *)-2;
    ++*(_DWORD *)(a1 + 2720);
  }
  if (!a2 || (*(_DWORD *)(a2 + 28) & 0x7Fu) - 60 > 6)
    return;
  v234 = a2;
  if (!sub_22E3CB5E0(a2))
  {
    v7 = a2;
    if ((*(_DWORD *)(a2 + 28) & 0x7F) != 0x53)
    {
      v8 = *(_QWORD *)(a2 + 16);
      v9 = v8 & 0xFFFFFFFFFFFFFFF8;
      if ((v8 & 4) != 0)
        v9 = *(_QWORD *)v9;
      for (i = *(_WORD *)(v9 + 8) & 0x7F; i != 83; i = *(_WORD *)(v9 + 8) & 0x7F)
      {
        v11 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v11 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_22;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_21;
          if (i == 16)
            goto LABEL_15;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_28;
          if (i == 24)
          {
LABEL_15:
            v11 = -48;
          }
          else
          {
LABEL_21:
            if (i != 70)
            {
LABEL_22:
              v12 = i - 52;
              if ((i - 33) >= 5)
                v13 = -48;
              else
                v13 = -64;
              if (v12 >= 6)
                v11 = v13;
              else
                v11 = -72;
              goto LABEL_28;
            }
            v11 = -64;
          }
        }
LABEL_28:
        v14 = *(_QWORD *)(v9 + v11 + 16);
        v9 = v14 & 0xFFFFFFFFFFFFFFF8;
        if ((v14 & 4) != 0)
          v9 = *(_QWORD *)v9;
      }
      v7 = v9 - 40;
    }
    if (sub_22EFBBF74(a2, *(_QWORD *)(v7 + 88))
      && *(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956)
      && !sub_22E63A8A4(a2))
    {
      if (*(_BYTE *)(a1 + 352))
      {
        v108 = *(_QWORD *)(a1 + 88);
        v109 = *(_BYTE *)(a1 + 351);
        if (v109 >= 0)
          v110 = (const void *)(a1 + 328);
        else
          v110 = *(const void **)(a1 + 328);
        if (v109 >= 0)
          v111 = v109 & 0x7F;
        else
          v111 = *(_QWORD *)(a1 + 336);
        v112 = *(unsigned int *)(a1 + 356) | ((unint64_t)*(unsigned int *)(a1 + 356) << 32);
        v224 = 0uLL;
        v225 = v112;
        v226 = 0;
        v228 = 126;
        v227 = 478;
        v113 = sub_22F39C3C4(v108, v110, v111, &v224);
        sub_22EFCA95C(a2, v113);
      }
      if (*(_BYTE *)(a1 + 384))
      {
        v114 = *(_QWORD *)(a1 + 88);
        v115 = *(_BYTE *)(a1 + 383);
        if (v115 >= 0)
          v116 = (const void *)(a1 + 360);
        else
          v116 = *(const void **)(a1 + 360);
        if (v115 >= 0)
          v117 = v115 & 0x7F;
        else
          v117 = *(_QWORD *)(a1 + 368);
        v118 = *(unsigned int *)(a1 + 388) | ((unint64_t)*(unsigned int *)(a1 + 388) << 32);
        v224 = 0uLL;
        v225 = v118;
        v226 = 0;
        v228 = 126;
        v227 = 478;
        v119 = sub_22F39C600(v114, v116, v117, &v224);
        sub_22EFCA95C(a2, v119);
      }
      if (*(_BYTE *)(a1 + 416))
      {
        v120 = *(_QWORD *)(a1 + 88);
        v121 = *(_BYTE *)(a1 + 415);
        if (v121 >= 0)
          v122 = (const void *)(a1 + 392);
        else
          v122 = *(const void **)(a1 + 392);
        if (v121 >= 0)
          v123 = v121 & 0x7F;
        else
          v123 = *(_QWORD *)(a1 + 400);
        v124 = *(unsigned int *)(a1 + 420) | ((unint64_t)*(unsigned int *)(a1 + 420) << 32);
        v224 = 0uLL;
        v225 = v124;
        v226 = 0;
        v228 = 126;
        v227 = 478;
        v125 = sub_22F39CA78(v120, v122, v123, &v224);
        sub_22EFCA95C(a2, v125);
      }
      if (*(_BYTE *)(a1 + 448))
      {
        v126 = *(_QWORD *)(a1 + 88);
        v127 = *(_BYTE *)(a1 + 447);
        if (v127 >= 0)
          v128 = (const void *)(a1 + 424);
        else
          v128 = *(const void **)(a1 + 424);
        if (v127 >= 0)
          v129 = v127 & 0x7F;
        else
          v129 = *(_QWORD *)(a1 + 432);
        v130 = *(unsigned int *)(a1 + 452) | ((unint64_t)*(unsigned int *)(a1 + 452) << 32);
        v224 = 0uLL;
        v225 = v130;
        v226 = 0;
        v228 = 126;
        v227 = 478;
        v131 = sub_22F39C83C(v126, v128, v129, &v224);
        sub_22EFCA95C(a2, v131);
      }
    }
  }
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x3D)
  {
    v15 = *(unsigned int *)(a2 + 100);
    if ((_DWORD)v15)
    {
      v16 = (uint64_t *)(a2 + 104);
      v17 = 8 * v15;
      do
      {
        v18 = *v16++;
        sub_22EA2BC1C(a1, v18);
        v17 -= 8;
      }
      while (v17);
    }
  }
  sub_22EA26864((_QWORD *)a1, a2);
  v19 = *(unsigned int *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088)
                        + *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) - 24)
                        + 52);
  v20 = a2;
  if ((_DWORD)v19)
  {
    sub_22EFBB794(a2);
    v20 = a2;
    if (v21)
    {
      v22 = sub_22EFBD2AC(a2);
      v20 = a2;
      if ((v22 & 1) == 0)
      {
        v23 = v19
            / sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16408) & 0xFFFFFFFFFFFFFFF0));
        v24 = sub_22EF5B404(*(_QWORD *)(a1 + 88), a2, 0);
        v20 = a2;
        if (v24 > v23)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x1310u, 0, (uint64_t)&v224);
          LODWORD(v218) = sub_22EF5B404(*(_QWORD *)(a1 + 88), v234, 0);
          v25 = sub_22E89519C((uint64_t)&v224, (unsigned int *)&v218);
          v26 = sub_22E890024(v25, (uint64_t *)&v234);
          LODWORD(v223) = v23;
          sub_22E89519C(v26, (unsigned int *)&v223);
          sub_22E903BEC((unsigned int *)&v224);
          v20 = v234;
        }
      }
    }
  }
  v27 = *(_BYTE *)(v20 + 96);
  if ((v27 & 7) == 2 || (*(_BYTE *)(v20 + 96) & 7) == 0 && (v27 & 0x18) == 0x10)
  {
    v28 = *(_DWORD *)(v20 + 28) & 0x7F;
    if (v28 == 64 || v28 == 62)
      goto LABEL_116;
    v29 = *(_QWORD *)(v20 + 16);
    v30 = (_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF8);
    v31 = v29 & 0xFFFFFFFFFFFFFFF8;
    if ((v29 & 4) != 0)
      v31 = v30[1];
    v32 = *(_WORD *)(sub_22EFCBB30(v31) + 8) & 0x7F;
    if (v32 != 16 && v32 != 83)
    {
      if ((v29 & 4) != 0)
        v30 = (_QWORD *)*v30;
      if (((_WORD)v30[1] & 0x7Eu) - 34 >= 4)
LABEL_116:
        sub_22EA2D380(a1, v234);
    }
  }
  v33 = v234;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0)
  {
    sub_22E9FF2F4(a1, v234);
    v33 = v234;
  }
  v223 = 0;
  if ((*(_BYTE *)(v33 + 29) & 1) == 0)
    goto LABEL_70;
  v35.n128_f64[0] = sub_22EFC8E88(v33);
  v36 = *(uint64_t **)v34;
  v37 = *(unsigned int *)(v34 + 8);
  v38 = *(uint64_t **)v34;
  if ((_DWORD)v37)
  {
    v39 = 8 * v37;
    v38 = *(uint64_t **)v34;
    while (*(_WORD *)(*v38 + 32) != 157)
    {
      ++v38;
      v39 -= 8;
      if (!v39)
        goto LABEL_70;
    }
  }
  if (v38 == &v36[v37])
  {
LABEL_70:
    if ((*(_BYTE *)(v33 + 29) & 1) == 0)
      goto LABEL_111;
    v35.n128_f64[0] = sub_22EFC8E88(v33);
    v44 = *(uint64_t **)v43;
    v45 = *(unsigned int *)(v43 + 8);
    v46 = *(uint64_t **)v43;
    if ((_DWORD)v45)
    {
      v47 = 8 * v45;
      v46 = *(uint64_t **)v43;
      while (*(_WORD *)(*v46 + 32) != 155)
      {
        ++v46;
        v47 -= 8;
        if (!v47)
          goto LABEL_111;
      }
    }
    if (v46 == &v44[v45])
    {
LABEL_111:
      v223 = 0;
      goto LABEL_156;
    }
    do
    {
      v48 = *v44++;
      v40 = v48;
      v42 = *(_WORD *)(v48 + 32);
    }
    while (v42 != 155);
  }
  else
  {
    do
    {
      v41 = *v36++;
      v40 = v41;
      v42 = *(_WORD *)(v41 + 32);
    }
    while (v42 != 157);
  }
  v223 = v40;
  v49 = v234;
  if (v42 == 157)
  {
    if ((*(_DWORD *)(v234 + 28) & 0x7F) != 0x40)
    {
      v50 = *(_QWORD *)(v234 + 16);
      v51 = v50 & 0xFFFFFFFFFFFFFFF8;
      if ((v50 & 4) != 0)
        v51 = *(_QWORD *)v51;
      if ((*(_WORD *)(v51 + 8) & 0x7Eu) - 34 <= 3
        && (*(unsigned int (**)(__n128))(*(_QWORD *)v234 + 24))(v35))
      {
        if (!v234 || (v52 = v234, (*(_DWORD *)(v234 + 28) & 0x7F) != 0x53))
        {
          v53 = *(_QWORD *)(v234 + 16);
          v54 = v53 & 0xFFFFFFFFFFFFFFF8;
          if ((v53 & 4) != 0)
            v54 = *(_QWORD *)v54;
          for (j = *(_WORD *)(v54 + 8) & 0x7F; j != 83; j = *(_WORD *)(v54 + 8) & 0x7F)
          {
            v56 = -40;
            if (j > 70)
            {
              if (j == 71)
              {
                v56 = -56;
              }
              else if (j != 81)
              {
                goto LABEL_99;
              }
            }
            else
            {
              if (j > 0x18)
                goto LABEL_98;
              if (j == 16)
                goto LABEL_92;
              if (((1 << j) & 0x1066) != 0)
                goto LABEL_105;
              if (j == 24)
              {
LABEL_92:
                v56 = -48;
              }
              else
              {
LABEL_98:
                if (j != 70)
                {
LABEL_99:
                  v57 = j - 52;
                  if ((j - 33) >= 5)
                    v58 = -48;
                  else
                    v58 = -64;
                  if (v57 >= 6)
                    v56 = v58;
                  else
                    v56 = -72;
                  goto LABEL_105;
                }
                v56 = -64;
              }
            }
LABEL_105:
            v59 = *(_QWORD *)(v54 + v56 + 16);
            v54 = v59 & 0xFFFFFFFFFFFFFFF8;
            if ((v59 & 4) != 0)
              v54 = *(_QWORD *)v54;
          }
          v52 = v54 - 40;
        }
        if (sub_22EFBBF74(v234, *(_QWORD *)(v52 + 88)))
        {
          v60 = *(_QWORD *)(*(_QWORD *)(v234 + 80) + 16);
          v61 = (_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF8);
          if ((v60 & 4) != 0)
            v61 = (_QWORD *)*v61;
          if (v61)
            v62 = v61 - 8;
          else
            v62 = 0;
          if ((*((_DWORD *)v62 + 7) & 0x7F) == 0x25)
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v234 + 24), 0x1871u, 0, (uint64_t)v222);
            sub_22E903BEC(v222);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v40 + 16), 0x154Cu, 0, (uint64_t)v221);
            sub_22E903BEC(v221);
          }
          else
          {
            v63 = v62[17];
            if (v63 < 8)
              v64 = 1;
            else
              v64 = (v63 >> 2) & 1;
            if (v64)
              v65 = 2811;
            else
              v65 = 6257;
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v234 + 24), v65, 0, (uint64_t)v222);
            sub_22E903BEC(v222);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v40 + 16), 0x154Cu, 0, (uint64_t)v221);
            sub_22E903BEC(v221);
            if (v64)
              sub_22EFC77E8(v234, 1);
          }
        }
      }
    }
    if (!v223)
      goto LABEL_156;
    v49 = v234;
  }
  sub_22EFBB794(v49);
  if (v66)
  {
    v67 = sub_22EFC8010(v234);
    if (!v67)
      goto LABEL_155;
    v68 = v67;
    if ((*(_WORD *)(v67 + 8) & 0x7Eu) - 52 > 5)
      goto LABEL_155;
    if ((*(_BYTE *)(v67 - 43) & 1) != 0)
    {
      sub_22EFC8E88(v67 - 72);
      v70 = *((unsigned int *)v69 + 2);
      if ((_DWORD)v70)
      {
        v71 = 8 * v70;
        v72 = *v69;
        while (*(_WORD *)(*(_QWORD *)v72 + 32) != 157)
        {
          v72 += 8;
          v71 -= 8;
          if (!v71)
            goto LABEL_147;
        }
      }
      else
      {
        v72 = *v69;
      }
      if (v72 != *v69 + 8 * v70)
        goto LABEL_156;
    }
LABEL_147:
    if ((*(_BYTE *)(v68 - 43) & 1) == 0)
      goto LABEL_155;
    sub_22EFC8E88(v68 - 72);
    v74 = *((unsigned int *)v73 + 2);
    if ((_DWORD)v74)
    {
      v75 = 8 * v74;
      v76 = *v73;
      while (*(_WORD *)(*(_QWORD *)v76 + 32) != 155)
      {
        v76 += 8;
        v75 -= 8;
        if (!v75)
          goto LABEL_155;
      }
    }
    else
    {
      v76 = *v73;
    }
    if (v76 == *v73 + 8 * v74)
    {
LABEL_155:
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v234 + 24), 0xAF8u, 0, (uint64_t)&v224);
      v77 = sub_22E890024((uint64_t)&v224, (uint64_t *)&v234);
      sub_22E8FB3C4(v77, &v223);
      sub_22E903BEC((unsigned int *)&v224);
      sub_22EFC77E8(v234, 1);
    }
  }
LABEL_156:
  if ((*(_BYTE *)(v234 + 29) & 1) == 0)
    goto LABEL_244;
  sub_22EFC8E88(v234);
  v79 = *(uint64_t **)v78;
  v80 = *(unsigned int *)(v78 + 8);
  v81 = *(uint64_t **)v78;
  if ((_DWORD)v80)
  {
    v82 = 8 * v80;
    v81 = *(uint64_t **)v78;
    while (*(_WORD *)(*v81 + 32) != 340)
    {
      ++v81;
      v82 -= 8;
      if (!v82)
        goto LABEL_244;
    }
  }
  if (v81 == &v79[v80])
    goto LABEL_244;
  do
  {
    v84 = *v79++;
    v83 = v84;
    v85 = *(unsigned __int16 *)(v84 + 32) | (*(unsigned __int8 *)(v84 + 34) << 16);
  }
  while (*(_WORD *)(v84 + 32) != 340);
  if ((v85 & 0x10000) != 0)
    goto LABEL_244;
  if (!v234 || (v86 = v234, (*(_DWORD *)(v234 + 28) & 0x7F) != 0x53))
  {
    v87 = *(_QWORD *)(v234 + 16);
    v88 = v87 & 0xFFFFFFFFFFFFFFF8;
    if ((v87 & 4) != 0)
      v88 = *(_QWORD *)v88;
    for (k = *(_WORD *)(v88 + 8) & 0x7F; k != 83; k = *(_WORD *)(v88 + 8) & 0x7F)
    {
      v90 = -40;
      if (k > 70)
      {
        if (k == 71)
        {
          v90 = -56;
        }
        else if (k != 81)
        {
          goto LABEL_180;
        }
      }
      else
      {
        if (k > 0x18)
          goto LABEL_179;
        if (k == 16)
          goto LABEL_173;
        if (((1 << k) & 0x1066) != 0)
          goto LABEL_186;
        if (k == 24)
        {
LABEL_173:
          v90 = -48;
        }
        else
        {
LABEL_179:
          if (k != 70)
          {
LABEL_180:
            v91 = k - 52;
            if ((k - 33) >= 5)
              v92 = -48;
            else
              v92 = -64;
            if (v91 >= 6)
              v90 = v92;
            else
              v90 = -72;
            goto LABEL_186;
          }
          v90 = -64;
        }
      }
LABEL_186:
      v93 = *(_QWORD *)(v88 + v90 + 16);
      v88 = v93 & 0xFFFFFFFFFFFFFFF8;
      if ((v93 & 4) != 0)
        v88 = *(_QWORD *)v88;
    }
    v86 = v88 - 40;
  }
  if (sub_22EFBBF74(v234, *(_QWORD *)(v86 + 88)))
    goto LABEL_244;
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v83 + 16), 0x187Au, 0, (uint64_t)&v224);
  if (v231)
  {
    v94 = v229;
    if (!v229)
    {
      v94 = (unsigned __int8 *)sub_22E3B8AAC(v230);
      v229 = v94;
    }
    v94[*v94 + 1] = 15;
    v95 = v229;
LABEL_198:
    v96 = *v95;
    *v95 = v96 + 1;
    *(_QWORD *)&v95[8 * v96 + 16] = v83;
    goto LABEL_200;
  }
  if (v233)
  {
    v202 = v225;
    v203 = (uint64_t *)(v224 + 12784);
    if (v225)
      v202 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v225 + 32))(v225);
    v218 = v202;
    v204 = sub_22F2F1D6C(v203, (uint64_t *)&v218);
    v205 = v204[1] + 32 * v232;
    v208 = *(unsigned __int8 **)(v205 + 8);
    v207 = (unsigned __int8 **)(v205 + 8);
    v206 = v208;
    if (!v208)
    {
      v206 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v207[1]);
      *v207 = v206;
    }
    v206[*v206 + 1] = 15;
    v95 = *v207;
    goto LABEL_198;
  }
LABEL_200:
  sub_22E903BEC((unsigned int *)&v224);
  v97 = v234;
  if ((*(_BYTE *)(v234 + 29) & 1) != 0)
  {
    sub_22EFC8E88(v234);
    v99 = *(char **)v98;
    v100 = *(unsigned int *)(v98 + 8);
    if ((_DWORD)v100)
    {
      v101 = &v99[8 * v100];
      v102 = 8 * v100 - 8;
      v103 = *(char **)v98;
      v104 = *(char **)v98;
      while (1)
      {
        v105 = *(_QWORD *)v104;
        v104 += 8;
        if (*(_WORD *)(v105 + 32) == 340)
          break;
        v102 -= 8;
        v103 = v104;
        if (v104 == v101)
          goto LABEL_242;
      }
      if (v104 == v101)
      {
        v101 = v103;
      }
      else
      {
        v106 = 8;
        v101 = v103;
        do
        {
          v107 = *(_QWORD *)&v103[v106];
          if (*(_WORD *)(v107 + 32) != 340)
          {
            *(_QWORD *)v101 = v107;
            v101 += 8;
          }
          v106 += 8;
          v102 -= 8;
        }
        while (v102);
        v99 = *(char **)v98;
      }
    }
    else
    {
      v101 = *(char **)v98;
    }
LABEL_242:
    v132 = (unint64_t)(v101 - v99) >> 3;
    *(_DWORD *)(v98 + 8) = v132;
    if (!(_DWORD)v132)
      *(_DWORD *)(v97 + 28) &= ~0x100u;
  }
LABEL_244:
  if ((*(_BYTE *)(v234 + 29) & 1) != 0)
  {
    sub_22EFC8E88(v234);
    v134 = *(uint64_t **)v133;
    v135 = *(unsigned int *)(v133 + 8);
    v136 = *(uint64_t **)v133;
    if ((_DWORD)v135)
    {
      v137 = 8 * v135;
      v136 = *(uint64_t **)v133;
      while (*(_WORD *)(*v136 + 32) != 298)
      {
        ++v136;
        v137 -= 8;
        if (!v137)
          goto LABEL_304;
      }
    }
    if (v136 != &v134[v135])
    {
      do
      {
        v139 = *v134++;
        v138 = v139;
        v140 = *(unsigned __int16 *)(v139 + 32) | (*(unsigned __int8 *)(v139 + 34) << 16);
      }
      while (*(_WORD *)(v139 + 32) != 298);
      if ((v140 & 0x10000) == 0)
      {
        if (!v234 || (v141 = v234, (*(_DWORD *)(v234 + 28) & 0x7F) != 0x53))
        {
          v142 = *(_QWORD *)(v234 + 16);
          v143 = v142 & 0xFFFFFFFFFFFFFFF8;
          if ((v142 & 4) != 0)
            v143 = *(_QWORD *)v143;
          for (m = *(_WORD *)(v143 + 8) & 0x7F; m != 83; m = *(_WORD *)(v143 + 8) & 0x7F)
          {
            v145 = -40;
            if (m > 70)
            {
              if (m == 71)
              {
                v145 = -56;
              }
              else if (m != 81)
              {
                goto LABEL_268;
              }
            }
            else
            {
              if (m > 0x18)
                goto LABEL_267;
              if (m == 16)
                goto LABEL_261;
              if (((1 << m) & 0x1066) != 0)
                goto LABEL_274;
              if (m == 24)
              {
LABEL_261:
                v145 = -48;
              }
              else
              {
LABEL_267:
                if (m != 70)
                {
LABEL_268:
                  v146 = m - 52;
                  if ((m - 33) >= 5)
                    v147 = -48;
                  else
                    v147 = -64;
                  if (v146 >= 6)
                    v145 = v147;
                  else
                    v145 = -72;
                  goto LABEL_274;
                }
                v145 = -64;
              }
            }
LABEL_274:
            v148 = *(_QWORD *)(v143 + v145 + 16);
            v143 = v148 & 0xFFFFFFFFFFFFFFF8;
            if ((v148 & 4) != 0)
              v143 = *(_QWORD *)v143;
          }
          v141 = v143 - 40;
        }
        if (!sub_22EFBBF74(v234, *(_QWORD *)(v141 + 88)))
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v138 + 16), 0x187Au, 0, (uint64_t)&v224);
          if (v231)
          {
            v149 = v229;
            if (!v229)
            {
              v149 = (unsigned __int8 *)sub_22E3B8AAC(v230);
              v229 = v149;
            }
            v149[*v149 + 1] = 15;
            v150 = v229;
          }
          else
          {
            if (!v233)
            {
LABEL_288:
              sub_22E903BEC((unsigned int *)&v224);
              v152 = v234;
              if ((*(_BYTE *)(v234 + 29) & 1) != 0)
              {
                sub_22EFC8E88(v234);
                v154 = *(char **)v153;
                v155 = *(unsigned int *)(v153 + 8);
                if ((_DWORD)v155)
                {
                  v156 = &v154[8 * v155];
                  v157 = 8 * v155 - 8;
                  v158 = *(char **)v153;
                  v159 = *(char **)v153;
                  while (1)
                  {
                    v160 = *(_QWORD *)v159;
                    v159 += 8;
                    if (*(_WORD *)(v160 + 32) == 298)
                      break;
                    v157 -= 8;
                    v158 = v159;
                    if (v159 == v156)
                      goto LABEL_302;
                  }
                  if (v159 == v156)
                  {
                    v156 = v158;
                  }
                  else
                  {
                    v161 = 8;
                    v156 = v158;
                    do
                    {
                      v162 = *(_QWORD *)&v158[v161];
                      if (*(_WORD *)(v162 + 32) != 298)
                      {
                        *(_QWORD *)v156 = v162;
                        v156 += 8;
                      }
                      v161 += 8;
                      v157 -= 8;
                    }
                    while (v157);
                    v154 = *(char **)v153;
                  }
                }
                else
                {
                  v156 = *(char **)v153;
                }
LABEL_302:
                v163 = (unint64_t)(v156 - v154) >> 3;
                *(_DWORD *)(v153 + 8) = v163;
                if (!(_DWORD)v163)
                  *(_DWORD *)(v152 + 28) &= ~0x100u;
              }
              goto LABEL_304;
            }
            v209 = v225;
            v210 = (uint64_t *)(v224 + 12784);
            if (v225)
              v209 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v225 + 32))(v225);
            v218 = v209;
            v211 = sub_22F2F1D6C(v210, (uint64_t *)&v218);
            v212 = v211[1] + 32 * v232;
            v215 = *(unsigned __int8 **)(v212 + 8);
            v214 = (unsigned __int8 **)(v212 + 8);
            v213 = v215;
            if (!v215)
            {
              v213 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v214[1]);
              *v214 = v213;
            }
            v213[*v213 + 1] = 15;
            v150 = *v214;
          }
          v151 = *v150;
          *v150 = v151 + 1;
          *(_QWORD *)&v150[8 * v151 + 16] = v138;
          goto LABEL_288;
        }
      }
    }
  }
LABEL_304:
  v164 = v234;
  v165 = *(_QWORD *)(v234 + 16);
  v166 = (_QWORD *)(v165 & 0xFFFFFFFFFFFFFFF8);
  if ((v165 & 4) != 0)
    v166 = (_QWORD *)*v166;
  v167 = *(_WORD *)(sub_22EFCBB30((unint64_t)v166) + 8) & 0x7F;
  if (v167 == 83 || v167 == 16)
  {
    v169 = sub_22EFB948C(v164);
    v164 = v234;
    if (v169 >= 3)
    {
      sub_22E910734(a1, v234);
      v164 = v234;
    }
  }
  v170 = *(_DWORD *)(v164 + 28);
  v171 = v170 & 0x7F;
  if (v171 == 64 || v171 == 62)
    goto LABEL_320;
  v172 = *(_QWORD *)(v164 + 16);
  v173 = (_QWORD *)(v172 & 0xFFFFFFFFFFFFFFF8);
  v174 = v172 & 0xFFFFFFFFFFFFFFF8;
  if ((v172 & 4) != 0)
    v174 = v173[1];
  v175 = *(_WORD *)(sub_22EFCBB30(v174) + 8) & 0x7F;
  if (v175 != 16 && v175 != 83)
  {
    if (v171 == 64)
      goto LABEL_320;
    if ((v172 & 4) != 0)
      v173 = (_QWORD *)*v173;
    if (v171 == 66 || ((_WORD)v173[1] & 0x7Eu) - 38 < 0xFFFFFFFC)
      goto LABEL_320;
    goto LABEL_319;
  }
  if (v171 != 66)
  {
LABEL_319:
    sub_22EA0580C(a1, v164);
    v164 = v234;
    v170 = *(_DWORD *)(v234 + 28);
  }
LABEL_320:
  if ((v170 & 0x100) == 0)
    return;
  sub_22EFC8E88(v164);
  v177 = *((unsigned int *)v176 + 2);
  if ((_DWORD)v177)
  {
    v178 = 8 * v177;
    for (n = *v176; *(_WORD *)(*(_QWORD *)n + 32) != 334; n += 8)
    {
      v178 -= 8;
      if (!v178)
        return;
    }
  }
  else
  {
    n = *v176;
  }
  if (n == *v176 + 8 * v177)
    return;
  v180 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v234 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v181 = *(_DWORD *)(v180 + 16);
  if (v180)
    v182 = v181 == 11;
  else
    v182 = 0;
  if (v182)
  {
    if (((*(_DWORD *)(v180 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
      return;
    goto LABEL_348;
  }
  if (!v180 || v181 != 44)
  {
    if (v181 != 9)
      return;
LABEL_348:
    v184 = (uint64_t *)sub_22F255ABC(a2);
    v186 = v185;
    while (1)
    {
      do
      {
        v187 = v184;
        if (v184 >= v186)
        {
          if (v184 == v186)
            return;
          v188 = v186;
          while (*(_WORD *)(*v188 + 32) != 334)
          {
            if (++v188 == v184)
              return;
          }
          v187 = v184;
        }
        else
        {
          while (*(_WORD *)(*v187 + 32) != 334)
          {
            if (++v187 == v186)
              return;
          }
          v188 = v186;
        }
        if (v187 == v188)
          return;
        do
        {
          v190 = *v184++;
          v189 = v190;
        }
        while (*(_WORD *)(v190 + 32) != 334);
        v191 = sub_22EFBC5B4(v234);
      }
      while (!v191);
      v192 = v191;
      LOBYTE(v218) = 0;
      v220 = 0;
      sub_22F00905C(v191, *(_QWORD *)(a1 + 88), 0, (uint64_t)&v224);
      sub_22E54C490((uint64_t)&v218, (uint64_t)&v224);
      v193 = v220;
      if ((_BYTE)v225 && DWORD2(v224) >= 0x41 && (_QWORD)v224)
        MEMORY[0x2348A0E84](v224, 0x1000C8000313F17);
      if (!v193)
        break;
      v194 = v219;
      if (v219 > 0x40)
        v195 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v218);
      else
        v195 = v219 + __clz(v218) - 64;
      if (v194 - v195 >= 0x41)
      {
        v196 = *(_DWORD *)(v189 + 16);
        v197 = (_QWORD *)a1;
        v198 = 4906;
        goto LABEL_374;
      }
      v201 = (uint64_t *)v218;
      if (v194 < 0x41)
        v201 = (uint64_t *)&v218;
      sub_22F311344(a1, *(_QWORD *)(v189 + 40), *v201, **(_QWORD **)(v189 + 48), *(_BYTE *)(v189 + 56), *(unsigned __int8 *)(v189 + 57));
LABEL_375:
      if (v220 && v219 >= 0x41)
      {
        if (v218)
          MEMORY[0x2348A0E84](v218, 0x1000C8000313F17);
      }
    }
    v196 = *(_DWORD *)(v189 + 16);
    v197 = (_QWORD *)a1;
    v198 = 4905;
LABEL_374:
    sub_22E8FCA40(v197, v196, v198, 0, (uint64_t)&v224);
    v217 = (**(_DWORD **)(a1 + 72) >> 8) & 1;
    v199 = sub_22E89519C((uint64_t)&v224, (unsigned int *)&v217);
    sub_22F0D4E74(v192);
    v216 = v200;
    sub_22E8906A0(v199, &v216);
    sub_22E903BEC((unsigned int *)&v224);
    goto LABEL_375;
  }
  v183 = sub_22F114198(*(_QWORD *)(v180 + 24));
  if ((*(_BYTE *)(v183 + 74) & 1) != 0 || *(_QWORD *)(v183 + 128) >= 8uLL)
    goto LABEL_348;
}

unint64_t sub_22EA2CFC4(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t *a4, unsigned int a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36[24];
  void *v37;
  uint64_t v38;
  _QWORD v39[10];

  v39[8] = *MEMORY[0x24BDAC8D0];
  v37 = v39;
  v38 = 0x800000000;
  v7 = *a3;
  if ((*a3 & 0x200000) != 0)
  {
    v39[0] = a3[1];
    LODWORD(v38) = 1;
  }
  v8 = a5;
  if (a5)
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    do
    {
      v14 = *a4;
      if (*a4)
      {
        v15 = (*(_DWORD *)(v14 + 28) & 0x7F) - 67;
        if (v15 >= 0xFFFFFFEE)
        {
          if (!v9)
            v9 = *a4;
          if ((*(_DWORD *)(v14 + 28) & 0x7F) == 0x3D)
            v16 = *a4;
          else
            v16 = 0;
          if (!v10)
            v10 = v16;
          if (!v12)
          {
            if (((*(_DWORD *)a3 >> 12) & 0x3Fu) - 33 > 2)
            {
              v12 = 0;
            }
            else
            {
              v12 = *a4;
              if (v15 >= 0xFFFFFFF9)
              {
                v17 = *(_QWORD *)(*(_QWORD *)(v14 + 48) & 0xFFFFFFFFFFFFFFF0);
                LOBYTE(v36[0]) = 1;
                v18 = sub_22F110500((uint64_t)v36, v17);
                if (v18)
                  v19 = *(unsigned __int8 *)(v18 + 16) - 25 < 2;
                else
                  v19 = 0;
                if (v19)
                  v12 = v14;
                else
                  v12 = 0;
              }
            }
          }
          if (v9 == v14)
          {
            v9 = v14;
          }
          else
          {
            if (!((v10 == 0) | v13 & 1))
            {
              sub_22E8FCA40(a1, *(_DWORD *)(v10 + 24), 0xC60u, 0, (uint64_t)v36);
              v35 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
              v20 = sub_22E8906A0((uint64_t)v36, &v35);
              v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
              sub_22E8906A0(v20, &v34);
              sub_22E903BEC(v36);
              v13 = 1;
            }
            if (v12)
            {
              if ((v11 & 1) == 0)
              {
                sub_22E8FCA40(a1, *(_DWORD *)(v12 + 24), 0xB48u, 0, (uint64_t)v36);
                v21 = *(_QWORD *)(*(_QWORD *)(v12 + 48) & 0xFFFFFFFFFFFFFFF0);
                LOBYTE(v35) = 1;
                v22 = sub_22F110500((uint64_t)&v35, v21);
                if (v22)
                  v23 = *(unsigned __int8 *)(v22 + 16) - 25 < 2;
                else
                  v23 = 0;
                v33 = v23;
                v24 = sub_22E894E38((uint64_t)v36, (unsigned __int8 *)&v33);
                v35 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 16))(v9);
                v25 = sub_22E8906A0(v24, &v35);
                v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 16))(v14);
                sub_22E8906A0(v25, &v34);
                sub_22E903BEC(v36);
              }
              v11 = 1;
            }
          }
        }
        v26 = v38;
        if (v38 >= (unint64_t)HIDWORD(v38))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v26 = v38;
        }
        *((_QWORD *)v37 + v26) = v14;
        LODWORD(v38) = v38 + 1;
      }
      ++a4;
      --v8;
    }
    while (v8);
    v7 = *a3;
  }
  else
  {
    v9 = 0;
  }
  if (((v7 >> 12) & 0x3F) - 23 < 5)
  {
    v27 = a3[1];
    if (v27)
    {
      if ((*(_DWORD *)(v27 + 28) & 0x7Fu) - 33 <= 4)
      {
        sub_22EA10BEC(a1, v27, a2);
        if (v9)
        {
          if (!*(_QWORD *)(v27 + 40))
          {
            v28 = *(_QWORD *)(v27 + 120);
            if ((v28 < 8 || (v28 & 4) != 0) && (*(_BYTE *)(a1[9] + 1) & 1) != 0)
              (*(void (**)(_QWORD, unint64_t, uint64_t))(**(_QWORD **)(a1[11] + 15064) + 80))(*(_QWORD *)(a1[11] + 15064), v27, v9);
          }
        }
      }
    }
  }
  v29 = sub_22EA2D7B4(a1, (unint64_t *)v37, v38);
  if (v37 != v39)
    free(v37);
  return v29;
}

void sub_22EA2D380(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *i;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __int16 v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = sub_22EFC8010(a2);
  if (v4)
  {
    v5 = v4;
    if ((*(_WORD *)(v4 + 8) & 0x7Eu) - 52 <= 5)
    {
      while (1)
      {
        if ((*(_BYTE *)(v5 - 43) & 1) != 0)
        {
          sub_22EFC8E88(v5 - 72);
          v7 = *((unsigned int *)v6 + 2);
          if ((_DWORD)v7)
          {
            v8 = 8 * v7;
            v9 = *v6;
            while (*(_WORD *)(*(_QWORD *)v9 + 32) != 157)
            {
              v9 += 8;
              v8 -= 8;
              if (!v8)
                goto LABEL_11;
            }
          }
          else
          {
            v9 = *v6;
          }
          if (v9 != *v6 + 8 * v7)
            break;
        }
LABEL_11:
        if ((*(_BYTE *)(v5 - 43) & 1) != 0)
        {
          sub_22EFC8E88(v5 - 72);
          v11 = *((unsigned int *)v10 + 2);
          if ((_DWORD)v11)
          {
            v12 = 8 * v11;
            v13 = *v10;
            while (*(_WORD *)(*(_QWORD *)v13 + 32) != 155)
            {
              v13 += 8;
              v12 -= 8;
              if (!v12)
                goto LABEL_19;
            }
          }
          else
          {
            v13 = *v10;
          }
          if (v13 != *v10 + 8 * v11)
            break;
        }
LABEL_19:
        if ((*(_BYTE *)(v5 - 43) & 1) != 0)
        {
          sub_22EFC8E88(v5 - 72);
          v15 = *((unsigned int *)v14 + 2);
          if ((_DWORD)v15)
          {
            v16 = 8 * v15;
            v17 = *v14;
            while (*(_WORD *)(*(_QWORD *)v17 + 32) != 156)
            {
              v17 += 8;
              v16 -= 8;
              if (!v16)
                goto LABEL_27;
            }
          }
          else
          {
            v17 = *v14;
          }
          if (v17 != *v14 + 8 * v15)
            break;
        }
LABEL_27:
        if ((*(_BYTE *)(v5 - 43) & 1) != 0)
        {
          sub_22EFC8E88(v5 - 72);
          v19 = *((unsigned int *)v18 + 2);
          if ((_DWORD)v19)
          {
            v20 = 8 * v19;
            v21 = *v18;
            while (*(_WORD *)(*(_QWORD *)v21 + 32) != 158)
            {
              v21 += 8;
              v20 -= 8;
              if (!v20)
                goto LABEL_35;
            }
          }
          else
          {
            v21 = *v18;
          }
          if (v21 != *v18 + 8 * v19)
            break;
        }
LABEL_35:
        v22 = sub_22EFC8010(v5 - 72);
        if (v22)
        {
          v5 = v22;
          if ((*(_WORD *)(v22 + 8) & 0x7Eu) - 52 < 6)
            continue;
        }
        return;
      }
      if ((*(_BYTE *)(v5 - 43) & 1) != 0)
      {
        sub_22EFC8E88(v5 - 72);
        v24 = *(uint64_t **)v23;
        v25 = *(unsigned int *)(v23 + 8);
        v26 = *(uint64_t **)v23;
        if ((_DWORD)v25)
        {
          v27 = 8 * v25;
          v26 = *(uint64_t **)v23;
          while (*(_WORD *)(*v26 + 32) != 157)
          {
            ++v26;
            v27 -= 8;
            if (!v27)
              goto LABEL_47;
          }
        }
        if (v26 != &v24[v25])
        {
          do
          {
            v29 = *v24++;
            v28 = v29;
          }
          while (*(_WORD *)(v29 + 32) != 157);
          goto LABEL_55;
        }
      }
LABEL_47:
      if ((*(_BYTE *)(v5 - 43) & 1) != 0)
      {
        sub_22EFC8E88(v5 - 72);
        v31 = *(uint64_t **)v30;
        v32 = *(unsigned int *)(v30 + 8);
        v33 = *(uint64_t **)v30;
        if ((_DWORD)v32)
        {
          v34 = 8 * v32;
          v33 = *(uint64_t **)v30;
          while (*(_WORD *)(*v33 + 32) != 155)
          {
            ++v33;
            v34 -= 8;
            if (!v34)
              goto LABEL_58;
          }
        }
        if (v33 != &v31[v32])
        {
          do
          {
            v35 = *v31++;
            v28 = v35;
          }
          while (*(_WORD *)(v35 + 32) != 155);
LABEL_55:
          v36 = sub_22EF9C5AC(v28);
LABEL_56:
          v37 = *(_WORD *)(v36 + 32);
          *(_BYTE *)(v36 + 34) |= 1u;
          *(_WORD *)(v36 + 32) = v37;
          v38 = v36;
          v39 = a2;
LABEL_57:
          sub_22EFCA95C(v39, v38);
          return;
        }
      }
      if ((*(_BYTE *)(v5 - 43) & 1) == 0)
        goto LABEL_65;
LABEL_58:
      sub_22EFC8E88(v5 - 72);
      v41 = *(uint64_t **)v40;
      v42 = *(unsigned int *)(v40 + 8);
      v43 = *(uint64_t **)v40;
      if ((_DWORD)v42)
      {
        v44 = 8 * v42;
        v43 = *(uint64_t **)v40;
        while (*(_WORD *)(*v43 + 32) != 156)
        {
          ++v43;
          v44 -= 8;
          if (!v44)
            goto LABEL_65;
        }
      }
      if (v43 != &v41[v42])
      {
        do
        {
          v51 = *v41++;
          v50 = (_OWORD *)v51;
        }
        while (*(_WORD *)(v51 + 32) != 156);
        v52 = sub_22F384564(*(_QWORD *)(a1 + 88), v50);
        v53 = *(_WORD *)(v52 + 32);
        *(_BYTE *)(v52 + 34) |= 1u;
        *(_WORD *)(v52 + 32) = v53;
        sub_22EFCA95C(a2, v52);
        if ((*(_BYTE *)(v5 - 43) & 1) == 0)
          goto LABEL_73;
        sub_22EFC8E88(v5 - 72);
        v57 = *((unsigned int *)v56 + 2);
        if ((_DWORD)v57)
        {
          v58 = 8 * v57;
          v59 = *v56;
          while (*(_WORD *)(*(_QWORD *)v59 + 32) != 155)
          {
            v59 += 8;
            v58 -= 8;
            if (!v58)
              goto LABEL_73;
          }
        }
        else
        {
          v59 = *v56;
        }
        if (v59 == *v56 + 8 * v57)
        {
LABEL_73:
          v39 = v5 - 72;
          v38 = v52;
          goto LABEL_57;
        }
      }
      else
      {
LABEL_65:
        if ((*(_BYTE *)(v5 - 43) & 1) != 0)
        {
          sub_22EFC8E88(v5 - 72);
          v46 = *(uint64_t **)v45;
          v47 = *(unsigned int *)(v45 + 8);
          i = *(uint64_t **)v45;
          if ((_DWORD)v47)
          {
            v49 = 8 * v47;
            for (i = *(uint64_t **)v45; *(_WORD *)(*i + 32) != 158; ++i)
            {
              v49 -= 8;
              if (!v49)
                return;
            }
          }
          if (i != &v46[v47])
          {
            do
            {
              v55 = *v46++;
              v54 = (_OWORD *)v55;
            }
            while (*(_WORD *)(v55 + 32) != 158);
            v36 = sub_22F3847A0(*(_QWORD *)(a1 + 88), v54);
            goto LABEL_56;
          }
        }
      }
    }
  }
}

unint64_t sub_22EA2D7B4(_QWORD *a1, unint64_t *a2, unint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40[12];
  unsigned int v41[8];
  _BYTE v42[56];
  uint64_t v43;
  unint64_t v44;

  if (a3 <= 1 || !(_DWORD)a3)
    goto LABEL_15;
  v6 = 0;
  v7 = 0;
  v8 = a3;
  v9 = a2;
  while (1)
  {
    v10 = (_QWORD *)*v9;
    if ((*(_DWORD *)(*v9 + 28) & 0x80) != 0)
      goto LABEL_15;
    if (!v10 || (*(_DWORD *)(*v9 + 28) & 0x7Fu) - 60 > 6)
      goto LABEL_15;
    v12 = *(_QWORD *)(v10[6] & 0xFFFFFFFFFFFFFFF0);
    LOBYTE(v41[0]) = 0;
    v13 = sub_22F110500((uint64_t)v41, v12);
    if (!v13)
      goto LABEL_14;
    v14 = v13;
    if (*(_QWORD *)(v13 + 24) < 0x10uLL)
      goto LABEL_14;
    if (v7 >= 0x10)
      break;
    v7 = *(_QWORD *)(v13 + 24);
    v6 = (uint64_t)v10;
LABEL_14:
    ++v9;
    if (!--v8)
      goto LABEL_15;
  }
  if ((*(_QWORD *)((*(_QWORD *)(v13 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v13 + 24) & 7) == (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF0) + 8) | v7 & 7))
    goto LABEL_14;
  v44 = v7;
  if (*(_BYTE *)(v13 + 16) == 14)
    v17 = v13;
  else
    v17 = 0;
  v35 = v17;
  v18 = v10[7];
  v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFF8);
  if ((v18 & 4) != 0)
    v19 = (uint64_t *)v19[4];
  v20 = *v19;
  v21 = *v19;
  while (1)
  {
LABEL_26:
    if ((v21 & 0xF) != 0)
      goto LABEL_36;
    v22 = *(unsigned __int8 *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v22 <= 0x39)
      break;
LABEL_31:
    if (sub_22F115668(v21))
      v20 = v21;
    v21 = sub_22F115B7C(v21);
    if (!v21)
      goto LABEL_38;
  }
  if (v22 == 24)
    goto LABEL_37;
  if (v22 != 26)
  {
    if (((1 << v22) & 0x20000000200003CLL) != 0)
      goto LABEL_36;
    goto LABEL_31;
  }
  if ((*(_BYTE *)(v21 + 23) & 0x10) == 0)
  {
LABEL_36:
    v21 = sub_22F115B7C(v21);
    goto LABEL_26;
  }
LABEL_37:
  v20 = v21;
LABEL_38:
  v23 = sub_22F115668(v20);
  sub_22E8FCA40(a1, v23, 0xB36u, 0, (uint64_t)v40);
  if (v35)
    v24 = (*(_DWORD *)(v35 + 16) >> 19) & 3;
  else
    v24 = 3;
  v39 = v24;
  v25 = sub_22E89519C((uint64_t)v40, (unsigned int *)&v39);
  v26 = sub_22E8901B8(v25, (uint64_t *)&v44);
  v38 = *(_QWORD *)(v6 + 40);
  v27 = sub_22E894538(v26, &v38);
  v37 = *(_QWORD *)(v14 + 24);
  v28 = sub_22E8901B8(v27, &v37);
  v36 = v10[5];
  v29 = sub_22E894538(v28, &v36);
  v30 = *(_OWORD *)(v29 + 9);
  *(_OWORD *)v41 = *(_OWORD *)v29;
  *(_OWORD *)((char *)&v41[2] + 1) = v30;
  v42[0] = 0;
  v42[48] = 0;
  if (*(_BYTE *)(v29 + 80))
    sub_22E907424((uint64_t)v42, v29 + 32);
  v43 = *(_QWORD *)(v29 + 88);
  sub_22E903BEC((unsigned int *)v40);
  if (((*(_DWORD *)(v6 + 28) & 0x7F) != 0x40 || (*(_DWORD *)(v6 + 96) & 0x600u) - 1536 <= 0xFFFFFBFF)
    && *(_QWORD *)(v6 + 88) >= 8uLL)
  {
    v31 = sub_22EFBC5B4(v6);
    sub_22F0D4E74(v31);
    v40[0] = v32;
    sub_22E8906A0((uint64_t)v41, v40);
  }
  if (sub_22EFBC5B4((uint64_t)v10))
  {
    v33 = sub_22EFBC5B4((uint64_t)v10);
    sub_22F0D4E74(v33);
    v40[0] = v34;
    sub_22E8906A0((uint64_t)v41, v40);
  }
  sub_22EFC77E8((uint64_t)v10, 1);
  sub_22E903BEC(v41);
LABEL_15:
  sub_22EA2DB10((unint64_t)a1, a2, a3);
  v15 = a3;
  if ((_DWORD)a3)
  {
    if ((_DWORD)a3 == 1)
      return *a2;
    else
      return (unint64_t)sub_22EFDA148(a1[11], (uint64_t *)a2, a3) | 1;
  }
  return v15;
}

unint64_t sub_22EA2DB10(unint64_t result, unint64_t *a2, unint64_t a3)
{
  unint64_t *v3;
  unint64_t v4;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a3)
  {
    v3 = a2;
    v4 = *a2;
    if (*a2)
    {
      v6 = result;
      v7 = *(_QWORD *)(result + 104);
      v8 = *(_DWORD *)(v4 + 24);
      v9 = *(_QWORD *)(v7 + 32);
      if (sub_22F1CF68C(v9, 0x960u, v8, v7) != 1
        || (result = sub_22F1CF68C(v9, 0x967u, v8, v7), (_DWORD)result != 1))
      {
        if (a3 < 2)
        {
          v11 = 1;
        }
        else
        {
          v10 = (*(_DWORD *)(v4 + 28) & 0x7F) - 33;
          if (v10 <= 4)
            v11 = a3 - 1;
          else
            v11 = a3;
          if (v10 <= 4)
            ++v3;
        }
        return sub_22EF56748(*(_QWORD *)(v6 + 88), v3, v11, *(_QWORD *)(v6 + 80));
      }
    }
  }
  return result;
}

unsigned int *sub_22EA2DBEC(unsigned int *result, uint64_t a2, uint64_t a3)
{
  unsigned int *v4;
  unsigned int v5;
  int v6;
  unsigned int *v7;
  _BYTE v8[96];
  uint64_t v9[3];
  uint64_t v10;
  unsigned int v11[24];

  v4 = result;
  if ((*(_BYTE *)(*((_QWORD *)result + 9) + 1) & 1) != 0)
    result = (unsigned int *)sub_22EAA474C((uint64_t)result, a3);
  if (*(_QWORD *)(a3 + 16))
  {
    sub_22E8FCA40(v4, *(_DWORD *)(a3 + 64), 0x120Au, 0, (uint64_t)v11);
    v9[0] = *(_QWORD *)(a3 + 8);
    sub_22E8906A0((uint64_t)v11, v9);
    result = sub_22E903BEC(v11);
  }
  v5 = *(_DWORD *)(a3 + 40);
  if (v5 <= 9)
  {
    v6 = 1 << v5;
    if ((v6 & 0x35E) != 0)
    {
      sub_22E8FCA40(v4, *(_DWORD *)(a3 + 64), 0xB6Bu, 0, (uint64_t)v11);
      sub_22EA12DB4((uint64_t)v4, a3 + 40);
      v10 = v9[0];
      sub_22E894538((uint64_t)v11, &v10);
      v7 = v11;
    }
    else
    {
      if ((v6 & 0xA0) == 0)
        return result;
      sub_22E8FCA40(v4, *(_DWORD *)(a3 + 64), 0xB6Cu, 0, (uint64_t)v8);
      v7 = (unsigned int *)v8;
    }
    return sub_22E903BEC(v7);
  }
  return result;
}

uint64_t sub_22EA2DD10(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  BOOL v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int *v28;
  unsigned int v29;
  void **v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int *v38;
  int v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v47;
  unsigned int v48[25];
  uint64_t v49;
  int v50;
  int *v51;
  unsigned int v52[24];
  char *v53;
  char v54;
  uint64_t v55;
  char v56;
  void *__p;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  unsigned int v62[24];
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _BYTE v66[64];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  int v72;
  _QWORD v73[3];
  __int16 v74;
  char v75;
  int v76;
  uint64_t v77;

  v77 = *MEMORY[0x24BDAC8D0];
  v6 = *(unint64_t **)a3;
  v7 = **(_QWORD **)a3;
  v8 = **(_QWORD **)(a1 + 72);
  if ((v7 & 7) == 5)
  {
    if ((v8 & 0x200) != 0)
    {
      if ((v8 & 0x800) != 0)
        v9 = 5340;
      else
        v9 = 6504;
      sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v6 + 24), v9, 0, (uint64_t)&v63);
      v10 = *((unsigned int *)v6 + 24);
      v55 = 0;
      v56 = 0;
      v58 = 0;
      v59 = 0;
      __p = 0;
      v60 = 0;
      v53 = (char *)(v10 | (v10 << 32));
      v54 = 1;
      sub_22E890748((uint64_t)&v63, &v53);
      if (SHIBYTE(v59) < 0)
        operator delete(__p);
      sub_22E903BEC((unsigned int *)&v63);
    }
    v11 = 5;
  }
  else
  {
    v12 = (v7 & 7) != 4 || (**(_QWORD **)(a1 + 72) & 0x100) == 0;
    if (v12)
    {
      if ((v7 & 7) != 0)
      {
        sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v6 + 24), 0x1Fu, 0, (uint64_t)v62);
        sub_22E903BEC(v62);
        v11 = 0;
        v13 = *(unint64_t **)a3;
        *v13 = **(_QWORD **)a3 & 0xFFFFFFFFFFFFFFC0;
        v13[12] = 0;
      }
      else
      {
        v11 = 0;
      }
    }
    else
    {
      v11 = 4;
    }
  }
  v14 = *v6;
  v15 = (*v6 >> 3) & 3;
  if ((_DWORD)v15)
  {
    sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v6 + 25), 0xE66u, 0, (uint64_t)&v63);
    v53 = off_24FAB7A58[v15 - 1];
    sub_22E8AECC4((uint64_t)&v63, (uint64_t *)&v53);
    sub_22E903BEC((unsigned int *)&v63);
    v14 = *v6;
  }
  if ((v14 & 0x300000000) != 0)
  {
    v12 = (v14 & 0x100000000) == 0;
    v16 = 164;
    if (v12)
      v16 = 184;
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)((char *)v6 + v16), 0xE2Au, 0, (uint64_t)&v63);
    LODWORD(v53) = (**(_DWORD **)(a1 + 72) >> 11) & 1;
    sub_22E89519C((uint64_t)&v63, (unsigned int *)&v53);
    sub_22E903BEC((unsigned int *)&v63);
    v14 = *v6;
  }
  if ((v14 & 0x6000000000) != 0)
  {
    sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v6 + 49), 0xE3Bu, 0, (uint64_t)&v63);
    LODWORD(v53) = 0;
    v17 = sub_22E8900C4((uint64_t)&v63, (int *)&v53);
    LODWORD(v61) = (**(_QWORD **)a3 >> 37) & 3;
    sub_22E8900C4(v17, (int *)&v61);
    sub_22E903BEC((unsigned int *)&v63);
  }
  sub_22EA11438((unsigned int *)a1, (uint64_t)v6);
  sub_22EA2DBEC((unsigned int *)a1, v18, a3);
  v24 = sub_22EE8156C(a1, a3, a2, v19, v20, v21, v22, v23);
  v25 = *v24;
  if (*(_DWORD *)(a3 + 40))
    v26 = 0;
  else
    v26 = *(_QWORD *)(a3 + 48);
  v61 = v26;
  if (v26)
  {
    v27 = *(_DWORD *)(a3 + 64);
    v63 = 0;
    v64 = v66;
    v65 = 0x800000000;
    v67 = 0;
    v68 = 0;
    v69 = 0;
    v70 = (_QWORD *)a1;
    v71 = v26;
    v72 = v27;
    sub_22EFC6D6C((uint64_t)v73, v26);
    v73[1] = 0;
    v73[2] = 0;
    v74 = 1;
    v75 = 1;
    v76 = 0;
    sub_22EC56024((uint64_t)&v63);
    sub_22EC63520(a1, (uint64_t)&v63, (_QWORD *)a2, 0, 0);
    if ((_DWORD)v63 == 2)
    {
      v28 = (int *)(*v64 & 0xFFFFFFFFFFFFFFFCLL);
      v29 = v28[7] & 0x7F;
      if (v29 <= 0x2F && ((1 << v29) & 0xC00000060000) != 0)
      {
        v28 = (int *)sub_22EFBAEA4(*v64 & 0xFFFFFFFFFFFFFFFCLL);
        v29 = v28[7] & 0x7F;
      }
      if (v29 <= 0x3B && ((1 << v29) & 0x800004100000000) != 0)
      {
        sub_22F34553C(a1, *(_DWORD *)(a3 + 64), (uint64_t)v28);
      }
      else
      {
        v30 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(a2 + 72), v28);
        v31 = *(_QWORD *)(a2 + 80);
        v32 = 88;
        if (v31 == *(_QWORD *)(a2 + 72))
          v32 = 92;
        if (v30 != (void **)(v31 + 8 * *(unsigned int *)(a2 + v32)))
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 64), 0x3Au, 0, (uint64_t)&v53);
          sub_22E8BAE44((uint64_t)&v53, &v61);
          sub_22E903BEC((unsigned int *)&v53);
          sub_22E8FCA40((_QWORD *)a1, v28[6], 0x6Cu, 0, (uint64_t)v52);
          sub_22E903BEC(v52);
          v61 = 0;
          v33 = *(_DWORD *)(a3 + 64);
          *(_DWORD *)(a3 + 40) = 0;
          *(_QWORD *)(a3 + 48) = 0;
          *(_DWORD *)(a3 + 68) = v33;
          *(_WORD *)(a3 + 1088) |= 1u;
        }
      }
    }
    if ((_BYTE)v76)
    {
      if ((_DWORD)v63 == 5)
      {
        sub_22EC64D18(v70, (uint64_t)&v63);
      }
      else if (v68 && (*(_DWORD *)(v70[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v70, (uint64_t)&v63);
      }
    }
    if (v67)
    {
      v47 = sub_22EC6CBD0(v67);
      MEMORY[0x2348A0E9C](v47, 0x10E0C409F09D3C3);
    }
    if (v64 != (_QWORD *)v66)
      free(v64);
  }
  v34 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 1960) + 80);
  v35 = sub_22E3CD31C((uint64_t *)(v34 + 72), v34);
  if (v35)
    v36 = v35 + 40;
  else
    v36 = 0;
  v37 = sub_22EA2E3A8(a1, v36, *(_DWORD *)(a3 + 72), *(_DWORD *)(a3 + 64), v61, v25, v24, v11);
  v38 = (int *)v37;
  v51 = (int *)v37;
  if ((*(_BYTE *)(a3 + 1088) & 1) != 0 || (**(_QWORD **)a3 & 0x3F000) == 0x32000)
    sub_22EFC77E8(v37, 1);
  v39 = *(unsigned __int16 *)(a2 + 18);
  v40 = *(unsigned __int16 *)(a2 + 20);
  *(_WORD *)(a2 + 20) = v40 + 1;
  v41 = v38[24] & 0xFFF01FFF | (((((v39 << 13) + 1040384) >> 13) & 0x7F) << 13);
  v38[24] = v41;
  if (v40 >= 0xFF)
    sub_22F3AC2B8((unint64_t)v38, v40);
  else
    v38[24] = v41 & 0xF00FFFFF | (v40 << 20);
  sub_22E3BA850(a2 + 72, v38);
  if (v61)
    sub_22E8CE7E8(a1 + 3320, (uint64_t)v38);
  sub_22EA7E768((_QWORD *)a1, a2, (uint64_t)v38, a3);
  if (*(_DWORD *)(*(_QWORD *)a3 + 192))
  {
    sub_22E8FCA40((_QWORD *)a1, v38[6], 0xF69u, 0, (uint64_t)&v63);
    v50 = 1;
    v42 = sub_22E8900C4((uint64_t)&v63, &v50);
    v43 = sub_22E890024(v42, (uint64_t *)&v51);
    LODWORD(v49) = *(_DWORD *)(*(_QWORD *)a3 + 192);
    HIDWORD(v49) = v49;
    v44 = sub_22E8906A0(v43, &v49);
    v45 = (char *)(*(unsigned int *)(*(_QWORD *)a3 + 192) | ((unint64_t)*(unsigned int *)(*(_QWORD *)a3 + 192) << 32));
    v55 = 0;
    v56 = 0;
    v58 = 0;
    v59 = 0;
    __p = 0;
    v60 = 0;
    v53 = v45;
    v54 = 1;
    sub_22E890748(v44, &v53);
    if (SHIBYTE(v59) < 0)
      operator delete(__p);
    sub_22E903BEC((unsigned int *)&v63);
    v38 = v51;
  }
  if (sub_22E49C868((uint64_t)v38))
  {
    sub_22E8FCA40((_QWORD *)a1, v51[6], 0xB8Au, 0, (uint64_t)v48);
    sub_22E903BEC(v48);
  }
  if ((*(_DWORD *)(*(_QWORD *)(a1 + 72) + 52) & 0x40000000) != 0)
    sub_22EA1D764(a1, (uint64_t)v51);
  return (uint64_t)v51;
}

uint64_t sub_22EA2E3A8(uint64_t a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t *a7, char a8)
{
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *i;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _BOOL4 v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50[24];
  unsigned int v51[24];
  unint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  void *__p;
  uint64_t v57;
  uint64_t v58;
  char v59;
  int v60;
  void (**v61)(_QWORD, uint64_t, _QWORD, uint64_t);
  uint64_t *v62;
  unint64_t *v63;
  unint64_t v64;

  v14 = a4;
  v15 = sub_22EA2EBF4((_QWORD *)a1, a6, a4, a7);
  v64 = v15;
  v16 = sub_22EF69F90(*(_QWORD *)(a1 + 88), v15);
  v17 = sub_22EFBF080(*(_QWORD *)(a1 + 88), a2, a3, v14, a5, v16, (uint64_t)a7, a8, 0);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v17 + 48) & 0xFFFFFFFFFFFFFFF0) + 16) == 36)
  {
    v35 = sub_22F3091B0(a1);
    if (v35)
    {
      v36 = *(_DWORD *)(v35 + 1528);
      if (v36 >= *(_DWORD *)(v35 + 1532))
      {
        v47 = v35;
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v35 = v47;
        v36 = *(_DWORD *)(v47 + 1528);
      }
      *(_QWORD *)(*(_QWORD *)(v35 + 1520) + 8 * v36) = v17;
      ++*(_DWORD *)(v35 + 1528);
    }
  }
  for (i = (_QWORD *)(v17 + 48); ; i = (_QWORD *)(v21 + 32))
  {
    v19 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
    if (v19)
      v20 = (*(_DWORD *)(v19 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v20 = 0;
    if (v20)
    {
      v21 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
      continue;
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
      break;
    v48 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
    v21 = sub_22F10CF48(v19);
    v19 = v48;
    if (!v21)
      break;
  }
  v22 = sub_22F10C2A4(v19);
  if (v22 && (*(_DWORD *)(v22 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v22 + 76) & 1) != 0)
  {
LABEL_41:
    sub_22F31DBEC(a1, *(_QWORD *)(v17 + 48), *(_DWORD *)(v17 + 24), 0, 6);
    goto LABEL_24;
  }
  v23 = (_QWORD *)(v17 + 48);
  while (2)
  {
    v24 = *(_QWORD *)(*v23 & 0xFFFFFFFFFFFFFFF0);
    if (v24)
      v25 = (*(_DWORD *)(v24 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v25 = 0;
    if (v25)
    {
      v26 = *(_QWORD *)(*v23 & 0xFFFFFFFFFFFFFFF0);
LABEL_22:
      v23 = (_QWORD *)(v26 + 32);
      continue;
    }
    break;
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
  {
    v49 = *(_QWORD *)(*v23 & 0xFFFFFFFFFFFFFFF0);
    v26 = sub_22F10CF48(v24);
    v24 = v49;
    if (v26)
      goto LABEL_22;
  }
  v27 = sub_22F10C2A4(v24);
  if (v27 && (*(_DWORD *)(v27 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v27 + 76) & 2) != 0)
    goto LABEL_41;
LABEL_24:
  if ((*(_WORD *)(*(_QWORD *)(a1 + 216) + 8) & 0x7Eu) - 34 >= 4)
  {
    LODWORD(v52) = 1;
    v61 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB7980;
    LODWORD(v62) = 2577;
    v63 = &v52;
    if (sub_22EAB2EB4(a1, v14, v15, &v61))
      sub_22EFC77E8(v17, 1);
  }
  v28 = (_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 33 <= 1)
  {
    v61 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))*a7;
    v62 = a7 + 1;
    v37 = sub_22F1167E8((uint64_t *)&v61);
    v38 = sub_22F141A3C(v37, 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
    sub_22E8FCA40((_QWORD *)a1, v14, 0x1034u, 0, (uint64_t)&v61);
    v60 = 1;
    v39 = sub_22E8900C4((uint64_t)&v61, &v60);
    v40 = sub_22E8901B8(v39, (uint64_t *)&v64);
    v55 = 0;
    v54 = 0;
    v57 = 0;
    v58 = 0x100000000000000;
    v52 = v38 | ((unint64_t)v38 << 32);
    v53 = 0;
    __p = (void *)42;
    v59 = 0;
    sub_22E890748(v40, &v52);
    if (SHIBYTE(v58) < 0)
      operator delete(__p);
    sub_22E903BEC((unsigned int *)&v61);
    v41 = sub_22F36CC4C(*(_QWORD *)(a1 + 88), v64);
    v64 = v41;
    *(_QWORD *)(v17 + 48) = v41;
    v28 = (_QWORD *)(v41 & 0xFFFFFFFFFFFFFFF0);
  }
  v29 = v28[1];
  if ((v29 & 8) != 0)
  {
    if ((*(_BYTE *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x1C) & 0xC) == 0)
      goto LABEL_55;
    sub_22E8FCA40((_QWORD *)a1, v14, 0x11F7u, 0, (uint64_t)&v61);
    v30 = sub_22E8901B8((uint64_t)&v61, (uint64_t *)&v64);
    v31 = 0;
    v32 = *(_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF0);
    v33 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v32 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v33 != 39)
    {
      v34 = *(_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v32 + 16) == 32
         || v33 == 32 && (v34 = sub_22F10CF48(*(_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF0))) != 0)
        && sub_22E509ED0(v34))
      {
        v31 = 0;
      }
      else
      {
        v31 = *(_BYTE *)(v32 + 16) != 32
           && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v32 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32
            || (v32 = sub_22F10CF48(v32)) == 0)
           || !sub_22E509F54(v32);
      }
    }
    LODWORD(v52) = v31;
    v42 = sub_22E8900C4(v30, (int *)&v52);
    v60 = 1;
    sub_22E8900C4(v42, &v60);
    sub_22E903BEC((unsigned int *)&v61);
    sub_22EFC77E8(v17, 1);
    v28 = (_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF0);
    v29 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v29 & 8) != 0)
    {
LABEL_55:
      v43 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800;
      if (!v43
        || (v44 = *(_QWORD *)(a1 + 72), (*(_DWORD *)(v44 + 52) & 0x40000000) != 0)
        && (v43 == 0x2000
         || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 < 4)
        || (*(_BYTE *)(v44 + 104) & 0x20) != 0
        && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 < 4
        || (sub_22E8FCA40((_QWORD *)a1, v14, 0xA7Fu, 0, (uint64_t)v51),
            sub_22E903BEC(v51),
            sub_22EFC77E8(v17, 1),
            v29 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFFF0) + 8),
            (v29 & 8) != 0))
      {
        if ((*(_BYTE *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x19) & 6) != 0)
        {
          sub_22E8FCA40((_QWORD *)a1, v14, 0xECFu, 0, (uint64_t)v50);
          sub_22E903BEC(v50);
          sub_22EFC77E8(v17, 1);
        }
      }
    }
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 56) - 23) <= 1)
  {
    v45 = sub_22EFBF144(v17);
    if (sub_22E97DED0((_QWORD *)a1, v45, *(_DWORD *)(v17 + 24)))
      sub_22EFC77E8(v17, 1);
  }
  return v17;
}

uint64_t sub_22EA2E9B4(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v9;
  unsigned int v10[24];

  if (*(_DWORD *)(result + 10680) <= *(_DWORD *)(result + 11956) && a3 != 0)
  {
    v4 = a2;
    v5 = (_QWORD *)result;
    v6 = &a2[a3];
    do
    {
      v7 = *v4;
      if ((*(_BYTE *)(*v4 + 29) & 8) == 0)
      {
        result = *v4;
        while ((*(_BYTE *)(result + 29) & 8) == 0)
        {
          result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 40))(result);
          if (result == v7 || result == 0)
          {
            if (*(_QWORD *)(v7 + 40))
            {
              result = sub_22EA057AC(v7);
              if ((result & 1) == 0)
              {
                sub_22E8FCA40(v5, *(_DWORD *)(v7 + 24), 0x1BDFu, 0, (uint64_t)v10);
                v9 = *(_QWORD *)(v7 + 40);
                sub_22E894538((uint64_t)v10, &v9);
                result = (uint64_t)sub_22E903BEC(v10);
              }
            }
            break;
          }
        }
      }
      ++v4;
    }
    while (v4 != v6);
  }
  return result;
}

unint64_t sub_22EA2EA80(unint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17[24];
  uint64_t v18;
  uint64_t v19;

  v18 = a5;
  v19 = a4;
  if (*(_DWORD *)(*(_QWORD *)(result + 72) + 188))
  {
    v7 = (_QWORD *)result;
    v8 = (uint64_t *)(a4 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
    {
      result = sub_22F111438(&v19, *(_QWORD *)(result + 88));
      if ((_DWORD)result)
      {
        result = sub_22EF5CCD0(v7[11], *v8, (uint64_t)v17);
        LODWORD(v16) = v17[0];
        if (v17[0] > *(_DWORD *)(v7[9] + 188))
        {
          sub_22E8FCA40(v7, *(_DWORD *)(a5 + 24), 0x1B33u, 0, (uint64_t)v17);
          v10 = sub_22E890024((uint64_t)v17, &v18);
          sub_22E89519C(v10, (unsigned int *)&v16);
          result = (unint64_t)sub_22E903BEC(v17);
        }
      }
    }
    if (a3)
    {
      v11 = 8 * a3;
      do
      {
        v16 = *a2;
        v15 = *(_QWORD *)(v16 + 48);
        v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
        {
          result = sub_22F111438(&v15, v7[11]);
          if ((_DWORD)result)
          {
            v14 = 0;
            result = sub_22EF5CCD0(v7[11], *v12, (uint64_t)v17);
            v14 = v17[0];
            if (v17[0] > *(_DWORD *)(v7[9] + 188))
            {
              sub_22E8FCA40(v7, *(_DWORD *)(v16 + 24), 0x1ADBu, 0, (uint64_t)v17);
              v13 = sub_22E890024((uint64_t)v17, &v16);
              sub_22E89519C(v13, &v14);
              result = (unint64_t)sub_22E903BEC(v17);
            }
          }
        }
        ++a2;
        v11 -= 8;
      }
      while (v11);
    }
  }
  return result;
}

uint64_t sub_22EA2EBF4(_QWORD *a1, uint64_t a2, int a3, uint64_t *a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v18;
  uint64_t v19[2];
  unint64_t v20;
  unsigned int v21[2];
  uint64_t v22;
  uint64_t v23;

  if ((*(_WORD *)(a1[9] + 148) & 2) != 0)
  {
    v18 = a2;
    v6 = a2 & 0xFFFFFFFFFFFFFFF0;
    v7 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v7 & 8) != 0 && (*(_WORD *)((v7 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) != 0 || !sub_22F40ACB8(*(_QWORD *)v6))
    {
      return v18;
    }
    else
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
      {
        if (sub_22F114FB4(*(_QWORD *)v6))
          v14 = 64;
        else
          v14 = 128;
      }
      else
      {
        if ((v18 & 1) == 0 && (*(_BYTE *)(v6 + 8) & 1) == 0)
        {
          v8 = a1[400];
          if (v8)
          {
            LOWORD(v21[0]) = 2;
            v21[1] = a3;
            v23 = v18;
            v22 = 2647;
            v9 = (_OWORD *)sub_22E90D2A8(v8 + 8, (unint64_t)v21, 1);
            v10 = (_OWORD *)(*(_QWORD *)(v8 + 8) + 80 * *(unsigned int *)(v8 + 16));
            *v10 = *v9;
            v11 = v9[4];
            v13 = v9[1];
            v12 = v9[2];
            v10[3] = v9[3];
            v10[4] = v11;
            v10[1] = v13;
            v10[2] = v12;
            ++*(_DWORD *)(v8 + 16);
          }
          else
          {
            sub_22E8FCA40(a1, a3, 0xA57u, 0, (uint64_t)v21);
            v19[0] = *a4;
            v19[1] = (uint64_t)(a4 + 1);
            v15 = sub_22F116708(v19);
            v20 = v15 | (sub_22F1167E8(v19) << 32);
            sub_22E8906A0((uint64_t)v21, (uint64_t *)&v20);
            sub_22E903BEC(v21);
          }
        }
        v14 = 64;
      }
      return sub_22EA28548(a1[11], v18, v14);
    }
  }
  return a2;
}

void sub_22EA2ED98(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  char v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _DWORD *v17;
  uint64_t v18;
  _WORD *v19;
  unsigned int *v20;
  const void *v21;
  size_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v29[4];
  uint64_t v30;
  void **v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  int v42;
  uint64_t v43;
  _QWORD *v44;
  __int128 v45;
  __int128 v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  __int16 v58;
  uint64_t v59;
  uint64_t v60;
  void **v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  void *v66[5];
  char v67;
  char *v68;
  void *__src;
  __int128 __len;
  _QWORD v71[34];

  v71[32] = *MEMORY[0x24BDAC8D0];
  v5 = *(unsigned int *)(a3 + 120);
  if ((_DWORD)v5)
  {
    v6 = 0;
    v7 = *(int **)(a3 + 112);
    while (1)
    {
      v9 = *v7;
      v7 += 30;
      v8 = v9;
      if (v9 != 6)
        break;
      if (v5 == ++v6)
        goto LABEL_5;
    }
    if (((1 << v8) & 0xB7) != 0)
      v6 = 0;
  }
  else
  {
LABEL_5:
    v6 = 0;
  }
  v10 = *(_QWORD *)(a3 + 112) + 120 * v6;
  v12 = *(_WORD *)(v10 + 32);
  v11 = v10 + 32;
  if ((v12 & 1) == 0)
  {
    v13 = *(int *)(v11 + 16);
    if ((_DWORD)v13)
    {
      v14 = v13 - 1;
      v15 = 32 * v13 - 16;
      do
      {
        if (!*(_QWORD *)(*(_QWORD *)(v11 + 40) + v15))
        {
          __src = v71;
          __len = xmmword_22F44E320;
          sub_22F242C48((uint64_t)&v44, (uint64_t)&__src);
          v17 = (_DWORD *)*((_QWORD *)&v46 + 1);
          v18 = a2;
          if ((_QWORD)v46 - *((_QWORD *)&v46 + 1) > 5uLL)
          {
            *(_WORD *)(*((_QWORD *)&v46 + 1) + 4) = 8308;
            *v17 = 1852383264;
            v19 = (_WORD *)(*((_QWORD *)&v46 + 1) + 6);
            *((_QWORD *)&v46 + 1) += 6;
          }
          else
          {
            llvm::raw_ostream::write((llvm::raw_ostream *)&v44, "  int ");
            v19 = (_WORD *)*((_QWORD *)&v46 + 1);
          }
          v20 = *(unsigned int **)(*(_QWORD *)(*(_QWORD *)(v11 + 40) + v15 - 16) + 16);
          v23 = *v20;
          v21 = v20 + 4;
          v22 = v23;
          if ((unint64_t)v23 <= (_QWORD)v46 - (_QWORD)v19)
          {
            if (v22)
            {
              memcpy(v19, v21, v22);
              v19 = (_WORD *)(*((_QWORD *)&v46 + 1) + v22);
              *((_QWORD *)&v46 + 1) += v22;
            }
          }
          else
          {
            llvm::raw_ostream::write((llvm::raw_ostream *)&v44, (const char *)v21);
            v19 = (_WORD *)*((_QWORD *)&v46 + 1);
          }
          if ((_QWORD)v46 - (_QWORD)v19 > 1uLL)
          {
            *v19 = 2619;
            *((_QWORD *)&v46 + 1) += 2;
          }
          else
          {
            llvm::raw_ostream::write((llvm::raw_ostream *)&v44, ";\n");
          }
          llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v44);
          sub_22E8FCA40(a1, *(_DWORD *)(*(_QWORD *)(v11 + 40) + v15 - 8), 0x14D0u, 0, (uint64_t)&v44);
          v24 = sub_22E8BAE44((uint64_t)&v44, (uint64_t *)(*(_QWORD *)(v11 + 40) + v15 - 16));
          sub_22E729148(__src, __len, a4, 0, (uint64_t)v66);
          sub_22E890748(v24, v66);
          if (v67 < 0)
            operator delete(v66[3]);
          sub_22E903BEC((unsigned int *)&v44);
          sub_22F30677C(v66);
          v29[3] = 0;
          v30 = 0;
          v29[2] = 0;
          v29[0] = 0;
          v31 = v66;
          v43 = 0;
          v32 = 0u;
          v33 = 0u;
          v34 = 0u;
          v35 = 0u;
          v36 = 0u;
          v37 = 0u;
          v38 = 0u;
          v39 = 0u;
          v40 = 0u;
          v41 = 0u;
          v42 = 0;
          v25 = *(_QWORD *)(v11 + 40) + v15;
          DWORD2(v36) = *(_DWORD *)(v25 - 8);
          DWORD1(v37) = DWORD2(v36);
          v29[0] = 28672;
          DWORD2(v34) = *(_DWORD *)(v25 - 8);
          HIDWORD(v34) = *(_DWORD *)(v25 - 8);
          v44 = v29;
          v48 = 0;
          v49 = 0;
          v45 = 0u;
          v46 = 0u;
          v47 = 0;
          v50 = *((_QWORD *)&v34 + 1);
          v51 = 4;
          v52 = 0;
          v53 = 0;
          v54 = 0;
          v55 = &v57;
          v56 = 0x800000000;
          v58 &= 0xFC00u;
          v59 = 0;
          v60 = 0;
          v61 = v66;
          v65 = 0;
          v62 = 0u;
          v63 = 0u;
          v64 = 0u;
          v26 = *(_QWORD *)(v25 - 16);
          LODWORD(v25) = *(_DWORD *)(v25 - 8);
          v48 = v26;
          HIDWORD(v49) = v25;
          LODWORD(v49) = v25;
          a2 = v18;
          *(_QWORD *)(*(_QWORD *)(v11 + 40) + v15) = sub_22EA2DD10((unint64_t)a1, v18, (uint64_t)&v44);
          sub_22E827F78((uint64_t)&v44);
          if (DWORD1(v34))
            free(*((void **)&v33 + 1));
          sub_22E8D1BC4((uint64_t)v31, (uint64_t)&v31);
          sub_22E80F94C((uint64_t *)&v32);
          sub_22E80F94C(&v30);
          sub_22E8FB19C(&v68);
          sub_22E3B4EF4((uint64_t)v66);
          if (__src != v71)
            free(__src);
        }
        v16 = v14--;
        v15 -= 32;
      }
      while (v16);
    }
  }
}

uint64_t sub_22EA2F1D0(unint64_t a1, uint64_t *a2, uint64_t a3, int **a4, uint64_t a5, _BYTE *a6, int a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  int **v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[5];

  v19[4] = *MEMORY[0x24BDAC8D0];
  v11 = *a2;
  v17 = v19;
  v18 = 0x400000000;
  if (*(_DWORD *)(*(_QWORD *)(a1 + 72) + 72) && *(_DWORD *)(a1 + 12544))
  {
    v15 = a4;
    v16 = a3;
    v14 = a5;
    sub_22EC98694(a1, v11, a3, a4, a5, (uint64_t)&v17);
    a4 = v15;
    a3 = v16;
    a5 = v14;
  }
  *(_WORD *)(a3 + 1088) = *(_WORD *)(a3 + 1088) & 0xFFF3 | 4;
  v12 = sub_22EA13184(a1, v11, (uint64_t **)a3, a4, a5);
  sub_22EA2F2FC(a1, a2, v12, a6, a7);
  if ((_DWORD)v18)
    sub_22EC98B0C(a1, v12, (uint64_t)&v17);
  if (v17 != v19)
    free(v17);
  return v12;
}

uint64_t sub_22EA2F2FC(unint64_t a1, uint64_t *a2, uint64_t a3, _BYTE *a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  uint64_t v16;
  __int16 v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  BOOL v63;
  unint64_t v65;
  unint64_t v66;
  __int16 v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  char **v76;
  char **v77;
  char **v78;
  uint64_t v79;
  BOOL v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v85;
  unsigned int v86;
  unint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t i;
  int v94;
  unint64_t v95;
  unint64_t *v96;
  uint64_t v97;
  BOOL v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  _DWORD *v107;
  uint64_t v110;
  int v111;
  BOOL v112;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int v133;
  unint64_t v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _DWORD *v140;
  unsigned int v141;
  uint64_t v142;
  _OWORD *v143;
  _OWORD *v144;
  __int128 v145;
  int v146;
  void *v147;
  uint64_t v148;
  _OWORD *v149;
  _OWORD *v150;
  __int128 v151;
  unint64_t v152;
  unsigned int v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  _OWORD *v157;
  _OWORD *v158;
  __int128 v159;
  int v160;
  _QWORD *v161;
  unsigned int v162[24];
  unsigned int v163[24];
  void *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  unint64_t v168;
  _DWORD *v169;
  int v170;
  int v171[3];

  if (!a3)
  {
    sub_22E904974(a1);
    LODWORD(v168) = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
    v164 = 0;
    v171[0] = 3;
    v169 = (_DWORD *)*(unsigned int *)(a1 + 1704);
    sub_22EB4DDB8(a1 + 3688, (int *)&v168, (int *)&v169, (__int16 *)(a1 + 1693), (uint64_t *)&v164, v171);
    v11 = *(unsigned int *)(a1 + 3696);
    v12 = v11 - 2;
    v13 = *(_QWORD *)(a1 + 3688);
    v14 = *(_DWORD *)(v13 + 576 * (v11 - 2));
    if (v14 == 5)
    {
      *(_BYTE *)(v13 + 576 * v11 - 4) = *(_BYTE *)(v13 + 576 * v12 + 572);
      v15 = 1;
    }
    else if (v14 == 2)
    {
      *(_BYTE *)(v13 + 576 * v11 - 4) = 1;
      v15 = *(_BYTE *)(v13 + 576 * v12 + 573) != 0;
    }
    else
    {
      v15 = 0;
      *(_BYTE *)(v13 + 576 * v11 - 4) = 0;
    }
    v16 = v13 + 576 * v11;
    *(_BYTE *)(v16 - 3) = v15;
    *(_WORD *)(a1 + 1693) = 0;
    if (*(_DWORD *)(a1 + 1848))
    {
      llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(a1 + 1776), (llvm::SmallPtrSetImplBase *)(v16 - 560));
      sub_22EAEAE08(a1 + 1840, (uint64_t *)(v16 - 496));
    }
    return a3;
  }
  if ((*(_DWORD *)(a3 + 28) & 0x7F) == 0x1D)
  {
    v10 = *(_QWORD *)(a3 + 48);
    v168 = v10;
    if (!v10)
      goto LABEL_32;
  }
  else
  {
    v168 = a3;
    v10 = a3;
  }
  v17 = *(_WORD *)(v10 + 80);
  if ((v17 & 0x7Eu) - 54 > 3)
    goto LABEL_32;
  v18 = v17 & 0x7F;
  v19 = -40;
  if (v18 > 70)
  {
    if (v18 == 83)
      goto LABEL_28;
    if (v18 == 71)
    {
      v19 = -56;
      goto LABEL_28;
    }
    if (v18 != 81)
    {
LABEL_23:
      v20 = v18 - 52;
      v112 = (v18 - 33) >= 5;
      v21 = -48;
      if (!v112)
        v21 = -64;
      if (v20 >= 6)
        v19 = v21;
      else
        v19 = -72;
    }
  }
  else
  {
    if (v18 > 0x18)
      goto LABEL_22;
    if (v18 == 16)
    {
LABEL_15:
      v19 = -48;
      goto LABEL_28;
    }
    if (((1 << v18) & 0x1066) == 0)
    {
      if (v18 == 24)
        goto LABEL_15;
LABEL_22:
      if (v18 == 70)
      {
        v19 = -64;
        goto LABEL_28;
      }
      goto LABEL_23;
    }
  }
LABEL_28:
  v22 = *(_QWORD *)(v10 + 72 + v19 + 16);
  v23 = (_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
  if ((v22 & 4) == 0)
  {
    if (!v23)
      goto LABEL_32;
LABEL_30:
    v24 = v23[8];
    if (v24
      && ((*(unsigned __int16 *)(v24 + 8) | (*(unsigned __int8 *)(v24 + 10) << 16)) & 0x100000) != 0
      && (*(_QWORD *)(v10 + 40) & 7) == 6
      && *(_DWORD *)(*(_QWORD *)(v10 + 40) & 0xFFFFFFFFFFFFFFF8) == 42)
    {
      goto LABEL_40;
    }
    goto LABEL_32;
  }
  v23 = (_QWORD *)*v23;
  if (v23)
    goto LABEL_30;
LABEL_32:
  if ((*(_QWORD *)(v10 + 80) & 0xC0000000) == 0x80000000)
    v25 = 4;
  else
    v25 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
  v171[0] = v25;
  v164 = 0;
  v170 = 3;
  v169 = (_DWORD *)*(unsigned int *)(a1 + 1704);
  sub_22EB4DDB8(a1 + 3688, v171, (int *)&v169, (__int16 *)(a1 + 1693), (uint64_t *)&v164, &v170);
  v26 = *(unsigned int *)(a1 + 3696);
  v27 = v26 - 2;
  v28 = *(_QWORD *)(a1 + 3688);
  v29 = *(_DWORD *)(v28 + 576 * (v26 - 2));
  if (v29 == 5)
  {
    *(_BYTE *)(v28 + 576 * v26 - 4) = *(_BYTE *)(v28 + 576 * v27 + 572);
    v30 = 1;
  }
  else if (v29 == 2)
  {
    *(_BYTE *)(v28 + 576 * v26 - 4) = 1;
    v30 = *(_BYTE *)(v28 + 576 * v27 + 573) != 0;
  }
  else
  {
    v30 = 0;
    *(_BYTE *)(v28 + 576 * v26 - 4) = 0;
  }
  v31 = v28 + 576 * v26;
  *(_BYTE *)(v31 - 3) = v30;
  *(_WORD *)(a1 + 1693) = 0;
  if (*(_DWORD *)(a1 + 1848))
  {
    llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(a1 + 1776), (llvm::SmallPtrSetImplBase *)(v31 - 560));
    sub_22EAEAE08(a1 + 1840, (uint64_t *)(v31 - 496));
  }
LABEL_40:
  if ((*(_BYTE *)(v10 + 29) & 1) != 0)
  {
    sub_22EFC8E88(v10);
    v33 = *(uint64_t **)v32;
    v34 = *(unsigned int *)(v32 + 8);
    v35 = *(uint64_t **)v32;
    if ((_DWORD)v34)
    {
      v36 = 8 * v34;
      v35 = *(uint64_t **)v32;
      while (*(_WORD *)(*v35 + 32) != 362)
      {
        ++v35;
        v36 -= 8;
        if (!v36)
          goto LABEL_49;
      }
    }
    if (v35 != &v33[v34])
    {
      do
      {
        v38 = *v33++;
        v37 = v38;
      }
      while (*(_WORD *)(v38 + 32) != 362);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v37 + 16), 0xA2Du, 0, (uint64_t)&v164);
      v39 = sub_22E890024((uint64_t)&v164, (uint64_t *)&v168);
      LODWORD(v169) = 0;
      sub_22E8900C4(v39, (int *)&v169);
      sub_22E903BEC((unsigned int *)&v164);
      sub_22EA3089C(v168);
      sub_22EFC77E8(v168, 1);
      v10 = v168;
    }
  }
LABEL_49:
  if ((*(_BYTE *)(v10 + 29) & 1) != 0)
  {
    sub_22EFC8E88(v10);
    v41 = *(uint64_t **)v40;
    v42 = *(unsigned int *)(v40 + 8);
    v43 = *(uint64_t **)v40;
    if ((_DWORD)v42)
    {
      v44 = 8 * v42;
      v43 = *(uint64_t **)v40;
      while (*(_WORD *)(*v43 + 32) != 366)
      {
        ++v43;
        v44 -= 8;
        if (!v44)
          goto LABEL_76;
      }
    }
    if (v43 != &v41[v42])
    {
      do
      {
        v46 = *v41++;
        v45 = v46;
      }
      while (*(_WORD *)(v46 + 32) != 366);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v45 + 16), 0xA2Du, 0, (uint64_t)&v164);
      v47 = sub_22E890024((uint64_t)&v164, (uint64_t *)&v168);
      LODWORD(v169) = 1;
      sub_22E8900C4(v47, (int *)&v169);
      sub_22E903BEC((unsigned int *)&v164);
      v48 = v168;
      if ((*(_BYTE *)(v168 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v168);
        v50 = *(char **)v49;
        v51 = *(unsigned int *)(v49 + 8);
        if ((_DWORD)v51)
        {
          v52 = &v50[8 * v51];
          v53 = 8 * v51 - 8;
          v54 = *(char **)v49;
          v55 = *(char **)v49;
          while (1)
          {
            v56 = *(_QWORD *)v55;
            v55 += 8;
            if (*(_WORD *)(v56 + 32) == 366)
              break;
            v53 -= 8;
            v54 = v55;
            if (v55 == v52)
              goto LABEL_73;
          }
          if (v55 == v52)
          {
            v52 = v54;
          }
          else
          {
            v57 = 8;
            v52 = v54;
            do
            {
              v58 = *(_QWORD *)&v54[v57];
              if (*(_WORD *)(v58 + 32) != 366)
              {
                *(_QWORD *)v52 = v58;
                v52 += 8;
              }
              v57 += 8;
              v53 -= 8;
            }
            while (v53);
            v50 = *(char **)v49;
          }
        }
        else
        {
          v52 = *(char **)v49;
        }
LABEL_73:
        v59 = (unint64_t)(v52 - v50) >> 3;
        *(_DWORD *)(v49 + 8) = v59;
        if (!(_DWORD)v59)
          *(_DWORD *)(v48 + 28) &= ~0x100u;
      }
      sub_22EFC77E8(v168, 1);
    }
  }
LABEL_76:
  v60 = v168;
  if (v168 && (*(_DWORD *)(v168 + 28) & 0x7F) == 0x37)
  {
    v61 = *(_QWORD *)(v168 + 144) & 6;
    v62 = (_QWORD *)(*(_QWORD *)(v168 + 144) & 0xFFFFFFFFFFFFFFF8);
    v63 = v61 != 4 || v62 == 0;
    if (v63)
    {
      if (v61 != 2 || v62 == 0)
        goto LABEL_88;
    }
    else
    {
      v62 += 2;
    }
    if ((*v62 & 6) == 2
      && !sub_22EFC0EB8(v168)
      && *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 148) == 11)
    {
      sub_22F34933C(a1, v60);
    }
  }
LABEL_88:
  if ((*(_QWORD *)(v168 + 80) & 0x820000000) == 0 && !sub_22EFBF780(v168))
  {
    sub_22EA30480((_QWORD *)a1, v168, 0, (uint64_t)a4);
    if (a4)
    {
      if (*a4)
        return a3;
    }
  }
  v65 = v168;
  *(_QWORD *)(v168 + 80) |= 0x800000000uLL;
  v66 = v65 + 72;
  if (!v65)
    goto LABEL_118;
  v67 = *(_WORD *)(v65 + 80);
  if ((v67 & 0x7Eu) - 58 < 0xFFFFFFFC)
    goto LABEL_118;
  v68 = v67 & 0x7F;
  v69 = -40;
  if (v68 <= 70)
  {
    if (v68 <= 0x18)
    {
      if (v68 == 16)
      {
LABEL_97:
        v69 = -48;
        goto LABEL_113;
      }
      if (((1 << v68) & 0x1066) != 0)
        goto LABEL_113;
      if (v68 == 24)
        goto LABEL_97;
    }
    if (v68 == 70)
    {
LABEL_111:
      v69 = -64;
      goto LABEL_113;
    }
    goto LABEL_109;
  }
  if (v68 == 83)
    goto LABEL_113;
  if (v68 == 71)
  {
    v69 = -56;
    goto LABEL_113;
  }
  if (v68 != 81)
  {
LABEL_109:
    if ((v68 - 52) >= 6)
    {
      if ((v68 - 33) >= 5)
        goto LABEL_97;
      goto LABEL_111;
    }
    v69 = -72;
  }
LABEL_113:
  v70 = *(_QWORD *)(v66 + v69 + 16);
  v71 = (_QWORD *)(v70 & 0xFFFFFFFFFFFFFFF8);
  if ((v70 & 4) != 0)
    v71 = (_QWORD *)*v71;
  if (!v71)
    goto LABEL_118;
  v72 = v71[8];
  if (!v72
    || ((*(unsigned __int16 *)(v72 + 8) | (*(unsigned __int8 *)(v72 + 10) << 16)) & 0x100000) == 0
    || (*(_BYTE *)(v72 + 104) & 4) == 0)
  {
    goto LABEL_118;
  }
  v117 = -40;
  if (v68 <= 70)
  {
    if (v68 <= 0x18)
    {
      if (v68 == 16)
      {
LABEL_245:
        v117 = -48;
        goto LABEL_261;
      }
      if (((1 << v68) & 0x1066) != 0)
        goto LABEL_261;
      if (v68 == 24)
        goto LABEL_245;
    }
    if (v68 == 70)
    {
LABEL_259:
      v117 = -64;
      goto LABEL_261;
    }
    goto LABEL_257;
  }
  if (v68 == 83)
    goto LABEL_261;
  if (v68 == 71)
  {
    v117 = -56;
    goto LABEL_261;
  }
  if (v68 != 81)
  {
LABEL_257:
    if ((v68 - 52) >= 6)
    {
      if ((v68 - 33) >= 5)
        goto LABEL_245;
      goto LABEL_259;
    }
    v117 = -72;
  }
LABEL_261:
  v118 = *(_QWORD *)(v66 + v117 + 16);
  v119 = (_QWORD *)(v118 & 0xFFFFFFFFFFFFFFF8);
  if ((v118 & 4) != 0)
    v119 = (_QWORD *)*v119;
  if (!v119
    || (v120 = v119[8]) == 0
    || ((*(unsigned __int16 *)(v120 + 8) | (*(unsigned __int8 *)(v120 + 10) << 16)) & 0x100000) == 0
    || (*(_QWORD *)(v66 - 32) & 7) != 6
    || *(_DWORD *)(*(_QWORD *)(v66 - 32) & 0xFFFFFFFFFFFFFFF8) != 42
    || (v121 = *(_QWORD *)(v66 + 72), (v121 & 6) != 4)
    || (v122 = v121 & 0xFFFFFFFFFFFFFFF8) == 0
    || *(_QWORD *)(v122 + 16) < 8uLL)
  {
LABEL_118:
    sub_22E904974(a1);
    goto LABEL_119;
  }
  v123 = *(_WORD *)(a3 + 80) & 0x7F;
  v124 = -40;
  if (v123 > 0x46)
  {
    if (v123 != 83)
    {
      if (v123 == 71)
      {
        v124 = -56;
        goto LABEL_288;
      }
      if (v123 != 81)
      {
LABEL_282:
        if (v123 - 52 < 6)
        {
          v124 = -72;
          goto LABEL_288;
        }
        if (v123 - 33 < 5)
          goto LABEL_284;
LABEL_287:
        v124 = -48;
      }
    }
  }
  else
  {
    if (v123 > 0x18)
    {
LABEL_276:
      if (v123 == 70)
      {
LABEL_284:
        v124 = -64;
        goto LABEL_288;
      }
      goto LABEL_282;
    }
    if (v123 == 16)
      goto LABEL_287;
    if (((1 << v123) & 0x1066) == 0)
    {
      if (v123 == 24)
        goto LABEL_287;
      goto LABEL_276;
    }
  }
LABEL_288:
  v125 = *(_QWORD *)(a3 + 72 + v124 + 16);
  v126 = (_QWORD *)(v125 & 0xFFFFFFFFFFFFFFF8);
  if ((v125 & 4) != 0)
    v126 = (_QWORD *)*v126;
  if (v126)
    v127 = (uint64_t)(v126 - 8);
  else
    v127 = 0;
  v128 = sub_22F3090C8(a1);
  *(_QWORD *)(v128 + 1488) = a3;
  *(_QWORD *)(v128 + 1480) = v127;
  v129 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (!v129 || *(unsigned __int8 *)(v129 + 16) - 27 <= 0xFFFFFFFD)
    v129 = sub_22F10CF48(v129);
  *(_QWORD *)(v128 + 1416) = *(_QWORD *)(v129 + 24);
  v130 = (*(_DWORD *)(*(_QWORD *)(v127 + 128) + 104) >> 3) & 3;
  if (v130 != 3)
    *(_DWORD *)(v128 + 1224) = v130;
  v131 = *(_QWORD *)(a3 + 152);
  v132 = *(_QWORD *)(a3 + 40) & 7;
  if ((_DWORD)v132 == 7)
  {
    v133 = *(_DWORD *)(*(_QWORD *)(a3 + 40) & 0xFFFFFFFFFFFFFFF8);
    if (v133 >= 3)
      v133 = 3;
    LODWORD(v132) = v133 | 8;
  }
  if ((_DWORD)v132 != 6)
    v131 = 0;
  *(_QWORD *)(v128 + 1496) = v131;
  *(_BYTE *)(v128 + 1512) = sub_22E8FB7BC(a3) ^ 1;
  v134 = sub_22EFC3B90(v127);
  v135 = *(_QWORD *)(v127 + 128);
  if (v135)
  {
    if (((*(unsigned __int16 *)(v135 + 8) | (*(unsigned __int8 *)(v135 + 10) << 16)) & 0x100000) != 0)
    {
      v136 = ((unint64_t)*(unsigned int *)(v135 + 104) >> 5) & 0x7FFF;
      if ((_DWORD)v136)
      {
        v137 = v134;
        v138 = *(_QWORD **)(v135 + 128);
        v161 = &v138[2 * v136];
        do
        {
          v139 = *v138;
          v140 = (_DWORD *)(*v138 & 0xFFFFFFFFFFFFFFF8);
          if (v140 && (v140[7] & 0x7Fu) - 60 <= 6)
          {
            if ((v140[7] & 0x7F) == 0x40
              || (*((_BYTE *)v140 + 98) & 1) == 0
              || (sub_22EE0A7A4(*(_QWORD *)(a1 + 12024), *v138 & 0xFFFFFFFFFFFFFFF8, *v138 & 0xFFFFFFFFFFFFFFF8),
                  v139 = *v138,
                  *v138 >= 4uLL))
            {
              v152 = v139 & 0xFFFFFFFFFFFFFFFCLL;
              v153 = v139 & 2;
              v63 = v153 == 0;
              v146 = v153 >> 1;
              if (v63)
                v154 = 3;
              else
                v154 = 2;
              if (v152 != 4)
                v146 = v154;
            }
            else
            {
              v146 = 4;
            }
            v155 = *(_QWORD *)(v137 + 48);
            v169 = v140;
            v156 = v138[1];
            v164 = v140;
            v165 = v156;
            v166 = v155;
            v167 = v167 & 0x80 | (v146 == 3) | 4;
            v157 = (_OWORD *)sub_22E78DF7C(v128 + 1264, (unint64_t)&v164, 1);
            v158 = (_OWORD *)(*(_QWORD *)(v128 + 1264) + 32 * *(unsigned int *)(v128 + 1272));
            v159 = v157[1];
            *v158 = *v157;
            v158[1] = v159;
            v160 = *(_DWORD *)(v128 + 1272) + 1;
            *(_DWORD *)(v128 + 1272) = v160;
            *((_DWORD *)sub_22F283EC0((uint64_t *)(v128 + 1232), &v169) + 2) = v160;
          }
          else
          {
            v141 = *((_DWORD *)v138 + 2);
            if ((v139 & 0xFFFFFFFFFFFFFFFCLL) == 4)
            {
              v142 = *(_QWORD *)(v137 + 48);
              v165 = v141;
              v166 = v142;
              v167 = v167 & 0x80 | ((v139 & 2) == 0) | 8;
              v143 = (_OWORD *)sub_22E78DF7C(v128 + 1264, (unint64_t)&v164, 1);
              v144 = (_OWORD *)(*(_QWORD *)(v128 + 1264) + 32 * *(unsigned int *)(v128 + 1272));
              v145 = v143[1];
              *v144 = *v143;
              v144[1] = v145;
              LODWORD(v144) = *(_DWORD *)(v128 + 1272) + 1;
              *(_DWORD *)(v128 + 1272) = (_DWORD)v144;
              *(_DWORD *)(v128 + 1256) = (_DWORD)v144;
            }
            else
            {
              v147 = (void *)(*(_QWORD *)(v137 + 72) & 0xFFFFFFFFFFFFFFFCLL);
              if ((~*(_DWORD *)(v137 + 72) & 3) != 0)
                v147 = 0;
              v148 = *(_QWORD *)(v137 + 48);
              v164 = v147;
              v165 = v141;
              v166 = v148;
              v167 = v167 & 0x80 | 3;
              v149 = (_OWORD *)sub_22E78DF7C(v128 + 1264, (unint64_t)&v164, 1);
              v150 = (_OWORD *)(*(_QWORD *)(v128 + 1264) + 32 * *(unsigned int *)(v128 + 1272));
              v151 = v149[1];
              *v150 = *v149;
              v150[1] = v151;
              ++*(_DWORD *)(v128 + 1272);
            }
          }
          do
            v137 = *(_QWORD *)(v137 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v137 && (*(_DWORD *)(v137 + 28) & 0x7Fu) - 49 > 2);
          v138 += 2;
        }
        while (v138 != v161);
      }
    }
  }
LABEL_119:
  v73 = sub_22EFC01DC(v168, 0);
  if (!v73)
    goto LABEL_126;
  v74 = v73;
  v75 = v73 - 2024;
  if (v73 < 0x7E8)
  {
    v76 = &off_24FAC8C40;
    v77 = &(&off_24FAC8C40)[6 * v73];
LABEL_122:
    if (strchr(v77[2], 102))
      goto LABEL_126;
    v78 = &v76[6 * v74];
    goto LABEL_124;
  }
  v114 = *(uint64_t **)(*(_QWORD *)(a1 + 88) + 15208);
  v115 = v114[1];
  if (v115 + 2024 <= (unint64_t)v73)
  {
    v74 = v73 - v115 - 2024;
    v76 = (char **)v114[2];
    v77 = &v76[6 * v74];
    goto LABEL_122;
  }
  v116 = *v114;
  if (strchr(*(char **)(*v114 + 48 * v75 + 16), 102))
    goto LABEL_126;
  v78 = (char **)(v116 + 48 * v75);
LABEL_124:
  if (!strchr(v78[2], 105))
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v168 + 24), 0xB96u, 0, (uint64_t)&v164);
    sub_22E890024((uint64_t)&v164, (uint64_t *)&v168);
    sub_22E903BEC((unsigned int *)&v164);
    sub_22EFC77E8(v168, 1);
  }
LABEL_126:
  v79 = *(_QWORD *)(*(_QWORD *)(v168 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v79)
    v80 = *(unsigned __int8 *)(v79 + 16) - 27 > 0xFFFFFFFD;
  else
    v80 = 0;
  if (!v80)
    v79 = sub_22F10CF48(v79);
  v81 = *(_QWORD *)(v79 + 24);
  v82 = *(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v82 + 17) & 4) == 0)
  {
    v83 = *(_QWORD *)(*(_QWORD *)(v82 + 8) & 0xFFFFFFFFFFFFFFF0);
    if ((!v83 || (*(_DWORD *)(v83 + 16) & 0xFF800FF) != 86507531) && a5 != 2 && (*(_DWORD *)(v168 + 28) & 0x80) == 0)
    {
      v85 = *(_DWORD *)(v168 + 24);
      v164 = &unk_24FAB6EF8;
      LODWORD(v165) = 3512;
      if (sub_22EE8B0B0(a1, v85, v81))
        sub_22EFC77E8(v168, 1);
    }
  }
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 104) & 0x20) != 0
    && (*(_BYTE *)(*(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0
    && (*(_BYTE *)(v168 + 28) & 0x80) == 0)
  {
    v86 = sub_22EFBAFDC(v168);
    if ((sub_22EA57460((_QWORD *)a1, v81, v86, v168) & 1) == 0)
      sub_22EFC77E8(v168, 1);
  }
  if (a2)
  {
    if (v168)
      v87 = v168 + 72;
    else
      v87 = 0;
    *(_QWORD *)(a1 + 216) = v87;
    a2[45] = v87;
  }
  if (a5 != 2)
  {
    v88 = *(uint64_t **)(v168 + 120);
    v89 = *(_QWORD *)(*(_QWORD *)(v168 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (v89)
      v90 = *(_BYTE *)(v89 + 16) == 26;
    else
      v90 = 0;
    if (v90
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v89 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
      && (v89 = sub_22F10CF48(v89)) != 0)
    {
      v91 = (unsigned __int16)(*(_QWORD *)(v89 + 16) >> 38);
    }
    else
    {
      v91 = 0;
    }
    sub_22E98BD04(a1, v88, v91, 1, v168);
  }
  if (a2)
  {
    v92 = v168;
    if ((*(_WORD *)(v168 + 80) & 0x80) != 0)
      sub_22EFCC320(v168 + 72);
    for (i = *(_QWORD *)(v92 + 88); i; i = *(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8)
    {
      v94 = *(_DWORD *)(i + 28);
      if ((v94 & 0x7Fu) - 75 >= 0xFFFFFFC2)
      {
        if (*(_QWORD *)(i + 40))
        {
          sub_22EA0483C(a1, i, a2, 0);
          v94 = *(_DWORD *)(i + 28);
        }
        if ((v94 & 0x7F) == 0x21)
        {
          v95 = sub_22E49F9AC(i);
          sub_22EFC3500(i);
          if (v95)
          {
LABEL_167:
            sub_22EA0483C(a1, v95, a2, 0);
            while (1)
            {
              v95 = *(_QWORD *)(v95 + 8) & 0xFFFFFFFFFFFFFFF8;
              if (!v95)
                break;
              if ((*(_DWORD *)(v95 + 28) & 0x7F) == 0x43)
                goto LABEL_167;
            }
          }
        }
      }
    }
  }
  v96 = *(unint64_t **)(v168 + 120);
  v97 = *(_QWORD *)(*(_QWORD *)(v168 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v97)
    v98 = *(_BYTE *)(v97 + 16) == 26;
  else
    v98 = 0;
  if (v98
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v97 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
    && (v97 = sub_22F10CF48(v97)) != 0)
  {
    v99 = *(_QWORD *)(v97 + 16);
    if ((v99 & 0x3FFFC000000000) != 0)
    {
      v100 = 8 * (unsigned __int16)(v99 >> 38);
      do
      {
        v101 = *v96;
        if (v168)
          v102 = v168 + 72;
        else
          v102 = 0;
        *(_QWORD *)(v101 + 16) = v102 & 0xFFFFFFFFFFFFFFFBLL;
        if (a2)
        {
          if (*(_QWORD *)(v101 + 40) >= 8uLL && (*(_QWORD *)(v101 + 40) & 7) == 0)
          {
            sub_22EA2018C(a1, (uint64_t)a2, v101);
            sub_22EA0483C(a1, v101, a2, 1);
          }
        }
        ++v96;
        v100 -= 8;
      }
      while (v100);
    }
  }
  v104 = *(_QWORD *)(*(_QWORD *)(v168 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v104)
    v105 = *(_BYTE *)(v104 + 16) == 26;
  else
    v105 = 0;
  if (v105
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v104 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
    && sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(v168 + 48) & 0xFFFFFFFFFFFFFFF0)))
  {
    sub_22EB14850(a1, *(unsigned int *)(a3 + 24));
  }
  if (sub_22E49F808(v168) && (*(_BYTE *)(v168 + 82) & 1) == 0)
  {
    v106 = *(_QWORD *)(v168 + 144) & 6;
    v107 = (_DWORD *)(*(_QWORD *)(v168 + 144) & 0xFFFFFFFFFFFFFFF8);
    if (v106 != 4 || v107 == 0)
    {
      if (v106 != 2 || v107 == 0)
        goto LABEL_209;
    }
    else
    {
      v107 += 4;
    }
    if (((((*v107 >> 1) & 3) + 1) & 0xFFFFFFFD) != 0)
      goto LABEL_211;
LABEL_209:
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v168 + 24), 0xAFAu, 0, (uint64_t)v163);
    sub_22E903BEC(v163);
LABEL_223:
    sub_22EFC77E8(v168, 1);
    return a3;
  }
LABEL_211:
  v164 = (void *)a3;
  sub_22EA2DB10(a1, (unint64_t *)&v164, 1uLL);
  v110 = *(_QWORD *)(a1 + 224);
  if (!v110)
    v110 = *(_QWORD *)(a1 + 216);
  v111 = *(_WORD *)(v110 + 8) & 0x7F;
  v112 = v111 != 20 && (v111 - 24) >= 0xFFFFFFFB;
  if (v112 && v111 != 21)
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v168 + 24), 0x19D1u, 0, (uint64_t)v162);
    sub_22E903BEC(v162);
  }
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 104) & 0x20) != 0
    && (*(_BYTE *)(v168 + 28) & 0x80) == 0
    && !sub_22E9924A0(a1, v168))
  {
    goto LABEL_223;
  }
  return a3;
}

uint64_t sub_22EA30470(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 96) + 32))(*(_QWORD *)(a1 + 96));
}

uint64_t sub_22EA30480(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31[25];
  int v32;
  unint64_t v33[12];
  unint64_t v34;
  uint64_t v35;

  v5 = a3;
  v34 = a3;
  v35 = a2;
  if (!a3)
  {
    result = sub_22EFBF86C(a2, &v34, 1);
    if (!(_DWORD)result)
      return result;
    v5 = v34;
  }
  if ((*(_WORD *)(v5 + 30) & 0x180) != 0)
  {
    v9 = sub_22EFBF824(v5);
    if (v9)
    {
      v10 = v9;
      v11 = sub_22EFBF824(a2);
      if (v11)
      {
        if (v11 == v10
          || (v12 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v11 + 32))(v11),
              v12 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)v10 + 32))(v10)))
        {
          v13 = *(_QWORD *)(v5 + 16);
          v14 = v13 & 0xFFFFFFFFFFFFFFF8;
          if ((v13 & 4) != 0)
            v14 = *(_QWORD *)(v14 + 8);
          v15 = *(_WORD *)(v14 + 8) & 0x7F;
          v16 = -40;
          if (v15 > 0x46)
          {
            switch(v15)
            {
              case 'S':
                goto LABEL_26;
              case 'G':
                v16 = -56;
                goto LABEL_26;
              case 'Q':
LABEL_26:
                v17 = *(_QWORD *)(a2 + 16);
                v18 = v17 & 0xFFFFFFFFFFFFFFF8;
                if ((v17 & 4) != 0)
                  v18 = *(_QWORD *)(v18 + 8);
                result = v14 + v16;
                v19 = *(_WORD *)(v18 + 8) & 0x7F;
                v20 = -40;
                if (v19 > 0x46)
                {
                  switch(v19)
                  {
                    case 'S':
                      goto LABEL_43;
                    case 'G':
                      v20 = -56;
                      goto LABEL_43;
                    case 'Q':
                      goto LABEL_43;
                  }
                }
                else
                {
                  if (v19 <= 0x18)
                  {
                    if (v19 == 16)
                      goto LABEL_31;
                    if (((1 << v19) & 0x1066) != 0)
                      goto LABEL_43;
                    if (v19 == 24)
                    {
LABEL_31:
                      v20 = -48;
LABEL_43:
                      v21 = v18 + v20;
                      if (result == v18 + v20)
                        return result;
                      v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 32))(result);
                      result = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v21 + 32))(v21);
                      if (v22 == result)
                        return result;
                      goto LABEL_45;
                    }
                  }
                  if (v19 == 70)
                  {
LABEL_41:
                    v20 = -64;
                    goto LABEL_43;
                  }
                }
                if (v19 - 52 < 6)
                {
                  v20 = -72;
                  goto LABEL_43;
                }
                if (v19 - 33 < 5)
                  goto LABEL_41;
                goto LABEL_31;
            }
          }
          else
          {
            if (v15 <= 0x18)
            {
              if (v15 == 16)
              {
LABEL_14:
                v16 = -48;
                goto LABEL_26;
              }
              if (((1 << v15) & 0x1066) != 0)
                goto LABEL_26;
              if (v15 == 24)
                goto LABEL_14;
            }
            if (v15 == 70)
            {
LABEL_24:
              v16 = -64;
              goto LABEL_26;
            }
          }
          if (v15 - 52 >= 6)
          {
            if (v15 - 33 >= 5)
              goto LABEL_14;
            goto LABEL_24;
          }
          v16 = -72;
          goto LABEL_26;
        }
      }
    }
  }
LABEL_45:
  v23 = a1[9];
  result = sub_22EA0E0E4(v5);
  if ((result & 1) == 0 && (*(_DWORD *)(v23 + 52) & 0x80) == 0
    || (*(_BYTE *)(v23 + 1) & 1) != 0
    || (*(_QWORD *)(v5 + 80) & 0x2E000) != 0x22000)
  {
    result = (uint64_t)sub_22E3BA914((llvm::SmallPtrSetImplBase *)(a1 + 1091), (void *)v5);
    v24 = a1[1092];
    v25 = 8744;
    if (v24 == a1[1091])
      v25 = 8748;
    if (result == v24 + 8 * *(unsigned int *)((char *)a1 + v25))
    {
      if (a4
        && (v33[0] = 0, (sub_22EE8B858((uint64_t)a1, v5, v33, 0) & 1) == 0)
        && ((v27 = sub_22EFB948C(v5), v27 == 1)
         || v27 == 4
         || (*(_BYTE *)(v5 + 82) & 1) != 0
         || (v28 = *(_QWORD *)(v5 + 144), v28 >= 8) && (v28 & 6) == 0
         || (v29 = *(_QWORD *)(v5 + 56), (v29 & 4) != 0) && *(_DWORD *)((v29 & 0xFFFFFFFFFFFFFFF8) + 16)))
      {
        *(_BYTE *)a4 = 1;
        *(_QWORD *)(a4 + 8) = v5;
        v30 = *(_QWORD *)(v5 + 144);
        if ((v30 & 6) == 0 && (v30 & 0xFFFFFFFFFFFFFFF8) != 0)
          sub_22EC61DA0((uint64_t)a1, v30 & 0xFFFFFFFFFFFFFFF8);
        return sub_22EC61DA0((uint64_t)a1, v5);
      }
      else
      {
        if ((*(_BYTE *)(a1[9] + 3) & 0x80) != 0 && (*(_QWORD *)(v5 + 80) & 0x2E000) == 0x22000)
        {
          sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x1219u, 0, (uint64_t)v33);
          v26 = sub_22E890024((uint64_t)v33, &v35);
          v32 = (*(_DWORD *)a1[9] >> 8) & 1;
          sub_22E89519C(v26, (unsigned int *)&v32);
        }
        else
        {
          sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x1214u, 0, (uint64_t)v33);
          sub_22E890024((uint64_t)v33, &v35);
        }
        sub_22E903BEC((unsigned int *)v33);
        sub_22E8FCA40(a1, *(_DWORD *)(v5 + 24), 0x6Du, 0, (uint64_t)v31);
        sub_22E903BEC(v31);
        return sub_22EFC77E8(v35, 1);
      }
    }
  }
  return result;
}

void sub_22EA3089C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 362)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 362)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

uint64_t sub_22EA30968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v9;

  if (!a2 || (v4 = a2, (*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 <= 0xFFFFFFF9))
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) != 0x1D)
      return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 96) + 160))(*(_QWORD *)(a1 + 96), a2);
    v4 = *(_QWORD *)(a2 + 48);
    if (!v4)
      return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 96) + 160))(*(_QWORD *)(a1 + 96), a2);
  }
  if ((*(_BYTE *)(v4 + 83) & 0xC0) != 0)
    return 0;
  v5 = *(_QWORD *)(*(_QWORD *)(v4 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (!v5 || *(unsigned __int8 *)(v5 + 16) - 27 <= 0xFFFFFFFD)
    v5 = sub_22F10CF48(v5);
  v7 = *(_QWORD *)(*(_QWORD *)(v5 + 24) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  if (sub_22F110500((uint64_t)&v9, v7))
    return 0;
  else
    return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 96) + 160))(*(_QWORD *)(a1 + 96), a2);
}

unint64_t sub_22EA30A30(unint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_22EA30A38(a1, a2, a3, 0);
}

unint64_t sub_22EA30A38(unint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BYTE *v15;
  __int16 v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _WORD *v23;
  uint64_t v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  unint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unsigned int v41;
  _BYTE *v42;
  llvm *v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _BYTE *v70;
  char v71;
  uint64_t v72;
  _BYTE *v73;
  BOOL v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE *v81;
  uint64_t v82;
  _BYTE *v83;
  int v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _WORD *v95;
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unsigned int v112;
  BOOL v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int *v132;
  _QWORD *v133;
  unint64_t v134;
  unint64_t v135;
  unint64_t v136;
  unint64_t v137;
  BOOL v138;
  unsigned int v139;
  uint64_t v140;
  BOOL v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  unsigned int *v149;
  unsigned int *v150;
  _QWORD *v151;
  unsigned int v152;
  _BYTE *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int v164;
  unsigned int v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t v169;
  _DWORD *v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  BOOL v174;
  unint64_t v175;
  unsigned int v176;
  uint64_t v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD *v182;
  unsigned int v183;
  uint64_t v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  unint64_t v189;
  _BYTE *v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t *v194;
  _BYTE *v195;
  _BYTE *v196;
  uint64_t v197;
  uint64_t v198;
  char v199;
  __int16 v200;
  int v201;
  uint64_t v202;
  unsigned __int8 *v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t *v207;
  char v208;
  uint64_t v209;
  BOOL v210;
  int v211;
  int v213;
  uint64_t **v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD *v223;
  uint64_t v224;
  unsigned int v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  uint64_t v230;
  unsigned int v231;
  uint64_t v232;
  BOOL v233;
  uint64_t v234;
  unsigned int *v235;
  unint64_t v236;
  unint64_t v237;
  int v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t v244;
  uint64_t v245;
  int *v246;
  _QWORD *v247;
  unint64_t v248;
  uint64_t *v249;
  unsigned int *v250;
  BOOL v251;
  _BYTE *v252;
  uint64_t v253;
  unsigned int v254[24];
  unsigned int v255[24];
  _BYTE *v256;
  uint64_t v257;
  unsigned int v258[24];
  unsigned int v259[24];
  unsigned int v260[24];
  unsigned int v261[24];
  _BYTE v262[96];
  unsigned int v263[24];
  unsigned int v264[24];
  unsigned int v265[25];
  int v266;
  _BYTE *v267;
  uint64_t v268;
  _BYTE v269[49];
  _BYTE v270[24];
  __int128 v271;
  uint64_t v272;
  char v273;
  uint64_t v274[2];
  int v275;

  v5 = a2;
  v6 = a1;
  v268 = a3;
  v7 = *(unsigned int *)(a1 + 1904);
  if ((_DWORD)v7)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * v7 - 8);
    if (!a2)
      goto LABEL_12;
  }
  else
  {
    v8 = 0;
    if (!a2)
      goto LABEL_12;
  }
  v9 = *(_DWORD *)(a2 + 28);
  v10 = (_BYTE *)a2;
  if ((v9 & 0x7Eu) - 58 <= 0xFFFFFFF9)
  {
    if ((v9 & 0x7F) == 0x1D)
    {
      v10 = *(_BYTE **)(a2 + 48);
      goto LABEL_8;
    }
LABEL_12:
    v267 = 0;
    v11 = v8 + 8;
    goto LABEL_13;
  }
LABEL_8:
  v267 = v10;
  v11 = v8 + 8;
  if ((*(_BYTE *)(v8 + 9) & 4) != 0 && v10 && !sub_22E47DCC4((uint64_t)v10))
  {
    v12 = *(_QWORD *)(v6 + 88);
    memset(v270, 0, sizeof(v270));
    LODWORD(v271) = 0;
    BYTE6(v271) = 120;
    WORD2(v271) = 0;
    v13 = sub_22F3A0788(v12, v270);
    sub_22EFCA95C((uint64_t)v10, v13);
  }
LABEL_13:
  v14 = *(_DWORD *)(v6 + 12072);
  v266 = v14;
  if ((*(_QWORD *)(*(_QWORD *)(v6 + 72) + 8) & 0x400000000000000) != 0 && *(_DWORD *)(v8 + 12))
    sub_22E9FB558(v6, (uint64_t)v267, &v268);
  v15 = v267;
  if (!v267)
  {
    if (!v5 || (v19 = *(_DWORD *)(v5 + 28), (v19 & 0x7F) != 0x18))
    {
      sub_22E904AD8(v6, 0, (int *)v5, 0, (uint64_t *)&v256);
      v42 = v256;
      v256 = 0;
      if (v42)
      {
        if ((v42[8] & 7) != 0 || *(_QWORD *)(v257 + 1888))
          (*(void (**)(_BYTE *))(*(_QWORD *)v42 + 8))(v42);
        else
          *(_QWORD *)(v257 + 1888) = v42;
      }
      sub_22EB48E64(v6);
      return 0;
    }
    v20 = v268;
    *(_QWORD *)(v5 + 112) = v268;
    if ((v19 & 0x80) == 0)
    {
      sub_22EA2EA80(v6, *(uint64_t **)(v5 + 96), *(unsigned int *)(v5 + 104), *(_QWORD *)(v5 + 80), v5);
      if (v20)
      {
        v21 = *(unsigned int *)(v8 + 136);
        if ((_DWORD)v21)
        {
          v22 = *(_QWORD **)(v8 + 128);
          do
          {
            v23 = (_WORD *)*v22;
            if ((*(_WORD *)*v22 & 0x100) != 0)
            {
              v24 = *((_QWORD *)v23 + 2);
              if (v24)
              {
                if ((*(_DWORD *)(v24 + 28) & 0x7F) == 0x40 || (*(_BYTE *)(v24 + 97) & 4) == 0)
                  *((_QWORD *)v23 + 2) = 0;
              }
            }
            ++v22;
            --v21;
          }
          while (v21);
        }
      }
    }
    v25 = *(_DWORD *)v11;
    if ((*(_DWORD *)v11 & 0x1000) != 0)
    {
      v65 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v5 + 64))(v5);
      if (v65)
        sub_22F0D60E4(v65);
      else
        v66 = *(_DWORD *)(v5 + 108);
      sub_22E8FCA40((_QWORD *)v6, v66, 0x1AA7u, 0, (uint64_t)v270);
      v274[0] = *(_QWORD *)(v5 + 40);
      sub_22F1D3A38(v274, v269);
      sub_22F2F3734((uint64_t)v270, (void **)v269);
      if ((v269[23] & 0x80000000) != 0)
        operator delete(*(void **)v269);
      sub_22E903BEC((unsigned int *)v270);
      v25 = *(_DWORD *)v11 & 0xFFFFEFFF;
      *(_DWORD *)v11 = v25;
      if ((v25 & 0x4000) == 0)
      {
LABEL_40:
        if ((v25 & 0x10000) != 0)
        {
          if (!sub_22EFCA12C(v5))
          {
            sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(v5 + 24), 0x1AB6u, 0, (uint64_t)v258);
            sub_22E903BEC(v258);
          }
          *(_DWORD *)v11 &= ~0x10000u;
        }
        v274[0] = 0;
        v274[1] = 0;
        v275 = 0;
        v27 = *(unsigned int *)(v6 + 8640);
        if (!(_DWORD)v27)
        {
          v43 = 0;
LABEL_94:
          v44 = llvm::deallocate_buffer(v43, (void *)(16 * v27));
          if (!v20)
          {
            v45 = 0;
            goto LABEL_505;
          }
          v251 = 0;
          goto LABEL_420;
        }
        v28 = *(unsigned int **)(v6 + 8632);
        v250 = &v28[4 * v27];
LABEL_46:
        v29 = *((_QWORD *)v28 + 1);
        *(_QWORD *)v270 = v29;
        if (!v275)
          goto LABEL_47;
        v36 = v275 - 1;
        v37 = (v275 - 1) & ((v29 >> 4) ^ (v29 >> 9));
        v38 = *(_QWORD *)(v274[0] + 16 * v37);
        if (v29 == v38)
        {
LABEL_72:
          if (*((_BYTE *)sub_22F309434((uint64_t)v274, (uint64_t *)v270) + 8))
            goto LABEL_75;
          goto LABEL_78;
        }
        v40 = 1;
        while (v38 != -4096)
        {
          v41 = v37 + v40++;
          v37 = v41 & v36;
          v38 = *(_QWORD *)(v274[0] + 16 * (v41 & v36));
          if (v29 == v38)
            goto LABEL_72;
        }
        while (1)
        {
LABEL_47:
          if ((*(_DWORD *)(v29 + 48) & 0x20000) == 0)
          {
            *((_BYTE *)sub_22F309434((uint64_t)v274, (uint64_t *)v270) + 8) = 1;
LABEL_75:
            sub_22E8FCA40((_QWORD *)v6, *v28, 0x1A09u, 0, (uint64_t)v270);
            v39 = *v28;
            v269[20] = 0;
            *(_QWORD *)&v269[12] = 0;
            *(_QWORD *)v269 = v39 | (v39 << 32);
            v269[8] = 0;
            memset(&v269[30], 0, 17);
            qmemcpy(&v269[24], "self->", 6);
            v269[47] = 6;
            v269[48] = 0;
            sub_22E890748((uint64_t)v270, v269);
            if ((v269[47] & 0x80000000) != 0)
              operator delete(*(void **)&v269[24]);
            sub_22E903BEC((unsigned int *)v270);
LABEL_78:
            v28 += 4;
            if (v28 == v250)
            {
              LODWORD(v27) = v275;
              v43 = (llvm *)v274[0];
              goto LABEL_94;
            }
            goto LABEL_46;
          }
          v30 = *(_DWORD *)(v29 + 48) & 0x7F;
          v31 = -40;
          if (v30 > 0x46)
          {
            if (v30 != 83)
            {
              if (v30 == 71)
              {
                v31 = -56;
              }
              else if (v30 != 81)
              {
                goto LABEL_59;
              }
            }
          }
          else
          {
            if (v30 > 0x18)
              goto LABEL_58;
            if (v30 == 16)
              goto LABEL_51;
            if (((1 << v30) & 0x1066) != 0)
              goto LABEL_65;
            if (v30 == 24)
            {
LABEL_51:
              v31 = -48;
            }
            else
            {
LABEL_58:
              if (v30 != 70)
              {
LABEL_59:
                v32 = v30 - 52;
                if (v30 - 33 >= 5)
                  v33 = -48;
                else
                  v33 = -64;
                if (v32 >= 6)
                  v31 = v33;
                else
                  v31 = -72;
                goto LABEL_65;
              }
              v31 = -64;
            }
          }
LABEL_65:
          v34 = *(_QWORD *)(v29 + 40 + v31 + 16);
          v35 = (_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF8);
          if ((v34 & 4) != 0)
            v35 = (_QWORD *)*v35;
          v29 = sub_22F3B1300((unint64_t)v35);
          if (!v29)
          {
            *((_BYTE *)sub_22F309434((uint64_t)v274, (uint64_t *)v270) + 8) = 0;
            goto LABEL_78;
          }
        }
      }
    }
    else if ((v25 & 0x4000) == 0)
    {
      goto LABEL_40;
    }
    *(_QWORD *)v270 = 0;
    sub_22EFDC2D0(v5, (uint64_t *)v270);
    if (!sub_22EFCA12C(v5))
    {
      if ((v26 = sub_22EFDC9F0(v5)) == 0
        || (v107 = sub_22F3B46CC(v26)) == 0
        || ((v108 = *(_QWORD *)(v107 + 40), (v108 & 7) != 0) ? (v109 = 0) : (v109 = v108 & 0xFFFFFFFFFFFFFFF8),
            v109 != sub_22F3E8F0C(*(_QWORD *)(v6 + 3440), 0)))
      {
        sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(v5 + 24), 0x1A9Bu, 0, (uint64_t)v260);
        sub_22E903BEC(v260);
        sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(*(_QWORD *)v270 + 24), 0x16EEu, 0, (uint64_t)v259);
        sub_22E903BEC(v259);
      }
    }
    v25 = *(_DWORD *)v11 & 0xFFFFBFFF;
    *(_DWORD *)v11 = v25;
    goto LABEL_40;
  }
  v16 = *((_WORD *)v267 + 40);
  if ((v16 & 0x7Eu) - 54 > 3)
    goto LABEL_108;
  v17 = v16 & 0x7F;
  v18 = -40;
  if (v17 <= 70)
  {
    if (v17 <= 0x18)
    {
      if (v17 == 16)
      {
LABEL_21:
        v18 = -48;
        goto LABEL_104;
      }
      if (((1 << v17) & 0x1066) != 0)
        goto LABEL_104;
      if (v17 == 24)
        goto LABEL_21;
    }
    if (v17 == 70)
    {
LABEL_102:
      v18 = -64;
      goto LABEL_104;
    }
    goto LABEL_100;
  }
  if (v17 == 83)
    goto LABEL_104;
  if (v17 == 71)
  {
    v18 = -56;
    goto LABEL_104;
  }
  if (v17 != 81)
  {
LABEL_100:
    if ((v17 - 52) >= 6)
    {
      if ((v17 - 33) >= 5)
        goto LABEL_21;
      goto LABEL_102;
    }
    v18 = -72;
  }
LABEL_104:
  v46 = *(_QWORD *)&v267[v18 + 88];
  v47 = (_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF8);
  if ((v46 & 4) != 0)
  {
    v47 = (_QWORD *)*v47;
    if (v47)
      goto LABEL_106;
LABEL_108:
    v251 = 0;
    goto LABEL_109;
  }
  if (!v47)
    goto LABEL_108;
LABEL_106:
  v48 = v47[8];
  if (!v48 || ((*(unsigned __int16 *)(v48 + 8) | (*(unsigned __int8 *)(v48 + 10) << 16)) & 0x100000) == 0)
    goto LABEL_108;
  if ((*((_QWORD *)v267 + 5) & 7) == 6)
    v238 = *(_DWORD *)(*((_QWORD *)v267 + 5) & 0xFFFFFFFFFFFFFFF8);
  else
    v238 = 0;
  v251 = v238 == 42;
LABEL_109:
  v49 = v268;
  v50 = *((_QWORD *)v267 + 10);
  *((_QWORD *)v267 + 10) = v50 & 0xFFFFFFFFF7FFFFFFLL;
  *((_QWORD *)v15 + 16) = v49;
  if (v49)
  {
    sub_22F0D60E4(v49);
    *((_DWORD *)v15 + 35) = v51;
  }
  *((_QWORD *)v15 + 10) = v50 & 0xFFFFFFF7F7FFFFFFLL;
  v52 = **(_QWORD **)(v6 + 72);
  if ((v52 & 0x400) == 0)
  {
    if ((v52 & 0x200) == 0 || (v50 & 0x7E) - 54 > 3)
      goto LABEL_165;
    v53 = v50 & 0x7F;
    v54 = -40;
    if (v53 > 0x46)
    {
      switch(v53)
      {
        case 'S':
          goto LABEL_161;
        case 'G':
          v54 = -56;
          goto LABEL_161;
        case 'Q':
          goto LABEL_161;
      }
    }
    else
    {
      if (v53 <= 0x18)
      {
        if (v53 == 16)
          goto LABEL_117;
        if (((1 << v53) & 0x1066) != 0)
          goto LABEL_161;
        if (v53 == 24)
        {
LABEL_117:
          v54 = -48;
LABEL_161:
          v67 = *(_QWORD *)&v15[v54 + 88];
          v68 = (_QWORD *)(v67 & 0xFFFFFFFFFFFFFFF8);
          if ((v67 & 4) != 0)
          {
            v68 = (_QWORD *)*v68;
            if (!v68)
              goto LABEL_165;
          }
          else if (!v68)
          {
            goto LABEL_165;
          }
          v69 = v68[8];
          if (v69)
          {
            if (((*(unsigned __int16 *)(v69 + 8) | (*(unsigned __int8 *)(v69 + 10) << 16)) & 0x100000) != 0
              && (*((_QWORD *)v15 + 5) & 7) == 6
              && *(_DWORD *)(*((_QWORD *)v15 + 5) & 0xFFFFFFFFFFFFFFF8) == 42)
            {
              v239 = sub_22E904A34(v6, 0);
              if (*(_BYTE *)(v239 + 1408))
              {
                v240 = v239;
                sub_22EC52D88(v6, v239);
                v241 = *(_QWORD *)(v240 + 1416);
                if (v241 <= 0xF)
                  v241 = *(_QWORD *)(*(_QWORD *)(v6 + 88) + 16392);
                v242 = *(_QWORD *)(*((_QWORD *)v15 + 6) & 0xFFFFFFFFFFFFFFF0);
                if (!v242 || *(_BYTE *)(v242 + 16) != 26)
                  v242 = sub_22F10CF48(v242);
                v243 = *(_QWORD *)(v6 + 88);
                v249 = (uint64_t *)(v242 + 40);
                v244 = (unsigned __int16)(*(_QWORD *)(v242 + 16) >> 38);
                sub_22E4913B4(v242, (uint64_t)v270);
                *((_QWORD *)v15 + 6) = sub_22EF63D8C(v243, v241, v249, v244, (__int128 *)v270, 0);
              }
            }
          }
          goto LABEL_165;
        }
      }
      if (v53 == 70)
      {
LABEL_159:
        v54 = -64;
        goto LABEL_161;
      }
    }
    if (v53 - 52 < 6)
    {
      v54 = -72;
      goto LABEL_161;
    }
    if (v53 - 33 < 5)
      goto LABEL_159;
    goto LABEL_117;
  }
  if (v49 && (*((_DWORD *)v15 + 7) & 0x80) == 0 && (sub_22EFC7ADC((unint64_t)(v15 + 72)) & 1) == 0)
  {
    v55 = *(_QWORD *)(*((_QWORD *)v15 + 6) & 0xFFFFFFFFFFFFFFF0);
    if (v55)
      v56 = *(unsigned __int8 *)(v55 + 16) - 27 > 0xFFFFFFFD;
    else
      v56 = 0;
    if (!v56)
      v55 = sub_22F10CF48(v55);
    v57 = *(_QWORD *)(*(_QWORD *)(v55 + 24) & 0xFFFFFFFFFFFFFFF0);
    v270[0] = 0;
    v58 = sub_22F110500((uint64_t)v270, v57);
    if (v58)
    {
      if (*(_QWORD *)(v58 + 24) <= 0xFuLL && (*(_BYTE *)(v58 + 17) & 4) == 0)
      {
        v59 = *(_QWORD *)(*((_QWORD *)v15 + 6) & 0xFFFFFFFFFFFFFFF0);
        if (!v59 || *(unsigned __int8 *)(v59 + 16) - 27 <= 0xFFFFFFFD)
          v59 = sub_22F10CF48(v59);
        v60 = *(_QWORD *)(*(_QWORD *)(v59 + 24) & 0xFFFFFFFFFFFFFFF0);
        if (v60)
          v61 = *(_BYTE *)(v60 + 16) == 14;
        else
          v61 = 0;
        if (v61
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v60 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 14 && sub_22F10CF48(v60))
        {
          *(_QWORD *)v270 = 0;
          v62 = *(_DWORD *)(v5 + 24);
          v63 = *(_QWORD *)(*((_QWORD *)v15 + 6) & 0xFFFFFFFFFFFFFFF0);
          if (!v63 || *(unsigned __int8 *)(v63 + 16) - 27 <= 0xFFFFFFFD)
            v63 = sub_22F10CF48(v63);
          v64 = *(_QWORD *)(*(_QWORD *)(v63 + 24) & 0xFFFFFFFFFFFFFFF0);
          if (!v64 || *(_BYTE *)(v64 + 16) != 14)
          {
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v64 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 14)
              v64 = sub_22F10CF48(v64);
            else
              v64 = 0;
          }
          if (!sub_22ED34DE4((_QWORD *)v6, (unint64_t)v15, v62, (uint64_t *)v270, v64))
            goto LABEL_165;
        }
        else
        {
          sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(v5 + 24), 0xB3Du, 0, (uint64_t)v270);
          v106 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
          if (!v106 || *(unsigned __int8 *)(v106 + 16) - 27 <= 0xFFFFFFFD)
            v106 = sub_22F10CF48(v106);
          *(_QWORD *)v269 = *(_QWORD *)(v106 + 24);
          sub_22E8901B8((uint64_t)v270, (uint64_t *)v269);
          sub_22E903BEC((unsigned int *)v270);
        }
        sub_22EFC77E8((uint64_t)v267, 1);
      }
    }
  }
LABEL_165:
  if ((v267[83] & 0x10) != 0 || sub_22E474EBC((uint64_t)v267))
    LOBYTE(v266) = v14 & 0xFE;
  v70 = v267;
  if ((**(_BYTE **)(v6 + 72) & 0x20) != 0 && (v267[82] & 8) != 0)
  {
    v71 = (*(uint64_t (**)(void))(*(_QWORD *)v267 + 24))();
    v70 = v267;
    if ((v71 & 1) == 0)
    {
      sub_22E8FCA40((_QWORD *)v6, *((_DWORD *)v267 + 6), 0x14D9u, 0, (uint64_t)v265);
      sub_22E903BEC(v265);
      v70 = v267;
    }
  }
  if ((v70[28] & 0x80) == 0)
  {
    v72 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)v70 + 32))(v70);
    v73 = v267;
    if ((*(_BYTE *)(v72 + 82) & 0x40) != 0)
      goto LABEL_180;
    if ((*((_QWORD *)v267 + 10) & 0x402000000) != 0)
      goto LABEL_180;
    v74 = sub_22E474EBC((uint64_t)v267);
    v73 = v267;
    if (v74)
      goto LABEL_180;
    v75 = (uint64_t *)*((_QWORD *)v267 + 15);
    v76 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
    if (v76 && *(_BYTE *)(v76 + 16) == 26)
      goto LABEL_178;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v76 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
    {
      v77 = 0;
      goto LABEL_179;
    }
    v76 = sub_22F10CF48(v76);
    if (v76)
LABEL_178:
      v77 = (unsigned __int16)(*(_QWORD *)(v76 + 16) >> 38);
    else
      v77 = 0;
LABEL_179:
    sub_22EA2E9B4(v6, v75, v77);
    v73 = v267;
LABEL_180:
    v78 = (uint64_t *)*((_QWORD *)v73 + 15);
    v79 = *(_QWORD *)(*((_QWORD *)v73 + 6) & 0xFFFFFFFFFFFFFFF0);
    if (v79 && *(_BYTE *)(v79 + 16) == 26)
      goto LABEL_182;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v79 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
    {
      v80 = 0;
      goto LABEL_183;
    }
    v79 = sub_22F10CF48(v79);
    if (v79)
LABEL_182:
      v80 = (unsigned __int16)(*(_QWORD *)(v79 + 16) >> 38);
    else
      v80 = 0;
LABEL_183:
    v81 = v267;
    v82 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
    if (!v82 || *(unsigned __int8 *)(v82 + 16) - 27 <= 0xFFFFFFFD)
    {
      v82 = sub_22F10CF48(v82);
      v81 = v267;
    }
    sub_22EA2EA80(v6, v78, v80, *(_QWORD *)(v82 + 24), (uint64_t)v81);
    v83 = v267;
    v84 = *((_DWORD *)v267 + 7) & 0x7F;
    if ((!v267 || v84 != 55) && (!v267 || v84 != 57))
      goto LABEL_212;
    v85 = *((_WORD *)v267 + 40) & 0x7F;
    v86 = -40;
    if (v85 > 0x46)
    {
      if (v85 != 83)
      {
        if (v85 == 71)
        {
          v86 = -56;
          goto LABEL_206;
        }
        if (v85 == 81)
          goto LABEL_206;
LABEL_201:
        v87 = v85 - 52;
        v210 = v85 - 33 >= 5;
        v88 = -48;
        if (!v210)
          v88 = -64;
        if (v87 >= 6)
          v86 = v88;
        else
          v86 = -72;
      }
    }
    else
    {
      if (v85 > 0x18)
        goto LABEL_200;
      if (v85 != 16)
      {
        if (((1 << v85) & 0x1066) != 0)
          goto LABEL_206;
        if (v85 != 24)
        {
LABEL_200:
          if (v85 == 70)
          {
            v86 = -64;
            goto LABEL_206;
          }
          goto LABEL_201;
        }
      }
      v86 = -48;
    }
LABEL_206:
    v89 = *(_QWORD *)&v267[v86 + 88];
    v90 = (_QWORD *)(v89 & 0xFFFFFFFFFFFFFFF8);
    if ((v89 & 4) != 0)
      v90 = (_QWORD *)*v90;
    if (v90)
      v91 = (uint64_t)(v90 - 8);
    else
      v91 = 0;
    sub_22EAB631C(v6, *((_DWORD *)v267 + 6), v91, 0);
    v83 = v267;
LABEL_212:
    v92 = *(_QWORD *)(*((_QWORD *)v83 + 6) & 0xFFFFFFFFFFFFFFF0);
    if (!v92 || *(unsigned __int8 *)(v92 + 16) - 27 <= 0xFFFFFFFD)
      v92 = sub_22F10CF48(v92);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v92 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 45
      && ((*(_BYTE *)(*(_QWORD *)(v6 + 72) + 1) & 1) == 0 || (sub_22EFC7ADC((unint64_t)(v267 + 72)) & 1) == 0))
    {
      v93 = *(unsigned int *)(v8 + 136);
      if ((_DWORD)v93)
      {
        v94 = *(_QWORD **)(v8 + 128);
        do
        {
          v95 = (_WORD *)*v94;
          if ((*(_WORD *)*v94 & 0x100) != 0)
          {
            v96 = *((_QWORD *)v95 + 2);
            if (v96)
            {
              if ((*(_DWORD *)(v96 + 28) & 0x7F) == 0x40 || (*(_BYTE *)(v96 + 97) & 4) == 0)
                *((_QWORD *)v95 + 2) = 0;
            }
          }
          ++v94;
          --v93;
        }
        while (v93);
      }
    }
  }
  v97 = v267;
  if ((v267[28] & 0x80) != 0 || !sub_22EFC0A1C((uint64_t)v267) || (*((_DWORD *)v97 + 7) & 0x7Eu) - 54 < 4)
    goto LABEL_335;
  v98 = *((_QWORD *)v97 + 2);
  v99 = (_QWORD *)(v98 & 0xFFFFFFFFFFFFFFF8);
  if ((v98 & 4) != 0)
    v99 = (_QWORD *)*v99;
  if ((*(_WORD *)(sub_22EFCBB30((unint64_t)v99) + 8) & 0x7F) == 0x53)
  {
    v100 = *((_QWORD *)v97 + 5);
    if ((v100 & 7) == 0)
    {
      v101 = v100 & 0xFFFFFFFFFFFFFFF8;
      if (v101)
      {
        v102 = *(_QWORD *)(v101 + 16);
        if (*(_DWORD *)v102 == 8)
        {
          if (*(_QWORD *)(v102 + 16) == 0x6E69616D5F696665)
          {
LABEL_335:
            v105 = 0;
            goto LABEL_336;
          }
        }
        else if (*(_DWORD *)v102 == 4 && *(_DWORD *)(v102 + 16) == 1852399981)
        {
          goto LABEL_335;
        }
      }
    }
  }
  if ((v97[82] & 1) != 0)
    goto LABEL_335;
  v103 = *((_QWORD *)v97 + 18) & 0xFFFFFFFFFFFFFFF8;
  v104 = *((_QWORD *)v97 + 18) & 6;
  if (!v104)
  {
    if (v103)
      goto LABEL_335;
  }
  if (v104 == 4 && v103 && *(_QWORD *)(v103 + 16) > 7uLL
    || sub_22E47290C((uint64_t)v97)
    || sub_22EA44C64((uint64_t)v97)
    || (*(_BYTE *)((*(uint64_t (**)(_BYTE *))(*(_QWORD *)v97 + 32))(v97) + 82) & 0x40) != 0
    || sub_22EFB948C((uint64_t)v97) < 3)
  {
    goto LABEL_335;
  }
  if ((v97[104] & 3) != 0)
  {
    v105 = 0;
  }
  else
  {
    v105 = sub_22E3CD31C((uint64_t *)v97 + 13, (uint64_t)v97);
    if (v105)
    {
      while (1)
      {
        v110 = *(_QWORD *)(v105 + 16);
        v111 = v110 & 0xFFFFFFFFFFFFFFF8;
        if ((v110 & 4) != 0)
          v111 = *(_QWORD *)(v111 + 8);
        v112 = *(_WORD *)(v111 + 8) & 0x7F;
        v113 = v112 > 0x18 || ((1 << v112) & 0x1000006) == 0;
        if (v113 && v112 - 52 >= 6)
          break;
        if ((*(_BYTE *)(v105 + 104) & 3) != 0)
        {
          v105 = 0;
          goto LABEL_284;
        }
        v105 = sub_22E3CD31C((uint64_t *)(v105 + 104), v105);
        if (!v105)
          goto LABEL_284;
      }
      v232 = *(_QWORD *)(*(_QWORD *)(v105 + 48) & 0xFFFFFFFFFFFFFFF0);
      v233 = v232 && *(_BYTE *)(v232 + 16) == 25;
      if (!v233
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v232 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 25 || !sub_22F10CF48(v232)))
      {
        goto LABEL_336;
      }
    }
  }
LABEL_284:
  sub_22E8FCA40((_QWORD *)v6, *((_DWORD *)v267 + 6), 0x1A5Du, 0, (uint64_t)v270);
  sub_22E890024((uint64_t)v270, (uint64_t *)&v267);
  sub_22E903BEC((unsigned int *)v270);
  if (!v105)
  {
    v122 = sub_22EFBAFDC((uint64_t)v267);
    sub_22E8FCA40((_QWORD *)v6, v122, 0x17C2u, 0, (uint64_t)v270);
    LODWORD(v274[0]) = 1;
    v123 = sub_22E8900C4((uint64_t)v270, (int *)v274);
    if ((v267[81] & 0xE0) != 0)
    {
      memset(v269, 0, sizeof(v269));
    }
    else
    {
      v124 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
      if (v124)
        v125 = *(unsigned __int8 *)(v124 + 16) - 27 > 0xFFFFFFFD;
      else
        v125 = 0;
      if (!v125)
        v124 = sub_22F10CF48(v124);
      v126 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v124 + 24) & 0xFFFFFFFFFFFFFFF0)
                                                        + 8) & 0xFFFFFFFFFFFFFFF0)
                                + 16);
      if (v126 != 39 && v126 != 32)
        goto LABEL_319;
      v127 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
      if (!v127 || *(unsigned __int8 *)(v127 + 16) - 27 <= 0xFFFFFFFD)
        v127 = sub_22F10CF48(v127);
      v128 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v127 + 24) & 0xFFFFFFFFFFFFFFF0));
      if ((v128 & 1) == 0 && (*(_BYTE *)((v128 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
      {
LABEL_319:
        v129 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
        if (!v129 || *(unsigned __int8 *)(v129 + 16) - 27 <= 0xFFFFFFFD)
          v129 = sub_22F10CF48(v129);
        v130 = *(_QWORD *)(v129 + 24);
        if ((v130 & 1) == 0 && (*(_BYTE *)((v130 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
          goto LABEL_330;
      }
      v131 = *((_QWORD *)v267 + 7);
      if ((v131 & 4) != 0 && (v236 = v131 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v236 + 16)))
        v132 = **(int ***)(v236 + 24);
      else
        v132 = (int *)(v267 + 64);
      if ((v133 = *(_QWORD **)(v6 + 112), v134 = sub_22E677168((uint64_t)v133, *v132), (_DWORD)v134)
        && (v135 = v134, sub_22F1E1E78(v133, v134, (uint64_t)v269), v269[16])
        && (v136 = *(_QWORD *)&v269[8] - HIDWORD(v135), *(_QWORD *)&v269[8] >= HIDWORD(v135))
        && v136 >= 5
        && ((v137 = *(_QWORD *)v269 + HIDWORD(v135), *(_DWORD *)v137 == 1936617315)
          ? (v138 = *(_BYTE *)(v137 + 4) == 116)
          : (v138 = 0),
            v138
         && (v136 < 6
          || (word_22F4ADB24[*(unsigned __int8 *)(v137 + 5)] & 7) != 0
          || v136 - 5 >= 2 && (*(_WORD *)(v137 + 5) == 10799 || *(_WORD *)(v137 + 5) == 12079))))
      {
        v234 = *((_QWORD *)v267 + 7);
        if ((v234 & 4) != 0 && (v237 = v234 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v237 + 16)))
          v235 = **(unsigned int ***)(v237 + 24);
        else
          v235 = (unsigned int *)(v267 + 64);
        v139 = *v235;
      }
      else
      {
LABEL_330:
        v139 = sub_22EFBAFDC((uint64_t)v267);
      }
      v269[20] = 0;
      *(_QWORD *)&v269[12] = 0;
      *(_QWORD *)v269 = v139 | ((unint64_t)v139 << 32);
      v269[8] = 0;
      *(_QWORD *)&v269[32] = 0;
      *(_QWORD *)&v269[39] = 0;
      strcpy(&v269[24], "static ");
      *(_WORD *)&v269[47] = 7;
    }
    sub_22E890748(v123, v269);
    if ((v269[47] & 0x80000000) != 0)
      operator delete(*(void **)&v269[24]);
    sub_22E903BEC((unsigned int *)v270);
    goto LABEL_335;
  }
  v114 = *(_QWORD *)(v105 + 56);
  v115 = v114 & 0xFFFFFFFFFFFFFFF8;
  if ((v114 & 4) != 0)
    v115 = *(_QWORD *)(v115 + 32);
  if (v115)
  {
    v116 = *(_QWORD *)v115;
    if ((*(_QWORD *)v115 & 0xFLL) == 0 && v116 && *(_BYTE *)(*(_QWORD *)(v116 & 0xFFFFFFFFFFFFFFF0) + 16) == 25)
    {
      sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(v105 + 24), 0x158Du, 0, (uint64_t)v270);
      v117 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
      if (v117)
        v118 = *(_BYTE *)(v117 + 16) == 26;
      else
        v118 = 0;
      if (v118
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v117 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
        && (v117 = sub_22F10CF48(v117)) != 0)
      {
        v119 = (unsigned __int16)(*(_QWORD *)(v117 + 16) >> 38);
      }
      else
      {
        v119 = 0;
      }
      LOBYTE(v274[0]) = v119 != 0;
      v120 = sub_22E894E38((uint64_t)v270, (unsigned __int8 *)v274);
      v121 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
      if ((v121 && *(_BYTE *)(v121 + 16) == 26
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v121 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
         && (v121 = sub_22F10CF48(v121)) != 0)
        && (*(_DWORD *)(v121 + 20) & 0x3FFFC0) != 0)
      {
        memset(v269, 0, sizeof(v269));
      }
      else
      {
        v245 = *(unsigned int *)(v115 + 16);
        v269[20] = 0;
        *(_QWORD *)&v269[12] = 0;
        *(_QWORD *)&v269[40] = 0x400000000000000;
        *(_QWORD *)&v269[32] = 0;
        *(_QWORD *)v269 = v245 | (v245 << 32);
        v269[8] = 0;
        *(_QWORD *)&v269[24] = 1684631414;
        v269[48] = 0;
      }
      sub_22E890748(v120, v269);
      if ((v269[47] & 0x80000000) != 0)
        operator delete(*(void **)&v269[24]);
      sub_22E903BEC((unsigned int *)v270);
    }
  }
LABEL_336:
  if ((v267[82] & 0x20) == 0)
  {
    v140 = *(_QWORD *)(*((_QWORD *)v267 + 6) & 0xFFFFFFFFFFFFFFF0);
    v141 = v140 && *(_BYTE *)(v140 + 16) == 26;
    if ((v141
       || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v140 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
       && (v140 = sub_22F10CF48(v140)) != 0)
      && (*(_DWORD *)(v140 + 20) & 0x3FFFC0) != 0)
    {
      if (!v105)
        goto LABEL_359;
      if ((*(_BYTE *)(v105 + 82) & 0x20) == 0 && (*(_BYTE *)(v105 + 29) & 2) == 0)
      {
        v142 = *(_DWORD *)(v105 + 24);
        if (sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(v6 + 104) + 32), 0x1B5Bu, v142, *(_QWORD *)(v6 + 104)) != 1)
        {
          sub_22E8FCA40((_QWORD *)v6, *((_DWORD *)v267 + 6), 0x1A7Bu, 0, (uint64_t)v263);
          sub_22E903BEC(v263);
          v148 = *(_DWORD *)(v105 + 24);
          v149 = (unsigned int *)v262;
          v150 = (unsigned int *)v262;
          v151 = (_QWORD *)v6;
          v152 = 5646;
          goto LABEL_360;
        }
        v143 = *(_QWORD *)(v6 + 88) + 2128;
        *(_QWORD *)v269 = 0;
        *(_QWORD *)&v269[8] = v143;
        *(_DWORD *)&v269[16] = 6779;
        v144 = *(_QWORD *)(v105 + 56);
        v145 = v144 & 0xFFFFFFFFFFFFFFF8;
        if ((v144 & 4) != 0)
          v145 = *(_QWORD *)(v145 + 32);
        if (v145)
        {
          v146 = *(_QWORD *)v145;
          if ((*(_QWORD *)v145 & 0xFLL) == 0
            && v146
            && *(_BYTE *)(*(_QWORD *)(v146 & 0xFFFFFFFFFFFFFFF0) + 16) == 25)
          {
            v147 = *(unsigned int *)(v145 + 16);
            v270[20] = 0;
            *(_QWORD *)&v270[12] = 0;
            v272 = 0x400000000000000;
            v271 = 0x64696F76uLL;
            *(_QWORD *)v270 = v147 | (v147 << 32);
            v270[8] = 0;
            v273 = 0;
            sub_22E6D82D0((uint64_t *)v269, v270);
            if (SHIBYTE(v272) < 0)
              operator delete((void *)v271);
            v142 = *(_DWORD *)(v105 + 24);
          }
        }
        sub_22E90379C((_QWORD *)v6, v142, (uint64_t)v269, 0, (uint64_t)v264);
        sub_22E903BEC(v264);
        if (*(_QWORD *)v269 && *(_QWORD *)&v269[8])
          sub_22E3BB10C(*(unint64_t *)&v269[8], *(unint64_t *)v269);
LABEL_359:
        v148 = *((_DWORD *)v267 + 6);
        v149 = v263;
        v150 = v263;
        v151 = (_QWORD *)v6;
        v152 = 6779;
LABEL_360:
        sub_22E8FCA40(v151, v148, v152, 0, (uint64_t)v150);
        sub_22E903BEC(v149);
      }
    }
  }
  v44 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)v267 + 32))(v267);
  if ((*(_BYTE *)(v44 + 84) & 0x10) != 0)
  {
    v44 = sub_22E631558((uint64_t)v267);
    if ((_DWORD)v44)
    {
      if (v268 && *(_BYTE *)v268 == 8 && *(_DWORD *)v268 >= 0x100u)
      {
        sub_22F0D5A50(*(_QWORD *)(v268 + 16));
        sub_22E8FCA40((_QWORD *)v6, v159, 0x1975u, 0, (uint64_t)v261);
        v44 = (uint64_t)sub_22E903BEC(v261);
      }
    }
  }
  v153 = v267;
  if (!v267)
    goto LABEL_419;
  if ((*((_DWORD *)v267 + 7) & 0x7Eu) - 58 < 0xFFFFFFFC)
    goto LABEL_419;
  v44 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)v267 + 24))(v267);
  if (!(_DWORD)v44)
    goto LABEL_419;
  v44 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)v153 + 32))(v153);
  if (!v44)
    goto LABEL_419;
  v154 = v44;
  v155 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v44 + 32))(v44);
  if ((*(_BYTE *)(v155 + 82) & 0xC) == 0)
  {
    v44 = sub_22EFD7260(v155);
    if (!(_DWORD)v44)
      goto LABEL_419;
  }
  v156 = v154 + 72;
  v157 = *(_WORD *)(v154 + 80) & 0x7F;
  v158 = -40;
  if (v157 <= 0x46)
  {
    if (v157 <= 0x18)
    {
      if (v157 == 16)
      {
LABEL_371:
        v158 = -48;
        goto LABEL_389;
      }
      if (((1 << v157) & 0x1066) != 0)
        goto LABEL_389;
      if (v157 == 24)
        goto LABEL_371;
    }
    if (v157 == 70)
    {
LABEL_387:
      v158 = -64;
      goto LABEL_389;
    }
    goto LABEL_385;
  }
  if (v157 == 83)
    goto LABEL_389;
  if (v157 == 71)
  {
    v158 = -56;
    goto LABEL_389;
  }
  if (v157 != 81)
  {
LABEL_385:
    if (v157 - 52 >= 6)
    {
      if (v157 - 33 >= 5)
        goto LABEL_371;
      goto LABEL_387;
    }
    v158 = -72;
  }
LABEL_389:
  v160 = *(_QWORD *)(v156 + v158 + 16);
  v161 = (_QWORD *)(v160 & 0xFFFFFFFFFFFFFFF8);
  if ((v160 & 4) != 0)
    v161 = (_QWORD *)*v161;
  if (v161)
    v162 = (uint64_t)(v161 - 8);
  else
    v162 = 0;
  v44 = sub_22F0CB980(*(_QWORD *)(v6 + 88), v162);
  if (!v44)
    goto LABEL_419;
  v44 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v44 + 32))(v44);
  if (v154 != v44)
    goto LABEL_419;
  if ((v267[82] & 1) == 0
    || (v163 = *(_QWORD *)(v6 + 88), ((1 << *(_DWORD *)(*(_QWORD *)(v163 + 15088) + 148)) & 0xE65) != 0))
  {
    v164 = *((_DWORD *)v267 + 6);
    v165 = *(_WORD *)(v154 + 80) & 0x7F;
    v166 = -40;
    if (v165 > 0x46)
    {
      switch(v165)
      {
        case 'S':
          goto LABEL_413;
        case 'G':
          v166 = -56;
          goto LABEL_413;
        case 'Q':
          goto LABEL_413;
      }
      goto LABEL_409;
    }
    if (v165 > 0x18)
      goto LABEL_408;
    if (v165 != 16)
    {
      if (((1 << v165) & 0x1066) != 0)
        goto LABEL_413;
      if (v165 != 24)
      {
LABEL_408:
        if (v165 != 70)
        {
LABEL_409:
          if (v165 - 52 < 6)
          {
            v166 = -72;
            goto LABEL_413;
          }
          if (v165 - 33 < 5)
            goto LABEL_411;
          goto LABEL_401;
        }
LABEL_411:
        v166 = -64;
        goto LABEL_413;
      }
    }
LABEL_401:
    v166 = -48;
    goto LABEL_413;
  }
  sub_22F3F0E54(v163, v154);
  v226 = *(_WORD *)(v154 + 80) & 0x7F;
  v227 = -40;
  if (v226 > 0x46)
  {
    switch(v226)
    {
      case 'S':
        goto LABEL_611;
      case 'G':
        v227 = -56;
        goto LABEL_611;
      case 'Q':
        goto LABEL_611;
    }
  }
  else
  {
    if (v226 <= 0x18)
    {
      if (v226 == 16)
      {
LABEL_599:
        v227 = -48;
        goto LABEL_611;
      }
      if (((1 << v226) & 0x1066) != 0)
        goto LABEL_611;
      if (v226 == 24)
        goto LABEL_599;
    }
    if (v226 == 70)
    {
LABEL_609:
      v227 = -64;
      goto LABEL_611;
    }
  }
  if (v226 - 52 >= 6)
  {
    if (v226 - 33 >= 5)
      goto LABEL_599;
    goto LABEL_609;
  }
  v227 = -72;
LABEL_611:
  v228 = *(_QWORD *)(v156 + v227 + 16);
  v229 = (_QWORD *)(v228 & 0xFFFFFFFFFFFFFFF8);
  if ((v228 & 4) != 0)
    v229 = (_QWORD *)*v229;
  if (v229)
    v230 = (uint64_t)(v229 - 8);
  else
    v230 = 0;
  v44 = sub_22F0CB980(*(_QWORD *)(v6 + 88), v230);
  *(_QWORD *)v270 = 0;
  if (v44)
  {
    v44 = sub_22EFBF86C(v44, (unint64_t *)v270, 0);
    if ((_DWORD)v44)
    {
      v164 = *(_DWORD *)(*(_QWORD *)v270 + 24);
      v231 = *(_WORD *)(v154 + 80) & 0x7F;
      v166 = -40;
      if (v231 > 0x46)
      {
        switch(v231)
        {
          case 'S':
            goto LABEL_413;
          case 'G':
            v166 = -56;
            goto LABEL_413;
          case 'Q':
LABEL_413:
            v167 = *(_QWORD *)(v156 + v166 + 16);
            v168 = (_QWORD *)(v167 & 0xFFFFFFFFFFFFFFF8);
            if ((v167 & 4) != 0)
              v168 = (_QWORD *)*v168;
            if (v168)
              v169 = (uint64_t)(v168 - 8);
            else
              v169 = 0;
            v44 = sub_22EAB631C(v6, v164, v169, 1u);
            goto LABEL_419;
        }
      }
      else
      {
        if (v231 <= 0x18)
        {
          if (v231 == 16)
            goto LABEL_401;
          if (((1 << v231) & 0x1066) != 0)
            goto LABEL_413;
          if (v231 == 24)
            goto LABEL_401;
        }
        if (v231 == 70)
          goto LABEL_411;
      }
      if (v231 - 52 < 6)
      {
        v166 = -72;
      }
      else if (v231 - 33 >= 5)
      {
        v166 = -48;
      }
      else
      {
        v166 = -64;
      }
      goto LABEL_413;
    }
  }
LABEL_419:
  v20 = v268;
  if (!v268)
    goto LABEL_443;
LABEL_420:
  v170 = (_DWORD *)v11;
  if ((*(_BYTE *)(v11 + 1) & 8) != 0)
    sub_22E91BB48(v6, v5);
  if (v267)
  {
    if ((v267[83] & 2) == 0)
    {
      if ((*((_DWORD *)v267 + 7) & 0x7F) == 0x37 && *(_BYTE *)v20 == 6)
      {
        v171 = *(unsigned int *)(v20 + 12);
        if ((_DWORD)v171)
        {
          v172 = (uint64_t *)(v20 + 24);
          do
          {
            v173 = *v172++;
            sub_22EAD0740((_QWORD *)v6, v173);
            --v171;
          }
          while (v171);
        }
      }
      goto LABEL_429;
    }
LABEL_443:
    v45 = 0;
    goto LABEL_504;
  }
LABEL_429:
  if ((*v170 & 0x80) == 0)
  {
    v174 = (*v170 & 0x60) != 0 || (*v170 & 0x18) == 24;
    if (v174 && !*(_QWORD *)(*(_QWORD *)(v6 + 80) + 752))
      sub_22E8CEDFC(v6, (_QWORD *)v20);
  }
  if (v5 && (*(_DWORD *)(v5 + 28) & 0x7F) == 0x39)
  {
    v175 = v5 + 72;
    v176 = *(_WORD *)(v5 + 80) & 0x7F;
    v177 = -40;
    if (v176 > 0x46)
    {
      if (v176 == 83)
        goto LABEL_456;
      if (v176 == 71)
      {
        v177 = -56;
        goto LABEL_456;
      }
      if (v176 != 81)
      {
LABEL_451:
        v178 = v176 - 52;
        v210 = v176 - 33 >= 5;
        v179 = -48;
        if (!v210)
          v179 = -64;
        if (v178 >= 6)
          v177 = v179;
        else
          v177 = -72;
      }
    }
    else
    {
      if (v176 > 0x18)
        goto LABEL_450;
      if (v176 == 16)
      {
LABEL_442:
        v177 = -48;
        goto LABEL_456;
      }
      if (((1 << v176) & 0x1066) == 0)
      {
        if (v176 == 24)
          goto LABEL_442;
LABEL_450:
        if (v176 == 70)
        {
          v177 = -64;
          goto LABEL_456;
        }
        goto LABEL_451;
      }
    }
LABEL_456:
    v180 = *(_QWORD *)(v175 + v177 + 16);
    v181 = (_QWORD *)(v180 & 0xFFFFFFFFFFFFFFF8);
    if ((v180 & 4) != 0)
      v181 = (_QWORD *)*v181;
    if (v181)
      v182 = v181 - 8;
    else
      v182 = 0;
    if ((sub_22EFC7ADC((unint64_t)(v182 + 8)) & 1) == 0)
      sub_22EABFC00(v6, (_QWORD *)v5);
    v183 = *(_WORD *)(v5 + 80) & 0x7F;
    v184 = -40;
    if (v183 > 0x46)
    {
      if (v183 != 83)
      {
        if (v183 == 71)
        {
          v184 = -56;
          goto LABEL_479;
        }
        if (v183 == 81)
          goto LABEL_479;
LABEL_474:
        v185 = v183 - 52;
        v210 = v183 - 33 >= 5;
        v186 = -48;
        if (!v210)
          v186 = -64;
        if (v185 >= 6)
          v184 = v186;
        else
          v184 = -72;
      }
    }
    else
    {
      if (v183 > 0x18)
        goto LABEL_473;
      if (v183 != 16)
      {
        if (((1 << v183) & 0x1066) != 0)
          goto LABEL_479;
        if (v183 != 24)
        {
LABEL_473:
          if (v183 == 70)
          {
            v184 = -64;
            goto LABEL_479;
          }
          goto LABEL_474;
        }
      }
      v184 = -48;
    }
LABEL_479:
    v187 = *(_QWORD *)(v175 + v184 + 16);
    v188 = (_QWORD *)(v187 & 0xFFFFFFFFFFFFFFF8);
    if ((v187 & 4) != 0)
      v188 = (_QWORD *)*v188;
    if (v188)
      v189 = (unint64_t)(v188 - 8);
    else
      v189 = 0;
    sub_22EAB1884(v6, *(_DWORD *)(v5 + 24), v189);
  }
  if ((sub_22E9038B8(v6) & 1) != 0 || *(_BYTE *)(*(_QWORD *)(v6 + 104) + 6))
    sub_22EB48DCC(v6);
  v44 = sub_22E9038B8(v6);
  if ((v44 & 1) != 0)
  {
    v45 = 0;
  }
  else if ((*(_DWORD *)(v5 + 28) & 0x7F) == 0x1D)
  {
    v45 = 0;
  }
  else
  {
    v45 = &v266;
  }
  v190 = v267;
  if ((a4 & 1) == 0 && v267)
  {
    if ((v267[83] & 0xC0) == 0 || (v267[28] & 0x80) != 0)
      goto LABEL_500;
    v44 = sub_22EAA84E0((_QWORD *)v6, (unint64_t)v267, 0);
    v190 = v267;
    if ((v44 & 1) == 0)
    {
      v44 = sub_22EFC77E8((uint64_t)v267, 1);
      v190 = v267;
    }
  }
  if (!v190)
    goto LABEL_504;
LABEL_500:
  v44 = sub_22E474EBC((uint64_t)v190);
  if (!(_DWORD)v44)
  {
LABEL_504:
    if (v251)
      goto LABEL_506;
    goto LABEL_505;
  }
  v246 = v45;
  v247 = (_QWORD *)v6;
  v248 = v5;
  sub_22F0D492C(v268);
  *(_OWORD *)v269 = *(_OWORD *)v270;
  v191 = v271;
  *(_QWORD *)&v269[16] = *(_QWORD *)&v270[16];
  v192 = *((_QWORD *)&v271 + 1);
  v193 = *(_QWORD *)&v270[8];
  v194 = *(uint64_t **)v270;
  if (*(_OWORD *)v270 == v271)
    goto LABEL_502;
  while (1)
  {
    v44 = (uint64_t)v194;
    if ((v193 & 3) != 0)
    {
      if ((v193 & 0xFFFFFFFFFFFFFFFCLL) != 0)
        v44 = (v193 & 0xFFFFFFFFFFFFFFFCLL) + 40;
      else
        v44 = sub_22F3AC1A8(*v194);
    }
    v203 = *(unsigned __int8 **)v44;
    v204 = **(unsigned __int8 **)v44;
    if (v204 == 12)
    {
      v205 = *((_QWORD *)v203 + 1);
      if ((v205 & 1) != 0)
      {
        v206 = (uint64_t *)((v205 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v207 = &v206[*(unsigned int *)(v205 & 0xFFFFFFFFFFFFFFFELL)];
      }
      else
      {
        if (v205)
          v206 = (uint64_t *)(v203 + 8);
        else
          v206 = 0;
        if (v205)
          v207 = (uint64_t *)(v203 + 16);
        else
          v207 = 0;
      }
      if (v206 != v207)
      {
        v208 = 0;
        do
        {
          v209 = *v206;
          if (*v206)
            v210 = (*(_DWORD *)(*v206 + 28) & 0x7Fu) - 67 >= 0xFFFFFFF9;
          else
            v210 = 0;
          if (v210)
          {
            v44 = sub_22E3D1740(*v206);
            if (!(_DWORD)v44
              || ((*(_DWORD *)(v209 + 28) & 0x7F) != 0x40 || (*(_DWORD *)(v209 + 96) & 0x600u) - 1536 <= 0xFFFFFBFF)
              && *(_QWORD *)(v209 + 88) > 7uLL)
            {
              goto LABEL_557;
            }
            v208 = 1;
          }
          ++v206;
        }
        while (v206 != v207);
        if ((v208 & 1) != 0)
          goto LABEL_562;
      }
LABEL_557:
      v204 = *v203;
    }
    v56 = v204 > 0x13;
    v211 = (1 << v204) & 0x80006;
    if (v56 || v211 == 0)
      break;
LABEL_562:
    if ((v193 & 3) != 0)
    {
      if (v193 < 4)
        v44 = sub_22F3F2FE0((uint64_t)v269, 1);
      else
        v44 = sub_22F0D8720((uint64_t)v269);
    }
    else
    {
      *(_QWORD *)v269 = v194 + 1;
    }
    v193 = *(_QWORD *)&v269[8];
    v194 = *(uint64_t **)v269;
    if (*(_OWORD *)v269 == __PAIR128__(v192, v191))
      goto LABEL_502;
  }
  sub_22F0D5A50((uint64_t)v203);
  sub_22E8FCA40(v247, v213, 0xFB8u, 0, (uint64_t)v255);
  sub_22E903BEC(v255);
  sub_22EFC8E88((uint64_t)v267);
  v215 = *v214;
  v216 = *((unsigned int *)v214 + 2);
  if ((_DWORD)v216 && *(_WORD *)(*v215 + 32) != 222)
  {
    v217 = 8 * v216 - 8;
    v218 = *v214;
    do
    {
      v219 = v218[1];
      ++v218;
      v217 -= 8;
    }
    while (*(_WORD *)(v219 + 32) != 222);
  }
  do
  {
    v221 = *v215++;
    v220 = v221;
  }
  while (*(_WORD *)(v221 + 32) != 222);
  sub_22E8FCA40(v247, *(_DWORD *)(v220 + 16), 0x154Cu, 0, (uint64_t)v254);
  sub_22E903BEC(v254);
  v44 = sub_22EFC77E8((uint64_t)v267, 1);
LABEL_502:
  v6 = (unint64_t)v247;
  v5 = v248;
  v45 = v246;
  if (!v251)
LABEL_505:
    v44 = sub_22EB48E64(v6);
LABEL_506:
  if ((a4 & 1) == 0)
    *(_QWORD *)(v6 + 216) = sub_22EA044C0(v44, *(_QWORD *)(v6 + 216));
  sub_22E904AD8(v6, v45, (int *)v5, 0, (uint64_t *)&v252);
  v195 = v252;
  v252 = 0;
  if (v195)
  {
    if ((v195[8] & 7) != 0 || *(_QWORD *)(v253 + 1888))
      (*(void (**)(_BYTE *))(*(_QWORD *)v195 + 8))(v195);
    else
      *(_QWORD *)(v253 + 1888) = v195;
  }
  if (sub_22E9038B8(v6))
    sub_22EB48DCC(v6);
  v196 = v267;
  if (!v267)
    return v5;
  v197 = *(_QWORD *)(v6 + 72);
  v198 = *(_QWORD *)(v197 + 72);
  if ((_DWORD)v198 && ((v198 & 0x800000000) != 0 || *(_QWORD *)(v197 + 624) != *(_QWORD *)(v197 + 632))
    || (*(_BYTE *)(v197 + 68) & 0x20) != 0
    || (*(_BYTE *)(v197 + 104) & 4) != 0)
  {
    v199 = sub_22EA32CC0(v6, v267, 0);
    v196 = v267;
    if ((v199 & 3) != 0)
    {
      if (v267)
        goto LABEL_522;
      return v5;
    }
    *(_QWORD *)v270 = v267;
    sub_22F2B3BA8(v6 + 8896, (uint64_t *)v270);
    v196 = v267;
    if (!v267)
      return v5;
  }
LABEL_522:
  if ((*(_BYTE *)((*(uint64_t (**)(_BYTE *))(*(_QWORD *)v196 + 32))(v196) + 82) & 0x40) == 0)
    sub_22E903E38(v6, *((_QWORD *)v267 + 6), *((_DWORD *)v267 + 6), (uint64_t)v267);
  if (!v267)
    return v5;
  v200 = *((_WORD *)v267 + 40);
  if ((v200 & 0x7Eu) - 54 > 3)
    return v5;
  v201 = v200 & 0x7F;
  v202 = -40;
  if (v201 > 70)
  {
    if (v201 != 83)
    {
      if (v201 == 71)
      {
        v202 = -56;
      }
      else if (v201 != 81)
      {
        goto LABEL_585;
      }
    }
  }
  else
  {
    if (v201 > 0x18)
      goto LABEL_584;
    if (v201 == 16)
      goto LABEL_529;
    if (((1 << v201) & 0x1066) == 0)
    {
      if (v201 != 24)
      {
LABEL_584:
        if (v201 == 70)
          goto LABEL_587;
LABEL_585:
        if ((v201 - 52) < 6)
        {
          v202 = -72;
          goto LABEL_589;
        }
        if ((v201 - 33) < 5)
        {
LABEL_587:
          v202 = -64;
          goto LABEL_589;
        }
      }
LABEL_529:
      v202 = -48;
    }
  }
LABEL_589:
  v222 = *(_QWORD *)&v267[v202 + 88];
  v223 = (_QWORD *)(v222 & 0xFFFFFFFFFFFFFFF8);
  if ((v222 & 4) != 0)
  {
    v223 = (_QWORD *)*v223;
    if (!v223)
      return v5;
  }
  else if (!v223)
  {
    return v5;
  }
  v224 = v223[8];
  if (v224
    && ((*(unsigned __int16 *)(v224 + 8) | (*(unsigned __int8 *)(v224 + 10) << 16)) & 0x100000) != 0
    && (*((_QWORD *)v267 + 5) & 7) == 6
    && *(_DWORD *)(*((_QWORD *)v267 + 5) & 0xFFFFFFFFFFFFFFF8) == 42)
  {
    sub_22E98F134(v6, v267);
  }
  return v5;
}

uint64_t sub_22EA32CC0(uint64_t a1, _BYTE *a2, int a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  _BOOL4 v21;
  unint64_t v22;

  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 104) & 4) != 0 && (a2[29] & 1) != 0)
  {
    sub_22EFC8E88((uint64_t)a2);
    v7 = *((unsigned int *)v6 + 2);
    if ((_DWORD)v7)
    {
      v8 = 8 * v7;
      v9 = *v6;
      while (*(_WORD *)(*(_QWORD *)v9 + 32) != 302)
      {
        v9 += 8;
        v8 -= 8;
        if (!v8)
          goto LABEL_10;
      }
    }
    else
    {
      v9 = *v6;
    }
    if (v9 != *v6 + 8 * v7)
      return 0;
  }
LABEL_10:
  if ((sub_22EFC7ADC((unint64_t)(a2 + 72)) & 1) != 0)
    return 3;
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 72);
  if ((v11 & 0x800000000) == 0)
  {
    if (v11 >= 0x2E)
    {
      v12 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)a2 + 32))(a2);
      v13 = sub_22EF95D10(v12);
      if (v14)
      {
        if (*(_DWORD *)(v13 + 40) == 1)
          return 2;
      }
    }
LABEL_25:
    v19 = *(_QWORD *)(a1 + 72);
    if (a3 && *(_DWORD *)(v19 + 72) && (*(_BYTE *)(v19 + 68) & 0x20) == 0)
      return 0;
    goto LABEL_32;
  }
  v15 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)a2 + 32))(a2);
  v16 = sub_22EF95D10(v15);
  if (v17)
  {
    if (!*(_DWORD *)(v16 + 40))
      return 2;
  }
  else if (!*(_DWORD *)(a1 + 12304))
  {
    goto LABEL_29;
  }
  v22 = 0;
  if (sub_22EFBF86C((uint64_t)a2, &v22, 0) && v22)
  {
    v18 = sub_22EF72FFC(*(_QWORD **)(a1 + 88), v22);
    result = 2 * (v18 < 3);
    if (v18 > 2 || (a3 & 1) != 0)
      return result;
    goto LABEL_25;
  }
LABEL_29:
  if ((a3 & 1) != 0)
    return 2;
  v19 = *(_QWORD *)(a1 + 72);
LABEL_32:
  if ((*(_BYTE *)(v19 + 68) & 0x20) == 0)
    return 4;
  v20 = sub_22E9FDFC4(a1, (uint64_t)a2, 0);
  if ((*(_WORD *)(*(_QWORD *)(a1 + 72) + 96) & 0x80) != 0)
    v21 = v20 != 2;
  else
    v21 = v20 > 1;
  if (v21)
  {
    v22 = 0;
    if (sub_22EFBF86C((uint64_t)a2, &v22, 0) && v22 && (int)sub_22EF72FFC(*(_QWORD **)(a1 + 88), v22) > 2)
      return 0;
    return 4;
  }
  return 1;
}

void sub_22EA32ECC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = a3;
  if (a3 && (*(_DWORD *)(a3 + 28) & 0x7Fu) - 33 >= 0xFFFFFFF9)
    v4 = *(_QWORD *)(a3 + 48);
  sub_22EA63DD8(a1, a2, v4, a4, 1);
  sub_22E9114FC(a1, v4);
  if (v4
    && (*(_DWORD *)(v4 + 28) & 0x7Eu) - 54 <= 3
    && ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4) + 80) & 0xE000) == 0x4000
     || (*(_QWORD *)(v4 + 40) & 7) == 6
     && (*(_DWORD *)(*(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) <= 3))
  {
    sub_22EADE794((uint64_t)a1, v4);
  }
}

void sub_22EA32F94(uint64_t a1, unint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  __int128 v20;
  int v21;
  int v22;
  int v23;
  __int16 v24;
  char v25;
  char v26;
  int v27;
  char v28;

  if ((*(_BYTE *)(a2 + 28) & 0x80) == 0
    && (*(_QWORD *)(a2 + 40) & 7) == 6
    && (*(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) | 2) == 3)
  {
    LOBYTE(v27) = 0;
    v28 = 0;
    v26 = 0;
    if (sub_22EFBFDCC(a2, (uint64_t)&v27, &v26))
    {
      if (!v26 && !sub_22E4727EC(a2))
      {
        v17 = *(_QWORD *)(a1 + 88);
        v18 = *(_DWORD *)(a2 + 24);
        v20 = 0uLL;
        v21 = v18;
        v22 = v18;
        v23 = 0;
        v25 = 120;
        v24 = 0;
        v19 = sub_22F39F2D8(v17, &v20);
        sub_22EFCA95C(a2, v19);
      }
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_18;
      sub_22EFC8E88(a2);
      v5 = *((unsigned int *)v4 + 2);
      if ((_DWORD)v5)
      {
        v6 = 8 * v5;
        v7 = *v4;
        while (*(_WORD *)(*(_QWORD *)v7 + 32) != 100)
        {
          v7 += 8;
          v6 -= 8;
          if (!v6)
            goto LABEL_18;
        }
      }
      else
      {
        v7 = *v4;
      }
      if (v7 == *v4 + 8 * v5)
      {
LABEL_18:
        v8 = -2147483647;
        v9 = *(_QWORD *)(a1 + 88);
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA && sub_22EFBAEF8(a2))
          v8 = -1073741823;
        v10 = *(_DWORD *)(a2 + 24);
        v20 = 0uLL;
        v21 = v10;
        v22 = v10;
        v23 = 0;
        v25 = 120;
        v24 = 0;
        v11 = sub_22F37D130(v9, v8, 0, &v20);
        sub_22EFCA95C(a2, v11);
      }
      if (v28 && !sub_22F310CD8(a2))
      {
        v12 = *(_QWORD *)(a1 + 88);
        v13 = v27 & 0x3FFFFFFF | 0x80000000;
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
        {
          if (sub_22EFBAEF8(a2))
            v14 = 0x40000000;
          else
            v14 = 0;
          v13 |= v14;
        }
        v15 = *(_DWORD *)(a2 + 24);
        v20 = 0uLL;
        v21 = v15;
        v22 = v15;
        v23 = 0;
        v25 = 120;
        v24 = 0;
        v16 = sub_22F37CF44(v12, v13, &v20);
        sub_22EFCA95C(a2, v16);
      }
    }
  }
}

BOOL sub_22EA331AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 140)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

BOOL sub_22EA3320C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  BOOL v11;
  _BOOL8 v12;
  unsigned int v14[24];
  uint64_t v15;

  v4 = *a2;
  for (i = *a2; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_12;
      v6 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v6 <= 0x39)
        break;
LABEL_7:
      if (sub_22F115668(i))
        v4 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_14;
    }
    if (v6 == 24)
      goto LABEL_13;
    if (v6 == 26)
      break;
    if (((1 << v6) & 0x20000000200003CLL) == 0)
      goto LABEL_7;
LABEL_12:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_12;
LABEL_13:
  v4 = i;
LABEL_14:
  v7 = sub_22F115668(v4);
  v15 = *a2;
  v8 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v8 + 17) & 4) != 0)
    return 0;
  v9 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_DWORD *)(v9 + 16);
  if (v9)
    v11 = v10 == 11;
  else
    v11 = 0;
  if (v11)
  {
    if (((*(_DWORD *)(v9 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
      return 0;
LABEL_20:
    sub_22E8FCA40(a1, v7, 0xCDCu, 0, (uint64_t)v14);
    v12 = *(_BYTE *)(sub_22E8901B8((uint64_t)v14, &v15) + 80) != 0;
    sub_22E903BEC(v14);
  }
  else
  {
    if (v10 != 9)
      goto LABEL_20;
    return 0;
  }
  return v12;
}

uint64_t sub_22EA333A0(_QWORD *a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  unint64_t v9;
  unsigned int *v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[96];
  unint64_t v15;
  _BYTE v16[96];
  unsigned int v17[24];
  uint64_t v18;

  v18 = a4;
  v9 = *(_QWORD *)(a6 + 72);
  if (((v9 >> 39) & 1) != a3)
  {
    sub_22E8FCA40(a1, a2, 0xCDFu, 0, (uint64_t)v17);
    LOBYTE(v15) = (*(_QWORD *)(a6 + 72) & 0x8000000000) != 0;
    sub_22E894E38((uint64_t)v17, (unsigned __int8 *)&v15);
    sub_22E903BEC(v17);
    sub_22E8FCA40(a1, *(_DWORD *)(a6 + 24), 0x6Cu, 0, (uint64_t)v16);
    v10 = (unsigned int *)v16;
LABEL_11:
    sub_22E903BEC(v10);
    return 1;
  }
  if ((v9 & 0x20000000000) != 0 && a5)
  {
    v11 = a4 & 0xFFFFFFFFFFFFFFF0;
    if ((*(_BYTE *)(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0
      && (*(_BYTE *)(*(_QWORD *)(sub_22E496830(a6) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0
      && *(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((sub_22E496830(a6) & 0xFFFFFFFFFFFFFFF0)
                                                                                           + 8) & 0xFFFFFFFFFFFFFFF0))
    {
      sub_22E8FCA40(a1, a2, 0xCE0u, 0, (uint64_t)v17);
      v12 = sub_22E8901B8((uint64_t)v17, &v18);
      v15 = sub_22E496830(a6);
      sub_22E8901B8(v12, (uint64_t *)&v15);
      sub_22E903BEC(v17);
      sub_22E8FCA40(a1, *(_DWORD *)(a6 + 24), 0x6Cu, 0, (uint64_t)v17);
      v15 = sub_22F3AC9B8(a6);
      sub_22E8906A0((uint64_t)v17, (uint64_t *)&v15);
      v10 = v17;
      goto LABEL_11;
    }
  }
  else if (((v9 >> 41) & 1) != a5)
  {
    sub_22E8FCA40(a1, a2, 0xCDEu, 0, (uint64_t)v17);
    LOBYTE(v15) = (*(_QWORD *)(a6 + 72) & 0x20000000000) != 0;
    sub_22E894E38((uint64_t)v17, (unsigned __int8 *)&v15);
    sub_22E903BEC(v17);
    sub_22E8FCA40(a1, *(_DWORD *)(a6 + 24), 0x6Cu, 0, (uint64_t)v14);
    v10 = (unsigned int *)v14;
    goto LABEL_11;
  }
  return 0;
}

uint64_t sub_22EA33594(uint64_t a1, unint64_t a2, unsigned int a3, int a4, unsigned int a5, uint64_t a6)
{
  int v8;
  unint64_t v9;
  unsigned int v11;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  const char *v32;
  size_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unsigned int v44[24];
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  __int128 __p;
  uint64_t v50;
  char v51;
  int v52;
  unsigned int v53[25];
  BOOL v54;
  uint64_t v55;
  __int128 __dst;
  uint64_t v57;

  v8 = a3;
  v9 = a2;
  v55 = a6;
  v11 = (unsigned __int16)*(_DWORD *)(a2 + 72) >> 13;
  if (v11 == a3)
  {
    result = 1;
  }
  else
  {
    result = 0;
    if (v11 > 3 || v11 == 2)
      return result;
  }
  if (a3 <= 3 && a3 != 2)
  {
    v15 = *(_QWORD *)(a1 + 104);
    v16 = *(_QWORD *)(v15 + 32);
    result = sub_22F1CF68C(v16, 0x1B65u, a5, v15);
    if ((_DWORD)result != 1)
    {
      if (sub_22F1CF68C(v16, 0x1B65u, *(_DWORD *)(v9 + 24), v15) == 1)
      {
        while ((*(_BYTE *)(v9 + 96) & 3) == 0)
        {
          v17 = sub_22E3CD31C((uint64_t *)(v9 + 96), v9);
          if (!v17)
            break;
          v9 = v17;
          if (sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x1B65u, *(_DWORD *)(v17 + 24), *(_QWORD *)(a1 + 104)) != 1)
          {
            v11 = (unsigned __int16)*(_DWORD *)(v9 + 72) >> 13;
            goto LABEL_15;
          }
        }
      }
      else
      {
LABEL_15:
        v54 = 0;
        if ((*(_DWORD *)(v9 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
        {
          v18 = *(_QWORD *)(v9 + 136);
          v20 = (v18 & 4) == 0 && v18 > 7;
          v54 = v20;
        }
        if (*(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956))
        {
          v21 = sub_22EFC3500(v9);
          v22 = v21;
          if (a4)
          {
            if (!v21)
            {
              v23 = 0;
              v24 = 0;
              v25 = v9;
              do
              {
                if ((unsigned __int16)*(_DWORD *)(v25 + 72) >> 13 != v8
                  && sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x1B65u, *(_DWORD *)(v25 + 24), *(_QWORD *)(a1 + 104)) != 1)
                {
                  if ((v23 & 1) == 0)
                  {
                    sub_22E8FCA40((_QWORD *)a1, a5, 0x1B64u, 0, (uint64_t)v53);
                    v26 = v8;
                    if (v8)
                    {
                      if (v8 == 3)
                        v26 = 2;
                      else
                        v26 = 1;
                    }
                    LODWORD(v45) = v26;
                    v27 = sub_22E89519C((uint64_t)v53, (unsigned int *)&v45);
                    v28 = sub_22E894E38(v27, (unsigned __int8 *)&v54);
                    v29 = sub_22E8BAE44(v28, &v55);
                    v30 = (unsigned __int16)*(_DWORD *)(v25 + 72) >> 13;
                    if ((unsigned __int16)*(_DWORD *)(v25 + 72) >> 13)
                    {
                      if (v30 == 3)
                        v30 = 2;
                      else
                        v30 = 1;
                    }
                    LODWORD(__dst) = v30;
                    sub_22E89519C(v29, (unsigned int *)&__dst);
                    sub_22E903BEC(v53);
                  }
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v25 + 56), 0x17C6u, 0, (uint64_t)v53);
                  if (v8)
                  {
                    if (v8 == 1)
                    {
                      v52 = 1;
                      v31 = sub_22E89519C((uint64_t)v53, (unsigned int *)&v52);
                      v32 = "__interface";
                      v33 = 11;
                    }
                    else
                    {
                      v52 = 2;
                      v31 = sub_22E89519C((uint64_t)v53, (unsigned int *)&v52);
                      v32 = "class";
                      v33 = 5;
                    }
                  }
                  else
                  {
                    v52 = 0;
                    v31 = sub_22E89519C((uint64_t)v53, (unsigned int *)&v52);
                    v32 = "struct";
                    v33 = 6;
                  }
                  v34 = *(unsigned int *)(v25 + 56);
                  v47 = 0;
                  v48 = 0;
                  v45 = v34 | (v34 << 32);
                  v46 = 1;
                  HIBYTE(v57) = v33;
                  memcpy(&__dst, v32, v33);
                  *((_BYTE *)&__dst + v33) = 0;
                  v51 = 0;
                  __p = __dst;
                  v50 = v57;
                  sub_22E890748(v31, &v45);
                  if (SHIBYTE(v50) < 0)
                    operator delete((void *)__p);
                  sub_22E903BEC(v53);
                  v23 = 1;
                }
                if ((*(_BYTE *)(v25 + 96) & 3) != 0)
                {
                  if (v24)
                    return 1;
                  v24 = 1;
                }
                v35 = sub_22E3CD31C((uint64_t *)(v25 + 96), v25);
                if (v35 == v9)
                  break;
                v25 = v35;
              }
              while (v35);
            }
          }
          else
          {
            if (v21)
            {
              if (sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x1B65u, *(_DWORD *)(v21 + 24), *(_QWORD *)(a1 + 104)) == 1)v36 = 0;
              else
                v36 = v22;
            }
            else
            {
              v36 = 0;
            }
            if (v36)
              v9 = v36;
            if ((unsigned __int16)*(_DWORD *)(v9 + 72) >> 13 != v8)
            {
              sub_22E8FCA40((_QWORD *)a1, a5, 0x1B65u, 0, (uint64_t)v53);
              if (v8)
              {
                if (v8 == 3)
                  v8 = 2;
                else
                  v8 = 1;
              }
              LODWORD(v45) = v8;
              v40 = sub_22E89519C((uint64_t)v53, (unsigned int *)&v45);
              v41 = sub_22E894E38(v40, (unsigned __int8 *)&v54);
              v42 = sub_22E8BAE44(v41, &v55);
              if (v11)
              {
                if (v11 == 3)
                  v11 = 2;
                else
                  v11 = 1;
              }
              LODWORD(__dst) = v11;
              sub_22E89519C(v42, (unsigned int *)&__dst);
              sub_22E903BEC(v53);
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v9 + 24), 0x6Fu, 0, (uint64_t)v44);
              sub_22E903BEC(v44);
              if (v36)
              {
                sub_22E8FCA40((_QWORD *)a1, a5, 0x17C6u, 0, (uint64_t)v53);
                v43 = (unsigned __int16)*(_DWORD *)(v9 + 72) >> 13;
                if ((unsigned __int16)*(_DWORD *)(v9 + 72) >> 13)
                {
                  if (v43 == 3)
                    v43 = 2;
                  else
                    v43 = 1;
                }
                v52 = v43;
                sub_22E89519C((uint64_t)v53, (unsigned int *)&v52);
                __asm { BR              X11 }
              }
            }
          }
        }
        else if (v11 != v8)
        {
          sub_22E8FCA40((_QWORD *)a1, a5, 0x1B65u, 0, (uint64_t)v53);
          if (v8)
          {
            if (v8 == 3)
              v8 = 2;
            else
              v8 = 1;
          }
          LODWORD(v45) = v8;
          v37 = sub_22E89519C((uint64_t)v53, (unsigned int *)&v45);
          v38 = sub_22E894E38(v37, (unsigned __int8 *)&v54);
          v39 = sub_22E8BAE44(v38, &v55);
          if (v11)
          {
            if (v11 == 3)
              v11 = 2;
            else
              v11 = 1;
          }
          LODWORD(__dst) = v11;
          sub_22E89519C(v39, (unsigned int *)&__dst);
          sub_22E903BEC(v53);
        }
      }
      return 1;
    }
  }
  return result;
}

void sub_22EA33AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,__int128 a22,__int128 __p,uint64_t a24,char a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  BYTE12(a22) = 0;
  *(_QWORD *)((char *)&a22 + 4) = 0;
  a25 = 0;
  a21 = v25 | (v27 << 32);
  LOBYTE(a22) = 1;
  *(_BYTE *)(v28 - 89) = 6;
  strcpy((char *)(v28 - 112), "struct");
  __p = *(_OWORD *)(v28 - 112);
  a24 = *(_QWORD *)(v28 - 96);
  sub_22E890748(v26, &a21);
  if (SHIBYTE(a24) < 0)
    operator delete((void *)__p);
  JUMPOUT(0x22EA339CCLL);
}

void sub_22EA33B78()
{
  JUMPOUT(0x22EA33B08);
}

void sub_22EA33B8C()
{
  JUMPOUT(0x22EA33B84);
}

void sub_22EA33B9C()
{
  JUMPOUT(0x22EA33B08);
}

void sub_22EA33BB0()
{
  JUMPOUT(0x22EA33B08);
}

unint64_t sub_22EA33BC4(unint64_t a1, uint64_t *a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, int a10, uint64_t a11, const void *a12, unint64_t a13, _BYTE *a14, _BYTE *a15, unsigned int a16, int a17, unsigned __int8 a18, unint64_t a19, char a20,int a21,char a22,char a23,uint64_t a24)
{
  int v24;
  unsigned int v25;
  uint64_t *v28;
  _BYTE *v30;
  _BOOL4 v31;
  int *v35;
  int v36;
  uint64_t v37;
  BOOL v38;
  int v40;
  BOOL v41;
  int v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t i;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v59;
  BOOL v60;
  BOOL v61;
  int v62;
  uint64_t v63;
  int v64;
  unsigned int v65;
  _BYTE *v66;
  char v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  int v80;
  __int16 v81;
  int v82;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  int v88;
  uint64_t v89;
  __int16 v90;
  int v91;
  BOOL v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  __int16 v97;
  int v98;
  uint64_t v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  BOOL v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v112;
  int v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  int *v122;
  int v123;
  uint64_t v124;
  int v125;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v140;
  unint64_t v141;
  int v142;
  char *v143;
  char *v144;
  uint64_t v145;
  _BYTE *v146;
  uint64_t v147;
  unint64_t *v148;
  unint64_t v149;
  int v150;
  int v152;
  unint64_t v153;
  unsigned int v154;
  uint64_t v155;
  uint64_t v157;
  _QWORD *v158;
  unint64_t v159;
  int v160;
  unint64_t v161;
  BOOL v162;
  uint64_t v163;
  unsigned int v164;
  uint64_t v165;
  unsigned int v166;
  BOOL v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  unint64_t v173;
  unsigned int v174;
  unint64_t v175;
  unsigned int v176;
  uint64_t v177;
  uint64_t v179;
  unint64_t v180;
  uint64_t v182;
  uint64_t v183;
  unsigned int *v184;
  uint64_t v185;
  _QWORD *v186;
  unint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  uint64_t v194;
  unsigned int v195;
  unint64_t v196;
  unsigned int v197;
  unint64_t v198;
  unint64_t v199;
  unsigned int v200;
  unint64_t v201;
  unsigned int v202;
  unint64_t v203;
  unsigned int *v204;
  unint64_t v205;
  _QWORD *v206;
  int v208;
  uint64_t v209;
  _QWORD *v210;
  unint64_t v211;
  unint64_t v212;
  unint64_t v213;
  unint64_t v214;
  uint64_t v215;
  char v216;
  char v217;
  _DWORD *v218;
  _BOOL4 v219;
  _BOOL4 v220;
  int v221;
  int v222;
  _QWORD *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  BOOL v228;
  int v229;
  uint64_t v230;
  unint64_t v231;
  unsigned int v232;
  uint64_t v233;
  int v235;
  uint64_t v236;
  unint64_t v237;
  uint64_t v238;
  unint64_t v239;
  unint64_t v240;
  unint64_t v241;
  unsigned __int8 *v242;
  unsigned __int8 *v243;
  uint64_t v244;
  uint64_t v245;
  unint64_t v246;
  uint64_t v247;
  int v248;
  unsigned int v249;
  unsigned int *v250;
  _BYTE *v251;
  _QWORD *v252;
  int v253;
  _QWORD *v254;
  uint64_t v255;
  int v256;
  _QWORD *v257;
  unsigned int v258;
  uint64_t v259;
  void **v260;
  BOOL v261;
  uint64_t v262;
  uint64_t *v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  uint64_t v267;
  unsigned int v268;
  uint64_t v269;
  void **v270;
  uint64_t v271;
  _QWORD *v272;
  unint64_t v273;
  uint64_t *v274;
  uint64_t *v275;
  uint64_t v276;
  unint64_t v277;
  int v278;
  uint64_t v279;
  unint64_t v280;
  uint64_t v281;
  _QWORD *v282;
  _DWORD *v283;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t *v291;
  uint64_t v292;
  unint64_t v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  int v300;
  char v301;
  _BOOL4 v302;
  void **v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  unint64_t v307;
  unint64_t v308;
  _DWORD *v309;
  BOOL v310;
  uint64_t v311;
  int v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  char v318;
  int v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  _QWORD *v323;
  void **v324;
  uint64_t *v325;
  _QWORD *v326;
  uint64_t v327;
  unsigned __int8 *v328;
  unsigned __int8 **v329;
  unsigned __int8 *v330;
  unsigned int v331;
  uint64_t v332;
  BOOL v333;
  unint64_t v334;
  unint64_t v335;
  uint64_t v336;
  _QWORD *v337;
  unint64_t v338;
  uint64_t v339;
  unint64_t v340;
  unint64_t v341;
  uint64_t *v342;
  int v343;
  _QWORD *v344;
  unsigned int v345;
  char *v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  unsigned int *v352;
  const void *v353;
  size_t v354;
  unsigned int v355;
  _WORD *v356;
  void **p_dst;
  void **v358;
  int v359;
  uint64_t v360;
  uint64_t v361;
  int v362;
  unsigned int v363;
  int v364;
  char v365;
  uint64_t v366;
  int v367;
  int v368;
  unint64_t v369;
  uint64_t v370;
  uint64_t v371;
  unsigned int v372;
  int v374;
  int v375;
  _BYTE v377[96];
  _BYTE v378[96];
  unsigned int v379[24];
  unsigned int v380[24];
  unsigned int v381[24];
  unsigned int v382[24];
  unsigned int v383[24];
  unsigned int v384[24];
  unsigned int v385[24];
  void *v386[2];
  void *__p[2];
  __int128 v388;
  uint64_t v389;
  uint64_t v390;
  int v391;
  uint64_t v392;
  _QWORD v393[2];
  void **v394;
  unsigned __int8 *v395;
  uint64_t v396;
  char v397;
  unsigned int v398;
  char v399;
  unint64_t v400;
  unsigned int v401[24];
  __int16 v402;
  unsigned int v403;
  uint64_t v404;
  __int128 __dst;
  uint64_t v406;
  void *v407;
  uint64_t v408;
  void *v409;
  uint64_t v410;
  _BYTE v411[64];
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  _QWORD *v415;
  uint64_t v416;
  int v417;
  _BYTE v418[24];
  char v419;
  BOOL v420;
  char v421;
  BOOL v422;
  __int16 v423;
  char v424;
  void **v425;
  __int128 v426;
  void *v427[2];
  uint64_t v428;
  char v429;
  char *v430;
  uint64_t v431;
  _QWORD v432[7];

  v24 = a8;
  v25 = a5;
  v28 = a2;
  v30 = a14;
  v374 = a10;
  v432[4] = *MEMORY[0x24BDAC8D0];
  v404 = a7;
  *a14 = 0;
  v403 = dword_22F46A298[a3 - 23];
  v402 = 0;
  if (a13)
    goto LABEL_8;
  if (!*(_DWORD *)a6 || !*(_DWORD *)(a6 + 4))
  {
    v31 = *(_QWORD *)(a6 + 8) != 0;
    if (!a4)
      goto LABEL_15;
LABEL_7:
    if (!v31)
      goto LABEL_15;
LABEL_8:
    v35 = sub_22ED5F458((_QWORD *)a1, a5, a8, a6, 0, (uint64_t)a12, a13, a4 == 3, (_BYTE *)&v402 + 1, &v402, 0);
    if (v35)
    {
      if (v403 == 4)
      {
        sub_22E8FCA40((_QWORD *)a1, a5, 0xEu, 0, (uint64_t)v401);
        sub_22E903BEC(v401);
        return 0;
      }
      if ((v35[3] & 0x1FFFFFFF) != 0)
      {
        if (!(_BYTE)v402)
        {
          *a14 = 0;
          return sub_22ED5BEC0(a1, a2, a3, a4, a5, a6, v404, v24, a9, v35, a10, v362, a11, 0, 0, 0, (int)a13 - 1, a12, a24);
        }
        return 0;
      }
      sub_22E8FCA40((_QWORD *)a1, *v35, 0x12FCu, 0, (uint64_t)&v408);
      v51 = qword_22F46A2B0[v403];
      v393[0] = off_24FAB7A20[v403];
      v393[1] = v51;
      v52 = sub_22F2F2210((uint64_t)&v408, (uint64_t)v393);
      sub_22E8BAE44(v52, &v404);
      sub_22E903BEC((unsigned int *)&v408);
      v36 = 1;
      HIBYTE(v402) = 1;
    }
    else
    {
      v36 = HIBYTE(v402);
    }
    v25 = a5;
    v28 = a2;
    if (!a13 || !v36 || (sub_22ED5CF60((_QWORD *)a1, a2, *((int **)a12 + a13 - 1)) & 1) == 0)
      goto LABEL_15;
    return 0;
  }
  v31 = 1;
  if (a4)
    goto LABEL_7;
LABEL_15:
  v37 = a16;
  if (a20)
    v38 = 0;
  else
    v38 = a19 == 0;
  v40 = !v38 || a16 != 0;
  v368 = v40;
  v375 = a4;
  v372 = v25;
  if (v403 != 4)
    goto LABEL_43;
  if (a19)
    v41 = 1;
  else
    v41 = a16 == 0;
  v42 = v41;
  if (a20 || !v42)
    goto LABEL_65;
  if (!a19)
  {
    v45 = *(_QWORD *)(a1 + 88);
    if (*(_DWORD *)(*(_QWORD *)(v45 + 15088) + 148) == 11 && (a4 == 2 || (**(_BYTE **)(a1 + 72) & 0x10) != 0))
    {
LABEL_66:
      v369 = *(_QWORD *)(*(_QWORD *)(v45 + 16480) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFFBLL;
      goto LABEL_67;
    }
LABEL_43:
    v369 = 0;
    goto LABEL_67;
  }
  if (a19 >= 0x10)
  {
    v43 = 0;
    v46 = *(_QWORD *)(a19 & 0xFFFFFFFFFFFFFFF0);
    if (v46 && *(_BYTE *)(v46 + 16) == 57)
      v43 = *(uint64_t **)(v46 + 24);
  }
  else
  {
    v43 = 0;
  }
  if (sub_22EA3320C((_QWORD *)a1, v43))
    v47 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16480) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFFBLL;
  else
    v47 = (unint64_t)v43 | 4;
  v369 = v47;
  v48 = *v43;
  for (i = *v43; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_61;
      v50 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v50 <= 0x39)
        break;
LABEL_56:
      if (sub_22F115668(i))
        v48 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_64;
    }
    if (v50 == 24)
      goto LABEL_63;
    if (v50 == 26)
      break;
    if (((1 << v50) & 0x20000000200003CLL) == 0)
      goto LABEL_56;
LABEL_61:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_61;
LABEL_63:
  v48 = i;
LABEL_64:
  v53 = sub_22F115668(v48);
  if ((sub_22EE67290(a1, v53, (unint64_t *)v43, 6) & 1) != 0)
  {
LABEL_65:
    v45 = *(_QWORD *)(a1 + 88);
    goto LABEL_66;
  }
LABEL_67:
  v54 = *(_QWORD *)(a1 + 216);
  v400 = v54;
  v55 = *(_WORD *)(v54 + 8) & 0x7F;
  v56 = -40;
  if (v55 > 0x46)
  {
    if (v55 != 83)
    {
      if (v55 == 71)
      {
        v56 = -56;
      }
      else if (v55 != 81)
      {
        goto LABEL_78;
      }
    }
  }
  else
  {
    if (v55 > 0x18)
      goto LABEL_77;
    if (v55 == 16)
      goto LABEL_70;
    if (((1 << v55) & 0x1066) == 0)
    {
      if (v55 == 24)
        goto LABEL_70;
LABEL_77:
      if (v55 == 70)
        goto LABEL_80;
LABEL_78:
      if (v55 - 52 >= 6)
      {
        if (v55 - 33 < 5)
        {
LABEL_80:
          v56 = -64;
          goto LABEL_82;
        }
LABEL_70:
        v56 = -48;
        goto LABEL_82;
      }
      v56 = -72;
    }
  }
LABEL_82:
  v57 = sub_22EFB9D84(v54 + v56);
  v59 = a4 == 3 || a4 == 0;
  v408 = 0;
  v409 = v411;
  v410 = 0x800000000;
  v412 = 0;
  v413 = 0;
  v414 = 0;
  v415 = (_QWORD *)a1;
  v416 = v404;
  v417 = v24;
  sub_22EFC6D6C((uint64_t)v418, v404);
  *(_OWORD *)&v418[8] = xmmword_22F4555C0;
  v60 = !v59;
  v419 = !v59;
  if (v57)
    v60 = 0;
  v420 = v60;
  v421 = 1;
  v422 = v59;
  v423 = 0;
  v424 = 0;
  sub_22EC56024((uint64_t)&v408);
  if (!v404)
  {
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0)
    {
      v64 = v375;
      goto LABEL_211;
    }
    v81 = *(_WORD *)(v54 + 8);
    v64 = v375;
    if ((v81 & 0x7Fu) - 19 > 4)
    {
LABEL_211:
      v103 = v408;
      goto LABEL_212;
    }
    while (1)
    {
      v82 = v81 & 0x7F;
      v83 = -40;
      if (v82 > 70)
      {
        if (v82 != 83)
        {
          if (v82 == 71)
          {
            v83 = -56;
          }
          else if (v82 != 81)
          {
            goto LABEL_134;
          }
        }
      }
      else
      {
        if (v82 > 0x18)
          goto LABEL_133;
        if (v82 == 16)
          goto LABEL_126;
        if (((1 << v82) & 0x1066) != 0)
          goto LABEL_140;
        if (v82 == 24)
        {
LABEL_126:
          v83 = -48;
        }
        else
        {
LABEL_133:
          if (v82 != 70)
          {
LABEL_134:
            v84 = v82 - 52;
            if ((v82 - 33) >= 5)
              v85 = -48;
            else
              v85 = -64;
            if (v84 >= 6)
              v83 = v85;
            else
              v83 = -72;
            goto LABEL_140;
          }
          v83 = -64;
        }
      }
LABEL_140:
      v86 = *(_QWORD *)(v54 + v83 + 16);
      v54 = v86 & 0xFFFFFFFFFFFFFFF8;
      if ((v86 & 4) != 0)
        v54 = *(_QWORD *)v54;
      v81 = *(_WORD *)(v54 + 8);
      if ((v81 & 0x7Fu) - 19 >= 5)
        goto LABEL_211;
    }
  }
  if (*(_DWORD *)a6)
    v61 = *(_DWORD *)(a6 + 4) == 0;
  else
    v61 = 1;
  v62 = !v61;
  v63 = *(_QWORD *)(a6 + 8);
  if (v61 && !v63)
  {
    v64 = v375;
    if (v375)
    {
      if (v375 != 3)
      {
        v390 = v404;
        v391 = v24;
        sub_22EFC6D6C((uint64_t)&v392, v404);
        if ((sub_22EA14140((_QWORD *)a1, v54, (uint64_t)&v390) & 1) != 0)
          goto LABEL_664;
      }
    }
    sub_22EC63520(a1, (uint64_t)&v408, v28, 0, 0);
    v65 = v410;
    v363 = v24;
    if ((v375 - 1) > 1 || (_DWORD)v408 != 5)
    {
      v366 = (uint64_t)v28;
      v66 = a14;
      goto LABEL_153;
    }
    if (!(_DWORD)v410)
      goto LABEL_155;
    v366 = (uint64_t)v28;
    v66 = a14;
    v67 = 1;
    v68 = v409;
    v69 = (uint64_t *)v409;
    while (1)
    {
      v70 = v69;
      while (1)
      {
        v71 = *v70++;
        v72 = *(_QWORD *)((v71 & 0xFFFFFFFFFFFFFFFCLL) + 16);
        v73 = (_QWORD *)(v72 & 0xFFFFFFFFFFFFFFF8);
        if ((v72 & 4) != 0)
          v73 = (_QWORD *)*v73;
        v74 = sub_22EFCBB30((unint64_t)v73);
        v75 = sub_22EFCBB30(v54);
        if (!v75)
          break;
        v76 = v75;
        v77 = sub_22EFCC008(v74);
        v78 = sub_22EFCC008(v76);
        v68 = v409;
        v65 = v410;
        if (v77 != v78)
          break;
        v69 = v70;
        if (v70 == (uint64_t *)((char *)v409 + 8 * v410))
        {
          if ((v67 & 1) == 0)
            goto LABEL_152;
LABEL_153:
          v64 = v375;
          v30 = v66;
          v28 = (uint64_t *)v366;
          if (v375 != 3)
            goto LABEL_155;
          if (!v65)
            goto LABEL_155;
          v140 = sub_22F3B16C0(v54);
          if (!(_DWORD)v410)
            goto LABEL_155;
          v141 = v140;
          v365 = 0;
          v142 = 0;
          v143 = (char *)v409;
          v144 = (char *)v409;
          do
          {
            v145 = *(_QWORD *)v144;
            while (1)
            {
              v146 = v30;
              v147 = *(_QWORD *)((v145 & 0xFFFFFFFFFFFFFFFCLL) + 16);
              v148 = (unint64_t *)(v147 & 0xFFFFFFFFFFFFFFF8);
              v149 = v147 & 0xFFFFFFFFFFFFFFF8;
              if ((v147 & 4) != 0)
                v149 = *v148;
              v150 = *(_WORD *)(sub_22EFCBB30(v149) + 8) & 0x7F;
              if (v150 != 83 && v150 != 16)
              {
                v30 = v146;
                goto LABEL_314;
              }
              if ((v147 & 4) != 0)
                v148 = (unint64_t *)*v148;
              v30 = v146;
              if (sub_22EFCBE78(v141, (unint64_t)v148))
              {
                v143 = (char *)v409;
                goto LABEL_314;
              }
              v143 = (char *)v409;
              if ((**(_BYTE **)(a1 + 72) & 0x10) != 0)
                break;
              v145 = *((_QWORD *)v409 + v410 - 1);
              LODWORD(v410) = v410 - 1;
              v152 = v410;
              *(_QWORD *)v144 = v145;
              v142 = 1;
              if (v144 == &v143[8 * v152])
                goto LABEL_316;
            }
            v365 = 1;
LABEL_314:
            v144 += 8;
          }
          while (v144 != &v143[8 * v410]);
          if (v142)
LABEL_316:
            sub_22EA3DA00((uint64_t)&v408);
          v88 = v408;
          v64 = 3;
          v37 = a16;
          if ((_DWORD)v408 != 2 || (v365 & 1) == 0)
            goto LABEL_156;
          v153 = *(_QWORD *)v409 & 0xFFFFFFFFFFFFFFFCLL;
          v154 = *(_DWORD *)(v153 + 28) & 0x7F;
          v92 = v154 > 0x2F;
          v155 = (1 << v154) & 0xC00000060000;
          if (!v92 && v155 != 0)
            v153 = sub_22EFBAEA4(*(_QWORD *)v409 & 0xFFFFFFFFFFFFFFFCLL);
          sub_22E8FCA40((_QWORD *)a1, v363, 0x1486u, 0, (uint64_t)v393);
          v430 = (char *)v432;
          v431 = 0x400000000;
          v157 = *(_QWORD *)(v153 + 16);
          v158 = (_QWORD *)(v157 & 0xFFFFFFFFFFFFFFF8);
          if ((v157 & 4) != 0)
            v158 = (_QWORD *)*v158;
          v159 = sub_22EFCBB30((unint64_t)v158);
          v160 = *(_WORD *)(v159 + 8) & 0x7F;
          if (v160 == 83)
            goto LABEL_819;
          while (2)
          {
            if (v160 != 16
              || ((v161 = *(_QWORD *)(v159 - 8), v161 >= 8) ? (v162 = (*(_QWORD *)(v159 - 8) & 7) == 0) : (v162 = 0),
                  !v162))
            {
              v389 = 0;
              v388 = 0u;
              *(_OWORD *)__p = 0u;
              *(_OWORD *)v386 = 0u;
              goto LABEL_403;
            }
            v163 = v431;
            if (v431 >= (unint64_t)HIDWORD(v431))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v163 = v431;
            }
            *(_QWORD *)&v430[8 * v163] = v161 & 0xFFFFFFFFFFFFFFF8;
            LODWORD(v431) = v431 + 1;
            if (sub_22EC65CE0((_QWORD *)a1, v366, v161 & 0xFFFFFFFFFFFFFFF8, v363, 6, 0) == v159 - 48)
            {
              v30 = v146;
LABEL_819:
              v425 = v427;
              v426 = xmmword_22F44E300;
              sub_22F242C48((uint64_t)&__dst, (uint64_t)&v425);
              if ((*(_WORD *)(v159 + 8) & 0x7F) == 0x53)
              {
                if ((unint64_t)(v406 - (_QWORD)v407) > 1)
                {
                  *(_WORD *)v407 = 14906;
                  v407 = (char *)v407 + 2;
                }
                else
                {
                  llvm::raw_ostream::write((llvm::raw_ostream *)&__dst, "::");
                }
              }
              v346 = v430;
              v347 = v431;
              if ((_DWORD)v431)
              {
                v348 = &v430[8 * v431 - 8];
                if (v430 < v348)
                {
                  v349 = v430 + 8;
                  do
                  {
                    v350 = *((_QWORD *)v349 - 1);
                    *((_QWORD *)v349 - 1) = *(_QWORD *)v348;
                    *(_QWORD *)v348 = v350;
                    v348 -= 8;
                    v167 = v349 >= v348;
                    v349 += 8;
                  }
                  while (!v167);
                  v346 = v430;
                }
              }
              if ((_DWORD)v347)
              {
                v351 = 8 * v347;
                do
                {
                  v352 = *(unsigned int **)(*(_QWORD *)v346 + 16);
                  v355 = *v352;
                  v353 = v352 + 4;
                  v354 = v355;
                  v356 = v407;
                  if (v355 <= (unint64_t)(v406 - (_QWORD)v407))
                  {
                    if (v354)
                    {
                      memcpy(v407, v353, v354);
                      v356 = (char *)v407 + v354;
                      v407 = (char *)v407 + v354;
                    }
                    p_dst = (void **)&__dst;
                    v358 = &v407;
                  }
                  else
                  {
                    p_dst = (void **)llvm::raw_ostream::write((llvm::raw_ostream *)&__dst, (const char *)v353);
                    v358 = p_dst + 4;
                    v356 = p_dst[4];
                  }
                  if ((unint64_t)((_BYTE *)p_dst[3] - (_BYTE *)v356) > 1)
                  {
                    *v356 = 14906;
                    *v358 = (char *)*v358 + 2;
                  }
                  else
                  {
                    llvm::raw_ostream::write((llvm::raw_ostream *)p_dst, "::");
                  }
                  v346 += 8;
                  v351 -= 8;
                }
                while (v351);
              }
              sub_22E729148(v425, v426, v363, 0, (uint64_t)v386);
              llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&__dst);
              if (v425 != v427)
                free(v425);
LABEL_403:
              v64 = 3;
              if (v430 != (char *)v432)
                free(v430);
              sub_22E890748((uint64_t)v393, v386);
              if (SHIBYTE(v388) < 0)
                operator delete(__p[1]);
              sub_22E903BEC((unsigned int *)v393);
LABEL_155:
              v88 = v408;
              v37 = a16;
LABEL_156:
              if (v88 != 5)
              {
                v89 = **(_QWORD **)(a1 + 72);
                if (v64 && (v89 & 0x100) == 0)
                {
                  v24 = v363;
                  while (2)
                  {
                    v90 = *(_WORD *)(v54 + 8);
                    v91 = v90 & 0x7F;
                    if ((v90 & 0x7Eu) - 34 >= 4)
                    {
                      v92 = v91 != 33 && (v91 - 19) > 4;
                      if (v92)
                        goto LABEL_211;
                    }
                    v93 = -40;
                    if (v91 > 70)
                    {
                      if (v91 != 83)
                      {
                        if (v91 == 71)
                        {
                          v93 = -56;
                        }
                        else if (v91 != 81)
                        {
                          goto LABEL_176;
                        }
                      }
                    }
                    else
                    {
                      if (v91 > 0x18)
                        goto LABEL_175;
                      if (v91 == 16)
                        goto LABEL_168;
                      if (((1 << v91) & 0x1066) == 0)
                      {
                        if (v91 == 24)
                        {
LABEL_168:
                          v93 = -48;
                        }
                        else
                        {
LABEL_175:
                          if (v91 == 70)
                          {
                            v93 = -64;
                          }
                          else
                          {
LABEL_176:
                            v94 = v91 - 52;
                            if ((v91 - 33) >= 5)
                              v95 = -48;
                            else
                              v95 = -64;
                            if (v94 >= 6)
                              v93 = v95;
                            else
                              v93 = -72;
                          }
                        }
                      }
                    }
                    v96 = *(_QWORD *)(v54 + v93 + 16);
                    v54 = v96 & 0xFFFFFFFFFFFFFFF8;
                    if ((v96 & 4) != 0)
                      v54 = *(_QWORD *)v54;
                    continue;
                  }
                }
                v24 = v363;
                if ((v89 & 0x100) != 0)
                {
                  v97 = *(_WORD *)(v54 + 8);
                  if ((v97 & 0x7Fu) - 19 <= 4)
                  {
                    while (2)
                    {
                      v98 = v97 & 0x7F;
                      v99 = -40;
                      if (v98 > 70)
                      {
                        if (v98 != 83)
                        {
                          if (v98 == 71)
                          {
                            v99 = -56;
                          }
                          else if (v98 != 81)
                          {
                            goto LABEL_199;
                          }
                        }
                      }
                      else
                      {
                        if (v98 > 0x18)
                          goto LABEL_198;
                        if (v98 == 16)
                          goto LABEL_191;
                        if (((1 << v98) & 0x1066) == 0)
                        {
                          if (v98 == 24)
                          {
LABEL_191:
                            v99 = -48;
                          }
                          else
                          {
LABEL_198:
                            if (v98 == 70)
                            {
                              v99 = -64;
                            }
                            else
                            {
LABEL_199:
                              v100 = v98 - 52;
                              if ((v98 - 33) >= 5)
                                v101 = -48;
                              else
                                v101 = -64;
                              if (v100 >= 6)
                                v99 = v101;
                              else
                                v99 = -72;
                            }
                          }
                        }
                      }
                      v102 = *(_QWORD *)(v54 + v99 + 16);
                      v54 = v102 & 0xFFFFFFFFFFFFFFF8;
                      if ((v102 & 4) != 0)
                        v54 = *(_QWORD *)v54;
                      v97 = *(_WORD *)(v54 + 8);
                      if ((v97 & 0x7Fu) - 19 >= 5)
                        goto LABEL_211;
                      continue;
                    }
                  }
                }
                goto LABEL_211;
              }
LABEL_664:
              v44 = 0;
              goto LABEL_665;
            }
            v164 = *(_WORD *)(v159 + 8) & 0x7F;
            v165 = -40;
            if (v164 > 0x46)
            {
              v30 = v146;
              if (v164 != 83)
              {
                if (v164 == 71)
                {
                  v165 = -56;
                }
                else if (v164 != 81)
                {
                  goto LABEL_347;
                }
              }
            }
            else
            {
              v30 = v146;
              if (v164 > 0x18)
                goto LABEL_346;
              if (v164 == 16)
                goto LABEL_339;
              if (((1 << v164) & 0x1066) == 0)
              {
                if (v164 == 24)
                {
LABEL_339:
                  v165 = -48;
                }
                else
                {
LABEL_346:
                  if (v164 == 70)
                  {
                    v165 = -64;
                  }
                  else
                  {
LABEL_347:
                    v166 = v164 - 52;
                    v167 = v164 - 33 >= 5;
                    v168 = -64;
                    if (v167)
                      v168 = -48;
                    v167 = v166 >= 6;
                    v165 = -72;
                    if (v167)
                      v165 = v168;
                  }
                }
              }
            }
            v169 = *(_QWORD *)(v159 + v165 + 16);
            v159 = v169 & 0xFFFFFFFFFFFFFFF8;
            if ((v169 & 4) != 0)
              v159 = *(_QWORD *)v159;
            v160 = *(_WORD *)(v159 + 8) & 0x7F;
            if (v160 == 83)
              goto LABEL_819;
            continue;
          }
        }
      }
      v67 = 0;
      v79 = v68[--v65];
      LODWORD(v410) = v65;
      *v69 = v79;
      if (v69 == &v68[v65])
      {
LABEL_152:
        sub_22EA3DA00((uint64_t)&v408);
        v65 = v410;
        goto LABEL_153;
      }
    }
  }
  if (v63)
    v62 = 0;
  v64 = v375;
  if (v62 == 1)
  {
    v80 = 0;
    v364 = 0;
    v367 = 0;
    v404 = 0;
    goto LABEL_502;
  }
  if (v375 != 3 && v375)
  {
    v87 = sub_22E958204(a1, a6, 1);
    v400 = v87;
    if (!v87)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)a6, 0xCA7u, 0, (uint64_t)v393);
      v425 = *(void ***)a6;
      sub_22E8906A0((uint64_t)v393, (uint64_t *)&v425);
      sub_22E903BEC((unsigned int *)v393);
      goto LABEL_664;
    }
  }
  else
  {
    v87 = sub_22E958204(a1, a6, 0);
    v400 = v87;
    if (!v87)
    {
LABEL_149:
      v44 = 0;
      *a15 = 1;
      goto LABEL_665;
    }
  }
  if ((sub_22E958490((_QWORD *)a1, a6, v87) & 1) != 0)
    goto LABEL_664;
  v54 = v400;
  sub_22EC611AC(a1, (uint64_t)&v408, v400, 0);
  v103 = v408;
  if ((_DWORD)v408 == 5)
    goto LABEL_664;
  if (!(_DWORD)v410)
  {
    if ((_DWORD)v408 == 1 && (v375 == 3 || !v375))
      goto LABEL_149;
    sub_22E8FCA40((_QWORD *)a1, v24, 0xFDFu, 0, (uint64_t)v393);
    v127 = sub_22E8900C4((uint64_t)v393, (int *)&v403);
    v128 = sub_22E8BAE44(v127, &v404);
    v129 = sub_22E894FB4(v128, (uint64_t *)&v400);
    v425 = *(void ***)a6;
    sub_22E8906A0(v129, (uint64_t *)&v425);
    sub_22E903BEC((unsigned int *)v393);
    v80 = 0;
    v364 = 0;
    v367 = 0;
    v404 = 0;
    LOBYTE(v402) = 1;
    goto LABEL_502;
  }
LABEL_212:
  v104 = a6;
  if (v103 == 2)
  {
    v105 = *(_QWORD *)v409 & 0xFFFFFFFFFFFFFFFCLL;
    v106 = *(_DWORD *)(v105 + 28) & 0x7F;
    v107 = v106 > 0x2F || ((1 << v106) & 0xC00000060000) == 0;
    v108 = *(_DWORD *)(v105 + 28) & 0x7F;
    if (!v107)
    {
      v109 = sub_22EFBAEA4(*(_QWORD *)v409 & 0xFFFFFFFFFFFFFFFCLL);
      v104 = a6;
      v108 = *(_DWORD *)(v109 + 28) & 0x7F;
    }
    v92 = v108 > 0x3B;
    v110 = (1 << v108) & 0x800004100000000;
    if (!v92 && v110 != 0)
    {
      if (v106 <= 0x2F && ((1 << v106) & 0xC00000060000) != 0)
        v105 = sub_22EFBAEA4(v105);
      sub_22F34553C(a1, v24, v105);
      LODWORD(v408) = 0;
      LODWORD(v410) = 0;
      if (v412)
      {
        v131 = sub_22EC6CBD0(v412);
        MEMORY[0x2348A0E9C](v131, 0x10E0C409F09D3C3);
      }
      HIBYTE(v423) = 0;
      v412 = 0;
      v413 = 0;
      v104 = a6;
    }
  }
  v80 = 0;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0 || !v404)
  {
    v113 = 0;
    v367 = 0;
    goto LABEL_233;
  }
  v112 = v400;
  v113 = 0;
  v367 = 0;
  if (v400)
  {
    v114 = *(_QWORD *)(a1 + 3352);
    if (!v114)
    {
      v80 = 0;
      v113 = 0;
      v367 = 0;
      goto LABEL_233;
    }
    if ((v114 & 1) != 0
      && (v114 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 16048)
                                                                     + 16))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16048), v114 >> 1), (*(_QWORD *)(a1 + 3352) = v114) == 0)|| (v115 = v114 + 48, v116 = sub_22EFCC008(v112), v116 != sub_22EFCC008(v115)))
    {
LABEL_229:
      v80 = 0;
      v113 = 0;
      v367 = 0;
      goto LABEL_230;
    }
    v122 = *(int **)(v404 + 16);
    v123 = *v122;
    if (*v122 == 19)
    {
      v135 = *((_QWORD *)v122 + 2);
      v136 = *((_QWORD *)v122 + 3);
      v137 = *(_QWORD *)((char *)v122 + 27);
      if (v135 != 0x645F657079745F5FLL || v136 != 0x6F74706972637365 || v137 != 0x745F726F74706972)
        goto LABEL_229;
      v104 = a6;
      if ((_DWORD)v410 || (v199 = *(_QWORD *)(a1 + 3376)) == 0)
      {
        v113 = 0;
        v367 = 0;
        v80 = 1;
        goto LABEL_233;
      }
      if ((v199 & 1) != 0)
      {
        v199 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 16048) + 16))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16048), v199 >> 1);
        *(_QWORD *)(a1 + 3376) = v199;
        v200 = v410;
      }
      else
      {
        v200 = 0;
      }
      v341 = *(unsigned int *)(v199 + 28);
      if (v200 >= HIDWORD(v410))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v200 = v410;
      }
      v367 = 0;
      *((_QWORD *)v409 + v200) = v199 | (v341 >> 13) & 3;
      LODWORD(v410) = v410 + 1;
      v113 = 0;
      LODWORD(v408) = 2;
      v80 = 1;
    }
    else
    {
      if (v123 != 11)
      {
        if (v123 != 9)
          goto LABEL_229;
        v124 = *((_QWORD *)v122 + 2);
        v125 = *((unsigned __int8 *)v122 + 24);
        if (v124 != 0x6F6C6C615F646162 || v125 != 99)
          goto LABEL_229;
        v104 = a6;
        if (!(_DWORD)v410)
        {
          v201 = *(_QWORD *)(a1 + 3360);
          if (v201)
          {
            if ((v201 & 1) != 0)
            {
              v201 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 16048)
                                                                         + 16))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16048), v201 >> 1);
              *(_QWORD *)(a1 + 3360) = v201;
              v202 = v410;
            }
            else
            {
              v202 = 0;
            }
            v203 = *(unsigned int *)(v201 + 28);
            if (v202 >= HIDWORD(v410))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v202 = v410;
            }
            v80 = 0;
            *((_QWORD *)v409 + v202) = v201 | (v203 >> 13) & 3;
            LODWORD(v410) = v410 + 1;
            v113 = 0;
            LODWORD(v408) = 2;
            v367 = 1;
            goto LABEL_424;
          }
        }
        v80 = 0;
        v113 = 0;
        v367 = 1;
        goto LABEL_233;
      }
      v132 = *((_QWORD *)v122 + 2);
      v133 = *(_QWORD *)((char *)v122 + 19);
      if (v132 != 0x61765F6E67696C61 || v133 != 0x745F6C61765F6E67)
        goto LABEL_229;
      v104 = a6;
      if ((_DWORD)v410 || (v196 = *(_QWORD *)(a1 + 3368)) == 0)
      {
        v80 = 0;
        v367 = 0;
        v113 = 1;
        goto LABEL_233;
      }
      if ((v196 & 1) != 0)
      {
        v196 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 16048) + 16))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16048), v196 >> 1);
        *(_QWORD *)(a1 + 3368) = v196;
        v197 = v410;
      }
      else
      {
        v197 = 0;
      }
      v198 = *(unsigned int *)(v196 + 28);
      if (v197 >= HIDWORD(v410))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v197 = v410;
      }
      v80 = 0;
      v367 = 0;
      *((_QWORD *)v409 + v197) = v196 | (v198 >> 13) & 3;
      LODWORD(v410) = v410 + 1;
      LODWORD(v408) = 2;
      v113 = 1;
LABEL_424:
      v64 = v375;
    }
LABEL_230:
    v104 = a6;
  }
LABEL_233:
  v364 = v113;
  if (!v404)
    goto LABEL_370;
  v117 = v372;
  if ((_DWORD)v410 || v64 && v64 != 3 && !a23)
    goto LABEL_370;
  if ((_BYTE)v402)
    goto LABEL_503;
  v370 = v37;
  if (v64 && !a23)
  {
    v54 = sub_22F3B16C0(v54);
    v118 = **(_QWORD **)(a1 + 72);
  }
  else
  {
    v54 = sub_22EA2221C(v54);
    v118 = **(_QWORD **)(a1 + 72);
    v28 = sub_22EA36C78(v28, v118);
  }
  v119 = *(_QWORD *)(a1 + 216);
  v120 = *(_WORD *)(v119 + 8) & 0x7F;
  v121 = -40;
  if (v120 > 0x46)
  {
    if (v120 != 83)
    {
      if (v120 == 71)
      {
        v121 = -56;
      }
      else if (v120 != 81)
      {
        goto LABEL_362;
      }
    }
  }
  else
  {
    if (v120 > 0x18)
      goto LABEL_361;
    if (v120 == 16)
      goto LABEL_245;
    if (((1 << v120) & 0x1066) == 0)
    {
      if (v120 == 24)
        goto LABEL_245;
LABEL_361:
      if (v120 == 70)
        goto LABEL_364;
LABEL_362:
      if (v120 - 52 >= 6)
      {
        if (v120 - 33 < 5)
        {
LABEL_364:
          v121 = -64;
          goto LABEL_366;
        }
LABEL_245:
        v121 = -48;
        goto LABEL_366;
      }
      v121 = -72;
    }
  }
LABEL_366:
  v170 = sub_22EFB9D84(v119 + v121);
  v419 = 1;
  v420 = v170 == 0;
  sub_22EC56024((uint64_t)&v408);
  if ((v118 & 0x100) != 0)
    sub_22EC611AC(a1, (uint64_t)&v408, v54, 0);
  else
    sub_22EC63520(a1, (uint64_t)&v408, v28, 0, 0);
  v104 = a6;
  v37 = v370;
LABEL_370:
  v171 = v410;
  if (a24 && !(_DWORD)v410)
  {
    v172 = *(_QWORD *)(a24 + 8);
    if (!v172)
      goto LABEL_502;
    v173 = *(unsigned int *)(v172 + 28);
    if (HIDWORD(v410))
    {
      v174 = 0;
    }
    else
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v174 = v410;
    }
    *((_QWORD *)v409 + v174) = (v173 >> 13) & 3 | v172;
    v171 = v410 + 1;
    LODWORD(v410) = v410 + 1;
    LODWORD(v408) = 2;
    v104 = a6;
  }
  if (!v171)
  {
LABEL_502:
    v117 = v372;
    goto LABEL_503;
  }
  v371 = v37;
  v386[0] = 0;
  v175 = *(_QWORD *)v409 & 0xFFFFFFFFFFFFFFFCLL;
  v176 = *(_DWORD *)(v175 + 28) & 0x7F;
  v92 = v176 > 0x2F;
  v177 = (1 << v176) & 0xC00000060000;
  if (v92 || v177 == 0)
  {
    v180 = *(_QWORD *)v409 & 0xFFFFFFFFFFFFFFFCLL;
  }
  else
  {
    v179 = sub_22EFBAEA4(v175);
    v104 = a6;
    v180 = v179;
  }
  v386[0] = (void *)v180;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0
    && (*(_DWORD *)(v180 + 28) & 0x7Fu) - 42 >= 0xFFFFFFFD
    && v180 != 0)
  {
    if ((v182 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v180 + 80) & 0xFFFFFFFFFFFFFFF8)
                                       + ((2 * *(_QWORD *)(v180 + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0)) != 0
      && (*(_DWORD *)(v182 + 16) & 0xFE) == 0x2C
      || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v182 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x2C
      && (v182 = sub_22F10CF48(v182), v104 = a6, v182))
    {
      v183 = sub_22F114198(*(_QWORD *)(v182 + 24));
      v104 = a6;
      if (*(_QWORD *)(v183 + 40) == v404)
      {
        v184 = (unsigned int *)v183;
        v185 = *(_QWORD *)(v183 + 16);
        v186 = (_QWORD *)(v185 & 0xFFFFFFFFFFFFFFF8);
        if ((v185 & 4) != 0)
          v186 = (_QWORD *)*v186;
        v187 = sub_22EFCBB30((unint64_t)v186);
        v188 = *(_QWORD *)(v180 + 16);
        v189 = (_QWORD *)(v188 & 0xFFFFFFFFFFFFFFF8);
        if ((v188 & 4) != 0)
          v189 = (_QWORD *)*v189;
        v190 = sub_22EFCBB30((unint64_t)v189);
        v104 = a6;
        if (v190)
        {
          v191 = v190;
          v192 = sub_22EFCC008(v187);
          v193 = sub_22EFCC008(v191);
          v104 = a6;
          if (v192 == v193)
          {
            v386[0] = v184;
            LODWORD(v408) = 0;
            LODWORD(v410) = 0;
            if (v412)
            {
              v194 = sub_22EC6CBD0(v412);
              MEMORY[0x2348A0E9C](v194, 0x10E0C409F09D3C3);
              v195 = v410;
            }
            else
            {
              v195 = 0;
            }
            HIBYTE(v423) = 0;
            v412 = 0;
            v413 = 0;
            v204 = v184;
            v205 = v184[7];
            if (v195 >= HIDWORD(v410))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v195 = v410;
            }
            *((_QWORD *)v409 + v195) = (v205 >> 13) & 3 | (unint64_t)v204;
            LODWORD(v410) = v410 + 1;
            LODWORD(v408) = 2;
            sub_22EC561E4((uint64_t)&v408);
            v104 = a6;
          }
        }
      }
    }
  }
  v37 = v371;
  if (v175 && (*(_DWORD *)(v175 + 28) & 0x7E) == 0x2E)
  {
    v206 = (*((_DWORD *)v386[0] + 7) & 0x7Fu) - 33 >= 5 ? 0 : v386[0];
    if ((!*(_DWORD *)(v104 + 4) || *(_DWORD *)v104 == 0) && !*(_QWORD *)(v104 + 8))
    {
      if (v375)
      {
        if (v375 != 3)
        {
          v208 = sub_22E8CE620(a1 + 3320, (_QWORD *)v175, v54, v28, HIBYTE(v402));
          v104 = a6;
          if (v208)
          {
            if (!v206)
              goto LABEL_449;
            v209 = v206[2];
            v210 = (_QWORD *)(v209 & 0xFFFFFFFFFFFFFFF8);
            if ((v209 & 4) != 0)
              v210 = (_QWORD *)*v210;
            v211 = sub_22EFCBB30((unint64_t)v210);
            v212 = sub_22EFCBB30(v54);
            if (!v212
              || (v213 = sub_22EFCC008(v211), v214 = sub_22EFCC008(v212),
                                              v104 = a6,
                                              v38 = v213 == v214,
                                              v37 = v371,
                                              !v38))
            {
              if ((**(_BYTE **)(a1 + 72) & 0x10) == 0
                || (v216 = sub_22EFCBE78(v211, v212), v104 = a6, (v216 & 1) == 0)
                && (v217 = sub_22EFCBE78(v212, v211), v104 = a6, (v217 & 1) == 0))
              {
LABEL_449:
                sub_22E8FCA40((_QWORD *)a1, v372, 0x13E4u, 0, (uint64_t)v385);
                sub_22E903BEC(v385);
                sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(*(_QWORD *)(v175 + 64) + 24), 0x1812u, 0, (uint64_t)v384);
                sub_22E903BEC(v384);
                do
                  v175 = *(_QWORD *)(v175 + 72);
                while (v175 && (*(_DWORD *)(v175 + 28) & 0x7E) == 0x2E);
                sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v175 + 24), 0x180Fu, 0, (uint64_t)v393);
                LODWORD(v425) = 0;
                sub_22E8900C4((uint64_t)v393, (int *)&v425);
                sub_22E903BEC((unsigned int *)v393);
                LODWORD(v408) = 0;
                LODWORD(v410) = 0;
                if (v412)
                {
                  v215 = sub_22EC6CBD0(v412);
                  MEMORY[0x2348A0E9C](v215, 0x10E0C409F09D3C3);
                }
                HIBYTE(v423) = 0;
                v412 = 0;
                v413 = 0;
                goto LABEL_502;
              }
            }
          }
        }
      }
    }
  }
  v218 = v386[0];
  if (!v386[0] || (*((_DWORD *)v386[0] + 7) & 0x7Fu) - 38 < 0xFFFFFFFB)
  {
    if (v375 != 3 && v375 || v419)
    {
      v220 = *(_DWORD *)v104 && *(_DWORD *)(v104 + 4) || *(_QWORD *)(v104 + 8) != 0;
      if (HIBYTE(v402))
        v221 = 1;
      else
        v221 = v220;
      v222 = sub_22E8CE620(a1 + 3320, (_QWORD *)v175, v54, v28, v221);
      v117 = v372;
      if (v222)
      {
        if (v375 == 3 || !v375)
        {
          LODWORD(v425) = 0;
          LODWORD(v425) = sub_22F31E40C(a1, (uint64_t)v386[0], v403);
          sub_22E8FCA40((_QWORD *)a1, v24, 0x12A4u, 0, (uint64_t)v393);
          sub_22E8900C4((uint64_t)v393, (int *)&v425);
          sub_22E903BEC((unsigned int *)v393);
          sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v386[0] + 6), 0x1771u, 0, (uint64_t)v393);
          sub_22E890024((uint64_t)v393, (uint64_t *)v386);
          sub_22E903BEC((unsigned int *)v393);
          LOBYTE(v402) = 1;
        }
        else
        {
          v223 = v386[0];
          if (v386[0] && (*((_DWORD *)v386[0] + 7) & 0x7Fu) - 42 >= 0xFFFFFFFD)
          {
            LODWORD(__dst) = (*((_DWORD *)v386[0] + 7) & 0x7F) == 40;
            sub_22E8FCA40((_QWORD *)a1, v24, 0x12A2u, 0, (uint64_t)v393);
            v224 = sub_22E8BAE44((uint64_t)v393, &v404);
            v225 = sub_22E89519C(v224, (unsigned int *)&__dst);
            v425 = *(void ***)((v223[10] & 0xFFFFFFFFFFFFFFF8) + ((2 * v223[10]) & 8));
            sub_22E8901B8(v225, (uint64_t *)&v425);
            sub_22E903BEC((unsigned int *)v393);
            sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v386[0] + 6), 0x1771u, 0, (uint64_t)v393);
            sub_22E890024((uint64_t)v393, (uint64_t *)v386);
            sub_22E903BEC((unsigned int *)v393);
          }
          else
          {
            sub_22E8FCA40((_QWORD *)a1, v24, 0x1215u, 0, (uint64_t)v393);
            sub_22E8BAE44((uint64_t)v393, &v404);
            sub_22E903BEC((unsigned int *)v393);
            sub_22F31D30C(a1, (unint64_t)v386[0], v24);
            v404 = 0;
          }
          LOBYTE(v402) = 1;
          v117 = v372;
        }
      }
    }
    else
    {
      LODWORD(v425) = 0;
      LODWORD(v425) = sub_22F31E40C(a1, (uint64_t)v386[0], v403);
      sub_22E8FCA40((_QWORD *)a1, v24, 0x12A5u, 0, (uint64_t)v393);
      v297 = sub_22E890024((uint64_t)v393, (uint64_t *)v386);
      v298 = sub_22E8900C4(v297, (int *)&v425);
      sub_22E8900C4(v298, (int *)&v403);
      sub_22E903BEC((unsigned int *)v393);
      sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v386[0] + 6), 0x64u, 0, (uint64_t)v379);
      sub_22E903BEC(v379);
      LOBYTE(v402) = 1;
      v117 = v372;
    }
    LODWORD(v408) = 0;
    LODWORD(v410) = 0;
    if (v412)
    {
      v226 = sub_22EC6CBD0(v412);
      MEMORY[0x2348A0E9C](v226, 0x10E0C409F09D3C3);
    }
    HIBYTE(v423) = 0;
    v412 = 0;
    v413 = 0;
    goto LABEL_503;
  }
  if (v375 && v375 != 3)
  {
    v219 = *(_DWORD *)v104 && *(_DWORD *)(v104 + 4) || *(_QWORD *)(v104 + 8) != 0;
    v227 = HIBYTE(v402) || v219;
    if (!sub_22E8CE620(a1 + 3320, (_QWORD *)v175, v54, v28, v227))
    {
      LODWORD(v408) = 0;
      LODWORD(v410) = 0;
      if (v412)
      {
        v230 = sub_22EC6CBD0(v412);
        MEMORY[0x2348A0E9C](v230, 0x10E0C409F09D3C3);
      }
      HIBYTE(v423) = 0;
      v412 = 0;
      v413 = 0;
      goto LABEL_502;
    }
  }
  v117 = v372;
  if ((sub_22EA33594(a1, (unint64_t)v218, v403, v375 == 2, v372, v404) & 1) != 0)
  {
LABEL_690:
    v288 = v403;
    goto LABEL_691;
  }
  v228 = (v218[18] & 0xE000) == 0x8000 || v403 == 4;
  v229 = !v228;
  if (!v228)
  {
    sub_22E8FCA40((_QWORD *)a1, v372, 0x13E0u, 0, (uint64_t)v393);
    sub_22E8BAE44((uint64_t)v393, &v404);
    __asm { BR              X11 }
  }
  sub_22E8FCA40((_QWORD *)a1, v372, 0x13E0u, 0, (uint64_t)v393);
  sub_22E8BAE44((uint64_t)v393, &v404);
  sub_22E903BEC((unsigned int *)v393);
  sub_22E8FCA40((_QWORD *)a1, v218[6], 0x6Fu, 0, (uint64_t)v383);
  sub_22E903BEC(v383);
  if (!v229)
  {
    v404 = 0;
    LODWORD(v408) = 0;
    LODWORD(v410) = 0;
    if (v412)
    {
      v289 = sub_22EC6CBD0(v412);
      MEMORY[0x2348A0E9C](v289, 0x10E0C409F09D3C3);
    }
    HIBYTE(v423) = 0;
    v412 = 0;
    v413 = 0;
    LOBYTE(v402) = 1;
    goto LABEL_690;
  }
  v288 = (unsigned __int16)v218[18] >> 13;
  v403 = v288;
LABEL_691:
  v290 = a6;
  if (v288 == 4 && (v218[18] & 0xE000) == 0x8000)
  {
    if (v375 && v375 != 3)
    {
      v291 = (uint64_t *)(v369 & 0xFFFFFFFFFFFFFFF8);
      if ((v369 & 4) != 0 && v291)
      {
        v292 = *v291;
        v293 = *(_QWORD *)(v292 & 0xFFFFFFFFFFFFFFF0);
        v294 = v371;
        if ((*(_BYTE *)(v293 + 8) & 0xF) != 0)
          v293 = (unint64_t)sub_22F10D2BC(v292);
        v295 = v293 & 0xFFFFFFFFFFFFFFF0;
      }
      else
      {
        if ((v369 & 4) != 0 || v291 == 0)
          v295 = 0;
        else
          v295 = v369 & 0xFFFFFFFFFFFFFFF0;
        v294 = v371;
      }
      if (v24)
        v300 = v24;
      else
        v300 = v372;
      v301 = sub_22EA333A0((_QWORD *)a1, v300, v294 != 0, v295, v368, (uint64_t)v218);
      if (v375 == 1)
        v44 = (uint64_t)v218;
      else
        v44 = 0;
      v290 = a6;
      if ((v301 & 1) != 0)
        goto LABEL_665;
      goto LABEL_719;
    }
LABEL_730:
    v44 = (uint64_t)v218;
    goto LABEL_665;
  }
LABEL_719:
  if (v375 == 1)
  {
    v302 = sub_22E8BB0E8((uint64_t)v386[0]);
    v290 = a6;
    if (v302)
    {
      v303 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(v28 + 9), v386[0]);
      v304 = v28[10];
      v305 = 88;
      if (v304 == v28[9])
        v305 = 92;
      v290 = a6;
      if (v303 != (void **)(v304 + 8 * *(unsigned int *)((char *)v28 + v305)))
      {
        sub_22E8FCA40((_QWORD *)a1, v24, 0x14A6u, 0, (uint64_t)v382);
        sub_22E903BEC(v382);
        sub_22E8FCA40((_QWORD *)a1, v218[6], 0x6Cu, 0, (uint64_t)v381);
        sub_22E903BEC(v381);
        v290 = a6;
      }
    }
  }
  v37 = v371;
  if ((_BYTE)v402)
    goto LABEL_503;
  if (v375 == 3 || !v375)
  {
    v306 = *(_QWORD *)(a9 + 8);
    if (v306 < 8 || (v306 & 4) != 0 && (v307 = v306 & 0xFFFFFFFFFFFFFFF8) != 0 && !*(_DWORD *)(v307 + 8))
    {
      if (v375)
        goto LABEL_730;
      v312 = v218[7];
      if ((v312 & 0x1800000) != 0 && (v312 & 0x220000) == 0)
        goto LABEL_789;
      v313 = *((_QWORD *)v386[0] + 1) & 6;
      if ((*((_BYTE *)v386[0] + 29) & 0x80) != 0)
      {
        if (v313)
        {
          v314 = sub_22EFC7594((unint64_t)v386[0]);
          v290 = a6;
          goto LABEL_785;
        }
      }
      else if (v313)
      {
        v314 = *((_QWORD *)v386[0] - 1);
        goto LABEL_785;
      }
      v314 = 0;
LABEL_785:
      v331 = *(_DWORD *)(a1 + 8992);
      if (v331)
      {
        v290 = a6;
        v332 = *(_QWORD *)(*(_QWORD *)(a1 + 8984) + 56 * v331 - 48);
      }
      else
      {
        v332 = 0;
      }
      if (v314 == v332)
        goto LABEL_730;
LABEL_789:
      if (*(_DWORD *)(v290 + 4))
        v333 = *(_DWORD *)v290 == 0;
      else
        v333 = 1;
      if (!v333 || *(_QWORD *)(v290 + 8))
        goto LABEL_730;
      v334 = sub_22EA2221C(*(_QWORD *)(a1 + 216));
      v335 = sub_22EFCBB30(v334);
      v336 = *((_QWORD *)v386[0] + 2);
      v337 = (_QWORD *)(v336 & 0xFFFFFFFFFFFFFFF8);
      if ((v336 & 4) != 0)
        v337 = (_QWORD *)*v337;
      v338 = sub_22EFCBB30((unint64_t)v337);
      if (!v338)
        goto LABEL_730;
      v339 = v338;
      v340 = sub_22EFCC008(v335);
      if (v340 != sub_22EFCC008(v339))
        goto LABEL_730;
      v28 = sub_22EA36C78(v28, **(_QWORD **)(a1 + 72));
      v117 = v372;
LABEL_744:
      v311 = *((_QWORD *)v218 + 2);
      v54 = v311 & 0xFFFFFFFFFFFFFFF8;
      if ((v311 & 4) != 0)
        v54 = *(_QWORD *)v54;
      v374 = 3;
      goto LABEL_503;
    }
  }
  if (v375 != 2)
  {
    if (v375 != 3 && v375)
      goto LABEL_503;
    goto LABEL_744;
  }
  v308 = sub_22EFC3500((unint64_t)v218);
  if (!v308)
  {
    v315 = *((_QWORD *)v218 + 6);
    if (v315)
      v316 = v315 & 0xFFFFFFFFFFFFFFF0;
    else
      v316 = sub_22EF6462C(*(_QWORD *)(a1 + 88), (unint64_t)v218);
    v37 = v371;
    if ((*(_BYTE *)(sub_22F10C2A4(*(_QWORD *)(v316 & 0xFFFFFFFFFFFFFFF0)) + 74) & 2) != 0)
    {
      sub_22E8FCA40((_QWORD *)a1, v24, 0xF9Cu, 0, (uint64_t)v393);
      sub_22E8BAE44((uint64_t)v393, &v404);
      sub_22E903BEC((unsigned int *)v393);
      sub_22E8FCA40((_QWORD *)a1, v218[6], 0x6Du, 0, (uint64_t)v380);
      sub_22E903BEC(v380);
      v404 = 0;
      LODWORD(v408) = 0;
      LODWORD(v410) = 0;
      if (v412)
      {
        v317 = sub_22EC6CBD0(v412);
        MEMORY[0x2348A0E9C](v317, 0x10E0C409F09D3C3);
      }
      HIBYTE(v423) = 0;
      v412 = 0;
      v413 = 0;
      LOBYTE(v402) = 1;
    }
    goto LABEL_503;
  }
  v44 = v308;
  if (!HIBYTE(v402))
    goto LABEL_759;
  if ((*(_DWORD *)(v308 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
  {
    v310 = sub_22EFD5760(v308) == 2;
    goto LABEL_761;
  }
  if ((*(_DWORD *)(v308 + 28) & 0x7F) == 0x21)
  {
    v309 = *(_DWORD **)(v308 + 144);
    if (v309)
      LODWORD(v309) = ((*v309 >> 1) & 3) + 1;
    v310 = (_DWORD)v309 == 2;
LABEL_761:
    v318 = !v310;
  }
  else
  {
LABEL_759:
    v318 = 0;
  }
  v425 = 0;
  if (a24 && (sub_22EE8B858(a1, v44, (unint64_t *)&v425, 0) & 1) == 0)
  {
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
    {
      *(_BYTE *)a24 = 1;
      *(_QWORD *)(a24 + 8) = v44;
      sub_22EC61DA0(a1, (uint64_t)v425);
      goto LABEL_767;
    }
    *(_BYTE *)(a24 + 1) = 1;
    v319 = v372;
    if (v24)
      v319 = v24;
    v320 = *(_QWORD *)(a1 + 88);
    if (v403 == 4)
    {
      v321 = sub_22EFC3768(v320, v54, v372, v319, v404, 0, v371 != 0, a18, v368);
      v322 = v321;
      if (v369 >= 8)
      {
        if ((v369 & 4) != 0 && (v369 & 0xFFFFFFFFFFFFFFF8) != 0)
        {
          v323 = (_QWORD *)(v369 & 0xFFFFFFFFFFFFFFF8 | 4);
        }
        else
        {
          v323 = (_QWORD *)(v369 & 0xFFFFFFFFFFFFFFF0);
          if ((v369 & 0xFFFFFFFFFFFFFFF0) != 0)
            v323 = (_QWORD *)(*v323 & 0xFFFFFFFFFFFFFFFBLL);
        }
        *(_QWORD *)(v321 + 128) = v323;
        *(_QWORD *)(v321 + 136) = sub_22E496830(v321);
      }
      if (!v322)
        goto LABEL_817;
    }
    else
    {
      v322 = sub_22F3ACBB4(v320, v403, v54, v372, v319, v404, 0);
      if (!v322)
      {
LABEL_817:
        sub_22EFC80C4(v322, *(_QWORD *)(a1 + 216));
        *(_QWORD *)(a24 + 8) = v44;
        *(_QWORD *)(a24 + 16) = v322;
        goto LABEL_665;
      }
    }
    if ((*(_DWORD *)(v322 + 28) & 0x7Eu) - 38 >= 0xFFFFFFFC && !*(_BYTE *)a24)
    {
      sub_22E90D4A4(a1, v322);
      sub_22E90D614(a1, v322);
    }
    goto LABEL_817;
  }
  if ((v318 & 1) == 0)
  {
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0 || !v28)
    {
LABEL_809:
      v343 = v24;
      v344 = (_QWORD *)a1;
      v345 = 4628;
    }
    else
    {
      v342 = v28;
      while ((*((_BYTE *)v342 + 9) & 1) == 0)
      {
        v342 = (uint64_t *)*v342;
        if (!v342)
          goto LABEL_809;
      }
      v343 = v24;
      v344 = (_QWORD *)a1;
      v345 = 6944;
    }
    sub_22E8FCA40(v344, v343, v345, 0, (uint64_t)v393);
    sub_22E8BAE44((uint64_t)v393, &v404);
    sub_22E903BEC((unsigned int *)v393);
    v359 = v372;
    if (v24)
      v359 = v24;
    sub_22F31D30C(a1, v44, v359);
    v404 = 0;
    LODWORD(v408) = 0;
    LODWORD(v410) = 0;
    if (v412)
    {
      v360 = sub_22EC6CBD0(v412);
      MEMORY[0x2348A0E9C](v360, 0x10E0C409F09D3C3);
    }
    HIBYTE(v423) = 0;
    v412 = 0;
    v413 = 0;
    LOBYTE(v402) = 1;
  }
LABEL_767:
  v117 = v372;
  v37 = v371;
LABEL_503:
  if ((_DWORD)v408 == 2)
  {
    v231 = *(_QWORD *)v409 & 0xFFFFFFFFFFFFFFFCLL;
    v232 = *(_DWORD *)(v231 + 28) & 0x7F;
    v92 = v232 > 0x2F;
    v233 = (1 << v232) & 0xC00000060000;
    if (!v92 && v233 != 0)
      v231 = sub_22EFBAEA4(*(_QWORD *)v409 & 0xFFFFFFFFFFFFFFFCLL);
  }
  else
  {
    v231 = 0;
  }
  if (v24)
    v235 = v24;
  else
    v235 = v117;
  if (v403 == 4)
  {
    v44 = sub_22EFC3768(*(_QWORD *)(a1 + 88), v54, v117, v235, v404, v231, v37 != 0, a18, v368);
    v236 = a11;
    if (v364)
    {
      v237 = *(_QWORD *)(a1 + 3368);
      if (!v237)
        goto LABEL_519;
      if ((v237 & 1) != 0)
      {
        v237 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 16048) + 16))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16048), v237 >> 1);
        *(_QWORD *)(a1 + 3368) = v237;
      }
      if ((*(_BYTE *)(v237 + 29) & 2) != 0)
LABEL_519:
        *(_QWORD *)(a1 + 3368) = v44;
    }
    v238 = a6;
    if (v80)
    {
      v239 = *(_QWORD *)(a1 + 3376);
      if (!v239)
        goto LABEL_525;
      if ((v239 & 1) != 0)
      {
        v239 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 16048) + 16))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16048), v239 >> 1);
        v238 = a6;
        *(_QWORD *)(a1 + 3376) = v239;
      }
      if ((*(_BYTE *)(v239 + 29) & 2) != 0)
LABEL_525:
        *(_QWORD *)(a1 + 3376) = v44;
    }
    if (v375 != 2 && !(_BYTE)v402 && (!v368 || (*(_BYTE *)(v44 + 77) & 2) == 0))
    {
      if (v231 && (v240 = sub_22EFC3500(v231)) != 0)
      {
        v241 = v240;
        sub_22E8FCA40((_QWORD *)a1, v235, 0x1482u, 0, (uint64_t)v393);
        if (v397)
        {
          v242 = v395;
          if (!v395)
          {
            v242 = (unsigned __int8 *)sub_22E3B8AAC(v396);
            v395 = v242;
          }
          v242[*v242 + 1] = 11;
          v243 = v395;
          goto LABEL_536;
        }
        if (v399)
        {
          v324 = v394;
          v325 = (uint64_t *)(v393[0] + 12784);
          if (v394)
            v324 = (void **)(*((uint64_t (**)(void **))*v394 + 4))(v394);
          v425 = v324;
          v326 = sub_22F2F1D6C(v325, (uint64_t *)&v425);
          v327 = v326[1] + 32 * v398;
          v330 = *(unsigned __int8 **)(v327 + 8);
          v329 = (unsigned __int8 **)(v327 + 8);
          v328 = v330;
          if (!v330)
          {
            v328 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v329[1]);
            *v329 = v328;
          }
          v328[*v328 + 1] = 11;
          v243 = *v329;
LABEL_536:
          v244 = *v243;
          *v243 = v244 + 1;
          *(_QWORD *)&v243[8 * v244 + 16] = v44;
        }
        sub_22E903BEC((unsigned int *)v393);
        v253 = *(_DWORD *)(v241 + 24);
        v250 = (unsigned int *)v378;
        v251 = v378;
        v252 = (_QWORD *)a1;
        v249 = 109;
      }
      else
      {
        v247 = **(_QWORD **)(a1 + 72);
        if ((v247 & 0x100) != 0)
          v248 = 3502;
        else
          v248 = 5249;
        if ((v247 & 0x10) != 0)
          v249 = 5301;
        else
          v249 = v248;
        v250 = (unsigned int *)v377;
        v251 = v377;
        v252 = (_QWORD *)a1;
        v253 = v235;
      }
      sub_22E8FCA40(v252, v253, v249, 0, (uint64_t)v251);
      sub_22E903BEC(v250);
      v238 = a6;
    }
    if (v369 >= 8)
    {
      if ((v369 & 4) != 0 && (v369 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        v254 = (_QWORD *)(v369 & 0xFFFFFFFFFFFFFFF8 | 4);
      }
      else
      {
        v254 = (_QWORD *)(v369 & 0xFFFFFFFFFFFFFFF0);
        if ((v369 & 0xFFFFFFFFFFFFFFF0) != 0)
          v254 = (_QWORD *)(*v254 & 0xFFFFFFFFFFFFFFFBLL);
      }
      *(_QWORD *)(v44 + 128) = v254;
      *(_QWORD *)(v44 + 136) = sub_22E496830(v44);
LABEL_562:
      v238 = a6;
    }
  }
  else
  {
    v245 = *(_QWORD *)(a1 + 88);
    v236 = a11;
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0)
    {
      v44 = sub_22F3ACBB4(v245, v403, v54, v117, v235, v404, v231);
      goto LABEL_562;
    }
    v44 = sub_22EFCF6C0(v245, v403, v54, v117, v235, v404, v231, 0);
    if (!v367)
      goto LABEL_562;
    v246 = *(_QWORD *)(a1 + 3360);
    v238 = a6;
    if (!v246)
      goto LABEL_543;
    if ((v246 & 1) != 0)
    {
      v246 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 16048) + 16))(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16048), v246 >> 1);
      v238 = a6;
      *(_QWORD *)(a1 + 3360) = v246;
    }
    if ((*(_BYTE *)(v246 + 29) & 2) != 0)
LABEL_543:
      *(_QWORD *)(a1 + 3360) = v44;
  }
  v255 = **(_QWORD **)(a1 + 72);
  if ((v255 & 0x100) != 0)
  {
    if ((a22 & 1) != 0)
    {
      if (v375 != 2)
        goto LABEL_564;
    }
    else if (v375 != 2 || (a23 & 1) == 0)
    {
      goto LABEL_564;
    }
    v256 = *(_DWORD *)(v44 + 24);
    v257 = (_QWORD *)a1;
    v258 = 4902;
LABEL_575:
    sub_22E8FCA40(v257, v256, v258, 0, (uint64_t)v393);
    v259 = *(_QWORD *)(v44 + 48);
    if (v259)
      v260 = (void **)(v259 & 0xFFFFFFFFFFFFFFF0);
    else
      v260 = (void **)sub_22EF6462C(*(_QWORD *)(a1 + 88), v44);
    v425 = v260;
    sub_22E8901B8((uint64_t)v393, (uint64_t *)&v425);
    sub_22E903BEC((unsigned int *)v393);
    LOBYTE(v402) = 1;
    v238 = a6;
  }
  else
  {
LABEL_564:
    if (!(_BYTE)v402 && v375 == 2 && (v255 & 0x100) != 0 && (*(_WORD *)(v400 + 8) & 0x7F) == 0x21)
    {
      v256 = *(_DWORD *)(v44 + 24);
      v257 = (_QWORD *)a1;
      v258 = 4898;
      goto LABEL_575;
    }
  }
  if (*(_DWORD *)(v238 + 4))
    v261 = *(_DWORD *)v238 == 0;
  else
    v261 = 1;
  v263 = (uint64_t *)(v238 + 8);
  v262 = *(_QWORD *)(v238 + 8);
  if (!v261 || v262)
  {
    if (v262)
    {
      if ((v375 - 1) <= 1 && sub_22EA14220(a1, v238, v400, a7, v235, SHIBYTE(v402)))
        LOBYTE(v402) = 1;
      if (*v263)
      {
        v286 = sub_22F0ABC50(v263, *(_QWORD *)(a1 + 88));
        v287 = v296;
      }
      else
      {
        v286 = 0;
        v287 = 0;
      }
      sub_22F3AC930(v44, v286, v287);
      if (a13)
        sub_22EFC35F8(v44, *(_QWORD *)(a1 + 88), a12, a13);
    }
    else
    {
      LOBYTE(v402) = 1;
    }
  }
  if ((*(_DWORD *)(v44 + 28) & 0x7Eu) - 34 >= 4)
    v264 = 0;
  else
    v264 = v44;
  if (v375 == 2 && v264 && (!a24 || !*(_BYTE *)a24))
  {
    sub_22E90D4A4(a1, v264);
    sub_22E90D614(a1, v264);
  }
  v265 = HIBYTE(v402);
  if ((_DWORD)v236)
  {
    if (HIBYTE(v402))
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v44 + 24), 0xF6Bu, 0, (uint64_t)v393);
      LODWORD(__dst) = 2;
      v266 = sub_22E8900C4((uint64_t)v393, (int *)&__dst);
      BYTE12(v426) = 0;
      *(_QWORD *)((char *)&v426 + 4) = 0;
      v427[1] = 0;
      v428 = 0;
      v427[0] = 0;
      v429 = 0;
      v425 = (void **)(v236 | (unint64_t)(v236 << 32));
      LOBYTE(v426) = 1;
      sub_22E890748(v266, &v425);
      if (SHIBYTE(v428) < 0)
        operator delete(v427[0]);
      sub_22E903BEC((unsigned int *)v393);
      v265 = HIBYTE(v402);
      goto LABEL_599;
    }
    v268 = *(_WORD *)(v54 + 8) & 0x7F;
    v267 = a24;
    if ((v268 > 0x18 || ((1 << v268) & 0x1000006) == 0) && v268 - 52 >= 6)
    {
      v285 = *(_QWORD *)(v44 + 8);
      if ((v285 & 6) != 0)
        *(_QWORD *)(v44 + 8) = v285 | 6;
    }
  }
  else
  {
LABEL_599:
    v267 = a24;
    if (v265 && sub_22ED6DB5C((_QWORD *)a1, v44, (uint64_t)&v408))
      LOBYTE(v402) = 1;
  }
  if ((v404 || v403 == 4) && (*((_BYTE *)sub_22EA06B40(a1, v28) + 9) & 1) != 0)
  {
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0)
    {
      if (!v231)
      {
        sub_22E8FCA40((_QWORD *)a1, v235, 0x1947u, 0, (uint64_t)v393);
        v269 = *(_QWORD *)(v44 + 48);
        if (v269)
          v270 = (void **)(v269 & 0xFFFFFFFFFFFFFFF0);
        else
          v270 = (void **)sub_22EF6462C(*(_QWORD *)(a1 + 88), v44);
        v425 = v270;
        sub_22E8901B8((uint64_t)v393, (uint64_t *)&v425);
        sub_22E903BEC((unsigned int *)v393);
      }
      goto LABEL_615;
    }
    if (v375 != 2 || (a22 & 1) != 0)
      goto LABEL_615;
    sub_22E8FCA40((_QWORD *)a1, v235, 0x1324u, 0, (uint64_t)v393);
    sub_22E8BAE44((uint64_t)v393, &v404);
    sub_22E903BEC((unsigned int *)v393);
    LOBYTE(v402) = 1;
LABEL_616:
    sub_22EFC77E8(v44, 1);
  }
  else
  {
LABEL_615:
    if ((_BYTE)v402)
      goto LABEL_616;
  }
  sub_22EFC80C4(v44, *(_QWORD *)(a1 + 216));
  if (v375 == 3)
    sub_22EA22164((_DWORD *)v44, (**(_QWORD **)(a1 + 72) & 0x10) != 0);
  if ((_BYTE)v402 || (*(_WORD *)(v54 + 8) & 0x7Eu) - 34 > 3)
  {
    if (v231)
    {
LABEL_622:
      if ((sub_22EA04ED8((_QWORD *)a1, v44, v231) & 1) == 0)
        sub_22EA051EC((_QWORD *)a1, v44, v231);
    }
  }
  else
  {
    sub_22F30A07C((_QWORD *)a1, v44, v231, v374);
    if (v231)
      goto LABEL_622;
  }
  if (v375 == 2 && (!v267 || !*(_BYTE *)v267))
    sub_22EFC3340(v44);
  sub_22EA63DD8((_QWORD *)a1, (uint64_t)v28, v44, a9, 1);
  sub_22E91049C(a1, (uint64_t)v28, v44);
  if (v375 == 3)
  {
    if (v231)
      *(_DWORD *)(v44 + 28) = *(_DWORD *)(v44 + 28) & 0xFFFF9FFF | (((*(_DWORD *)(v231 + 28) >> 13) & 3) << 13);
    v271 = *(_QWORD *)(v44 + 16);
    v272 = (_QWORD *)(v271 & 0xFFFFFFFFFFFFFFF8);
    if ((v271 & 4) != 0)
      v272 = (_QWORD *)*v272;
    v273 = sub_22EFCBB30((unint64_t)v272);
    sub_22EFCE90C(v273, v44);
    if (v404)
    {
      v274 = sub_22F31D1A0(v28, v273);
      if (v274)
      {
        v275 = v274;
        v276 = a1;
        v277 = v44;
        v278 = 0;
        goto LABEL_638;
      }
    }
  }
  else if (v404)
  {
    v275 = sub_22EA06B40(a1, v28);
    v276 = a1;
    v277 = v44;
    v278 = 1;
LABEL_638:
    sub_22EA0483C(v276, v277, v275, v278);
  }
  else
  {
    sub_22EFCCFA0(*(_QWORD *)(a1 + 216), v44);
  }
  v279 = *(_QWORD *)(v44 + 40);
  if ((v279 & 7) == 0)
  {
    v280 = v279 & 0xFFFFFFFFFFFFFFF8;
    if ((v279 & 0xFFFFFFFFFFFFFFF8) != 0 && (*(_BYTE *)(v44 + 28) & 0x80) == 0)
    {
      v281 = *(_QWORD *)(v44 + 16);
      v282 = (_QWORD *)(v281 & 0xFFFFFFFFFFFFFFF8);
      if ((v281 & 4) != 0)
        v282 = (_QWORD *)*v282;
      if ((*(_WORD *)(sub_22EFCBB30((unint64_t)v282) + 8) & 0x7F) == 0x53)
      {
        v283 = *(_DWORD **)(v280 + 16);
        if (*v283 == 4 && v283[4] == 1162627398)
          *(_QWORD *)(*(_QWORD *)(a1 + 88) + 1432) = v44;
      }
    }
  }
  if (v231)
    sub_22EA084D0(a1, v44, (_BYTE *)v231, 1);
  if ((*(_DWORD *)(v44 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
    sub_22E90DAEC(a1, v44);
  sub_22E910734(a1, v44);
  if (HIBYTE(v402) && (*(_BYTE *)(v44 + 28) & 0x80) == 0)
    sub_22ED6E4B0(a1, (_DWORD *)v44);
  *v30 = 1;
  if ((_BYTE)v402 && (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
  {
    if ((*(_BYTE *)(v44 + 74) & 2) != 0 && (*(_DWORD *)(v44 + 28) & 0x7Eu) - 38 >= 0xFFFFFFFC)
      (*(void (**)(uint64_t))(*(_QWORD *)v44 + 104))(v44);
    goto LABEL_664;
  }
  if (v267 && *(_BYTE *)v267)
    v44 = *(_QWORD *)(v267 + 8);
LABEL_665:
  if (v422)
  {
    if ((_DWORD)v408 == 5)
    {
      sub_22EC64D18(v415, (uint64_t)&v408);
    }
    else if (v413 && (*(_DWORD *)(v415[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v415, (uint64_t)&v408);
    }
  }
  if (v412)
  {
    v361 = sub_22EC6CBD0(v412);
    MEMORY[0x2348A0E9C](v361, 0x10E0C409F09D3C3);
  }
  if (v409 != v411)
    free(v409);
  return v44;
}

uint64_t *sub_22EA36C78(uint64_t *result, unsigned int a2)
{
  int v2;
  uint64_t v3;
  int v4;

  while (1)
  {
    v2 = *((_DWORD *)result + 2);
    if ((v2 & 0x20) != 0 || (v2 & 8) == 0 || (((v2 & a2) >> 8) & 1) != 0)
      goto LABEL_13;
    v3 = result[45];
    if (!v3)
      return result;
    v4 = *(_WORD *)(v3 + 8) & 0x7F;
    if (v4 != 33)
      break;
    if ((*(_BYTE *)(v3 + 12) & 0x80) != 0)
      return result;
LABEL_13:
    result = (uint64_t *)*result;
  }
  if (v4 == 12 || v4 == 5)
    goto LABEL_13;
  return result;
}

void sub_22EA36CCC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = a3;
  if (a3 && (*(_DWORD *)(a3 + 28) & 0x7Fu) - 26 <= 6)
    v3 = *(_QWORD *)(a3 + 48);
  v5 = v3 + 64;
  if (!v3)
    v5 = 0;
  *(_QWORD *)(a1 + 216) = v5;
  *(_QWORD *)(a2 + 360) = v5;
  v6 = v3;
  sub_22EA2DB10(a1, (unint64_t *)&v6, 1uLL);
  sub_22E910734(a1, v3);
}

uint64_t sub_22EA36D48(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, char a5, int a6)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = a3;
  v11 = result;
  if (a3 && (*(_DWORD *)(a3 + 28) & 0x7Fu) - 26 <= 6)
    v9 = *(_QWORD *)(a3 + 48);
  v12 = *(_QWORD *)(result + 2264);
  v13 = *(_DWORD *)(v12 + 280);
  if (v13 >= *(_DWORD *)(v12 + 284))
  {
    result = llvm::SmallVectorBase<unsigned int>::grow_pod();
    v13 = *(_DWORD *)(v12 + 280);
  }
  *(_QWORD *)(*(_QWORD *)(v12 + 272) + 8 * v13) = 0;
  ++*(_DWORD *)(v12 + 280);
  if (*(_QWORD *)(v9 + 40) >= 8uLL && (*(_QWORD *)(v9 + 40) & 7) == 0)
  {
    if (a6)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v9 + 104) + 96), *(_QWORD *)(v9 + 104));
      **(_QWORD **)(v9 + 128) |= 0x800uLL;
    }
    if ((_DWORD)a4)
    {
      v20 = sub_22F386C08(*(_QWORD *)(v11 + 88), a4 | (unint64_t)(a4 << 32), 5, a5);
      sub_22EFCA95C(v9, v20);
    }
    v15 = *(_QWORD *)(v9 + 40);
    if ((v15 & 7) != 0)
      v16 = 0;
    else
      v16 = v15 & 0xFFFFFFFFFFFFFFF8;
    v17 = sub_22EFCF6C0(*(_QWORD *)(v11 + 88), (unsigned __int16)*(_DWORD *)(v9 + 72) >> 13, *(_QWORD *)(v11 + 216), *(_DWORD *)(v9 + 56), *(_DWORD *)(v9 + 24), v16, 0, 1);
    v18 = v17;
    if (!*(_QWORD *)(v17 + 48))
      *(_QWORD *)(v17 + 48) = *(_QWORD *)(v9 + 48);
    *(_DWORD *)(v17 + 28) = *(_DWORD *)(v17 + 28) & 0xFFFF9DFF | 0x200;
    v19 = *(_QWORD *)(v9 + 136);
    if ((v19 & 4) == 0 && (v19 & 0xFFFFFFFFFFFFFFF8) != 0)
      sub_22EFD5754(v17, v19 & 0xFFFFFFFFFFFFFFF8);
    return sub_22EA0483C(v11, v18, a2, 1);
  }
  return result;
}

unsigned int *sub_22EA36EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v19;
  int v20;
  int v21;
  int v23;
  unsigned int *result;
  unsigned int *v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  unint64_t v30;
  unsigned int v31[24];
  unsigned int v32[24];

  v4 = a4;
  v5 = a3;
  v6 = a1;
  if (a3 && (*(_DWORD *)(a3 + 28) & 0x7Fu) - 26 <= 6)
    v5 = *(_QWORD *)(a3 + 48);
  *(_QWORD *)(v5 + 112) = a4;
  if ((*(_BYTE *)(v5 + 74) & 2) != 0 && (*(_DWORD *)(v5 + 28) & 0x7Eu) - 38 >= 0xFFFFFFFC)
    a1 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 104))(v5);
  if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
  {
    v7 = *(_QWORD *)(v6 + 2264);
    v8 = *(unsigned int *)(v7 + 8);
    v9 = *(unsigned int *)(v7 + 280);
    v10 = *(_QWORD *)(*(_QWORD *)(v7 + 272) + 8 * v9 - 8);
    v11 = v8 - v10;
    if (v10)
    {
      if (v8 < v10)
      {
        v30 = v8 - v10;
        if (v11 > *(unsigned int *)(v7 + 12))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v8 = *(unsigned int *)(v7 + 8);
        }
        LODWORD(v11) = v30;
        if (v30 != v8)
        {
          bzero((void *)(*(_QWORD *)v7 + 8 * v8), 8 * (v30 - v8));
          LODWORD(v11) = v30;
        }
      }
      *(_DWORD *)(v7 + 8) = v11;
      LODWORD(v9) = *(_DWORD *)(v7 + 280);
    }
    *(_DWORD *)(v7 + 280) = v9 - 1;
    a1 = sub_22EA22104(v5);
    if ((_DWORD)a1)
    {
      v12 = *(_QWORD *)(v5 + 128);
      if (v12
        || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v5 + 104) + 96), *(_QWORD *)(v5 + 104)),
            (v12 = *(_QWORD *)(v5 + 128)) != 0))
      {
        v13 = *(_QWORD *)(v12 + 88);
      }
      else
      {
        v13 = 0;
      }
      v14 = sub_22E488FF8(v13);
      if (v14 != v15)
      {
        v16 = 0;
        do
        {
          v17 = *(_QWORD *)(v14 + 40) & 0xFFFFFFFFFFFFFFF8;
          if ((*(_QWORD *)(v14 + 40) & 7) == 0 && v17 != 0)
          {
            v19 = *(_QWORD *)(v17 + 16);
            if (*(_DWORD *)v19 == 6)
            {
              v20 = *(_DWORD *)(v19 + 16);
              v21 = *(unsigned __int16 *)(v19 + 20);
              v23 = v20 == 1852399455 && v21 == 29801;
            }
            else
            {
              v23 = 0;
            }
            v16 += v23;
          }
          do
            v14 = *(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v14 && (*(_DWORD *)(v14 + 28) & 0x7Eu) - 54 > 3);
        }
        while (v14 != v15);
        if (v16 > 1)
          goto LABEL_35;
      }
      a1 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v13 + 104) + 96), *(_QWORD *)(v13 + 104));
      if ((**(_QWORD **)(v13 + 128) & 0x400000) == 0)
      {
LABEL_35:
        sub_22E8FCA40((_QWORD *)v6, *(_DWORD *)(v5 + 24), 0x129Bu, 0, (uint64_t)v32);
        a1 = (uint64_t)sub_22E903BEC(v32);
      }
    }
  }
  result = (unsigned int *)sub_22EA044C0(a1, *(_QWORD *)(v6 + 216));
  *(_QWORD *)(v6 + 216) = result;
  v25 = *(unsigned int **)(v6 + 224);
  if (!v25)
    v25 = result;
  if ((v25[2] & 0x7F) - 19 <= 4)
  {
    v26 = *(_QWORD *)(v5 + 16);
    v27 = v26 & 0xFFFFFFFFFFFFFFF8;
    if ((v26 & 4) != 0)
      v27 = *(_QWORD *)v27;
    v28 = *(_WORD *)(v27 + 8) & 0x7F;
    if (v28 == 83 || v28 == 16)
      *(_DWORD *)(v5 + 28) |= 0x1000u;
  }
  if ((*(_BYTE *)(v5 + 28) & 0x80) == 0)
    result = (unsigned int *)(*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(v6 + 96) + 56))(*(_QWORD *)(v6 + 96), v5);
  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 88) + 15088) + 68) == 21
    && (*(unsigned __int8 *)(v6 + 669) != *(unsigned __int8 *)(v6 + 665)
     || *(unsigned __int8 *)(v6 + 670) != *(unsigned __int8 *)(v6 + 666)
     || *(unsigned __int8 *)(v6 + 668) != *(unsigned __int8 *)(v6 + 664)
     || *(unsigned __int8 *)(v6 + 671) != *(unsigned __int8 *)(v6 + 667))
    && *(_WORD *)(v6 + 668) == 512
    && (*(_DWORD *)(v5 + 28) & 0x7Eu) - 38 >= 0xFFFFFFFC)
  {
    result = (unsigned int *)sub_22EFC3B90(v5);
    if (result)
    {
LABEL_57:
      if ((result[17] & 1) != 0)
      {
        sub_22E8FCA40((_QWORD *)v6, v4, 0x1AE9u, 0, (uint64_t)v31);
        return sub_22E903BEC(v31);
      }
      else
      {
        while (1)
        {
          result = (unsigned int *)(*((_QWORD *)result + 1) & 0xFFFFFFFFFFFFFFF8);
          if (!result)
            break;
          if ((result[7] & 0x7F) - 49 <= 2)
            goto LABEL_57;
        }
      }
    }
  }
  return result;
}

unint64_t sub_22EA37258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;

  v3 = a3;
  if (a3 && (*(_DWORD *)(a3 + 28) & 0x7Fu) - 26 <= 6)
    v3 = *(_QWORD *)(a3 + 48);
  v5 = sub_22EFC77E8(v3, 1);
  if ((*(_BYTE *)(v3 + 74) & 2) != 0 && (*(_DWORD *)(v3 + 28) & 0x7Eu) - 38 >= 0xFFFFFFFC)
    v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 104))(v3);
  result = sub_22EA044C0(v5, *(_QWORD *)(a1 + 216));
  *(_QWORD *)(a1 + 216) = result;
  return result;
}

uint64_t sub_22EA372DC(_QWORD *a1, unsigned int a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v8;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  _BOOL4 v19;
  uint64_t (***v20)();
  uint64_t v21;
  _QWORD *v22;
  unsigned int v24;
  unint64_t *v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  unint64_t v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t *v35;
  _BOOL4 v36;
  int v37;
  unint64_t v38;
  _BOOL4 v39;
  int v40;
  _BOOL4 v41;
  unint64_t *v42;
  int v43;
  BOOL v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  size_t v49;
  const void *v50;
  void **v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (***v54)();
  BOOL v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  size_t v59;
  const void *v60;
  void **v61;
  size_t v62;
  const void *v63;
  void **v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  size_t v70;
  const void *v71;
  void **p_dst;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  BOOL v79;
  unsigned int v80;
  void **__dst;
  size_t v82;
  unint64_t v83;
  unint64_t *v84;
  unsigned int v85;
  char v86;
  uint64_t (**v87)();
  int v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  __int128 v92;
  _QWORD v93[7];

  v93[5] = *MEMORY[0x24BDAC8D0];
  v89 = a3;
  v90 = a4;
  if ((*(_BYTE *)(a6 + 2) & 2) != 0)
    return 1;
  v8 = a6;
  if (a7)
    *a7 = 1;
  v13 = (uint64_t *)(a4 & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v14 + 17) & 4) == 0)
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0);
    v16 = *(_DWORD *)(v15 + 16);
    if (v15)
      v17 = v16 == 11;
    else
      v17 = 0;
    if (v17)
    {
      if (((*(_DWORD *)(v15 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
        goto LABEL_26;
    }
    else if (v15 && v16 == 44)
    {
      v18 = sub_22F114198(*(_QWORD *)(v15 + 24));
      if ((*(_BYTE *)(v18 + 74) & 1) == 0 && *(_QWORD *)(v18 + 128) <= 7uLL)
      {
LABEL_26:
        v88 = 3364;
        v87 = (uint64_t (**)())&unk_24FAB79A8;
        if ((sub_22EE8B0B0((uint64_t)a1, a2, a4) & 1) == 0)
        {
          if (v89)
          {
            sub_22E8FCA40(a1, a2, 0xFDEu, 0, (uint64_t)&v87);
            v20 = (uint64_t (***)())sub_22E8BAE44((uint64_t)&v87, &v89);
          }
          else
          {
            sub_22E8FCA40(a1, a2, 0xFDDu, 0, (uint64_t)&v87);
            v20 = &v87;
          }
          v21 = sub_22E8901B8((uint64_t)v20, &v90);
          sub_22F0D4E74(v8);
          v91 = v22;
          sub_22E8906A0(v21, (uint64_t *)&v91);
          sub_22E903BEC((unsigned int *)&v87);
        }
        return 1;
      }
    }
    else if (v16 != 9)
    {
      goto LABEL_26;
    }
  }
  if ((sub_22EE67384((uint64_t)a1, v8, 4) & 1) != 0)
    return 1;
  if ((*(_DWORD *)v8 & 0x18000) == 0)
  {
    v85 = 1;
    v84 = 0;
    v86 = 0;
    LOBYTE(v88) = 0;
    v87 = off_24FAB82C8;
    v8 = sub_22EB4CB24(a1, v8, (uint64_t)&v84, &v87, 1);
    if ((v8 & 1) != 0)
    {
LABEL_68:
      if (v85 >= 0x41 && v84)
        MEMORY[0x2348A0E84](v84, 0x1000C8000313F17);
      return v8;
    }
    v19 = sub_22E508590((uint64_t)&v84, 0);
    if (a7 && v19)
      *a7 = 0;
    if (sub_22E42E5EC((uint64_t)&v84, 0) && v89)
    {
      sub_22E8FCA40(a1, a2, 0xB85u, 0, (uint64_t)&v87);
      sub_22E8BAE44((uint64_t)&v87, &v89);
LABEL_24:
      sub_22E903BEC((unsigned int *)&v87);
      v8 = 1;
      goto LABEL_68;
    }
    v24 = v85;
    if (v86)
      goto LABEL_37;
    v25 = &v84[(v85 - 1) >> 6];
    if (v85 < 0x41)
      v25 = (unint64_t *)&v84;
    if (((*v25 >> (v85 - 1)) & 1) == 0)
    {
LABEL_37:
      if (v85 > 0x40)
        v26 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v84);
      else
        v26 = v85 + __clz((unint64_t)v84) - 64;
      v27 = v24 - v26;
      v28 = a1[11];
      v29 = sub_22EF67C8C(v28);
      v30 = sub_22EF5CDF0(v28, *(_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF0));
      if (v30 >= 0x3D)
        v31 = 61;
      else
        v31 = v30;
      if (v27 <= v31)
      {
        v8 &= ~1uLL;
        if ((*(_BYTE *)(*v13 + 17) & 4) != 0)
          goto LABEL_68;
        v32 = sub_22EF5CDF0(a1[11], *v13);
        v78 = sub_22EF6A330(a1[11], a4);
        v33 = v78;
        v34 = v85;
        if (v85 >= 0x41 && v34 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v84) > 0x40)
          goto LABEL_50;
        v35 = v84;
        if (v34 < 0x41)
          v35 = (unint64_t *)&v84;
        if (*v35 <= v78)
        {
          v37 = 0;
          v36 = 0;
        }
        else
        {
LABEL_50:
          v36 = (*(_BYTE *)(a1[9] + 1) & 1) == 0;
          v37 = 1;
        }
        if (v34 < 0x41
          || (v38 = v32,
              v39 = v36,
              v40 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v84),
              v36 = v39,
              v32 = v38,
              v33 = v78,
              v34 - v40 <= 0x40))
        {
          v42 = v84;
          if (v34 < 0x41)
            v42 = (unint64_t *)&v84;
          v41 = *v42 <= v32;
        }
        else
        {
          v41 = 0;
        }
        v43 = !v41;
        if (!v41 && (a5 & 1) == 0)
          v43 = *(_DWORD *)(*(_QWORD *)(a1[11] + 15088) + 148) == 11;
        if ((v36 | v43) != 1)
        {
          if (!v37)
            goto LABEL_68;
          v44 = 0;
          v45 = *(_QWORD *)(*(_QWORD *)(*v13 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v45)
          {
            v46 = *(_DWORD *)(v45 + 16);
            if (v46 == 11)
              v44 = (v46 & 0xFF80000) == 87031808;
          }
          if (v44 || !v89)
            goto LABEL_68;
          sub_22E8FCA40(a1, a2, 0x18A7u, 0, (uint64_t)&v87);
          v69 = sub_22E8BAE44((uint64_t)&v87, &v89);
          v91 = v93;
          v92 = xmmword_22F455490;
          llvm::APInt::toString();
          v70 = v92;
          if ((unint64_t)v92 <= 0x7FFFFFFFFFFFFFF7)
          {
            v71 = v91;
            if ((unint64_t)v92 >= 0x17)
            {
              v73 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
              if (((unint64_t)v92 | 7) != 0x17)
                v73 = v92 | 7;
              v74 = v73 + 1;
              p_dst = (void **)operator new(v73 + 1);
              v82 = v70;
              v83 = v74 | 0x8000000000000000;
              __dst = p_dst;
            }
            else
            {
              HIBYTE(v83) = v92;
              p_dst = (void **)&__dst;
              if (!(_QWORD)v92)
                goto LABEL_114;
            }
            memmove(p_dst, v71, v70);
LABEL_114:
            *((_BYTE *)p_dst + v70) = 0;
            if (v91 != v93)
              free(v91);
            v75 = sub_22F2F3734(v69, (void **)&__dst);
            LODWORD(v91) = v78;
            sub_22E89519C(v75, (unsigned int *)&v91);
            if (SHIBYTE(v83) < 0)
              operator delete(__dst);
            sub_22E903BEC((unsigned int *)&v87);
            goto LABEL_68;
          }
LABEL_109:
          abort();
        }
        v55 = v36;
        if (v36)
          v56 = v33;
        else
          v56 = v32;
        v80 = v56;
        sub_22E8FCA40(a1, a2, 0xB87u, 0, (uint64_t)&v87);
        v79 = v89 != 0;
        v57 = sub_22E894E38((uint64_t)&v87, (unsigned __int8 *)&v79);
        v58 = sub_22E8BAE44(v57, &v89);
        v91 = v93;
        v92 = xmmword_22F455490;
        llvm::APInt::toString();
        v59 = v92;
        if ((unint64_t)v92 > 0x7FFFFFFFFFFFFFF7)
          goto LABEL_109;
        v60 = v91;
        if ((unint64_t)v92 >= 0x17)
        {
          v65 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
          if (((unint64_t)v92 | 7) != 0x17)
            v65 = v92 | 7;
          v66 = v65 + 1;
          v61 = (void **)operator new(v65 + 1);
          v82 = v59;
          v83 = v66 | 0x8000000000000000;
          __dst = v61;
        }
        else
        {
          HIBYTE(v83) = v92;
          v61 = (void **)&__dst;
          if (!(_QWORD)v92)
            goto LABEL_99;
        }
        memmove(v61, v60, v59);
LABEL_99:
        *((_BYTE *)v61 + v59) = 0;
        if (v91 != v93)
          free(v91);
        v67 = sub_22F2F3734(v58, (void **)&__dst);
        LOBYTE(v91) = !v55;
        v68 = sub_22E894E38(v67, (unsigned __int8 *)&v91);
        sub_22E89519C(v68, &v80);
        goto LABEL_102;
      }
      sub_22E8FCA40(a1, a2, 0xB86u, 0, (uint64_t)&v87);
      LOBYTE(v80) = v89 == 0;
      v47 = sub_22E894E38((uint64_t)&v87, (unsigned __int8 *)&v80);
      v48 = sub_22E8BAE44(v47, &v89);
      v91 = v93;
      v92 = xmmword_22F455490;
      llvm::APInt::toString();
      v49 = v92;
      if ((unint64_t)v92 > 0x7FFFFFFFFFFFFFF7)
        goto LABEL_109;
LABEL_72:
      v50 = v91;
      if (v49 >= 0x17)
      {
        v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v49 | 7) != 0x17)
          v52 = v49 | 7;
        v53 = v52 + 1;
        v51 = (void **)operator new(v52 + 1);
        v82 = v49;
        v83 = v53 | 0x8000000000000000;
        __dst = v51;
      }
      else
      {
        HIBYTE(v83) = v49;
        v51 = (void **)&__dst;
        if (!v49)
          goto LABEL_79;
      }
      memmove(v51, v50, v49);
LABEL_79:
      *((_BYTE *)v51 + v49) = 0;
      if (v91 != v93)
        free(v91);
      v54 = (uint64_t (***)())v48;
LABEL_82:
      sub_22F2F3734((uint64_t)v54, (void **)&__dst);
LABEL_102:
      if (SHIBYTE(v83) < 0)
        operator delete(__dst);
      goto LABEL_24;
    }
    if (v89)
    {
      sub_22E8FCA40(a1, a2, 0xB84u, 0, (uint64_t)&v87);
      v48 = sub_22E8BAE44((uint64_t)&v87, &v89);
      v91 = v93;
      v92 = xmmword_22F455490;
      llvm::APInt::toString();
      v49 = v92;
      if ((unint64_t)v92 > 0x7FFFFFFFFFFFFFF7)
        goto LABEL_109;
      goto LABEL_72;
    }
    sub_22E8FCA40(a1, a2, 0xA49u, 0, (uint64_t)&v87);
    v91 = v93;
    v92 = xmmword_22F455490;
    llvm::APInt::toString();
    v62 = v92;
    if ((unint64_t)v92 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_109;
    v63 = v91;
    if ((unint64_t)v92 >= 0x17)
    {
      v76 = (v92 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v92 | 7) != 0x17)
        v76 = v92 | 7;
      v77 = v76 + 1;
      v64 = (void **)operator new(v76 + 1);
      v82 = v62;
      v83 = v77 | 0x8000000000000000;
      __dst = v64;
    }
    else
    {
      HIBYTE(v83) = v92;
      v64 = (void **)&__dst;
      if (!(_QWORD)v92)
        goto LABEL_123;
    }
    memmove(v64, v63, v62);
LABEL_123:
    *((_BYTE *)v64 + v62) = 0;
    if (v91 != v93)
      free(v91);
    v54 = &v87;
    goto LABEL_82;
  }
  return v8;
}

unint64_t sub_22EA37C50(unsigned int *a1, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD **a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11;
  unint64_t v12;
  char v13;
  unsigned int v14;
  uint64_t v17;
  unsigned int v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  int v35;
  unint64_t v36;
  char v37;
  unsigned int v38;
  char *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _BYTE v43[64];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int *v47;
  uint64_t v48;
  unsigned int v49;
  _BYTE v50[24];
  __int16 v51;
  char v52;
  int v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v11 = *((_DWORD *)a5 + 22);
  if (v11)
  {
    sub_22E8FCA40(a1, v11, 0xC5Bu, 0, (uint64_t)&v40);
    v39 = (char *)a5[11];
    sub_22E8906A0((uint64_t)&v40, (uint64_t *)&v39);
    sub_22E903BEC((unsigned int *)&v40);
    return 0;
  }
  v13 = a8;
  v14 = a7;
  if (*((_DWORD *)a5 + 10))
    v17 = 0;
  else
    v17 = (uint64_t)a5[6];
  v18 = *((_DWORD *)a5 + 16);
  if (!v17)
    v18 = a4;
  v38 = v18;
  v19 = sub_22EE8156C((uint64_t)a1, (uint64_t)a5, (uint64_t)a2, a4, (uint64_t)a5, a6, a7, a8);
  v20 = *v19;
  v37 = v13;
  if ((*(_BYTE *)(*((_QWORD *)a1 + 9) + 1) & 1) != 0)
  {
    sub_22EAA474C((uint64_t)a1, (uint64_t)a5);
    if (sub_22EE67290((uint64_t)a1, *((_DWORD *)a5 + 16), v19, 3))
    {
      *((_WORD *)a5 + 544) |= 1u;
      v21 = *((_QWORD *)a1 + 11);
      v20 = *(_QWORD *)(v21 + 16480);
      v19 = sub_22EF579A8(v21, v20, v38);
    }
  }
  sub_22EA11438(a1, (uint64_t)*a5);
  v22 = (uint64_t)*a5;
  v23 = **a5;
  v36 = v20;
  v24 = a6;
  if ((v23 & 0x300000000) != 0)
  {
    v25 = (v23 & 0x100000000) == 0;
    v26 = 164;
    if (v25)
      v26 = 184;
    sub_22E8FCA40(a1, *(_DWORD *)(v22 + v26), 0xE2Au, 0, (uint64_t)&v40);
    LODWORD(v39) = (**((_DWORD **)a1 + 9) >> 11) & 1;
    sub_22E89519C((uint64_t)&v40, (unsigned int *)&v39);
    sub_22E903BEC((unsigned int *)&v40);
    v22 = (uint64_t)*a5;
    v23 = **a5;
  }
  v27 = (v23 >> 3) & 3;
  if ((_DWORD)v27)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(v22 + 100), 0xE66u, 0, (uint64_t)&v40);
    v39 = off_24FAB7A58[v27 - 1];
    sub_22E8AECC4((uint64_t)&v40, (uint64_t *)&v39);
    sub_22E903BEC((unsigned int *)&v40);
  }
  v40 = 0;
  v41 = v43;
  v42 = 0x800000000;
  v44 = 0;
  v45 = 0;
  v46 = 0;
  v47 = a1;
  v48 = v17;
  v49 = v38;
  sub_22EFC6D6C((uint64_t)v50, v17);
  *(_OWORD *)&v50[8] = xmmword_22F463A40;
  v51 = 1;
  v52 = 1;
  v53 = 0;
  sub_22EC56024((uint64_t)&v40);
  sub_22EC63520((uint64_t)a1, (uint64_t)&v40, a2, 0, 0);
  if ((_DWORD)v40 == 3)
  {
    v29 = *(_QWORD *)v41 & 0xFFFFFFFFFFFFFFFCLL;
    v28 = v24;
    v30 = v14;
  }
  else
  {
    v28 = v24;
    if ((_DWORD)v40 != 2)
    {
      v29 = 0;
      LOBYTE(v53) = 0;
      v30 = v14;
      goto LABEL_33;
    }
    v29 = *(_QWORD *)v41 & 0xFFFFFFFFFFFFFFFCLL;
    v30 = v14;
    if ((*(_DWORD *)(v29 + 28) & 0x7Fu) > 0x2F || ((1 << (*(_DWORD *)(v29 + 28) & 0x7F)) & 0xC00000060000) == 0)
    {
      LOBYTE(v53) = 0;
      goto LABEL_24;
    }
    v29 = sub_22EFBAEA4(*(_QWORD *)v41 & 0xFFFFFFFFFFFFFFFCLL);
  }
  LOBYTE(v53) = 0;
  if (v29)
  {
LABEL_24:
    if ((*(_DWORD *)(v29 + 28) & 0x7Fu) <= 0x3B && ((1 << (*(_DWORD *)(v29 + 28) & 0x7F)) & 0x800004100000000) != 0)
    {
      sub_22F34553C((uint64_t)a1, *((_DWORD *)a5 + 16), v29);
      v29 = 0;
    }
    else
    {
      if (a3)
        v31 = a3 + 64;
      else
        v31 = 0;
      if (!sub_22E8CE620((uint64_t)(a1 + 830), (_QWORD *)v29, v31, a2, 0))
        v29 = 0;
    }
  }
LABEL_33:
  v12 = sub_22EA3811C(a1, v17, v36, (uint64_t *)v19, a3, v38, (~*(_DWORD *)*a5 & 7) == 0, v28, v30, v35, *((_DWORD *)a5 + 18), 0, v37, v29, a5);
  if ((*(_BYTE *)(v12 + 28) & 0x80) != 0)
    sub_22EFC77E8(a3, 1);
  if (*((_DWORD *)*a5 + 48))
  {
    v32 = *(_QWORD *)(v12 + 8);
    if ((v32 & 6) != 0)
      *(_QWORD *)(v12 + 8) = v32 | 6;
  }
  if (!v29 || (*(_DWORD *)(v12 + 28) & 0x80) == 0)
  {
    if (v17)
      sub_22EA0483C((uint64_t)a1, v12, a2, 1);
    else
      sub_22EFCCFA0(a3 + 64, v12);
  }
  if ((_BYTE)v53)
  {
    if ((_DWORD)v40 == 5)
    {
      sub_22EC64D18(v47, (uint64_t)&v40);
    }
    else if (v45 && (*(_DWORD *)(*((_QWORD *)v47 + 9) + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v47, (uint64_t)&v40);
    }
  }
  if (v44)
  {
    v34 = sub_22EC6CBD0(v44);
    MEMORY[0x2348A0E9C](v34, 0x10E0C409F09D3C3);
  }
  if (v41 != v43)
    free(v41);
  return v12;
}

uint64_t sub_22EA3811C(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t a5, unsigned int a6, int a7, uint64_t a8, unsigned int a9, int a10, int a11, int a12, char a13, uint64_t a14, _WORD *a15)
{
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  int8x16_t v24;
  int8x16_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  BOOL v35;
  BOOL v36;
  int v37;
  BOOL v38;
  unint64_t v39;
  unint64_t v40;
  int v41;
  unsigned int *v42;
  _BYTE *v43;
  _QWORD *v44;
  unsigned int v45;
  uint64_t v46;
  int v47;
  _BOOL4 v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  unsigned int v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76[24];
  uint64_t v77;
  unsigned int v78[24];
  unsigned int v79[25];
  char v80;
  _BYTE v81[96];
  _BYTE v82[96];
  _BYTE *v83;
  int v84;
  uint64_t *v85;
  unsigned int v86[24];
  unsigned int v87[24];
  uint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91[2];

  v90 = a4;
  v91[0] = a3;
  if ((a2 & 7) != 0)
    v20 = 0;
  else
    v20 = a2 & 0xFFFFFFFFFFFFFFF8;
  v89 = v20;
  if (a15)
    v21 = (a15[544] & 1) != 0 || (**(_QWORD **)a15 & 0x3F000) == 204800;
  else
    v21 = 0;
  if (a3 < 0x10 || (*(_BYTE *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 17) & 0x10) != 0)
  {
    v22 = a1[11];
    a3 = *(_QWORD *)(v22 + 16480);
    v91[0] = a3;
    v21 = 1;
  }
  else
  {
    v22 = a1[11];
  }
  v23 = sub_22EF5BA38(v22, a3);
  v88 = v23;
  v26 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(*(_QWORD *)(v23 & 0xFFFFFFFFFFFFFFF0) + 17) & 0x14) == 0)
  {
    v84 = 3364;
    v83 = &unk_24FAB79A8;
    if (sub_22EE8B0B0((uint64_t)a1, a6, v23)
      || (v83 = 0, sub_22F1110EC(*v26, (uint64_t *)&v83), v83) && (v83[28] & 0x80) != 0)
    {
      v21 = 1;
      sub_22EFC77E8(a5, 1);
    }
  }
  v27 = v91[0] & 0xFFFFFFFFFFFFFFF0;
  v28 = *(_QWORD *)((v91[0] & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v28 & 8) != 0 && (*(_DWORD *)((v28 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0)
    goto LABEL_31;
  v29 = *(_QWORD *)v27;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v27 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 16)
    goto LABEL_31;
  if (v29)
    goto LABEL_22;
LABEL_23:
  while ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v29 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
  {
    v30 = sub_22F10CF48(v29);
    if (!v30)
    {
      v72 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v29 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
      goto LABEL_30;
    }
    while (1)
    {
      v29 = *(_QWORD *)(*(_QWORD *)(v30 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (!v29)
        break;
LABEL_22:
      if ((*(_DWORD *)(v29 + 16) & 0xFEu) - 6 <= 0xFFFFFFFB)
        goto LABEL_23;
      v30 = v29;
    }
  }
  v72 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v29 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
LABEL_30:
  if (v72 == 16)
  {
LABEL_31:
    sub_22E8FCA40(a1, a6, 0xD26u, 0, (uint64_t)v87);
    sub_22E903BEC(v87);
    v21 = 1;
    sub_22EFC77E8(a5, 1);
  }
  v31 = *(_QWORD *)((v91[0] & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v31 & 8) != 0 && (*(_BYTE *)((v31 & 0xFFFFFFFFFFFFFFF0) + 0x19) & 6) != 0)
  {
    sub_22E8FCA40(a1, a6, 0xF02u, 0, (uint64_t)v86);
    sub_22E903BEC(v86);
    v21 = 1;
    sub_22EFC77E8(a5, 1);
  }
  if ((*(_BYTE *)(a1[9] + 104) & 0x20) != 0 && sub_22F10C618(*v26))
  {
    sub_22E8FCA40(a1, a6, 0x114Au, 0, (uint64_t)&v83);
    sub_22E8901B8((uint64_t)&v83, v91);
    sub_22E903BEC((unsigned int *)&v83);
    v21 = 1;
  }
  v73 = v20;
  v74 = a5;
  v75 = (uint64_t)a1;
  if ((*(_DWORD *)(a1[9] + 52) & 0x40000000) != 0)
  {
    v32 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v91[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v33 = *(_DWORD *)(v32 + 16);
    v34 = v33 & 0xFF800FF;
    if (v32)
      v35 = v34 == 116916235;
    else
      v35 = 0;
    if (v35
      || v32
      && (v24.i32[0] = *(_DWORD *)(v32 + 16),
          v25.i32[0] = 264241407,
          vmaxv_u16((uint16x4_t)vmovn_s32(vceqq_s32(vdupq_lane_s32((int32x2_t)*(_OWORD *)&vandq_s8(v24, v25), 0), (int32x4_t)xmmword_22F45AEA0))) & 1 | ((v33 & 0xFE000FF) == 16777227))|| (v32 ? (v36 = v34 == 116391947) : (v36 = 0), !v36 ? (v37 = 0) : (v37 = 1), *(_DWORD *)(v32 + 16) != 10 ? (v38 = v37 == 0) : (v38 = 0), !v38))
    {
      sub_22E8FCA40(a1, a6, 0x114Au, 0, (uint64_t)&v83);
      sub_22E8901B8((uint64_t)&v83, v91);
      sub_22E903BEC((unsigned int *)&v83);
      v21 = 1;
      sub_22EFC77E8(a5, 1);
    }
    if (a8 && !sub_22F420564((uint64_t)(a1 + 3), (uint64_t)"__cl_clang_bitfields", 20, a1[9]))
    {
      v41 = a6;
      v42 = (unsigned int *)v82;
      v43 = v82;
      v44 = a1;
      v45 = 4380;
      goto LABEL_64;
    }
  }
  if (v21)
  {
LABEL_74:
    v54 = a7;
    v49 = 0;
    v80 = 0;
    v48 = 1;
    goto LABEL_75;
  }
  v39 = v91[0];
  if (a8 && (*(_QWORD *)a1[9] & 0x100) != 0 && !v20)
  {
    if ((v91[0] & 0xF) != 0
      || (v40 = v91[0] & 0xFFFFFFFFFFFFFFF0, (*(_BYTE *)((v91[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xF) != 0))
    {
      v41 = a6;
      v42 = (unsigned int *)v81;
      v43 = v81;
      v44 = a1;
      v45 = 2634;
LABEL_64:
      sub_22E8FCA40(v44, v41, v45, 0, (uint64_t)v43);
      sub_22E903BEC(v42);
      goto LABEL_74;
    }
  }
  else
  {
    v40 = v91[0] & 0xFFFFFFFFFFFFFFF0;
  }
  if ((*(_BYTE *)(*(_QWORD *)v40 + 17) & 8) != 0)
  {
    v46 = a6;
    if (!sub_22EA1BDC8(a1, &v90, v91, a6, 0x1369u))
      goto LABEL_74;
    v39 = v91[0];
  }
  else
  {
    v46 = a6;
  }
  LODWORD(v77) = 3;
  v83 = &unk_24FAB7980;
  v84 = 2577;
  v85 = &v77;
  v47 = sub_22EAB2EB4((uint64_t)a1, v46, v39, (void (***)(_QWORD, uint64_t, _QWORD, uint64_t))&v83);
  v48 = v47;
  v49 = 0;
  v80 = 0;
  if (a8 && (v47 & 1) == 0)
  {
    v50 = a5;
    v51 = v91[0];
    v52 = *(_QWORD *)(v75 + 88);
    if (sub_22EFC3D58(v50))
      LOBYTE(v53) = 1;
    else
      v53 = (*(_QWORD *)(*(_QWORD *)(v52 + 2000) + 8) >> 53) & 1;
    v49 = sub_22EA372DC((_QWORD *)v75, v46, v73, v51, v53, a8, &v80) & 0xFFFFFFFFFFFFFFFELL;
    if (!v49)
    {
      v54 = a7;
      v80 = 0;
      v48 = 1;
      a5 = v74;
      goto LABEL_75;
    }
    a5 = v74;
  }
  if (((v48 | a7 ^ 1) & 1) != 0)
  {
    v54 = a7;
    goto LABEL_75;
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v91[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) & 0xFE) == 0x28)
  {
    if ((**(_BYTE **)(v75 + 72) & 0x10) != 0)
      v70 = 5306;
    else
      v70 = 3987;
    if (a15)
    {
LABEL_124:
      v71 = *(_DWORD *)(*(_QWORD *)a15 + 96);
      if (!v71)
        v71 = a6;
      goto LABEL_133;
    }
  }
  else
  {
    if ((v91[0] & 1) == 0 && (*(_QWORD *)((v91[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
    {
      v54 = a7;
      v48 = 0;
      goto LABEL_75;
    }
    v70 = 3984;
    if (a15)
      goto LABEL_124;
  }
  v71 = a6;
LABEL_133:
  sub_22E8FCA40((_QWORD *)v75, v71, v70, 0, (uint64_t)v79);
  sub_22E903BEC(v79);
  v48 = v70 != 5306;
  if (v70 == 5306)
    v54 = a7;
  else
    v54 = 0;
LABEL_75:
  v55 = a6;
  if (a9)
    sub_22EA38A74((unsigned int *)v75, a5, a6);
  if (a5)
    v56 = a5 + 64;
  else
    v56 = 0;
  v57 = v90;
  v58 = v91[0];
  v59 = sub_22EFC7430(80, *(_QWORD *)(v75 + 88), v56, 0);
  sub_22EFC5A18(v59, 49, v56, a11, v55, v73, v58, (uint64_t)v57, v49, v54, a9);
  if (v48)
    sub_22EFC77E8(v59, 1);
  if (a14 && (*(_DWORD *)(a14 + 28) & 0x7Fu) - 33 >= 5)
  {
    sub_22E8FCA40((_QWORD *)v75, v55, 0xCD1u, 0, (uint64_t)&v83);
    sub_22E8BAE44((uint64_t)&v83, (uint64_t *)&v89);
    sub_22E903BEC((unsigned int *)&v83);
    sub_22E8FCA40((_QWORD *)v75, *(_DWORD *)(a14 + 24), 0x6Cu, 0, (uint64_t)v78);
    sub_22E903BEC(v78);
    sub_22EFC77E8(v59, 1);
  }
  if (!v48 && (*(_BYTE *)(*(_QWORD *)(v75 + 72) + 1) & 1) != 0 && (*(_DWORD *)(v74 + 72) & 0xE000) == 0x4000)
  {
    v60 = v88 & 0xFFFFFFFFFFFFFFF0;
    v61 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v88 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v61)
    {
      if (*(_BYTE *)(v61 + 16) == 45)
      {
        v62 = sub_22F114198(*(_QWORD *)(v61 + 24));
        v63 = *(_QWORD *)(v62 + 128);
        if (v63
          || (v64 = v62,
              sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v62 + 104) + 96), *(_QWORD *)(v62 + 104)),
              (v63 = *(_QWORD *)(v64 + 128)) != 0))
        {
          if (*(_QWORD *)(v63 + 88) && sub_22EA11510(v75, v59))
            sub_22EFC77E8(v59, 1);
        }
      }
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v60 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
    {
      v65 = (**(_QWORD **)(v75 + 72) & 0x20) != 0 ? 5396 : 5066;
      sub_22E8FCA40((_QWORD *)v75, *(_DWORD *)(v59 + 24), v65, 0, (uint64_t)&v83);
      v77 = *(_QWORD *)(v59 + 40);
      v66 = sub_22E894538((uint64_t)&v83, &v77);
      sub_22E8901B8(v66, &v88);
      sub_22E903BEC((unsigned int *)&v83);
      if ((**(_BYTE **)(v75 + 72) & 0x20) == 0)
        sub_22EFC77E8(v59, 1);
    }
  }
  if (a15)
  {
    sub_22EA7E768((_QWORD *)v75, *(_QWORD *)(v75 + 12888), v59, (uint64_t)a15);
    if ((*(_BYTE *)(v59 + 29) & 1) != 0)
      sub_22EA49EE4((_QWORD *)v75, v59);
  }
  if ((*(_WORD *)(*(_QWORD *)(v75 + 72) + 148) & 2) != 0)
  {
    sub_22EA1D5B8((_QWORD *)v75, v59);
    if (v67)
      sub_22EFC77E8(v59, 1);
  }
  v68 = *(_QWORD *)((v91[0] & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v68 & 8) != 0 && (*(_QWORD *)((v68 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x30) == 0x10)
  {
    sub_22E8FCA40((_QWORD *)v75, v55, 0x188Fu, 0, (uint64_t)v76);
    sub_22E903BEC(v76);
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v75 + 88) + 15088) + 56) - 23) <= 1
    && sub_22E97DED0((_QWORD *)v75, v91[0], *(_DWORD *)(v59 + 24)))
  {
    sub_22EFC77E8(v59, 1);
  }
  *(_DWORD *)(v59 + 28) = *(_DWORD *)(v59 + 28) & 0xFFFF9FFF | ((a13 & 3) << 13);
  return v59;
}

unsigned int *sub_22EA38A74(unsigned int *result, uint64_t a2, int a3)
{
  unsigned int *v5;
  int v6;
  int v7;
  unsigned int v8[24];
  unsigned int v9[24];

  if ((*(_DWORD *)(a2 + 72) & 0xE000) == 0x4000)
  {
    v5 = result;
    result = (unsigned int *)sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    if ((**(_QWORD **)(a2 + 128) & 0x800000) != 0)
    {
      sub_22E8FCA40(v5, a3, 0xF7Bu, 0, (uint64_t)v9);
      sub_22E903BEC(v9);
      v6 = sub_22EA40620(a2);
      sub_22E8FCA40(v5, v6, 0x1775u, 0, (uint64_t)v8);
      v7 = 0;
      sub_22E8900C4((uint64_t)v8, &v7);
      return sub_22E903BEC(v8);
    }
  }
  return result;
}

unint64_t sub_22EA38B28(_QWORD *a1, uint64_t *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t v14;
  unsigned int v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  unint64_t v26;
  BOOL v28;
  unint64_t v29;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unsigned int v44[24];
  unsigned int v45[25];
  BOOL v46;
  uint64_t v47[12];
  unsigned int v48[24];
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;

  v8 = a6;
  if (*(_DWORD *)(a4 + 40))
    v14 = 0;
  else
    v14 = *(_QWORD *)(a4 + 48);
  v51 = v14;
  if (v14)
    v15 = *(_DWORD *)(a4 + 64);
  else
    v15 = a3;
  v16 = sub_22EE8156C((uint64_t)a1, a4, (uint64_t)a2, a4, a5, a6, a7, a8);
  v17 = *v16;
  v49 = *v16;
  v50 = v16;
  v18 = a1[11];
  if ((*(_WORD *)(*(_QWORD *)(v18 + 2000) + 16) & 0x20) != 0)
  {
    v19 = v17 & 0xFFFFFFFFFFFFFFF0;
    v20 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v20 & 8) == 0 || (*(_BYTE *)((v20 & 0xFFFFFFFFFFFFFFF0) + 0x1C) & 0xC) == 0)
    {
      v36 = *(_QWORD *)v19;
      if ((*(_BYTE *)(*(_QWORD *)v19 + 8) & 0xF) != 0)
      {
        v36 = (unint64_t)sub_22F10D2BC(v17);
        v18 = a1[11];
      }
      v43 = v36 & 0xFFFFFFFFFFFFFFF0;
      v37 = sub_22F36E228(v18);
      v38 = *(_QWORD *)(v37 + 48);
      if (v38)
        v39 = v38 & 0xFFFFFFFFFFFFFFF0;
      else
        v39 = sub_22EF6462C(v18, v37);
      if (v39 == v43)
      {
        v40 = a1[11];
        v41 = (*(_WORD *)(*(_QWORD *)(v40 + 2000) + 16) & 0x20) != 0
            ? *(_WORD *)(*(_QWORD *)(v40 + 2000) + 16) & 0xFFCF | (*(unsigned __int8 *)(*(_QWORD *)(v40 + 2000) + 18) << 16) | 0x57C2000Fu
            : 0;
        if ((v41 & 0xC) != 0)
        {
          v47[0] = v41 << 32;
          v42 = sub_22E491354((unsigned int *)v47, v17);
          v17 = sub_22EF5DBC4(v40, v42, v47[0]);
          v49 = v17;
        }
      }
    }
  }
  if (a5 && (unint64_t)sub_22EA372DC(a1, v15, v14, v17, 0, a5, 0) <= 1)
    *(_WORD *)(a4 + 1088) |= 1u;
  v21 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
  {
    sub_22E8FCA40(a1, v15, 0xE78u, 0, (uint64_t)v48);
    sub_22E903BEC(v48);
LABEL_15:
    *(_WORD *)(a4 + 1088) |= 1u;
    goto LABEL_18;
  }
  if ((*(_BYTE *)(v21 + 17) & 8) != 0 && !sub_22EA1BDC8(a1, &v50, &v49, v15, 0x137Au))
    goto LABEL_15;
LABEL_18:
  if (v8 <= 8)
  {
    if (v8)
      LOBYTE(v8) = 1;
  }
  else if (v8 == 9)
  {
    LOBYTE(v8) = 2;
  }
  else if (v8 == 11)
  {
    LOBYTE(v8) = 3;
  }
  else
  {
    LOBYTE(v8) = 4;
  }
  v22 = a1[27];
  if (!v22 || (*(_DWORD *)(v22 - 20) & 0x80) != 0)
    return 0;
  v23 = v22 - 48;
  v24 = *(_DWORD *)(v22 - 20) & 0x7F;
  if (v24 != 19)
  {
    if (v24 == 21 && ((1 << *(_DWORD *)(a1[9] + 400)) & 0xDD) == 0)
      v23 = *(_QWORD *)(v22 + 40);
    goto LABEL_44;
  }
  if (((1 << *(_DWORD *)(a1[9] + 400)) & 0xDD) == 0 || (v25 = *(_QWORD *)(v22 - 8), v25 >= 8) && (v25 & 7) == 0)
  {
    sub_22E8FCA40(a1, v15, 0xF4Fu, 0, (uint64_t)v47);
    v26 = *(_QWORD *)(v22 - 8);
    v28 = (v26 & 7) != 0 || v26 < 8;
    v46 = v28;
    sub_22E894E38((uint64_t)v47, (unsigned __int8 *)&v46);
    sub_22E903BEC((unsigned int *)v47);
    return 0;
  }
LABEL_44:
  v29 = sub_22EFDE094(a1[11], v23, a3, v15, v14, v49, (uint64_t)v50, v8, a5, 0);
  if (v14)
  {
    v31 = (_QWORD *)sub_22EC65CE0(a1, (uint64_t)a2, v14, v15, 3, 1);
    if (v31)
    {
      v32 = v31;
      v33 = v23 ? v23 + 48 : 0;
      if (sub_22E8CE620((uint64_t)(a1 + 415), v31, v33, a2, 0) && (*((_DWORD *)v32 + 7) & 0x7Fu) - 33 >= 5)
      {
        sub_22E8FCA40(a1, v15, 0xCD1u, 0, (uint64_t)v47);
        sub_22E8BAE44((uint64_t)v47, &v51);
        sub_22E903BEC((unsigned int *)v47);
        sub_22E8FCA40(a1, *((_DWORD *)v32 + 6), 0x6Cu, 0, (uint64_t)v45);
        sub_22E903BEC(v45);
        sub_22EFC77E8(v29, 1);
      }
    }
  }
  sub_22EA7E768(a1, (uint64_t)a2, v29, a4);
  if ((*(_WORD *)(a4 + 1088) & 1) != 0 || (**(_QWORD **)a4 & 0x3F000) == 0x32000)
    sub_22EFC77E8(v29, 1);
  if ((*(_WORD *)(a1[9] + 148) & 2) != 0)
  {
    sub_22EA1D5B8(a1, v29);
    if (v34)
      sub_22EFC77E8(v29, 1);
  }
  if (*(_DWORD *)(*(_QWORD *)a4 + 192))
  {
    v35 = *(_QWORD *)(v29 + 8);
    if ((v35 & 6) != 0)
      *(_QWORD *)(v29 + 8) = v35 | 6;
  }
  if (v51)
  {
    sub_22E3BA850((uint64_t)(a2 + 9), (const void *)v29);
    sub_22E8CE7E8((uint64_t)(a1 + 415), v29);
  }
  if (((1 << *(_DWORD *)(a1[9] + 400)) & 0xDD) != 0
    && (*(_BYTE *)(v29 + 28) & 0x80) == 0
    && (*(_DWORD *)(v22 - 20) & 0x7F) == 0x16)
  {
    sub_22E8FCA40(a1, v15, 0x1A28u, 0, (uint64_t)v44);
    sub_22E903BEC(v44);
  }
  return v29;
}

uint64_t sub_22EA3903C(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;

  if (((1 << *(_DWORD *)(*(_QWORD *)(result + 72) + 400)) & 0xDD) != 0)
  {
    v4 = *(unsigned int *)(a3 + 8);
    if ((_DWORD)v4)
    {
      v5 = result;
      result = *(_QWORD *)(*(_QWORD *)a3 + 8 * v4 - 8);
      if ((*(_BYTE *)(result + 68) & 1) != 0)
      {
        result = sub_22EFC2F84(result, *(_QWORD *)(v5 + 88));
        if ((result & 1) == 0)
        {
          if ((v7 = *(_QWORD *)(v5 + 216), v8 = *(_WORD *)(v7 + 8) & 0x7F, v7) && v8 == 22
            || v7 && v8 == 19 && ((v19 = *(_QWORD *)(v7 - 8), v19 < 8) || (v19 & 7) != 0))
          {
            v21 = sub_22EF5CDF0(*(_QWORD *)(v5 + 88), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 88) + 16480) & 0xFFFFFFFFFFFFFFF0));
            if (v21 > 0x40)
              llvm::APInt::initSlowCase((llvm::APInt *)&v20);
            else
              v20 = 0;
            v9 = *(_QWORD *)(v5 + 88);
            v10 = *(_QWORD *)(v9 + 16480);
            v11 = sub_22E3CD3D4(v9 + 2032, 32, 3);
            sub_22EFF8F1C(v11, v9, (uint64_t)&v20, v10, a2);
            v12 = *(_QWORD *)(v5 + 88);
            v13 = *(_QWORD *)(v5 + 216);
            if (v13)
              v14 = v13 - 48;
            else
              v14 = 0;
            v15 = *(_QWORD *)(v12 + 16408);
            v16 = sub_22EF579A8(v12, v15, a2);
            result = sub_22EFDE094(v12, v14, a2, a2, 0, v15, (uint64_t)v16, 1, v11, 1);
            v17 = result;
            v18 = *(_DWORD *)(a3 + 8);
            if (v18 >= *(_DWORD *)(a3 + 12))
            {
              result = llvm::SmallVectorBase<unsigned int>::grow_pod();
              v18 = *(_DWORD *)(a3 + 8);
            }
            *(_QWORD *)(*(_QWORD *)a3 + 8 * v18) = v17;
            ++*(_DWORD *)(a3 + 8);
            if (v21 >= 0x41)
            {
              result = v20;
              if (v20)
                return MEMORY[0x2348A0E84](v20, 0x1000C8000313F17);
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_22EA39224(uint64_t a1, uint64_t a2, int a3, unint64_t a4, uint64_t *a5, uint64_t a6, int a7, int a8, uint64_t a9)
{
  int v14;
  int v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned int *v26;
  uint64_t *v27;
  uint64_t v29;
  int v30;
  BOOL v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  int v51;
  _QWORD *v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v69;
  uint64_t i;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  BOOL v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  int v92;
  int v93;
  BOOL v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  BOOL v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  int v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  int v140;
  int v141;
  int v142;
  _QWORD *v143;
  BOOL v144;
  unint64_t v145;
  unint64_t v146;
  unsigned int v147;
  int v148;
  uint64_t *v149;
  uint64_t v150;
  unint64_t v151;
  unsigned int v152;
  uint64_t v153;
  uint64_t v154;
  unsigned int v155;
  uint64_t v156;
  unint64_t v157;
  void **v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t j;
  uint64_t v167;
  unsigned int v168;
  uint64_t v169;
  unsigned int v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  void **v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  int v181;
  _QWORD *v184;
  unint64_t v186;
  unsigned int v187[24];
  unsigned int v188[24];
  unsigned int v189[24];
  unsigned int v190[24];
  void *v191[2];
  char v192;
  uint64_t v193;
  unsigned int v194[24];
  _BYTE v195[96];
  _QWORD *v196;
  _BYTE v197[20];
  char v198;
  void *__p;
  _QWORD *v200;
  uint64_t v201;
  char v202;
  __int128 v203;
  _BYTE *v204;
  int v205;
  __int16 v206;
  unsigned __int8 v207;
  void *v208;
  uint64_t v209;
  _QWORD v210[34];

  v210[32] = *MEMORY[0x24BDAC8D0];
  if (a6)
  {
    v14 = *(_DWORD *)(a4 + 28) & 0x7F;
    if ((v14 - 19) <= 4)
    {
      if (v14 == 21)
      {
        v158 = (void **)(a4 + 88);
      }
      else
      {
        if (v14 != 19)
          goto LABEL_5;
        v158 = (void **)(a4 + 104);
      }
      v159 = *(_QWORD *)(a1 + 88);
      v208 = *v158;
      sub_22F25E108((uint64_t *)(v159 + 952), &v208)[1] = 0;
    }
  }
LABEL_5:
  v15 = *(_DWORD *)(a4 + 28);
  if ((v15 & 0x7Eu) - 34 >= 4)
    v16 = 0;
  else
    v16 = (_QWORD *)a4;
  v196 = v16;
  if ((v15 & 0x7Fu) - 35 >= 3)
    v17 = 0;
  else
    v17 = a4;
  if (!v16)
    goto LABEL_21;
  if ((v16[9] & 0x80) != 0)
    sub_22EFCC320((uint64_t)(v16 + 8));
  v18 = v16[10];
  if (v18)
  {
    v19 = 0;
    do
    {
      if ((*(_DWORD *)(v18 + 28) & 0x7F) == 0x44 && *(_QWORD *)(v18 + 40))
        ++v19;
      v18 = *(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF8;
    }
    while (v18);
  }
  else
  {
LABEL_21:
    v19 = 0;
  }
  v208 = v210;
  v209 = 0x2000000000;
  if (a6)
  {
    v186 = v17;
    v181 = a3;
    v20 = &a5[a6];
    while (1)
    {
      v21 = *a5;
      v22 = *(_QWORD *)(*(_QWORD *)(*a5 + 48) & 0xFFFFFFFFFFFFFFF0);
      if ((sub_22EFC2E8C(*a5) & 1) == 0)
      {
        v23 = v209;
        if (v209 >= (unint64_t)HIDWORD(v209))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v23 = v209;
        }
        *((_QWORD *)v208 + v23) = v21;
        LODWORD(v209) = v209 + 1;
      }
      if ((*(_BYTE *)(v21 + 28) & 0x80) != 0)
        goto LABEL_34;
      v24 = *(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0);
      v25 = *(unsigned __int8 *)(v24 + 16);
      if ((v25 - 25) <= 1)
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0xD1Fu, 0, (uint64_t)&v203);
        *(_QWORD *)v197 = *(_QWORD *)(v21 + 40);
        sub_22E894538((uint64_t)&v203, (uint64_t *)v197);
LABEL_31:
        v26 = (unsigned int *)&v203;
        goto LABEL_32;
      }
      v27 = a5 + 1;
      if (v25 == 4)
      {
        if (v196)
        {
          if ((v196[9] & 0xE000) != 0x4000 && v27 != v20)
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0xD9Bu, 0, (uint64_t)&v203);
            *(_QWORD *)v197 = *(_QWORD *)(v21 + 40);
            v44 = sub_22E894538((uint64_t)&v203, (uint64_t *)v197);
            v191[0] = *(void **)(v21 + 48);
            v45 = sub_22E8901B8(v44, (uint64_t *)v191);
            LODWORD(v193) = (unsigned __int16)*((_DWORD *)v196 + 18) >> 13;
            sub_22E8900C4(v45, (int *)&v193);
            sub_22E903BEC((unsigned int *)&v203);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(*v27 + 24), 0x16C5u, 0, (uint64_t)v195);
            v26 = (unsigned int *)v195;
LABEL_32:
            sub_22E903BEC(v26);
LABEL_33:
            sub_22EFC77E8(v21, 1);
LABEL_34:
            sub_22EFC77E8(a4, 1);
            goto LABEL_35;
          }
          if ((v196[9] & 0xE000) == 0x4000)
          {
            v29 = **(_QWORD **)(a1 + 72);
            if ((v29 & 0x100) != 0)
              v30 = 5246;
            else
              v30 = 3484;
            v31 = (v29 & 0x20) == 0;
            v32 = 5247;
            goto LABEL_80;
          }
          if (!v19)
          {
            v46 = **(_QWORD **)(a1 + 72);
            if ((v46 & 0x100) != 0)
              v30 = 5241;
            else
              v30 = 3478;
            v31 = (v46 & 0x20) == 0;
            v32 = 5242;
LABEL_80:
            if (v31)
              v47 = v30;
            else
              v47 = v32;
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), v47, 0, (uint64_t)&v203);
            *(_QWORD *)v197 = *(_QWORD *)(v21 + 40);
            v48 = sub_22E894538((uint64_t)&v203, (uint64_t *)v197);
            LODWORD(v191[0]) = (unsigned __int16)*((_DWORD *)v196 + 18) >> 13;
            sub_22E8900C4(v48, (int *)v191);
            sub_22E903BEC((unsigned int *)&v203);
          }
          if (v186)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v186 + 104) + 96), *(_QWORD *)(v186 + 104));
            if (*(_DWORD *)(*(_QWORD *)(v186 + 128) + 20))
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0xD9Du, 0, (uint64_t)&v203);
              *(_QWORD *)v197 = *(_QWORD *)(v21 + 40);
              v49 = sub_22E894538((uint64_t)&v203, (uint64_t *)v197);
              LODWORD(v191[0]) = (unsigned __int16)*((_DWORD *)v196 + 18) >> 13;
              sub_22E8900C4(v49, (int *)v191);
              sub_22E903BEC((unsigned int *)&v203);
            }
          }
          v50 = *(_BYTE **)(a1 + 72);
          if ((v50[104] & 0x20) != 0)
          {
            v51 = *(_DWORD *)(v21 + 24);
            v52 = (_QWORD *)a1;
            v53 = 3829;
LABEL_91:
            sub_22E8FCA40(v52, v51, v53, 0, (uint64_t)&v203);
            *(_QWORD *)v197 = *(_QWORD *)(v21 + 40);
            v54 = sub_22E894538((uint64_t)&v203, (uint64_t *)v197);
            LODWORD(v191[0]) = (unsigned __int16)*((_DWORD *)v196 + 18) >> 13;
            sub_22E8900C4(v54, (int *)v191);
            sub_22E903BEC((unsigned int *)&v203);
          }
          else if ((*v50 & 1) == 0)
          {
            v51 = *(_DWORD *)(v21 + 24);
            v52 = (_QWORD *)a1;
            v53 = 5184;
            goto LABEL_91;
          }
          v55 = sub_22EF5BA38(*(_QWORD *)(a1 + 88), *(_QWORD *)(v21 + 48));
          if ((*(_BYTE *)(*(_QWORD *)(v55 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0 && sub_22F115260(v55))
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0xD97u, 0, (uint64_t)&v203);
            *(_QWORD *)v197 = *(_QWORD *)(v21 + 40);
            v56 = sub_22E894538((uint64_t)&v203, (uint64_t *)v197);
            v191[0] = *(void **)(v21 + 48);
            sub_22E8901B8(v56, (uint64_t *)v191);
            goto LABEL_31;
          }
          v57 = 0x800000;
          goto LABEL_124;
        }
        if ((*(_DWORD *)(a4 + 28) & 0x7Fu) - 19 < 5)
          goto LABEL_120;
      }
      if ((*(_BYTE *)(v22 + 17) & 4) == 0)
      {
        v33 = *(_DWORD *)(v21 + 24);
        v34 = *(_QWORD *)(v21 + 48);
        DWORD2(v203) = 3364;
        *(_QWORD *)&v203 = &unk_24FAB79A8;
        if ((sub_22EE8B0B0(a1, v33, v34) & 1) != 0)
          goto LABEL_33;
        v24 = *(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0);
        v25 = *(unsigned __int8 *)(v24 + 16);
      }
      if (v25 != 45)
        break;
      if (v196)
      {
        if ((*(_BYTE *)(sub_22F114198(*(_QWORD *)(v24 + 24)) + 74) & 0x80) != 0)
        {
          v35 = v196[9];
          v196[9] = v35 | 0x800000;
          if ((v35 & 0xE000) != 0x4000)
          {
            if (v27 == v20)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0x147Cu, 0, (uint64_t)&v203);
              *(_QWORD *)v197 = *(_QWORD *)(v21 + 40);
              sub_22E894538((uint64_t)&v203, (uint64_t *)v197);
            }
            else
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0x1518u, 0, (uint64_t)&v203);
              *(_QWORD *)v197 = *(_QWORD *)(v21 + 40);
              v36 = sub_22E894538((uint64_t)&v203, (uint64_t *)v197);
              v191[0] = *(void **)(v21 + 48);
              sub_22E8901B8(v36, (uint64_t *)v191);
            }
            sub_22E903BEC((unsigned int *)&v203);
          }
        }
      }
      if ((*(_DWORD *)(a4 + 28) & 0x7Fu) - 19 <= 4)
      {
        v64 = *(unsigned int *)(v21 + 24);
        v65 = *(_QWORD *)(v21 + 48);
        *(_DWORD *)v197 = 4;
        *(_QWORD *)&v203 = &unk_24FAB7980;
        DWORD2(v203) = 2577;
        v204 = v197;
        if (sub_22EAB2EB4(a1, v64, v65, (void (***)(_QWORD, uint64_t, _QWORD, uint64_t))&v203))
          sub_22EFC77E8(v21, 1);
      }
      if (!v196)
        goto LABEL_130;
      if ((*(_BYTE *)(sub_22F114198(*(_QWORD *)(v24 + 24)) + 75) & 2) != 0)
      {
        v196[9] |= 0x2000000uLL;
      }
      else if (!v196)
      {
        goto LABEL_130;
      }
      if ((*(_BYTE *)(sub_22F114198(*(_QWORD *)(v24 + 24)) + 75) & 4) == 0)
        goto LABEL_120;
      v57 = 0x4000000;
LABEL_124:
      v196[9] |= v57;
LABEL_125:
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0 || sub_22F3089DC(v21))
        goto LABEL_126;
      v69 = *(_QWORD *)(v21 + 48);
      *(_QWORD *)&v203 = v69;
      if (!sub_22F111C54(&v203))
        goto LABEL_151;
      v196[9] |= 0x10000000uLL;
      for (i = v69; ; i = *(_QWORD *)(v73 + 32))
      {
        v71 = *(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0);
        if (v71)
          v72 = (*(_DWORD *)(v71 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
        else
          v72 = 0;
        if (v72)
        {
          v73 = *(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0);
          continue;
        }
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v71 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
          break;
        v73 = sub_22F10CF48(v71);
        if (!v73)
          break;
      }
      v74 = sub_22F10C2A4(v71);
      if (v74 && (*(_DWORD *)(v74 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v74 + 75) & 0x80) != 0)
      {
        v75 = v196;
LABEL_150:
        v75[9] |= 0x80000000uLL;
      }
      else
      {
        v75 = v196;
        if ((v196[9] & 0xE000) == 0x4000)
          goto LABEL_150;
      }
LABEL_151:
      if (sub_22F111B38(&v203) < 2)
        goto LABEL_165;
      v196[9] |= 0x20000000uLL;
      v76 = v69;
      while (2)
      {
        v77 = *(_QWORD *)(v76 & 0xFFFFFFFFFFFFFFF0);
        if (v77)
          v78 = (*(_DWORD *)(v77 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
        else
          v78 = 0;
        if (v78)
        {
          v79 = *(_QWORD *)(v76 & 0xFFFFFFFFFFFFFFF0);
LABEL_161:
          v76 = *(_QWORD *)(v79 + 32);
          continue;
        }
        break;
      }
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v77 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
      {
        v79 = sub_22F10CF48(v77);
        if (v79)
          goto LABEL_161;
      }
      v80 = sub_22F10C2A4(v77);
      if (v80 && (*(_DWORD *)(v80 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v80 + 76) & 2) != 0)
      {
        v81 = v196;
LABEL_164:
        v81[9] |= 0x200000000uLL;
      }
      else
      {
        v81 = v196;
        if ((v196[9] & 0xE000) == 0x4000)
          goto LABEL_164;
      }
LABEL_165:
      if (!sub_22F115260(v69))
        goto LABEL_179;
      v196[9] |= 0x440000000uLL;
      v82 = v69;
      while (2)
      {
        v83 = *(_QWORD *)(v82 & 0xFFFFFFFFFFFFFFF0);
        if (v83)
          v84 = (*(_DWORD *)(v83 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
        else
          v84 = 0;
        if (v84)
        {
          v85 = *(_QWORD *)(v82 & 0xFFFFFFFFFFFFFFF0);
LABEL_175:
          v82 = *(_QWORD *)(v85 + 32);
          continue;
        }
        break;
      }
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v83 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
      {
        v85 = sub_22F10CF48(v83);
        if (v85)
          goto LABEL_175;
      }
      v86 = sub_22F10C2A4(v83);
      if (v86 && (*(_DWORD *)(v86 + 28) & 0x7Eu) - 34 <= 3 && (*(_BYTE *)(v86 + 76) & 1) != 0)
      {
        v87 = v196;
LABEL_178:
        v87[9] |= 0x100000000uLL;
      }
      else
      {
        v87 = v196;
        if ((v196[9] & 0xE000) == 0x4000)
          goto LABEL_178;
      }
LABEL_179:
      v88 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v69 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v88 && *(_BYTE *)(v88 + 16) == 45)
      {
        if ((*(_QWORD *)(sub_22F114198(*(_QWORD *)(v88 + 24)) + 72) & 0x1800000000) == 0x1000000000)
          goto LABEL_189;
      }
      else
      {
        v89 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v89 & 8) != 0)
        {
          v90 = *(_QWORD *)((v89 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          if ((v90 & 0x1C0) == 0xC0
            || ((v91 = HIDWORD(v90), v92 = v91 & 0xC, v93 = v91 & 2, v92) ? (v94 = v93 == 0) : (v94 = 1), !v94))
          {
LABEL_189:
            v196[9] = v196[9] & 0xFFFFFFE7FFFFFFFFLL | 0x1000000000;
          }
        }
      }
LABEL_126:
      if (v196)
      {
        v66 = *(_QWORD *)(v21 + 48);
        if ((v66 & 4) != 0 || (*(_BYTE *)((v66 & 0xFFFFFFFFFFFFFFF0) + 8) & 4) != 0)
          v196[9] |= 0x4000000uLL;
      }
LABEL_130:
      v67 = *(_QWORD *)(v21 + 40);
      if ((v67 & 7) == 0 && v67 > 7)
        ++v19;
LABEL_35:
      if (++a5 == v20)
      {
        v16 = v196;
        a3 = v181;
        v17 = v186;
        goto LABEL_212;
      }
    }
    if ((v25 - 33) <= 1)
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v21 + 24), 0x127Du, 0, (uint64_t)&v203);
      v58 = *(unsigned int *)(v21 + 24);
      *(_QWORD *)&v197[12] = 0;
      v198 = 0;
      v200 = 0;
      v201 = 0x100000000000000;
      __p = (void *)42;
      *(_QWORD *)v197 = v58 | (v58 << 32);
      v197[8] = 0;
      v202 = 0;
      sub_22E890748((uint64_t)&v203, v197);
      if (SHIBYTE(v201) < 0)
        operator delete(__p);
      sub_22E903BEC((unsigned int *)&v203);
      *(_QWORD *)(v21 + 48) = sub_22F36CC4C(*(_QWORD *)(a1 + 88), *(_QWORD *)(v21 + 48));
      goto LABEL_120;
    }
    if (v196)
    {
      if ((v196[9] & 0xE000) == 0x4000)
      {
        v37 = *(_QWORD *)((*(_QWORD *)(v21 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v37 & 8) != 0 && (*(_WORD *)((v37 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x180) != 0)
        {
          v38 = sub_22F1E361C(*(_QWORD **)(a1 + 112), *(_DWORD *)(v21 + 24));
          if (v38)
          {
            if (v38 != 3 && (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0 && !sub_22F3089DC(v21))
            {
              v95 = *(_QWORD *)(v21 + 48);
              v96 = *(_QWORD *)((v95 & 0xFFFFFFFFFFFFFFF0) + 8);
              if ((v96 & 8) != 0 && (*(_QWORD *)((v96 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) == 0x80)
              {
                while (1)
                {
                  v97 = *(_QWORD *)(v95 & 0xFFFFFFFFFFFFFFF0);
                  v98 = *(_DWORD *)(v97 + 16);
                  if (v97)
                    v99 = v98 == 7;
                  else
                    v99 = 0;
                  if (v99)
                  {
                    if (*(_DWORD *)(v97 + 16) >> 19 == 60)
                      goto LABEL_67;
                  }
                  else if (!v97 || v98 != 37)
                  {
                    break;
                  }
                  v95 = *(_QWORD *)(v97 + 32);
                }
              }
              v100 = *(_QWORD *)(a1 + 88);
              v101 = *(_DWORD *)(v21 + 24);
              v203 = 0uLL;
              LODWORD(v204) = v101;
              HIDWORD(v204) = v101;
              v205 = 0;
              v206 = 0;
              v207 = ((((v207 >> 7) & 1) << 23) | 0x780000u) >> 16;
              v102 = sub_22F3A4818(v100, "", 0, 6, &v203);
              sub_22EFCA95C(v21, v102);
              goto LABEL_120;
            }
          }
        }
      }
    }
LABEL_67:
    v39 = *(_QWORD *)(a1 + 72);
    if ((*(_BYTE *)(v39 + 1) & 0x40) == 0)
      goto LABEL_120;
    v40 = v196;
    if ((*(_BYTE *)(v39 + 246) & 6) == 0 || v196 == 0)
      goto LABEL_121;
    v42 = v196[9];
    if ((v42 & 0x2000000) != 0)
      goto LABEL_120;
    v43 = *(_QWORD *)(v21 + 48);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
      || (v59 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFFFF0) + 8), (v59 & 8) != 0)
      && (*(_QWORD *)((v59 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x30) == 0x20)
    {
      v196[9] = v42 | 0x2000000;
LABEL_120:
      v40 = v196;
LABEL_121:
      if (!v40)
        goto LABEL_126;
      goto LABEL_125;
    }
    if (!sub_22EF5C728(*(_QWORD *)(a1 + 88), v43))
      goto LABEL_120;
    v60 = (_QWORD *)(sub_22EF5BA38(*(_QWORD *)(a1 + 88), *(_QWORD *)(v21 + 48)) & 0xFFFFFFFFFFFFFFF0);
    v61 = *(_QWORD *)(*(_QWORD *)(*v60 + 8) & 0xFFFFFFFFFFFFFFF0);
    v62 = *(unsigned __int8 *)(v61 + 16);
    if (v62 == 45)
    {
      if ((*(_BYTE *)(sub_22F114198(*(_QWORD *)(v61 + 24)) + 75) & 2) != 0)
      {
LABEL_108:
        v57 = 0x2000000;
        goto LABEL_124;
      }
      v62 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v60 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    }
    if (v62 != 32)
    {
      v63 = v60[1];
      if ((v63 & 8) == 0 || (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x30) != 0x20)
        goto LABEL_120;
    }
    goto LABEL_108;
  }
LABEL_212:
  if (!v16)
  {
    v107 = (uint64_t *)v208;
    v108 = *(_DWORD *)(a4 + 28) & 0x7F;
    if (a4 && v108 == 22)
    {
      *(_DWORD *)((*(_QWORD *)(a4 + 120) & 0xFFFFFFFFFFFFFFF8) + 80) = a8;
      v156 = v209;
      if ((_DWORD)v209)
      {
        do
        {
          sub_22EFC80C4(*v107, a4 + 48);
          v157 = *v107++;
          sub_22EFCCFA0(a4 + 48, v157);
          --v156;
        }
        while (v156);
      }
      if (sub_22F3B46CC(a4))
      {
        v180 = sub_22F3B46CC(a4);
        sub_22EAFC034((_QWORD *)a1, a4, v180);
      }
      goto LABEL_324;
    }
    if (a4 && v108 == 21)
    {
      v109 = v209;
      if ((_DWORD)v209)
      {
        v110 = (uint64_t *)v208;
        do
        {
          v111 = *v110++;
          sub_22EFC80C4(v111, a4 + 48);
          --v109;
        }
        while (v109);
        v112 = v209;
      }
      else
      {
        v112 = 0;
      }
      sub_22EAF7AE0((unsigned int *)a1, a4, v107, v112, a8);
      *(_DWORD *)(a4 + 108) = a7;
      *(_DWORD *)(a4 + 112) = a8;
      goto LABEL_324;
    }
    if (!a4 || v108 != 19)
      goto LABEL_324;
    v113 = v209;
    if (!(_DWORD)v209)
    {
LABEL_264:
      *(_DWORD *)(a4 + 140) = a7;
      *(_DWORD *)(a4 + 144) = a8;
      goto LABEL_324;
    }
    v114 = 0;
    v115 = *(_QWORD *)(a4 + 104);
    while (1)
    {
      if (v115)
      {
        v116 = *(_QWORD *)(v107[v114] + 40);
        if ((v116 & 7) != 0)
          v117 = 0;
        else
          v117 = v116 & 0xFFFFFFFFFFFFFFF8;
        v118 = sub_22F3B466C(v115, v117);
        if (v118)
        {
          v119 = v118;
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v107[v114] + 24), 0xCCFu, 0, (uint64_t)v190);
          sub_22E903BEC(v190);
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v119 + 24), 0x6Du, 0, (uint64_t)v189);
          sub_22E903BEC(v189);
          goto LABEL_242;
        }
        v120 = sub_22E496488(v115);
        if (v120 != v121)
        {
          v122 = v120;
          v123 = v121;
          do
          {
            v124 = *(_QWORD *)(v107[v114] + 40);
            if ((v124 & 7) != 0)
              v125 = 0;
            else
              v125 = v124 & 0xFFFFFFFFFFFFFFF8;
            v126 = sub_22F3B466C(v122, v125);
            if (v126)
            {
              v127 = v126;
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v107[v114] + 24), 0xCCFu, 0, (uint64_t)v188);
              sub_22E903BEC(v188);
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v127 + 24), 0x6Du, 0, (uint64_t)v187);
              sub_22E903BEC(v187);
            }
            do
            {
              v122 = *(_QWORD *)(v122 + 128);
              if (!v122)
                break;
            }
            while ((*(_BYTE *)(v122 + 28) & 0x80) != 0
                 || *(_QWORD *)(v122 + 40) >= 8uLL && (*(_QWORD *)(v122 + 40) & 7) == 0);
          }
          while (v122 != v123);
        }
      }
      sub_22EFC80C4(v107[v114], a4 + 48);
      sub_22EFCCFA0(a4 + 48, v107[v114]);
LABEL_242:
      if (++v114 == v113)
        goto LABEL_264;
    }
  }
  v103 = a9;
  if (v17)
  {
    if ((*(_BYTE *)(v17 + 28) & 0x80) == 0)
    {
      v104 = (_QWORD *)sub_22EA3A8C8(v17);
      v105 = sub_22EA3A92C(v17);
      while (v104 != (_QWORD *)v105)
      {
        *v104 = *v104 & 0xFFFFFFFFFFFFFFFCLL | ((unint64_t)*(unsigned int *)((*v104 & 0xFFFFFFFFFFFFFFFCLL) + 28) >> 13) & 3;
        ++v104;
      }
    }
    sub_22EABC89C((int32x2_t *)a1, v17);
    if ((sub_22EFC7ADC(v17 + 64) & 1) == 0 && (*(_BYTE *)(v17 + 28) & 0x80) == 0)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v17 + 104) + 96), *(_QWORD *)(v17 + 104));
      if (*(_DWORD *)(*(_QWORD *)(v17 + 128) + 20))
      {
        memset(v197, 0, sizeof(v197));
        v201 = 0;
        __p = 0;
        v200 = 0;
        sub_22F3AB750(v17, (uint64_t)v197);
        v160 = __p;
        v184 = v200;
        if (__p == v200)
        {
LABEL_365:
          sub_22EFD5D70(v17, v197);
          sub_22F31EB90((uint64_t)v197);
          v103 = a9;
          goto LABEL_222;
        }
        while (1)
        {
          v161 = v160[4];
          v162 = v160[5];
          while (v161 != v162)
          {
            if (*(_DWORD *)(v161 + 16) != 1)
            {
              sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v196 + 6), 0xF79u, 0, (uint64_t)&v203);
              v191[0] = *(void **)v160;
              v163 = sub_22E890024((uint64_t)&v203, (uint64_t *)v191);
              sub_22E890024(v163, (uint64_t *)&v196);
              sub_22E903BEC((unsigned int *)&v203);
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(*v160 + 24), 0x1723u, 0, (uint64_t)v194);
              sub_22E903BEC(v194);
              v164 = *(unsigned int *)(v161 + 16);
              if ((_DWORD)v164)
              {
                v165 = *(_QWORD *)(v161 + 8);
                for (j = 24 * v164; j; j -= 24)
                {
                  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(*(_QWORD *)v165 + 24), 0x15F9u, 0, (uint64_t)&v203);
                  v191[0] = *(void **)v160;
                  v167 = sub_22E890024((uint64_t)&v203, (uint64_t *)v191);
                  v168 = *(_WORD *)(*(_QWORD *)v165 + 80) & 0x7F;
                  v169 = -40;
                  if (v168 > 0x46)
                  {
                    if (v168 != 83)
                    {
                      if (v168 == 71)
                      {
                        v169 = -56;
                      }
                      else if (v168 != 81)
                      {
                        goto LABEL_347;
                      }
                    }
                  }
                  else
                  {
                    if (v168 > 0x18)
                      goto LABEL_346;
                    if (v168 == 16)
                      goto LABEL_339;
                    if (((1 << v168) & 0x1066) != 0)
                      goto LABEL_353;
                    if (v168 == 24)
                    {
LABEL_339:
                      v169 = -48;
                    }
                    else
                    {
LABEL_346:
                      if (v168 != 70)
                      {
LABEL_347:
                        v170 = v168 - 52;
                        if (v168 - 33 >= 5)
                          v171 = -48;
                        else
                          v171 = -64;
                        if (v170 >= 6)
                          v169 = v171;
                        else
                          v169 = -72;
                        goto LABEL_353;
                      }
                      v169 = -64;
                    }
                  }
LABEL_353:
                  v172 = *(_QWORD *)(*(_QWORD *)v165 + 72 + v169 + 16);
                  v173 = (_QWORD *)(v172 & 0xFFFFFFFFFFFFFFF8);
                  if ((v172 & 4) != 0)
                    v173 = (_QWORD *)*v173;
                  if (v173)
                    v174 = (uint64_t)(v173 - 8);
                  else
                    v174 = 0;
                  v193 = v174;
                  sub_22E890024(v167, &v193);
                  sub_22E903BEC((unsigned int *)&v203);
                  v165 += 24;
                }
              }
              sub_22EFC77E8((uint64_t)v196, 1);
            }
            v161 += 120;
          }
          v160 += 7;
          if (v160 == v184)
            goto LABEL_365;
        }
      }
    }
  }
  (*(void (**)(_QWORD *))(*v196 + 104))(v196);
LABEL_222:
  sub_22EA63DD8(a1, a2, v196, v103, 1);
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0
    || !sub_22E9641C4((uint64_t)v196)
    || (v196[9] & 0xE000) == 0x4000)
  {
    goto LABEL_269;
  }
  v106 = *(_QWORD *)(a1 + 72);
  if (*(char *)(v106 + 863) < 0)
  {
    if (!*(_QWORD *)(v106 + 848))
      goto LABEL_269;
LABEL_268:
    if ((*((_BYTE *)v196 + 76) & 0x20) == 0)
    {
      v175 = sub_22EFC3B90((uint64_t)v196);
      *(_QWORD *)&v203 = &v204;
      *((_QWORD *)&v203 + 1) = 0x2000000000;
      sub_22F271D38((uint64_t)&v203, v175, 0);
      *(_QWORD *)v197 = &v197[16];
      *(_QWORD *)&v197[8] = 0x2000000000;
      v176 = *(_QWORD *)(a1 + 88);
      sub_22EFC683C(v196 + 5, v191);
      if (v192 >= 0)
        v177 = v191;
      else
        v177 = (void **)v191[0];
      if (v192 >= 0)
        v178 = v192 & 0x7F;
      else
        v178 = (uint64_t)v191[1];
      v179 = sub_22F0C7984(v176, (uint64_t)v177, v178, (uint64_t *)v203, DWORD2(v203), (uint64_t)v197);
      if (v192 < 0)
        operator delete(v191[0]);
      if (v179)
        sub_22F3ACE98(v196, (uint64_t)v197);
      if (*(_BYTE **)v197 != &v197[16])
        free(*(void **)v197);
      if ((_BYTE **)v203 != &v204)
        free((void *)v203);
    }
    goto LABEL_269;
  }
  if (*(_BYTE *)(v106 + 863))
    goto LABEL_268;
LABEL_269:
  if (v17)
  {
    v129 = sub_22EFD10F8(v17);
    if (v129)
    {
      v130 = v129;
      if ((*(_BYTE *)(v129 + 29) & 2) != 0)
      {
        if (sub_22EAB8670(a1, v129, 5, 0, 0))
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v17 + 104) + 96), *(_QWORD *)(v17 + 104));
          **(_QWORD **)(v17 + 128) |= 0x4000000000uLL;
          sub_22EAB9ED0((_QWORD *)a1, v130, *(_DWORD *)(v17 + 24));
        }
      }
    }
  }
  if ((*((_BYTE *)v196 + 29) & 1) != 0)
  {
    sub_22EA49EE4((_QWORD *)a1, (unint64_t)v196);
    if ((*((_BYTE *)v196 + 29) & 1) != 0)
    {
      sub_22EFC8E88((uint64_t)v196);
      v132 = *(uint64_t **)v131;
      v133 = *(unsigned int *)(v131 + 8);
      v134 = *(uint64_t **)v131;
      if ((_DWORD)v133)
      {
        v135 = 8 * v133;
        v134 = *(uint64_t **)v131;
        while (*(_WORD *)(*v134 + 32) != 202)
        {
          ++v134;
          v135 -= 8;
          if (!v135)
            goto LABEL_287;
        }
      }
      if (v134 != &v132[v133])
      {
        do
        {
          v137 = *v132++;
          v136 = v137;
        }
        while (*(_WORD *)(v137 + 32) != 202);
        v138 = v196;
        v139 = *(_QWORD *)(v136 + 16);
        v140 = *(unsigned __int8 *)(v136 + 35);
        v141 = *(unsigned __int8 *)(v136 + 30);
        if ((~(v141 << 16) & 0x780000) != 0)
          v142 = ((*(unsigned __int16 *)(v136 + 28) | (v141 << 16)) >> 19) & 0xF;
        else
          v142 = sub_22F1BFAD0(v136);
        sub_22EA4A130((_QWORD *)a1, (uint64_t)v138, v139, v140 != 0, v142);
      }
    }
  }
LABEL_287:
  v143 = v196;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
  {
    v150 = v196[2];
    v151 = v150 & 0xFFFFFFFFFFFFFFF8;
    if ((v150 & 4) != 0)
      v151 = *(_QWORD *)(v151 + 8);
    if (!sub_22EFCBD94(v151, 1)
      || (sub_22EFC7ADC((unint64_t)(v143 + 8)) & 1) != 0
      || *(_DWORD *)(a1 + 10680) > *(_DWORD *)(a1 + 11956)
      || !sub_22F3B1BE8((uint64_t)v143))
    {
      goto LABEL_324;
    }
    v143 = v196;
  }
  v144 = 1;
  v197[0] = 1;
  v145 = sub_22EFC3B90((uint64_t)v143);
  if (v145)
  {
    v146 = v145;
    v147 = 0;
    v148 = 1;
LABEL_290:
    v197[0] = 0;
    if ((*(_BYTE *)(v146 + 68) & 1) != 0 && !*(_QWORD *)(v146 + 40))
    {
      v148 &= sub_22EFC2F84(v146, *(_QWORD *)(a1 + 88));
    }
    else
    {
      ++v147;
      v149 = (uint64_t *)(*(_QWORD *)(v146 + 48) & 0xFFFFFFFFFFFFFFF0);
      if ((sub_22F1110EC(*v149, 0) & 1) != 0
        || (sub_22EF5CCD0(*(_QWORD *)(a1 + 88), *v149, (uint64_t)&v203), (_QWORD)v203))
      {
        v148 = 0;
      }
    }
    while (1)
    {
      v146 = *(_QWORD *)(v146 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v146)
        break;
      if ((*(_DWORD *)(v146 + 28) & 0x7Fu) - 49 <= 2)
      {
        if ((v147 == 0) | v148 & 1)
          goto LABEL_290;
        goto LABEL_324;
      }
    }
    v144 = v147 == 0;
    if ((v148 & 1) != 0)
      goto LABEL_311;
    if (!v147)
      goto LABEL_315;
  }
  else
  {
    v147 = 0;
LABEL_311:
    if ((**(_QWORD **)(a1 + 72) & 0x100) != 0)
      v152 = 7178;
    else
      v152 = 7177;
    sub_22E8FCA40((_QWORD *)a1, a3, v152, 0, (uint64_t)&v203);
    v153 = sub_22E894E38((uint64_t)&v203, v197);
    LOBYTE(v191[0]) = (v196[9] & 0xE000) == 0x4000;
    v154 = sub_22E894E38(v153, (unsigned __int8 *)v191);
    LOBYTE(v193) = v147 > 1;
    sub_22E894E38(v154, (unsigned __int8 *)&v193);
    sub_22E903BEC((unsigned int *)&v203);
    if (v144)
    {
LABEL_315:
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0)
      {
        if (v197[0])
          v155 = 5222;
        else
          v155 = 5312;
        sub_22E8FCA40((_QWORD *)a1, a3, v155, 0, (uint64_t)&v203);
        LOBYTE(v191[0]) = (v196[9] & 0xE000) == 0x4000;
        sub_22E894E38((uint64_t)&v203, (unsigned __int8 *)v191);
        sub_22E903BEC((unsigned int *)&v203);
      }
    }
  }
LABEL_324:
  sub_22E9114FC((_QWORD *)a1, (uint64_t)v196);
  if (v208 != v210)
    free(v208);
}

uint64_t sub_22EA3A8C8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  v2 = *(_QWORD *)(a1 + 128);
  v3 = v2 + 40;
  if ((*(_BYTE *)(v2 + 56) & 4) != 0)
  {
    v6 = v2 + 40;
    v5 = sub_22EFC72E8(a1);
    sub_22F3B1894(v6, v5);
    v3 = v6;
  }
  return *(_QWORD *)v3;
}

uint64_t sub_22EA3A92C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  v2 = *(_QWORD *)(a1 + 128);
  if ((*(_BYTE *)(v2 + 56) & 4) != 0)
  {
    v4 = v2 + 40;
    v5 = a1;
    v6 = *(_QWORD *)(a1 + 128);
    v7 = sub_22EFC72E8(v5);
    sub_22F3B1894(v4, v7);
    v2 = v6;
  }
  return *(_QWORD *)(v2 + 48);
}

uint64_t sub_22EA3A988(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6)
{
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unsigned int v23;
  uint64_t v24;
  size_t v25;
  const void *v26;
  void **v27;
  uint64_t v28;
  uint64_t *v29;
  unsigned int v30;
  uint64_t v31;
  _BYTE *v32;
  int v33;
  unsigned int v34;
  unsigned int *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v44;
  size_t v45;
  const void *v46;
  void **v47;
  size_t v48;
  const void *v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  const void *v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  const void *v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  size_t v63;
  const void *v64;
  void **p_dst;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  unsigned int v72;
  uint64_t *v73;
  _BYTE v74[96];
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  unsigned int v78;
  BOOL v79;
  void **__dst;
  size_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unsigned int v85;
  char v86;
  _OWORD v87[6];
  _BYTE v88[64];
  uint64_t v89;

  v89 = *MEMORY[0x24BDAC8D0];
  v85 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088)
                           + *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 88) + 15088) - 24)
                           + 4);
  if (v85 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v84);
  else
    v84 = 0;
  v86 = 1;
  v83 = 0;
  if (!a6)
    goto LABEL_36;
  if ((sub_22EE67384(a1, a6, 7) & 1) != 0)
    goto LABEL_36;
  v12 = sub_22EB1A358(a1, a6, 0) & 0xFFFFFFFFFFFFFFFELL;
  if (!v12)
    goto LABEL_36;
  if ((sub_22EFC7ADC(a2 + 64) & 1) != 0 || (*(_DWORD *)v12 & 0x28000) != 0)
    goto LABEL_38;
  v13 = **(_QWORD **)(a1 + 72);
  if ((v13 & 0x200) != 0 && (v13 & 0x10) == 0 && (*(_QWORD *)(a2 + 72) & 0x20000000000) != 0)
  {
    v83 = sub_22E496830(a2);
    v20 = sub_22ED02FD4((uint64_t *)a1, (unsigned __int8 *)v12, v83, (uint64_t)&v84, 1);
    if ((v20 & 1) != 0)
      goto LABEL_36;
LABEL_34:
    v12 = v20 & 0xFFFFFFFFFFFFFFFELL;
    goto LABEL_35;
  }
  if ((*(_DWORD *)v12 & 0x10000) != 0
    || (BYTE8(v87[0]) = 0,
        *(_QWORD *)&v87[0] = off_24FAB82C8,
        (v12 = sub_22EB4CB24((_QWORD *)a1, v12, (uint64_t)&v84, v87, 1) & 0xFFFFFFFFFFFFFFFELL) != 0))
  {
    if ((*(_BYTE *)(a2 + 74) & 1) != 0 || *(_QWORD *)(a2 + 128) >= 8uLL)
    {
      v83 = sub_22E496830(a2);
      if (sub_22EA3B570(*(_QWORD *)(a1 + 88), (uint64_t)&v84, v83))
      {
        v14 = v83;
        v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_DWORD *)(v15 + 16) & 0xFF800FF) != 0x530000B || v15 == 0)
          v17 = 30;
        else
          v17 = 31;
        v18 = a1;
        v19 = v12;
      }
      else
      {
        if ((**(_BYTE **)(a1 + 72) & 0x10) == 0)
        {
          sub_22E8FCA40((_QWORD *)a1, a4, 0xCE2u, 0, (uint64_t)v87);
          sub_22E8901B8((uint64_t)v87, (uint64_t *)&v83);
          sub_22E903BEC((unsigned int *)v87);
          goto LABEL_35;
        }
        sub_22E8FCA40((_QWORD *)a1, a4, 0x146Bu, 0, (uint64_t)v87);
        sub_22E8901B8((uint64_t)v87, (uint64_t *)&v83);
        sub_22E903BEC((unsigned int *)v87);
        v14 = v83;
        v18 = a1;
        v19 = v12;
        v17 = 30;
      }
      v20 = sub_22E90092C(v18, v19, v14, v17, 0, 0);
      goto LABEL_34;
    }
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
    {
LABEL_31:
      v21 = *(_QWORD *)(v12 + 8);
LABEL_39:
      v83 = v21;
      goto LABEL_77;
    }
    if (sub_22EA3B570(*(_QWORD *)(a1 + 88), (uint64_t)&v84, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16480)))
    {
      if ((*(_QWORD *)((*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v12 + 8) & 7) != (*(_QWORD *)((*(_QWORD *)(*(_QWORD *)(a1 + 88) + 16480) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16480) & 7))
        v12 = sub_22E90092C(a1, v12, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16480), 30, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
      goto LABEL_31;
    }
    sub_22E8FCA40((_QWORD *)a1, a4, 0x1469u, 0, (uint64_t)v87);
    *(_QWORD *)v88 = &v88[24];
    *(_OWORD *)&v88[8] = xmmword_22F455490;
    llvm::APInt::toString();
    v63 = *(_QWORD *)&v88[8];
    if (*(_QWORD *)&v88[8] > 0x7FFFFFFFFFFFFFF7uLL)
      goto LABEL_155;
    v64 = *(const void **)v88;
    if (*(_QWORD *)&v88[8] >= 0x17uLL)
    {
      v66 = (*(_QWORD *)&v88[8] & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((*(_QWORD *)&v88[8] | 7) != 0x17)
        v66 = *(_QWORD *)&v88[8] | 7;
      v67 = v66 + 1;
      p_dst = (void **)operator new(v66 + 1);
      v81 = v63;
      v82 = v67 | 0x8000000000000000;
      __dst = p_dst;
    }
    else
    {
      HIBYTE(v82) = v88[8];
      p_dst = (void **)&__dst;
      if (!*(_QWORD *)&v88[8])
        goto LABEL_145;
    }
    memmove(p_dst, v64, v63);
LABEL_145:
    *((_BYTE *)p_dst + v63) = 0;
    if (*(_BYTE **)v88 != &v88[24])
      free(*(void **)v88);
    v68 = sub_22F2F3734((uint64_t)v87, (void **)&__dst);
    sub_22F0D4E74(v12);
    *(_QWORD *)v88 = v69;
    v70 = sub_22E8906A0(v68, (uint64_t *)v88);
    if (v86)
    {
      v71 = 1;
    }
    else
    {
      v72 = v85 - 1;
      v73 = &v84;
      if (v85 >= 0x41)
        v73 = (uint64_t *)(v84 + 8 * (v72 >> 6));
      v71 = (((unint64_t)*v73 >> v72) & 1) == 0;
    }
    v79 = v71;
    sub_22E894E38(v70, (unsigned __int8 *)&v79);
    if (SHIBYTE(v82) < 0)
      operator delete(__dst);
    sub_22E903BEC((unsigned int *)v87);
    goto LABEL_31;
  }
LABEL_35:
  if (v12)
    goto LABEL_77;
LABEL_36:
  if (sub_22EFC7ADC(a2 + 64))
  {
    v12 = 0;
LABEL_38:
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16832);
    goto LABEL_39;
  }
  if (a3)
  {
    v22 = (uint64_t *)(a3 + 64);
    if (v85 > 0x40 || (v23 = *(_DWORD *)(a3 + 72), v23 > 0x40))
    {
      llvm::APInt::assignSlowCase((llvm::APInt *)&v84, (const llvm::APInt *)(a3 + 64));
    }
    else
    {
      v84 = *v22;
      v85 = v23;
    }
    v86 = *(_BYTE *)(a3 + 76);
    llvm::APInt::operator++();
    v24 = *(_QWORD *)(a3 + 48);
    v83 = v24;
    if (v86)
    {
      if ((llvm::APInt::compare((llvm::APInt *)&v84, (const llvm::APInt *)(a3 + 64)) & 0x80000000) == 0)
      {
LABEL_47:
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0
          || sub_22EA3B570(*(_QWORD *)(a1 + 88), (uint64_t)&v84, v24))
        {
          goto LABEL_76;
        }
        sub_22E8FCA40((_QWORD *)a1, a4, 0x1469u, 0, (uint64_t)v87);
        *(_QWORD *)v88 = &v88[24];
        *(_OWORD *)&v88[8] = xmmword_22F455490;
        llvm::APInt::toString();
        v25 = *(_QWORD *)&v88[8];
        if (*(_QWORD *)&v88[8] <= 0x7FFFFFFFFFFFFFF7uLL)
        {
          v26 = *(const void **)v88;
          if (*(_QWORD *)&v88[8] >= 0x17uLL)
          {
            v60 = (*(_QWORD *)&v88[8] & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((*(_QWORD *)&v88[8] | 7) != 0x17)
              v60 = *(_QWORD *)&v88[8] | 7;
            v61 = v60 + 1;
            v27 = (void **)operator new(v60 + 1);
            v81 = v25;
            v82 = v61 | 0x8000000000000000;
            __dst = v27;
          }
          else
          {
            HIBYTE(v82) = v88[8];
            v27 = (void **)&__dst;
            if (!*(_QWORD *)&v88[8])
              goto LABEL_131;
          }
          memmove(v27, v26, v25);
LABEL_131:
          *((_BYTE *)v27 + v25) = 0;
          if (*(_BYTE **)v88 != &v88[24])
            free(*(void **)v88);
          v62 = sub_22F2F3734((uint64_t)v87, (void **)&__dst);
          *(_DWORD *)v88 = 1;
          sub_22E8900C4(v62, (int *)v88);
          if (SHIBYTE(v82) < 0)
            operator delete(__dst);
          v35 = (unsigned int *)v87;
LABEL_75:
          sub_22E903BEC(v35);
LABEL_76:
          v12 = 0;
          goto LABEL_77;
        }
LABEL_155:
        abort();
      }
    }
    else if ((llvm::APInt::compareSigned((llvm::APInt *)&v84, (const llvm::APInt *)(a3 + 64)) & 0x80000000) == 0)
    {
      goto LABEL_47;
    }
    v28 = *(_QWORD *)(a1 + 88);
    v87[0] = *(_OWORD *)(v28 + 16472);
    v87[1] = *(_OWORD *)(v28 + 16488);
    *(_OWORD *)v88 = *(_OWORD *)(v28 + 16520);
    *(_OWORD *)&v88[16] = *(_OWORD *)(v28 + 16536);
    v29 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFF0);
    v30 = sub_22EF5CDF0(v28, *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0));
    v31 = 0;
    if (sub_22F110A40(*v29))
      v32 = v87;
    else
      v32 = v88;
    while (sub_22EF5CDF0(v28, *(_QWORD *)(*(_QWORD *)&v32[v31] & 0xFFFFFFFFFFFFFFF0)) <= (unint64_t)v30)
    {
      v31 += 8;
      if (v31 == 32)
        goto LABEL_91;
    }
    if (*(_QWORD *)&v32[v31] < 0x10uLL)
    {
LABEL_91:
      v33 = 1;
    }
    else
    {
      if ((*(_BYTE *)(a2 + 77) & 2) == 0)
      {
        v33 = 0;
        v83 = *(_QWORD *)&v32[v31];
LABEL_65:
        if (v85 > 0x40 || (v34 = *(_DWORD *)(a3 + 72), v34 > 0x40))
        {
          llvm::APInt::assignSlowCase((llvm::APInt *)&v84, (const llvm::APInt *)(a3 + 64));
        }
        else
        {
          v84 = *v22;
          v85 = v34;
        }
        v86 = *(_BYTE *)(a3 + 76);
        v86 = !sub_22F110A40(*(_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF0));
        sub_22EF6A330(*(_QWORD *)(a1 + 88), v83);
        llvm::APInt::zextOrTrunc((llvm::APInt *)&v84);
        if (v85 >= 0x41 && v84)
          MEMORY[0x2348A0E84](v84, 0x1000C8000313F17);
        v84 = v75;
        v85 = v76;
        v76 = 0;
        llvm::APInt::operator++();
        if (((v33 | *(unsigned __int8 *)(*(_QWORD *)(a1 + 72) + 1)) & 1) != 0)
          goto LABEL_76;
        sub_22E8FCA40((_QWORD *)a1, a4, 0x198Au, 0, (uint64_t)v74);
        v35 = (unsigned int *)v74;
        goto LABEL_75;
      }
      v33 = 0;
    }
    if (v85 > 0x40 || (v44 = *(_DWORD *)(a3 + 72), v44 > 0x40))
    {
      llvm::APInt::assignSlowCase((llvm::APInt *)&v84, (const llvm::APInt *)(a3 + 64));
    }
    else
    {
      v84 = *v22;
      v85 = v44;
    }
    v86 = *(_BYTE *)(a3 + 76);
    llvm::APInt::zext((llvm::APInt *)&v84);
    if (v85 >= 0x41 && v84)
      MEMORY[0x2348A0E84](v84, 0x1000C8000313F17);
    v84 = v77;
    v85 = v78;
    v78 = 0;
    llvm::APInt::operator++();
    if ((*(_BYTE *)(a2 + 77) & 2) == 0)
    {
      sub_22E8FCA40((_QWORD *)a1, a4, 0x146Au, 0, (uint64_t)v87);
      *(_QWORD *)v88 = &v88[24];
      *(_OWORD *)&v88[8] = xmmword_22F455490;
      llvm::APInt::toString();
      v45 = *(_QWORD *)&v88[8];
      if (*(_QWORD *)&v88[8] > 0x7FFFFFFFFFFFFFF7uLL)
        goto LABEL_155;
      v46 = *(const void **)v88;
      if (*(_QWORD *)&v88[8] >= 0x17uLL)
      {
        v51 = (*(_QWORD *)&v88[8] & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((*(_QWORD *)&v88[8] | 7) != 0x17)
          v51 = *(_QWORD *)&v88[8] | 7;
        v52 = v51 + 1;
        v53 = *(const void **)v88;
        v54 = (void **)operator new(v51 + 1);
        v46 = v53;
        v47 = v54;
        v81 = v45;
        v82 = v52 | 0x8000000000000000;
        __dst = v54;
      }
      else
      {
        HIBYTE(v82) = v88[8];
        v47 = (void **)&__dst;
        if (!*(_QWORD *)&v88[8])
          goto LABEL_114;
      }
      memmove(v47, v46, v45);
LABEL_114:
      *((_BYTE *)v47 + v45) = 0;
      if (*(_BYTE **)v88 != &v88[24])
        free(*(void **)v88);
      sub_22F2F3734((uint64_t)v87, (void **)&__dst);
LABEL_124:
      if (SHIBYTE(v82) < 0)
        operator delete(__dst);
      sub_22E903BEC((unsigned int *)v87);
      goto LABEL_65;
    }
    sub_22E8FCA40((_QWORD *)a1, a4, 0xCE3u, 0, (uint64_t)v87);
    *(_QWORD *)v88 = &v88[24];
    *(_OWORD *)&v88[8] = xmmword_22F455490;
    llvm::APInt::toString();
    v48 = *(_QWORD *)&v88[8];
    if (*(_QWORD *)&v88[8] > 0x7FFFFFFFFFFFFFF7uLL)
      goto LABEL_155;
    v49 = *(const void **)v88;
    if (*(_QWORD *)&v88[8] >= 0x17uLL)
    {
      v55 = (*(_QWORD *)&v88[8] & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((*(_QWORD *)&v88[8] | 7) != 0x17)
        v55 = *(_QWORD *)&v88[8] | 7;
      v56 = v55 + 1;
      v57 = *(const void **)v88;
      v58 = (void **)operator new(v55 + 1);
      v49 = v57;
      v50 = v58;
      v81 = v48;
      v82 = v56 | 0x8000000000000000;
      __dst = v58;
    }
    else
    {
      HIBYTE(v82) = v88[8];
      v50 = (void **)&__dst;
      if (!*(_QWORD *)&v88[8])
        goto LABEL_121;
    }
    memmove(v50, v49, v48);
LABEL_121:
    *((_BYTE *)v50 + v48) = 0;
    if (*(_BYTE **)v88 != &v88[24])
      free(*(void **)v88);
    v59 = sub_22F2F3734((uint64_t)v87, (void **)&__dst);
    sub_22E8901B8(v59, (uint64_t *)&v83);
    goto LABEL_124;
  }
  if ((*(_BYTE *)(a2 + 77) & 2) == 0)
  {
    v12 = 0;
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16480);
    goto LABEL_39;
  }
  v12 = 0;
  v83 = sub_22E496830(a2);
LABEL_77:
  v36 = v83;
  v37 = *(_QWORD *)(a1 + 88);
  if ((*(_BYTE *)(*(_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
  {
    sub_22EF6A330(*(_QWORD *)(a1 + 88), v83);
    if (v86)
      llvm::APInt::zextOrTrunc((llvm::APInt *)&v84);
    else
      llvm::APInt::sextOrTrunc((llvm::APInt *)&v84);
    v38 = DWORD2(v87[0]);
    v39 = v86;
    v40 = *(_QWORD *)&v87[0];
    if (v85 >= 0x41 && v84)
      MEMORY[0x2348A0E84](v84, 0x1000C8000313F17);
    v84 = v40;
    v85 = v38;
    v86 = v39;
    v86 = !sub_22F110A40(*(_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF0));
    v37 = *(_QWORD *)(a1 + 88);
    v36 = v83;
  }
  if (a2)
    v41 = a2 + 64;
  else
    v41 = 0;
  v42 = sub_22EFC7430(80, v37, v41, 0);
  sub_22EFC5AB4(v42, v41, a4, a5, v36, v12, (uint64_t)&v84);
  if (v85 >= 0x41 && v84)
    MEMORY[0x2348A0E84](v84, 0x1000C8000313F17);
  return v42;
}

BOOL sub_22EA3B570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  _QWORD *v10;

  v5 = sub_22EF6A330(a1, a3);
  if (*(_BYTE *)(a2 + 12))
    goto LABEL_2;
  v9 = *(_DWORD *)(a2 + 8);
  v10 = (_QWORD *)(*(_QWORD *)a2 + 8 * ((v9 - 1) >> 6));
  if (v9 < 0x41)
    v10 = (_QWORD *)a2;
  if (((*v10 >> (v9 - 1)) & 1) == 0)
  {
LABEL_2:
    v5 -= sub_22F110A40(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0));
    v6 = *(_DWORD *)(a2 + 8);
    if (v6 > 0x40)
      v7 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)a2);
    else
      v7 = v6 + __clz(*(_QWORD *)a2) - 64;
    v8 = v6 - v7;
  }
  else
  {
    v8 = v9 - sub_22E99C40C((llvm::APInt *)a2) + 1;
  }
  return v8 <= v5;
}

uint64_t sub_22EA3B62C(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unsigned int v21;
  unsigned int v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t v28;
  unint64_t v29[4];
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _BYTE v37[64];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;
  _QWORD v44[3];
  __int16 v45;
  char v46;
  int v47;
  uint64_t v48;

  v15 = a9;
  v48 = *MEMORY[0x24BDAC8D0];
  v33 = a6;
  v16 = sub_22EA06B40((uint64_t)a1, a2);
  v34 = 0;
  v35 = v37;
  v36 = 0x800000000;
  v38 = 0;
  v39 = 0;
  v40 = 0;
  v41 = a1;
  v42 = a6;
  v43 = a5;
  sub_22EFC6D6C((uint64_t)v44, a6);
  v44[1] = 0;
  v44[2] = 0;
  v45 = 1;
  v46 = 1;
  v47 = 0;
  sub_22EC56024((uint64_t)&v34);
  sub_22EC63520((uint64_t)a1, (uint64_t)&v34, v16, 0, 0);
  v28 = 0;
  if ((_DWORD)v34 != 2)
    goto LABEL_2;
  v28 = *(_QWORD *)v35 & 0xFFFFFFFFFFFFFFFCLL;
  v21 = *(_DWORD *)(v28 + 28) & 0x7F;
  if (v21 <= 0x2F && ((1 << v21) & 0xC00000060000) != 0)
  {
    v28 = sub_22EFBAEA4(v28);
    if (!v28)
    {
LABEL_24:
      v28 = 0;
      goto LABEL_2;
    }
    v21 = *(_DWORD *)(v28 + 28) & 0x7F;
  }
  v25 = v21 > 0x3B;
  v26 = (1 << v21) & 0x800004100000000;
  if (!v25 && v26 != 0)
  {
    sub_22F34553C((uint64_t)a1, a5, v28);
    goto LABEL_24;
  }
LABEL_2:
  if ((*(_BYTE *)(a1[9] + 1) & 1) != 0 && (*(_BYTE *)(a3 + 76) & 0x80) == 0)
  {
    v17 = *(_QWORD *)(a3 + 16);
    v18 = (_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
    if ((v17 & 4) != 0)
      v18 = (_QWORD *)*v18;
    v30 = a6;
    v31 = a5;
    sub_22EFC6D6C((uint64_t)&v32, a6);
    sub_22EA14140(a1, (unint64_t)v18, (uint64_t)&v30);
    v15 = a9;
  }
  v19 = sub_22EA3A988((uint64_t)a1, a3, a4, a5, a6, v15);
  if (!v28)
    goto LABEL_8;
  if ((*(_BYTE *)(a3 + 76) & 0x80) == 0 && (*(_DWORD *)(v28 + 28) & 0x7Fu) - 48 <= 0x1A)
    sub_22EA1CDDC((uint64_t)a1, v19, v28, (uint64_t)&v34);
  if ((*(_DWORD *)(v28 + 28) & 0x7Fu) - 33 >= 5
    && sub_22E8CE620((uint64_t)(a1 + 415), (_QWORD *)v28, a1[27], v16, 0))
  {
    if ((*(_DWORD *)(v28 + 28) & 0x7F) == 0x43)
      v23 = 4634;
    else
      v23 = 4628;
    sub_22E8FCA40(a1, a5, v23, 0, (uint64_t)v29);
    sub_22E8BAE44((uint64_t)v29, &v33);
    sub_22E903BEC((unsigned int *)v29);
    sub_22F31D30C((uint64_t)a1, v28, a5);
    v19 = 0;
  }
  else
  {
LABEL_8:
    sub_22EA63DD8(a1, (uint64_t)v16, v19, a7, 1);
    sub_22E91049C((uint64_t)a1, (uint64_t)v16, v19);
    sub_22E9114FC(a1, v19);
    *(_DWORD *)(v19 + 28) = *(_DWORD *)(v19 + 28) & 0xFFFF9FFF | (((*(_DWORD *)(a3 + 28) >> 13) & 3) << 13);
    sub_22EA0483C((uint64_t)a1, v19, v16, 1);
    v29[0] = v19;
    sub_22EA2DB10((unint64_t)a1, v29, 1uLL);
  }
  if ((_BYTE)v47)
  {
    if ((_DWORD)v34 == 5)
    {
      sub_22EC64D18(v41, (uint64_t)&v34);
    }
    else if (v39 && (*(_DWORD *)(v41[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v41, (uint64_t)&v34);
    }
  }
  if (v38)
  {
    v24 = sub_22EC6CBD0(v38);
    MEMORY[0x2348A0E9C](v24, 0x10E0C409F09D3C3);
  }
  if (v35 != v37)
    free(v35);
  return v19;
}

BOOL sub_22EA3BA60(uint64_t a1, unint64_t a2, const llvm::APInt *a3, int a4)
{
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  int8x8_t *v10;
  uint8x8_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  _BOOL8 v19;
  unsigned int v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  char v44;

  v42 = 1;
  v40 = a2;
  v41 = 0;
  sub_22F31F038((uint64_t)&v43, a1 + 8328, (uint64_t *)&v40, (uint64_t)&v41);
  if (v42 >= 0x41 && v41)
    MEMORY[0x2348A0E84](v41, 0x1000C8000313F17);
  v7 = v43;
  v8 = (_QWORD *)(v43 + 8);
  if (v44)
  {
    v9 = sub_22E49F9AC(a2);
    sub_22EFC3500(a2);
    if (v9)
    {
LABEL_6:
      v10 = (int8x8_t *)(v9 + 64);
      if (*(_DWORD *)(v9 + 72) > 0x40u)
      {
        if (llvm::APInt::countPopulationSlowCase((llvm::APInt *)(v9 + 64)) != 1)
          goto LABEL_19;
      }
      else
      {
        v11 = (uint8x8_t)vcnt_s8(*v10);
        v11.i16[0] = vaddlv_u8(v11);
        if (v11.u32[0] != 1)
          goto LABEL_19;
      }
      llvm::APInt::zextOrSelf((llvm::APInt *)(v7 + 8));
      v12 = v39;
      if (v39 > 0x40)
      {
        llvm::APInt::orAssignSlowCase((llvm::APInt *)&v38, (const llvm::APInt *)(v9 + 64));
        v12 = v39;
        v13 = v38;
      }
      else
      {
        v13 = v38 | *(_QWORD *)v10;
        v38 = v13;
      }
      v39 = 0;
      if (*(_DWORD *)(v7 + 16) >= 0x41u && *v8)
        MEMORY[0x2348A0E84](*v8, 0x1000C8000313F17);
      *(_QWORD *)(v7 + 8) = v13;
      *(_DWORD *)(v7 + 16) = v12;
      if (v39 >= 0x41 && v38)
        MEMORY[0x2348A0E84](v38, 0x1000C8000313F17);
LABEL_19:
      while (1)
      {
        v9 = *(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v9)
          break;
        if ((*(_DWORD *)(v9 + 28) & 0x7F) == 0x43)
          goto LABEL_6;
      }
    }
  }
  llvm::APInt::zextOrTrunc((llvm::APInt *)(v7 + 8));
  v14 = v37;
  if (v37 <= 0x40)
  {
    v15 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v37;
    if (!v37)
      v15 = 0;
    v16 = v15 & ~v36;
    v36 = v16;
    LODWORD(v41) = v37;
    v40 = v16;
    v37 = 0;
    goto LABEL_26;
  }
  llvm::APInt::flipAllBitsSlowCase((llvm::APInt *)&v36);
  v14 = v37;
  v16 = v36;
  LODWORD(v41) = v37;
  v40 = v36;
  v37 = 0;
  v33 = v41;
  if (v41 < 0x41)
  {
LABEL_26:
    v17 = *(_QWORD *)a3 & v16;
    v32 = v17;
    v35 = v14;
    v34 = v17;
    v33 = 0;
LABEL_27:
    v18 = v17 == 0;
    goto LABEL_28;
  }
  llvm::APInt::initSlowCase((llvm::APInt *)&v32, (const llvm::APInt *)&v40);
  v14 = v33;
  if (v33 <= 0x40)
  {
    v16 = v32;
    goto LABEL_26;
  }
  llvm::APInt::andAssignSlowCase((llvm::APInt *)&v32, a3);
  v14 = v33;
  v17 = v32;
  v35 = v33;
  v34 = v32;
  v33 = 0;
  if (v35 <= 0x40)
    goto LABEL_27;
  v18 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v34) == v14;
LABEL_28:
  v19 = v18;
  if (v19 || !a4)
    goto LABEL_45;
  v20 = *((_DWORD *)a3 + 2);
  v27 = v20;
  if (v20 < 0x41)
    goto LABEL_36;
  llvm::APInt::initSlowCase((llvm::APInt *)&v26, a3);
  v20 = v27;
  if (v27 <= 0x40)
  {
    a3 = (const llvm::APInt *)&v26;
LABEL_36:
    v21 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v20;
    if (!v20)
      v21 = 0;
    v22 = v21 & ~*(_QWORD *)a3;
    v26 = v22;
    v27 = 0;
    goto LABEL_39;
  }
  llvm::APInt::flipAllBitsSlowCase((llvm::APInt *)&v26);
  v20 = v27;
  v22 = v26;
  v29 = v27;
  v28 = v26;
  v27 = 0;
  if (v29 <= 0x40)
  {
LABEL_39:
    v23 = v40 & v22;
    v28 = v40 & v22;
    v31 = v20;
    v30 = v40 & v22;
    v29 = 0;
    goto LABEL_40;
  }
  llvm::APInt::andAssignSlowCase((llvm::APInt *)&v28, (const llvm::APInt *)&v40);
  v25 = v29;
  v23 = v28;
  v31 = v29;
  v30 = v28;
  v29 = 0;
  if (v31 > 0x40)
  {
    v19 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v30) == v25;
    if (v23)
    {
      MEMORY[0x2348A0E84](v23, 0x1000C8000313F17);
      if (v29 >= 0x41)
      {
        if (v28)
          MEMORY[0x2348A0E84](v28, 0x1000C8000313F17);
      }
    }
    goto LABEL_41;
  }
LABEL_40:
  v19 = v23 == 0;
LABEL_41:
  if (v27 >= 0x41 && v26)
    MEMORY[0x2348A0E84](v26, 0x1000C8000313F17);
  v14 = v35;
LABEL_45:
  if (v14 >= 0x41 && v34)
    MEMORY[0x2348A0E84](v34, 0x1000C8000313F17);
  if (v33 >= 0x41 && v32)
    MEMORY[0x2348A0E84](v32, 0x1000C8000313F17);
  if (v41 >= 0x41 && v40)
    MEMORY[0x2348A0E84](v40, 0x1000C8000313F17);
  return v19;
}

uint64_t sub_22EA3BEC8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  unsigned int v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t v21;
  llvm::APInt *v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  llvm::APInt *v26;
  int v27;
  unsigned int v28;
  _BOOL4 v29;
  unint64_t v30;
  _BOOL4 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  unint64_t v39;
  unsigned int v40;
  int8x8_t v41;
  char v42;
  uint64_t v43;
  unsigned int *v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const llvm::APInt *v49;
  uint8x8_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  const llvm::APInt *v56;
  unsigned int v57;
  BOOL v58;
  unint64_t *v59;
  unint64_t v60;
  unint64_t v61;
  uint8x8_t v62;
  _QWORD *v63;
  _QWORD *i;
  unint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  float v68;
  _BOOL8 v69;
  unint64_t v70;
  unint64_t v71;
  int8x8_t prime;
  void *v73;
  void *v74;
  uint64_t v75;
  _QWORD **v76;
  unint64_t v77;
  uint8x8_t v78;
  unint64_t v79;
  uint8x8_t v80;
  uint64_t v81;
  _QWORD *j;
  unint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  unint64_t v86;
  void *v87;
  uint64_t v88;
  int v89;
  int v90;
  int v92;
  int v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t *v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  unsigned __int8 *v102;
  unsigned __int8 *v103;
  unsigned __int8 *v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  unsigned __int8 *v110;
  unsigned int v111;
  unint64_t v112;
  const llvm::APInt *v113;
  unsigned int v114;
  unint64_t v115;
  BOOL v116;
  unint64_t *v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  _QWORD *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t *v134;
  int v135;
  uint64_t ***v136;
  uint64_t ***v137;
  size_t v138;
  const void *v139;
  void **p_dst;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int **v145;
  uint64_t k;
  size_t v147;
  const void *v148;
  void **v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  void *v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t *v158;
  _QWORD *v159;
  uint64_t v160;
  unsigned int v161;
  BOOL v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  unint64_t v175;
  char v176;
  unsigned int v177;
  _QWORD *v178;
  unint64_t v179;
  unsigned int v180[24];
  unint64_t v181;
  int *v182;
  void **__dst;
  size_t v184;
  unint64_t v185;
  unint64_t *v186;
  unsigned int v187;
  char v188;
  int *v189;
  void *__p[2];
  void *v191[2];
  float v192;
  uint64_t *v193;
  uint64_t v194;
  _BYTE v195[24];
  _QWORD *v196;
  __int128 v197;
  _QWORD v198[8];

  v12 = a4;
  v13 = a1;
  v198[5] = *MEMORY[0x24BDAC8D0];
  v181 = a4;
  v14 = *(_QWORD *)(a4 + 48);
  if (v14)
    v15 = v14 & 0xFFFFFFFFFFFFFFF0;
  else
    v15 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a4);
  sub_22EA63DD8((_QWORD *)v13, a7, v12, a8, 1);
  sub_22E9114FC((_QWORD *)v13, v12);
  if (sub_22EFC7ADC(v12 + 64))
  {
    v16 = a6;
    if ((_DWORD)a6)
    {
      do
      {
        if (*a5)
          *(_QWORD *)(*a5 + 48) = v15;
        ++a5;
        --v16;
      }
      while (v16);
    }
    return sub_22EFC395C((_QWORD *)v12, *(_QWORD *)(*(_QWORD *)(v13 + 88) + 16832), *(_QWORD *)(*(_QWORD *)(v13 + 88) + 16832), 0, 0);
  }
  v18 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v13 + 88) + 15088)
                           + *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 88) + 15088) - 24)
                           + 4);
  v173 = a6;
  a6 = a6;
  if ((_DWORD)a6)
  {
    v177 = 0;
    v19 = 0;
    v20 = a5;
    do
    {
      v21 = *v20;
      if (*v20)
      {
        v22 = (llvm::APInt *)(v21 + 64);
        v23 = *(_DWORD *)(v21 + 72);
        if (*(_BYTE *)(v21 + 76))
          goto LABEL_14;
        v25 = v23 - 1;
        v26 = v22;
        if (v23 >= 0x41)
          v26 = (llvm::APInt *)(*(_QWORD *)v22 + 8 * (v25 >> 6));
        if (((*(_QWORD *)v26 >> v25) & 1) == 0)
        {
LABEL_14:
          if (v23 > 0x40)
            v24 = llvm::APInt::countLeadingZerosSlowCase(v22);
          else
            v24 = v23 + __clz(*(_QWORD *)v22) - 64;
          if (v19 <= v23 - v24)
            v19 = v23 - v24;
        }
        else
        {
          v27 = v23 - sub_22E99C40C(v22);
          v28 = v177;
          if (v177 <= v27 + 1)
            v28 = v27 + 1;
          v177 = v28;
        }
      }
      ++v20;
      --a6;
    }
    while (a6);
  }
  else
  {
    v19 = 0;
    v177 = 0;
  }
  v29 = sub_22E6A4B04(v12);
  v175 = v15;
  if ((*(_BYTE *)(v12 + 74) & 1) != 0 || *(_QWORD *)(v12 + 128) > 7uLL)
  {
    v30 = sub_22E496830(v12);
    v31 = sub_22F1124D8(*(_QWORD *)(v30 & 0xFFFFFFFFFFFFFFF0));
    v32 = v30;
    v33 = v173;
    if (v31)
      v32 = sub_22EF6A4D4(*(uint64_t **)(v13 + 88), v30);
    v171 = v32;
    sub_22EF6A330(*(_QWORD *)(v13 + 88), v30);
    goto LABEL_33;
  }
  v88 = *(_QWORD *)(v13 + 72);
  v89 = (*(_DWORD *)(v88 + 52) >> 29) & 1 | v29;
  v33 = v173;
  if (v177)
  {
    if (v177 < 9)
      v90 = (*(_DWORD *)(v88 + 52) >> 29) & 1 | v29;
    else
      v90 = 0;
    if (v90 == 1 && v19 <= 7)
    {
      v96 = *(_QWORD **)(v13 + 88);
      v97 = v96 + 2058;
      v98 = 8;
LABEL_352:
      v30 = *v97;
      if (v98 > v18)
      {
        v171 = *v97;
        goto LABEL_33;
      }
      v169 = v96[2060];
LABEL_355:
      v171 = v169;
      goto LABEL_33;
    }
    if (v177 < 0x11)
      v92 = v89;
    else
      v92 = 0;
    if (v92 == 1 && v19 <= 0xF)
    {
      v96 = *(_QWORD **)(v13 + 88);
      v97 = v96 + 2059;
      v98 = 16;
      goto LABEL_352;
    }
    v96 = *(_QWORD **)(v13 + 88);
    if (v177 > v18 || v19 >= v18)
    {
      v165 = v96[1886] + *(_QWORD *)(*(_QWORD *)v96[1886] - 24);
      v98 = *(unsigned __int8 *)(v165 + 20);
      if (v177 > v98 || v19 >= v98)
      {
        v98 = *(unsigned __int8 *)(v165 + 22);
        if (v177 > v98 || v19 >= v98)
        {
          sub_22E8FCA40((_QWORD *)v13, *(_DWORD *)(v12 + 24), 0x1468u, 0, (uint64_t)v180);
          sub_22E903BEC(v180);
          v96 = *(_QWORD **)(v13 + 88);
        }
        v168 = 2062;
      }
      else
      {
        v168 = 2061;
      }
      v97 = &v96[v168];
      goto LABEL_352;
    }
    v30 = v96[2060];
    goto LABEL_350;
  }
  if (v19 < 9)
    v94 = (*(_DWORD *)(v88 + 52) >> 29) & 1 | v29;
  else
    v94 = 0;
  if (v94 != 1)
  {
    if (v19 >= 0x11)
      v89 = 0;
    if (v89 == 1)
    {
      v99 = *(_QWORD *)(v13 + 88);
      v30 = *(_QWORD *)(v99 + 16520);
      v171 = *(_QWORD *)(v99 + 16480);
      goto LABEL_33;
    }
    v159 = *(_QWORD **)(v13 + 88);
    if (v19 <= v18)
    {
      v30 = v159[2066];
      if (v19 != v18)
      {
        v45 = (*(_BYTE *)(v88 + 1) & 1) == 0;
        v170 = 2060;
        if (v45)
          v170 = 2066;
        v171 = v159[v170];
        goto LABEL_33;
      }
LABEL_350:
      v171 = v30;
      goto LABEL_33;
    }
    v160 = v159[1886] + *(_QWORD *)(*(_QWORD *)v159[1886] - 24);
    v161 = *(unsigned __int8 *)(v160 + 20);
    if (v19 <= v161)
    {
      v30 = v159[2067];
      if (v19 != v161)
      {
        v162 = (*(_BYTE *)(v88 + 1) & 1) == 0;
        v163 = 16488;
        v164 = 16536;
        goto LABEL_362;
      }
    }
    else
    {
      v30 = v159[2068];
      if (v19 != *(unsigned __int8 *)(v160 + 22))
      {
        v162 = (*(_BYTE *)(v88 + 1) & 1) == 0;
        v163 = 16496;
        v164 = 16544;
LABEL_362:
        if (v162)
          v163 = v164;
        v169 = *(_QWORD *)((char *)v159 + v163);
        goto LABEL_355;
      }
    }
    v171 = v30;
    goto LABEL_33;
  }
  v95 = *(_QWORD *)(v13 + 88);
  v30 = *(_QWORD *)(v95 + 16512);
  v171 = *(_QWORD *)(v95 + 16480);
LABEL_33:
  v172 = 8 * v33;
  v178 = (_QWORD *)v13;
  v179 = v12;
  if (v33)
  {
    v174 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFF0);
    v34 = 8 * v33;
    v35 = a5;
    v176 = v19;
    while (1)
    {
      v36 = *v35;
      if (*v35)
        break;
LABEL_66:
      ++v35;
      v34 -= 8;
      if (!v34)
        goto LABEL_69;
    }
    LODWORD(v197) = *(_DWORD *)(v36 + 72);
    if (v197 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v196, (const llvm::APInt *)(v36 + 64));
    else
      v196 = *(_QWORD **)(v36 + 64);
    BYTE4(v197) = *(_BYTE *)(v36 + 76);
    if ((*(_BYTE *)(*(_QWORD *)(v13 + 72) + 1) & 1) != 0
      || (*(_BYTE *)(v12 + 77) & 2) != 0
      || !sub_22EA3B570(*(_QWORD *)(v13 + 88), (uint64_t)&v196, *(_QWORD *)(*(_QWORD *)(v13 + 88) + 16480)))
    {
      if (*(_QWORD *)(v36 + 48) == v30)
      {
        if ((*(_BYTE *)(*(_QWORD *)(v13 + 72) + 1) & 1) != 0)
          *(_QWORD *)(v36 + 48) = v175;
        goto LABEL_63;
      }
      v38 = sub_22F110A40(*v174);
      v37 = v30;
    }
    else
    {
      v37 = *(_QWORD *)(*(_QWORD *)(v13 + 88) + 16480);
      v38 = 1;
    }
    v39 = v30;
    if (BYTE4(v197))
      llvm::APInt::zextOrTrunc((llvm::APInt *)&v196);
    else
      llvm::APInt::sextOrTrunc((llvm::APInt *)&v196);
    v40 = v187;
    v41 = (int8x8_t)v186;
    if (v197 >= 0x41 && v196)
      MEMORY[0x2348A0E84](v196, 0x1000C8000313F17);
    v196 = (_QWORD *)v41;
    LODWORD(v197) = v40;
    v42 = !v38;
    BYTE4(v197) = !v38;
    if (*(_DWORD *)(v36 + 72) > 0x40u || v40 > 0x40)
    {
      llvm::APInt::assignSlowCase((llvm::APInt *)(v36 + 64), (const llvm::APInt *)&v196);
      v42 = BYTE4(v197);
    }
    else
    {
      *(int8x8_t *)(v36 + 64) = v41;
      *(_DWORD *)(v36 + 72) = v40;
    }
    v13 = (uint64_t)v178;
    v12 = v179;
    v30 = v39;
    *(_BYTE *)(v36 + 76) = v42;
    v43 = *(_QWORD *)(v36 + 56);
    if (v43
      && (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFF0) + 8) | v37 & 7) != (*(_QWORD *)((*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                                 + 8) | *(_QWORD *)(v43 + 8) & 7))
    {
      v44 = (unsigned int *)sub_22E3CD3D4(v178[11] + 2032, 24, 3);
      *(_QWORD *)(v36 + 56) = sub_22F003694(v44, v37, 30, v43, 0, 0, 0);
    }
    if ((*(_BYTE *)(v178[9] + 1) & 1) != 0)
      *(_QWORD *)(v36 + 48) = v175;
    else
      *(_QWORD *)(v36 + 48) = v37;
    LOBYTE(v19) = v176;
LABEL_63:
    if (v197 >= 0x41 && v196)
      MEMORY[0x2348A0E84](v196, 0x1000C8000313F17);
    goto LABEL_66;
  }
LABEL_69:
  sub_22EFC395C((_QWORD *)v12, v30, v171, v19, v177);
  v45 = *(_QWORD *)(v12 + 40) >= 8uLL && (*(_QWORD *)(v12 + 40) & 7) == 0;
  if (!v45 || (v51 = *(_QWORD *)(v12 + 72), (v51 & 0x60000000) != 0))
  {
    v46 = v173;
    goto LABEL_74;
  }
  v46 = v173;
  if ((v51 & 0x7F80000000uLL) <= 0x2000000000
    && sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(v13 + 104) + 32), 0x197Eu, *(_DWORD *)(v12 + 24), *(_QWORD *)(v13 + 104)) != 1)
  {
    v52 = (unint64_t)v195;
    v193 = (uint64_t *)v195;
    v194 = 0x300000000;
    *(_OWORD *)__p = 0u;
    *(_OWORD *)v191 = 0u;
    v192 = 1.0;
    if (!v173)
      goto LABEL_326;
    v53 = &a5[v173];
    v54 = a5;
    while (1)
    {
      v55 = *v54;
      if (!*v54)
        goto LABEL_322;
      if (*(_QWORD *)(v55 + 56))
        goto LABEL_191;
      v56 = (const llvm::APInt *)(v55 + 64);
      v57 = *(_DWORD *)(v55 + 72);
      v187 = v57;
      if (v57 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&v186, v56);
        v57 = v187;
      }
      else
      {
        v186 = *(unint64_t **)v56;
      }
      v188 = *(_BYTE *)(v55 + 76);
      if (v188)
      {
        v58 = v57 >= 0x41;
        v59 = (unint64_t *)&v186;
        if (v58)
          v59 = v186;
        v60 = *v59;
        if (v58 && v186)
          goto LABEL_118;
      }
      else
      {
        if (v57 > 0x40)
        {
          v60 = *v186;
LABEL_118:
          MEMORY[0x2348A0E84]();
          goto LABEL_119;
        }
        v60 = (uint64_t)((_QWORD)v186 << -(char)v57) >> -(char)v57;
      }
LABEL_119:
      v61 = (unint64_t)__p[1];
      if (__p[1])
      {
        v62 = (uint8x8_t)vcnt_s8((int8x8_t)__p[1]);
        v62.i16[0] = vaddlv_u8(v62);
        if (v62.u32[0] > 1uLL)
        {
          v52 = v60;
          if (__p[1] <= (void *)v60)
            v52 = v60 % (unint64_t)__p[1];
        }
        else
        {
          v52 = ((unint64_t)__p[1] - 1) & v60;
        }
        v63 = (_QWORD *)*((_QWORD *)__p[0] + v52);
        if (v63)
        {
          for (i = (_QWORD *)*v63; i; i = (_QWORD *)*i)
          {
            v65 = i[1];
            if (v65 == v60)
            {
              if (i[2] == v60)
                goto LABEL_191;
            }
            else
            {
              if (v62.u32[0] > 1uLL)
              {
                if ((void *)v65 >= __p[1])
                  v65 %= (unint64_t)__p[1];
              }
              else
              {
                v65 &= (unint64_t)__p[1] - 1;
              }
              if (v65 != v52)
                break;
            }
          }
        }
      }
      v66 = v55 & 0xFFFFFFFFFFFFFFFBLL;
      v67 = operator new(0x20uLL);
      *v67 = 0;
      v67[1] = v60;
      v67[2] = v60;
      v67[3] = v66;
      v68 = (float)((unint64_t)v191[1] + 1);
      if (!v61 || (float)(v192 * (float)v61) < v68)
      {
        v69 = (v61 & (v61 - 1)) != 0;
        if (v61 < 3)
          v69 = 1;
        v70 = v69 | (2 * v61);
        v71 = vcvtps_u32_f32(v68 / v192);
        if (v70 <= v71)
          prime = (int8x8_t)v71;
        else
          prime = (int8x8_t)v70;
        if (*(_QWORD *)&prime == 1)
        {
          prime = (int8x8_t)2;
        }
        else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
        {
          prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
          v61 = (unint64_t)__p[1];
        }
        if (*(_QWORD *)&prime <= v61)
        {
          if (*(_QWORD *)&prime < v61)
          {
            v79 = vcvtps_u32_f32((float)(unint64_t)v191[1] / v192);
            if (v61 < 3 || (v80 = (uint8x8_t)vcnt_s8((int8x8_t)v61), v80.i16[0] = vaddlv_u8(v80), v80.u32[0] > 1uLL))
            {
              v79 = std::__next_prime(v79);
            }
            else
            {
              v81 = 1 << -(char)__clz(v79 - 1);
              if (v79 >= 2)
                v79 = v81;
            }
            if (*(_QWORD *)&prime <= v79)
              prime = (int8x8_t)v79;
            if (*(_QWORD *)&prime >= v61)
            {
              v61 = (unint64_t)__p[1];
            }
            else
            {
              if (prime)
                goto LABEL_147;
              v87 = __p[0];
              __p[0] = 0;
              if (v87)
                operator delete(v87);
              v61 = 0;
              __p[1] = 0;
            }
          }
        }
        else
        {
LABEL_147:
          if (*(_QWORD *)&prime >> 61)
            sub_22E3B3F8C();
          v73 = operator new(8 * *(_QWORD *)&prime);
          v74 = __p[0];
          __p[0] = v73;
          if (v74)
            operator delete(v74);
          v75 = 0;
          __p[1] = (void *)prime;
          do
            *((_QWORD *)__p[0] + v75++) = 0;
          while (*(_QWORD *)&prime != v75);
          v76 = (_QWORD **)v191[0];
          if (v191[0])
          {
            v77 = *((_QWORD *)v191[0] + 1);
            v78 = (uint8x8_t)vcnt_s8(prime);
            v78.i16[0] = vaddlv_u8(v78);
            if (v78.u32[0] > 1uLL)
            {
              if (v77 >= *(_QWORD *)&prime)
                v77 %= *(_QWORD *)&prime;
            }
            else
            {
              v77 &= *(_QWORD *)&prime - 1;
            }
            *((_QWORD *)__p[0] + v77) = v191;
            for (j = *v76; j; v77 = v83)
            {
              v83 = j[1];
              if (v78.u32[0] > 1uLL)
              {
                if (v83 >= *(_QWORD *)&prime)
                  v83 %= *(_QWORD *)&prime;
              }
              else
              {
                v83 &= *(_QWORD *)&prime - 1;
              }
              if (v83 != v77)
              {
                if (!*((_QWORD *)__p[0] + v83))
                {
                  *((_QWORD *)__p[0] + v83) = v76;
                  goto LABEL_172;
                }
                *v76 = (_QWORD *)*j;
                *j = **((_QWORD **)__p[0] + v83);
                **((_QWORD **)__p[0] + v83) = j;
                j = v76;
              }
              v83 = v77;
LABEL_172:
              v76 = (_QWORD **)j;
              j = (_QWORD *)*j;
            }
          }
          v61 = (unint64_t)prime;
        }
        if ((v61 & (v61 - 1)) != 0)
        {
          if (v61 <= v60)
            v52 = v60 % v61;
          else
            v52 = v60;
        }
        else
        {
          v52 = (v61 - 1) & v60;
        }
      }
      v84 = __p[0];
      v85 = (_QWORD *)*((_QWORD *)__p[0] + v52);
      if (v85)
      {
        *v67 = *v85;
LABEL_189:
        *v85 = v67;
        goto LABEL_190;
      }
      *v67 = v191[0];
      v191[0] = v67;
      v84[v52] = v191;
      if (*v67)
      {
        v86 = *(_QWORD *)(*v67 + 8);
        if ((v61 & (v61 - 1)) != 0)
        {
          if (v86 >= v61)
            v86 %= v61;
        }
        else
        {
          v86 &= v61 - 1;
        }
        v85 = (char *)__p[0] + 8 * v86;
        goto LABEL_189;
      }
LABEL_190:
      ++v191[1];
LABEL_191:
      if (++v54 == v53)
      {
        if (!v191[1])
          goto LABEL_322;
        v100 = a5;
        while (1)
        {
          v101 = *v100;
          v102 = *(unsigned __int8 **)(*v100 + 56);
          if (!v102)
            goto LABEL_256;
          v103 = sub_22EFFEB40(v102);
          v104 = v103;
          v105 = *v103;
          if ((v105 & 0xFE) == 0x70)
          {
            if (((*(_DWORD *)v103 >> 18) & 0x3Fu) - 5 > 1)
              goto LABEL_256;
            v110 = (unsigned __int8 *)*((_QWORD *)v103 + 3);
            if (*v110 != 181)
              goto LABEL_256;
            sub_22F257F94((uint64_t)(v110 + 16), (llvm::APInt *)&v186);
            v111 = v187;
            if (v187 >= 0x41)
            {
              if (v111 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v186) >= 0x41)
              {
                if (v186)
                  MEMORY[0x2348A0E84](v186, 0x1000C8000313F17);
                goto LABEL_256;
              }
              v112 = *v186;
              MEMORY[0x2348A0E84]();
              if (v112 != 1)
                goto LABEL_256;
            }
            else if (v186 != (unint64_t *)1)
            {
              goto LABEL_256;
            }
            v104 = (unsigned __int8 *)*((_QWORD *)v104 + 2);
            v105 = *v104;
          }
          if (v105 == 161)
          {
            v106 = *((_QWORD *)v104 + 2);
            if (v106)
            {
              if ((*(_DWORD *)(v106 + 28) & 0x7F) == 0x43)
              {
                v107 = *(_QWORD *)(v101 + 16);
                v108 = (_QWORD *)(v107 & 0xFFFFFFFFFFFFFFF8);
                if ((v107 & 4) != 0)
                  v108 = (_QWORD *)*v108;
                v109 = v108 ? (uint64_t)(v108 - 8) : 0;
                if (v109 == v179)
                  goto LABEL_244;
              }
            }
          }
LABEL_256:
          v113 = (const llvm::APInt *)(v101 + 64);
          v114 = *(_DWORD *)(v101 + 72);
          v187 = v114;
          if (v114 > 0x40)
          {
            llvm::APInt::initSlowCase((llvm::APInt *)&v186, v113);
            v114 = v187;
          }
          else
          {
            v186 = *(unint64_t **)v113;
          }
          v188 = *(_BYTE *)(v101 + 76);
          if (!v188)
          {
            if (v114 <= 0x40)
            {
              v115 = (uint64_t)((_QWORD)v186 << -(char)v114) >> -(char)v114;
              goto LABEL_271;
            }
            v115 = *v186;
LABEL_270:
            MEMORY[0x2348A0E84]();
            goto LABEL_271;
          }
          v116 = v114 >= 0x41;
          if (v114 >= 0x41)
            v117 = v186;
          else
            v117 = (unint64_t *)&v186;
          v115 = *v117;
          if (v116 && v186)
            goto LABEL_270;
LABEL_271:
          v118 = sub_22F31EC28((uint64_t)__p[0], (unint64_t)__p[1], v115);
          if (v118)
          {
            v119 = v118;
            v120 = v118[3];
            v121 = v120 & 0xFFFFFFFFFFFFFFF8;
            if ((v120 & 4) != 0 || !v121)
            {
              v125 = *(_QWORD **)v121;
              if (**(_QWORD **)v121 != v101)
              {
                v126 = *(unsigned int *)(v121 + 8);
                if (v126 >= *(unsigned int *)(v121 + 12))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v125 = *(_QWORD **)v121;
                  v126 = *(unsigned int *)(v121 + 8);
                }
                v125[v126] = v101;
                ++*(_DWORD *)(v121 + 8);
              }
            }
            else if (v101 != v121)
            {
              v122 = operator new();
              v123 = v122;
              *(_QWORD *)(v122 + 16) = v121;
              *(_QWORD *)v122 = v122 + 16;
              *(_QWORD *)(v122 + 24) = v101;
              *(_QWORD *)(v122 + 8) = 0x300000002;
              v119[3] = v122 | 4;
              v124 = v194;
              if (v194 >= HIDWORD(v194))
              {
                v186 = 0;
                v127 = llvm::SmallVectorBase<unsigned int>::mallocForGrow();
                v128 = v194;
                *(_QWORD *)(v127 + 8 * v194) = v123;
                v129 = v193;
                if ((_DWORD)v128)
                {
                  v130 = v128;
                  v131 = 8 * v128;
                  v132 = (_QWORD *)v127;
                  do
                  {
                    v133 = *v129;
                    *v129++ = 0;
                    *v132++ = v133;
                    v131 -= 8;
                  }
                  while (v131);
                  v134 = v193 - 1;
                  do
                    sub_22EA44E98((void ***)&v134[v130--]);
                  while (v130 * 8);
                  v129 = v193;
                }
                v135 = (int)v186;
                if (v129 != (uint64_t *)v195)
                  free(v129);
                v193 = (uint64_t *)v127;
                LODWORD(v194) = v194 + 1;
                HIDWORD(v194) = v135;
              }
              else
              {
                v193[v194] = v122;
                LODWORD(v194) = v124 + 1;
              }
            }
          }
LABEL_244:
          if (++v100 == v53)
          {
            if ((_DWORD)v194)
            {
              v136 = (uint64_t ***)v193;
              v137 = (uint64_t ***)&v193[v194];
              while (1)
              {
                v189 = (int *)***v136;
                sub_22E8FCA40(v178, v189[6], 0x197Eu, 0, (uint64_t)&v186);
                sub_22E9AEF84((uint64_t)&v186, (uint64_t *)&v189);
                v196 = v198;
                v197 = xmmword_22F455490;
                llvm::APInt::toString();
                v138 = v197;
                if ((unint64_t)v197 > 0x7FFFFFFFFFFFFFF7)
LABEL_365:
                  abort();
                v139 = v196;
                if ((unint64_t)v197 >= 0x17)
                  break;
                HIBYTE(v185) = v197;
                p_dst = (void **)&__dst;
                if ((_QWORD)v197)
                  goto LABEL_299;
LABEL_300:
                *((_BYTE *)p_dst + v138) = 0;
                if (v196 != v198)
                  free(v196);
                v143 = sub_22F2F3734((uint64_t)&v186, (void **)&__dst);
                v196 = (_QWORD *)(*(uint64_t (**)(int *))(*(_QWORD *)v189 + 16))(v189);
                sub_22E8906A0(v143, (uint64_t *)&v196);
                if (SHIBYTE(v185) < 0)
                  operator delete(__dst);
                sub_22E903BEC((unsigned int *)&v186);
                v144 = *((unsigned int *)*v136 + 2);
                if ((_DWORD)v144 != 1)
                {
                  v145 = (int **)(**v136 + 1);
                  for (k = 8 * v144 - 8; k; k -= 8)
                  {
                    v182 = *v145;
                    sub_22E8FCA40(v178, v182[6], 0x15BDu, 0, (uint64_t)&v186);
                    sub_22E9AEF84((uint64_t)&v186, (uint64_t *)&v182);
                    v196 = v198;
                    v197 = xmmword_22F455490;
                    llvm::APInt::toString();
                    v147 = v197;
                    if ((unint64_t)v197 > 0x7FFFFFFFFFFFFFF7)
                      goto LABEL_365;
                    v148 = v196;
                    if ((unint64_t)v197 >= 0x17)
                    {
                      v150 = (v197 & 0xFFFFFFFFFFFFFFF8) + 8;
                      if (((unint64_t)v197 | 7) != 0x17)
                        v150 = v197 | 7;
                      v151 = v150 + 1;
                      v149 = (void **)operator new(v150 + 1);
                      v184 = v147;
                      v185 = v151 | 0x8000000000000000;
                      __dst = v149;
                    }
                    else
                    {
                      HIBYTE(v185) = v197;
                      v149 = (void **)&__dst;
                      if (!(_QWORD)v197)
                        goto LABEL_316;
                    }
                    memmove(v149, v148, v147);
LABEL_316:
                    *((_BYTE *)v149 + v147) = 0;
                    if (v196 != v198)
                      free(v196);
                    v152 = sub_22F2F3734((uint64_t)&v186, (void **)&__dst);
                    v196 = (_QWORD *)(*(uint64_t (**)(int *))(*(_QWORD *)v182 + 16))(v182);
                    sub_22E8906A0(v152, (uint64_t *)&v196);
                    if (SHIBYTE(v185) < 0)
                      operator delete(__dst);
                    sub_22E903BEC((unsigned int *)&v186);
                    ++v145;
                  }
                }
                if (++v136 == v137)
                  goto LABEL_322;
              }
              v141 = (v197 & 0xFFFFFFFFFFFFFFF8) + 8;
              if (((unint64_t)v197 | 7) != 0x17)
                v141 = v197 | 7;
              v142 = v141 + 1;
              p_dst = (void **)operator new(v141 + 1);
              v184 = v138;
              v185 = v142 | 0x8000000000000000;
              __dst = p_dst;
LABEL_299:
              memmove(p_dst, v139, v138);
              goto LABEL_300;
            }
LABEL_322:
            v153 = v191[0];
            if (v191[0])
            {
              do
              {
                v154 = (_QWORD *)*v153;
                operator delete(v153);
                v153 = v154;
              }
              while (v154);
            }
            v155 = __p[0];
            __p[0] = 0;
            v13 = (uint64_t)v178;
            v46 = v173;
            if (v155)
              operator delete(v155);
LABEL_326:
            v156 = v193;
            if ((_DWORD)v194)
            {
              v157 = v194;
              v158 = v193 - 1;
              do
                sub_22EA44E98((void ***)&v158[v157--]);
              while (v157 * 8);
              v156 = v193;
              v46 = v173;
            }
            if (v156 != (uint64_t *)v195)
              free(v156);
            v12 = v181;
            goto LABEL_74;
          }
        }
      }
    }
  }
LABEL_74:
  result = sub_22EFC39E4(v12);
  if (!(_DWORD)result)
    goto LABEL_94;
  result = sub_22ED30EC8(v12);
  if (!(_DWORD)result || !v46)
    goto LABEL_94;
  v47 = v172;
  do
  {
    v193 = (uint64_t *)*a5;
    v48 = (uint64_t)v193;
    if (!v193)
      goto LABEL_92;
    v49 = (const llvm::APInt *)(v193 + 8);
    LODWORD(v197) = *((_DWORD *)v193 + 18);
    if (v197 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v196, v49);
    else
      v196 = *(_QWORD **)v49;
    BYTE4(v197) = *(_BYTE *)(v48 + 76);
    result = sub_22E508590((uint64_t)&v196, 0);
    if (!(_DWORD)result)
      goto LABEL_89;
    if (v197 <= 0x40)
    {
      v50 = (uint8x8_t)vcnt_s8((int8x8_t)v196);
      v50.i16[0] = vaddlv_u8(v50);
      if (v50.u32[0] != 1)
      {
LABEL_87:
        result = sub_22EA3BA60(v13, v181, (const llvm::APInt *)&v196, 1);
        if ((result & 1) == 0)
        {
          sub_22E8FCA40((_QWORD *)v13, *(_DWORD *)(v48 + 24), 0x19A5u, 0, (uint64_t)&v186);
          sub_22E9AEF84((uint64_t)&v186, (uint64_t *)&v193);
          sub_22E890024((uint64_t)&v186, (uint64_t *)&v181);
          result = (uint64_t)sub_22E903BEC((unsigned int *)&v186);
        }
      }
LABEL_89:
      if (v197 < 0x41)
        goto LABEL_92;
      goto LABEL_90;
    }
    if (llvm::APInt::countPopulationSlowCase((llvm::APInt *)&v196) != 1)
      goto LABEL_87;
LABEL_90:
    result = (uint64_t)v196;
    if (v196)
      result = MEMORY[0x2348A0E84](v196, 0x1000C8000313F17);
LABEL_92:
    ++a5;
    v47 -= 8;
  }
  while (v47);
  v12 = v181;
LABEL_94:
  if ((*(_BYTE *)(v12 + 29) & 1) != 0)
    return sub_22EA49EE4((_QWORD *)v13, v12);
  return result;
}

void sub_22EA3D250(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16[24];
  __int128 v17;
  unint64_t v18;
  int v19;
  __int16 v20;
  char v21;
  unint64_t v22;

  v10 = sub_22EC65CE0(a1, a1[418], a2, a5, 0, 0);
  v22 = v10;
  v17 = (unint64_t)a3;
  v18 = a6 | ((unint64_t)a6 << 32);
  v19 = 0;
  v21 = 126;
  v20 = sub_22F1ACD3C(a3, 0, 6u, 0);
  v11 = sub_22F37EA44(a1[11], (const void *)(*(_QWORD *)(a3 + 16) + 16), **(unsigned int **)(a3 + 16), 1, &v17);
  if (v10 && ((v12 = *(_DWORD *)(v10 + 28), (v12 & 0x7Eu) - 52 < 6) || (v12 & 0x7Fu) - 60 <= 6))
  {
    if (sub_22EA1DCD0(v10))
    {
      sub_22EFCA95C(v10, v11);
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v10 + 24), 0x1B1Fu, 0, (uint64_t)v16);
      LODWORD(v14) = (*(_DWORD *)(v10 + 28) & 0x7Eu) - 58 < 0xFFFFFFFA;
      v13 = sub_22E8900C4((uint64_t)v16, (int *)&v14);
      sub_22E890024(v13, (uint64_t *)&v22);
      sub_22E903BEC(v16);
    }
  }
  else
  {
    v14 = a2;
    v15 = v11;
    sub_22F28ADF8((uint64_t)(a1 + 408), &v14, &v15, (uint64_t)v16);
  }
}

void sub_22EA3D3BC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  unint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v14 = a3;
  v9 = sub_22EC65CE0(a1, a1[418], a3, a6, 0, 0);
  *(_QWORD *)&v13 = a2;
  DWORD2(v13) = a5;
  if (v9 && ((v10 = v9, v11 = *(_DWORD *)(v9 + 28), (v11 & 0x7Eu) - 52 < 6) || (v11 & 0x7Fu) - 60 <= 6))
  {
    if (!sub_22E6314F8(v9) && (*(_DWORD *)(v10 + 28) & 0x7Fu) - 75 >= 0xFFFFFFC2)
      sub_22F326D30((uint64_t)a1, (uint64_t *)a1[418], v10, (uint64_t)&v13);
  }
  else
  {
    v12 = sub_22E901250((uint64_t)(a1 + 402), &v14);
    sub_22E901410(v12, &v13);
  }
}

uint64_t sub_22EA3D488(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  if (!a3[16])
  {
    sub_22E3CD31C((uint64_t *)(a3[13] + 96), a3[13]);
    if (!a3[16])
      return 0;
  }
  v6 = sub_22E46A3A0((uint64_t)a3);
  if (v6 == v7)
    return 0;
  v8 = v6;
  v9 = v7;
  v10 = 0;
  while (1)
  {
    v11 = *(_QWORD *)(**(_QWORD **)(v8 + 16) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v11 + 8) & 0xF) != 0)
      v11 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v8 + 16));
    v12 = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0);
    if (!v12 || (*(_DWORD *)(v12 + 16) & 0xFE) != 0x2C)
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x2C)
        break;
      v12 = sub_22F10CF48(v12);
      if (!v12)
        break;
    }
    v13 = sub_22F10C2A4(v12);
    if (v13)
    {
      v14 = (_DWORD *)v13;
      if ((*(_DWORD *)(v13 + 28) & 0x7Fu) - 35 <= 2)
        goto LABEL_13;
    }
LABEL_39:
    v8 += 24;
    if (v8 == v9)
      return v10;
  }
  v17 = *(_QWORD *)(**(_QWORD **)(v8 + 16) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v17 + 8) & 0xF) != 0)
    v17 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v8 + 16));
  v18 = sub_22F10D628(*(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0));
  if (!v18)
    goto LABEL_39;
  if ((*(_BYTE *)(v18 + 17) & 4) == 0)
    goto LABEL_39;
  v27 = *(_QWORD *)(v18 + 32);
  v19 = sub_22F0F08CC(&v27);
  if (!v19)
    goto LABEL_39;
  v20 = v19;
  v14 = *(_DWORD **)(v19 + 48);
  if (!v14 || (v14[7] & 0x7Fu) - 35 > 2)
    goto LABEL_39;
  v21 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)v14 + 32))(*(_QWORD *)(v19 + 48));
  if (v21 == (*(uint64_t (**)(uint64_t *))(*a3 + 32))(a3))
  {
    if ((*(_DWORD *)(v20 + 28) & 0x7F) != 0x1C)
      goto LABEL_39;
    v22 = *(_QWORD *)(**(_QWORD **)(v8 + 16) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v22 + 8) & 0xF) != 0)
      v22 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v8 + 16));
    v23 = sub_22F3B8778(v20, v22 & 0xFFFFFFFFFFFFFFF0);
    if (!v23)
      goto LABEL_39;
    v14 = (_DWORD *)v23;
    v24 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v23 + 32))(v23);
    if (v24 == (*(uint64_t (**)(uint64_t *))(*a3 + 32))(a3))
      goto LABEL_39;
  }
LABEL_13:
  v15 = sub_22EFCE144((unint64_t)(v14 + 16), a1);
  if (!v15)
  {
    if (!(_DWORD)v10)
    {
      v25 = sub_22EA3D488(a1, a2, v14);
      v10 = v25;
      if ((_DWORD)v25 != 2)
      {
        if ((_DWORD)v25 == 1)
          return v10;
        v10 = 0;
      }
    }
    goto LABEL_39;
  }
  while (1)
  {
    v16 = v15 & 0xFFFFFFFFFFFFFFF8;
    if ((v15 & 4) == 0 || !v16)
      break;
    if ((*(_DWORD *)(*(_QWORD *)v16 + 28) & 0x7Fu) - 33 > 9)
      return 1;
    v15 = *(_QWORD *)(v16 + 8);
    if (!v15)
      goto LABEL_38;
  }
  if ((*(_DWORD *)(v16 + 28) & 0x7Fu) - 33 < 0xA)
  {
LABEL_38:
    v10 = 2;
    goto LABEL_39;
  }
  return 1;
}

void sub_22EA3D74C()
{
  JUMPOUT(0x2348A0E9CLL);
}

BOOL sub_22EA3D760(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  unsigned int v7;
  _BOOL8 result;
  BOOL v10;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v4 = sub_22F2E6D78(a2);
  if (!v4)
  {
    if (a1[33])
      v10 = 1;
    else
      v10 = *(_DWORD *)(a2 + 24) == 0;
    if (!v10)
      return **(_QWORD **)(a2 + 16) == 0;
    return 0;
  }
  v5 = v4;
  if (a1[32])
    v6 = 1;
  else
    v6 = (*(_DWORD *)(v4 + 28) & 0x80) == 0;
  if (!v6)
    return 0;
  v7 = *(_DWORD *)(v4 + 28) & 0x7F;
  if (v7 - 33 >= 0xFFFFFFF9 && v7 <= 0x20 && ((1 << v7) & 0x150000000) != 0)
    return a1[34] != 0;
  if (v7 != 22 && v7 - 33 > 9)
    return 0;
  if (a1[35])
    return 1;
  result = 0;
  if (a1[34])
  {
    if (v7 - 38 >= 0xFFFFFFFD)
    {
      result = sub_22EFC3A88(v5);
      if (result)
      {
        v13 = *(_QWORD *)(v5 + 16);
        v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
        if ((v13 & 4) != 0)
          v14 = (_QWORD *)*v14;
        if (v14)
          v15 = v14 - 8;
        else
          v15 = 0;
        if (v15[17] >= 8uLL && (v15[17] & 4) == 0)
          return 1;
        return (*((_DWORD *)v15 + 7) & 0x7E) == 36;
      }
    }
  }
  return result;
}

__n128 sub_22EA3D89C@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;

  v4 = operator new();
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v4 + 8) = result;
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)v4 = &off_24FAB7860;
  *(_DWORD *)(v4 + 32) = *(_DWORD *)(a1 + 32);
  *a2 = v4;
  return result;
}

BOOL sub_22EA3D8FC(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;

  v1 = *(_WORD *)(a1 + 80) & 0x7F;
  v2 = -40;
  if (v1 > 0x46)
  {
    if (v1 == 83)
      goto LABEL_5;
    if (v1 == 71)
    {
      v2 = -56;
      goto LABEL_5;
    }
    if (v1 != 81)
    {
LABEL_18:
      v7 = v1 - 52;
      v8 = v1 - 33 >= 5;
      v9 = -48;
      if (!v8)
        v9 = -64;
      if (v7 >= 6)
        v2 = v9;
      else
        v2 = -72;
    }
  }
  else
  {
    if (v1 > 0x18)
      goto LABEL_17;
    if (v1 == 16)
    {
LABEL_4:
      v2 = -48;
      goto LABEL_5;
    }
    if (((1 << v1) & 0x1066) == 0)
    {
      if (v1 == 24)
        goto LABEL_4;
LABEL_17:
      if (v1 == 70)
      {
        v2 = -64;
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
LABEL_5:
  v3 = *(_QWORD *)(a1 + 72 + v2 + 16);
  v4 = (_QWORD *)(v3 & 0xFFFFFFFFFFFFFFF8);
  if ((v3 & 4) != 0)
    v4 = (_QWORD *)*v4;
  return v4
      && (v5 = v4[8]) != 0
      && ((*(unsigned __int16 *)(v5 + 8) | (*(unsigned __int8 *)(v5 + 10) << 16)) & 0x100000) != 0
      && (*(_QWORD *)(a1 + 40) & 7) == 6
      && *(_DWORD *)(*(_QWORD *)(a1 + 40) & 0xFFFFFFFFFFFFFFF8) == 42;
}

void sub_22EA3DA00(uint64_t a1)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v2 = *(_DWORD *)a1;
  if (*(_DWORD *)(a1 + 16))
  {
    if (v2 == 5)
      v4 = *(_DWORD *)(a1 + 4);
    else
      v4 = 0;
    *(_DWORD *)a1 = 2;
    sub_22EC561E4(a1);
    if (*(_DWORD *)a1 == 5)
    {
      *(_DWORD *)(a1 + 4) = v4;
      return;
    }
  }
  else if (v2 != 1)
  {
    *(_DWORD *)a1 = 0;
  }
  v3 = *(_QWORD *)(a1 + 88);
  if (v3)
  {
    v5 = sub_22EC6CBD0(v3);
    MEMORY[0x2348A0E9C](v5, 0x10E0C409F09D3C3);
    *(_QWORD *)(a1 + 88) = 0;
  }
}

unint64_t sub_22EA3DA94(unint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unsigned int v5;
  unint64_t v6;

  do
  {
    v1 = *(_QWORD *)(a1 + 16);
    v2 = v1 & 0xFFFFFFFFFFFFFFF8;
    v3 = v1 & 0xFFFFFFFFFFFFFFF8;
    if ((v1 & 4) != 0)
      v3 = *(_QWORD *)v2;
    a1 = v3 - 64;
    if (v3)
      v4 = (*(_WORD *)(v3 + 8) & 0x7Fu) - 38 > 0xFFFFFFFC;
    else
      v4 = 0;
  }
  while (v4);
  if ((v1 & 4) != 0)
    v2 = *(_QWORD *)v2;
  v5 = (*(_WORD *)(v2 + 8) & 0x7E) - 52;
  if (v2)
    v6 = v2 - 72;
  else
    v6 = 0;
  if (v5 >= 6)
    return 0;
  else
    return v6;
}

__n128 sub_22EA3DAF0(uint64_t a1, __n128 *a2)
{
  __n128 *v2;
  unsigned int v4;
  __n128 *v5;
  __n128 *v6;
  unint64_t v7;
  __n128 result;
  __n128 *v9;
  _BOOL4 v11;
  unint64_t v12;
  uint64_t v13;
  __n128 *v14;
  unsigned int v15;
  __n128 *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;

  v2 = a2;
  v4 = *(_DWORD *)(a1 + 8);
  v5 = *(__n128 **)a1;
  if (v4 >= *(_DWORD *)(a1 + 12))
  {
    v9 = (__n128 *)((char *)v5 + 40 * v4);
    v11 = v5 <= a2 && v9 > a2;
    if (v11)
      v12 = 0xCCCCCCCCCCCCCCCDLL * (((char *)a2 - (char *)v5) >> 3);
    else
      v12 = -1;
    v13 = llvm::SmallVectorBase<unsigned int>::mallocForGrow();
    v5 = (__n128 *)v13;
    v14 = *(__n128 **)a1;
    v15 = *(_DWORD *)(a1 + 8);
    if (v15)
    {
      v16 = (__n128 *)((char *)v14 + 40 * v15);
      v17 = v13;
      do
      {
        v18 = v14->n128_u64[0];
        *(_DWORD *)(v17 + 8) = v14->n128_u32[2];
        *(_QWORD *)v17 = v18;
        *(_QWORD *)(v17 + 16) = 0;
        *(_QWORD *)(v17 + 24) = 0;
        *(_DWORD *)(v17 + 32) = v14[2].n128_u32[0];
        *(__n128 *)(v17 + 16) = v14[1];
        v14[1].n128_u64[0] = 0;
        v14 = (__n128 *)((char *)v14 + 40);
        v17 += 40;
      }
      while (v14 != v16);
      v14 = *(__n128 **)a1;
      v19 = *(unsigned int *)(a1 + 8);
      if ((_DWORD)v19)
      {
        v20 = 40 * v19;
        do
        {
          v21 = (char *)v14 + v20;
          v22 = *(_QWORD *)((char *)&v14[-1] + v20 - 8);
          if (v22)
          {
            v23 = *((_QWORD *)v21 - 2);
            if (v23)
            {
              sub_22E3BB10C(v23, v22);
              *((_QWORD *)v21 - 3) = 0;
            }
          }
          v20 -= 40;
        }
        while (v20);
        v14 = *(__n128 **)a1;
      }
    }
    if (v14 != (__n128 *)(a1 + 16))
      free(v14);
    *(_QWORD *)a1 = v5;
    *(_DWORD *)(a1 + 12) = 0;
    if (v11)
      v2 = (__n128 *)((char *)v5 + 40 * v12);
    v4 = *(_DWORD *)(a1 + 8);
  }
  v6 = (__n128 *)((char *)v5 + 40 * v4);
  v7 = v2->n128_u64[0];
  v6->n128_u32[2] = v2->n128_u32[2];
  v6->n128_u64[0] = v7;
  v6[1].n128_u64[0] = 0;
  v6[1].n128_u64[1] = 0;
  v6[2].n128_u32[0] = v2[2].n128_u32[0];
  result = v2[1];
  v6[1] = result;
  v2[1].n128_u64[0] = 0;
  ++*(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_22EA3DC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *k;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *j;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *m;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *n;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t *ii;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t *kk;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t *jj;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t *mm;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t *nn;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t *i2;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t *i1;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t *i4;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t *i3;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t *i5;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t *i6;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t *i8;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t *i7;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t *i9;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t *i10;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t *v258;
  uint64_t v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t *i12;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t *i11;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t *v284;
  uint64_t v285;
  uint64_t *i13;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t *v293;
  uint64_t v294;
  uint64_t *i14;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t *v302;
  uint64_t v303;
  uint64_t *i15;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t *v311;
  uint64_t v312;
  uint64_t *i16;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t *v320;
  uint64_t v321;
  uint64_t *i17;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t *i18;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t *v338;
  uint64_t v339;
  uint64_t *i19;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t *v347;
  uint64_t v348;
  uint64_t *i20;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t *v356;
  uint64_t v357;
  uint64_t *i21;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t *v365;
  uint64_t v366;
  uint64_t *i22;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t *v374;
  uint64_t v375;
  uint64_t *i23;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t *v383;
  uint64_t v384;
  uint64_t *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t *v392;
  uint64_t v393;
  uint64_t *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t *v400;
  uint64_t v401;
  uint64_t *v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t *v408;
  uint64_t v409;
  uint64_t *i24;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t *v414;
  uint64_t v415;
  uint64_t *i26;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t *v425;
  uint64_t v426;
  uint64_t *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t *v433;
  uint64_t v434;
  uint64_t *i25;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  char v444;
  _BYTE v445[96];
  _BYTE v446[96];
  _BYTE v447[96];
  _BYTE v448[96];
  _BYTE v449[96];
  _BYTE v450[96];
  _BYTE v451[96];
  _BYTE v452[96];
  _BYTE v453[96];
  _BYTE v454[96];
  _BYTE v455[96];
  _BYTE v456[96];
  _BYTE v457[96];
  _BYTE v458[96];
  _BYTE v459[96];
  _BYTE v460[96];
  _BYTE v461[96];
  _BYTE v462[96];
  _BYTE v463[96];
  _BYTE v464[96];
  _BYTE v465[96];
  _BYTE v466[96];
  _BYTE v467[96];
  _BYTE v468[96];
  _BYTE v469[96];
  _BYTE v470[96];
  _BYTE v471[96];
  _BYTE v472[96];
  _BYTE v473[96];
  _BYTE v474[96];
  _BYTE v475[96];
  _BYTE v476[96];
  _BYTE v477[96];
  _BYTE v478[96];
  _BYTE v479[96];
  _BYTE v480[96];
  _BYTE v481[96];
  _BYTE v482[96];
  _BYTE v483[96];
  _BYTE v484[96];
  _BYTE v485[96];
  _BYTE v486[96];
  _BYTE v487[96];
  _BYTE v488[96];
  _BYTE v489[96];
  _BYTE v490[96];
  _BYTE v491[96];
  _BYTE v492[96];
  _BYTE v493[96];
  unsigned int v494[24];
  uint64_t v495;
  uint64_t v496;

  v0 = MEMORY[0x24BDAC7A8]();
  v3 = v1;
  v4 = (_QWORD *)v0;
  v5 = *(unsigned __int16 *)(v2 + 32);
  if (v5 == 101)
    v6 = v2;
  else
    v6 = 0;
  v496 = v6;
  if (v6)
  {
    if ((*(_BYTE *)(v1 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v1);
      v8 = *(uint64_t **)v7;
      v9 = *(unsigned int *)(v7 + 8);
      i = *(uint64_t **)v7;
      if ((_DWORD)v9)
      {
        v11 = 8 * v9;
        for (i = *(uint64_t **)v7; *(_WORD *)(*i + 32) != 226; ++i)
        {
          v11 -= 8;
          if (!v11)
            return 1;
        }
      }
      if (i != &v8[v9])
      {
        do
        {
          v19 = *v8++;
          v18 = v19;
        }
        while (*(_WORD *)(v19 + 32) != 226);
        v495 = v18;
        sub_22E8FCA40(v4, *(_DWORD *)(v18 + 16), 0xB34u, 0, (uint64_t)v494);
        v20 = sub_22E8FB3C4((uint64_t)v494, &v495);
        sub_22E8FB3C4(v20, &v496);
        sub_22E903BEC(v494);
        sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v493);
        v21 = (unsigned int *)v493;
LABEL_595:
        sub_22E903BEC(v21);
        return 0;
      }
    }
  }
  else
  {
    if (v5 == 45)
      v12 = v2;
    else
      v12 = 0;
    v496 = v12;
    if (v12)
    {
      if ((*(_BYTE *)(v1 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v1);
        v14 = *(uint64_t **)v13;
        v15 = *(unsigned int *)(v13 + 8);
        v16 = *(uint64_t **)v13;
        if ((_DWORD)v15)
        {
          v17 = 8 * v15;
          v16 = *(uint64_t **)v13;
          while (*(_WORD *)(*v16 + 32) != 242)
          {
            ++v16;
            v17 -= 8;
            if (!v17)
              goto LABEL_37;
          }
        }
        if (v16 != &v14[v15])
        {
          do
          {
            v29 = *v14++;
            v28 = v29;
          }
          while (*(_WORD *)(v29 + 32) != 242);
          v495 = v28;
          sub_22E8FCA40(v4, *(_DWORD *)(v28 + 16), 0xB34u, 0, (uint64_t)v494);
          v30 = sub_22E8FB3C4((uint64_t)v494, &v495);
          sub_22E8FB3C4(v30, &v496);
          sub_22E903BEC(v494);
          sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v492);
          v21 = (unsigned int *)v492;
          goto LABEL_595;
        }
      }
LABEL_37:
      if ((*(_BYTE *)(v3 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v3);
        v32 = *(uint64_t **)v31;
        v33 = *(unsigned int *)(v31 + 8);
        j = *(uint64_t **)v31;
        if ((_DWORD)v33)
        {
          v35 = 8 * v33;
          for (j = *(uint64_t **)v31; *(_WORD *)(*j + 32) != 419; ++j)
          {
            v35 -= 8;
            if (!v35)
              return 1;
          }
        }
        if (j != &v32[v33])
        {
          do
          {
            v37 = *v32++;
            v36 = v37;
          }
          while (*(_WORD *)(v37 + 32) != 419);
          v495 = v36;
          sub_22E8FCA40(v4, *(_DWORD *)(v36 + 16), 0xB34u, 0, (uint64_t)v494);
          v38 = sub_22E8FB3C4((uint64_t)v494, &v495);
          sub_22E8FB3C4(v38, &v496);
          sub_22E903BEC(v494);
          sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v491);
          v21 = (unsigned int *)v491;
          goto LABEL_595;
        }
      }
    }
    else
    {
      if (v5 == 121)
        v22 = v2;
      else
        v22 = 0;
      v496 = v22;
      if (v22)
      {
        if ((*(_BYTE *)(v1 + 29) & 1) != 0)
        {
          sub_22EFC8E88(v1);
          v24 = *(uint64_t **)v23;
          v25 = *(unsigned int *)(v23 + 8);
          k = *(uint64_t **)v23;
          if ((_DWORD)v25)
          {
            v27 = 8 * v25;
            for (k = *(uint64_t **)v23; *(_WORD *)(*k + 32) != 126; ++k)
            {
              v27 -= 8;
              if (!v27)
                return 1;
            }
          }
          if (k != &v24[v25])
          {
            do
            {
              v46 = *v24++;
              v45 = v46;
            }
            while (*(_WORD *)(v46 + 32) != 126);
            v495 = v45;
            sub_22E8FCA40(v4, *(_DWORD *)(v45 + 16), 0xB34u, 0, (uint64_t)v494);
            v47 = sub_22E8FB3C4((uint64_t)v494, &v495);
            sub_22E8FB3C4(v47, &v496);
            sub_22E903BEC(v494);
            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v490);
            v21 = (unsigned int *)v490;
            goto LABEL_595;
          }
        }
      }
      else
      {
        if (v5 == 126)
          v39 = v2;
        else
          v39 = 0;
        v496 = v39;
        if (v39)
        {
          if ((*(_BYTE *)(v1 + 29) & 1) != 0)
          {
            sub_22EFC8E88(v1);
            v41 = *(uint64_t **)v40;
            v42 = *(unsigned int *)(v40 + 8);
            m = *(uint64_t **)v40;
            if ((_DWORD)v42)
            {
              v44 = 8 * v42;
              for (m = *(uint64_t **)v40; *(_WORD *)(*m + 32) != 121; ++m)
              {
                v44 -= 8;
                if (!v44)
                  return 1;
              }
            }
            if (m != &v41[v42])
            {
              do
              {
                v55 = *v41++;
                v54 = v55;
              }
              while (*(_WORD *)(v55 + 32) != 121);
              v495 = v54;
              sub_22E8FCA40(v4, *(_DWORD *)(v54 + 16), 0xB34u, 0, (uint64_t)v494);
              v56 = sub_22E8FB3C4((uint64_t)v494, &v495);
              sub_22E8FB3C4(v56, &v496);
              sub_22E903BEC(v494);
              sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v489);
              v21 = (unsigned int *)v489;
              goto LABEL_595;
            }
          }
        }
        else
        {
          if (v5 == 127)
            v48 = v2;
          else
            v48 = 0;
          v496 = v48;
          if (v48)
          {
            if ((*(_BYTE *)(v1 + 29) & 1) != 0)
            {
              sub_22EFC8E88(v1);
              v50 = *(uint64_t **)v49;
              v51 = *(unsigned int *)(v49 + 8);
              v52 = *(uint64_t **)v49;
              if ((_DWORD)v51)
              {
                v53 = 8 * v51;
                v52 = *(uint64_t **)v49;
                while (*(_WORD *)(*v52 + 32) != 328)
                {
                  ++v52;
                  v53 -= 8;
                  if (!v53)
                    goto LABEL_85;
                }
              }
              if (v52 != &v50[v51])
              {
                do
                {
                  v64 = *v50++;
                  v63 = v64;
                }
                while (*(_WORD *)(v64 + 32) != 328);
                v495 = v63;
                sub_22E8FCA40(v4, *(_DWORD *)(v63 + 16), 0xB34u, 0, (uint64_t)v494);
                v65 = sub_22E8FB3C4((uint64_t)v494, &v495);
                sub_22E8FB3C4(v65, &v496);
                sub_22E903BEC(v494);
                sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v488);
                v21 = (unsigned int *)v488;
                goto LABEL_595;
              }
            }
LABEL_85:
            if ((*(_BYTE *)(v3 + 29) & 1) != 0)
            {
              sub_22EFC8E88(v3);
              v67 = *(uint64_t **)v66;
              v68 = *(unsigned int *)(v66 + 8);
              v69 = *(uint64_t **)v66;
              if ((_DWORD)v68)
              {
                v70 = 8 * v68;
                v69 = *(uint64_t **)v66;
                while (*(_WORD *)(*v69 + 32) != 327)
                {
                  ++v69;
                  v70 -= 8;
                  if (!v70)
                    goto LABEL_94;
                }
              }
              if (v69 != &v67[v68])
              {
                do
                {
                  v72 = *v67++;
                  v71 = v72;
                }
                while (*(_WORD *)(v72 + 32) != 327);
                v495 = v71;
                sub_22E8FCA40(v4, *(_DWORD *)(v71 + 16), 0xB34u, 0, (uint64_t)v494);
                v73 = sub_22E8FB3C4((uint64_t)v494, &v495);
                sub_22E8FB3C4(v73, &v496);
                sub_22E903BEC(v494);
                sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v487);
                v21 = (unsigned int *)v487;
                goto LABEL_595;
              }
            }
LABEL_94:
            if ((*(_BYTE *)(v3 + 29) & 1) != 0)
            {
              sub_22EFC8E88(v3);
              v75 = *(uint64_t **)v74;
              v76 = *(unsigned int *)(v74 + 8);
              n = *(uint64_t **)v74;
              if ((_DWORD)v76)
              {
                v78 = 8 * v76;
                for (n = *(uint64_t **)v74; *(_WORD *)(*n + 32) != 128; ++n)
                {
                  v78 -= 8;
                  if (!v78)
                    return 1;
                }
              }
              if (n != &v75[v76])
              {
                do
                {
                  v86 = *v75++;
                  v85 = v86;
                }
                while (*(_WORD *)(v86 + 32) != 128);
                v495 = v85;
                sub_22E8FCA40(v4, *(_DWORD *)(v85 + 16), 0xB34u, 0, (uint64_t)v494);
                v87 = sub_22E8FB3C4((uint64_t)v494, &v495);
                sub_22E8FB3C4(v87, &v496);
                sub_22E903BEC(v494);
                sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v486);
                v21 = (unsigned int *)v486;
                goto LABEL_595;
              }
            }
          }
          else
          {
            if (v5 == 128)
              v57 = v2;
            else
              v57 = 0;
            v496 = v57;
            if (v57)
            {
              if ((*(_BYTE *)(v1 + 29) & 1) != 0)
              {
                sub_22EFC8E88(v1);
                v59 = *(uint64_t **)v58;
                v60 = *(unsigned int *)(v58 + 8);
                v61 = *(uint64_t **)v58;
                if ((_DWORD)v60)
                {
                  v62 = 8 * v60;
                  v61 = *(uint64_t **)v58;
                  while (*(_WORD *)(*v61 + 32) != 328)
                  {
                    ++v61;
                    v62 -= 8;
                    if (!v62)
                      goto LABEL_116;
                  }
                }
                if (v61 != &v59[v60])
                {
                  do
                  {
                    v89 = *v59++;
                    v88 = v89;
                  }
                  while (*(_WORD *)(v89 + 32) != 328);
                  v495 = v88;
                  sub_22E8FCA40(v4, *(_DWORD *)(v88 + 16), 0xB34u, 0, (uint64_t)v494);
                  v90 = sub_22E8FB3C4((uint64_t)v494, &v495);
                  sub_22E8FB3C4(v90, &v496);
                  sub_22E903BEC(v494);
                  sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v485);
                  v21 = (unsigned int *)v485;
                  goto LABEL_595;
                }
              }
LABEL_116:
              if ((*(_BYTE *)(v3 + 29) & 1) != 0)
              {
                sub_22EFC8E88(v3);
                v92 = *(uint64_t **)v91;
                v93 = *(unsigned int *)(v91 + 8);
                v94 = *(uint64_t **)v91;
                if ((_DWORD)v93)
                {
                  v95 = 8 * v93;
                  v94 = *(uint64_t **)v91;
                  while (*(_WORD *)(*v94 + 32) != 327)
                  {
                    ++v94;
                    v95 -= 8;
                    if (!v95)
                      goto LABEL_125;
                  }
                }
                if (v94 != &v92[v93])
                {
                  do
                  {
                    v97 = *v92++;
                    v96 = v97;
                  }
                  while (*(_WORD *)(v97 + 32) != 327);
                  v495 = v96;
                  sub_22E8FCA40(v4, *(_DWORD *)(v96 + 16), 0xB34u, 0, (uint64_t)v494);
                  v98 = sub_22E8FB3C4((uint64_t)v494, &v495);
                  sub_22E8FB3C4(v98, &v496);
                  sub_22E903BEC(v494);
                  sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v484);
                  v21 = (unsigned int *)v484;
                  goto LABEL_595;
                }
              }
LABEL_125:
              if ((*(_BYTE *)(v3 + 29) & 1) != 0)
              {
                sub_22EFC8E88(v3);
                v100 = *(uint64_t **)v99;
                v101 = *(unsigned int *)(v99 + 8);
                ii = *(uint64_t **)v99;
                if ((_DWORD)v101)
                {
                  v103 = 8 * v101;
                  for (ii = *(uint64_t **)v99; *(_WORD *)(*ii + 32) != 127; ++ii)
                  {
                    v103 -= 8;
                    if (!v103)
                      return 1;
                  }
                }
                if (ii != &v100[v101])
                {
                  do
                  {
                    v111 = *v100++;
                    v110 = v111;
                  }
                  while (*(_WORD *)(v111 + 32) != 127);
                  v495 = v110;
                  sub_22E8FCA40(v4, *(_DWORD *)(v110 + 16), 0xB34u, 0, (uint64_t)v494);
                  v112 = sub_22E8FB3C4((uint64_t)v494, &v495);
                  sub_22E8FB3C4(v112, &v496);
                  sub_22E903BEC(v494);
                  sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v483);
                  v21 = (unsigned int *)v483;
                  goto LABEL_595;
                }
              }
            }
            else
            {
              if (v5 == 129)
                v79 = v2;
              else
                v79 = 0;
              v496 = v79;
              if (v79)
              {
                if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                {
                  sub_22EFC8E88(v1);
                  v81 = *(uint64_t **)v80;
                  v82 = *(unsigned int *)(v80 + 8);
                  v83 = *(uint64_t **)v80;
                  if ((_DWORD)v82)
                  {
                    v84 = 8 * v82;
                    v83 = *(uint64_t **)v80;
                    while (*(_WORD *)(*v83 + 32) != 137)
                    {
                      ++v83;
                      v84 -= 8;
                      if (!v84)
                        goto LABEL_147;
                    }
                  }
                  if (v83 != &v81[v82])
                  {
                    do
                    {
                      v114 = *v81++;
                      v113 = v114;
                    }
                    while (*(_WORD *)(v114 + 32) != 137);
                    v495 = v113;
                    sub_22E8FCA40(v4, *(_DWORD *)(v113 + 16), 0xB34u, 0, (uint64_t)v494);
                    v115 = sub_22E8FB3C4((uint64_t)v494, &v495);
                    sub_22E8FB3C4(v115, &v496);
                    sub_22E903BEC(v494);
                    sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v482);
                    v21 = (unsigned int *)v482;
                    goto LABEL_595;
                  }
                }
LABEL_147:
                if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                {
                  sub_22EFC8E88(v3);
                  v117 = *(uint64_t **)v116;
                  v118 = *(unsigned int *)(v116 + 8);
                  jj = *(uint64_t **)v116;
                  if ((_DWORD)v118)
                  {
                    v120 = 8 * v118;
                    for (jj = *(uint64_t **)v116; *(_WORD *)(*jj + 32) != 184; ++jj)
                    {
                      v120 -= 8;
                      if (!v120)
                        return 1;
                    }
                  }
                  if (jj != &v117[v118])
                  {
                    do
                    {
                      v122 = *v117++;
                      v121 = v122;
                    }
                    while (*(_WORD *)(v122 + 32) != 184);
                    v495 = v121;
                    sub_22E8FCA40(v4, *(_DWORD *)(v121 + 16), 0xB34u, 0, (uint64_t)v494);
                    v123 = sub_22E8FB3C4((uint64_t)v494, &v495);
                    sub_22E8FB3C4(v123, &v496);
                    sub_22E903BEC(v494);
                    sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v481);
                    v21 = (unsigned int *)v481;
                    goto LABEL_595;
                  }
                }
              }
              else
              {
                if (v5 == 130)
                  v104 = v2;
                else
                  v104 = 0;
                v496 = v104;
                if (v104)
                {
                  if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                  {
                    sub_22EFC8E88(v1);
                    v106 = *(uint64_t **)v105;
                    v107 = *(unsigned int *)(v105 + 8);
                    kk = *(uint64_t **)v105;
                    if ((_DWORD)v107)
                    {
                      v109 = 8 * v107;
                      for (kk = *(uint64_t **)v105; *(_WORD *)(*kk + 32) != 133; ++kk)
                      {
                        v109 -= 8;
                        if (!v109)
                          return 1;
                      }
                    }
                    if (kk != &v106[v107])
                    {
                      do
                      {
                        v131 = *v106++;
                        v130 = v131;
                      }
                      while (*(_WORD *)(v131 + 32) != 133);
                      v495 = v130;
                      sub_22E8FCA40(v4, *(_DWORD *)(v130 + 16), 0xB34u, 0, (uint64_t)v494);
                      v132 = sub_22E8FB3C4((uint64_t)v494, &v495);
                      sub_22E8FB3C4(v132, &v496);
                      sub_22E903BEC(v494);
                      sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v480);
                      v21 = (unsigned int *)v480;
                      goto LABEL_595;
                    }
                  }
                }
                else
                {
                  if (v5 == 131)
                    v124 = v2;
                  else
                    v124 = 0;
                  v496 = v124;
                  if (v124)
                  {
                    if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                    {
                      sub_22EFC8E88(v1);
                      v126 = *(uint64_t **)v125;
                      v127 = *(unsigned int *)(v125 + 8);
                      mm = *(uint64_t **)v125;
                      if ((_DWORD)v127)
                      {
                        v129 = 8 * v127;
                        for (mm = *(uint64_t **)v125; *(_WORD *)(*mm + 32) != 132; ++mm)
                        {
                          v129 -= 8;
                          if (!v129)
                            return 1;
                        }
                      }
                      if (mm != &v126[v127])
                      {
                        do
                        {
                          v140 = *v126++;
                          v139 = v140;
                        }
                        while (*(_WORD *)(v140 + 32) != 132);
                        v495 = v139;
                        sub_22E8FCA40(v4, *(_DWORD *)(v139 + 16), 0xB34u, 0, (uint64_t)v494);
                        v141 = sub_22E8FB3C4((uint64_t)v494, &v495);
                        sub_22E8FB3C4(v141, &v496);
                        sub_22E903BEC(v494);
                        sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v479);
                        v21 = (unsigned int *)v479;
                        goto LABEL_595;
                      }
                    }
                  }
                  else
                  {
                    if (v5 == 132)
                      v133 = v2;
                    else
                      v133 = 0;
                    v496 = v133;
                    if (v133)
                    {
                      if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                      {
                        sub_22EFC8E88(v1);
                        v135 = *(uint64_t **)v134;
                        v136 = *(unsigned int *)(v134 + 8);
                        nn = *(uint64_t **)v134;
                        if ((_DWORD)v136)
                        {
                          v138 = 8 * v136;
                          for (nn = *(uint64_t **)v134; *(_WORD *)(*nn + 32) != 131; ++nn)
                          {
                            v138 -= 8;
                            if (!v138)
                              return 1;
                          }
                        }
                        if (nn != &v135[v136])
                        {
                          do
                          {
                            v149 = *v135++;
                            v148 = v149;
                          }
                          while (*(_WORD *)(v149 + 32) != 131);
                          v495 = v148;
                          sub_22E8FCA40(v4, *(_DWORD *)(v148 + 16), 0xB34u, 0, (uint64_t)v494);
                          v150 = sub_22E8FB3C4((uint64_t)v494, &v495);
                          sub_22E8FB3C4(v150, &v496);
                          sub_22E903BEC(v494);
                          sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v478);
                          v21 = (unsigned int *)v478;
                          goto LABEL_595;
                        }
                      }
                    }
                    else
                    {
                      if (v5 == 133)
                        v142 = v2;
                      else
                        v142 = 0;
                      v496 = v142;
                      if (v142)
                      {
                        if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                        {
                          sub_22EFC8E88(v1);
                          v144 = *(uint64_t **)v143;
                          v145 = *(unsigned int *)(v143 + 8);
                          v146 = *(uint64_t **)v143;
                          if ((_DWORD)v145)
                          {
                            v147 = 8 * v145;
                            v146 = *(uint64_t **)v143;
                            while (*(_WORD *)(*v146 + 32) != 130)
                            {
                              ++v146;
                              v147 -= 8;
                              if (!v147)
                                goto LABEL_208;
                            }
                          }
                          if (v146 != &v144[v145])
                          {
                            do
                            {
                              v158 = *v144++;
                              v157 = v158;
                            }
                            while (*(_WORD *)(v158 + 32) != 130);
                            v495 = v157;
                            sub_22E8FCA40(v4, *(_DWORD *)(v157 + 16), 0xB34u, 0, (uint64_t)v494);
                            v159 = sub_22E8FB3C4((uint64_t)v494, &v495);
                            sub_22E8FB3C4(v159, &v496);
                            sub_22E903BEC(v494);
                            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v477);
                            v21 = (unsigned int *)v477;
                            goto LABEL_595;
                          }
                        }
LABEL_208:
                        if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                        {
                          sub_22EFC8E88(v3);
                          v161 = *(uint64_t **)v160;
                          v162 = *(unsigned int *)(v160 + 8);
                          i1 = *(uint64_t **)v160;
                          if ((_DWORD)v162)
                          {
                            v164 = 8 * v162;
                            for (i1 = *(uint64_t **)v160; *(_WORD *)(*i1 + 32) != 134; ++i1)
                            {
                              v164 -= 8;
                              if (!v164)
                                return 1;
                            }
                          }
                          if (i1 != &v161[v162])
                          {
                            do
                            {
                              v166 = *v161++;
                              v165 = v166;
                            }
                            while (*(_WORD *)(v166 + 32) != 134);
                            v495 = v165;
                            sub_22E8FCA40(v4, *(_DWORD *)(v165 + 16), 0xB34u, 0, (uint64_t)v494);
                            v167 = sub_22E8FB3C4((uint64_t)v494, &v495);
                            sub_22E8FB3C4(v167, &v496);
                            sub_22E903BEC(v494);
                            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v476);
                            v21 = (unsigned int *)v476;
                            goto LABEL_595;
                          }
                        }
                      }
                      else
                      {
                        if (v5 == 134)
                          v151 = v2;
                        else
                          v151 = 0;
                        v496 = v151;
                        if (v151)
                        {
                          if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                          {
                            sub_22EFC8E88(v1);
                            v153 = *(uint64_t **)v152;
                            v154 = *(unsigned int *)(v152 + 8);
                            i2 = *(uint64_t **)v152;
                            if ((_DWORD)v154)
                            {
                              v156 = 8 * v154;
                              for (i2 = *(uint64_t **)v152; *(_WORD *)(*i2 + 32) != 133; ++i2)
                              {
                                v156 -= 8;
                                if (!v156)
                                  return 1;
                              }
                            }
                            if (i2 != &v153[v154])
                            {
                              do
                              {
                                v175 = *v153++;
                                v174 = v175;
                              }
                              while (*(_WORD *)(v175 + 32) != 133);
                              v495 = v174;
                              sub_22E8FCA40(v4, *(_DWORD *)(v174 + 16), 0xB34u, 0, (uint64_t)v494);
                              v176 = sub_22E8FB3C4((uint64_t)v494, &v495);
                              sub_22E8FB3C4(v176, &v496);
                              sub_22E903BEC(v494);
                              sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v475);
                              v21 = (unsigned int *)v475;
                              goto LABEL_595;
                            }
                          }
                        }
                        else
                        {
                          if (v5 == 137)
                            v168 = v2;
                          else
                            v168 = 0;
                          v496 = v168;
                          if (v168)
                          {
                            if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                            {
                              sub_22EFC8E88(v1);
                              v170 = *(uint64_t **)v169;
                              v171 = *(unsigned int *)(v169 + 8);
                              v172 = *(uint64_t **)v169;
                              if ((_DWORD)v171)
                              {
                                v173 = 8 * v171;
                                v172 = *(uint64_t **)v169;
                                while (*(_WORD *)(*v172 + 32) != 129)
                                {
                                  ++v172;
                                  v173 -= 8;
                                  if (!v173)
                                    goto LABEL_243;
                                }
                              }
                              if (v172 != &v170[v171])
                              {
                                do
                                {
                                  v184 = *v170++;
                                  v183 = v184;
                                }
                                while (*(_WORD *)(v184 + 32) != 129);
                                v495 = v183;
                                sub_22E8FCA40(v4, *(_DWORD *)(v183 + 16), 0xB34u, 0, (uint64_t)v494);
                                v185 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                sub_22E8FB3C4(v185, &v496);
                                sub_22E903BEC(v494);
                                sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v474);
                                v21 = (unsigned int *)v474;
                                goto LABEL_595;
                              }
                            }
LABEL_243:
                            if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                            {
                              sub_22EFC8E88(v3);
                              v187 = *(uint64_t **)v186;
                              v188 = *(unsigned int *)(v186 + 8);
                              i3 = *(uint64_t **)v186;
                              if ((_DWORD)v188)
                              {
                                v190 = 8 * v188;
                                for (i3 = *(uint64_t **)v186; *(_WORD *)(*i3 + 32) != 184; ++i3)
                                {
                                  v190 -= 8;
                                  if (!v190)
                                    return 1;
                                }
                              }
                              if (i3 != &v187[v188])
                              {
                                do
                                {
                                  v192 = *v187++;
                                  v191 = v192;
                                }
                                while (*(_WORD *)(v192 + 32) != 184);
                                v495 = v191;
                                sub_22E8FCA40(v4, *(_DWORD *)(v191 + 16), 0xB34u, 0, (uint64_t)v494);
                                v193 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                sub_22E8FB3C4(v193, &v496);
                                sub_22E903BEC(v494);
                                sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v473);
                                v21 = (unsigned int *)v473;
                                goto LABEL_595;
                              }
                            }
                          }
                          else
                          {
                            if (v5 == 146)
                              v177 = v2;
                            else
                              v177 = 0;
                            v496 = v177;
                            if (v177)
                            {
                              if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                              {
                                sub_22EFC8E88(v1);
                                v179 = *(uint64_t **)v178;
                                v180 = *(unsigned int *)(v178 + 8);
                                i4 = *(uint64_t **)v178;
                                if ((_DWORD)v180)
                                {
                                  v182 = 8 * v180;
                                  for (i4 = *(uint64_t **)v178; *(_WORD *)(*i4 + 32) != 188; ++i4)
                                  {
                                    v182 -= 8;
                                    if (!v182)
                                      return 1;
                                  }
                                }
                                if (i4 != &v179[v180])
                                {
                                  do
                                  {
                                    v201 = *v179++;
                                    v200 = v201;
                                  }
                                  while (*(_WORD *)(v201 + 32) != 188);
                                  v495 = v200;
                                  sub_22E8FCA40(v4, *(_DWORD *)(v200 + 16), 0xB34u, 0, (uint64_t)v494);
                                  v202 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                  sub_22E8FB3C4(v202, &v496);
                                  sub_22E903BEC(v494);
                                  sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v472);
                                  v21 = (unsigned int *)v472;
                                  goto LABEL_595;
                                }
                              }
                            }
                            else
                            {
                              if (v5 == 147)
                                v194 = v2;
                              else
                                v194 = 0;
                              v496 = v194;
                              if (v194)
                              {
                                if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                {
                                  sub_22EFC8E88(v1);
                                  v196 = *(uint64_t **)v195;
                                  v197 = *(unsigned int *)(v195 + 8);
                                  i5 = *(uint64_t **)v195;
                                  if ((_DWORD)v197)
                                  {
                                    v199 = 8 * v197;
                                    for (i5 = *(uint64_t **)v195; *(_WORD *)(*i5 + 32) != 193; ++i5)
                                    {
                                      v199 -= 8;
                                      if (!v199)
                                        return 1;
                                    }
                                  }
                                  if (i5 != &v196[v197])
                                  {
                                    do
                                    {
                                      v210 = *v196++;
                                      v209 = v210;
                                    }
                                    while (*(_WORD *)(v210 + 32) != 193);
                                    v495 = v209;
                                    sub_22E8FCA40(v4, *(_DWORD *)(v209 + 16), 0xB34u, 0, (uint64_t)v494);
                                    v211 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                    sub_22E8FB3C4(v211, &v496);
                                    sub_22E903BEC(v494);
                                    sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v471);
                                    v21 = (unsigned int *)v471;
                                    goto LABEL_595;
                                  }
                                }
                              }
                              else
                              {
                                if (v5 == 165)
                                  v203 = v2;
                                else
                                  v203 = 0;
                                v496 = v203;
                                if (v203)
                                {
                                  if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                  {
                                    sub_22EFC8E88(v1);
                                    v205 = *(uint64_t **)v204;
                                    v206 = *(unsigned int *)(v204 + 8);
                                    i6 = *(uint64_t **)v204;
                                    if ((_DWORD)v206)
                                    {
                                      v208 = 8 * v206;
                                      for (i6 = *(uint64_t **)v204; *(_WORD *)(*i6 + 32) != 222; ++i6)
                                      {
                                        v208 -= 8;
                                        if (!v208)
                                          return 1;
                                      }
                                    }
                                    if (i6 != &v205[v206])
                                    {
                                      do
                                      {
                                        v219 = *v205++;
                                        v218 = v219;
                                      }
                                      while (*(_WORD *)(v219 + 32) != 222);
                                      v495 = v218;
                                      sub_22E8FCA40(v4, *(_DWORD *)(v218 + 16), 0xB34u, 0, (uint64_t)v494);
                                      v220 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                      sub_22E8FB3C4(v220, &v496);
                                      sub_22E903BEC(v494);
                                      sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v470);
                                      v21 = (unsigned int *)v470;
                                      goto LABEL_595;
                                    }
                                  }
                                }
                                else
                                {
                                  if (v5 == 184)
                                    v212 = v2;
                                  else
                                    v212 = 0;
                                  v496 = v212;
                                  if (v212)
                                  {
                                    if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                    {
                                      sub_22EFC8E88(v1);
                                      v214 = *(uint64_t **)v213;
                                      v215 = *(unsigned int *)(v213 + 8);
                                      v216 = *(uint64_t **)v213;
                                      if ((_DWORD)v215)
                                      {
                                        v217 = 8 * v215;
                                        v216 = *(uint64_t **)v213;
                                        while (*(_WORD *)(*v216 + 32) != 129)
                                        {
                                          ++v216;
                                          v217 -= 8;
                                          if (!v217)
                                            goto LABEL_304;
                                        }
                                      }
                                      if (v216 != &v214[v215])
                                      {
                                        do
                                        {
                                          v228 = *v214++;
                                          v227 = v228;
                                        }
                                        while (*(_WORD *)(v228 + 32) != 129);
                                        v495 = v227;
                                        sub_22E8FCA40(v4, *(_DWORD *)(v227 + 16), 0xB34u, 0, (uint64_t)v494);
                                        v229 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                        sub_22E8FB3C4(v229, &v496);
                                        sub_22E903BEC(v494);
                                        sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v469);
                                        v21 = (unsigned int *)v469;
                                        goto LABEL_595;
                                      }
                                    }
LABEL_304:
                                    if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                                    {
                                      sub_22EFC8E88(v3);
                                      v231 = *(uint64_t **)v230;
                                      v232 = *(unsigned int *)(v230 + 8);
                                      i7 = *(uint64_t **)v230;
                                      if ((_DWORD)v232)
                                      {
                                        v234 = 8 * v232;
                                        for (i7 = *(uint64_t **)v230; *(_WORD *)(*i7 + 32) != 137; ++i7)
                                        {
                                          v234 -= 8;
                                          if (!v234)
                                            return 1;
                                        }
                                      }
                                      if (i7 != &v231[v232])
                                      {
                                        do
                                        {
                                          v236 = *v231++;
                                          v235 = v236;
                                        }
                                        while (*(_WORD *)(v236 + 32) != 137);
                                        v495 = v235;
                                        sub_22E8FCA40(v4, *(_DWORD *)(v235 + 16), 0xB34u, 0, (uint64_t)v494);
                                        v237 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                        sub_22E8FB3C4(v237, &v496);
                                        sub_22E903BEC(v494);
                                        sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v468);
                                        v21 = (unsigned int *)v468;
                                        goto LABEL_595;
                                      }
                                    }
                                  }
                                  else
                                  {
                                    if (v5 == 188)
                                      v221 = v2;
                                    else
                                      v221 = 0;
                                    v496 = v221;
                                    if (v221)
                                    {
                                      if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                      {
                                        sub_22EFC8E88(v1);
                                        v223 = *(uint64_t **)v222;
                                        v224 = *(unsigned int *)(v222 + 8);
                                        i8 = *(uint64_t **)v222;
                                        if ((_DWORD)v224)
                                        {
                                          v226 = 8 * v224;
                                          for (i8 = *(uint64_t **)v222; *(_WORD *)(*i8 + 32) != 146; ++i8)
                                          {
                                            v226 -= 8;
                                            if (!v226)
                                              return 1;
                                          }
                                        }
                                        if (i8 != &v223[v224])
                                        {
                                          do
                                          {
                                            v245 = *v223++;
                                            v244 = v245;
                                          }
                                          while (*(_WORD *)(v245 + 32) != 146);
                                          v495 = v244;
                                          sub_22E8FCA40(v4, *(_DWORD *)(v244 + 16), 0xB34u, 0, (uint64_t)v494);
                                          v246 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                          sub_22E8FB3C4(v246, &v496);
                                          sub_22E903BEC(v494);
                                          sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v467);
                                          v21 = (unsigned int *)v467;
                                          goto LABEL_595;
                                        }
                                      }
                                    }
                                    else
                                    {
                                      if (v5 == 193)
                                        v238 = v2;
                                      else
                                        v238 = 0;
                                      v496 = v238;
                                      if (v238)
                                      {
                                        if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                        {
                                          sub_22EFC8E88(v1);
                                          v240 = *(uint64_t **)v239;
                                          v241 = *(unsigned int *)(v239 + 8);
                                          i9 = *(uint64_t **)v239;
                                          if ((_DWORD)v241)
                                          {
                                            v243 = 8 * v241;
                                            for (i9 = *(uint64_t **)v239; *(_WORD *)(*i9 + 32) != 147; ++i9)
                                            {
                                              v243 -= 8;
                                              if (!v243)
                                                return 1;
                                            }
                                          }
                                          if (i9 != &v240[v241])
                                          {
                                            do
                                            {
                                              v254 = *v240++;
                                              v253 = v254;
                                            }
                                            while (*(_WORD *)(v254 + 32) != 147);
                                            v495 = v253;
                                            sub_22E8FCA40(v4, *(_DWORD *)(v253 + 16), 0xB34u, 0, (uint64_t)v494);
                                            v255 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                            sub_22E8FB3C4(v255, &v496);
                                            sub_22E903BEC(v494);
                                            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v466);
                                            v21 = (unsigned int *)v466;
                                            goto LABEL_595;
                                          }
                                        }
                                      }
                                      else
                                      {
                                        if (v5 == 211)
                                          v247 = v2;
                                        else
                                          v247 = 0;
                                        v496 = v247;
                                        if (v247)
                                        {
                                          if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                          {
                                            sub_22EFC8E88(v1);
                                            v249 = *(uint64_t **)v248;
                                            v250 = *(unsigned int *)(v248 + 8);
                                            i10 = *(uint64_t **)v248;
                                            if ((_DWORD)v250)
                                            {
                                              v252 = 8 * v250;
                                              for (i10 = *(uint64_t **)v248; *(_WORD *)(*i10 + 32) != 214; ++i10)
                                              {
                                                v252 -= 8;
                                                if (!v252)
                                                  return 1;
                                              }
                                            }
                                            if (i10 != &v249[v250])
                                            {
                                              do
                                              {
                                                v263 = *v249++;
                                                v262 = v263;
                                              }
                                              while (*(_WORD *)(v263 + 32) != 214);
                                              v495 = v262;
                                              sub_22E8FCA40(v4, *(_DWORD *)(v262 + 16), 0xB34u, 0, (uint64_t)v494);
                                              v264 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                              sub_22E8FB3C4(v264, &v496);
                                              sub_22E903BEC(v494);
                                              sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v465);
                                              v21 = (unsigned int *)v465;
                                              goto LABEL_595;
                                            }
                                          }
                                        }
                                        else
                                        {
                                          if (v5 == 214)
                                            v256 = v2;
                                          else
                                            v256 = 0;
                                          v496 = v256;
                                          if (v256)
                                          {
                                            if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                            {
                                              sub_22EFC8E88(v1);
                                              v258 = *(uint64_t **)v257;
                                              v259 = *(unsigned int *)(v257 + 8);
                                              v260 = *(uint64_t **)v257;
                                              if ((_DWORD)v259)
                                              {
                                                v261 = 8 * v259;
                                                v260 = *(uint64_t **)v257;
                                                while (*(_WORD *)(*v260 + 32) != 215)
                                                {
                                                  ++v260;
                                                  v261 -= 8;
                                                  if (!v261)
                                                    goto LABEL_365;
                                                }
                                              }
                                              if (v260 != &v258[v259])
                                              {
                                                do
                                                {
                                                  v272 = *v258++;
                                                  v271 = v272;
                                                }
                                                while (*(_WORD *)(v272 + 32) != 215);
                                                v495 = v271;
                                                sub_22E8FCA40(v4, *(_DWORD *)(v271 + 16), 0xB34u, 0, (uint64_t)v494);
                                                v273 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                sub_22E8FB3C4(v273, &v496);
                                                sub_22E903BEC(v494);
                                                sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v464);
                                                v21 = (unsigned int *)v464;
                                                goto LABEL_595;
                                              }
                                            }
LABEL_365:
                                            if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                                            {
                                              sub_22EFC8E88(v3);
                                              v275 = *(uint64_t **)v274;
                                              v276 = *(unsigned int *)(v274 + 8);
                                              i11 = *(uint64_t **)v274;
                                              if ((_DWORD)v276)
                                              {
                                                v278 = 8 * v276;
                                                for (i11 = *(uint64_t **)v274; *(_WORD *)(*i11 + 32) != 211; ++i11)
                                                {
                                                  v278 -= 8;
                                                  if (!v278)
                                                    return 1;
                                                }
                                              }
                                              if (i11 != &v275[v276])
                                              {
                                                do
                                                {
                                                  v280 = *v275++;
                                                  v279 = v280;
                                                }
                                                while (*(_WORD *)(v280 + 32) != 211);
                                                v495 = v279;
                                                sub_22E8FCA40(v4, *(_DWORD *)(v279 + 16), 0xB34u, 0, (uint64_t)v494);
                                                v281 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                sub_22E8FB3C4(v281, &v496);
                                                sub_22E903BEC(v494);
                                                sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v463);
                                                v21 = (unsigned int *)v463;
                                                goto LABEL_595;
                                              }
                                            }
                                          }
                                          else
                                          {
                                            if (v5 == 216)
                                              v265 = v2;
                                            else
                                              v265 = 0;
                                            v496 = v265;
                                            if (v265)
                                            {
                                              if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                              {
                                                sub_22EFC8E88(v1);
                                                v267 = *(uint64_t **)v266;
                                                v268 = *(unsigned int *)(v266 + 8);
                                                i12 = *(uint64_t **)v266;
                                                if ((_DWORD)v268)
                                                {
                                                  v270 = 8 * v268;
                                                  for (i12 = *(uint64_t **)v266; *(_WORD *)(*i12 + 32) != 217; ++i12)
                                                  {
                                                    v270 -= 8;
                                                    if (!v270)
                                                      return 1;
                                                  }
                                                }
                                                if (i12 != &v267[v268])
                                                {
                                                  do
                                                  {
                                                    v289 = *v267++;
                                                    v288 = v289;
                                                  }
                                                  while (*(_WORD *)(v289 + 32) != 217);
                                                  v495 = v288;
                                                  sub_22E8FCA40(v4, *(_DWORD *)(v288 + 16), 0xB34u, 0, (uint64_t)v494);
                                                  v290 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                  sub_22E8FB3C4(v290, &v496);
                                                  sub_22E903BEC(v494);
                                                  sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v462);
                                                  v21 = (unsigned int *)v462;
                                                  goto LABEL_595;
                                                }
                                              }
                                            }
                                            else
                                            {
                                              if (v5 == 217)
                                                v282 = v2;
                                              else
                                                v282 = 0;
                                              v496 = v282;
                                              if (v282)
                                              {
                                                if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                {
                                                  sub_22EFC8E88(v1);
                                                  v284 = *(uint64_t **)v283;
                                                  v285 = *(unsigned int *)(v283 + 8);
                                                  i13 = *(uint64_t **)v283;
                                                  if ((_DWORD)v285)
                                                  {
                                                    v287 = 8 * v285;
                                                    for (i13 = *(uint64_t **)v283; *(_WORD *)(*i13 + 32) != 216; ++i13)
                                                    {
                                                      v287 -= 8;
                                                      if (!v287)
                                                        return 1;
                                                    }
                                                  }
                                                  if (i13 != &v284[v285])
                                                  {
                                                    do
                                                    {
                                                      v298 = *v284++;
                                                      v297 = v298;
                                                    }
                                                    while (*(_WORD *)(v298 + 32) != 216);
                                                    v495 = v297;
                                                    sub_22E8FCA40(v4, *(_DWORD *)(v297 + 16), 0xB34u, 0, (uint64_t)v494);
                                                    v299 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                    sub_22E8FB3C4(v299, &v496);
                                                    sub_22E903BEC(v494);
                                                    sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v461);
                                                    v21 = (unsigned int *)v461;
                                                    goto LABEL_595;
                                                  }
                                                }
                                              }
                                              else
                                              {
                                                if (v5 == 222)
                                                  v291 = v2;
                                                else
                                                  v291 = 0;
                                                v496 = v291;
                                                if (v291)
                                                {
                                                  if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                  {
                                                    sub_22EFC8E88(v1);
                                                    v293 = *(uint64_t **)v292;
                                                    v294 = *(unsigned int *)(v292 + 8);
                                                    i14 = *(uint64_t **)v292;
                                                    if ((_DWORD)v294)
                                                    {
                                                      v296 = 8 * v294;
                                                      for (i14 = *(uint64_t **)v292; *(_WORD *)(*i14 + 32) != 165; ++i14)
                                                      {
                                                        v296 -= 8;
                                                        if (!v296)
                                                          return 1;
                                                      }
                                                    }
                                                    if (i14 != &v293[v294])
                                                    {
                                                      do
                                                      {
                                                        v307 = *v293++;
                                                        v306 = v307;
                                                      }
                                                      while (*(_WORD *)(v307 + 32) != 165);
                                                      v495 = v306;
                                                      sub_22E8FCA40(v4, *(_DWORD *)(v306 + 16), 0xB34u, 0, (uint64_t)v494);
                                                      v308 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                      sub_22E8FB3C4(v308, &v496);
                                                      sub_22E903BEC(v494);
                                                      sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v460);
                                                      v21 = (unsigned int *)v460;
                                                      goto LABEL_595;
                                                    }
                                                  }
                                                }
                                                else
                                                {
                                                  if (v5 == 226)
                                                    v300 = v2;
                                                  else
                                                    v300 = 0;
                                                  v496 = v300;
                                                  if (v300)
                                                  {
                                                    if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                    {
                                                      sub_22EFC8E88(v1);
                                                      v302 = *(uint64_t **)v301;
                                                      v303 = *(unsigned int *)(v301 + 8);
                                                      i15 = *(uint64_t **)v301;
                                                      if ((_DWORD)v303)
                                                      {
                                                        v305 = 8 * v303;
                                                        for (i15 = *(uint64_t **)v301; *(_WORD *)(*i15 + 32) != 101; ++i15)
                                                        {
                                                          v305 -= 8;
                                                          if (!v305)
                                                            return 1;
                                                        }
                                                      }
                                                      if (i15 != &v302[v303])
                                                      {
                                                        do
                                                        {
                                                          v316 = *v302++;
                                                          v315 = v316;
                                                        }
                                                        while (*(_WORD *)(v316 + 32) != 101);
                                                        v495 = v315;
                                                        sub_22E8FCA40(v4, *(_DWORD *)(v315 + 16), 0xB34u, 0, (uint64_t)v494);
                                                        v317 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                        sub_22E8FB3C4(v317, &v496);
                                                        sub_22E903BEC(v494);
                                                        sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v459);
                                                        v21 = (unsigned int *)v459;
                                                        goto LABEL_595;
                                                      }
                                                    }
                                                  }
                                                  else
                                                  {
                                                    if (v5 == 232)
                                                      v309 = v2;
                                                    else
                                                      v309 = 0;
                                                    v496 = v309;
                                                    if (v309)
                                                    {
                                                      if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                      {
                                                        sub_22EFC8E88(v1);
                                                        v311 = *(uint64_t **)v310;
                                                        v312 = *(unsigned int *)(v310 + 8);
                                                        i16 = *(uint64_t **)v310;
                                                        if ((_DWORD)v312)
                                                        {
                                                          v314 = 8 * v312;
                                                          for (i16 = *(uint64_t **)v310; *(_WORD *)(*i16 + 32) != 291; ++i16)
                                                          {
                                                            v314 -= 8;
                                                            if (!v314)
                                                              return 1;
                                                          }
                                                        }
                                                        if (i16 != &v311[v312])
                                                        {
                                                          do
                                                          {
                                                            v325 = *v311++;
                                                            v324 = v325;
                                                          }
                                                          while (*(_WORD *)(v325 + 32) != 291);
                                                          v495 = v324;
                                                          sub_22E8FCA40(v4, *(_DWORD *)(v324 + 16), 0xB34u, 0, (uint64_t)v494);
                                                          v326 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                          sub_22E8FB3C4(v326, &v496);
                                                          sub_22E903BEC(v494);
                                                          sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v458);
                                                          v21 = (unsigned int *)v458;
                                                          goto LABEL_595;
                                                        }
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if (v5 == 235)
                                                        v318 = v2;
                                                      else
                                                        v318 = 0;
                                                      v496 = v318;
                                                      if (v318)
                                                      {
                                                        if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                        {
                                                          sub_22EFC8E88(v1);
                                                          v320 = *(uint64_t **)v319;
                                                          v321 = *(unsigned int *)(v319 + 8);
                                                          i17 = *(uint64_t **)v319;
                                                          if ((_DWORD)v321)
                                                          {
                                                            v323 = 8 * v321;
                                                            for (i17 = *(uint64_t **)v319;
                                                                  *(_WORD *)(*i17 + 32) != 310;
                                                                  ++i17)
                                                            {
                                                              v323 -= 8;
                                                              if (!v323)
                                                                return 1;
                                                            }
                                                          }
                                                          if (i17 != &v320[v321])
                                                          {
                                                            do
                                                            {
                                                              v334 = *v320++;
                                                              v333 = v334;
                                                            }
                                                            while (*(_WORD *)(v334 + 32) != 310);
                                                            v495 = v333;
                                                            sub_22E8FCA40(v4, *(_DWORD *)(v333 + 16), 0xB34u, 0, (uint64_t)v494);
                                                            v335 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                            sub_22E8FB3C4(v335, &v496);
                                                            sub_22E903BEC(v494);
                                                            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v457);
                                                            v21 = (unsigned int *)v457;
                                                            goto LABEL_595;
                                                          }
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if (v5 == 240)
                                                          v327 = v2;
                                                        else
                                                          v327 = 0;
                                                        v496 = v327;
                                                        if (v327)
                                                        {
                                                          if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                          {
                                                            sub_22EFC8E88(v1);
                                                            v329 = *(uint64_t **)v328;
                                                            v330 = *(unsigned int *)(v328 + 8);
                                                            i18 = *(uint64_t **)v328;
                                                            if ((_DWORD)v330)
                                                            {
                                                              v332 = 8 * v330;
                                                              for (i18 = *(uint64_t **)v328;
                                                                    *(_WORD *)(*i18 + 32) != 330;
                                                                    ++i18)
                                                              {
                                                                v332 -= 8;
                                                                if (!v332)
                                                                  return 1;
                                                              }
                                                            }
                                                            if (i18 != &v329[v330])
                                                            {
                                                              do
                                                              {
                                                                v343 = *v329++;
                                                                v342 = v343;
                                                              }
                                                              while (*(_WORD *)(v343 + 32) != 330);
                                                              v495 = v342;
                                                              sub_22E8FCA40(v4, *(_DWORD *)(v342 + 16), 0xB34u, 0, (uint64_t)v494);
                                                              v344 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                              sub_22E8FB3C4(v344, &v496);
                                                              sub_22E903BEC(v494);
                                                              sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v456);
                                                              v21 = (unsigned int *)v456;
                                                              goto LABEL_595;
                                                            }
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if (v5 == 242)
                                                            v336 = v2;
                                                          else
                                                            v336 = 0;
                                                          v496 = v336;
                                                          if (v336)
                                                          {
                                                            if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                            {
                                                              sub_22EFC8E88(v1);
                                                              v338 = *(uint64_t **)v337;
                                                              v339 = *(unsigned int *)(v337 + 8);
                                                              i19 = *(uint64_t **)v337;
                                                              if ((_DWORD)v339)
                                                              {
                                                                v341 = 8 * v339;
                                                                for (i19 = *(uint64_t **)v337;
                                                                      *(_WORD *)(*i19 + 32) != 45;
                                                                      ++i19)
                                                                {
                                                                  v341 -= 8;
                                                                  if (!v341)
                                                                    return 1;
                                                                }
                                                              }
                                                              if (i19 != &v338[v339])
                                                              {
                                                                do
                                                                {
                                                                  v352 = *v338++;
                                                                  v351 = v352;
                                                                }
                                                                while (*(_WORD *)(v352 + 32) != 45);
                                                                v495 = v351;
                                                                sub_22E8FCA40(v4, *(_DWORD *)(v351 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                v353 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                sub_22E8FB3C4(v353, &v496);
                                                                sub_22E903BEC(v494);
                                                                sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v455);
                                                                v21 = (unsigned int *)v455;
                                                                goto LABEL_595;
                                                              }
                                                            }
                                                          }
                                                          else
                                                          {
                                                            if (v5 == 274)
                                                              v345 = v2;
                                                            else
                                                              v345 = 0;
                                                            v496 = v345;
                                                            if (v345)
                                                            {
                                                              if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                              {
                                                                sub_22EFC8E88(v1);
                                                                v347 = *(uint64_t **)v346;
                                                                v348 = *(unsigned int *)(v346 + 8);
                                                                i20 = *(uint64_t **)v346;
                                                                if ((_DWORD)v348)
                                                                {
                                                                  v350 = 8 * v348;
                                                                  for (i20 = *(uint64_t **)v346;
                                                                        *(_WORD *)(*i20 + 32) != 279;
                                                                        ++i20)
                                                                  {
                                                                    v350 -= 8;
                                                                    if (!v350)
                                                                      return 1;
                                                                  }
                                                                }
                                                                if (i20 != &v347[v348])
                                                                {
                                                                  do
                                                                  {
                                                                    v361 = *v347++;
                                                                    v360 = v361;
                                                                  }
                                                                  while (*(_WORD *)(v361 + 32) != 279);
                                                                  v495 = v360;
                                                                  sub_22E8FCA40(v4, *(_DWORD *)(v360 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                  v362 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                  sub_22E8FB3C4(v362, &v496);
                                                                  sub_22E903BEC(v494);
                                                                  sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v454);
                                                                  v21 = (unsigned int *)v454;
                                                                  goto LABEL_595;
                                                                }
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if (v5 == 279)
                                                                v354 = v2;
                                                              else
                                                                v354 = 0;
                                                              v496 = v354;
                                                              if (v354)
                                                              {
                                                                if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                                {
                                                                  sub_22EFC8E88(v1);
                                                                  v356 = *(uint64_t **)v355;
                                                                  v357 = *(unsigned int *)(v355 + 8);
                                                                  i21 = *(uint64_t **)v355;
                                                                  if ((_DWORD)v357)
                                                                  {
                                                                    v359 = 8 * v357;
                                                                    for (i21 = *(uint64_t **)v355;
                                                                          *(_WORD *)(*i21 + 32) != 274;
                                                                          ++i21)
                                                                    {
                                                                      v359 -= 8;
                                                                      if (!v359)
                                                                        return 1;
                                                                    }
                                                                  }
                                                                  if (i21 != &v356[v357])
                                                                  {
                                                                    do
                                                                    {
                                                                      v370 = *v356++;
                                                                      v369 = v370;
                                                                    }
                                                                    while (*(_WORD *)(v370 + 32) != 274);
                                                                    v495 = v369;
                                                                    sub_22E8FCA40(v4, *(_DWORD *)(v369 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                    v371 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                    sub_22E8FB3C4(v371, &v496);
                                                                    sub_22E903BEC(v494);
                                                                    sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v453);
                                                                    v21 = (unsigned int *)v453;
                                                                    goto LABEL_595;
                                                                  }
                                                                }
                                                              }
                                                              else
                                                              {
                                                                if (v5 == 291)
                                                                  v363 = v2;
                                                                else
                                                                  v363 = 0;
                                                                v496 = v363;
                                                                if (v363)
                                                                {
                                                                  if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                                  {
                                                                    sub_22EFC8E88(v1);
                                                                    v365 = *(uint64_t **)v364;
                                                                    v366 = *(unsigned int *)(v364 + 8);
                                                                    i22 = *(uint64_t **)v364;
                                                                    if ((_DWORD)v366)
                                                                    {
                                                                      v368 = 8 * v366;
                                                                      for (i22 = *(uint64_t **)v364;
                                                                            *(_WORD *)(*i22 + 32) != 232;
                                                                            ++i22)
                                                                      {
                                                                        v368 -= 8;
                                                                        if (!v368)
                                                                          return 1;
                                                                      }
                                                                    }
                                                                    if (i22 != &v365[v366])
                                                                    {
                                                                      do
                                                                      {
                                                                        v379 = *v365++;
                                                                        v378 = v379;
                                                                      }
                                                                      while (*(_WORD *)(v379 + 32) != 232);
                                                                      v495 = v378;
                                                                      sub_22E8FCA40(v4, *(_DWORD *)(v378 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                      v380 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                      sub_22E8FB3C4(v380, &v496);
                                                                      sub_22E903BEC(v494);
                                                                      sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v452);
                                                                      v21 = (unsigned int *)v452;
                                                                      goto LABEL_595;
                                                                    }
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  if (v5 == 310)
                                                                    v372 = v2;
                                                                  else
                                                                    v372 = 0;
                                                                  v496 = v372;
                                                                  if (v372)
                                                                  {
                                                                    if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                                    {
                                                                      sub_22EFC8E88(v1);
                                                                      v374 = *(uint64_t **)v373;
                                                                      v375 = *(unsigned int *)(v373 + 8);
                                                                      i23 = *(uint64_t **)v373;
                                                                      if ((_DWORD)v375)
                                                                      {
                                                                        v377 = 8 * v375;
                                                                        for (i23 = *(uint64_t **)v373;
                                                                              *(_WORD *)(*i23 + 32) != 235;
                                                                              ++i23)
                                                                        {
                                                                          v377 -= 8;
                                                                          if (!v377)
                                                                            return 1;
                                                                        }
                                                                      }
                                                                      if (i23 != &v374[v375])
                                                                      {
                                                                        do
                                                                        {
                                                                          v388 = *v374++;
                                                                          v387 = v388;
                                                                        }
                                                                        while (*(_WORD *)(v388 + 32) != 235);
                                                                        v495 = v387;
                                                                        sub_22E8FCA40(v4, *(_DWORD *)(v387 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                        v389 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                        sub_22E8FB3C4(v389, &v496);
                                                                        sub_22E903BEC(v494);
                                                                        sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v451);
                                                                        v21 = (unsigned int *)v451;
                                                                        goto LABEL_595;
                                                                      }
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    if (v5 == 327)
                                                                      v381 = v2;
                                                                    else
                                                                      v381 = 0;
                                                                    v496 = v381;
                                                                    if (v381)
                                                                    {
                                                                      if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                                      {
                                                                        sub_22EFC8E88(v1);
                                                                        v383 = *(uint64_t **)v382;
                                                                        v384 = *(unsigned int *)(v382 + 8);
                                                                        v385 = *(uint64_t **)v382;
                                                                        if ((_DWORD)v384)
                                                                        {
                                                                          v386 = 8 * v384;
                                                                          v385 = *(uint64_t **)v382;
                                                                          while (*(_WORD *)(*v385 + 32) != 328)
                                                                          {
                                                                            ++v385;
                                                                            v386 -= 8;
                                                                            if (!v386)
                                                                              goto LABEL_543;
                                                                          }
                                                                        }
                                                                        if (v385 != &v383[v384])
                                                                        {
                                                                          do
                                                                          {
                                                                            v397 = *v383++;
                                                                            v396 = v397;
                                                                          }
                                                                          while (*(_WORD *)(v397 + 32) != 328);
                                                                          v495 = v396;
                                                                          sub_22E8FCA40(v4, *(_DWORD *)(v396 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                          v398 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                          sub_22E8FB3C4(v398, &v496);
                                                                          sub_22E903BEC(v494);
                                                                          sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v450);
                                                                          v21 = (unsigned int *)v450;
                                                                          goto LABEL_595;
                                                                        }
                                                                      }
LABEL_543:
                                                                      if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                                                                      {
                                                                        sub_22EFC8E88(v3);
                                                                        v400 = *(uint64_t **)v399;
                                                                        v401 = *(unsigned int *)(v399 + 8);
                                                                        v402 = *(uint64_t **)v399;
                                                                        if ((_DWORD)v401)
                                                                        {
                                                                          v403 = 8 * v401;
                                                                          v402 = *(uint64_t **)v399;
                                                                          while (*(_WORD *)(*v402 + 32) != 127)
                                                                          {
                                                                            ++v402;
                                                                            v403 -= 8;
                                                                            if (!v403)
                                                                              goto LABEL_552;
                                                                          }
                                                                        }
                                                                        if (v402 != &v400[v401])
                                                                        {
                                                                          do
                                                                          {
                                                                            v405 = *v400++;
                                                                            v404 = v405;
                                                                          }
                                                                          while (*(_WORD *)(v405 + 32) != 127);
                                                                          v495 = v404;
                                                                          sub_22E8FCA40(v4, *(_DWORD *)(v404 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                          v406 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                          sub_22E8FB3C4(v406, &v496);
                                                                          sub_22E903BEC(v494);
                                                                          sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v449);
                                                                          v21 = (unsigned int *)v449;
                                                                          goto LABEL_595;
                                                                        }
                                                                      }
LABEL_552:
                                                                      if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                                                                      {
                                                                        sub_22EFC8E88(v3);
                                                                        v408 = *(uint64_t **)v407;
                                                                        v409 = *(unsigned int *)(v407 + 8);
                                                                        i24 = *(uint64_t **)v407;
                                                                        if ((_DWORD)v409)
                                                                        {
                                                                          v411 = 8 * v409;
                                                                          for (i24 = *(uint64_t **)v407;
                                                                                *(_WORD *)(*i24 + 32) != 128;
                                                                                ++i24)
                                                                          {
                                                                            v411 -= 8;
                                                                            if (!v411)
                                                                              return 1;
                                                                          }
                                                                        }
                                                                        if (i24 != &v408[v409])
                                                                        {
                                                                          do
                                                                          {
                                                                            v419 = *v408++;
                                                                            v418 = v419;
                                                                          }
                                                                          while (*(_WORD *)(v419 + 32) != 128);
                                                                          v495 = v418;
                                                                          sub_22E8FCA40(v4, *(_DWORD *)(v418 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                          v420 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                          sub_22E8FB3C4(v420, &v496);
                                                                          sub_22E903BEC(v494);
                                                                          sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v448);
                                                                          v21 = (unsigned int *)v448;
                                                                          goto LABEL_595;
                                                                        }
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      if (v5 == 328)
                                                                        v390 = v2;
                                                                      else
                                                                        v390 = 0;
                                                                      v496 = v390;
                                                                      if (v390)
                                                                      {
                                                                        if ((*(_BYTE *)(v1 + 29) & 1) != 0)
                                                                        {
                                                                          sub_22EFC8E88(v1);
                                                                          v392 = *(uint64_t **)v391;
                                                                          v393 = *(unsigned int *)(v391 + 8);
                                                                          v394 = *(uint64_t **)v391;
                                                                          if ((_DWORD)v393)
                                                                          {
                                                                            v395 = 8 * v393;
                                                                            v394 = *(uint64_t **)v391;
                                                                            while (*(_WORD *)(*v394 + 32) != 327)
                                                                            {
                                                                              ++v394;
                                                                              v395 -= 8;
                                                                              if (!v395)
                                                                                goto LABEL_574;
                                                                            }
                                                                          }
                                                                          if (v394 != &v392[v393])
                                                                          {
                                                                            do
                                                                            {
                                                                              v422 = *v392++;
                                                                              v421 = v422;
                                                                            }
                                                                            while (*(_WORD *)(v422 + 32) != 327);
                                                                            v495 = v421;
                                                                            sub_22E8FCA40(v4, *(_DWORD *)(v421 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                            v423 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                            sub_22E8FB3C4(v423, &v496);
                                                                            sub_22E903BEC(v494);
                                                                            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v447);
                                                                            v21 = (unsigned int *)v447;
                                                                            goto LABEL_595;
                                                                          }
                                                                        }
LABEL_574:
                                                                        if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                                                                        {
                                                                          sub_22EFC8E88(v3);
                                                                          v425 = *(uint64_t **)v424;
                                                                          v426 = *(unsigned int *)(v424 + 8);
                                                                          v427 = *(uint64_t **)v424;
                                                                          if ((_DWORD)v426)
                                                                          {
                                                                            v428 = 8 * v426;
                                                                            v427 = *(uint64_t **)v424;
                                                                            while (*(_WORD *)(*v427 + 32) != 127)
                                                                            {
                                                                              ++v427;
                                                                              v428 -= 8;
                                                                              if (!v428)
                                                                                goto LABEL_583;
                                                                            }
                                                                          }
                                                                          if (v427 != &v425[v426])
                                                                          {
                                                                            do
                                                                            {
                                                                              v430 = *v425++;
                                                                              v429 = v430;
                                                                            }
                                                                            while (*(_WORD *)(v430 + 32) != 127);
                                                                            v495 = v429;
                                                                            sub_22E8FCA40(v4, *(_DWORD *)(v429 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                            v431 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                            sub_22E8FB3C4(v431, &v496);
                                                                            sub_22E903BEC(v494);
                                                                            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v446);
                                                                            v21 = (unsigned int *)v446;
                                                                            goto LABEL_595;
                                                                          }
                                                                        }
LABEL_583:
                                                                        if ((*(_BYTE *)(v3 + 29) & 1) != 0)
                                                                        {
                                                                          sub_22EFC8E88(v3);
                                                                          v433 = *(uint64_t **)v432;
                                                                          v434 = *(unsigned int *)(v432 + 8);
                                                                          i25 = *(uint64_t **)v432;
                                                                          if ((_DWORD)v434)
                                                                          {
                                                                            v436 = 8 * v434;
                                                                            for (i25 = *(uint64_t **)v432;
                                                                                  *(_WORD *)(*i25 + 32) != 128;
                                                                                  ++i25)
                                                                            {
                                                                              v436 -= 8;
                                                                              if (!v436)
                                                                                return 1;
                                                                            }
                                                                          }
                                                                          if (i25 != &v433[v434])
                                                                          {
                                                                            do
                                                                            {
                                                                              v438 = *v433++;
                                                                              v437 = v438;
                                                                            }
                                                                            while (*(_WORD *)(v438 + 32) != 128);
                                                                            v495 = v437;
                                                                            sub_22E8FCA40(v4, *(_DWORD *)(v437 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                            v439 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                            sub_22E8FB3C4(v439, &v496);
                                                                            sub_22E903BEC(v494);
                                                                            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)v445);
                                                                            v21 = (unsigned int *)v445;
                                                                            goto LABEL_595;
                                                                          }
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        if (v5 == 330)
                                                                          v412 = v2;
                                                                        else
                                                                          v412 = 0;
                                                                        v496 = v412;
                                                                        if (v412 && (*(_BYTE *)(v1 + 29) & 1) != 0)
                                                                        {
                                                                          sub_22EFC8E88(v1);
                                                                          v414 = *(uint64_t **)v413;
                                                                          v415 = *(unsigned int *)(v413 + 8);
                                                                          i26 = *(uint64_t **)v413;
                                                                          if ((_DWORD)v415)
                                                                          {
                                                                            v417 = 8 * v415;
                                                                            for (i26 = *(uint64_t **)v413;
                                                                                  *(_WORD *)(*i26 + 32) != 240;
                                                                                  ++i26)
                                                                            {
                                                                              v417 -= 8;
                                                                              if (!v417)
                                                                                return 1;
                                                                            }
                                                                          }
                                                                          if (i26 != &v414[v415])
                                                                          {
                                                                            do
                                                                            {
                                                                              v441 = *v414++;
                                                                              v440 = v441;
                                                                            }
                                                                            while (*(_WORD *)(v441 + 32) != 240);
                                                                            v495 = v440;
                                                                            sub_22E8FCA40(v4, *(_DWORD *)(v440 + 16), 0xB34u, 0, (uint64_t)v494);
                                                                            v442 = sub_22E8FB3C4((uint64_t)v494, &v495);
                                                                            sub_22E8FB3C4(v442, &v496);
                                                                            sub_22E903BEC(v494);
                                                                            sub_22E8FCA40(v4, *(_DWORD *)(v496 + 16), 0x1574u, 0, (uint64_t)&v444);
                                                                            v21 = (unsigned int *)&v444;
                                                                            goto LABEL_595;
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return 1;
}

BOOL sub_22EA404D8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 result;
  uint64_t **v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  size_t v15;
  int v16;
  int v17;

  v2 = *(unsigned __int16 *)(a2 + 32);
  if (v2 == 275)
    v3 = a2;
  else
    v3 = 0;
  if (v2 == 77)
    v4 = a2;
  else
    v4 = 0;
  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v9 = *v8;
  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v11 = *(_QWORD *)v10 + 8 * *(unsigned int *)(v10 + 8);
  }
  else
  {
    v11 = 0;
  }
  if (v9 == (uint64_t *)v11)
    return 0;
  v12 = *(unsigned __int16 *)(a2 + 32);
  while (1)
  {
    v13 = *v9;
    if (*(unsigned __int16 *)(*v9 + 32) != v12)
      goto LABEL_19;
    if (!v4)
      break;
    v14 = *(_DWORD *)(v4 + 36);
    v15 = *(unsigned int *)(v13 + 36);
    if (v14 == (_DWORD)v15 && (!v14 || !memcmp(*(const void **)(v4 + 40), *(const void **)(v13 + 40), v15)))
      return 1;
LABEL_19:
    result = 0;
    if (++v9 == (uint64_t *)v11)
      return result;
  }
  result = 1;
  if (v3 && v12 == 275)
  {
    if ((sub_22F2977C0(v3) & 1) != 0)
    {
      v16 = 0;
    }
    else if (sub_22F31E884(v3))
    {
      v16 = 2;
    }
    else
    {
      v16 = 1;
    }
    if ((sub_22F2977C0(v13) & 1) != 0)
    {
      v17 = 0;
    }
    else if (sub_22F31E884(v13))
    {
      v17 = 2;
    }
    else
    {
      v17 = 1;
    }
    return v16 == v17;
  }
  return result;
}

uint64_t sub_22EA40620(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = result;
  if ((*(_WORD *)(result + 72) & 0x80) != 0)
    result = sub_22EFCC320(result + 64);
  v2 = *(_QWORD *)(v1 + 80);
  if (v2)
  {
    while (1)
    {
      if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 49 >= 3)
        v3 = 0;
      else
        v3 = v2;
      if ((*(_DWORD *)(v2 + 28) & 0x7F) == 0x44)
        v3 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * *(unsigned int *)(v2 + 64) - 8);
      if (v3)
      {
        if ((*(_DWORD *)(v3 + 72) & 3) != 0 && (*(_DWORD *)(v3 + 72) & 3) != 3)
          break;
      }
      v2 = *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v2)
        return result;
    }
    return *(unsigned int *)(v3 + 24);
  }
  return result;
}

uint64_t sub_22EA406B0(uint64_t a1, uint64_t a2, __int128 *a3, int a4, int a5)
{
  __int128 v6;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = a1 + 24;
  *(_QWORD *)(a1 + 16) = 0x800000000;
  *(_QWORD *)(a1 + 88) = 0;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = a2;
  v6 = *a3;
  *(_QWORD *)(a1 + 136) = *((_QWORD *)a3 + 2);
  *(_OWORD *)(a1 + 120) = v6;
  *(_QWORD *)(a1 + 144) = 0;
  *(_DWORD *)(a1 + 152) = a4;
  *(_DWORD *)(a1 + 156) = 0;
  *(_BYTE *)(a1 + 160) = a5 != 0;
  *(_BYTE *)(a1 + 161) = a5 == 2;
  *(_BYTE *)(a1 + 162) = 1;
  *(_BYTE *)(a1 + 163) = a5 == 0;
  *(_WORD *)(a1 + 164) = 0;
  *(_BYTE *)(a1 + 166) = 0;
  sub_22EC56024(a1);
  return a1;
}

void *sub_22EA40740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  const void *v8;
  unint64_t v9;
  uint64_t v10;
  void *result;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[2];

  v4 = a4;
  v5 = a2;
  if ((a1 & 0xF) != 0)
  {
    a1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
    if ((a1 & 0xFFFFFFFFFFFFFFF0) != 0)
      v13 = *(_QWORD *)((char *)&unk_22F46A2E8
                      + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
    else
      v13 = 1;
    v5 = (a2 + v13 - 1) & -v13;
  }
  if ((a3 & 0xF) != 0)
  {
    a3 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
    if ((a3 & 0xFFFFFFFFFFFFFFF0) != 0)
      v14 = *(_QWORD *)((char *)&unk_22F46A2E8
                      + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
    else
      v14 = 1;
    v4 = (a4 + v14 - 1) & -v14;
  }
  if ((a1 & 0xF) != 0)
    goto LABEL_4;
  v12 = *(unsigned __int8 *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v12 != 39)
  {
    if (a1 && v12 == 37)
    {
      result = (void *)((uint64_t (*)(void))sub_22EA40740)();
      *(_DWORD *)v4 = *(_DWORD *)v5;
LABEL_16:
      *(_DWORD *)(v4 + 4) = *(_DWORD *)(v5 + 4);
      return result;
    }
LABEL_4:
    v6 = *(_QWORD *)(a1 + 32);
    if (v6 >= 0x10 && (v6 & 0xF) == 0)
      v15 = *(_QWORD *)((char *)&unk_22F46A2E8
                      + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
    else
      v15 = 1;
    v8 = (const void *)((v5 + v15 + 15) & -v15);
    v9 = *(_QWORD *)(a3 + 32);
    v10 = 1;
    if (v9 >= 0x10 && (v9 & 0xF) == 0)
      v10 = *(_QWORD *)((char *)&unk_22F46A2E8
                      + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
    v16[0] = v9;
    v16[1] = (v4 + v10 + 15) & -v10;
    if ((v6 & 0xF) == 0 && v6 && *(_BYTE *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) == 5)
      result = (void *)sub_22EA40740(v6, v8);
    else
      result = sub_22F1164A8(v16, v6, v8);
    *(_DWORD *)v4 = *(_DWORD *)v5;
    *(_QWORD *)(v4 + 8) = *(_QWORD *)(v5 + 8);
    goto LABEL_16;
  }
  if (!a1)
    goto LABEL_4;
  result = (void *)((uint64_t (*)(void))sub_22EA40740)();
  *(_DWORD *)v4 = *(_DWORD *)v5;
  return result;
}

void sub_22EA40A3C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 157)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 157)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

uint64_t sub_22EA40B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  BOOL v7;
  int v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  unint64_t i;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v24;
  unint64_t v25;

  *(_DWORD *)(a3 + 8) = 0;
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_BYTE *)(v6 + 16) == 26;
  else
    v7 = 0;
  if (v7
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26 && (v6 = sub_22F10CF48(v6)) != 0)
  {
    v8 = (unsigned __int16)(*(_QWORD *)(v6 + 16) >> 38);
  }
  else
  {
    v8 = 0;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
    v10 = *(_BYTE *)(v9 + 16) == 26;
  else
    v10 = 0;
  if (v10
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26 && (v9 = sub_22F10CF48(v9)) != 0)
  {
    v11 = (unsigned __int16)(*(_QWORD *)(v9 + 16) >> 38);
  }
  else
  {
    v11 = 0;
  }
  if (v8 != v11)
    return 0;
  for (i = 0; ; ++i)
  {
    v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFFFF0);
    v14 = v13 && *(_BYTE *)(v13 + 16) == 26;
    if (v14
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
      && (v13 = sub_22F10CF48(v13)) != 0)
    {
      v15 = (unsigned __int16)(*(_QWORD *)(v13 + 16) >> 38);
    }
    else
    {
      v15 = 0;
    }
    if (i >= v15)
      break;
    v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 120) + 8 * i) + 48);
    v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 120) + 8 * i) + 48);
    if (*(_QWORD *)(*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
    {
      v18 = sub_22EA41014(v16);
      v25 = v18;
      v19 = sub_22EA41014(v17);
      v24 = v19;
      v20 = sub_22F10AC24(&v25);
      v21 = sub_22F10AC24(&v24);
      if (*(_QWORD *)(*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
        && (!v20 || v20 != v21))
      {
        return 0;
      }
      v22 = *(unsigned int *)(a3 + 8);
      if (v22 >= *(unsigned int *)(a3 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v22 = *(unsigned int *)(a3 + 8);
      }
      *(_DWORD *)(*(_QWORD *)a3 + 4 * v22) = i;
      ++*(_DWORD *)(a3 + 8);
    }
  }
  return 1;
}

void sub_22EA40D44()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22EA40D58(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unsigned int v19;
  void *v21[2];
  uint64_t v22;

  v3 = *(_DWORD *)(a2 + 40);
  if (v3 <= 0x2710)
  {
    v4 = *(_DWORD *)(a2 + 44);
    if (v4 <= 0x2710)
    {
      v5 = *(_DWORD *)(a2 + 48);
      if (v5 <= 0x2710)
      {
        v19 = 100 * v3 + 110 * v4 + 150 * v5;
        if (v19 <= 0x2710 && (unsigned __int16)(v19 + 50) < 0x64u)
          return 0;
      }
    }
  }
  v21[0] = &v22;
  v21[1] = (void *)0x100000000;
  v6 = *(unsigned int *)(a2 + 24);
  v7 = *(_QWORD **)(a2 + 16);
  if ((_DWORD)v6 && !*v7)
    v8 = &v7[v6];
  else
    v8 = *(uint64_t **)(a2 + 16);
  v9 = &v7[v6];
  if (v8 == v9)
    return 0;
  while (1)
  {
    v10 = *v8;
    if (*v8)
      v11 = (*(_DWORD *)(*v8 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA;
    else
      v11 = 0;
    if (!v11
      || ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 72))(*v8) & 1) != 0
      || !sub_22EA40B08(v10, *(_QWORD *)(a1 + 40), (uint64_t)v21))
    {
      goto LABEL_40;
    }
    if ((*(_DWORD *)(v10 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFC)
      break;
    if (!*(_QWORD *)(a1 + 48))
      goto LABEL_50;
LABEL_40:
    if (++v8 == v9)
    {
      v18 = 0;
      goto LABEL_44;
    }
  }
  v12 = *(_WORD *)(v10 + 80) & 0x7F;
  v13 = -40;
  if (v12 > 0x46)
  {
    if (v12 != 83)
    {
      if (v12 == 71)
      {
        v13 = -56;
      }
      else if (v12 != 81)
      {
        goto LABEL_30;
      }
    }
  }
  else
  {
    if (v12 > 0x18)
      goto LABEL_29;
    if (v12 == 16)
      goto LABEL_22;
    if (((1 << v12) & 0x1066) == 0)
    {
      if (v12 == 24)
      {
LABEL_22:
        v13 = -48;
      }
      else
      {
LABEL_29:
        if (v12 == 70)
        {
          v13 = -64;
        }
        else
        {
LABEL_30:
          v14 = v12 - 52;
          if (v12 - 33 >= 5)
            v15 = -48;
          else
            v15 = -64;
          if (v14 >= 6)
            v13 = v15;
          else
            v13 = -72;
        }
      }
    }
  }
  v16 = *(_QWORD *)(v10 + 72 + v13 + 16);
  v17 = (_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  if ((v16 & 4) != 0)
    v17 = (_QWORD *)*v17;
  if (!v17 || (*(uint64_t (**)(_QWORD *))(*(v17 - 8) + 32))(v17 - 8) != *(_QWORD *)(a1 + 48))
    goto LABEL_40;
LABEL_50:
  v18 = 1;
LABEL_44:
  if (v21[0] != &v22)
    free(v21[0]);
  return v18;
}

__n128 sub_22EA40FAC@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;

  v4 = operator new();
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)v4 = &off_24FAB78D0;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v4 + 32) = result;
  *(_QWORD *)(v4 + 48) = *(_QWORD *)(a1 + 48);
  *a2 = v4;
  return result;
}

unint64_t sub_22EA41014(uint64_t a1)
{
  uint64_t i;
  uint64_t v2;
  int v3;
  int v4;

void sub_22EA4108C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 351)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 351)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

unint64_t sub_22EA41158(unint64_t *a1)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v1 = *a1;
  v2 = a1[1];
  while ((v1 & 0xF) == 0)
  {
    v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v3 == 7)
      break;
    if (v3 == 37)
    {
      v4 = 37;
      if (v1)
      {
        v12 = *(_QWORD *)(v1 + 32);
        v6 = v2;
        v7 = sub_22F115954(v12);
        v8 = v6 + v7 + 7;
LABEL_25:
        v2 = v8 / v7 * v7;
        goto LABEL_26;
      }
      goto LABEL_7;
    }
    if (v3 == 24)
    {
      v14 = v2;
      if (v1)
      {
        v12 = *(_QWORD *)(v1 + 40);
        v10 = sub_22F115954(v12);
        v11 = v14 + v10 + 15;
        goto LABEL_30;
      }
      v4 = 24;
      goto LABEL_23;
    }
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v3 == 8)
    {
      v14 = v2;
      if (v1)
      {
        v12 = *(_QWORD *)(v1 + 32);
        v10 = sub_22F115954(v12);
        v11 = v14 + v10;
        goto LABEL_30;
      }
      v4 = 8;
LABEL_23:
      v1 = 0;
      v2 = v14;
    }
LABEL_7:
    if ((v3 & 0xFE) != 0)
    {
      if (!v1 || v4 != 28)
        break;
      v12 = *(_QWORD *)(v1 + 24);
      v9 = v2;
      v7 = sub_22F115954(v12);
      v8 = v9 + v7 + 3;
      goto LABEL_25;
    }
    v13 = v2;
    if (!v1)
      break;
    v12 = *(_QWORD *)(v1 + 32);
    v10 = sub_22F115954(v12);
    v11 = v13 + v10 - 1;
LABEL_30:
    v2 = v11 / v10 * v10;
LABEL_26:
    v1 = v12;
  }
  if ((v1 & 0xF) != 0)
    return 0;
  if (*(_BYTE *)(*(_QWORD *)(v1 & 0xFFFFFFFFFFFFFFF0) + 16) == 7)
    return v1;
  return 0;
}

void sub_22EA412F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = v2;
    v4 = *(uint64_t **)v2;
    v5 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v5)
    {
      v6 = &v4[v5];
      v7 = 8 * v5 - 8;
      v8 = *(uint64_t **)v2;
      v9 = *(uint64_t **)v2;
      while (1)
      {
        v10 = *v9++;
        if (sub_22EFA5610(v10))
          break;
        v7 -= 8;
        v8 = v9;
        if (v9 == v6)
          goto LABEL_9;
      }
      if (v9 == v6)
      {
        v6 = v8;
      }
      else
      {
        v12 = 1;
        v6 = v8;
        do
        {
          v13 = v8[v12];
          if ((sub_22EFA5610(v13) & 1) == 0)
            *v6++ = v13;
          ++v12;
          v7 -= 8;
        }
        while (v7);
        v4 = *(uint64_t **)v3;
      }
    }
    else
    {
      v6 = *(uint64_t **)v2;
    }
LABEL_9:
    v11 = (unint64_t)((char *)v6 - (char *)v4) >> 3;
    *(_DWORD *)(v3 + 8) = v11;
    if (!(_DWORD)v11)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

BOOL sub_22EA413DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v5;
  uint64_t *v6;

  v2 = a2;
  if (a1 < a2)
  {
    v5 = a1;
    while ((sub_22EFA5610(*v5) & 1) == 0)
    {
      ++v5;
      a1 = v2;
      v3 = v2;
      if (v5 == v2)
        return a1 == v3;
    }
    a1 = v5;
    v3 = v2;
  }
  else
  {
    v3 = a1;
    if (a2 != a1)
    {
      while (1)
      {
        v6 = a1;
        if ((sub_22EFA5610(*v2) & 1) != 0)
          break;
        ++v2;
        a1 = v6;
        v3 = v6;
        if (v2 == v6)
          return a1 == v3;
      }
      v3 = v2;
      a1 = v6;
    }
  }
  return a1 == v3;
}

uint64_t sub_22EA4147C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  void *v12;
  _QWORD *v13;
  size_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unsigned int v22;
  BOOL v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  BOOL v31;
  int32x4_t v32;
  int32x4_t v33;
  int32x4_t v34;
  uint8x16_t v35;
  __int32 v36;
  BOOL v39;
  uint64_t v40;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int8x16_t v47;
  int8x16_t v48;
  uint64_t v49;
  int v50;
  int v51;
  BOOL v52;
  BOOL v53;
  char v54;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  _QWORD v60[2];
  char v61;
  _OWORD v62[4];
  _QWORD v63[2];

  v63[1] = *MEMORY[0x24BDAC8D0];
  v58 = a2;
  v3 = a2 & 0xFFFFFFFFFFFFFFF0;
  v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v4 + 17) & 4) != 0)
    return 4;
  v5 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v5 != 39 && (v5 & 0xFE) != 0x28)
  {
    v6 = a2;
    v57 = a1;
    v7 = *(_QWORD *)(a1 + 88);
    v62[0] = xmmword_24FAB78F8;
    v62[1] = *(_OWORD *)&off_24FAB7908;
    v62[2] = xmmword_24FAB7918;
    v62[3] = *(_OWORD *)&off_24FAB7928;
    while (1)
    {
      v8 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v8 + 8) & 0xF) != 0)
        v8 = (unint64_t)sub_22F10D2BC(v6);
      v59 = v8 & 0xFFFFFFFFFFFFFFF0;
      sub_22F1192C0(&v59, (uint64_t)v60);
      v9 = 0;
      v10 = 0;
      v11 = v61;
      v12 = (void *)v60[0];
      if (v61 >= 0)
        v13 = v60;
      else
        v13 = (_QWORD *)v60[0];
      if (v61 >= 0)
        v14 = v61 & 0x7F;
      else
        v14 = v60[1];
      while (1)
      {
        if (*((_QWORD *)&v62[v9] + 1) == v14)
        {
          if (!v14)
          {
            v15 = (char *)&v62[v10];
            if ((v11 & 0x80000000) == 0)
              goto LABEL_21;
            goto LABEL_20;
          }
          if (!memcmp(*(const void **)&v62[v9], v13, v14))
            break;
        }
        ++v10;
        if (++v9 == 4)
        {
          v15 = (char *)v63;
          if ((v11 & 0x80000000) == 0)
            goto LABEL_21;
          goto LABEL_20;
        }
      }
      v15 = (char *)&v62[v9];
      if (v11 < 0)
LABEL_20:
        operator delete(v12);
LABEL_21:
      if (v15 - (char *)v62 != 64)
        return 4;
      v16 = sub_22F4098F0(v6, v7);
      v23 = v16 == v6;
      v6 = v16;
      if (v23)
      {
        v26 = *(_QWORD *)v3;
        v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 8) & 0xFFFFFFFFFFFFFFF0);
        v28 = *(_DWORD *)(v27 + 16);
        v29 = v28 & 0xFF800FF;
        v31 = v29 == 17301515 || v29 == 17825803;
        if (v27)
        {
          *(int8x8_t *)v32.i8 = vand_s8((int8x8_t)vdup_n_s32(v28), (int8x8_t)0xFF000FF0FC000FFLL);
          v32.i64[1] = __PAIR64__(v32.u32[1], v29);
          v33 = vdupq_laneq_s32(v32, 2);
          v32.i32[3] = v28 & 0xFF800FF;
          v34 = vdupq_n_s32(v29);
          v35 = (uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vceqq_s32(v32, (int32x4_t)xmmword_22F45AEC0), (int16x8_t)vceqq_s32(v33, (int32x4_t)xmmword_22F45AEB0)), (int8x16_t)vuzp1q_s16((int16x8_t)vceqq_s32(v33, (int32x4_t)xmmword_22F45AED0), (int16x8_t)vceqq_s32(v33, (int32x4_t)xmmword_22F45AEE0)));
          v35.i8[0] = vmaxvq_u8(v35);
          v36 = v35.i32[0];
          *(int8x8_t *)v35.i8 = vmovn_s16(vuzp1q_s16((int16x8_t)vceqq_s32(v34, (int32x4_t)xmmword_22F45AEF0), (int16x8_t)vceqq_s32(v34, (int32x4_t)xmmword_22F45AF00)));
          v35.i8[0] = vmaxv_u8(*(uint8x8_t *)v35.i8);
          if ((v36 | v35.i32[0]) & 1 | ((v28 & 0xFF800FF) == 16777227 || v31))
            return 2;
        }
        if (v27 && v29 == 18350091)
          return 2;
        v39 = v29 == 87031819 || v29 == 116916235 || v29 == 118489099;
        if (!v27 || !v39)
        {
          if (*(_DWORD *)(v27 + 16) - 55 > 1)
            goto LABEL_78;
          if (*(unsigned __int8 *)(v26 + 16) - 57 <= 0xFFFFFFFD)
            v26 = sub_22F10CF48(v26);
          v40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v26 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (!v40 || (*(_DWORD *)(v40 + 16) & 0xFF800FF) != 87031819)
          {
LABEL_78:
            v42 = sub_22F420564(v57 + 24, (uint64_t)"cl_khr_fp16", 11, *(_QWORD *)(v57 + 72));
            v43 = *(_QWORD *)v3;
            v44 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 8) & 0xFFFFFFFFFFFFFFF0);
            if (v42 || !v44 || (*(_DWORD *)(v44 + 16) & 0xFF800FF) != 0x690000B)
            {
              if ((*(_DWORD *)(v44 + 16) & 0xFEu) - 2 > 3)
              {
                v46 = *(_QWORD *)(v57 + 72);
                if ((*(_BYTE *)(v46 + 60) & 1) != 0)
                {
                  if (sub_22F420564(v57 + 24, (uint64_t)"__cl_clang_non_portable_kernel_param_types", 42, v46))
                    goto LABEL_103;
                  v49 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 8) & 0xFFFFFFFFFFFFFFF0);
                  v50 = *(_DWORD *)(v49 + 16);
                  v51 = v50 & 0xFF000FF;
                  if (v49)
                  {
                    if (v51 == 116391947)
                      goto LABEL_103;
                  }
                  if ((v47.i32[0] = *(_DWORD *)(v49 + 16),
                        v48.i32[0] = 264241407,
                        v47.i64[0] = vandq_s8(v47, v48).u64[0],
                        v49)
                    && vmaxv_u16((uint16x4_t)vmovn_s32(vceqq_s32(vdupq_lane_s32(*(int32x2_t *)v47.i8, 0), (int32x4_t)xmmword_22F45AEA0))) & 1 | ((v50 & 0xFE000FF) == 16777227)|| (v51 != 117440523 ? (v52 = (v50 & 0xFF800FF) == 118489099) : (v52 = 1), v52 ? (v53 = v49 == 0) : (v53 = 1), v53 ? (v54 = 0) : (v54 = 1), *(_DWORD *)(v49 + 16) == 38 || (v54 & 1) != 0))
                  {
LABEL_103:
                    v43 = *(_QWORD *)v3;
                  }
                  else
                  {
                    v56 = v47.i32[0] == 20971531 || (v50 & 0xFE000FF) == 18874379;
                    if (!v49 || (v43 = *(_QWORD *)v3, !v56))
                    {
                      if (!sub_22F111438(&v58, *(_QWORD *)(v57 + 88)))
                        return 4;
                      v43 = *(_QWORD *)v3;
                    }
                  }
                }
                if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
                  return 5;
                else
                  return 0;
              }
              else
              {
                if (*(_DWORD *)(v44 + 16) == 39 || *(_DWORD *)(v44 + 16) == 32)
                {
                  v45 = *(_QWORD *)(sub_22F10ACF8(v43) & 0xFFFFFFFFFFFFFFF0);
                }
                else
                {
                  if (v43)
                    goto LABEL_92;
LABEL_93:
                  while ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
                  {
                    v45 = v43;
                    v43 = sub_22F10CF48(v43);
                    if (!v43)
                      return sub_22EA4147C(v57, v45 & 0xFFFFFFFFFFFFFFF0);
                    while (1)
                    {
                      v43 = *(_QWORD *)(*(_QWORD *)(v43 + 32) & 0xFFFFFFFFFFFFFFF0);
                      if (!v43)
                        break;
LABEL_92:
                      if ((*(_DWORD *)(v43 + 16) & 0xFEu) - 6 <= 0xFFFFFFFB)
                        goto LABEL_93;
                    }
                  }
                  v45 = v43;
                }
                return sub_22EA4147C(v57, v45 & 0xFFFFFFFFFFFFFFF0);
              }
            }
          }
        }
        return 4;
      }
    }
  }
  v17 = sub_22F10ACF8(v4);
  v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v19 & 8) == 0)
    return 3;
  v21 = v17;
  result = 3;
  v22 = *(_DWORD *)((v19 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800;
  if (v22)
  {
    v23 = v22 == 0x2000 || v22 == 10240;
    if (!v23)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
      {
        v24 = *(_QWORD *)(a1 + 72);
        if ((*(_BYTE *)(v24 + 60) & 1) == 0
          || sub_22F420564(a1 + 24, (uint64_t)"__cl_clang_non_portable_kernel_param_types", 42, v24))
        {
          return 2;
        }
        v25 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 6
           || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFF800FF) == 86507531;
        if (v25 || sub_22F1120D0(*v18))
          return 2;
        return 4;
      }
      LODWORD(result) = sub_22EA4147C(a1, v21);
      if ((result - 3) >= 2)
        return 1;
      else
        return result;
    }
  }
  return result;
}

uint64_t sub_22EA41AB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v8;

  *(_QWORD *)a1 = &unk_24FAC3190;
  *(_QWORD *)(a1 + 8) = 2 * sub_22EA41B5C(a3);
  *(_QWORD *)(a1 + 16) = a3 & 0xFFFFFFFFFFFFFFFBLL;
  *(_DWORD *)(a1 + 24) = a4;
  v8 = *(_DWORD *)(a1 + 28) & 0xC0000000;
  *(_DWORD *)(a1 + 28) = v8 & 0xC000FF80 | a2 & 0x7F | ((sub_22EFCA90C(a2) & 0x3FFF) << 16) | 0x6000;
  *(_BYTE *)(a1 + 32) &= 0xF8u;
  if (byte_255E04EB0)
    sub_22F3B0FB8(a2);
  return a1;
}

uint64_t sub_22EA41B5C(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!a1)
    return 0;
  v1 = *(_WORD *)(a1 + 8) & 0x7F;
  v2 = -40;
  if (v1 > 0x46)
  {
    switch(v1)
    {
      case 'S':
        goto LABEL_18;
      case 'G':
        v2 = -56;
        goto LABEL_18;
      case 'Q':
        goto LABEL_18;
    }
  }
  else
  {
    if (v1 <= 0x18)
    {
      if (v1 == 16)
        goto LABEL_5;
      if (((1 << v1) & 0x1066) != 0)
        goto LABEL_18;
      if (v1 == 24)
      {
LABEL_5:
        v2 = -48;
        goto LABEL_18;
      }
    }
    if (v1 == 70)
    {
      v2 = -64;
      goto LABEL_18;
    }
  }
  v3 = v1 - 52;
  v4 = v1 - 33 >= 5;
  v5 = -48;
  if (!v4)
    v5 = -64;
  if (v3 >= 6)
    v2 = v5;
  else
    v2 = -72;
LABEL_18:
  v6 = a1 + v2;
  v7 = (*(_DWORD *)(v6 + 8) >> 1) & 3;
  if ((_DWORD)v7 && (*(_BYTE *)(v6 + 29) & 0x80) != 0 && !sub_22EFC76C0(v6))
    return 0;
  return v7;
}

uint64_t sub_22EA41C40(_QWORD *a1, uint64_t a2)
{
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 **i;
  unsigned __int8 **v14;
  int v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned __int8 **v18;
  _BOOL8 v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  _QWORD v24[4];
  __int16 v25;
  void *__p;
  char v27;
  int v28;
  _QWORD v29[2];
  void **v30[12];
  __int128 v31;
  _QWORD v32[7];

  sub_22EFC8E88(a2);
  v5 = *v4;
  v6 = *((unsigned int *)v4 + 2);
  if ((_DWORD)v6 && *(_WORD *)(*v5 + 32) != 327)
  {
    v7 = 8 * v6 - 8;
    v8 = *v4;
    do
    {
      v9 = v8[1];
      ++v8;
      v7 -= 8;
    }
    while (*(_WORD *)(v9 + 32) != 327);
  }
  do
  {
    v11 = *v5++;
    v10 = v11;
  }
  while (*(_WORD *)(v11 + 32) != 327);
  sub_22E639F38(*(_DWORD **)(v10 + 40), *(unsigned int *)(v10 + 36), &v31);
  v12 = *(_QWORD *)(a1[11] + 15088);
  if (v32[1] && ((*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v12 + 592))(v12, v32[0]) & 1) == 0)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xB69u, 0, (uint64_t)v30);
    v22 = 1;
    LODWORD(v24[0]) = 1;
    sub_22E8900C4((uint64_t)v30, (int *)v24);
    sub_22F2F2210((uint64_t)v30, (uint64_t)v32);
    sub_22E903BEC((unsigned int *)v30);
  }
  else
  {
    v14 = (unsigned __int8 **)*((_QWORD *)&v31 + 1);
    for (i = (unsigned __int8 **)v31; ; i += 3)
    {
      if (i == v14)
      {
        v22 = 0;
        goto LABEL_26;
      }
      v15 = *((char *)i + 23);
      v16 = *i;
      v17 = i[1];
      if (v15 >= 0)
        v18 = i;
      else
        v18 = (unsigned __int8 **)*i;
      if (v15 >= 0)
        v17 = (unsigned __int8 *)*((unsigned __int8 *)i + 23);
      v19 = v17 != 0;
      v20 = v17 ? (uint64_t)v18 + 1 : (uint64_t)v18;
      v21 = &v17[-v19];
      v29[0] = v20;
      v29[1] = &v17[-v19];
      LODWORD(v16) = v15 < 0 ? *v16 : v16;
      if ((_DWORD)v16 == 45)
        break;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, unsigned __int8 *))(*(_QWORD *)v12 + 576))(v12, v20, &v17[-v19])|| ((*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *))(*(_QWORD *)v12 + 536))(v12, v20, v21) & 1) == 0)
      {
        sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xB69u, 0, (uint64_t)v30);
        LODWORD(v24[0]) = 0;
        sub_22E8900C4((uint64_t)v30, (int *)v24);
        sub_22F2F2210((uint64_t)v30, (uint64_t)v29);
        goto LABEL_31;
      }
    }
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xB69u, 0, (uint64_t)v30);
    v28 = 0;
    sub_22E8900C4((uint64_t)v30, &v28);
    v25 = 1283;
    v24[0] = "no-";
    v24[2] = v20;
    v24[3] = v21;
    llvm::Twine::str((llvm::Twine *)v24);
    sub_22F2F3734((uint64_t)v30, &__p);
    if (v27 < 0)
      operator delete(__p);
LABEL_31:
    sub_22E903BEC((unsigned int *)v30);
    v22 = 1;
  }
LABEL_26:
  v30[0] = (void **)&v31;
  sub_22E3B3CC8(v30);
  return v22;
}

uint64_t sub_22EA41EB0(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  _BOOL8 v9;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned __int8 *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t i;
  uint64_t v22;
  int v23;
  unint64_t v24;
  unint64_t v25;
  int v26;
  int v27;
  _OWORD *v28;
  unint64_t v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  int v37;
  char v38;
  unsigned int v39[24];
  unsigned int v40[24];

  if ((*(_DWORD *)(*(_QWORD *)(a1[11] + 15088) + 56) - 41) >= 2)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xF83u, 0, (uint64_t)v40);
    sub_22E903BEC(v40);
    if (a2)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x6Cu, 0, (uint64_t)v39);
      sub_22E903BEC(v39);
    }
    return 1;
  }
  if (!a2 || !a4)
  {
    if ((sub_22EA42178(a1, a3, 0, a5) & 1) == 0)
      goto LABEL_13;
    return 1;
  }
  if ((sub_22EA42178(a1, a2, a3, a5) & 1) != 0 || (sub_22EA42178(a1, a3, 0, a5) & 1) != 0)
    return 1;
  if (sub_22EFC9084(a2, 0))
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xF7Cu, 0, (uint64_t)&v34);
    v9 = v38 != 0;
    sub_22E903BEC((unsigned int *)&v34);
    return v9;
  }
LABEL_13:
  v11 = a5 & 0xFFFFFFFE;
  v12 = a1[11] + 2128;
  v31 = 0;
  v32 = v12;
  v33 = 3969;
  v34 = *(_DWORD *)(a3 + 24);
  v13 = v34;
  v37 = 5817;
  v35 = 0;
  v36 = v12;
  v14 = (unsigned __int8 *)sub_22E3B8AAC(v12);
  v15 = *v14;
  v14[v15 + 1] = 3;
  *v14 = v15 + 1;
  *(_QWORD *)&v14[8 * v15 + 16] = a5;
  v27 = v13;
  v30 = 3967;
  v29 = v12;
  v16 = (_OWORD *)sub_22E3B8AAC(v12);
  v28 = v16;
  v17 = *((_OWORD *)v14 + 5);
  v19 = *((_OWORD *)v14 + 2);
  v18 = *((_OWORD *)v14 + 3);
  v16[4] = *((_OWORD *)v14 + 4);
  v16[5] = v17;
  v16[2] = v19;
  v16[3] = v18;
  v20 = *((_OWORD *)v14 + 1);
  *v16 = *(_OWORD *)v14;
  v16[1] = v20;
  for (i = 96; i != 336; i += 24)
    std::string::operator=((std::string *)((char *)v16 + i), (const std::string *)&v14[i]);
  sub_22E78D560((uint64_t)(v16 + 21), (uint64_t)(v14 + 336));
  sub_22E78D658((uint64_t)(v16 + 28), (uint64_t *)v14 + 56);
  v22 = a1[11] + 2128;
  v23 = *(_DWORD *)(a3 + 24);
  v26 = 3965;
  v24 = 0;
  v25 = v22;
  v9 = sub_22EA273B0(a1, a2, a3, (uint64_t)&v31, &v34, &v27, &v23, 0, v11 != 2, 0);
  if (v24 && v25)
    sub_22E3BB10C(v25, v24);
  if (v28 && v29)
  {
    sub_22E3BB10C(v29, (unint64_t)v28);
    v28 = 0;
  }
  sub_22E3BB10C(v12, (unint64_t)v14);
  if (v35 && v36)
    sub_22E3BB10C(v36, v35);
  if (v31 && v32)
    sub_22E3BB10C(v32, v31);
  return v9;
}

uint64_t sub_22EA42178(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t result;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17[24];
  uint64_t v18;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v10 = *v9;
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v12 = *(_QWORD *)v11 + 8 * *(unsigned int *)(v11 + 8);
  }
  else
  {
    v12 = 0;
  }
  if (v10 == v12)
    return 0;
  while (1)
  {
    v13 = *(unsigned __int16 *)(*(_QWORD *)v10 + 32);
    if (v13 > 0x146)
      break;
    if (v13 - 127 < 2)
    {
      if (a4 - 4 <= 0xFFFFFFFD)
        goto LABEL_25;
    }
    else if (v13 != 81 && v13 != 239)
    {
      goto LABEL_25;
    }
LABEL_23:
    result = 0;
    v10 += 8;
    if (v10 == v12)
      return result;
  }
  if (v13 == 327)
  {
    if (a4 != 1)
      goto LABEL_25;
    goto LABEL_23;
  }
  if (v13 == 328)
  {
    if (a4 != 4)
      goto LABEL_25;
    goto LABEL_23;
  }
  if (v13 == 340 && a4 == 1)
    goto LABEL_23;
LABEL_25:
  v18 = *(_QWORD *)v10;
  sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xF7Eu, 0, (uint64_t)v17);
  v16 = a4;
  v15 = sub_22E89519C((uint64_t)v17, &v16);
  sub_22E8FB3C4(v15, &v18);
  sub_22E903BEC(v17);
  if (a3)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x16B9u, 0, (uint64_t)v17);
    sub_22E903BEC(v17);
  }
  return 1;
}

double sub_22EA422EC(uint64_t a1, unsigned int a2, _DWORD *a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  double result;

  sub_22E639F38(a3, a2, (_OWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  v5 = 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * ((v4 - *(_QWORD *)a1) >> 3));
  if (v4 == *(_QWORD *)a1)
    v6 = 0;
  else
    v6 = v5;
  *(_QWORD *)&result = sub_22EA42348(*(_QWORD *)a1, v4, v6, 1).n128_u64[0];
  return result;
}

__n128 sub_22EA42348(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  const void **v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  __n128 v16;
  char v17;
  BOOL v18;
  const void *v19;
  size_t v20;
  size_t v21;
  const void *v22;
  size_t v23;
  size_t v24;
  int v25;
  BOOL v26;
  uint64_t v27;
  __n128 v28;
  size_t v29;
  __n128 *v30;
  _QWORD *v31;
  size_t v32;
  size_t v33;
  int v34;
  BOOL v35;
  unint64_t v36;
  char *v37;
  size_t v38;
  char *v39;
  size_t v40;
  int v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  size_t v45;
  char *v46;
  size_t v47;
  int v48;
  BOOL v49;
  char *v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 *v54;
  size_t v55;
  char *v56;
  size_t v57;
  char *v58;
  size_t v59;
  int v60;
  BOOL v61;
  char *v62;
  size_t v63;
  char *v64;
  size_t v65;
  int v66;
  _BOOL4 v67;
  __n128 *v68;
  __n128 v69;
  __n128 v70;
  BOOL v71;
  __n128 result;
  __n128 v73;
  char v74;
  BOOL v75;
  const void *v76;
  size_t v77;
  size_t v78;
  size_t v79;
  __n128 *v80;
  size_t v81;
  int v82;
  BOOL v83;
  const void **v84;
  char v85;
  BOOL v86;
  const void *v87;
  size_t v88;
  size_t v89;
  size_t v90;
  int v91;
  BOOL v92;
  const void **v93;
  char v94;
  BOOL v95;
  const void *v96;
  size_t v97;
  size_t v98;
  size_t v99;
  int v100;
  BOOL v101;
  unint64_t v102;
  const void **v103;
  char v104;
  BOOL v105;
  const void *v106;
  size_t v107;
  size_t v108;
  size_t v109;
  int v110;
  BOOL v111;
  __n128 v112;
  __int128 v113;
  __n128 v114;
  size_t v115;
  __n128 *v116;
  const void **v117;
  char v118;
  BOOL v119;
  const void *v120;
  size_t v121;
  size_t v122;
  size_t v123;
  int v124;
  _BOOL4 v125;
  char v126;
  BOOL v127;
  const void *v128;
  size_t v129;
  size_t v130;
  size_t v131;
  int v132;
  BOOL v133;
  __n128 *v134;
  __n128 v135;
  char v136;
  BOOL v137;
  const void *v138;
  size_t v139;
  size_t v140;
  size_t v141;
  const void *v142;
  uint64_t v143;
  uint64_t v144;
  const void **v145;
  const void **v146;
  char v147;
  BOOL v148;
  const void *v149;
  size_t v150;
  size_t v151;
  size_t v152;
  const void *v153;
  size_t v154;
  int v155;
  _BOOL4 v156;
  __n128 v157;
  size_t v158;
  __n128 *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  const void *v163;
  const void *v164;
  char v165;
  const void *v166;
  size_t v167;
  size_t v168;
  size_t v169;
  int v170;
  BOOL v171;
  __n128 *v172;
  int64_t v173;
  int64_t v174;
  int64_t v175;
  uint64_t v176;
  uint64_t v177;
  char v178;
  int v179;
  const void *v180;
  size_t v181;
  size_t v182;
  size_t v183;
  const void *v184;
  size_t v185;
  int v186;
  _BOOL4 v187;
  uint64_t v188;
  char v189;
  BOOL v190;
  const void *v191;
  size_t v192;
  size_t v193;
  size_t v194;
  const void *v195;
  size_t v196;
  int v197;
  BOOL v198;
  __n128 v199;
  __n128 *v200;
  __int128 v201;
  uint64_t v202;
  char v203;
  int v204;
  const void *v205;
  size_t v206;
  size_t v207;
  size_t v208;
  const void *v209;
  size_t v210;
  int v211;
  _BOOL4 v212;
  __n128 *v213;
  size_t v214;
  size_t v215;
  const void *v216;
  size_t v217;
  int v218;
  _BOOL4 v219;
  __n128 v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  int v230;
  const void *v231;
  size_t v232;
  size_t v233;
  size_t v234;
  const void *v235;
  size_t v236;
  int v237;
  _BOOL4 v238;
  unint64_t v239;
  uint64_t v240;
  unint64_t v241;
  __n128 *v242;
  char v243;
  BOOL v244;
  const void *v245;
  size_t v246;
  size_t v247;
  size_t v248;
  const void *v249;
  uint64_t v250;
  size_t v251;
  int v252;
  _BOOL4 v253;
  __n128 v254;
  __n128 *v255;
  size_t v256;
  __n128 *v257;
  __n128 v258;
  size_t v259;
  const void *v260;
  size_t v261;
  int v262;
  BOOL v263;
  uint64_t v265;
  const void **v266;
  char v267;
  BOOL v268;
  const void *v269;
  size_t v270;
  size_t v271;
  size_t v272;
  const void *v273;
  size_t v274;
  int v275;
  _BOOL4 v276;
  __n128 v277;
  size_t v278;
  __n128 *v279;
  __n128 *v280;
  __n128 *v281;
  signed __int8 v282;
  int v283;
  __n128 *v284;
  size_t v285;
  size_t v286;
  size_t v287;
  size_t v288;
  int v289;
  BOOL v290;
  size_t v291;
  int v292;
  _BOOL4 v293;
  __n128 v294;
  __n128 v295;
  const void **v296;
  const void **v297;
  const void *v298;
  uint64_t v299;
  char v300;
  unint64_t v301;
  unint64_t v302;
  __n128 v304;
  int64_t v305;
  __n128 v306;
  const void *v307;
  uint64_t v308;

  v308 = *MEMORY[0x24BDAC8D0];
LABEL_2:
  v7 = a2 - 24;
  v296 = (const void **)(a2 - 72);
  v297 = (const void **)(a2 - 48);
  v8 = (const void **)a1;
  v299 = a2 - 24;
  v301 = a2;
  while (2)
  {
    a1 = (uint64_t)v8;
    v9 = a2 - (_QWORD)v8;
    v10 = 0xAAAAAAAAAAAAAAABLL * ((a2 - (uint64_t)v8) >> 3);
    switch(v10)
    {
      case 0:
      case 1:
        return result;
      case 2:
        v136 = *(_BYTE *)(a1 + 23);
        v137 = v136 < 0;
        if (v136 >= 0)
          v138 = (const void *)a1;
        else
          v138 = *(const void **)a1;
        v139 = v136 & 0x7F;
        if (v137)
          v140 = *(_QWORD *)(a1 + 8);
        else
          v140 = v139;
        if (*(char *)(a2 - 1) < 0)
        {
          v142 = *(const void **)(a2 - 24);
          v141 = *(_QWORD *)(a2 - 16);
        }
        else
        {
          v141 = *(unsigned __int8 *)(a2 - 1);
          v142 = (const void *)v7;
        }
        if (v140 >= v141)
          v291 = v141;
        else
          v291 = v140;
        v292 = memcmp(v142, v138, v291);
        v293 = v141 < v140;
        if (v292)
          v293 = v292 < 0;
        if (v293)
        {
          v294 = *(__n128 *)a1;
          v305 = *(_QWORD *)(a1 + 16);
          v304 = v294;
          v295 = *(__n128 *)v7;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(v7 + 16);
          *(__n128 *)a1 = v295;
          result = v304;
          *(_QWORD *)(v7 + 16) = v305;
          *(__n128 *)v7 = result;
        }
        return result;
      case 3:
        sub_22EA43454((const void **)a1, (_QWORD *)(a1 + 24), (const void **)v7);
        return result;
      case 4:
        result.n128_u64[0] = sub_22EA43984(a1, (__int128 *)(a1 + 24), (__int128 *)(a1 + 48), (__int128 *)v7).n128_u64[0];
        return result;
      case 5:
        result.n128_u64[0] = sub_22EA43B3C(a1, a1 + 24, a1 + 48, a1 + 72, v7).n128_u64[0];
        return result;
      default:
        if (v9 <= 575)
        {
          if ((a4 & 1) != 0)
          {
            if (a1 != a2)
            {
              v143 = a1 + 24;
              if (a1 + 24 != a2)
              {
                v144 = 0;
                v145 = (const void **)a1;
                do
                {
                  v146 = (const void **)v143;
                  v147 = *((_BYTE *)v145 + 23);
                  v148 = v147 < 0;
                  if (v147 >= 0)
                    v149 = v145;
                  else
                    v149 = *v145;
                  v150 = v147 & 0x7F;
                  if (v148)
                    v151 = (size_t)v145[1];
                  else
                    v151 = v150;
                  if (*((char *)v145 + 47) < 0)
                  {
                    v152 = (size_t)v145[4];
                    v153 = *v146;
                  }
                  else
                  {
                    v152 = *((unsigned __int8 *)v145 + 47);
                    v153 = v146;
                  }
                  if (v151 >= v152)
                    v154 = v152;
                  else
                    v154 = v151;
                  v155 = memcmp(v153, v149, v154);
                  v156 = v152 < v151;
                  if (v155)
                    v156 = v155 < 0;
                  if (v156)
                  {
                    v157 = *(__n128 *)v146;
                    v305 = (int64_t)v146[2];
                    v304 = v157;
                    v146[1] = 0;
                    v146[2] = 0;
                    *v146 = 0;
                    if (v305 >= 0)
                      v158 = HIBYTE(v305) & 0x7F;
                    else
                      v158 = v304.n128_u64[1];
                    if (v305 >= 0)
                      v159 = &v304;
                    else
                      v159 = (__n128 *)v304.n128_u64[0];
                    v160 = v144;
                    while (1)
                    {
                      v161 = a1 + v160;
                      *(_OWORD *)(v161 + 24) = *(_OWORD *)(a1 + v160);
                      *(_QWORD *)(v161 + 40) = *(_QWORD *)(a1 + v160 + 16);
                      *(_BYTE *)(v161 + 23) = 0;
                      *(_BYTE *)v161 = 0;
                      if (!v160)
                        break;
                      v164 = *(const void **)(v161 - 24);
                      v162 = v161 - 24;
                      v163 = v164;
                      v165 = *(_BYTE *)(v162 + 23);
                      if (v165 >= 0)
                        v166 = (const void *)v162;
                      else
                        v166 = v163;
                      v167 = *(_QWORD *)(v162 + 8);
                      if (v165 >= 0)
                        v168 = v165 & 0x7F;
                      else
                        v168 = v167;
                      if (v168 >= v158)
                        v169 = v158;
                      else
                        v169 = v168;
                      v170 = memcmp(v159, v166, v169);
                      v171 = v158 < v168;
                      if (v170)
                        v171 = v170 < 0;
                      v160 -= 24;
                      if (!v171)
                      {
                        v172 = (__n128 *)(a1 + v160 + 24);
                        goto LABEL_260;
                      }
                    }
                    v172 = (__n128 *)a1;
LABEL_260:
                    result = v304;
                    v172[1].n128_u64[0] = v305;
                    *v172 = result;
                  }
                  v143 = (uint64_t)(v146 + 3);
                  v144 += 24;
                  v145 = v146;
                }
                while (v146 + 3 != (const void **)v301);
              }
            }
          }
          else if (a1 != a2)
          {
            v265 = a1 + 24;
            if (a1 + 24 != a2)
            {
              do
              {
                v266 = (const void **)v265;
                v267 = *(_BYTE *)(a1 + 23);
                v268 = v267 < 0;
                if (v267 >= 0)
                  v269 = (const void *)a1;
                else
                  v269 = *(const void **)a1;
                v270 = v267 & 0x7F;
                if (v268)
                  v271 = *(_QWORD *)(a1 + 8);
                else
                  v271 = v270;
                if (*(char *)(a1 + 47) < 0)
                {
                  v272 = *(_QWORD *)(a1 + 32);
                  v273 = *v266;
                }
                else
                {
                  v272 = *(unsigned __int8 *)(a1 + 47);
                  v273 = v266;
                }
                if (v271 >= v272)
                  v274 = v272;
                else
                  v274 = v271;
                v275 = memcmp(v273, v269, v274);
                v276 = v272 < v271;
                if (v275)
                  v276 = v275 < 0;
                if (v276)
                {
                  v277 = *(__n128 *)v266;
                  v305 = (int64_t)v266[2];
                  v304 = v277;
                  v266[1] = 0;
                  v266[2] = 0;
                  *v266 = 0;
                  if (v305 >= 0)
                    v278 = HIBYTE(v305) & 0x7F;
                  else
                    v278 = v304.n128_u64[1];
                  if (v305 >= 0)
                    v279 = &v304;
                  else
                    v279 = (__n128 *)v304.n128_u64[0];
                  v280 = (__n128 *)v266;
                  do
                  {
                    v281 = (__n128 *)((char *)v280 - 24);
                    *v280 = *(__n128 *)((char *)v280 - 24);
                    v280[1].n128_u64[0] = v280[-1].n128_u64[1];
                    v280[-1].n128_u8[15] = 0;
                    v280[-2].n128_u8[8] = 0;
                    v282 = v280[-2].n128_i8[7];
                    v283 = v282;
                    if (v282 >= 0)
                      v284 = v280 - 3;
                    else
                      v284 = (__n128 *)v280[-3].n128_u64[0];
                    v285 = v280[-3].n128_u64[1];
                    v286 = v282 & 0x7F;
                    if (v283 >= 0)
                      v287 = v286;
                    else
                      v287 = v285;
                    if (v287 >= v278)
                      v288 = v278;
                    else
                      v288 = v287;
                    v289 = memcmp(v279, v284, v288);
                    v290 = v289 < 0;
                    if (!v289)
                      v290 = v278 < v287;
                    v280 = v281;
                  }
                  while (v290);
                  result = v304;
                  v281[1].n128_u64[0] = v305;
                  *v281 = result;
                  a2 = v301;
                }
                v265 = (uint64_t)(v266 + 3);
                a1 = (uint64_t)v266;
              }
              while (v266 + 3 != (const void **)a2);
            }
          }
          return result;
        }
        if (!a3)
        {
          if (a1 != a2)
          {
            v173 = (unint64_t)(v10 - 2) >> 1;
            v174 = v173;
            do
            {
              v175 = v174;
              if (v173 >= v174)
              {
                v176 = (2 * v174) | 1;
                v177 = a1 + 24 * v176;
                if (2 * v174 + 2 < v10)
                {
                  v178 = *(_BYTE *)(v177 + 47);
                  v179 = v178;
                  if (v178 >= 0)
                    v180 = (const void *)(v177 + 24);
                  else
                    v180 = *(const void **)(v177 + 24);
                  v181 = v178 & 0x7F;
                  if (v179 >= 0)
                    v182 = v181;
                  else
                    v182 = *(_QWORD *)(v177 + 32);
                  if (*(char *)(v177 + 23) < 0)
                  {
                    v184 = *(const void **)v177;
                    v183 = *(_QWORD *)(v177 + 8);
                  }
                  else
                  {
                    v183 = *(unsigned __int8 *)(v177 + 23);
                    v184 = (const void *)(a1 + 24 * v176);
                  }
                  if (v182 >= v183)
                    v185 = v183;
                  else
                    v185 = v182;
                  v186 = memcmp(v184, v180, v185);
                  v187 = v183 < v182;
                  if (v186)
                    v187 = v186 < 0;
                  if (v187)
                  {
                    v177 += 24;
                    v176 = 2 * v175 + 2;
                  }
                }
                v188 = a1 + 24 * v175;
                v189 = *(_BYTE *)(v188 + 23);
                v190 = v189 < 0;
                if (v189 >= 0)
                  v191 = (const void *)(a1 + 24 * v175);
                else
                  v191 = *(const void **)v188;
                v192 = v189 & 0x7F;
                if (v190)
                  v193 = *(_QWORD *)(v188 + 8);
                else
                  v193 = v192;
                if (*(char *)(v177 + 23) < 0)
                {
                  v195 = *(const void **)v177;
                  v194 = *(_QWORD *)(v177 + 8);
                }
                else
                {
                  v194 = *(unsigned __int8 *)(v177 + 23);
                  v195 = (const void *)v177;
                }
                if (v193 >= v194)
                  v196 = v194;
                else
                  v196 = v193;
                v197 = memcmp(v195, v191, v196);
                v198 = v194 < v193;
                if (v197)
                  v198 = v197 < 0;
                v173 = (unint64_t)(v10 - 2) >> 1;
                if (!v198)
                {
                  v199 = *(__n128 *)v188;
                  v305 = *(_QWORD *)(v188 + 16);
                  v304 = v199;
                  *(_QWORD *)(v188 + 8) = 0;
                  *(_QWORD *)(v188 + 16) = 0;
                  *(_QWORD *)v188 = 0;
                  do
                  {
                    v200 = (__n128 *)v177;
                    v201 = *(_OWORD *)v177;
                    *(_QWORD *)(v188 + 16) = *(_QWORD *)(v177 + 16);
                    *(_OWORD *)v188 = v201;
                    *(_BYTE *)(v177 + 23) = 0;
                    *(_BYTE *)v177 = 0;
                    if (v173 < v176)
                      break;
                    v202 = (2 * v176) | 1;
                    v177 = a1 + 24 * v202;
                    v176 = 2 * v176 + 2;
                    if (v176 >= v10)
                    {
                      v176 = v202;
                    }
                    else
                    {
                      v203 = *(_BYTE *)(v177 + 47);
                      v204 = v203;
                      if (v203 >= 0)
                        v205 = (const void *)(v177 + 24);
                      else
                        v205 = *(const void **)(v177 + 24);
                      v206 = v203 & 0x7F;
                      if (v204 >= 0)
                        v207 = v206;
                      else
                        v207 = *(_QWORD *)(v177 + 32);
                      if (*(char *)(v177 + 23) < 0)
                      {
                        v209 = *(const void **)v177;
                        v208 = *(_QWORD *)(v177 + 8);
                      }
                      else
                      {
                        v208 = *(unsigned __int8 *)(v177 + 23);
                        v209 = (const void *)(a1 + 24 * v202);
                      }
                      if (v207 >= v208)
                        v210 = v208;
                      else
                        v210 = v207;
                      v211 = memcmp(v209, v205, v210);
                      v212 = v208 < v207;
                      if (v211)
                        v212 = v211 < 0;
                      if (v212)
                        v177 += 24;
                      else
                        v176 = v202;
                      v173 = (unint64_t)(v10 - 2) >> 1;
                    }
                    if (v305 >= 0)
                      v213 = &v304;
                    else
                      v213 = (__n128 *)v304.n128_u64[0];
                    if (v305 >= 0)
                      v214 = HIBYTE(v305) & 0x7F;
                    else
                      v214 = v304.n128_u64[1];
                    if (*(char *)(v177 + 23) < 0)
                    {
                      v216 = *(const void **)v177;
                      v215 = *(_QWORD *)(v177 + 8);
                    }
                    else
                    {
                      v215 = *(unsigned __int8 *)(v177 + 23);
                      v216 = (const void *)v177;
                    }
                    if (v214 >= v215)
                      v217 = v215;
                    else
                      v217 = v214;
                    v218 = memcmp(v216, v213, v217);
                    v219 = v215 < v214;
                    if (v218)
                      v219 = v218 < 0;
                    v188 = (uint64_t)v200;
                  }
                  while (!v219);
                  v220 = v304;
                  v200[1].n128_u64[0] = v305;
                  *v200 = v220;
                }
              }
              v174 = v175 - 1;
            }
            while (v175);
            v221 = v301;
            do
            {
              v222 = 0;
              v298 = *(const void **)a1;
              v306.n128_u64[0] = *(_QWORD *)(a1 + 8);
              *(unint64_t *)((char *)v306.n128_u64 + 7) = *(_QWORD *)(a1 + 15);
              v300 = *(_BYTE *)(a1 + 23);
              *(_QWORD *)(a1 + 8) = 0;
              *(_QWORD *)(a1 + 16) = 0;
              *(_QWORD *)a1 = 0;
              v223 = v10 - 2;
              v302 = v221;
              if (v10 < 2)
                v223 = v10 - 1;
              v224 = v223 >> 1;
              v225 = a1;
              do
              {
                v226 = v225 + 24 * v222 + 24;
                v227 = 2 * v222;
                v222 = (2 * v222) | 1;
                v228 = v227 + 2;
                if (v227 + 2 < v10)
                {
                  v229 = *(_BYTE *)(v226 + 47);
                  v230 = v229;
                  if (v229 >= 0)
                    v231 = (const void *)(v226 + 24);
                  else
                    v231 = *(const void **)(v226 + 24);
                  v232 = v229 & 0x7F;
                  if (v230 >= 0)
                    v233 = v232;
                  else
                    v233 = *(_QWORD *)(v226 + 32);
                  if (*(char *)(v226 + 23) < 0)
                  {
                    v235 = *(const void **)v226;
                    v234 = *(_QWORD *)(v226 + 8);
                  }
                  else
                  {
                    v234 = *(unsigned __int8 *)(v226 + 23);
                    v235 = (const void *)v226;
                  }
                  if (v233 >= v234)
                    v236 = v234;
                  else
                    v236 = v233;
                  v237 = memcmp(v235, v231, v236);
                  v238 = v234 < v233;
                  if (v237)
                    v238 = v237 < 0;
                  if (v238)
                  {
                    v226 += 24;
                    v222 = v228;
                  }
                }
                if (*(char *)(v225 + 23) < 0)
                  operator delete(*(void **)v225);
                result = *(__n128 *)v226;
                *(_QWORD *)(v225 + 16) = *(_QWORD *)(v226 + 16);
                *(__n128 *)v225 = result;
                *(_BYTE *)(v226 + 23) = 0;
                *(_BYTE *)v226 = 0;
                v225 = v226;
              }
              while (v222 <= v224);
              if (v226 == v302 - 24)
              {
                v221 = v302 - 24;
                *(_QWORD *)v226 = v298;
                v250 = *(uint64_t *)((char *)v306.n128_i64 + 7);
                *(_QWORD *)(v226 + 8) = v306.n128_u64[0];
                *(_QWORD *)(v226 + 15) = v250;
                *(_BYTE *)(v226 + 23) = v300;
              }
              else
              {
                result = *(__n128 *)(v302 - 24);
                v221 = v302 - 24;
                *(_QWORD *)(v226 + 16) = *(_QWORD *)(v302 - 8);
                *(__n128 *)v226 = result;
                *(_QWORD *)(v302 - 24) = v298;
                v239 = v306.n128_u64[0];
                *(_QWORD *)(v302 - 9) = *(unint64_t *)((char *)v306.n128_u64 + 7);
                *(_QWORD *)(v302 - 16) = v239;
                *(_BYTE *)(v302 - 1) = v300;
                v240 = v226 - a1 + 24;
                if (v240 >= 25)
                {
                  v241 = (v240 / 0x18uLL - 2) >> 1;
                  v242 = (__n128 *)(a1 + 24 * v241);
                  v243 = *(_BYTE *)(v226 + 23);
                  v244 = v243 < 0;
                  if (v243 >= 0)
                    v245 = (const void *)v226;
                  else
                    v245 = *(const void **)v226;
                  v246 = v243 & 0x7F;
                  if (v244)
                    v247 = *(_QWORD *)(v226 + 8);
                  else
                    v247 = v246;
                  if (v242[1].n128_i8[7] < 0)
                  {
                    v249 = (const void *)v242->n128_u64[0];
                    v248 = v242->n128_u64[1];
                  }
                  else
                  {
                    v248 = v242[1].n128_u8[7];
                    v249 = (const void *)(a1 + 24 * v241);
                  }
                  if (v247 >= v248)
                    v251 = v248;
                  else
                    v251 = v247;
                  v252 = memcmp(v249, v245, v251);
                  v253 = v248 < v247;
                  if (v252)
                    v253 = v252 < 0;
                  if (v253)
                  {
                    v254 = *(__n128 *)v226;
                    v305 = *(_QWORD *)(v226 + 16);
                    v304 = v254;
                    *(_QWORD *)(v226 + 8) = 0;
                    *(_QWORD *)(v226 + 16) = 0;
                    *(_QWORD *)v226 = 0;
                    if (v305 >= 0)
                      v255 = &v304;
                    else
                      v255 = (__n128 *)v304.n128_u64[0];
                    if (v305 >= 0)
                      v256 = HIBYTE(v305) & 0x7F;
                    else
                      v256 = v304.n128_u64[1];
                    do
                    {
                      v257 = v242;
                      v258 = *v242;
                      *(_QWORD *)(v226 + 16) = v242[1].n128_u64[0];
                      *(__n128 *)v226 = v258;
                      v242[1].n128_u8[7] = 0;
                      v242->n128_u8[0] = 0;
                      if (!v241)
                        break;
                      v241 = (v241 - 1) >> 1;
                      v242 = (__n128 *)(a1 + 24 * v241);
                      if (v242[1].n128_i8[7] < 0)
                      {
                        v260 = (const void *)v242->n128_u64[0];
                        v259 = v242->n128_u64[1];
                      }
                      else
                      {
                        v259 = v242[1].n128_u8[7];
                        v260 = (const void *)(a1 + 24 * v241);
                      }
                      if (v256 >= v259)
                        v261 = v259;
                      else
                        v261 = v256;
                      v262 = memcmp(v260, v255, v261);
                      v263 = v259 < v256;
                      if (v262)
                        v263 = v262 < 0;
                      v226 = (uint64_t)v257;
                    }
                    while (v263);
                    result = v304;
                    v257[1].n128_u64[0] = v305;
                    *v257 = result;
                  }
                }
              }
            }
            while (v10-- > 2);
          }
          return result;
        }
        v11 = (unint64_t)v10 >> 1;
        v12 = a1 + 24 * ((unint64_t)v10 >> 1);
        if ((unint64_t)v9 < 0xC01)
        {
          sub_22EA43454((const void **)v12, (_QWORD *)a1, (const void **)v7);
        }
        else
        {
          sub_22EA43454((const void **)a1, (_QWORD *)v12, (const void **)v7);
          v13 = 3 * v11;
          sub_22EA43454((const void **)(a1 + 24), (_QWORD *)(a1 + 8 * v13 - 24), v297);
          sub_22EA43454((const void **)(a1 + 48), (_QWORD *)(a1 + 24 + 8 * v13), v296);
          sub_22EA43454((const void **)(a1 + 8 * v13 - 24), (_QWORD *)v12, (const void **)(a1 + 24 + 8 * v13));
          v14 = *(__n128 *)a1;
          v305 = *(_QWORD *)(a1 + 16);
          v304 = v14;
          v15 = *(_QWORD *)(v12 + 16);
          *(_OWORD *)a1 = *(_OWORD *)v12;
          *(_QWORD *)(a1 + 16) = v15;
          v16 = v304;
          *(_QWORD *)(v12 + 16) = v305;
          *(__n128 *)v12 = v16;
        }
        --a3;
        if ((a4 & 1) == 0)
        {
          v17 = *(_BYTE *)(a1 + 23);
          v18 = v17 < 0;
          if (v17 >= 0)
            v19 = (const void *)a1;
          else
            v19 = *(const void **)a1;
          v20 = v17 & 0x7F;
          if (v18)
            v21 = *(_QWORD *)(a1 + 8);
          else
            v21 = v20;
          if (*(char *)(a1 - 1) < 0)
          {
            v22 = *(const void **)(a1 - 24);
            v23 = *(_QWORD *)(a1 - 16);
          }
          else
          {
            v22 = (const void *)(a1 - 24);
            v23 = *(unsigned __int8 *)(a1 - 1);
          }
          if (v21 >= v23)
            v24 = v23;
          else
            v24 = v21;
          v25 = memcmp(v22, v19, v24);
          v26 = v23 < v21;
          if (v25)
            v26 = v25 < 0;
          if (!v26)
          {
            v73 = *(__n128 *)a1;
            v307 = *(const void **)(a1 + 16);
            v306 = v73;
            *(_QWORD *)(a1 + 8) = 0;
            *(_QWORD *)(a1 + 16) = 0;
            *(_QWORD *)a1 = 0;
            v74 = *(_BYTE *)(a2 - 1);
            v75 = v74 < 0;
            if (v74 >= 0)
              v76 = (const void *)v7;
            else
              v76 = *(const void **)(a2 - 24);
            v77 = v74 & 0x7F;
            if (v75)
              v78 = *(_QWORD *)(a2 - 16);
            else
              v78 = v77;
            if (SHIBYTE(v307) >= 0)
              v79 = HIBYTE(v307) & 0x7F;
            else
              v79 = v306.n128_u64[1];
            if (SHIBYTE(v307) >= 0)
              v80 = &v306;
            else
              v80 = (__n128 *)v306.n128_u64[0];
            if (v78 >= v79)
              v81 = v79;
            else
              v81 = v78;
            v82 = memcmp(v80, v76, v81);
            v83 = v79 < v78;
            if (v82)
              v83 = v82 < 0;
            if (v83)
            {
              v84 = (const void **)(a1 + 24);
              do
              {
                v85 = *((_BYTE *)v84 + 23);
                v86 = v85 < 0;
                if (v85 >= 0)
                  v87 = v84;
                else
                  v87 = *v84;
                v88 = v85 & 0x7F;
                if (v86)
                  v89 = (size_t)v84[1];
                else
                  v89 = v88;
                if (v89 >= v79)
                  v90 = v79;
                else
                  v90 = v89;
                v91 = memcmp(v80, v87, v90);
                v92 = v79 < v89;
                if (v91)
                  v92 = v91 < 0;
                v84 += 3;
              }
              while (!v92);
              v8 = v84 - 3;
            }
            else
            {
              v93 = (const void **)(a1 + 24);
              do
              {
                v8 = v93;
                if ((unint64_t)v93 >= v301)
                  break;
                v94 = *((_BYTE *)v93 + 23);
                v95 = v94 < 0;
                if (v94 >= 0)
                  v96 = v8;
                else
                  v96 = *v8;
                v97 = v94 & 0x7F;
                if (v95)
                  v98 = (size_t)v8[1];
                else
                  v98 = v97;
                if (v98 >= v79)
                  v99 = v79;
                else
                  v99 = v98;
                v100 = memcmp(v80, v96, v99);
                v101 = v100 < 0;
                if (!v100)
                  v101 = v79 < v98;
                v93 = v8 + 3;
              }
              while (!v101);
            }
            v102 = v301;
            if ((unint64_t)v8 < v301)
            {
              v103 = (const void **)v299;
              do
              {
                v104 = *((_BYTE *)v103 + 23);
                v105 = v104 < 0;
                if (v104 >= 0)
                  v106 = v103;
                else
                  v106 = *v103;
                v107 = v104 & 0x7F;
                if (v105)
                  v108 = (size_t)v103[1];
                else
                  v108 = v107;
                if (v108 >= v79)
                  v109 = v79;
                else
                  v109 = v108;
                v110 = memcmp(v80, v106, v109);
                v111 = v79 < v108;
                if (v110)
                  v111 = v110 < 0;
                v103 -= 3;
              }
              while (v111);
              goto LABEL_163;
            }
            while ((unint64_t)v8 < v102)
            {
              v112 = *(__n128 *)v8;
              v305 = (int64_t)v8[2];
              v304 = v112;
              v113 = *(_OWORD *)v102;
              v8[2] = *(const void **)(v102 + 16);
              *(_OWORD *)v8 = v113;
              v114 = v304;
              *(_QWORD *)(v102 + 16) = v305;
              *(__n128 *)v102 = v114;
              if (SHIBYTE(v307) >= 0)
                v115 = HIBYTE(v307) & 0x7F;
              else
                v115 = v306.n128_u64[1];
              if (SHIBYTE(v307) >= 0)
                v116 = &v306;
              else
                v116 = (__n128 *)v306.n128_u64[0];
              v117 = v8 + 3;
              do
              {
                v118 = *((_BYTE *)v117 + 23);
                v119 = v118 < 0;
                if (v118 >= 0)
                  v120 = v117;
                else
                  v120 = *v117;
                v121 = v118 & 0x7F;
                if (v119)
                  v122 = (size_t)v117[1];
                else
                  v122 = v121;
                if (v122 >= v115)
                  v123 = v115;
                else
                  v123 = v122;
                v124 = memcmp(v116, v120, v123);
                v125 = v115 < v122;
                if (v124)
                  v125 = v124 < 0;
                v117 += 3;
              }
              while (!v125);
              v8 = v117 - 3;
              v103 = (const void **)(v102 - 24);
              do
              {
                v126 = *((_BYTE *)v103 + 23);
                v127 = v126 < 0;
                if (v126 >= 0)
                  v128 = v103;
                else
                  v128 = *v103;
                v129 = v126 & 0x7F;
                if (v127)
                  v130 = (size_t)v103[1];
                else
                  v130 = v129;
                if (v130 >= v115)
                  v131 = v115;
                else
                  v131 = v130;
                v132 = memcmp(v116, v128, v131);
                v133 = v115 < v130;
                if (v132)
                  v133 = v132 < 0;
                v103 -= 3;
              }
              while (v133);
LABEL_163:
              v102 = (unint64_t)(v103 + 3);
            }
            v134 = (__n128 *)(v8 - 3);
            v7 = v299;
            a2 = v301;
            if (v8 - 3 == (const void **)a1)
            {
              if (*((char *)v8 - 1) < 0)
                operator delete(*(void **)a1);
            }
            else
            {
              if (*(char *)(a1 + 23) < 0)
                operator delete(*(void **)a1);
              v135 = *v134;
              *(_QWORD *)(a1 + 16) = *(v8 - 1);
              *(__n128 *)a1 = v135;
              *((_BYTE *)v8 - 1) = 0;
              *((_BYTE *)v8 - 24) = 0;
            }
            a4 = 0;
            result = v306;
            *(v8 - 1) = v307;
            *v134 = result;
            continue;
          }
        }
        v27 = 0;
        v28 = *(__n128 *)a1;
        v307 = *(const void **)(a1 + 16);
        v306 = v28;
        *(_QWORD *)(a1 + 8) = 0;
        *(_QWORD *)(a1 + 16) = 0;
        *(_QWORD *)a1 = 0;
        if (SHIBYTE(v307) >= 0)
          v29 = HIBYTE(v307) & 0x7F;
        else
          v29 = v306.n128_u64[1];
        if (SHIBYTE(v307) >= 0)
          v30 = &v306;
        else
          v30 = (__n128 *)v306.n128_u64[0];
        do
        {
          v31 = (_QWORD *)(a1 + v27 + 24);
          if (*(char *)(a1 + v27 + 47) < 0)
          {
            v32 = *(_QWORD *)(a1 + v27 + 32);
            v31 = (_QWORD *)*v31;
          }
          else
          {
            v32 = *(unsigned __int8 *)(a1 + v27 + 47);
          }
          if (v29 >= v32)
            v33 = v32;
          else
            v33 = v29;
          v34 = memcmp(v31, v30, v33);
          v35 = v32 < v29;
          if (v34)
            v35 = v34 < 0;
          v27 += 24;
        }
        while (v35);
        v36 = a1 + v27;
        v37 = (char *)v7;
        if (v27 == 24)
        {
          v44 = (char *)v7;
          while (1)
          {
            v43 = (unint64_t)(v44 + 24);
            if (v36 >= (unint64_t)(v44 + 24))
              break;
            if (v44[23] < 0)
            {
              v46 = *(char **)v44;
              v45 = *((_QWORD *)v44 + 1);
            }
            else
            {
              v45 = v44[23];
              v46 = v44;
            }
            if (v29 >= v45)
              v47 = v45;
            else
              v47 = v29;
            v48 = memcmp(v46, v30, v47);
            v49 = v45 < v29;
            if (v48)
              v49 = v48 < 0;
            v44 -= 24;
            if (v49)
            {
              v43 = (unint64_t)(v44 + 24);
              break;
            }
          }
        }
        else
        {
          do
          {
            if (v37[23] < 0)
            {
              v39 = *(char **)v37;
              v38 = *((_QWORD *)v37 + 1);
            }
            else
            {
              v38 = v37[23];
              v39 = v37;
            }
            if (v29 >= v38)
              v40 = v38;
            else
              v40 = v29;
            v41 = memcmp(v39, v30, v40);
            v42 = v38 < v29;
            if (v41)
              v42 = v41 < 0;
            v37 -= 24;
          }
          while (!v42);
          v43 = (unint64_t)(v37 + 24);
        }
        v8 = (const void **)v36;
        if (v36 < v43)
        {
          v50 = (char *)v43;
          do
          {
            v51 = *(__n128 *)v8;
            v305 = (int64_t)v8[2];
            v304 = v51;
            v52 = *(__n128 *)v50;
            v8[2] = (const void *)*((_QWORD *)v50 + 2);
            *(__n128 *)v8 = v52;
            v53 = v304;
            *((_QWORD *)v50 + 2) = v305;
            *(__n128 *)v50 = v53;
            if (SHIBYTE(v307) >= 0)
              v54 = &v306;
            else
              v54 = (__n128 *)v306.n128_u64[0];
            if (SHIBYTE(v307) >= 0)
              v55 = HIBYTE(v307) & 0x7F;
            else
              v55 = v306.n128_u64[1];
            v56 = (char *)(v8 + 3);
            do
            {
              if (v56[23] < 0)
              {
                v58 = *(char **)v56;
                v57 = *((_QWORD *)v56 + 1);
              }
              else
              {
                v57 = v56[23];
                v58 = v56;
              }
              if (v55 >= v57)
                v59 = v57;
              else
                v59 = v55;
              v60 = memcmp(v58, v54, v59);
              v61 = v57 < v55;
              if (v60)
                v61 = v60 < 0;
              v56 += 24;
            }
            while (v61);
            v8 = (const void **)(v56 - 24);
            v62 = v50 - 24;
            do
            {
              if (v62[23] < 0)
              {
                v64 = *(char **)v62;
                v63 = *((_QWORD *)v62 + 1);
              }
              else
              {
                v63 = v62[23];
                v64 = v62;
              }
              if (v55 >= v63)
                v65 = v63;
              else
                v65 = v55;
              v66 = memcmp(v64, v54, v65);
              v67 = v63 < v55;
              if (v66)
                v67 = v66 < 0;
              v62 -= 24;
            }
            while (!v67);
            v50 = v62 + 24;
          }
          while (v8 < (const void **)v62 + 3);
          v7 = v299;
          a2 = v301;
        }
        v68 = (__n128 *)(v8 - 3);
        if (v8 - 3 == (const void **)a1)
        {
          if (*((char *)v8 - 1) < 0)
            operator delete(*(void **)a1);
        }
        else
        {
          if (*(char *)(a1 + 23) < 0)
            operator delete(*(void **)a1);
          v69 = *v68;
          *(_QWORD *)(a1 + 16) = *(v8 - 1);
          *(__n128 *)a1 = v69;
          *((_BYTE *)v8 - 1) = 0;
          *((_BYTE *)v8 - 24) = 0;
        }
        v70 = v306;
        *(v8 - 1) = v307;
        *v68 = v70;
        if (v36 < v43)
        {
LABEL_102:
          sub_22EA42348(a1, v8 - 3, a3, a4 & 1);
          a4 = 0;
          continue;
        }
        v71 = sub_22EA436B4(a1, (uint64_t)(v8 - 3));
        if (!sub_22EA436B4((uint64_t)v8, a2))
        {
          if (v71)
            continue;
          goto LABEL_102;
        }
        a2 = (uint64_t)(v8 - 3);
        if (!v71)
          goto LABEL_2;
        return result;
    }
  }
}

uint64_t sub_22EA43454(const void **a1, _QWORD *__s1, const void **a3)
{
  char v6;
  BOOL v7;
  const void *v8;
  size_t v9;
  size_t v10;
  size_t v11;
  _QWORD *v12;
  size_t v13;
  int v14;
  BOOL v15;
  size_t v16;
  const void *v17;
  size_t v18;
  uint64_t result;
  _BOOL4 v20;
  const void *v21;
  __int128 v22;
  const void *v23;
  size_t v24;
  _BOOL4 v25;
  const void *v26;
  __int128 v27;
  const void *v28;
  char v29;
  BOOL v30;
  const void *v31;
  size_t v32;
  size_t v33;
  size_t v34;
  _QWORD *v35;
  unint64_t v36;
  __int128 v37;
  const void *v38;
  unint64_t v39;
  BOOL v40;
  _QWORD *v41;
  size_t v42;
  size_t v43;
  size_t v44;
  const void *v45;
  size_t v46;
  _BOOL4 v47;
  const void *v48;
  __int128 v49;
  const void *v50;
  size_t v51;
  _BOOL4 v52;
  const void *v53;

  v6 = *((_BYTE *)a1 + 23);
  v7 = v6 < 0;
  if (v6 >= 0)
    v8 = a1;
  else
    v8 = *a1;
  v9 = v6 & 0x7F;
  if (v7)
    v10 = (size_t)a1[1];
  else
    v10 = v9;
  if (*((char *)__s1 + 23) < 0)
  {
    v12 = (_QWORD *)*__s1;
    v11 = __s1[1];
  }
  else
  {
    v11 = *((unsigned __int8 *)__s1 + 23);
    v12 = __s1;
  }
  if (v10 >= v11)
    v13 = v11;
  else
    v13 = v10;
  v14 = memcmp(v12, v8, v13);
  v15 = v11 < v10;
  if (v14)
    v15 = v14 < 0;
  v16 = *((unsigned __int8 *)a3 + 23);
  v17 = a3;
  if (v15)
  {
    if ((v16 & 0x80) != 0)
    {
      v17 = *a3;
      v16 = (size_t)a3[1];
    }
    if (v11 >= v16)
      v18 = v16;
    else
      v18 = v11;
    result = memcmp(v17, v12, v18);
    v20 = v16 < v11;
    if ((_DWORD)result)
      v20 = (int)result < 0;
    if (v20)
    {
      v21 = a1[2];
      v22 = *(_OWORD *)a1;
      v23 = a3[2];
      *(_OWORD *)a1 = *(_OWORD *)a3;
      a1[2] = v23;
LABEL_65:
      *(_OWORD *)a3 = v22;
      a3[2] = v21;
      return result;
    }
    v36 = (unint64_t)a1[2];
    v37 = *(_OWORD *)a1;
    v38 = (const void *)__s1[2];
    *(_OWORD *)a1 = *(_OWORD *)__s1;
    a1[2] = v38;
    *(_OWORD *)__s1 = v37;
    __s1[2] = v36;
    v39 = HIBYTE(v36);
    v40 = (v39 & 0x80u) != 0;
    if ((v39 & 0x80u) == 0)
      v41 = __s1;
    else
      v41 = (_QWORD *)*__s1;
    v42 = v39 & 0x7F;
    if (v40)
      v43 = __s1[1];
    else
      v43 = v42;
    if (*((char *)a3 + 23) < 0)
    {
      v45 = *a3;
      v44 = (size_t)a3[1];
    }
    else
    {
      v44 = *((unsigned __int8 *)a3 + 23);
      v45 = a3;
    }
    if (v43 >= v44)
      v51 = v44;
    else
      v51 = v43;
    result = memcmp(v45, v41, v51);
    v52 = v44 < v43;
    if ((_DWORD)result)
      v52 = (int)result < 0;
    if (v52)
    {
      v21 = (const void *)__s1[2];
      v22 = *(_OWORD *)__s1;
      v53 = a3[2];
      *(_OWORD *)__s1 = *(_OWORD *)a3;
      __s1[2] = v53;
      goto LABEL_65;
    }
  }
  else
  {
    if ((v16 & 0x80) != 0)
    {
      v17 = *a3;
      v16 = (size_t)a3[1];
    }
    if (v11 >= v16)
      v24 = v16;
    else
      v24 = v11;
    result = memcmp(v17, v12, v24);
    v25 = v16 < v11;
    if ((_DWORD)result)
      v25 = (int)result < 0;
    if (v25)
    {
      v26 = (const void *)__s1[2];
      v27 = *(_OWORD *)__s1;
      v28 = a3[2];
      *(_OWORD *)__s1 = *(_OWORD *)a3;
      __s1[2] = v28;
      *(_OWORD *)a3 = v27;
      a3[2] = v26;
      v29 = *((_BYTE *)a1 + 23);
      v30 = v29 < 0;
      if (v29 >= 0)
        v31 = a1;
      else
        v31 = *a1;
      v32 = v29 & 0x7F;
      if (v30)
        v33 = (size_t)a1[1];
      else
        v33 = v32;
      if (*((char *)__s1 + 23) < 0)
      {
        v35 = (_QWORD *)*__s1;
        v34 = __s1[1];
      }
      else
      {
        v34 = *((unsigned __int8 *)__s1 + 23);
        v35 = __s1;
      }
      if (v33 >= v34)
        v46 = v34;
      else
        v46 = v33;
      result = memcmp(v35, v31, v46);
      v47 = v34 < v33;
      if ((_DWORD)result)
        v47 = (int)result < 0;
      if (v47)
      {
        v48 = a1[2];
        v49 = *(_OWORD *)a1;
        v50 = (const void *)__s1[2];
        *(_OWORD *)a1 = *(_OWORD *)__s1;
        a1[2] = v50;
        *(_OWORD *)__s1 = v49;
        __s1[2] = v48;
      }
    }
  }
  return result;
}

BOOL sub_22EA436B4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _BOOL8 result;
  _OWORD *v6;
  char v7;
  BOOL v8;
  const void *v9;
  size_t v10;
  size_t v11;
  size_t v12;
  const void *v13;
  const void **v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  BOOL v19;
  const void *v20;
  size_t v21;
  size_t v22;
  size_t v23;
  const void *v24;
  size_t v25;
  int v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  const void *v31;
  const void *v32;
  char v33;
  const void *v34;
  size_t v35;
  size_t v36;
  size_t v37;
  __int128 *v38;
  size_t v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  size_t v43;
  int v44;
  _BOOL4 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v4 = 0xAAAAAAAAAAAAAAABLL * ((a2 - a1) >> 3);
  result = 1;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v6 = (_OWORD *)(a2 - 24);
      v7 = *(_BYTE *)(a1 + 23);
      v8 = v7 < 0;
      if (v7 >= 0)
        v9 = (const void *)a1;
      else
        v9 = *(const void **)a1;
      v10 = v7 & 0x7F;
      if (v8)
        v11 = *(_QWORD *)(a1 + 8);
      else
        v11 = v10;
      if (*(char *)(a2 - 1) < 0)
      {
        v13 = *(const void **)(a2 - 24);
        v12 = *(_QWORD *)(a2 - 16);
      }
      else
      {
        v12 = *(unsigned __int8 *)(a2 - 1);
        v13 = (const void *)(a2 - 24);
      }
      if (v11 >= v12)
        v43 = v12;
      else
        v43 = v11;
      v44 = memcmp(v13, v9, v43);
      v45 = v12 < v11;
      if (v44)
        v45 = v44 < 0;
      if (v45)
      {
        v46 = *(_QWORD *)(a1 + 16);
        v47 = *(_OWORD *)a1;
        v48 = *(_QWORD *)(a2 - 8);
        *(_OWORD *)a1 = *v6;
        *(_QWORD *)(a1 + 16) = v48;
        *v6 = v47;
        *(_QWORD *)(a2 - 8) = v46;
      }
      return 1;
    case 3uLL:
      sub_22EA43454((const void **)a1, (_QWORD *)(a1 + 24), (const void **)(a2 - 24));
      return 1;
    case 4uLL:
      sub_22EA43984(a1, (__int128 *)(a1 + 24), (__int128 *)(a1 + 48), (__int128 *)(a2 - 24));
      return 1;
    case 5uLL:
      sub_22EA43B3C(a1, a1 + 24, a1 + 48, a1 + 72, a2 - 24);
      return 1;
    default:
      v14 = (const void **)(a1 + 48);
      sub_22EA43454((const void **)a1, (_QWORD *)(a1 + 24), (const void **)(a1 + 48));
      v15 = a1 + 72;
      if (a1 + 72 == a2)
        return 1;
      v16 = 0;
      v17 = 0;
      break;
  }
  while (1)
  {
    v18 = *((_BYTE *)v14 + 23);
    v19 = v18 < 0;
    if (v18 >= 0)
      v20 = v14;
    else
      v20 = *v14;
    v21 = v18 & 0x7F;
    if (v19)
      v22 = (size_t)v14[1];
    else
      v22 = v21;
    if (*(char *)(v15 + 23) < 0)
    {
      v24 = *(const void **)v15;
      v23 = *(_QWORD *)(v15 + 8);
    }
    else
    {
      v23 = *(unsigned __int8 *)(v15 + 23);
      v24 = (const void *)v15;
    }
    if (v22 >= v23)
      v25 = v23;
    else
      v25 = v22;
    v26 = memcmp(v24, v20, v25);
    v27 = v23 < v22;
    if (v26)
      v27 = v26 < 0;
    if (v27)
    {
      v49 = *(_OWORD *)v15;
      v50 = *(_QWORD *)(v15 + 16);
      *(_QWORD *)(v15 + 8) = 0;
      *(_QWORD *)(v15 + 16) = 0;
      *(_QWORD *)v15 = 0;
      v28 = v16;
      while (1)
      {
        v29 = a1 + v28;
        *(_OWORD *)(v29 + 72) = *(_OWORD *)(a1 + v28 + 48);
        *(_QWORD *)(v29 + 88) = *(_QWORD *)(a1 + v28 + 64);
        *(_BYTE *)(v29 + 71) = 0;
        *(_BYTE *)(v29 + 48) = 0;
        if (v28 == -48)
          break;
        v32 = *(const void **)(v29 + 24);
        v30 = v29 + 24;
        v31 = v32;
        v33 = *(_BYTE *)(v30 + 23);
        if (v33 >= 0)
          v34 = (const void *)v30;
        else
          v34 = v31;
        v35 = *(_QWORD *)(v30 + 8);
        if (v33 >= 0)
          v36 = v33 & 0x7F;
        else
          v36 = v35;
        if (v50 >= 0)
          v37 = HIBYTE(v50) & 0x7F;
        else
          v37 = *((_QWORD *)&v49 + 1);
        if (v50 >= 0)
          v38 = &v49;
        else
          v38 = (__int128 *)v49;
        if (v36 >= v37)
          v39 = v37;
        else
          v39 = v36;
        v40 = memcmp(v38, v34, v39);
        v41 = v37 < v36;
        if (v40)
          v41 = v40 < 0;
        v28 -= 24;
        if (!v41)
        {
          v42 = a1 + v28 + 72;
          goto LABEL_49;
        }
      }
      v42 = a1;
LABEL_49:
      *(_OWORD *)v42 = v49;
      *(_QWORD *)(v42 + 16) = v50;
      if (++v17 == 8)
        return v15 + 24 == a2;
    }
    v14 = (const void **)v15;
    v16 += 24;
    v15 += 24;
    if (v15 == a2)
      return 1;
  }
}

__n128 sub_22EA43984(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4)
{
  char v8;
  BOOL v9;
  const void *v10;
  size_t v11;
  size_t v12;
  size_t v13;
  const void *v14;
  size_t v15;
  int v16;
  __n128 result;
  _BOOL4 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  BOOL v23;
  const void *v24;
  size_t v25;
  size_t v26;
  size_t v27;
  const void *v28;
  size_t v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  BOOL v36;
  const void *v37;
  size_t v38;
  size_t v39;
  size_t v40;
  const void *v41;
  size_t v42;
  int v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;

  sub_22EA43454((const void **)a1, a2, (const void **)a3);
  v8 = *((_BYTE *)a3 + 23);
  v9 = v8 < 0;
  if (v8 >= 0)
    v10 = a3;
  else
    v10 = *(const void **)a3;
  v11 = v8 & 0x7F;
  if (v9)
    v12 = *((_QWORD *)a3 + 1);
  else
    v12 = v11;
  if (*((char *)a4 + 23) < 0)
  {
    v14 = *(const void **)a4;
    v13 = *((_QWORD *)a4 + 1);
  }
  else
  {
    v13 = *((unsigned __int8 *)a4 + 23);
    v14 = a4;
  }
  if (v12 >= v13)
    v15 = v13;
  else
    v15 = v12;
  v16 = memcmp(v14, v10, v15);
  v18 = v13 < v12;
  if (v16)
    v18 = v16 < 0;
  if (v18)
  {
    v19 = *((_QWORD *)a3 + 2);
    v20 = *a3;
    v21 = *((_QWORD *)a4 + 2);
    *a3 = *a4;
    *((_QWORD *)a3 + 2) = v21;
    *a4 = v20;
    *((_QWORD *)a4 + 2) = v19;
    v22 = *((_BYTE *)a2 + 23);
    v23 = v22 < 0;
    if (v22 >= 0)
      v24 = a2;
    else
      v24 = *(const void **)a2;
    v25 = v22 & 0x7F;
    if (v23)
      v26 = *((_QWORD *)a2 + 1);
    else
      v26 = v25;
    if (*((char *)a3 + 23) < 0)
    {
      v28 = *(const void **)a3;
      v27 = *((_QWORD *)a3 + 1);
    }
    else
    {
      v27 = *((unsigned __int8 *)a3 + 23);
      v28 = a3;
    }
    if (v26 >= v27)
      v29 = v27;
    else
      v29 = v26;
    v30 = memcmp(v28, v24, v29);
    v31 = v27 < v26;
    if (v30)
      v31 = v30 < 0;
    if (v31)
    {
      v32 = *((_QWORD *)a2 + 2);
      v33 = *a2;
      v34 = *((_QWORD *)a3 + 2);
      *a2 = *a3;
      *((_QWORD *)a2 + 2) = v34;
      *a3 = v33;
      *((_QWORD *)a3 + 2) = v32;
      v35 = *(_BYTE *)(a1 + 23);
      v36 = v35 < 0;
      if (v35 >= 0)
        v37 = (const void *)a1;
      else
        v37 = *(const void **)a1;
      v38 = v35 & 0x7F;
      if (v36)
        v39 = *(_QWORD *)(a1 + 8);
      else
        v39 = v38;
      if (*((char *)a2 + 23) < 0)
      {
        v41 = *(const void **)a2;
        v40 = *((_QWORD *)a2 + 1);
      }
      else
      {
        v40 = *((unsigned __int8 *)a2 + 23);
        v41 = a2;
      }
      if (v39 >= v40)
        v42 = v40;
      else
        v42 = v39;
      v43 = memcmp(v41, v37, v42);
      v44 = v40 < v39;
      if (v43)
        v44 = v43 < 0;
      if (v44)
      {
        v45 = *(_QWORD *)(a1 + 16);
        result = *(__n128 *)a1;
        v46 = *((_QWORD *)a2 + 2);
        *(_OWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 16) = v46;
        *a2 = (__int128)result;
        *((_QWORD *)a2 + 2) = v45;
      }
    }
  }
  return result;
}

__n128 sub_22EA43B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v10;
  BOOL v11;
  const void *v12;
  size_t v13;
  size_t v14;
  size_t v15;
  const void *v16;
  size_t v17;
  int v18;
  __n128 result;
  _BOOL4 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  BOOL v25;
  const void *v26;
  size_t v27;
  size_t v28;
  size_t v29;
  const void *v30;
  size_t v31;
  int v32;
  _BOOL4 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  BOOL v38;
  const void *v39;
  size_t v40;
  size_t v41;
  size_t v42;
  const void *v43;
  size_t v44;
  int v45;
  _BOOL4 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  BOOL v51;
  const void *v52;
  size_t v53;
  size_t v54;
  size_t v55;
  const void *v56;
  size_t v57;
  int v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t v61;

  sub_22EA43984(a1, (__int128 *)a2, (__int128 *)a3, (__int128 *)a4);
  v10 = *(_BYTE *)(a4 + 23);
  v11 = v10 < 0;
  if (v10 >= 0)
    v12 = (const void *)a4;
  else
    v12 = *(const void **)a4;
  v13 = v10 & 0x7F;
  if (v11)
    v14 = *(_QWORD *)(a4 + 8);
  else
    v14 = v13;
  if (*(char *)(a5 + 23) < 0)
  {
    v16 = *(const void **)a5;
    v15 = *(_QWORD *)(a5 + 8);
  }
  else
  {
    v15 = *(unsigned __int8 *)(a5 + 23);
    v16 = (const void *)a5;
  }
  if (v14 >= v15)
    v17 = v15;
  else
    v17 = v14;
  v18 = memcmp(v16, v12, v17);
  v20 = v15 < v14;
  if (v18)
    v20 = v18 < 0;
  if (v20)
  {
    v21 = *(_QWORD *)(a4 + 16);
    v22 = *(_OWORD *)a4;
    v23 = *(_QWORD *)(a5 + 16);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(_QWORD *)(a4 + 16) = v23;
    *(_OWORD *)a5 = v22;
    *(_QWORD *)(a5 + 16) = v21;
    v24 = *(_BYTE *)(a3 + 23);
    v25 = v24 < 0;
    if (v24 >= 0)
      v26 = (const void *)a3;
    else
      v26 = *(const void **)a3;
    v27 = v24 & 0x7F;
    if (v25)
      v28 = *(_QWORD *)(a3 + 8);
    else
      v28 = v27;
    if (*(char *)(a4 + 23) < 0)
    {
      v30 = *(const void **)a4;
      v29 = *(_QWORD *)(a4 + 8);
    }
    else
    {
      v29 = *(unsigned __int8 *)(a4 + 23);
      v30 = (const void *)a4;
    }
    if (v28 >= v29)
      v31 = v29;
    else
      v31 = v28;
    v32 = memcmp(v30, v26, v31);
    v33 = v29 < v28;
    if (v32)
      v33 = v32 < 0;
    if (v33)
    {
      v34 = *(_QWORD *)(a3 + 16);
      v35 = *(_OWORD *)a3;
      v36 = *(_QWORD *)(a4 + 16);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(_QWORD *)(a3 + 16) = v36;
      *(_OWORD *)a4 = v35;
      *(_QWORD *)(a4 + 16) = v34;
      v37 = *(_BYTE *)(a2 + 23);
      v38 = v37 < 0;
      if (v37 >= 0)
        v39 = (const void *)a2;
      else
        v39 = *(const void **)a2;
      v40 = v37 & 0x7F;
      if (v38)
        v41 = *(_QWORD *)(a2 + 8);
      else
        v41 = v40;
      if (*(char *)(a3 + 23) < 0)
      {
        v43 = *(const void **)a3;
        v42 = *(_QWORD *)(a3 + 8);
      }
      else
      {
        v42 = *(unsigned __int8 *)(a3 + 23);
        v43 = (const void *)a3;
      }
      if (v41 >= v42)
        v44 = v42;
      else
        v44 = v41;
      v45 = memcmp(v43, v39, v44);
      v46 = v42 < v41;
      if (v45)
        v46 = v45 < 0;
      if (v46)
      {
        v47 = *(_QWORD *)(a2 + 16);
        v48 = *(_OWORD *)a2;
        v49 = *(_QWORD *)(a3 + 16);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(_QWORD *)(a2 + 16) = v49;
        *(_OWORD *)a3 = v48;
        *(_QWORD *)(a3 + 16) = v47;
        v50 = *(_BYTE *)(a1 + 23);
        v51 = v50 < 0;
        if (v50 >= 0)
          v52 = (const void *)a1;
        else
          v52 = *(const void **)a1;
        v53 = v50 & 0x7F;
        if (v51)
          v54 = *(_QWORD *)(a1 + 8);
        else
          v54 = v53;
        if (*(char *)(a2 + 23) < 0)
        {
          v56 = *(const void **)a2;
          v55 = *(_QWORD *)(a2 + 8);
        }
        else
        {
          v55 = *(unsigned __int8 *)(a2 + 23);
          v56 = (const void *)a2;
        }
        if (v54 >= v55)
          v57 = v55;
        else
          v57 = v54;
        v58 = memcmp(v56, v52, v57);
        v59 = v55 < v54;
        if (v58)
          v59 = v58 < 0;
        if (v59)
        {
          v60 = *(_QWORD *)(a1 + 16);
          result = *(__n128 *)a1;
          v61 = *(_QWORD *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(_QWORD *)(a1 + 16) = v61;
          *(__n128 *)a2 = result;
          *(_QWORD *)(a2 + 16) = v60;
        }
      }
    }
  }
  return result;
}

void sub_22EA43D7C(unint64_t a1, unsigned __int8 *a2)
{
  unsigned int v4;
  int v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;

  if (*a2 == 180)
  {
    *(_BYTE *)(a1 + 27) = 1;
    v4 = *(_DWORD *)(a1 + 40);
    if (v4 >= *(_DWORD *)(a1 + 44))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v4 = *(_DWORD *)(a1 + 40);
    }
    *(_DWORD *)(*(_QWORD *)(a1 + 32) + 4 * v4) = 0;
    v5 = *(_DWORD *)(a1 + 40);
    *(_DWORD *)(a1 + 40) = v5 + 1;
    v6 = (uint64_t *)*((_QWORD *)a2 + 2);
    v7 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v7 == v6)
      v8 = 0;
    else
      v8 = (uint64_t *)*((_QWORD *)a2 + 3);
    if (v7 == v6)
      v9 = 0;
    else
      v9 = v6;
    v16 = 0;
    v17 = 0;
    v15 = v9;
    if (v9 != v8)
    {
      v10 = 0;
      do
      {
        if ((v10 & 3) != 0)
        {
          if ((v10 & 0xFFFFFFFFFFFFFFFCLL) != 0)
            v11 = (_QWORD *)((v10 & 0xFFFFFFFFFFFFFFFCLL) + 40);
          else
            v11 = (_QWORD *)sub_22F3AC1A8(*v9);
          sub_22EA43D7C(a1, *v11);
          v12 = *(_QWORD *)(a1 + 32) + 4 * *(unsigned int *)(a1 + 40);
          ++*(_DWORD *)(v12 - 4);
          if (v10 < 4)
            sub_22F3F2FE0((uint64_t)&v15, 1);
          else
            sub_22F0D8720((uint64_t)&v15);
        }
        else
        {
          sub_22EA43D7C(a1, *v9);
          v13 = *(_QWORD *)(a1 + 32) + 4 * *(unsigned int *)(a1 + 40);
          ++*(_DWORD *)(v13 - 4);
          v15 = v9 + 1;
        }
        v9 = v15;
        v10 = v16;
      }
      while (v15 != v8 || v16 != 0);
      v5 = *(_DWORD *)(a1 + 40) - 1;
    }
    *(_DWORD *)(a1 + 40) = v5;
  }
  else
  {
    sub_22EA43EE8(a1, a2);
  }
}

void sub_22EA43EE8(unint64_t a1, _DWORD *a2)
{
  int v2;

  v2 = *(unsigned __int8 *)a2;
  if (a2 && (v2 & 0xFE) == 0x70)
  {
    switch((*a2 >> 18) & 0x3F)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
      case 0x15:
      case 0x16:
      case 0x17:
      case 0x18:
      case 0x19:
      case 0x1A:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
      case 0x20:
        sub_22EA442A0(a1, (uint64_t)a2);
        return;
      default:
        goto LABEL_5;
    }
  }
  if (!a2 || v2 != 233)
LABEL_5:
    __asm { BR              X9 }
  sub_22EA4442C(a1, (uint64_t)a2);
}

void sub_22EA44158()
{
  unsigned __int8 *v0;
  unint64_t v1;

  sub_22EA44300(v1, v0);
}

void sub_22EA44174()
{
  unsigned int *v0;
  uint64_t *v1;
  _DWORD *v2;
  uint64_t v3;
  unsigned __int8 **v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;

  v2 = *(_DWORD **)((char *)v0 + *((unsigned __int8 *)v0 + 3));
  if (*(unsigned __int8 *)v2 == 211)
  {
    sub_22EA443B4(v1, v0);
  }
  else
  {
    sub_22EA43EE8((unint64_t)v1, v2);
    v3 = v0[4];
    if ((_DWORD)v3)
    {
      v4 = (unsigned __int8 **)((char *)&v0[2 * (((unint64_t)*v0 >> 18) & 1) + 2] + ((unint64_t)*v0 >> 24));
      v5 = 8 * v3;
      do
      {
        v6 = *v4++;
        v7 = sub_22EFFA6B0(v6);
        sub_22EA445FC((unint64_t)v1, v7);
        v5 -= 8;
      }
      while (v5);
    }
  }
}

void sub_22EA441A4()
{
  uint64_t v0;
  unint64_t v1;

  if ((*(_DWORD *)v0 & 0x1FC0000) == 0x100000)
    sub_22EA445FC(v1, *(unsigned __int8 **)(v0 + 16));
  else
    sub_22EA44520(v1, v0);
}

void sub_22EA441EC()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 26))
    JUMPOUT(0x22EA4422CLL);
}

void sub_22EA441F8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _DWORD **v3;
  uint64_t v4;

  v2 = *(unsigned __int16 *)(v0 + 4);
  if (*(_WORD *)(v0 + 4))
  {
    v3 = (_DWORD **)(v0 + 32);
    v4 = 8 * v2;
    do
    {
      if (*v3)
        sub_22EA43EE8(v1, *v3);
      ++v3;
      v4 -= 8;
    }
    while (v4);
  }
}

void sub_22EA442A0(unint64_t a1, uint64_t a2)
{
  if (((*(_DWORD *)a2 >> 18) & 0x3Eu) - 22 > 9)
  {
    sub_22EA44520(a1, a2);
  }
  else
  {
    sub_22EA445FC(a1, *(unsigned __int8 **)(a2 + 16));
    sub_22EA43EE8(a1);
  }
}

void sub_22EA44300(unint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 **v4;
  int v5;
  BOOL v6;
  unsigned __int8 *v7;
  unsigned __int8 **v8;
  uint64_t v9;
  int v10;
  unsigned __int8 **v11;
  int v12;

  if (sub_22EFD3AF0(*((_QWORD *)a2 + 2), &v12))
  {
    v4 = (unsigned __int8 **)(a2 + 40);
    v5 = *a2;
    v6 = v5 == 119;
    if (v5 == 119)
      v7 = a2;
    else
      v7 = 0;
    v8 = (unsigned __int8 **)(v7 + 48);
    if (v6)
      v4 = v8;
    v9 = (uint64_t)*v4;
    v10 = **v4;
    if (v10 == 180)
    {
      v11 = *(unsigned __int8 ***)(v9 + 16);
      if (((*(_QWORD *)(v9 + 24) - (_QWORD)v11) & 0x7FFFFFFF8) != 8)
      {
LABEL_13:
        sub_22EA445FC(a1, (unsigned __int8 *)v9);
        return;
      }
      v9 = (uint64_t)*v11;
      v10 = **v11;
    }
    if (v10 == 153 && (*(_DWORD *)v9 & 0x1FC0000) == 0x140000)
      v9 = *(_QWORD *)(v9 + 16);
    goto LABEL_13;
  }
  sub_22EA44520(a1, (uint64_t)a2);
}

void sub_22EA443B4(uint64_t *a1, unsigned int *a2)
{
  if (sub_22EFFA8F0((uint64_t)a2) == 1192)
  {
    sub_22EA445FC((unint64_t)a1, *(unsigned __int8 **)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24)));
  }
  else if ((sub_22EFFA934((uint64_t)a2, *a1) & 1) == 0)
  {
    sub_22EA44520((uint64_t)a1, (uint64_t)a2);
  }
}

void sub_22EA4442C(unint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  unsigned int v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  BOOL v7;
  unsigned __int8 *v8;

  if ((*(_DWORD *)a2 & 0x7C0000) != 0x100000 || !*(_BYTE *)(a1 + 24))
    goto LABEL_23;
  v2 = *(unsigned __int8 **)(a2 + 16);
  do
  {
    v3 = *v2;
    if (v3 > 0xD5)
    {
      if (v3 == 233)
      {
        if ((*(_DWORD *)v2 & 0x7C0000) != 0x300000)
          goto LABEL_23;
        v3 = *(_DWORD *)v2;
        v5 = v2 + 16;
      }
      else
      {
        if (v3 != 214)
          break;
        v5 = v2 + 24;
      }
    }
    else if (v3 == 155)
    {
      if ((**((_DWORD **)v2 + 2) & 0x18000) != 0)
        goto LABEL_23;
      v5 = v2 + 24;
      if (!v2[48])
        v5 = v2 + 32;
      v3 = 155;
    }
    else
    {
      if (v3 != 176)
        break;
      v4 = *((unsigned int *)v2 + 5);
      if ((_DWORD)v4 == -1)
        goto LABEL_23;
      v5 = &v2[8 * v4 + 40];
      v3 = 176;
    }
    v6 = *(unsigned __int8 **)v5;
    v7 = v6 == v2;
    v2 = v6;
  }
  while (!v7);
  if (v3 != 188)
  {
LABEL_23:
    if ((*(_DWORD *)a2 & 0x700000) != 0)
    {
      sub_22EA44520(a1, a2);
      return;
    }
    v8 = *(unsigned __int8 **)(a2 + 16);
    goto LABEL_26;
  }
  if (!*(_BYTE *)(a1 + 25))
  {
    v8 = *(unsigned __int8 **)(a2 + 16);
LABEL_26:
    sub_22EA445FC(a1, v8);
  }
}

void sub_22EA44520(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  _QWORD *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_22F0D492C(a2);
  v9 = v11;
  v3 = v13;
  v10 = v12;
  v4 = v14;
  v6 = *((_QWORD *)&v11 + 1);
  v5 = (uint64_t *)v11;
  if ((_QWORD)v11 != v13 || *((_QWORD *)&v11 + 1) != v14)
  {
    do
    {
      v8 = v5;
      if ((v6 & 3) != 0)
      {
        if ((v6 & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v8 = (_QWORD *)((v6 & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v8 = (_QWORD *)sub_22F3AC1A8(*v5);
      }
      if (*v8)
        sub_22EA43EE8(a1);
      if ((v6 & 3) != 0)
      {
        if (v6 < 4)
          sub_22F3F2FE0((uint64_t)&v9, 1);
        else
          sub_22F0D8720((uint64_t)&v9);
      }
      else
      {
        *(_QWORD *)&v9 = v5 + 1;
      }
      v6 = *((_QWORD *)&v9 + 1);
      v5 = (uint64_t *)v9;
    }
    while (v9 != __PAIR128__(v4, v3));
  }
}

unint64_t sub_22EA445FC(unint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 *v3;
  int v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 **v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t result;
  unsigned __int8 *i;
  int v12;

  while (1)
  {
    do
    {
      v3 = a2;
      v4 = *a2;
      if (v4 > 0xD5)
      {
        if (v4 == 233)
        {
          if ((*(_DWORD *)a2 & 0x7C0000) != 0x300000)
            return sub_22EA43EE8(a1);
          v4 = *(_DWORD *)a2;
          v6 = a2 + 16;
        }
        else
        {
          if (v4 != 214)
            break;
          v6 = a2 + 24;
        }
      }
      else if (v4 == 155)
      {
        if ((**((_DWORD **)a2 + 2) & 0x18000) != 0)
          return sub_22EA43EE8(a1);
        v6 = a2 + 24;
        if (!a2[48])
          v6 = a2 + 32;
        v4 = 155;
      }
      else
      {
        if (v4 != 176)
          break;
        v5 = *((unsigned int *)a2 + 5);
        if ((_DWORD)v5 == -1)
          return sub_22EA43EE8(a1);
        v6 = &a2[8 * v5 + 40];
        v4 = 176;
      }
      a2 = *(unsigned __int8 **)v6;
    }
    while (*(unsigned __int8 **)v6 != v3);
    if (v4 > 160)
    {
      if (v4 == 210)
      {
        v7 = (unsigned __int8 **)(v3 + 16);
        goto LABEL_27;
      }
      if (v4 == 161)
      {
        v8 = a1;
        v9 = (uint64_t)v3;
        return sub_22EA447E8(v8, v9);
      }
    }
    else
    {
      if (v4 == 102)
      {
        sub_22EA43EE8(a1);
        v7 = (unsigned __int8 **)(v3 + 48);
        goto LABEL_27;
      }
      if (v4 == 103)
      {
        sub_22EA43EE8(a1);
        sub_22EA445FC(a1, *((_QWORD *)v3 + 4));
        v7 = (unsigned __int8 **)(v3 + 40);
        goto LABEL_27;
      }
    }
    if ((v4 & 0xFE) != 0x70)
      break;
    if ((*(_DWORD *)v3 & 0xFC0000) != 0x800000)
      return sub_22EA43EE8(a1);
    sub_22EA43EE8(a1);
    v7 = (unsigned __int8 **)(v3 + 24);
LABEL_27:
    a2 = *v7;
  }
  if (v4 != 188)
    return sub_22EA43EE8(a1);
  if (!*(_BYTE *)(a1 + 27) || (result = sub_22EA449F8(a1, v3, 0), (result & 1) == 0))
  {
    for (i = v3; ; i = *(unsigned __int8 **)(result + 16))
    {
      result = (unint64_t)sub_22EFFA6B0(i);
      v9 = result;
      v12 = *(unsigned __int8 *)result;
      if (v12 != 188)
        break;
      if ((*(_DWORD *)(*(_QWORD *)(result + 24) + 28) & 0x7Fu) - 49 > 2)
        return result;
    }
    if (v12 == 161)
    {
      v8 = a1;
      return sub_22EA447E8(v8, v9);
    }
  }
  return result;
}

unint64_t sub_22EA447E8(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  int v5;
  char v6;
  int v7;
  int v8;
  BOOL v9;
  int v10;
  uint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  int v26;
  uint64_t v27;

  v2 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(result + 16) != v2)
    return result;
  v4 = result;
  if (*(_BYTE *)(result + 26))
  {
    v5 = 7092;
    goto LABEL_22;
  }
  v6 = *(_BYTE *)(v2 + 96);
  v7 = v6 & 7;
  if (v7 == 2 || ((v8 = v6 & 0x18, !v7) ? (v9 = v8 == 16) : (v9 = 0), v9))
  {
    v10 = *(_DWORD *)(v2 + 28) & 0x7F;
    v5 = 7000;
    if (v10 == 64 || v10 == 62)
    {
LABEL_22:
      v18 = *(_QWORD *)(v4 + 8);
      if ((*(_BYTE *)(a2 + 2) & 4) != 0)
      {
        v25 = *(_OWORD *)(a2 + 32);
        v19 = sub_22F0AB0EC((unint64_t *)&v25);
      }
      else
      {
        v19 = *(_DWORD *)(a2 + 4);
      }
      *((_QWORD *)&v25 + 1) = *(_QWORD *)(v18 + 88) + 2128;
      v26 = v5;
      v20 = (_BYTE *)sub_22E3B8AAC(*((uint64_t *)&v25 + 1));
      *(_QWORD *)&v25 = v20;
      v21 = *v20;
      v20[v21 + 1] = 11;
      *v20 = v21 + 1;
      *(_QWORD *)&v20[8 * v21 + 16] = v2;
      v22 = *(unsigned int *)(*(_QWORD *)(v4 + 16) + 24);
      v23 = (uint64_t)(v20 + 336);
      sub_22E4D6448((uint64_t)(v20 + 336), v22 | (v22 << 32), 1);
      sub_22F0D4E74(a2);
      sub_22E4D6448(v23, v24, 1);
      v27 = a2;
      result = sub_22EB52944(v18, v19, &v27, 1uLL, (uint64_t *)&v25);
      if ((_QWORD)v25)
      {
        result = *((_QWORD *)&v25 + 1);
        if (*((_QWORD *)&v25 + 1))
          return sub_22E3BB10C(*((unint64_t *)&v25 + 1), v25);
      }
      return result;
    }
    v11 = *(_QWORD *)(v2 + 16);
    v12 = (_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
    v13 = v11 & 0xFFFFFFFFFFFFFFF8;
    if ((v11 & 4) != 0)
      v13 = v12[1];
    result = sub_22EFCBB30(v13);
    v14 = *(_WORD *)(result + 8) & 0x7F;
    if (v14 != 16 && v14 != 83)
    {
      if ((v11 & 4) != 0)
        v12 = (_QWORD *)*v12;
      if (((_WORD)v12[1] & 0x7Eu) - 34 > 3)
      {
        v5 = 7000;
        goto LABEL_22;
      }
    }
  }
  v15 = *(_QWORD *)(v2 + 16);
  v16 = v15 & 0xFFFFFFFFFFFFFFF8;
  if ((v15 & 4) != 0)
    v16 = *(_QWORD *)v16;
  v17 = *(_WORD *)(v16 + 8) & 0x7F;
  if (v17 == 83
    || v17 == 16
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                + 16) == 45)
  {
    v5 = 7091;
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_22EA449F8(unint64_t a1, unsigned __int8 *a2, char a3)
{
  unsigned __int8 *v4;
  int v6;
  unsigned int v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  BOOL v26;
  unsigned int v27;
  _BYTE v28[16];
  void *v29;
  uint64_t v30;
  _QWORD v31[5];

  v4 = a2;
  v31[4] = *MEMORY[0x24BDAC8D0];
  v29 = v31;
  v30 = 0x400000000;
  v6 = *a2;
  if (v6 == 188)
  {
    v7 = 0;
    v8 = 0;
    while (1)
    {
      v9 = *((_QWORD *)v4 + 3);
      if (!v9 || (*(_DWORD *)(v9 + 28) & 0x7Fu) - 52 < 0xFFFFFFFD)
        break;
      if (v7 >= HIDWORD(v30))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v7 = v30;
      }
      *((_QWORD *)v29 + v7) = v9;
      v7 = v30 + 1;
      LODWORD(v30) = v30 + 1;
      v8 |= (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                       + 16) & 0xFE) == 40;
      v4 = sub_22EFFA6B0(*((unsigned __int8 **)v4 + 2));
      v6 = *v4;
      if (v6 != 188)
        goto LABEL_13;
    }
LABEL_15:
    v11 = 0;
    goto LABEL_16;
  }
  v7 = 0;
  v8 = 0;
LABEL_13:
  if (v6 != 161 || *((_QWORD *)v4 + 2) != *(_QWORD *)(a1 + 16))
    goto LABEL_15;
  if (v8 & 1 | ((a3 & 1) == 0))
  {
    v27 = 0;
    if (!v7)
      goto LABEL_39;
    v13 = 8 * v7;
    v14 = (char *)v29 - 8;
    do
    {
      v15 = sub_22EFC306C(*(_QWORD *)&v14[v13]);
      v16 = v27;
      if (v27 >= 4uLL)
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v16 = v27;
      }
      *(_DWORD *)&v28[4 * v16] = v15;
      v17 = ++v27;
      v13 -= 8;
    }
    while (v13);
    v18 = *(unsigned int *)(a1 + 40);
    if (!(_DWORD)v17 || (_DWORD)v18 == 0)
    {
LABEL_39:
      sub_22EA447E8(a1, (uint64_t)v4);
    }
    else
    {
      v20 = 0;
      v21 = 4 * v18 - 4;
      v22 = 4 * v17 - 4;
      while (1)
      {
        v23 = *(_DWORD *)&v28[v20];
        v24 = *(_DWORD *)(*(_QWORD *)(a1 + 32) + v20);
        if (v23 < v24)
          break;
        v26 = v23 > v24 || v22 == v20 || v21 == v20;
        v20 += 4;
        if (v26)
          goto LABEL_39;
      }
    }
  }
  v11 = 1;
LABEL_16:
  if (v29 != v31)
    free(v29);
  return v11;
}

BOOL sub_22EA44C64(uint64_t a1)
{
  uint64_t v1;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  return !sub_22EA44CA0(*(uint64_t **)v1, (uint64_t *)(*(_QWORD *)v1 + 8 * *(unsigned int *)(v1 + 8)));
}

BOOL sub_22EA44CA0(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v5;

  v2 = a2;
  v3 = a1;
  if (a1 >= a2)
  {
    if (a2 == a1)
    {
      v2 = a1;
    }
    else
    {
      v5 = a2;
      while (!sub_22EFA55D0(*v5))
      {
        ++v5;
        v2 = v3;
        if (v5 == v3)
          return v3 == v2;
      }
      v2 = v5;
    }
  }
  else
  {
    while (!sub_22EFA55D0(*v3))
    {
      if (++v3 == v2)
      {
        v3 = v2;
        return v3 == v2;
      }
    }
  }
  return v3 == v2;
}

void sub_22EA44D30(void **a1)
{
  char *v1;
  char *v3;
  void *v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = (char *)*a1;
  if (*a1)
  {
    v3 = (char *)a1[1];
    v4 = *a1;
    if (v3 != v1)
    {
      v5 = v3;
      do
      {
        v7 = *((_QWORD *)v5 - 3);
        v5 -= 24;
        v6 = v7;
        if (v7)
        {
          v8 = *((_QWORD *)v3 - 2);
          if (v8)
          {
            sub_22E3BB10C(v8, v6);
            *((_QWORD *)v3 - 3) = 0;
          }
        }
        v3 = v5;
      }
      while (v5 != v1);
      v4 = *a1;
    }
    a1[1] = v1;
    operator delete(v4);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_22EA44DA8(void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 56;
        sub_22F31EBDC((uint64_t)(v4 - 48));
        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_22EA44E1C(void ***a1)
{
  void **v1;
  char *v2;
  char *v4;
  void *v5;
  char *v6;

  v1 = *a1;
  v2 = (char *)**a1;
  if (v2)
  {
    v4 = (char *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = (char *)*((_QWORD *)v4 - 14);
        if (v4 - 96 != v6)
          free(v6);
        v4 -= 120;
      }
      while (v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void ***sub_22EA44E98(void ***a1)
{
  void **v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*v2 != v2 + 2)
      free(*v2);
    MEMORY[0x2348A0E9C](v2, 0x1080C4003DAF236);
  }
  return a1;
}

unsigned __int8 **sub_22EA44EF0(unsigned __int8 **a1, uint64_t *a2)
{
  uint64_t v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;

  v3 = *a2;
  v4 = *a1;
  if (!v4)
  {
    v4 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)a1[1]);
    *a1 = v4;
  }
  v4[*v4 + 1] = 12;
  v5 = *a1;
  v6 = **a1;
  *v5 = v6 + 1;
  *(_QWORD *)&v5[8 * v6 + 16] = v3;
  return a1;
}

unsigned int *sub_22EA44F50(_QWORD **a1, int a2, __int128 *a3)
{
  unsigned int *result;
  __int128 v4;
  int v5;
  unsigned int v6[24];

  v5 = *((_DWORD *)a3 + 4);
  v4 = *a3;
  *(_QWORD *)a3 = 0;
  sub_22E90379C(*a1, a2, (uint64_t)&v4, 0, (uint64_t)v6);
  result = sub_22E903BEC(v6);
  if ((_QWORD)v4)
  {
    result = (unsigned int *)*((_QWORD *)&v4 + 1);
    if (*((_QWORD *)&v4 + 1))
      return (unsigned int *)sub_22E3BB10C(*((unint64_t *)&v4 + 1), v4);
  }
  return result;
}

unsigned int *sub_22EA44FB0(_QWORD **a1, int a2, __int128 *a3)
{
  unsigned int *result;
  __int128 v4;
  int v5;
  unsigned int v6[24];

  v5 = *((_DWORD *)a3 + 4);
  v4 = *a3;
  *(_QWORD *)a3 = 0;
  sub_22E90379C(*a1, a2, (uint64_t)&v4, 0, (uint64_t)v6);
  result = sub_22E903BEC(v6);
  if ((_QWORD)v4)
  {
    result = (unsigned int *)*((_QWORD *)&v4 + 1);
    if (*((_QWORD *)&v4 + 1))
      return (unsigned int *)sub_22E3BB10C(*((unint64_t *)&v4 + 1), v4);
  }
  return result;
}

uint64_t sub_22EA45010(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  int v3;
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  BOOL v10;
  unsigned int v11;
  uint64_t result;

  v3 = *(_DWORD *)(a1 + 16);
  if (v3)
  {
    v4 = v3 - 1;
    v5 = ((*a2 >> 4) ^ (*a2 >> 9)) & (v3 - 1);
    v6 = (_QWORD *)(*(_QWORD *)a1 + 16 * v5);
    v7 = *v6;
    if (*a2 == *v6)
    {
LABEL_11:
      result = 1;
    }
    else
    {
      v8 = 0;
      v9 = 1;
      while (v7 != -4096)
      {
        if (v8)
          v10 = 0;
        else
          v10 = v7 == -8192;
        if (v10)
          v8 = v6;
        v11 = v5 + v9++;
        v5 = v11 & v4;
        v6 = (_QWORD *)(*(_QWORD *)a1 + 16 * (v11 & v4));
        v7 = *v6;
        if (*a2 == *v6)
          goto LABEL_11;
      }
      result = 0;
      if (v8)
        v6 = v8;
    }
  }
  else
  {
    v6 = 0;
    result = 0;
  }
  *a3 = v6;
  return result;
}

void sub_22EA450A4(uint64_t *a1, unsigned __int32 a2, __int128 *a3)
{
  int v3;
  uint64_t v4;
  __int128 v5;
  __n128 v6;
  __int128 v7;
  int v8;

  v3 = *((_DWORD *)a3 + 4);
  v4 = *a1;
  v6.n128_u32[0] = a2;
  v6.n128_u8[4] = 0;
  v6.n128_u8[8] = 0;
  v8 = v3;
  v5 = *a3;
  *(_QWORD *)a3 = 0;
  v7 = v5;
  sub_22EA3DAF0(v4, &v6);
  if ((_QWORD)v7)
  {
    if (*((_QWORD *)&v7 + 1))
      sub_22E3BB10C(*((unint64_t *)&v7 + 1), v7);
  }
}

void sub_22EA450FC(uint64_t a1, _QWORD *a2, uint64_t a3, char a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  __int128 v16;
  unsigned __int32 v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int32 v23;
  unint64_t v24;
  unint64_t v25;
  unsigned __int32 v26;
  unsigned __int32 v27;
  unint64_t v28;
  int v29;
  __int128 v30;
  uint64_t v31;
  unsigned __int32 v32;
  unsigned __int32 v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  BOOL v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int32 v44;
  unint64_t v45;
  _QWORD *v46;
  unsigned __int32 v47;
  int v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int32 v51;
  unsigned __int32 v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  int v59;
  __int128 v60;
  int v61;
  _QWORD *v62;
  BOOL v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  unsigned int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unsigned int v75;
  uint64_t v76;
  int64_t v77;
  int64_t v78;
  int64_t v79;
  uint64_t v80;
  unsigned int *v81;
  unsigned int v82;
  BOOL v83;
  unsigned int *v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  unsigned int v88;
  __int128 v89;
  unsigned int *v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  uint64_t v95;
  _QWORD *v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t *v108;
  unsigned int v109;
  uint64_t v110;
  int v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;
  _DWORD *v116;
  uint64_t v117;
  unsigned int v118;
  uint64_t v119;
  int v120;
  _DWORD *v121;
  unint64_t v122;
  _DWORD *v123;
  unint64_t v124;
  __n128 *v125;
  __n128 *v126;
  __n128 *v127;
  uint64_t v129;
  __int128 v130;
  uint64_t v131;
  __int128 v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned __int32 v138;
  int v139;
  int v140;
  int v141;
  int v142;

__n128 sub_22EA45B38(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5)
{
  __n128 result;
  unsigned __int32 v11;
  unint64_t v12;
  unsigned __int32 v13;
  unint64_t v14;
  unsigned __int32 v15;
  unint64_t v16;
  unsigned __int32 v17;
  unint64_t v18;
  unsigned __int32 v19;
  unint64_t v20;
  unsigned __int32 v21;
  unint64_t v22;
  unsigned __int32 v23;
  unint64_t v24;
  unsigned __int32 v25;
  unint64_t v26;

  result.n128_u64[0] = sub_22EA46074(a1, a2, a3, a4).n128_u64[0];
  if (a5->n128_u32[0] < a4->n128_u32[0])
  {
    v11 = a4->n128_u32[2];
    v12 = a4->n128_u64[0];
    v13 = a4[2].n128_u32[0];
    result = a4[1];
    a4[1].n128_u64[0] = 0;
    v14 = a5->n128_u64[0];
    a4->n128_u32[2] = a5->n128_u32[2];
    a4->n128_u64[0] = v14;
    a4[2].n128_u32[0] = a5[2].n128_u32[0];
    a4[1] = a5[1];
    a5->n128_u64[0] = v12;
    a5->n128_u32[2] = v11;
    a5[2].n128_u32[0] = v13;
    a5[1] = result;
    if (a4->n128_u32[0] < a3->n128_u32[0])
    {
      v15 = a3->n128_u32[2];
      v16 = a3->n128_u64[0];
      v17 = a3[2].n128_u32[0];
      result = a3[1];
      a3[1].n128_u64[0] = 0;
      v18 = a4->n128_u64[0];
      a3->n128_u32[2] = a4->n128_u32[2];
      a3->n128_u64[0] = v18;
      a3[2].n128_u32[0] = a4[2].n128_u32[0];
      a3[1] = a4[1];
      a4->n128_u64[0] = v16;
      a4->n128_u32[2] = v15;
      a4[2].n128_u32[0] = v17;
      a4[1] = result;
      if (a3->n128_u32[0] < a2->n128_u32[0])
      {
        v19 = a2->n128_u32[2];
        v20 = a2->n128_u64[0];
        v21 = a2[2].n128_u32[0];
        result = a2[1];
        a2[1].n128_u64[0] = 0;
        v22 = a3->n128_u64[0];
        a2->n128_u32[2] = a3->n128_u32[2];
        a2->n128_u64[0] = v22;
        a2[2].n128_u32[0] = a3[2].n128_u32[0];
        a2[1] = a3[1];
        a3->n128_u64[0] = v20;
        a3->n128_u32[2] = v19;
        a3[2].n128_u32[0] = v21;
        a3[1] = result;
        if (a2->n128_u32[0] < a1->n128_u32[0])
        {
          v23 = a1->n128_u32[2];
          v24 = a1->n128_u64[0];
          v25 = a1[2].n128_u32[0];
          result = a1[1];
          a1[1].n128_u64[0] = 0;
          v26 = a2->n128_u64[0];
          a1->n128_u32[2] = a2->n128_u32[2];
          a1->n128_u64[0] = v26;
          a1[2].n128_u32[0] = a2[2].n128_u32[0];
          a1[1] = a2[1];
          a2->n128_u64[0] = v24;
          a2->n128_u32[2] = v23;
          a2[2].n128_u32[0] = v25;
          a2[1] = result;
        }
      }
    }
  }
  return result;
}

__n128 sub_22EA45CD0(__n128 *a1, __n128 *a2, __n128 *a3)
{
  unsigned __int32 v3;
  unsigned __int32 v4;
  unsigned __int32 v5;
  unint64_t v6;
  unsigned __int32 v7;
  __n128 result;
  unint64_t v9;
  unsigned __int32 v10;
  unint64_t v11;
  unsigned __int32 v12;
  unint64_t v13;
  unsigned __int32 v14;
  unint64_t v15;
  unsigned __int32 v16;
  unint64_t v17;
  unsigned __int32 v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned __int32 v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unsigned __int32 v26;

  v3 = a2->n128_u32[0];
  v4 = a3->n128_u32[0];
  if (a2->n128_u32[0] >= a1->n128_u32[0])
  {
    if (v4 < v3)
    {
      v10 = a2->n128_u32[2];
      v11 = a2->n128_u64[0];
      v12 = a2[2].n128_u32[0];
      result = a2[1];
      a2[1].n128_u64[0] = 0;
      v13 = a3->n128_u64[0];
      a2->n128_u32[2] = a3->n128_u32[2];
      a2->n128_u64[0] = v13;
      a2[2].n128_u32[0] = a3[2].n128_u32[0];
      a2[1] = a3[1];
      a3->n128_u64[0] = v11;
      a3->n128_u32[2] = v10;
      a3[2].n128_u32[0] = v12;
      a3[1] = result;
      if (a2->n128_u32[0] < a1->n128_u32[0])
      {
        v14 = a1->n128_u32[2];
        v15 = a1->n128_u64[0];
        v16 = a1[2].n128_u32[0];
        result = a1[1];
        a1[1].n128_u64[0] = 0;
        v17 = a2->n128_u64[0];
        a1->n128_u32[2] = a2->n128_u32[2];
        a1->n128_u64[0] = v17;
        a1[2].n128_u32[0] = a2[2].n128_u32[0];
        a1[1] = a2[1];
        a2->n128_u64[0] = v15;
        a2->n128_u32[2] = v14;
        a2[2].n128_u32[0] = v16;
        a2[1] = result;
      }
    }
  }
  else if (v4 >= v3)
  {
    v25 = a1->n128_u64[0];
    v26 = a1->n128_u32[2];
    v18 = a1[2].n128_u32[0];
    v20 = a1[1].n128_u64[0];
    v19 = a1[1].n128_u64[1];
    a1[1].n128_u64[0] = 0;
    v21 = a2->n128_u64[0];
    a1->n128_u32[2] = a2->n128_u32[2];
    a1->n128_u64[0] = v21;
    a1[2].n128_u32[0] = a2[2].n128_u32[0];
    result = a2[1];
    a1[1] = result;
    a2->n128_u64[0] = v25;
    a2->n128_u32[2] = v26;
    a2[2].n128_u32[0] = v18;
    a2[1].n128_u64[0] = v20;
    a2[1].n128_u64[1] = v19;
    if (a3->n128_u32[0] < a2->n128_u32[0])
    {
      v22 = a2->n128_u32[2];
      v23 = a2->n128_u64[0];
      a2[1].n128_u64[0] = 0;
      v24 = a3->n128_u64[0];
      a2->n128_u32[2] = a3->n128_u32[2];
      a2->n128_u64[0] = v24;
      a2[2].n128_u32[0] = a3[2].n128_u32[0];
      result = a3[1];
      a2[1] = result;
      a3->n128_u64[0] = v23;
      a3->n128_u32[2] = v22;
      a3[2].n128_u32[0] = v18;
      a3[1].n128_u64[0] = v20;
      a3[1].n128_u64[1] = v19;
    }
  }
  else
  {
    v5 = a1->n128_u32[2];
    v6 = a1->n128_u64[0];
    v7 = a1[2].n128_u32[0];
    result = a1[1];
    a1[1].n128_u64[0] = 0;
    v9 = a3->n128_u64[0];
    a1->n128_u32[2] = a3->n128_u32[2];
    a1->n128_u64[0] = v9;
    a1[2].n128_u32[0] = a3[2].n128_u32[0];
    a1[1] = a3[1];
    a3->n128_u64[0] = v6;
    a3->n128_u32[2] = v5;
    a3[2].n128_u32[0] = v7;
    a3[1] = result;
  }
  return result;
}

BOOL sub_22EA45E84(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  _BOOL8 result;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  int v9;
  __int128 v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 3);
  result = 1;
  switch(v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      v6 = (uint64_t *)(a2 - 40);
      if (*(_DWORD *)(a2 - 40) < *(_DWORD *)a1)
      {
        v7 = *(_DWORD *)(a1 + 8);
        v8 = *(_QWORD *)a1;
        v9 = *(_DWORD *)(a1 + 32);
        v10 = *(_OWORD *)(a1 + 16);
        *(_QWORD *)(a1 + 16) = 0;
        v11 = *v6;
        *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 - 32);
        *(_QWORD *)a1 = v11;
        *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 - 8);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 - 24);
        *v6 = v8;
        *(_DWORD *)(a2 - 32) = v7;
        *(_DWORD *)(a2 - 8) = v9;
        *(_OWORD *)(a2 - 24) = v10;
      }
      return result;
    case 3uLL:
      sub_22EA45CD0((__n128 *)a1, (__n128 *)(a1 + 40), (__n128 *)(a2 - 40));
      return 1;
    case 4uLL:
      sub_22EA46074((__n128 *)a1, (__n128 *)(a1 + 40), (__n128 *)(a1 + 80), (__n128 *)(a2 - 40));
      return 1;
    case 5uLL:
      sub_22EA45B38((__n128 *)a1, (__n128 *)(a1 + 40), (__n128 *)(a1 + 80), (__n128 *)(a1 + 120), (__n128 *)(a2 - 40));
      return 1;
    default:
      v12 = (_DWORD *)(a1 + 80);
      sub_22EA45CD0((__n128 *)a1, (__n128 *)(a1 + 40), (__n128 *)(a1 + 80));
      v13 = a1 + 120;
      if (a1 + 120 == a2)
        return 1;
      v14 = 0;
      v15 = 0;
      break;
  }
  while (1)
  {
    v16 = *(_DWORD *)v13;
    if (*(_DWORD *)v13 < *v12)
    {
      v17 = *(_QWORD *)(v13 + 4);
      v18 = *(_DWORD *)(v13 + 32);
      v19 = *(_OWORD *)(v13 + 16);
      v20 = v14;
      *(_QWORD *)(v13 + 16) = 0;
      while (1)
      {
        v21 = a1 + v20;
        *(_QWORD *)(v21 + 120) = *(_QWORD *)(a1 + v20 + 80);
        *(_DWORD *)(v21 + 128) = *(_DWORD *)(a1 + v20 + 88);
        *(_DWORD *)(v21 + 152) = *(_DWORD *)(a1 + v20 + 112);
        *(_OWORD *)(v21 + 136) = *(_OWORD *)(a1 + v20 + 96);
        *(_QWORD *)(v21 + 96) = 0;
        if (v20 == -80)
          break;
        v20 -= 40;
        if (v16 >= *(_DWORD *)(v21 + 40))
        {
          v22 = a1 + v20 + 120;
          goto LABEL_12;
        }
      }
      v22 = a1;
LABEL_12:
      *(_DWORD *)v22 = v16;
      *(_QWORD *)(v22 + 4) = v17;
      *(_DWORD *)(v22 + 32) = v18;
      *(_OWORD *)(v22 + 16) = v19;
      if (++v15 == 8)
        return v13 + 40 == a2;
    }
    v12 = (_DWORD *)v13;
    v14 += 40;
    v13 += 40;
    if (v13 == a2)
      return 1;
  }
}

__n128 sub_22EA46074(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4)
{
  __n128 result;
  unsigned __int32 v9;
  unint64_t v10;
  unsigned __int32 v11;
  unint64_t v12;
  unsigned __int32 v13;
  unint64_t v14;
  unsigned __int32 v15;
  unint64_t v16;
  unsigned __int32 v17;
  unint64_t v18;
  unsigned __int32 v19;
  unint64_t v20;

  result.n128_u64[0] = sub_22EA45CD0(a1, a2, a3).n128_u64[0];
  if (a4->n128_u32[0] < a3->n128_u32[0])
  {
    v9 = a3->n128_u32[2];
    v10 = a3->n128_u64[0];
    v11 = a3[2].n128_u32[0];
    result = a3[1];
    a3[1].n128_u64[0] = 0;
    v12 = a4->n128_u64[0];
    a3->n128_u32[2] = a4->n128_u32[2];
    a3->n128_u64[0] = v12;
    a3[2].n128_u32[0] = a4[2].n128_u32[0];
    a3[1] = a4[1];
    a4->n128_u64[0] = v10;
    a4->n128_u32[2] = v9;
    a4[2].n128_u32[0] = v11;
    a4[1] = result;
    if (a3->n128_u32[0] < a2->n128_u32[0])
    {
      v13 = a2->n128_u32[2];
      v14 = a2->n128_u64[0];
      v15 = a2[2].n128_u32[0];
      result = a2[1];
      a2[1].n128_u64[0] = 0;
      v16 = a3->n128_u64[0];
      a2->n128_u32[2] = a3->n128_u32[2];
      a2->n128_u64[0] = v16;
      a2[2].n128_u32[0] = a3[2].n128_u32[0];
      a2[1] = a3[1];
      a3->n128_u64[0] = v14;
      a3->n128_u32[2] = v13;
      a3[2].n128_u32[0] = v15;
      a3[1] = result;
      if (a2->n128_u32[0] < a1->n128_u32[0])
      {
        v17 = a1->n128_u32[2];
        v18 = a1->n128_u64[0];
        v19 = a1[2].n128_u32[0];
        result = a1[1];
        a1[1].n128_u64[0] = 0;
        v20 = a2->n128_u64[0];
        a1->n128_u32[2] = a2->n128_u32[2];
        a1->n128_u64[0] = v20;
        a1[2].n128_u32[0] = a2[2].n128_u32[0];
        a1[1] = a2[1];
        a2->n128_u64[0] = v18;
        a2->n128_u32[2] = v17;
        a2[2].n128_u32[0] = v19;
        a2[1] = result;
      }
    }
  }
  return result;
}

uint64_t sub_22EA461AC(uint64_t *a1, _QWORD *a2, _QWORD *a3)
{
  int v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  _QWORD *v10;
  int v11;
  BOOL v12;
  unsigned int v13;

  v3 = *((_DWORD *)a1 + 4);
  if (v3)
  {
    v6 = *a1;
    v7 = v3 - 1;
    v8 = ((*a2 >> 4) ^ (*a2 >> 9)) & (v3 - 1);
    v4 = (_QWORD *)(*a1 + 16 * v8);
    v9 = *v4;
    if (*a2 == *v4)
    {
      result = 1;
    }
    else
    {
      v10 = 0;
      v11 = 1;
      result = 1;
      while (v9 != -4096)
      {
        if (v10)
          v12 = 0;
        else
          v12 = v9 == -8192;
        if (v12)
          v10 = v4;
        v13 = v8 + v11++;
        v8 = v13 & v7;
        v4 = (_QWORD *)(v6 + 16 * (v13 & v7));
        v9 = *v4;
        if (*a2 == *v4)
          goto LABEL_3;
      }
      result = 0;
      if (v10)
        v4 = v10;
    }
  }
  else
  {
    v4 = 0;
    result = 0;
  }
LABEL_3:
  *a3 = v4;
  return result;
}

_QWORD *sub_22EA46248(uint64_t a1, int a2)
{
  uint64_t v3;
  llvm *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(llvm **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = (_QWORD *)MEMORY[0x23489D23C](16 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F31EF00(a1, v4, (_QWORD *)v4 + 2 * v3);
    return (_QWORD *)llvm::deallocate_buffer(v4, (void *)(16 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 16 * v10;
      do
      {
        *result = -4096;
        result += 2;
        v11 -= 16;
      }
      while (v11);
    }
  }
  return result;
}

unint64_t sub_22EA46308(_QWORD *a1, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t result;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26[25];
  unsigned __int8 v27;
  uint64_t v28;

  v28 = a2;
  v27 = a3;
  v8 = sub_22EA1C0A0(a1[11], *(_QWORD *)(a2 + 40));
  if (v8)
    v9 = 1;
  else
    v9 = a3 == 0;
  if (!v9)
  {
    if (!sub_22EA1F584((uint64_t)a1, a2))
      return 0;
    goto LABEL_12;
  }
  v10 = v8;
  if (!v8)
  {
LABEL_12:
    if (!a3)
    {
      v18 = *(_QWORD *)(*(_QWORD *)(a1[11] + 1960) + 80);
      v19 = sub_22E3CD31C((uint64_t *)(v18 + 72), v18);
      result = sub_22EFCE144(v19 + 40, *(_QWORD *)(a2 + 40));
      if (!result)
        return result;
      while (1)
      {
        v10 = result & 0xFFFFFFFFFFFFFFF8;
        if ((result & 4) == 0 || !v10)
          break;
        v17 = *(_DWORD *)(*(_QWORD *)v10 + 28);
        if ((v17 & 0x7Fu) - 60 < 7)
        {
          v10 = *(_QWORD *)v10;
          goto LABEL_32;
        }
        result = *(_QWORD *)(v10 + 8);
        if (!result)
          return result;
      }
      v17 = *(_DWORD *)(v10 + 28);
      if ((v17 & 0x7Fu) - 60 < 7)
        goto LABEL_32;
      return 0;
    }
    v27 = 0;
    v14 = *(unsigned int *)(a4 + 16);
    if ((_DWORD)v14)
    {
      v15 = *(_QWORD **)(a4 + 8);
      v16 = 8 * v14;
      while (1)
      {
        v10 = *v15 & 0xFFFFFFFFFFFFFFFCLL;
        v17 = *(_DWORD *)(v10 + 28);
        if ((v17 & 0x7Fu) - 60 < 7)
          break;
        ++v15;
        v16 -= 8;
        if (!v16)
          return 0;
      }
      goto LABEL_32;
    }
    return 0;
  }
  if (a3 && !sub_22EA1F584((uint64_t)a1, a2))
  {
    v17 = *(_DWORD *)(v10 + 28);
LABEL_32:
    v22 = __CFADD__((v17 & 0x7E) - 58, 6);
    v23 = 112;
    if (!v22)
      v23 = 80;
    v24 = *(_QWORD *)(v10 + v23);
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xD19u, 0, (uint64_t)v26);
    v25 = sub_22E894E38((uint64_t)v26, &v27);
    sub_22E890024(v25, &v28);
    sub_22E903BEC(v26);
    sub_22E8FCA40(a1, *(_DWORD *)(v24 + 24), 0x15F4u, 0, (uint64_t)v26);
    sub_22E894E38((uint64_t)v26, &v27);
    sub_22E903BEC(v26);
    return 0;
  }
  *(_DWORD *)a4 = 0;
  *(_DWORD *)(a4 + 16) = 0;
  v11 = *(_QWORD *)(a4 + 88);
  if (v11)
  {
    v12 = sub_22EC6CBD0(v11);
    MEMORY[0x2348A0E9C](v12, 0x10E0C409F09D3C3);
    v13 = *(_DWORD *)(a4 + 16);
  }
  else
  {
    v13 = 0;
  }
  *(_BYTE *)(a4 + 165) = 0;
  *(_QWORD *)(a4 + 88) = 0;
  *(_QWORD *)(a4 + 96) = 0;
  v21 = *(unsigned int *)(v10 + 28);
  if (v13 >= *(_DWORD *)(a4 + 20))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v13 = *(_DWORD *)(a4 + 16);
  }
  *(_QWORD *)(*(_QWORD *)(a4 + 8) + 8 * v13) = (v21 >> 13) & 3 | v10;
  ++*(_DWORD *)(a4 + 16);
  *(_DWORD *)a4 = 2;
  return 1;
}

unint64_t sub_22EA4656C(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  unint64_t *v11;
  BOOL v12;
  unint64_t v13;
  _DWORD *v14;
  const void *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int i;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;

  v3 = a1[1];
  v4 = *(_QWORD *)(**(_QWORD **)(a2 + 16) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v4 + 8) & 0xF) != 0)
    v4 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(a2 + 16));
  v5 = sub_22F10C2A4(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0));
  if (v5)
  {
    if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 35 >= 3)
      v6 = 0;
    else
      v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  v7 = *(_QWORD *)(**a1 + 40);
  if ((v7 & 7) == 4)
  {
    v8 = *(_QWORD *)(v6 + 48);
    if (v8)
      v9 = v8 & 0xFFFFFFFFFFFFFFF0;
    else
      v9 = sub_22EF6462C(v3[11], v6);
    v7 = sub_22EFC6B40((_QWORD *)(v3[11] + 15224), v9 & 7 | *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 8));
  }
  result = sub_22EFCE144(v6 + 64, v7);
  if (result)
  {
    while (1)
    {
      v11 = (unint64_t *)(result & 0xFFFFFFFFFFFFFFF8);
      v12 = (result & 0xFFFFFFFFFFFFFFF8) == 0 || (result & 4) == 0;
      v13 = result & 0xFFFFFFFFFFFFFFF8;
      if (!v12)
        v13 = *v11;
      v14 = (_DWORD *)(*(uint64_t (**)(unint64_t))(*(_QWORD *)v13 + 32))(v13);
      if (v14 && (v14[7] & 0x7Eu) - 58 >= 0xFFFFFFFC)
      {
        v16 = v14;
        v17 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v14 + 32))(v14);
        if (((*(_BYTE *)(v17 + 82) & 0xC) != 0 || sub_22EFD7260(v17))
          && (sub_22ECF9D50(v3, **a1, (uint64_t)v16, 0, 1, 0) & 1) == 0)
        {
          break;
        }
      }
      if (v12)
        return 0;
      result = v11[1];
      if (!result)
        return result;
    }
    sub_22E3BA850((uint64_t)a1[2], v16);
    if (v18)
    {
      v19 = **a1;
      if (!v19 || (v20 = **a1, (*(_DWORD *)(v19 + 28) & 0x7F) != 0x53))
      {
        v21 = *(_QWORD *)(v19 + 16);
        v22 = v21 & 0xFFFFFFFFFFFFFFF8;
        if ((v21 & 4) != 0)
          v22 = *(_QWORD *)v22;
        for (i = *(_WORD *)(v22 + 8) & 0x7F; i != 83; i = *(_WORD *)(v22 + 8) & 0x7F)
        {
          v24 = -40;
          if (i > 70)
          {
            if (i == 71)
            {
              v24 = -56;
            }
            else if (i != 81)
            {
              goto LABEL_47;
            }
          }
          else
          {
            if (i > 0x18)
              goto LABEL_46;
            if (i == 16)
              goto LABEL_40;
            if (((1 << i) & 0x1066) != 0)
              goto LABEL_53;
            if (i == 24)
            {
LABEL_40:
              v24 = -48;
            }
            else
            {
LABEL_46:
              if (i != 70)
              {
LABEL_47:
                v25 = i - 52;
                if ((i - 33) >= 5)
                  v26 = -48;
                else
                  v26 = -64;
                if (v25 >= 6)
                  v24 = v26;
                else
                  v24 = -72;
                goto LABEL_53;
              }
              v24 = -64;
            }
          }
LABEL_53:
          v27 = *(_QWORD *)(v22 + v24 + 16);
          v22 = v27 & 0xFFFFFFFFFFFFFFF8;
          if ((v27 & 4) != 0)
            v22 = *(_QWORD *)v22;
        }
        v20 = v22 - 40;
      }
      sub_22F368748(*(_QWORD *)(v20 + 88), v19, (uint64_t)v16);
      sub_22EAD0B80(v3, **a1, (unint64_t)v16);
      sub_22EAD086C(v3, **a1, (uint64_t)v16);
      sub_22EB16B8C((uint64_t)v3, **a1, (uint64_t)v16);
      sub_22EAAC570(v3, **a1, (uint64_t)v16);
    }
    return 1;
  }
  return result;
}

void sub_22EA46870(uint64_t a1, int a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9[13];

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 88);
  while (1)
  {
    v7 = sub_22EF5C728(v5, a3);
    if (!v7)
      break;
    v8 = sub_22EF5BA38(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 88), *(_QWORD *)(v7 + 32));
    v9[0] = v8;
    a2 = sub_22F111C54(v9);
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 88);
    a3 = v8;
  }
  __asm { BR              X10 }
}

void sub_22EA46904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  unint64_t v11;
  _DWORD *v12;
  unsigned int v13;
  _QWORD v14[2];
  int v15;
  int v16;
  unsigned int v17[42];

  *(_QWORD *)(v4 - 56) = v1;
  if (v3)
  {
    sub_22E8FCA40(*(_QWORD **)(v0 + 16), *(_DWORD *)(v2 + 24), 0x16D4u, 0, (uint64_t)v17);
    v16 = 1;
    v5 = sub_22E8900C4((uint64_t)v17, &v16);
    v15 = 0;
    v6 = sub_22E8900C4(v5, &v15);
    v7 = sub_22E8901B8(v6, (uint64_t *)(v4 - 56));
    v8 = 0;
    v9 = *(_QWORD *)(v2 + 40);
    v10 = "";
    if ((v9 & 7) == 0)
    {
      v11 = v9 & 0xFFFFFFFFFFFFFFF8;
      if (v11)
      {
        v12 = *(_DWORD **)(v11 + 16);
        v13 = *v12;
        v10 = (const char *)(v12 + 4);
        v8 = v13;
      }
    }
    v14[0] = v10;
    v14[1] = v8;
    sub_22F2F2210(v7, (uint64_t)v14);
    sub_22E903BEC(v17);
  }
}

void sub_22EA46B5C(uint64_t a1, int a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 88);
  while (1)
  {
    v7 = sub_22EF5C728(v5, a3);
    if (!v7)
      break;
    v8 = sub_22EF5BA38(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 88), *(_QWORD *)(v7 + 32));
    a2 = sub_22F115260(v8);
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 88);
    a3 = v8;
  }
  __asm { BR              X10 }
}

void sub_22EA46BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  unint64_t v11;
  _DWORD *v12;
  unsigned int v13;
  _QWORD v14[2];
  int v15;
  int v16;
  unsigned int v17[42];

  *(_QWORD *)(v4 - 56) = v1;
  if (v3)
  {
    sub_22E8FCA40(*(_QWORD **)(v0 + 16), *(_DWORD *)(v2 + 24), 0x16D4u, 0, (uint64_t)v17);
    v16 = 1;
    v5 = sub_22E8900C4((uint64_t)v17, &v16);
    v15 = 1;
    v6 = sub_22E8900C4(v5, &v15);
    v7 = sub_22E8901B8(v6, (uint64_t *)(v4 - 56));
    v8 = 0;
    v9 = *(_QWORD *)(v2 + 40);
    v10 = "";
    if ((v9 & 7) == 0)
    {
      v11 = v9 & 0xFFFFFFFFFFFFFFF8;
      if (v11)
      {
        v12 = *(_DWORD **)(v11 + 16);
        v13 = *v12;
        v10 = (const char *)(v12 + 4);
        v8 = v13;
      }
    }
    v14[0] = v10;
    v14[1] = v8;
    sub_22F2F2210(v7, (uint64_t)v14);
    sub_22E903BEC(v17);
  }
}

void sub_22EA46E44(uint64_t a1, int a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9[13];

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 88);
  while (1)
  {
    v7 = sub_22EF5C728(v5, a3);
    if (!v7)
      break;
    v8 = sub_22EF5BA38(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 88), *(_QWORD *)(v7 + 32));
    v9[0] = v8;
    a2 = sub_22F111B38(v9);
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 88);
    a3 = v8;
  }
  __asm { BR              X10 }
}

void sub_22EA46ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const char *v10;
  unint64_t v11;
  _DWORD *v12;
  unsigned int v13;
  _QWORD v14[2];
  int v15;
  int v16;
  unsigned int v17[42];

  *(_QWORD *)(v4 - 56) = v2;
  if (v3)
  {
    sub_22E8FCA40(*(_QWORD **)(v0 + 16), *(_DWORD *)(v1 + 24), 0x16D4u, 0, (uint64_t)v17);
    v16 = 1;
    v5 = sub_22E8900C4((uint64_t)v17, &v16);
    v15 = 2;
    v6 = sub_22E8900C4(v5, &v15);
    v7 = sub_22E8901B8(v6, (uint64_t *)(v4 - 56));
    v8 = 0;
    v9 = *(_QWORD *)(v1 + 40);
    v10 = "";
    if ((v9 & 7) == 0)
    {
      v11 = v9 & 0xFFFFFFFFFFFFFFF8;
      if (v11)
      {
        v12 = *(_DWORD **)(v11 + 16);
        v13 = *v12;
        v10 = (const char *)(v12 + 4);
        v8 = v13;
      }
    }
    v14[0] = v10;
    v14[1] = v8;
    sub_22F2F2210(v7, (uint64_t)v14);
    sub_22E903BEC(v17);
  }
}

uint64_t sub_22EA4713C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _DWORD v5[3098];
  uint64_t v6;

  v0 = (_QWORD *)MEMORY[0x24BDAC7A8]();
  v6 = *MEMORY[0x24BDAC8D0];
  v4 = v1;
  sub_22EC395BC(v5, *v0, v0 + 1, v0 + 7, &v4, 1, 0, 1);
  if (v5[0])
    v2 = v4;
  else
    v2 = 1;
  sub_22EC3CE2C((uint64_t)v5);
  return v2;
}

_QWORD *sub_22EA471E4(uint64_t a1, int a2)
{
  uint64_t v3;
  llvm *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(llvm **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = (v7 + 1);
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = MEMORY[0x23489D23C]((_QWORD *)v8, 24 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F31F190(a1, (uint64_t)v4, (uint64_t)v4 + 24 * v3);
    return (_QWORD *)llvm::deallocate_buffer(v4, (void *)(24 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 24 * v10;
      do
      {
        *result = -4096;
        result += 3;
        v11 -= 24;
      }
      while (v11);
    }
  }
  return result;
}

uint64_t sub_22EA472B0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t *a4, int *a5)
{
  uint64_t v9;
  int *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int *v17;
  uint64_t v18;
  unint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  void *__p;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int v36;
  unsigned int v37[24];

  v9 = *(_QWORD *)(a2 + 8 * a3 + 80);
  v10 = (int *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
  if (*(unsigned __int16 *)(a2 + 48) <= a3 || (*(_QWORD *)(a2 + 8 * a3 + 80) & 2) == 0)
    return sub_22F31F254((_QWORD *)a1, (uint64_t *)a2, (unsigned __int8 *)(v9 & 0xFFFFFFFFFFFFFFFCLL), a4, a5);
  sub_22E8FCA40((_QWORD *)a1, *v10, 0xAE5u, 0, (uint64_t)v37);
  v12 = sub_22E8D2984((uint64_t)v37, (uint64_t *)a2);
  v36 = 2;
  v13 = sub_22E8900C4(v12, &v36);
  v14 = *v10;
  v31 = 0;
  v30 = 0;
  v33 = 0;
  v34 = 0x100000000000000;
  v28 = v14 | (v14 << 32);
  v29 = 0;
  v32 = (void *)34;
  v35 = 0;
  v15 = sub_22E890748(v13, &v28);
  v16 = sub_22F141A3C(*v10, 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
  v22 = 0;
  v23 = 0;
  v25 = 0;
  v26 = 0x100000000000000;
  v20 = v16 | ((unint64_t)v16 << 32);
  v21 = 0;
  __p = (void *)34;
  v27 = 0;
  sub_22E890748(v15, &v20);
  if (SHIBYTE(v26) < 0)
    operator delete(__p);
  if (SHIBYTE(v34) < 0)
    operator delete(v32);
  sub_22E903BEC(v37);
  v17 = *(unsigned int **)(*((_QWORD *)v10 + 1) + 16);
  v18 = *v17;
  *a4 = (uint64_t)(v17 + 4);
  a4[1] = v18;
  if (a5)
    *a5 = *v10;
  return 1;
}

unint64_t sub_22EA47450(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  BOOL v13;
  uint64_t v14;
  unsigned int v16;
  int v17;

  v3 = (uint64_t *)(a2 & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
      return 1;
  }
  else
  {
    if (!v4 || (v6 = *(_DWORD *)(v4 + 16), (v6 & 0xFE) != 0x28))
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_7;
      v4 = sub_22F10CF48(v4);
      if (!v4)
        goto LABEL_7;
      v6 = *(_DWORD *)(v4 + 16);
    }
    if ((v6 & 0x100000) != 0)
    {
      do
      {
        v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v4)
        {
          v17 = *(_DWORD *)(v4 + 16);
          if ((v17 & 0xFE) == 0x28)
            continue;
        }
        v4 = sub_22F10CF48(v4);
        v17 = *(_DWORD *)(v4 + 16);
      }
      while ((v17 & 0x100000) != 0);
    }
    v3 = (uint64_t *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
  }
LABEL_7:
  v7 = sub_22F10E2FC(*v3);
  if (v7)
  {
    v8 = v7;
    v9 = sub_22F114198(*(_QWORD *)(v7 + 24));
    if (sub_22E69BDA8(v9))
    {
      v10 = sub_22F114198(*(_QWORD *)(v8 + 24));
      v11 = sub_22EFC3B90(v10);
      if (v11)
      {
LABEL_10:
        v12 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 48) & 0xFFFFFFFFFFFFFFF0)
                                                         + 8) & 0xFFFFFFFFFFFFFFF0)
                                 + 16);
        v13 = v12 > 0x27;
        v14 = (1 << v12) & 0x8100000400;
        if (!v13 && v14 != 0)
          return 1;
        while (1)
        {
          v11 = *(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v11)
            break;
          if ((*(_DWORD *)(v11 + 28) & 0x7Fu) - 49 < 3)
            goto LABEL_10;
        }
      }
    }
  }
  v16 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v16 > 0x27)
    return 0;
  else
    return (0x8100000400uLL >> v16) & 1;
}

void sub_22EA475D8(_QWORD *a1, unint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  __int128 v13;
  int v14;
  int v15;
  uint8x8_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  __int128 *v35;
  unsigned int v36;
  char v37;
  unsigned __int8 v38;
  __int128 *v39;
  uint64_t v40;
  unsigned int v41;
  char v42;
  __int128 v43;
  __int128 v44;
  __int16 v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v10 = sub_22EFCB008(a2, 1);
  v11 = (uint64_t *)(v10 + 24);
  if (!v10)
    v11 = (uint64_t *)(a2 + 80);
  v12 = *v11;
  v48 = a5;
  v49 = sub_22EA479DC(a2);
  v13 = a3[1];
  v43 = *a3;
  v44 = v13;
  v46 = 0;
  v45 = 113;
  v47 = a4;
  v14 = v13;
  if ((sub_22EA47450(v49, v12, 1) & 1) == 0)
  {
    sub_22E8FCA40(a1, v14, 0x1887u, 0, (uint64_t)&v40);
    v35 = &v43;
    sub_22E9AEE38((uint64_t)&v40, (uint64_t *)&v35);
    v39 = (__int128 *)v44;
    v20 = sub_22E8906A0((uint64_t)&v40, (uint64_t *)&v39);
    sub_22E8906A0(v20, (uint64_t *)&v49);
    goto LABEL_14;
  }
  if ((*(_BYTE *)(a4 + 2) & 1) != 0)
  {
LABEL_24:
    if (!a5 || (*(_BYTE *)(a5 + 2) & 1) != 0 || (sub_22F0085E8(a5, a1[11], 0) & 1) != 0)
    {
      v24 = sub_22E3CD3D4(a1[11] + 2032, 56, 3);
      v25 = a3[1];
      *(_OWORD *)v24 = *a3;
      *(_OWORD *)(v24 + 16) = v25;
      v26 = *(_BYTE *)(v24 + 34);
      *(_WORD *)(v24 + 32) = 113;
      *(_BYTE *)(v24 + 34) = v26 & 0xE0;
      *(_QWORD *)(v24 + 40) = a4;
      *(_QWORD *)(v24 + 48) = a5;
      sub_22EFCA95C(a2, v24);
      return;
    }
    sub_22E8FCA40(a1, v14, 0xAE0u, 0, (uint64_t)&v40);
    v35 = &v43;
    sub_22E9AEE38((uint64_t)&v40, (uint64_t *)&v35);
    LODWORD(v32) = 2;
    v27 = sub_22E8900C4((uint64_t)&v40, (int *)&v32);
    v34 = 1;
    v28 = sub_22E8900C4(v27, &v34);
    sub_22F0D4E74(a5);
    v39 = (__int128 *)v29;
    sub_22E8906A0(v28, (uint64_t *)&v39);
LABEL_14:
    sub_22E903BEC((unsigned int *)&v40);
    return;
  }
  v36 = 64;
  v35 = 0;
  v37 = 1;
  v38 = 1;
  sub_22F00905C(a4, a1[11], 0, (uint64_t)&v40);
  sub_22E54C490((uint64_t)&v35, (uint64_t)&v40);
  v15 = v38;
  if (v42 && v41 >= 0x41 && v40)
    MEMORY[0x2348A0E84](v40, 0x1000C8000313F17);
  if (!v15)
  {
    if (a5)
    {
      sub_22E8FCA40(a1, v14, 0xAE0u, 0, (uint64_t)&v40);
      v39 = &v43;
      sub_22E9AEE38((uint64_t)&v40, (uint64_t *)&v39);
      v34 = 1;
      v21 = (uint64_t *)sub_22E8900C4((uint64_t)&v40, &v34);
      v33 = 1;
      v22 = &v33;
    }
    else
    {
      sub_22E8FCA40(a1, v14, 0xAE5u, 0, (uint64_t)&v40);
      v39 = &v43;
      sub_22E9AEE38((uint64_t)&v40, (uint64_t *)&v39);
      v34 = 1;
      v21 = &v40;
      v22 = &v34;
    }
    v30 = sub_22E8900C4((uint64_t)v21, v22);
    sub_22F0D4E74(a4);
    v32 = v31;
    v19 = &v32;
    v18 = (uint64_t *)v30;
    goto LABEL_32;
  }
  if (v36 > 0x40)
  {
    if (llvm::APInt::countPopulationSlowCase((llvm::APInt *)&v35) != 1)
      goto LABEL_12;
    goto LABEL_18;
  }
  v16 = (uint8x8_t)vcnt_s8((int8x8_t)v35);
  v16.i16[0] = vaddlv_u8(v16);
  if (v16.u32[0] == 1)
  {
LABEL_18:
    if (sub_22E42E8B8((uint64_t)&v35, 0x100000000))
    {
      sub_22E8FCA40(a1, *((_DWORD *)a3 + 4), 0x184Fu, 0, (uint64_t)&v40);
      v39 = (__int128 *)*((_QWORD *)a3 + 2);
      v23 = sub_22E8906A0((uint64_t)&v40, (uint64_t *)&v39);
      sub_22E97FA2C(v23, &qword_22F463C60);
      sub_22E903BEC((unsigned int *)&v40);
    }
    if (v38 && v36 >= 0x41 && v35)
      MEMORY[0x2348A0E84](v35, 0x1000C8000313F17);
    goto LABEL_24;
  }
LABEL_12:
  sub_22E8FCA40(a1, v14, 0xA39u, 0, (uint64_t)&v40);
  sub_22F0D4E74(a4);
  v39 = (__int128 *)v17;
  v18 = &v40;
  v19 = (uint64_t *)&v39;
LABEL_32:
  sub_22E8906A0((uint64_t)v18, v19);
  sub_22E903BEC((unsigned int *)&v40);
  if (v38 && v36 >= 0x41)
  {
    if (v35)
      MEMORY[0x2348A0E84](v35, 0x1000C8000313F17);
  }
}

unint64_t sub_22EA479DC(unint64_t a1)
{
  unint64_t v1;
  unsigned int v2;
  unint64_t v3;

  if (a1 && (*(_DWORD *)(a1 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
  {
    v3 = sub_22F3AC46C(a1);
    goto LABEL_8;
  }
  v1 = 0;
  if (a1)
  {
    v2 = 0;
    if ((*(_DWORD *)(a1 + 28) & 0x7F) == 0x18)
    {
      v3 = sub_22F3B5740(a1);
LABEL_8:
      v2 = v3;
      v1 = v3 & 0xFFFFFFFF00000000;
    }
  }
  else
  {
    v2 = 0;
  }
  return v2 | v1;
}

void sub_22EA47A40(_QWORD *a1, unint64_t a2, _OWORD *a3, uint64_t a4)
{
  _BOOL4 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  __int128 v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  char v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  uint64_t *v32;
  uint64_t v33;
  __int128 v34;
  char v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  int v39;
  int v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int16 v44;
  char v45;
  int v46;
  unint64_t v47;
  int v48;
  __int128 *v49;
  uint64_t v50;
  unsigned int v51;
  char v52;
  uint64_t **v53;
  unsigned int v54;
  unsigned __int8 v55;
  unsigned int v56;

  v8 = 1;
  v9 = sub_22EFCB008(a2, 1);
  v10 = (uint64_t *)(v9 + 24);
  if (!v9)
    v10 = (uint64_t *)(a2 + 80);
  v11 = *v10;
  v12 = a3[1];
  v42 = *a3;
  v43 = v12;
  v45 = 0;
  v44 = 99;
  v46 = 0;
  if ((*(_BYTE *)(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
  {
    v13 = *((_DWORD *)a3 + 4);
    if ((sub_22EA47450(v9, v11, 1) & 1) == 0)
    {
      sub_22E8FCA40(a1, v13, 0x1887u, 0, (uint64_t)&v50);
      v53 = (uint64_t **)&v42;
      sub_22E9AEE38((uint64_t)&v50, (uint64_t *)&v53);
      v49 = (__int128 *)*((_QWORD *)a3 + 2);
      v36 = sub_22E8906A0((uint64_t)&v50, (uint64_t *)&v49);
      v47 = sub_22EA479DC(a2);
      v37 = (uint64_t *)&v47;
      v38 = (uint64_t *)v36;
LABEL_49:
      sub_22E8906A0((uint64_t)v38, v37);
      sub_22E903BEC((unsigned int *)&v50);
      return;
    }
  }
  v56 = 1;
  v14 = sub_22EFCB008(a2, 1);
  if (v14)
  {
    v15 = *(unsigned __int8 *)(v14 + 16) == 26;
    v16 = *(_DWORD *)(a2 + 28);
  }
  else
  {
    v16 = *(_DWORD *)(a2 + 28);
    v15 = (v16 & 0x7F) == 0x18 || (v16 & 0x7F) == 1;
  }
  if ((v16 & 0x7Eu) - 54 <= 3
    && (*(_QWORD *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2) + 80) & 0xE000) != 0x4000)
  {
    if ((*(_QWORD *)(a2 + 40) & 7) == 6)
      v8 = (*(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) - 5) < 0xFFFFFFFC;
    if (v15)
      goto LABEL_18;
LABEL_20:
    v18 = 1;
    goto LABEL_21;
  }
  v8 = 0;
  if (!v15)
    goto LABEL_20;
LABEL_18:
  v18 = sub_22EA8D628(a2) ^ 1;
  v15 = sub_22EA8CD28((_DWORD *)a2);
LABEL_21:
  LOBYTE(v53) = 0;
  v55 = 0;
  if ((*(_BYTE *)(a4 + 1) & 0x80) != 0)
    goto LABEL_36;
  sub_22F00905C(a4, a1[11], 0, (uint64_t)&v50);
  sub_22E54C490((uint64_t)&v53, (uint64_t)&v50);
  v19 = v55;
  if (v52 && v51 >= 0x41 && v50)
    MEMORY[0x2348A0E84](v50, 0x1000C8000313F17);
  if (!v19)
  {
LABEL_36:
    sub_22E8FCA40(a1, v43, 0xAE0u, 0, (uint64_t)&v50);
    v49 = &v42;
    sub_22E9AEE38((uint64_t)&v50, (uint64_t *)&v49);
    v25 = sub_22E89519C((uint64_t)&v50, &v56);
    v48 = 1;
    v26 = sub_22E8900C4(v25, &v48);
LABEL_37:
    v27 = (uint64_t *)v26;
    sub_22F0D4E74(a4);
    v47 = v28;
    v24 = v27;
    goto LABEL_38;
  }
  v20 = sub_22E5FA634(&v53, 0xFFFFFFFFuLL);
  if (v15 + v8 < v20)
    v21 = v18;
  else
    v21 = 0;
  if (!v20 || v21)
  {
    sub_22E8FCA40(a1, v43, 0xAE2u, 0, (uint64_t)&v50);
    v49 = &v42;
    sub_22E9AEE38((uint64_t)&v50, (uint64_t *)&v49);
    v26 = sub_22E89519C((uint64_t)&v50, &v56);
    goto LABEL_37;
  }
  v22 = !v8;
  if (v20 != 1)
    v22 = 1;
  if ((v22 & 1) == 0)
  {
    sub_22E8FCA40(a1, v43, 0xAFFu, 0, (uint64_t)&v50);
    v49 = &v42;
    sub_22E9AEE38((uint64_t)&v50, (uint64_t *)&v49);
    sub_22F0D4E74(a4);
    v47 = v23;
    v24 = &v50;
LABEL_38:
    sub_22E8906A0((uint64_t)v24, (uint64_t *)&v47);
    sub_22E903BEC((unsigned int *)&v50);
    v29 = 0;
    v30 = 0;
    goto LABEL_39;
  }
  v29 = v20 & 0x3FFFFFFF | 0x80000000;
  if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
  {
    if (sub_22EFBAEF8(a2))
      v39 = 0x40000000;
    else
      v39 = 0;
    v29 |= v39;
  }
  v30 = 1;
LABEL_39:
  if (v55 && v54 >= 0x41 && v53)
    MEMORY[0x2348A0E84](v53, 0x1000C8000313F17);
  if (v30)
  {
    v31 = (v29 & 0x3FFFFFFF) + ((int)(2 * v29) >> 31) - 1;
    v32 = (uint64_t *)(sub_22EA47EEC(a2, v31) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(*v32 + 17) & 4) != 0 || sub_22F110744(*v32, a1[11]) || (sub_22F112268(*v32) & 1) != 0)
    {
      v33 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
      v34 = a3[1];
      *(_OWORD *)v33 = *a3;
      *(_OWORD *)(v33 + 16) = v34;
      v35 = *(_BYTE *)(v33 + 34);
      *(_WORD *)(v33 + 32) = 99;
      *(_BYTE *)(v33 + 34) = v35 & 0xE0;
      *(_DWORD *)(v33 + 36) = v29;
      sub_22EFCA95C(a2, v33);
      return;
    }
    sub_22F0D5A50(a4);
    sub_22E8FCA40(a1, v40, 0xAFCu, 0, (uint64_t)&v50);
    v53 = (uint64_t **)&v42;
    sub_22E9AEE38((uint64_t)&v50, (uint64_t *)&v53);
    v41 = *(_QWORD *)(*(_QWORD *)(a2 + 120) + 8 * v31);
    v49 = (__int128 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v41 + 16))(v41);
    v38 = &v50;
    v37 = (uint64_t *)&v49;
    goto LABEL_49;
  }
}

uint64_t sub_22EA47EEC(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_22EFCB008(a1, 1);
  if (v4)
  {
    v5 = v4 + 8 * a2 + 40;
  }
  else
  {
    if (a1 && (*(_DWORD *)(a1 + 28) & 0x7F) == 1)
      v6 = *(_QWORD *)(a1 + 72);
    else
      v6 = *(_QWORD *)(a1 + 96);
    v5 = *(_QWORD *)(v6 + 8 * a2) + 48;
  }
  return *(_QWORD *)v5;
}

uint64_t sub_22EA47F54(_QWORD *a1, uint64_t a2)
{
  int v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9[24];

  v4 = (*(uint64_t (**)(_QWORD, _QWORD))(**(_QWORD **)(a2 + 72) + 48))(*(_QWORD *)(a2 + 72), *(_QWORD *)(a1[11] + 15088));
  if ((v4 & 1) == 0)
  {
    v7 = v4;
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0x92u, 0, (uint64_t)v9);
    v6 = sub_22E8D2984((uint64_t)v9, (uint64_t *)a2);
    v8 = *(_QWORD *)(a2 + 16);
    sub_22E8906A0(v6, &v8);
    sub_22E903BEC(v9);
    v4 = v7;
    *(_QWORD *)(a2 + 48) |= 0x10000uLL;
  }
  return v4 ^ 1u;
}

uint64_t sub_22EA47FF0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, void *__src, uint64_t a14, char a15, void *a16, uint64_t a17, int a18, int a19)
{
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  unsigned int v34;
  int v35;
  uint64_t *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  void *v58;
  uint64_t v59;
  unsigned int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int *v72;
  _BYTE *v73;
  _QWORD *v74;
  unsigned int v75;
  char v76;
  uint64_t result;
  uint64_t v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  __int128 v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  _BYTE v90[96];
  unsigned int v91[24];
  _BYTE v92[96];
  _BYTE v93[103];
  BOOL v94;
  void *__p[2];
  char v96;
  void *v97[2];
  char v98;
  _QWORD v99[2];
  unsigned int v100[24];
  __int128 v101;
  __int128 v102;
  int v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;

  v24 = a1;
  v25 = a10;
  v26 = a11;
  v28 = *((_QWORD *)&a9 + 1);
  v27 = a9;
  v110 = a6;
  v111 = a7;
  v109 = a9;
  v107 = a10;
  v108 = a11;
  v29 = a18 - 2;
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_80;
  v87 = a10;
  v88 = a9;
  sub_22EFC8E88(a2);
  v31 = *(_DWORD *)(v30 + 8);
  if (!v31)
  {
LABEL_79:
    v24 = a1;
    v28 = *((_QWORD *)&v88 + 1);
    v27 = v88;
    v25 = v87;
    goto LABEL_80;
  }
  v32 = v30;
  v86 = a3;
  v85 = a5;
  v33 = 0;
  v34 = 0;
  if (v29 > 2)
    v35 = 1;
  else
    v35 = a12 ^ 1;
  v84 = v35;
  do
  {
    v36 = (uint64_t *)(*(_QWORD *)v32 + 8 * v34);
    v37 = *v36;
    if (!*v36 || *(_WORD *)(v37 + 32) != 115 || *(_QWORD *)(v37 + 40) != a4)
    {
      ++v34;
      continue;
    }
    v38 = *(_DWORD *)(v37 + 128);
    if (v38 < a19)
      return 0;
    if (v38 <= a19)
    {
      v41 = *(_OWORD *)(v37 + 48);
      v105 = *(_OWORD *)(v37 + 64);
      v106 = v41;
      v104 = *(_OWORD *)(v37 + 80);
      v42 = *(unsigned __int8 *)(v37 + 96);
      if (sub_22EA48690((uint64_t *)&v106, &v110, v29 < 3)
        && sub_22EA48690((uint64_t *)&v109, (uint64_t *)&v105, v29 < 3)
        && sub_22EA48690(&v107, (uint64_t *)&v104, v29 < 3))
      {
        v44 = v84;
        if (v42)
          v44 = 1;
        if ((v42 != 0) == a12 || v44 == 0)
        {
          v46 = a6 & 0x7FFFFFFFFFFFFFFFLL | a7 & 0x7FFFFFFF00000000 | a7 & 0x7FFFFFFF;
          if (v46)
            v47 = a7;
          else
            v47 = *((_QWORD *)&v106 + 1);
          if (v46)
            v48 = a6;
          else
            v48 = v106;
          v49 = v88 & 0x7FFFFFFFFFFFFFFFLL | *((_QWORD *)&v88 + 1) & 0x7FFFFFFF00000000 | DWORD2(v88) & 0x7FFFFFFF;
          if (v49)
            v50 = *((_QWORD *)&v88 + 1);
          else
            v50 = *((_QWORD *)&v105 + 1);
          if (v49)
            v51 = v88;
          else
            v51 = v105;
          v52 = v87 & 0x7FFFFFFFFFFFFFFFLL | v26 & 0x7FFFFFFF00000000 | v26 & 0x7FFFFFFF;
          if (v52)
            v53 = v26;
          else
            v53 = *((_QWORD *)&v104 + 1);
          if (v52)
            v54 = v87;
          else
            v54 = v104;
          v55 = *(_QWORD *)(v37 + 16);
          v56 = v47;
          v81 = v54;
          *(_QWORD *)&v82 = v51;
          *((_QWORD *)&v82 + 1) = v50;
          v83 = v48;
          if (sub_22EA48700(a1, v55, a4, v48, v47, v51, v50, v43, v54, v53))
            goto LABEL_56;
          ++v34;
          a7 = v56;
          a6 = v83;
          v88 = v82;
          v26 = v53;
          v87 = v81;
LABEL_65:
          v33 = 1;
          continue;
        }
      }
      if (v29 > 2)
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v37 + 16), 0x1A4Eu, 0, (uint64_t)v91);
        sub_22E903BEC(v91);
        sub_22E8FCA40(a1, *(_DWORD *)(v86 + 16), 0x176Fu, 0, (uint64_t)v90);
        v60 = (unsigned int *)v90;
LABEL_55:
        sub_22E903BEC(v60);
LABEL_56:
        v61 = *(_QWORD *)v32 + 8 * v34;
        v62 = *(unsigned int *)(v32 + 8);
        v63 = *(_QWORD *)v32 + 8 * v62;
        if (v63 != v61 + 8)
        {
          memmove((void *)v61, (const void *)(v61 + 8), v63 - (v61 + 8));
          LODWORD(v62) = *(_DWORD *)(v32 + 8);
        }
        *(_DWORD *)(v32 + 8) = v62 - 1;
        --v31;
        goto LABEL_65;
      }
      v103 = -1;
      v102 = 0uLL;
      v101 = 0uLL;
      if (sub_22EA48690((uint64_t *)&v106, &v110, 1))
      {
        if (!sub_22EA48690((uint64_t *)&v109, (uint64_t *)&v105, 1))
        {
          v103 = 1;
          v101 = v105;
          v102 = v109;
          goto LABEL_67;
        }
        if (sub_22EA48690(&v107, (uint64_t *)&v104, 1))
        {
          v57 = v103;
          if (v103 == -1)
          {
            sub_22E8FCA40(a1, *(_DWORD *)(v37 + 16), 0x1A50u, 0, (uint64_t)v100);
            v97[0] = (void *)sub_22E83F9A4(*(_QWORD *)(a4 + 16) + 16, **(unsigned int **)(a4 + 16));
            v97[1] = v58;
            v59 = sub_22F2F2210((uint64_t)v100, (uint64_t)v97);
            LOBYTE(__p[0]) = a18 == 2;
            sub_22E894E38(v59, (unsigned __int8 *)__p);
LABEL_71:
            sub_22E903BEC(v100);
            if (a18 == 2)
            {
              v72 = (unsigned int *)v93;
              v73 = v93;
              v74 = a1;
              v75 = 5922;
            }
            else
            {
              v72 = (unsigned int *)v92;
              v73 = v92;
              v74 = a1;
              v75 = 6045;
            }
            sub_22E8FCA40(v74, *(_DWORD *)(v86 + 16), v75, 0, (uint64_t)v73);
            v60 = v72;
            goto LABEL_55;
          }
LABEL_62:
          if (a18 == 4 && v57 != 1)
          {
            ++v34;
            goto LABEL_65;
          }
LABEL_67:
          sub_22E8FCA40(a1, *(_DWORD *)(v37 + 16), 0x1A4Fu, 0, (uint64_t)v100);
          v67 = sub_22E8900C4((uint64_t)v100, &v103);
          v99[0] = sub_22E83F9A4(*(_QWORD *)(a4 + 16) + 16, **(unsigned int **)(a4 + 16));
          v99[1] = v68;
          v69 = sub_22F2F2210(v67, (uint64_t)v99);
          llvm::VersionTuple::getAsString((llvm::VersionTuple *)&v102);
          v70 = sub_22F2F3734(v69, v97);
          llvm::VersionTuple::getAsString((llvm::VersionTuple *)&v101);
          v71 = sub_22F2F3734(v70, __p);
          v94 = a18 == 2;
          sub_22E894E38(v71, (unsigned __int8 *)&v94);
          if (v96 < 0)
            operator delete(__p[0]);
          if (v98 < 0)
            operator delete(v97[0]);
          goto LABEL_71;
        }
        v57 = 2;
        v103 = 2;
        v64 = (uint64_t *)&v104;
        v65 = &v107;
      }
      else
      {
        v57 = 0;
        v103 = 0;
        v64 = &v110;
        v65 = (uint64_t *)&v106;
      }
      v66 = *(_OWORD *)v65;
      v101 = *(_OWORD *)v64;
      v102 = v66;
      goto LABEL_62;
    }
    v39 = *(unsigned int *)(v32 + 8);
    v40 = *(_QWORD *)v32 + 8 * v39;
    if ((uint64_t *)v40 != v36 + 1)
    {
      memmove(v36, v36 + 1, v40 - (_QWORD)(v36 + 1));
      LODWORD(v39) = *(_DWORD *)(v32 + 8);
    }
    *(_DWORD *)(v32 + 8) = v39 - 1;
    --v31;
  }
  while (v34 != v31);
  a3 = v86;
  if ((v33 & 1) == 0
    || (_DWORD)a6 != (_DWORD)v110
    || (v110 ^ a6) & 0x7FFFFFFF00000000 | (v111 ^ a7) & 0x7FFFFFFF7FFFFFFFLL)
  {
    a5 = v85;
    goto LABEL_79;
  }
  v28 = *((_QWORD *)&v88 + 1);
  v27 = v88;
  a5 = v85;
  v24 = a1;
  v25 = v87;
  if ((_DWORD)v88 == (_DWORD)v109
    && !(((unint64_t)v109 ^ (unint64_t)v88) & 0x7FFFFFFF00000000 | (*((_QWORD *)&v109 + 1) ^ *((_QWORD *)&v88 + 1)) & 0x7FFFFFFF7FFFFFFFLL)
    && (_DWORD)v87 == (_DWORD)v107
    && !((v107 ^ v87) & 0x7FFFFFFF00000000 | (v108 ^ v26) & 0x7FFFFFFF7FFFFFFFLL))
  {
    return 0;
  }
LABEL_80:
  v76 = sub_22EA48700(v24, *(_QWORD *)(a3 + 16), a4, a6, a7, v27, v28, a8, v25, v26);
  result = 0;
  if (v29 >= 3 && (v76 & 1) == 0)
  {
    v78 = sub_22E3CD3D4(v24[11] + 2032, 136, 3);
    result = sub_22F37FB74(v78, v24[11], (_OWORD *)a3, a4, v110, v111, v109, *((uint64_t *)&v109 + 1), v107, v108, a12, __src, a14, a15, a16, a17, a19);
    if (a5)
      v79 = 0x40000;
    else
      v79 = 0;
    v80 = (*(unsigned __int16 *)(result + 32) | (*(unsigned __int8 *)(result + 34) << 16)) & 0xFFFBFFFF;
    *(_WORD *)(result + 32) = *(_WORD *)(result + 32);
    *(_BYTE *)(result + 34) = (v80 | v79) >> 16;
  }
  return result;
}

BOOL sub_22EA48690(uint64_t *a1, uint64_t *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 result;

  v3 = *a1;
  v4 = a1[1];
  result = !(*a1 & 0x7FFFFFFFFFFFFFFFLL | v4 & 0x7FFFFFFF7FFFFFFFLL)
        || (v5 = *a2, v6 = a2[1], !(*a2 & 0x7FFFFFFFFFFFFFFFLL | v6 & 0x7FFFFFFF7FFFFFFFLL))
        || (_DWORD)v3 == (_DWORD)v5 && !((v5 ^ v3) & 0x7FFFFFFF00000000 | (v6 ^ v4) & 0x7FFFFFFF7FFFFFFFLL)
        || a3 && (sub_22E3B38EC(a1, a2) & 1) != 0;
  return result;
}

uint64_t sub_22EA48700(_QWORD *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  llvm::VersionTuple *v21;
  uint64_t v22;
  uint64_t v23;
  llvm::VersionTuple *v24;
  uint64_t v25;
  uint64_t v26;
  void *__p;
  char v28;
  int v29;
  void *v30[2];
  char v31;
  int v32;
  unsigned int v33[24];
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v38 = a6;
  v39 = a7;
  v36 = a9;
  v37 = a10;
  v34 = sub_22E83F9A4(*(_QWORD *)(a3 + 16) + 16, **(unsigned int **)(a3 + 16));
  v35 = v13;
  if (!v13)
  {
    v14 = *(unsigned int **)(a3 + 16);
    v15 = *v14;
    v34 = (unint64_t)(v14 + 4);
    v35 = v15;
  }
  if (!(v40 & 0x7FFFFFFFFFFFFFFFLL | v41 & 0x7FFFFFFF7FFFFFFFLL))
    goto LABEL_9;
  if (!(v38 & 0x7FFFFFFFFFFFFFFFLL | v39 & 0x7FFFFFFF7FFFFFFFLL))
    goto LABEL_25;
  if (sub_22E3B38EC(&v38, &v40))
  {
    sub_22E8FCA40(a1, a2, 0x189Fu, 0, (uint64_t)v33);
    v32 = 1;
    v22 = sub_22E8900C4((uint64_t)v33, &v32);
    v23 = sub_22F2F2210(v22, (uint64_t)&v34);
    v24 = (llvm::VersionTuple *)&v38;
    goto LABEL_17;
  }
  if (v40 & 0x7FFFFFFFFFFFFFFFLL | v41 & 0x7FFFFFFF7FFFFFFFLL)
  {
LABEL_25:
    if (!(v36 & 0x7FFFFFFFFFFFFFFFLL | v37 & 0x7FFFFFFF7FFFFFFFLL) || !sub_22E3B38EC(&v36, &v40))
      goto LABEL_9;
    sub_22E8FCA40(a1, a2, 0x189Fu, 0, (uint64_t)v33);
    v32 = 2;
    v25 = sub_22E8900C4((uint64_t)v33, &v32);
    v23 = sub_22F2F2210(v25, (uint64_t)&v34);
    v24 = (llvm::VersionTuple *)&v36;
LABEL_17:
    llvm::VersionTuple::getAsString(v24);
    v26 = sub_22F2F3734(v23, v30);
    v29 = 0;
    v20 = sub_22E8900C4(v26, &v29);
    v21 = (llvm::VersionTuple *)&v40;
    goto LABEL_18;
  }
LABEL_9:
  if (!(v38 & 0x7FFFFFFFFFFFFFFFLL | v39 & 0x7FFFFFFF7FFFFFFFLL)
    || !(v36 & 0x7FFFFFFFFFFFFFFFLL | v37 & 0x7FFFFFFF7FFFFFFFLL))
  {
    return 0;
  }
  result = sub_22E3B38EC(&v36, &v38);
  if (!(_DWORD)result)
    return result;
  sub_22E8FCA40(a1, a2, 0x189Fu, 0, (uint64_t)v33);
  v32 = 2;
  v17 = sub_22E8900C4((uint64_t)v33, &v32);
  v18 = sub_22F2F2210(v17, (uint64_t)&v34);
  llvm::VersionTuple::getAsString((llvm::VersionTuple *)&v36);
  v19 = sub_22F2F3734(v18, v30);
  v29 = 1;
  v20 = sub_22E8900C4(v19, &v29);
  v21 = (llvm::VersionTuple *)&v38;
LABEL_18:
  llvm::VersionTuple::getAsString(v21);
  sub_22F2F3734(v20, &__p);
  if (v28 < 0)
    operator delete(__p);
  if (v31 < 0)
    operator delete(v30[0]);
  sub_22E903BEC(v33);
  return 1;
}

uint64_t sub_22EA4896C(_QWORD *a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5)
{
  int v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  size_t v20;
  uint64_t v22;
  unsigned int v23[25];
  int v24;
  unsigned int v25[24];

  if (a2 && (*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
  {
    v10 = *(unsigned __int8 *)(a3 + 30);
    v11 = (~(v10 << 16) & 0x780000) != 0
        ? ((*(unsigned __int16 *)(a3 + 28) | (v10 << 16)) >> 19) & 0xF
        : sub_22F1BFAD0(a3);
    if (v11 == 3 && (*(_QWORD *)(a2 + 144) & 6) == 4)
    {
      v12 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
      if (v12)
      {
        if (*(_QWORD *)(v12 + 16) > 7uLL)
          return 0;
      }
    }
  }
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v14 = *(uint64_t **)v13;
    v15 = *(unsigned int *)(v13 + 8);
    v16 = *(uint64_t **)v13;
    if ((_DWORD)v15)
    {
      v17 = 8 * v15;
      v16 = *(uint64_t **)v13;
      while (*(_WORD *)(*v16 + 32) != 305)
      {
        ++v16;
        v17 -= 8;
        if (!v17)
          goto LABEL_23;
      }
    }
    if (v16 != &v14[v15])
    {
      do
      {
        v19 = *v14++;
        v18 = v19;
      }
      while (*(_WORD *)(v19 + 32) != 305);
      v20 = *(unsigned int *)(v18 + 36);
      if (a5 != v20 || (_DWORD)v20 && memcmp(*(const void **)(v18 + 40), a4, v20))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v18 + 16), 0x1A54u, 0, (uint64_t)v25);
        v24 = 1;
        sub_22E8900C4((uint64_t)v25, &v24);
        sub_22E903BEC(v25);
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x176Fu, 0, (uint64_t)v23);
        sub_22E903BEC(v23);
      }
      return 0;
    }
  }
LABEL_23:
  v22 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  return sub_22F39FAB4(v22, a1[11], (_OWORD *)a3, a4, a5);
}

BOOL sub_22EA48B24(_QWORD *a1, int a2)
{
  char *v4;
  uint64_t v6;
  int v7;
  char *v8;
  std::string __p;
  unsigned int v10[24];
  char *v11;

  sub_22F31F4EC((uint64_t)a1, &v11);
  v4 = v11;
  if (v11)
  {
    sub_22E8FCA40(a1, a2, 0xB1Eu, 0, (uint64_t)v10);
    v8 = v11;
    v11 = 0;
    sub_22F2432A8(&v8, &__p);
    v6 = sub_22F2F3734((uint64_t)v10, (void **)&__p.__r_.__value_.__l.__data_);
    v7 = 1;
    sub_22E8900C4(v6, &v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    if (v8)
      (*(void (**)(char *))(*(_QWORD *)v8 + 8))(v8);
    sub_22E903BEC(v10);
    if (v11)
      (*(void (**)(char *))(*(_QWORD *)v11 + 8))(v11);
  }
  return v4 == 0;
}

uint64_t sub_22EA48C08(_QWORD *a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5)
{
  unint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t v20;
  unsigned int v21[25];
  int v22;
  unsigned int v23[24];

  if (a2 && (*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
  {
    v9 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
    v10 = (*(_QWORD *)(a2 + 144) & 6) != 4 || v9 == 0;
    if (!v10 && *(_QWORD *)(v9 + 16) > 7uLL)
      return 0;
  }
  if ((*(_DWORD *)(a2 + 28) & 0x100) != 0)
  {
    sub_22EFC8E88(a2);
    v12 = *(uint64_t **)v11;
    v13 = *(unsigned int *)(v11 + 8);
    v14 = *(uint64_t **)v11;
    if ((_DWORD)v13)
    {
      v15 = 8 * v13;
      v14 = *(uint64_t **)v11;
      while (*(_WORD *)(*v14 + 32) != 145)
      {
        ++v14;
        v15 -= 8;
        if (!v15)
          goto LABEL_21;
      }
    }
    if (v14 != &v12[v13])
    {
      do
      {
        v17 = *v12++;
        v16 = v17;
      }
      while (*(_WORD *)(v17 + 32) != 145);
      v18 = *(unsigned int *)(v16 + 36);
      if (a5 != v18 || (_DWORD)v18 && memcmp(*(const void **)(v16 + 40), a4, v18))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v16 + 16), 0x1A54u, 0, (uint64_t)v23);
        v22 = 0;
        sub_22E8900C4((uint64_t)v23, &v22);
        sub_22E903BEC(v23);
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x176Fu, 0, (uint64_t)v21);
        sub_22E903BEC(v21);
      }
      return 0;
    }
  }
LABEL_21:
  v20 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  return sub_22F383790(v20, a1[11], (_OWORD *)a3, a4, a5);
}

uint64_t sub_22EA48D84(_QWORD *a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  std::string::size_type v16;
  std::string::size_type v17;
  std::string *v18;
  size_t v19;
  size_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  std::string::size_type size;
  std::string::size_type v27;
  std::string *v28;
  size_t v29;
  BOOL v30;
  uint64_t v31;
  unsigned int v32[24];
  unsigned int v33[24];
  unsigned int v34[24];
  std::string v35;
  uint64_t v36;

  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v11 = *(uint64_t **)v10;
    v12 = *(unsigned int *)(v10 + 8);
    v13 = *(uint64_t **)v10;
    if ((_DWORD)v12)
    {
      v24 = 8 * v12;
      v13 = *(uint64_t **)v10;
      while (*(_WORD *)(*v13 + 32) != 171)
      {
        ++v13;
        v24 -= 8;
        if (!v24)
          goto LABEL_36;
      }
    }
    if (v13 != &v11[v12])
    {
      do
      {
        v15 = *v11++;
        v14 = v15;
      }
      while (*(_WORD *)(v15 + 32) != 171);
      v36 = v14;
      sub_22F419370(a3, &v35);
      if (sub_22F2977C0(v14))
      {
        v16 = (v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
            ? *((_BYTE *)&v35.__r_.__value_.__s + 23) & 0x7F
            : v35.__r_.__value_.__l.__size_;
        if (v16 == 5)
        {
          v17 = (v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? HIBYTE(v35.__r_.__value_.__r.__words[2])
              : v35.__r_.__value_.__l.__size_;
          v18 = (v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
              ? &v35
              : (std::string *)v35.__r_.__value_.__r.__words[0];
          v19 = v17 >= 5 ? 5 : v17;
          if (!memcmp(v18, "error", v19) && v17 == 5)
            goto LABEL_24;
        }
      }
      if (sub_22F248BA8(v14)
        && ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? (size = *((_BYTE *)&v35.__r_.__value_.__s + 23) & 0x7F)
          : (size = v35.__r_.__value_.__l.__size_),
            size == 7
         && ((v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? (v27 = HIBYTE(v35.__r_.__value_.__r.__words[2]))
           : (v27 = v35.__r_.__value_.__l.__size_),
             (v35.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
           ? (v28 = &v35)
           : (v28 = (std::string *)v35.__r_.__value_.__r.__words[0]),
             v27 >= 7 ? (v29 = 7) : (v29 = v27),
             !memcmp(v28, "warning", v29) ? (v30 = v27 == 7) : (v30 = 0),
             v30)))
      {
LABEL_24:
        v21 = *(unsigned int *)(v14 + 36);
        if (a5 != v21 || (_DWORD)v21 && memcmp(*(const void **)(v14 + 40), a4, v21))
        {
          sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x197Bu, 0, (uint64_t)v34);
          sub_22E9AEE38((uint64_t)v34, &v36);
          sub_22E903BEC(v34);
          sub_22E8FCA40(a1, *(_DWORD *)(v14 + 16), 0x176Fu, 0, (uint64_t)v32);
          sub_22E903BEC(v32);
        }
        sub_22EA0DFB8(a2);
        v22 = 1;
      }
      else
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v14 + 16), 0xB34u, 0, (uint64_t)v34);
        v31 = sub_22E8D2984((uint64_t)v34, (uint64_t *)a3);
        sub_22E9AEE38(v31, &v36);
        sub_22E903BEC(v34);
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1574u, 0, (uint64_t)v33);
        sub_22E903BEC(v33);
        v22 = 0;
      }
      if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v35.__r_.__value_.__l.__data_);
      if ((v22 & 1) == 0)
        return 0;
    }
  }
LABEL_36:
  v25 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  return sub_22F386060(v25, a1[11], (_OWORD *)a3, a4, a5);
}

uint64_t sub_22EA49028(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, int a5, int a6)
{
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  __int128 v18;
  char v19;

  v11 = (uint64_t *)sub_22E47E5E0(a2);
  do
  {
    v13 = v11;
    if (v11 >= v12)
    {
      if (v11 == v12)
        goto LABEL_20;
      v14 = v12;
      while (*(_WORD *)(*v14 + 32) != 179)
      {
        if (++v14 == v11)
          goto LABEL_20;
      }
      v13 = v11;
    }
    else
    {
      while (*(_WORD *)(*v13 + 32) != 179)
      {
        if (++v13 == v12)
          goto LABEL_20;
      }
      v14 = v12;
    }
    if (v13 == v14)
    {
LABEL_20:
      result = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 56, 3);
      v18 = a3[1];
      *(_OWORD *)result = *a3;
      *(_OWORD *)(result + 16) = v18;
      v19 = *(_BYTE *)(result + 34);
      *(_WORD *)(result + 32) = 179;
      *(_BYTE *)(result + 34) = v19 & 0xE0;
      *(_QWORD *)(result + 40) = a4;
      *(_DWORD *)(result + 48) = a5;
      *(_DWORD *)(result + 52) = a6;
      return result;
    }
    do
    {
      v16 = *v11++;
      v15 = v16;
    }
    while (*(_WORD *)(v16 + 32) != 179);
  }
  while (*(_QWORD *)(v15 + 40) != a4 || *(_DWORD *)(v15 + 48) != a5 || *(_DWORD *)(v15 + 52) != a6);
  result = 0;
  if (!*(_DWORD *)(v15 + 16))
    *(_QWORD *)(v15 + 16) = *((_QWORD *)a3 + 2);
  return result;
}

char **sub_22EA49160(_QWORD *a1, uint64_t a2, uint64_t *a3, const void *a4, uint64_t a5, const void *a6, unsigned int a7)
{
  int v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  unsigned int *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  char *v40;
  uint64_t v41;
  int v42;
  int v43;
  unint64_t v47;
  unsigned int v48[24];
  int v49;
  unsigned int v50;
  unsigned int v51[24];
  __int16 v52;
  char **v53;
  uint64_t v54[9];
  char *v55;
  uint64_t v56;
  _QWORD v57[34];

  v57[32] = *MEMORY[0x24BDAC8D0];
  v11 = sub_22F37DB38(a1[11], a4, a5, a6, a7, a3);
  v55 = (char *)v57;
  v56 = 0x800000000;
  v12 = *(unsigned int *)(v11 + 48);
  if ((_DWORD)v12)
  {
    v13 = 0;
    while (1)
    {
      v14 = *(_QWORD *)(v11 + 56);
      v15 = *(_QWORD *)(v14 + 8 * v13);
      if ((*(_DWORD *)v15 & 0x18000) != 0)
        goto LABEL_31;
      v16 = *(_QWORD *)(v15 + 8);
      v17 = *(_QWORD *)(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
      if ((*(_DWORD *)(*(_QWORD *)v17 + 16) & 0xFEu) - 2 <= 3)
      {
        v47 = v47 & 0xFFFFFFFF00000000 | v7 & 0xE0;
        v18 = sub_22EF5B848(a1[11], v16, v7 & 0xE0);
        v15 = sub_22E90092C((uint64_t)a1, v15, v18, 12, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
        *(_QWORD *)(v14 + 8 * v13) = v15;
        v16 = *(_QWORD *)(v15 + 8);
        v17 = *(_QWORD *)(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
        v7 &= 0xFFFFFFE0;
      }
      if (*(unsigned __int8 *)(*(_QWORD *)v17 + 16) - 25 <= 1)
      {
        v19 = a1[11];
        v20 = v9 & 0xFFFFFFE0;
        v8 = v8 & 0xFFFFFFFF00000000 | v9 & 0xE0;
        v21 = sub_22EF5B848(v19, v16, v8);
        v22 = *(_QWORD *)(v14 + 8 * v13);
        v15 = sub_22E3CD3D4(v19 + 2032, 24, 3);
        *(_QWORD *)(v14 + 8 * v13) = sub_22F003694((unsigned int *)v15, v21, 13, v22, 0, 0, 0);
        v9 = v20;
      }
      if ((*(_DWORD *)v15 & 0x300) == 0x100)
        break;
LABEL_13:
      v52 = 0;
      v53 = 0;
      LODWORD(v54[0]) = 0;
      if ((_DWORD)v56)
      {
        v29 = v55;
        v30 = 32 * v56;
        do
        {
          v31 = &v29[v30];
          v32 = *(_QWORD *)&v29[v30 - 24];
          if (v32)
          {
            v33 = *((_QWORD *)v31 - 2);
            if (v33)
            {
              sub_22E3BB10C(v33, v32);
              *((_QWORD *)v31 - 3) = 0;
            }
          }
          v30 -= 32;
        }
        while (v30);
      }
      LODWORD(v56) = 0;
      v53 = &v55;
      v34 = sub_22F006900(*(_QWORD *)(v14 + 8 * v13), (uint64_t)&v52, a1[11], 0);
      if ((_DWORD)v56)
        v35 = 0;
      else
        v35 = v34;
      if ((v35 & 1) != 0)
      {
        *(_QWORD *)(v14 + 8 * v13) = sub_22EFF6628(a1[11], *(int **)(v14 + 8 * v13), v54);
      }
      else
      {
        sub_22F0D5A50(*(_QWORD *)(v14 + 8 * v13));
        sub_22E8FCA40(a1, v36, 0xAE0u, 0, (uint64_t)v51);
        v37 = sub_22E8D2984((uint64_t)v51, a3);
        v50 = v13 + 1;
        v38 = sub_22E89519C(v37, &v50);
        v49 = 4;
        sub_22E8900C4(v38, &v49);
        sub_22E903BEC(v51);
        if ((_DWORD)v56)
        {
          v39 = (int *)v55;
          v40 = &v55[32 * v56];
          do
          {
            v41 = (uint64_t)(v39 + 2);
            v42 = *v39;
            v39 += 8;
            sub_22E90379C(a1, v42, v41, 0, (uint64_t)v48);
            sub_22E903BEC(v48);
          }
          while (v39 != (int *)v40);
        }
      }
      if (LODWORD(v54[0]) >= 2)
        sub_22EF53BC0(v54);
      if (!v35)
        return sub_22E89277C(&v55);
      v12 = *(unsigned int *)(v11 + 48);
LABEL_31:
      if (++v13 >= v12)
        goto LABEL_42;
    }
    v23 = a1[11];
    v24 = *(_QWORD *)(v15 + 8);
    v25 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0);
    if (!v25 || (v26 = *(_DWORD *)(v25 + 16), (v26 & 0xFE) != 0x28))
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
        || (v25 = sub_22F10CF48(v25)) == 0)
      {
LABEL_12:
        v27 = *(_QWORD *)(v14 + 8 * v13);
        v28 = (unsigned int *)sub_22E3CD3D4(v23 + 2032, 24, 3);
        *(_QWORD *)(v14 + 8 * v13) = sub_22F003694(v28, v24, 4, v27, 0, 0, 0);
        goto LABEL_13;
      }
      v26 = *(_DWORD *)(v25 + 16);
    }
    if ((v26 & 0x100000) != 0)
    {
      do
      {
        v25 = *(_QWORD *)(*(_QWORD *)(v25 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v25)
        {
          v43 = *(_DWORD *)(v25 + 16);
          if ((v43 & 0xFE) == 0x28)
            continue;
        }
        v25 = sub_22F10CF48(v25);
        v43 = *(_DWORD *)(v25 + 16);
      }
      while ((v43 & 0x100000) != 0);
    }
    v24 = *(_QWORD *)(v25 + 32);
    goto LABEL_12;
  }
LABEL_42:
  sub_22EFCA95C(a2, v11);
  return sub_22E89277C(&v55);
}

void sub_22EA49564(_QWORD *a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  __int128 v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  uint8x8_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD *v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned __int8 **v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  char v40;
  uint64_t (**v41)();
  char v42;
  int v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  char v49;
  uint64_t v50;
  _OWORD v51[2];
  __int16 v52;
  char v53;
  uint64_t v54;

  v8 = a3[1];
  v51[0] = *a3;
  v51[1] = v8;
  v53 = 0;
  v52 = 363;
  v54 = a4;
  v9 = *((_DWORD *)a3 + 4);
  v10 = *(_DWORD *)(a2 + 28) & 0x7F;
  if (a2 && (v10 - 42) >= 0xFFFFFFFD)
  {
    v11 = *(_QWORD *)(a2 + 80);
    if ((v11 & 4) != 0)
      v12 = (uint64_t *)((v11 & 0xFFFFFFFFFFFFFFF8) + 8);
    else
      v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFF8);
  }
  else
  {
    if ((v10 - 48) >= 0x1B)
      v13 = 0;
    else
      v13 = a2;
    v12 = (uint64_t *)(v13 + 48);
  }
  v50 = *v12;
  v14 = *(_QWORD *)(v50 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v14 + 17) & 4) == 0)
  {
    v15 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v15 != 32 && v15 != 39 && (v15 & 0xFE) != 0x28 && v15 != 31)
    {
      sub_22E8FCA40(a1, v9, 0x1882u, 0, (uint64_t)&v41);
      if (v47)
      {
        v26 = v45;
        if (!v45)
        {
          v26 = (unsigned __int8 *)sub_22E3B8AAC(v46);
          v45 = v26;
        }
        v26[*v26 + 1] = 15;
        v27 = v45;
      }
      else
      {
        if (!v49)
          goto LABEL_35;
        v30 = v44;
        v31 = (uint64_t *)(v41 + 1598);
        if (v44)
          v30 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v44 + 32))(v44);
        v38 = v30;
        v32 = sub_22F2F1D6C(v31, &v38);
        v33 = v32[1] + 32 * v48;
        v36 = *(unsigned __int8 **)(v33 + 8);
        v35 = (unsigned __int8 **)(v33 + 8);
        v34 = v36;
        if (!v36)
        {
          v34 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v35[1]);
          *v35 = v34;
        }
        v34[*v34 + 1] = 15;
        v27 = *v35;
      }
      v28 = *v27;
      *v27 = v28 + 1;
      *(_QWORD *)&v27[8 * v28 + 16] = v51;
LABEL_35:
      v29 = sub_22E8901B8((uint64_t)&v41, &v50);
      v38 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
      sub_22E8906A0(v29, &v38);
      sub_22E903BEC((unsigned int *)&v41);
      return;
    }
  }
  if ((*(_BYTE *)(a4 + 2) & 1) != 0)
  {
    v20 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
    v21 = a3[1];
    *(_OWORD *)v20 = *a3;
    *(_OWORD *)(v20 + 16) = v21;
    v22 = *(_BYTE *)(v20 + 34);
    *(_WORD *)(v20 + 32) = 363;
    *(_BYTE *)(v20 + 34) = v22 & 0xE0;
    *(_QWORD *)(v20 + 40) = a4;
    sub_22EFCA95C(a2, v20);
    return;
  }
  v39 = 1;
  v38 = 0;
  v40 = 0;
  v42 = 0;
  v41 = off_24FAB8300;
  v43 = 2609;
  v17 = sub_22EB4CB24(a1, a4, (uint64_t)&v38, &v41, 0);
  if ((v17 & 1) == 0)
  {
    if (v39 > 0x40)
    {
      if (llvm::APInt::countPopulationSlowCase((llvm::APInt *)&v38) != 1)
        goto LABEL_22;
    }
    else
    {
      v18 = (uint8x8_t)vcnt_s8((int8x8_t)v38);
      v18.i16[0] = vaddlv_u8(v18);
      if (v18.u32[0] != 1)
      {
LABEL_22:
        sub_22E8FCA40(a1, v9, 0xA39u, 0, (uint64_t)&v41);
        sub_22F0D4E74(a4);
        v37 = v19;
        sub_22E8906A0((uint64_t)&v41, &v37);
        sub_22E903BEC((unsigned int *)&v41);
        goto LABEL_26;
      }
    }
    v23 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
    v24 = a3[1];
    *(_OWORD *)v23 = *a3;
    *(_OWORD *)(v23 + 16) = v24;
    v25 = *(_BYTE *)(v23 + 34);
    *(_WORD *)(v23 + 32) = 363;
    *(_BYTE *)(v23 + 34) = v25 & 0xE0;
    *(_QWORD *)(v23 + 40) = v17 & 0xFFFFFFFFFFFFFFFELL;
    sub_22EFCA95C(a2, v23);
  }
LABEL_26:
  if (v39 >= 0x41 && v38)
    MEMORY[0x2348A0E84](v38, 0x1000C8000313F17);
}

void sub_22EA498D8(_QWORD *a1, unint64_t a2, _OWORD *a3, uint64_t a4, int a5)
{
  __int128 v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  int v19;
  int v20;
  int8x8_t *v21;
  int8x8_t v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  int v26;
  uint8x8_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t (***v34)();
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unint64_t v51;
  int8x8_t *v52;
  unsigned int v53;
  char v54;
  uint64_t (**v55)();
  char v56;
  int v57;
  __int128 v58;
  __int128 v59;
  int v60;
  uint64_t v61;

  v10 = a3[1];
  v58 = *a3;
  v59 = v10;
  v60 = 16777314;
  v61 = a4;
  v11 = *((_DWORD *)a3 + 4);
  if (sub_22F31E800((uint64_t)&v58))
  {
    v12 = *(_DWORD *)(a2 + 28) & 0x7F;
    if (v12 == 64)
    {
      LODWORD(v51) = 0;
LABEL_17:
      sub_22E8FCA40(a1, v11, 0xA32u, 0, (uint64_t)&v55);
      v52 = (int8x8_t *)&v58;
      sub_22E9AEE38((uint64_t)&v55, (uint64_t *)&v52);
      sub_22E8900C4((uint64_t)&v55, (int *)&v51);
LABEL_18:
      sub_22E903BEC((unsigned int *)&v55);
      return;
    }
    if ((v12 - 67) >= 0xFFFFFFF9)
    {
      if ((*(_BYTE *)(a2 + 96) & 7) == 5)
      {
        LODWORD(v51) = 1;
        if ((*(_BYTE *)(a2 + 97) & 2) == 0)
          goto LABEL_17;
      }
      else if ((*(_BYTE *)(a2 + 97) & 2) == 0)
      {
        goto LABEL_20;
      }
      v14 = 2;
      goto LABEL_16;
    }
    if ((v12 - 52) >= 0xFFFFFFFD)
    {
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v14 = 3;
        goto LABEL_16;
      }
    }
    else
    {
      v13 = v12 - 33;
      if (v13)
      {
        if (v13 >= 5)
        {
          sub_22E8FCA40(a1, v11, 0xB2Fu, 0, (uint64_t)&v55);
          v52 = (int8x8_t *)&v58;
          sub_22E9AEE38((uint64_t)&v55, (uint64_t *)&v52);
          if ((~(BYTE14(v59) << 16) & 0x780000) != 0)
            v25 = ((WORD6(v59) | (BYTE14(v59) << 16)) >> 19) & 0xF;
          else
            v25 = sub_22F1BFAD0((uint64_t)&v58);
          if (v25 == 5)
            v26 = 9;
          else
            v26 = 10;
          LODWORD(v50) = v26;
          sub_22E8900C4((uint64_t)&v55, (int *)&v50);
          goto LABEL_18;
        }
      }
      else if ((*(_BYTE *)(sub_22EFC8868(a2) + 1) & 1) != 0)
      {
        v14 = 4;
LABEL_16:
        LODWORD(v51) = v14;
        goto LABEL_17;
      }
    }
  }
LABEL_20:
  if ((*(_BYTE *)(a4 + 2) & 1) == 0)
  {
    v53 = 1;
    v52 = 0;
    v54 = 0;
    v56 = 0;
    v55 = off_24FAB8300;
    v57 = 2615;
    v15 = sub_22EB4CB24(a1, a4, &v52, &v55, 0);
    if ((v15 & 1) != 0)
      goto LABEL_22;
    if (v53 >= 0x41)
      v21 = v52;
    else
      v21 = (int8x8_t *)&v52;
    v22 = *v21;
    if (*(_QWORD *)v21 >= 0x10uLL
      && (*(_DWORD *)(a2 + 28) & 0x7Fu) - 49 <= 2
      && *(_DWORD *)(*(_QWORD *)(a1[11] + 15088) + 68) == 21)
    {
      sub_22E8FCA40(a1, v11, 0x1A84u, 0, (uint64_t)&v55);
      sub_22F0D4E74(a4);
      v51 = v23;
      sub_22E8906A0((uint64_t)&v55, (uint64_t *)&v51);
      sub_22E903BEC((unsigned int *)&v55);
    }
    if (sub_22F31E800((uint64_t)&v58))
    {
      v24 = v53;
      if (v53 > 0x40)
      {
        if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v52) == v24)
          goto LABEL_54;
      }
      else if (!v52)
      {
        goto LABEL_54;
      }
    }
    v27 = (uint8x8_t)vcnt_s8(v22);
    v27.i16[0] = vaddlv_u8(v27);
    if (v27.u32[0] != 1)
    {
      sub_22E8FCA40(a1, v11, 0xA39u, 0, (uint64_t)&v55);
      sub_22F0D4E74(a4);
      v51 = v35;
      v34 = &v55;
      v33 = (uint64_t *)&v51;
      goto LABEL_59;
    }
LABEL_54:
    v28 = a1[11];
    v29 = *(_QWORD *)(v28 + 15088);
    v30 = 0x2000;
    if (*(_DWORD *)(v29 + 76) != 1)
      v30 = 0x100000000;
    v51 = v30;
    if (*(_QWORD *)&v22 <= v30)
    {
      if ((*(_DWORD *)(a2 + 28) & 0x7Fu) - 60 >= 7)
        v36 = 0;
      else
        v36 = a2;
      v50 = v36;
      if (v36)
      {
        if (*(_BYTE *)(v29 + 81))
        {
          v37 = *(unsigned int *)(v29 + *(_QWORD *)(*(_QWORD *)v29 - 24) + 52);
          v38 = v37 / sub_22EF5CDF0(v28, *(_QWORD *)(*(_QWORD *)(v28 + 16408) & 0xFFFFFFFFFFFFFFF0));
          LODWORD(v48) = v38;
          if (*(_QWORD *)&v22 > v38 && (_DWORD)v38 != 0)
          {
            sub_22EFBB794(v36);
            if (v40)
            {
              sub_22E8FCA40(a1, *(_DWORD *)(v36 + 24), 0x1310u, 0, (uint64_t)&v55);
              v49 = v22.i32[0];
              v41 = sub_22E89519C((uint64_t)&v55, (unsigned int *)&v49);
              v42 = sub_22E890024(v41, &v50);
              sub_22E89519C(v42, (unsigned int *)&v48);
              goto LABEL_60;
            }
          }
          v28 = a1[11];
          v29 = *(_QWORD *)(v28 + 15088);
        }
        if (*(_DWORD *)(v29 + 68) == 21
          && *(_QWORD *)&v22 <= 0xFuLL
          && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v36 + 48) & 0xFFFFFFFFFFFFFFF0)
                                                                      + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 55 <= 1)
        {
          sub_22E8FCA40(a1, *(_DWORD *)(v36 + 24), 0x182Fu, 0, (uint64_t)&v55);
          v48 = *(_QWORD *)(v36 + 48);
          v43 = sub_22E8901B8((uint64_t)&v55, &v48);
          v49 = 16;
          sub_22E8900C4(v43, &v49);
          goto LABEL_60;
        }
      }
      v44 = sub_22E3CD3D4(v28 + 2032, 48, 3);
      v45 = a3[1];
      *(_OWORD *)v44 = *a3;
      *(_OWORD *)(v44 + 16) = v45;
      v46 = *(unsigned __int8 *)(v44 + 34) >> 5;
      *(_BYTE *)(v44 + 35) = 1;
      *(_QWORD *)(v44 + 40) = v15 & 0xFFFFFFFFFFFFFFFELL;
      if (a5)
        v47 = 0x20000;
      else
        v47 = 0;
      *(_WORD *)(v44 + 32) = 98;
      *(_BYTE *)(v44 + 34) = (v47 & 0xFF1FFFFF | ((v46 & 7) << 21)) >> 16;
      sub_22EFCA95C(a2, v44);
      goto LABEL_22;
    }
    sub_22E8FCA40(a1, v11, 0xADDu, 0, (uint64_t)&v55);
    v31 = sub_22E97FA2C((uint64_t)&v55, (uint64_t *)&v51);
    sub_22F0D4E74(a4);
    v50 = v32;
    v33 = &v50;
    v34 = (uint64_t (***)())v31;
LABEL_59:
    sub_22E8906A0((uint64_t)v34, v33);
LABEL_60:
    sub_22E903BEC((unsigned int *)&v55);
LABEL_22:
    if (v53 >= 0x41)
    {
      if (v52)
        MEMORY[0x2348A0E84](v52, 0x1000C8000313F17);
    }
    return;
  }
  if (a2
    && (*(_DWORD *)(a2 + 28) & 0x7Fu) - 42 >= 0xFFFFFFFD
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8)
                                         + ((2 * *(_QWORD *)(a2 + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0)
                 + 17) & 4) == 0)
  {
    sub_22E8FCA40(a1, v11, 0xA38u, 0, (uint64_t)&v55);
    sub_22F0D4E74(a4);
    v52 = (int8x8_t *)v16;
    sub_22E8906A0((uint64_t)&v55, (uint64_t *)&v52);
    goto LABEL_18;
  }
  v17 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  v18 = a3[1];
  *(_OWORD *)v17 = *a3;
  *(_OWORD *)(v17 + 16) = v18;
  v19 = *(unsigned __int8 *)(v17 + 34) >> 5;
  *(_BYTE *)(v17 + 35) = 1;
  *(_QWORD *)(v17 + 40) = a4;
  if (a5)
    v20 = 0x20000;
  else
    v20 = 0;
  *(_WORD *)(v17 + 32) = 98;
  *(_BYTE *)(v17 + 34) = (v20 & 0xFF1FFFFF | ((v19 & 7) << 21)) >> 16;
  sub_22EFCA95C(a2, v17);
}

uint64_t sub_22EA49EE4(_QWORD *a1, unint64_t a2)
{
  int v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t result;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24[24];
  uint64_t v25;
  unint64_t v26;

  v4 = *(_DWORD *)(a2 + 28);
  if (a2 && (*(_DWORD *)(a2 + 28) & 0x7Fu) - 75 >= 0xFFFFFFE5)
  {
    v5 = *(_QWORD *)(a2 + 48);
    v26 = v5;
LABEL_4:
    v6 = v5;
    goto LABEL_10;
  }
  v7 = *(_QWORD *)(a2 + 48);
  if (v7)
  {
    v5 = v7 & 0xFFFFFFFFFFFFFFF0;
  }
  else
  {
    v5 = sub_22EF6462C(a1[11], a2);
    v4 = *(_DWORD *)(a2 + 28);
  }
  v26 = v5;
  if (!a2 || (v4 & 0x7F) != 0x21)
    goto LABEL_4;
  v6 = sub_22E496830(a2);
LABEL_10:
  v8 = (uint64_t *)(v5 & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(result + 17) & 4) == 0)
  {
    result = sub_22F1110EC(result, 0);
    if ((result & 1) == 0)
    {
      v25 = 0;
      result = sub_22E47E5E0(a2);
      v10 = (uint64_t *)result;
      v12 = v11;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      while (1)
      {
        v16 = v10;
        if (v10 >= v12)
        {
          if (v10 == v12)
            break;
          v17 = v12;
          while (*(_WORD *)(*v17 + 32) != 98)
          {
            if (++v17 == v10)
              goto LABEL_32;
          }
          v16 = v10;
        }
        else
        {
          while (*(_WORD *)(*v16 + 32) != 98)
          {
            if (++v16 == v12)
              goto LABEL_32;
          }
          v17 = v12;
        }
        if (v16 == v17)
          break;
        do
        {
          v18 = *v10++;
          v13 = v18;
        }
        while (*(_WORD *)(v18 + 32) != 98);
        result = sub_22F37CC2C(v13);
        if ((result & 1) != 0)
          return result;
        if (sub_22F31E800(v13))
          v15 = v13;
        result = sub_22F37CC74(v13, a1[11]);
        if (v14 <= result)
          v14 = result;
        v25 = v13;
      }
LABEL_32:
      if (v14)
      {
        result = sub_22F111384(*v8);
        if ((_DWORD)result)
        {
          sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0xB23u, 0, (uint64_t)v24);
          v19 = sub_22E8FB3C4((uint64_t)v24, &v25);
          sub_22E8901B8(v19, (uint64_t *)&v26);
          return (uint64_t)sub_22E903BEC(v24);
        }
        if (v15)
        {
          v20 = v14
              / (unint64_t)sub_22EF5CDF0(a1[11], *(_QWORD *)(*(_QWORD *)(a1[11] + 16408) & 0xFFFFFFFFFFFFFFF0));
          result = sub_22EF5D130(a1[11], v6);
          if (result > v20)
          {
            v21 = result;
            sub_22E8FCA40(a1, *(_DWORD *)(v15 + 16), 0xA35u, 0, (uint64_t)v24);
            v22 = sub_22E8901B8((uint64_t)v24, (uint64_t *)&v26);
            v23 = v21;
            sub_22E89519C(v22, &v23);
            return (uint64_t)sub_22E903BEC(v24);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EA4A130(_QWORD *a1, uint64_t a2, int a3, int a4, int a5)
{
  uint64_t v10;
  uint64_t result;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15[24];
  uint64_t v16;

  v16 = a2;
  v10 = *(_QWORD *)(a2 + 128);
  if (!v10)
  {
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
    v10 = *(_QWORD *)(a2 + 128);
  }
  result = 0;
  if (a5 != 3 && (*(_DWORD *)(*(_QWORD *)(v10 + 88) + 72) & 0x10000) != 0)
  {
    v12 = sub_22F097C40(a2);
    if (a4)
    {
      if (v12 == a5)
        return 0;
    }
    else if (v12 <= a5)
    {
      return 0;
    }
    sub_22E8FCA40(a1, a3, 0xF4Bu, 0, (uint64_t)v15);
    v14 = 0;
    sub_22E8900C4((uint64_t)v15, &v14);
    sub_22E903BEC(v15);
    v13 = *(_QWORD *)(a2 + 128);
    if (!v13)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104));
      v13 = *(_QWORD *)(a2 + 128);
    }
    sub_22E8FCA40(a1, *(_DWORD *)(*(_QWORD *)(v13 + 88) + 24), 0x15A7u, 0, (uint64_t)v15);
    sub_22E890024((uint64_t)v15, &v16);
    sub_22E903BEC(v15);
    return 1;
  }
  return result;
}

void sub_22EA4A244(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _DWORD *v9;
  unsigned int v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  BOOL v36;
  uint64_t v37;
  char AsInteger;
  uint64_t v39;
  unint64_t v40;
  unsigned int v41;
  _BOOL4 v42;
  uint64_t v43;
  _BOOL4 v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  int i;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  char v72;
  _BYTE v73[96];
  _BYTE v74[96];
  char v75;
  char v76;
  unsigned int v77[24];
  unsigned int v78[24];
  uint64_t v79;
  _QWORD v80[12];
  unsigned int v81[24];
  uint64_t v82;
  unsigned int v83;
  int v84;
  unsigned __int8 v85;
  char v86;
  unsigned int v87;
  _BYTE *v88;
  unint64_t v89;
  uint64_t v90;

  v90 = a4;
  v9 = *(_DWORD **)(a4 + 16);
  v10 = *v9;
  v88 = v9 + 4;
  v89 = v10;
  sub_22EA4AA7C(&v88);
  v11 = *(_DWORD *)(a3 + 16);
  v87 = 0;
  v86 = 1;
  v85 = 0;
  v84 = 255;
  v83 = 64;
  v82 = 0;
  v12 = v89;
  if (v89 <= 3)
  {
    v13 = (uint64_t)v88;
    goto LABEL_9;
  }
  v13 = (uint64_t)v88;
  if (*v88 == 86)
  {
    v14 = 0;
    v15 = v89 - 1;
    v16 = 1;
    while (v89 != v16)
    {
      v17 = (char)v88[v16];
      if (v17 < 0)
      {
        v18 = v16 - 1;
        v14 = v16;
        if (v16 != 1)
          goto LABEL_51;
LABEL_59:
        v82 = 0;
        goto LABEL_69;
      }
      v18 = v14;
      ++v16;
      ++v14;
      if ((*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * v17 + 60) & 0x400) == 0)
        goto LABEL_48;
    }
    v18 = v89 - 1;
    v14 = v89;
LABEL_48:
    if (!v18)
      goto LABEL_59;
LABEL_51:
    if (v15 >= v18)
      v15 = v18;
    v80[0] = v88 + 1;
    v80[1] = v15;
    AsInteger = llvm::StringRef::getAsInteger((llvm::StringRef *)v80, 10, (llvm::APInt *)&v82);
    v39 = v83;
    if ((AsInteger & 1) != 0)
    {
      if (v83 <= 0x40)
        goto LABEL_59;
      goto LABEL_68;
    }
    if (v83 > 0x40)
    {
      if (llvm::APInt::countPopulationSlowCase((llvm::APInt *)&v82) != 1)
      {
LABEL_68:
        *(_QWORD *)v82 = 0;
        bzero((void *)(v82 + 8), (((unint64_t)(v39 + 63) >> 3) - 8) & 0xFFFFFFF8);
        goto LABEL_69;
      }
    }
    else if (!v82 || (v82 & (v82 - 1)) != 0)
    {
      goto LABEL_59;
    }
    if (v12 >= v14)
      v40 = v14;
    else
      v40 = v12;
    sub_22EA4AAD4(a1[11], v13 + v40, v12 - v40, (int *)&v87, &v86, &v85, &v84);
    if ((a5 & 1) == 0)
    {
      sub_22E8FCA40(a1, v11, 0x1BFBu, 0, (uint64_t)v81);
      sub_22E903BEC(v81);
    }
  }
LABEL_69:
  v41 = v83;
  if (v83 > 0x40)
  {
    if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v82) != v41)
      goto LABEL_10;
LABEL_9:
    sub_22EA4AAD4(a1[11], v13, v12, (int *)&v87, &v86, &v85, &v84);
    goto LABEL_10;
  }
  if (!v82)
    goto LABEL_9;
LABEL_10:
  v19 = v87;
  if (!v87)
  {
    sub_22E8FCA40(a1, v11, 0xEA2u, 0, (uint64_t)v80);
    LODWORD(v79) = 0;
LABEL_17:
    v23 = sub_22E8900C4((uint64_t)v80, (int *)&v79);
    sub_22E8BAE44(v23, &v90);
LABEL_33:
    v31 = (unsigned int *)v80;
LABEL_34:
    sub_22E903BEC(v31);
    goto LABEL_144;
  }
  v20 = *(_DWORD *)(a2 + 28) & 0x7F;
  if (a2 && (v20 - 42) >= 0xFFFFFFFD)
  {
    v21 = *(_QWORD *)(a2 + 80);
    if ((v21 & 4) != 0)
      v22 = (unint64_t *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8);
    else
      v22 = (unint64_t *)(v21 & 0xFFFFFFFFFFFFFFF8);
  }
  else if (a2 && v20 == 33)
  {
    v24 = sub_22E496830(a2);
    if (v24 > 0xF)
      goto LABEL_24;
    v22 = (unint64_t *)(a1[11] + 16480);
  }
  else
  {
    v22 = (unint64_t *)(a2 + 48);
  }
  v24 = *v22;
LABEL_24:
  v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v26 + 17) & 4) != 0)
    goto LABEL_143;
  v27 = sub_22E3E4B64(v26);
  if (v27)
    v24 = *(_QWORD *)(v27 + 32);
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x21
    || (v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
    && *(_BYTE *)(v28 + 16) == 44)
  {
    v29 = v83;
    if (v83 > 0x40)
    {
      if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v82) != v29)
        goto LABEL_32;
    }
    else if (v82)
    {
LABEL_32:
      sub_22E8FCA40(a1, v11, 0xCDDu, 0, (uint64_t)v80);
      v30 = sub_22E8BAE44((uint64_t)v80, &v90);
      v79 = *(_QWORD *)(a3 + 16);
      sub_22E8906A0(v30, &v79);
      goto LABEL_33;
    }
  }
  v32 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(*(_QWORD *)(v33 + 8) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_DWORD *)(v34 + 16);
  if (v34)
    v36 = v35 == 11;
  else
    v36 = 0;
  if (v36)
  {
    if (((*(_DWORD *)(v34 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
    {
      v35 = 11;
      goto LABEL_76;
    }
  }
  else if (v34 && v35 == 44)
  {
    v37 = sub_22F114198(*(_QWORD *)(v34 + 24));
    if ((*(_BYTE *)(v37 + 74) & 1) != 0)
    {
      v33 = *v32;
    }
    else
    {
      v33 = *v32;
      if (*(_QWORD *)(v37 + 128) <= 7uLL)
      {
        v35 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v33 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        goto LABEL_76;
      }
    }
  }
  else if (v35 != 9)
  {
    goto LABEL_76;
  }
  v35 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v33 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v35 != 9)
  {
    v42 = 1;
    goto LABEL_78;
  }
LABEL_76:
  v42 = v35 == 44;
LABEL_78:
  if (v35 == 11 || sub_22F10E0B8(v33) || v42)
  {
    if (v86)
    {
      if (!v42)
      {
        sub_22E8FCA40(a1, v11, 0xF5Fu, 0, (uint64_t)v77);
        sub_22E903BEC(v77);
      }
      goto LABEL_84;
    }
    if (v85)
    {
      if (!sub_22F10E0B8(v33))
      {
        v51 = (unsigned int *)&v76;
        goto LABEL_101;
      }
    }
    else if (!sub_22F10E0EC(v33))
    {
      v51 = (unsigned int *)&v75;
LABEL_101:
      sub_22E8FCA40(a1, v11, 0xF5Fu, 0, (uint64_t)v51);
      sub_22E903BEC(v51);
    }
  }
  else
  {
    sub_22E8FCA40(a1, v11, 0xF5Eu, 0, (uint64_t)v78);
    sub_22E903BEC(v78);
    if (v86)
    {
LABEL_84:
      v43 = a1[11];
      v44 = sub_22F110930(*v32);
      v45 = sub_22EF60A6C(v43, v19, v44);
      goto LABEL_85;
    }
  }
  v45 = sub_22F36F034(a1[11], v19, v84);
LABEL_85:
  v46 = v45;
  if (v45 <= 0xF)
  {
    sub_22E8FCA40(a1, v11, 0xEA2u, 0, (uint64_t)v80);
    LODWORD(v79) = 1;
    goto LABEL_17;
  }
  v47 = v85;
  if (v85)
    v46 = sub_22F369F4C(a1[11], v45);
  v48 = v83;
  if (v83 > 0x40)
  {
    if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v82) != v48)
    {
      v49 = *(_QWORD *)v82;
LABEL_105:
      v56 = a1[11];
      v57 = v46;
      v55 = 0;
      goto LABEL_106;
    }
  }
  else
  {
    v49 = v82;
    if (v82)
      goto LABEL_105;
  }
  v50 = sub_22E3E4B64(*v25);
  if (!v50)
    goto LABEL_107;
  if (v47)
  {
    sub_22E8FCA40(a1, v11, 0xBE5u, 0, (uint64_t)v74);
    v31 = (unsigned int *)v74;
    goto LABEL_34;
  }
  v52 = v50;
  v53 = sub_22EF5CDF0(a1[11], *v32) * *(unsigned int *)(v50 + 20);
  v54 = sub_22EF5CDF0(a1[11], *(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF0));
  v55 = (*(_DWORD *)(v52 + 16) >> 19) & 0xF;
  v49 = v53 / v54;
  v56 = a1[11];
  v57 = v46;
LABEL_106:
  v46 = sub_22F36B7E4(v56, v57, v49, v55);
LABEL_107:
  if (v46 <= 0xF)
  {
    sub_22E8FCA40(a1, v11, 0xF5Fu, 0, (uint64_t)v73);
    v31 = (unsigned int *)v73;
    goto LABEL_34;
  }
  v58 = *(_DWORD *)(a2 + 28) & 0x7F;
  if (a2 && (v58 - 42) >= 0xFFFFFFFD)
  {
    v59 = *(_QWORD *)(a2 + 80);
    v60 = (_QWORD *)(v59 & 0xFFFFFFFFFFFFFFF8);
    if ((v59 & 4) != 0)
      v60 = (_QWORD *)*v60;
    v61 = *(_QWORD *)(a2 + 16);
    v62 = v61 & 0xFFFFFFFFFFFFFFF8;
    if ((v61 & 4) != 0)
      v62 = *(_QWORD *)v62;
    for (i = *(_WORD *)(v62 + 8) & 0x7F; i != 83; i = *(_WORD *)(v62 + 8) & 0x7F)
    {
      v64 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v64 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_126;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_125;
        if (i == 16)
          goto LABEL_119;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_132;
        if (i == 24)
        {
LABEL_119:
          v64 = -48;
        }
        else
        {
LABEL_125:
          if (i != 70)
          {
LABEL_126:
            v65 = i - 52;
            if ((i - 33) >= 5)
              v66 = -48;
            else
              v66 = -64;
            if (v65 >= 6)
              v64 = v66;
            else
              v64 = -72;
            goto LABEL_132;
          }
          v64 = -64;
        }
      }
LABEL_132:
      v67 = *(_QWORD *)(v62 + v64 + 16);
      v62 = v67 & 0xFFFFFFFFFFFFFFF8;
      if ((v67 & 4) != 0)
        v62 = *(_QWORD *)v62;
    }
    v68 = sub_22E3CD3D4(*(_QWORD *)(v62 + 48) + 2032, 16, 3);
    *(_QWORD *)v68 = v60;
    *(_QWORD *)(v68 + 8) = v46;
    *(_QWORD *)(a2 + 80) = *(_QWORD *)(a2 + 80) & 3 | v68 | 4;
  }
  else if (a2 && v58 == 33)
  {
    *(_QWORD *)(a2 + 128) = *(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFFBLL;
  }
  else
  {
    *(_QWORD *)(a2 + 48) = v46;
  }
LABEL_143:
  v69 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  v70 = v90;
  v71 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v69 = *(_OWORD *)a3;
  *(_OWORD *)(v69 + 16) = v71;
  v72 = *(_BYTE *)(v69 + 34);
  *(_WORD *)(v69 + 32) = 475;
  *(_BYTE *)(v69 + 34) = v72 & 0xE0;
  *(_QWORD *)(v69 + 40) = v70;
  sub_22EFCA95C(a2, v69);
LABEL_144:
  if (v83 >= 0x41)
  {
    if (v82)
      MEMORY[0x2348A0E84](v82, 0x1000C8000313F17);
  }
}

uint64_t sub_22EA4AA7C(_QWORD *a1)
{
  unint64_t v1;
  _WORD *v2;
  _WORD *v4;
  unint64_t v5;
  unint64_t v6;

  v1 = a1[1];
  if (v1 < 5)
    return 0;
  v2 = (_WORD *)*a1;
  if (*(_WORD *)*a1 != 24415 || *(_WORD *)((char *)v2 + v1 - 2) != 24415)
    return 0;
  v4 = v2 + 1;
  v5 = v1 - 2;
  v6 = v1 - 4;
  if (v5 < v6)
    v6 = v5;
  *a1 = v4;
  a1[1] = v6;
  return 1;
}

uint64_t sub_22EA4AAD4(uint64_t result, uint64_t a2, uint64_t a3, int *a4, _BYTE *a5, _BYTE *a6, int *a7)
{
  int v8;
  int v9;
  uint64_t (*v12)(void);
  int v13;
  int v14;

  *a5 = 1;
  *a6 = 0;
  *a7 = 255;
  switch(a3)
  {
    case 2:
      v8 = 8;
      switch(*(_BYTE *)a2)
      {
        case 'H':
          v8 = 16;
          goto LABEL_28;
        case 'I':
          v13 = 4;
          goto LABEL_24;
        case 'K':
          v13 = 3;
LABEL_24:
          *a7 = v13;
          v8 = (*(_BYTE *)(a2 + 1) != 73) << 7;
          goto LABEL_28;
        case 'Q':
          goto LABEL_28;
        case 'S':
          v8 = 32;
          goto LABEL_28;
        case 'T':
          *a7 = 2;
          v8 = 128;
          goto LABEL_28;
        case 'X':
          v8 = 96;
LABEL_28:
          *a4 = v8;
          break;
        default:
          break;
      }
      v14 = *(unsigned __int8 *)(a2 + 1);
      if (v14 == 67)
      {
        *a5 = 0;
        *a6 = 1;
      }
      else if (v14 != 73)
      {
        if (v14 == 70)
          *a5 = 0;
        else
          *a4 = 0;
      }
      break;
    case 4:
      if (*(_DWORD *)a2 == 1685221239)
      {
        v12 = *(uint64_t (**)(void))(**(_QWORD **)(result + 15088) + 240);
        goto LABEL_21;
      }
      if (*(_DWORD *)a2 == 1702132066)
      {
        v9 = 8;
        goto LABEL_13;
      }
      break;
    case 7:
      if (*(_DWORD *)a2 == 1852403568 && *(_DWORD *)(a2 + 3) == 1919251566)
      {
        v9 = *(unsigned __int8 *)(*(_QWORD *)(result + 15088) + *(_QWORD *)(**(_QWORD **)(result + 15088) - 24));
LABEL_13:
        *a4 = v9;
      }
      break;
    case 11:
      if (*(_QWORD *)a2 == 0x775F646E69776E75 && *(_QWORD *)(a2 + 3) == 0x64726F775F646E69)
      {
        v12 = *(uint64_t (**)(void))(**(_QWORD **)(result + 15088) + 232);
LABEL_21:
        result = v12();
        *a4 = result;
      }
      break;
    default:
      return result;
  }
  return result;
}

__n128 sub_22EA4ACB0(_QWORD *a1, uint64_t a2, __n128 *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;
  uint64_t v15;
  __n128 v16;
  char v17;
  unsigned int v18[24];
  unsigned int v19[24];
  uint64_t v20;

  v20 = a4;
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_10;
  sub_22EFC8E88(a2);
  v8 = *(uint64_t **)v7;
  v9 = *(unsigned int *)(v7 + 8);
  v10 = *(uint64_t **)v7;
  if ((_DWORD)v9)
  {
    v11 = 8 * v9;
    v10 = *(uint64_t **)v7;
    while (*(_WORD *)(*v10 + 32) != 272)
    {
      ++v10;
      v11 -= 8;
      if (!v11)
        goto LABEL_10;
    }
  }
  if (v10 == &v8[v9])
  {
LABEL_10:
    if (!sub_22E46A45C(a2))
    {
      v15 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
      result = *a3;
      v16 = a3[1];
      *(__n128 *)v15 = *a3;
      *(__n128 *)(v15 + 16) = v16;
      v17 = *(_BYTE *)(v15 + 34);
      *(_WORD *)(v15 + 32) = 45;
      *(_BYTE *)(v15 + 34) = v17 & 0xE0;
    }
  }
  else
  {
    do
    {
      v13 = *v8++;
      v12 = v13;
    }
    while (*(_WORD *)(v13 + 32) != 272);
    sub_22E8FCA40(a1, a3[1].n128_i32[0], 0x1875u, 0, (uint64_t)v19);
    sub_22E8BAE44((uint64_t)v19, &v20);
    sub_22E903BEC(v19);
    sub_22E8FCA40(a1, *(_DWORD *)(v12 + 16), 0x1574u, 0, (uint64_t)v18);
    sub_22E903BEC(v18);
  }
  return result;
}

uint64_t sub_22EA4ADE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int *v6;
  uint64_t result;
  __int128 v8;
  char v9;
  uint64_t v10;
  int v11;
  _BYTE v12[100];
  int v13;
  uint64_t v14;
  _BYTE v15[96];

  if (!a2 || (*(_DWORD *)(a2 + 28) & 0x7Fu) - 67 < 0xFFFFFFF9)
    goto LABEL_6;
  if ((*(_DWORD *)(a2 + 28) & 0x7F) != 0x3C)
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0x1891u, 0, (uint64_t)v15);
    v14 = a3;
    v10 = sub_22E8FB3C4((uint64_t)v15, &v14);
    if ((**(_QWORD **)(a1 + 72) & 0x100) != 0)
      v11 = 12;
    else
      v11 = 2;
    v13 = v11;
    sub_22E8900C4(v10, &v13);
    v6 = (unsigned int *)v15;
    goto LABEL_11;
  }
  if (!sub_22E3CB5E0(a2))
  {
LABEL_6:
    result = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 40, 3);
    v8 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)result = *(_OWORD *)a3;
    *(_OWORD *)(result + 16) = v8;
    v9 = *(_BYTE *)(result + 34);
    *(_WORD *)(result + 32) = 193;
    *(_BYTE *)(result + 34) = v9 & 0xE0;
    return result;
  }
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x1A23u, 0, (uint64_t)v12);
  v6 = (unsigned int *)v12;
LABEL_11:
  sub_22E903BEC(v6);
  return 0;
}

__n128 sub_22EA4AEEC(_QWORD *a1, uint64_t a2, __n128 *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  __n128 result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char v16;
  unsigned int v17[24];
  unsigned int v18[24];

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_8;
  sub_22EFC8E88(a2);
  v7 = *(uint64_t **)v6;
  v8 = *(unsigned int *)(v6 + 8);
  v9 = *(uint64_t **)v6;
  if ((_DWORD)v8)
  {
    v10 = 8 * v8;
    v9 = *(uint64_t **)v6;
    while (*(_WORD *)(*v9 + 32) != 272)
    {
      ++v9;
      v10 -= 8;
      if (!v10)
        goto LABEL_8;
    }
  }
  if (v9 != &v7[v8])
  {
    do
    {
      v13 = *v7++;
      v12 = v13;
    }
    while (*(_WORD *)(v13 + 32) != 272);
    sub_22E8FCA40(a1, a3[1].n128_i32[0], 0x1875u, 0, (uint64_t)v18);
    sub_22F2F30F4((uint64_t)v18, (uint64_t)"'minsize'");
    sub_22E903BEC(v18);
    sub_22E8FCA40(a1, *(_DWORD *)(v12 + 16), 0x1574u, 0, (uint64_t)v17);
    sub_22E903BEC(v17);
  }
  else
  {
LABEL_8:
    if (!sub_22E62AE6C(a2))
    {
      v14 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
      result = *a3;
      v15 = a3[1];
      *(__n128 *)v14 = *a3;
      *(__n128 *)(v14 + 16) = v15;
      v16 = *(_BYTE *)(v14 + 34);
      *(_WORD *)(v14 + 32) = 212;
      *(_BYTE *)(v14 + 34) = v16 & 0xE0;
    }
  }
  return result;
}

void sub_22EA4B01C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 322)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 322)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

__n128 sub_22EA4B0E8(_QWORD *a1, uint64_t a2, __n128 *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  __n128 result;
  uint64_t v49;
  __n128 v50;
  char v51;
  uint64_t v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t v55;
  unsigned __int8 *v56;
  unsigned __int8 **v57;
  unsigned __int8 *v58;
  uint64_t v59;
  uint64_t *v60;
  _QWORD *v61;
  uint64_t v62;
  unsigned __int8 *v63;
  unsigned __int8 **v64;
  unsigned __int8 *v65;
  unsigned int v66[24];
  unsigned int v67[24];
  unsigned int v68[4];
  uint64_t v69;
  unsigned __int8 *v70;
  uint64_t v71;
  char v72;
  unsigned int v73;
  char v74;
  uint64_t v75;

  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v7 = *(uint64_t **)v6;
    v8 = *(unsigned int *)(v6 + 8);
    v9 = *(uint64_t **)v6;
    if ((_DWORD)v8)
    {
      v10 = 8 * v8;
      v9 = *(uint64_t **)v6;
      while (*(_WORD *)(*v9 + 32) != 45)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_31;
      }
    }
    if (v9 != &v7[v8])
    {
      do
      {
        v12 = *v7++;
        v11 = v12;
      }
      while (*(_WORD *)(v12 + 32) != 45);
      sub_22E8FCA40(a1, *(_DWORD *)(v11 + 16), 0x1875u, 0, (uint64_t)v68);
      if (v72)
      {
        v13 = v70;
        if (!v70)
        {
          v13 = (unsigned __int8 *)sub_22E3B8AAC(v71);
          v70 = v13;
        }
        v13[*v13 + 1] = 15;
        v14 = v70;
      }
      else
      {
        if (!v74)
        {
LABEL_15:
          sub_22E903BEC(v68);
          sub_22E8FCA40(a1, a3[1].n128_i32[0], 0x1574u, 0, (uint64_t)v67);
          sub_22E903BEC(v67);
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v17 = *(char **)v16;
            v18 = *(unsigned int *)(v16 + 8);
            if ((_DWORD)v18)
            {
              v19 = &v17[8 * v18];
              v20 = 8 * v18 - 8;
              v21 = *(char **)v16;
              v22 = *(char **)v16;
              while (1)
              {
                v23 = *(_QWORD *)v22;
                v22 += 8;
                if (*(_WORD *)(v23 + 32) == 45)
                  break;
                v20 -= 8;
                v21 = v22;
                if (v22 == v19)
                  goto LABEL_29;
              }
              if (v22 == v19)
              {
                v19 = v21;
              }
              else
              {
                v24 = 8;
                v19 = v21;
                do
                {
                  v25 = *(_QWORD *)&v21[v24];
                  if (*(_WORD *)(v25 + 32) != 45)
                  {
                    *(_QWORD *)v19 = v25;
                    v19 += 8;
                  }
                  v24 += 8;
                  v20 -= 8;
                }
                while (v20);
                v17 = *(char **)v16;
              }
            }
            else
            {
              v19 = *(char **)v16;
            }
LABEL_29:
            v26 = (unint64_t)(v19 - v17) >> 3;
            *(_DWORD *)(v16 + 8) = v26;
            if (!(_DWORD)v26)
              *(_DWORD *)(a2 + 28) &= ~0x100u;
          }
          goto LABEL_31;
        }
        v52 = v69;
        v53 = (uint64_t *)(*(_QWORD *)v68 + 12784);
        if (v69)
          v52 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v69 + 32))(v69);
        v75 = v52;
        v54 = sub_22F2F1D6C(v53, &v75);
        v55 = v54[1] + 32 * v73;
        v58 = *(unsigned __int8 **)(v55 + 8);
        v57 = (unsigned __int8 **)(v55 + 8);
        v56 = v58;
        if (!v58)
        {
          v56 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v57[1]);
          *v57 = v56;
        }
        v56[*v56 + 1] = 15;
        v14 = *v57;
      }
      v15 = *v14;
      *v14 = v15 + 1;
      *(_QWORD *)&v14[8 * v15 + 16] = v11;
      goto LABEL_15;
    }
  }
LABEL_31:
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v28 = *(uint64_t **)v27;
    v29 = *(unsigned int *)(v27 + 8);
    v30 = *(uint64_t **)v27;
    if ((_DWORD)v29)
    {
      v31 = 8 * v29;
      v30 = *(uint64_t **)v27;
      while (*(_WORD *)(*v30 + 32) != 212)
      {
        ++v30;
        v31 -= 8;
        if (!v31)
          goto LABEL_61;
      }
    }
    if (v30 != &v28[v29])
    {
      do
      {
        v33 = *v28++;
        v32 = v33;
      }
      while (*(_WORD *)(v33 + 32) != 212);
      sub_22E8FCA40(a1, *(_DWORD *)(v32 + 16), 0x1875u, 0, (uint64_t)v68);
      if (v72)
      {
        v34 = v70;
        if (!v70)
        {
          v34 = (unsigned __int8 *)sub_22E3B8AAC(v71);
          v70 = v34;
        }
        v34[*v34 + 1] = 15;
        v35 = v70;
      }
      else
      {
        if (!v74)
        {
LABEL_45:
          sub_22E903BEC(v68);
          sub_22E8FCA40(a1, a3[1].n128_i32[0], 0x1574u, 0, (uint64_t)v66);
          sub_22E903BEC(v66);
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v38 = *(char **)v37;
            v39 = *(unsigned int *)(v37 + 8);
            if ((_DWORD)v39)
            {
              v40 = &v38[8 * v39];
              v41 = 8 * v39 - 8;
              v42 = *(char **)v37;
              v43 = *(char **)v37;
              while (1)
              {
                v44 = *(_QWORD *)v43;
                v43 += 8;
                if (*(_WORD *)(v44 + 32) == 212)
                  break;
                v41 -= 8;
                v42 = v43;
                if (v43 == v40)
                  goto LABEL_59;
              }
              if (v43 == v40)
              {
                v40 = v42;
              }
              else
              {
                v45 = 8;
                v40 = v42;
                do
                {
                  v46 = *(_QWORD *)&v42[v45];
                  if (*(_WORD *)(v46 + 32) != 212)
                  {
                    *(_QWORD *)v40 = v46;
                    v40 += 8;
                  }
                  v45 += 8;
                  v41 -= 8;
                }
                while (v41);
                v38 = *(char **)v37;
              }
            }
            else
            {
              v40 = *(char **)v37;
            }
LABEL_59:
            v47 = (unint64_t)(v40 - v38) >> 3;
            *(_DWORD *)(v37 + 8) = v47;
            if (!(_DWORD)v47)
              *(_DWORD *)(a2 + 28) &= ~0x100u;
          }
          goto LABEL_61;
        }
        v59 = v69;
        v60 = (uint64_t *)(*(_QWORD *)v68 + 12784);
        if (v69)
          v59 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v69 + 32))(v69);
        v75 = v59;
        v61 = sub_22F2F1D6C(v60, &v75);
        v62 = v61[1] + 32 * v73;
        v65 = *(unsigned __int8 **)(v62 + 8);
        v64 = (unsigned __int8 **)(v62 + 8);
        v63 = v65;
        if (!v65)
        {
          v63 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v64[1]);
          *v64 = v63;
        }
        v63[*v63 + 1] = 15;
        v35 = *v64;
      }
      v36 = *v35;
      *v35 = v36 + 1;
      *(_QWORD *)&v35[8 * v36 + 16] = v32;
      goto LABEL_45;
    }
  }
LABEL_61:
  if (!sub_22E4728AC(a2))
  {
    v49 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
    result = *a3;
    v50 = a3[1];
    *(__n128 *)v49 = *a3;
    *(__n128 *)(v49 + 16) = v50;
    v51 = *(_BYTE *)(v49 + 34);
    *(_WORD *)(v49 + 32) = 272;
    *(_BYTE *)(v49 + 34) = v51 & 0xE0;
  }
  return result;
}

uint64_t sub_22EA4B588(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v4;
  unsigned int v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  _BOOL4 v17;
  char v18;
  __int16 v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31[24];

  v4 = *(_QWORD *)(a2 + 48);
  if ((v4 & 0x10000) != 0)
    return 1;
  if ((v4 & 0x800000) != 0)
  {
    result = 0;
    *a3 = BYTE3(v4);
    return result;
  }
  if (!sub_22E8D2A78(a2, (_QWORD *)a1, *(unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8) == 366))
    goto LABEL_50;
  v9 = *(unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8);
  if (v9 > 0x177)
  {
    if (*(unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8) <= 0x1A3u)
    {
      if (*(unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8) <= 0x180u)
      {
        if (v9 == 376)
          v10 = 17;
        else
          v10 = 16;
      }
      else if (v9 == 385)
      {
        v10 = 8;
      }
      else if (v9 == 409)
      {
        v10 = 1;
      }
      else
      {
        v10 = 15;
      }
      goto LABEL_63;
    }
    if (*(unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8) <= 0x1B2u)
    {
      if (v9 == 420)
      {
        v10 = 14;
      }
      else if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 68) == 15)
      {
        v10 = 7;
      }
      else
      {
        v10 = 0;
      }
      goto LABEL_63;
    }
    if (v9 == 435)
    {
      v10 = 3;
      goto LABEL_63;
    }
    if (v9 != 457)
    {
      v10 = 4;
      goto LABEL_63;
    }
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 104) & 0x20) == 0 || (*(_BYTE *)(a1 + 60) & 2) != 0)
    {
      v10 = 30;
      goto LABEL_63;
    }
    goto LABEL_32;
  }
  if (*(unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8) <= 0x7Cu)
  {
    if (*(unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8) <= 0x2Bu)
    {
      if (v9 == 1)
        v10 = 19;
      else
        v10 = 18;
    }
    else
    {
      if (v9 == 44)
      {
        v10 = 0;
        *a3 = 0;
        goto LABEL_64;
      }
      if (v9 == 105)
        v10 = 2;
      else
        v10 = 11;
    }
LABEL_63:
    *a3 = v10;
LABEL_64:
    v13 = *(_QWORD *)(a1 + 88);
    v14 = *(_QWORD *)(v13 + 15088);
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 68) & 0x20) != 0)
    {
      v15 = *(_QWORD *)(v13 + 15096);
      v16 = sub_22E9FDFC4(a1, a4, 0);
      v17 = v16 < 4;
      v18 = v16 & 0xF;
      v19 = *(_WORD *)(*(_QWORD *)(a1 + 72) + 96);
      if ((v19 & 0x80) != 0)
        v20 = v15;
      else
        v20 = v14;
      if ((v19 & 0x80) == 0)
        v14 = v15;
      if (v16 <= 3 && ((0xCu >> v18) & 1) != 0)
      {
        if (v20)
        {
          v21 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v20 + 728))(v20, *a3);
          if (v21)
            goto LABEL_79;
        }
      }
      v22 = v17 & (0xBu >> v18);
      if (!v14)
        v22 = 0;
      if (v22 != 1)
        goto LABEL_88;
      v10 = *a3;
    }
    v21 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v14 + 728))(v14, v10);
LABEL_79:
    switch(v21)
    {
      case 1:
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 16), 0x18C5u, 0, (uint64_t)&v29);
        v23 = sub_22E8D2984((uint64_t)&v29, (uint64_t *)a2);
        v28 = 0;
        sub_22E8900C4(v23, &v28);
        sub_22E903BEC((unsigned int *)&v29);
        if (a4)
        {
          v24 = sub_22EFBAEF8(a4);
          v25 = sub_22EFBF68C(a4);
        }
        else
        {
          v24 = 0;
          v25 = 0;
        }
        *a3 = sub_22EF72F20(*(_QWORD *)(a1 + 88), v25, v24, 0);
        break;
      case 3:
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 16), 0x142Eu, 0, (uint64_t)&v29);
        v26 = sub_22E8D2984((uint64_t)&v29, (uint64_t *)a2);
        v28 = 0;
        sub_22E8900C4(v26, &v28);
        sub_22E903BEC((unsigned int *)&v29);
        break;
      case 2:
        *a3 = 0;
        break;
    }
LABEL_88:
    result = 0;
    *(_QWORD *)(a2 + 48) = *(_QWORD *)(a2 + 48) & 0xFFFFFFFF007FFFFFLL | (*a3 << 24) | 0x800000u;
    return result;
  }
  if (*(unsigned __int16 *)(*(_QWORD *)(a2 + 72) + 8) <= 0xFEu)
  {
    if (v9 != 125)
    {
      if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 68) == 15)
        v10 = 0;
      else
        v10 = 6;
      goto LABEL_63;
    }
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 236) & 4) != 0)
    {
      v10 = 29;
      goto LABEL_63;
    }
LABEL_32:
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 16), 0x92u, 0, (uint64_t)&v29);
    sub_22E8D2984((uint64_t)&v29, (uint64_t *)a2);
    sub_22E903BEC((unsigned int *)&v29);
LABEL_50:
    *(_QWORD *)(a2 + 48) |= 0x10000uLL;
    return 1;
  }
  if (v9 == 255)
  {
    v10 = 28;
    goto LABEL_63;
  }
  if (v9 == 363)
  {
    v10 = 5;
    goto LABEL_63;
  }
  v29 = 0;
  v30 = 0;
  if ((sub_22EA472B0(a1, a2, 0, &v29, 0) & 1) == 0)
    goto LABEL_50;
  if (v30 == 9)
  {
    if (*(_QWORD *)v29 == 0x66762D7363706161 && *(_BYTE *)(v29 + 8) == 112)
    {
      v10 = 10;
      goto LABEL_63;
    }
  }
  else if (v30 == 5 && *(_DWORD *)v29 == 1668309345 && *(_BYTE *)(v29 + 4) == 115)
  {
    v10 = 9;
    goto LABEL_63;
  }
  *(_QWORD *)(a2 + 48) |= 0x10000uLL;
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 16), 0xE59u, 0, (uint64_t)v31);
  sub_22E903BEC(v31);
  return 1;
}

BOOL sub_22EA4BA30(uint64_t a1)
{
  uint64_t v1;
  int v2;
  BOOL v3;
  int v4;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  v2 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if ((v2 & 0xFE) != 0x28)
  {
    v3 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) > 0x27u
      || ((1 << v2) & 0x8100000400) == 0;
    v4 = v2 & 0xFF800FF;
    if (v3 && v4 != 114294795)
      return (*(unsigned __int8 *)(v1 + 17) >> 2) & 1;
  }
  v6 = *(_QWORD *)((sub_22F10ACF8(v1) & 0xFFFFFFFFFFFFFFF0) + 8);
  return (v6 & 8) == 0 || (*(_DWORD *)((v6 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0;
}

uint64_t sub_22EA4BAD4(_QWORD *a1, uint64_t a2, uint64_t a3, _DWORD *a4, unsigned int a5, int a6)
{
  int v12;
  unsigned int v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t *v20;
  int v22;
  void *v23;
  uint64_t *v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *__dst[2];
  unint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  char v35;
  unint64_t *v36;
  unsigned int v37;
  char v38;
  unsigned __int8 v39;
  unsigned int v40;
  uint64_t *v41;
  __int128 v42;
  _QWORD v43[6];

  v43[5] = *MEMORY[0x24BDAC8D0];
  v40 = a5;
  v37 = 32;
  v36 = 0;
  v38 = 1;
  v39 = 1;
  if ((*(_BYTE *)(a3 + 1) & 0x80) != 0)
    goto LABEL_9;
  sub_22F00905C(a3, a1[11], 0, (uint64_t)&v33);
  sub_22E54C490((uint64_t)&v36, (uint64_t)&v33);
  v12 = v39;
  if (v35 && v34 >= 0x41 && v33)
    MEMORY[0x2348A0E84](v33, 0x1000C8000313F17);
  if (!v12)
  {
LABEL_9:
    if (a5 == -1)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0xAE5u, 0, (uint64_t)&v33);
      v41 = (uint64_t *)a2;
      sub_22EA8D684((uint64_t)&v33, &v41);
      v32 = 1;
      v15 = &v33;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0xAE0u, 0, (uint64_t)&v33);
      v41 = (uint64_t *)a2;
      sub_22EA8D684((uint64_t)&v33, &v41);
      v15 = (uint64_t *)sub_22E89519C((uint64_t)&v33, &v40);
      v32 = 1;
    }
    v16 = sub_22E8900C4((uint64_t)v15, &v32);
    sub_22F0D4E74(a3);
    __dst[0] = v17;
    sub_22E8906A0(v16, (uint64_t *)__dst);
    goto LABEL_13;
  }
  v13 = v37;
  if (v37 > 0x40)
    v14 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v36);
  else
    v14 = v37 + __clz((unint64_t)v36) - 64;
  if (v13 - v14 >= 0x21)
  {
    sub_22EFF605C(a3);
    sub_22E8FCA40(a1, v22, 0xDDBu, 0, (uint64_t)&v33);
    v41 = v43;
    v42 = xmmword_22F455490;
    llvm::APInt::toString();
    v23 = (void *)v42;
    if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v24 = v41;
    if ((unint64_t)v42 >= 0x17)
    {
      v26 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v42 | 7) != 0x17)
        v26 = v42 | 7;
      v27 = v26 + 1;
      v25 = (void **)operator new(v26 + 1);
      __dst[1] = v23;
      v31 = v27 | 0x8000000000000000;
      __dst[0] = v25;
    }
    else
    {
      HIBYTE(v31) = v42;
      v25 = __dst;
      if (!(_QWORD)v42)
        goto LABEL_38;
    }
    memmove(v25, v24, (size_t)v23);
LABEL_38:
    *((_BYTE *)v23 + (_QWORD)v25) = 0;
    if (v41 != v43)
      free(v41);
    v28 = sub_22F2F3734((uint64_t)&v33, __dst);
    LODWORD(v41) = 32;
    v29 = sub_22E8900C4(v28, (int *)&v41);
    v32 = 1;
    sub_22E8900C4(v29, &v32);
    if (SHIBYTE(v31) < 0)
      operator delete(__dst[0]);
    goto LABEL_13;
  }
  v19 = v36;
  if (a6 && !v38)
  {
    v20 = &v36[(v13 - 1) >> 6];
    if (v13 < 0x41)
      v20 = (unint64_t *)&v36;
    if (((*v20 >> (v13 - 1)) & 1) != 0)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0xB1Du, 0, (uint64_t)&v33);
      v41 = (uint64_t *)a2;
      sub_22EA8D684((uint64_t)&v33, &v41);
      LODWORD(__dst[0]) = 1;
      sub_22E8900C4((uint64_t)&v33, (int *)__dst);
LABEL_13:
      sub_22E903BEC((unsigned int *)&v33);
      v18 = 0;
      goto LABEL_25;
    }
  }
  if (v13 < 0x41)
    v19 = (unint64_t *)&v36;
  *a4 = *v19;
  v18 = 1;
LABEL_25:
  if (v39 && v37 >= 0x41 && v36)
    MEMORY[0x2348A0E84](v36, 0x1000C8000313F17);
  return v18;
}

unint64_t sub_22EA4BE8C(_QWORD *a1, unint64_t a2, _QWORD *a3, unsigned int a4)
{
  unint64_t v5;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v21;
  void *v22;
  const void *v23;
  void **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *__dst[2];
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  char v39;
  unsigned __int8 v40;
  unsigned int v41;
  _QWORD *v42;
  __int128 v43;
  _QWORD v44[6];

  v5 = a2;
  v44[5] = *MEMORY[0x24BDAC8D0];
  v41 = a4;
  if ((sub_22EE67384((uint64_t)a1, a2, 0) & 1) != 0)
    return 0;
  if ((*(_BYTE *)(v5 + 2) & 1) != 0)
    return v5;
  v38 = 64;
  v37 = 0;
  v39 = 1;
  v40 = 1;
  sub_22F00905C(v5, a1[11], 0, (uint64_t)&v32);
  sub_22E54C490((uint64_t)&v37, (uint64_t)&v32);
  v7 = v40;
  if ((_BYTE)v34 && v33 >= 0x41 && v32)
    MEMORY[0x2348A0E84](v32, 0x1000C8000313F17);
  if (v7)
  {
    v8 = v38;
    if (v38 > 0x40)
      v9 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v37);
    else
      v9 = v38 + __clz(v37) - 64;
    if (v8 - v9 < 0x21)
    {
      if (sub_22E8BAD7C((uint64_t)&v37, 0))
      {
        sub_22EFF605C(v5);
        sub_22E8FCA40(a1, v14, 0x186Bu, 0, (uint64_t)&v32);
        v42 = a3;
        sub_22E9AEE38((uint64_t)&v32, (uint64_t *)&v42);
        v15 = sub_22E89519C((uint64_t)&v32, &v41);
        sub_22F0D4E74(v5);
        __dst[0] = v16;
        sub_22E8906A0(v15, (uint64_t *)__dst);
        sub_22E903BEC((unsigned int *)&v32);
      }
      v17 = a1[11];
      v18 = *(_QWORD *)(v17 + 16480) | 1;
      v35 = 0;
      LODWORD(v32) = 1;
      v19 = sub_22EF60188(v17, v18);
      v33 = 0;
      v34 = v19;
      v36 = 0;
      v5 = sub_22EC45014(a1, &v32, 0, v5, 0, 0) & 0xFFFFFFFFFFFFFFFELL;
      goto LABEL_18;
    }
    sub_22EFF605C(v5);
    sub_22E8FCA40(a1, v21, 0xDDBu, 0, (uint64_t)&v32);
    v42 = v44;
    v43 = xmmword_22F455490;
    llvm::APInt::toString();
    v22 = (void *)v43;
    if ((unint64_t)v43 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v23 = v42;
    if ((unint64_t)v43 >= 0x17)
    {
      v25 = (v43 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v43 | 7) != 0x17)
        v25 = v43 | 7;
      v26 = v25 + 1;
      v24 = (void **)operator new(v25 + 1);
      __dst[1] = v22;
      v30 = v26 | 0x8000000000000000;
      __dst[0] = v24;
    }
    else
    {
      HIBYTE(v30) = v43;
      v24 = __dst;
      if (!(_QWORD)v43)
        goto LABEL_31;
    }
    memmove(v24, v23, (size_t)v22);
LABEL_31:
    *((_BYTE *)v22 + (_QWORD)v24) = 0;
    if (v42 != v44)
      free(v42);
    v27 = sub_22F2F3734((uint64_t)&v32, __dst);
    LODWORD(v42) = 32;
    v28 = sub_22E8900C4(v27, (int *)&v42);
    v31 = 1;
    sub_22E8900C4(v28, &v31);
    if (SHIBYTE(v30) < 0)
      operator delete(__dst[0]);
    goto LABEL_12;
  }
  sub_22EFF605C(v5);
  sub_22E8FCA40(a1, v10, 0xAE0u, 0, (uint64_t)&v32);
  v42 = a3;
  sub_22E9AEE38((uint64_t)&v32, (uint64_t *)&v42);
  v11 = sub_22E89519C((uint64_t)&v32, &v41);
  v31 = 1;
  v12 = sub_22E8900C4(v11, &v31);
  sub_22F0D4E74(v5);
  __dst[0] = v13;
  sub_22E8906A0(v12, (uint64_t *)__dst);
LABEL_12:
  sub_22E903BEC((unsigned int *)&v32);
  v5 = 0;
LABEL_18:
  if (v40 && v38 >= 0x41 && v37)
    MEMORY[0x2348A0E84](v37, 0x1000C8000313F17);
  return v5;
}

uint64_t sub_22EA4C234(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 17) & 4) != 0)
    return 1;
  v2 = sub_22F10ACF8(v1);
  if (v2 < 0x10)
    return 0;
  result = sub_22F10C2A4(*(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF0));
  if (result)
    return (*(_DWORD *)(result + 28) & 0x7Fu) - 35 < 3;
  return result;
}

BOOL sub_22EA4C294(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v1 + 17) & 4) != 0)
    return 1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  return v2 == 32 || v2 == 39 || sub_22F115064(v1);
}

uint64_t sub_22EA4C2D0(_QWORD *a1, uint64_t a2, _DWORD *a3, unint64_t a4, int a5, uint64_t *a6, int a7)
{
  _QWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  unsigned int v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  unsigned __int8 *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unsigned __int8 *v28;
  int v29;
  _BOOL4 v30;
  BOOL v31;
  _BOOL4 v32;
  unint64_t v33;
  unsigned __int8 *v34;
  unint64_t v35;
  unint64_t v36;
  unsigned __int8 *v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unsigned __int8 *v41;
  unint64_t v42;
  unint64_t v43;
  unsigned __int8 *v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t i;
  _QWORD *v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  unsigned int v55;
  int v56;
  int *v57;
  uint64_t result;
  _BOOL4 v59;
  int v60;
  unsigned int v61;
  uint64_t v62;
  int v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  unint64_t v69;
  unsigned __int8 *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t j;
  char v74;
  int v75;
  BOOL v76;
  int v77;
  int v78;
  _BOOL4 v79;
  _QWORD *v80;
  int v81;
  unsigned int v82;
  uint64_t v83;
  BOOL v84;
  BOOL v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v97;
  int v98;
  int v99;
  unint64_t v100;
  _DWORD *v101;
  int v102;
  unint64_t v103;
  _DWORD *v104;
  _BOOL4 v105;
  int v106;
  uint64_t v107;
  char v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned __int8 *v112;
  unint64_t v113;
  int v114;
  unsigned __int8 *v115;
  unint64_t v116;
  unsigned __int8 *v117;
  unint64_t v118;
  unsigned int v119[24];
  unsigned __int8 *v120;
  unint64_t v121;

  v10 = a1;
  v112 = (unsigned __int8 *)a3;
  v113 = a4;
  v11 = *(_DWORD *)(a2 + 28);
  v12 = v11 & 0x7F;
  if (v12 == 24)
  {
    v13 = *(_QWORD *)(a2 + 40) & 7;
    if (v13 >= 2)
    {
      if ((_DWORD)v13 == 2)
        v14 = 1;
      else
        v14 = *(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) - 3;
    }
    else
    {
      v14 = 0;
    }
    v111 = v14;
    v17 = *(_QWORD *)(a2 + 96);
    v20 = v14;
    goto LABEL_42;
  }
  if ((v11 & 0x7Eu) - 52 >= 6)
  {
    v22 = (v12 - 22) > 0x2E || ((1 << (v12 - 22)) & 0x7FC0000EF80BLL) == 0;
    if (v22 && (v12 - 52) < 0xFFFFFFFD || (a7 & 1) != 0)
    {
      v60 = a5;
      v61 = 6236;
      goto LABEL_151;
    }
    LOBYTE(v119[0]) = 46;
    v23 = llvm::StringRef::find();
    if (v23 == -1)
    {
      v24 = v112;
      v25 = v113;
    }
    else
    {
      v24 = v112;
      if (v113 >= v23)
        v25 = v23;
      else
        v25 = v113;
      if (v113 >= v23 + 1)
        v26 = v23 + 1;
      else
        v26 = v113;
      v27 = v113 - v26;
      if (v113 != v26)
      {
        if (v25 && (word_22F4ADB24[*v112] & 0xE0) != 0)
        {
          v28 = &v112[v26];
          while ((word_22F4ADB24[*v24] & 0xE8) != 0)
          {
            ++v24;
            if (!--v25)
            {
              v25 = v27;
              v24 = v28;
              goto LABEL_94;
            }
          }
        }
        sub_22E8FCA40(v10, a5, 0x1860u, 0, (uint64_t)v119);
        v52 = sub_22E8D2984((uint64_t)v119, a6);
        LODWORD(v120) = 1;
        goto LABEL_102;
      }
    }
LABEL_94:
    if (v25 && (word_22F4ADB24[*v24] & 0xE0) != 0)
    {
      result = 1;
      while ((word_22F4ADB24[*v24] & 0xE8) != 0)
      {
        ++v24;
        if (!--v25)
          return result;
      }
    }
    sub_22E8FCA40(v10, a5, 0x1860u, 0, (uint64_t)v119);
    v52 = sub_22E8D2984((uint64_t)v119, a6);
    LODWORD(v120) = 0;
LABEL_102:
    v57 = (int *)&v120;
    goto LABEL_103;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v15)
    v16 = *(_BYTE *)(v15 + 16) == 26;
  else
    v16 = 0;
  if (v16)
    goto LABEL_10;
  v99 = a7;
  v100 = a4;
  v101 = a3;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
  {
    v15 = sub_22F10CF48(v15);
    a3 = v101;
    a4 = v100;
    a7 = v99;
    if (!v15)
    {
      v14 = 0;
      goto LABEL_11;
    }
LABEL_10:
    v14 = (unsigned __int16)(*(_QWORD *)(v15 + 16) >> 38);
    goto LABEL_11;
  }
  v14 = 0;
LABEL_11:
  v111 = v14;
  v17 = *(_QWORD *)(a2 + 120);
  v18 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v18)
    v19 = *(_BYTE *)(v18 + 16) == 26;
  else
    v19 = 0;
  if (v19)
    goto LABEL_16;
  v102 = a7;
  v103 = a4;
  v104 = a3;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
  {
    v18 = sub_22F10CF48(v18);
    a3 = v104;
    a4 = v103;
    a7 = v102;
    if (!v18)
    {
      v20 = 0;
      goto LABEL_17;
    }
LABEL_16:
    v20 = (unsigned __int16)(*(_QWORD *)(v18 + 16) >> 38);
    goto LABEL_17;
  }
  v20 = 0;
LABEL_17:
  if ((*(_BYTE *)(a2 + 82) & 0x20) == 0)
  {
    sub_22E8FCA40(v10, a5, 0x1891u, 0, (uint64_t)v119);
    v21 = sub_22E8D2984((uint64_t)v119, a6);
    LODWORD(v120) = 21;
    sub_22E8900C4(v21, (int *)&v120);
    goto LABEL_152;
  }
LABEL_42:
  if (a7)
  {
    if (v14)
    {
      v111 = --v14;
      goto LABEL_45;
    }
    sub_22E8FCA40(v10, a5, 0x185Du, 0, (uint64_t)v119);
    v39 = sub_22E8D2984((uint64_t)v119, a6);
    LOBYTE(v120) = (*(_DWORD *)(a2 + 28) & 0x7F) == 24;
    sub_22E894E38(v39, (unsigned __int8 *)&v120);
LABEL_152:
    sub_22E903BEC(v119);
    return 0;
  }
LABEL_45:
  v120 = (unsigned __int8 *)a3;
  v121 = a4;
  v110 = 0;
  if (a4 >= 7
    && ((v29 = *a3 ^ 0x74746567 | *(_DWORD *)((char *)a3 + 3) ^ 0x3A726574, v30 = v29 == 0, !v29)
     || (*a3 == 1953785203 ? (v31 = *(_DWORD *)((char *)a3 + 3) == 980575604) : (v31 = 0), v31)))
  {
    v32 = v29 != 0;
    a3 = (_DWORD *)((char *)a3 + 7);
    v120 = (unsigned __int8 *)a3;
    v121 = a4 - 7;
    a4 -= 7;
  }
  else
  {
    v30 = 0;
    v32 = 0;
  }
  if (*((_BYTE *)a3 + a4 - 1) != 41)
    goto LABEL_150;
  v117 = 0;
  v118 = 0;
  v115 = 0;
  v116 = 0;
  LOBYTE(v119[0]) = 40;
  v33 = llvm::StringRef::find();
  if (v33 == -1)
  {
    v37 = 0;
    v38 = 0;
    v34 = v120;
    v35 = v121;
  }
  else
  {
    v34 = v120;
    if (v121 >= v33)
      v35 = v33;
    else
      v35 = v121;
    if (v121 >= v33 + 1)
      v36 = v33 + 1;
    else
      v36 = v121;
    v37 = &v120[v36];
    v38 = v121 - v36;
  }
  v117 = v34;
  v118 = v35;
  v115 = v37;
  v116 = v38;
  LOBYTE(v119[0]) = 46;
  v40 = llvm::StringRef::find();
  if (v40 == -1)
  {
    v41 = v117;
    v42 = v118;
LABEL_78:
    v46 = 0;
    v117 = v41;
    v118 = v42;
    v44 = v41;
    v45 = v42;
    goto LABEL_79;
  }
  v41 = v117;
  if (v118 >= v40)
    v42 = v40;
  else
    v42 = v118;
  if (v118 >= v40 + 1)
    v43 = v40 + 1;
  else
    v43 = v118;
  v44 = &v117[v43];
  v45 = v118 - v43;
  v117 = v44;
  v118 = v45;
  if (!v45)
    goto LABEL_78;
  if (!v42 || (word_22F4ADB24[*v41] & 0xE0) == 0)
  {
LABEL_89:
    v53 = v10;
    v54 = a5;
    v55 = 6240;
LABEL_90:
    sub_22E8FCA40(v53, v54, v55, 0, (uint64_t)v119);
    v52 = sub_22E8D2984((uint64_t)v119, a6);
    v56 = 1;
LABEL_91:
    v114 = v56;
    goto LABEL_92;
  }
  do
  {
    if ((word_22F4ADB24[*v41] & 0xE8) == 0)
      goto LABEL_89;
    ++v41;
    --v42;
  }
  while (v42);
  v46 = 1;
LABEL_79:
  if (!v45)
    goto LABEL_87;
  v47 = *v44;
  if ((word_22F4ADB24[v47] & 0xE0) == 0)
    goto LABEL_87;
  for (i = 0; i != v45; ++i)
  {
    if ((word_22F4ADB24[v44[i]] & 0xE8) == 0)
      goto LABEL_87;
  }
  if (v45 == 9)
  {
    v62 = *(_QWORD *)v44 ^ 0x7069726373627573 | v44[8] ^ 0x74;
    v59 = v62 == 0;
    if (v62)
      v63 = 1;
    else
      v63 = v30;
    if (((v32 | v63) & 1) == 0)
    {
      v49 = v10;
      v50 = a5;
      v51 = 6246;
      goto LABEL_88;
    }
  }
  else
  {
    if (v45 == 1 && (_DWORD)v47 == 95)
    {
LABEL_87:
      v49 = v10;
      v50 = a5;
      v51 = 6240;
LABEL_88:
      sub_22E8FCA40(v49, v50, v51, 0, (uint64_t)v119);
      v52 = sub_22E8D2984((uint64_t)v119, a6);
      v114 = 0;
LABEL_92:
      v57 = &v114;
LABEL_103:
      sub_22E8900C4(v52, v57);
      goto LABEL_152;
    }
    v59 = 0;
  }
  v64 = v116;
  if (!v116)
  {
    a1 = v10;
    v60 = a5;
    v61 = 6241;
    goto LABEL_151;
  }
  if (v116 >= v116 - 1)
    v64 = v116 - 1;
  v116 = v64;
  if (!v64)
  {
    if (v59)
    {
      v53 = v10;
      v54 = a5;
      v55 = 6246;
      goto LABEL_90;
    }
    if (!v32)
    {
      v83 = 0;
      v84 = 0;
      goto LABEL_162;
    }
    a1 = v10;
    v60 = a5;
    v61 = 6244;
LABEL_151:
    sub_22E8FCA40(a1, v60, v61, 0, (uint64_t)v119);
    sub_22E8D2984((uint64_t)v119, a6);
    goto LABEL_152;
  }
  if (v115[v64 - 1] != 58)
  {
LABEL_150:
    a1 = v10;
    v60 = a5;
    v61 = 6238;
    goto LABEL_151;
  }
  v105 = v59;
  v106 = 0;
  LODWORD(v65) = 0;
  v107 = 0;
  v108 = v46 ^ 1;
  while (2)
  {
    v109 = v65;
    LOBYTE(v119[0]) = 58;
    v66 = llvm::StringRef::find();
    if (v66 == -1)
    {
      v71 = 0;
      v70 = 0;
      v67 = v115;
      v68 = v116;
    }
    else
    {
      v67 = v115;
      if (v116 >= v66)
        v68 = v66;
      else
        v68 = v116;
      if (v116 >= v66 + 1)
        v69 = v66 + 1;
      else
        v69 = v116;
      v70 = &v115[v69];
      v71 = v116 - v69;
    }
    v115 = v70;
    v116 = v71;
    if (!v68 || (v72 = *(unsigned __int8 *)v67, (word_22F4ADB24[v72] & 0xE0) == 0))
    {
LABEL_157:
      v80 = v10;
      v81 = a5;
      v82 = 6240;
LABEL_158:
      sub_22E8FCA40(v80, v81, v82, 0, (uint64_t)v119);
      v52 = sub_22E8D2984((uint64_t)v119, a6);
      v56 = 2;
      goto LABEL_91;
    }
    for (j = 0; j != v68; ++j)
    {
      if ((word_22F4ADB24[*((unsigned __int8 *)v67 + j)] & 0xE8) == 0)
        goto LABEL_157;
    }
    v74 = v108;
    if (v68 != 4)
      v74 = 1;
    if ((v74 & 1) != 0)
    {
      if (v68 == 8)
      {
        v76 = *v67 == 0x65756C615677656ELL;
        v77 = HIDWORD(v107);
        if (v76)
          v77 = 1;
        HIDWORD(v107) = v77;
        v78 = v107;
        if (v76)
          v78 = v107 + 1;
        LODWORD(v107) = v78;
      }
      goto LABEL_144;
    }
    if (*(_DWORD *)v67 != 1718379891)
    {
LABEL_144:
      v75 = v109;
      goto LABEL_145;
    }
    v75 = v109;
    if (v106)
    {
      a1 = v10;
      v60 = a5;
      v61 = 6242;
      goto LABEL_151;
    }
    v106 = 1;
LABEL_145:
    v65 = (v75 + 1);
    v110 = v65;
    if (v71)
      continue;
    break;
  }
  v79 = v105;
  if (v106)
    v79 = 0;
  if (v79)
  {
    v80 = v10;
    v81 = a5;
    v82 = 6246;
    goto LABEL_158;
  }
  v84 = 0;
  if (!v109 && v118 == 4)
    v84 = *(_DWORD *)v117 == 1953066601 && (v68 != 1 || (_DWORD)v72 != 95);
  if (v30)
    v61 = 6239;
  else
    v61 = 6244;
  if (!v30 && !v32)
  {
    v83 = v65;
    goto LABEL_162;
  }
  v97 = !v30;
  if (v30)
    v98 = 1;
  else
    v98 = 2;
  if (v106)
    v97 = v98;
  if (!v105)
  {
    v83 = v65;
    if ((_DWORD)v65 == v97)
      goto LABEL_162;
    goto LABEL_210;
  }
  if (v65 < v97)
  {
LABEL_210:
    a1 = v10;
    v60 = a5;
    goto LABEL_151;
  }
  if (v32)
  {
    if (BYTE4(v107))
    {
      v83 = v65;
      if (v107 < 2)
        goto LABEL_162;
      a1 = v10;
      v60 = a5;
      v61 = 6247;
    }
    else
    {
      a1 = v10;
      v60 = a5;
      v61 = 6248;
    }
    goto LABEL_151;
  }
  v83 = v65;
  if (BYTE4(v107))
  {
    a1 = v10;
    v60 = a5;
    v61 = 6245;
    goto LABEL_151;
  }
LABEL_162:
  if ((_DWORD)v83 != v14)
  {
    if (v83 <= v14)
    {
      v86 = 0;
      if (v20)
      {
        v87 = 8 * v20;
        do
        {
          v88 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v17 + 48) & 0xFFFFFFFFFFFFFFF0);
          if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v88 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28
            || *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v88 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
          {
            v90 = v83;
            v91 = sub_22F10ACF8(v88);
            v89 = (v91 & 1) == 0 && (*(_BYTE *)((v91 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0;
            v83 = v90;
          }
          else
          {
            v89 = 0;
          }
          v86 += v89;
          v17 += 8;
          v87 -= 8;
        }
        while (v87);
      }
      if (v86 + (int)v83 >= v14)
        return 1;
    }
    else
    {
      if (v14)
        v85 = 0;
      else
        v85 = v84;
      if (v85)
        return 1;
    }
    v92 = v83 > v14;
    sub_22E8FCA40(v10, a5, 0x1863u, 0, (uint64_t)v119);
    LOBYTE(v120) = v92;
    v93 = sub_22E894E38((uint64_t)v119, (unsigned __int8 *)&v120);
    v94 = sub_22E8D2984(v93, a6);
    v95 = sub_22E89519C(v94, &v111);
    sub_22E89519C(v95, &v110);
    goto LABEL_152;
  }
  return 1;
}

uint64_t sub_22EA4CDA8(_QWORD *a1, uint64_t a2, uint64_t a3, const void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  __n128 v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unsigned int v24[24];
  unsigned int v25[24];

  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    v13.n128_f64[0] = sub_22EFC8E88(a2);
    v14 = *(uint64_t **)v12;
    v15 = *(unsigned int *)(v12 + 8);
    v16 = *(uint64_t **)v12;
    if ((_DWORD)v15)
    {
      v17 = 8 * v15;
      v16 = *(uint64_t **)v12;
      while (*(_WORD *)(*v16 + 32) != 342)
      {
        ++v16;
        v17 -= 8;
        if (!v17)
          goto LABEL_16;
      }
    }
    if (v16 != &v14[v15])
    {
      do
      {
        v19 = *v14++;
        v18 = v19;
      }
      while (*(_WORD *)(v19 + 32) != 342);
      if (a6)
      {
        v20 = *(_QWORD *)(v18 + 48);
        if (v20)
        {
          if (v20 == a6)
            return 0;
          v21 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v20 + 32))(v20, v13);
          if (v21 == (*(uint64_t (**)(uint64_t))(*(_QWORD *)a6 + 32))(a6))
            return 0;
        }
      }
      if (*(_DWORD *)(v18 + 36))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v18 + 16), 0xF4Du, 0, (uint64_t)v25);
        sub_22E903BEC(v25);
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x177Au, 0, (uint64_t)v24);
        sub_22E903BEC(v24);
        sub_22EA4CF24(a2);
      }
    }
  }
LABEL_16:
  v23 = sub_22E3CD3D4(a1[11] + 2032, 56, 3);
  return sub_22F3A5688(v23, a1[11], (_OWORD *)a3, a4, a5, a6);
}

void sub_22EA4CF24(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 342)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 342)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

__n128 sub_22EA4CFF0(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  uint64_t v11;
  __n128 result;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;
  unsigned int v22[24];
  unsigned int v23[24];

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_14;
  result.n128_f64[0] = sub_22EFC8E88(a2);
  v13 = *(uint64_t **)v11;
  v14 = *(unsigned int *)(v11 + 8);
  v15 = *(uint64_t **)v11;
  if ((_DWORD)v14)
  {
    v16 = 8 * v14;
    v15 = *(uint64_t **)v11;
    while (*(_WORD *)(*v15 + 32) != 185)
    {
      ++v15;
      v16 -= 8;
      if (!v16)
        goto LABEL_14;
    }
  }
  if (v15 == &v13[v14])
  {
LABEL_14:
    v19 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
    result = *(__n128 *)a3;
    v20 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)v19 = *(_OWORD *)a3;
    *(_OWORD *)(v19 + 16) = v20;
    v21 = *(_BYTE *)(v19 + 34);
    *(_WORD *)(v19 + 32) = 185;
    *(_BYTE *)(v19 + 34) = v21 & 0xE0;
    *(_DWORD *)(v19 + 36) = a4;
    *(_DWORD *)(v19 + 40) = a5;
    *(_DWORD *)(v19 + 44) = a6;
  }
  else
  {
    do
    {
      v18 = *v13++;
      v17 = (int *)v18;
    }
    while (*(_WORD *)(v18 + 32) != 185);
    if (v17[9] != a4 || v17[10] != a5 || v17[11] != a6)
    {
      sub_22E8FCA40(a1, v17[4], 0xDD0u, 0, (uint64_t)v23);
      sub_22E8D2984((uint64_t)v23, (uint64_t *)a3);
      sub_22E903BEC(v23);
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1574u, 0, (uint64_t)v22);
      sub_22E903BEC(v22);
    }
  }
  return result;
}

uint64_t sub_22EA4D148(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v15[24];
  unsigned int v16[24];

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return sub_22F387914(a1[11], a4, (_OWORD *)a3);
  sub_22EFC8E88(a2);
  v8 = *(uint64_t **)v7;
  v9 = *(unsigned int *)(v7 + 8);
  i = *(uint64_t **)v7;
  if ((_DWORD)v9)
  {
    v11 = 8 * v9;
    for (i = *(uint64_t **)v7; *(_WORD *)(*i + 32) != 187; ++i)
    {
      v11 -= 8;
      if (!v11)
        return sub_22F387914(a1[11], a4, (_OWORD *)a3);
    }
  }
  if (i == &v8[v9])
    return sub_22F387914(a1[11], a4, (_OWORD *)a3);
  do
  {
    v13 = *v8++;
    v12 = v13;
  }
  while (*(_WORD *)(v13 + 32) != 187);
  if (*(_DWORD *)(v12 + 36) != a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(v12 + 16), 0xDD0u, 0, (uint64_t)v16);
    sub_22E8D2984((uint64_t)v16, (uint64_t *)a3);
    sub_22E903BEC(v16);
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1574u, 0, (uint64_t)v15);
    sub_22E903BEC(v15);
  }
  return 0;
}

uint64_t sub_22EA4D25C(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = (uint64_t *)sub_22F255ABC(a1);
  v7 = v6;
  while (1)
  {
    v8 = v5;
    if (v5 >= v7)
    {
      if (v5 == v7)
        return 0;
      v9 = v7;
      while (*(_WORD *)(*v9 + 32) != 117)
      {
        if (++v9 == v5)
          return 0;
      }
      v8 = v5;
    }
    else
    {
      while (*(_WORD *)(*v8 + 32) != 117)
      {
        if (++v8 == v7)
          return 0;
      }
      v9 = v7;
    }
    if (v8 == v9)
      break;
    do
    {
      v11 = *v5++;
      v10 = v11;
    }
    while (*(_WORD *)(v11 + 32) != 117);
    if (a3 == *(_DWORD *)(v10 + 36) && (!a3 || !memcmp(*(const void **)(v10 + 40), a2, a3)))
      return 1;
  }
  return 0;
}

void sub_22EA4D338(_QWORD *a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int16 v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  __int128 *v22;
  unsigned int v23[24];
  unsigned int v24;
  unsigned int v25;

  v10 = a3[1];
  v15 = *a3;
  v16 = v10;
  v18 = 0;
  v17 = 86;
  v19 = a4;
  v20 = a5;
  if ((*(_BYTE *)(a4 + 2) & 1) != 0 || (*(_BYTE *)(a5 + 2) & 1) != 0)
  {
LABEL_11:
    v12 = sub_22E3CD3D4(a1[11] + 2032, 56, 3);
    v13 = a3[1];
    *(_OWORD *)v12 = *a3;
    *(_OWORD *)(v12 + 16) = v13;
    v14 = *(_BYTE *)(v12 + 34);
    *(_WORD *)(v12 + 32) = 86;
    *(_BYTE *)(v12 + 34) = v14 & 0xE0;
    *(_QWORD *)(v12 + 40) = a4;
    *(_QWORD *)(v12 + 48) = a5;
    sub_22EFCA95C(a2, v12);
    return;
  }
  v25 = 0;
  if (sub_22EA7EBFC(a1, (int *)&v15, a4, &v25, 0))
  {
    v24 = 0;
    if (sub_22EA7EBFC(a1, (int *)&v15, a5, &v24, 1u))
    {
      if (!v25 && v24)
      {
        sub_22E8FCA40(a1, v16, 0xADEu, 0, (uint64_t)v23);
        v22 = &v15;
        v11 = sub_22E8FB3C4((uint64_t)v23, (uint64_t *)&v22);
        v21 = 0;
LABEL_10:
        sub_22E8900C4(v11, &v21);
        sub_22E903BEC(v23);
        return;
      }
      if (v25 > v24)
      {
        sub_22E8FCA40(a1, v16, 0xADEu, 0, (uint64_t)v23);
        v22 = &v15;
        v11 = sub_22E8FB3C4((uint64_t)v23, (uint64_t *)&v22);
        v21 = 1;
        goto LABEL_10;
      }
      goto LABEL_11;
    }
  }
}

void sub_22EA4D4B0(_QWORD *a1, uint64_t a2, __int128 *a3, unint64_t a4, unint64_t a5)
{
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  __int128 v14;
  __int128 v15;
  __int16 v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  int v20;
  __int128 *v21;
  unsigned int v22[24];
  unsigned int v23;
  unsigned int v24;

  v10 = a3[1];
  v14 = *a3;
  v15 = v10;
  v17 = 0;
  v16 = 89;
  v18 = a4;
  v19 = a5;
  if ((sub_22EE67384((uint64_t)a1, a4, 0) & 1) == 0)
  {
    if (a5)
    {
      if ((sub_22EE67384((uint64_t)a1, a5, 0) & 1) != 0)
        return;
      if ((*(_BYTE *)(a4 + 2) & 1) != 0 || (*(_BYTE *)(a5 + 2) & 1) != 0)
        goto LABEL_13;
      v24 = 0;
      if ((sub_22EA7EF30(a1, (int *)&v14, a4, &v24, 0) & 1) != 0)
      {
        v23 = 0;
        if (sub_22EA7EF30(a1, (int *)&v14, a5, &v23, 1u))
        {
          if (!v24 && v23)
          {
            sub_22E8FCA40(a1, v15, 0xADEu, 0, (uint64_t)v22);
            v21 = &v14;
            sub_22E9AEE38((uint64_t)v22, (uint64_t *)&v21);
            v20 = 0;
LABEL_18:
            sub_22E8900C4((uint64_t)v22, &v20);
            sub_22E903BEC(v22);
            return;
          }
          if (v23 && v24 > v23)
          {
            sub_22E8FCA40(a1, v15, 0xADEu, 0, (uint64_t)v22);
            v21 = &v14;
            sub_22E9AEE38((uint64_t)v22, (uint64_t *)&v21);
            v20 = 1;
            goto LABEL_18;
          }
          goto LABEL_13;
        }
      }
    }
    else if ((*(_BYTE *)(a4 + 2) & 1) != 0 || (sub_22EA7EF30(a1, (int *)&v14, a4, &v24, 0) & 1) != 0)
    {
LABEL_13:
      v11 = sub_22E3CD3D4(a1[11] + 2032, 56, 3);
      v12 = a3[1];
      *(_OWORD *)v11 = *a3;
      *(_OWORD *)(v11 + 16) = v12;
      v13 = *(_BYTE *)(v11 + 34);
      *(_WORD *)(v11 + 32) = 89;
      *(_BYTE *)(v11 + 34) = v13 & 0xE0;
      *(_QWORD *)(v11 + 40) = a4;
      *(_QWORD *)(v11 + 48) = a5;
      sub_22EFCA95C(a2, v11);
    }
  }
}

__n128 sub_22EA4D680(_QWORD *a1, uint64_t a2, __n128 *a3)
{
  __n128 result;
  uint64_t v7;
  __n128 v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14[24];

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_2;
  sub_22EFC8E88(a2);
  v11 = *((unsigned int *)v10 + 2);
  if ((_DWORD)v11)
  {
    v12 = 8 * v11;
    v13 = *v10;
    while (*(_WORD *)(*(_QWORD *)v13 + 32) != 155)
    {
      v13 += 8;
      v12 -= 8;
      if (!v12)
        goto LABEL_2;
    }
  }
  else
  {
    v13 = *v10;
  }
  if (v13 == *v10 + 8 * v11)
  {
LABEL_2:
    if (!sub_22E49F808(a2))
    {
      v7 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
      result = *a3;
      v8 = a3[1];
      *(__n128 *)v7 = *a3;
      *(__n128 *)(v7 + 16) = v8;
      v9 = *(_BYTE *)(v7 + 34);
      *(_WORD *)(v7 + 32) = 157;
      *(_WORD *)(v7 + 34) = v9 & 0xE0;
    }
  }
  else
  {
    sub_22E8FCA40(a1, a3[1].n128_i32[0], 0x1875u, 0, (uint64_t)v14);
    sub_22F2F30F4((uint64_t)v14, (uint64_t)"'dllimport'");
    sub_22E903BEC(v14);
  }
  return result;
}

__n128 sub_22EA4D784(_QWORD *a1, uint64_t a2, __n128 *a3, int a4, int a5)
{
  uint64_t v10;
  __n128 result;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __n128 v33;
  char v34;
  unsigned int v35[25];
  int v36;
  unsigned int v37[24];

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_29;
  result.n128_f64[0] = sub_22EFC8E88(a2);
  v12 = *(uint64_t **)v10;
  v13 = *(unsigned int *)(v10 + 8);
  v14 = *(uint64_t **)v10;
  if ((_DWORD)v13)
  {
    v15 = 8 * v13;
    v14 = *(uint64_t **)v10;
    while (*(_WORD *)(*v14 + 32) != 202)
    {
      ++v14;
      v15 -= 8;
      if (!v15)
        goto LABEL_29;
    }
  }
  if (v14 == &v12[v13])
  {
LABEL_29:
    if (*(_QWORD *)(a2 + 128)
      || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 104) + 96), *(_QWORD *)(a2 + 104)), *(_QWORD *)(a2 + 128)))
    {
      if ((sub_22EA4A130(a1, a2, a3[1].n128_u64[0], a4, a5) & 1) != 0)
        return result;
LABEL_39:
      v32 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
      result = *a3;
      v33 = a3[1];
      *(__n128 *)v32 = *a3;
      *(__n128 *)(v32 + 16) = v33;
      v34 = *(_BYTE *)(v32 + 34);
      *(_WORD *)(v32 + 32) = 202;
      *(_BYTE *)(v32 + 34) = v34 & 0xE0;
      *(_BYTE *)(v32 + 35) = a4;
      return result;
    }
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x25)
    {
      sub_22E8FCA40(a1, a3[1].n128_i32[0], 0x19DFu, 0, (uint64_t)v37);
      v36 = 1;
    }
    else
    {
      v31 = *(_QWORD *)(a2 + 136);
      if (v31 < 8 || (v31 & 4) != 0)
        goto LABEL_39;
      sub_22E8FCA40(a1, a3[1].n128_i32[0], 0x19DFu, 0, (uint64_t)v37);
      v36 = 0;
    }
    sub_22E8900C4((uint64_t)v37, &v36);
    sub_22E903BEC(v37);
    return result;
  }
  do
  {
    v17 = *v12++;
    v16 = v17;
  }
  while (*(_WORD *)(v17 + 32) != 202);
  v18 = *(unsigned __int8 *)(v16 + 30);
  if ((~(v18 << 16) & 0x780000) != 0)
    v19 = ((*(unsigned __int16 *)(v16 + 28) | (v18 << 16)) >> 19) & 0xF;
  else
    v19 = sub_22F1BFAD0(v16);
  if (v19 != a5)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(v16 + 16), 0xF4Bu, 0, (uint64_t)v37);
    v36 = 1;
    sub_22E8900C4((uint64_t)v37, &v36);
    sub_22E903BEC(v37);
    sub_22E8FCA40(a1, a3[1].n128_i32[0], 0x1776u, 0, (uint64_t)v35);
    sub_22E903BEC(v35);
    if ((*(_BYTE *)(a2 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a2);
      v21 = *(char **)v20;
      v22 = *(unsigned int *)(v20 + 8);
      if ((_DWORD)v22)
      {
        v23 = &v21[8 * v22];
        v24 = 8 * v22 - 8;
        v25 = *(char **)v20;
        v26 = *(char **)v20;
        while (1)
        {
          v27 = *(_QWORD *)v26;
          v26 += 8;
          if (*(_WORD *)(v27 + 32) == 202)
            break;
          v24 -= 8;
          v25 = v26;
          if (v26 == v23)
            goto LABEL_27;
        }
        if (v26 == v23)
        {
          v23 = v25;
        }
        else
        {
          v28 = 8;
          v23 = v25;
          do
          {
            v29 = *(_QWORD *)&v25[v28];
            if (*(_WORD *)(v29 + 32) != 202)
            {
              *(_QWORD *)v23 = v29;
              v23 += 8;
            }
            v28 += 8;
            v24 -= 8;
          }
          while (v24);
          v21 = *(char **)v20;
        }
      }
      else
      {
        v23 = *(char **)v20;
      }
LABEL_27:
      v30 = (unint64_t)(v23 - v21) >> 3;
      *(_DWORD *)(v20 + 8) = v30;
      if (!(_DWORD)v30)
        *(_DWORD *)(a2 + 28) &= ~0x100u;
    }
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_22EA4DA58(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  int v33;
  uint64_t v34;
  unint64_t v35;
  unsigned int v36;
  uint64_t v37;
  BOOL v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  int v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  int *v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unsigned __int8 *v92;
  _BOOL4 v93;
  unint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  int v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  size_t v121;
  uint64_t v122;
  int *v123;
  int v124;
  uint64_t v125;
  unsigned __int8 *v126;
  uint64_t v127;
  double v128;
  uint64_t v129;
  unsigned __int8 *v130;
  uint64_t v131;
  int *v132;
  uint64_t v133;
  int *v134;
  char *v135;
  uint64_t v136;
  int v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _BOOL4 v162;
  uint64_t v163;
  int *v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int *v169;
  unint64_t v170;
  unint64_t v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  uint64_t v175;
  int v176;
  unsigned __int8 *v177;
  uint64_t v178;
  unsigned int v179;
  unsigned __int8 *v180;
  uint64_t v181;
  unsigned int v182;
  unint64_t v183;
  uint64_t v184;
  int *v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  unsigned int v190;
  unint64_t v191;
  unint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  int *v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  uint64_t v207;
  _QWORD v208[12];
  unsigned __int8 *v209;
  __int128 v210;
  void *v211;
  __int16 v212;
  int v213;
  uint64_t v214;
  __int16 v215;
  char v216;
  unsigned __int8 *v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  __int128 v224;
  _BYTE __p[22];
  __int16 v226;
  _BYTE v227[32];
  char *v228;
  uint64_t v229;
  _QWORD v230[34];

  v230[32] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0 || !a4 && sub_22E9AEF2C(a2))
    return 0;
  v12 = *(_QWORD *)(a2 + 48);
  v207 = v12;
  if (a3
    && !sub_22E88FFC4(a3)
    && !sub_22EFC1D94(a3)
    && !sub_22EA1DB60(a3)
    && !sub_22E4752A8(a3)
    && !sub_22EA1DBC0(a3)
    && !sub_22E6A2F54(a3))
  {
    if (a5)
      sub_22EA7F22C(a1, (unsigned int *)a2, a3, a6);
    return 0;
  }
  v13 = *(_QWORD *)(a1[9] + 116);
  if ((v13 & 0x4000000000000) != 0)
  {
    if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0) & 1) != 0)
    {
      v14 = sub_22E5453EC(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0));
      goto LABEL_19;
    }
    v13 = *(_QWORD *)(a1[9] + 116);
  }
  if ((v13 & 0x20000000000000) == 0
    || !sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "array_ref", 9, 1, 0))
  {
    goto LABEL_23;
  }
  v14 = sub_22E5457C4(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0));
LABEL_19:
  v15 = sub_22F10C2A4(v14);
  if ((*(_DWORD *)(v15 + 28) & 0x7Fu) - 35 >= 3)
    v16 = 0;
  else
    v16 = v15;
  v12 = *(_QWORD *)(**(_QWORD **)(v16 + 168) + 8);
LABEL_23:
  v17 = *(_QWORD *)(a2 + 48);
  v221 = v17;
  v222 = a4;
  v18 = a1[9];
  if ((*(_QWORD *)(v18 + 132) & 0x2000) != 0)
  {
    if ((sub_22F10CDF4(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
    {
      if (!a4 || *(_WORD *)(a4 + 32) == 379)
      {
        v206 = a6;
        if (!a3 || sub_22EA1DB60(a3) || sub_22EFC1D94(a3))
          goto LABEL_30;
        if ((*(_BYTE *)(a1[9] + 133) & 0x40) != 0)
        {
          if (sub_22E88FFC4(a3) || sub_22E4752A8(a3))
          {
LABEL_30:
            LODWORD(v19) = 5;
            goto LABEL_49;
          }
          LODWORD(v19) = 5;
          if (sub_22EA1DBC0(a3))
            goto LABEL_49;
LABEL_171:
          v93 = sub_22E6A2F54(a3);
          if (!v93)
            LODWORD(v19) = 0;
          if (v93 || !a5)
            goto LABEL_38;
LABEL_156:
          if (v206)
          {
            v86 = *(_QWORD *)(a2 + 56);
            if ((v86 & 4) != 0 && (v171 = v86 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v171 + 16)))
              v87 = **(int ***)(v171 + 24);
            else
              v87 = (int *)(a2 + 64);
            v88 = *v87;
            v54 = a1[11] + 2128;
            v56 = (unsigned __int8 *)sub_22E3B8AAC(v54);
            v89 = *v56;
            v56[v89 + 1] = 9;
            *v56 = v89 + 1;
            *(_QWORD *)&v56[8 * v89 + 16] = v17;
            v90 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
            sub_22E4D6448((uint64_t)(v56 + 336), v90, 1);
            LODWORD(v223) = v88;
            *(_DWORD *)__p = 5730;
            *((_QWORD *)&v224 + 1) = v54;
            *(_QWORD *)&v224 = sub_22E3B8AAC(v54);
            sub_22E78D4E8((_OWORD *)v224, (uint64_t)v56);
            v61 = v206;
            goto LABEL_160;
          }
          v116 = *(_QWORD *)(a2 + 56);
          if ((v116 & 4) != 0 && (v196 = v116 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v196 + 16)))
            v117 = **(int ***)(v196 + 24);
          else
            v117 = (int *)(a2 + 64);
          sub_22E8FCA40(a1, *v117, 0xEE3u, 0, (uint64_t)&v223);
          v118 = sub_22E8901B8((uint64_t)&v223, &v221);
          LODWORD(v217) = sub_22F3AC79C(a3);
          v115 = sub_22E89519C(v118, (unsigned int *)&v217);
LABEL_212:
          v119 = v115;
          v209 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          v31 = v119;
          goto LABEL_62;
        }
LABEL_155:
        if (!a5)
          return 0;
        goto LABEL_156;
      }
      goto LABEL_58;
    }
    v18 = a1[9];
  }
  v20 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_QWORD *)(v18 + 124) & 0x1000000000) != 0)
  {
    if (sub_22F10C510(*v20))
    {
      if (!a4 || *(_WORD *)(a4 + 32) == 379)
      {
        v206 = a6;
        if (a3 && !sub_22EA1DB60(a3))
        {
          if ((*(_BYTE *)(a1[9] + 129) & 4) == 0)
            goto LABEL_155;
          if (!sub_22E88FFC4(a3) && !sub_22E4752A8(a3))
          {
            LODWORD(v19) = 6;
            if (sub_22EA1DBC0(a3))
              goto LABEL_49;
            goto LABEL_171;
          }
        }
        LODWORD(v19) = 6;
        goto LABEL_49;
      }
LABEL_58:
      if (!a5)
        return 0;
      v28 = *(_QWORD *)(a2 + 56);
      if ((v28 & 4) != 0 && (v94 = v28 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v94 + 16)))
        v29 = **(int ***)(v94 + 24);
      else
        v29 = (int *)(a2 + 64);
      sub_22E8FCA40(a1, *v29, 0xEDDu, 0, (uint64_t)&v223);
      v30 = sub_22E8901B8((uint64_t)&v223, &v221);
      v31 = sub_22E8FB3C4(v30, &v222);
      v209 = *(unsigned __int8 **)(v222 + 16);
LABEL_62:
      sub_22E8906A0(v31, (uint64_t *)&v209);
      sub_22E903BEC((unsigned int *)&v223);
      return 0;
    }
    if ((*(_BYTE *)(a1[9] + 128) & 0x10) != 0 && sub_22F10C1B4(*v20))
    {
      if (!a4 || *(_WORD *)(a4 + 32) == 379)
      {
        v206 = a6;
        if (!a3
          || sub_22EA1DB60(a3)
          || (*(_BYTE *)(a1[9] + 129) & 4) != 0
          && (sub_22E88FFC4(a3) || sub_22E4752A8(a3) || sub_22EA1DBC0(a3) || sub_22E6A2F54(a3)))
        {
          if ((sub_22F10B9F8(*v20) & 1) != 0)
          {
            LODWORD(v19) = 7;
          }
          else
          {
            sub_22F10BAB0(*v20);
            LODWORD(v19) = 8;
          }
          goto LABEL_49;
        }
        goto LABEL_155;
      }
      goto LABEL_58;
    }
  }
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v20 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 >= 2)
  {
    if (!a4)
      return 0;
    goto LABEL_58;
  }
  v206 = a6;
  v21 = sub_22F10ACF8(*v20);
  v220 = v21;
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v22 & 8) == 0)
    goto LABEL_35;
  v33 = *(_DWORD *)((v22 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
  if (v33 == 13)
  {
LABEL_75:
    if (!a4 || *(_WORD *)(a4 + 32) == 379)
      goto LABEL_80;
LABEL_35:
    if (a5)
      sub_22EA7F424(a1, a2, v21, a4, v206);
    goto LABEL_37;
  }
  if (v33 != 12)
  {
    if (v33 != 11)
      goto LABEL_35;
    goto LABEL_75;
  }
  if (a4 && *(_WORD *)(a4 + 32) != 411)
    goto LABEL_35;
LABEL_80:
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v20 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1)
  {
    v34 = *(_QWORD *)((sub_22F10ACF8(*v20) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v34 & 8) != 0 && (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x6000)
    {
      if (!a3 || sub_22EA1DB60(a3) || sub_22EA1DBC0(a3))
      {
        LODWORD(v19) = 4;
        goto LABEL_38;
      }
      if (sub_22E88FFC4(a3))
      {
        v19 = (*(_QWORD *)(a1[9] + 132) & 8uLL) >> 1;
        if ((*(_QWORD *)(a1[9] + 132) & 8) != 0 || (a5 & 1) == 0)
          goto LABEL_38;
        goto LABEL_198;
      }
      if (a5)
      {
LABEL_198:
        if (v206)
        {
          v103 = *(_QWORD *)(a2 + 56);
          if ((v103 & 4) != 0 && (v192 = v103 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v192 + 16)))
            v104 = **(int ***)(v192 + 24);
          else
            v104 = (int *)(a2 + 64);
          v105 = *v104;
          v106 = a1[11] + 2128;
          v107 = (_BYTE *)sub_22E3B8AAC(v106);
          v108 = *v107;
          v107[v108 + 1] = 9;
          *v107 = v108 + 1;
          *(_QWORD *)&v107[8 * v108 + 16] = v17;
          v109 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          sub_22E4D6448((uint64_t)(v107 + 336), v109, 1);
          LODWORD(v223) = v105;
          *(_DWORD *)__p = 5730;
          *((_QWORD *)&v224 + 1) = v106;
          *(_QWORD *)&v224 = sub_22E3B8AAC(v106);
          sub_22E78D4E8((_OWORD *)v224, (uint64_t)v107);
          sub_22E8928F4(v206, (unint64_t)&v223);
          if ((_QWORD)v224 && *((_QWORD *)&v224 + 1))
          {
            sub_22E3BB10C(*((unint64_t *)&v224 + 1), v224);
            *(_QWORD *)&v224 = 0;
          }
          v110 = v106;
          v111 = (unint64_t)v107;
LABEL_205:
          sub_22E3BB10C(v110, v111);
          goto LABEL_37;
        }
        v172 = *(_QWORD *)(a2 + 56);
        if ((v172 & 4) != 0 && (v202 = v172 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v202 + 16)))
          v173 = **(int ***)(v202 + 24);
        else
          v173 = (int *)(a2 + 64);
        sub_22E8FCA40(a1, *v173, 0xEE3u, 0, (uint64_t)&v223);
        v174 = sub_22E8901B8((uint64_t)&v223, &v221);
        LODWORD(v217) = sub_22F3AC79C(a3);
        v175 = sub_22E89519C(v174, (unsigned int *)&v217);
        v209 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
        sub_22E8906A0(v175, (uint64_t *)&v209);
        goto LABEL_329;
      }
LABEL_37:
      LODWORD(v19) = 0;
      goto LABEL_38;
    }
  }
  if (a3 && sub_22E88FFC4(a3) && (*(_BYTE *)(a1[9] + 123) & 0x10) == 0 && !sub_22F10AFE4(v21, a1[11]))
  {
    if (a5)
    {
      if (v206)
      {
        v176 = sub_22EFBAFDC(a2);
        v218 = a1[11] + 2128;
        v219 = 5732;
        v217 = (unsigned __int8 *)sub_22E3B8AAC(v218);
        v217[*v217 + 1] = 9;
        v177 = v217;
        v178 = *v217;
        *v217 = v178 + 1;
        *(_QWORD *)&v177[8 * v178 + 16] = v21;
        v179 = sub_22F3AC79C(a3);
        v177[*v177 + 1] = 3;
        v180 = v217;
        v181 = *v217;
        *v217 = v181 + 1;
        *(_QWORD *)&v180[8 * v181 + 16] = v179;
        v182 = sub_22EFBAFDC(a2);
        *(_QWORD *)((char *)&v224 + 4) = 0;
        BYTE12(v224) = 0;
        v223 = (void *)(v182 | ((unint64_t)v182 << 32));
        LOBYTE(v224) = 0;
        v226 = 1536;
        *(_OWORD *)&__p[6] = 0uLL;
        qmemcpy(__p, "const ", 6);
        v227[0] = 0;
        sub_22E6D82D0((uint64_t *)&v217, &v223);
        LODWORD(v209) = v176;
        LODWORD(v211) = v219;
        *(_QWORD *)&v210 = 0;
        *((_QWORD *)&v210 + 1) = v218;
        if (v217)
        {
          *(_QWORD *)&v210 = sub_22E3B8AAC(v218);
          sub_22E78D4E8((_OWORD *)v210, (uint64_t)v217);
        }
        sub_22E8928F4(v206, (unint64_t)&v209);
        if ((_QWORD)v210 && *((_QWORD *)&v210 + 1))
        {
          sub_22E3BB10C(*((unint64_t *)&v210 + 1), v210);
          *(_QWORD *)&v210 = 0;
        }
        if (SHIBYTE(v226) < 0)
          operator delete(*(void **)__p);
        v111 = (unint64_t)v217;
        if (!v217)
          goto LABEL_37;
        v110 = v218;
        if (!v218)
          goto LABEL_37;
        goto LABEL_205;
      }
      if (a4)
      {
        v184 = *(_QWORD *)(a2 + 56);
        if ((v184 & 4) != 0 && (v204 = v184 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v204 + 16)))
          v185 = **(int ***)(v204 + 24);
        else
          v185 = (int *)(a2 + 64);
        sub_22E8FCA40(a1, *v185, 0xEDDu, 0, (uint64_t)&v223);
        v186 = sub_22E8901B8((uint64_t)&v223, &v221);
        v98 = sub_22E8FB3C4(v186, &v222);
        v209 = *(unsigned __int8 **)(v222 + 16);
      }
      else
      {
        v95 = *(_QWORD *)(a2 + 56);
        if ((v95 & 4) != 0 && (v203 = v95 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v203 + 16)))
          v96 = **(int ***)(v203 + 24);
        else
          v96 = (int *)(a2 + 64);
        sub_22E8FCA40(a1, *v96, 0xEE2u, 0, (uint64_t)&v223);
        v97 = sub_22E8901B8((uint64_t)&v223, &v221);
        v209 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
        v98 = v97;
      }
      sub_22E8906A0(v98, (uint64_t *)&v209);
      sub_22E903BEC((unsigned int *)&v223);
      v187 = sub_22EFBAFDC(a2);
      sub_22E8FCA40(a1, v187, 0x1664u, 0, (uint64_t)&v223);
      v188 = sub_22E8901B8((uint64_t)&v223, &v220);
      LODWORD(v217) = sub_22F3AC79C(a3);
      v189 = sub_22E89519C(v188, (unsigned int *)&v217);
      v190 = sub_22EFBAFDC(a2);
      *(_QWORD *)((char *)&v210 + 4) = 0;
      BYTE12(v210) = 0;
      v209 = (unsigned __int8 *)(v190 | ((unint64_t)v190 << 32));
      LOBYTE(v210) = 0;
      v215 = 1536;
      v214 = 0;
      HIBYTE(v211) = 0;
      v212 = 0;
      v213 = 0;
      strcpy((char *)&v211, "const ");
      v216 = 0;
      sub_22E890748(v189, &v209);
      if (SHIBYTE(v215) < 0)
        operator delete(v211);
LABEL_329:
      sub_22E903BEC((unsigned int *)&v223);
      goto LABEL_37;
    }
    goto LABEL_37;
  }
  v35 = *(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
  v220 = v35;
  v36 = sub_22EFBAFDC(a2);
  if (!sub_22EE8B180(a1, v36))
  {
    v223 = a1;
    *(_QWORD *)&v224 = 0x167600000000;
    *((_QWORD *)&v224 + 1) = v227;
    *(_QWORD *)__p = v227;
    *(_QWORD *)&__p[8] = 4;
    *(_DWORD *)&__p[16] = 0;
    v228 = (char *)v230;
    v229 = 0x800000000;
    v64 = sub_22EFBAFDC(a2);
    sub_22EA4F850((uint64_t)&v223, v35, v64);
    v66 = v65;
    if (v65 == 2)
    {
      if ((*(_BYTE *)(a1[9] + 126) & 8) != 0)
        goto LABEL_285;
      v67 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(v67 + 16) != 45 || (sub_22F10CA40(v67) & 1) != 0)
        goto LABEL_140;
      v68 = sub_22E5453EC(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
      if (v68)
      {
        v69 = sub_22F10C2A4(v68);
        v70 = (*(_DWORD *)(v69 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v69;
        if ((sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v70 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                  + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
          goto LABEL_140;
      }
      v66 = 0;
      if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) == 0)
      {
        v139 = sub_22E5453EC(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
        if (!v139
          || ((v140 = sub_22F10C2A4(v139), (*(_DWORD *)(v140 + 28) & 0x7Fu) - 35 >= 3) ? (v141 = 0) : (v141 = v140),
              v66 = 0,
              (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v141 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) == 0))
        {
          v142 = sub_22E5453EC(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
          if (v142)
          {
            v143 = sub_22F10C2A4(v142);
            v144 = (*(_DWORD *)(v143 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v143;
            if (sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v144 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)))
            {
LABEL_140:
              v66 = 0;
              goto LABEL_141;
            }
          }
          v66 = 0;
          if ((sub_22F10B8E0(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0), "command_buffer", 14, 0, 0) & 1) == 0)
          {
            v145 = sub_22E5453EC(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
            if (!v145
              || ((v146 = sub_22F10C2A4(v145), (*(_DWORD *)(v146 + 28) & 0x7Fu) - 35 >= 3)
                ? (v147 = 0)
                : (v147 = v146),
                  v66 = 0,
                  (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v147 + 168) + 8) & 0xFFFFFFFFFFFFFFF0), "command_buffer", 14, 0, 0) & 1) == 0))
            {
              v148 = *(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0);
              v66 = 0;
              if ((sub_22F10B8E0(v148, "render_pipeline_state", 21, 0, 0) & 1) == 0)
              {
                v66 = 0;
                if ((sub_22F10B8E0(v148, "compute_pipeline_state", 22, 0, 0) & 1) == 0)
                {
                  v149 = sub_22E5453EC(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
                  if (!v149
                    || ((v150 = sub_22F10C2A4(v149), (*(_DWORD *)(v150 + 28) & 0x7Fu) - 35 >= 3)
                      ? (v151 = 0)
                      : (v151 = v150),
                        (v152 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v151 + 168) + 8) & 0xFFFFFFFFFFFFFFF0),
                         v66 = 0,
                         (sub_22F10B8E0(v152, "render_pipeline_state", 21, 0, 0) & 1) == 0)
                     && (v66 = 0, (sub_22F10B8E0(v152, "compute_pipeline_state", 22, 0, 0) & 1) == 0)))
                  {
                    if ((sub_22F10CDF4(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                      goto LABEL_140;
                    v153 = sub_22E5453EC(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
                    if (v153)
                    {
                      v154 = sub_22F10C2A4(v153);
                      v155 = (*(_DWORD *)(v154 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v154;
                      if ((sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v155 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                        goto LABEL_140;
                    }
                    if ((sub_22F10C510(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                      goto LABEL_140;
                    v156 = sub_22E5453EC(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
                    if (v156)
                    {
                      v157 = sub_22F10C2A4(v156);
                      v158 = (*(_DWORD *)(v157 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v157;
                      if ((sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v158 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                        goto LABEL_140;
                    }
                    if ((sub_22F10C1B4(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                      goto LABEL_140;
                    v159 = sub_22E5453EC(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
                    if (v159)
                    {
                      v160 = sub_22F10C2A4(v159);
                      v161 = (*(_DWORD *)(v160 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v160;
                      if (sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v161 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)))
                        goto LABEL_140;
                    }
LABEL_285:
                    v66 = 2;
LABEL_286:
                    v162 = sub_22EA7F6A4((uint64_t)a1, *v20);
                    if (v162)
                      LODWORD(v19) = v66;
                    else
                      LODWORD(v19) = 0;
                    if (v162 || !a5)
                    {
LABEL_303:
                      sub_22E89277C(&v228);
                      if (*(_QWORD *)__p != *((_QWORD *)&v224 + 1))
                        free(*(void **)__p);
                      goto LABEL_38;
                    }
                    if (v206)
                    {
                      v163 = *(_QWORD *)(a2 + 56);
                      if ((v163 & 4) != 0 && (v191 = v163 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v191 + 16)))
                        v164 = **(int ***)(v191 + 24);
                      else
                        v164 = (int *)(a2 + 64);
                      v165 = *v164;
                      v81 = a1[11] + 2128;
                      v166 = *(unsigned int *)(a1[8] + 20);
                      v83 = (_BYTE *)sub_22E3B8AAC(v81);
                      v167 = *v83;
                      v83[v167 + 1] = 3;
                      *v83 = v167 + 1;
                      *(_QWORD *)&v83[8 * v167 + 16] = v166;
                      LODWORD(v209) = v165;
                      v85 = 5782;
LABEL_295:
                      LODWORD(v211) = v85;
                      *(_QWORD *)&v210 = 0;
                      *((_QWORD *)&v210 + 1) = v81;
                      *(_QWORD *)&v210 = sub_22E3B8AAC(v81);
                      sub_22E78D4E8((_OWORD *)v210, (uint64_t)v83);
                      sub_22E8928F4(v206, (unint64_t)&v209);
                      if ((_QWORD)v210 && *((_QWORD *)&v210 + 1))
                      {
                        sub_22E3BB10C(*((unint64_t *)&v210 + 1), v210);
                        *(_QWORD *)&v210 = 0;
                      }
                      sub_22E3BB10C(v81, (unint64_t)v83);
                      LODWORD(v19) = 0;
                      goto LABEL_303;
                    }
                    v168 = *(_QWORD *)(a2 + 56);
                    if ((v168 & 4) != 0 && (v194 = v168 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v194 + 16)))
                      v169 = **(int ***)(v194 + 24);
                    else
                      v169 = (int *)(a2 + 64);
                    sub_22E8FCA40(a1, *v169, 0xF24u, 0, (uint64_t)&v209);
                    LODWORD(v217) = *(_DWORD *)(a1[8] + 20);
                    sub_22E89519C((uint64_t)&v209, (unsigned int *)&v217);
                    sub_22E903BEC((unsigned int *)&v209);
LABEL_302:
                    LODWORD(v19) = 0;
                    goto LABEL_303;
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_141:
    if (!v66 && a5)
    {
      if (!v206)
      {
        if (v222)
        {
          v99 = *(_QWORD *)(a2 + 56);
          if ((v99 & 4) != 0 && (v195 = v99 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v195 + 16)))
            v100 = **(int ***)(v195 + 24);
          else
            v100 = (int *)(a2 + 64);
          sub_22E8FCA40(a1, *v100, 0xEDDu, 0, (uint64_t)&v209);
          v101 = sub_22E8901B8((uint64_t)&v209, &v221);
          v102 = sub_22E8FB3C4(v101, &v222);
          v217 = *(unsigned __int8 **)(v222 + 16);
        }
        else
        {
          v131 = *(_QWORD *)(a2 + 56);
          if ((v131 & 4) != 0 && (v197 = v131 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v197 + 16)))
            v132 = **(int ***)(v197 + 24);
          else
            v132 = (int *)(a2 + 64);
          sub_22E8FCA40(a1, *v132, 0xEE2u, 0, (uint64_t)&v209);
          v133 = sub_22E8901B8((uint64_t)&v209, &v221);
          v217 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          v102 = v133;
        }
        sub_22E8906A0(v102, (uint64_t *)&v217);
        sub_22E903BEC((unsigned int *)&v209);
        if ((_DWORD)v229)
        {
          v134 = (int *)v228;
          v135 = &v228[32 * v229];
          do
          {
            v136 = (uint64_t)(v134 + 2);
            v137 = *v134;
            v134 += 8;
            sub_22E90379C(a1, v137, v136, 0, (uint64_t)v208);
            sub_22E903BEC((unsigned int *)v208);
          }
          while (v134 != (int *)v135);
        }
        v138 = sub_22EFBAFDC(a2);
        sub_22E8FCA40(a1, v138, 0x1676u, 0, (uint64_t)&v209);
        sub_22E8901B8((uint64_t)&v209, &v220);
        sub_22E903BEC((unsigned int *)&v209);
        LODWORD(v19) = 0;
        goto LABEL_303;
      }
      v71 = *(_QWORD *)(a2 + 56);
      if ((v71 & 4) != 0 && (v183 = v71 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v183 + 16)))
        v72 = **(int ***)(v183 + 24);
      else
        v72 = (int *)(a2 + 64);
      v73 = *v72;
      v74 = a1[11] + 2128;
      v75 = (_BYTE *)sub_22E3B8AAC(v74);
      v76 = *v75;
      v75[v76 + 1] = 11;
      *v75 = v76 + 1;
      *(_QWORD *)&v75[8 * v76 + 16] = a2;
      v77 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
      sub_22E4D6448((uint64_t)(v75 + 336), v77, 1);
      LODWORD(v209) = v73;
      LODWORD(v211) = 5764;
      *((_QWORD *)&v210 + 1) = v74;
      *(_QWORD *)&v210 = sub_22E3B8AAC(v74);
      sub_22E78D4E8((_OWORD *)v210, (uint64_t)v75);
      sub_22E8928F4(v206, (unint64_t)&v209);
      if ((_QWORD)v210 && *((_QWORD *)&v210 + 1))
      {
        sub_22E3BB10C(*((unint64_t *)&v210 + 1), v210);
        *(_QWORD *)&v210 = 0;
      }
      sub_22E3BB10C(v74, (unint64_t)v75);
      if ((_DWORD)v229)
      {
        v78 = v228;
        v79 = 32 * v229;
        do
        {
          sub_22E892AD4(v206, (unint64_t)v78);
          v78 += 32;
          v79 -= 32;
        }
        while (v79);
      }
      v80 = sub_22EFBAFDC(a2);
      v81 = a1[11] + 2128;
      v82 = v220;
      v83 = (_BYTE *)sub_22E3B8AAC(v81);
      v84 = *v83;
      v83[v84 + 1] = 9;
      *v83 = v84 + 1;
      *(_QWORD *)&v83[8 * v84 + 16] = v82;
      LODWORD(v209) = v80;
      v85 = 5750;
      goto LABEL_295;
    }
    if (!v66)
      goto LABEL_302;
    goto LABEL_286;
  }
  v37 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v35 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v37)
    v38 = (*(_DWORD *)(v37 + 16) & 0xFF800FF) == 86507531;
  else
    v38 = 0;
  if (v38)
  {
    LODWORD(v19) = 1;
    goto LABEL_38;
  }
  LODWORD(v19) = (*(unsigned __int8 *)(a1[9] + 126) >> 1) & 1;
  if (!(_DWORD)v19 && a5)
  {
    v39 = sub_22EFBAFDC(a2);
    v223 = &unk_24FAB6EF8;
    LODWORD(v224) = 3591;
    sub_22EE8B0B0((uint64_t)a1, v39, v35);
    goto LABEL_37;
  }
LABEL_38:
  if (!(_DWORD)v19)
    return 0;
LABEL_49:
  if (!a4
    && sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v207 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "array_ref", 9, 1, 0))
  {
    if ((*(_BYTE *)(a2 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a2);
      v24 = *(uint64_t **)v23;
      v25 = *(unsigned int *)(v23 + 8);
      v26 = *(uint64_t **)v23;
      if ((_DWORD)v25)
      {
        v27 = 8 * v25;
        v26 = *(uint64_t **)v23;
        while (*(_WORD *)(*v26 + 32) != 373)
        {
          ++v26;
          v27 -= 8;
          if (!v27)
            goto LABEL_116;
        }
      }
      if (v26 != &v24[v25])
      {
        do
        {
          v41 = *v24++;
          v40 = v41;
        }
        while (*(_WORD *)(v41 + 32) != 373);
        if (!sub_22E9AFA3C(a2) && !sub_22F31253C(a2) && (sub_22F0085E8(*(_QWORD *)(v40 + 40), a1[11], 0) & 1) == 0)
        {
          if (!a5)
            return 0;
          if ((_DWORD)v19 == 4)
            v120 = "threadgroup";
          else
            v120 = "buffer";
          if ((_DWORD)v19 == 4)
            v121 = 11;
          else
            v121 = 6;
          v208[0] = v120;
          v208[1] = v121;
          if (v206)
          {
            v122 = *(_QWORD *)(a2 + 56);
            if ((v122 & 4) != 0 && (v201 = v122 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v201 + 16)))
              v123 = **(int ***)(v201 + 24);
            else
              v123 = (int *)(a2 + 64);
            v124 = *v123;
            *(_QWORD *)&v210 = a1[11] + 2128;
            DWORD2(v210) = 5722;
            v125 = v207;
            v126 = (unsigned __int8 *)sub_22E3B8AAC(v210);
            v209 = v126;
            v127 = *v126;
            v126[v127 + 1] = 9;
            *v126 = v127 + 1;
            *(_QWORD *)&v126[8 * v127 + 16] = v125;
            v128 = sub_22E3B89A8(&v209, v120, v121);
            v129 = (*(uint64_t (**)(uint64_t, double))(*(_QWORD *)a2 + 16))(a2, v128);
            v130 = v209;
            if (!v209)
            {
              v130 = (unsigned __int8 *)sub_22E3B8AAC(v210);
              v209 = v130;
            }
            sub_22E4D6448((uint64_t)(v130 + 336), v129, 1);
            LODWORD(v223) = v124;
            *(_DWORD *)__p = DWORD2(v210);
            *(_QWORD *)&v224 = 0;
            *((_QWORD *)&v224 + 1) = v210;
            if (v209)
            {
              *(_QWORD *)&v224 = sub_22E3B8AAC(v210);
              sub_22E78D4E8((_OWORD *)v224, (uint64_t)v209);
            }
            sub_22E8928F4(v206, (unint64_t)&v223);
            if ((_QWORD)v224 && *((_QWORD *)&v224 + 1))
            {
              sub_22E3BB10C(*((unint64_t *)&v224 + 1), v224);
              *(_QWORD *)&v224 = 0;
            }
            v92 = v209;
            if (!v209)
              return 0;
            v91 = v210;
            if (!(_QWORD)v210)
              return 0;
LABEL_164:
            sub_22E3BB10C(v91, (unint64_t)v92);
            return 0;
          }
          v198 = *(_QWORD *)(a2 + 56);
          if ((v198 & 4) != 0 && (v205 = v198 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v205 + 16)))
            v199 = **(int ***)(v205 + 24);
          else
            v199 = (int *)(a2 + 64);
          sub_22E8FCA40(a1, *v199, 0xED0u, 0, (uint64_t)&v223);
          v200 = sub_22E8901B8((uint64_t)&v223, &v207);
          v115 = sub_22F2F2210(v200, (uint64_t)v208);
          goto LABEL_212;
        }
        goto LABEL_102;
      }
    }
LABEL_116:
    if (!a5)
      return 0;
    if (v206)
    {
      v51 = *(_QWORD *)(a2 + 56);
      if ((v51 & 4) != 0 && (v170 = v51 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v170 + 16)))
        v52 = **(int ***)(v170 + 24);
      else
        v52 = (int *)(a2 + 64);
      v53 = *v52;
      v54 = a1[11] + 2128;
      v55 = v207;
      v56 = (unsigned __int8 *)sub_22E3B8AAC(v54);
      v57 = v56 + 1;
      v58 = *v56;
      v57[v58] = 9;
      *v56 = v58 + 2;
      *(_QWORD *)&v56[8 * v58 + 16] = v55;
      v59 = (v58 + 1);
      v57[v59] = 1;
      *(_QWORD *)&v56[8 * v59 + 16] = "array_ref_size";
      v60 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
      sub_22E4D6448((uint64_t)(v56 + 336), v60, 1);
      LODWORD(v223) = v53;
      *(_DWORD *)__p = 5768;
      *((_QWORD *)&v224 + 1) = v54;
      *(_QWORD *)&v224 = sub_22E3B8AAC(v54);
      sub_22E78D4E8((_OWORD *)v224, (uint64_t)v56);
      v61 = v206;
LABEL_160:
      sub_22E8928F4(v61, (unint64_t)&v223);
      if ((_QWORD)v224 && *((_QWORD *)&v224 + 1))
      {
        sub_22E3BB10C(*((unint64_t *)&v224 + 1), v224);
        *(_QWORD *)&v224 = 0;
      }
      v91 = v54;
      v92 = v56;
      goto LABEL_164;
    }
    v112 = *(_QWORD *)(a2 + 56);
    if ((v112 & 4) != 0 && (v193 = v112 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v193 + 16)))
      v113 = **(int ***)(v193 + 24);
    else
      v113 = (int *)(a2 + 64);
    sub_22E8FCA40(a1, *v113, 0xF08u, 0, (uint64_t)&v223);
    v114 = sub_22E8901B8((uint64_t)&v223, &v207);
    v115 = sub_22F2F30F4(v114, (uint64_t)"array_ref_size");
    goto LABEL_212;
  }
LABEL_102:
  if (!a3)
    goto LABEL_125;
  if (sub_22E88FFC4(a3))
  {
    v42 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFF0);
    v43 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0);
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1)
    {
      v44 = *(_QWORD *)((sub_22F10ACF8(v43) & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v44 & 8) != 0 && (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x5800)
        goto LABEL_125;
    }
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v42 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1)
    {
      v45 = *(_QWORD *)((sub_22F10ACF8(*v42) & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v45 & 8) != 0 && (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x6000)
        goto LABEL_125;
    }
  }
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_125;
  sub_22EFC8E88(a2);
  v47 = *(uint64_t **)v46;
  v48 = *(unsigned int *)(v46 + 8);
  v49 = *(uint64_t **)v46;
  if ((_DWORD)v48)
  {
    v50 = 8 * v48;
    v49 = *(uint64_t **)v46;
    while (*(_WORD *)(*v49 + 32) != 439)
    {
      ++v49;
      v50 -= 8;
      if (!v50)
        goto LABEL_125;
    }
  }
  if (v49 == &v47[v48])
LABEL_125:
    __asm { BR              X10 }
  do
  {
    v63 = *v47++;
    v62 = v63;
  }
  while (*(_WORD *)(v63 + 32) != 439);
  if (a5)
    sub_22EA5294C(a1, v62, a3, 0, v206);
  return 0;
}

uint64_t sub_22EA4F714(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  BOOL v7;
  _BOOL8 v8;
  int v9;
  _QWORD v11[2];
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int v15;
  _BYTE v16[32];
  char *v17[2];
  _QWORD v18[33];

  v18[32] = *MEMORY[0x24BDAC8D0];
  if (sub_22EE8B180(a1, a3))
  {
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v6)
      v7 = (*(_DWORD *)(v6 + 16) & 0xFF800FF) == 86507531;
    else
      v7 = 0;
    if (v7)
      return 1;
    else
      return (*(unsigned __int8 *)(*(_QWORD *)(a1 + 72) + 126) >> 1) & 1;
  }
  else
  {
    v11[0] = a1;
    v11[1] = 0x167600000000;
    v12 = v16;
    v13 = v16;
    v14 = 4;
    v15 = 0;
    v17[0] = (char *)v18;
    v17[1] = (char *)0x800000000;
    sub_22EA4F850((uint64_t)v11, a2, a3);
    v8 = v9 != 0;
    sub_22E89277C(v17);
    if (v13 != v12)
      free(v13);
  }
  return v8;
}

void sub_22EA4F850(uint64_t a1, uint64_t a2, int a3)
{
  void *v7;
  llvm::SmallPtrSetImplBase *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v9 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = (llvm::SmallPtrSetImplBase *)(a1 + 16);
  if (v7 == v9)
    goto LABEL_2;
  v16 = *(unsigned int *)(a1 + 32);
  if (v16 < 0x21 || 4 * (*(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 40)) >= v16)
  {
    memset(v7, 255, 8 * v16);
LABEL_2:
    *(_DWORD *)(a1 + 36) = 0;
    *(_DWORD *)(a1 + 40) = 0;
    goto LABEL_3;
  }
  llvm::SmallPtrSetImplBase::shrink_and_clear(v8);
LABEL_3:
  v10 = *(unsigned int *)(a1 + 88);
  if ((_DWORD)v10)
  {
    v11 = *(_QWORD *)(a1 + 80);
    v12 = 32 * v10;
    do
    {
      v13 = v11 + v12;
      v14 = *(_QWORD *)(v11 + v12 - 24);
      if (v14)
      {
        v15 = *(_QWORD *)(v13 - 16);
        if (v15)
        {
          sub_22E3BB10C(v15, v14);
          *(_QWORD *)(v13 - 24) = 0;
        }
      }
      v12 -= 32;
    }
    while (v12);
  }
  *(_DWORD *)(a1 + 88) = 0;
  sub_22EA7F7F0(a1, a2, a3);
}

uint64_t sub_22EA4F914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  BOOL v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_DWORD *)(v2 + 16);
  if (v2)
    v4 = *(_DWORD *)(v2 + 16) == 11;
  else
    v4 = 0;
  if (!v4)
    return 0;
  if (((v3 >> 19) & 0x1FF) - 173 > 0x26 || ((1 << ((v3 >> 19) + 83)) & 0x6000000307) == 0)
    return 0;
  if ((v3 & 0xFF80000) == 0x5780000)
    return (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 131) >> 5) & 1;
  return 1;
}

uint64_t sub_22EA4F998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  BOOL v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_DWORD *)(v2 + 16);
  if (v2)
    v4 = *(_DWORD *)(v2 + 16) == 11;
  else
    v4 = 0;
  if (!v4)
    return 0;
  if (((v3 >> 19) & 0x1FF) - 210 > 5 || ((1 << ((v3 >> 19) + 46)) & 0x27) == 0)
    return 0;
  if ((v3 & 0xFF80000) == 0x6B80000)
    return (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 123) >> 2) & 1;
  return 1;
}

uint64_t sub_22EA4FA18(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  if (sub_22E991ED0(a2))
    return 0;
  else
    return sub_22EA4FA80(a1, a2, a3, 1, a4, 0);
}

uint64_t sub_22EA4FA80(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, int a5, unint64_t a6)
{
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t *v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t *v265;
  uint64_t v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t *v270;
  uint64_t v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t *v280;
  uint64_t v281;
  uint64_t *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t *v285;
  uint64_t v286;
  uint64_t *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t *v295;
  uint64_t v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t *v300;
  uint64_t v301;
  uint64_t *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t v306;
  uint64_t *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t *v310;
  uint64_t v311;
  uint64_t *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t *v315;
  uint64_t v316;
  uint64_t *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t *v320;
  uint64_t v321;
  uint64_t *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t *v325;
  uint64_t v326;
  uint64_t *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t *v330;
  uint64_t v331;
  uint64_t *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t *v335;
  uint64_t v336;
  uint64_t *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t *v340;
  uint64_t v341;
  uint64_t *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  int v349;
  uint64_t v350;
  _BOOL4 v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  _BYTE *v357;
  uint64_t v358;
  unint64_t v359;
  unint64_t v360;
  _QWORD *v361;
  uint64_t v362;
  _QWORD *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t *v374;
  uint64_t v375;
  uint64_t *v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  BOOL v384;
  BOOL v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t *v388;
  uint64_t v389;
  uint64_t *v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  _BYTE *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  int v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  _BOOL4 v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t *v448;
  uint64_t v449;
  uint64_t *v450;
  uint64_t v451;
  int v452;
  uint64_t v453;
  uint64_t v454;
  _BOOL4 v455;
  uint64_t v456;
  uint64_t *v457;
  uint64_t v458;
  uint64_t *v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t *v464;
  uint64_t v465;
  uint64_t *v466;
  uint64_t v467;
  int v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v472;
  uint64_t v473;
  BOOL v474;
  uint64_t v475;
  uint64_t v476;
  unsigned __int8 *v477;
  _BYTE *v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t *v481;
  uint64_t v482;
  uint64_t *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t *v486;
  uint64_t v487;
  uint64_t *v488;
  uint64_t v489;
  _QWORD *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  unsigned __int8 *v494;
  _BYTE *v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  _QWORD *v499;
  uint64_t v500;
  uint64_t v501;
  unsigned int v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t *v505;
  uint64_t v506;
  uint64_t v507;
  unsigned __int8 *v508;
  _QWORD *v509;
  unsigned __int8 *v510;
  int v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t *v515;
  uint64_t v516;
  uint64_t *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  _BOOL4 v521;
  uint64_t v522;
  uint64_t v523;
  BOOL v524;
  int v525;
  uint64_t v526;
  BOOL v527;
  uint64_t *v528;
  uint64_t v529;
  uint64_t v530;
  unsigned __int8 *v531;
  _QWORD *v532;
  unsigned __int8 *v533;
  uint64_t v534;
  unsigned int v535;
  _OWORD *v536;
  unint64_t v537;
  int v538;
  uint64_t v539;

  v12 = sub_22E9AEF2C(a2);
  if (!v12)
    goto LABEL_841;
  v13 = 0;
  switch(*(_WORD *)(v12 + 32))
  {
    case 0x172:
      if (!sub_22E53AC28(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_507;
      sub_22EFC8E88(a2);
      v15 = *(uint64_t **)v14;
      v16 = *(unsigned int *)(v14 + 8);
      v17 = *(uint64_t **)v14;
      if ((_DWORD)v16)
      {
        v18 = 8 * v16;
        v17 = *(uint64_t **)v14;
        while (*(_WORD *)(*v17 + 32) != 370)
        {
          ++v17;
          v18 -= 8;
          if (!v18)
            goto LABEL_507;
        }
      }
      if (v17 == &v15[v16])
        goto LABEL_507;
      do
      {
        v345 = *v15++;
        v344 = v345;
      }
      while (*(_WORD *)(v345 + 32) != 370);
      goto LABEL_508;
    case 0x173:
      if (!sub_22E542BD8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_474;
      sub_22EFC8E88(a2);
      v20 = *(uint64_t **)v19;
      v21 = *(unsigned int *)(v19 + 8);
      v22 = *(uint64_t **)v19;
      if (!(_DWORD)v21)
        goto LABEL_471;
      v23 = 8 * v21;
      v22 = *(uint64_t **)v19;
      while (*(_WORD *)(*v22 + 32) != 371)
      {
        ++v22;
        v23 -= 8;
        if (!v23)
          goto LABEL_474;
      }
LABEL_471:
      if (v22 == &v20[v21])
      {
LABEL_474:
        v346 = 0;
        goto LABEL_475;
      }
      do
      {
        v347 = *v20++;
        v346 = v347;
      }
      while (*(_WORD *)(v347 + 32) != 371);
LABEL_475:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      if (sub_22E88FFC4(a3) || sub_22E4752A8(a3) || sub_22EA1DBC0(a3))
        goto LABEL_984;
      goto LABEL_489;
    case 0x174:
      if (!sub_22E542C38(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_484;
      sub_22EFC8E88(a2);
      v25 = *(uint64_t **)v24;
      v26 = *(unsigned int *)(v24 + 8);
      v27 = *(uint64_t **)v24;
      if (!(_DWORD)v26)
        goto LABEL_481;
      v28 = 8 * v26;
      v27 = *(uint64_t **)v24;
      while (*(_WORD *)(*v27 + 32) != 372)
      {
        ++v27;
        v28 -= 8;
        if (!v28)
          goto LABEL_484;
      }
LABEL_481:
      if (v27 == &v25[v26])
      {
LABEL_484:
        v346 = 0;
        goto LABEL_485;
      }
      do
      {
        v348 = *v25++;
        v346 = v348;
      }
      while (*(_WORD *)(v348 + 32) != 372);
LABEL_485:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      if (sub_22E88FFC4(a3) || sub_22E4752A8(a3))
        goto LABEL_984;
LABEL_489:
      v349 = sub_22E6A2F54(a3);
      if ((v349 & 1) != 0)
        goto LABEL_823;
      goto LABEL_551;
    case 0x177:
      if (!sub_22F26EC68(a2))
        goto LABEL_841;
      if (!a3)
        goto LABEL_985;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_991;
      sub_22EFC8E88(a2);
      v481 = *(uint64_t **)v480;
      v482 = *(unsigned int *)(v480 + 8);
      v483 = *(uint64_t **)v480;
      if (!(_DWORD)v482)
        goto LABEL_988;
      v484 = 8 * v482;
      v483 = *(uint64_t **)v480;
      while (*(_WORD *)(*v483 + 32) != 375)
      {
        ++v483;
        v484 -= 8;
        if (!v484)
          goto LABEL_991;
      }
LABEL_988:
      if (v483 == &v481[v482])
      {
LABEL_991:
        v371 = 0;
        goto LABEL_992;
      }
      do
      {
        v513 = *v481++;
        v371 = v513;
      }
      while (*(_WORD *)(v513 + 32) != 375);
LABEL_992:
      if (sub_22E88FFC4(a3) && (*(_BYTE *)(a1[9] + 123) & 1) != 0)
        goto LABEL_984;
      if (!sub_22EFC1E78(a3))
        goto LABEL_838;
      if ((*(_BYTE *)(a3 + 29) & 1) == 0)
        goto LABEL_1004;
      sub_22EFC8E88(a3);
      v515 = *(uint64_t **)v514;
      v516 = *(unsigned int *)(v514 + 8);
      v517 = *(uint64_t **)v514;
      if ((_DWORD)v516)
      {
        v518 = 8 * v516;
        v517 = *(uint64_t **)v514;
        while (*(_WORD *)(*v517 + 32) != 407)
        {
          ++v517;
          v518 -= 8;
          if (!v518)
            goto LABEL_1004;
        }
      }
      if (v517 == &v515[v516])
      {
LABEL_1004:
        v519 = 0;
      }
      else
      {
        do
        {
          v520 = *v515++;
          v519 = v520;
        }
        while (*(_WORD *)(v520 + 32) != 407);
      }
      if ((sub_22EFA56A8(v519) & 1) != 0)
      {
        v522 = *(_QWORD *)(a2 + 48);
        v523 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v522 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v523)
          v524 = *(unsigned __int8 *)(v523 + 16) - 55 >= 2;
        else
          v524 = 1;
        v525 = !v524;
        if (v525 == 1)
          v521 = *(_DWORD *)(v523 + 20) == 2
              && ((v526 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v523 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
                ? (v527 = *(_DWORD *)(v526 + 16) == 11)
                : (v527 = 0),
                  v527)
              && (*(_DWORD *)(v526 + 16) & 0xFF80000) == 110624768;
        v13 = v525 & v521;
        if ((v525 & v521 & 1) == 0 && a5)
          sub_22EA548FC(a1, v522, v371, a3, a6);
        goto LABEL_983;
      }
      if (!a5)
        goto LABEL_841;
      goto LABEL_954;
    case 0x178:
      if (!sub_22E542C98(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_494;
      sub_22EFC8E88(a2);
      v30 = *(uint64_t **)v29;
      v31 = *(unsigned int *)(v29 + 8);
      v32 = *(uint64_t **)v29;
      if (!(_DWORD)v31)
        goto LABEL_491;
      v33 = 8 * v31;
      v32 = *(uint64_t **)v29;
      while (*(_WORD *)(*v32 + 32) != 376)
      {
        ++v32;
        v33 -= 8;
        if (!v33)
          goto LABEL_494;
      }
LABEL_491:
      if (v32 == &v30[v31])
      {
LABEL_494:
        v346 = 0;
        goto LABEL_495;
      }
      do
      {
        v350 = *v30++;
        v346 = v350;
      }
      while (*(_WORD *)(v350 + 32) != 376);
LABEL_495:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      v351 = sub_22E6A2F54(a3);
      goto LABEL_736;
    case 0x179:
      if (!sub_22E542CF8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_801;
      sub_22EFC8E88(a2);
      v35 = *(uint64_t **)v34;
      v36 = *(unsigned int *)(v34 + 8);
      v37 = *(uint64_t **)v34;
      if (!(_DWORD)v36)
        goto LABEL_498;
      v38 = 8 * v36;
      v37 = *(uint64_t **)v34;
      while (*(_WORD *)(*v37 + 32) != 377)
      {
        ++v37;
        v38 -= 8;
        if (!v38)
          goto LABEL_801;
      }
LABEL_498:
      if (v37 == &v35[v36])
        goto LABEL_801;
      do
      {
        v352 = *v35++;
        v346 = v352;
      }
      while (*(_WORD *)(v352 + 32) != 377);
      goto LABEL_802;
    case 0x180:
      if (!sub_22E536E34(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_662;
      sub_22EFC8E88(a2);
      v40 = *(uint64_t **)v39;
      v41 = *(unsigned int *)(v39 + 8);
      v42 = *(uint64_t **)v39;
      if (!(_DWORD)v41)
        goto LABEL_501;
      v43 = 8 * v41;
      v42 = *(uint64_t **)v39;
      while (*(_WORD *)(*v42 + 32) != 384)
      {
        ++v42;
        v43 -= 8;
        if (!v43)
          goto LABEL_662;
      }
LABEL_501:
      if (v42 == &v40[v41])
        goto LABEL_662;
      do
      {
        v353 = *v40++;
        v346 = v353;
      }
      while (*(_WORD *)(v353 + 32) != 384);
      goto LABEL_663;
    case 0x181:
      if (!sub_22E53B01C(a2))
        goto LABEL_841;
      if (!a3)
        goto LABEL_985;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_828;
      sub_22EFC8E88(a2);
      v45 = *(uint64_t **)v44;
      v46 = *(unsigned int *)(v44 + 8);
      v47 = *(uint64_t **)v44;
      if (!(_DWORD)v46)
        goto LABEL_825;
      v48 = 8 * v46;
      v47 = *(uint64_t **)v44;
      while (*(_WORD *)(*v47 + 32) != 385)
      {
        ++v47;
        v48 -= 8;
        if (!v48)
          goto LABEL_828;
      }
LABEL_825:
      if (v47 == &v45[v46])
      {
LABEL_828:
        v371 = 0;
        goto LABEL_829;
      }
      do
      {
        v445 = *v45++;
        v371 = v445;
      }
      while (*(_WORD *)(v445 + 32) != 385);
LABEL_829:
      if (!sub_22E88FFC4(a3))
        goto LABEL_838;
      v13 = *(unsigned __int8 *)(a1[9] + 120);
      if ((v13 & 1) != 0 || !a5)
        goto LABEL_842;
      goto LABEL_839;
    case 0x182:
      if (!sub_22E53B37C(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_507;
      sub_22EFC8E88(a2);
      v50 = *(uint64_t **)v49;
      v51 = *(unsigned int *)(v49 + 8);
      v52 = *(uint64_t **)v49;
      if (!(_DWORD)v51)
        goto LABEL_504;
      v53 = 8 * v51;
      v52 = *(uint64_t **)v49;
      while (*(_WORD *)(*v52 + 32) != 386)
      {
        ++v52;
        v53 -= 8;
        if (!v53)
          goto LABEL_507;
      }
LABEL_504:
      if (v52 == &v50[v51])
      {
LABEL_507:
        v344 = 0;
        goto LABEL_508;
      }
      do
      {
        v354 = *v50++;
        v344 = v354;
      }
      while (*(_WORD *)(v354 + 32) != 386);
LABEL_508:
      if (a4 == 2)
      {
        if (!a5)
          goto LABEL_841;
        v363 = a1;
        v364 = v344;
LABEL_820:
        sub_22EA80E10(v363, v364, 2, a6);
        goto LABEL_841;
      }
      if (a4 == 1 && (*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      {
        if (!a5)
          goto LABEL_841;
        if (a6)
        {
          v355 = *(_QWORD *)(v344 + 16);
          v356 = a1[11] + 2128;
          v357 = (_BYTE *)sub_22E3B8AAC(v356);
          sub_22E4D6448((uint64_t)(v357 + 336), v355, 1);
          if (!v357)
            v357 = (_BYTE *)sub_22E3B8AAC(v356);
          v358 = *v357;
          v357[v358 + 1] = 15;
          *v357 = v358 + 1;
          *(_QWORD *)&v357[8 * v358 + 16] = v344;
          v535 = v355;
          v538 = 5725;
          v537 = v356;
          v536 = (_OWORD *)sub_22E3B8AAC(v356);
          sub_22E78D4E8(v536, (uint64_t)v357);
          sub_22E8928F4(a6, (unint64_t)&v535);
          if (v536 && v537)
          {
            sub_22E3BB10C(v537, (unint64_t)v536);
            v536 = 0;
          }
          v359 = v356;
          v360 = (unint64_t)v357;
LABEL_673:
          sub_22E3BB10C(v359, v360);
LABEL_841:
          v13 = 0;
          goto LABEL_842;
        }
        sub_22E8FCA40(a1, *(_DWORD *)(v344 + 16), 0xEDAu, 0, (uint64_t)&v535);
        v534 = *(_QWORD *)(v344 + 16);
        v492 = sub_22E8906A0((uint64_t)&v535, &v534);
        v493 = v492;
        if (*(_BYTE *)(v492 + 80))
        {
          v494 = *(unsigned __int8 **)(v492 + 32);
          if (!v494)
          {
            v494 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v493 + 40));
            *(_QWORD *)(v493 + 32) = v494;
          }
          v494[*v494 + 1] = 15;
          v495 = *(_BYTE **)(v493 + 32);
LABEL_947:
          v496 = *v495;
          *v495 = v496 + 1;
          *(_QWORD *)&v495[8 * v496 + 16] = v344;
          goto LABEL_974;
        }
        if (*(_BYTE *)(v492 + 92))
        {
          v528 = (uint64_t *)(*(_QWORD *)v492 + 12784);
          v529 = *(_QWORD *)(v492 + 16);
          if (v529)
            v529 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v529 + 32))(v529);
          v539 = v529;
          v530 = sub_22F2F1D6C(v528, &v539)[1] + 32 * *(unsigned int *)(v493 + 88);
          v533 = *(unsigned __int8 **)(v530 + 8);
          v532 = (_QWORD *)(v530 + 8);
          v531 = v533;
          if (!v533)
          {
            v531 = (unsigned __int8 *)sub_22E3B8AAC(v532[1]);
            *v532 = v531;
          }
          v531[*v531 + 1] = 15;
          v495 = (_BYTE *)*v532;
          goto LABEL_947;
        }
LABEL_974:
        sub_22E903BEC(&v535);
        goto LABEL_841;
      }
      v13 = a3 == 0;
      if (a3 && a5)
      {
        v361 = a1;
        v362 = v344;
        goto LABEL_840;
      }
      goto LABEL_842;
    case 0x183:
      if (!sub_22E542D58(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_527;
      sub_22EFC8E88(a2);
      v55 = *(uint64_t **)v54;
      v56 = *(unsigned int *)(v54 + 8);
      v57 = *(uint64_t **)v54;
      if (!(_DWORD)v56)
        goto LABEL_524;
      v58 = 8 * v56;
      v57 = *(uint64_t **)v54;
      while (*(_WORD *)(*v57 + 32) != 387)
      {
        ++v57;
        v58 -= 8;
        if (!v58)
          goto LABEL_527;
      }
LABEL_524:
      if (v57 == &v55[v56])
      {
LABEL_527:
        v346 = 0;
        goto LABEL_528;
      }
      do
      {
        v365 = *v55++;
        v346 = v365;
      }
      while (*(_WORD *)(v365 + 32) != 387);
LABEL_528:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      v351 = sub_22EFC1EFC(a3);
      goto LABEL_736;
    case 0x184:
      if (!sub_22E53B3DC(a2))
        goto LABEL_841;
      if (!a3)
        goto LABEL_985;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_836;
      sub_22EFC8E88(a2);
      v60 = *(uint64_t **)v59;
      v61 = *(unsigned int *)(v59 + 8);
      v62 = *(uint64_t **)v59;
      if (!(_DWORD)v61)
        goto LABEL_833;
      v63 = 8 * v61;
      v62 = *(uint64_t **)v59;
      while (*(_WORD *)(*v62 + 32) != 388)
      {
        ++v62;
        v63 -= 8;
        if (!v63)
          goto LABEL_836;
      }
LABEL_833:
      if (v62 == &v60[v61])
      {
LABEL_836:
        v371 = 0;
        goto LABEL_837;
      }
      do
      {
        v446 = *v60++;
        v371 = v446;
      }
      while (*(_WORD *)(v446 + 32) != 388);
LABEL_837:
      sub_22E88FFC4(a3);
      goto LABEL_838;
    case 0x185:
      if (!sub_22E542DB8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_630;
      sub_22EFC8E88(a2);
      v65 = *(uint64_t **)v64;
      v66 = *(unsigned int *)(v64 + 8);
      v67 = *(uint64_t **)v64;
      if (!(_DWORD)v66)
        goto LABEL_531;
      v68 = 8 * v66;
      v67 = *(uint64_t **)v64;
      while (*(_WORD *)(*v67 + 32) != 389)
      {
        ++v67;
        v68 -= 8;
        if (!v68)
          goto LABEL_630;
      }
LABEL_531:
      if (v67 == &v65[v66])
        goto LABEL_630;
      do
      {
        v366 = *v65++;
        v346 = v366;
      }
      while (*(_WORD *)(v366 + 32) != 389);
      goto LABEL_631;
    case 0x186:
      if (!sub_22E542E18(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v70 = *(uint64_t **)v69;
      v71 = *(unsigned int *)(v69 + 8);
      v72 = *(uint64_t **)v69;
      if (!(_DWORD)v71)
        goto LABEL_534;
      v73 = 8 * v71;
      v72 = *(uint64_t **)v69;
      while (*(_WORD *)(*v72 + 32) != 390)
      {
        ++v72;
        v73 -= 8;
        if (!v73)
          goto LABEL_768;
      }
LABEL_534:
      if (v72 == &v70[v71])
        goto LABEL_768;
      do
      {
        v367 = *v70++;
        v364 = v367;
      }
      while (*(_WORD *)(v367 + 32) != 390);
      goto LABEL_769;
    case 0x187:
      if (!sub_22E542E78(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v75 = *(uint64_t **)v74;
      v76 = *(unsigned int *)(v74 + 8);
      v77 = *(uint64_t **)v74;
      if (!(_DWORD)v76)
        goto LABEL_537;
      v78 = 8 * v76;
      v77 = *(uint64_t **)v74;
      while (*(_WORD *)(*v77 + 32) != 391)
      {
        ++v77;
        v78 -= 8;
        if (!v78)
          goto LABEL_768;
      }
LABEL_537:
      if (v77 == &v75[v76])
        goto LABEL_768;
      do
      {
        v368 = *v75++;
        v364 = v368;
      }
      while (*(_WORD *)(v368 + 32) != 391);
      goto LABEL_769;
    case 0x188:
      if (!sub_22E542ED8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v80 = *(uint64_t **)v79;
      v81 = *(unsigned int *)(v79 + 8);
      v82 = *(uint64_t **)v79;
      if (!(_DWORD)v81)
        goto LABEL_540;
      v83 = 8 * v81;
      v82 = *(uint64_t **)v79;
      while (*(_WORD *)(*v82 + 32) != 392)
      {
        ++v82;
        v83 -= 8;
        if (!v83)
          goto LABEL_768;
      }
LABEL_540:
      if (v82 == &v80[v81])
        goto LABEL_768;
      do
      {
        v369 = *v80++;
        v364 = v369;
      }
      while (*(_WORD *)(v369 + 32) != 392);
      goto LABEL_769;
    case 0x189:
      if (!sub_22E53B43C(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_546;
      sub_22EFC8E88(a2);
      v85 = *(uint64_t **)v84;
      v86 = *(unsigned int *)(v84 + 8);
      v87 = *(uint64_t **)v84;
      if (!(_DWORD)v86)
        goto LABEL_543;
      v88 = 8 * v86;
      v87 = *(uint64_t **)v84;
      while (*(_WORD *)(*v87 + 32) != 393)
      {
        ++v87;
        v88 -= 8;
        if (!v88)
          goto LABEL_546;
      }
LABEL_543:
      if (v87 == &v85[v86])
      {
LABEL_546:
        v346 = 0;
        goto LABEL_547;
      }
      do
      {
        v370 = *v85++;
        v346 = v370;
      }
      while (*(_WORD *)(v370 + 32) != 393);
LABEL_547:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      if (sub_22EFC1E78(a3))
        goto LABEL_984;
      v349 = sub_22EFC1EFC(a3);
      if ((v349 & 1) != 0)
        goto LABEL_823;
LABEL_551:
      if (!a5)
        goto LABEL_823;
      goto LABEL_683;
    case 0x18D:
      if (!sub_22E542F38(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_556;
      sub_22EFC8E88(a2);
      v90 = *(uint64_t **)v89;
      v91 = *(unsigned int *)(v89 + 8);
      v92 = *(uint64_t **)v89;
      if (!(_DWORD)v91)
        goto LABEL_553;
      v93 = 8 * v91;
      v92 = *(uint64_t **)v89;
      while (*(_WORD *)(*v92 + 32) != 397)
      {
        ++v92;
        v93 -= 8;
        if (!v93)
          goto LABEL_556;
      }
LABEL_553:
      if (v92 == &v90[v91])
      {
LABEL_556:
        v371 = 0;
        goto LABEL_557;
      }
      do
      {
        v372 = *v90++;
        v371 = v372;
      }
      while (*(_WORD *)(v372 + 32) != 397);
LABEL_557:
      if (!a3)
        goto LABEL_985;
      if (sub_22E88FFC4(a3))
        goto LABEL_984;
      if (!sub_22EFC1E78(a3))
        goto LABEL_838;
      if ((*(_BYTE *)(a3 + 29) & 1) == 0)
        goto LABEL_951;
      sub_22EFC8E88(a3);
      v374 = *(uint64_t **)v373;
      v375 = *(unsigned int *)(v373 + 8);
      v376 = *(uint64_t **)v373;
      if ((_DWORD)v375)
      {
        v377 = 8 * v375;
        v376 = *(uint64_t **)v373;
        while (*(_WORD *)(*v376 + 32) != 407)
        {
          ++v376;
          v377 -= 8;
          if (!v377)
            goto LABEL_951;
        }
      }
      if (v376 == &v374[v375])
      {
LABEL_951:
        v497 = 0;
      }
      else
      {
        do
        {
          v498 = *v374++;
          v497 = v498;
        }
        while (*(_WORD *)(v498 + 32) != 407);
      }
      v349 = sub_22EFA56A8(v497);
      if ((v349 & 1) != 0 || !a5)
        goto LABEL_823;
LABEL_954:
      v499 = a1;
      v500 = v371;
      v501 = a3;
      v502 = 2;
      goto LABEL_962;
    case 0x18F:
      if (!sub_22E542F98(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_630;
      sub_22EFC8E88(a2);
      v95 = *(uint64_t **)v94;
      v96 = *(unsigned int *)(v94 + 8);
      v97 = *(uint64_t **)v94;
      if (!(_DWORD)v96)
        goto LABEL_566;
      v98 = 8 * v96;
      v97 = *(uint64_t **)v94;
      while (*(_WORD *)(*v97 + 32) != 399)
      {
        ++v97;
        v98 -= 8;
        if (!v98)
          goto LABEL_630;
      }
LABEL_566:
      if (v97 == &v95[v96])
        goto LABEL_630;
      do
      {
        v378 = *v95++;
        v346 = v378;
      }
      while (*(_WORD *)(v378 + 32) != 399);
      goto LABEL_631;
    case 0x190:
      if (!sub_22E542FF8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_630;
      sub_22EFC8E88(a2);
      v100 = *(uint64_t **)v99;
      v101 = *(unsigned int *)(v99 + 8);
      v102 = *(uint64_t **)v99;
      if (!(_DWORD)v101)
        goto LABEL_569;
      v103 = 8 * v101;
      v102 = *(uint64_t **)v99;
      while (*(_WORD *)(*v102 + 32) != 400)
      {
        ++v102;
        v103 -= 8;
        if (!v103)
          goto LABEL_630;
      }
LABEL_569:
      if (v102 == &v100[v101])
        goto LABEL_630;
      do
      {
        v379 = *v100++;
        v346 = v379;
      }
      while (*(_WORD *)(v379 + 32) != 400);
      goto LABEL_631;
    case 0x195:
      if (!sub_22E543058(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_575;
      sub_22EFC8E88(a2);
      v105 = *(uint64_t **)v104;
      v106 = *(unsigned int *)(v104 + 8);
      v107 = *(uint64_t **)v104;
      if (!(_DWORD)v106)
        goto LABEL_572;
      v108 = 8 * v106;
      v107 = *(uint64_t **)v104;
      while (*(_WORD *)(*v107 + 32) != 405)
      {
        ++v107;
        v108 -= 8;
        if (!v108)
          goto LABEL_575;
      }
LABEL_572:
      if (v107 == &v105[v106])
      {
LABEL_575:
        v346 = 0;
        goto LABEL_576;
      }
      do
      {
        v380 = *v105++;
        v346 = v380;
      }
      while (*(_WORD *)(v380 + 32) != 405);
LABEL_576:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      if (sub_22E6A2F54(a3))
      {
        v381 = *(_QWORD *)(a2 + 48);
        v382 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v381 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v383 = *(_DWORD *)(v382 + 16);
        if (v382)
          v384 = (v383 & 0xFF800FF) == 90701835;
        else
          v384 = 0;
        if (!v384)
        {
          if (v382)
            v385 = *(_DWORD *)(v382 + 16) == 11;
          else
            v385 = 0;
          if (!v385)
          {
            if (!a5)
              goto LABEL_841;
            goto LABEL_971;
          }
          v511 = v383 & 0xFF80000;
          if (v511 != 91226112 && (a5 & 1) != 0)
          {
LABEL_971:
            v490 = a1;
            v491 = v346;
            goto LABEL_972;
          }
          if (v511 != 91226112)
            goto LABEL_841;
        }
      }
      else if ((sub_22EA81008(a1, a2, v346, a3, a5, a6) & 1) == 0)
      {
        goto LABEL_841;
      }
      goto LABEL_984;
    case 0x196:
      if (!sub_22E5430B8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_592;
      sub_22EFC8E88(a2);
      v110 = *(uint64_t **)v109;
      v111 = *(unsigned int *)(v109 + 8);
      v112 = *(uint64_t **)v109;
      if (!(_DWORD)v111)
        goto LABEL_589;
      v113 = 8 * v111;
      v112 = *(uint64_t **)v109;
      while (*(_WORD *)(*v112 + 32) != 406)
      {
        ++v112;
        v113 -= 8;
        if (!v113)
          goto LABEL_592;
      }
LABEL_589:
      if (v112 == &v110[v111])
      {
LABEL_592:
        v346 = 0;
        goto LABEL_593;
      }
      do
      {
        v386 = *v110++;
        v346 = v386;
      }
      while (*(_WORD *)(v386 + 32) != 406);
LABEL_593:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      if (!sub_22EFC1D94(a3))
        goto LABEL_682;
      if ((*(_BYTE *)(a3 + 29) & 1) == 0)
        goto LABEL_958;
      sub_22EFC8E88(a3);
      v388 = *(uint64_t **)v387;
      v389 = *(unsigned int *)(v387 + 8);
      v390 = *(uint64_t **)v387;
      if ((_DWORD)v389)
      {
        v391 = 8 * v389;
        v390 = *(uint64_t **)v387;
        while (*(_WORD *)(*v390 + 32) != 407)
        {
          ++v390;
          v391 -= 8;
          if (!v391)
            goto LABEL_958;
        }
      }
      if (v390 == &v388[v389])
      {
LABEL_958:
        v503 = 0;
      }
      else
      {
        do
        {
          v504 = *v388++;
          v503 = v504;
        }
        while (*(_WORD *)(v504 + 32) != 407);
      }
      v349 = sub_22EFA5650(v503);
      if ((v349 & 1) != 0 || !a5)
        goto LABEL_823;
      v499 = a1;
      v500 = v346;
      v501 = a3;
      v502 = 0;
LABEL_962:
      sub_22EA80BB8(v499, v500, v501, v502, a6);
      goto LABEL_841;
    case 0x19A:
      if (!sub_22E543118(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_785;
      sub_22EFC8E88(a2);
      v115 = *(uint64_t **)v114;
      v116 = *(unsigned int *)(v114 + 8);
      v117 = *(uint64_t **)v114;
      if (!(_DWORD)v116)
        goto LABEL_602;
      v118 = 8 * v116;
      v117 = *(uint64_t **)v114;
      while (*(_WORD *)(*v117 + 32) != 410)
      {
        ++v117;
        v118 -= 8;
        if (!v118)
          goto LABEL_785;
      }
LABEL_602:
      if (v117 == &v115[v116])
        goto LABEL_785;
      do
      {
        v392 = *v115++;
        v364 = v392;
      }
      while (*(_WORD *)(v392 + 32) != 410);
      goto LABEL_786;
    case 0x19C:
      if (!sub_22E543178(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_630;
      sub_22EFC8E88(a2);
      v120 = *(uint64_t **)v119;
      v121 = *(unsigned int *)(v119 + 8);
      v122 = *(uint64_t **)v119;
      if (!(_DWORD)v121)
        goto LABEL_605;
      v123 = 8 * v121;
      v122 = *(uint64_t **)v119;
      while (*(_WORD *)(*v122 + 32) != 412)
      {
        ++v122;
        v123 -= 8;
        if (!v123)
          goto LABEL_630;
      }
LABEL_605:
      if (v122 == &v120[v121])
        goto LABEL_630;
      do
      {
        v393 = *v120++;
        v346 = v393;
      }
      while (*(_WORD *)(v393 + 32) != 412);
      goto LABEL_631;
    case 0x1A0:
      if (!sub_22E5431D8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_630;
      sub_22EFC8E88(a2);
      v125 = *(uint64_t **)v124;
      v126 = *(unsigned int *)(v124 + 8);
      v127 = *(uint64_t **)v124;
      if (!(_DWORD)v126)
        goto LABEL_608;
      v128 = 8 * v126;
      v127 = *(uint64_t **)v124;
      while (*(_WORD *)(*v127 + 32) != 416)
      {
        ++v127;
        v128 -= 8;
        if (!v128)
          goto LABEL_630;
      }
LABEL_608:
      if (v127 == &v125[v126])
        goto LABEL_630;
      do
      {
        v394 = *v125++;
        v346 = v394;
      }
      while (*(_WORD *)(v394 + 32) != 416);
      goto LABEL_631;
    case 0x1A1:
      if (!sub_22E543238(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_785;
      sub_22EFC8E88(a2);
      v130 = *(uint64_t **)v129;
      v131 = *(unsigned int *)(v129 + 8);
      v132 = *(uint64_t **)v129;
      if (!(_DWORD)v131)
        goto LABEL_611;
      v133 = 8 * v131;
      v132 = *(uint64_t **)v129;
      while (*(_WORD *)(*v132 + 32) != 417)
      {
        ++v132;
        v133 -= 8;
        if (!v133)
          goto LABEL_785;
      }
LABEL_611:
      if (v132 == &v130[v131])
        goto LABEL_785;
      do
      {
        v395 = *v130++;
        v364 = v395;
      }
      while (*(_WORD *)(v395 + 32) != 417);
      goto LABEL_786;
    case 0x1A2:
      if (!sub_22E543298(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_785;
      sub_22EFC8E88(a2);
      v135 = *(uint64_t **)v134;
      v136 = *(unsigned int *)(v134 + 8);
      v137 = *(uint64_t **)v134;
      if (!(_DWORD)v136)
        goto LABEL_614;
      v138 = 8 * v136;
      v137 = *(uint64_t **)v134;
      while (*(_WORD *)(*v137 + 32) != 418)
      {
        ++v137;
        v138 -= 8;
        if (!v138)
          goto LABEL_785;
      }
LABEL_614:
      if (v137 == &v135[v136])
        goto LABEL_785;
      do
      {
        v396 = *v135++;
        v364 = v396;
      }
      while (*(_WORD *)(v396 + 32) != 418);
      goto LABEL_786;
    case 0x1A5:
      if (!sub_22E5432F8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_816;
      sub_22EFC8E88(a2);
      v140 = *(uint64_t **)v139;
      v141 = *(unsigned int *)(v139 + 8);
      v142 = *(uint64_t **)v139;
      if (!(_DWORD)v141)
        goto LABEL_617;
      v143 = 8 * v141;
      v142 = *(uint64_t **)v139;
      while (*(_WORD *)(*v142 + 32) != 421)
      {
        ++v142;
        v143 -= 8;
        if (!v143)
          goto LABEL_816;
      }
LABEL_617:
      if (v142 == &v140[v141])
        goto LABEL_816;
      do
      {
        v397 = *v140++;
        v364 = v397;
      }
      while (*(_WORD *)(v397 + 32) != 421);
      goto LABEL_817;
    case 0x1A6:
      if (!sub_22E543358(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_623;
      sub_22EFC8E88(a2);
      v145 = *(uint64_t **)v144;
      v146 = *(unsigned int *)(v144 + 8);
      v147 = *(uint64_t **)v144;
      if (!(_DWORD)v146)
        goto LABEL_620;
      v148 = 8 * v146;
      v147 = *(uint64_t **)v144;
      while (*(_WORD *)(*v147 + 32) != 422)
      {
        ++v147;
        v148 -= 8;
        if (!v148)
          goto LABEL_623;
      }
LABEL_620:
      if (v147 == &v145[v146])
      {
LABEL_623:
        v346 = 0;
        goto LABEL_624;
      }
      do
      {
        v398 = *v145++;
        v346 = v398;
      }
      while (*(_WORD *)(v398 + 32) != 422);
LABEL_624:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      v351 = sub_22EFC1DF4(a3);
      goto LABEL_736;
    case 0x1A7:
      if (!sub_22E5433B8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_630;
      sub_22EFC8E88(a2);
      v150 = *(uint64_t **)v149;
      v151 = *(unsigned int *)(v149 + 8);
      v152 = *(uint64_t **)v149;
      if (!(_DWORD)v151)
        goto LABEL_627;
      v153 = 8 * v151;
      v152 = *(uint64_t **)v149;
      while (*(_WORD *)(*v152 + 32) != 423)
      {
        ++v152;
        v153 -= 8;
        if (!v153)
          goto LABEL_630;
      }
LABEL_627:
      if (v152 == &v150[v151])
      {
LABEL_630:
        v346 = 0;
        goto LABEL_631;
      }
      do
      {
        v399 = *v150++;
        v346 = v399;
      }
      while (*(_WORD *)(v399 + 32) != 423);
LABEL_631:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      v351 = sub_22EFC1D94(a3);
      goto LABEL_736;
    case 0x1A9:
      if (!sub_22E543418(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_655;
      sub_22EFC8E88(a2);
      v155 = *(uint64_t **)v154;
      v156 = *(unsigned int *)(v154 + 8);
      v157 = *(uint64_t **)v154;
      if (!(_DWORD)v156)
        goto LABEL_634;
      v158 = 8 * v156;
      v157 = *(uint64_t **)v154;
      while (*(_WORD *)(*v157 + 32) != 425)
      {
        ++v157;
        v158 -= 8;
        if (!v158)
          goto LABEL_655;
      }
LABEL_634:
      if (v157 == &v155[v156])
        goto LABEL_655;
      do
      {
        v401 = *v155++;
        v400 = v401;
      }
      while (*(_WORD *)(v401 + 32) != 425);
      goto LABEL_656;
    case 0x1AB:
      if (!sub_22E543478(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_710;
      sub_22EFC8E88(a2);
      v160 = *(uint64_t **)v159;
      v161 = *(unsigned int *)(v159 + 8);
      v162 = *(uint64_t **)v159;
      if (!(_DWORD)v161)
        goto LABEL_637;
      v163 = 8 * v161;
      v162 = *(uint64_t **)v159;
      while (*(_WORD *)(*v162 + 32) != 427)
      {
        ++v162;
        v163 -= 8;
        if (!v163)
          goto LABEL_710;
      }
LABEL_637:
      if (v162 == &v160[v161])
        goto LABEL_710;
      do
      {
        v402 = *v160++;
        v400 = v402;
      }
      while (*(_WORD *)(v402 + 32) != 427);
      goto LABEL_711;
    case 0x1AC:
      if (!sub_22E5434D8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_710;
      sub_22EFC8E88(a2);
      v165 = *(uint64_t **)v164;
      v166 = *(unsigned int *)(v164 + 8);
      v167 = *(uint64_t **)v164;
      if (!(_DWORD)v166)
        goto LABEL_640;
      v168 = 8 * v166;
      v167 = *(uint64_t **)v164;
      while (*(_WORD *)(*v167 + 32) != 428)
      {
        ++v167;
        v168 -= 8;
        if (!v168)
          goto LABEL_710;
      }
LABEL_640:
      if (v167 == &v165[v166])
        goto LABEL_710;
      do
      {
        v403 = *v165++;
        v400 = v403;
      }
      while (*(_WORD *)(v403 + 32) != 428);
      goto LABEL_711;
    case 0x1AD:
      if (!sub_22E543538(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_710;
      sub_22EFC8E88(a2);
      v170 = *(uint64_t **)v169;
      v171 = *(unsigned int *)(v169 + 8);
      v172 = *(uint64_t **)v169;
      if (!(_DWORD)v171)
        goto LABEL_643;
      v173 = 8 * v171;
      v172 = *(uint64_t **)v169;
      while (*(_WORD *)(*v172 + 32) != 429)
      {
        ++v172;
        v173 -= 8;
        if (!v173)
          goto LABEL_710;
      }
LABEL_643:
      if (v172 == &v170[v171])
        goto LABEL_710;
      do
      {
        v404 = *v170++;
        v400 = v404;
      }
      while (*(_WORD *)(v404 + 32) != 429);
      goto LABEL_711;
    case 0x1AE:
      if (!sub_22E53742C(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_662;
      sub_22EFC8E88(a2);
      v175 = *(uint64_t **)v174;
      v176 = *(unsigned int *)(v174 + 8);
      v177 = *(uint64_t **)v174;
      if (!(_DWORD)v176)
        goto LABEL_646;
      v178 = 8 * v176;
      v177 = *(uint64_t **)v174;
      while (*(_WORD *)(*v177 + 32) != 430)
      {
        ++v177;
        v178 -= 8;
        if (!v178)
          goto LABEL_662;
      }
LABEL_646:
      if (v177 == &v175[v176])
        goto LABEL_662;
      do
      {
        v405 = *v175++;
        v346 = v405;
      }
      while (*(_WORD *)(v405 + 32) != 430);
      goto LABEL_663;
    case 0x1AF:
      if (!sub_22E53748C(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_978;
      sub_22EFC8E88(a2);
      v180 = *(uint64_t **)v179;
      v181 = *(unsigned int *)(v179 + 8);
      v182 = *(uint64_t **)v179;
      if (!(_DWORD)v181)
        goto LABEL_649;
      v183 = 8 * v181;
      v182 = *(uint64_t **)v179;
      while (*(_WORD *)(*v182 + 32) != 431)
      {
        ++v182;
        v183 -= 8;
        if (!v183)
          goto LABEL_978;
      }
LABEL_649:
      if (v182 == &v180[v181])
        goto LABEL_978;
      do
      {
        v406 = *v180++;
        v400 = v406;
      }
      while (*(_WORD *)(v406 + 32) != 431);
      goto LABEL_979;
    case 0x1B0:
      if (!sub_22E543598(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_655;
      sub_22EFC8E88(a2);
      v185 = *(uint64_t **)v184;
      v186 = *(unsigned int *)(v184 + 8);
      v187 = *(uint64_t **)v184;
      if (!(_DWORD)v186)
        goto LABEL_652;
      v188 = 8 * v186;
      v187 = *(uint64_t **)v184;
      while (*(_WORD *)(*v187 + 32) != 432)
      {
        ++v187;
        v188 -= 8;
        if (!v188)
          goto LABEL_655;
      }
LABEL_652:
      if (v187 == &v185[v186])
      {
LABEL_655:
        v400 = 0;
        goto LABEL_656;
      }
      do
      {
        v407 = *v185++;
        v400 = v407;
      }
      while (*(_WORD *)(v407 + 32) != 432);
LABEL_656:
      if (!a3)
        goto LABEL_985;
      if (!sub_22E6A2F54(a3))
      {
        v13 = 0;
        goto LABEL_981;
      }
      v13 = sub_22EAA34D4(a3);
      if ((v13 & 1) != 0)
        goto LABEL_983;
      goto LABEL_981;
    case 0x1B2:
      if (!sub_22E5374EC(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_662;
      sub_22EFC8E88(a2);
      v190 = *(uint64_t **)v189;
      v191 = *(unsigned int *)(v189 + 8);
      v192 = *(uint64_t **)v189;
      if (!(_DWORD)v191)
        goto LABEL_659;
      v193 = 8 * v191;
      v192 = *(uint64_t **)v189;
      while (*(_WORD *)(*v192 + 32) != 434)
      {
        ++v192;
        v193 -= 8;
        if (!v193)
          goto LABEL_662;
      }
LABEL_659:
      if (v192 == &v190[v191])
      {
LABEL_662:
        v346 = 0;
        goto LABEL_663;
      }
      do
      {
        v408 = *v190++;
        v346 = v408;
      }
      while (*(_WORD *)(v408 + 32) != 434);
LABEL_663:
      if (a4 == 1 && (*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      {
        if (!a5)
          goto LABEL_841;
        if (a6)
        {
          v409 = *(_QWORD *)(v346 + 16);
          v410 = a1[11] + 2128;
          v411 = (_BYTE *)sub_22E3B8AAC(v410);
          sub_22E4D6448((uint64_t)(v411 + 336), v409, 1);
          if (!v411)
            v411 = (_BYTE *)sub_22E3B8AAC(v410);
          v412 = *v411;
          v411[v412 + 1] = 15;
          *v411 = v412 + 1;
          *(_QWORD *)&v411[8 * v412 + 16] = v346;
          v535 = v409;
          v538 = 5725;
          v537 = v410;
          v536 = (_OWORD *)sub_22E3B8AAC(v410);
          sub_22E78D4E8(v536, (uint64_t)v411);
          sub_22E8928F4(a6, (unint64_t)&v535);
          if (v536 && v537)
          {
            sub_22E3BB10C(v537, (unint64_t)v536);
            v536 = 0;
          }
          v359 = v410;
          v360 = (unint64_t)v411;
          goto LABEL_673;
        }
        sub_22E8FCA40(a1, *(_DWORD *)(v346 + 16), 0xEDAu, 0, (uint64_t)&v535);
        v534 = *(_QWORD *)(v346 + 16);
        v475 = sub_22E8906A0((uint64_t)&v535, &v534);
        v476 = v475;
        if (*(_BYTE *)(v475 + 80))
        {
          v477 = *(unsigned __int8 **)(v475 + 32);
          if (!v477)
          {
            v477 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v476 + 40));
            *(_QWORD *)(v476 + 32) = v477;
          }
          v477[*v477 + 1] = 15;
          v478 = *(_BYTE **)(v476 + 32);
        }
        else
        {
          if (!*(_BYTE *)(v475 + 92))
            goto LABEL_974;
          v505 = (uint64_t *)(*(_QWORD *)v475 + 12784);
          v506 = *(_QWORD *)(v475 + 16);
          if (v506)
            v506 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v506 + 32))(v506);
          v539 = v506;
          v507 = sub_22F2F1D6C(v505, &v539)[1] + 32 * *(unsigned int *)(v476 + 88);
          v510 = *(unsigned __int8 **)(v507 + 8);
          v509 = (_QWORD *)(v507 + 8);
          v508 = v510;
          if (!v510)
          {
            v508 = (unsigned __int8 *)sub_22E3B8AAC(v509[1]);
            *v509 = v508;
          }
          v508[*v508 + 1] = 15;
          v478 = (_BYTE *)*v509;
        }
        v479 = *v478;
        *v478 = v479 + 1;
        *(_QWORD *)&v478[8 * v479 + 16] = v346;
        goto LABEL_974;
      }
      if (!a3)
        goto LABEL_985;
LABEL_675:
      v351 = sub_22E88FFC4(a3);
LABEL_736:
      v426 = v351;
      if (!v351 && a5)
        sub_22EA5294C(a1, v346, a3, 0, a6);
      if (!v426)
        goto LABEL_841;
      goto LABEL_984;
    case 0x1B3:
      if (!sub_22EA62D8C(a1, a2, 0, a5))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_679;
      sub_22EFC8E88(a2);
      v195 = *(uint64_t **)v194;
      v196 = *(unsigned int *)(v194 + 8);
      v197 = *(uint64_t **)v194;
      if (!(_DWORD)v196)
        goto LABEL_676;
      v198 = 8 * v196;
      v197 = *(uint64_t **)v194;
      while (*(_WORD *)(*v197 + 32) != 435)
      {
        ++v197;
        v198 -= 8;
        if (!v198)
          goto LABEL_679;
      }
LABEL_676:
      if (v197 == &v195[v196])
      {
LABEL_679:
        v346 = 0;
        goto LABEL_680;
      }
      do
      {
        v413 = *v195++;
        v346 = v413;
      }
      while (*(_WORD *)(v413 + 32) != 435);
LABEL_680:
      if (a4 == 2)
        goto LABEL_803;
      if (sub_22EFC1D94(a3))
        goto LABEL_984;
LABEL_682:
      if (!a5)
        goto LABEL_841;
LABEL_683:
      v361 = a1;
      v362 = v346;
      goto LABEL_840;
    case 0x1B4:
      if (!sub_22E53754C(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_687;
      sub_22EFC8E88(a2);
      v200 = *(uint64_t **)v199;
      v201 = *(unsigned int *)(v199 + 8);
      v202 = *(uint64_t **)v199;
      if (!(_DWORD)v201)
        goto LABEL_684;
      v203 = 8 * v201;
      v202 = *(uint64_t **)v199;
      while (*(_WORD *)(*v202 + 32) != 436)
      {
        ++v202;
        v203 -= 8;
        if (!v203)
          goto LABEL_687;
      }
LABEL_684:
      if (v202 == &v200[v201])
      {
LABEL_687:
        v371 = 0;
        goto LABEL_688;
      }
      do
      {
        v414 = *v200++;
        v371 = v414;
      }
      while (*(_WORD *)(v414 + 32) != 436);
LABEL_688:
      if (!a3)
        goto LABEL_985;
      if (!sub_22E88FFC4(a3) || (*(_BYTE *)(a1[9] + 128) & 4) == 0)
      {
        if (sub_22EFC1D94(a3))
        {
          v415 = (*(unsigned __int8 *)(a1[9] + 128) >> 4) & 1;
          if (v415 || !a5)
            goto LABEL_941;
        }
        else
        {
LABEL_838:
          if (!a5)
            goto LABEL_841;
        }
LABEL_839:
        v361 = a1;
        v362 = v371;
        goto LABEL_840;
      }
      v381 = *(_QWORD *)(a2 + 48);
      v473 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v381 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v473)
        v474 = *(_DWORD *)(v473 + 16) == 11;
      else
        v474 = 0;
      v415 = v474 && (*(_DWORD *)(v473 + 16) & 0xFF80000) == 91226112;
      if ((v415 & 1) == 0 && a5)
      {
        v490 = a1;
        v491 = v371;
LABEL_972:
        sub_22EA548FC(v490, v381, v491, a3, a6);
        goto LABEL_841;
      }
LABEL_941:
      if (!v415)
        goto LABEL_841;
LABEL_984:
      v13 = sub_22EA80AF4(a1, a2, a3, 0, a5, a6);
LABEL_842:
      if (!sub_22E53D258(a2))
        goto LABEL_851;
      if (sub_22E53D258(a2))
      {
        if (a3)
        {
          if ((*(_BYTE *)(a2 + 29) & 1) == 0)
            goto LABEL_855;
          sub_22EFC8E88(a2);
          v448 = *(uint64_t **)v447;
          v449 = *(unsigned int *)(v447 + 8);
          v450 = *(uint64_t **)v447;
          if ((_DWORD)v449)
          {
            v451 = 8 * v449;
            v450 = *(uint64_t **)v447;
            while (*(_WORD *)(*v450 + 32) != 378)
            {
              ++v450;
              v451 -= 8;
              if (!v451)
                goto LABEL_855;
            }
          }
          if (v450 == &v448[v449])
          {
LABEL_855:
            v453 = 0;
          }
          else
          {
            do
            {
              v454 = *v448++;
              v453 = v454;
            }
            while (*(_WORD *)(v454 + 32) != 378);
          }
          if (a5)
            sub_22EA5294C(a1, v453, a3, 0, a6);
          goto LABEL_858;
        }
LABEL_851:
        v452 = 1;
        goto LABEL_859;
      }
LABEL_858:
      v452 = 0;
LABEL_859:
      if (sub_22E53D1F8(a2))
      {
        v455 = sub_22E53D1F8(a2);
        if (v455)
        {
          if (a3)
          {
            if ((*(_BYTE *)(a2 + 29) & 1) == 0)
              goto LABEL_872;
            sub_22EFC8E88(a2);
            v457 = *(uint64_t **)v456;
            v458 = *(unsigned int *)(v456 + 8);
            v459 = *(uint64_t **)v456;
            if ((_DWORD)v458)
            {
              v460 = 8 * v458;
              v459 = *(uint64_t **)v456;
              while (*(_WORD *)(*v459 + 32) != 408)
              {
                ++v459;
                v460 -= 8;
                if (!v460)
                  goto LABEL_872;
              }
            }
            if (v459 == &v457[v458])
            {
LABEL_872:
              v461 = 0;
            }
            else
            {
              do
              {
                v462 = *v457++;
                v461 = v462;
              }
              while (*(_WORD *)(v462 + 32) != 408);
            }
            v455 = sub_22E88FFC4(a3);
            if (!v455 && a5)
            {
              sub_22EA5294C(a1, v461, a3, 0, a6);
              v455 = 0;
            }
          }
          else
          {
            v455 = 1;
          }
        }
        v452 &= v455;
      }
      if (sub_22E546FA4(a2))
      {
        if (sub_22E546FA4(a2))
        {
          if (!a3)
          {
            v468 = 1;
LABEL_898:
            v452 &= v468;
            return v13 & v452;
          }
          if ((*(_BYTE *)(a2 + 29) & 1) == 0)
            goto LABEL_890;
          sub_22EFC8E88(a2);
          v464 = *(uint64_t **)v463;
          v465 = *(unsigned int *)(v463 + 8);
          v466 = *(uint64_t **)v463;
          if ((_DWORD)v465)
          {
            v467 = 8 * v465;
            v466 = *(uint64_t **)v463;
            while (*(_WORD *)(*v466 + 32) != 433)
            {
              ++v466;
              v467 -= 8;
              if (!v467)
                goto LABEL_890;
            }
          }
          if (v466 == &v464[v465])
          {
LABEL_890:
            v469 = 0;
          }
          else
          {
            do
            {
              v470 = *v464++;
              v469 = v470;
            }
            while (*(_WORD *)(v470 + 32) != 433);
          }
          if (sub_22E88FFC4(a3))
          {
            v468 = *(unsigned __int8 *)(a1[9] + 128);
            if ((v468 & 1) != 0 || !a5)
              goto LABEL_898;
            goto LABEL_896;
          }
          if (a5)
LABEL_896:
            sub_22EA5294C(a1, v469, a3, 0, a6);
        }
        v468 = 0;
        goto LABEL_898;
      }
      return v13 & v452;
    case 0x1B5:
      if (!sub_22E543658(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v205 = *(uint64_t **)v204;
      v206 = *(unsigned int *)(v204 + 8);
      v207 = *(uint64_t **)v204;
      if (!(_DWORD)v206)
        goto LABEL_695;
      v208 = 8 * v206;
      v207 = *(uint64_t **)v204;
      while (*(_WORD *)(*v207 + 32) != 437)
      {
        ++v207;
        v208 -= 8;
        if (!v208)
          goto LABEL_768;
      }
LABEL_695:
      if (v207 == &v205[v206])
        goto LABEL_768;
      do
      {
        v416 = *v205++;
        v364 = v416;
      }
      while (*(_WORD *)(v416 + 32) != 437);
      goto LABEL_769;
    case 0x1B6:
      if (!sub_22E5436B8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v210 = *(uint64_t **)v209;
      v211 = *(unsigned int *)(v209 + 8);
      v212 = *(uint64_t **)v209;
      if (!(_DWORD)v211)
        goto LABEL_698;
      v213 = 8 * v211;
      v212 = *(uint64_t **)v209;
      while (*(_WORD *)(*v212 + 32) != 438)
      {
        ++v212;
        v213 -= 8;
        if (!v213)
          goto LABEL_768;
      }
LABEL_698:
      if (v212 == &v210[v211])
        goto LABEL_768;
      do
      {
        v417 = *v210++;
        v364 = v417;
      }
      while (*(_WORD *)(v417 + 32) != 438);
      goto LABEL_769;
    case 0x1B8:
      if (!sub_22E5375AC(a2))
        goto LABEL_841;
      if (!a3)
        goto LABEL_985;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_903;
      sub_22EFC8E88(a2);
      v215 = *(uint64_t **)v214;
      v216 = *(unsigned int *)(v214 + 8);
      v217 = *(uint64_t **)v214;
      if (!(_DWORD)v216)
        goto LABEL_900;
      v218 = 8 * v216;
      v217 = *(uint64_t **)v214;
      while (*(_WORD *)(*v217 + 32) != 440)
      {
        ++v217;
        v218 -= 8;
        if (!v218)
          goto LABEL_903;
      }
LABEL_900:
      if (v217 == &v215[v216])
      {
LABEL_903:
        v346 = 0;
        goto LABEL_904;
      }
      do
      {
        v472 = *v215++;
        v346 = v472;
      }
      while (*(_WORD *)(v472 + 32) != 440);
LABEL_904:
      if (!sub_22EA1DB60(a3) || (*(_BYTE *)(a1[9] + 130) & 4) == 0)
        goto LABEL_675;
      if (a4 != 2)
        goto LABEL_984;
      goto LABEL_803;
    case 0x1B9:
      if (!sub_22E543778(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v220 = *(uint64_t **)v219;
      v221 = *(unsigned int *)(v219 + 8);
      v222 = *(uint64_t **)v219;
      if (!(_DWORD)v221)
        goto LABEL_701;
      v223 = 8 * v221;
      v222 = *(uint64_t **)v219;
      while (*(_WORD *)(*v222 + 32) != 441)
      {
        ++v222;
        v223 -= 8;
        if (!v223)
          goto LABEL_768;
      }
LABEL_701:
      if (v222 == &v220[v221])
        goto LABEL_768;
      do
      {
        v418 = *v220++;
        v364 = v418;
      }
      while (*(_WORD *)(v418 + 32) != 441);
      goto LABEL_769;
    case 0x1BA:
      if (!sub_22E5437D8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v225 = *(uint64_t **)v224;
      v226 = *(unsigned int *)(v224 + 8);
      v227 = *(uint64_t **)v224;
      if (!(_DWORD)v226)
        goto LABEL_704;
      v228 = 8 * v226;
      v227 = *(uint64_t **)v224;
      while (*(_WORD *)(*v227 + 32) != 442)
      {
        ++v227;
        v228 -= 8;
        if (!v228)
          goto LABEL_768;
      }
LABEL_704:
      if (v227 == &v225[v226])
        goto LABEL_768;
      do
      {
        v419 = *v225++;
        v364 = v419;
      }
      while (*(_WORD *)(v419 + 32) != 442);
      goto LABEL_769;
    case 0x1BB:
      if (!sub_22E543718(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_710;
      sub_22EFC8E88(a2);
      v230 = *(uint64_t **)v229;
      v231 = *(unsigned int *)(v229 + 8);
      v232 = *(uint64_t **)v229;
      if (!(_DWORD)v231)
        goto LABEL_707;
      v233 = 8 * v231;
      v232 = *(uint64_t **)v229;
      while (*(_WORD *)(*v232 + 32) != 443)
      {
        ++v232;
        v233 -= 8;
        if (!v233)
          goto LABEL_710;
      }
LABEL_707:
      if (v232 == &v230[v231])
      {
LABEL_710:
        v400 = 0;
        goto LABEL_711;
      }
      do
      {
        v420 = *v230++;
        v400 = v420;
      }
      while (*(_WORD *)(v420 + 32) != 443);
LABEL_711:
      if (!a3)
        goto LABEL_985;
      goto LABEL_980;
    case 0x1BC:
      if (!sub_22E53B678(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_978;
      sub_22EFC8E88(a2);
      v235 = *(uint64_t **)v234;
      v236 = *(unsigned int *)(v234 + 8);
      v237 = *(uint64_t **)v234;
      if (!(_DWORD)v236)
        goto LABEL_713;
      v238 = 8 * v236;
      v237 = *(uint64_t **)v234;
      while (*(_WORD *)(*v237 + 32) != 444)
      {
        ++v237;
        v238 -= 8;
        if (!v238)
          goto LABEL_978;
      }
LABEL_713:
      if (v237 == &v235[v236])
        goto LABEL_978;
      do
      {
        v421 = *v235++;
        v400 = v421;
      }
      while (*(_WORD *)(v421 + 32) != 444);
      goto LABEL_979;
    case 0x1C2:
      if (!sub_22E543838(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_732;
      sub_22EFC8E88(a2);
      v240 = *(uint64_t **)v239;
      v241 = *(unsigned int *)(v239 + 8);
      v242 = *(uint64_t **)v239;
      if (!(_DWORD)v241)
        goto LABEL_716;
      v243 = 8 * v241;
      v242 = *(uint64_t **)v239;
      while (*(_WORD *)(*v242 + 32) != 450)
      {
        ++v242;
        v243 -= 8;
        if (!v243)
          goto LABEL_732;
      }
LABEL_716:
      if (v242 == &v240[v241])
        goto LABEL_732;
      do
      {
        v422 = *v240++;
        v346 = v422;
      }
      while (*(_WORD *)(v422 + 32) != 450);
      goto LABEL_733;
    case 0x1C3:
      if (!sub_22E543898(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_732;
      sub_22EFC8E88(a2);
      v245 = *(uint64_t **)v244;
      v246 = *(unsigned int *)(v244 + 8);
      v247 = *(uint64_t **)v244;
      if (!(_DWORD)v246)
        goto LABEL_719;
      v248 = 8 * v246;
      v247 = *(uint64_t **)v244;
      while (*(_WORD *)(*v247 + 32) != 451)
      {
        ++v247;
        v248 -= 8;
        if (!v248)
          goto LABEL_732;
      }
LABEL_719:
      if (v247 == &v245[v246])
        goto LABEL_732;
      do
      {
        v423 = *v245++;
        v346 = v423;
      }
      while (*(_WORD *)(v423 + 32) != 451);
      goto LABEL_733;
    case 0x1C4:
      if (!sub_22E53B6D8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_725;
      sub_22EFC8E88(a2);
      v250 = *(uint64_t **)v249;
      v251 = *(unsigned int *)(v249 + 8);
      v252 = *(uint64_t **)v249;
      if (!(_DWORD)v251)
        goto LABEL_722;
      v253 = 8 * v251;
      v252 = *(uint64_t **)v249;
      while (*(_WORD *)(*v252 + 32) != 452)
      {
        ++v252;
        v253 -= 8;
        if (!v253)
          goto LABEL_725;
      }
LABEL_722:
      if (v252 == &v250[v251])
      {
LABEL_725:
        v362 = 0;
        goto LABEL_726;
      }
      do
      {
        v424 = *v250++;
        v362 = v424;
      }
      while (*(_WORD *)(v424 + 32) != 452);
LABEL_726:
      v13 = a3 == 0;
      if (!a3 || !a5)
        goto LABEL_842;
      v361 = a1;
LABEL_840:
      sub_22EA5294C(v361, v362, a3, 0, a6);
      goto LABEL_841;
    case 0x1C6:
      if (!sub_22E5438F8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_732;
      sub_22EFC8E88(a2);
      v255 = *(uint64_t **)v254;
      v256 = *(unsigned int *)(v254 + 8);
      v257 = *(uint64_t **)v254;
      if (!(_DWORD)v256)
        goto LABEL_729;
      v258 = 8 * v256;
      v257 = *(uint64_t **)v254;
      while (*(_WORD *)(*v257 + 32) != 454)
      {
        ++v257;
        v258 -= 8;
        if (!v258)
          goto LABEL_732;
      }
LABEL_729:
      if (v257 == &v255[v256])
      {
LABEL_732:
        v346 = 0;
        goto LABEL_733;
      }
      do
      {
        v425 = *v255++;
        v346 = v425;
      }
      while (*(_WORD *)(v425 + 32) != 454);
LABEL_733:
      if (a4 == 2)
        goto LABEL_803;
      if (!a3)
        goto LABEL_985;
      v351 = sub_22EA1DB60(a3);
      goto LABEL_736;
    case 0x1C7:
      if (!sub_22E543958(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v260 = *(uint64_t **)v259;
      v261 = *(unsigned int *)(v259 + 8);
      v262 = *(uint64_t **)v259;
      if (!(_DWORD)v261)
        goto LABEL_741;
      v263 = 8 * v261;
      v262 = *(uint64_t **)v259;
      while (*(_WORD *)(*v262 + 32) != 455)
      {
        ++v262;
        v263 -= 8;
        if (!v263)
          goto LABEL_768;
      }
LABEL_741:
      if (v262 == &v260[v261])
        goto LABEL_768;
      do
      {
        v427 = *v260++;
        v364 = v427;
      }
      while (*(_WORD *)(v427 + 32) != 455);
      goto LABEL_769;
    case 0x1C8:
      if (!sub_22E5439B8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v265 = *(uint64_t **)v264;
      v266 = *(unsigned int *)(v264 + 8);
      v267 = *(uint64_t **)v264;
      if (!(_DWORD)v266)
        goto LABEL_744;
      v268 = 8 * v266;
      v267 = *(uint64_t **)v264;
      while (*(_WORD *)(*v267 + 32) != 456)
      {
        ++v267;
        v268 -= 8;
        if (!v268)
          goto LABEL_768;
      }
LABEL_744:
      if (v267 == &v265[v266])
        goto LABEL_768;
      do
      {
        v428 = *v265++;
        v364 = v428;
      }
      while (*(_WORD *)(v428 + 32) != 456);
      goto LABEL_769;
    case 0x1C9:
      if (!sub_22E543A18(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v270 = *(uint64_t **)v269;
      v271 = *(unsigned int *)(v269 + 8);
      v272 = *(uint64_t **)v269;
      if (!(_DWORD)v271)
        goto LABEL_747;
      v273 = 8 * v271;
      v272 = *(uint64_t **)v269;
      while (*(_WORD *)(*v272 + 32) != 457)
      {
        ++v272;
        v273 -= 8;
        if (!v273)
          goto LABEL_768;
      }
LABEL_747:
      if (v272 == &v270[v271])
        goto LABEL_768;
      do
      {
        v429 = *v270++;
        v364 = v429;
      }
      while (*(_WORD *)(v429 + 32) != 457);
      goto LABEL_769;
    case 0x1CA:
      if (!sub_22E543A78(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_775;
      sub_22EFC8E88(a2);
      v275 = *(uint64_t **)v274;
      v276 = *(unsigned int *)(v274 + 8);
      v277 = *(uint64_t **)v274;
      if (!(_DWORD)v276)
        goto LABEL_750;
      v278 = 8 * v276;
      v277 = *(uint64_t **)v274;
      while (*(_WORD *)(*v277 + 32) != 458)
      {
        ++v277;
        v278 -= 8;
        if (!v278)
          goto LABEL_775;
      }
LABEL_750:
      if (v277 == &v275[v276])
        goto LABEL_775;
      do
      {
        v430 = *v275++;
        v364 = v430;
      }
      while (*(_WORD *)(v430 + 32) != 458);
      goto LABEL_776;
    case 0x1CB:
      if (!sub_22E543AD8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_775;
      sub_22EFC8E88(a2);
      v280 = *(uint64_t **)v279;
      v281 = *(unsigned int *)(v279 + 8);
      v282 = *(uint64_t **)v279;
      if (!(_DWORD)v281)
        goto LABEL_753;
      v283 = 8 * v281;
      v282 = *(uint64_t **)v279;
      while (*(_WORD *)(*v282 + 32) != 459)
      {
        ++v282;
        v283 -= 8;
        if (!v283)
          goto LABEL_775;
      }
LABEL_753:
      if (v282 == &v280[v281])
        goto LABEL_775;
      do
      {
        v431 = *v280++;
        v364 = v431;
      }
      while (*(_WORD *)(v431 + 32) != 459);
      goto LABEL_776;
    case 0x1CC:
      if (!sub_22E543B38(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v285 = *(uint64_t **)v284;
      v286 = *(unsigned int *)(v284 + 8);
      v287 = *(uint64_t **)v284;
      if (!(_DWORD)v286)
        goto LABEL_756;
      v288 = 8 * v286;
      v287 = *(uint64_t **)v284;
      while (*(_WORD *)(*v287 + 32) != 460)
      {
        ++v287;
        v288 -= 8;
        if (!v288)
          goto LABEL_768;
      }
LABEL_756:
      if (v287 == &v285[v286])
        goto LABEL_768;
      do
      {
        v432 = *v285++;
        v364 = v432;
      }
      while (*(_WORD *)(v432 + 32) != 460);
      goto LABEL_769;
    case 0x1CD:
      if (!sub_22E543B98(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v290 = *(uint64_t **)v289;
      v291 = *(unsigned int *)(v289 + 8);
      v292 = *(uint64_t **)v289;
      if (!(_DWORD)v291)
        goto LABEL_759;
      v293 = 8 * v291;
      v292 = *(uint64_t **)v289;
      while (*(_WORD *)(*v292 + 32) != 461)
      {
        ++v292;
        v293 -= 8;
        if (!v293)
          goto LABEL_768;
      }
LABEL_759:
      if (v292 == &v290[v291])
        goto LABEL_768;
      do
      {
        v433 = *v290++;
        v364 = v433;
      }
      while (*(_WORD *)(v433 + 32) != 461);
      goto LABEL_769;
    case 0x1CE:
      if (!sub_22E543BF8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v295 = *(uint64_t **)v294;
      v296 = *(unsigned int *)(v294 + 8);
      v297 = *(uint64_t **)v294;
      if (!(_DWORD)v296)
        goto LABEL_762;
      v298 = 8 * v296;
      v297 = *(uint64_t **)v294;
      while (*(_WORD *)(*v297 + 32) != 462)
      {
        ++v297;
        v298 -= 8;
        if (!v298)
          goto LABEL_768;
      }
LABEL_762:
      if (v297 == &v295[v296])
        goto LABEL_768;
      do
      {
        v434 = *v295++;
        v364 = v434;
      }
      while (*(_WORD *)(v434 + 32) != 462);
      goto LABEL_769;
    case 0x1CF:
      if (!sub_22E543C58(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_768;
      sub_22EFC8E88(a2);
      v300 = *(uint64_t **)v299;
      v301 = *(unsigned int *)(v299 + 8);
      v302 = *(uint64_t **)v299;
      if (!(_DWORD)v301)
        goto LABEL_765;
      v303 = 8 * v301;
      v302 = *(uint64_t **)v299;
      while (*(_WORD *)(*v302 + 32) != 463)
      {
        ++v302;
        v303 -= 8;
        if (!v303)
          goto LABEL_768;
      }
LABEL_765:
      if (v302 == &v300[v301])
      {
LABEL_768:
        v364 = 0;
        goto LABEL_769;
      }
      do
      {
        v435 = *v300++;
        v364 = v435;
      }
      while (*(_WORD *)(v435 + 32) != 463);
LABEL_769:
      if (a4 == 2)
        goto LABEL_818;
      if (!a3)
        goto LABEL_985;
      v349 = sub_22EA80F80(a1, v364, a3, a5, a6);
      goto LABEL_823;
    case 0x1D0:
      if (!sub_22E543CB8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_775;
      sub_22EFC8E88(a2);
      v305 = *(uint64_t **)v304;
      v306 = *(unsigned int *)(v304 + 8);
      v307 = *(uint64_t **)v304;
      if (!(_DWORD)v306)
        goto LABEL_772;
      v308 = 8 * v306;
      v307 = *(uint64_t **)v304;
      while (*(_WORD *)(*v307 + 32) != 464)
      {
        ++v307;
        v308 -= 8;
        if (!v308)
          goto LABEL_775;
      }
LABEL_772:
      if (v307 == &v305[v306])
      {
LABEL_775:
        v364 = 0;
        goto LABEL_776;
      }
      do
      {
        v436 = *v305++;
        v364 = v436;
      }
      while (*(_WORD *)(v436 + 32) != 464);
LABEL_776:
      if (a4 == 2)
        goto LABEL_818;
      if (!a3)
        goto LABEL_985;
      v349 = sub_22EA816B8(a1, v364, a3, a5, a6);
      goto LABEL_823;
    case 0x1D1:
      if (!sub_22E543D18(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_978;
      sub_22EFC8E88(a2);
      v310 = *(uint64_t **)v309;
      v311 = *(unsigned int *)(v309 + 8);
      v312 = *(uint64_t **)v309;
      if (!(_DWORD)v311)
        goto LABEL_779;
      v313 = 8 * v311;
      v312 = *(uint64_t **)v309;
      while (*(_WORD *)(*v312 + 32) != 465)
      {
        ++v312;
        v313 -= 8;
        if (!v313)
          goto LABEL_978;
      }
LABEL_779:
      if (v312 == &v310[v311])
        goto LABEL_978;
      do
      {
        v437 = *v310++;
        v400 = v437;
      }
      while (*(_WORD *)(v437 + 32) != 465);
      goto LABEL_979;
    case 0x1D2:
      if (!sub_22E543D78(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_785;
      sub_22EFC8E88(a2);
      v315 = *(uint64_t **)v314;
      v316 = *(unsigned int *)(v314 + 8);
      v317 = *(uint64_t **)v314;
      if (!(_DWORD)v316)
        goto LABEL_782;
      v318 = 8 * v316;
      v317 = *(uint64_t **)v314;
      while (*(_WORD *)(*v317 + 32) != 466)
      {
        ++v317;
        v318 -= 8;
        if (!v318)
          goto LABEL_785;
      }
LABEL_782:
      if (v317 == &v315[v316])
      {
LABEL_785:
        v364 = 0;
        goto LABEL_786;
      }
      do
      {
        v438 = *v315++;
        v364 = v438;
      }
      while (*(_WORD *)(v438 + 32) != 466);
LABEL_786:
      if (a4 == 2)
        goto LABEL_818;
      if (!a3)
        goto LABEL_985;
      v349 = sub_22EA814C0(a1, v364, a3, a5, a6);
      goto LABEL_823;
    case 0x1D4:
      if (!sub_22E543DD8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_792;
      sub_22EFC8E88(a2);
      v320 = *(uint64_t **)v319;
      v321 = *(unsigned int *)(v319 + 8);
      v322 = *(uint64_t **)v319;
      if (!(_DWORD)v321)
        goto LABEL_789;
      v323 = 8 * v321;
      v322 = *(uint64_t **)v319;
      while (*(_WORD *)(*v322 + 32) != 468)
      {
        ++v322;
        v323 -= 8;
        if (!v323)
          goto LABEL_792;
      }
LABEL_789:
      if (v322 == &v320[v321])
      {
LABEL_792:
        v439 = 0;
        goto LABEL_793;
      }
      do
      {
        v440 = *v320++;
        v439 = v440;
      }
      while (*(_WORD *)(v440 + 32) != 468);
LABEL_793:
      if (a4 == 2)
      {
        if (!a5)
          goto LABEL_841;
        v363 = a1;
        v364 = v439;
        goto LABEL_820;
      }
      if (!a3)
        goto LABEL_985;
      v349 = sub_22EA81008(a1, a2, v439, a3, a5, a6);
      goto LABEL_823;
    case 0x1D6:
      if (!sub_22E543E38(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_801;
      sub_22EFC8E88(a2);
      v325 = *(uint64_t **)v324;
      v326 = *(unsigned int *)(v324 + 8);
      v327 = *(uint64_t **)v324;
      if (!(_DWORD)v326)
        goto LABEL_798;
      v328 = 8 * v326;
      v327 = *(uint64_t **)v324;
      while (*(_WORD *)(*v327 + 32) != 470)
      {
        ++v327;
        v328 -= 8;
        if (!v328)
          goto LABEL_801;
      }
LABEL_798:
      if (v327 == &v325[v326])
      {
LABEL_801:
        v346 = 0;
        goto LABEL_802;
      }
      do
      {
        v441 = *v325++;
        v346 = v441;
      }
      while (*(_WORD *)(v441 + 32) != 470);
LABEL_802:
      if (a4 == 2)
      {
LABEL_803:
        if (!a5)
          goto LABEL_841;
        v363 = a1;
        v364 = v346;
        goto LABEL_820;
      }
      if (!a3)
        goto LABEL_985;
      v351 = sub_22F3AC76C(a3);
      goto LABEL_736;
    case 0x1D7:
      if (!sub_22F26E334(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_978;
      sub_22EFC8E88(a2);
      v486 = *(uint64_t **)v485;
      v487 = *(unsigned int *)(v485 + 8);
      v488 = *(uint64_t **)v485;
      if (!(_DWORD)v487)
        goto LABEL_975;
      v489 = 8 * v487;
      v488 = *(uint64_t **)v485;
      while (*(_WORD *)(*v488 + 32) != 471)
      {
        ++v488;
        v489 -= 8;
        if (!v489)
          goto LABEL_978;
      }
LABEL_975:
      if (v488 == &v486[v487])
      {
LABEL_978:
        v400 = 0;
        goto LABEL_979;
      }
      do
      {
        v512 = *v486++;
        v400 = v512;
      }
      while (*(_WORD *)(v512 + 32) != 471);
LABEL_979:
      if (!a3)
        goto LABEL_985;
LABEL_980:
      v13 = sub_22E88FFC4(a3);
      if ((v13 & 1) == 0)
      {
LABEL_981:
        if (a5)
          sub_22EA5294C(a1, v400, a3, 0, a6);
      }
LABEL_983:
      if (v13)
        goto LABEL_984;
      goto LABEL_842;
    case 0x1D8:
      if (!sub_22E543E98(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_816;
      sub_22EFC8E88(a2);
      v330 = *(uint64_t **)v329;
      v331 = *(unsigned int *)(v329 + 8);
      v332 = *(uint64_t **)v329;
      if (!(_DWORD)v331)
        goto LABEL_807;
      v333 = 8 * v331;
      v332 = *(uint64_t **)v329;
      while (*(_WORD *)(*v332 + 32) != 472)
      {
        ++v332;
        v333 -= 8;
        if (!v333)
          goto LABEL_816;
      }
LABEL_807:
      if (v332 == &v330[v331])
        goto LABEL_816;
      do
      {
        v442 = *v330++;
        v364 = v442;
      }
      while (*(_WORD *)(v442 + 32) != 472);
      goto LABEL_817;
    case 0x1D9:
      if (!sub_22E543EF8(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_816;
      sub_22EFC8E88(a2);
      v335 = *(uint64_t **)v334;
      v336 = *(unsigned int *)(v334 + 8);
      v337 = *(uint64_t **)v334;
      if (!(_DWORD)v336)
        goto LABEL_810;
      v338 = 8 * v336;
      v337 = *(uint64_t **)v334;
      while (*(_WORD *)(*v337 + 32) != 473)
      {
        ++v337;
        v338 -= 8;
        if (!v338)
          goto LABEL_816;
      }
LABEL_810:
      if (v337 == &v335[v336])
        goto LABEL_816;
      do
      {
        v443 = *v335++;
        v364 = v443;
      }
      while (*(_WORD *)(v443 + 32) != 473);
      goto LABEL_817;
    case 0x1DA:
      if (!sub_22E543F58(a2))
        goto LABEL_841;
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_816;
      sub_22EFC8E88(a2);
      v340 = *(uint64_t **)v339;
      v341 = *(unsigned int *)(v339 + 8);
      v342 = *(uint64_t **)v339;
      if (!(_DWORD)v341)
        goto LABEL_813;
      v343 = 8 * v341;
      v342 = *(uint64_t **)v339;
      while (*(_WORD *)(*v342 + 32) != 474)
      {
        ++v342;
        v343 -= 8;
        if (!v343)
          goto LABEL_816;
      }
LABEL_813:
      if (v342 == &v340[v341])
      {
LABEL_816:
        v364 = 0;
        goto LABEL_817;
      }
      do
      {
        v444 = *v340++;
        v364 = v444;
      }
      while (*(_WORD *)(v444 + 32) != 474);
LABEL_817:
      if (a4 == 2)
      {
LABEL_818:
        if (!a5)
          goto LABEL_841;
        v363 = a1;
        goto LABEL_820;
      }
      if (!a3)
      {
LABEL_985:
        v13 = 1;
        goto LABEL_842;
      }
      v349 = sub_22EA815BC(a1, v364, a3, a5, a6);
LABEL_823:
      if (v349)
        goto LABEL_984;
      goto LABEL_841;
    default:
      goto LABEL_842;
  }
}

BOOL sub_22EA527F0(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  _BOOL8 result;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *i;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  result = sub_22E53B49C(a2);
  if (!result)
    return result;
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_12;
  sub_22EFC8E88(a2);
  v10 = *(uint64_t **)v9;
  v11 = *(unsigned int *)(v9 + 8);
  v12 = *(uint64_t **)v9;
  if ((_DWORD)v11)
  {
    v13 = 8 * v11;
    v12 = *(uint64_t **)v9;
    while (*(_WORD *)(*v12 + 32) != 404)
    {
      ++v12;
      v13 -= 8;
      if (!v13)
        goto LABEL_12;
    }
  }
  if (v12 == &v10[v11])
  {
LABEL_12:
    v14 = 0;
    if (!a3)
      goto LABEL_14;
LABEL_13:
    if (!sub_22E88FFC4(a3))
    {
      if (!a4)
        return 0;
      v21 = a1;
      v22 = v14;
LABEL_26:
      sub_22EA5294C(v21, v22, a3, 0, 0);
      return 0;
    }
    goto LABEL_14;
  }
  do
  {
    v15 = *v10++;
    v14 = v15;
  }
  while (*(_WORD *)(v15 + 32) != 404);
  if (a3)
    goto LABEL_13;
LABEL_14:
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v17 = *(uint64_t **)v16;
    v18 = *(unsigned int *)(v16 + 8);
    i = *(uint64_t **)v16;
    if ((_DWORD)v18)
    {
      v20 = 8 * v18;
      for (i = *(uint64_t **)v16; *(_WORD *)(*i + 32) != 439; ++i)
      {
        v20 -= 8;
        if (!v20)
          return 1;
      }
    }
    if (i != &v17[v18])
    {
      do
      {
        v23 = *v17++;
        v22 = v23;
      }
      while (*(_WORD *)(v23 + 32) != 439);
      if (!a4)
        return 0;
      v21 = a1;
      goto LABEL_26;
    }
  }
  return 1;
}

unsigned int *sub_22EA5294C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  _OWORD *v21;
  unint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v25 = a2;
  v24 = a4;
  if (a5)
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = a1[11] + 2128;
    v10 = (_BYTE *)sub_22E3B8AAC(v9);
    sub_22E4D6448((uint64_t)(v10 + 336), v8, 1);
    if (!v10)
      v10 = (_BYTE *)sub_22E3B8AAC(v9);
    v11 = v10 + 1;
    v12 = *v10;
    v11[v12] = 15;
    *v10 = v12 + 2;
    *(_QWORD *)&v10[8 * v12 + 16] = a2;
    v13 = (v12 + 1);
    v11[v13] = 2;
    *(_QWORD *)&v10[8 * v13 + 16] = a4;
    v20 = v8;
    v23 = 5769;
    v22 = v9;
    v21 = (_OWORD *)sub_22E3B8AAC(v9);
    sub_22E78D4E8(v21, (uint64_t)v10);
    sub_22E8928F4(a5, (unint64_t)&v20);
    if (v21)
    {
      if (v22)
      {
        sub_22E3BB10C(v22, (unint64_t)v21);
        v21 = 0;
      }
    }
    return (unsigned int *)sub_22E3BB10C(v9, (unint64_t)v10);
  }
  else
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0xF10u, 0, (uint64_t)&v20);
    v19 = *(_QWORD *)(a2 + 16);
    v16 = sub_22E8906A0((uint64_t)&v20, &v19);
    v17 = sub_22E8FB3C4(v16, &v25);
    sub_22E8900C4(v17, &v24);
    v18 = sub_22F3AC79C(a3);
    sub_22E89519C(v17, &v18);
    return sub_22E903BEC(&v20);
  }
}

BOOL sub_22EA52ABC(_QWORD *a1, int *a2, uint64_t a3, int a4)
{
  int v8;
  _BOOL8 result;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18[24];

  v8 = sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "imageblock", 10, 1, 0);
  result = 0;
  if (v8)
  {
    if (a3)
    {
      result = sub_22EA1DB60(a3);
      if (!result && a4)
      {
        v10 = *((_QWORD *)a2 + 7);
        if ((v10 & 4) != 0 && (v14 = v10 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v14 + 16)))
          v11 = **(int ***)(v14 + 24);
        else
          v11 = a2 + 16;
        sub_22E8FCA40(a1, *v11, 0xF17u, 0, (uint64_t)v18);
        v17 = *((_QWORD *)a2 + 6);
        v12 = sub_22E8901B8((uint64_t)v18, &v17);
        v16 = sub_22F3AC79C(a3);
        v13 = sub_22E89519C(v12, &v16);
        v15 = (*(uint64_t (**)(int *))(*(_QWORD *)a2 + 16))(a2);
        sub_22E8906A0(v13, &v15);
        sub_22E903BEC(v18);
        return 0;
      }
    }
    else
    {
      return 1;
    }
  }
  return result;
}

BOOL sub_22EA52BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  _BOOL8 result;
  uint64_t v10;
  int v11;
  int v13;
  uint64_t v14;
  BOOL v15;
  int v16;
  BOOL v17;
  int v18;
  uint64_t v19;
  BOOL v20;

  v5 = (uint64_t *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (sub_22F10C8DC(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0)))
  {
LABEL_2:
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v6)
      v7 = *(_DWORD *)(v6 + 16) == 11;
    else
      v7 = 0;
    if (!v7)
      return 0;
    return (*(_DWORD *)(v6 + 16) & 0xFF00000) == 110100480;
  }
  else
  {
    v10 = sub_22E3E4B64(*v5);
    if (v10)
    {
      v11 = *(_DWORD *)(v10 + 20);
      if (v11 != 4 && v11 != 2)
        return 0;
      v5 = (uint64_t *)(*(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0);
    }
    if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 11)
      return 0;
    result = 0;
    v13 = (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) >> 19) & 0x1FF;
    switch(v13)
    {
      case 168:
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 125) & 0x40) == 0)
          return 0;
        goto LABEL_30;
      case 169:
      case 170:
      case 171:
      case 172:
      case 175:
      case 176:
      case 177:
      case 180:
        return result;
      case 173:
      case 174:
LABEL_30:
        v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v19)
          v20 = *(_DWORD *)(v19 + 16) == 11;
        else
          v20 = 0;
        if (!v20)
          return 0;
        v16 = *(_DWORD *)(v19 + 16) & 0xFF80000;
        v17 = v16 == 90701824;
        v18 = 91226112;
        goto LABEL_36;
      case 178:
      case 179:
        if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 125) & 0x40) == 0)
          return 0;
        goto LABEL_21;
      case 181:
      case 182:
LABEL_21:
        v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v14)
          v15 = *(_DWORD *)(v14 + 16) == 11;
        else
          v15 = 0;
        if (!v15)
          return 0;
        v16 = *(_DWORD *)(v14 + 16) & 0xFF80000;
        v17 = v16 == 94896128;
        v18 = 95420416;
LABEL_36:
        v8 = v17 || v16 == v18;
        break;
      default:
        if ((v13 - 210) < 2)
          goto LABEL_2;
        return result;
    }
  }
  return v8;
}

uint64_t sub_22EA52D74(_QWORD *a1, uint64_t a2, unsigned int a3, char a4)
{
  uint64_t v8;
  char v10;
  int *v11;
  char *v12;
  uint64_t v13;
  int v14;
  unsigned int v15[24];
  uint64_t v16;
  _QWORD *v17;
  char v18;
  char *v19;
  uint64_t v20;
  _QWORD v21[33];

  v21[32] = *MEMORY[0x24BDAC8D0];
  if ((sub_22EE8B180(a1, a3) & 1) == 0)
  {
    v16 = a2;
    v17 = a1;
    v18 = a4;
    v19 = (char *)v21;
    v20 = 0x800000000;
    if (sub_22F10DF70(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0))
      && !sub_22EA819E8(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0)))
    {
      sub_22EA823BC((uint64_t)&v17, a2);
      if ((v10 & 1) != 0)
      {
        v8 = 1;
        goto LABEL_8;
      }
      if (v18)
      {
        sub_22E8FCA40(v17, a3, 0xF06u, 0, (uint64_t)v15);
        sub_22E8901B8((uint64_t)v15, &v16);
        sub_22E903BEC(v15);
        if ((_DWORD)v20)
        {
          v11 = (int *)v19;
          v12 = &v19[32 * v20];
          do
          {
            v13 = (uint64_t)(v11 + 2);
            v14 = *v11;
            v11 += 8;
            sub_22E90379C(v17, v14, v13, 0, (uint64_t)v15);
            sub_22E903BEC(v15);
          }
          while (v11 != (int *)v12);
        }
      }
    }
    else if (v18)
    {
      sub_22E8FCA40(v17, a3, 0xF07u, 0, (uint64_t)v15);
      sub_22E903BEC(v15);
    }
    v8 = 0;
LABEL_8:
    sub_22E89277C(&v19);
    return v8;
  }
  return 0;
}

uint64_t sub_22EA52F00(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  char v23;
  uint64_t v24;
  unsigned int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];
  _QWORD v30[6];
  _QWORD v31[2];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  if ((sub_22EE8B180(a1, a3) & 1) != 0)
    return 0;
  v5 = sub_22F10C2A4(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  if (!v5)
    return 0;
  v6 = v5;
  if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 35 > 2 || (*(_DWORD *)(v5 + 28) & 0x80) != 0)
    return 0;
  if ((*(_DWORD *)(v5 + 72) & 0xE000) == 0x4000)
    return 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v5 + 104) + 96), *(_QWORD *)(v5 + 104));
  if (*(_DWORD *)(*(_QWORD *)(v6 + 128) + 16) || !sub_22EFC3B90(v6))
    return 0;
  v27 = *(unsigned int *)(a1[8] + 12);
  v28 = 0;
  v29[0] = 0;
  v29[1] = 0;
  v29[2] = v30;
  v29[3] = 0x400000000;
  v30[4] = v31;
  v30[5] = 0;
  v8 = 1;
  v31[0] = 0;
  v31[1] = 1;
  v44 = 0;
  v45 = &v28;
  v32 = 0u;
  v33 = 0u;
  v34 = 0u;
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v43 = 0u;
  v10 = sub_22EFC3B90(v6);
  if (v10)
  {
    v11 = v10;
    if ((*(_BYTE *)(v10 + 29) & 1) != 0)
    {
      while (2)
      {
        sub_22EFC8E88(v11);
        v13 = *(uint64_t **)v12;
        v14 = *(unsigned int *)(v12 + 8);
        v15 = *(uint64_t **)v12;
        if ((_DWORD)v14)
        {
          v16 = 8 * v14;
          v15 = *(uint64_t **)v12;
          while (*(_WORD *)(*v15 + 32) != 385)
          {
            ++v15;
            v16 -= 8;
            if (!v16)
              goto LABEL_15;
          }
        }
        if (v15 != &v13[v14])
        {
          do
          {
            v18 = *v13++;
            v17 = v18;
          }
          while (*(_WORD *)(v18 + 32) != 385);
          if ((*(_BYTE *)(a1[9] + 126) & 1) != 0 || !sub_22E54AA28(v11))
          {
            LOBYTE(v24) = 0;
            v26 = 0;
            v19 = 0;
            if (!sub_22EA53274(v11))
            {
              sub_22F00905C(*(_QWORD *)(v17 + 40), a1[11], 0, (uint64_t)&v21);
              sub_22E54C490((uint64_t)&v24, (uint64_t)&v21);
              v19 = v26 ? llvm::air::ResourceTracker::set((llvm::air::ResourceTracker *)&v27) ^ 1 : 0;
              if (v23 && v22 >= 0x41 && v21)
                MEMORY[0x2348A0E84](v21, 0x1000C8000313F17);
            }
            if (v26 && v25 >= 0x41 && v24)
              MEMORY[0x2348A0E84](v24, 0x1000C8000313F17);
            if ((v19 & 1) == 0)
            {
              do
              {
                v11 = *(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF8;
                if (!v11)
                {
                  v8 = 1;
                  goto LABEL_43;
                }
                v20 = *(_DWORD *)(v11 + 28);
              }
              while ((v20 & 0x7Fu) - 49 > 2);
              v8 = 0;
              if ((v20 & 0x100) != 0)
                continue;
              goto LABEL_43;
            }
          }
        }
        break;
      }
    }
LABEL_15:
    v8 = 0;
  }
LABEL_43:
  if ((_DWORD)v44)
  {
    sub_22F311EF0((uint64_t)&v32, (void (*)(_QWORD *, _QWORD, uint64_t))sub_22F312154, 0);
    LODWORD(v44) = 0;
    v42 = 0u;
    v43 = 0u;
    v40 = 0u;
    v41 = 0u;
    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
  }
  HIDWORD(v44) = 0;
  v28 = 0;
  sub_22E3B4EF4((uint64_t)v29);
  return v8;
}

BOOL sub_22EA53274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 210)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

BOOL sub_22EA532D4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  _BOOL8 result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (sub_22E54299C(a2) || sub_22F311404(a2) || sub_22F270914(a2) || sub_22E991ED0(a2))
    return 0;
  result = sub_22E88FFC4(a3);
  if (result)
  {
    if ((*(_BYTE *)(a1[9] + 120) & 1) != 0)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      v10 = sub_22E3E4B64(v9);
      if (v10 && (*(_DWORD *)(v10 + 20) - 2) <= 2 && (*(_DWORD *)(v10 + 16) & 0x780000) != 0x80000)
        v9 = *(_QWORD *)(*(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0);
      v11 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v11
        && *(_DWORD *)(v11 + 16) == 11
        && ((*(_DWORD *)(v11 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
        && ((1 << ((*(_DWORD *)(v11 + 16) >> 19) + 83)) & 0x6000000303) != 0)
      {
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          return 1;
        sub_22EFC8E88(a2);
        v15 = *(uint64_t **)v14;
        v16 = *(unsigned int *)(v14 + 8);
        v17 = *(uint64_t **)v14;
        if ((_DWORD)v16)
        {
          v18 = 8 * v16;
          v17 = *(uint64_t **)v14;
          result = 1;
          while (*(_WORD *)(*v17 + 32) != 439)
          {
            ++v17;
            v18 -= 8;
            if (!v18)
              return result;
          }
        }
        if (v17 == &v15[v16])
          return 1;
        do
        {
          v20 = *v15++;
          v19 = v20;
        }
        while (*(_WORD *)(v20 + 32) != 439);
        if (a4)
          sub_22EA5294C(a1, v19, a3, 0, 0);
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_22EA53470(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v10;
  int v11;
  _BOOL8 result;
  uint64_t v13;

  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return 0;
  v10 = *(_QWORD *)(a2 + 48);
  v11 = sub_22F10B8E0(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0), "interpolant", 11, 1, 0);
  result = 0;
  if (!v11)
    return result;
  v13 = sub_22EFBAFDC(a2);
  if (a4)
  {
    if ((sub_22EE8B0B0((uint64_t)a1, v13, v10) & 1) != 0)
      return 0;
  }
  else if ((sub_22EE8B180(a1, v13) & 1) != 0)
  {
    return 0;
  }
  if (!a3)
    return 1;
  result = sub_22E88FFC4(a3);
  if (!result && a4)
  {
    sub_22EA7F22C(a1, (unsigned int *)a2, a3, a5);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5357C(_QWORD *a1, uint64_t a2, unsigned int a3, unint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  char v16;
  _BOOL8 v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t *v25;
  int *v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  llvm *v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  llvm *v39;
  llvm *v40;
  uint64_t v41;
  int v42;
  llvm *v43;
  llvm *v44;
  uint64_t v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52[24];
  unsigned int v53[24];
  uint64_t v54;
  unsigned int v55[24];
  unsigned int v56[24];
  uint64_t v57;
  uint64_t v58;
  void *v59;
  unint64_t v60;
  unint64_t v61;
  llvm *v62;
  unint64_t v63;
  unsigned int v64;
  llvm *v65;
  uint64_t v66;
  unsigned int v67;
  char *v68;
  uint64_t v69;
  _QWORD v70[33];

  v70[32] = *MEMORY[0x24BDAC8D0];
  v58 = a2;
  v6 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v6 + 17) & 4) == 0)
  {
    v10 = sub_22E547D54(v6);
    v11 = sub_22F10C2A4(v10);
    if ((*(_DWORD *)(v11 + 28) & 0x7Fu) - 35 >= 3)
      v12 = 0;
    else
      v12 = v11;
    v13 = *(_QWORD *)(**(_QWORD **)(v12 + 168) + 8);
    v57 = v13;
    v14 = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
    {
      v59 = &unk_24FAB6EF8;
      LODWORD(v60) = 3591;
      if ((sub_22EE8B0B0((uint64_t)a1, a3, v13) & 1) != 0)
        return 0;
      v15 = sub_22F10C6FC(v10);
      v59 = a1;
      LODWORD(v60) = v15;
      v65 = 0;
      v66 = 0;
      v67 = 0;
      v68 = (char *)v70;
      v61 = a4;
      v62 = 0;
      v63 = 0xFFFFFFFF00000000;
      LOWORD(v64) = 0;
      v69 = 0x800000000;
      sub_22EA827FC((uint64_t)&v59, v13, a3);
      if ((v16 & 1) == 0)
      {
        if (a5)
        {
          sub_22E8FCA40(a1, a3, 0xF2Au, 0, (uint64_t)v56);
          sub_22E8901B8((uint64_t)v56, &v57);
          sub_22E903BEC(v56);
          if ((_DWORD)v69)
          {
            v26 = (int *)v68;
            v27 = &v68[32 * v69];
            do
            {
              v28 = (uint64_t)(v26 + 2);
              v29 = *v26;
              v26 += 8;
              sub_22E90379C(a1, v29, v28, 0, (uint64_t)v55);
              sub_22E903BEC(v55);
            }
            while (v26 != (int *)v27);
          }
        }
        sub_22E89277C(&v68);
        v30 = v67;
        v31 = v65;
LABEL_33:
        llvm::deallocate_buffer(v31, (void *)(8 * v30));
        return 0;
      }
      sub_22E89277C(&v68);
      llvm::deallocate_buffer(v65, (void *)(8 * v67));
    }
    else
    {
      v18 = sub_22E3E4B64(v14);
      if (!v18
        || (*(_DWORD *)(v18 + 16) & 0x780000) == 0x80000
        || ((v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v18 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
          ? (v20 = (*(_DWORD *)(v19 + 16) & 0xFF800FF) == 110624779)
          : (v20 = 0),
            !v20 || *(_DWORD *)(v18 + 20) != 4))
      {
        if (!a5)
          return 0;
        sub_22E8FCA40(a1, a3, 0xF2Au, 0, (uint64_t)&v59);
        v25 = &v57;
        goto LABEL_27;
      }
    }
    v21 = sub_22F10C2A4(v10);
    if ((*(_DWORD *)(v21 + 28) & 0x7Fu) - 35 >= 3)
      v22 = 0;
    else
      v22 = v21;
    v23 = *(_QWORD *)(**(_QWORD **)(v22 + 168) + 32);
    v54 = v23;
    if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v23 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                    + 16) == 45)
    {
      v59 = &unk_24FAB6EF8;
      LODWORD(v60) = 3591;
      if ((sub_22EE8B0B0((uint64_t)a1, a3, v23) & 1) == 0)
      {
        v59 = a1;
        v60 = a4;
        v62 = 0;
        v63 = 0;
        v64 = 0;
        v65 = (llvm *)&v67;
        LODWORD(v61) = -1;
        BYTE4(v61) = 0;
        v66 = 0x800000000;
        sub_22EA85840((uint64_t)&v59, v54);
        if ((v24 & 1) != 0)
        {
          sub_22E89277C((char **)&v65);
          llvm::deallocate_buffer(v62, (void *)(8 * v64));
          goto LABEL_37;
        }
        if (a5)
        {
          sub_22E8FCA40(a1, a3, 0xF28u, 0, (uint64_t)v56);
          sub_22E8901B8((uint64_t)v56, &v54);
          sub_22E903BEC(v56);
          if ((_DWORD)v66)
          {
            v43 = v65;
            v44 = (llvm *)((char *)v65 + 32 * v66);
            do
            {
              v45 = (uint64_t)v43 + 8;
              v46 = *(_DWORD *)v43;
              v43 = (llvm *)((char *)v43 + 32);
              sub_22E90379C(a1, v46, v45, 0, (uint64_t)v53);
              sub_22E903BEC(v53);
            }
            while (v43 != v44);
          }
        }
        sub_22E89277C((char **)&v65);
        v30 = v64;
        v31 = v62;
        goto LABEL_33;
      }
      return 0;
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v23 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) & 0xFF800FF) == 0x528000B)
    {
LABEL_37:
      v59 = a1;
      v62 = 0;
      v63 = 0;
      v64 = 0;
      v65 = (llvm *)&v67;
      v60 = 0xFFFFFFFF00000000;
      LODWORD(v61) = 0;
      v66 = 0x800000000;
      v33 = sub_22F10C2A4(v10);
      if ((*(_DWORD *)(v33 + 28) & 0x7Fu) - 35 >= 3)
        v34 = 0;
      else
        v34 = v33;
      v35 = *(_QWORD *)(**(_QWORD **)(v34 + 168) + 8);
      v36 = sub_22F10C2A4(v10);
      if ((*(_DWORD *)(v36 + 28) & 0x7Fu) - 35 >= 3)
        v37 = 0;
      else
        v37 = v36;
      v38 = *(_QWORD *)(**(_QWORD **)(v37 + 168) + 32);
      sub_22EA85F3C(&v59, v35, (uint64_t)&v59);
      sub_22EA85F3C(&v59, v38, (uint64_t)&v59);
      if (v61 > v63)
      {
        sub_22EA85E3C(&v59, v35, 5766);
        sub_22EA85E3C(&v59, v38, 5765);
        if (a5)
        {
          sub_22E8FCA40(a1, a3, 0xF29u, 0, (uint64_t)v56);
          sub_22E8901B8((uint64_t)v56, &v58);
          sub_22E903BEC(v56);
          if ((_DWORD)v66)
          {
            v39 = v65;
            v40 = (llvm *)((char *)v65 + 32 * v66);
            do
            {
              v41 = (uint64_t)v39 + 8;
              v42 = *(_DWORD *)v39;
              v39 = (llvm *)((char *)v39 + 32);
              sub_22E90379C(a1, v42, v41, 0, (uint64_t)v52);
              sub_22E903BEC(v52);
            }
            while (v39 != v40);
          }
        }
        goto LABEL_48;
      }
      if (sub_22F409794(v10) < 0x101)
      {
        v47 = sub_22F409818(v10);
        v48 = *(_DWORD *)(a1[8] + 24);
        v17 = v47 <= v48;
        if (v47 <= v48 || !a5)
          goto LABEL_49;
        sub_22E8FCA40(a1, a3, 0xF29u, 0, (uint64_t)v56);
        sub_22E8901B8((uint64_t)v56, &v58);
        sub_22E903BEC(v56);
        sub_22E8FCA40(a1, a3, 0x1698u, 0, (uint64_t)v56);
        v51 = sub_22F409818(v10);
        v49 = sub_22E89519C((uint64_t)v56, &v51);
        v50 = *(_DWORD *)(a1[8] + 24);
        sub_22E89519C(v49, &v50);
      }
      else
      {
        if (!a5)
        {
LABEL_48:
          v17 = 0;
LABEL_49:
          sub_22E89277C((char **)&v65);
          llvm::deallocate_buffer(v62, (void *)(32 * v64));
          return v17;
        }
        sub_22E8FCA40(a1, a3, 0xF29u, 0, (uint64_t)v56);
        sub_22E8901B8((uint64_t)v56, &v58);
        sub_22E903BEC(v56);
        sub_22E8FCA40(a1, a3, 0x1699u, 0, (uint64_t)v56);
        v51 = sub_22F409794(v10);
        sub_22E89519C((uint64_t)v56, &v51);
      }
      sub_22E903BEC(v56);
      goto LABEL_48;
    }
    if (!a5)
      return 0;
    sub_22E8FCA40(a1, a3, 0xF28u, 0, (uint64_t)&v59);
    v25 = &v54;
LABEL_27:
    sub_22E8901B8((uint64_t)&v59, v25);
    sub_22E903BEC((unsigned int *)&v59);
    return 0;
  }
  return 1;
}

uint64_t sub_22EA53C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int v10;

  v1 = sub_22F10C2A4(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0));
  v2 = v1;
  if (v1)
  {
    if ((*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 > 2)
      return 0;
    if ((*(_DWORD *)(v1 + 72) & 0xE000) == 0x4000)
      return 0;
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v1 + 104) + 96), *(_QWORD *)(v1 + 104));
    if (*(_DWORD *)(*(_QWORD *)(v2 + 128) + 16))
    {
      return 0;
    }
    else
    {
      v4 = sub_22EFC3B90(v2);
      if (v4)
      {
        v5 = v4;
        LODWORD(v2) = 1;
LABEL_9:
        v6 = *(_QWORD *)(*(_QWORD *)(v5 + 48) & 0xFFFFFFFFFFFFFFF0);
        v7 = sub_22E3E4B64(v6);
        if (v7 && (*(_BYTE *)(v7 + 18) & 0x78) == 0)
          v6 = *(_QWORD *)(*(_QWORD *)(v7 + 32) & 0xFFFFFFFFFFFFFFF0);
        v8 = *(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v8)
          v9 = *(_DWORD *)(v8 + 16) == 11;
        else
          v9 = 0;
        if (v9
          && ((*(_DWORD *)(v8 + 16) >> 19) & 0x1FFu) - 166 < 0x2E
          && ((0x30000001B185uLL >> ((*(_DWORD *)(v8 + 16) >> 19) + 90)) & 1) != 0)
        {
          v10 = 1;
        }
        else
        {
          v10 = sub_22EA53C48(*(_QWORD *)(v5 + 48));
        }
        v2 = v2 & v10;
        while (1)
        {
          v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v5)
            break;
          if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 < 3)
            goto LABEL_9;
        }
      }
      else
      {
        return 1;
      }
    }
  }
  return v2;
}

uint64_t sub_22EA53D88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;

  v1 = sub_22F10C2A4(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0));
  v2 = v1;
  if (v1)
  {
    if ((*(_DWORD *)(v1 + 28) & 0x7Fu) - 35 > 2)
      return 0;
    if ((*(_DWORD *)(v1 + 72) & 0xE000) == 0x4000)
      return 0;
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v1 + 104) + 96), *(_QWORD *)(v1 + 104));
    if (*(_DWORD *)(*(_QWORD *)(v2 + 128) + 16))
    {
      return 0;
    }
    else
    {
      v4 = sub_22EFC3B90(v2);
      if (v4)
      {
        v5 = v4;
        LODWORD(v2) = 1;
LABEL_9:
        if (sub_22E536E34(v5))
          goto LABEL_10;
        v7 = *(_QWORD *)(*(_QWORD *)(v5 + 48) & 0xFFFFFFFFFFFFFFF0);
        v8 = sub_22E3E4B64(v7);
        if (v8 && (*(_BYTE *)(v8 + 18) & 0x78) == 0)
          v7 = *(_QWORD *)(*(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFFFF0);
        v9 = *(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0);
        v10 = v9 && *(_DWORD *)(v9 + 16) == 11;
        if (v10
          && ((*(_DWORD *)(v9 + 16) >> 19) & 0x1FFu) - 166 < 0x2E
          && ((0x30000001B185uLL >> ((*(_DWORD *)(v9 + 16) >> 19) + 90)) & 1) != 0)
        {
LABEL_10:
          v6 = 1;
        }
        else
        {
          v6 = sub_22EA53D88(*(_QWORD *)(v5 + 48));
        }
        v2 = v2 & v6;
        while (1)
        {
          v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v5)
            break;
          if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 < 3)
            goto LABEL_9;
        }
      }
      else
      {
        return 1;
      }
    }
  }
  return v2;
}

BOOL sub_22EA53ED4(_QWORD *a1, int *a2, uint64_t a3, int a4)
{
  int v8;
  _BOOL8 result;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18[24];

  v8 = sub_22F10B8E0(*(_QWORD *)(*((_QWORD *)a2 + 6) & 0xFFFFFFFFFFFFFFF0), "mesh_grid_properties", 20, 0, 0);
  result = 0;
  if (v8)
  {
    if (a3)
    {
      result = sub_22EA1DBC0(a3);
      if (!result && a4)
      {
        v10 = *((_QWORD *)a2 + 7);
        if ((v10 & 4) != 0 && (v14 = v10 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v14 + 16)))
          v11 = **(int ***)(v14 + 24);
        else
          v11 = a2 + 16;
        sub_22E8FCA40(a1, *v11, 0xF17u, 0, (uint64_t)v18);
        v17 = *((_QWORD *)a2 + 6);
        v12 = sub_22E8901B8((uint64_t)v18, &v17);
        v16 = sub_22F3AC79C(a3);
        v13 = sub_22E89519C(v12, &v16);
        v15 = (*(uint64_t (**)(int *))(*(_QWORD *)a2 + 16))(a2);
        sub_22E8906A0(v13, &v15);
        sub_22E903BEC(v18);
        return 0;
      }
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_22EA53FF4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return 0;
  v10 = *(_QWORD *)(a2 + 48);
  result = sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "patch_control_point", 19, 1, 3);
  if (!(_DWORD)result)
    return result;
  v12 = sub_22EFBAFDC(a2);
  if (a4)
  {
    if ((sub_22EE8B0B0((uint64_t)a1, v12, v10) & 1) != 0)
      return 0;
  }
  else if ((sub_22EE8B180(a1, v12) & 1) != 0)
  {
    return 0;
  }
  if (!a3)
    return 1;
  result = sub_22E6A2F54(a3);
  if (!(_DWORD)result || (result = sub_22EAA34D4(a3), (result & 1) == 0))
  {
    if (a4)
    {
      sub_22EA7F22C(a1, (unsigned int *)a2, a3, a5);
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EA54118(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v12;

  result = sub_22F10C2A4(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  if (result)
  {
    v4 = result;
    if ((*(_DWORD *)(result + 28) & 0x7Fu) - 35 > 2)
      return 0;
    if ((*(_DWORD *)(result + 72) & 0xE000) == 0x4000)
      return 0;
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(result + 104) + 96), *(_QWORD *)(result + 104));
    if (*(_DWORD *)(*(_QWORD *)(v4 + 128) + 16))
      return 0;
    v5 = sub_22EFC3B90(v4);
    if (!v5)
      return 1;
    v6 = v5;
LABEL_9:
    v7 = *(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0);
    v8 = sub_22E3E4B64(v7);
    if (v8 && (*(_BYTE *)(v8 + 18) & 0x78) == 0)
      v7 = *(_QWORD *)(*(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFFFF0);
    v9 = *(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v9)
      v10 = *(_DWORD *)(v9 + 16) == 11;
    else
      v10 = 0;
    if (v10
      && ((*(_DWORD *)(v9 + 16) >> 19) & 0x1FFu) - 166 <= 0x2D
      && ((1 << ((*(_DWORD *)(v9 + 16) >> 19) + 90)) & 0x30000001B185) != 0)
    {
      if (!sub_22F270914(v6))
        return 0;
LABEL_24:
      while (1)
      {
        v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v6)
          return 1;
        if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
          goto LABEL_9;
      }
    }
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 131) & 1) == 0)
      return 0;
    v12 = *(_QWORD *)(v6 + 48);
    sub_22EFBAFDC(v6);
    result = sub_22EA54118(a1, v12);
    if ((_DWORD)result)
      goto LABEL_24;
  }
  return result;
}

unsigned int *sub_22EA54288(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  _QWORD *v56;
  unsigned __int8 *v57;
  _BYTE *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  void *__p;
  __int16 v75;
  int v76;
  uint64_t v77;
  __int16 v78;
  char v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  int v85;
  char *v86;
  uint64_t v87;
  _QWORD v88[33];

  v88[32] = *MEMORY[0x24BDAC8D0];
  v68 = a4;
  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return 0;
  v10 = a4;
  if (!a4)
  {
    if (!sub_22E475248(a2))
      return 0;
    if ((*(_BYTE *)(a2 + 29) & 1) == 0)
      goto LABEL_33;
    sub_22EFC8E88(a2);
    v25 = *(uint64_t **)v24;
    v26 = *(unsigned int *)(v24 + 8);
    v27 = *(uint64_t **)v24;
    if ((_DWORD)v26)
    {
      v28 = 8 * v26;
      v27 = *(uint64_t **)v24;
      while (*(_WORD *)(*v27 + 32) != 426)
      {
        ++v27;
        v28 -= 8;
        if (!v28)
          goto LABEL_33;
      }
    }
    if (v27 == &v25[v26])
    {
LABEL_33:
      v10 = 0;
    }
    else
    {
      do
      {
        v29 = *v25++;
        v10 = v29;
      }
      while (*(_WORD *)(v29 + 32) != 426);
    }
  }
  if (a3 && !sub_22EFC1D94(a3) && !sub_22E4752A8(a3) && !sub_22EA1DBC0(a3))
  {
    if (a5)
      sub_22EA5294C(a1, v10, a3, 0, 0);
    return 0;
  }
  v11 = *(_QWORD *)(a2 + 48);
  v67 = v11;
  v12 = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 >= 2)
    goto LABEL_17;
  if (a3)
  {
    v13 = sub_22EFC1D94(a3);
    v12 = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0);
    if (v13 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 40)
      goto LABEL_44;
  }
  v14 = sub_22F10ACF8(v12);
  v66 = v14;
  v15 = (_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v16 & 8) == 0)
    goto LABEL_17;
  v17 = v14;
  v18 = *(_DWORD *)((v16 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
  if (v18 != 16)
  {
    if (v18 == 15)
    {
      if (!a3)
        goto LABEL_41;
      if (!sub_22EFC1D94(a3))
      {
LABEL_44:
        if (a5)
          sub_22EA548FC(a1, v11, v10, a3, 0);
        return 0;
      }
      goto LABEL_39;
    }
LABEL_17:
    v19 = 0;
    if (!a4 || !a5)
      return (unsigned int *)v19;
    v20 = *(_QWORD *)(a2 + 56);
    if ((v20 & 4) != 0 && (v45 = v20 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v45 + 16)))
      v21 = **(int ***)(v45 + 24);
    else
      v21 = (int *)(a2 + 64);
    sub_22E8FCA40(a1, *v21, 0xEDDu, 0, (uint64_t)&v83);
    v22 = sub_22E8901B8((uint64_t)&v83, &v67);
    v23 = sub_22E9AEE38(v22, &v68);
    v70 = *(_QWORD *)(a4 + 16);
    sub_22E8906A0(v23, (uint64_t *)&v70);
LABEL_22:
    sub_22E903BEC((unsigned int *)&v83);
    return 0;
  }
  if (!a3)
    goto LABEL_41;
  if (!sub_22EA1DBC0(a3) && !sub_22E4752A8(a3))
    goto LABEL_44;
LABEL_39:
  if (sub_22E4752A8(a3) && !sub_22F10AFE4(v17, a1[11]))
  {
    if (!a5)
      return 0;
    sub_22EA548FC(a1, v11, v10, a3, 0);
    v46 = sub_22EFBAFDC(a2);
    sub_22E8FCA40(a1, v46, 0x16A4u, 0, (uint64_t)&v83);
    v47 = sub_22E8901B8((uint64_t)&v83, &v66);
    LODWORD(v82) = sub_22F3AC79C(a3);
    v48 = sub_22E89519C(v47, (unsigned int *)&v82);
    v49 = sub_22EFBAFDC(a2);
    v72 = 0;
    v73 = 0;
    v70 = v49 | ((unint64_t)v49 << 32);
    v71 = 0;
    v78 = 1536;
    v77 = 0;
    HIBYTE(__p) = 0;
    v75 = 0;
    v76 = 0;
    strcpy((char *)&__p, "const ");
    v79 = 0;
    sub_22E890748(v48, &v70);
    if (SHIBYTE(v78) < 0)
      operator delete(__p);
    goto LABEL_22;
  }
LABEL_41:
  v30 = *v15 & 0xFFFFFFFFFFFFFFF0;
  v31 = sub_22EFBAFDC(a2);
  if (!a5)
  {
    if ((sub_22EE8B180(a1, v31) & 1) == 0)
      goto LABEL_47;
    return 0;
  }
  v83 = &unk_24FAB6EF8;
  LODWORD(v84) = 3591;
  if ((sub_22EE8B0B0((uint64_t)a1, v31, v30) & 1) != 0)
    return 0;
LABEL_47:
  v83 = a1;
  v84 = a3;
  v86 = (char *)v88;
  v87 = 0x800000000;
  v85 = -1;
  sub_22EA86868((uint64_t)&v83, v30);
  if ((v32 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 29) & 1) == 0)
      goto LABEL_70;
    sub_22EFC8E88(a2);
    v34 = *(uint64_t **)v33;
    v35 = *(unsigned int *)(v33 + 8);
    v36 = *(uint64_t **)v33;
    if ((_DWORD)v35)
    {
      v37 = 8 * v35;
      v36 = *(uint64_t **)v33;
      while (*(_WORD *)(*v36 + 32) != 439)
      {
        ++v36;
        v37 -= 8;
        if (!v37)
          goto LABEL_70;
      }
    }
    if (v36 == &v34[v35])
    {
LABEL_70:
      v19 = 1;
      goto LABEL_71;
    }
    do
    {
      v44 = *v34++;
      v43 = v44;
    }
    while (*(_WORD *)(v44 + 32) != 439);
    if (a5)
      sub_22EA5294C(a1, v43, a3, 0, 0);
LABEL_69:
    v19 = 0;
LABEL_71:
    sub_22F244794((void **)&v86);
    return (unsigned int *)v19;
  }
  if (!a5)
    goto LABEL_69;
  v80 = v10;
  v81 = v30;
  if (!v84)
  {
    sub_22E8FCA40(v83, *(_DWORD *)(v10 + 16), 0xEDDu, 0, (uint64_t)&v70);
    v82 = *(_QWORD *)(v10 + 16);
    v38 = sub_22E8906A0((uint64_t)&v70, &v82);
    v39 = sub_22E8901B8(v38, (uint64_t *)&v81);
    sub_22E9AEE38(v39, &v80);
    goto LABEL_57;
  }
  sub_22E8FCA40(v83, *(_DWORD *)(v10 + 16), 0xF1Fu, 0, (uint64_t)&v70);
  v69 = *(_QWORD *)(v10 + 16);
  v50 = sub_22E8906A0((uint64_t)&v70, &v69);
  v51 = sub_22E8901B8(v50, (uint64_t *)&v81);
  if (*(_BYTE *)(sub_22E9AEE38(v51, &v80) + 80))
  {
    v59 = *(unsigned __int8 **)(v51 + 32);
    if (!v59)
    {
      v59 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v51 + 40));
      *(_QWORD *)(v51 + 32) = v59;
    }
    v59[*v59 + 1] = 2;
    v58 = *(_BYTE **)(v51 + 32);
    goto LABEL_86;
  }
  if (*(_BYTE *)(v51 + 92))
  {
    v52 = (uint64_t *)(*(_QWORD *)v51 + 12784);
    v53 = *(_QWORD *)(v51 + 16);
    if (v53)
      v53 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v53 + 32))(v53);
    v82 = v53;
    v54 = sub_22F2F1D6C(v52, &v82)[1] + 32 * *(unsigned int *)(v51 + 88);
    v57 = *(unsigned __int8 **)(v54 + 8);
    v56 = (_QWORD *)(v54 + 8);
    v55 = v57;
    if (!v57)
    {
      v55 = (unsigned __int8 *)sub_22E3B8AAC(v56[1]);
      *v56 = v55;
    }
    v55[*v55 + 1] = 2;
    v58 = (_BYTE *)*v56;
LABEL_86:
    v60 = *v58;
    *v58 = v60 + 1;
    *(_QWORD *)&v58[8 * v60 + 16] = 0;
  }
  LODWORD(v82) = sub_22F3AC79C(v84);
  sub_22E89519C(v51, (unsigned int *)&v82);
LABEL_57:
  sub_22E903BEC((unsigned int *)&v70);
  if (!(_DWORD)v87)
    goto LABEL_69;
  v40 = 32 * v87;
  v41 = v86 + 24;
  while (*v41)
  {
    (*(void (**)(_QWORD))(*(_QWORD *)*v41 + 48))(*v41);
    v41 += 4;
    v40 -= 32;
    if (!v40)
      goto LABEL_69;
  }
  sub_22E4A06C4();
  return sub_22EA548FC(v61, v62, v63, v64, v65);
}

unsigned int *sub_22EA548FC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  _OWORD *v23;
  unint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v28 = a2;
  v26 = 0;
  if (a5)
  {
    v8 = *(_QWORD *)(a3 + 16);
    v9 = a1[11] + 2128;
    v10 = (_BYTE *)sub_22E3B8AAC(v9);
    sub_22E4D6448((uint64_t)(v10 + 336), v8, 1);
    if (!v10)
      v10 = (_BYTE *)sub_22E3B8AAC(v9);
    v11 = v10 + 1;
    v12 = *v10;
    v11[v12] = 9;
    *v10 = v12 + 3;
    *(_QWORD *)&v10[8 * v12 + 16] = a2;
    v13 = (v12 + 1);
    v11[v13] = 15;
    *(_QWORD *)&v10[8 * v13 + 16] = a3;
    v14 = (v12 + 2);
    v11[v14] = 2;
    *(_QWORD *)&v10[8 * v14 + 16] = 0;
    v22 = v8;
    v25 = 5778;
    v24 = v9;
    v23 = (_OWORD *)sub_22E3B8AAC(v9);
    sub_22E78D4E8(v23, (uint64_t)v10);
    sub_22E8928F4(a5, (unint64_t)&v22);
    if (v23)
    {
      if (v24)
      {
        sub_22E3BB10C(v24, (unint64_t)v23);
        v23 = 0;
      }
    }
    return (unsigned int *)sub_22E3BB10C(v9, (unint64_t)v10);
  }
  else
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xF1Fu, 0, (uint64_t)&v22);
    v21 = *(_QWORD *)(a3 + 16);
    v17 = sub_22E8906A0((uint64_t)&v22, &v21);
    v18 = sub_22E8901B8(v17, &v28);
    v19 = sub_22E8FB3C4(v18, &v27);
    sub_22E8900C4(v19, &v26);
    v20 = sub_22F3AC79C(a4);
    sub_22E89519C(v19, &v20);
    return sub_22E903BEC(&v22);
  }
}

uint64_t sub_22EA54A84(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  unsigned int v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int *v68;
  unsigned int v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned __int8 *v82;
  _QWORD *v83;
  unsigned __int8 *v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unsigned int v93;
  _OWORD *v94;
  unint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;

  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return 0;
  v12 = *(_QWORD *)(a2 + 48);
  v97 = v12;
  if (a3 && !sub_22E88FFC4(a3) && !sub_22EA1DB60(a3) && !sub_22E4752A8(a3) && !sub_22EA1DBC0(a3) && !sub_22E6A2F54(a3))
  {
    if (a5)
      sub_22EA7F22C(a1, (unsigned int *)a2, a3, a6);
    return 0;
  }
  v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFF0);
  if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) == 0)
  {
    v19 = sub_22E5453EC(*v13);
    if (!v19
      || ((v20 = sub_22F10C2A4(v19), (*(_DWORD *)(v20 + 28) & 0x7Fu) - 35 >= 3) ? (v21 = 0) : (v21 = v20),
          !sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v21 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0)|| (*(_BYTE *)(a1[9] + 122) & 8) == 0))
    {
      v22 = sub_22E5457C4(*v13);
      if (!v22
        || ((v23 = sub_22F10C2A4(v22), (*(_DWORD *)(v23 + 28) & 0x7Fu) - 35 >= 3) ? (v24 = 0) : (v24 = v23),
            !sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v24 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0)|| (*(_BYTE *)(a1[9] + 122) & 0x40) == 0))
      {
        if (a5)
        {
          if (a6)
          {
            v25 = *(_QWORD *)(a2 + 56);
            if ((v25 & 4) != 0 && (v78 = v25 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v78 + 16)))
              v26 = **(unsigned int ***)(v78 + 24);
            else
              v26 = (unsigned int *)(a2 + 64);
            v27 = *v26;
            v28 = a1[11] + 2128;
            v29 = (_BYTE *)sub_22E3B8AAC(v28);
            v30 = *v29;
            v29[v30 + 1] = 9;
            *v29 = v30 + 1;
            *(_QWORD *)&v29[8 * v30 + 16] = v12;
            v31 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
            sub_22E4D6448((uint64_t)(v29 + 336), v31, 1);
            v93 = v27;
            v32 = 5773;
            goto LABEL_54;
          }
          v56 = *(_QWORD *)(a2 + 56);
          if ((v56 & 4) != 0 && (v86 = v56 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v86 + 16)))
            v57 = **(int ***)(v86 + 24);
          else
            v57 = (int *)(a2 + 64);
          sub_22E8FCA40(a1, *v57, 0xEDDu, 0, (uint64_t)&v93);
          v58 = sub_22E8901B8((uint64_t)&v93, &v97);
          v59 = v58;
          if (*(_BYTE *)(v58 + 80))
          {
            v60 = *(unsigned __int8 **)(v58 + 32);
            if (!v60)
            {
              v60 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v59 + 40));
              *(_QWORD *)(v59 + 32) = v60;
            }
            v60[*v60 + 1] = 15;
            v61 = *(_BYTE **)(v59 + 32);
          }
          else
          {
            if (!*(_BYTE *)(v58 + 92))
              goto LABEL_79;
            v79 = (uint64_t *)(*(_QWORD *)v58 + 12784);
            v80 = *(_QWORD *)(v58 + 16);
            if (v80)
              v80 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v80 + 32))(v80);
            v98 = v80;
            v81 = sub_22F2F1D6C(v79, &v98)[1] + 32 * *(unsigned int *)(v59 + 88);
            v84 = *(unsigned __int8 **)(v81 + 8);
            v83 = (_QWORD *)(v81 + 8);
            v82 = v84;
            if (!v84)
            {
              v82 = (unsigned __int8 *)sub_22E3B8AAC(v83[1]);
              *v83 = v82;
            }
            v82[*v82 + 1] = 15;
            v61 = (_BYTE *)*v83;
          }
          v62 = *v61;
          *v61 = v62 + 1;
          *(_QWORD *)&v61[8 * v62 + 16] = a4;
LABEL_79:
          v98 = *(_QWORD *)(a4 + 16);
LABEL_80:
          sub_22E8906A0(v59, &v98);
          sub_22E903BEC(&v93);
        }
        return 0;
      }
    }
  }
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_36;
  sub_22EFC8E88(a2);
  v15 = *(uint64_t **)v14;
  v16 = *(unsigned int *)(v14 + 8);
  v17 = *(uint64_t **)v14;
  if ((_DWORD)v16)
  {
    v18 = 8 * v16;
    v17 = *(uint64_t **)v14;
    while (*(_WORD *)(*v17 + 32) != 373)
    {
      ++v17;
      v18 -= 8;
      if (!v18)
        goto LABEL_36;
    }
  }
  if (v17 == &v15[v16])
  {
LABEL_36:
    if (a4)
      goto LABEL_37;
    v40 = sub_22E5457C4(*v13);
    if (v40)
    {
      v41 = sub_22F10C2A4(v40);
      v42 = (*(_DWORD *)(v41 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v41;
      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v42 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0))
      {
        if (!a5)
          return 0;
        if (a6)
        {
          v43 = *(_QWORD *)(a2 + 56);
          if ((v43 & 4) != 0 && (v85 = v43 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v85 + 16)))
            v44 = **(unsigned int ***)(v85 + 24);
          else
            v44 = (unsigned int *)(a2 + 64);
          v45 = *v44;
          v28 = a1[11] + 2128;
          v29 = (_BYTE *)sub_22E3B8AAC(v28);
          v46 = v29 + 1;
          v47 = *v29;
          v46[v47] = 9;
          *v29 = v47 + 2;
          *(_QWORD *)&v29[8 * v47 + 16] = v12;
          v48 = (v47 + 1);
          v46[v48] = 1;
          *(_QWORD *)&v29[8 * v48 + 16] = "array_ref_size";
          v49 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          sub_22E4D6448((uint64_t)(v29 + 336), v49, 1);
          v93 = v45;
          v32 = 5768;
          goto LABEL_54;
        }
        v74 = *(_QWORD *)(a2 + 56);
        if ((v74 & 4) != 0 && (v87 = v74 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v87 + 16)))
          v75 = **(int ***)(v87 + 24);
        else
          v75 = (int *)(a2 + 64);
        sub_22E8FCA40(a1, *v75, 0xF08u, 0, (uint64_t)&v93);
        v76 = sub_22E8901B8((uint64_t)&v93, &v97);
        v77 = sub_22F2F30F4(v76, (uint64_t)"array_ref_size");
LABEL_101:
        v59 = v77;
        v98 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
        goto LABEL_80;
      }
    }
    v33 = 0;
  }
  else
  {
    do
    {
      v34 = *v15++;
      v33 = v34;
    }
    while (*(_WORD *)(v34 + 32) != 373);
    if (a4)
      goto LABEL_37;
  }
  if (!sub_22F312474(a2))
  {
    v64 = sub_22E5457C4(*v13);
    if (v64)
    {
      v65 = sub_22F10C2A4(v64);
      v66 = (*(_DWORD *)(v65 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v65;
      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v66 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0)&& (sub_22F0085E8(*(_QWORD *)(v33 + 40), a1[11], 0) & 1) == 0)
      {
        if (!a5)
          return 0;
        if (a6)
        {
          v67 = *(_QWORD *)(a2 + 56);
          if ((v67 & 4) != 0 && (v91 = v67 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v91 + 16)))
            v68 = **(unsigned int ***)(v91 + 24);
          else
            v68 = (unsigned int *)(a2 + 64);
          v69 = *v68;
          v28 = a1[11] + 2128;
          v29 = (_BYTE *)sub_22E3B8AAC(v28);
          v70 = v29 + 1;
          v71 = *v29;
          v70[v71] = 9;
          *v29 = v71 + 2;
          *(_QWORD *)&v29[8 * v71 + 16] = v12;
          v72 = (v71 + 1);
          v70[v72] = 1;
          *(_QWORD *)&v29[8 * v72 + 16] = "sampler";
          v73 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          sub_22E4D6448((uint64_t)(v29 + 336), v73, 1);
          v93 = v69;
          v32 = 5722;
LABEL_54:
          v96 = v32;
          v95 = v28;
          v94 = (_OWORD *)sub_22E3B8AAC(v28);
          sub_22E78D4E8(v94, (uint64_t)v29);
          sub_22E8928F4(a6, (unint64_t)&v93);
          if (v94 && v95)
          {
            sub_22E3BB10C(v95, (unint64_t)v94);
            v94 = 0;
          }
          sub_22E3BB10C(v28, (unint64_t)v29);
          return 0;
        }
        v88 = *(_QWORD *)(a2 + 56);
        if ((v88 & 4) != 0 && (v92 = v88 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v92 + 16)))
          v89 = **(int ***)(v92 + 24);
        else
          v89 = (int *)(a2 + 64);
        sub_22E8FCA40(a1, *v89, 0xED0u, 0, (uint64_t)&v93);
        v90 = sub_22E8901B8((uint64_t)&v93, &v97);
        v77 = sub_22F2F30F4(v90, (uint64_t)"sampler");
        goto LABEL_101;
      }
    }
  }
LABEL_37:
  if (a3 && (*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v36 = *(uint64_t **)v35;
    v37 = *(unsigned int *)(v35 + 8);
    v38 = *(uint64_t **)v35;
    if ((_DWORD)v37)
    {
      v39 = 8 * v37;
      v38 = *(uint64_t **)v35;
      while (*(_WORD *)(*v38 + 32) != 439)
      {
        ++v38;
        v39 -= 8;
        if (!v39)
          goto LABEL_62;
      }
    }
    if (v38 != &v36[v37])
    {
      do
      {
        v51 = *v36++;
        v50 = v51;
      }
      while (*(_WORD *)(v51 + 32) != 439);
      if (a5)
        sub_22EA5294C(a1, v50, a3, 0, a6);
      return 0;
    }
  }
LABEL_62:
  if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v13 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0) & 1) != 0)
    return 14;
  v53 = sub_22E5457C4(*v13);
  v52 = 13;
  if (v53)
  {
    v54 = sub_22F10C2A4(v53);
    if ((*(_DWORD *)(v54 + 28) & 0x7Fu) - 35 >= 3)
      v55 = 0;
    else
      v55 = v54;
    if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v55 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0))return 15;
    else
      return 13;
  }
  return v52;
}

uint64_t sub_22EA552EC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  llvm *v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD v28[33];

  v28[32] = *MEMORY[0x24BDAC8D0];
  if (a4)
  {
    v9 = a4;
  }
  else
  {
    if (!sub_22E991ED0(a2))
      return 0;
    if ((*(_BYTE *)(a2 + 29) & 1) == 0)
      goto LABEL_26;
    sub_22EFC8E88(a2);
    v13 = *(uint64_t **)v12;
    v14 = *(unsigned int *)(v12 + 8);
    v15 = *(uint64_t **)v12;
    if ((_DWORD)v14)
    {
      v16 = 8 * v14;
      v15 = *(uint64_t **)v12;
      while (*(_WORD *)(*v15 + 32) != 449)
      {
        ++v15;
        v16 -= 8;
        if (!v16)
          goto LABEL_26;
      }
    }
    if (v15 == &v13[v14])
    {
LABEL_26:
      v9 = 0;
    }
    else
    {
      do
      {
        v19 = *v13++;
        v9 = v19;
      }
      while (*(_WORD *)(v19 + 32) != 449);
    }
  }
  if (!a3 || sub_22E88FFC4(a3) || sub_22E6A2F54(a3) || (*(_BYTE *)(a1[9] + 131) & 0x10) != 0 && sub_22EA1DB60(a3))
  {
    v10 = *(_QWORD *)(a2 + 48);
    v11 = sub_22EFBAFDC(a2);
    if (a5)
    {
      v20 = &unk_24FAB6EF8;
      LODWORD(v21) = 3591;
      if ((sub_22EE8B0B0((uint64_t)a1, v11, v10) & 1) != 0)
        return 0;
LABEL_19:
      v20 = a1;
      v21 = a3;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = v28;
      v27 = 0x800000000;
      v22 = 0xFFFFFFFFLL;
      sub_22EA87948((uint64_t)&v20, v10);
      __asm { BR              X10 }
    }
    if ((sub_22EE8B180(a1, v11) & 1) == 0)
      goto LABEL_19;
  }
  else if (a5)
  {
    sub_22EA5294C(a1, v9, a3, 0, 0);
  }
  return 0;
}

unint64_t sub_22EA557D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v1 = a1;
  v2 = sub_22E3E4B64(a1);
  if (v2 && (*(_BYTE *)(v2 + 18) & 0x78) == 0)
    v1 = *(_QWORD *)(*(_QWORD *)(v2 + 32) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v3)
    v4 = *(_DWORD *)(v3 + 16) == 11;
  else
    v4 = 0;
  if (v4 && ((*(_DWORD *)(v3 + 16) >> 19) & 0x1FFu) - 166 <= 0x2D)
    return (0x30000001B185uLL >> ((*(_DWORD *)(v3 + 16) >> 19) + 90)) & 1;
  else
    return 0;
}

uint64_t sub_22EA55860(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  char *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int v34[24];
  uint64_t v35;
  unsigned int v36;
  uint64_t v37[12];
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  char *v42;
  uint64_t v43;
  _QWORD v44[33];

  v44[32] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a2 + 28) & 0x80) == 0)
  {
    v8 = *(_QWORD *)(a2 + 48);
    v38 = v8;
    if (sub_22F10DF70(*(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0)))
    {
      if (!sub_22E991ED0(a2) && !sub_22E53B49C(a2))
      {
        v10 = sub_22EFBAFDC(a2);
        if (a4)
        {
          v39 = &unk_24FAB6EF8;
          LODWORD(v40) = 3591;
          if ((sub_22EE8B0B0((uint64_t)a1, v10, v8) & 1) != 0)
            return 0;
        }
        else if ((sub_22EE8B180(a1, v10) & 1) != 0)
        {
          return 0;
        }
        if (!a3
          || sub_22E88FFC4(a3)
          || sub_22EFC1D94(a3)
          || sub_22EA1DB60(a3)
          || sub_22E4752A8(a3)
          || sub_22EA1DBC0(a3)
          || sub_22E6A2F54(a3))
        {
          v39 = a1;
          v40 = a3;
          v42 = (char *)v44;
          v43 = 0x800000000;
          v41 = -1;
          v11 = *(_QWORD *)(*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (*(_BYTE *)(v11 + 16) == 45)
          {
            v12 = (char *)&loc_22EA55A28 + 4 * byte_22F46A5FE[sub_22EA882C0(&v39, v11)];
            __asm { BR              X10 }
          }
          if (a4)
          {
            v20 = *(_QWORD *)(a2 + 56);
            if ((v20 & 4) != 0 && (v32 = v20 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v32 + 16)))
              v21 = **(int ***)(v32 + 24);
            else
              v21 = (int *)(a2 + 64);
            sub_22E8FCA40(a1, *v21, 0xF17u, 0, (uint64_t)v37);
            v22 = sub_22E8901B8((uint64_t)v37, &v38);
            v36 = sub_22F3AC79C(a3);
            v23 = sub_22E89519C(v22, &v36);
            v35 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
            sub_22E8906A0(v23, &v35);
            sub_22E903BEC((unsigned int *)v37);
            if ((_DWORD)v43)
            {
              v24 = (int *)v42;
              v25 = &v42[32 * v43];
              do
              {
                v26 = (uint64_t)(v24 + 2);
                v27 = *v24;
                v24 += 8;
                sub_22E90379C(a1, v27, v26, 0, (uint64_t)v34);
                sub_22E903BEC(v34);
              }
              while (v24 != (int *)v25);
            }
          }
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v14 = *(uint64_t **)v13;
            v15 = *(unsigned int *)(v13 + 8);
            v16 = *(uint64_t **)v13;
            if ((_DWORD)v15)
            {
              v17 = 8 * v15;
              v16 = *(uint64_t **)v13;
              while (*(_WORD *)(*v16 + 32) != 439)
              {
                ++v16;
                v17 -= 8;
                if (!v17)
                  goto LABEL_30;
              }
            }
            if (v16 != &v14[v15])
            {
              do
              {
                v19 = *v14++;
                v18 = v19;
              }
              while (*(_WORD *)(v19 + 32) != 439);
              if (a4)
                sub_22EA5294C(a1, v18, a3, 0, 0);
            }
          }
LABEL_30:
          sub_22E89277C(&v42);
        }
        else if (a4)
        {
          v28 = *(_QWORD *)(a2 + 56);
          if ((v28 & 4) != 0 && (v33 = v28 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v33 + 16)))
            v29 = **(int ***)(v33 + 24);
          else
            v29 = (int *)(a2 + 64);
          sub_22E8FCA40(a1, *v29, 0xF17u, 0, (uint64_t)&v39);
          v30 = sub_22E8901B8((uint64_t)&v39, &v38);
          LODWORD(v35) = sub_22F3AC79C(a3);
          v31 = sub_22E89519C(v30, (unsigned int *)&v35);
          v37[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          sub_22E8906A0(v31, v37);
          sub_22E903BEC((unsigned int *)&v39);
        }
      }
    }
  }
  return 0;
}

uint64_t sub_22EA55C38(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  unsigned int v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int *v43;
  unsigned int v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int *v61;
  unsigned int v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BOOL4 v69;
  uint64_t v70;
  unsigned int *v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 *v99;
  _QWORD *v100;
  unsigned __int8 *v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  _OWORD *v116;
  unint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;

  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return 0;
  v12 = *(_QWORD *)(a2 + 48);
  v119 = v12;
  if (a3 && !sub_22E88FFC4(a3) && !sub_22EA1DB60(a3) && !sub_22E4752A8(a3) && !sub_22EA1DBC0(a3) && !sub_22E6A2F54(a3))
  {
    if (a5)
      sub_22EA7F22C(a1, (unsigned int *)a2, a3, a6);
    return 0;
  }
  v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFF0);
  if ((sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0)
  {
    v19 = sub_22E5453EC(*v13);
    if (!v19
      || ((v20 = sub_22F10C2A4(v19), (*(_DWORD *)(v20 + 28) & 0x7Fu) - 35 >= 3) ? (v21 = 0) : (v21 = v20),
          !sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v21 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                             + 8) & 0xFFFFFFFFFFFFFFF0))
       || (*(_BYTE *)(a1[9] + 122) & 0x10) == 0))
    {
      v22 = sub_22E5457C4(*v13);
      if (!v22
        || ((v23 = sub_22F10C2A4(v22), (*(_DWORD *)(v23 + 28) & 0x7Fu) - 35 >= 3) ? (v24 = 0) : (v24 = v23),
            !sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v24 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                               + 8) & 0xFFFFFFFFFFFFFFF0))
         || (*(_BYTE *)(a1[9] + 122) & 0x80) == 0))
      {
        if (a5)
        {
          if (a6)
          {
            v25 = *(_QWORD *)(a2 + 56);
            if ((v25 & 4) != 0 && (v95 = v25 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v95 + 16)))
              v26 = **(unsigned int ***)(v95 + 24);
            else
              v26 = (unsigned int *)(a2 + 64);
            v27 = *v26;
            v28 = a1[11] + 2128;
            v29 = (_BYTE *)sub_22E3B8AAC(v28);
            v30 = *v29;
            v29[v30 + 1] = 9;
            *v29 = v30 + 1;
            *(_QWORD *)&v29[8 * v30 + 16] = v12;
            v31 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
            sub_22E4D6448((uint64_t)(v29 + 336), v31, 1);
            v115 = v27;
            v32 = 5773;
            goto LABEL_95;
          }
          v49 = *(_QWORD *)(a2 + 56);
          if ((v49 & 4) != 0 && (v103 = v49 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v103 + 16)))
            v50 = **(int ***)(v103 + 24);
          else
            v50 = (int *)(a2 + 64);
          sub_22E8FCA40(a1, *v50, 0xEDDu, 0, (uint64_t)&v115);
          v51 = sub_22E8901B8((uint64_t)&v115, &v119);
          v52 = v51;
          if (*(_BYTE *)(v51 + 80))
          {
            v53 = *(unsigned __int8 **)(v51 + 32);
            if (!v53)
            {
              v53 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v52 + 40));
              *(_QWORD *)(v52 + 32) = v53;
            }
            v53[*v53 + 1] = 15;
            v54 = *(_BYTE **)(v52 + 32);
          }
          else
          {
            if (!*(_BYTE *)(v51 + 92))
              goto LABEL_59;
            v96 = (uint64_t *)(*(_QWORD *)v51 + 12784);
            v97 = *(_QWORD *)(v51 + 16);
            if (v97)
              v97 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v97 + 32))(v97);
            v120 = v97;
            v98 = sub_22F2F1D6C(v96, &v120)[1] + 32 * *(unsigned int *)(v52 + 88);
            v101 = *(unsigned __int8 **)(v98 + 8);
            v100 = (_QWORD *)(v98 + 8);
            v99 = v101;
            if (!v101)
            {
              v99 = (unsigned __int8 *)sub_22E3B8AAC(v100[1]);
              *v100 = v99;
            }
            v99[*v99 + 1] = 15;
            v54 = (_BYTE *)*v100;
          }
          v55 = *v54;
          *v54 = v55 + 1;
          *(_QWORD *)&v54[8 * v55 + 16] = a4;
LABEL_59:
          v120 = *(_QWORD *)(a4 + 16);
          v56 = v52;
LABEL_60:
          sub_22E8906A0(v56, &v120);
          sub_22E903BEC(&v115);
        }
        return 0;
      }
    }
  }
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_36;
  sub_22EFC8E88(a2);
  v15 = *(uint64_t **)v14;
  v16 = *(unsigned int *)(v14 + 8);
  v17 = *(uint64_t **)v14;
  if ((_DWORD)v16)
  {
    v18 = 8 * v16;
    v17 = *(uint64_t **)v14;
    while (*(_WORD *)(*v17 + 32) != 373)
    {
      ++v17;
      v18 -= 8;
      if (!v18)
        goto LABEL_36;
    }
  }
  if (v17 == &v15[v16])
  {
LABEL_36:
    if (a4)
      goto LABEL_37;
    v39 = sub_22E5457C4(*v13);
    if (v39)
    {
      v40 = sub_22F10C2A4(v39);
      v41 = (*(_DWORD *)(v40 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v40;
      if (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v41 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                             + 8) & 0xFFFFFFFFFFFFFFF0)))
      {
        if (!a5)
          return 0;
        if (a6)
        {
          v42 = *(_QWORD *)(a2 + 56);
          if ((v42 & 4) != 0 && (v102 = v42 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v102 + 16)))
            v43 = **(unsigned int ***)(v102 + 24);
          else
            v43 = (unsigned int *)(a2 + 64);
          v44 = *v43;
          v28 = a1[11] + 2128;
          v29 = (_BYTE *)sub_22E3B8AAC(v28);
          v45 = v29 + 1;
          v46 = *v29;
          v45[v46] = 9;
          *v29 = v46 + 2;
          *(_QWORD *)&v29[8 * v46 + 16] = v12;
          v47 = (v46 + 1);
          v45[v47] = 1;
          *(_QWORD *)&v29[8 * v47 + 16] = "array_ref_size";
          v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          sub_22E4D6448((uint64_t)(v29 + 336), v48, 1);
          v115 = v44;
          v32 = 5768;
          goto LABEL_95;
        }
        v86 = *(_QWORD *)(a2 + 56);
        if ((v86 & 4) != 0 && (v105 = v86 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v105 + 16)))
          v87 = **(int ***)(v105 + 24);
        else
          v87 = (int *)(a2 + 64);
        sub_22E8FCA40(a1, *v87, 0xF08u, 0, (uint64_t)&v115);
        v88 = sub_22E8901B8((uint64_t)&v115, &v119);
        v89 = sub_22F2F30F4(v88, (uint64_t)"array_ref_size");
LABEL_123:
        v94 = v89;
        v120 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
        v56 = v94;
        goto LABEL_60;
      }
    }
    v33 = 0;
  }
  else
  {
    do
    {
      v34 = *v15++;
      v33 = v34;
    }
    while (*(_WORD *)(v34 + 32) != 373);
    if (a4)
      goto LABEL_37;
  }
  if (!sub_22F3124D8(a2))
  {
    v57 = sub_22E5457C4(*v13);
    if (v57)
    {
      v58 = sub_22F10C2A4(v57);
      v59 = (*(_DWORD *)(v58 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v58;
      if (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v59 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                             + 8) & 0xFFFFFFFFFFFFFFF0))
        && (sub_22F0085E8(*(_QWORD *)(v33 + 40), a1[11], 0) & 1) == 0)
      {
        if (!a5)
          return 0;
        if (a6)
        {
          v60 = *(_QWORD *)(a2 + 56);
          if ((v60 & 4) != 0 && (v110 = v60 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v110 + 16)))
            v61 = **(unsigned int ***)(v110 + 24);
          else
            v61 = (unsigned int *)(a2 + 64);
          v62 = *v61;
          v28 = a1[11] + 2128;
          v29 = (_BYTE *)sub_22E3B8AAC(v28);
          v63 = v29 + 1;
          v64 = *v29;
          v63[v64] = 9;
          *v29 = v64 + 2;
          *(_QWORD *)&v29[8 * v64 + 16] = v12;
          v65 = (v64 + 1);
          v63[v65] = 1;
          *(_QWORD *)&v29[8 * v65 + 16] = "texture";
          v66 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
          sub_22E4D6448((uint64_t)(v29 + 336), v66, 1);
          v115 = v62;
          v32 = 5722;
LABEL_95:
          v118 = v32;
          v117 = v28;
          v116 = (_OWORD *)sub_22E3B8AAC(v28);
          sub_22E78D4E8(v116, (uint64_t)v29);
          sub_22E8928F4(a6, (unint64_t)&v115);
          if (v116 && v117)
          {
            sub_22E3BB10C(v117, (unint64_t)v116);
            v116 = 0;
          }
          sub_22E3BB10C(v28, (unint64_t)v29);
          return 0;
        }
        v106 = *(_QWORD *)(a2 + 56);
        if ((v106 & 4) != 0 && (v111 = v106 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v111 + 16)))
          v107 = **(int ***)(v111 + 24);
        else
          v107 = (int *)(a2 + 64);
        sub_22E8FCA40(a1, *v107, 0xED0u, 0, (uint64_t)&v115);
        v108 = sub_22E8901B8((uint64_t)&v115, &v119);
        v89 = sub_22F2F30F4(v108, (uint64_t)"texture");
        goto LABEL_123;
      }
    }
  }
LABEL_37:
  v35 = *v13;
  v36 = sub_22E53C624(*v13);
  if (!v36)
  {
    v37 = sub_22E5453EC(v35);
    if (!v37)
    {
      v37 = sub_22E5457C4(v35);
      if (!v37)
      {
        v38 = 0;
        goto LABEL_81;
      }
    }
    v67 = sub_22F10C2A4(v37);
    if ((*(_DWORD *)(v67 + 28) & 0x7Fu) - 35 >= 3)
      v68 = 0;
    else
      v68 = v67;
    v36 = sub_22E53C624(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v68 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
  }
  v38 = v36;
LABEL_81:
  if (sub_22F10C9BC(v38) == 2)
  {
    v69 = 1;
    if (!a3)
    {
LABEL_100:
      if (!a3)
        goto LABEL_112;
      goto LABEL_101;
    }
  }
  else
  {
    v69 = sub_22F10C9BC(v38) == 3;
    if (!a3)
      goto LABEL_100;
  }
  if (!v69)
    goto LABEL_100;
  if (sub_22E6A2F54(a3) && (*(_BYTE *)(a1[9] + 131) & 0x80) == 0
    || sub_22E88FFC4(a3) && (*(_BYTE *)(a1[9] + 131) & 0x40) == 0)
  {
    if (!a5)
      return 0;
    if (a6)
    {
      v70 = *(_QWORD *)(a2 + 56);
      if ((v70 & 4) != 0 && (v104 = v70 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v104 + 16)))
        v71 = **(unsigned int ***)(v104 + 24);
      else
        v71 = (unsigned int *)(a2 + 64);
      v72 = *v71;
      v28 = a1[11] + 2128;
      v73 = sub_22F10C9BC(v38);
      v29 = (_BYTE *)sub_22E3B8AAC(v28);
      v74 = *v29;
      v29[v74 + 1] = 3;
      *v29 = v74 + 1;
      *(_QWORD *)&v29[8 * v74 + 16] = v73;
      v75 = sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0);
      v76 = *v29;
      v29[v76 + 1] = 3;
      *v29 = v76 + 1;
      *(_QWORD *)&v29[8 * v76 + 16] = v75;
      v77 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
      sub_22E4D6448((uint64_t)(v29 + 336), v77, 1);
      v115 = v72;
      v32 = 5810;
      goto LABEL_95;
    }
    v90 = *(_QWORD *)(a2 + 56);
    if ((v90 & 4) != 0 && (v109 = v90 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v109 + 16)))
      v91 = **(int ***)(v109 + 24);
    else
      v91 = (int *)(a2 + 64);
    sub_22E8FCA40(a1, *v91, 0xF3Cu, 0, (uint64_t)&v115);
    v114 = sub_22F10C9BC(v38);
    v92 = sub_22E89519C((uint64_t)&v115, &v114);
    v113 = sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0);
    v93 = sub_22E89519C(v92, &v113);
    v112 = sub_22F3AC79C(a3);
    v89 = sub_22E89519C(v93, &v112);
    goto LABEL_123;
  }
LABEL_101:
  if (!sub_22E88FFC4(a3) && (*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v80 = *(uint64_t **)v79;
    v81 = *(unsigned int *)(v79 + 8);
    v82 = *(uint64_t **)v79;
    if ((_DWORD)v81)
    {
      v83 = 8 * v81;
      v82 = *(uint64_t **)v79;
      while (*(_WORD *)(*v82 + 32) != 439)
      {
        ++v82;
        v83 -= 8;
        if (!v83)
          goto LABEL_112;
      }
    }
    if (v82 != &v80[v81])
    {
      do
      {
        v85 = *v80++;
        v84 = v85;
      }
      while (*(_WORD *)(v85 + 32) != 439);
      if (a5)
        sub_22EA5294C(a1, v84, a3, 0, a6);
      return 0;
    }
  }
LABEL_112:
  if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v13 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0) & 1) != 0)
    return 11;
  if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v13 + 8) & 0xFFFFFFFFFFFFFFF0), "array_ref", 9, 1, 0))
    return 12;
  return 10;
}

void sub_22EA56684(_QWORD *a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  _QWORD *v31;
  unsigned __int8 *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t *i;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 *v113;
  _QWORD *v114;
  unsigned __int8 *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  unsigned __int8 *v122;
  _QWORD *v123;
  unsigned __int8 *v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  unsigned __int8 *v131;
  _QWORD *v132;
  unsigned __int8 *v133;
  _BYTE *v134;
  unsigned __int8 *v135;
  uint64_t v136;
  uint64_t v137;
  unsigned __int8 *v138;
  uint64_t v139;
  uint64_t v140;
  unsigned __int8 *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  unsigned __int8 *v147;
  _QWORD *v148;
  unsigned __int8 *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  unsigned __int8 *v153;
  _QWORD *v154;
  unsigned __int8 *v155;
  uint64_t v156;
  uint64_t *v157;
  unsigned int v158;
  char v159;
  unsigned int v160;
  uint64_t v161;
  unsigned int v162;
  char v163;
  uint64_t v164;
  unsigned int v165;
  char v166;
  uint64_t v167;
  unsigned int v168;
  char v169;

  v4 = *(_DWORD *)(a2 + 28);
  if ((v4 & 0x80) != 0)
    goto LABEL_122;
  if ((v4 & 0x100) != 0)
  {
    sub_22EFC8E88(a2);
    v6 = *(uint64_t **)v5;
    v7 = *(unsigned int *)(v5 + 8);
    v8 = *(uint64_t **)v5;
    if ((_DWORD)v7)
    {
      v9 = 8 * v7;
      v8 = *(uint64_t **)v5;
      while (*(_WORD *)(*v8 + 32) != 378)
      {
        ++v8;
        v9 -= 8;
        if (!v9)
          goto LABEL_64;
      }
    }
    if (v8 != &v6[v7])
    {
      do
      {
        v11 = *v6++;
        v10 = v11;
      }
      while (*(_WORD *)(v11 + 32) != 378);
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        v13.n128_f64[0] = sub_22EFC8E88(a2);
        v14 = *(uint64_t **)v12;
        v15 = *(unsigned int *)(v12 + 8);
        v16 = *(uint64_t **)v12;
        if ((_DWORD)v15)
        {
          v17 = 8 * v15;
          v16 = *(uint64_t **)v12;
          while (*(_WORD *)(*v16 + 32) != 385)
          {
            ++v16;
            v17 -= 8;
            if (!v17)
              goto LABEL_28;
          }
        }
        if (v16 != &v14[v15])
        {
          do
          {
            v19 = *v14++;
            v18 = v19;
          }
          while (*(_WORD *)(v19 + 32) != 385);
          v20 = *(_QWORD *)(v18 + 40);
          v21 = *(_QWORD *)(v10 + 40);
          LOBYTE(v157) = 0;
          v159 = 0;
          LOBYTE(v164) = 0;
          v166 = 0;
          if ((*(_BYTE *)(v20 + 2) & 1) == 0)
          {
            if ((*(_BYTE *)(v21 + 2) & 1) == 0)
            {
              sub_22F00905C(v20, a1[11], 0, (uint64_t)&v167);
              sub_22E54C490((uint64_t)&v157, (uint64_t)&v167);
              if (v159)
              {
                sub_22F00905C(v21, a1[11], 0, (uint64_t)&v161);
                sub_22E54C490((uint64_t)&v164, (uint64_t)&v161);
                if (!v166)
                  goto LABEL_35;
                v22 = (uint64_t *)&v157;
                if (v158 >= 0x41)
                  v22 = v157;
                if (*v22)
                {
                  v23 = &v164;
                  if (v165 >= 0x41)
                    v23 = (uint64_t *)v164;
                  v24 = *v23 != 0;
                }
                else
                {
LABEL_35:
                  v24 = 0;
                }
                if (v163 && v162 >= 0x41 && v161)
                  MEMORY[0x2348A0E84](v161, 0x1000C8000313F17);
              }
              else
              {
                v24 = 0;
              }
              if (v169 && v168 >= 0x41 && v167)
                MEMORY[0x2348A0E84](v167, 0x1000C8000313F17);
              if (v24)
              {
                sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0xF12u, 0, (uint64_t)&v167);
                v161 = *(_QWORD *)(v10 + 16);
                v34 = sub_22E8906A0((uint64_t)&v167, &v161);
                v35 = &v164;
                if (v165 >= 0x41)
                  v35 = (uint64_t *)v164;
                LODWORD(v156) = *v35;
                v36 = sub_22E89519C(v34, (unsigned int *)&v156);
                v37 = (uint64_t *)&v157;
                if (v158 >= 0x41)
                  v37 = v157;
                v160 = *v37;
                sub_22E89519C(v36, &v160);
                sub_22E903BEC((unsigned int *)&v167);
                sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x169Fu, 0, (uint64_t)&v167);
                sub_22E903BEC((unsigned int *)&v167);
                sub_22EFC77E8(a2, 1);
              }
            }
            if (v166 && v165 >= 0x41 && v164)
              MEMORY[0x2348A0E84](v164, 0x1000C8000313F17, v13);
          }
          if (v159 && v158 >= 0x41 && v157)
            MEMORY[0x2348A0E84](v157, 0x1000C8000313F17, v13);
          goto LABEL_64;
        }
      }
LABEL_28:
      sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0xEDFu, 0, (uint64_t)&v167);
      v164 = *(_QWORD *)(v10 + 16);
      v25 = sub_22E8906A0((uint64_t)&v167, &v164);
      v26 = v25;
      if (*(_BYTE *)(v25 + 80))
      {
        v38 = *(unsigned __int8 **)(v25 + 32);
        if (!v38)
        {
          v38 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v26 + 40));
          *(_QWORD *)(v26 + 32) = v38;
        }
        v38[*v38 + 1] = 15;
        v33 = *(_BYTE **)(v26 + 32);
      }
      else
      {
        if (!*(_BYTE *)(v25 + 92))
        {
LABEL_63:
          LODWORD(v157) = 1;
          v40 = sub_22E8900C4(v26, (int *)&v157);
          sub_22F2F30F4(v40, (uint64_t)"'color'");
          sub_22E903BEC((unsigned int *)&v167);
          sub_22EFC77E8(a2, 1);
          goto LABEL_64;
        }
        v27 = (uint64_t *)(*(_QWORD *)v25 + 12784);
        v28 = *(_QWORD *)(v25 + 16);
        if (v28)
          v28 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v28 + 32))(v28);
        v157 = (uint64_t *)v28;
        v29 = sub_22F2F1D6C(v27, (uint64_t *)&v157)[1] + 32 * *(unsigned int *)(v26 + 88);
        v32 = *(unsigned __int8 **)(v29 + 8);
        v31 = (_QWORD *)(v29 + 8);
        v30 = v32;
        if (!v32)
        {
          v30 = (unsigned __int8 *)sub_22E3B8AAC(v31[1]);
          *v31 = v30;
        }
        v30[*v30 + 1] = 15;
        v33 = (_BYTE *)*v31;
      }
      v39 = *v33;
      *v33 = v39 + 1;
      *(_QWORD *)&v33[8 * v39 + 16] = v10;
      goto LABEL_63;
    }
  }
LABEL_64:
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v42 = *(uint64_t **)v41;
    v43 = *(unsigned int *)(v41 + 8);
    v44 = *(uint64_t **)v41;
    if ((_DWORD)v43)
    {
      v45 = 8 * v43;
      v44 = *(uint64_t **)v41;
      while (*(_WORD *)(*v44 + 32) != 431)
      {
        ++v44;
        v45 -= 8;
        if (!v45)
          goto LABEL_74;
      }
    }
    if (v44 != &v42[v43])
    {
      do
      {
        v47 = *v42++;
        v46 = v47;
      }
      while (*(_WORD *)(v47 + 32) != 431);
      v48 = sub_22EA88CB8(a2);
      v161 = v48;
      if (v48)
      {
        v49 = v48;
        if (*(_WORD *)(v48 + 32) != 380)
        {
          sub_22E8FCA40(a1, *(_DWORD *)(v46 + 16), 0xB34u, 0, (uint64_t)&v157);
          v156 = *(_QWORD *)(v46 + 16);
          v126 = sub_22E8906A0((uint64_t)&v157, &v156);
          v127 = v126;
          if (*(_BYTE *)(v126 + 80))
          {
            v141 = *(unsigned __int8 **)(v126 + 32);
            if (!v141)
            {
              v141 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v127 + 40));
              *(_QWORD *)(v127 + 32) = v141;
            }
            v141[*v141 + 1] = 15;
            v134 = *(_BYTE **)(v127 + 32);
          }
          else
          {
            if (!*(_BYTE *)(v126 + 92))
            {
LABEL_180:
              sub_22E9AEE38(v127, &v161);
              sub_22E903BEC((unsigned int *)&v157);
              sub_22E8FCA40(a1, *(_DWORD *)(v49 + 16), 0x1610u, 0, (uint64_t)&v157);
              v164 = *(_QWORD *)(v49 + 16);
              v143 = sub_22E8906A0((uint64_t)&v157, &v164);
              sub_22F2F30F4(v143, (uint64_t)"'center_no_perspective'");
              sub_22E903BEC((unsigned int *)&v157);
              sub_22EFC77E8(a2, 1);
              goto LABEL_74;
            }
            v128 = (uint64_t *)(*(_QWORD *)v126 + 12784);
            v129 = *(_QWORD *)(v126 + 16);
            if (v129)
              v129 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v129 + 32))(v129);
            v164 = v129;
            v130 = sub_22F2F1D6C(v128, &v164)[1] + 32 * *(unsigned int *)(v127 + 88);
            v133 = *(unsigned __int8 **)(v130 + 8);
            v132 = (_QWORD *)(v130 + 8);
            v131 = v133;
            if (!v133)
            {
              v131 = (unsigned __int8 *)sub_22E3B8AAC(v132[1]);
              *v132 = v131;
            }
            v131[*v131 + 1] = 15;
            v134 = (_BYTE *)*v132;
          }
          v142 = *v134;
          *v134 = v142 + 1;
          *(_QWORD *)&v134[8 * v142 + 16] = v46;
          goto LABEL_180;
        }
      }
    }
  }
LABEL_74:
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v51 = *(uint64_t **)v50;
    v52 = *(unsigned int *)(v50 + 8);
    v53 = *(uint64_t **)v50;
    if ((_DWORD)v52)
    {
      v54 = 8 * v52;
      v53 = *(uint64_t **)v50;
      while (*(_WORD *)(*v53 + 32) != 433)
      {
        ++v53;
        v54 -= 8;
        if (!v54)
          goto LABEL_83;
      }
    }
    if (v53 != &v51[v52])
    {
      do
      {
        v56 = *v51++;
        v55 = v56;
      }
      while (*(_WORD *)(v56 + 32) != 433);
      if (!sub_22E53B678(a2))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v55 + 16), 0xEDFu, 0, (uint64_t)&v157);
        v161 = *(_QWORD *)(v55 + 16);
        v108 = sub_22E8906A0((uint64_t)&v157, &v161);
        v109 = v108;
        if (*(_BYTE *)(v108 + 80))
        {
          v135 = *(unsigned __int8 **)(v108 + 32);
          if (!v135)
          {
            v135 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v109 + 40));
            *(_QWORD *)(v109 + 32) = v135;
          }
          v135[*v135 + 1] = 15;
          v116 = *(_BYTE **)(v109 + 32);
        }
        else
        {
          if (!*(_BYTE *)(v108 + 92))
          {
LABEL_170:
            LODWORD(v164) = 1;
            v137 = sub_22E8900C4(v109, (int *)&v164);
            sub_22F2F30F4(v137, (uint64_t)"'sample_mask'");
            sub_22E903BEC((unsigned int *)&v157);
            sub_22EFC77E8(a2, 1);
            goto LABEL_83;
          }
          v110 = (uint64_t *)(*(_QWORD *)v108 + 12784);
          v111 = *(_QWORD *)(v108 + 16);
          if (v111)
            v111 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v111 + 32))(v111);
          v164 = v111;
          v112 = sub_22F2F1D6C(v110, &v164)[1] + 32 * *(unsigned int *)(v109 + 88);
          v115 = *(unsigned __int8 **)(v112 + 8);
          v114 = (_QWORD *)(v112 + 8);
          v113 = v115;
          if (!v115)
          {
            v113 = (unsigned __int8 *)sub_22E3B8AAC(v114[1]);
            *v114 = v113;
          }
          v113[*v113 + 1] = 15;
          v116 = (_BYTE *)*v114;
        }
        v136 = *v116;
        *v116 = v136 + 1;
        *(_QWORD *)&v116[8 * v136 + 16] = v55;
        goto LABEL_170;
      }
    }
  }
LABEL_83:
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v58 = *(uint64_t **)v57;
    v59 = *(unsigned int *)(v57 + 8);
    v60 = *(uint64_t **)v57;
    if ((_DWORD)v59)
    {
      v61 = 8 * v59;
      v60 = *(uint64_t **)v57;
      while (*(_WORD *)(*v60 + 32) != 408)
      {
        ++v60;
        v61 -= 8;
        if (!v61)
          goto LABEL_92;
      }
    }
    if (v60 != &v58[v59])
    {
      do
      {
        v63 = *v58++;
        v62 = v63;
      }
      while (*(_WORD *)(v63 + 32) != 408);
      if (!sub_22E53748C(a2))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v62 + 16), 0xEDFu, 0, (uint64_t)&v157);
        v161 = *(_QWORD *)(v62 + 16);
        v117 = sub_22E8906A0((uint64_t)&v157, &v161);
        v118 = v117;
        if (*(_BYTE *)(v117 + 80))
        {
          v138 = *(unsigned __int8 **)(v117 + 32);
          if (!v138)
          {
            v138 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v118 + 40));
            *(_QWORD *)(v118 + 32) = v138;
          }
          v138[*v138 + 1] = 15;
          v125 = *(_BYTE **)(v118 + 32);
        }
        else
        {
          if (!*(_BYTE *)(v117 + 92))
          {
LABEL_175:
            LODWORD(v164) = 1;
            v140 = sub_22E8900C4(v118, (int *)&v164);
            sub_22F2F30F4(v140, (uint64_t)"'position'");
            sub_22E903BEC((unsigned int *)&v157);
            sub_22EFC77E8(a2, 1);
            goto LABEL_92;
          }
          v119 = (uint64_t *)(*(_QWORD *)v117 + 12784);
          v120 = *(_QWORD *)(v117 + 16);
          if (v120)
            v120 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v120 + 32))(v120);
          v164 = v120;
          v121 = sub_22F2F1D6C(v119, &v164)[1] + 32 * *(unsigned int *)(v118 + 88);
          v124 = *(unsigned __int8 **)(v121 + 8);
          v123 = (_QWORD *)(v121 + 8);
          v122 = v124;
          if (!v124)
          {
            v122 = (unsigned __int8 *)sub_22E3B8AAC(v123[1]);
            *v123 = v122;
          }
          v122[*v122 + 1] = 15;
          v125 = (_BYTE *)*v123;
        }
        v139 = *v125;
        *v125 = v139 + 1;
        *(_QWORD *)&v125[8 * v139 + 16] = v62;
        goto LABEL_175;
      }
    }
  }
LABEL_92:
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_109;
  sub_22EFC8E88(a2);
  v65 = *(uint64_t **)v64;
  v66 = *(unsigned int *)(v64 + 8);
  v67 = *(uint64_t **)v64;
  if ((_DWORD)v66)
  {
    v68 = 8 * v66;
    v67 = *(uint64_t **)v64;
    while (*(_WORD *)(*v67 + 32) != 375)
    {
      ++v67;
      v68 -= 8;
      if (!v68)
        goto LABEL_109;
    }
  }
  if (v67 == &v65[v66])
    goto LABEL_109;
  do
  {
    v70 = *v65++;
    v69 = v70;
  }
  while (*(_WORD *)(v70 + 32) != 375);
  v71 = sub_22EA88CB8(a2);
  v161 = v71;
  if (!v71 || (*(_WORD *)(v71 + 32) & 0xFFFE) == 0x17C)
    goto LABEL_109;
  sub_22E8FCA40(a1, *(_DWORD *)(v69 + 16), 0xB34u, 0, (uint64_t)&v157);
  v156 = *(_QWORD *)(v69 + 16);
  v72 = sub_22E8906A0((uint64_t)&v157, &v156);
  v73 = v72;
  if (*(_BYTE *)(v72 + 80))
  {
    v74 = *(unsigned __int8 **)(v72 + 32);
    if (!v74)
    {
      v74 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v73 + 40));
      *(_QWORD *)(v73 + 32) = v74;
    }
    v74[*v74 + 1] = 15;
    v75 = *(_BYTE **)(v73 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v72 + 92))
      goto LABEL_108;
    v150 = (uint64_t *)(*(_QWORD *)v72 + 12784);
    v151 = *(_QWORD *)(v72 + 16);
    if (v151)
      v151 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v151 + 32))(v151);
    v164 = v151;
    v152 = sub_22F2F1D6C(v150, &v164)[1] + 32 * *(unsigned int *)(v73 + 88);
    v155 = *(unsigned __int8 **)(v152 + 8);
    v154 = (_QWORD *)(v152 + 8);
    v153 = v155;
    if (!v155)
    {
      v153 = (unsigned __int8 *)sub_22E3B8AAC(v154[1]);
      *v154 = v153;
    }
    v153[*v153 + 1] = 15;
    v75 = (_BYTE *)*v154;
  }
  v76 = *v75;
  *v75 = v76 + 1;
  *(_QWORD *)&v75[8 * v76 + 16] = v69;
LABEL_108:
  sub_22E9AEE38(v73, &v161);
  sub_22E903BEC((unsigned int *)&v157);
  sub_22EFC77E8(a2, 1);
LABEL_109:
  v77 = sub_22EA88CB8(a2);
  v164 = v77;
  if (v77)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
    {
      v104 = v77;
      if (!sub_22F26EC68(a2))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v104 + 16), 0xEDFu, 0, (uint64_t)&v157);
        v161 = *(_QWORD *)(v104 + 16);
        v105 = sub_22E8906A0((uint64_t)&v157, &v161);
        v106 = sub_22E9AEE38(v105, &v164);
        LODWORD(v156) = 1;
        v107 = sub_22E8900C4(v106, (int *)&v156);
        sub_22F2F30F4(v107, (uint64_t)"'barycentric_coord'");
        sub_22E903BEC((unsigned int *)&v157);
        sub_22EFC77E8(a2, 1);
      }
    }
  }
  v78 = sub_22E9AEF2C(a2);
  v164 = v78;
  v4 = *(_DWORD *)(a2 + 28);
  if (v78)
  {
    if ((v4 & 0x100) != 0)
    {
      v79 = v78;
      sub_22EFC8E88(a2);
      v81 = *(uint64_t **)v80;
      v82 = *(unsigned int *)(v80 + 8);
      v83 = *(uint64_t **)v80;
      if ((_DWORD)v82)
      {
        v84 = 8 * v82;
        v83 = *(uint64_t **)v80;
        while (*(_WORD *)(*v83 + 32) != 379)
        {
          ++v83;
          v84 -= 8;
          if (!v84)
            goto LABEL_121;
        }
      }
      if (v83 != &v81[v82])
      {
        do
        {
          v86 = *v81++;
          v85 = v86;
        }
        while (*(_WORD *)(v86 + 32) != 379);
        v161 = v85;
        sub_22E8FCA40(a1, *(_DWORD *)(v79 + 16), 0xB34u, 0, (uint64_t)&v157);
        v156 = *(_QWORD *)(v79 + 16);
        v87 = sub_22E8906A0((uint64_t)&v157, &v156);
        v88 = sub_22E8FB3C4(v87, &v164);
        sub_22E9AEE38(v88, &v161);
        sub_22E903BEC((unsigned int *)&v157);
        sub_22EFC77E8(a2, 1);
      }
    }
LABEL_121:
    v4 = *(_DWORD *)(a2 + 28);
  }
LABEL_122:
  if ((v4 & 0x180) == 0x100)
  {
    sub_22EFC8E88(a2);
    v90 = *(uint64_t **)v89;
    v91 = *(unsigned int *)(v89 + 8);
    i = *(uint64_t **)v89;
    if ((_DWORD)v91)
    {
      v93 = 8 * v91;
      for (i = *(uint64_t **)v89; *(_WORD *)(*i + 32) != 403; ++i)
      {
        v93 -= 8;
        if (!v93)
          return;
      }
    }
    if (i != &v90[v91])
    {
      do
      {
        v95 = *v90++;
        v94 = v95;
      }
      while (*(_WORD *)(v95 + 32) != 403);
      if (!sub_22E53B49C(a2))
      {
        v164 = *(_QWORD *)(a2 + 48);
        v96 = *(_QWORD *)(v164 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v96 + 17) & 4) == 0)
        {
          v97 = sub_22E545730(v96);
          if (!v97 || (sub_22F40929C(v97, 0) & 1) == 0)
          {
            sub_22E8FCA40(a1, *(_DWORD *)(v94 + 16), 0xEDDu, 0, (uint64_t)&v167);
            v161 = *(_QWORD *)(v94 + 16);
            v98 = sub_22E8906A0((uint64_t)&v167, &v161);
            v99 = sub_22E8901B8(v98, &v164);
            v100 = v99;
            if (*(_BYTE *)(v99 + 80))
            {
              v101 = *(unsigned __int8 **)(v99 + 32);
              if (!v101)
              {
                v101 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v100 + 40));
                *(_QWORD *)(v100 + 32) = v101;
              }
              v101[*v101 + 1] = 15;
              v102 = *(_BYTE **)(v100 + 32);
            }
            else
            {
              if (!*(_BYTE *)(v99 + 92))
                goto LABEL_139;
              v144 = (uint64_t *)(*(_QWORD *)v99 + 12784);
              v145 = *(_QWORD *)(v99 + 16);
              if (v145)
                v145 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v145 + 32))(v145);
              v157 = (uint64_t *)v145;
              v146 = sub_22F2F1D6C(v144, (uint64_t *)&v157)[1] + 32 * *(unsigned int *)(v100 + 88);
              v149 = *(unsigned __int8 **)(v146 + 8);
              v148 = (_QWORD *)(v146 + 8);
              v147 = v149;
              if (!v149)
              {
                v147 = (unsigned __int8 *)sub_22E3B8AAC(v148[1]);
                *v148 = v147;
              }
              v147[*v147 + 1] = 15;
              v102 = (_BYTE *)*v148;
            }
            v103 = *v102;
            *v102 = v103 + 1;
            *(_QWORD *)&v102[8 * v103 + 16] = v94;
LABEL_139:
            sub_22E903BEC((unsigned int *)&v167);
            sub_22EFC77E8(a2, 1);
          }
        }
      }
    }
  }
}

uint64_t sub_22EA57460(_QWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v22;
  int v23;
  uint64_t v24;
  char *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  char *v34;
  uint64_t v35;
  int v36;
  unsigned int v37[25];
  unsigned int v38;
  unsigned int v39[24];
  uint64_t v40;
  void *v41;
  uint64_t v42;
  unsigned int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  llvm *v48;
  uint64_t v49;
  unsigned int v50;
  llvm *v51[2];
  unsigned int v52;
  llvm *v53[2];
  unsigned int v54;
  void *v55;
  uint64_t v56;
  _BYTE v57[24];
  void *v58;
  uint64_t v59;
  _BYTE v60[16];
  _QWORD **v61;
  _QWORD *v62;
  uint64_t v63;
  llvm *v64;
  uint64_t v65;
  unsigned int v66;
  char *v67;
  uint64_t v68;
  _QWORD v69[34];

  v69[32] = *MEMORY[0x24BDAC8D0];
  v40 = a2;
  if (!sub_22E88FFC4(a4)
    && !sub_22EA1DB60(a4)
    && !sub_22E4752A8(a4)
    && !sub_22EA1DBC0(a4)
    && !sub_22E6A2F54(a4)
    && !sub_22EFC1D94(a4))
  {
    return 1;
  }
  v8 = (uint64_t *)(a2 & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
    v10 = (*(_DWORD *)(v9 + 16) & 0xFF800FF) == 86507531;
  else
    v10 = 0;
  if (v10)
  {
    if (sub_22EFC1D94(a4))
    {
      v23 = a3;
      v22 = a1;
      goto LABEL_46;
    }
    return 1;
  }
  v11 = a3;
  v41 = &unk_24FAB6EF8;
  LODWORD(v42) = 3591;
  if ((sub_22EE8B0B0((uint64_t)a1, a3, a2) & 1) != 0)
    return 0;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 45)
  {
    if (sub_22E88FFC4(a4))
    {
      v12 = *v8;
      v13 = sub_22E3E4B64(*v8);
      if (v13 && (*(_DWORD *)(v13 + 20) - 2) <= 2 && (*(_DWORD *)(v13 + 16) & 0x780000) != 0x80000)
        v12 = *(_QWORD *)(*(_QWORD *)(v13 + 32) & 0xFFFFFFFFFFFFFFF0);
      v14 = *(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v14)
        v15 = *(_DWORD *)(v14 + 16) == 11;
      else
        v15 = 0;
      if (!v15
        || ((*(_DWORD *)(v14 + 16) >> 19) & 0x1FFu) - 173 >= 0x27
        || ((0x6000000303uLL >> ((*(_DWORD *)(v14 + 16) >> 19) + 83)) & 1) == 0)
      {
        goto LABEL_44;
      }
      return 1;
    }
    if (sub_22E6A2F54(a4))
    {
      v17 = sub_22E3E4B64(*v8);
      if (!v17
        || (*(_DWORD *)(v17 + 16) & 0x780000) == 0x80000
        || ((v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v17 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
          ? (v19 = (*(_DWORD *)(v18 + 16) & 0xFF800FF) == 110624779)
          : (v19 = 0),
            !v19 || *(_DWORD *)(v17 + 20) != 4))
      {
LABEL_44:
        v22 = a1;
        v23 = a3;
LABEL_46:
        sub_22E8FCA40(v22, v23, 0xF1Au, 0, (uint64_t)&v41);
        v24 = sub_22E8901B8((uint64_t)&v41, &v40);
        v39[0] = sub_22F3AC79C(a4);
        sub_22E89519C(v24, v39);
        sub_22E903BEC((unsigned int *)&v41);
        return 0;
      }
    }
    else
    {
      if (!sub_22EFC1E78(a4) && !sub_22EFC1EFC(a4))
        goto LABEL_44;
      v20 = *(_QWORD *)(*(_QWORD *)(*v8 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (!v20 || (*(_DWORD *)(v20 + 16) & 0xFF800FF) != 87031819)
        goto LABEL_44;
    }
    return 1;
  }
  v41 = a1;
  v42 = a4;
  v49 = 0;
  v50 = 0;
  v51[0] = 0;
  v51[1] = 0;
  v52 = 0;
  v53[0] = 0;
  v53[1] = 0;
  v54 = 0;
  v55 = v57;
  v56 = 0x100000000;
  v58 = v60;
  v59 = 0x300000000;
  v61 = &v62;
  v62 = 0;
  v64 = 0;
  v65 = 0;
  v63 = 0;
  v66 = 0;
  v67 = (char *)v69;
  v68 = 0x800000000;
  v43 = a3;
  v44 = -1;
  v45 = 0;
  v46 = 0;
  *(_QWORD *)((char *)v47 + 5) = 0;
  v48 = 0;
  v47[0] = 0;
  sub_22F326F94((uint64_t)v51);
  sub_22F326FE8((uint64_t)v53);
  LODWORD(v56) = 0;
  LODWORD(v59) = 0;
  sub_22E3B4AB8((uint64_t)&v61, v62);
  v62 = 0;
  v63 = 0;
  v61 = &v62;
  if ((_DWORD)v68)
  {
    v26 = v67;
    v27 = 32 * v68;
    do
    {
      v28 = &v26[v27];
      v29 = *(_QWORD *)&v26[v27 - 24];
      if (v29)
      {
        v30 = *((_QWORD *)v28 - 2);
        if (v30)
        {
          sub_22E3BB10C(v30, v29);
          *((_QWORD *)v28 - 3) = 0;
        }
      }
      v27 -= 32;
    }
    while (v27);
  }
  LODWORD(v68) = 0;
  sub_22EA88D10((uint64_t)&v41, a2);
  v16 = v31;
  if ((v31 & 1) == 0)
  {
    sub_22E8FCA40(a1, v11, 0xF1Au, 0, (uint64_t)v39);
    v32 = sub_22E8901B8((uint64_t)v39, &v40);
    v38 = sub_22F3AC79C(a4);
    sub_22E89519C(v32, &v38);
    sub_22E903BEC(v39);
    if ((_DWORD)v68)
    {
      v33 = (int *)v67;
      v34 = &v67[32 * v68];
      do
      {
        v35 = (uint64_t)(v33 + 2);
        v36 = *v33;
        v33 += 8;
        sub_22E90379C(a1, v36, v35, 0, (uint64_t)v37);
        sub_22E903BEC(v37);
      }
      while (v33 != (int *)v34);
    }
  }
  sub_22E89277C(&v67);
  llvm::deallocate_buffer(v64, (void *)(32 * v66));
  sub_22E3B4AB8((uint64_t)&v61, v62);
  if (v58 != v60)
    free(v58);
  if (v55 != v57)
    free(v55);
  llvm::deallocate_buffer(v53[0], (void *)(24 * v54));
  llvm::deallocate_buffer(v51[0], (void *)(12 * v52));
  llvm::deallocate_buffer(v48, (void *)(8 * v50));
  return v16;
}

uint64_t sub_22EA57988(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  int v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  void *v28;
  _QWORD *v29;
  _QWORD *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  void *__p;
  _BYTE *v37;
  void *v38;
  _BYTE *v39;
  _BYTE v40[96];
  _BYTE v41[96];
  unsigned int v42[24];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a3;
  v6 = *(_QWORD *)(a2 + 144) & 6;
  v7 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
  if (v6 != 4 || v7 == 0)
  {
    v9 = v6 != 2 || v7 == 0;
    v10 = a2;
    if (v9)
      goto LABEL_11;
    v19 = (_QWORD *)(*(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8);
  }
  else
  {
    v19 = (_QWORD *)(v7 + 16);
  }
  v10 = a2;
  if ((*v19 & 6) == 2)
  {
    v10 = a2;
    if (*(_QWORD *)(a2 + 112) == a2)
      v10 = *(_QWORD *)((*(_QWORD *)(v7 + 16) & 0xFFFFFFFFFFFFFFF8) + 48);
  }
LABEL_11:
  v11 = sub_22EA57E40(v10);
  v44 = v11;
  v12 = sub_22EA57E40(a3);
  v43 = v12;
  if (v11 | v12)
  {
    v13 = v12;
    if (!v11 && v12)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xF03u, 0, (uint64_t)v42);
      v14 = sub_22E890024((uint64_t)v42, &v45);
      LODWORD(v38) = 1;
      v15 = sub_22E8900C4(v14, (int *)&v38);
      sub_22E8FB3C4(v15, &v43);
      sub_22E903BEC(v42);
      sub_22E8FCA40(a1, *(_DWORD *)(v10 + 24), 0x6Cu, 0, (uint64_t)v41);
      v16 = (unsigned int *)v41;
LABEL_21:
      sub_22E903BEC(v16);
      return 0;
    }
    if (v11 && !v12)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xF03u, 0, (uint64_t)v42);
      v17 = sub_22E890024((uint64_t)v42, &v45);
      LODWORD(v38) = 0;
      v18 = sub_22E8900C4(v17, (int *)&v38);
      sub_22E8FB3C4(v18, &v44);
      sub_22E903BEC(v42);
      sub_22E8FCA40(a1, *(_DWORD *)(v10 + 24), 0x6Cu, 0, (uint64_t)v40);
      v16 = (unsigned int *)v40;
      goto LABEL_21;
    }
    if (*(unsigned __int16 *)(v12 + 32) != *(unsigned __int16 *)(v11 + 32))
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v12 + 16), 0xB34u, 0, (uint64_t)v42);
      v38 = *(void **)(v43 + 16);
      v20 = sub_22E8906A0((uint64_t)v42, (uint64_t *)&v38);
      v21 = sub_22E8FB3C4(v20, &v43);
      sub_22E8FB3C4(v21, &v44);
      sub_22E903BEC(v42);
      sub_22E8FCA40(a1, *(_DWORD *)(v44 + 16), 0x1574u, 0, (uint64_t)v42);
      v22 = *(void **)(v44 + 16);
LABEL_20:
      v38 = v22;
      sub_22E8906A0((uint64_t)v42, (uint64_t *)&v38);
      v16 = v42;
      goto LABEL_21;
    }
    v24 = *(unsigned __int16 *)(v12 + 32);
    if (v24 == 11)
    {
      v31 = *(unsigned __int8 *)(v11 + 30);
      if ((~(v31 << 16) & 0x780000) != 0)
        v32 = ((*(unsigned __int16 *)(v11 + 28) | (v31 << 16)) >> 19) & 0xF;
      else
        v32 = sub_22F1BFAD0(v11);
      v33 = *(unsigned __int8 *)(v13 + 30);
      if ((~(v33 << 16) & 0x780000) != 0)
        v34 = ((*(unsigned __int16 *)(v13 + 28) | (v33 << 16)) >> 19) & 0xF;
      else
        v34 = sub_22F1BFAD0(v13);
      if ((v32 == 1) != (v34 == 1))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0xF40u, 0, (uint64_t)v42);
        v38 = *(void **)(v13 + 16);
        sub_22E8906A0((uint64_t)v42, (uint64_t *)&v38);
        sub_22E903BEC(v42);
        sub_22E8FCA40(a1, *(_DWORD *)(v11 + 16), 0x1574u, 0, (uint64_t)v42);
        v22 = *(void **)(v11 + 16);
        goto LABEL_20;
      }
    }
    else if (v24 == 407)
    {
      if ((*(_QWORD *)(a2 + 144) & 6) == 4)
        v25 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
      else
        v25 = 0;
      if ((*(_QWORD *)(a3 + 144) & 6) == 4)
        v26 = *(_QWORD *)(a3 + 144) & 0xFFFFFFFFFFFFFFF8;
      else
        v26 = 0;
      sub_22EA57E98((char **)&v38, v11, v25);
      sub_22EA57E98((char **)&__p, v13, v26);
      v27 = __p;
      if (*(_DWORD *)(v11 + 36) != *(_DWORD *)(v13 + 36))
        goto LABEL_50;
      v28 = v38;
      if (v39 - (_BYTE *)v38 != v37 - (_BYTE *)__p)
        goto LABEL_50;
      v29 = __p;
      v30 = v38;
      if (v38 != v39)
      {
        v29 = __p;
        v30 = v38;
        if (__p != v37)
        {
          v30 = v38;
          v29 = __p;
          while ((*(_QWORD *)((*v30 & 0xFFFFFFFFFFFFFFF0) + 8) | *v30 & 7) == (*(_QWORD *)((*v29 & 0xFFFFFFFFFFFFFFF0)
                                                                                              + 8) | *v29 & 7))
          {
            ++v30;
            ++v29;
            if (v30 == (_QWORD *)v39 || v29 == (_QWORD *)v37)
              goto LABEL_42;
          }
          goto LABEL_50;
        }
      }
LABEL_42:
      if (v30 != (_QWORD *)v39 || v29 != (_QWORD *)v37)
      {
LABEL_50:
        sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0xF0Bu, 0, (uint64_t)v42);
        v35 = *(_QWORD *)(v13 + 16);
        sub_22E8906A0((uint64_t)v42, &v35);
        sub_22E903BEC(v42);
        sub_22E8FCA40(a1, *(_DWORD *)(v11 + 16), 0x1574u, 0, (uint64_t)v42);
        v35 = *(_QWORD *)(v11 + 16);
        sub_22E8906A0((uint64_t)v42, &v35);
        sub_22E903BEC(v42);
        if (v27)
          operator delete(v27);
        if (v38)
          operator delete(v38);
        return 0;
      }
      if (__p)
        operator delete(__p);
      if (v28)
        operator delete(v28);
    }
  }
  return 1;
}

uint64_t sub_22EA57E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v2 = *(uint64_t **)v1;
  if (sub_22EA44CA0(*(uint64_t **)v1, (uint64_t *)(*(_QWORD *)v1 + 8 * *(unsigned int *)(v1 + 8))))
    return 0;
  do
  {
    v5 = *v2++;
    v3 = v5;
  }
  while (!sub_22EFA55D0(v5));
  return v3;
}

void sub_22EA57E98(char **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  uint64_t **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t **v44;
  uint64_t **v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t **v56;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a3)
  {
    v5 = *(unsigned int *)(a2 + 40);
    if ((_DWORD)v5)
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      v11 = *(uint64_t ***)(a2 + 48);
      v56 = &v11[v5];
      do
      {
        v12 = **v11;
        v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v13 && *(_BYTE *)(v13 + 16) == 47)
        {
          v14 = **(_QWORD **)(a3 + 24)
              + 24
              * *(unsigned __int16 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                            + 8) & 0xFFFFFFFFFFFFFFF0)
                                    + 34);
          if (*(_DWORD *)v14 != 1)
          {
            v17 = *(_DWORD *)(v14 + 4);
            if (v17)
            {
              v18 = *(_QWORD *)(v14 + 8);
              v19 = v18 + 24 * v17;
              do
              {
                v20 = *(_QWORD *)(v18 + 8);
                if ((unint64_t)v10 >= v9)
                {
                  v21 = (v10 - v8) >> 3;
                  v22 = v21 + 1;
                  if ((unint64_t)(v21 + 1) >> 61)
                    goto LABEL_91;
                  v23 = v9 - (_QWORD)v8;
                  if (v23 >> 2 > v22)
                    v22 = v23 >> 2;
                  if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF8)
                    v24 = 0x1FFFFFFFFFFFFFFFLL;
                  else
                    v24 = v22;
                  if (v24)
                  {
                    if (v24 >> 61)
                      goto LABEL_92;
                    v25 = (char *)operator new(8 * v24);
                  }
                  else
                  {
                    v25 = 0;
                  }
                  v26 = &v25[8 * v21];
                  *(_QWORD *)v26 = v20;
                  v16 = v26 + 8;
                  while (v10 != v8)
                  {
                    v27 = *((_QWORD *)v10 - 1);
                    v10 -= 8;
                    *((_QWORD *)v26 - 1) = v27;
                    v26 -= 8;
                  }
                  v6 = &v25[8 * v24];
                  *a1 = v26;
                  a1[1] = v16;
                  a1[2] = v6;
                  if (v8)
                    operator delete(v8);
                  v7 = (unint64_t)v6;
                  v8 = v26;
                  v9 = (unint64_t)v6;
                }
                else
                {
                  *(_QWORD *)v10 = v20;
                  v16 = v10 + 8;
                }
                a1[1] = v16;
                v18 += 24;
                v10 = v16;
              }
              while (v18 != v19);
            }
            else
            {
              v16 = v10;
            }
            goto LABEL_67;
          }
          v15 = *(_QWORD *)(v14 + 8);
          if ((unint64_t)v10 >= v7)
          {
            v32 = (v10 - v8) >> 3;
            v33 = v32 + 1;
            if ((unint64_t)(v32 + 1) >> 61)
              goto LABEL_91;
            v34 = v7 - (_QWORD)v8;
            if (v34 >> 2 > v33)
              v33 = v34 >> 2;
            if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8)
              v35 = 0x1FFFFFFFFFFFFFFFLL;
            else
              v35 = v33;
            if (v35)
            {
              if (v35 >> 61)
                goto LABEL_92;
              v36 = (char *)operator new(8 * v35);
            }
            else
            {
              v36 = 0;
            }
            v39 = &v36[8 * v32];
            *(_QWORD *)v39 = v15;
            v16 = v39 + 8;
            while (v10 != v8)
            {
              v40 = *((_QWORD *)v10 - 1);
              v10 -= 8;
              *((_QWORD *)v39 - 1) = v40;
              v39 -= 8;
            }
            v6 = &v36[8 * v35];
            *a1 = v39;
            a1[1] = v16;
            a1[2] = v6;
            if (v8)
              operator delete(v8);
            v7 = (unint64_t)v6;
            v8 = v39;
          }
          else
          {
            *(_QWORD *)v10 = v15;
            v16 = v10 + 8;
          }
        }
        else if (v10 >= v6)
        {
          v28 = (v10 - v8) >> 3;
          v29 = v28 + 1;
          if ((unint64_t)(v28 + 1) >> 61)
            goto LABEL_91;
          if ((v6 - v8) >> 2 > v29)
            v29 = (v6 - v8) >> 2;
          if ((unint64_t)(v6 - v8) >= 0x7FFFFFFFFFFFFFF8)
            v30 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v30 = v29;
          if (v30)
          {
            if (v30 >> 61)
              goto LABEL_92;
            v31 = (char *)operator new(8 * v30);
          }
          else
          {
            v31 = 0;
          }
          v37 = &v31[8 * v28];
          *(_QWORD *)v37 = v12;
          v16 = v37 + 8;
          while (v10 != v8)
          {
            v38 = *((_QWORD *)v10 - 1);
            v10 -= 8;
            *((_QWORD *)v37 - 1) = v38;
            v37 -= 8;
          }
          v6 = &v31[8 * v30];
          *a1 = v37;
          a1[1] = v16;
          a1[2] = v6;
          if (v8)
            operator delete(v8);
          v7 = (unint64_t)v6;
          v8 = v37;
        }
        else
        {
          *(_QWORD *)v10 = v12;
          v16 = v10 + 8;
          v7 = (unint64_t)v6;
        }
        a1[1] = v16;
        v9 = v7;
LABEL_67:
        ++v11;
        v10 = v16;
      }
      while (v11 != v56);
    }
  }
  else
  {
    v41 = *(unsigned int *)(a2 + 40);
    if ((_DWORD)v41)
    {
      v42 = (char *)operator new(8 * v41);
      v43 = &v42[8 * v41];
      *a1 = v42;
      a1[2] = v43;
      v44 = *(uint64_t ***)(a2 + 48);
      v45 = &v44[v41];
      v46 = v42;
      do
      {
        v47 = **v44;
        if (v46 >= v43)
        {
          v49 = (v46 - v42) >> 3;
          v50 = v49 + 1;
          if ((unint64_t)(v49 + 1) >> 61)
LABEL_91:
            abort();
          if ((v43 - v42) >> 2 > v50)
            v50 = (v43 - v42) >> 2;
          if ((unint64_t)(v43 - v42) >= 0x7FFFFFFFFFFFFFF8)
            v51 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v51 = v50;
          if (v51)
          {
            if (v51 >> 61)
LABEL_92:
              sub_22E3B3F8C();
            v52 = (char *)operator new(8 * v51);
          }
          else
          {
            v52 = 0;
          }
          v53 = &v52[8 * v49];
          *(_QWORD *)v53 = v47;
          v48 = v53 + 8;
          while (v46 != v42)
          {
            v54 = *((_QWORD *)v46 - 1);
            v46 -= 8;
            *((_QWORD *)v53 - 1) = v54;
            v53 -= 8;
          }
          v43 = &v52[8 * v51];
          *a1 = v53;
          a1[1] = v48;
          a1[2] = v43;
          if (v42)
            operator delete(v42);
          v42 = v53;
        }
        else
        {
          *(_QWORD *)v46 = v47;
          v48 = v46 + 8;
        }
        a1[1] = v48;
        ++v44;
        v46 = v48;
      }
      while (v44 != v45);
    }
  }
}

uint64_t sub_22EA582C4(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9[24];
  uint64_t v10;
  unint64_t v11;

  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return 0;
  v6 = 1;
  v11 = sub_22EFC20FC(a2, 1);
  v10 = sub_22EA57E40(v11);
  if (v10 && !sub_22EA44C64(a2))
  {
    sub_22E8FCA40(a1, a3, 0xF00u, 0, (uint64_t)v9);
    v7 = sub_22E890024((uint64_t)v9, (uint64_t *)&v11);
    sub_22E8FB3C4(v7, &v10);
    sub_22E903BEC(v9);
    return 0;
  }
  return v6;
}

void sub_22EA58368(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, uint64_t **a5, uint64_t a6)
{
  _QWORD *v9;
  uint64_t **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t **v21;
  uint64_t v22;
  uint64_t **v23;
  uint64_t v24;
  uint64_t **v25;
  uint64_t v26;
  uint64_t **v27;
  uint64_t v28;
  uint64_t **v29;
  uint64_t v30;
  uint64_t **v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  int v62;
  uint64_t v65;
  uint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  unsigned int v69;
  unsigned int v70[26];

  v9 = a1;
  if (!a6)
    goto LABEL_69;
  v11 = &a5[a6];
  v12 = 8 * a6;
  v13 = 8 * a6;
  v14 = a5;
  while (1)
  {
    v15 = *v14;
    v65 = **v14;
    v16 = *(_QWORD *)(v65 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v16 + 17) & 4) == 0
      && (sub_22F408D68(*(_QWORD *)(v65 & 0xFFFFFFFFFFFFFFF0)) & 1) == 0
      && (sub_22F10BF84(v16) & 0xFF00000000) == 0
      && (sub_22F408E0C(v16) & 1) == 0
      && (sub_22F408EBC(v16) & 1) == 0
      && (sub_22F408F60(v16) & 1) == 0
      && (sub_22F40900C(v16) & 1) == 0
      && (sub_22F4090B8(v16) & 1) == 0
      && (sub_22F409168(v16) & 1) == 0)
    {
      break;
    }
    ++v14;
    v13 -= 8;
    if (!v13)
    {
      v20 = 8 * a6;
      v21 = a5;
      v9 = a1;
      while ((*(_BYTE *)(*(_QWORD *)(**v21 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
      {
        ++v21;
        v20 -= 8;
        if (!v20)
        {
          v22 = 8 * a6;
          v23 = a5;
          do
          {
            if ((sub_22F408D68(*(_QWORD *)(**v23 & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
              goto LABEL_40;
            ++v23;
            v22 -= 8;
          }
          while (v22);
          v24 = 8 * a6;
          v25 = a5;
          do
          {
            if ((sub_22F10BF84(*(_QWORD *)(**v25 & 0xFFFFFFFFFFFFFFF0)) & 0xFF00000000) != 0)
            {
              sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xF0Eu, 0, (uint64_t)v70);
              v65 = *(_QWORD *)(a3 + 16);
              v38 = sub_22E8906A0((uint64_t)v70, &v65);
              v39 = 1;
              goto LABEL_55;
            }
            ++v25;
            v24 -= 8;
          }
          while (v24);
          v26 = 8 * a6;
          v27 = a5;
          do
          {
            if (sub_22F408F60(*(_QWORD *)(**v27 & 0xFFFFFFFFFFFFFFF0)))
            {
              sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xF0Eu, 0, (uint64_t)v70);
              v65 = *(_QWORD *)(a3 + 16);
              v38 = sub_22E8906A0((uint64_t)v70, &v65);
              v39 = 4;
              goto LABEL_55;
            }
            ++v27;
            v26 -= 8;
          }
          while (v26);
          v28 = 8 * a6;
          v29 = a5;
          while (!sub_22F4090B8(*(_QWORD *)(**v29 & 0xFFFFFFFFFFFFFFF0)))
          {
            ++v29;
            v28 -= 8;
            if (!v28)
              goto LABEL_40;
          }
          sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xF0Eu, 0, (uint64_t)v70);
          v65 = *(_QWORD *)(a3 + 16);
          v38 = sub_22E8906A0((uint64_t)v70, &v65);
          v39 = 6;
LABEL_55:
          LODWORD(v68) = v39;
          v36 = sub_22E8900C4(v38, (int *)&v68);
          LODWORD(v67) = 0;
          v37 = (int *)&v67;
LABEL_56:
          sub_22E8900C4(v36, v37);
          goto LABEL_57;
        }
      }
LABEL_40:
      v30 = v12 - 8;
      v31 = a5;
      while ((sub_22F10BF84(*(_QWORD *)(**v31 & 0xFFFFFFFFFFFFFFF0)) & 0xFF00000000) == 0)
      {
        ++v31;
        v30 -= 8;
        if (v31 == v11)
          goto LABEL_69;
      }
      v32 = sub_22F10BF84(*(_QWORD *)(**v31 & 0xFFFFFFFFFFFFFFF0));
      v69 = v32;
      if (v31 + 1 != v11)
      {
        v33 = 1;
        while (1)
        {
          v34 = sub_22F10BF84(*(_QWORD *)(*v31[v33] & 0xFFFFFFFFFFFFFFF0));
          v68 = v34;
          if ((v34 & 0xFF00000000) != 0 && (_DWORD)v34 != v32)
            break;
          ++v33;
          v30 -= 8;
          if (!v30)
            goto LABEL_52;
        }
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xF0Du, 0, (uint64_t)v70);
        v65 = *(_QWORD *)(a3 + 16);
        v40 = sub_22E8906A0((uint64_t)v70, &v65);
        LODWORD(v67) = 1;
        sub_22E8900C4(v40, (int *)&v67);
        sub_22E903BEC(v70);
        v41 = **v31;
        v42 = v41;
        while (1)
        {
          if ((v42 & 0xF) != 0)
            goto LABEL_68;
          v43 = *(unsigned __int8 *)(*(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF0) + 16);
          if (v43 <= 0x39)
          {
            if (v43 == 24)
              goto LABEL_72;
            if (v43 == 26)
            {
              if ((*(_BYTE *)(v42 + 23) & 0x10) != 0)
              {
LABEL_72:
                v41 = v42;
LABEL_73:
                v45 = sub_22F115668(v41);
                sub_22E8FCA40(a1, v45, 0x163Au, 0, (uint64_t)v70);
                v46 = (uint64_t)(*v31 + 1);
                v47 = **v31;
                v65 = v47;
                v66 = (uint64_t *)v46;
                v48 = v47;
                while (1)
                {
                  if ((v48 & 0xF) != 0)
                    goto LABEL_84;
                  v49 = *(unsigned __int8 *)(*(_QWORD *)(v48 & 0xFFFFFFFFFFFFFFF0) + 16);
                  if (v49 <= 0x39)
                  {
                    if (v49 == 24)
                      goto LABEL_85;
                    if (v49 == 26)
                    {
                      if ((*(_BYTE *)(v48 + 23) & 0x10) != 0)
                      {
LABEL_85:
                        v47 = v48;
LABEL_86:
                        v50 = sub_22F115668(v47);
                        v67 = v50 | ((unint64_t)sub_22F1167E8(&v65) << 32);
                        v51 = sub_22E8906A0((uint64_t)v70, (uint64_t *)&v67);
                        sub_22E89519C(v51, &v69);
                        sub_22E903BEC(v70);
                        v52 = *v31[v33];
                        v53 = v52;
                        while (1)
                        {
                          if ((v53 & 0xF) != 0)
                            goto LABEL_97;
                          v54 = *(unsigned __int8 *)(*(_QWORD *)(v53 & 0xFFFFFFFFFFFFFFF0) + 16);
                          if (v54 <= 0x39)
                          {
                            if (v54 == 24)
                              goto LABEL_98;
                            if (v54 == 26)
                            {
                              if ((*(_BYTE *)(v53 + 23) & 0x10) != 0)
                              {
LABEL_98:
                                v52 = v53;
LABEL_99:
                                v55 = sub_22F115668(v52);
                                sub_22E8FCA40(a1, v55, 0x1639u, 0, (uint64_t)v70);
                                v56 = v31[v33];
                                v57 = *v56;
                                v65 = v57;
                                v66 = v56 + 1;
                                v58 = v57;
                                while (1)
                                {
                                  if ((v58 & 0xF) != 0)
                                    goto LABEL_110;
                                  v59 = *(unsigned __int8 *)(*(_QWORD *)(v58 & 0xFFFFFFFFFFFFFFF0) + 16);
                                  if (v59 <= 0x39)
                                  {
                                    if (v59 == 24)
                                      goto LABEL_111;
                                    if (v59 == 26)
                                    {
                                      if ((*(_BYTE *)(v58 + 23) & 0x10) != 0)
                                      {
LABEL_111:
                                        v57 = v58;
LABEL_112:
                                        v60 = sub_22F115668(v57);
                                        v67 = v60 | ((unint64_t)sub_22F1167E8(&v65) << 32);
                                        v61 = sub_22E8906A0((uint64_t)v70, (uint64_t *)&v67);
                                        sub_22E89519C(v61, (unsigned int *)&v68);
                                        sub_22E903BEC(v70);
                                        return;
                                      }
LABEL_110:
                                      v58 = sub_22F115B7C(v58);
                                      continue;
                                    }
                                    if (((1 << v59) & 0x20000000200003CLL) != 0)
                                      goto LABEL_110;
                                  }
                                  if (sub_22F115668(v58))
                                    v57 = v58;
                                  v58 = sub_22F115B7C(v58);
                                  if (!v58)
                                    goto LABEL_112;
                                }
                              }
LABEL_97:
                              v53 = sub_22F115B7C(v53);
                              continue;
                            }
                            if (((1 << v54) & 0x20000000200003CLL) != 0)
                              goto LABEL_97;
                          }
                          if (sub_22F115668(v53))
                            v52 = v53;
                          v53 = sub_22F115B7C(v53);
                          if (!v53)
                            goto LABEL_99;
                        }
                      }
LABEL_84:
                      v48 = sub_22F115B7C(v48);
                      continue;
                    }
                    if (((1 << v49) & 0x20000000200003CLL) != 0)
                      goto LABEL_84;
                  }
                  if (sub_22F115668(v48))
                    v47 = v48;
                  v48 = sub_22F115B7C(v48);
                  if (!v48)
                    goto LABEL_86;
                }
              }
LABEL_68:
              v42 = sub_22F115B7C(v42);
              continue;
            }
            if (((1 << v43) & 0x20000000200003CLL) != 0)
              goto LABEL_68;
          }
          if (sub_22F115668(v42))
            v41 = v42;
          v42 = sub_22F115B7C(v42);
          if (!v42)
            goto LABEL_73;
        }
      }
LABEL_52:
      if (v32 - 33 <= 0xFFFFFFE0)
      {
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xF0Cu, 0, (uint64_t)v70);
        v65 = *(_QWORD *)(a3 + 16);
        v36 = sub_22E8906A0((uint64_t)v70, &v65);
        LODWORD(v68) = 1;
        v37 = (int *)&v68;
        goto LABEL_56;
      }
LABEL_69:
      v44 = sub_22E3CD3D4(v9[11] + 2032, 56, 3);
      sub_22F38D2F4(v44, v9[11], (_OWORD *)a3, a4, a5, a6);
      sub_22EFCA95C(a2, v44);
      return;
    }
  }
  v17 = *v15;
  for (i = *v15; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_25;
      v19 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v19 <= 0x39)
        break;
LABEL_20:
      if (sub_22F115668(i))
        v17 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_114;
    }
    if (v19 == 24)
      goto LABEL_113;
    if (v19 == 26)
      break;
    if (((1 << v19) & 0x20000000200003CLL) == 0)
      goto LABEL_20;
LABEL_25:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_25;
LABEL_113:
  v17 = i;
LABEL_114:
  v62 = sub_22F115668(v17);
  sub_22E8FCA40(a1, v62, 0xF0Au, 0, (uint64_t)v70);
  sub_22E8901B8((uint64_t)v70, &v65);
LABEL_57:
  sub_22E903BEC(v70);
  sub_22EFC77E8(a2, 1);
}

void sub_22EA58BF4(_QWORD *a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t **v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  int v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char v34;
  uint64_t v35;
  int v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t v43;
  unsigned __int8 *v44;
  unsigned __int8 **v45;
  unsigned __int8 *v46;
  size_t v47;
  size_t v48;
  uint64_t v49;
  uint64_t v50;
  void *__p[2];
  unint64_t v52;
  unint64_t v53;
  unsigned int v54;
  char v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  void *v60;
  unsigned __int8 *v61;
  uint64_t v62;
  char v63;
  unsigned int v64;
  char v65;
  void *__src;
  size_t __len[2];
  _QWORD v68[10];

  v68[9] = *MEMORY[0x24BDAC8D0];
  v7 = sub_22EB1A358(a1, a4, 0);
  if ((v7 & 1) != 0)
    goto LABEL_36;
  v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
  v9 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  v10 = a3[1];
  *(_OWORD *)v9 = *a3;
  *(_OWORD *)(v9 + 16) = v10;
  v11 = *(_BYTE *)(v9 + 34);
  *(_WORD *)(v9 + 32) = 413;
  *(_BYTE *)(v9 + 34) = v11 & 0xE0;
  *(_QWORD *)(v9 + 40) = v8;
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v13 = *((unsigned int *)v12 + 2);
    if ((_DWORD)v13)
    {
      v14 = 8 * v13;
      v15 = *v12;
      while (*(_WORD *)(*(_QWORD *)v15 + 32) != 413)
      {
        v15 += 8;
        v14 -= 8;
        if (!v14)
          goto LABEL_17;
      }
    }
    else
    {
      v15 = *v12;
    }
    if (v15 != *v12 + 8 * v13)
    {
      sub_22EFC8E88(a2);
      v17 = *v16;
      v18 = *((unsigned int *)v16 + 2);
      if ((_DWORD)v18 && *(_WORD *)(*v17 + 32) != 413)
      {
        v19 = 8 * v18 - 8;
        v20 = *v16;
        do
        {
          v21 = v20[1];
          ++v20;
          v19 -= 8;
        }
        while (*(_WORD *)(v21 + 32) != 413);
      }
      do
      {
        v23 = *v17++;
        v22 = v23;
      }
      while (*(_WORD *)(v23 + 32) != 413);
      v53 = v22;
      if (*(_WORD *)(v9 + 32) != 0x19D)
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0xB34u, 0, (uint64_t)&v58);
        __p[0] = *(void **)(v9 + 16);
        v24 = sub_22E8906A0((uint64_t)&v58, (uint64_t *)__p);
        v57 = v9;
        v25 = sub_22E8FB3C4(v24, &v57);
        sub_22E9AEE38(v25, (uint64_t *)&v53);
      }
      else
      {
        sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0xED2u, 0, (uint64_t)&v58);
        __p[0] = *(void **)(v9 + 16);
        v35 = sub_22E8906A0((uint64_t)&v58, (uint64_t *)__p);
        v57 = v9;
        sub_22E8FB3C4(v35, &v57);
      }
      sub_22E903BEC((unsigned int *)&v58);
      sub_22E8FCA40(a1, *(_DWORD *)(v22 + 16), 0x1574u, 0, (uint64_t)&__src);
      sub_22E903BEC((unsigned int *)&__src);
      goto LABEL_36;
    }
  }
LABEL_17:
  if ((*(_BYTE *)(v8 + 2) & 1) == 0)
  {
    v54 = 32;
    v53 = 0;
    v55 = 1;
    v56 = 1;
    if ((*(_BYTE *)(v8 + 1) & 0x80) == 0)
    {
      sub_22F00905C(v8, a1[11], 0, (uint64_t)&v58);
      sub_22E54C490((uint64_t)&v53, (uint64_t)&v58);
      v26 = v56;
      if ((_BYTE)v60 && v59 >= 0x41 && v58)
        MEMORY[0x2348A0E84](v58, 0x1000C8000313F17);
      if (v26)
      {
        v27 = v54;
        if (v54 > 0x40)
          v28 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v53);
        else
          v28 = v54 + __clz(v53) - 64;
        if (v27 - v28 < 0x21)
        {
          v34 = 1;
          goto LABEL_40;
        }
        sub_22EFF605C(v8);
        sub_22E8FCA40(a1, v36, 0xDDBu, 0, (uint64_t)&v58);
        __src = v68;
        *(_OWORD *)__len = xmmword_22F455490;
        llvm::APInt::toString();
        v37 = (void *)__len[0];
        if (__len[0] >= 0x7FFFFFFFFFFFFFF8)
          abort();
        v38 = __src;
        if (__len[0] >= 0x17)
        {
          v47 = (__len[0] & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((__len[0] | 7) != 0x17)
            v47 = __len[0] | 7;
          v48 = v47 + 1;
          v39 = operator new(v47 + 1);
          __p[1] = v37;
          v52 = v48 | 0x8000000000000000;
          __p[0] = v39;
        }
        else
        {
          HIBYTE(v52) = __len[0];
          v39 = __p;
          if (!__len[0])
            goto LABEL_60;
        }
        memmove(v39, v38, (size_t)v37);
LABEL_60:
        *((_BYTE *)v37 + (_QWORD)v39) = 0;
        if (__src != v68)
          free(__src);
        v49 = sub_22F2F3734((uint64_t)&v58, __p);
        LODWORD(__src) = 32;
        v50 = sub_22E8900C4(v49, (int *)&__src);
        LODWORD(v57) = 1;
        sub_22E8900C4(v50, (int *)&v57);
        if (SHIBYTE(v52) < 0)
          operator delete(__p[0]);
        goto LABEL_33;
      }
    }
    sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0xAE5u, 0, (uint64_t)&v58);
    if (v63)
    {
      v29 = v61;
      if (!v61)
      {
        v29 = (unsigned __int8 *)sub_22E3B8AAC(v62);
        v61 = v29;
      }
      v29[*v29 + 1] = 15;
      v30 = v61;
    }
    else
    {
      if (!v65)
        goto LABEL_32;
      v40 = v60;
      v41 = (uint64_t *)(v58 + 12784);
      if (v60)
        v40 = (void *)(*(uint64_t (**)(void *))(*(_QWORD *)v60 + 32))(v60);
      __src = v40;
      v42 = sub_22F2F1D6C(v41, (uint64_t *)&__src);
      v43 = v42[1] + 32 * v64;
      v46 = *(unsigned __int8 **)(v43 + 8);
      v45 = (unsigned __int8 **)(v43 + 8);
      v44 = v46;
      if (!v46)
      {
        v44 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v45[1]);
        *v45 = v44;
      }
      v44[*v44 + 1] = 15;
      v30 = *v45;
    }
    v31 = *v30;
    *v30 = v31 + 1;
    *(_QWORD *)&v30[8 * v31 + 16] = v9;
LABEL_32:
    LODWORD(__p[0]) = 1;
    v32 = sub_22E8900C4((uint64_t)&v58, (int *)__p);
    sub_22F0D4E74(v8);
    __src = v33;
    sub_22E8906A0(v32, (uint64_t *)&__src);
LABEL_33:
    sub_22E903BEC((unsigned int *)&v58);
    v34 = 0;
LABEL_40:
    if (v56 && v54 >= 0x41)
    {
      if (v53)
        MEMORY[0x2348A0E84](v53, 0x1000C8000313F17);
    }
    if ((v34 & 1) != 0)
      goto LABEL_45;
LABEL_36:
    sub_22EFC77E8(a2, 1);
    return;
  }
LABEL_45:
  sub_22EFCA95C(a2, v9);
}

void sub_22EA59188(_QWORD *a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  unint64_t **v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char v31;
  int v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t *v37;
  _QWORD *v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned __int8 **v41;
  unsigned __int8 *v42;
  size_t v43;
  size_t v44;
  uint64_t v45;
  uint64_t v46;
  void *__p[2];
  unint64_t v48;
  unint64_t v49;
  unsigned int v50;
  char v51;
  unsigned __int8 v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  void *v56;
  unsigned __int8 *v57;
  uint64_t v58;
  char v59;
  unsigned int v60;
  char v61;
  void *__src;
  size_t __len[2];
  _QWORD v64[10];

  v64[9] = *MEMORY[0x24BDAC8D0];
  v7 = sub_22EB1A358(a1, a4, 0);
  if ((v7 & 1) != 0)
  {
LABEL_21:
    sub_22EFC77E8(a2, 1);
    return;
  }
  v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
  v9 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  v10 = a3[1];
  *(_OWORD *)v9 = *a3;
  *(_OWORD *)(v9 + 16) = v10;
  v11 = *(_BYTE *)(v9 + 34);
  *(_WORD *)(v9 + 32) = 414;
  *(_BYTE *)(v9 + 34) = v11 & 0xE0;
  *(_QWORD *)(v9 + 40) = v8;
  if (sub_22E4729CC(a2))
  {
    sub_22EFC8E88(a2);
    v13 = *v12;
    v14 = *((unsigned int *)v12 + 2);
    if ((_DWORD)v14 && *(_WORD *)(*v13 + 32) != 414)
    {
      v15 = 8 * v14 - 8;
      v16 = *v12;
      do
      {
        v17 = v16[1];
        ++v16;
        v15 -= 8;
      }
      while (*(_WORD *)(v17 + 32) != 414);
    }
    do
    {
      v19 = *v13++;
      v18 = v19;
    }
    while (*(_WORD *)(v19 + 32) != 414);
    v49 = v18;
    if (*(_WORD *)(v9 + 32) != 0x19E)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0xB34u, 0, (uint64_t)&v54);
      __p[0] = *(void **)(v9 + 16);
      v20 = sub_22E8906A0((uint64_t)&v54, (uint64_t *)__p);
      v53 = v9;
      v21 = sub_22E8FB3C4(v20, &v53);
      sub_22E9AEE38(v21, (uint64_t *)&v49);
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0xED2u, 0, (uint64_t)&v54);
      __p[0] = *(void **)(v9 + 16);
      v25 = sub_22E8906A0((uint64_t)&v54, (uint64_t *)__p);
      v53 = v9;
      sub_22E8FB3C4(v25, &v53);
    }
    sub_22E903BEC((unsigned int *)&v54);
    sub_22E8FCA40(a1, *(_DWORD *)(v18 + 16), 0x1574u, 0, (uint64_t)&__src);
    sub_22E903BEC((unsigned int *)&__src);
    goto LABEL_21;
  }
  if ((*(_BYTE *)(v8 + 2) & 1) == 0)
  {
    v50 = 32;
    v49 = 0;
    v51 = 1;
    v52 = 1;
    if ((*(_BYTE *)(v8 + 1) & 0x80) == 0)
    {
      sub_22F00905C(v8, a1[11], 0, (uint64_t)&v54);
      sub_22E54C490((uint64_t)&v49, (uint64_t)&v54);
      v22 = v52;
      if ((_BYTE)v56 && v55 >= 0x41 && v54)
        MEMORY[0x2348A0E84](v54, 0x1000C8000313F17);
      if (v22)
      {
        v23 = v50;
        if (v50 > 0x40)
          v24 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v49);
        else
          v24 = v50 + __clz(v49) - 64;
        if (v23 - v24 < 0x21)
        {
          v31 = 1;
          goto LABEL_33;
        }
        sub_22EFF605C(v8);
        sub_22E8FCA40(a1, v32, 0xDDBu, 0, (uint64_t)&v54);
        __src = v64;
        *(_OWORD *)__len = xmmword_22F455490;
        llvm::APInt::toString();
        v33 = (void *)__len[0];
        if (__len[0] >= 0x7FFFFFFFFFFFFFF8)
          abort();
        v34 = __src;
        if (__len[0] >= 0x17)
        {
          v43 = (__len[0] & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((__len[0] | 7) != 0x17)
            v43 = __len[0] | 7;
          v44 = v43 + 1;
          v35 = operator new(v43 + 1);
          __p[1] = v33;
          v48 = v44 | 0x8000000000000000;
          __p[0] = v35;
        }
        else
        {
          HIBYTE(v48) = __len[0];
          v35 = __p;
          if (!__len[0])
            goto LABEL_53;
        }
        memmove(v35, v34, (size_t)v33);
LABEL_53:
        *((_BYTE *)v33 + (_QWORD)v35) = 0;
        if (__src != v64)
          free(__src);
        v45 = sub_22F2F3734((uint64_t)&v54, __p);
        LODWORD(__src) = 32;
        v46 = sub_22E8900C4(v45, (int *)&__src);
        LODWORD(v53) = 1;
        sub_22E8900C4(v46, (int *)&v53);
        if (SHIBYTE(v48) < 0)
          operator delete(__p[0]);
        goto LABEL_29;
      }
    }
    sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0xAE5u, 0, (uint64_t)&v54);
    if (v59)
    {
      v26 = v57;
      if (!v57)
      {
        v26 = (unsigned __int8 *)sub_22E3B8AAC(v58);
        v57 = v26;
      }
      v26[*v26 + 1] = 15;
      v27 = v57;
    }
    else
    {
      if (!v61)
        goto LABEL_28;
      v36 = v56;
      v37 = (uint64_t *)(v54 + 12784);
      if (v56)
        v36 = (void *)(*(uint64_t (**)(void *))(*(_QWORD *)v56 + 32))(v56);
      __src = v36;
      v38 = sub_22F2F1D6C(v37, (uint64_t *)&__src);
      v39 = v38[1] + 32 * v60;
      v42 = *(unsigned __int8 **)(v39 + 8);
      v41 = (unsigned __int8 **)(v39 + 8);
      v40 = v42;
      if (!v42)
      {
        v40 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v41[1]);
        *v41 = v40;
      }
      v40[*v40 + 1] = 15;
      v27 = *v41;
    }
    v28 = *v27;
    *v27 = v28 + 1;
    *(_QWORD *)&v27[8 * v28 + 16] = v9;
LABEL_28:
    LODWORD(__p[0]) = 1;
    v29 = sub_22E8900C4((uint64_t)&v54, (int *)__p);
    sub_22F0D4E74(v8);
    __src = v30;
    sub_22E8906A0(v29, (uint64_t *)&__src);
LABEL_29:
    sub_22E903BEC((unsigned int *)&v54);
    v31 = 0;
LABEL_33:
    if (v52 && v50 >= 0x41 && v49)
      MEMORY[0x2348A0E84](v49, 0x1000C8000313F17);
    if ((v31 & 1) == 0)
      goto LABEL_21;
  }
  sub_22EFCA95C(a2, v9);
}

BOOL sub_22EA596D4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v19[24];
  uint64_t v20;
  uint64_t v21;
  unsigned int v22[24];
  uint64_t v23;

  v6 = sub_22EAA34D4(a2);
  if (v6)
  {
    sub_22EFC8E88(a2);
    v8 = *v7;
    v9 = *((unsigned int *)v7 + 2);
    if ((_DWORD)v9 && *(_WORD *)(*v8 + 32) != 424)
    {
      v10 = 8 * v9 - 8;
      v11 = *v7;
      do
      {
        v12 = v11[1];
        ++v11;
        v10 -= 8;
      }
      while (*(_WORD *)(v12 + 32) != 424);
    }
    do
    {
      v14 = *v8++;
      v13 = v14;
    }
    while (*(_WORD *)(v14 + 32) != 424);
    v23 = v13;
    if (*(_WORD *)(a3 + 32) != 0x1A8)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v22);
      v21 = *(_QWORD *)(a3 + 16);
      v15 = sub_22E8906A0((uint64_t)v22, &v21);
      v20 = a3;
      v16 = sub_22E8FB3C4(v15, &v20);
      sub_22E8FB3C4(v16, &v23);
      sub_22E903BEC(v22);
      v13 = v23;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v22);
      v21 = *(_QWORD *)(a3 + 16);
      v17 = sub_22E8906A0((uint64_t)v22, &v21);
      v20 = a3;
      sub_22E8FB3C4(v17, &v20);
      sub_22E903BEC(v22);
    }
    sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0x1574u, 0, (uint64_t)v19);
    sub_22E903BEC(v19);
  }
  return v6;
}

uint64_t sub_22EA59844(_QWORD *a1, int *a2, _DWORD *a3, unsigned int a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  int v13;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  void *v22;
  int *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *__p[2];
  unint64_t v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  char v34;
  unint64_t v35;
  unsigned int v36;
  unsigned __int8 v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int *v41;
  __int128 v42;
  _QWORD v43[6];

  v43[5] = *MEMORY[0x24BDAC8D0];
  v39 = a4;
  v40 = 0;
  v38 = -1;
  LOBYTE(v35) = 0;
  v37 = 0;
  if ((*a3 & 0x18000) != 0)
    goto LABEL_2;
  sub_22F00905C((uint64_t)a3, a1[11], 0, (uint64_t)&v32);
  sub_22E54C490((uint64_t)&v35, (uint64_t)&v32);
  v13 = v37;
  if (v34 && v33 >= 0x41 && v32)
    MEMORY[0x2348A0E84](v32, 0x1000C8000313F17);
  if (!v13)
  {
LABEL_2:
    sub_22E8FCA40(a1, a2[4], 0xAE5u, 0, (uint64_t)&v32);
    v41 = a2;
    v7 = sub_22E8FB3C4((uint64_t)&v32, (uint64_t *)&v41);
    v31 = 1;
    v8 = sub_22E8900C4(v7, &v31);
    sub_22F0D4E74((uint64_t)a3);
    __p[0] = v9;
    sub_22E8906A0(v8, (uint64_t *)__p);
    goto LABEL_3;
  }
  v14 = v36;
  if (v36 > 0x40)
    v15 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v35);
  else
    v15 = v36 + __clz(v35) - 64;
  if (v14 - v15 >= 0x21)
  {
    sub_22EFF605C((uint64_t)a3);
    sub_22E8FCA40(a1, v21, 0xDDBu, 0, (uint64_t)&v32);
    v41 = (int *)v43;
    v42 = xmmword_22F455490;
    llvm::APInt::toString();
    v22 = (void *)v42;
    if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v23 = v41;
    if ((unint64_t)v42 >= 0x17)
    {
      v25 = (v42 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v42 | 7) != 0x17)
        v25 = v42 | 7;
      v26 = v25 + 1;
      v24 = operator new(v25 + 1);
      __p[1] = v22;
      v30 = v26 | 0x8000000000000000;
      __p[0] = v24;
    }
    else
    {
      HIBYTE(v30) = v42;
      v24 = __p;
      if (!(_QWORD)v42)
        goto LABEL_33;
    }
    memmove(v24, v23, (size_t)v22);
LABEL_33:
    *((_BYTE *)v22 + (_QWORD)v24) = 0;
    if (v41 != (int *)v43)
      free(v41);
    v27 = sub_22F2F3734((uint64_t)&v32, __p);
    LODWORD(v41) = 32;
    v28 = sub_22E8900C4(v27, (int *)&v41);
    v31 = 1;
    sub_22E8900C4(v28, &v31);
    if (SHIBYTE(v30) < 0)
      operator delete(__p[0]);
    goto LABEL_3;
  }
  if ((sub_22E8BAD7C((uint64_t)&v35, 0) & 1) == 0 && !sub_22E42E8B8((uint64_t)&v35, a4))
  {
    v10 = 1;
    goto LABEL_4;
  }
  if (v38 == -1)
  {
    sub_22EFF605C((uint64_t)a3);
    sub_22E8FCA40(a1, v19, 0xB11u, 0, (uint64_t)&v32);
    v41 = a2;
    v18 = sub_22E8FB3C4((uint64_t)&v32, (uint64_t *)&v41);
  }
  else
  {
    sub_22EFF605C((uint64_t)a3);
    sub_22E8FCA40(a1, v16, 0xB07u, 0, (uint64_t)&v32);
    v41 = a2;
    v17 = sub_22E8FB3C4((uint64_t)&v32, (uint64_t *)&v41);
    v18 = sub_22E89519C(v17, &v38);
  }
  v20 = sub_22E89519C(v18, &v40);
  sub_22E89519C(v20, &v39);
LABEL_3:
  sub_22E903BEC((unsigned int *)&v32);
  v10 = 0;
LABEL_4:
  if (v37 && v36 >= 0x41 && v35)
    MEMORY[0x2348A0E84](v35, 0x1000C8000313F17);
  return v10;
}

uint64_t sub_22EA59BBC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13[24];
  uint64_t v14;
  uint64_t v15;
  unsigned int v16[24];
  uint64_t v17;

  result = sub_22E54299C(a2);
  if ((_DWORD)result)
  {
    v12 = result;
    v7 = sub_22E9AEF2C(a2);
    v17 = v7;
    if (*(unsigned __int16 *)(v7 + 32) != *(unsigned __int16 *)(a3 + 32))
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v16);
      v15 = *(_QWORD *)(a3 + 16);
      v8 = sub_22E8906A0((uint64_t)v16, &v15);
      v14 = a3;
      v9 = sub_22E8FB3C4(v8, &v14);
      sub_22E8FB3C4(v9, &v17);
      sub_22E903BEC(v16);
      v10 = v17;
    }
    else
    {
      v10 = v7;
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v16);
      v15 = *(_QWORD *)(a3 + 16);
      v11 = sub_22E8906A0((uint64_t)v16, &v15);
      v14 = a3;
      sub_22E8FB3C4(v11, &v14);
      sub_22E903BEC(v16);
    }
    sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x1574u, 0, (uint64_t)v13);
    sub_22E903BEC(v13);
    return v12;
  }
  return result;
}

uint64_t sub_22EA59CD8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542BD8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF1C, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA59E58(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542C38(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF24, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA59FD8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542C98(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF2C, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5A158(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542CF8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF34, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5A2D8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542D58(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF3C, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5A458(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542DB8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF40, 1, 3u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5A5D8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542E18(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF44, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5A758(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542E78(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF4C, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5A8D8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542ED8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF54, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5AA58(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542F38(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF5C, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5ABD8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542F98(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF60, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5AD58(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E542FF8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF68, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5AED8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543058(a2);
  result = sub_22EAA366C(a1[11], *(_QWORD *)(a2 + 48));
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5B044(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5430B8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF70, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5B1C4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543118(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF78, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5B344(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543178(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF80, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5B4C4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5431D8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF84, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5B644(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543238(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF88, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5B7C4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543298(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF8C, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5B944(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5432F8(a2);
  result = sub_22EAA36D0(a2, &dword_22F47DF90, 1);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5BAB8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543358(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF94, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5BC38(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5433B8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DF98, 1, 3u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5BDB8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543418(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DF9C, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5BF38(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543478(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFA4, 2, 2u, 2u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5C0B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5434D8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFAC, 2, 2u, 2u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5C238(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543538(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DFB4, 1, 2u, 2u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5C3B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543598(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DFB8, 1, 2u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5C538(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543658(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFBC, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5C6B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5436B8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFC4, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5C838(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543778(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFCC, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5C9B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5437D8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFD4, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5CB38(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543718(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47DFDC, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5CCB8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543838(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFE0, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5CE38(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543898(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFE8, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5CFB8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5438F8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFF0, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5D138(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543958(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47DFF8, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5D2B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5439B8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E000, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5D438(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543A18(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E008, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5D5B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543A78(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E010, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5D738(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543AD8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E018, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5D8B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543B38(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E020, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5DA38(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543B98(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E028, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5DBB8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543BF8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E030, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5DD38(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543C58(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E038, 2, 1u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5DEB8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543CB8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E040, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5E038(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543D18(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E048, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5E1B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543D78(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E050, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5E338(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543DD8(a2);
  result = sub_22EAA366C(a1[11], *(_QWORD *)(a2 + 48));
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5E4A4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543E38(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E054, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5E624(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543EF8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E05C, 1, 3u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5E7A4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543E98(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E060, 1, 3u, 3u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5E924(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E543F58(a2);
  result = sub_22EAA36D0(a2, &dword_22F47E064, 1);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5EA98(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E53AC28(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E068, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5EC18(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E53B37C(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E06C, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5ED98(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E536E34(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E070, 1, 1u, 1u, 1);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5EF18(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E53B43C(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E074, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5F098(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E53742C(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E078, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5F218(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E53748C(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E07C, 1, 4u, 4u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5F398(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E5374EC(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E080, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5F518(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E53754C(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E084, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5F698(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E53B678(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), &dword_22F47E08C, 1, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5F818(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22E53B6D8(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), (int *)&unk_22F47E090, 2, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_11;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_11:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5F998(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _QWORD *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;

  if (!a3)
    return sub_22F26E334(a2);
  result = sub_22EAA3534((uint64_t)a1, *(_QWORD *)(a2 + 48), dword_22F47E098, 3, 1u, 1u, 0);
  if ((result & 1) == 0 && a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v9 = sub_22E8906A0((uint64_t)v23, &v22);
    v21 = *(_QWORD *)(a2 + 48);
    v10 = sub_22E8901B8(v9, &v21);
    v11 = v10;
    if (*(_BYTE *)(v10 + 80))
    {
      v12 = *(unsigned __int8 **)(v10 + 32);
      if (!v12)
      {
        v12 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v11 + 40));
        *(_QWORD *)(v11 + 32) = v12;
      }
      v12[*v12 + 1] = 15;
      v13 = *(_BYTE **)(v11 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v10 + 92))
        goto LABEL_10;
      v15 = (uint64_t *)(*(_QWORD *)v10 + 12784);
      v16 = *(_QWORD *)(v10 + 16);
      if (v16)
        v16 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      v24 = v16;
      v17 = sub_22F2F1D6C(v15, &v24)[1] + 32 * *(unsigned int *)(v11 + 88);
      v20 = *(unsigned __int8 **)(v17 + 8);
      v19 = (_QWORD *)(v17 + 8);
      v18 = v20;
      if (!v20)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(v19[1]);
        *v19 = v18;
      }
      v18[*v18 + 1] = 15;
      v13 = (_BYTE *)*v19;
    }
    v14 = *v13;
    *v13 = v14 + 1;
    *(_QWORD *)&v13[8 * v14 + 16] = a3;
LABEL_10:
    sub_22E903BEC(v23);
    return 0;
  }
  return result;
}

uint64_t sub_22EA5FB18(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t **v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unsigned int v22[24];
  uint64_t v23;
  uint64_t v24;
  unsigned int v25[24];
  uint64_t v26;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v7 = *((unsigned int *)v6 + 2);
  if ((_DWORD)v7)
  {
    v8 = 8 * v7;
    for (i = *v6; *(_WORD *)(*(_QWORD *)i + 32) != 373; i += 8)
    {
      v8 -= 8;
      if (!v8)
        return 0;
    }
  }
  else
  {
    i = *v6;
  }
  if (i == *v6 + 8 * v7)
    return 0;
  sub_22EFC8E88(a2);
  v11 = *v10;
  v12 = *((unsigned int *)v10 + 2);
  if ((_DWORD)v12 && *(_WORD *)(*v11 + 32) != 373)
  {
    v13 = 8 * v12 - 8;
    v14 = *v10;
    do
    {
      v15 = v14[1];
      ++v14;
      v13 -= 8;
    }
    while (*(_WORD *)(v15 + 32) != 373);
  }
  do
  {
    v17 = *v11++;
    v16 = v17;
  }
  while (*(_WORD *)(v17 + 32) != 373);
  v26 = v16;
  if (*(_WORD *)(a3 + 32) != 0x175)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v25);
    v24 = *(_QWORD *)(a3 + 16);
    v18 = sub_22E8906A0((uint64_t)v25, &v24);
    v23 = a3;
    v19 = sub_22E8FB3C4(v18, &v23);
    sub_22E9AEE38(v19, &v26);
  }
  else
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v25);
    v24 = *(_QWORD *)(a3 + 16);
    v21 = sub_22E8906A0((uint64_t)v25, &v24);
    v23 = a3;
    sub_22E8FB3C4(v21, &v23);
  }
  sub_22E903BEC(v25);
  sub_22E8FCA40(a1, *(_DWORD *)(v16 + 16), 0x1574u, 0, (uint64_t)v22);
  sub_22E903BEC(v22);
  return 1;
}

unint64_t sub_22EA5FCC0(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = sub_22E5457C4(a1);
  if (result)
  {
    v2 = sub_22F10C2A4(result);
    if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
      v3 = 0;
    else
      v3 = v2;
    return sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v3 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                               + 8) & 0xFFFFFFFFFFFFFFF0));
  }
  return result;
}

uint64_t sub_22EA5FD18(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = sub_22E5457C4(a1);
  if (result)
  {
    v2 = sub_22F10C2A4(result);
    if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
      v3 = 0;
    else
      v3 = v2;
    return sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v3 + 168) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0);
  }
  return result;
}

uint64_t sub_22EA5FD84(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_22E5457C4(a1);
  if (result)
  {
    v2 = sub_22F10C2A4(result);
    if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
      v3 = 0;
    else
      v3 = v2;
    v4 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v3 + 168) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1
      && (v5 = *(_QWORD *)((sub_22F10ACF8(v4) & 0xFFFFFFFFFFFFFFF0) + 8), (v5 & 8) != 0))
    {
      return (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 24576;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EA5FE10(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = sub_22E5457C4(a1);
  if (result)
  {
    v2 = sub_22F10C2A4(result);
    if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
      v3 = 0;
    else
      v3 = v2;
    return sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v3 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
  }
  return result;
}

unint64_t sub_22EA5FE5C(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = sub_22E5457C4(a1);
  if (result)
  {
    v2 = sub_22F10C2A4(result);
    if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
      v3 = 0;
    else
      v3 = v2;
    return sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v3 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
  }
  return result;
}

uint64_t sub_22EA5FEA8(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = sub_22E5457C4(a1);
  if (result)
  {
    v2 = sub_22F10C2A4(result);
    if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
      v3 = 0;
    else
      v3 = v2;
    return sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v3 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
  }
  return result;
}

uint64_t sub_22EA5FEF4(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = sub_22E5457C4(a1);
  if (result)
  {
    v2 = sub_22F10C2A4(result);
    if ((*(_DWORD *)(v2 + 28) & 0x7Fu) - 35 >= 3)
      v3 = 0;
    else
      v3 = v2;
    return sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v3 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
  }
  return result;
}

uint64_t sub_22EA5FF40(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8;
  int v9;
  BOOL v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  void *v39;
  _QWORD *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *__p[2];
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unsigned int v50;
  char v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55[24];
  _QWORD *v56;
  __int128 v57;
  _QWORD v58[6];

  v58[5] = *MEMORY[0x24BDAC8D0];
  v53 = a4;
  v54 = 0;
  v52 = -1;
  v56 = a1;
  LODWORD(v57) = 0;
  v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_DWORD *)(v8 + 16);
  if (v8)
    v10 = v9 == 11;
  else
    v10 = 0;
  if (v10)
  {
    if (((*(_DWORD *)(v8 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
      goto LABEL_14;
  }
  else if (v8 && v9 == 44)
  {
    v11 = sub_22F114198(*(_QWORD *)(v8 + 24));
    if ((*(_BYTE *)(v11 + 74) & 1) == 0 && *(_QWORD *)(v11 + 128) < 8uLL)
    {
LABEL_14:
      sub_22EFF605C(a3);
      sub_22E8FCA40(a1, v12, 0xED5u, 0, (uint64_t)v55);
      v49 = *(_QWORD *)(a3 + 8);
      v13 = sub_22E8901B8((uint64_t)v55, (uint64_t *)&v49);
      sub_22E8900C4(v13, (int *)&v57);
      sub_22F0D4E74(a3);
      __p[0] = v14;
      sub_22E8906A0(v13, (uint64_t *)__p);
      sub_22E903BEC(v55);
      v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v15 && *(_BYTE *)(v15 + 16) == 44)
      {
        v16 = sub_22F114198(*(_QWORD *)(v15 + 24));
        v17 = sub_22EFC3500(v16);
        v49 = sub_22F3AC9B8(v17);
        v18 = v49;
        if (HIDWORD(v49))
          v19 = v49 == 0;
        else
          v19 = 1;
        if (v19)
        {
          v49 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v17 + 16))(v17);
          v18 = v49;
        }
        sub_22E8FCA40(v56, v18, 0x165Bu, 0, (uint64_t)v55);
        __p[0] = (void *)sub_22E496830(v17);
        v20 = sub_22E8901B8((uint64_t)v55, (uint64_t *)__p);
        v21 = sub_22E8900C4(v20, (int *)&v57);
        sub_22E8906A0(v21, (uint64_t *)&v49);
        sub_22E903BEC(v55);
      }
      return 0;
    }
  }
  else if (v9 != 9)
  {
    goto LABEL_14;
  }
  if ((unint64_t)sub_22EF5CDF0(a1[11], *(_QWORD *)(*(_QWORD *)(a3 + 8) & 0xFFFFFFFFFFFFFFF0)) >= 0x21)
    goto LABEL_14;
  if (!sub_22EA8BBD4(&v56, (unsigned __int8 *)a3))
    return 0;
  sub_22F00905C(a3, a1[11], 0, (uint64_t)&v49);
  if (v51)
  {
    v22 = v50;
    if (v50 > 0x40)
      v23 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v49);
    else
      v23 = v50 + __clz(v49) - 64;
    if (v22 - v23 < 0x21)
    {
      if ((sub_22E8BAD7C((uint64_t)&v49, 0) & 1) == 0 && !sub_22E42E8B8((uint64_t)&v49, a4))
      {
        v24 = 1;
        goto LABEL_43;
      }
      if (v52 == -1)
      {
        sub_22EFF605C(a3);
        sub_22E8FCA40(a1, v36, 0xB11u, 0, (uint64_t)v55);
        v56 = (_QWORD *)a2;
        v35 = sub_22E8FB3C4((uint64_t)v55, (uint64_t *)&v56);
      }
      else
      {
        sub_22EFF605C(a3);
        sub_22E8FCA40(a1, v33, 0xB07u, 0, (uint64_t)v55);
        v56 = (_QWORD *)a2;
        v34 = sub_22E8FB3C4((uint64_t)v55, (uint64_t *)&v56);
        v35 = sub_22E89519C(v34, &v52);
      }
      v37 = sub_22E89519C(v35, &v54);
      sub_22E89519C(v37, &v53);
      goto LABEL_42;
    }
    sub_22EFF605C(a3);
    sub_22E8FCA40(a1, v38, 0xDDBu, 0, (uint64_t)v55);
    v56 = v58;
    v57 = xmmword_22F455490;
    llvm::APInt::toString();
    v39 = (void *)v57;
    if ((unint64_t)v57 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v40 = v56;
    if ((unint64_t)v57 >= 0x17)
    {
      v42 = (v57 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v57 | 7) != 0x17)
        v42 = v57 | 7;
      v43 = v42 + 1;
      v41 = operator new(v42 + 1);
      __p[1] = v39;
      v47 = v43 | 0x8000000000000000;
      __p[0] = v41;
    }
    else
    {
      HIBYTE(v47) = v57;
      v41 = __p;
      if (!(_QWORD)v57)
        goto LABEL_56;
    }
    memmove(v41, v40, (size_t)v39);
LABEL_56:
    *((_BYTE *)v39 + (_QWORD)v41) = 0;
    if (v56 != v58)
      free(v56);
    v44 = sub_22F2F3734((uint64_t)v55, __p);
    LODWORD(v56) = 32;
    v45 = sub_22E8900C4(v44, (int *)&v56);
    LODWORD(v48) = 1;
    sub_22E8900C4(v45, (int *)&v48);
    if (SHIBYTE(v47) < 0)
      operator delete(__p[0]);
    goto LABEL_42;
  }
  v24 = 1;
  if ((*(_BYTE *)(a1[9] + 121) & 0x80) == 0)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0xAE5u, 0, (uint64_t)v55);
    v56 = (_QWORD *)a2;
    v26 = sub_22E8FB3C4((uint64_t)v55, (uint64_t *)&v56);
    LODWORD(v48) = 1;
    v27 = sub_22E8900C4(v26, (int *)&v48);
    sub_22F0D4E74(a3);
    __p[0] = v28;
    sub_22E8906A0(v27, (uint64_t *)__p);
    sub_22E903BEC(v55);
    if ((*(_QWORD *)(a1[9] + 100) & 0x4000000000) != 0)
      v29 = 33;
    else
      v29 = 41;
    v30 = *(_QWORD *)sub_22F1D5FAC(v29);
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0x169Eu, 0, (uint64_t)v55);
    v56 = *(_QWORD **)(a2 + 16);
    v31 = sub_22E8906A0((uint64_t)v55, (uint64_t *)&v56);
    __p[0] = (void *)a2;
    v32 = sub_22E8FB3C4(v31, (uint64_t *)__p);
    v48 = v30;
    sub_22E8AECC4(v32, &v48);
LABEL_42:
    sub_22E903BEC(v55);
    v24 = 0;
  }
LABEL_43:
  if (v51 && v50 >= 0x41 && v49)
    MEMORY[0x2348A0E84](v49, 0x1000C8000313F17);
  return v24;
}

BOOL sub_22EA604B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v19[24];
  uint64_t v20;
  uint64_t v21;
  unsigned int v22[24];
  uint64_t v23;

  v6 = sub_22F270914(a2);
  if (v6)
  {
    sub_22EFC8E88(a2);
    v8 = *v7;
    v9 = *((unsigned int *)v7 + 2);
    if ((_DWORD)v9 && *(_WORD *)(*v8 + 32) != 374)
    {
      v10 = 8 * v9 - 8;
      v11 = *v7;
      do
      {
        v12 = v11[1];
        ++v11;
        v10 -= 8;
      }
      while (*(_WORD *)(v12 + 32) != 374);
    }
    do
    {
      v14 = *v8++;
      v13 = v14;
    }
    while (*(_WORD *)(v14 + 32) != 374);
    v23 = v13;
    if (*(_WORD *)(a3 + 32) != 0x176)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v22);
      v21 = *(_QWORD *)(a3 + 16);
      v15 = sub_22E8906A0((uint64_t)v22, &v21);
      v20 = a3;
      v16 = sub_22E8FB3C4(v15, &v20);
      sub_22E9AEE38(v16, &v23);
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v22);
      v21 = *(_QWORD *)(a3 + 16);
      v17 = sub_22E8906A0((uint64_t)v22, &v21);
      v20 = a3;
      sub_22E8FB3C4(v17, &v20);
    }
    sub_22E903BEC(v22);
    sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0x1574u, 0, (uint64_t)v19);
    sub_22E903BEC(v19);
  }
  return v6;
}

BOOL sub_22EA60614(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  _QWORD *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  unsigned int v26[24];
  uint64_t v27;
  uint64_t v28;

  if (!a3)
    return sub_22E53D258(a2);
  v27 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22E3E4B64(v7);
  if (v8 && (*(_DWORD *)(v8 + 20) - 2) <= 2 && (*(_DWORD *)(v8 + 16) & 0x780000) != 0x80000)
    v7 = *(_QWORD *)(*(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
    v10 = *(_DWORD *)(v9 + 16) == 11;
  else
    v10 = 0;
  if (v10
    && ((*(_DWORD *)(v9 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
    && ((1 << ((*(_DWORD *)(v9 + 16) >> 19) + 83)) & 0x6000000303) != 0)
  {
    return 1;
  }
  if (a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v26);
    v25 = *(_QWORD *)(a3 + 16);
    v11 = sub_22E8906A0((uint64_t)v26, &v25);
    v12 = sub_22E8901B8(v11, &v27);
    v13 = v12;
    if (*(_BYTE *)(v12 + 80))
    {
      v14 = *(unsigned __int8 **)(v12 + 32);
      if (!v14)
      {
        v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
        *(_QWORD *)(v13 + 32) = v14;
      }
      v14[*v14 + 1] = 15;
      v15 = *(_BYTE **)(v13 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v12 + 92))
        goto LABEL_23;
      v19 = (uint64_t *)(*(_QWORD *)v12 + 12784);
      v20 = *(_QWORD *)(v12 + 16);
      if (v20)
        v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 32))(v20);
      v28 = v20;
      v21 = sub_22F2F1D6C(v19, &v28)[1] + 32 * *(unsigned int *)(v13 + 88);
      v24 = *(unsigned __int8 **)(v21 + 8);
      v23 = (_QWORD *)(v21 + 8);
      v22 = v24;
      if (!v24)
      {
        v22 = (unsigned __int8 *)sub_22E3B8AAC(v23[1]);
        *v23 = v22;
      }
      v22[*v22 + 1] = 15;
      v15 = (_BYTE *)*v23;
    }
    v16 = *v15;
    *v15 = v16 + 1;
    *(_QWORD *)&v15[8 * v16 + 16] = a3;
LABEL_23:
    sub_22E903BEC(v26);
  }
  return 0;
}

void sub_22EA607EC(_QWORD *a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v7 = sub_22EB1A358(a1, a4, 0);
  if ((v7 & 1) != 0)
    goto LABEL_3;
  v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
  v9 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  v10 = a3[1];
  *(_OWORD *)v9 = *a3;
  *(_OWORD *)(v9 + 16) = v10;
  v11 = *(_BYTE *)(v9 + 34);
  *(_WORD *)(v9 + 32) = 379;
  *(_BYTE *)(v9 + 34) = v11 & 0xE0;
  *(_QWORD *)(v9 + 40) = v8;
  if (sub_22EA60900(a1, a2, v9)
    || (*(_BYTE *)(v8 + 2) & 1) == 0 && (sub_22EA5FF40(a1, v9, v8, *(_DWORD *)(a1[8] + 8) - 1) & 1) == 0)
  {
    goto LABEL_3;
  }
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0
    || sub_22EA4DA58(a1, a2, 0, v9 & 0xFFFFFFFFFFFFFFF8, 1, 0))
  {
    sub_22EFCA95C(a2, v9);
  }
  else
  {
LABEL_3:
    sub_22EFC77E8(a2, 1);
  }
}

BOOL sub_22EA60900(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v19[24];
  uint64_t v20;
  uint64_t v21;
  unsigned int v22[24];
  uint64_t v23;

  v6 = sub_22E9AFA3C(a2);
  if (v6)
  {
    sub_22EFC8E88(a2);
    v8 = *v7;
    v9 = *((unsigned int *)v7 + 2);
    if ((_DWORD)v9 && *(_WORD *)(*v8 + 32) != 379)
    {
      v10 = 8 * v9 - 8;
      v11 = *v7;
      do
      {
        v12 = v11[1];
        ++v11;
        v10 -= 8;
      }
      while (*(_WORD *)(v12 + 32) != 379);
    }
    do
    {
      v14 = *v8++;
      v13 = v14;
    }
    while (*(_WORD *)(v14 + 32) != 379);
    v23 = v13;
    if (*(_WORD *)(a3 + 32) != 0x17B)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v22);
      v21 = *(_QWORD *)(a3 + 16);
      v15 = sub_22E8906A0((uint64_t)v22, &v21);
      v20 = a3;
      v16 = sub_22E8FB3C4(v15, &v20);
      sub_22E9AEE38(v16, &v23);
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v22);
      v21 = *(_QWORD *)(a3 + 16);
      v17 = sub_22E8906A0((uint64_t)v22, &v21);
      v20 = a3;
      sub_22E8FB3C4(v17, &v20);
    }
    sub_22E903BEC(v22);
    sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0x1574u, 0, (uint64_t)v19);
    sub_22E903BEC(v19);
  }
  return v6;
}

BOOL sub_22EA60A64(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  _BOOL8 result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  _QWORD *v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28[24];
  uint64_t v29;

  if (!a3)
    return sub_22F26EC68(a2);
  v8 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22E3E4B64(v8);
  if (v9)
  {
    if ((*(_BYTE *)(v9 + 18) & 0x78) != 0 || *(_DWORD *)(v9 + 20) > 3u)
    {
LABEL_10:
      result = 0;
      goto LABEL_12;
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v9 + 32) & 0xFFFFFFFFFFFFFFF0);
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_DWORD *)(v10 + 16);
  if (v10)
    v12 = *(_DWORD *)(v10 + 16) == 11;
  else
    v12 = 0;
  if (!v12)
    goto LABEL_10;
  result = (v11 & 0xFF80000) == 110624768;
  if ((v11 & 0xFF80000) == 0x6980000)
    return result;
LABEL_12:
  if (!a4)
    return result;
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v28);
  v27 = *(_QWORD *)(a3 + 16);
  v14 = sub_22E8906A0((uint64_t)v28, &v27);
  v26 = *(_QWORD *)(a2 + 48);
  v15 = sub_22E8901B8(v14, &v26);
  v16 = v15;
  if (*(_BYTE *)(v15 + 80))
  {
    v17 = *(unsigned __int8 **)(v15 + 32);
    if (!v17)
    {
      v17 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v16 + 40));
      *(_QWORD *)(v16 + 32) = v17;
    }
    v17[*v17 + 1] = 15;
    v18 = *(_BYTE **)(v16 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v15 + 92))
      goto LABEL_19;
    v20 = (uint64_t *)(*(_QWORD *)v15 + 12784);
    v21 = *(_QWORD *)(v15 + 16);
    if (v21)
      v21 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v21 + 32))(v21);
    v29 = v21;
    v22 = sub_22F2F1D6C(v20, &v29)[1] + 32 * *(unsigned int *)(v16 + 88);
    v25 = *(unsigned __int8 **)(v22 + 8);
    v24 = (_QWORD *)(v22 + 8);
    v23 = v25;
    if (!v25)
    {
      v23 = (unsigned __int8 *)sub_22E3B8AAC(v24[1]);
      *v24 = v23;
    }
    v23[*v23 + 1] = 15;
    v18 = (_BYTE *)*v24;
  }
  v19 = *v18;
  *v18 = v19 + 1;
  *(_QWORD *)&v18[8 * v19 + 16] = a3;
LABEL_19:
  sub_22E903BEC(v28);
  return 0;
}

BOOL sub_22EA60C48(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  _QWORD *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  unsigned int v26[24];
  uint64_t v27;
  uint64_t v28;

  if (!a3)
    return sub_22E53B01C(a2);
  v27 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22E3E4B64(v7);
  if (v8 && (*(_DWORD *)(v8 + 20) - 2) <= 2 && (*(_DWORD *)(v8 + 16) & 0x780000) != 0x80000)
    v7 = *(_QWORD *)(*(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
    v10 = *(_DWORD *)(v9 + 16) == 11;
  else
    v10 = 0;
  if (v10
    && ((*(_DWORD *)(v9 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
    && ((1 << ((*(_DWORD *)(v9 + 16) >> 19) + 83)) & 0x6000000303) != 0)
  {
    return 1;
  }
  if (a4)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v26);
    v25 = *(_QWORD *)(a3 + 16);
    v11 = sub_22E8906A0((uint64_t)v26, &v25);
    v12 = sub_22E8901B8(v11, &v27);
    v13 = v12;
    if (*(_BYTE *)(v12 + 80))
    {
      v14 = *(unsigned __int8 **)(v12 + 32);
      if (!v14)
      {
        v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
        *(_QWORD *)(v13 + 32) = v14;
      }
      v14[*v14 + 1] = 15;
      v15 = *(_BYTE **)(v13 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v12 + 92))
        goto LABEL_23;
      v19 = (uint64_t *)(*(_QWORD *)v12 + 12784);
      v20 = *(_QWORD *)(v12 + 16);
      if (v20)
        v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 32))(v20);
      v28 = v20;
      v21 = sub_22F2F1D6C(v19, &v28)[1] + 32 * *(unsigned int *)(v13 + 88);
      v24 = *(unsigned __int8 **)(v21 + 8);
      v23 = (_QWORD *)(v21 + 8);
      v22 = v24;
      if (!v24)
      {
        v22 = (unsigned __int8 *)sub_22E3B8AAC(v23[1]);
        *v23 = v22;
      }
      v22[*v22 + 1] = 15;
      v15 = (_BYTE *)*v23;
    }
    v16 = *v15;
    *v15 = v16 + 1;
    *(_QWORD *)&v15[8 * v16 + 16] = a3;
LABEL_23:
    sub_22E903BEC(v26);
  }
  return 0;
}

BOOL sub_22EA60E20(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  int v6;
  BOOL v7;
  _BOOL4 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  _QWORD *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;
  uint64_t v25;

  if (a3)
  {
    v24 = *(_QWORD *)(a2 + 48);
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v6 = *(_DWORD *)(v5 + 16);
    if (v5)
      v7 = *(_DWORD *)(v5 + 16) == 11;
    else
      v7 = 0;
    if (v7)
    {
      v8 = (v6 & 0xFF80000) == 110624768;
      if ((v6 & 0xFF80000) == 0x6980000)
        return v8;
    }
    else
    {
      v8 = 0;
    }
    if (!a4)
      return v8;
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v10 = sub_22E8906A0((uint64_t)v23, &v22);
    v11 = sub_22E8901B8(v10, &v24);
    v12 = v11;
    if (*(_BYTE *)(v11 + 80))
    {
      v13 = *(unsigned __int8 **)(v11 + 32);
      if (!v13)
      {
        v13 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v12 + 40));
        *(_QWORD *)(v12 + 32) = v13;
      }
      v13[*v13 + 1] = 15;
      v14 = *(_BYTE **)(v12 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v11 + 92))
        goto LABEL_17;
      v16 = (uint64_t *)(*(_QWORD *)v11 + 12784);
      v17 = *(_QWORD *)(v11 + 16);
      if (v17)
        v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 32))(v17);
      v25 = v17;
      v18 = sub_22F2F1D6C(v16, &v25)[1] + 32 * *(unsigned int *)(v12 + 88);
      v21 = *(unsigned __int8 **)(v18 + 8);
      v20 = (_QWORD *)(v18 + 8);
      v19 = v21;
      if (!v21)
      {
        v19 = (unsigned __int8 *)sub_22E3B8AAC(v20[1]);
        *v20 = v19;
      }
      v19[*v19 + 1] = 15;
      v14 = (_BYTE *)*v20;
    }
    v15 = *v14;
    *v14 = v15 + 1;
    *(_QWORD *)&v14[8 * v15 + 16] = a3;
LABEL_17:
    sub_22E903BEC(v23);
    return v8;
  }
  return sub_22E53B3DC(a2);
}

void sub_22EA60FB4(_QWORD *a1, uint64_t a2, _OWORD *a3, _DWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15[24];
  unint64_t v16;
  uint64_t v17;

  if (!a2 || (*(_DWORD *)(a2 + 28) & 0x7Fu) - 60 > 6 || sub_22E3CB5E0(a2))
    goto LABEL_4;
  v8 = *(_QWORD *)(a1[9] + 124);
  if ((v8 & 0x800) != 0)
  {
    if (sub_22EA6135C(a1, a2) != 4)
    {
LABEL_4:
      sub_22EA611B0(a1, a2, a3, (uint64_t)a4);
      return;
    }
    v8 = *(_QWORD *)(a1[9] + 124);
  }
  if ((v8 & 0x400) != 0)
  {
    v9 = *(_QWORD *)((*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v9 & 8) == 0 || (*(_DWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0)
      goto LABEL_4;
  }
  v10 = sub_22E3CD3D4(a1[11] + 2032, 56, 3);
  v11 = a3[1];
  *(_OWORD *)v10 = *a3;
  *(_OWORD *)(v10 + 16) = v11;
  v12 = *(_BYTE *)(v10 + 34);
  *(_WORD *)(v10 + 32) = 210;
  *(_BYTE *)(v10 + 34) = v12 & 0xE0;
  *(_QWORD *)(v10 + 40) = a4;
  *(_BYTE *)(v10 + 48) = 0;
  v17 = v10;
  if (sub_22EA8BFF8(a1, a2, v10) || (sub_22EA59844(a1, (int *)v10, a4, *(unsigned __int16 *)(a1[9] + 134)) & 1) == 0)
  {
    sub_22EFC77E8(a2, 1);
  }
  else
  {
    v13 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v13 + 8) & 0xF) != 0)
      v13 = (unint64_t)sub_22F10D2BC(*(_QWORD *)(a2 + 48));
    v16 = v13 & 0xFFFFFFFFFFFFFFF0;
    if ((sub_22F10BDD0(*(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
    {
      sub_22EFCA95C(a2, v10);
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0xEDDu, 0, (uint64_t)v15);
      v14 = sub_22E8901B8((uint64_t)v15, (uint64_t *)&v16);
      sub_22E9AEE38(v14, &v17);
      sub_22E903BEC(v15);
      sub_22EFC77E8(a2, 1);
    }
  }
}

void sub_22EA611B0(_QWORD *a1, uint64_t a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20[24];

  v7 = sub_22EB1A358(a1, a4, 0);
  if ((v7 & 1) != 0)
    goto LABEL_3;
  v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
  v9 = sub_22E3CD3D4(a1[11] + 2032, 56, 3);
  v10 = a3[1];
  *(_OWORD *)v9 = *a3;
  *(_OWORD *)(v9 + 16) = v10;
  v11 = *(_BYTE *)(v9 + 34);
  *(_WORD *)(v9 + 32) = 210;
  *(_BYTE *)(v9 + 34) = v11 & 0xE0;
  *(_QWORD *)(v9 + 40) = v8;
  *(_BYTE *)(v9 + 48) = 1;
  if (sub_22EA8BFF8(a1, a2, v9))
  {
LABEL_3:
    sub_22EFC77E8(a2, 1);
    return;
  }
  if (sub_22F001848((unsigned __int8 *)v8))
  {
    if ((sub_22F10BDD0(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
    {
      sub_22EFCA95C(a2, v9);
      return;
    }
    sub_22EFF605C(v8);
    sub_22E8FCA40(a1, v13, 0xED5u, 0, (uint64_t)v20);
    v19 = *(_QWORD *)(v8 + 8);
    v14 = sub_22E8901B8((uint64_t)v20, &v19);
    v18 = 1;
    v15 = sub_22E8900C4(v14, &v18);
    sub_22F0D4E74(v8);
    v17 = v16;
    sub_22E8906A0(v15, &v17);
  }
  else
  {
    sub_22F0D5A50(v8);
    sub_22E8FCA40(a1, v12, 0xA82u, 0, (uint64_t)v20);
    LODWORD(v19) = 0;
    sub_22E8900C4((uint64_t)v20, (int *)&v19);
  }
  sub_22E903BEC(v20);
  sub_22EFC77E8(a2, 1);
}

uint64_t sub_22EA6135C(_QWORD *a1, uint64_t a2)
{
  uint64_t v5;

  if ((*(_BYTE *)(a1[9] + 125) & 8) == 0)
    return 4;
  v5 = (int)sub_22EA4DA58(a1, a2, 0, 0, 0, 0) - 1;
  if (v5 < 0x1A && ((0x36D80DBu >> v5) & 1) != 0)
    return dword_22F47E0A4[v5];
  if ((sub_22EA55C38(a1, a2, 0, 0, 0, 0) & 0xE) == 0xA)
    return 1;
  if (sub_22EA54A84(a1, a2, 0, 0, 0, 0) - 13 >= 2)
    return 4;
  return 2;
}

void sub_22EA61434(_QWORD *a1, _QWORD *a2, _OWORD *a3, uint64_t a4)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  uint64_t **v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  char *v38;
  uint64_t v39;
  int v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  _QWORD *v45;
  unsigned __int8 *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  _QWORD *v51;
  unsigned __int8 *v52;
  unsigned int v53[24];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  int v61;
  _BYTE v62[32];
  char *v63;
  uint64_t v64;
  _QWORD v65[33];

  v65[32] = *MEMORY[0x24BDAC8D0];
  v7 = sub_22EB1A358(a1, a4, 0);
  if ((v7 & 1) != 0)
    goto LABEL_26;
  v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
  v9 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  v10 = a3[1];
  *(_OWORD *)v9 = *a3;
  *(_OWORD *)(v9 + 16) = v10;
  v11 = *(_BYTE *)(v9 + 34);
  *(_WORD *)(v9 + 32) = 402;
  *(_BYTE *)(v9 + 34) = v11 & 0xE0;
  *(_QWORD *)(v9 + 40) = v8;
  if (sub_22EAA3EDC((uint64_t)a2))
  {
    sub_22EFC8E88((uint64_t)a2);
    v13 = *v12;
    v14 = *((unsigned int *)v12 + 2);
    if ((_DWORD)v14 && *(_WORD *)(*v13 + 32) != 402)
    {
      v15 = 8 * v14 - 8;
      v16 = *v12;
      do
      {
        v17 = v16[1];
        ++v16;
        v15 -= 8;
      }
      while (*(_WORD *)(v17 + 32) != 402);
    }
    do
    {
      v19 = *v13++;
      v18 = v19;
    }
    while (*(_WORD *)(v19 + 32) != 402);
    if (*(_WORD *)(v9 + 32) != 0x192)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0xB34u, 0, (uint64_t)v57);
      v55 = *(_QWORD *)(v9 + 16);
      v20 = sub_22E8906A0((uint64_t)v57, &v55);
      v54 = v9;
      v21 = sub_22E8FB3C4(v20, &v54);
      v22 = v21;
      if (*(_BYTE *)(v21 + 80))
      {
        v23 = *(unsigned __int8 **)(v21 + 32);
        if (!v23)
        {
          v23 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v22 + 40));
          *(_QWORD *)(v22 + 32) = v23;
        }
        v23[*v23 + 1] = 15;
        v24 = *(_BYTE **)(v22 + 32);
      }
      else
      {
        if (!*(_BYTE *)(v21 + 92))
          goto LABEL_25;
        v41 = (uint64_t *)(*(_QWORD *)v21 + 12784);
        v42 = *(_QWORD *)(v21 + 16);
        if (v42)
          v42 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v42 + 32))(v42);
        v56 = v42;
        v43 = sub_22F2F1D6C(v41, &v56)[1] + 32 * *(unsigned int *)(v22 + 88);
        v46 = *(unsigned __int8 **)(v43 + 8);
        v45 = (_QWORD *)(v43 + 8);
        v44 = v46;
        if (!v46)
        {
          v44 = (unsigned __int8 *)sub_22E3B8AAC(v45[1]);
          *v45 = v44;
        }
        v44[*v44 + 1] = 15;
        v24 = (_BYTE *)*v45;
      }
      v25 = *v24;
      *v24 = v25 + 1;
      *(_QWORD *)&v24[8 * v25 + 16] = v18;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0xED2u, 0, (uint64_t)v57);
      v56 = *(_QWORD *)(v9 + 16);
      v36 = sub_22E8906A0((uint64_t)v57, &v56);
      v55 = v9;
      sub_22E8FB3C4(v36, &v55);
    }
LABEL_25:
    sub_22E903BEC((unsigned int *)v57);
    sub_22E8FCA40(a1, *(_DWORD *)(v18 + 16), 0x1574u, 0, (uint64_t)v53);
    sub_22E903BEC(v53);
LABEL_26:
    sub_22EFC77E8((uint64_t)a2, 1);
    return;
  }
  if ((*(_BYTE *)(v8 + 2) & 1) == 0 && (sub_22EA5FF40(a1, v9, v8, 0xFFFFFFFF) & 1) == 0)
    goto LABEL_26;
  v26 = a2[6];
  if ((*(_BYTE *)(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
  {
    v27 = sub_22EFBAFDC((uint64_t)a2);
    v28 = (*(uint64_t (**)(_QWORD *))(*a2 + 16))(a2);
    v55 = v26;
    v57[0] = a1;
    v57[1] = 0x167B00000000;
    v58 = v62;
    v59 = v62;
    v60 = 4;
    v61 = 0;
    v63 = (char *)v65;
    v64 = 0x800000000;
    sub_22EA4F850((uint64_t)v57, v26, v27);
    v30 = v29;
    if (v29)
      goto LABEL_31;
    sub_22E8FCA40(a1, v28, 0xEDDu, 0, (uint64_t)v53);
    v31 = sub_22E8901B8((uint64_t)v53, &v55);
    v32 = v31;
    if (*(_BYTE *)(v31 + 80))
    {
      v33 = *(unsigned __int8 **)(v31 + 32);
      if (!v33)
      {
        v33 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v32 + 40));
        *(_QWORD *)(v32 + 32) = v33;
      }
      v33[*v33 + 1] = 15;
      v34 = *(_BYTE **)(v32 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v31 + 92))
      {
LABEL_28:
        v56 = *(_QWORD *)(v9 + 16);
        sub_22E8906A0(v32, &v56);
        sub_22E903BEC(v53);
        if ((_DWORD)v64)
        {
          v37 = (int *)v63;
          v38 = &v63[32 * v64];
          do
          {
            v39 = (uint64_t)(v37 + 2);
            v40 = *v37;
            v37 += 8;
            sub_22E90379C(a1, v40, v39, 0, (uint64_t)v53);
            sub_22E903BEC(v53);
          }
          while (v37 != (int *)v38);
        }
LABEL_31:
        sub_22E89277C(&v63);
        if (v59 != v58)
          free(v59);
        if (!v30)
          goto LABEL_26;
        goto LABEL_34;
      }
      v47 = (uint64_t *)(*(_QWORD *)v31 + 12784);
      v48 = *(_QWORD *)(v31 + 16);
      if (v48)
        v48 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v48 + 32))(v48);
      v56 = v48;
      v49 = sub_22F2F1D6C(v47, &v56)[1] + 32 * *(unsigned int *)(v32 + 88);
      v52 = *(unsigned __int8 **)(v49 + 8);
      v51 = (_QWORD *)(v49 + 8);
      v50 = v52;
      if (!v52)
      {
        v50 = (unsigned __int8 *)sub_22E3B8AAC(v51[1]);
        *v51 = v50;
      }
      v50[*v50 + 1] = 15;
      v34 = (_BYTE *)*v51;
    }
    v35 = *v34;
    *v34 = v35 + 1;
    *(_QWORD *)&v34[8 * v35 + 16] = v9;
    goto LABEL_28;
  }
LABEL_34:
  sub_22EFCA95C((uint64_t)a2, v9);
}

void sub_22EA6191C(_QWORD *a1, uint64_t a2, _OWORD *a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t *v24;
  uint64_t v25;
  int v26;
  int *v27;
  char *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int *v34;
  char *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  llvm *v50;
  unint64_t v52;
  char *v53;
  char *v54;
  int64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  void **v67;
  uint64_t *v68;
  int Key;
  uint64_t v71;
  int v72;
  void **v73;
  size_t v74;
  unsigned int v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  const void *v86;
  unint64_t *v87;
  llvm::StringMapImpl *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t *v93;
  unint64_t *v95;
  unint64_t *v96;
  unsigned int v97;
  unsigned int v98;
  uint64_t v99;
  unint64_t *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t *v105;
  _BYTE *v106;
  void **v107;
  unint64_t v108;
  unsigned int *v110;
  const void *v111;
  size_t v112;
  unsigned int v113;
  void *v114;
  _BYTE *v115;
  unint64_t *v116;
  unint64_t v117;
  int v118;
  uint64_t v119;
  void *v120;
  size_t v121;
  uint64_t v122;
  int *v123;
  char *v124;
  uint64_t v125;
  int v126;
  uint64_t *v127;
  char *v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  char *v133;
  _OWORD *v134;
  _WORD *v135;
  _BYTE *v136;
  _WORD *v137;
  char v138;
  uint64_t v139;
  int v140;
  void **v141;
  uint64_t v142;
  uint64_t v143;
  unsigned __int8 *v144;
  unint64_t v145;
  int v146;
  int v147;
  _OWORD *v148;
  unint64_t v149;
  int v150;
  void *v151;
  size_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  void *v159[2];
  char v160;
  _QWORD *v161;
  uint64_t v162;
  char v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void *__p;
  void *v174;
  char *v175;
  _QWORD *v176;
  char v177;
  char *v178;
  uint64_t v179;
  _QWORD v180[34];

  v5 = a2;
  v180[32] = *MEMORY[0x24BDAC8D0];
  v7 = *(_QWORD *)(a2 + 56);
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  if ((v7 & 4) != 0)
    v8 = *(_QWORD *)(v8 + 32);
  if (a4)
    v9 = a4;
  else
    v9 = (uint64_t *)v8;
  v10 = sub_22E3CD3D4(a1[11] + 2032, 48, 3);
  v11 = a3[1];
  *(_OWORD *)v10 = *a3;
  *(_OWORD *)(v10 + 16) = v11;
  v12 = *(_BYTE *)(v10 + 34);
  *(_WORD *)(v10 + 32) = 404;
  *(_BYTE *)(v10 + 34) = v12 & 0xE0;
  *(_QWORD *)(v10 + 40) = v9;
  v13 = *(_QWORD *)(v5 + 48);
  v131 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(*(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
    goto LABEL_81;
  v14 = *v9;
  v132 = v5;
  v15 = *(_QWORD *)(v5 + 56);
  v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFF8);
  if ((v15 & 4) != 0)
    v16 = (uint64_t *)v16[4];
  v17 = *v16;
  for (i = *v16; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_20;
      v19 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v19 <= 0x39)
        break;
LABEL_15:
      if (sub_22F115668(i))
        v17 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_22;
    }
    if (v19 == 24)
      goto LABEL_21;
    if (v19 == 26)
      break;
    if (((1 << v19) & 0x20000000200003CLL) == 0)
      goto LABEL_15;
LABEL_20:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_20;
LABEL_21:
  v17 = i;
LABEL_22:
  v129 = sub_22F115668(v17);
  v20 = **(_QWORD **)(v10 + 40);
  v21 = v20;
  while (2)
  {
    while (2)
    {
      if ((v21 & 0xF) != 0)
        goto LABEL_33;
      v22 = *(unsigned __int8 *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v22 > 0x39)
      {
LABEL_28:
        if (sub_22F115668(v21))
          v20 = v21;
        v21 = sub_22F115B7C(v21);
        if (!v21)
          goto LABEL_35;
        continue;
      }
      break;
    }
    if (v22 == 24)
      break;
    if (v22 != 26)
    {
      if (((1 << v22) & 0x20000000200003CLL) != 0)
        goto LABEL_33;
      goto LABEL_28;
    }
    if ((*(_BYTE *)(v21 + 23) & 0x10) == 0)
    {
LABEL_33:
      v21 = sub_22F115B7C(v21);
      continue;
    }
    break;
  }
  v20 = v21;
LABEL_35:
  v23 = sub_22F115668(v20);
  v161 = &unk_24FAB6EF8;
  LODWORD(v162) = 3591;
  v5 = v132;
  if ((sub_22EE8B0B0((uint64_t)a1, v23, v14) & 1) == 0 && sub_22EA52D74(a1, v14, v23, 1))
  {
    v176 = a1;
    v177 = 1;
    v178 = (char *)v180;
    v179 = 0x800000000;
    v133 = (char *)v14;
    v24 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
      v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    else
      v25 = 0;
    v26 = sub_22EA81764((uint64_t *)&v176, v25, 1);
    if ((v26 & 1) == 0)
    {
      if (v177)
      {
        sub_22E8FCA40(v176, v23, 0xF06u, 0, (uint64_t)&v161);
        sub_22E8901B8((uint64_t)&v161, (uint64_t *)&v133);
        sub_22E903BEC((unsigned int *)&v161);
        if ((_DWORD)v179)
        {
          v27 = (int *)v178;
          v28 = &v178[32 * v179];
          do
          {
            v29 = (uint64_t)(v27 + 2);
            v30 = *v27;
            v27 += 8;
            sub_22E90379C(v176, v30, v29, 0, (uint64_t)&v161);
            sub_22E903BEC((unsigned int *)&v161);
          }
          while (v27 != (int *)v28);
        }
      }
    }
    if (v26)
    {
      v31 = a1[11];
      v161 = a1;
      v162 = v31;
      v163 = 1;
      v164 = (char *)&v166;
      v165 = 0x800000000;
      v168 = 0;
      v167 = 0;
      v169 = 0x1800000000;
      v170 = 0;
      v171 = 0;
      v172 = 0x800000000;
      v175 = 0;
      __p = 0;
      v174 = 0;
      v154 = (char *)v14;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v24 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
        v32 = *(_QWORD *)(*(_QWORD *)(*v24 + 8) & 0xFFFFFFFFFFFFFFF0);
      else
        v32 = 0;
      v33 = sub_22EA81DE4((uint64_t)&v161, v32, 0, 0, 1);
      if ((v33 & 1) == 0)
      {
        if (v163)
        {
          sub_22E8FCA40(v161, v23, 0xF06u, 0, (uint64_t)&v133);
          sub_22E8901B8((uint64_t)&v133, (uint64_t *)&v154);
          sub_22E903BEC((unsigned int *)&v133);
          if ((_DWORD)v165)
          {
            v34 = (int *)v164;
            v35 = &v164[32 * v165];
            do
            {
              v36 = (uint64_t)(v34 + 2);
              v37 = *v34;
              v34 += 8;
              sub_22E90379C(v161, v37, v36, 0, (uint64_t)&v133);
              sub_22E903BEC((unsigned int *)&v133);
            }
            while (v34 != (int *)v35);
          }
        }
      }
      if (!v33)
        goto LABEL_67;
      if ((*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8) | v13 & 7) == (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF0) + 8) | v14 & 7))
      {
        v47 = 1;
        goto LABEL_69;
      }
      v38 = v129;
      v133 = (char *)&unk_24FAB6EF8;
      LODWORD(v134) = 3591;
      if ((sub_22EE8B0B0((uint64_t)a1, v129, v13) & 1) != 0 || !sub_22EA52D74(a1, v13, v129, 1))
      {
LABEL_67:
        v47 = 0;
        goto LABEL_69;
      }
      v142 = v14;
      v143 = v13;
      if ((_DWORD)v165)
      {
        v39 = v164;
        v40 = 32 * v165;
        do
        {
          v41 = &v39[v40];
          v42 = *(_QWORD *)&v39[v40 - 24];
          if (v42)
          {
            v43 = *((_QWORD *)v41 - 2);
            if (v43)
            {
              sub_22E3BB10C(v43, v42);
              *((_QWORD *)v41 - 3) = 0;
            }
          }
          v40 -= 32;
        }
        while (v40);
      }
      LODWORD(v165) = 0;
      v44 = v162;
      v45 = sub_22F10C2A4(*v24);
      if (v45)
      {
        if ((*(_DWORD *)(v45 + 28) & 0x7Fu) - 35 >= 3)
          v46 = 0;
        else
          v46 = v45;
      }
      else
      {
        v46 = 0;
      }
      v52 = *(_QWORD *)(sub_22F0C975C(v44, v46) + 8);
      v53 = (char *)v174;
      v54 = (char *)__p;
      v55 = (_BYTE *)v174 - (_BYTE *)__p;
      v56 = ((_BYTE *)v174 - (_BYTE *)__p) >> 3;
      if (v52 <= v56)
      {
        if (v52 < v56)
          v174 = (char *)__p + 8 * v52;
      }
      else
      {
        v57 = v52 - v56;
        if (v52 - v56 <= (v175 - (_BYTE *)v174) >> 3)
        {
          bzero(v174, 8 * v57);
          v174 = &v53[8 * v57];
        }
        else
        {
          if (v52 >> 61)
            abort();
          v58 = v175 - (_BYTE *)__p;
          if ((v175 - (_BYTE *)__p) >> 2 > v52)
            v52 = v58 >> 2;
          if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFF8)
            v59 = 0x1FFFFFFFFFFFFFFFLL;
          else
            v59 = v52;
          if (v59 >> 61)
            sub_22E3B3F8C();
          v60 = (char *)operator new(8 * v59);
          v61 = &v60[8 * v56];
          v62 = &v60[8 * v59];
          bzero(v61, 8 * v57);
          if (v53 != v54)
          {
            do
            {
              v63 = *((_QWORD *)v53 - 1);
              v53 -= 8;
              *((_QWORD *)v61 - 1) = v63;
              v61 -= 8;
            }
            while (v53 != v54);
            v53 = (char *)__p;
          }
          __p = v61;
          v174 = &v60[8 * v57 + v55];
          v175 = v62;
          if (v53)
            operator delete(v53);
        }
      }
      v64 = sub_22F10C2A4(*v131);
      if (v64 && (*(_DWORD *)(v64 + 28) & 0x7Fu) - 35 >= 3)
        v64 = 0;
      v65 = sub_22EFC3B90(v64);
      if (v65)
      {
        v66 = v65;
        v67 = &v167;
        v68 = &v158;
        v128 = (char *)(MEMORY[0x24BED83D8] + 16);
        v47 = 1;
LABEL_108:
        sub_22EA82244(v159, v66);
        Key = llvm::StringMapImpl::FindKey();
        if (Key == -1 || Key == (unint64_t)v171)
        {
          if (v163)
          {
            v71 = v161[11] + 2128;
            LODWORD(v133) = *(_DWORD *)(v66 + 24);
            LODWORD(v136) = 5771;
            v134 = 0;
            v135 = (_WORD *)v71;
            sub_22E8928F4((unint64_t)&v164, (unint64_t)&v133);
            if (v134 && v135)
              sub_22E3BB10C((unint64_t)v135, (unint64_t)v134);
            v47 = 0;
LABEL_119:
            v72 = 3;
          }
          else
          {
            v72 = 1;
          }
        }
        else
        {
          if (sub_22E54AA28(v66))
            goto LABEL_119;
          v127 = v68;
          v130 = v38;
          if (v160 >= 0)
            v73 = v159;
          else
            v73 = (void **)v159[0];
          if (v160 >= 0)
            v74 = v160 & 0x7F;
          else
            v74 = (size_t)v159[1];
          v75 = llvm::StringMapImpl::LookupBucketFor();
          v76 = v167;
          v77 = v75;
          v78 = *((_QWORD *)v167 + v75);
          if (v78 == -8)
          {
            LODWORD(v169) = v169 - 1;
          }
          else if (v78)
          {
            v38 = v130;
            v68 = v127;
            goto LABEL_129;
          }
          v88 = (llvm::StringMapImpl *)v67;
          v89 = MEMORY[0x23489D23C](v74 + 25, 8);
          v90 = v89;
          v91 = v89 + 24;
          if (v74)
            memcpy((void *)(v89 + 24), v73, v74);
          *(_BYTE *)(v91 + v74) = 0;
          *(_QWORD *)v90 = v74;
          *(_OWORD *)(v90 + 8) = xmmword_22F47E340;
          v76[v77] = v90;
          ++HIDWORD(v168);
          v67 = (void **)v88;
          v92 = llvm::StringMapImpl::RehashTable(v88);
          v93 = (uint64_t *)((char *)v167 + 8 * v92);
          v38 = v130;
          v68 = v127;
          while (1)
          {
            v78 = *v93;
            if (*v93 && v78 != -8)
              break;
            ++v93;
          }
LABEL_129:
          v79 = *(_QWORD *)(v78 + 8);
          if ((*(_QWORD *)((*(_QWORD *)(v66 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v66 + 48) & 7) != (*(_QWORD *)((v79 & 0xFFFFFFFFFFFFFFF0) + 8) | v79 & 7))
          {
            if (v163)
            {
              v80 = *(_DWORD *)(v66 + 24);
              v81 = v161[11] + 2128;
              v82 = (_BYTE *)sub_22E3B8AAC(v81);
              v83 = *v82;
              v82[v83 + 1] = 9;
              *v82 = v83 + 1;
              *(_QWORD *)&v82[8 * v83 + 16] = v79;
              LODWORD(v133) = v80;
              LODWORD(v136) = 5772;
              v134 = 0;
              v135 = (_WORD *)v81;
              v134 = (_OWORD *)sub_22E3B8AAC(v81);
              sub_22E78D4E8(v134, (uint64_t)v82);
              sub_22E8928F4((unint64_t)&v164, (unint64_t)&v133);
              if (v134 && v135)
              {
                sub_22E3BB10C((unint64_t)v135, (unint64_t)v134);
                v134 = 0;
              }
              sub_22E3BB10C(v81, (unint64_t)v82);
              v47 = 0;
              v72 = 3;
              v38 = v130;
            }
            else
            {
              v72 = 1;
            }
            goto LABEL_220;
          }
          v154 = (char *)v68;
          v155 = (char *)v68;
          v156 = 4;
          v157 = 0;
          sub_22EF5CCD0(v162, *(_QWORD *)(v79 & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v133);
          v84 = v133;
          if (v133)
          {
            v85 = 0;
            do
            {
              v86 = (const void *)*((_QWORD *)__p + (_QWORD)&v85[*(_QWORD *)(v78 + 16)]);
              if (v86)
                sub_22E3BA850((uint64_t)&v154, v86);
              ++v85;
            }
            while (v84 != v85);
            if (HIDWORD(v156) == v157)
            {
              v87 = (unint64_t *)((char *)__p + 8 * *(_QWORD *)(v78 + 16));
              do
              {
                *v87++ = v66;
                --v84;
              }
              while (v84);
              v72 = 0;
              goto LABEL_218;
            }
LABEL_158:
            if (v163)
            {
              v151 = 0;
              v152 = 0;
              v153 = 0;
              LODWORD(v134) = 0;
              v138 = 0;
              v139 = 0;
              v140 = 1;
              v136 = 0;
              v137 = 0;
              v135 = 0;
              v133 = v128;
              v141 = &v151;
              llvm::raw_ostream::SetBufferAndMode();
              v96 = (unint64_t *)v154;
              v95 = (unint64_t *)v155;
              v97 = HIDWORD(v156);
              v98 = v156;
              if (v155 == v154)
                v99 = HIDWORD(v156);
              else
                v99 = v156;
              v100 = (unint64_t *)v155;
              if ((_DWORD)v99)
              {
                v101 = 8 * v99;
                v100 = (unint64_t *)v155;
                while (*v100 >= 0xFFFFFFFFFFFFFFFELL)
                {
                  ++v100;
                  v101 -= 8;
                  if (!v101)
                    goto LABEL_198;
                }
              }
              v102 = &v155[8 * v99];
              if (v100 != (unint64_t *)v102)
              {
LABEL_168:
                if (v95 == v96)
                  v103 = v97;
                else
                  v103 = v98;
                if ((_DWORD)v103)
                {
                  v104 = 8 * v103;
                  v105 = &v95[v103];
                  while (*v95 >= 0xFFFFFFFFFFFFFFFELL)
                  {
                    ++v95;
                    v104 -= 8;
                    if (!v104)
                    {
                      v95 = v105;
                      break;
                    }
                  }
                }
                v106 = v137;
                if (v100 != v95)
                {
                  if ((unint64_t)(v136 - (_BYTE *)v137) > 1)
                  {
                    *v137 = 8236;
                    v106 = ++v137;
                  }
                  else
                  {
                    llvm::raw_ostream::write((llvm::raw_ostream *)&v133, ", ");
                    v106 = v137;
                  }
                }
                if (v136 == v106)
                {
                  v107 = (void **)llvm::raw_ostream::write((llvm::raw_ostream *)&v133, "'");
                }
                else
                {
                  *v106 = 39;
                  v137 = (_WORD *)((char *)v137 + 1);
                  v107 = (void **)&v133;
                }
                v108 = *(_QWORD *)(*v100 + 40) & 0xFFFFFFFFFFFFFFF8;
                if ((*(_QWORD *)(*v100 + 40) & 7) == 0 && v108 != 0)
                {
                  v110 = *(unsigned int **)(v108 + 16);
                  v113 = *v110;
                  v111 = v110 + 4;
                  v112 = v113;
                  v114 = v107[4];
                  if (v113 <= (unint64_t)((_BYTE *)v107[3] - (_BYTE *)v114))
                  {
                    if (v112)
                    {
                      memcpy(v114, v111, v112);
                      v107[4] = (char *)v107[4] + v112;
                    }
                  }
                  else
                  {
                    v107 = (void **)llvm::raw_ostream::write((llvm::raw_ostream *)v107, (const char *)v111);
                  }
                }
                v38 = v130;
                v115 = v107[4];
                v68 = v127;
                if (v107[3] == v115)
                {
                  llvm::raw_ostream::write((llvm::raw_ostream *)v107, "'");
                }
                else
                {
                  *v115 = 39;
                  v107[4] = (char *)v107[4] + 1;
                }
                v116 = v100 + 1;
                while (v116 != (unint64_t *)v102)
                {
                  v117 = *v116++;
                  if (v117 <= 0xFFFFFFFFFFFFFFFDLL)
                  {
                    v96 = (unint64_t *)v154;
                    v95 = (unint64_t *)v155;
                    v100 = v116 - 1;
                    v97 = HIDWORD(v156);
                    v98 = v156;
                    goto LABEL_168;
                  }
                }
              }
LABEL_198:
              if (v137 != v135)
                llvm::raw_ostream::flush_nonempty((llvm::raw_ostream *)&v133);
              v118 = *(_DWORD *)(v66 + 24);
              v119 = v161[11] + 2128;
              v144 = 0;
              v145 = v119;
              v146 = 5770;
              if (v153 >= 0)
                v120 = &v151;
              else
                v120 = v151;
              if (v153 >= 0)
                v121 = HIBYTE(v153) & 0x7F;
              else
                v121 = v152;
              sub_22E3B89A8(&v144, v120, v121);
              v147 = v118;
              v150 = v146;
              v148 = 0;
              v149 = v145;
              if (v144)
              {
                v148 = (_OWORD *)sub_22E3B8AAC(v145);
                sub_22E78D4E8(v148, (uint64_t)v144);
              }
              sub_22E8928F4((unint64_t)&v164, (unint64_t)&v147);
              if (v148 && v149)
              {
                sub_22E3BB10C(v149, (unint64_t)v148);
                v148 = 0;
              }
              if (v144 && v145)
                sub_22E3BB10C(v145, (unint64_t)v144);
              llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v133);
              if (SHIBYTE(v153) < 0)
                operator delete(v151);
              v47 = 0;
              v72 = 3;
            }
            else
            {
              v72 = 1;
            }
          }
          else
          {
            if (HIDWORD(v156) != v157)
              goto LABEL_158;
            v72 = 0;
          }
LABEL_218:
          if (v155 != v154)
            free(v155);
        }
LABEL_220:
        if (v160 < 0)
          operator delete(v159[0]);
        if (v72 != 3 && v72)
        {
          v47 = 0;
        }
        else
        {
          while (1)
          {
            v66 = *(_QWORD *)(v66 + 8) & 0xFFFFFFFFFFFFFFF8;
            if (!v66)
              break;
            if ((*(_DWORD *)(v66 + 28) & 0x7Fu) - 49 < 3)
              goto LABEL_108;
          }
        }
        if ((v47 & 1) == 0 && v163)
        {
          sub_22E8FCA40(v161, v38, 0xF13u, 0, (uint64_t)&v133);
          v122 = sub_22E8901B8((uint64_t)&v133, &v143);
          sub_22E8901B8(v122, &v142);
          sub_22E903BEC((unsigned int *)&v133);
          if ((_DWORD)v165)
          {
            v123 = (int *)v164;
            v124 = &v164[32 * v165];
            do
            {
              v125 = (uint64_t)(v123 + 2);
              v126 = *v123;
              v123 += 8;
              sub_22E90379C(v161, v126, v125, 0, (uint64_t)&v133);
              sub_22E903BEC((unsigned int *)&v133);
            }
            while (v123 != (int *)v124);
          }
          v47 = 0;
        }
      }
      else
      {
        v47 = 1;
      }
LABEL_69:
      if (__p)
      {
        v174 = __p;
        operator delete(__p);
      }
      sub_22E3B3AD0((uint64_t)&v170);
      if (HIDWORD(v168) && (_DWORD)v168)
      {
        v48 = 0;
        v49 = 8 * v168;
        do
        {
          v50 = *(llvm **)((char *)v167 + v48);
          if (v50 != (llvm *)-8 && v50 != 0)
            llvm::deallocate_buffer(v50, (void *)(*(_QWORD *)v50 + 25));
          v48 += 8;
        }
        while (v49 != v48);
      }
      free(v167);
      sub_22E89277C(&v164);
      sub_22E89277C(&v178);
      v5 = v132;
      if ((v47 & 1) != 0)
      {
LABEL_81:
        sub_22EFCA95C(v5, v10);
        return;
      }
    }
    else
    {
      sub_22E89277C(&v178);
      v5 = v132;
    }
  }
  sub_22EFC77E8(v5, 1);
}

BOOL sub_22EA62818(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  _BOOL4 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  uint64_t v24;
  unsigned int v25[24];
  uint64_t v26;
  uint64_t v27;

  if (a3)
  {
    v26 = *(_QWORD *)(a2 + 48);
    v7 = sub_22E3E4B64(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0));
    if (v7
      && (*(_DWORD *)(v7 + 16) & 0x780000) != 0x80000
      && ((v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
        ? (v9 = (*(_DWORD *)(v8 + 16) & 0xFF800FF) == 110624779)
        : (v9 = 0),
          v9))
    {
      v10 = *(_DWORD *)(v7 + 20) == 4;
      if (*(_DWORD *)(v7 + 20) == 4)
        return v10;
    }
    else
    {
      v10 = 0;
    }
    if (!a4)
      return v10;
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v25);
    v24 = *(_QWORD *)(a3 + 16);
    v11 = sub_22E8906A0((uint64_t)v25, &v24);
    v12 = sub_22E8901B8(v11, &v26);
    v13 = v12;
    if (*(_BYTE *)(v12 + 80))
    {
      v14 = *(unsigned __int8 **)(v12 + 32);
      if (!v14)
      {
        v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
        *(_QWORD *)(v13 + 32) = v14;
      }
      v14[*v14 + 1] = 15;
      v15 = *(_BYTE **)(v13 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v12 + 92))
        goto LABEL_18;
      v18 = (uint64_t *)(*(_QWORD *)v12 + 12784);
      v19 = *(_QWORD *)(v12 + 16);
      if (v19)
        v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
      v27 = v19;
      v20 = sub_22F2F1D6C(v18, &v27)[1] + 32 * *(unsigned int *)(v13 + 88);
      v23 = *(unsigned __int8 **)(v20 + 8);
      v22 = (_QWORD *)(v20 + 8);
      v21 = v23;
      if (!v23)
      {
        v21 = (unsigned __int8 *)sub_22E3B8AAC(v22[1]);
        *v22 = v21;
      }
      v21[*v21 + 1] = 15;
      v15 = (_BYTE *)*v22;
    }
    v16 = *v15;
    *v15 = v16 + 1;
    *(_QWORD *)&v15[8 * v16 + 16] = a3;
LABEL_18:
    sub_22E903BEC(v25);
    return v10;
  }
  return sub_22E53D1F8(a2);
}

BOOL sub_22EA629E4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  _QWORD *v27;
  unsigned __int8 *v28;
  unsigned int v29[24];
  uint64_t v30;
  uint64_t v31;
  unsigned int v32[24];
  uint64_t v33;

  v6 = sub_22F31253C(a2);
  if (v6)
  {
    sub_22EFC8E88(a2);
    v8 = *v7;
    v9 = *((unsigned int *)v7 + 2);
    if ((_DWORD)v9 && *(_WORD *)(*v8 + 32) != 411)
    {
      v10 = 8 * v9 - 8;
      v11 = *v7;
      do
      {
        v12 = v11[1];
        ++v11;
        v10 -= 8;
      }
      while (*(_WORD *)(v12 + 32) != 411);
    }
    do
    {
      v14 = *v8++;
      v13 = v14;
    }
    while (*(_WORD *)(v14 + 32) != 411);
    if (*(_WORD *)(a3 + 32) != 0x19B)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v32);
      v31 = *(_QWORD *)(a3 + 16);
      v15 = sub_22E8906A0((uint64_t)v32, &v31);
      v30 = a3;
      v16 = sub_22E8FB3C4(v15, &v30);
      v17 = v16;
      if (*(_BYTE *)(v16 + 80))
      {
        v18 = *(unsigned __int8 **)(v16 + 32);
        if (!v18)
        {
          v18 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v17 + 40));
          *(_QWORD *)(v17 + 32) = v18;
        }
        v18[*v18 + 1] = 15;
        v19 = *(_BYTE **)(v17 + 32);
      }
      else
      {
        if (!*(_BYTE *)(v16 + 92))
          goto LABEL_15;
        v23 = (uint64_t *)(*(_QWORD *)v16 + 12784);
        v24 = *(_QWORD *)(v16 + 16);
        if (v24)
          v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 32))(v24);
        v33 = v24;
        v25 = sub_22F2F1D6C(v23, &v33)[1] + 32 * *(unsigned int *)(v17 + 88);
        v28 = *(unsigned __int8 **)(v25 + 8);
        v27 = (_QWORD *)(v25 + 8);
        v26 = v28;
        if (!v28)
        {
          v26 = (unsigned __int8 *)sub_22E3B8AAC(v27[1]);
          *v27 = v26;
        }
        v26[*v26 + 1] = 15;
        v19 = (_BYTE *)*v27;
      }
      v20 = *v19;
      *v19 = v20 + 1;
      *(_QWORD *)&v19[8 * v20 + 16] = v13;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v32);
      v33 = *(_QWORD *)(a3 + 16);
      v21 = sub_22E8906A0((uint64_t)v32, &v33);
      v31 = a3;
      sub_22E8FB3C4(v21, &v31);
    }
LABEL_15:
    sub_22E903BEC(v32);
    sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0x1574u, 0, (uint64_t)v29);
    sub_22E903BEC(v29);
  }
  return v6;
}

BOOL sub_22EA62BF8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  int v6;
  BOOL v7;
  _BOOL4 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  _QWORD *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;
  uint64_t v25;

  if (a3)
  {
    v24 = *(_QWORD *)(a2 + 48);
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v6 = *(_DWORD *)(v5 + 16);
    if (v5)
      v7 = *(_DWORD *)(v5 + 16) == 11;
    else
      v7 = 0;
    if (v7)
    {
      v8 = (v6 & 0xFF80000) == 91226112;
      if ((v6 & 0xFF80000) == 0x5700000)
        return v8;
    }
    else
    {
      v8 = 0;
    }
    if (!a4)
      return v8;
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
    v22 = *(_QWORD *)(a3 + 16);
    v10 = sub_22E8906A0((uint64_t)v23, &v22);
    v11 = sub_22E8901B8(v10, &v24);
    v12 = v11;
    if (*(_BYTE *)(v11 + 80))
    {
      v13 = *(unsigned __int8 **)(v11 + 32);
      if (!v13)
      {
        v13 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v12 + 40));
        *(_QWORD *)(v12 + 32) = v13;
      }
      v13[*v13 + 1] = 15;
      v14 = *(_BYTE **)(v12 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v11 + 92))
        goto LABEL_17;
      v16 = (uint64_t *)(*(_QWORD *)v11 + 12784);
      v17 = *(_QWORD *)(v11 + 16);
      if (v17)
        v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 32))(v17);
      v25 = v17;
      v18 = sub_22F2F1D6C(v16, &v25)[1] + 32 * *(unsigned int *)(v12 + 88);
      v21 = *(unsigned __int8 **)(v18 + 8);
      v20 = (_QWORD *)(v18 + 8);
      v19 = v21;
      if (!v21)
      {
        v19 = (unsigned __int8 *)sub_22E3B8AAC(v20[1]);
        *v20 = v19;
      }
      v19[*v19 + 1] = 15;
      v14 = (_BYTE *)*v20;
    }
    v15 = *v14;
    *v14 = v15 + 1;
    *(_QWORD *)&v14[8 * v15 + 16] = a3;
LABEL_17:
    sub_22E903BEC(v23);
    return v8;
  }
  return sub_22E546FA4(a2);
}

uint64_t sub_22EA62D8C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[12];
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  int v29;
  char *v30;
  uint64_t v31;
  _QWORD v32[33];

  v32[32] = *MEMORY[0x24BDAC8D0];
  v23 = a3;
  if (!a3)
    return sub_22E5435F8(a2);
  v22 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
    || (v9 = *(_QWORD *)((sub_22F10ACF8(v8) & 0xFFFFFFFFFFFFFFF0) + 8), (v9 & 8) == 0)
    || (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0x5800
    || (v10 = sub_22F10ACF8(*(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF0)), (v10 & 1) == 0)
    && (*(_BYTE *)((v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
  {
    if (a4)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)&v28);
      v25[0] = *(_QWORD *)(a3 + 16);
      v11 = sub_22E8906A0((uint64_t)&v28, v25);
      v12 = sub_22E8901B8(v11, &v22);
      sub_22E9AEE38(v12, &v23);
      sub_22E903BEC((unsigned int *)&v28);
    }
    return 0;
  }
  v14 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
  v15 = sub_22EFBAFDC(a2);
  v13 = 1;
  if ((sub_22EE8B180(a1, v15) & 1) != 0)
    return v13;
  v28 = a1;
  v30 = (char *)v32;
  v31 = 0x800000000;
  v29 = -1;
  sub_22EA8C15C((uint64_t)&v28, v14);
  v13 = v16;
  if ((v16 & 1) != 0 || !a4)
  {
    sub_22F244794((void **)&v30);
    if (!(_DWORD)v13)
      return v13;
    return 1;
  }
  v26 = a3;
  v27 = v14;
  sub_22E8FCA40(v28, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v25);
  v24 = *(_QWORD *)(a3 + 16);
  v17 = sub_22E8906A0((uint64_t)v25, &v24);
  v18 = sub_22E8901B8(v17, (uint64_t *)&v27);
  sub_22E9AEE38(v18, &v26);
  sub_22E903BEC((unsigned int *)v25);
  if (!(_DWORD)v31)
  {
LABEL_18:
    sub_22F244794((void **)&v30);
    return 0;
  }
  v19 = 32 * v31;
  v20 = v30 + 24;
  while (*v20)
  {
    (*(void (**)(_QWORD))(*(_QWORD *)*v20 + 48))(*v20);
    v20 += 4;
    v19 -= 32;
    if (!v19)
      goto LABEL_18;
  }
  sub_22E4A06C4();
  return sub_22EA62FD8();
}

BOOL sub_22EA62FD8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  _QWORD *v27;
  unsigned __int8 *v28;
  unsigned int v29[24];
  uint64_t v30;
  uint64_t v31;
  unsigned int v32[24];
  uint64_t v33;

  v6 = sub_22F26E968(a2);
  if (v6)
  {
    sub_22EFC8E88(a2);
    v8 = *v7;
    v9 = *((unsigned int *)v7 + 2);
    if ((_DWORD)v9 && *(_WORD *)(*v8 + 32) != 439)
    {
      v10 = 8 * v9 - 8;
      v11 = *v7;
      do
      {
        v12 = v11[1];
        ++v11;
        v10 -= 8;
      }
      while (*(_WORD *)(v12 + 32) != 439);
    }
    do
    {
      v14 = *v8++;
      v13 = v14;
    }
    while (*(_WORD *)(v14 + 32) != 439);
    if (*(_WORD *)(a3 + 32) != 0x1B7)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v32);
      v31 = *(_QWORD *)(a3 + 16);
      v15 = sub_22E8906A0((uint64_t)v32, &v31);
      v30 = a3;
      v16 = sub_22E8FB3C4(v15, &v30);
      v17 = v16;
      if (*(_BYTE *)(v16 + 80))
      {
        v18 = *(unsigned __int8 **)(v16 + 32);
        if (!v18)
        {
          v18 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v17 + 40));
          *(_QWORD *)(v17 + 32) = v18;
        }
        v18[*v18 + 1] = 15;
        v19 = *(_BYTE **)(v17 + 32);
      }
      else
      {
        if (!*(_BYTE *)(v16 + 92))
          goto LABEL_15;
        v23 = (uint64_t *)(*(_QWORD *)v16 + 12784);
        v24 = *(_QWORD *)(v16 + 16);
        if (v24)
          v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 32))(v24);
        v33 = v24;
        v25 = sub_22F2F1D6C(v23, &v33)[1] + 32 * *(unsigned int *)(v17 + 88);
        v28 = *(unsigned __int8 **)(v25 + 8);
        v27 = (_QWORD *)(v25 + 8);
        v26 = v28;
        if (!v28)
        {
          v26 = (unsigned __int8 *)sub_22E3B8AAC(v27[1]);
          *v27 = v26;
        }
        v26[*v26 + 1] = 15;
        v19 = (_BYTE *)*v27;
      }
      v20 = *v19;
      *v19 = v20 + 1;
      *(_QWORD *)&v19[8 * v20 + 16] = v13;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v32);
      v33 = *(_QWORD *)(a3 + 16);
      v21 = sub_22E8906A0((uint64_t)v32, &v33);
      v31 = a3;
      sub_22E8FB3C4(v21, &v31);
    }
LABEL_15:
    sub_22E903BEC(v32);
    sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0x1574u, 0, (uint64_t)v29);
    sub_22E903BEC(v29);
  }
  return v6;
}

BOOL sub_22EA631EC(_QWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  BOOL v6;
  int v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  _QWORD *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  unsigned int v23[24];
  uint64_t v24;
  uint64_t v25;

  if (!a3)
    return sub_22E5375AC(a2);
  v24 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v5)
    v6 = *(_DWORD *)(v5 + 16) == 11;
  else
    v6 = 0;
  if (v6)
  {
    v7 = *(_DWORD *)(v5 + 16) & 0xFF80000;
    if (v7 != 88080384 && v7 != 90701824)
    {
      if (v7 != 91226112 && (a4 & 1) != 0)
        goto LABEL_18;
      if (v7 != 91226112)
        return 0;
    }
    return 1;
  }
  if ((a4 & 1) == 0)
    return 0;
LABEL_18:
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v23);
  v22 = *(_QWORD *)(a3 + 16);
  v10 = sub_22E8906A0((uint64_t)v23, &v22);
  v11 = sub_22E8901B8(v10, &v24);
  v12 = v11;
  if (*(_BYTE *)(v11 + 80))
  {
    v13 = *(unsigned __int8 **)(v11 + 32);
    if (!v13)
    {
      v13 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v12 + 40));
      *(_QWORD *)(v12 + 32) = v13;
    }
    v13[*v13 + 1] = 15;
    v14 = *(_BYTE **)(v12 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v11 + 92))
      goto LABEL_24;
    v16 = (uint64_t *)(*(_QWORD *)v11 + 12784);
    v17 = *(_QWORD *)(v11 + 16);
    if (v17)
      v17 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v17 + 32))(v17);
    v25 = v17;
    v18 = sub_22F2F1D6C(v16, &v25)[1] + 32 * *(unsigned int *)(v12 + 88);
    v21 = *(unsigned __int8 **)(v18 + 8);
    v20 = (_QWORD *)(v18 + 8);
    v19 = v21;
    if (!v21)
    {
      v19 = (unsigned __int8 *)sub_22E3B8AAC(v20[1]);
      *v20 = v19;
    }
    v19[*v19 + 1] = 15;
    v14 = (_BYTE *)*v20;
  }
  v15 = *v14;
  *v14 = v15 + 1;
  *(_QWORD *)&v14[8 * v15 + 16] = a3;
LABEL_24:
  sub_22E903BEC(v23);
  return 0;
}

BOOL sub_22EA63398(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  _QWORD *v27;
  unsigned __int8 *v28;
  unsigned int v29[24];
  uint64_t v30;
  uint64_t v31;
  unsigned int v32[24];
  uint64_t v33;

  v6 = sub_22F312474(a2);
  if (v6)
  {
    sub_22EFC8E88(a2);
    v8 = *v7;
    v9 = *((unsigned int *)v7 + 2);
    if ((_DWORD)v9 && *(_WORD *)(*v8 + 32) != 447)
    {
      v10 = 8 * v9 - 8;
      v11 = *v7;
      do
      {
        v12 = v11[1];
        ++v11;
        v10 -= 8;
      }
      while (*(_WORD *)(v12 + 32) != 447);
    }
    do
    {
      v14 = *v8++;
      v13 = v14;
    }
    while (*(_WORD *)(v14 + 32) != 447);
    if (*(_WORD *)(a3 + 32) != 0x1BF)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v32);
      v31 = *(_QWORD *)(a3 + 16);
      v15 = sub_22E8906A0((uint64_t)v32, &v31);
      v30 = a3;
      v16 = sub_22E8FB3C4(v15, &v30);
      v17 = v16;
      if (*(_BYTE *)(v16 + 80))
      {
        v18 = *(unsigned __int8 **)(v16 + 32);
        if (!v18)
        {
          v18 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v17 + 40));
          *(_QWORD *)(v17 + 32) = v18;
        }
        v18[*v18 + 1] = 15;
        v19 = *(_BYTE **)(v17 + 32);
      }
      else
      {
        if (!*(_BYTE *)(v16 + 92))
          goto LABEL_15;
        v23 = (uint64_t *)(*(_QWORD *)v16 + 12784);
        v24 = *(_QWORD *)(v16 + 16);
        if (v24)
          v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 32))(v24);
        v33 = v24;
        v25 = sub_22F2F1D6C(v23, &v33)[1] + 32 * *(unsigned int *)(v17 + 88);
        v28 = *(unsigned __int8 **)(v25 + 8);
        v27 = (_QWORD *)(v25 + 8);
        v26 = v28;
        if (!v28)
        {
          v26 = (unsigned __int8 *)sub_22E3B8AAC(v27[1]);
          *v27 = v26;
        }
        v26[*v26 + 1] = 15;
        v19 = (_BYTE *)*v27;
      }
      v20 = *v19;
      *v19 = v20 + 1;
      *(_QWORD *)&v19[8 * v20 + 16] = v13;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v32);
      v33 = *(_QWORD *)(a3 + 16);
      v21 = sub_22E8906A0((uint64_t)v32, &v33);
      v31 = a3;
      sub_22E8FB3C4(v21, &v31);
    }
LABEL_15:
    sub_22E903BEC(v32);
    sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0x1574u, 0, (uint64_t)v29);
    sub_22E903BEC(v29);
  }
  return v6;
}

void sub_22EA635AC(_QWORD *a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v6;
  __int128 v7;
  char v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  _QWORD *v29;
  unsigned __int8 *v30;
  uint64_t v31;
  unsigned int v32[24];
  unint64_t v33;
  uint64_t v34;

  v6 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
  v7 = a3[1];
  *(_OWORD *)v6 = *a3;
  *(_OWORD *)(v6 + 16) = v7;
  v8 = *(_BYTE *)(v6 + 34);
  *(_WORD *)(v6 + 32) = 448;
  *(_BYTE *)(v6 + 34) = v8 & 0xE0;
  v9 = *(_QWORD *)(a2 + 48);
  v33 = v9;
  v10 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(*(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
    goto LABEL_26;
  v11 = sub_22EF5C728(a1[11], v9);
  if (v11 && *(_BYTE *)(v11 + 16) == 2)
  {
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v12)
      v13 = (*(_DWORD *)(v12 + 16) & 0xFF800FF) == 110624779;
    else
      v13 = 0;
    if (!v13)
      goto LABEL_17;
LABEL_26:
    sub_22EFCA95C(a2, v6);
    return;
  }
  v14 = *v10;
  v15 = sub_22E3E4B64(v14);
  if (v15 && (*(_BYTE *)(v15 + 18) & 0x78) == 0)
    v14 = *(_QWORD *)(*(_QWORD *)(v15 + 32) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v16)
    v17 = *(_DWORD *)(v16 + 16) == 11;
  else
    v17 = 0;
  if (v17
    && ((*(_DWORD *)(v16 + 16) >> 19) & 0x1FFu) - 166 <= 0x2D
    && ((1 << ((*(_DWORD *)(v16 + 16) >> 19) + 90)) & 0x30000001B185) != 0)
  {
    goto LABEL_26;
  }
LABEL_17:
  sub_22E8FCA40(a1, *(_DWORD *)(v6 + 16), 0xEDDu, 0, (uint64_t)v32);
  v31 = *(_QWORD *)(v6 + 16);
  v18 = sub_22E8906A0((uint64_t)v32, &v31);
  v19 = sub_22E8901B8(v18, (uint64_t *)&v33);
  v20 = v19;
  if (*(_BYTE *)(v19 + 80))
  {
    v21 = *(unsigned __int8 **)(v19 + 32);
    if (!v21)
    {
      v21 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v20 + 40));
      *(_QWORD *)(v20 + 32) = v21;
    }
    v21[*v21 + 1] = 15;
    v22 = *(_BYTE **)(v20 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v19 + 92))
      goto LABEL_28;
    v25 = (uint64_t *)(*(_QWORD *)v19 + 12784);
    v26 = *(_QWORD *)(v19 + 16);
    if (v26)
      v26 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v26 + 32))(v26);
    v34 = v26;
    v27 = sub_22F2F1D6C(v25, &v34)[1] + 32 * *(unsigned int *)(v20 + 88);
    v30 = *(unsigned __int8 **)(v27 + 8);
    v29 = (_QWORD *)(v27 + 8);
    v28 = v30;
    if (!v30)
    {
      v28 = (unsigned __int8 *)sub_22E3B8AAC(v29[1]);
      *v29 = v28;
    }
    v28[*v28 + 1] = 15;
    v22 = (_BYTE *)*v29;
  }
  v23 = *v22;
  *v22 = v23 + 1;
  *(_QWORD *)&v22[8 * v23 + 16] = v6;
LABEL_28:
  sub_22E903BEC(v32);
  sub_22EFC77E8(a2, 1);
}

BOOL sub_22EA63814(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  _QWORD *v27;
  unsigned __int8 *v28;
  unsigned int v29[24];
  uint64_t v30;
  uint64_t v31;
  unsigned int v32[24];
  uint64_t v33;

  v6 = sub_22F3124D8(a2);
  if (v6)
  {
    sub_22EFC8E88(a2);
    v8 = *v7;
    v9 = *((unsigned int *)v7 + 2);
    if ((_DWORD)v9 && *(_WORD *)(*v8 + 32) != 453)
    {
      v10 = 8 * v9 - 8;
      v11 = *v7;
      do
      {
        v12 = v11[1];
        ++v11;
        v10 -= 8;
      }
      while (*(_WORD *)(v12 + 32) != 453);
    }
    do
    {
      v14 = *v8++;
      v13 = v14;
    }
    while (*(_WORD *)(v14 + 32) != 453);
    if (*(_WORD *)(a3 + 32) != 0x1C5)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v32);
      v31 = *(_QWORD *)(a3 + 16);
      v15 = sub_22E8906A0((uint64_t)v32, &v31);
      v30 = a3;
      v16 = sub_22E8FB3C4(v15, &v30);
      v17 = v16;
      if (*(_BYTE *)(v16 + 80))
      {
        v18 = *(unsigned __int8 **)(v16 + 32);
        if (!v18)
        {
          v18 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v17 + 40));
          *(_QWORD *)(v17 + 32) = v18;
        }
        v18[*v18 + 1] = 15;
        v19 = *(_BYTE **)(v17 + 32);
      }
      else
      {
        if (!*(_BYTE *)(v16 + 92))
          goto LABEL_15;
        v23 = (uint64_t *)(*(_QWORD *)v16 + 12784);
        v24 = *(_QWORD *)(v16 + 16);
        if (v24)
          v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 32))(v24);
        v33 = v24;
        v25 = sub_22F2F1D6C(v23, &v33)[1] + 32 * *(unsigned int *)(v17 + 88);
        v28 = *(unsigned __int8 **)(v25 + 8);
        v27 = (_QWORD *)(v25 + 8);
        v26 = v28;
        if (!v28)
        {
          v26 = (unsigned __int8 *)sub_22E3B8AAC(v27[1]);
          *v27 = v26;
        }
        v26[*v26 + 1] = 15;
        v19 = (_BYTE *)*v27;
      }
      v20 = *v19;
      *v19 = v20 + 1;
      *(_QWORD *)&v19[8 * v20 + 16] = v13;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v32);
      v33 = *(_QWORD *)(a3 + 16);
      v21 = sub_22E8906A0((uint64_t)v32, &v33);
      v31 = a3;
      sub_22E8FB3C4(v21, &v31);
    }
LABEL_15:
    sub_22E903BEC(v32);
    sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0x1574u, 0, (uint64_t)v29);
    sub_22E903BEC(v29);
  }
  return v6;
}

__n128 sub_22EA63A28(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  unsigned int v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  char v23;
  _BYTE v24[96];
  unsigned int v25[24];
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;

  v6 = sub_22E547004(a2);
  if (!v6)
  {
    if (!a2 || (*(_DWORD *)(a2 + 28) & 0x7Fu) - 60 > 6 || sub_22E3CB5E0(a2) || (*(_BYTE *)(a2 + 29) & 1) == 0)
      goto LABEL_27;
    sub_22EFC8E88(a2);
    v12 = *(uint64_t **)v11;
    v13 = *(unsigned int *)(v11 + 8);
    v14 = *(uint64_t **)v11;
    if ((_DWORD)v13)
    {
      v15 = 8 * v13;
      v14 = *(uint64_t **)v11;
      while (*(_WORD *)(*v14 + 32) != 175)
      {
        ++v14;
        v15 -= 8;
        if (!v15)
          goto LABEL_27;
      }
    }
    if (v14 == &v12[v13])
    {
LABEL_27:
      v20 = sub_22E3CD3D4(a1[11] + 2032, 56, 3);
      v21 = *(_QWORD *)(a3 + 40);
      result = *(__n128 *)a3;
      v22 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)v20 = *(_OWORD *)a3;
      *(_OWORD *)(v20 + 16) = v22;
      v23 = *(_BYTE *)(v20 + 34);
      *(_WORD *)(v20 + 32) = 210;
      *(_BYTE *)(v20 + 34) = v23 & 0xE0;
      *(_QWORD *)(v20 + 40) = v21;
      *(_BYTE *)(v20 + 48) = 0;
      return result;
    }
    do
    {
      v18 = *v12++;
      v17 = v18;
    }
    while (*(_WORD *)(v18 + 32) != 175);
    v31 = v17;
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)&v29);
    v28 = a3;
    v19 = sub_22E8FB3C4((uint64_t)&v29, &v28);
    sub_22E9AEE38(v19, &v31);
    sub_22E903BEC((unsigned int *)&v29);
    sub_22E8FCA40(a1, *(_DWORD *)(v17 + 16), 0x1574u, 0, (uint64_t)&v26);
    v16 = (unsigned int *)&v26;
    goto LABEL_22;
  }
  v7 = v6;
  sub_22F007D7C(*(unsigned __int8 **)(v6 + 40), a1[11], 0, (uint64_t)&v29);
  sub_22F007D7C(*(unsigned __int8 **)(a3 + 40), a1[11], 0, (uint64_t)&v26);
  v9 = v30;
  if (v30 > 0x40)
    v10 = llvm::APInt::equalSlowCase((llvm::APInt *)&v29, (const llvm::APInt *)&v26);
  else
    v10 = v29 == v26;
  if (v27 >= 0x41 && v26)
  {
    MEMORY[0x2348A0E84](v26, 0x1000C8000313F17);
    v9 = v30;
  }
  if (v9 >= 0x41)
  {
    if (v29)
      MEMORY[0x2348A0E84](v29, 0x1000C8000313F17);
  }
  if ((v10 & 1) == 0)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(v7 + 16), 0xBF8u, 0, (uint64_t)v25);
    sub_22E903BEC(v25);
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1574u, 0, (uint64_t)v24);
    v16 = (unsigned int *)v24;
LABEL_22:
    sub_22E903BEC(v16);
    sub_22EFC77E8(a2, 1);
  }
  return result;
}

__n128 sub_22EA63C9C(_QWORD *a1, uint64_t a2, __n128 *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;
  uint64_t v15;
  __n128 v16;
  char v17;
  unsigned int v18[24];
  __n128 *v19;
  unsigned int v20[24];
  uint64_t v21;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_10;
  sub_22EFC8E88(a2);
  v7 = *(uint64_t **)v6;
  v8 = *(unsigned int *)(v6 + 8);
  v9 = *(uint64_t **)v6;
  if ((_DWORD)v8)
  {
    v10 = 8 * v8;
    v9 = *(uint64_t **)v6;
    while (*(_WORD *)(*v9 + 32) != 210)
    {
      ++v9;
      v10 -= 8;
      if (!v10)
        goto LABEL_10;
    }
  }
  if (v9 == &v7[v8])
  {
LABEL_10:
    v15 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
    result = *a3;
    v16 = a3[1];
    *(__n128 *)v15 = *a3;
    *(__n128 *)(v15 + 16) = v16;
    v17 = *(_BYTE *)(v15 + 34);
    *(_WORD *)(v15 + 32) = 175;
    *(_BYTE *)(v15 + 34) = v17 & 0xE0;
  }
  else
  {
    do
    {
      v12 = *v7++;
      v11 = v12;
    }
    while (*(_WORD *)(v12 + 32) != 210);
    v21 = v11;
    sub_22E8FCA40(a1, a3[1].n128_i32[0], 0xB34u, 0, (uint64_t)v20);
    v19 = a3;
    v13 = sub_22E8FB3C4((uint64_t)v20, (uint64_t *)&v19);
    sub_22E8FB3C4(v13, &v21);
    sub_22E903BEC(v20);
    sub_22E8FCA40(a1, *(_DWORD *)(v21 + 16), 0x1574u, 0, (uint64_t)v18);
    sub_22E903BEC(v18);
    sub_22EFC77E8(a2, 1);
  }
  return result;
}

void sub_22EA63DD8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  uint64_t *v6;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unsigned __int8 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  _QWORD *v52;
  uint64_t v53;
  unsigned __int8 *v54;
  unsigned __int8 **v55;
  unsigned __int8 *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 *v77;
  unsigned __int8 *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  int v131;
  int v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  _QWORD *v147;
  uint64_t v148;
  unsigned __int8 *v149;
  unsigned __int8 **v150;
  unsigned __int8 *v151;
  unsigned __int8 *v152;
  unsigned __int8 *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  _QWORD *v157;
  uint64_t v158;
  unsigned __int8 *v159;
  unsigned __int8 **v160;
  unsigned __int8 *v161;
  uint64_t v162;
  unsigned int v163[25];
  int v164;
  unsigned int v165[4];
  uint64_t v166;
  unsigned __int8 *v167;
  uint64_t v168;
  char v169;
  unsigned int v170;
  char v171;
  uint64_t v172;

  v6 = (uint64_t *)(a4 + 8);
  v5 = *(_QWORD *)(a4 + 8);
  if (v5 < 8)
    return;
  v11 = v5 & 0xFFFFFFFFFFFFFFF8;
  if ((v5 & 4) != 0 && v11)
  {
    v12 = *(unsigned int *)(v11 + 8);
    if (!(_DWORD)v12)
      return;
    goto LABEL_9;
  }
  if ((v5 & 4) == 0)
  {
    v13 = a4 + 16;
    v14 = (uint64_t *)(a4 + 8);
    goto LABEL_10;
  }
  v12 = *(unsigned int *)(v11 + 8);
  if ((_DWORD)v12)
  {
LABEL_9:
    v14 = *(uint64_t **)v11;
    v13 = *(_QWORD *)v11 + 8 * v12;
    do
    {
LABEL_10:
      v15 = *v14++;
      sub_22EA64B54(a1, a2, a3, v15, a5);
    }
    while (v14 != (uint64_t *)v13);
  }
  if (sub_22E4E9AA8(a3) && !sub_22E6314F8(a3))
  {
    v21 = *v6;
    if ((*v6 & 4) != 0)
      v21 = **(_QWORD **)(v21 & 0xFFFFFFFFFFFFFFF8);
    sub_22E8FCA40(a1, *(_DWORD *)(v21 + 16), 0xB2Eu, 0, (uint64_t)v165);
    v172 = a3;
    sub_22E890024((uint64_t)v165, &v172);
    sub_22E903BEC(v165);
    sub_22EA4108C(a3);
    return;
  }
  if (!sub_22E47290C(a3))
  {
    if ((*(_BYTE *)(a3 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a3);
      v17 = *(uint64_t **)v16;
      v18 = *(unsigned int *)(v16 + 8);
      v19 = *(uint64_t **)v16;
      if ((_DWORD)v18)
      {
        v20 = 8 * v18;
        v19 = *(uint64_t **)v16;
        while (*(_WORD *)(*v19 + 32) != 295)
        {
          ++v19;
          v20 -= 8;
          if (!v20)
            goto LABEL_26;
        }
      }
      if (v19 != &v17[v18])
      {
        do
        {
          v23 = *v17++;
          v22 = v23;
        }
        while (*(_WORD *)(v23 + 32) != 295);
LABEL_52:
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x113Cu, 0, (uint64_t)v165);
        if (v169)
        {
          v42 = v167;
          if (!v167)
          {
            v42 = (unsigned __int8 *)sub_22E3B8AAC(v168);
            v167 = v42;
          }
          v42[*v42 + 1] = 15;
          v43 = v167;
        }
        else
        {
          if (!v171)
            goto LABEL_106;
          v50 = v166;
          v51 = (uint64_t *)(*(_QWORD *)v165 + 12784);
          if (v166)
            v50 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v166 + 32))(v166);
          v172 = v50;
          v52 = sub_22F2F1D6C(v51, &v172);
          v53 = v52[1] + 32 * v170;
          v56 = *(unsigned __int8 **)(v53 + 8);
          v55 = (unsigned __int8 **)(v53 + 8);
          v54 = v56;
          if (!v56)
          {
            v54 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v55[1]);
            *v55 = v54;
          }
          v54[*v54 + 1] = 15;
          v43 = *v55;
        }
        v44 = *v43;
        *v43 = v44 + 1;
        *(_QWORD *)&v43[8 * v44 + 16] = v22;
LABEL_106:
        sub_22E903BEC(v165);
        sub_22EFC77E8(a3, 1);
        goto LABEL_107;
      }
    }
LABEL_26:
    if ((*(_BYTE *)(a3 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a3);
      v25 = *(uint64_t **)v24;
      v26 = *(unsigned int *)(v24 + 8);
      v27 = *(uint64_t **)v24;
      if ((_DWORD)v26)
      {
        v28 = 8 * v26;
        v27 = *(uint64_t **)v24;
        while (*(_WORD *)(*v27 + 32) != 355)
        {
          ++v27;
          v28 -= 8;
          if (!v28)
            goto LABEL_35;
        }
      }
      if (v27 != &v25[v26])
      {
        do
        {
          v29 = *v25++;
          v22 = v29;
        }
        while (*(_WORD *)(v29 + 32) != 355);
        goto LABEL_52;
      }
    }
LABEL_35:
    if ((*(_BYTE *)(a3 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a3);
      v31 = *(uint64_t **)v30;
      v32 = *(unsigned int *)(v30 + 8);
      v33 = *(uint64_t **)v30;
      if ((_DWORD)v32)
      {
        v34 = 8 * v32;
        v33 = *(uint64_t **)v30;
        while (*(_WORD *)(*v33 + 32) != 345)
        {
          ++v33;
          v34 -= 8;
          if (!v34)
            goto LABEL_44;
        }
      }
      if (v33 != &v31[v32])
      {
        do
        {
          v35 = *v31++;
          v22 = v35;
        }
        while (*(_WORD *)(v35 + 32) != 345);
        goto LABEL_52;
      }
    }
LABEL_44:
    if ((*(_BYTE *)(a3 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a3);
      v37 = *(uint64_t **)v36;
      v38 = *(unsigned int *)(v36 + 8);
      v39 = *(uint64_t **)v36;
      if ((_DWORD)v38)
      {
        v40 = 8 * v38;
        v39 = *(uint64_t **)v36;
        while (*(_WORD *)(*v39 + 32) != 270)
        {
          ++v39;
          v40 -= 8;
          if (!v40)
            goto LABEL_57;
        }
      }
      if (v39 != &v37[v38])
      {
        do
        {
          v41 = *v37++;
          v22 = v41;
        }
        while (*(_WORD *)(v41 + 32) != 270);
        goto LABEL_52;
      }
    }
LABEL_57:
    if (!sub_22E462B18(a3))
    {
      if ((*(_BYTE *)(a3 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a3);
        v46 = *(uint64_t **)v45;
        v47 = *(unsigned int *)(v45 + 8);
        v48 = *(uint64_t **)v45;
        if ((_DWORD)v47)
        {
          v49 = 8 * v47;
          v48 = *(uint64_t **)v45;
          while (*(_WORD *)(*v48 + 32) != 86)
          {
            ++v48;
            v49 -= 8;
            if (!v49)
              goto LABEL_73;
          }
        }
        if (v48 != &v46[v47])
        {
          do
          {
            v58 = *v46++;
            v57 = v58;
          }
          while (*(_WORD *)(v58 + 32) != 86);
LABEL_99:
          sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xB2Fu, 0, (uint64_t)v165);
          if (v169)
          {
            v77 = v167;
            if (!v167)
            {
              v77 = (unsigned __int8 *)sub_22E3B8AAC(v168);
              v167 = v77;
            }
            v77[*v77 + 1] = 15;
            v78 = v167;
          }
          else
          {
            if (!v171)
              goto LABEL_105;
            v155 = v166;
            v156 = (uint64_t *)(*(_QWORD *)v165 + 12784);
            if (v166)
              v155 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v166 + 32))(v166);
            v172 = v155;
            v157 = sub_22F2F1D6C(v156, &v172);
            v158 = v157[1] + 32 * v170;
            v161 = *(unsigned __int8 **)(v158 + 8);
            v160 = (unsigned __int8 **)(v158 + 8);
            v159 = v161;
            if (!v161)
            {
              v159 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v160[1]);
              *v160 = v159;
            }
            v159[*v159 + 1] = 15;
            v78 = *v160;
          }
          v79 = *v78;
          *v78 = v79 + 1;
          *(_QWORD *)&v78[8 * v79 + 16] = v57;
LABEL_105:
          LODWORD(v172) = 14;
          sub_22E8900C4((uint64_t)v165, (int *)&v172);
          goto LABEL_106;
        }
      }
LABEL_73:
      if ((*(_BYTE *)(a3 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a3);
        v60 = *(uint64_t **)v59;
        v61 = *(unsigned int *)(v59 + 8);
        v62 = *(uint64_t **)v59;
        if ((_DWORD)v61)
        {
          v63 = 8 * v61;
          v62 = *(uint64_t **)v59;
          while (*(_WORD *)(*v62 + 32) != 89)
          {
            ++v62;
            v63 -= 8;
            if (!v63)
              goto LABEL_82;
          }
        }
        if (v62 != &v60[v61])
        {
          do
          {
            v64 = *v60++;
            v57 = v64;
          }
          while (*(_WORD *)(v64 + 32) != 89);
          goto LABEL_99;
        }
      }
LABEL_82:
      if ((*(_BYTE *)(a3 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a3);
        v66 = *(uint64_t **)v65;
        v67 = *(unsigned int *)(v65 + 8);
        v68 = *(uint64_t **)v65;
        if ((_DWORD)v67)
        {
          v69 = 8 * v67;
          v68 = *(uint64_t **)v65;
          while (*(_WORD *)(*v68 + 32) != 87)
          {
            ++v68;
            v69 -= 8;
            if (!v69)
              goto LABEL_91;
          }
        }
        if (v68 != &v66[v67])
        {
          do
          {
            v70 = *v66++;
            v57 = v70;
          }
          while (*(_WORD *)(v70 + 32) != 87);
          goto LABEL_99;
        }
      }
LABEL_91:
      if ((*(_BYTE *)(a3 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a3);
        v72 = *(uint64_t **)v71;
        v73 = *(unsigned int *)(v71 + 8);
        v74 = *(uint64_t **)v71;
        if ((_DWORD)v73)
        {
          v75 = 8 * v73;
          v74 = *(uint64_t **)v71;
          while (*(_WORD *)(*v74 + 32) != 88)
          {
            ++v74;
            v75 -= 8;
            if (!v75)
              goto LABEL_107;
          }
        }
        if (v74 != &v72[v73])
        {
          do
          {
            v76 = *v72++;
            v57 = v76;
          }
          while (*(_WORD *)(v76 + 32) != 88);
          goto LABEL_99;
        }
      }
    }
  }
LABEL_107:
  if (!sub_22E88FFC4(a3))
  {
    v172 = 0;
    if ((*(_BYTE *)(a3 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a3);
      v81 = *(uint64_t **)v80;
      v82 = *(unsigned int *)(v80 + 8);
      v83 = *(uint64_t **)v80;
      if ((_DWORD)v82)
      {
        v84 = 8 * v82;
        v83 = *(uint64_t **)v80;
        while (*(_WORD *)(*v83 + 32) != 394)
        {
          ++v83;
          v84 -= 8;
          if (!v84)
            goto LABEL_117;
        }
      }
      if (v83 != &v81[v82])
      {
        do
        {
          v86 = *v81++;
          v85 = v86;
        }
        while (*(_WORD *)(v86 + 32) != 394);
        v172 = v85;
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xB2Fu, 0, (uint64_t)v165);
        v87 = sub_22E8FB3C4((uint64_t)v165, &v172);
        v164 = 13;
        sub_22E8900C4(v87, &v164);
        sub_22E903BEC(v165);
        sub_22EFC77E8(a3, 1);
      }
    }
  }
LABEL_117:
  if (!sub_22EA1DB60(a3) && !sub_22EA1DBC0(a3) && !sub_22E4752A8(a3) && (*(_BYTE *)(a3 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a3);
    v89 = *(uint64_t **)v88;
    v90 = *(unsigned int *)(v88 + 8);
    v91 = *(uint64_t **)v88;
    if ((_DWORD)v90)
    {
      v92 = 8 * v90;
      v91 = *(uint64_t **)v88;
      while (*(_WORD *)(*v91 + 32) != 414)
      {
        ++v91;
        v92 -= 8;
        if (!v92)
          goto LABEL_132;
      }
    }
    if (v91 != &v89[v90])
    {
      do
      {
        v94 = *v89++;
        v93 = v94;
      }
      while (*(_WORD *)(v94 + 32) != 414);
      v172 = v93;
      if ((*(_QWORD *)(a1[9] + 124) & 0x4000000) != 0)
        v95 = 15;
      else
        v95 = 14;
      v164 = v95;
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xB2Fu, 0, (uint64_t)v165);
      sub_22E9AEE38((uint64_t)v165, &v172);
      sub_22E8900C4((uint64_t)v165, &v164);
      sub_22E903BEC(v165);
      sub_22EFC77E8(a3, 1);
    }
  }
LABEL_132:
  if (!sub_22EA1DBC0(a3) && (*(_BYTE *)(a3 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a3);
    v97 = *(uint64_t **)v96;
    v98 = *(unsigned int *)(v96 + 8);
    v99 = *(uint64_t **)v96;
    if ((_DWORD)v98)
    {
      v100 = 8 * v98;
      v99 = *(uint64_t **)v96;
      while (*(_WORD *)(*v99 + 32) != 413)
      {
        ++v99;
        v100 -= 8;
        if (!v100)
          goto LABEL_142;
      }
    }
    if (v99 != &v97[v98])
    {
      do
      {
        v102 = *v97++;
        v101 = v102;
      }
      while (*(_WORD *)(v102 + 32) != 413);
      v172 = v101;
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xB2Fu, 0, (uint64_t)v165);
      sub_22E9AEE38((uint64_t)v165, &v172);
      v164 = 17;
      sub_22E8900C4((uint64_t)v165, &v164);
      sub_22E903BEC(v165);
      sub_22EFC77E8(a3, 1);
    }
  }
LABEL_142:
  if (!sub_22E6A2F54(a3) && (*(_BYTE *)(a3 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a3);
    v104 = *(uint64_t **)v103;
    v105 = *(unsigned int *)(v103 + 8);
    v106 = *(uint64_t **)v103;
    if ((_DWORD)v105)
    {
      v107 = 8 * v105;
      v106 = *(uint64_t **)v103;
      while (*(_WORD *)(*v106 + 32) != 424)
      {
        ++v106;
        v107 -= 8;
        if (!v107)
          goto LABEL_152;
      }
    }
    if (v106 != &v104[v105])
    {
      do
      {
        v109 = *v104++;
        v108 = v109;
      }
      while (*(_WORD *)(v109 + 32) != 424);
      v172 = v108;
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xB2Fu, 0, (uint64_t)v165);
      v110 = sub_22E8FB3C4((uint64_t)v165, &v172);
      v164 = 18;
      sub_22E8900C4(v110, &v164);
      sub_22E903BEC(v165);
      sub_22EFC77E8(a3, 1);
    }
  }
LABEL_152:
  if ((*(_BYTE *)(a3 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a3);
    v112 = *(uint64_t **)v111;
    v113 = *(unsigned int *)(v111 + 8);
    v114 = *(uint64_t **)v111;
    if ((_DWORD)v113)
    {
      v115 = 8 * v113;
      v114 = *(uint64_t **)v111;
      while (*(_WORD *)(*v114 + 32) != 401)
      {
        ++v114;
        v115 -= 8;
        if (!v115)
          goto LABEL_182;
      }
    }
    if (v114 != &v112[v113])
    {
      do
      {
        v117 = *v112++;
        v116 = v117;
      }
      while (*(_WORD *)(v117 + 32) != 401);
      v172 = v116;
      if (!sub_22E9A9E30(a3)
        || (*(_QWORD *)(a3 + 144) >= 8uLL ? (v118 = (*(_QWORD *)(a3 + 144) & 6) == 0) : (v118 = 0), v118))
      {
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x1891u, 0, (uint64_t)v165);
        v119 = sub_22E8FB3C4((uint64_t)v165, &v172);
        v164 = 20;
        sub_22E8900C4(v119, &v164);
        sub_22E903BEC(v165);
        if ((*(_BYTE *)(a3 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a3);
          v121 = *(char **)v120;
          v122 = *(unsigned int *)(v120 + 8);
          if ((_DWORD)v122)
          {
            v123 = &v121[8 * v122];
            v124 = 8 * v122 - 8;
            v125 = *(char **)v120;
            v126 = *(char **)v120;
            while (1)
            {
              v127 = *(_QWORD *)v126;
              v126 += 8;
              if (*(_WORD *)(v127 + 32) == 401)
                break;
              v124 -= 8;
              v125 = v126;
              if (v126 == v123)
                goto LABEL_180;
            }
            if (v126 == v123)
            {
              v123 = v125;
            }
            else
            {
              v128 = 8;
              v123 = v125;
              do
              {
                v129 = *(_QWORD *)&v125[v128];
                if (*(_WORD *)(v129 + 32) != 401)
                {
                  *(_QWORD *)v123 = v129;
                  v123 += 8;
                }
                v128 += 8;
                v124 -= 8;
              }
              while (v124);
              v121 = *(char **)v120;
            }
          }
          else
          {
            v123 = *(char **)v120;
          }
LABEL_180:
          v130 = (unint64_t)(v123 - v121) >> 3;
          *(_DWORD *)(v120 + 8) = v130;
          if (!(_DWORD)v130)
            *(_DWORD *)(a3 + 28) &= ~0x100u;
        }
      }
    }
  }
LABEL_182:
  if (!a3 || (*(_DWORD *)(a3 + 28) & 0x7Fu) - 60 > 6 || sub_22E3CB5E0(a3) || !sub_22E54AA28(a3))
    goto LABEL_190;
  v131 = sub_22EA6135C(a1, a3);
  if (v131 != 4)
  {
    v132 = v131;
    if (sub_22E633F90(a3))
      goto LABEL_190;
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xEDCu, 0, (uint64_t)v165);
    LODWORD(v172) = v132;
    sub_22E89519C((uint64_t)v165, (unsigned int *)&v172);
    goto LABEL_189;
  }
  if ((*(_BYTE *)(a3 + 29) & 1) == 0
    || (sub_22EFC8E88(a3),
        sub_22F271604(*(uint64_t **)v162, (uint64_t *)(*(_QWORD *)v162 + 8 * *(unsigned int *)(v162 + 8)))))
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xB30u, 0, (uint64_t)v165);
    v144 = sub_22E532CBC(a3);
    if (v169)
    {
      v153 = v167;
      if (!v167)
      {
        v153 = (unsigned __int8 *)sub_22E3B8AAC(v168);
        v167 = v153;
      }
      v153[*v153 + 1] = 15;
      v152 = v167;
    }
    else
    {
      if (!v171)
      {
LABEL_223:
        sub_22F2F30F4((uint64_t)v165, (uint64_t)"global constant variables, parameters, non-static data members, and global builtin variables");
LABEL_189:
        sub_22E903BEC(v165);
        sub_22EFC77E8(a3, 1);
        goto LABEL_190;
      }
      v145 = v166;
      v146 = (uint64_t *)(*(_QWORD *)v165 + 12784);
      if (v166)
        v145 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v166 + 32))(v166);
      v172 = v145;
      v147 = sub_22F2F1D6C(v146, &v172);
      v148 = v147[1] + 32 * v170;
      v151 = *(unsigned __int8 **)(v148 + 8);
      v150 = (unsigned __int8 **)(v148 + 8);
      v149 = v151;
      if (!v151)
      {
        v149 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v150[1]);
        *v150 = v149;
      }
      v149[*v149 + 1] = 15;
      v152 = *v150;
    }
    v154 = *v152;
    *v152 = v154 + 1;
    *(_QWORD *)&v152[8 * v154 + 16] = v144;
    goto LABEL_223;
  }
LABEL_190:
  if ((*(_BYTE *)(a1[9] + 104) & 0x20) != 0)
    sub_22EA56684(a1, a3);
  if (sub_22EA7D688(a3) && sub_22EFDBF50(a3) != 3)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0xCACu, 0, (uint64_t)v163);
    sub_22E903BEC(v163);
    if ((*(_BYTE *)(a3 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a3);
      v134 = *(char **)v133;
      v135 = *(unsigned int *)(v133 + 8);
      if ((_DWORD)v135)
      {
        v136 = &v134[8 * v135];
        v137 = 8 * v135 - 8;
        v138 = *(char **)v133;
        v139 = *(char **)v133;
        while (1)
        {
          v140 = *(_QWORD *)v139;
          v139 += 8;
          if (*(_WORD *)(v140 + 32) == 483)
            break;
          v137 -= 8;
          v138 = v139;
          if (v139 == v136)
            goto LABEL_208;
        }
        if (v139 == v136)
        {
          v136 = v138;
        }
        else
        {
          v141 = 8;
          v136 = v138;
          do
          {
            v142 = *(_QWORD *)&v138[v141];
            if (*(_WORD *)(v142 + 32) != 483)
            {
              *(_QWORD *)v136 = v142;
              v136 += 8;
            }
            v141 += 8;
            v137 -= 8;
          }
          while (v137);
          v134 = *(char **)v133;
        }
      }
      else
      {
        v136 = *(char **)v133;
      }
LABEL_208:
      v143 = (unint64_t)(v136 - v134) >> 3;
      *(_DWORD *)(v133 + 8) = v143;
      if (!(_DWORD)v143)
        *(_DWORD *)(a3 + 28) &= ~0x100u;
    }
  }
}

#error "22EA64B54: too big function (funcsize=0)"

BOOL sub_22EA7D688(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 483)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

void sub_22EA7D6E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(a3 + 8);
  v5 = (uint64_t *)(a3 + 8);
  v6 = v7;
  if ((v7 & 4) != 0)
  {
    v9 = v6 & 0xFFFFFFFFFFFFFFF8;
    v5 = *(uint64_t **)v9;
    v8 = *(_QWORD *)v9 + 8 * *(unsigned int *)(v9 + 8);
  }
  else
  {
    v8 = (uint64_t)&v5[v6 > 7];
  }
  while (1)
  {
    if (v5 == (uint64_t *)v8)
    {
      if (!a2)
        return;
      goto LABEL_10;
    }
    if (*(_WORD *)(*(_QWORD *)(*v5 + 72) + 8) == 438)
      break;
    ++v5;
  }
  sub_22EA7D790(a1, a2, *v5);
  if (!a2)
    return;
LABEL_10:
  if (sub_22E4EC2BC(a2))
    sub_22EA7DB34((uint64_t)a1, a2);
}

void sub_22EA7D790(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v6;
  uint64_t v7;
  int v8;
  unsigned int *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t *v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  BOOL v35;
  uint64_t v36;
  _BYTE v37[96];
  _BYTE v38[96];
  unsigned int v39[24];

  v4 = a2;
  v6 = *(_DWORD *)(a2 + 28);
  if (a2 && (*(_DWORD *)(a2 + 28) & 0x7Fu) - 42 >= 0xFFFFFFFD)
  {
    if (sub_22F10E06C(*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8)
                                             + ((2 * *(_QWORD *)(a2 + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0)))
    {
      v7 = sub_22F10E2FC(*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v4 + 80) & 0xFFFFFFFFFFFFFFF8)
                                               + ((2 * *(_QWORD *)(v4 + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0));
      v4 = sub_22F114198(*(_QWORD *)(v7 + 24));
      if (!v4)
        goto LABEL_12;
      goto LABEL_8;
    }
    v6 = *(_DWORD *)(v4 + 28);
  }
  if ((v6 & 0x7Eu) - 34 >= 4)
  {
LABEL_12:
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1891u, 0, (uint64_t)v39);
    v10 = sub_22E8D2984((uint64_t)v39, (uint64_t *)a3);
    LODWORD(v36) = 1;
    sub_22E8900C4(v10, (int *)&v36);
LABEL_13:
    v9 = v39;
LABEL_14:
    sub_22E903BEC(v9);
    return;
  }
LABEL_8:
  v8 = *(_DWORD *)(v4 + 72);
  if ((v8 & 0xE000) != 0x4000)
    goto LABEL_12;
  if ((v8 & 0x10000) == 0)
  {
    if ((v8 & 0x20000) != 0)
      return;
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1B94u, 0, (uint64_t)v38);
    v9 = (unsigned int *)v38;
    goto LABEL_14;
  }
  v11 = sub_22EFC3B90(v4);
  if (!v11)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1B95u, 0, (uint64_t)v37);
    v9 = (unsigned int *)v37;
    goto LABEL_14;
  }
  v12 = v11;
  v36 = *(_QWORD *)(v11 + 48);
  v13 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v36 & 0xFFFFFFFFFFFFFFF0);
  if (sub_22F110DD0(v14)
    || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 55 <= 1)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(v12 + 24), 0x1B93u, 0, (uint64_t)v39);
    LOBYTE(v33) = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
                - 55 < 2;
    v15 = sub_22E894E38((uint64_t)v39, (unsigned __int8 *)&v33);
    sub_22E8901B8(v15, &v36);
    goto LABEL_13;
  }
  if ((sub_22F1110EC(v14, 0) & 1) == 0)
  {
    v16 = sub_22EF5CDF0(a1[11], *v13);
    sub_22EF5CDF0(a1[11], *v13);
    v18 = v17;
    v19 = (uint64_t *)(*(_QWORD *)(v12 + 48) & 0xFFFFFFFFFFFFFFF0);
    if ((sub_22F1110EC(*v19, 0) & 1) == 0)
    {
      v20 = v12;
      while (2)
      {
        if (sub_22EF5CDF0(a1[11], *v19) != v16 || (sub_22EF5CDF0(a1[11], *v19), v21 > v18))
        {
          v25 = sub_22EF5CDF0(a1[11], *v19);
          v35 = v25 != v16;
          v26 = sub_22EF5CDF0(a1[11], *v19);
          if (v25 == v16)
            v28 = v27;
          else
            v28 = v26;
          v34 = v28;
          sub_22E8FCA40(a1, *(_DWORD *)(v20 + 24), 0x1B92u, 0, (uint64_t)v39);
          v29 = sub_22E894E38((uint64_t)v39, (unsigned __int8 *)&v35);
          v33 = v20;
          v30 = sub_22E890024(v29, (uint64_t *)&v33);
          sub_22E89519C(v30, &v34);
          sub_22E903BEC(v39);
          if (v35)
            v31 = v16;
          else
            v31 = v18;
          LODWORD(v33) = v31;
          sub_22E8FCA40(a1, *(_DWORD *)(v12 + 24), 0x17F4u, 0, (uint64_t)v39);
          v32 = sub_22E894E38((uint64_t)v39, (unsigned __int8 *)&v35);
          sub_22E89519C(v32, (unsigned int *)&v33);
          goto LABEL_13;
        }
        do
        {
          v20 = *(_QWORD *)(v20 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v20)
          {
            v22 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
            v23 = *(_OWORD *)(a3 + 16);
            *(_OWORD *)v22 = *(_OWORD *)a3;
            *(_OWORD *)(v22 + 16) = v23;
            v24 = *(_BYTE *)(v22 + 34);
            *(_WORD *)(v22 + 32) = 331;
            *(_BYTE *)(v22 + 34) = v24 & 0xE0;
            sub_22EFCA95C(v4, v22);
            return;
          }
        }
        while ((*(_DWORD *)(v20 + 28) & 0x7Fu) - 49 > 2);
        v19 = (uint64_t *)(*(_QWORD *)(v20 + 48) & 0xFFFFFFFFFFFFFFF0);
        if ((sub_22F1110EC(*v19, 0) & 1) == 0)
          continue;
        break;
      }
    }
  }
}

void sub_22EA7DB34(uint64_t a1, uint64_t a2)
{
  unint64_t i;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  int v9;
  __int16 v10;
  unsigned __int8 v11;

  if ((*(_WORD *)(a2 + 72) & 0x80) != 0)
    sub_22EFCC320(a2 + 64);
  for (i = *(_QWORD *)(a2 + 80); i; i = *(_QWORD *)(i + 8) & 0xFFFFFFFFFFFFFFF8)
  {
    if (!sub_22E4EC2BC(i))
    {
      v5 = *(_QWORD *)(a1 + 88);
      v7 = 0uLL;
      v9 = 0;
      v8 = 0;
      v10 = 0;
      v11 = ((((v11 >> 7) & 1) << 23) | 0x780000u) >> 16;
      v6 = sub_22F37FD3C(v5, &v7);
      sub_22EFCA95C(i, v6);
      if ((*(_DWORD *)(i + 28) & 0x7Eu) - 38 >= 0xFFFFFFFC)
        sub_22EA7DB34(a1, i);
    }
  }
}

uint64_t sub_22EA7DBF8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  _BOOL8 v14;
  unsigned int v16[24];

  v6 = (uint64_t *)(a3 + 8);
  v5 = *(_QWORD *)(a3 + 8);
  if ((v5 & 4) != 0)
  {
    v8 = v5 & 0xFFFFFFFFFFFFFFF8;
    v6 = *(uint64_t **)v8;
    v7 = *(_QWORD *)v8 + 8 * *(unsigned int *)(v8 + 8);
  }
  else
  {
    v7 = (uint64_t)&v6[v5 > 7];
  }
  if (v6 == (uint64_t *)v7)
    return 0;
  while (1)
  {
    v9 = *v6;
    if (*(_WORD *)(*(_QWORD *)(*v6 + 72) + 8) != 24)
      break;
    v10 = *(unsigned __int16 *)(v9 + 28) | (*(unsigned __int8 *)(v9 + 30) << 16);
    v11 = v10 & 0x70000;
    v12 = v10 & 0x5FFFF;
    v14 = v11 == 0x10000 || v12 == 327697;
    sub_22EA64B54(a1, 0, a2, v9, v14);
    if (++v6 == (uint64_t *)v7)
      return 0;
  }
  sub_22E8FCA40(a1, *(_DWORD *)(v9 + 16), 0x1117u, 0, (uint64_t)v16);
  sub_22E903BEC(v16);
  return 1;
}

unsigned int *sub_22EA7DCEC(unsigned int *a1, uint64_t a2)
{
  unsigned int *result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_22EA7DD64(a1, *(_QWORD *)a2 + 24);
  result = sub_22EA7DD64(a1, a2 + 1096);
  v5 = *(unsigned int *)(a2 + 120);
  if ((_DWORD)v5)
  {
    v6 = 0;
    v7 = 120 * v5;
    do
    {
      result = sub_22EA7DD64(a1, *(_QWORD *)(a2 + 112) + v6 + 16);
      v6 += 120;
    }
    while (v7 != v6);
  }
  return result;
}

unsigned int *sub_22EA7DD64(unsigned int *result, uint64_t a2)
{
  unsigned int *v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12[24];

  v2 = result;
  v4 = (uint64_t *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 8);
  if ((v3 & 4) != 0)
  {
    v6 = v3 & 0xFFFFFFFFFFFFFFF8;
    v4 = *(uint64_t **)v6;
    v5 = *(_QWORD *)v6 + 8 * *(unsigned int *)(v6 + 8);
  }
  else
  {
    v5 = (uint64_t)&v4[v3 > 7];
  }
  while (v4 != (uint64_t *)v5)
  {
    v7 = *v4;
    if ((*(_BYTE *)(*v4 + 50) & 3) == 0)
    {
      v8 = *(unsigned __int16 *)(*(_QWORD *)(v7 + 72) + 8);
      if (v8 != 479)
      {
        if (v8 == 480)
          v9 = 146;
        else
          v9 = 6272;
        sub_22E8FCA40(v2, *(_DWORD *)(v7 + 16), v9, 0, (uint64_t)v12);
        v10 = sub_22E8D2984((uint64_t)v12, (uint64_t *)v7);
        v11 = *(_QWORD *)(v7 + 16);
        sub_22E8906A0(v10, &v11);
        result = sub_22E903BEC(v12);
      }
    }
    ++v4;
  }
  return result;
}

unint64_t sub_22EA7DE44(uint64_t a1, unint64_t a2, void *a3, unsigned int a4)
{
  int v5;
  int v6;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  int i;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  char v37;
  char v38;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unsigned int v50;
  int v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int j;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  size_t v61;
  void *v62;
  void *v64;
  uint64_t v65;
  _QWORD v66[18];

  v66[16] = *MEMORY[0x24BDAC8D0];
  v5 = *(_DWORD *)(a2 + 28);
  v6 = v5 & 0x7F;
  if (!a2 || (v5 & 0x7Eu) - 58 < 0xFFFFFFFA)
  {
    v16 = 0;
    if (!a2 || (v6 - 67) < 0xFFFFFFF9)
      return v16;
    v17 = *(_QWORD *)(a2 + 16);
    v18 = (unint64_t *)(v17 & 0xFFFFFFFFFFFFFFF8);
    v19 = v17 & 0xFFFFFFFFFFFFFFF8;
    if ((v17 & 4) != 0)
      v19 = *v18;
    v20 = *(_WORD *)(v19 + 8) & 0x7F;
    if (v20 == 83)
    {
LABEL_61:
      if ((v17 & 4) != 0)
        v18 = (unint64_t *)*v18;
      v31 = *(_QWORD *)(a2 + 56);
      v32 = v31 & 0xFFFFFFFFFFFFFFF8;
      if ((v31 & 4) != 0)
        v32 = *(_QWORD *)(v32 + 32);
      v33 = sub_22EFBB670(*(_QWORD *)(v19 + 48), (uint64_t)v18, *(_DWORD *)(a2 + 64), *(_DWORD *)(a2 + 24), (uint64_t)a3, *(_QWORD *)(a2 + 48), v32, *(_BYTE *)(a2 + 96) & 7);
      v16 = v33;
      v34 = *(_QWORD *)(a2 + 56);
      if ((v34 & 4) != 0)
      {
        v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFF8);
        if (*v35)
          sub_22EFBB0DC(v33, *v35, v35[1]);
      }
      return v16;
    }
    while (1)
    {
      v21 = -40;
      if (v20 > 70)
      {
        if (v20 == 71)
        {
          v21 = -56;
        }
        else if (v20 != 81)
        {
          goto LABEL_44;
        }
      }
      else
      {
        if (v20 > 0x18)
          goto LABEL_43;
        if (v20 == 16)
          goto LABEL_37;
        if (((1 << v20) & 0x1066) != 0)
          goto LABEL_50;
        if (v20 == 24)
        {
LABEL_37:
          v21 = -48;
        }
        else
        {
LABEL_43:
          if (v20 != 70)
          {
LABEL_44:
            v22 = v20 - 52;
            if ((v20 - 33) >= 5)
              v23 = -48;
            else
              v23 = -64;
            if (v22 >= 6)
              v21 = v23;
            else
              v21 = -72;
            goto LABEL_50;
          }
          v21 = -64;
        }
      }
LABEL_50:
      v24 = *(_QWORD *)(v19 + v21 + 16);
      v19 = v24 & 0xFFFFFFFFFFFFFFF8;
      if ((v24 & 4) != 0)
        v19 = *(_QWORD *)v19;
      v20 = *(_WORD *)(v19 + 8) & 0x7F;
      if (v20 == 83)
        goto LABEL_61;
    }
  }
  v8 = *(_QWORD *)(a2 + 16);
  v9 = (unint64_t *)(v8 & 0xFFFFFFFFFFFFFFF8);
  if (v6 == 83)
  {
    v25 = a2;
  }
  else
  {
    v10 = v8 & 0xFFFFFFFFFFFFFFF8;
    if ((v8 & 4) != 0)
      v10 = *v9;
    for (i = *(_WORD *)(v10 + 8) & 0x7F; i != 83; i = *(_WORD *)(v10 + 8) & 0x7F)
    {
      v12 = -40;
      if (i > 70)
      {
        if (i == 71)
        {
          v12 = -56;
        }
        else if (i != 81)
        {
          goto LABEL_17;
        }
      }
      else
      {
        if (i > 0x18)
          goto LABEL_16;
        if (i == 16)
          goto LABEL_10;
        if (((1 << i) & 0x1066) != 0)
          goto LABEL_23;
        if (i == 24)
        {
LABEL_10:
          v12 = -48;
        }
        else
        {
LABEL_16:
          if (i != 70)
          {
LABEL_17:
            v13 = i - 52;
            if ((i - 33) >= 5)
              v14 = -48;
            else
              v14 = -64;
            if (v13 >= 6)
              v12 = v14;
            else
              v12 = -72;
            goto LABEL_23;
          }
          v12 = -64;
        }
      }
LABEL_23:
      v15 = *(_QWORD *)(v10 + v12 + 16);
      v10 = v15 & 0xFFFFFFFFFFFFFFF8;
      if ((v15 & 4) != 0)
        v10 = *(_QWORD *)v10;
    }
    v25 = v10 - 40;
  }
  v26 = *(_QWORD *)(v25 + 88);
  if ((v8 & 4) != 0)
    v9 = (unint64_t *)*v9;
  v28 = *(_QWORD *)(a2 + 48);
  v27 = *(_QWORD *)(a2 + 56);
  v29 = v27 & 0xFFFFFFFFFFFFFFF8;
  if ((v27 & 4) != 0)
  {
    v36 = v29 + 32;
    v29 = *(_QWORD *)(v29 + 32);
    v30 = *(_QWORD *)(v36 + 8);
  }
  else
  {
    v30 = 0;
  }
  v37 = (*(_DWORD *)(a1 + 56) & 0xFC) != 4;
  v38 = (*(_QWORD *)(a2 + 80) & 0x300000) != 0;
  v64 = a3;
  LODWORD(v65) = a4;
  sub_22EFC6D6C((uint64_t)v66, (uint64_t)a3);
  v40 = sub_22EFC4400(v26, (uint64_t)v9, a4, (uint64_t *)&v64, v28, v29, 0, v37, 0, v38, 0, v30);
  v16 = v40;
  v41 = *(_QWORD *)(a2 + 56);
  if ((v41 & 4) != 0)
  {
    v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFF8);
    if (*v42)
      sub_22EFBB0DC(v40, *v42, v42[1]);
  }
  v43 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v43 && *(_BYTE *)(v43 + 16) == 26
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
    && (v43 = sub_22F10CF48(v43)) != 0)
  {
    v64 = v66;
    v65 = 0x1000000000;
    v44 = (unsigned __int16)(*(_QWORD *)(v43 + 16) >> 38);
    if ((unsigned __int16)(*(_QWORD *)(v43 + 16) >> 38))
    {
      v45 = (unint64_t *)(v43 + 40);
      if (v16)
        v46 = v16 + 72;
      else
        v46 = 0;
      v47 = 8 * v44;
      do
      {
        v48 = sub_22F31DD6C(a1, v46, a4, *v45);
        v49 = v48;
        v50 = v65;
        v51 = *(_DWORD *)(v48 + 96);
        *(_DWORD *)(v48 + 96) = v51 & 0xFFF01FFF;
        if (v50 >= 0xFF)
        {
          sub_22F3AC2B8(v48, v50);
          v50 = v65;
        }
        else
        {
          *(_DWORD *)(v48 + 96) = v51 & 0xF0001FFF | (v50 << 20);
        }
        if (v50 >= HIDWORD(v65))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v50 = v65;
        }
        *((_QWORD *)v64 + v50) = v49;
        v44 = (v65 + 1);
        LODWORD(v65) = v65 + 1;
        ++v45;
        v47 -= 8;
      }
      while (v47);
      v52 = v64;
      if (!v16)
        goto LABEL_92;
    }
    else
    {
      v52 = v66;
      if (!v16)
        goto LABEL_92;
    }
    v53 = v16;
    if ((*(_DWORD *)(v16 + 28) & 0x7F) == 0x53)
    {
LABEL_118:
      if (v44)
      {
        v61 = 8 * v44;
        v62 = (void *)sub_22E3CD3D4(*(_QWORD *)(v53 + 88) + 2032, 8 * v44, 3);
        *(_QWORD *)(v16 + 120) = v62;
        memmove(v62, v52, v61);
        v52 = v64;
      }
      if (v52 != v66)
        free(v52);
      return v16;
    }
LABEL_92:
    v54 = *(_QWORD *)(v16 + 16);
    v55 = v54 & 0xFFFFFFFFFFFFFFF8;
    if ((v54 & 4) != 0)
      v55 = *(_QWORD *)v55;
    for (j = *(_WORD *)(v55 + 8) & 0x7F; j != 83; j = *(_WORD *)(v55 + 8) & 0x7F)
    {
      v57 = -40;
      if (j > 70)
      {
        if (j == 71)
        {
          v57 = -56;
        }
        else if (j != 81)
        {
          goto LABEL_105;
        }
      }
      else
      {
        if (j > 0x18)
          goto LABEL_104;
        if (j == 16)
          goto LABEL_98;
        if (((1 << j) & 0x1066) != 0)
          goto LABEL_111;
        if (j == 24)
        {
LABEL_98:
          v57 = -48;
        }
        else
        {
LABEL_104:
          if (j != 70)
          {
LABEL_105:
            v58 = j - 52;
            if ((j - 33) >= 5)
              v59 = -48;
            else
              v59 = -64;
            if (v58 >= 6)
              v57 = v59;
            else
              v57 = -72;
            goto LABEL_111;
          }
          v57 = -64;
        }
      }
LABEL_111:
      v60 = *(_QWORD *)(v55 + v57 + 16);
      v55 = v60 & 0xFFFFFFFFFFFFFFF8;
      if ((v60 & 4) != 0)
        v55 = *(_QWORD *)v55;
    }
    v53 = v55 - 40;
    goto LABEL_118;
  }
  return v16;
}

void sub_22EA7E44C(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  __int128 v27;
  uint64_t v28;
  llvm *v29[2];
  __int128 v30;
  void *v31;
  uint64_t v32;
  _QWORD v33[3];

  v33[2] = *MEMORY[0x24BDAC8D0];
  sub_22E90116C(a1);
  if (*(_QWORD *)(a1 + 3240) != *(_QWORD *)(a1 + 3248))
  {
    v6 = 0;
    v7 = *(_DWORD *)(a3 + 28);
    if (a3 && (*(_DWORD *)(a3 + 28) & 0x7Fu) - 67 >= 0xFFFFFFF9)
    {
      if (sub_22EFB93F4(a3))
        v6 = a3;
      else
        v6 = 0;
      v7 = *(_DWORD *)(a3 + 28);
    }
    if (a3 && (v7 & 0x7Eu) - 58 >= 0xFFFFFFFA && sub_22EFB9440(a3) || (a3 = v6) != 0)
    {
      v8 = *(_QWORD *)(a3 + 40);
      if ((v8 & 7) == 0 && (v8 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        v9 = sub_22F326EC0(a1 + 3216, v8 & 0xFFFFFFFFFFFFFFF8);
        if (*(_QWORD *)(a1 + 3248) != v9)
        {
          v10 = v9;
          v11 = (void **)(v9 + 48);
          v12 = *(_QWORD *)(v9 + 48);
          v13 = (unsigned int *)(v9 + 8);
          v14 = *(unsigned int *)(v9 + 56);
          if ((_DWORD)v14)
          {
            v15 = 16 * v14;
            do
            {
              sub_22F326D30(a1, a2, a3, v12);
              v12 += 16;
              v15 -= 16;
            }
            while (v15);
          }
          v28 = 1;
          v30 = xmmword_22F463B20;
          *(_OWORD *)v29 = xmmword_22F463B20;
          v31 = v33;
          v32 = 0x100000000;
          sub_22F309C68(v13, (unsigned int *)&v28);
          if (v11 != &v31)
          {
            v16 = *(void **)(v10 + 48);
            if (v16 == (void *)(v10 + 64) || v31 == v33)
            {
              if (*(_DWORD *)(v10 + 60) < v32)
                llvm::SmallVectorBase<unsigned int>::grow_pod();
              v18 = *(_DWORD *)(v10 + 56);
              if (HIDWORD(v32) < v18)
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v18 = *(_DWORD *)(v10 + 56);
              }
              v19 = v32;
              if (v18 >= v32)
                v20 = v32;
              else
                v20 = v18;
              if ((_DWORD)v20)
              {
                v21 = 0;
                do
                {
                  v22 = (char *)*v11 + v21;
                  v23 = (char *)v31 + v21;
                  v27 = *(_OWORD *)v22;
                  v24 = *(_DWORD *)((char *)v31 + v21 + 8);
                  *(_QWORD *)v22 = *(_QWORD *)((char *)v31 + v21);
                  *((_DWORD *)v22 + 2) = v24;
                  *(_QWORD *)v23 = v27;
                  *((_DWORD *)v23 + 2) = DWORD2(v27);
                  v21 += 16;
                }
                while (16 * v20 != v21);
                v18 = *(_DWORD *)(v10 + 56);
                v19 = v32;
              }
              v25 = v18 - v19;
              if (v18 <= v19)
              {
                v26 = v19 - v18;
                if (v19 > v18)
                {
                  if ((_DWORD)v20 != v19)
                  {
                    memcpy((void *)(*(_QWORD *)(v10 + 48) + 16 * v18), (char *)v31 + 16 * v20, 16 * v19 - 16 * v20);
                    v18 = *(_DWORD *)(v10 + 56);
                  }
                  *(_DWORD *)(v10 + 56) = v26 + v18;
                  LODWORD(v32) = v20;
                }
              }
              else
              {
                if ((_DWORD)v20 != v18)
                {
                  memcpy((char *)v31 + 16 * v19, (char *)*v11 + 16 * v20, (_BYTE *)*v11 + 16 * v18 - ((_BYTE *)*v11 + 16 * v20));
                  v19 = v32;
                }
                LODWORD(v32) = v25 + v19;
                *(_DWORD *)(v10 + 56) = v20;
              }
            }
            else
            {
              *(_QWORD *)(v10 + 48) = v31;
              v31 = v16;
              v17 = *(_QWORD *)(v10 + 56);
              *(_QWORD *)(v10 + 56) = v32;
              v32 = v17;
            }
          }
          if (v31 != v33)
            free(v31);
          if ((v28 & 1) == 0)
            llvm::deallocate_buffer(v29[0], (void *)(16 * LODWORD(v29[1])));
        }
      }
    }
  }
}

void sub_22EA7E768(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = *(_QWORD *)(*(_QWORD *)a4 + 32);
  if (v8 >= 8 && ((v8 & 4) == 0 || (v9 = v8 & 0xFFFFFFFFFFFFFFF8) == 0 || *(_DWORD *)(v9 + 8)))
    sub_22EA63DD8(a1, a2, a3, *(_QWORD *)a4 + 24, 1);
  v10 = *(unsigned int *)(a4 + 120);
  if ((_DWORD)v10)
  {
    v11 = 0;
    v12 = 120 * v10;
    do
    {
      sub_22EA63DD8(a1, a2, a3, *(_QWORD *)(a4 + 112) + v11 + 16, 0);
      v11 += 120;
    }
    while (v12 != v11);
  }
  sub_22EA63DD8(a1, a2, a3, a4 + 1096, 1);
  sub_22E91049C((uint64_t)a1, a2, a3);
  sub_22E9114FC(a1, a3);
}

void sub_22EA7E84C(_QWORD *a1, uint64_t a2, unsigned int *a3)
{
  uint64_t *v3;
  int v6;
  char v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  __int128 v24;
  int v25;
  int v26;
  int v27;
  __int16 v28;
  unsigned __int8 v29;

  v3 = (uint64_t *)a1[400];
  a1[400] = a2;
  if (a3)
  {
    while (1)
    {
      v6 = *((_DWORD *)v3 + 4);
      if (v6)
        break;
LABEL_51:
      v3 = (uint64_t *)*v3;
      if (!v3)
        return;
    }
    v7 = 0;
    v8 = (unsigned __int8 *)v3[1];
    v9 = &v8[80 * v6];
    while (1)
    {
      if (!v8[1])
      {
        v10 = *v8;
        if (v10 == 2)
        {
          v11 = a3[7];
          v12 = v11 & 0x7F;
          v13 = v12 > 0x33 || ((1 << (v11 & 0x7F)) & 0xE000002000000) == 0;
          if (v13 && (v11 & 0x7E) - 52 > 5)
          {
LABEL_34:
            if ((*(_WORD *)(a1[9] + 148) & 2) == 0
              || (a3[7] & 0x7E) - 58 < 0xFFFFFFFA
              || !sub_22F3089DC((uint64_t)a3)
              || *((_DWORD *)v8 + 2) != 2647)
            {
              sub_22E8FCA40(a1, *((_DWORD *)v8 + 1), *((_DWORD *)v8 + 2), 0, (uint64_t)&v24);
              v23 = *((_QWORD *)v8 + 2);
              v18 = sub_22E8901B8((uint64_t)&v24, &v23);
              v22 = *((_DWORD *)v8 + 3);
              sub_22E89519C(v18, &v22);
              sub_22E903BEC((unsigned int *)&v24);
            }
            v8[1] = 1;
            goto LABEL_5;
          }
          v14 = *((_DWORD *)v8 + 2);
          if (v14 == 6846)
          {
            v15 = 3;
            if (v12 != 25 && v12 != 51)
              goto LABEL_34;
          }
          else if (v12 != 51 && v12 != 25 || (v15 = 2, v14 != 2682) && v14 != 2684)
          {
            v16 = sub_22F1E361C(*(_QWORD **)(a1[11] + 1992), a3[6]);
            if (v16)
              v17 = v16 == 3;
            else
              v17 = 1;
            if (v17)
              goto LABEL_34;
            v15 = 1;
          }
          v19 = a1[11];
          v20 = *((_DWORD *)v8 + 1);
          v24 = 0uLL;
          v25 = v20;
          v26 = v20;
          v27 = 0;
          v28 = 0;
          v29 = ((((v29 >> 7) & 1) << 23) | 0x780000u) >> 16;
          v21 = sub_22F3A4818(v19, "", 0, v15, &v24);
          sub_22EFCA95C((uint64_t)a3, v21);
        }
        else if (v10 == 1)
        {
          if ((v7 & 1) != 0 && (a3[7] & 0x7F) == 0x3D)
          {
            v7 = 1;
          }
          else
          {
            sub_22E9094F8((uint64_t)a1, (uint64_t)v8, (uint64_t)a3);
            v7 |= v8[1] != 0;
          }
        }
        else if (!*v8 && (a3[7] & 0x80) == 0)
        {
          if (v8[77]
            || v8 + 80 == (unsigned __int8 *)(v3[1] + 80 * *((unsigned int *)v3 + 4))
            || v8[80]
            || v8[81]
            || !v8[157]
            || *((_DWORD *)v8 + 1) != *((_DWORD *)v8 + 21)
            || *((_QWORD *)v8 + 1) != *((_QWORD *)v8 + 11))
          {
            sub_22E91B438((uint64_t)a1, (uint64_t)v8, a3);
          }
          else
          {
            sub_22E91B644((uint64_t)a1, (uint64_t)v8, (uint64_t)(v8 + 80), a3);
            v8 += 80;
          }
        }
      }
LABEL_5:
      v8 += 80;
      if (v8 == v9)
        goto LABEL_51;
    }
  }
}

BOOL sub_22EA7EB50(uint64_t a1)
{
  _BOOL8 result;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  int v7;

  result = 0;
  v3 = *(_DWORD *)(a1 + 28) & 0x7F;
  if (v3 != 64 && v3 != 62)
  {
    v4 = *(_QWORD *)(a1 + 16);
    v5 = (_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF8);
    v6 = v4 & 0xFFFFFFFFFFFFFFF8;
    if ((v4 & 4) != 0)
      v6 = v5[1];
    v7 = *(_WORD *)(sub_22EFCBB30(v6) + 8) & 0x7F;
    result = 1;
    if (v7 != 16 && v7 != 83)
    {
      if ((v4 & 4) != 0)
        v5 = (_QWORD *)*v5;
      return ((_WORD)v5[1] & 0x7Eu) - 34 < 4;
    }
  }
  return result;
}

uint64_t sub_22EA7EBFC(_QWORD *a1, int *a2, uint64_t a3, _DWORD *a4, unsigned int a5)
{
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t *v18;
  int v20;
  void *v21;
  int *v22;
  void **v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *__dst[2];
  unint64_t v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  char v33;
  unint64_t *v34;
  unsigned int v35;
  char v36;
  unsigned __int8 v37;
  unsigned int v38;
  int *v39;
  __int128 v40;
  _QWORD v41[6];

  v41[5] = *MEMORY[0x24BDAC8D0];
  v38 = a5;
  v35 = 32;
  v34 = 0;
  v36 = 1;
  v37 = 1;
  if ((*(_BYTE *)(a3 + 1) & 0x80) != 0)
    goto LABEL_9;
  sub_22F00905C(a3, a1[11], 0, (uint64_t)&v31);
  sub_22E54C490((uint64_t)&v34, (uint64_t)&v31);
  v10 = v37;
  if (v33 && v32 >= 0x41 && v31)
    MEMORY[0x2348A0E84](v31, 0x1000C8000313F17);
  if (!v10)
  {
LABEL_9:
    if (a5 == -1)
    {
      sub_22E8FCA40(a1, a2[4], 0xAE5u, 0, (uint64_t)&v31);
      v39 = a2;
      v14 = sub_22E8FB3C4((uint64_t)&v31, (uint64_t *)&v39);
    }
    else
    {
      sub_22E8FCA40(a1, a2[4], 0xAE0u, 0, (uint64_t)&v31);
      v39 = a2;
      v13 = sub_22E8FB3C4((uint64_t)&v31, (uint64_t *)&v39);
      v14 = sub_22E89519C(v13, &v38);
    }
    v30 = 1;
    v15 = sub_22E8900C4(v14, &v30);
    sub_22F0D4E74(a3);
    __dst[0] = v16;
    sub_22E8906A0(v15, (uint64_t *)__dst);
LABEL_13:
    sub_22E903BEC((unsigned int *)&v31);
    v17 = 0;
    goto LABEL_19;
  }
  v11 = v35;
  if (v35 > 0x40)
    v12 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v34);
  else
    v12 = v35 + __clz((unint64_t)v34) - 64;
  if (v11 - v12 >= 0x21)
  {
    sub_22EFF605C(a3);
    sub_22E8FCA40(a1, v20, 0xDDBu, 0, (uint64_t)&v31);
    v39 = (int *)v41;
    v40 = xmmword_22F455490;
    llvm::APInt::toString();
    v21 = (void *)v40;
    if ((unint64_t)v40 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v22 = v39;
    if ((unint64_t)v40 >= 0x17)
    {
      v24 = (v40 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v40 | 7) != 0x17)
        v24 = v40 | 7;
      v25 = v24 + 1;
      v23 = (void **)operator new(v24 + 1);
      __dst[1] = v21;
      v29 = v25 | 0x8000000000000000;
      __dst[0] = v23;
    }
    else
    {
      HIBYTE(v29) = v40;
      v23 = __dst;
      if (!(_QWORD)v40)
        goto LABEL_32;
    }
    memmove(v23, v22, (size_t)v21);
LABEL_32:
    *((_BYTE *)v21 + (_QWORD)v23) = 0;
    if (v39 != (int *)v41)
      free(v39);
    v26 = sub_22F2F3734((uint64_t)&v31, __dst);
    LODWORD(v39) = 32;
    v27 = sub_22E8900C4(v26, (int *)&v39);
    v30 = 1;
    sub_22E8900C4(v27, &v30);
    if (SHIBYTE(v29) < 0)
      operator delete(__dst[0]);
    goto LABEL_13;
  }
  v18 = v34;
  if (v11 < 0x41)
    v18 = (unint64_t *)&v34;
  *a4 = *v18;
  v17 = 1;
LABEL_19:
  if (v37 && v35 >= 0x41 && v34)
    MEMORY[0x2348A0E84](v34, 0x1000C8000313F17);
  return v17;
}

uint64_t sub_22EA7EF30(_QWORD *a1, int *a2, uint64_t a3, _DWORD *a4, unsigned int a5)
{
  int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  unint64_t *v16;
  int v18;
  void *v19;
  int *v20;
  void **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *__dst[2];
  unint64_t v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  char v31;
  unint64_t *v32;
  unsigned int v33;
  char v34;
  unsigned __int8 v35;
  unsigned int v36;
  int *v37;
  __int128 v38;
  _QWORD v39[6];

  v39[5] = *MEMORY[0x24BDAC8D0];
  v36 = a5;
  v33 = 32;
  v32 = 0;
  v34 = 1;
  v35 = 1;
  if ((*(_BYTE *)(a3 + 1) & 0x80) != 0)
    goto LABEL_9;
  sub_22F00905C(a3, a1[11], 0, (uint64_t)&v29);
  sub_22E54C490((uint64_t)&v32, (uint64_t)&v29);
  v9 = v35;
  if (v31 && v30 >= 0x41 && v29)
    MEMORY[0x2348A0E84](v29, 0x1000C8000313F17);
  if (!v9)
  {
LABEL_9:
    sub_22E8FCA40(a1, a2[4], 0xAE0u, 0, (uint64_t)&v29);
    v37 = a2;
    sub_22E9AEE38((uint64_t)&v29, (uint64_t *)&v37);
    v12 = sub_22E89519C((uint64_t)&v29, &v36);
    v28 = 1;
    v13 = sub_22E8900C4(v12, &v28);
    sub_22F0D4E74(a3);
    __dst[0] = v14;
    sub_22E8906A0(v13, (uint64_t *)__dst);
LABEL_10:
    sub_22E903BEC((unsigned int *)&v29);
    v15 = 0;
    goto LABEL_16;
  }
  v10 = v33;
  if (v33 > 0x40)
    v11 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v32);
  else
    v11 = v33 + __clz((unint64_t)v32) - 64;
  if (v10 - v11 >= 0x21)
  {
    sub_22EFF605C(a3);
    sub_22E8FCA40(a1, v18, 0xDDBu, 0, (uint64_t)&v29);
    v37 = (int *)v39;
    v38 = xmmword_22F455490;
    llvm::APInt::toString();
    v19 = (void *)v38;
    if ((unint64_t)v38 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v20 = v37;
    if ((unint64_t)v38 >= 0x17)
    {
      v22 = (v38 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v38 | 7) != 0x17)
        v22 = v38 | 7;
      v23 = v22 + 1;
      v21 = (void **)operator new(v22 + 1);
      __dst[1] = v19;
      v27 = v23 | 0x8000000000000000;
      __dst[0] = v21;
    }
    else
    {
      HIBYTE(v27) = v38;
      v21 = __dst;
      if (!(_QWORD)v38)
        goto LABEL_29;
    }
    memmove(v21, v20, (size_t)v19);
LABEL_29:
    *((_BYTE *)v19 + (_QWORD)v21) = 0;
    if (v37 != (int *)v39)
      free(v37);
    v24 = sub_22F2F3734((uint64_t)&v29, __dst);
    LODWORD(v37) = 32;
    v25 = sub_22E8900C4(v24, (int *)&v37);
    v28 = 1;
    sub_22E8900C4(v25, &v28);
    if (SHIBYTE(v27) < 0)
      operator delete(__dst[0]);
    goto LABEL_10;
  }
  v16 = v32;
  if (v10 < 0x41)
    v16 = (unint64_t *)&v32;
  *a4 = *v16;
  v15 = 1;
LABEL_16:
  if (v35 && v33 >= 0x41 && v32)
    MEMORY[0x2348A0E84](v32, 0x1000C8000313F17);
  return v15;
}

unsigned int *sub_22EA7F22C(_QWORD *a1, unsigned int *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  unsigned int *v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t i;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  _OWORD *v32;
  unint64_t v33;
  int v34;

  if (a4)
  {
    v6 = *((_QWORD *)a2 + 7);
    if ((v6 & 4) != 0 && (v26 = v6 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v26 + 16)))
      v7 = **(unsigned int ***)(v26 + 24);
    else
      v7 = a2 + 16;
    v8 = *v7;
    v9 = a1[11] + 2128;
    v10 = *((_QWORD *)a2 + 6);
    v11 = (unsigned __int8 *)sub_22E3B8AAC(v9);
    v12 = *v11;
    v11[v12 + 1] = 9;
    *v11 = v12 + 1;
    *(_QWORD *)&v11[8 * v12 + 16] = v10;
    v13 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a2 + 16))(a2);
    sub_22E4D6448((uint64_t)(v11 + 336), v13, 1);
    v31 = v8;
    v34 = 5773;
    v33 = v9;
    v14 = (_OWORD *)sub_22E3B8AAC(v9);
    v32 = v14;
    v15 = *((_OWORD *)v11 + 5);
    v17 = *((_OWORD *)v11 + 2);
    v16 = *((_OWORD *)v11 + 3);
    v14[4] = *((_OWORD *)v11 + 4);
    v14[5] = v15;
    v14[2] = v17;
    v14[3] = v16;
    v18 = *((_OWORD *)v11 + 1);
    *v14 = *(_OWORD *)v11;
    v14[1] = v18;
    for (i = 96; i != 336; i += 24)
      std::string::operator=((std::string *)((char *)v14 + i), (const std::string *)&v11[i]);
    sub_22E78D560((uint64_t)(v14 + 21), (uint64_t)(v11 + 336));
    sub_22E78D658((uint64_t)(v14 + 28), (uint64_t *)v11 + 56);
    sub_22E8928F4(a4, (unint64_t)&v31);
    if (v32)
    {
      if (v33)
      {
        sub_22E3BB10C(v33, (unint64_t)v32);
        v32 = 0;
      }
    }
    return (unsigned int *)sub_22E3BB10C(v9, (unint64_t)v11);
  }
  else
  {
    v22 = *((_QWORD *)a2 + 7);
    if ((v22 & 4) != 0 && (v27 = v22 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v27 + 16)))
      v23 = **(int ***)(v27 + 24);
    else
      v23 = (int *)(a2 + 16);
    sub_22E8FCA40(a1, *v23, 0xF17u, 0, (uint64_t)&v31);
    v30 = *((_QWORD *)a2 + 6);
    v24 = sub_22E8901B8((uint64_t)&v31, &v30);
    v29 = sub_22F3AC79C(a3);
    v25 = sub_22E89519C(v24, &v29);
    v28 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)a2 + 16))(a2);
    sub_22E8906A0(v25, &v28);
    return sub_22E903BEC(&v31);
  }
}

unsigned int *sub_22EA7F424(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t i;
  uint64_t v23;
  int *v24;
  int v25;
  uint64_t v26;
  int *v27;
  unsigned int *v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  int *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _BYTE v38[96];
  _BYTE v39[96];
  _BYTE v40[96];
  unsigned int v41;
  _OWORD *v42;
  unint64_t v43;
  int v44;
  uint64_t v45;

  v45 = a3;
  if (a4 || !a5)
  {
    v23 = *(_QWORD *)(a2 + 56);
    if ((v23 & 4) != 0 && (v34 = v23 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v34 + 16)))
      v24 = **(int ***)(v34 + 24);
    else
      v24 = (int *)(a2 + 64);
    sub_22E8FCA40(a1, *v24, 0xEE4u, 0, (uint64_t)&v41);
    sub_22E8901B8((uint64_t)&v41, &v45);
    sub_22E903BEC(&v41);
    if (!a4)
      goto LABEL_19;
    v25 = *(unsigned __int16 *)(a4 + 32);
    if (v25 == 411)
    {
      v31 = *(_QWORD *)(a2 + 56);
      if ((v31 & 4) != 0 && (v37 = v31 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v37 + 16)))
        v32 = **(int ***)(v37 + 24);
      else
        v32 = (int *)(a2 + 64);
      sub_22E8FCA40(a1, *v32, 0x1665u, 0, (uint64_t)v39);
      v28 = (unsigned int *)v39;
      return sub_22E903BEC(v28);
    }
    if (v25 == 379)
    {
      v26 = *(_QWORD *)(a2 + 56);
      if ((v26 & 4) != 0 && (v36 = v26 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v36 + 16)))
        v27 = **(int ***)(v36 + 24);
      else
        v27 = (int *)(a2 + 64);
      sub_22E8FCA40(a1, *v27, 0x1666u, 0, (uint64_t)v40);
      v28 = (unsigned int *)v40;
    }
    else
    {
LABEL_19:
      v29 = *(_QWORD *)(a2 + 56);
      if ((v29 & 4) != 0 && (v35 = v29 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v35 + 16)))
        v30 = **(int ***)(v35 + 24);
      else
        v30 = (int *)(a2 + 64);
      sub_22E8FCA40(a1, *v30, 0x1667u, 0, (uint64_t)v38);
      v28 = (unsigned int *)v38;
    }
    return sub_22E903BEC(v28);
  }
  v10 = *(_QWORD *)(a2 + 56);
  if ((v10 & 4) != 0 && (v33 = v10 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v33 + 16)))
    v11 = **(unsigned int ***)(v33 + 24);
  else
    v11 = (unsigned int *)(a2 + 64);
  v12 = *v11;
  v13 = a1[11] + 2128;
  v14 = (unsigned __int8 *)sub_22E3B8AAC(v13);
  v15 = *v14;
  v14[v15 + 1] = 9;
  *v14 = v15 + 1;
  *(_QWORD *)&v14[8 * v15 + 16] = a3;
  v41 = v12;
  v44 = 5731;
  v43 = v13;
  v16 = (_OWORD *)sub_22E3B8AAC(v13);
  v42 = v16;
  v17 = *((_OWORD *)v14 + 5);
  v19 = *((_OWORD *)v14 + 2);
  v18 = *((_OWORD *)v14 + 3);
  v16[4] = *((_OWORD *)v14 + 4);
  v16[5] = v17;
  v16[2] = v19;
  v16[3] = v18;
  v20 = *((_OWORD *)v14 + 1);
  *v16 = *(_OWORD *)v14;
  v16[1] = v20;
  for (i = 96; i != 336; i += 24)
    std::string::operator=((std::string *)((char *)v16 + i), (const std::string *)&v14[i]);
  sub_22E78D560((uint64_t)(v16 + 21), (uint64_t)(v14 + 336));
  sub_22E78D658((uint64_t)(v16 + 28), (uint64_t *)v14 + 56);
  sub_22E8928F4(a5, (unint64_t)&v41);
  if (v42)
  {
    if (v43)
    {
      sub_22E3BB10C(v43, (unint64_t)v42);
      v42 = 0;
    }
  }
  return (unsigned int *)sub_22E3BB10C(v13, (unint64_t)v14);
}

BOOL sub_22EA7F6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 > 1)
    return 1;
  v4 = *(_QWORD *)((sub_22F10ACF8(a2) & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v4 & 8) == 0 || (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0x6800)
    return 1;
  v5 = a2;
  if (*(_BYTE *)(a2 + 16) == 1)
    goto LABEL_7;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v6 == 1)
  {
    v5 = sub_22F10CF48(a2);
    if (v5)
    {
LABEL_7:
      v7 = sub_22EF5C728(*(_QWORD *)(a1 + 88), *(_QWORD *)(v5 + 32));
      if (v7 && *(_BYTE *)(v7 + 16) == 2)
      {
        v8 = (_QWORD *)(v7 + 40);
        if (*(_DWORD *)(v7 + 48) >= 0x41u)
          v8 = (_QWORD *)*v8;
        v9 = (_QWORD *)*v8;
      }
      else
      {
        LODWORD(v9) = 0;
      }
      goto LABEL_16;
    }
    v6 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  }
  LODWORD(v9) = v6 == 40;
LABEL_16:
  v11 = (int)v9;
  v12 = *(_QWORD *)(a1 + 88);
  v13 = sub_22F10ACF8(a2);
  sub_22EF5CCD0(v12, *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0), (uint64_t)v14);
  return v14[0] * v11 <= *(unsigned int *)(*(_QWORD *)(a1 + 64) + 20);
}

void sub_22EA7F7F0(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(a1 + 8) = a3;
  __asm { BR              X11 }
}

void sub_22EA7F850()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 8) = v1;
}

void sub_22EA7F874(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_22EA7F7F0(v3, *(_QWORD *)(v4 + 32), a3);
  sub_22EA7F850();
}

void sub_22EA7F888()
{
  int *v0;
  uint64_t v1;

  sub_22EA80684(v0, v1);
  sub_22EA7F850();
}

void sub_22EA7F898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, _OWORD *a12, unint64_t a13, int a14)
{
  int *v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  unsigned __int8 *v57;
  uint64_t v58;
  _OWORD *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t i;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t **v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 *v95;
  uint64_t v96;
  _OWORD *v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t j;
  uint64_t v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  unsigned __int8 *v111;
  uint64_t v112;
  _OWORD *v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t k;
  uint64_t v119;
  int v120;
  unint64_t v121;

  sub_22E3BA850((uint64_t)(v14 + 4), v15);
  if (v16)
  {
    v17 = sub_22F10C2A4((uint64_t)v15);
    v18 = (*(_DWORD *)(v17 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v17;
    if ((*(_BYTE *)(v18 + 28) & 0x80) == 0 && (sub_22F10C8DC((uint64_t)v15) & 1) == 0)
    {
      if ((sub_22F10CA40(*(_QWORD *)(v15[1] & 0xFFFFFFFFFFFFFFF0)) & 1) != 0
        || (v19 = sub_22E5453EC((uint64_t)v15)) != 0
        && ((v20 = sub_22F10C2A4(v19), (*(_DWORD *)(v20 + 28) & 0x7Fu) - 35 >= 3) ? (v21 = 0) : (v21 = v20),
            sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v21 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                              + 8) & 0xFFFFFFFFFFFFFFF0))))
      {
        if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)v14 + 72) + 126) & 4) == 0)
          goto LABEL_18;
        v22 = sub_22E53C624((uint64_t)v15);
        if (!v22)
        {
          v23 = sub_22E5453EC((uint64_t)v15);
          if (!v23)
          {
            v23 = sub_22E5457C4((uint64_t)v15);
            if (!v23)
            {
              v24 = 0;
LABEL_52:
              if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)v14 + 72) + 126) & 0x10) == 0
                && sub_22F10C9BC(v24) != 2)
              {
                sub_22F10C9BC(v24);
              }
              goto LABEL_18;
            }
          }
          v37 = sub_22F10C2A4(v23);
          if ((*(_DWORD *)(v37 + 28) & 0x7Fu) - 35 >= 3)
            v38 = 0;
          else
            v38 = v37;
          v22 = sub_22E53C624(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v38 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
        }
        v24 = v22;
        goto LABEL_52;
      }
      if ((sub_22F10B8E0(*(_QWORD *)(v15[1] & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) == 0)
      {
        v25 = sub_22E5453EC((uint64_t)v15);
        if (!v25
          || ((v26 = sub_22F10C2A4(v25), (*(_DWORD *)(v26 + 28) & 0x7Fu) - 35 >= 3) ? (v27 = 0) : (v27 = v26),
              !sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v27 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0)))
        {
          if ((sub_22F10B8E0((uint64_t)v15, "command_buffer", 14, 0, 0) & 1) == 0)
          {
            v28 = sub_22E5453EC((uint64_t)v15);
            if (!v28
              || ((v29 = sub_22F10C2A4(v28), (*(_DWORD *)(v29 + 28) & 0x7Fu) - 35 >= 3) ? (v30 = 0) : (v30 = v29),
                  !sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v30 + 168) + 8) & 0xFFFFFFFFFFFFFFF0), "command_buffer", 14, 0, 0)))
            {
              if ((sub_22F10B8E0((uint64_t)v15, "render_pipeline_state", 21, 0, 0) & 1) == 0)
              {
                v31 = sub_22E5453EC((uint64_t)v15);
                if (!v31
                  || ((v32 = sub_22F10C2A4(v31), (*(_DWORD *)(v32 + 28) & 0x7Fu) - 35 >= 3) ? (v33 = 0) : (v33 = v32),
                      !sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v33 + 168) + 8) & 0xFFFFFFFFFFFFFFF0), "render_pipeline_state", 21, 0, 0)))
                {
                  if ((sub_22F10B8E0((uint64_t)v15, "compute_pipeline_state", 22, 0, 0) & 1) == 0)
                  {
                    v34 = sub_22E5453EC((uint64_t)v15);
                    if (!v34
                      || ((v35 = sub_22F10C2A4(v34), (*(_DWORD *)(v35 + 28) & 0x7Fu) - 35 >= 3)
                        ? (v36 = 0)
                        : (v36 = v35),
                          !sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v36 + 168) + 8) & 0xFFFFFFFFFFFFFFF0), "compute_pipeline_state", 22, 0, 0)))
                    {
                      if ((sub_22F10CDF4((uint64_t)v15) & 1) == 0)
                      {
                        v39 = sub_22E5453EC((uint64_t)v15);
                        if (!v39
                          || ((v40 = sub_22F10C2A4(v39), (*(_DWORD *)(v40 + 28) & 0x7Fu) - 35 >= 3)
                            ? (v41 = 0)
                            : (v41 = v40),
                              !sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v41 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))))
                        {
                          if ((sub_22F10C510((uint64_t)v15) & 1) == 0)
                          {
                            v42 = sub_22E5453EC((uint64_t)v15);
                            if (!v42
                              || ((v43 = sub_22F10C2A4(v42), (*(_DWORD *)(v43 + 28) & 0x7Fu) - 35 >= 3)
                                ? (v44 = 0)
                                : (v44 = v43),
                                  !sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v44 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))))
                            {
                              if ((sub_22F10C1B4((uint64_t)v15) & 1) == 0)
                              {
                                v45 = sub_22E5453EC((uint64_t)v15);
                                if (!v45
                                  || ((v46 = sub_22F10C2A4(v45), (*(_DWORD *)(v46 + 28) & 0x7Fu) - 35 >= 3)
                                    ? (v47 = 0)
                                    : (v47 = v46),
                                      !sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v47 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))))
                                {
                                  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)v14 + 72) + 122) & 4) != 0)
                                  {
                                    v48 = sub_22E5453EC((uint64_t)v15);
                                    if (v48)
                                    {
                                      v49 = sub_22F10C2A4(v48);
                                      v50 = (*(_DWORD *)(v49 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v49;
                                      if (sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v50 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)))
                                      {
                                        v51 = sub_22E5453EC((uint64_t)v15);
                                        v52 = sub_22F10C2A4(v51);
                                        if ((*(_DWORD *)(v52 + 28) & 0x7Fu) - 35 >= 3)
                                          v53 = 0;
                                        else
                                          v53 = v52;
                                        v54 = *(_QWORD *)(**(_QWORD **)(v53 + 168) + 8);
                                        sub_22EA7F7F0((uint64_t)v14, v54, v14[2]);
                                        if (!v55)
                                        {
                                          v56 = *(_QWORD *)(*(_QWORD *)v14 + 88) + 2128;
                                          v57 = (unsigned __int8 *)sub_22E3B8AAC(v56);
                                          v58 = *v57;
                                          v57[v58 + 1] = 9;
                                          *(_QWORD *)&v57[8 * v58 + 16] = v54;
                                          *v57 = v58 + 1;
                                          a11 = v14[2];
                                          a14 = 5750;
                                          a13 = v56;
                                          v59 = (_OWORD *)sub_22E3B8AAC(v56);
                                          a12 = v59;
                                          v60 = *((_OWORD *)v57 + 5);
                                          v62 = *((_OWORD *)v57 + 2);
                                          v61 = *((_OWORD *)v57 + 3);
                                          v59[4] = *((_OWORD *)v57 + 4);
                                          v59[5] = v60;
                                          v59[2] = v62;
                                          v59[3] = v61;
                                          v63 = *((_OWORD *)v57 + 1);
                                          *v59 = *(_OWORD *)v57;
                                          v59[1] = v63;
                                          for (i = 96; i != 336; i += 24)
                                            std::string::operator=((std::string *)((char *)v59 + i), (const std::string *)&v57[i]);
                                          sub_22E78D560((uint64_t)(v59 + 21), (uint64_t)(v57 + 336));
                                          sub_22E78D658((uint64_t)(v59 + 28), (uint64_t *)v57 + 56);
                                          sub_22E8928F4((unint64_t)(v14 + 20), (unint64_t)&a11);
                                          if (a12 && a13)
                                          {
                                            sub_22E3BB10C(a13, (unint64_t)a12);
                                            a12 = 0;
                                          }
                                          sub_22E3BB10C(v56, (unint64_t)v57);
                                        }
                                        goto LABEL_18;
                                      }
                                    }
                                  }
                                  if ((*(_DWORD *)(v18 + 72) & 0xE000) == 0x4000)
                                    v65 = 1;
                                  else
                                    v65 = 3;
                                  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v18 + 104) + 96), *(_QWORD *)(v18 + 104));
                                  if (*(_DWORD *)(*(_QWORD *)(v18 + 128) + 16))
                                  {
                                    v66 = *(_QWORD *)(*(_QWORD *)v14 + 88) + 2128;
                                    a11 = *(_DWORD *)(v18 + 24);
                                    a14 = 5749;
                                    a12 = 0;
                                    a13 = v66;
                                    sub_22E8928F4((unint64_t)(v14 + 20), (unint64_t)&a11);
                                    if (a12 && a13)
                                      sub_22E3BB10C(a13, (unint64_t)a12);
                                    v65 = 0;
                                  }
                                  if (!sub_22EFC3B90(v18) && v65 >= 2)
                                    v65 = 1;
                                  v67 = sub_22EFC3B90(v18);
                                  if (v67)
                                  {
                                    v68 = v67;
                                    v121 = (unint64_t)(v14 + 20);
                                    if ((*(_DWORD *)(v67 + 28) & 0x100) != 0)
                                    {
LABEL_104:
                                      sub_22EFC8E88(v68);
                                      v70 = *v69;
                                      if ((*(_BYTE *)(v68 + 29) & 1) != 0)
                                      {
                                        sub_22EFC8E88(v68);
                                        v72 = *(_QWORD *)v71 + 8 * *(unsigned int *)(v71 + 8);
                                      }
                                      else
                                      {
                                        v72 = 0;
                                      }
                                      while (v70 != (uint64_t *)v72)
                                      {
                                        v73 = *v70;
                                        v74 = *(unsigned __int16 *)(*v70 + 32);
                                        switch(v74)
                                        {
                                          case 210:
                                            goto LABEL_142;
                                          case 402:
                                            if ((_DWORD)v65 == 2)
                                              v65 = 2;
                                            else
                                              v65 = 2 * (v65 > 1);
                                            break;
                                          case 439:
                                            v75 = (uint64_t *)(*(_QWORD *)(v68 + 48) & 0xFFFFFFFFFFFFFFF0);
                                            if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v75 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                                  + 16)
                                               - 39 > 1
                                              || (v76 = *(_QWORD *)((sub_22F10ACF8(*v75) & 0xFFFFFFFFFFFFFFF0) + 8),
                                                  (v76 & 8) == 0)
                                              || (*(_QWORD *)((v76 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0x5800)
                                            {
                                              v77 = sub_22E5453EC(*v75);
                                              if (!v77
                                                || ((v78 = sub_22F10C2A4(v77), (*(_DWORD *)(v78 + 28) & 0x7Fu) - 35 >= 3)
                                                  ? (v79 = 0)
                                                  : (v79 = v78),
                                                    !sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v79 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))))
                                              {
                                                if ((sub_22F10CDF4(*v75) & 1) == 0)
                                                {
                                                  v80 = sub_22E5453EC(*v75);
                                                  if (!v80
                                                    || ((v81 = sub_22F10C2A4(v80),
                                                         (*(_DWORD *)(v81 + 28) & 0x7Fu) - 35 >= 3)
                                                      ? (v82 = 0)
                                                      : (v82 = v81),
                                                        (sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v82 + 168)
                                                                                             + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
                                                  {
                                                    if ((sub_22F10C510(*v75) & 1) == 0)
                                                    {
                                                      v83 = sub_22E5453EC(*v75);
                                                      if (!v83
                                                        || ((v84 = sub_22F10C2A4(v83),
                                                             (*(_DWORD *)(v84 + 28) & 0x7Fu) - 35 >= 3)
                                                          ? (v85 = 0)
                                                          : (v85 = v84),
                                                            (sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v85 + 168)
                                                                                                 + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
                                                      {
                                                        if ((sub_22F10C1B4(*v75) & 1) == 0)
                                                        {
                                                          v86 = sub_22E5453EC(*v75);
                                                          if (!v86
                                                            || ((v87 = sub_22F10C2A4(v86),
                                                                 (*(_DWORD *)(v87 + 28) & 0x7Fu) - 35 >= 3)
                                                              ? (v88 = 0)
                                                              : (v88 = v87),
                                                                (sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v88 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
                                                          {
                                                            if ((sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*v75 + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0)
                                                            {
                                                              v89 = sub_22E5453EC(*v75);
                                                              if (!v89
                                                                || ((v90 = sub_22F10C2A4(v89),
                                                                     (*(_DWORD *)(v90 + 28) & 0x7Fu) - 35 >= 3)
                                                                  ? (v91 = 0)
                                                                  : (v91 = v90),
                                                                    (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v91 + 168) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
                                                              {
LABEL_142:
                                                                v92 = *(_DWORD *)(v68 + 24);
                                                                v93 = *(_QWORD *)(*(_QWORD *)v14 + 88) + 2128;
                                                                v94 = *(_QWORD *)(v73 + 16);
                                                                v95 = (unsigned __int8 *)sub_22E3B8AAC(v93);
                                                                sub_22E4D6448((uint64_t)(v95 + 336), v94, 1);
                                                                if (!v95)
                                                                  v95 = (unsigned __int8 *)sub_22E3B8AAC(v93);
                                                                v96 = *v95;
                                                                v95[v96 + 1] = 15;
                                                                *v95 = v96 + 1;
                                                                *(_QWORD *)&v95[8 * v96 + 16] = v73;
                                                                a11 = v92;
                                                                a14 = 5747;
                                                                a12 = 0;
                                                                a13 = v93;
                                                                v97 = (_OWORD *)sub_22E3B8AAC(v93);
                                                                a12 = v97;
                                                                v98 = *((_OWORD *)v95 + 5);
                                                                v100 = *((_OWORD *)v95 + 2);
                                                                v99 = *((_OWORD *)v95 + 3);
                                                                v97[4] = *((_OWORD *)v95 + 4);
                                                                v97[5] = v98;
                                                                v97[2] = v100;
                                                                v97[3] = v99;
                                                                v101 = *((_OWORD *)v95 + 1);
                                                                *v97 = *(_OWORD *)v95;
                                                                v97[1] = v101;
                                                                for (j = 96; j != 336; j += 24)
                                                                  std::string::operator=((std::string *)((char *)v97 + j), (const std::string *)&v95[j]);
                                                                sub_22E78D560((uint64_t)(v97 + 21), (uint64_t)(v95 + 336));
                                                                sub_22E78D658((uint64_t)(v97 + 28), (uint64_t *)v95 + 56);
                                                                sub_22E8928F4(v121, (unint64_t)&a11);
                                                                if (a12 && a13)
                                                                {
                                                                  sub_22E3BB10C(a13, (unint64_t)a12);
                                                                  a12 = 0;
                                                                }
                                                                sub_22E3BB10C(v93, (unint64_t)v95);
                                                                v65 = 0;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                            break;
                                        }
                                        ++v70;
                                      }
                                    }
LABEL_155:
                                    v103 = *(_QWORD *)(v68 + 48);
                                    v104 = sub_22EFBAFDC(v68);
                                    sub_22EA7F7F0((uint64_t)v14, v103, v104);
                                    v106 = v105;
                                    if (!v105)
                                    {
                                      v107 = sub_22EFBAFDC(v68);
                                      v108 = v14[3];
                                      v109 = *(_QWORD *)(*(_QWORD *)v14 + 88) + 2128;
                                      v110 = *(_QWORD *)(v68 + 48);
                                      v111 = (unsigned __int8 *)sub_22E3B8AAC(v109);
                                      v112 = *v111;
                                      v111[v112 + 1] = 9;
                                      *v111 = v112 + 1;
                                      *(_QWORD *)&v111[8 * v112 + 16] = v110;
                                      a11 = v107;
                                      a14 = v108;
                                      a12 = 0;
                                      a13 = v109;
                                      v113 = (_OWORD *)sub_22E3B8AAC(v109);
                                      a12 = v113;
                                      v114 = *((_OWORD *)v111 + 5);
                                      v116 = *((_OWORD *)v111 + 2);
                                      v115 = *((_OWORD *)v111 + 3);
                                      v113[4] = *((_OWORD *)v111 + 4);
                                      v113[5] = v114;
                                      v113[2] = v116;
                                      v113[3] = v115;
                                      v117 = *((_OWORD *)v111 + 1);
                                      *v113 = *(_OWORD *)v111;
                                      v113[1] = v117;
                                      for (k = 96; k != 336; k += 24)
                                        std::string::operator=((std::string *)((char *)v113 + k), (const std::string *)&v111[k]);
                                      sub_22E78D560((uint64_t)(v113 + 21), (uint64_t)(v111 + 336));
                                      sub_22E78D658((uint64_t)(v113 + 28), (uint64_t *)v111 + 56);
                                      sub_22E8928F4(v121, (unint64_t)&a11);
                                      if (a12 && a13)
                                      {
                                        sub_22E3BB10C(a13, (unint64_t)a12);
                                        a12 = 0;
                                      }
                                      sub_22E3BB10C(v109, (unint64_t)v111);
                                    }
                                    if ((_DWORD)v65 == v106)
                                    {
                                      v119 = v65;
                                    }
                                    else
                                    {
                                      v119 = 0;
                                      if ((_DWORD)v65 && v106)
                                      {
                                        if ((_DWORD)v65 == 2 && v106 == 1 || (_DWORD)v65 == 1 && v106 == 2)
                                        {
                                          v119 = 0;
                                        }
                                        else if ((_DWORD)v65 == 3)
                                        {
                                          v119 = v106;
                                        }
                                        else
                                        {
                                          v119 = v65;
                                        }
                                      }
                                    }
                                    while (1)
                                    {
                                      v68 = *(_QWORD *)(v68 + 8) & 0xFFFFFFFFFFFFFFF8;
                                      if (!v68)
                                        break;
                                      v120 = *(_DWORD *)(v68 + 28);
                                      if ((v120 & 0x7Fu) - 49 < 3)
                                      {
                                        v65 = v119;
                                        if ((v120 & 0x100) == 0)
                                          goto LABEL_155;
                                        goto LABEL_104;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_18:
  sub_22EA7F850();
}

void sub_22EA80684(int *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)a1 + 72) + 126) & 4) != 0)
  {
    v4 = sub_22F10ACF8(a2);
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v5 & 8) != 0)
    {
      v6 = *(_DWORD *)((v5 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
      if (v6 == 13 || v6 == 11)
      {
        v8 = (uint64_t *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0);
        if (!sub_22EE8B180(*(_QWORD *)a1, a1[2], (uint64_t)v8, 1, 0))
        {
          sub_22EA7F7F0((uint64_t)a1, (uint64_t)v8, a1[2]);
          if (v9)
          {
            if (v9 != 2 || (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)a1 + 72) + 126) & 8) != 0)
              goto LABEL_58;
            v10 = *(_QWORD *)(*(_QWORD *)(*v8 + 8) & 0xFFFFFFFFFFFFFFF0);
            if (*(_BYTE *)(v10 + 16) == 45 && (sub_22F10CA40(v10) & 1) == 0)
            {
              v11 = sub_22E5453EC(*v8);
              if (!v11
                || ((v12 = sub_22F10C2A4(v11), (*(_DWORD *)(v12 + 28) & 0x7Fu) - 35 >= 3) ? (v13 = 0) : (v13 = v12),
                    (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v13 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                         + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
              {
                if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v8 + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) == 0)
                {
                  v14 = sub_22E5453EC(*v8);
                  if (!v14
                    || ((v15 = sub_22F10C2A4(v14), (*(_DWORD *)(v15 + 28) & 0x7Fu) - 35 >= 3)
                      ? (v16 = 0)
                      : (v16 = v15),
                        (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v16 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) == 0))
                  {
                    if ((sub_22F10B8E0(*v8, "command_buffer", 14, 0, 0) & 1) == 0)
                    {
                      v17 = sub_22E5453EC(*v8);
                      if (!v17
                        || ((v18 = sub_22F10C2A4(v17), (*(_DWORD *)(v18 + 28) & 0x7Fu) - 35 >= 3)
                          ? (v19 = 0)
                          : (v19 = v18),
                            (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v19 + 168) + 8) & 0xFFFFFFFFFFFFFFF0), "command_buffer", 14, 0, 0) & 1) == 0))
                      {
                        v20 = *v8;
                        if ((sub_22F10B8E0(*v8, "render_pipeline_state", 21, 0, 0) & 1) == 0
                          && (sub_22F10B8E0(v20, "compute_pipeline_state", 22, 0, 0) & 1) == 0)
                        {
                          v21 = sub_22E5453EC(*v8);
                          if (!v21
                            || ((v22 = sub_22F10C2A4(v21), (*(_DWORD *)(v22 + 28) & 0x7Fu) - 35 >= 3)
                              ? (v23 = 0)
                              : (v23 = v22),
                                (v24 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v23 + 168) + 8) & 0xFFFFFFFFFFFFFFF0),
                                 (sub_22F10B8E0(v24, "render_pipeline_state", 21, 0, 0) & 1) == 0)
                             && (sub_22F10B8E0(v24, "compute_pipeline_state", 22, 0, 0) & 1) == 0))
                          {
                            if ((sub_22F10CDF4(*v8) & 1) == 0)
                            {
                              v25 = sub_22E5453EC(*v8);
                              if (!v25
                                || ((v26 = sub_22F10C2A4(v25), (*(_DWORD *)(v26 + 28) & 0x7Fu) - 35 >= 3)
                                  ? (v27 = 0)
                                  : (v27 = v26),
                                    (sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v27 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
                              {
                                if ((sub_22F10C510(*v8) & 1) == 0)
                                {
                                  v28 = sub_22E5453EC(*v8);
                                  if (!v28
                                    || ((v29 = sub_22F10C2A4(v28), (*(_DWORD *)(v29 + 28) & 0x7Fu) - 35 >= 3)
                                      ? (v30 = 0)
                                      : (v30 = v29),
                                        (sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v30 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
                                  {
                                    if ((sub_22F10C1B4(*v8) & 1) == 0)
                                    {
                                      v31 = sub_22E5453EC(*v8);
                                      if (!v31
                                        || ((v32 = sub_22F10C2A4(v31), (*(_DWORD *)(v32 + 28) & 0x7Fu) - 35 >= 3)
                                          ? (v33 = 0)
                                          : (v33 = v32),
                                            (sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v33 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
                                      {
LABEL_58:
                                        sub_22EA7F6A4(*(_QWORD *)a1, a2);
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_22EA80AF4(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, int a5, unint64_t a6)
{
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 1;
  sub_22EFC8E88(a2);
  v12 = *(uint64_t **)v11;
  v13 = *(unsigned int *)(v11 + 8);
  i = *(uint64_t **)v11;
  if ((_DWORD)v13)
  {
    v15 = 8 * v13;
    for (i = *(uint64_t **)v11; *(_WORD *)(*i + 32) != 439; ++i)
    {
      v15 -= 8;
      if (!v15)
        return 1;
    }
  }
  if (i == &v12[v13])
    return 1;
  do
  {
    v17 = *v12++;
    v16 = v17;
  }
  while (*(_WORD *)(v17 + 32) != 439);
  if (a5)
    sub_22EA5294C(a1, v16, a3, a4, a6);
  return 0;
}

unsigned int *sub_22EA80BB8(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  _OWORD *v29;
  unint64_t v30;
  int v31;
  int v32;
  unsigned int v33;
  uint64_t v34;

  v34 = a2;
  v32 = 0;
  v33 = a4;
  if (a5)
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = a1[11] + 2128;
    v11 = (_BYTE *)sub_22E3B8AAC(v10);
    sub_22E4D6448((uint64_t)(v11 + 336), v9, 1);
    if (!v11)
      v11 = (_BYTE *)sub_22E3B8AAC(v10);
    v12 = v11 + 1;
    v13 = *v11;
    v12[v13] = 15;
    *v11 = v13 + 2;
    *(_QWORD *)&v11[8 * v13 + 16] = a2;
    v14 = (v13 + 1);
    v12[v14] = 2;
    *(_QWORD *)&v11[8 * v14 + 16] = 0;
    v28 = v9;
    v31 = 5769;
    v30 = v10;
    v29 = (_OWORD *)sub_22E3B8AAC(v10);
    sub_22E78D4E8(v29, (uint64_t)v11);
    sub_22E8928F4(a5, (unint64_t)&v28);
    if (v29 && v30)
    {
      sub_22E3BB10C(v30, (unint64_t)v29);
      v29 = 0;
    }
    sub_22E3BB10C(v10, (unint64_t)v11);
    v15 = *(_QWORD *)(a2 + 16);
    v16 = a1[11] + 2128;
    v17 = (_BYTE *)sub_22E3B8AAC(v16);
    v18 = v17 + 1;
    v19 = *v17;
    v18[v19] = 15;
    *v17 = v19 + 2;
    *(_QWORD *)&v17[8 * v19 + 16] = a2;
    v20 = (v19 + 1);
    v18[v20] = 2;
    *(_QWORD *)&v17[8 * v20 + 16] = a4;
    v28 = v15;
    v31 = 5456;
    v30 = v16;
    v29 = (_OWORD *)sub_22E3B8AAC(v16);
    sub_22E78D4E8(v29, (uint64_t)v17);
    sub_22E8928F4(a5, (unint64_t)&v28);
    if (v29)
    {
      if (v30)
      {
        sub_22E3BB10C(v30, (unint64_t)v29);
        v29 = 0;
      }
    }
    return (unsigned int *)sub_22E3BB10C(v16, (unint64_t)v17);
  }
  else
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0xF10u, 0, (uint64_t)&v28);
    v27 = *(_QWORD *)(a2 + 16);
    v23 = sub_22E8906A0((uint64_t)&v28, &v27);
    v24 = sub_22E8FB3C4(v23, &v34);
    sub_22E8900C4(v24, &v32);
    v26 = sub_22F3AC79C(a3);
    sub_22E89519C(v24, &v26);
    sub_22E903BEC(&v28);
    sub_22E8FCA40(a1, *(_DWORD *)(v34 + 16), 0x1550u, 0, (uint64_t)&v28);
    v25 = sub_22E8FB3C4((uint64_t)&v28, &v34);
    sub_22E8900C4(v25, (int *)&v33);
    return sub_22E903BEC(&v28);
  }
}

unsigned int *sub_22EA80E10(_QWORD *a1, uint64_t a2, int a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  _OWORD *v22;
  unint64_t v23;
  int v24;
  uint64_t v25;

  v25 = a2;
  if (a4)
  {
    v7 = *(_QWORD *)(a2 + 16);
    v8 = a1[11] + 2128;
    v9 = (_BYTE *)sub_22E3B8AAC(v8);
    sub_22E4D6448((uint64_t)(v9 + 336), v7, 1);
    if (!v9)
      v9 = (_BYTE *)sub_22E3B8AAC(v8);
    v10 = v9 + 1;
    v11 = *v9;
    v10[v11] = 15;
    *v9 = v11 + 2;
    *(_QWORD *)&v9[8 * v11 + 16] = a2;
    HIDWORD(v12) = a3;
    LODWORD(v12) = a3 - 2;
    v13 = qword_22F47E110[(int)(v12 >> 1)];
    v14 = (v11 + 1);
    v10[v14] = 3;
    *(_QWORD *)&v9[8 * v14 + 16] = v13;
    v21 = v7;
    v24 = 5726;
    v23 = v8;
    v22 = (_OWORD *)sub_22E3B8AAC(v8);
    sub_22E78D4E8(v22, (uint64_t)v9);
    sub_22E8928F4(a4, (unint64_t)&v21);
    if (v22)
    {
      if (v23)
      {
        sub_22E3BB10C(v23, (unint64_t)v22);
        v22 = 0;
      }
    }
    return (unsigned int *)sub_22E3BB10C(v8, (unint64_t)v9);
  }
  else
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), 0xEDBu, 0, (uint64_t)&v21);
    v20 = *(_QWORD *)(a2 + 16);
    v16 = sub_22E8906A0((uint64_t)&v21, &v20);
    v17 = sub_22E8FB3C4(v16, &v25);
    HIDWORD(v18) = a3;
    LODWORD(v18) = a3 - 2;
    v19 = dword_22F47E150[(int)(v18 >> 1)];
    sub_22E89519C(v17, &v19);
    return sub_22E903BEC(&v21);
  }
}

BOOL sub_22EA80F80(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  _BOOL8 result;

  if (sub_22EA1DB60(a3) || sub_22E4752A8(a3))
    return 1;
  result = sub_22EA1DBC0(a3);
  if (!result)
  {
    if (a4)
    {
      sub_22EA5294C(a1, a2, a3, 0, a5);
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EA81008(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _QWORD *v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  unsigned int v56;
  _OWORD *v57;
  unint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;

  if (!sub_22EFC1D94(a4))
  {
    if (a5)
      sub_22EA5294C(a1, a3, a4, 0, a6);
    return 0;
  }
  if ((*(_BYTE *)(a4 + 29) & 1) == 0)
    goto LABEL_13;
  sub_22EFC8E88(a4);
  v13 = *(uint64_t **)v12;
  v14 = *(unsigned int *)(v12 + 8);
  v15 = *(uint64_t **)v12;
  if ((_DWORD)v14)
  {
    v16 = 8 * v14;
    v15 = *(uint64_t **)v12;
    while (*(_WORD *)(*v15 + 32) != 407)
    {
      ++v15;
      v16 -= 8;
      if (!v16)
        goto LABEL_13;
    }
  }
  if (v15 == &v13[v14])
  {
LABEL_13:
    v17 = 0;
  }
  else
  {
    do
    {
      v18 = *v13++;
      v17 = v18;
    }
    while (*(_WORD *)(v18 + 32) != 407);
  }
  if ((sub_22EFA5650(v17) & 1) == 0)
  {
    if (a5)
      sub_22EA80BB8(a1, a3, a4, 0, a6);
    return 0;
  }
  if ((*(_BYTE *)(a4 + 29) & 1) == 0)
    goto LABEL_27;
  sub_22EFC8E88(a4);
  v21 = *(uint64_t **)v20;
  v22 = *(unsigned int *)(v20 + 8);
  v23 = *(uint64_t **)v20;
  if ((_DWORD)v22)
  {
    v26 = 8 * v22;
    v23 = *(uint64_t **)v20;
    while (*(_WORD *)(*v23 + 32) != 407)
    {
      ++v23;
      v26 -= 8;
      if (!v26)
        goto LABEL_27;
    }
  }
  if (v23 == &v21[v22])
  {
LABEL_27:
    v24 = 0;
  }
  else
  {
    do
    {
      v25 = *v21++;
      v24 = v25;
    }
    while (*(_WORD *)(v25 + 32) != 407);
  }
  v27 = sub_22F3A7CDC(v24);
  v28 = *(_QWORD *)(a2 + 48);
  if ((v27 & 0xFF00000000) != 0)
  {
    v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v28 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v29)
      v30 = *(_DWORD *)(v29 + 16) == 11;
    else
      v30 = 0;
    if (!v30)
      return 1;
    v40 = *(_DWORD *)(v29 + 16) & 0xFF80000;
    v41 = v40 == 90701824 || v40 == 91226112;
    result = !v41;
    if (v41 && a5)
    {
      v61 = a3;
      v62 = v28;
      v60 = 1;
      if (a6)
      {
        v42 = *(_QWORD *)(a3 + 16);
        v33 = a1[11] + 2128;
        v34 = (_BYTE *)sub_22E3B8AAC(v33);
        sub_22E4D6448((uint64_t)(v34 + 336), v42, 1);
        if (!v34)
          v34 = (_BYTE *)sub_22E3B8AAC(v33);
        v43 = v34 + 1;
        v44 = *v34;
        v43[v44] = 9;
        *v34 = v44 + 3;
        *(_QWORD *)&v34[8 * v44 + 16] = v28;
        v45 = (v44 + 1);
        v43[v45] = 15;
        *(_QWORD *)&v34[8 * v45 + 16] = a3;
        v46 = (v44 + 2);
        v43[v46] = 2;
        *(_QWORD *)&v34[8 * v46 + 16] = 1;
        v56 = v42;
        v39 = 5780;
LABEL_53:
        v59 = v39;
        v58 = v33;
        v57 = (_OWORD *)sub_22E3B8AAC(v33);
        sub_22E78D4E8(v57, (uint64_t)v34);
        sub_22E8928F4(a6, (unint64_t)&v56);
        if (v57 && v58)
        {
          sub_22E3BB10C(v58, (unint64_t)v57);
          v57 = 0;
        }
        sub_22E3BB10C(v33, (unint64_t)v34);
        return 0;
      }
      v47 = *(_DWORD *)(a3 + 16);
      v48 = a1;
      v49 = 3872;
      goto LABEL_59;
    }
  }
  else
  {
    result = sub_22EA81404(*(_QWORD *)(a2 + 48)) ^ 1;
    if ((result & 1) == 0 && a5)
    {
      v31 = *(_QWORD *)(a2 + 48);
      v61 = a3;
      v62 = v31;
      v60 = 1;
      if (a6)
      {
        v32 = *(_QWORD *)(a3 + 16);
        v33 = a1[11] + 2128;
        v34 = (_BYTE *)sub_22E3B8AAC(v33);
        sub_22E4D6448((uint64_t)(v34 + 336), v32, 1);
        if (!v34)
          v34 = (_BYTE *)sub_22E3B8AAC(v33);
        v35 = v34 + 1;
        v36 = *v34;
        v35[v36] = 9;
        *v34 = v36 + 3;
        *(_QWORD *)&v34[8 * v36 + 16] = v31;
        v37 = (v36 + 1);
        v35[v37] = 15;
        *(_QWORD *)&v34[8 * v37 + 16] = a3;
        v38 = (v36 + 2);
        v35[v38] = 2;
        *(_QWORD *)&v34[8 * v38 + 16] = 1;
        v56 = v32;
        v39 = 5781;
        goto LABEL_53;
      }
      v47 = *(_DWORD *)(a3 + 16);
      v48 = a1;
      v49 = 3873;
LABEL_59:
      sub_22E8FCA40(v48, v47, v49, 0, (uint64_t)&v56);
      v55 = *(_QWORD *)(a3 + 16);
      v50 = sub_22E8906A0((uint64_t)&v56, &v55);
      v51 = sub_22E8901B8(v50, &v62);
      v52 = sub_22E8FB3C4(v51, &v61);
      v54 = sub_22F3AC79C(a4);
      v53 = sub_22E89519C(v52, &v54);
      sub_22E8900C4(v53, &v60);
      sub_22E903BEC(&v56);
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EA81404(uint64_t a1)
{
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v1 = sub_22E5457C4(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0));
  v3 = v1;
  if (v1)
  {
    v4 = sub_22F10C2A4(v1);
    if ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 >= 3)
      v5 = 0;
    else
      v5 = v4;
    v6 = (_QWORD *)(*(_QWORD *)(**(_QWORD **)(v5 + 168) + 8) & 0xFFFFFFFFFFFFFFF0);
    v7 = v6[1];
    v2 = ((v7 & 8) == 0 || (*(_DWORD *)((v7 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0)
      && ((v8 = *(_QWORD *)(*(_QWORD *)(*v6 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
        ? (v9 = *(_DWORD *)(v8 + 16) == 11)
        : (v9 = 0),
          v9)
      && (*(_DWORD *)(v8 + 16) & 0xFF80000) == 91226112;
  }
  return (v3 != 0) & v2;
}

uint64_t sub_22EA814C0(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  if (!sub_22EFC1D94(a3))
  {
    if (a4)
      sub_22EA5294C(a1, a2, a3, 0, a5);
    return 0;
  }
  if ((*(_BYTE *)(a3 + 29) & 1) == 0)
    goto LABEL_13;
  sub_22EFC8E88(a3);
  v11 = *(uint64_t **)v10;
  v12 = *(unsigned int *)(v10 + 8);
  v13 = *(uint64_t **)v10;
  if ((_DWORD)v12)
  {
    v14 = 8 * v12;
    v13 = *(uint64_t **)v10;
    while (*(_WORD *)(*v13 + 32) != 407)
    {
      ++v13;
      v14 -= 8;
      if (!v14)
        goto LABEL_13;
    }
  }
  if (v13 == &v11[v12])
  {
LABEL_13:
    v15 = 0;
  }
  else
  {
    do
    {
      v16 = *v11++;
      v15 = v16;
    }
    while (*(_WORD *)(v16 + 32) != 407);
  }
  result = sub_22EFA57B0(v15);
  if ((result & 1) == 0 && a4)
  {
    sub_22EA80BB8(a1, a2, a3, 5u, a5);
    return 0;
  }
  return result;
}

uint64_t sub_22EA815BC(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  if (!sub_22EFC1D94(a3))
  {
    if (a4)
      sub_22EA5294C(a1, a2, a3, 0, a5);
    return 0;
  }
  if ((*(_BYTE *)(a3 + 29) & 1) == 0)
    goto LABEL_13;
  sub_22EFC8E88(a3);
  v11 = *(uint64_t **)v10;
  v12 = *(unsigned int *)(v10 + 8);
  v13 = *(uint64_t **)v10;
  if ((_DWORD)v12)
  {
    v14 = 8 * v12;
    v13 = *(uint64_t **)v10;
    while (*(_WORD *)(*v13 + 32) != 407)
    {
      ++v13;
      v14 -= 8;
      if (!v14)
        goto LABEL_13;
    }
  }
  if (v13 == &v11[v12])
  {
LABEL_13:
    v15 = 0;
  }
  else
  {
    do
    {
      v16 = *v11++;
      v15 = v16;
    }
    while (*(_WORD *)(v16 + 32) != 407);
  }
  result = sub_22EFA5758(v15);
  if ((result & 1) == 0 && a4)
  {
    sub_22EA80BB8(a1, a2, a3, 4u, a5);
    return 0;
  }
  return result;
}

uint64_t sub_22EA816B8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t result;
  unsigned int v11;

  if (sub_22EA1DB60(a3) || sub_22E4752A8(a3) || sub_22EA1DBC0(a3))
    return 1;
  if (!sub_22E88FFC4(a3))
  {
    if (!a4)
      return 0;
LABEL_11:
    sub_22EA5294C(a1, a2, a3, 0, a5);
    return 0;
  }
  v11 = *(unsigned __int8 *)(a1[9] + 132);
  result = (v11 >> 6) & 1;
  if (((v11 >> 6) & 1) == 0 && a4)
    goto LABEL_11;
  return result;
}

uint64_t sub_22EA81764(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  int v11;
  int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  _OWORD *v30;
  unint64_t v31;
  int v32;

  v5 = sub_22F10C2A4(a2);
  if (v5 && (*(_DWORD *)(v5 + 28) & 0x7Fu) - 35 >= 3)
    v5 = 0;
  v6 = sub_22EFC3B90(v5);
  if (v6)
  {
    v8 = v6;
    v9 = *(_QWORD *)(v6 + 48);
    v10 = sub_22F26E968(v6);
    v11 = !v10;
    if ((a3 & 1) == 0 && !v11)
    {
LABEL_9:
      if (*((_BYTE *)a1 + 8))
      {
        v12 = *(_DWORD *)(v8 + 24);
        v14 = *a1;
        v13 = (unint64_t)(a1 + 2);
        v15 = *(_QWORD *)(v14 + 88) + 2128;
        v16 = (_BYTE *)sub_22E3B8AAC(v15);
        v17 = *v16;
        v16[v17 + 1] = 2;
        *v16 = v17 + 1;
        *(_QWORD *)&v16[8 * v17 + 16] = 0;
LABEL_11:
        v29 = v12;
        v32 = 5774;
        v31 = v15;
        v30 = (_OWORD *)sub_22E3B8AAC(v15);
        sub_22E78D4E8(v30, (uint64_t)v16);
        sub_22E8928F4(v13, (unint64_t)&v29);
        if (v30)
        {
          if (v31)
          {
            sub_22E3BB10C(v31, (unint64_t)v30);
            v30 = 0;
          }
        }
        sub_22E3BB10C(v15, (unint64_t)v16);
        return 0;
      }
      return 0;
    }
    v18 = a3 ^ 1;
LABEL_17:
    v19 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
    v20 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v20 == 45)
      v21 = *(_QWORD *)(*(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF0);
    else
      v21 = 0;
    if (v19)
      v22 = (*(_DWORD *)(v19 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v22 = 0;
    if (v22 || (v20 & 0xFEu) - 2 <= 3 && (v19 = sub_22F10CF48(v19)) != 0)
    {
      if (((v18 | v10) & 1) != 0)
      {
        v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v26 || *(_BYTE *)(v26 + 16) != 45 || (sub_22EA819E8(v26) & 1) != 0)
        {
LABEL_31:
          while (1)
          {
            v8 = *(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF8;
            if (!v8)
              return 1;
            if ((*(_DWORD *)(v8 + 28) & 0x7Fu) - 49 <= 2)
            {
              v9 = *(_QWORD *)(v8 + 48);
              v10 = sub_22F26E968(v8);
              v11 = !v10;
              if ((a3 & 1) != 0 || (v11 & 1) != 0)
                goto LABEL_17;
              goto LABEL_9;
            }
          }
        }
        v24 = a1;
        v25 = v26;
        v23 = 0;
        goto LABEL_30;
      }
    }
    else
    {
      if (v21 && (sub_22EA819E8(v21) & 1) == 0)
      {
        v23 = a3 & v11;
        v24 = a1;
        v25 = v21;
LABEL_30:
        if ((sub_22EA81764(v24, v25, v23) & 1) != 0)
          goto LABEL_31;
        return 0;
      }
      if (((v18 | v10) & 1) != 0)
        goto LABEL_31;
    }
    if (*((_BYTE *)a1 + 8))
    {
      v12 = *(_DWORD *)(v8 + 24);
      v27 = *a1;
      v13 = (unint64_t)(a1 + 2);
      v15 = *(_QWORD *)(v27 + 88) + 2128;
      v16 = (_BYTE *)sub_22E3B8AAC(v15);
      v28 = *v16;
      v16[v28 + 1] = 2;
      *v16 = v28 + 1;
      *(_QWORD *)&v16[8 * v28 + 16] = 1;
      goto LABEL_11;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_22EA819E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = sub_22E5453EC(a1);
  if (v2)
  {
    v3 = sub_22F10C2A4(v2);
    v4 = (*(_DWORD *)(v3 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v3;
    if (sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v4 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)))
      return 1;
  }
  v5 = sub_22E5453EC(a1);
  if (v5)
  {
    v6 = sub_22F10C2A4(v5);
    v7 = (*(_DWORD *)(v6 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v6;
    if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v7 + 168) + 8) & 0xFFFFFFFFFFFFFFF0), "command_buffer", 14, 0, 0) & 1) != 0)return 1;
  }
  v8 = sub_22E5453EC(a1);
  if (v8)
  {
    v9 = sub_22F10C2A4(v8);
    v10 = (*(_DWORD *)(v9 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v9;
    v11 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v10 + 168) + 8) & 0xFFFFFFFFFFFFFFF0);
    if ((sub_22F10B8E0(v11, "render_pipeline_state", 21, 0, 0) & 1) != 0
      || (sub_22F10B8E0(v11, "compute_pipeline_state", 22, 0, 0) & 1) != 0)
    {
      return 1;
    }
  }
  v12 = sub_22E5453EC(a1);
  if (v12)
  {
    v13 = sub_22F10C2A4(v12);
    v14 = (*(_DWORD *)(v13 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v13;
    if ((sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v14 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      return 1;
  }
  v15 = sub_22E5453EC(a1);
  if (v15)
  {
    v16 = sub_22F10C2A4(v15);
    v17 = (*(_DWORD *)(v16 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v16;
    if ((sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v17 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      return 1;
  }
  v18 = sub_22E5453EC(a1);
  if (v18)
  {
    v19 = sub_22F10C2A4(v18);
    v20 = (*(_DWORD *)(v19 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v19;
    if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v20 + 168) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) != 0)return 1;
  }
  v21 = sub_22E5453EC(a1);
  if (v21)
  {
    v22 = sub_22F10C2A4(v21);
    v23 = (*(_DWORD *)(v22 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v22;
    if ((sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v23 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      return 1;
  }
  v24 = sub_22E5453EC(a1);
  if (v24)
  {
    v25 = sub_22F10C2A4(v24);
    v26 = (*(_DWORD *)(v25 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v25;
    if ((sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v26 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      return 1;
  }
  if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0), "imageblock", 10, 1, 0) & 1) != 0)
    return 1;
  if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0), "matrix", 6, 1, 0) & 1) != 0)
    return 1;
  v27 = sub_22E3E4B64(a1);
  if (v27)
  {
    if ((*(_DWORD *)(v27 + 16) & 0x780000) == 0x80000)
      return 1;
  }
  if ((sub_22F10C8DC(a1) & 1) != 0
    || (sub_22F10B8E0(a1, "command_buffer", 14, 0, 0) & 1) != 0
    || (sub_22F10B8E0(a1, "render_pipeline_state", 21, 0, 0) & 1) != 0
    || (sub_22F10B8E0(a1, "compute_pipeline_state", 22, 0, 0) & 1) != 0
    || (sub_22F10C1B4(a1) & 1) != 0
    || (sub_22F10C510(a1) & 1) != 0
    || (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) != 0
    || (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0
    || (sub_22F10CDF4(a1) & 1) != 0
    || (sub_22F10C780(a1) & 1) != 0)
  {
    return 1;
  }
  else
  {
    return sub_22F10B8E0(a1, "mesh_grid_properties", 20, 0, 0);
  }
}

uint64_t sub_22EA81DE4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5)
{
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  char v27;
  uint64_t *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v33;
  __int128 v34;
  void *__p[2];
  char v36;

  if ((sub_22EA819E8(a2) & 1) != 0
    || (v10 = sub_22F114198(*(_QWORD *)(a2 + 24)),
        v33 = sub_22F0C975C(*(_QWORD *)(a1 + 8), v10),
        (v11 = sub_22EFC3B90(v10)) == 0))
  {
    LOBYTE(v13) = 1;
    return v13 & 1;
  }
  v12 = v11;
  v13 = 1;
LABEL_4:
  v14 = sub_22E54AA28(v12);
  v15 = *(_QWORD *)(v12 + 48);
  v16 = *(_QWORD *)(a1 + 8);
  v17 = *(_QWORD *)(*(_QWORD *)(v33 + 48) + 8 * sub_22EFC306C(v12));
  v18 = v17 / sub_22EF5CDF0(v16, *(_QWORD *)(*(_QWORD *)(v16 + 16408) & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(v12 + 29) & 1) == 0)
    goto LABEL_13;
  sub_22EFC8E88(v12);
  v20 = *(uint64_t **)v19;
  v21 = *(unsigned int *)(v19 + 8);
  v22 = *(uint64_t **)v19;
  if ((_DWORD)v21)
  {
    v23 = 8 * v21;
    v22 = *(uint64_t **)v19;
    while (*(_WORD *)(*v22 + 32) != 467)
    {
      ++v22;
      v23 -= 8;
      if (!v23)
        goto LABEL_13;
    }
  }
  if (v22 == &v20[v21])
  {
LABEL_13:
    if (!a5)
      goto LABEL_18;
    sub_22EA82244(__p, v12);
    v27 = a3 | v14;
    *(_QWORD *)&v34 = v15;
    *((_QWORD *)&v34 + 1) = v18 + a4;
    v28 = (uint64_t *)a1;
    v26 = 0;
  }
  else
  {
    do
    {
      v25 = *v20++;
      v24 = v25;
    }
    while (*(_WORD *)(v25 + 32) != 467);
    sub_22EA82244(__p, v12);
    v26 = *(_DWORD *)(v24 + 16);
    v27 = a3 | v14;
    *(_QWORD *)&v34 = v15;
    *((_QWORD *)&v34 + 1) = v18 + a4;
    v28 = (uint64_t *)a1;
  }
  v29 = sub_22EA82014(v28, __p, v26, v27, &v34);
  if (v36 < 0)
    operator delete(__p[0]);
  v13 &= v29;
LABEL_18:
  v30 = *(unsigned __int8 *)(a1 + 16);
  if (!*(_BYTE *)(a1 + 16) && (v13 & 1) == 0)
    goto LABEL_30;
  v31 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v31 && *(_BYTE *)(v31 + 16) == 45)
  {
    v13 &= sub_22EA81DE4(a1);
    v30 = *(unsigned __int8 *)(a1 + 16);
  }
  if (v30 || (v13 & 1) != 0)
  {
    while (1)
    {
      v12 = *(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v12)
        break;
      if ((*(_DWORD *)(v12 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_30:
    LOBYTE(v13) = 0;
  }
  return v13 & 1;
}

uint64_t sub_22EA82014(uint64_t *a1, _BYTE *a2, int a3, char a4, __int128 *a5)
{
  _BYTE *v8;
  llvm::StringMapImpl *v10;
  char v11;
  BOOL v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t *v16;
  __int128 v17;
  void **v18;
  size_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  BOOL v32;
  void *v33;
  size_t v34;
  size_t v35;
  unsigned __int8 *v37;
  unint64_t v38;
  int v39;
  void *__p[2];
  int64_t v41;
  __int128 v42;
  __int128 v43;

  v8 = a2;
  v10 = (llvm::StringMapImpl *)(a1 + 41);
  v11 = a2[23];
  v12 = v11 < 0;
  v13 = *((_QWORD *)a2 + 1);
  if (v11 < 0)
    a2 = *(_BYTE **)a2;
  v14 = v11 & 0x7F;
  if (v12)
    v15 = v13;
  else
    v15 = v14;
  sub_22E3B39D4(v10, a2, v15);
  if ((a4 & 1) != 0)
    return 1;
  v16 = a1 + 37;
  if ((char)v8[23] < 0)
  {
    sub_22E3BB2B4(__p, *(void **)v8, *((_QWORD *)v8 + 1));
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)v8;
    v41 = *((_QWORD *)v8 + 2);
  }
  v17 = *a5;
  v42 = *a5;
  if (v41 >= 0)
    v18 = __p;
  else
    v18 = (void **)__p[0];
  if (v41 >= 0)
    v19 = HIBYTE(v41) & 0x7F;
  else
    v19 = (size_t)__p[1];
  v43 = v17;
  v20 = llvm::StringMapImpl::LookupBucketFor();
  v21 = *v16;
  v22 = *(_QWORD *)(*v16 + 8 * v20);
  if (v22)
  {
    if (v22 != -8)
    {
      v27 = 1;
      goto LABEL_23;
    }
    --*((_DWORD *)a1 + 78);
  }
  v23 = v20;
  v24 = MEMORY[0x23489D23C](v19 + 25, 8);
  v25 = v24;
  v26 = v24 + 24;
  if (v19)
    memcpy((void *)(v24 + 24), v18, v19);
  *(_BYTE *)(v26 + v19) = 0;
  *(_QWORD *)v25 = v19;
  *(_OWORD *)(v25 + 8) = v43;
  *(_QWORD *)(v21 + 8 * v23) = v25;
  ++*((_DWORD *)a1 + 77);
  llvm::StringMapImpl::RehashTable((llvm::StringMapImpl *)(a1 + 37));
  v27 = 0;
LABEL_23:
  if (SHIBYTE(v41) < 0)
  {
    operator delete(__p[0]);
    if (v27)
      goto LABEL_25;
    return 1;
  }
  if (!v27)
    return 1;
LABEL_25:
  if (*((_BYTE *)a1 + 16))
  {
    v29 = *a1;
    v28 = (unint64_t)(a1 + 3);
    v30 = *(_QWORD *)(v29 + 88) + 2128;
    v37 = 0;
    v38 = v30;
    v39 = 5740;
    v31 = v8[23];
    v32 = v31 < 0;
    if (v31 >= 0)
      v33 = v8;
    else
      v33 = *(void **)v8;
    v34 = v31 & 0x7F;
    if (v32)
      v35 = *((_QWORD *)v8 + 1);
    else
      v35 = v34;
    sub_22E3B89A8(&v37, v33, v35);
    LODWORD(__p[0]) = a3;
    LODWORD(v42) = v39;
    __p[1] = 0;
    v41 = v38;
    if (v37)
    {
      __p[1] = (void *)sub_22E3B8AAC(v38);
      sub_22E78D4E8((_OWORD *)__p[1], (uint64_t)v37);
    }
    sub_22E8928F4(v28, (unint64_t)__p);
    if (__p[1] && v41)
    {
      sub_22E3BB10C(v41, (unint64_t)__p[1]);
      __p[1] = 0;
    }
    if (v37)
    {
      if (v38)
        sub_22E3BB10C(v38, (unint64_t)v37);
    }
  }
  return 0;
}

void sub_22EA82244(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  size_t v12;
  const void *v13;
  unsigned int v14;
  void **v15;
  std::string::size_type v16;
  std::string *v17;
  uint64_t v18;
  _QWORD *v19;
  void *__p[2];
  char v21;
  std::string v22;

  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v5 = *(uint64_t **)v4;
    v6 = *(unsigned int *)(v4 + 8);
    v7 = *(uint64_t **)v4;
    if ((_DWORD)v6)
    {
      v8 = 8 * v6;
      v7 = *(uint64_t **)v4;
      while (*(_WORD *)(*v7 + 32) != 467)
      {
        ++v7;
        v8 -= 8;
        if (!v8)
          goto LABEL_12;
      }
    }
    if (v7 != &v5[v6])
    {
      do
      {
        v10 = *v5++;
        v9 = v10;
      }
      while (*(_WORD *)(v10 + 32) != 467);
      v11 = *(unsigned int **)(*(_QWORD *)(v9 + 40) + 16);
      v14 = *v11;
      v13 = v11 + 4;
      v12 = v14;
      if (v14 >= 0x17uLL)
      {
        if ((v12 | 7) == 0x17)
          v18 = (v12 & 0xFFFFFFF8) + 8;
        else
          v18 = v12 | 7;
        v19 = operator new(v18 + 1);
        a1[1] = v12;
        a1[2] = v18 - 0x7FFFFFFFFFFFFFFFLL;
        *a1 = v19;
        a1 = v19;
      }
      else
      {
        *((_BYTE *)a1 + 23) = v12;
        if (!v12)
          goto LABEL_27;
      }
      memmove(a1, v13, v12);
LABEL_27:
      *((_BYTE *)a1 + v12) = 0;
      return;
    }
  }
LABEL_12:
  *((_BYTE *)&v22.__r_.__value_.__s + 23) = 1;
  LOWORD(v22.__r_.__value_.__l.__data_) = 46;
  sub_22EFC683C((uint64_t *)(a2 + 40), __p);
  if (v21 >= 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  if (v21 >= 0)
    v16 = v21 & 0x7F;
  else
    v16 = (std::string::size_type)__p[1];
  v17 = std::string::append(&v22, (const std::string::value_type *)v15, v16);
  *(std::string *)a1 = *v17;
  v17->__r_.__value_.__r.__words[0] = 0;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  if (v21 < 0)
    operator delete(__p[0]);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v22.__r_.__value_.__l.__data_);
}

void sub_22EA823BC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_22EA82410()
{
  JUMPOUT(0x22EA823E8);
}

unint64_t sub_22EA82418()
{
  unsigned int v0;
  unint64_t v1;

  if (((v0 >> 19) & 0x1FF) - 166 >= 0x2E)
    LOBYTE(v1) = 0;
  else
    v1 = (0x30000003B385uLL >> ((v0 >> 19) + 90)) & 1;
  return v1 & 1;
}

void sub_22EA827FC(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(a1 + 32) = a3;
  __asm { BR              X11 }
}

void sub_22EA8285C()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 32) = v1;
}

void sub_22EA82880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  if (v2 && sub_22E536E34(v2))
    sub_22EA827FC(v0, *(_QWORD *)(v1 + 32), *(_DWORD *)(v0 + 32));
  sub_22EA8285C();
}

uint64_t sub_22EA82D34(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t result;
  unsigned int v4;
  BOOL v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v2 = *(_QWORD *)v1;
  if (sub_22E9B3FAC(*(_QWORD *)v1, *(_QWORD *)v1 + 8 * *(unsigned int *)(v1 + 8)))
    return 0;
  while (1)
  {
    result = *(_QWORD *)v2;
    v4 = *(unsigned __int16 *)(*(_QWORD *)v2 + 32) - 378;
    v5 = v4 > 0x37;
    v6 = (1 << v4) & 0x80000040000001;
    if (!v5 && v6 != 0)
      break;
    v2 += 8;
  }
  return result;
}

uint64_t sub_22EA82DAC(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t *v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t *v233;
  uint64_t v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t *v253;
  uint64_t v254;
  uint64_t *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t *v258;
  uint64_t v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t *v263;
  uint64_t v264;
  uint64_t *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  uint64_t v269;
  uint64_t *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t *v273;
  uint64_t v274;
  uint64_t *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t *v278;
  uint64_t v279;
  uint64_t *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t *v283;
  uint64_t v284;
  uint64_t *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t *v293;
  uint64_t v294;
  uint64_t *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t *v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t *v308;
  uint64_t v309;
  uint64_t *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t *v313;
  uint64_t v314;
  uint64_t *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t *v318;
  uint64_t v319;
  uint64_t *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t *v323;
  uint64_t v324;
  uint64_t *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t *v328;
  uint64_t v329;
  uint64_t *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t *v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t *v338;
  uint64_t v339;
  uint64_t *v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  _BYTE *v356;
  _BYTE *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  unint64_t v361;
  unint64_t v362;
  _QWORD *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v395;
  uint64_t *v396;
  uint64_t v397;
  uint64_t *v398;
  uint64_t v399;
  _QWORD *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  int v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t *v431;
  uint64_t v432;
  uint64_t *v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  uint64_t *v439;
  uint64_t v440;
  uint64_t *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  int v445;
  uint64_t v446;
  uint64_t *v447;
  uint64_t v448;
  uint64_t *v449;
  uint64_t v450;
  int v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v455;
  uint64_t *v456;
  uint64_t v457;
  uint64_t *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t *v461;
  uint64_t v462;
  uint64_t *v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  _BYTE *v469;
  _BYTE *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t *v482;
  uint64_t v483;
  uint64_t v484;
  unsigned __int8 *v485;
  _QWORD *v486;
  unsigned __int8 *v487;
  _BYTE *v488;
  unsigned __int8 *v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  unsigned int v494;
  uint64_t v495;
  unsigned int v496;
  _OWORD *v497;
  unint64_t v498;
  int v499;
  uint64_t v500;

  v10 = sub_22E9AEF2C(a2);
  v11 = 0;
  if (v10)
  {
    switch(*(_WORD *)(v10 + 32))
    {
      case 0x172:
        if (!sub_22E53AC28(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_494;
        sub_22EFC8E88(a2);
        v13 = *(uint64_t **)v12;
        v14 = *(unsigned int *)(v12 + 8);
        v15 = *(uint64_t **)v12;
        if ((_DWORD)v14)
        {
          v16 = 8 * v14;
          v15 = *(uint64_t **)v12;
          while (*(_WORD *)(*v15 + 32) != 370)
          {
            ++v15;
            v16 -= 8;
            if (!v16)
              goto LABEL_494;
          }
        }
        if (v15 == &v13[v14])
          goto LABEL_494;
        do
        {
          v343 = *v13++;
          v342 = v343;
        }
        while (*(_WORD *)(v343 + 32) != 370);
        goto LABEL_495;
      case 0x173:
        if (!sub_22E542BD8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v18 = *(uint64_t **)v17;
        v19 = *(unsigned int *)(v17 + 8);
        v20 = *(uint64_t **)v17;
        if (!(_DWORD)v19)
          goto LABEL_468;
        v21 = 8 * v19;
        v20 = *(uint64_t **)v17;
        while (*(_WORD *)(*v20 + 32) != 371)
        {
          ++v20;
          v21 -= 8;
          if (!v21)
            goto LABEL_733;
        }
LABEL_468:
        if (v20 == &v18[v19])
          goto LABEL_733;
        do
        {
          v345 = *v18++;
          v344 = v345;
        }
        while (*(_WORD *)(v345 + 32) != 371);
        goto LABEL_734;
      case 0x174:
        if (!sub_22E542C38(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v23 = *(uint64_t **)v22;
        v24 = *(unsigned int *)(v22 + 8);
        v25 = *(uint64_t **)v22;
        if (!(_DWORD)v24)
          goto LABEL_471;
        v26 = 8 * v24;
        v25 = *(uint64_t **)v22;
        while (*(_WORD *)(*v25 + 32) != 372)
        {
          ++v25;
          v26 -= 8;
          if (!v26)
            goto LABEL_733;
        }
LABEL_471:
        if (v25 == &v23[v24])
          goto LABEL_733;
        do
        {
          v346 = *v23++;
          v344 = v346;
        }
        while (*(_WORD *)(v346 + 32) != 372);
        goto LABEL_734;
      case 0x177:
        if (!sub_22F26EC68(a2))
          goto LABEL_747;
        if (!a3)
          goto LABEL_813;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_844;
        sub_22EFC8E88(a2);
        v456 = *(uint64_t **)v455;
        v457 = *(unsigned int *)(v455 + 8);
        v458 = *(uint64_t **)v455;
        if (!(_DWORD)v457)
          goto LABEL_841;
        v459 = 8 * v457;
        v458 = *(uint64_t **)v455;
        while (*(_WORD *)(*v458 + 32) != 375)
        {
          ++v458;
          v459 -= 8;
          if (!v459)
            goto LABEL_844;
        }
LABEL_841:
        if (v458 == &v456[v457])
          goto LABEL_844;
        do
        {
          v479 = *v456++;
          v344 = v479;
        }
        while (*(_WORD *)(v479 + 32) != 375);
        goto LABEL_742;
      case 0x178:
        if (!sub_22E542C98(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v28 = *(uint64_t **)v27;
        v29 = *(unsigned int *)(v27 + 8);
        v30 = *(uint64_t **)v27;
        if (!(_DWORD)v29)
          goto LABEL_474;
        v31 = 8 * v29;
        v30 = *(uint64_t **)v27;
        while (*(_WORD *)(*v30 + 32) != 376)
        {
          ++v30;
          v31 -= 8;
          if (!v31)
            goto LABEL_733;
        }
LABEL_474:
        if (v30 == &v28[v29])
          goto LABEL_733;
        do
        {
          v347 = *v28++;
          v344 = v347;
        }
        while (*(_WORD *)(v347 + 32) != 376);
        goto LABEL_734;
      case 0x179:
        if (!sub_22E542CF8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v33 = *(uint64_t **)v32;
        v34 = *(unsigned int *)(v32 + 8);
        v35 = *(uint64_t **)v32;
        if (!(_DWORD)v34)
          goto LABEL_477;
        v36 = 8 * v34;
        v35 = *(uint64_t **)v32;
        while (*(_WORD *)(*v35 + 32) != 377)
        {
          ++v35;
          v36 -= 8;
          if (!v36)
            goto LABEL_733;
        }
LABEL_477:
        if (v35 == &v33[v34])
          goto LABEL_733;
        do
        {
          v348 = *v33++;
          v344 = v348;
        }
        while (*(_WORD *)(v348 + 32) != 377);
        goto LABEL_734;
      case 0x180:
        if (!sub_22E536E34(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_597;
        sub_22EFC8E88(a2);
        v38 = *(uint64_t **)v37;
        v39 = *(unsigned int *)(v37 + 8);
        v40 = *(uint64_t **)v37;
        if (!(_DWORD)v39)
          goto LABEL_480;
        v41 = 8 * v39;
        v40 = *(uint64_t **)v37;
        while (*(_WORD *)(*v40 + 32) != 384)
        {
          ++v40;
          v41 -= 8;
          if (!v41)
            goto LABEL_597;
        }
LABEL_480:
        if (v40 == &v38[v39])
          goto LABEL_597;
        do
        {
          v349 = *v38++;
          v344 = v349;
        }
        while (*(_WORD *)(v349 + 32) != 384);
        goto LABEL_598;
      case 0x181:
        if (!sub_22E53B01C(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_486;
        sub_22EFC8E88(a2);
        v43 = *(uint64_t **)v42;
        v44 = *(unsigned int *)(v42 + 8);
        v45 = *(uint64_t **)v42;
        if (!(_DWORD)v44)
          goto LABEL_483;
        v46 = 8 * v44;
        v45 = *(uint64_t **)v42;
        while (*(_WORD *)(*v45 + 32) != 385)
        {
          ++v45;
          v46 -= 8;
          if (!v46)
            goto LABEL_486;
        }
LABEL_483:
        if (v45 == &v43[v44])
        {
LABEL_486:
          v342 = 0;
          goto LABEL_487;
        }
        do
        {
          v350 = *v43++;
          v342 = v350;
        }
        while (*(_WORD *)(v350 + 32) != 385);
LABEL_487:
        if (a4 != 4)
          goto LABEL_518;
        if (a3 && !sub_22E88FFC4(a3))
          goto LABEL_635;
        goto LABEL_813;
      case 0x182:
        if (!sub_22E53B37C(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_494;
        sub_22EFC8E88(a2);
        v48 = *(uint64_t **)v47;
        v49 = *(unsigned int *)(v47 + 8);
        v50 = *(uint64_t **)v47;
        if (!(_DWORD)v49)
          goto LABEL_491;
        v51 = 8 * v49;
        v50 = *(uint64_t **)v47;
        while (*(_WORD *)(*v50 + 32) != 386)
        {
          ++v50;
          v51 -= 8;
          if (!v51)
            goto LABEL_494;
        }
LABEL_491:
        if (v50 == &v48[v49])
        {
LABEL_494:
          v342 = 0;
          goto LABEL_495;
        }
        do
        {
          v351 = *v48++;
          v342 = v351;
        }
        while (*(_WORD *)(v351 + 32) != 386);
LABEL_495:
        if (a4 == 16)
          goto LABEL_675;
        if (a4 == 8)
          goto LABEL_674;
        if (!a3)
          goto LABEL_813;
        if (sub_22EFC1D94(a3))
          goto LABEL_678;
        goto LABEL_635;
      case 0x183:
        if (!sub_22E542D58(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v53 = *(uint64_t **)v52;
        v54 = *(unsigned int *)(v52 + 8);
        v55 = *(uint64_t **)v52;
        if (!(_DWORD)v54)
          goto LABEL_500;
        v56 = 8 * v54;
        v55 = *(uint64_t **)v52;
        while (*(_WORD *)(*v55 + 32) != 387)
        {
          ++v55;
          v56 -= 8;
          if (!v56)
            goto LABEL_733;
        }
LABEL_500:
        if (v55 == &v53[v54])
          goto LABEL_733;
        do
        {
          v352 = *v53++;
          v344 = v352;
        }
        while (*(_WORD *)(v352 + 32) != 387);
        goto LABEL_734;
      case 0x184:
        if (!sub_22E53B3DC(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_506;
        sub_22EFC8E88(a2);
        v58 = *(uint64_t **)v57;
        v59 = *(unsigned int *)(v57 + 8);
        v60 = *(uint64_t **)v57;
        if (!(_DWORD)v59)
          goto LABEL_503;
        v61 = 8 * v59;
        v60 = *(uint64_t **)v57;
        while (*(_WORD *)(*v60 + 32) != 388)
        {
          ++v60;
          v61 -= 8;
          if (!v61)
            goto LABEL_506;
        }
LABEL_503:
        if (v60 == &v58[v59])
        {
LABEL_506:
          v342 = 0;
          goto LABEL_507;
        }
        do
        {
          v353 = *v58++;
          v342 = v353;
        }
        while (*(_WORD *)(v353 + 32) != 388);
LABEL_507:
        if (a4 != 4)
        {
LABEL_518:
          v363 = a1;
          v344 = v342;
          goto LABEL_649;
        }
        if (!a3)
          goto LABEL_813;
        if (!sub_22E88FFC4(a3))
          goto LABEL_635;
        if (*(_DWORD *)(v342 + 36) != 3)
          goto LABEL_678;
        if (a5)
        {
          v354 = *(_QWORD *)(v342 + 16);
          v355 = a1[11] + 2128;
          v356 = (_BYTE *)sub_22E3B8AAC(v355);
          sub_22E4D6448((uint64_t)(v356 + 336), v354, 1);
          if (!v356)
            v356 = (_BYTE *)sub_22E3B8AAC(v355);
          v357 = v356 + 1;
          v358 = *v356;
          v357[v358] = 15;
          *v356 = v358 + 3;
          *(_QWORD *)&v356[8 * v358 + 16] = v342;
          v359 = (v358 + 1);
          v357[v359] = 2;
          *(_QWORD *)&v356[8 * v359 + 16] = 1;
          v360 = (v358 + 2);
          v357[v360] = 2;
          *(_QWORD *)&v356[8 * v360 + 16] = 1;
          v496 = v354;
          v499 = 5728;
          v498 = v355;
          v497 = (_OWORD *)sub_22E3B8AAC(v355);
          sub_22E78D4E8(v497, (uint64_t)v356);
          sub_22E8928F4(a5, (unint64_t)&v496);
          if (v497 && v498)
          {
            sub_22E3BB10C(v498, (unint64_t)v497);
            v497 = 0;
          }
          v361 = v355;
          v362 = (unint64_t)v356;
LABEL_832:
          sub_22E3BB10C(v361, v362);
LABEL_747:
          v11 = 0;
          break;
        }
        sub_22E8FCA40(a1, *(_DWORD *)(v342 + 16), 0xEE0u, 0, (uint64_t)&v496);
        v495 = *(_QWORD *)(v342 + 16);
        v480 = sub_22E8906A0((uint64_t)&v496, &v495);
        v481 = v480;
        if (*(_BYTE *)(v480 + 80))
        {
          v489 = *(unsigned __int8 **)(v480 + 32);
          if (!v489)
          {
            v489 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v481 + 40));
            *(_QWORD *)(v481 + 32) = v489;
          }
          v489[*v489 + 1] = 15;
          v488 = *(_BYTE **)(v481 + 32);
        }
        else
        {
          if (!*(_BYTE *)(v480 + 92))
          {
LABEL_856:
            LODWORD(v500) = 1;
            v491 = sub_22E8900C4(v481, (int *)&v500);
            LODWORD(v493) = 1;
            v492 = sub_22E8900C4(v491, (int *)&v493);
            v494 = sub_22F3AC79C(a3);
            v477 = v492;
            goto LABEL_834;
          }
          v482 = (uint64_t *)(*(_QWORD *)v480 + 12784);
          v483 = *(_QWORD *)(v480 + 16);
          if (v483)
            v483 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v483 + 32))(v483);
          v500 = v483;
          v484 = sub_22F2F1D6C(v482, &v500)[1] + 32 * *(unsigned int *)(v481 + 88);
          v487 = *(unsigned __int8 **)(v484 + 8);
          v486 = (_QWORD *)(v484 + 8);
          v485 = v487;
          if (!v487)
          {
            v485 = (unsigned __int8 *)sub_22E3B8AAC(v486[1]);
            *v486 = v485;
          }
          v485[*v485 + 1] = 15;
          v488 = (_BYTE *)*v486;
        }
        v490 = *v488;
        *v488 = v490 + 1;
        *(_QWORD *)&v488[8 * v490 + 16] = v342;
        goto LABEL_856;
      case 0x185:
        if (!sub_22E542DB8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v63 = *(uint64_t **)v62;
        v64 = *(unsigned int *)(v62 + 8);
        v65 = *(uint64_t **)v62;
        if (!(_DWORD)v64)
          goto LABEL_519;
        v66 = 8 * v64;
        v65 = *(uint64_t **)v62;
        while (*(_WORD *)(*v65 + 32) != 389)
        {
          ++v65;
          v66 -= 8;
          if (!v66)
            goto LABEL_733;
        }
LABEL_519:
        if (v65 == &v63[v64])
          goto LABEL_733;
        do
        {
          v364 = *v63++;
          v344 = v364;
        }
        while (*(_WORD *)(v364 + 32) != 389);
        goto LABEL_734;
      case 0x186:
        if (!sub_22E542E18(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v68 = *(uint64_t **)v67;
        v69 = *(unsigned int *)(v67 + 8);
        v70 = *(uint64_t **)v67;
        if (!(_DWORD)v69)
          goto LABEL_522;
        v71 = 8 * v69;
        v70 = *(uint64_t **)v67;
        while (*(_WORD *)(*v70 + 32) != 390)
        {
          ++v70;
          v71 -= 8;
          if (!v71)
            goto LABEL_733;
        }
LABEL_522:
        if (v70 == &v68[v69])
          goto LABEL_733;
        do
        {
          v365 = *v68++;
          v344 = v365;
        }
        while (*(_WORD *)(v365 + 32) != 390);
        goto LABEL_734;
      case 0x187:
        if (!sub_22E542E78(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v73 = *(uint64_t **)v72;
        v74 = *(unsigned int *)(v72 + 8);
        v75 = *(uint64_t **)v72;
        if (!(_DWORD)v74)
          goto LABEL_525;
        v76 = 8 * v74;
        v75 = *(uint64_t **)v72;
        while (*(_WORD *)(*v75 + 32) != 391)
        {
          ++v75;
          v76 -= 8;
          if (!v76)
            goto LABEL_733;
        }
LABEL_525:
        if (v75 == &v73[v74])
          goto LABEL_733;
        do
        {
          v366 = *v73++;
          v344 = v366;
        }
        while (*(_WORD *)(v366 + 32) != 391);
        goto LABEL_734;
      case 0x188:
        if (!sub_22E542ED8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v78 = *(uint64_t **)v77;
        v79 = *(unsigned int *)(v77 + 8);
        v80 = *(uint64_t **)v77;
        if (!(_DWORD)v79)
          goto LABEL_528;
        v81 = 8 * v79;
        v80 = *(uint64_t **)v77;
        while (*(_WORD *)(*v80 + 32) != 392)
        {
          ++v80;
          v81 -= 8;
          if (!v81)
            goto LABEL_733;
        }
LABEL_528:
        if (v80 == &v78[v79])
          goto LABEL_733;
        do
        {
          v367 = *v78++;
          v344 = v367;
        }
        while (*(_WORD *)(v367 + 32) != 392);
        goto LABEL_734;
      case 0x189:
        if (!sub_22E53B43C(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_534;
        sub_22EFC8E88(a2);
        v83 = *(uint64_t **)v82;
        v84 = *(unsigned int *)(v82 + 8);
        v85 = *(uint64_t **)v82;
        if (!(_DWORD)v84)
          goto LABEL_531;
        v86 = 8 * v84;
        v85 = *(uint64_t **)v82;
        while (*(_WORD *)(*v85 + 32) != 393)
        {
          ++v85;
          v86 -= 8;
          if (!v86)
            goto LABEL_534;
        }
LABEL_531:
        if (v85 == &v83[v84])
        {
LABEL_534:
          v342 = 0;
          goto LABEL_535;
        }
        do
        {
          v368 = *v83++;
          v342 = v368;
        }
        while (*(_WORD *)(v368 + 32) != 393);
LABEL_535:
        if (a4 == 16)
          goto LABEL_675;
        if (a4 == 8)
          goto LABEL_674;
        if (!a3)
          goto LABEL_813;
        if (sub_22EFC1DF4(a3))
          goto LABEL_678;
        goto LABEL_635;
      case 0x18D:
        if (!sub_22E542F38(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v88 = *(uint64_t **)v87;
        v89 = *(unsigned int *)(v87 + 8);
        v90 = *(uint64_t **)v87;
        if (!(_DWORD)v89)
          goto LABEL_540;
        v91 = 8 * v89;
        v90 = *(uint64_t **)v87;
        while (*(_WORD *)(*v90 + 32) != 397)
        {
          ++v90;
          v91 -= 8;
          if (!v91)
            goto LABEL_733;
        }
LABEL_540:
        if (v90 == &v88[v89])
          goto LABEL_733;
        do
        {
          v369 = *v88++;
          v344 = v369;
        }
        while (*(_WORD *)(v369 + 32) != 397);
        goto LABEL_734;
      case 0x18F:
        if (!sub_22E542F98(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v93 = *(uint64_t **)v92;
        v94 = *(unsigned int *)(v92 + 8);
        v95 = *(uint64_t **)v92;
        if (!(_DWORD)v94)
          goto LABEL_543;
        v96 = 8 * v94;
        v95 = *(uint64_t **)v92;
        while (*(_WORD *)(*v95 + 32) != 399)
        {
          ++v95;
          v96 -= 8;
          if (!v96)
            goto LABEL_733;
        }
LABEL_543:
        if (v95 == &v93[v94])
          goto LABEL_733;
        do
        {
          v370 = *v93++;
          v344 = v370;
        }
        while (*(_WORD *)(v370 + 32) != 399);
        goto LABEL_734;
      case 0x190:
        if (!sub_22E542FF8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v98 = *(uint64_t **)v97;
        v99 = *(unsigned int *)(v97 + 8);
        v100 = *(uint64_t **)v97;
        if (!(_DWORD)v99)
          goto LABEL_546;
        v101 = 8 * v99;
        v100 = *(uint64_t **)v97;
        while (*(_WORD *)(*v100 + 32) != 400)
        {
          ++v100;
          v101 -= 8;
          if (!v101)
            goto LABEL_733;
        }
LABEL_546:
        if (v100 == &v98[v99])
          goto LABEL_733;
        do
        {
          v371 = *v98++;
          v344 = v371;
        }
        while (*(_WORD *)(v371 + 32) != 400);
        goto LABEL_734;
      case 0x195:
        if (!sub_22E543058(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v103 = *(uint64_t **)v102;
        v104 = *(unsigned int *)(v102 + 8);
        v105 = *(uint64_t **)v102;
        if (!(_DWORD)v104)
          goto LABEL_549;
        v106 = 8 * v104;
        v105 = *(uint64_t **)v102;
        while (*(_WORD *)(*v105 + 32) != 405)
        {
          ++v105;
          v106 -= 8;
          if (!v106)
            goto LABEL_733;
        }
LABEL_549:
        if (v105 == &v103[v104])
          goto LABEL_733;
        do
        {
          v372 = *v103++;
          v344 = v372;
        }
        while (*(_WORD *)(v372 + 32) != 405);
        goto LABEL_734;
      case 0x196:
        if (!sub_22E5430B8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v108 = *(uint64_t **)v107;
        v109 = *(unsigned int *)(v107 + 8);
        v110 = *(uint64_t **)v107;
        if (!(_DWORD)v109)
          goto LABEL_552;
        v111 = 8 * v109;
        v110 = *(uint64_t **)v107;
        while (*(_WORD *)(*v110 + 32) != 406)
        {
          ++v110;
          v111 -= 8;
          if (!v111)
            goto LABEL_733;
        }
LABEL_552:
        if (v110 == &v108[v109])
          goto LABEL_733;
        do
        {
          v373 = *v108++;
          v344 = v373;
        }
        while (*(_WORD *)(v373 + 32) != 406);
        goto LABEL_734;
      case 0x19A:
        if (!sub_22E543118(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v113 = *(uint64_t **)v112;
        v114 = *(unsigned int *)(v112 + 8);
        v115 = *(uint64_t **)v112;
        if (!(_DWORD)v114)
          goto LABEL_555;
        v116 = 8 * v114;
        v115 = *(uint64_t **)v112;
        while (*(_WORD *)(*v115 + 32) != 410)
        {
          ++v115;
          v116 -= 8;
          if (!v116)
            goto LABEL_733;
        }
LABEL_555:
        if (v115 == &v113[v114])
          goto LABEL_733;
        do
        {
          v374 = *v113++;
          v344 = v374;
        }
        while (*(_WORD *)(v374 + 32) != 410);
        goto LABEL_734;
      case 0x19C:
        if (!sub_22E543178(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v118 = *(uint64_t **)v117;
        v119 = *(unsigned int *)(v117 + 8);
        v120 = *(uint64_t **)v117;
        if (!(_DWORD)v119)
          goto LABEL_558;
        v121 = 8 * v119;
        v120 = *(uint64_t **)v117;
        while (*(_WORD *)(*v120 + 32) != 412)
        {
          ++v120;
          v121 -= 8;
          if (!v121)
            goto LABEL_733;
        }
LABEL_558:
        if (v120 == &v118[v119])
          goto LABEL_733;
        do
        {
          v375 = *v118++;
          v344 = v375;
        }
        while (*(_WORD *)(v375 + 32) != 412);
        goto LABEL_734;
      case 0x1A0:
        if (!sub_22E5431D8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v123 = *(uint64_t **)v122;
        v124 = *(unsigned int *)(v122 + 8);
        v125 = *(uint64_t **)v122;
        if (!(_DWORD)v124)
          goto LABEL_561;
        v126 = 8 * v124;
        v125 = *(uint64_t **)v122;
        while (*(_WORD *)(*v125 + 32) != 416)
        {
          ++v125;
          v126 -= 8;
          if (!v126)
            goto LABEL_733;
        }
LABEL_561:
        if (v125 == &v123[v124])
          goto LABEL_733;
        do
        {
          v376 = *v123++;
          v344 = v376;
        }
        while (*(_WORD *)(v376 + 32) != 416);
        goto LABEL_734;
      case 0x1A1:
        if (!sub_22E543238(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v128 = *(uint64_t **)v127;
        v129 = *(unsigned int *)(v127 + 8);
        v130 = *(uint64_t **)v127;
        if (!(_DWORD)v129)
          goto LABEL_564;
        v131 = 8 * v129;
        v130 = *(uint64_t **)v127;
        while (*(_WORD *)(*v130 + 32) != 417)
        {
          ++v130;
          v131 -= 8;
          if (!v131)
            goto LABEL_733;
        }
LABEL_564:
        if (v130 == &v128[v129])
          goto LABEL_733;
        do
        {
          v377 = *v128++;
          v344 = v377;
        }
        while (*(_WORD *)(v377 + 32) != 417);
        goto LABEL_734;
      case 0x1A2:
        if (!sub_22E543298(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v133 = *(uint64_t **)v132;
        v134 = *(unsigned int *)(v132 + 8);
        v135 = *(uint64_t **)v132;
        if (!(_DWORD)v134)
          goto LABEL_567;
        v136 = 8 * v134;
        v135 = *(uint64_t **)v132;
        while (*(_WORD *)(*v135 + 32) != 418)
        {
          ++v135;
          v136 -= 8;
          if (!v136)
            goto LABEL_733;
        }
LABEL_567:
        if (v135 == &v133[v134])
          goto LABEL_733;
        do
        {
          v378 = *v133++;
          v344 = v378;
        }
        while (*(_WORD *)(v378 + 32) != 418);
        goto LABEL_734;
      case 0x1A5:
        if (!sub_22E5432F8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v138 = *(uint64_t **)v137;
        v139 = *(unsigned int *)(v137 + 8);
        v140 = *(uint64_t **)v137;
        if (!(_DWORD)v139)
          goto LABEL_570;
        v141 = 8 * v139;
        v140 = *(uint64_t **)v137;
        while (*(_WORD *)(*v140 + 32) != 421)
        {
          ++v140;
          v141 -= 8;
          if (!v141)
            goto LABEL_733;
        }
LABEL_570:
        if (v140 == &v138[v139])
          goto LABEL_733;
        do
        {
          v379 = *v138++;
          v344 = v379;
        }
        while (*(_WORD *)(v379 + 32) != 421);
        goto LABEL_734;
      case 0x1A6:
        if (!sub_22E543358(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v143 = *(uint64_t **)v142;
        v144 = *(unsigned int *)(v142 + 8);
        v145 = *(uint64_t **)v142;
        if (!(_DWORD)v144)
          goto LABEL_573;
        v146 = 8 * v144;
        v145 = *(uint64_t **)v142;
        while (*(_WORD *)(*v145 + 32) != 422)
        {
          ++v145;
          v146 -= 8;
          if (!v146)
            goto LABEL_733;
        }
LABEL_573:
        if (v145 == &v143[v144])
          goto LABEL_733;
        do
        {
          v380 = *v143++;
          v344 = v380;
        }
        while (*(_WORD *)(v380 + 32) != 422);
        goto LABEL_734;
      case 0x1A7:
        if (!sub_22E5433B8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v148 = *(uint64_t **)v147;
        v149 = *(unsigned int *)(v147 + 8);
        v150 = *(uint64_t **)v147;
        if (!(_DWORD)v149)
          goto LABEL_576;
        v151 = 8 * v149;
        v150 = *(uint64_t **)v147;
        while (*(_WORD *)(*v150 + 32) != 423)
        {
          ++v150;
          v151 -= 8;
          if (!v151)
            goto LABEL_733;
        }
LABEL_576:
        if (v150 == &v148[v149])
          goto LABEL_733;
        do
        {
          v381 = *v148++;
          v344 = v381;
        }
        while (*(_WORD *)(v381 + 32) != 423);
        goto LABEL_734;
      case 0x1A9:
        if (!sub_22E543418(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v153 = *(uint64_t **)v152;
        v154 = *(unsigned int *)(v152 + 8);
        v155 = *(uint64_t **)v152;
        if (!(_DWORD)v154)
          goto LABEL_579;
        v156 = 8 * v154;
        v155 = *(uint64_t **)v152;
        while (*(_WORD *)(*v155 + 32) != 425)
        {
          ++v155;
          v156 -= 8;
          if (!v156)
            goto LABEL_733;
        }
LABEL_579:
        if (v155 == &v153[v154])
          goto LABEL_733;
        do
        {
          v382 = *v153++;
          v344 = v382;
        }
        while (*(_WORD *)(v382 + 32) != 425);
        goto LABEL_734;
      case 0x1AB:
        if (!sub_22E543478(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v158 = *(uint64_t **)v157;
        v159 = *(unsigned int *)(v157 + 8);
        v160 = *(uint64_t **)v157;
        if (!(_DWORD)v159)
          goto LABEL_582;
        v161 = 8 * v159;
        v160 = *(uint64_t **)v157;
        while (*(_WORD *)(*v160 + 32) != 427)
        {
          ++v160;
          v161 -= 8;
          if (!v161)
            goto LABEL_733;
        }
LABEL_582:
        if (v160 == &v158[v159])
          goto LABEL_733;
        do
        {
          v383 = *v158++;
          v344 = v383;
        }
        while (*(_WORD *)(v383 + 32) != 427);
        goto LABEL_734;
      case 0x1AC:
        if (!sub_22E5434D8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v163 = *(uint64_t **)v162;
        v164 = *(unsigned int *)(v162 + 8);
        v165 = *(uint64_t **)v162;
        if (!(_DWORD)v164)
          goto LABEL_585;
        v166 = 8 * v164;
        v165 = *(uint64_t **)v162;
        while (*(_WORD *)(*v165 + 32) != 428)
        {
          ++v165;
          v166 -= 8;
          if (!v166)
            goto LABEL_733;
        }
LABEL_585:
        if (v165 == &v163[v164])
          goto LABEL_733;
        do
        {
          v384 = *v163++;
          v344 = v384;
        }
        while (*(_WORD *)(v384 + 32) != 428);
        goto LABEL_734;
      case 0x1AD:
        if (!sub_22E543538(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v168 = *(uint64_t **)v167;
        v169 = *(unsigned int *)(v167 + 8);
        v170 = *(uint64_t **)v167;
        if (!(_DWORD)v169)
          goto LABEL_588;
        v171 = 8 * v169;
        v170 = *(uint64_t **)v167;
        while (*(_WORD *)(*v170 + 32) != 429)
        {
          ++v170;
          v171 -= 8;
          if (!v171)
            goto LABEL_733;
        }
LABEL_588:
        if (v170 == &v168[v169])
          goto LABEL_733;
        do
        {
          v385 = *v168++;
          v344 = v385;
        }
        while (*(_WORD *)(v385 + 32) != 429);
        goto LABEL_734;
      case 0x1AE:
        if (!sub_22E53742C(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_597;
        sub_22EFC8E88(a2);
        v173 = *(uint64_t **)v172;
        v174 = *(unsigned int *)(v172 + 8);
        v175 = *(uint64_t **)v172;
        if (!(_DWORD)v174)
          goto LABEL_591;
        v176 = 8 * v174;
        v175 = *(uint64_t **)v172;
        while (*(_WORD *)(*v175 + 32) != 430)
        {
          ++v175;
          v176 -= 8;
          if (!v176)
            goto LABEL_597;
        }
LABEL_591:
        if (v175 == &v173[v174])
          goto LABEL_597;
        do
        {
          v386 = *v173++;
          v344 = v386;
        }
        while (*(_WORD *)(v386 + 32) != 430);
        goto LABEL_598;
      case 0x1AF:
        if (!sub_22E53748C(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_597;
        sub_22EFC8E88(a2);
        v178 = *(uint64_t **)v177;
        v179 = *(unsigned int *)(v177 + 8);
        v180 = *(uint64_t **)v177;
        if (!(_DWORD)v179)
          goto LABEL_594;
        v181 = 8 * v179;
        v180 = *(uint64_t **)v177;
        while (*(_WORD *)(*v180 + 32) != 431)
        {
          ++v180;
          v181 -= 8;
          if (!v181)
            goto LABEL_597;
        }
LABEL_594:
        if (v180 == &v178[v179])
        {
LABEL_597:
          v344 = 0;
          goto LABEL_598;
        }
        do
        {
          v387 = *v178++;
          v344 = v387;
        }
        while (*(_WORD *)(v387 + 32) != 431);
LABEL_598:
        if (a4 != 16)
          goto LABEL_599;
        goto LABEL_739;
      case 0x1B0:
        if (!sub_22E543598(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v183 = *(uint64_t **)v182;
        v184 = *(unsigned int *)(v182 + 8);
        v185 = *(uint64_t **)v182;
        if (!(_DWORD)v184)
          goto LABEL_602;
        v186 = 8 * v184;
        v185 = *(uint64_t **)v182;
        while (*(_WORD *)(*v185 + 32) != 432)
        {
          ++v185;
          v186 -= 8;
          if (!v186)
            goto LABEL_733;
        }
LABEL_602:
        if (v185 == &v183[v184])
          goto LABEL_733;
        do
        {
          v388 = *v183++;
          v344 = v388;
        }
        while (*(_WORD *)(v388 + 32) != 432);
        goto LABEL_734;
      case 0x1B2:
        if (!sub_22E5374EC(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_608;
        sub_22EFC8E88(a2);
        v188 = *(uint64_t **)v187;
        v189 = *(unsigned int *)(v187 + 8);
        v190 = *(uint64_t **)v187;
        if (!(_DWORD)v189)
          goto LABEL_605;
        v191 = 8 * v189;
        v190 = *(uint64_t **)v187;
        while (*(_WORD *)(*v190 + 32) != 434)
        {
          ++v190;
          v191 -= 8;
          if (!v191)
            goto LABEL_608;
        }
LABEL_605:
        if (v190 == &v188[v189])
        {
LABEL_608:
          v342 = 0;
          goto LABEL_609;
        }
        do
        {
          v389 = *v188++;
          v342 = v389;
        }
        while (*(_WORD *)(v389 + 32) != 434);
LABEL_609:
        if (a4 == 4)
          goto LABEL_632;
        if (a4 != 8)
          goto LABEL_633;
        goto LABEL_674;
      case 0x1B3:
        if (!sub_22EA62D8C(a1, a2, 0, 1))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_844;
        sub_22EFC8E88(a2);
        v193 = *(uint64_t **)v192;
        v194 = *(unsigned int *)(v192 + 8);
        v195 = *(uint64_t **)v192;
        if (!(_DWORD)v194)
          goto LABEL_612;
        v196 = 8 * v194;
        v195 = *(uint64_t **)v192;
        while (*(_WORD *)(*v195 + 32) != 435)
        {
          ++v195;
          v196 -= 8;
          if (!v196)
            goto LABEL_844;
        }
LABEL_612:
        if (v195 == &v193[v194])
        {
LABEL_844:
          v344 = 0;
          goto LABEL_742;
        }
        do
        {
          v390 = *v193++;
          v344 = v390;
        }
        while (*(_WORD *)(v390 + 32) != 435);
        goto LABEL_742;
      case 0x1B4:
        if (!sub_22E53754C(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_618;
        sub_22EFC8E88(a2);
        v198 = *(uint64_t **)v197;
        v199 = *(unsigned int *)(v197 + 8);
        v200 = *(uint64_t **)v197;
        if (!(_DWORD)v199)
          goto LABEL_615;
        v201 = 8 * v199;
        v200 = *(uint64_t **)v197;
        while (*(_WORD *)(*v200 + 32) != 436)
        {
          ++v200;
          v201 -= 8;
          if (!v201)
            goto LABEL_618;
        }
LABEL_615:
        if (v200 == &v198[v199])
        {
LABEL_618:
          v342 = 0;
          goto LABEL_619;
        }
        do
        {
          v391 = *v198++;
          v342 = v391;
        }
        while (*(_WORD *)(v391 + 32) != 436);
LABEL_619:
        switch(a4)
        {
          case 4:
LABEL_632:
            v363 = a1;
            v344 = v342;
            goto LABEL_745;
          case 8:
            goto LABEL_674;
          case 16:
            v392 = *(_QWORD *)(a2 + 48);
            v393 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v392 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            if (!v393 || (*(_DWORD *)(v393 + 16) & 0xFF800FF) != 91226123)
            {
              if ((*(_BYTE *)(a2 + 29) & 1) == 0)
                goto LABEL_824;
              sub_22EFC8E88(a2);
              v396 = *(uint64_t **)v395;
              v397 = *(unsigned int *)(v395 + 8);
              v398 = *(uint64_t **)v395;
              if ((_DWORD)v397)
              {
                v399 = 8 * v397;
                v398 = *(uint64_t **)v395;
                while (*(_WORD *)(*v398 + 32) != 436)
                {
                  ++v398;
                  v399 -= 8;
                  if (!v399)
                    goto LABEL_824;
                }
              }
              if (v398 == &v396[v397])
              {
LABEL_824:
                v465 = 0;
              }
              else
              {
                do
                {
                  v466 = *v396++;
                  v465 = v466;
                }
                while (*(_WORD *)(v466 + 32) != 436);
              }
              v500 = v392;
              v495 = v465;
              if (a5)
              {
                v467 = *(_QWORD *)(v465 + 16);
                v468 = a1[11] + 2128;
                v469 = (_BYTE *)sub_22E3B8AAC(v468);
                sub_22E4D6448((uint64_t)(v469 + 336), v467, 1);
                if (!v469)
                  v469 = (_BYTE *)sub_22E3B8AAC(v468);
                v470 = v469 + 1;
                v471 = *v469;
                v470[v471] = 9;
                *v469 = v471 + 3;
                *(_QWORD *)&v469[8 * v471 + 16] = v392;
                v472 = v495;
                v473 = (v471 + 1);
                v470[v473] = 15;
                *(_QWORD *)&v469[8 * v473 + 16] = v472;
                v474 = (v471 + 2);
                v470[v474] = 3;
                *(_QWORD *)&v469[8 * v474 + 16] = 4;
                v496 = v467;
                v499 = 5779;
                v498 = v468;
                v497 = (_OWORD *)sub_22E3B8AAC(v468);
                sub_22E78D4E8(v497, (uint64_t)v469);
                sub_22E8928F4(a5, (unint64_t)&v496);
                if (v497 && v498)
                {
                  sub_22E3BB10C(v498, (unint64_t)v497);
                  v497 = 0;
                }
                v361 = v468;
                v362 = (unint64_t)v469;
                goto LABEL_832;
              }
              sub_22E8FCA40(a1, *(_DWORD *)(v465 + 16), 0xF22u, 0, (uint64_t)&v496);
              v493 = *(_QWORD *)(v495 + 16);
              v475 = sub_22E8906A0((uint64_t)&v496, &v493);
              v476 = sub_22E8901B8(v475, &v500);
              v477 = sub_22E8FB3C4(v476, &v495);
              v494 = 4;
LABEL_834:
              sub_22E89519C(v477, &v494);
              sub_22E903BEC(&v496);
              goto LABEL_747;
            }
            break;
        }
LABEL_633:
        if (!a3)
          goto LABEL_813;
        if (sub_22E4752A8(a3))
          goto LABEL_678;
        goto LABEL_635;
      case 0x1B5:
        if (!sub_22E543658(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v203 = *(uint64_t **)v202;
        v204 = *(unsigned int *)(v202 + 8);
        v205 = *(uint64_t **)v202;
        if (!(_DWORD)v204)
          goto LABEL_636;
        v206 = 8 * v204;
        v205 = *(uint64_t **)v202;
        while (*(_WORD *)(*v205 + 32) != 437)
        {
          ++v205;
          v206 -= 8;
          if (!v206)
            goto LABEL_733;
        }
LABEL_636:
        if (v205 == &v203[v204])
          goto LABEL_733;
        do
        {
          v401 = *v203++;
          v344 = v401;
        }
        while (*(_WORD *)(v401 + 32) != 437);
        goto LABEL_734;
      case 0x1B6:
        if (!sub_22E5436B8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v208 = *(uint64_t **)v207;
        v209 = *(unsigned int *)(v207 + 8);
        v210 = *(uint64_t **)v207;
        if (!(_DWORD)v209)
          goto LABEL_639;
        v211 = 8 * v209;
        v210 = *(uint64_t **)v207;
        while (*(_WORD *)(*v210 + 32) != 438)
        {
          ++v210;
          v211 -= 8;
          if (!v211)
            goto LABEL_733;
        }
LABEL_639:
        if (v210 == &v208[v209])
          goto LABEL_733;
        do
        {
          v402 = *v208++;
          v344 = v402;
        }
        while (*(_WORD *)(v402 + 32) != 438);
        goto LABEL_734;
      case 0x1B8:
        if (!sub_22E5375AC(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_645;
        sub_22EFC8E88(a2);
        v213 = *(uint64_t **)v212;
        v214 = *(unsigned int *)(v212 + 8);
        v215 = *(uint64_t **)v212;
        if (!(_DWORD)v214)
          goto LABEL_642;
        v216 = 8 * v214;
        v215 = *(uint64_t **)v212;
        while (*(_WORD *)(*v215 + 32) != 440)
        {
          ++v215;
          v216 -= 8;
          if (!v216)
            goto LABEL_645;
        }
LABEL_642:
        if (v215 == &v213[v214])
        {
LABEL_645:
          v344 = 0;
          goto LABEL_646;
        }
        do
        {
          v403 = *v213++;
          v344 = v403;
        }
        while (*(_WORD *)(v403 + 32) != 440);
LABEL_646:
        if (a4 == 4 || a4 == 16)
          goto LABEL_599;
        v363 = a1;
LABEL_649:
        v404 = a4;
        goto LABEL_746;
      case 0x1B9:
        if (!sub_22E543778(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v218 = *(uint64_t **)v217;
        v219 = *(unsigned int *)(v217 + 8);
        v220 = *(uint64_t **)v217;
        if (!(_DWORD)v219)
          goto LABEL_650;
        v221 = 8 * v219;
        v220 = *(uint64_t **)v217;
        while (*(_WORD *)(*v220 + 32) != 441)
        {
          ++v220;
          v221 -= 8;
          if (!v221)
            goto LABEL_733;
        }
LABEL_650:
        if (v220 == &v218[v219])
          goto LABEL_733;
        do
        {
          v405 = *v218++;
          v344 = v405;
        }
        while (*(_WORD *)(v405 + 32) != 441);
        goto LABEL_734;
      case 0x1BA:
        if (!sub_22E5437D8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v223 = *(uint64_t **)v222;
        v224 = *(unsigned int *)(v222 + 8);
        v225 = *(uint64_t **)v222;
        if (!(_DWORD)v224)
          goto LABEL_653;
        v226 = 8 * v224;
        v225 = *(uint64_t **)v222;
        while (*(_WORD *)(*v225 + 32) != 442)
        {
          ++v225;
          v226 -= 8;
          if (!v226)
            goto LABEL_733;
        }
LABEL_653:
        if (v225 == &v223[v224])
          goto LABEL_733;
        do
        {
          v406 = *v223++;
          v344 = v406;
        }
        while (*(_WORD *)(v406 + 32) != 442);
        goto LABEL_734;
      case 0x1BB:
        if (!sub_22E543718(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v228 = *(uint64_t **)v227;
        v229 = *(unsigned int *)(v227 + 8);
        v230 = *(uint64_t **)v227;
        if (!(_DWORD)v229)
          goto LABEL_656;
        v231 = 8 * v229;
        v230 = *(uint64_t **)v227;
        while (*(_WORD *)(*v230 + 32) != 443)
        {
          ++v230;
          v231 -= 8;
          if (!v231)
            goto LABEL_733;
        }
LABEL_656:
        if (v230 == &v228[v229])
          goto LABEL_733;
        do
        {
          v407 = *v228++;
          v344 = v407;
        }
        while (*(_WORD *)(v407 + 32) != 443);
        goto LABEL_734;
      case 0x1BC:
        if (!sub_22E53B678(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_671;
        sub_22EFC8E88(a2);
        v233 = *(uint64_t **)v232;
        v234 = *(unsigned int *)(v232 + 8);
        v235 = *(uint64_t **)v232;
        if (!(_DWORD)v234)
          goto LABEL_659;
        v236 = 8 * v234;
        v235 = *(uint64_t **)v232;
        while (*(_WORD *)(*v235 + 32) != 444)
        {
          ++v235;
          v236 -= 8;
          if (!v236)
            goto LABEL_671;
        }
LABEL_659:
        if (v235 == &v233[v234])
          goto LABEL_671;
        do
        {
          v408 = *v233++;
          v342 = v408;
        }
        while (*(_WORD *)(v408 + 32) != 444);
        goto LABEL_672;
      case 0x1C2:
        if (!sub_22E543838(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v238 = *(uint64_t **)v237;
        v239 = *(unsigned int *)(v237 + 8);
        v240 = *(uint64_t **)v237;
        if (!(_DWORD)v239)
          goto LABEL_662;
        v241 = 8 * v239;
        v240 = *(uint64_t **)v237;
        while (*(_WORD *)(*v240 + 32) != 450)
        {
          ++v240;
          v241 -= 8;
          if (!v241)
            goto LABEL_733;
        }
LABEL_662:
        if (v240 == &v238[v239])
          goto LABEL_733;
        do
        {
          v409 = *v238++;
          v344 = v409;
        }
        while (*(_WORD *)(v409 + 32) != 450);
        goto LABEL_734;
      case 0x1C3:
        if (!sub_22E543898(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v243 = *(uint64_t **)v242;
        v244 = *(unsigned int *)(v242 + 8);
        v245 = *(uint64_t **)v242;
        if (!(_DWORD)v244)
          goto LABEL_665;
        v246 = 8 * v244;
        v245 = *(uint64_t **)v242;
        while (*(_WORD *)(*v245 + 32) != 451)
        {
          ++v245;
          v246 -= 8;
          if (!v246)
            goto LABEL_733;
        }
LABEL_665:
        if (v245 == &v243[v244])
          goto LABEL_733;
        do
        {
          v410 = *v243++;
          v344 = v410;
        }
        while (*(_WORD *)(v410 + 32) != 451);
        goto LABEL_734;
      case 0x1C4:
        if (!sub_22E53B6D8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_671;
        sub_22EFC8E88(a2);
        v248 = *(uint64_t **)v247;
        v249 = *(unsigned int *)(v247 + 8);
        v250 = *(uint64_t **)v247;
        if (!(_DWORD)v249)
          goto LABEL_668;
        v251 = 8 * v249;
        v250 = *(uint64_t **)v247;
        while (*(_WORD *)(*v250 + 32) != 452)
        {
          ++v250;
          v251 -= 8;
          if (!v251)
            goto LABEL_671;
        }
LABEL_668:
        if (v250 == &v248[v249])
        {
LABEL_671:
          v342 = 0;
          goto LABEL_672;
        }
        do
        {
          v411 = *v248++;
          v342 = v411;
        }
        while (*(_WORD *)(v411 + 32) != 452);
LABEL_672:
        if (a4 == 16)
        {
LABEL_675:
          v363 = a1;
          v344 = v342;
          goto LABEL_740;
        }
        if (a4 == 8)
        {
LABEL_674:
          v363 = a1;
          v344 = v342;
          goto LABEL_738;
        }
        if (!a3)
          goto LABEL_813;
        if (!sub_22E88FFC4(a3))
        {
LABEL_635:
          v400 = a1;
          v344 = v342;
          goto LABEL_743;
        }
        goto LABEL_678;
      case 0x1C6:
        if (!sub_22E5438F8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v253 = *(uint64_t **)v252;
        v254 = *(unsigned int *)(v252 + 8);
        v255 = *(uint64_t **)v252;
        if (!(_DWORD)v254)
          goto LABEL_679;
        v256 = 8 * v254;
        v255 = *(uint64_t **)v252;
        while (*(_WORD *)(*v255 + 32) != 454)
        {
          ++v255;
          v256 -= 8;
          if (!v256)
            goto LABEL_733;
        }
LABEL_679:
        if (v255 == &v253[v254])
          goto LABEL_733;
        do
        {
          v412 = *v253++;
          v344 = v412;
        }
        while (*(_WORD *)(v412 + 32) != 454);
        goto LABEL_734;
      case 0x1C7:
        if (!sub_22E543958(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v258 = *(uint64_t **)v257;
        v259 = *(unsigned int *)(v257 + 8);
        v260 = *(uint64_t **)v257;
        if (!(_DWORD)v259)
          goto LABEL_682;
        v261 = 8 * v259;
        v260 = *(uint64_t **)v257;
        while (*(_WORD *)(*v260 + 32) != 455)
        {
          ++v260;
          v261 -= 8;
          if (!v261)
            goto LABEL_733;
        }
LABEL_682:
        if (v260 == &v258[v259])
          goto LABEL_733;
        do
        {
          v413 = *v258++;
          v344 = v413;
        }
        while (*(_WORD *)(v413 + 32) != 455);
        goto LABEL_734;
      case 0x1C8:
        if (!sub_22E5439B8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v263 = *(uint64_t **)v262;
        v264 = *(unsigned int *)(v262 + 8);
        v265 = *(uint64_t **)v262;
        if (!(_DWORD)v264)
          goto LABEL_685;
        v266 = 8 * v264;
        v265 = *(uint64_t **)v262;
        while (*(_WORD *)(*v265 + 32) != 456)
        {
          ++v265;
          v266 -= 8;
          if (!v266)
            goto LABEL_733;
        }
LABEL_685:
        if (v265 == &v263[v264])
          goto LABEL_733;
        do
        {
          v414 = *v263++;
          v344 = v414;
        }
        while (*(_WORD *)(v414 + 32) != 456);
        goto LABEL_734;
      case 0x1C9:
        if (!sub_22E543A18(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v268 = *(uint64_t **)v267;
        v269 = *(unsigned int *)(v267 + 8);
        v270 = *(uint64_t **)v267;
        if (!(_DWORD)v269)
          goto LABEL_688;
        v271 = 8 * v269;
        v270 = *(uint64_t **)v267;
        while (*(_WORD *)(*v270 + 32) != 457)
        {
          ++v270;
          v271 -= 8;
          if (!v271)
            goto LABEL_733;
        }
LABEL_688:
        if (v270 == &v268[v269])
          goto LABEL_733;
        do
        {
          v415 = *v268++;
          v344 = v415;
        }
        while (*(_WORD *)(v415 + 32) != 457);
        goto LABEL_734;
      case 0x1CA:
        if (!sub_22E543A78(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v273 = *(uint64_t **)v272;
        v274 = *(unsigned int *)(v272 + 8);
        v275 = *(uint64_t **)v272;
        if (!(_DWORD)v274)
          goto LABEL_691;
        v276 = 8 * v274;
        v275 = *(uint64_t **)v272;
        while (*(_WORD *)(*v275 + 32) != 458)
        {
          ++v275;
          v276 -= 8;
          if (!v276)
            goto LABEL_733;
        }
LABEL_691:
        if (v275 == &v273[v274])
          goto LABEL_733;
        do
        {
          v416 = *v273++;
          v344 = v416;
        }
        while (*(_WORD *)(v416 + 32) != 458);
        goto LABEL_734;
      case 0x1CB:
        if (!sub_22E543AD8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v278 = *(uint64_t **)v277;
        v279 = *(unsigned int *)(v277 + 8);
        v280 = *(uint64_t **)v277;
        if (!(_DWORD)v279)
          goto LABEL_694;
        v281 = 8 * v279;
        v280 = *(uint64_t **)v277;
        while (*(_WORD *)(*v280 + 32) != 459)
        {
          ++v280;
          v281 -= 8;
          if (!v281)
            goto LABEL_733;
        }
LABEL_694:
        if (v280 == &v278[v279])
          goto LABEL_733;
        do
        {
          v417 = *v278++;
          v344 = v417;
        }
        while (*(_WORD *)(v417 + 32) != 459);
        goto LABEL_734;
      case 0x1CC:
        if (!sub_22E543B38(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v283 = *(uint64_t **)v282;
        v284 = *(unsigned int *)(v282 + 8);
        v285 = *(uint64_t **)v282;
        if (!(_DWORD)v284)
          goto LABEL_697;
        v286 = 8 * v284;
        v285 = *(uint64_t **)v282;
        while (*(_WORD *)(*v285 + 32) != 460)
        {
          ++v285;
          v286 -= 8;
          if (!v286)
            goto LABEL_733;
        }
LABEL_697:
        if (v285 == &v283[v284])
          goto LABEL_733;
        do
        {
          v418 = *v283++;
          v344 = v418;
        }
        while (*(_WORD *)(v418 + 32) != 460);
        goto LABEL_734;
      case 0x1CD:
        if (!sub_22E543B98(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v288 = *(uint64_t **)v287;
        v289 = *(unsigned int *)(v287 + 8);
        v290 = *(uint64_t **)v287;
        if (!(_DWORD)v289)
          goto LABEL_700;
        v291 = 8 * v289;
        v290 = *(uint64_t **)v287;
        while (*(_WORD *)(*v290 + 32) != 461)
        {
          ++v290;
          v291 -= 8;
          if (!v291)
            goto LABEL_733;
        }
LABEL_700:
        if (v290 == &v288[v289])
          goto LABEL_733;
        do
        {
          v419 = *v288++;
          v344 = v419;
        }
        while (*(_WORD *)(v419 + 32) != 461);
        goto LABEL_734;
      case 0x1CE:
        if (!sub_22E543BF8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v293 = *(uint64_t **)v292;
        v294 = *(unsigned int *)(v292 + 8);
        v295 = *(uint64_t **)v292;
        if (!(_DWORD)v294)
          goto LABEL_703;
        v296 = 8 * v294;
        v295 = *(uint64_t **)v292;
        while (*(_WORD *)(*v295 + 32) != 462)
        {
          ++v295;
          v296 -= 8;
          if (!v296)
            goto LABEL_733;
        }
LABEL_703:
        if (v295 == &v293[v294])
          goto LABEL_733;
        do
        {
          v420 = *v293++;
          v344 = v420;
        }
        while (*(_WORD *)(v420 + 32) != 462);
        goto LABEL_734;
      case 0x1CF:
        if (!sub_22E543C58(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v298 = *(uint64_t **)v297;
        v299 = *(unsigned int *)(v297 + 8);
        v300 = *(uint64_t **)v297;
        if (!(_DWORD)v299)
          goto LABEL_706;
        v301 = 8 * v299;
        v300 = *(uint64_t **)v297;
        while (*(_WORD *)(*v300 + 32) != 463)
        {
          ++v300;
          v301 -= 8;
          if (!v301)
            goto LABEL_733;
        }
LABEL_706:
        if (v300 == &v298[v299])
          goto LABEL_733;
        do
        {
          v421 = *v298++;
          v344 = v421;
        }
        while (*(_WORD *)(v421 + 32) != 463);
        goto LABEL_734;
      case 0x1D0:
        if (!sub_22E543CB8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v303 = *(uint64_t **)v302;
        v304 = *(unsigned int *)(v302 + 8);
        v305 = *(uint64_t **)v302;
        if (!(_DWORD)v304)
          goto LABEL_709;
        v306 = 8 * v304;
        v305 = *(uint64_t **)v302;
        while (*(_WORD *)(*v305 + 32) != 464)
        {
          ++v305;
          v306 -= 8;
          if (!v306)
            goto LABEL_733;
        }
LABEL_709:
        if (v305 == &v303[v304])
          goto LABEL_733;
        do
        {
          v422 = *v303++;
          v344 = v422;
        }
        while (*(_WORD *)(v422 + 32) != 464);
        goto LABEL_734;
      case 0x1D1:
        if (!sub_22E543D18(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v308 = *(uint64_t **)v307;
        v309 = *(unsigned int *)(v307 + 8);
        v310 = *(uint64_t **)v307;
        if (!(_DWORD)v309)
          goto LABEL_712;
        v311 = 8 * v309;
        v310 = *(uint64_t **)v307;
        while (*(_WORD *)(*v310 + 32) != 465)
        {
          ++v310;
          v311 -= 8;
          if (!v311)
            goto LABEL_733;
        }
LABEL_712:
        if (v310 == &v308[v309])
          goto LABEL_733;
        do
        {
          v423 = *v308++;
          v344 = v423;
        }
        while (*(_WORD *)(v423 + 32) != 465);
        goto LABEL_734;
      case 0x1D2:
        if (!sub_22E543D78(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v313 = *(uint64_t **)v312;
        v314 = *(unsigned int *)(v312 + 8);
        v315 = *(uint64_t **)v312;
        if (!(_DWORD)v314)
          goto LABEL_715;
        v316 = 8 * v314;
        v315 = *(uint64_t **)v312;
        while (*(_WORD *)(*v315 + 32) != 466)
        {
          ++v315;
          v316 -= 8;
          if (!v316)
            goto LABEL_733;
        }
LABEL_715:
        if (v315 == &v313[v314])
          goto LABEL_733;
        do
        {
          v424 = *v313++;
          v344 = v424;
        }
        while (*(_WORD *)(v424 + 32) != 466);
        goto LABEL_734;
      case 0x1D4:
        if (!sub_22E543DD8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v318 = *(uint64_t **)v317;
        v319 = *(unsigned int *)(v317 + 8);
        v320 = *(uint64_t **)v317;
        if (!(_DWORD)v319)
          goto LABEL_718;
        v321 = 8 * v319;
        v320 = *(uint64_t **)v317;
        while (*(_WORD *)(*v320 + 32) != 468)
        {
          ++v320;
          v321 -= 8;
          if (!v321)
            goto LABEL_733;
        }
LABEL_718:
        if (v320 == &v318[v319])
          goto LABEL_733;
        do
        {
          v425 = *v318++;
          v344 = v425;
        }
        while (*(_WORD *)(v425 + 32) != 468);
        goto LABEL_734;
      case 0x1D6:
        if (!sub_22E543E38(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v323 = *(uint64_t **)v322;
        v324 = *(unsigned int *)(v322 + 8);
        v325 = *(uint64_t **)v322;
        if (!(_DWORD)v324)
          goto LABEL_721;
        v326 = 8 * v324;
        v325 = *(uint64_t **)v322;
        while (*(_WORD *)(*v325 + 32) != 470)
        {
          ++v325;
          v326 -= 8;
          if (!v326)
            goto LABEL_733;
        }
LABEL_721:
        if (v325 == &v323[v324])
          goto LABEL_733;
        do
        {
          v426 = *v323++;
          v344 = v426;
        }
        while (*(_WORD *)(v426 + 32) != 470);
        goto LABEL_734;
      case 0x1D7:
        if (!sub_22F26E334(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_838;
        sub_22EFC8E88(a2);
        v461 = *(uint64_t **)v460;
        v462 = *(unsigned int *)(v460 + 8);
        v463 = *(uint64_t **)v460;
        if (!(_DWORD)v462)
          goto LABEL_835;
        v464 = 8 * v462;
        v463 = *(uint64_t **)v460;
        while (*(_WORD *)(*v463 + 32) != 471)
        {
          ++v463;
          v464 -= 8;
          if (!v464)
            goto LABEL_838;
        }
LABEL_835:
        if (v463 == &v461[v462])
        {
LABEL_838:
          v344 = 0;
          goto LABEL_839;
        }
        do
        {
          v478 = *v461++;
          v344 = v478;
        }
        while (*(_WORD *)(v478 + 32) != 471);
LABEL_839:
        if (a4 == 8)
          goto LABEL_737;
LABEL_599:
        if (!a3)
          goto LABEL_813;
        if (!sub_22EA85580(a1, v344, a3, a5))
          goto LABEL_747;
LABEL_678:
        v11 = sub_22EA80AF4(a1, a2, a3, 1, 1, a5);
        break;
      case 0x1D8:
        if (!sub_22E543E98(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v328 = *(uint64_t **)v327;
        v329 = *(unsigned int *)(v327 + 8);
        v330 = *(uint64_t **)v327;
        if (!(_DWORD)v329)
          goto LABEL_724;
        v331 = 8 * v329;
        v330 = *(uint64_t **)v327;
        while (*(_WORD *)(*v330 + 32) != 472)
        {
          ++v330;
          v331 -= 8;
          if (!v331)
            goto LABEL_733;
        }
LABEL_724:
        if (v330 == &v328[v329])
          goto LABEL_733;
        do
        {
          v427 = *v328++;
          v344 = v427;
        }
        while (*(_WORD *)(v427 + 32) != 472);
        goto LABEL_734;
      case 0x1D9:
        if (!sub_22E543EF8(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v333 = *(uint64_t **)v332;
        v334 = *(unsigned int *)(v332 + 8);
        v335 = *(uint64_t **)v332;
        if (!(_DWORD)v334)
          goto LABEL_727;
        v336 = 8 * v334;
        v335 = *(uint64_t **)v332;
        while (*(_WORD *)(*v335 + 32) != 473)
        {
          ++v335;
          v336 -= 8;
          if (!v336)
            goto LABEL_733;
        }
LABEL_727:
        if (v335 == &v333[v334])
          goto LABEL_733;
        do
        {
          v428 = *v333++;
          v344 = v428;
        }
        while (*(_WORD *)(v428 + 32) != 473);
        goto LABEL_734;
      case 0x1DA:
        if (!sub_22E543F58(a2))
          goto LABEL_747;
        if ((*(_BYTE *)(a2 + 29) & 1) == 0)
          goto LABEL_733;
        sub_22EFC8E88(a2);
        v338 = *(uint64_t **)v337;
        v339 = *(unsigned int *)(v337 + 8);
        v340 = *(uint64_t **)v337;
        if (!(_DWORD)v339)
          goto LABEL_730;
        v341 = 8 * v339;
        v340 = *(uint64_t **)v337;
        while (*(_WORD *)(*v340 + 32) != 474)
        {
          ++v340;
          v341 -= 8;
          if (!v341)
            goto LABEL_733;
        }
LABEL_730:
        if (v340 == &v338[v339])
        {
LABEL_733:
          v344 = 0;
          goto LABEL_734;
        }
        do
        {
          v429 = *v338++;
          v344 = v429;
        }
        while (*(_WORD *)(v429 + 32) != 474);
LABEL_734:
        switch(a4)
        {
          case 4:
            v363 = a1;
LABEL_745:
            v404 = 4;
LABEL_746:
            sub_22EA80E10(v363, v344, v404, a5);
            goto LABEL_747;
          case 16:
LABEL_739:
            v363 = a1;
LABEL_740:
            v404 = 16;
            goto LABEL_746;
          case 8:
LABEL_737:
            v363 = a1;
LABEL_738:
            v404 = 8;
            goto LABEL_746;
        }
        if (a3)
        {
LABEL_742:
          v400 = a1;
LABEL_743:
          sub_22EA5294C(v400, v344, a3, 1, a5);
          goto LABEL_747;
        }
LABEL_813:
        v11 = 1;
        break;
      default:
        break;
    }
  }
  if (!sub_22E53D258(a2))
  {
LABEL_762:
    v437 = 1;
    goto LABEL_765;
  }
  if (sub_22E53D258(a2))
  {
    if (!a3)
      goto LABEL_762;
    if ((*(_BYTE *)(a2 + 29) & 1) == 0)
      goto LABEL_760;
    sub_22EFC8E88(a2);
    v431 = *(uint64_t **)v430;
    v432 = *(unsigned int *)(v430 + 8);
    v433 = *(uint64_t **)v430;
    if ((_DWORD)v432)
    {
      v434 = 8 * v432;
      v433 = *(uint64_t **)v430;
      while (*(_WORD *)(*v433 + 32) != 378)
      {
        ++v433;
        v434 -= 8;
        if (!v434)
          goto LABEL_760;
      }
    }
    if (v433 == &v431[v432])
    {
LABEL_760:
      v435 = 0;
    }
    else
    {
      do
      {
        v436 = *v431++;
        v435 = v436;
      }
      while (*(_WORD *)(v436 + 32) != 378);
    }
    if (sub_22E88FFC4(a3))
      goto LABEL_762;
    sub_22EA5294C(a1, v435, a3, 1, a5);
  }
  v437 = 0;
LABEL_765:
  if (!sub_22E53D1F8(a2))
    goto LABEL_787;
  if (!sub_22E53D1F8(a2))
    goto LABEL_785;
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_776;
  sub_22EFC8E88(a2);
  v439 = *(uint64_t **)v438;
  v440 = *(unsigned int *)(v438 + 8);
  v441 = *(uint64_t **)v438;
  if ((_DWORD)v440)
  {
    v442 = 8 * v440;
    v441 = *(uint64_t **)v438;
    while (*(_WORD *)(*v441 + 32) != 408)
    {
      ++v441;
      v442 -= 8;
      if (!v442)
        goto LABEL_776;
    }
  }
  if (v441 == &v439[v440])
  {
LABEL_776:
    v443 = 0;
  }
  else
  {
    do
    {
      v444 = *v439++;
      v443 = v444;
    }
    while (*(_WORD *)(v444 + 32) != 408);
  }
  if (a4 != 4 && a4 != 8)
  {
    sub_22EA80E10(a1, v443, a4, a5);
LABEL_785:
    v445 = 0;
    goto LABEL_786;
  }
  if (a3 && !sub_22E6A2F54(a3) && !sub_22E4752A8(a3))
  {
    sub_22EA5294C(a1, v443, a3, 1, a5);
    goto LABEL_785;
  }
  v445 = 1;
LABEL_786:
  v437 &= v445;
LABEL_787:
  if (sub_22E546FA4(a2))
  {
    if (sub_22E546FA4(a2))
    {
      if (!a3)
      {
        v451 = 1;
LABEL_803:
        v437 &= v451;
        return v11 & v437;
      }
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_800;
      sub_22EFC8E88(a2);
      v447 = *(uint64_t **)v446;
      v448 = *(unsigned int *)(v446 + 8);
      v449 = *(uint64_t **)v446;
      if ((_DWORD)v448)
      {
        v450 = 8 * v448;
        v449 = *(uint64_t **)v446;
        while (*(_WORD *)(*v449 + 32) != 433)
        {
          ++v449;
          v450 -= 8;
          if (!v450)
            goto LABEL_800;
        }
      }
      if (v449 == &v447[v448])
      {
LABEL_800:
        v452 = 0;
      }
      else
      {
        do
        {
          v453 = *v447++;
          v452 = v453;
        }
        while (*(_WORD *)(v453 + 32) != 433);
      }
      sub_22EA5294C(a1, v452, a3, 1, a5);
    }
    v451 = 0;
    goto LABEL_803;
  }
  return v11 & v437;
}

uint64_t sub_22EA85580(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (sub_22E4752A8(a3) || sub_22E6A2F54(a3))
    return 1;
  sub_22EA5294C(a1, a2, a3, 1, a4);
  return 0;
}

uint64_t sub_22EA855EC(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  _OWORD *v24;
  unint64_t v25;
  int v26;

  result = sub_22EFC3B90(a2);
  if (result)
  {
    v6 = result;
    v7 = a3 + 72;
LABEL_3:
    v8 = *(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
    {
      v9 = a1[20];
      v10 = sub_22F10C2A4(v8);
      if (v10)
      {
        if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 35 >= 3)
          v11 = 0;
        else
          v11 = v10;
      }
      else
      {
        v11 = 0;
      }
      result = sub_22EA855EC(a1, v11, a3);
      if (a1[20] <= v9)
        goto LABEL_21;
      v19 = *(_DWORD *)(v6 + 24);
      v14 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
      v20 = *(_QWORD *)(v6 + 48);
      v16 = (_BYTE *)sub_22E3B8AAC(v14);
      v21 = *v16;
      v16[v21 + 1] = 9;
      *v16 = v21 + 1;
      *(_QWORD *)&v16[8 * v21 + 16] = v20;
      v23 = v19;
      v26 = 6176;
      v24 = 0;
      v25 = v14;
      v24 = (_OWORD *)sub_22E3B8AAC(v14);
      sub_22E78D4E8(v24, (uint64_t)v16);
      v18 = (unint64_t)(a1 + 18);
    }
    else
    {
      result = sub_22E9AEF2C(v6);
      if (!result)
        goto LABEL_21;
      v12 = result;
      result = sub_22E54AA28(v6);
      if ((result & 1) != 0)
        goto LABEL_21;
      v23 = *(unsigned __int16 *)(v12 + 32);
      result = (uint64_t)sub_22E9AF314(a3 + 48, &v23);
      if (*(_DWORD *)(result + 4) < 2u)
        goto LABEL_21;
      v22 = v7;
      v13 = *(_DWORD *)(v6 + 24);
      v14 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
      v15 = *(_QWORD *)(v12 + 16);
      v16 = (_BYTE *)sub_22E3B8AAC(v14);
      sub_22E4D6448((uint64_t)(v16 + 336), v15, 1);
      if (!v16)
        v16 = (_BYTE *)sub_22E3B8AAC(v14);
      v17 = *v16;
      v16[v17 + 1] = 15;
      *v16 = v17 + 1;
      *(_QWORD *)&v16[8 * v17 + 16] = v12;
      v23 = v13;
      v26 = 5741;
      v24 = 0;
      v25 = v14;
      v24 = (_OWORD *)sub_22E3B8AAC(v14);
      sub_22E78D4E8(v24, (uint64_t)v16);
      v7 = v22;
      v18 = v22;
    }
    sub_22E8928F4(v18, (unint64_t)&v23);
    if (v24)
    {
      if (v25)
      {
        sub_22E3BB10C(v25, (unint64_t)v24);
        v24 = 0;
      }
    }
    result = sub_22E3BB10C(v14, (unint64_t)v16);
LABEL_21:
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
  return result;
}

void sub_22EA85840(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_22EA85898()
{
  int v0;

  if ((v0 & 0x780000) == 0)
    JUMPOUT(0x22EA8586CLL);
  return 0;
}

uint64_t sub_22EA85BE8(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  _OWORD *v24;
  unint64_t v25;
  int v26;

  result = sub_22EFC3B90(a2);
  if (result)
  {
    v6 = result;
    v7 = a3 + 48;
LABEL_3:
    v8 = *(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
    {
      v9 = a1[14];
      v10 = sub_22F10C2A4(v8);
      if (v10)
      {
        if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 35 >= 3)
          v11 = 0;
        else
          v11 = v10;
      }
      else
      {
        v11 = 0;
      }
      result = sub_22EA85BE8(a1, v11, a3);
      if (a1[14] <= v9)
        goto LABEL_21;
      v19 = *(_DWORD *)(v6 + 24);
      v14 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
      v20 = *(_QWORD *)(v6 + 48);
      v16 = (_BYTE *)sub_22E3B8AAC(v14);
      v21 = *v16;
      v16[v21 + 1] = 9;
      *v16 = v21 + 1;
      *(_QWORD *)&v16[8 * v21 + 16] = v20;
      v23 = v19;
      v26 = 6176;
      v24 = 0;
      v25 = v14;
      v24 = (_OWORD *)sub_22E3B8AAC(v14);
      sub_22E78D4E8(v24, (uint64_t)v16);
      v18 = (unint64_t)(a1 + 12);
    }
    else
    {
      result = sub_22E9AEF2C(v6);
      if (!result)
        goto LABEL_21;
      v12 = result;
      result = sub_22E54AA28(v6);
      if ((result & 1) != 0)
        goto LABEL_21;
      v23 = *(unsigned __int16 *)(v12 + 32);
      result = (uint64_t)sub_22E9AF314(a3 + 24, &v23);
      if (*(_DWORD *)(result + 4) < 2u)
        goto LABEL_21;
      v22 = v7;
      v13 = *(_DWORD *)(v6 + 24);
      v14 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
      v15 = *(_QWORD *)(v12 + 16);
      v16 = (_BYTE *)sub_22E3B8AAC(v14);
      sub_22E4D6448((uint64_t)(v16 + 336), v15, 1);
      if (!v16)
        v16 = (_BYTE *)sub_22E3B8AAC(v14);
      v17 = *v16;
      v16[v17 + 1] = 15;
      *v16 = v17 + 1;
      *(_QWORD *)&v16[8 * v17 + 16] = v12;
      v23 = v13;
      v26 = 5741;
      v24 = 0;
      v25 = v14;
      v24 = (_OWORD *)sub_22E3B8AAC(v14);
      sub_22E78D4E8(v24, (uint64_t)v16);
      v7 = v22;
      v18 = v22;
    }
    sub_22E8928F4(v18, (unint64_t)&v23);
    if (v24)
    {
      if (v25)
      {
        sub_22E3BB10C(v25, (unint64_t)v24);
        v24 = 0;
      }
    }
    result = sub_22E3BB10C(v14, (unint64_t)v16);
LABEL_21:
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
  return result;
}

void sub_22EA85E3C(_DWORD *a1, uint64_t a2, int a3)
{
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  int v13;
  _OWORD *v14;
  unint64_t v15;
  int v16;

  v6 = a1[14];
  sub_22EA86558(a1, a2, (uint64_t)a1);
  if (a1[14] > v6)
  {
    v7 = sub_22F10C2A4(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
    if ((*(_DWORD *)(v7 + 28) & 0x7Fu) - 35 >= 3)
      v8 = 0;
    else
      v8 = v7;
    v9 = *(_DWORD *)(v8 + 56);
    v10 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
    v11 = (_BYTE *)sub_22E3B8AAC(v10);
    v12 = *v11;
    v11[v12 + 1] = 9;
    *v11 = v12 + 1;
    *(_QWORD *)&v11[8 * v12 + 16] = a2;
    v13 = v9;
    v16 = a3;
    v15 = v10;
    v14 = (_OWORD *)sub_22E3B8AAC(v10);
    sub_22E78D4E8(v14, (uint64_t)v11);
    sub_22E8928F4((unint64_t)(a1 + 12), (unint64_t)&v13);
    if (v14)
    {
      if (v15)
      {
        sub_22E3BB10C(v15, (unint64_t)v14);
        v14 = 0;
      }
    }
    sub_22E3BB10C(v10, (unint64_t)v11);
  }
}

uint64_t sub_22EA85F3C(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  unint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  int v13;
  _OWORD *v14;
  unint64_t v15;
  int v16;

  result = sub_22F10C2A4(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  if (result)
  {
    if ((*(_DWORD *)(result + 28) & 0x7Fu) - 35 <= 2)
    {
      result = sub_22EFC3B90(result);
      if (result)
      {
        v6 = result;
LABEL_6:
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) == 45)
        {
          v7 = a1[14];
          result = sub_22EA85F3C(a1);
          if (a1[14] > v7)
          {
            v8 = *(_DWORD *)(v6 + 24);
            v9 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
            v10 = *(_QWORD *)(v6 + 48);
            v11 = (_BYTE *)sub_22E3B8AAC(v9);
            v12 = *v11;
            v11[v12 + 1] = 9;
            *v11 = v12 + 1;
            *(_QWORD *)&v11[8 * v12 + 16] = v10;
            v13 = v8;
            v16 = 6176;
            v14 = 0;
            v15 = v9;
            v14 = (_OWORD *)sub_22E3B8AAC(v9);
            sub_22E78D4E8(v14, (uint64_t)v11);
            sub_22E8928F4((unint64_t)(a1 + 12), (unint64_t)&v13);
            if (v14)
            {
              if (v15)
              {
                sub_22E3BB10C(v15, (unint64_t)v14);
                v14 = 0;
              }
            }
            result = sub_22E3BB10C(v9, (unint64_t)v11);
          }
        }
        else
        {
          result = sub_22E54AA28(v6);
          if ((result & 1) == 0)
          {
            result = sub_22E54299C(v6);
            if ((result & 1) == 0)
            {
              sub_22EA86170((uint64_t)&v13, v6);
              result = sub_22EA86100(a3 + 24, (uint64_t)&v13);
              ++*(_DWORD *)result;
              ++*(_DWORD *)(a3 + 16);
            }
          }
        }
        while (1)
        {
          v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v6)
            break;
          if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
            goto LABEL_6;
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EA86100(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v8;

  v8 = 0;
  v4 = sub_22EA86240(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), (__int128 *)a2, &v8);
  v5 = v8;
  if ((v4 & 1) == 0)
  {
    v5 = sub_22EA86384(a1, (__int128 *)a2, v8);
    v6 = *(_BYTE *)(a2 + 16);
    *(_OWORD *)v5 = *(_OWORD *)a2;
    *(_BYTE *)(v5 + 16) = v6;
    *(_DWORD *)(v5 + 24) = 0;
  }
  return v5 + 24;
}

void sub_22EA86170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  const char *v16;
  _DWORD *v17;
  unsigned int v18;

  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v5 = *(uint64_t **)v4;
    v6 = *(unsigned int *)(v4 + 8);
    v7 = *(uint64_t **)v4;
    if ((_DWORD)v6)
    {
      v8 = 8 * v6;
      v7 = *(uint64_t **)v4;
      while (*(_WORD *)(*v7 + 32) != 467)
      {
        ++v7;
        v8 -= 8;
        if (!v8)
          goto LABEL_10;
      }
    }
    if (v7 != &v5[v6])
    {
      do
      {
        v10 = *v5++;
        v9 = v10;
      }
      while (*(_WORD *)(v10 + 32) != 467);
      v11 = *(_QWORD *)(v9 + 40);
      v12 = 1;
      goto LABEL_16;
    }
  }
LABEL_10:
  v13 = *(_QWORD *)(a2 + 40);
  v11 = v13 & 0xFFFFFFFFFFFFFFF8;
  if ((v13 & 7) == 0 && v11 != 0)
  {
    v12 = 0;
LABEL_16:
    v17 = *(_DWORD **)(v11 + 16);
    v18 = *v17;
    v16 = (const char *)(v17 + 4);
    v15 = v18;
    goto LABEL_17;
  }
  v15 = 0;
  v12 = 0;
  v16 = "";
LABEL_17:
  *(_QWORD *)a1 = v16;
  *(_QWORD *)(a1 + 8) = v15;
  *(_BYTE *)(a1 + 16) = v12;
}

uint64_t sub_22EA86240(uint64_t a1, int a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t result;
  int v10;
  uint64_t v11;
  unsigned int v12;
  const void *v13;
  size_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  int v21;
  _BOOL4 v22;
  int v23;
  BOOL v25;
  int v27;
  __int128 v28;
  char v29;

  if (a2)
  {
    v28 = *a3;
    v29 = *((_BYTE *)a3 + 16);
    v10 = sub_22F326F28((uint64_t)&v28);
    v11 = 0;
    v12 = a2 - 1;
    v13 = *(const void **)a3;
    v14 = *((_QWORD *)a3 + 1);
    v15 = 1;
    v16 = *((unsigned __int8 *)a3 + 16);
    while (1)
    {
      v17 = v10 & v12;
      v5 = a1 + 32 * v17;
      v18 = *(_QWORD *)(v5 + 8);
      if (v14 == v18)
      {
        v27 = v15;
        v19 = v13;
        if (v14)
        {
          v20 = v11;
          v21 = memcmp(v13, *(const void **)v5, v14);
          v11 = v20;
          v22 = v21 == 0;
        }
        else
        {
          v22 = 1;
        }
        v23 = *(unsigned __int8 *)(v5 + 16);
        if (v22)
        {
          v15 = v27;
          v13 = v19;
          if (v16 == v23)
          {
            result = 1;
            goto LABEL_3;
          }
        }
        else
        {
          v15 = v27;
          v13 = v19;
        }
      }
      else
      {
        v23 = *(unsigned __int8 *)(v5 + 16);
      }
      if (!v18 && v23 == 0)
        break;
      if (v11)
        v25 = 1;
      else
        v25 = v23 == 0;
      if (!v25 && v18 == 0)
        v11 = a1 + 32 * v17;
      v10 = v17 + v15++;
    }
    result = 0;
    if (v11)
      v5 = v11;
  }
  else
  {
    v5 = 0;
    result = 0;
  }
LABEL_3:
  *a4 = v5;
  return result;
}

uint64_t sub_22EA86384(uint64_t a1, __int128 *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  llvm *v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  llvm *v20;
  _OWORD *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;

  v26 = a3;
  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(unsigned int *)(a1 + 16);
  if (4 * v5 + 4 >= (3 * v6))
  {
    v7 = 2 * v6;
  }
  else
  {
    v7 = *(_DWORD *)(a1 + 16);
    if ((int)v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
      goto LABEL_3;
  }
  v10 = *(llvm **)a1;
  v11 = (v7 - 1) | ((unint64_t)(v7 - 1) >> 1);
  v12 = v11 | (v11 >> 2) | ((v11 | (v11 >> 2)) >> 4);
  v13 = ((v12 | (v12 >> 8)) >> 16) | v12 | (v12 >> 8);
  if ((v13 + 1) > 0x40)
    v14 = v13 + 1;
  else
    v14 = 64;
  *(_DWORD *)(a1 + 16) = v14;
  v15 = MEMORY[0x23489D23C](32 * v14, 8);
  *(_QWORD *)a1 = v15;
  if (v10)
  {
    *(_QWORD *)(a1 + 8) = 0;
    v16 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v16)
    {
      v17 = 32 * v16;
      do
      {
        *(_QWORD *)v15 = 0;
        *(_QWORD *)(v15 + 8) = 0;
        *(_BYTE *)(v15 + 16) = 0;
        v15 += 32;
        v17 -= 32;
      }
      while (v17);
    }
    v18 = (void *)(32 * v6);
    if ((_DWORD)v6)
    {
      v19 = 32 * v6;
      v20 = v10;
      do
      {
        if (*((_QWORD *)v20 + 1))
        {
          v27 = 0;
          sub_22EA86240(*(_QWORD *)a1, *(_DWORD *)(a1 + 16), (__int128 *)v20, &v27);
          v21 = v27;
          v22 = *((_BYTE *)v20 + 16);
          *v27 = *(_OWORD *)v20;
          *((_BYTE *)v21 + 16) = v22;
          *((_DWORD *)v21 + 6) = *((_DWORD *)v20 + 6);
          ++*(_DWORD *)(a1 + 8);
        }
        v20 = (llvm *)((char *)v20 + 32);
        v19 -= 32;
      }
      while (v19);
    }
    llvm::deallocate_buffer(v10, v18);
    v15 = *(_QWORD *)a1;
    LODWORD(v23) = *(_DWORD *)(a1 + 16);
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v23 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v23)
    {
      v24 = 0;
      do
      {
        v25 = v15 + v24;
        *(_QWORD *)v25 = 0;
        *(_QWORD *)(v25 + 8) = 0;
        *(_BYTE *)(v25 + 16) = 0;
        v24 += 32;
      }
      while (32 * v23 != v24);
    }
  }
  sub_22EA86240(v15, v23, a2, &v26);
  v5 = *(_DWORD *)(a1 + 8);
  a3 = v26;
LABEL_3:
  *(_DWORD *)(a1 + 8) = v5 + 1;
  if (*(_QWORD *)(a3 + 8))
    v8 = 0;
  else
    v8 = *(_BYTE *)(a3 + 16) == 0;
  if (!v8)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

void sub_22EA86558(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unint64_t v31;
  int v32;
  int v33;
  _OWORD *v34;
  unint64_t v35;
  int v36;
  void *v37[2];
  unsigned __int8 v38;

  v5 = sub_22F10C2A4(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  if (v5)
  {
    if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 35 <= 2)
    {
      v6 = sub_22EFC3B90(v5);
      if (v6)
      {
        v7 = v6;
LABEL_6:
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) == 45)
        {
          v8 = a1[14];
          sub_22EA86558(a1);
          if (a1[14] > v8)
          {
            v9 = *(_DWORD *)(v7 + 24);
            v10 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
            v11 = *(_QWORD *)(v7 + 48);
            v12 = (_BYTE *)sub_22E3B8AAC(v10);
            v13 = *v12;
            v12[v13 + 1] = 9;
            *v12 = v13 + 1;
            *(_QWORD *)&v12[8 * v13 + 16] = v11;
            v33 = v9;
            v36 = 6176;
            v34 = 0;
            v35 = v10;
            v34 = (_OWORD *)sub_22E3B8AAC(v10);
            sub_22E78D4E8(v34, (uint64_t)v12);
            sub_22E8928F4((unint64_t)(a1 + 12), (unint64_t)&v33);
            if (v34)
            {
              if (v35)
              {
                sub_22E3BB10C(v35, (unint64_t)v34);
                v34 = 0;
              }
            }
            sub_22E3BB10C(v10, (unint64_t)v12);
          }
        }
        else if (!sub_22E54AA28(v7) && !sub_22E54299C(v7))
        {
          sub_22EA86170((uint64_t)v37, v7);
          if (*(_DWORD *)sub_22EA86100(a3 + 24, (uint64_t)v37) >= 2u)
          {
            v14 = *(_DWORD *)(v7 + 24);
            v15 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v7 + 16))(v7);
            v16 = v38;
            if (v38)
            {
              sub_22EFC8E88(v7);
              v18 = *v17;
              v19 = *((unsigned int *)v17 + 2);
              if ((_DWORD)v19 && *(_WORD *)(*v18 + 32) != 467)
              {
                v20 = 8 * v19 - 8;
                v21 = *v17;
                do
                {
                  v22 = v21[1];
                  ++v21;
                  v20 -= 8;
                }
                while (*(_WORD *)(v22 + 32) != 467);
              }
              do
              {
                v24 = *v18++;
                v23 = v24;
              }
              while (*(_WORD *)(v24 + 32) != 467);
              v25 = *(_QWORD *)(v23 + 16);
              v14 = v25;
            }
            else
            {
              v25 = v15;
            }
            v26 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
            v30 = 0;
            v31 = v26;
            v32 = 5745;
            sub_22E3B89A8(&v30, v37[0], (size_t)v37[1]);
            v27 = v30;
            if (!v30)
            {
              v27 = (unsigned __int8 *)sub_22E3B8AAC(v31);
              v30 = v27;
            }
            v27[*v27 + 1] = 3;
            v28 = v30;
            v29 = *v30;
            *v30 = v29 + 1;
            *(_QWORD *)&v28[8 * v29 + 16] = v16;
            sub_22E4D6448((uint64_t)(v28 + 336), v25, 1);
            v33 = v14;
            v36 = v32;
            v34 = 0;
            v35 = v31;
            if (v30)
            {
              v34 = (_OWORD *)sub_22E3B8AAC(v31);
              sub_22E78D4E8(v34, (uint64_t)v30);
            }
            sub_22E8928F4(a3 + 48, (unint64_t)&v33);
            if (v34 && v35)
            {
              sub_22E3BB10C(v35, (unint64_t)v34);
              v34 = 0;
            }
            if (v30 && v31)
              sub_22E3BB10C(v31, (unint64_t)v30);
          }
        }
        while (1)
        {
          v7 = *(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v7)
            break;
          if ((*(_DWORD *)(v7 + 28) & 0x7Fu) - 49 < 3)
            goto LABEL_6;
        }
      }
    }
  }
}

void sub_22EA86868(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_22EA868CC()
{
  JUMPOUT(0x22EA868A0);
}

uint64_t sub_22EA868D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_22F114198(*(_QWORD *)(v0 + 24));
  if ((*(_BYTE *)(v1 + 28) & 0x80) == 0)
  {
    sub_22E496830(v1);
    JUMPOUT(0x22EA868A0);
  }
  return 0;
}

void sub_22EA86E08()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA86E1C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24FAB7A80;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_22EA86E54(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAB7A80;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unsigned int *sub_22EA86E74(uint64_t a1)
{
  unsigned int v2[24];

  sub_22E8FCA40(**(_QWORD ***)(a1 + 8), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), 0x167Du, 0, (uint64_t)v2);
  return sub_22E903BEC(v2);
}

void sub_22EA86EB4()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA86EC8(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24FAB7AC8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_22EA86F00(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAB7AC8;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unsigned int *sub_22EA86F20(uint64_t a1)
{
  _QWORD *v2;
  int v3;
  uint64_t v5;
  unsigned int v6[24];

  v2 = **(_QWORD ***)(a1 + 8);
  v3 = sub_22EFBAFDC(*(_QWORD *)(a1 + 16));
  sub_22E8FCA40(v2, v3, 0x167Eu, 0, (uint64_t)v6);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 48);
  sub_22E8901B8((uint64_t)v6, &v5);
  return sub_22E903BEC(v6);
}

uint64_t sub_22EA86F88(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  int v5;
  int v7;
  unint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t (**v15)();
  uint64_t (**v16)();
  void (**v17)(void);
  _QWORD v19[3];
  _QWORD *v20;
  uint64_t v21;

  v5 = a5;
  v7 = a3;
  v21 = *MEMORY[0x24BDAC8D0];
  v10 = sub_22EC6602C(*a1, a2, a3, 0, 0, a5, 0, 0, 0, 0, a4, 0);
  v11 = (v10 >> 1) & 3;
  if (v11 == 1)
  {
    v12 = (uint64_t)(a1 + 3);
    v14 = operator new(0x28uLL);
    v16 = &off_24FAB7BA0;
LABEL_9:
    *v14 = v16;
    v14[1] = a1;
    v14[2] = a2;
    *((_DWORD *)v14 + 6) = a4;
    *((_DWORD *)v14 + 7) = v5;
    *((_DWORD *)v14 + 8) = v7;
    goto LABEL_13;
  }
  if (v11)
  {
    v13 = v10 & 0xFFFFFFFFFFFFFFF8;
    if ((*(_BYTE *)((v10 & 0xFFFFFFFFFFFFFFF8) + 29) & 0x60) != 0)
    {
      v12 = (uint64_t)(a1 + 3);
      v14 = operator new(0x30uLL);
      v15 = &off_24FAB7BE8;
    }
    else
    {
      if ((*(_BYTE *)(v13 + 82) & 0x80) != 0)
        return 1;
      v12 = (uint64_t)(a1 + 3);
      v14 = operator new(0x30uLL);
      v15 = &off_24FAB7C30;
    }
    goto LABEL_12;
  }
  v12 = (uint64_t)(a1 + 3);
  v13 = v10 & 0xFFFFFFFFFFFFFFF8;
  if ((v10 & 0xFFFFFFFFFFFFFFF8) == 0)
  {
    v14 = operator new(0x28uLL);
    v16 = &off_24FAB7B58;
    goto LABEL_9;
  }
  v14 = operator new(0x30uLL);
  v15 = &off_24FAB7B10;
LABEL_12:
  *v14 = v15;
  v14[1] = a1;
  v14[2] = v13;
  v14[3] = a2;
  *((_DWORD *)v14 + 8) = a4;
  *((_DWORD *)v14 + 9) = v5;
  *((_DWORD *)v14 + 10) = v7;
LABEL_13:
  v20 = v14;
  sub_22E9B2A3C(v12, (unint64_t)v19);
  if (v20 == v19)
  {
    v17 = (void (**)(void))(v19[0] + 32);
    goto LABEL_17;
  }
  if (v20)
  {
    v17 = (void (**)(void))(*v20 + 40);
LABEL_17:
    (*v17)();
  }
  return 0;
}

void sub_22EA87138()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA8714C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x30uLL);
  *(_QWORD *)v2 = &off_24FAB7B10;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((_QWORD *)v2 + 5) = *(_QWORD *)(a1 + 40);
  return result;
}

__n128 sub_22EA87194(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  *(_QWORD *)a2 = &off_24FAB7B10;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

void sub_22EA871C4(uint64_t a1)
{
  _QWORD **v2;
  uint64_t v3;
  int32x2_t v4;
  int64x2_t v5;
  int8x16_t v6;
  int8x16_t v7;
  uint64_t v8;
  int32x2_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int8x16_t v13;
  int8x16_t v14;
  unsigned int v15;
  int8x16_t v16;
  int8x16_t v17;
  unsigned int v18[24];

  v2 = *(_QWORD ***)(a1 + 8);
  sub_22E8FCA40(*v2, *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), 0x16A6u, 0, (uint64_t)v18);
  v3 = sub_22E890024((uint64_t)v18, (uint64_t *)(a1 + 24));
  v4 = vdup_n_s32(*(_DWORD *)(a1 + 32) == 0);
  v5.i64[0] = v4.u32[0];
  v5.i64[1] = v4.u32[1];
  v6 = (int8x16_t)vdupq_n_s64(8uLL);
  v6.i64[0] = (uint64_t)"ray_data";
  v7 = (int8x16_t)vdupq_n_s64(6uLL);
  v7.i64[0] = (uint64_t)"thread";
  v13 = v6;
  v14 = v7;
  v17 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v5, 0x3FuLL)), v7, v6);
  v8 = sub_22F2F2210(v3, (uint64_t)&v17);
  v9 = vdup_n_s32(*(_DWORD *)(a1 + 36) == 0);
  v5.i64[0] = v9.u32[0];
  v5.i64[1] = v9.u32[1];
  v16 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v5, 0x3FuLL)), v14, v13);
  v10 = sub_22F2F2210(v8, (uint64_t)&v16);
  v11 = *(_DWORD *)(a1 + 40);
  if (v11 == 1)
  {
    v12 = 0;
  }
  else if (v11 == 5)
  {
    v12 = 2;
  }
  else
  {
    v12 = 1;
  }
  v15 = v12;
  sub_22E89519C(v10, &v15);
  sub_22E903BEC(v18);
  sub_22EB17D68(*v2, *(_QWORD *)(a1 + 16));
}

void sub_22EA872E4()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA872F8(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_24FAB7B58;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_22EA87338(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAB7B58;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unsigned int *sub_22EA87360(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int32x2_t v3;
  int64x2_t v4;
  int8x16_t v5;
  int8x16_t v6;
  uint64_t v7;
  int32x2_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int8x16_t v13;
  int8x16_t v14;
  unsigned int v15;
  int8x16_t v16;
  int8x16_t v17;
  unsigned int v18[24];

  v1 = a1 + 16;
  sub_22E8FCA40(**(_QWORD ***)(a1 + 8), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), 0x16A5u, 0, (uint64_t)v18);
  v2 = sub_22E890024((uint64_t)v18, (uint64_t *)v1);
  v3 = vdup_n_s32(*(_DWORD *)(v1 + 8) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  v5 = (int8x16_t)vdupq_n_s64(8uLL);
  v5.i64[0] = (uint64_t)"ray_data";
  v6 = (int8x16_t)vdupq_n_s64(6uLL);
  v6.i64[0] = (uint64_t)"thread";
  v13 = v5;
  v14 = v6;
  v17 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v6, v5);
  v7 = sub_22F2F2210(v2, (uint64_t)&v17);
  v8 = vdup_n_s32(*(_DWORD *)(v1 + 12) == 0);
  v4.i64[0] = v8.u32[0];
  v4.i64[1] = v8.u32[1];
  v16 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v14, v13);
  v9 = sub_22F2F2210(v7, (uint64_t)&v16);
  v10 = *(_DWORD *)(v1 + 16);
  if (v10 == 1)
  {
    v11 = 0;
  }
  else if (v10 == 5)
  {
    v11 = 2;
  }
  else
  {
    v11 = 1;
  }
  v15 = v11;
  sub_22E89519C(v9, &v15);
  return sub_22E903BEC(v18);
}

void sub_22EA87478()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA8748C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x28uLL);
  *(_QWORD *)v2 = &off_24FAB7BA0;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  return result;
}

__n128 sub_22EA874CC(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAB7BA0;
  result = *(__n128 *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unsigned int *sub_22EA874F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int32x2_t v3;
  int64x2_t v4;
  int8x16_t v5;
  int8x16_t v6;
  uint64_t v7;
  int32x2_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int8x16_t v13;
  int8x16_t v14;
  unsigned int v15;
  int8x16_t v16;
  int8x16_t v17;
  unsigned int v18[24];

  v1 = a1 + 16;
  sub_22E8FCA40(**(_QWORD ***)(a1 + 8), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), 0x16A3u, 0, (uint64_t)v18);
  v2 = sub_22E890024((uint64_t)v18, (uint64_t *)v1);
  v3 = vdup_n_s32(*(_DWORD *)(v1 + 8) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  v5 = (int8x16_t)vdupq_n_s64(8uLL);
  v5.i64[0] = (uint64_t)"ray_data";
  v6 = (int8x16_t)vdupq_n_s64(6uLL);
  v6.i64[0] = (uint64_t)"thread";
  v13 = v5;
  v14 = v6;
  v17 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v6, v5);
  v7 = sub_22F2F2210(v2, (uint64_t)&v17);
  v8 = vdup_n_s32(*(_DWORD *)(v1 + 12) == 0);
  v4.i64[0] = v8.u32[0];
  v4.i64[1] = v8.u32[1];
  v16 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v14, v13);
  v9 = sub_22F2F2210(v7, (uint64_t)&v16);
  v10 = *(_DWORD *)(v1 + 16);
  if (v10 == 1)
  {
    v11 = 0;
  }
  else if (v10 == 5)
  {
    v11 = 2;
  }
  else
  {
    v11 = 1;
  }
  v15 = v11;
  sub_22E89519C(v9, &v15);
  return sub_22E903BEC(v18);
}

void sub_22EA8760C()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA87620(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x30uLL);
  *(_QWORD *)v2 = &off_24FAB7BE8;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((_QWORD *)v2 + 5) = *(_QWORD *)(a1 + 40);
  return result;
}

__n128 sub_22EA87668(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  *(_QWORD *)a2 = &off_24FAB7BE8;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unsigned int *sub_22EA87698(uint64_t a1)
{
  uint64_t v2;
  int32x2_t v3;
  int64x2_t v4;
  int8x16_t v5;
  int8x16_t v6;
  uint64_t v7;
  int32x2_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int8x16_t v13;
  int8x16_t v14;
  unsigned int v15;
  int8x16_t v16;
  int8x16_t v17;
  unsigned int v18[24];

  sub_22E8FCA40(**(_QWORD ***)(a1 + 8), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), 0x16A7u, 0, (uint64_t)v18);
  v2 = sub_22E890024((uint64_t)v18, (uint64_t *)(a1 + 24));
  v3 = vdup_n_s32(*(_DWORD *)(a1 + 32) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  v5 = (int8x16_t)vdupq_n_s64(8uLL);
  v5.i64[0] = (uint64_t)"ray_data";
  v6 = (int8x16_t)vdupq_n_s64(6uLL);
  v6.i64[0] = (uint64_t)"thread";
  v13 = v5;
  v14 = v6;
  v17 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v6, v5);
  v7 = sub_22F2F2210(v2, (uint64_t)&v17);
  v8 = vdup_n_s32(*(_DWORD *)(a1 + 36) == 0);
  v4.i64[0] = v8.u32[0];
  v4.i64[1] = v8.u32[1];
  v16 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v14, v13);
  v9 = sub_22F2F2210(v7, (uint64_t)&v16);
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 1)
  {
    v11 = 0;
  }
  else if (v10 == 5)
  {
    v11 = 2;
  }
  else
  {
    v11 = 1;
  }
  v15 = v11;
  sub_22E89519C(v9, &v15);
  return sub_22E903BEC(v18);
}

void sub_22EA877AC()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA877C0(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x30uLL);
  *(_QWORD *)v2 = &off_24FAB7C30;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((_QWORD *)v2 + 5) = *(_QWORD *)(a1 + 40);
  return result;
}

__n128 sub_22EA87808(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  *(_QWORD *)a2 = &off_24FAB7C30;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unsigned int *sub_22EA87838(uint64_t a1)
{
  uint64_t v2;
  int32x2_t v3;
  int64x2_t v4;
  int8x16_t v5;
  int8x16_t v6;
  uint64_t v7;
  int32x2_t v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  int8x16_t v13;
  int8x16_t v14;
  unsigned int v15;
  int8x16_t v16;
  int8x16_t v17;
  unsigned int v18[24];

  sub_22E8FCA40(**(_QWORD ***)(a1 + 8), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), 0x16A8u, 0, (uint64_t)v18);
  v2 = sub_22E890024((uint64_t)v18, (uint64_t *)(a1 + 24));
  v3 = vdup_n_s32(*(_DWORD *)(a1 + 32) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  v5 = (int8x16_t)vdupq_n_s64(8uLL);
  v5.i64[0] = (uint64_t)"ray_data";
  v6 = (int8x16_t)vdupq_n_s64(6uLL);
  v6.i64[0] = (uint64_t)"thread";
  v13 = v5;
  v14 = v6;
  v17 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v6, v5);
  v7 = sub_22F2F2210(v2, (uint64_t)&v17);
  v8 = vdup_n_s32(*(_DWORD *)(a1 + 36) == 0);
  v4.i64[0] = v8.u32[0];
  v4.i64[1] = v8.u32[1];
  v16 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v4, 0x3FuLL)), v14, v13);
  v9 = sub_22F2F2210(v7, (uint64_t)&v16);
  v10 = *(_DWORD *)(a1 + 40);
  if (v10 == 1)
  {
    v11 = 0;
  }
  else if (v10 == 5)
  {
    v11 = 2;
  }
  else
  {
    v11 = 1;
  }
  v15 = v11;
  sub_22E89519C(v9, &v15);
  return sub_22E903BEC(v18);
}

void sub_22EA87948(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_22EA879A0()
{
  int v0;

  if ((v0 & 0x780000) == 0)
    JUMPOUT(0x22EA87974);
  return 0;
}

void sub_22EA87F58(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t **v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned __int8 *v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unint64_t v35;
  int v36;
  int v37;
  _OWORD *v38;
  unint64_t v39;
  int v40;
  void *v41[2];
  unsigned __int8 v42;

  v5 = sub_22EFC3B90(a2);
  if (v5)
  {
    v6 = v5;
    v7 = a1 + 12;
LABEL_3:
    v8 = *(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45
      && !sub_22F10B8E0(v8, "interpolant", 11, 1, 0))
    {
      v21 = a1[14];
      v22 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0));
      if (v22)
      {
        if ((*(_DWORD *)(v22 + 28) & 0x7Fu) - 35 >= 3)
          v23 = 0;
        else
          v23 = v22;
      }
      else
      {
        v23 = 0;
      }
      sub_22EA87F58(a1, v23, a3);
      if (a1[14] > v21)
      {
        v24 = *(_DWORD *)(v6 + 24);
        v25 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
        v26 = (unint64_t)v7;
        v27 = *(_QWORD *)(v6 + 48);
        v28 = (_BYTE *)sub_22E3B8AAC(v25);
        v29 = *v28;
        v28[v29 + 1] = 9;
        *v28 = v29 + 1;
        *(_QWORD *)&v28[8 * v29 + 16] = v27;
        v7 = (_DWORD *)v26;
        v37 = v24;
        v40 = 6176;
        v38 = 0;
        v39 = v25;
        v38 = (_OWORD *)sub_22E3B8AAC(v25);
        sub_22E78D4E8(v38, (uint64_t)v28);
        sub_22E8928F4(v26, (unint64_t)&v37);
        if (v38 && v39)
        {
          sub_22E3BB10C(v39, (unint64_t)v38);
          v38 = 0;
        }
        sub_22E3BB10C(v25, (unint64_t)v28);
      }
    }
    else if (!sub_22E54AA28(v6) && !sub_22E54299C(v6))
    {
      sub_22EA86170((uint64_t)v41, v6);
      if (*(_DWORD *)sub_22EA86100(a3 + 24, (uint64_t)v41) >= 2u)
      {
        v9 = *(_DWORD *)(v6 + 24);
        v10 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v6 + 16))(v6);
        v11 = v42;
        if (v42)
        {
          sub_22EFC8E88(v6);
          v13 = *v12;
          v14 = *((unsigned int *)v12 + 2);
          if ((_DWORD)v14 && *(_WORD *)(*v13 + 32) != 467)
          {
            v15 = 8 * v14 - 8;
            v16 = *v12;
            do
            {
              v17 = v16[1];
              ++v16;
              v15 -= 8;
            }
            while (*(_WORD *)(v17 + 32) != 467);
          }
          do
          {
            v19 = *v13++;
            v18 = v19;
          }
          while (*(_WORD *)(v19 + 32) != 467);
          v20 = *(_QWORD *)(v18 + 16);
          v9 = v20;
        }
        else
        {
          v20 = v10;
        }
        v30 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
        v34 = 0;
        v35 = v30;
        v36 = 5744;
        sub_22E3B89A8(&v34, v41[0], (size_t)v41[1]);
        v31 = v34;
        if (!v34)
        {
          v31 = (unsigned __int8 *)sub_22E3B8AAC(v35);
          v34 = v31;
        }
        v31[*v31 + 1] = 3;
        v32 = v34;
        v33 = *v34;
        *v34 = v33 + 1;
        *(_QWORD *)&v32[8 * v33 + 16] = v11;
        sub_22E4D6448((uint64_t)(v32 + 336), v20, 1);
        v37 = v9;
        v40 = v36;
        v38 = 0;
        v39 = v35;
        if (v34)
        {
          v38 = (_OWORD *)sub_22E3B8AAC(v35);
          sub_22E78D4E8(v38, (uint64_t)v34);
        }
        sub_22E8928F4(a3 + 48, (unint64_t)&v37);
        if (v38 && v39)
        {
          sub_22E3BB10C(v39, (unint64_t)v38);
          v38 = 0;
        }
        if (v34)
        {
          if (v35)
            sub_22E3BB10C(v35, (unint64_t)v34);
        }
      }
    }
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
}

uint64_t sub_22EA882C0(_QWORD **a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BOOL4 v54;
  _QWORD *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  _OWORD *v75;
  unint64_t v76;
  int v77;

  ++*((_DWORD *)a1 + 4);
  v3 = sub_22F10C2A4(a2);
  if ((*(_DWORD *)(v3 + 28) & 0x7Fu) - 35 >= 3)
    v4 = 0;
  else
    v4 = v3;
  if ((*(_BYTE *)(v4 + 28) & 0x80) != 0 || (*(_DWORD *)(v4 + 72) & 0xE000) == 0x4000)
  {
LABEL_6:
    v5 = 0;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)((*a1)[9] + 124);
  if ((v7 & 0x400000000000000) != 0)
    v5 = 6;
  else
    v5 = 5;
  if ((v7 & 0x100000000000000) == 0 && *((_DWORD *)a1 + 4))
    v5 = sub_22EA88C04(v5, 4);
  if (sub_22EA1DB60((uint64_t)a1[1])
    || sub_22E6A2F54((uint64_t)a1[1])
    || sub_22EFC1D94((uint64_t)a1[1])
    || sub_22E88FFC4((uint64_t)a1[1]) && (*(_BYTE *)((*a1)[9] + 120) & 1) == 0)
  {
    v5 = sub_22EA88C04(v5, 4);
  }
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v4 + 104) + 96), *(_QWORD *)(v4 + 104));
  if (*(_DWORD *)(*(_QWORD *)(v4 + 128) + 16))
  {
    v8 = (*a1)[11] + 2128;
    v74 = *(_DWORD *)(v4 + 24);
    v77 = 5761;
    v75 = 0;
    v76 = v8;
    sub_22E8928F4((unint64_t)(a1 + 3), (unint64_t)&v74);
    if (v75 && v76)
      sub_22E3BB10C(v76, (unint64_t)v75);
    v5 = 0;
  }
  if (!sub_22EFC3B90(v4))
  {
    v5 = sub_22EA88C04(v5, 3);
    goto LABEL_7;
  }
  v9 = sub_22EFC3B90(v4);
  if (!v9)
  {
    if ((_DWORD)v5 != 2)
      goto LABEL_7;
    goto LABEL_124;
  }
  v10 = v9;
  v11 = 0;
  v12 = 0;
  v13 = 0;
LABEL_28:
  v14 = (uint64_t *)(*(_QWORD *)(v10 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 < 2)
    goto LABEL_72;
  v15 = sub_22E5453EC(*v14);
  if (v15)
  {
    v16 = sub_22F10C2A4(v15);
    v17 = (*(_DWORD *)(v16 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v16;
    if (sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v17 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)))
      goto LABEL_72;
  }
  v18 = sub_22E5457C4(*v14);
  if (v18)
  {
    v19 = sub_22F10C2A4(v18);
    v20 = (*(_DWORD *)(v19 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v19;
    if (sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v20 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)))
      goto LABEL_72;
  }
  if ((sub_22F10CDF4(*v14) & 1) != 0)
    goto LABEL_72;
  v21 = sub_22E5453EC(*v14);
  if (v21)
  {
    v22 = sub_22F10C2A4(v21);
    v23 = (*(_DWORD *)(v22 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v22;
    if ((sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v23 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      goto LABEL_72;
  }
  v24 = sub_22E5457C4(*v14);
  if (v24)
  {
    v25 = sub_22F10C2A4(v24);
    v26 = (*(_DWORD *)(v25 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v25;
    if ((sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v26 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      goto LABEL_72;
  }
  if ((sub_22F10C510(*v14) & 1) != 0)
    goto LABEL_72;
  v27 = sub_22E5453EC(*v14);
  if (v27)
  {
    v28 = sub_22F10C2A4(v27);
    v29 = (*(_DWORD *)(v28 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v28;
    if ((sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v29 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      goto LABEL_72;
  }
  v30 = sub_22E5457C4(*v14);
  if (v30)
  {
    v31 = sub_22F10C2A4(v30);
    v32 = (*(_DWORD *)(v31 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v31;
    if ((sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v32 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      goto LABEL_72;
  }
  if ((sub_22F10C1B4(*v14) & 1) != 0
    || (v33 = sub_22E5453EC(*v14)) != 0
    && ((v34 = sub_22F10C2A4(v33), (*(_DWORD *)(v34 + 28) & 0x7Fu) - 35 >= 3) ? (v35 = 0) : (v35 = v34),
        (sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v35 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
    || (v36 = sub_22E5457C4(*v14)) != 0
    && ((v37 = sub_22F10C2A4(v36), (*(_DWORD *)(v37 + 28) & 0x7Fu) - 35 >= 3) ? (v38 = 0) : (v38 = v37),
        sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v38 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))))
  {
LABEL_72:
    v39 = sub_22EA4DA58(*a1, v10, (uint64_t)a1[1], 0, 1, (unint64_t)(a1 + 3));
LABEL_73:
    v40 = v39 != 0;
    goto LABEL_74;
  }
  if ((sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0
    || (v42 = sub_22E5453EC(*v14)) != 0
    && ((v43 = sub_22F10C2A4(v42), (*(_DWORD *)(v43 + 28) & 0x7Fu) - 35 >= 3) ? (v44 = 0) : (v44 = v43),
        (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v44 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                             + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
    || (v45 = sub_22E5457C4(*v14)) != 0
    && ((v46 = sub_22F10C2A4(v45), (*(_DWORD *)(v46 + 28) & 0x7Fu) - 35 >= 3) ? (v47 = 0) : (v47 = v46),
        sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v47 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                          + 8) & 0xFFFFFFFFFFFFFFF0))))
  {
    v39 = sub_22EA55C38(*a1, v10, (uint64_t)a1[1], 0, 1, (unint64_t)(a1 + 3));
    goto LABEL_73;
  }
  if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) != 0
    || (v48 = sub_22E5453EC(*v14)) != 0
    && ((v49 = sub_22F10C2A4(v48), (*(_DWORD *)(v49 + 28) & 0x7Fu) - 35 >= 3) ? (v50 = 0) : (v50 = v49),
        (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v50 + 168) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) != 0)|| (v51 = sub_22E5457C4(*v14)) != 0&& ((v52 = sub_22F10C2A4(v51), (*(_DWORD *)(v52 + 28) & 0x7Fu) - 35 >= 3) ? (v53 = 0) : (v53 = v52), sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v53 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0)))
  {
    v39 = sub_22EA54A84(*a1, v10, (uint64_t)a1[1], 0, 1, (unint64_t)(a1 + 3));
    goto LABEL_73;
  }
  v73 = v11;
  v54 = sub_22E53B01C(v10);
  v55 = *a1;
  v56 = (uint64_t)a1[1];
  if (!v54)
  {
    if (sub_22EA532D4(v55, v10, v56, 0))
      goto LABEL_106;
    if (*(_BYTE *)(*(_QWORD *)(v14[1] & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
    {
      v57 = sub_22EA882C0(a1);
      if (v57)
      {
        v40 = v57;
        ++v11;
        goto LABEL_74;
      }
    }
    v72 = sub_22EFBAFDC(v10);
    v58 = (*a1)[11] + 2128;
    v71 = *(_QWORD *)(v10 + 48);
    v59 = (_BYTE *)sub_22E3B8AAC(v58);
    v60 = *v59;
    v59[v60 + 1] = 9;
    *v59 = v60 + 1;
    *(_QWORD *)&v59[8 * v60 + 16] = v71;
    v74 = v72;
    v77 = 5762;
    v75 = 0;
    v76 = v58;
    v75 = (_OWORD *)sub_22E3B8AAC(v58);
    sub_22E78D4E8(v75, (uint64_t)v59);
    sub_22E8928F4((unint64_t)(a1 + 3), (unint64_t)&v74);
    if (v75 && v76)
    {
      sub_22E3BB10C(v76, (unint64_t)v75);
      v75 = 0;
    }
    sub_22E3BB10C(v58, (unint64_t)v59);
LABEL_114:
    v40 = 0;
    goto LABEL_115;
  }
  if (!sub_22EA4FA80(v55, v10, v56, 1, 1, (unint64_t)(a1 + 3)))
    goto LABEL_114;
  ++v12;
LABEL_106:
  ++v13;
  v40 = 2;
LABEL_115:
  v11 = v73;
LABEL_74:
  v41 = sub_22EA88C04(v5, v40);
  v5 = v41;
  while (1)
  {
    v10 = *(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v10)
      break;
    if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 49 < 3)
      goto LABEL_28;
  }
  if ((_DWORD)v41 != 2)
    goto LABEL_7;
  if (v13 != v12 && (*((_DWORD *)a1 + 4) || v13 != 1 || v11))
  {
    v5 = sub_22EFC3B90(v4);
    if (v5)
    {
LABEL_131:
      if (!sub_22E53B01C(v5))
      {
        v65 = *(_QWORD *)(*(_QWORD *)(v5 + 48) & 0xFFFFFFFFFFFFFFF0);
        v66 = sub_22E3E4B64(v65);
        if (v66 && (*(_DWORD *)(v66 + 20) - 2) <= 2 && (*(_DWORD *)(v66 + 16) & 0x780000) != 0x80000)
          v65 = *(_QWORD *)(*(_QWORD *)(v66 + 32) & 0xFFFFFFFFFFFFFFF0);
        v67 = *(_QWORD *)(*(_QWORD *)(v65 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v67)
          v68 = *(_DWORD *)(v67 + 16) == 11;
        else
          v68 = 0;
        if (v68
          && ((*(_DWORD *)(v67 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
          && ((1 << ((*(_DWORD *)(v67 + 16) >> 19) + 83)) & 0x6000000303) != 0)
        {
          v70 = (*a1)[11] + 2128;
          v74 = *(_DWORD *)(v5 + 24);
          v77 = 5737;
          v75 = 0;
          v76 = v70;
          sub_22E8928F4((unint64_t)(a1 + 3), (unint64_t)&v74);
          if (v75)
          {
            if (v76)
              sub_22E3BB10C(v76, (unint64_t)v75);
          }
        }
      }
      while (1)
      {
        v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v5)
          break;
        if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 < 3)
          goto LABEL_131;
      }
    }
  }
  else
  {
    v5 = 2;
  }
LABEL_124:
  if ((*(_BYTE *)((*a1)[9] + 131) & 1) == 0 && *((_DWORD *)a1 + 4))
  {
    v61 = *(_DWORD *)(v4 + 24);
    v62 = (*a1)[11] + 2128;
    v63 = (_BYTE *)sub_22E3B8AAC(v62);
    v64 = *v63;
    v63[v64 + 1] = 11;
    *v63 = v64 + 1;
    *(_QWORD *)&v63[8 * v64 + 16] = v4;
    v74 = v61;
    v77 = 5788;
    v76 = v62;
    v75 = (_OWORD *)sub_22E3B8AAC(v62);
    sub_22E78D4E8(v75, (uint64_t)v63);
    sub_22E8928F4((unint64_t)(a1 + 3), (unint64_t)&v74);
    if (v75 && v76)
    {
      sub_22E3BB10C(v76, (unint64_t)v75);
      v75 = 0;
    }
    sub_22E3BB10C(v62, (unint64_t)v63);
    goto LABEL_6;
  }
LABEL_7:
  --*((_DWORD *)a1 + 4);
  return v5;
}

uint64_t sub_22EA88C04(uint64_t result, int a2)
{
  int v2;
  int v3;
  BOOL v4;
  unsigned int v5;

  v2 = result;
  if ((_DWORD)result != a2)
  {
    result = 0;
    if (v2)
    {
      if (a2)
      {
        if (a2 >= v2)
          v3 = v2;
        else
          v3 = a2;
        if (v2 <= a2)
          v2 = a2;
        switch(v3)
        {
          case 1:
            result = (v2 & 0xFFFFFFFD) == 4;
            break;
          case 2:
            result = 2 * ((v2 - 5) < 2);
            break;
          case 3:
            v4 = (v2 & 0xFFFFFFFE) == 4 || v2 == 6;
            v5 = 3;
            goto LABEL_19;
          case 4:
            result = 4 * (v2 == 6);
            break;
          case 5:
            v4 = v2 == 6;
            v5 = 5;
LABEL_19:
            if (v4)
              result = v5;
            else
              result = 0;
            break;
          default:
            result = 0;
            break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EA88CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v4 = *(uint64_t **)v3;
  if (sub_22E54CE5C(*(uint64_t **)v3, (uint64_t *)(*(_QWORD *)v3 + 8 * *(unsigned int *)(v3 + 8))))
    return 0;
  do
  {
    v5 = *v4++;
    v1 = v5;
  }
  while (!sub_22EFA5594(v5));
  return v1;
}

void sub_22EA88D10(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_22EA88D68()
{
  uint64_t v0;
  uint64_t v1;

  if (!sub_22EA1DB60(*(_QWORD *)(v0 + 8))
    && !sub_22E4752A8(*(_QWORD *)(v0 + 8))
    && !sub_22EA1DBC0(*(_QWORD *)(v0 + 8))
    && (*(_BYTE *)(v1 + 18) & 0x78) == 0)
  {
    JUMPOUT(0x22EA88D3CLL);
  }
  return 0;
}

uint64_t sub_22EA89CA8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  llvm *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = result;
  v2 = *(unsigned int *)(result + 16);
  v3 = *(_DWORD *)(result + 8);
  v4 = 1 << (33 - __clz(v3 - 1));
  if (v4 <= 64)
    v4 = 64;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  if (v5 == (_DWORD)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((_DWORD)v2)
    {
      v6 = *(llvm **)result;
      v7 = 12 * v2;
      do
      {
        *(_QWORD *)v6 = -1;
        v6 = (llvm *)((char *)v6 + 12);
        v7 -= 12;
      }
      while (v7);
    }
  }
  else
  {
    result = llvm::deallocate_buffer(*(llvm **)result, (void *)(12 * v2));
    if (v5)
    {
      v8 = (4 * v5 / 3u + 1) | ((unint64_t)(4 * v5 / 3u + 1) >> 1);
      v9 = v8 | (v8 >> 2) | ((v8 | (v8 >> 2)) >> 4);
      LODWORD(v9) = (((v9 | (v9 >> 8)) >> 16) | v9 | (v9 >> 8)) + 1;
      *(_DWORD *)(v1 + 16) = v9;
      result = MEMORY[0x23489D23C](12 * v9, 4);
      *(_QWORD *)v1 = result;
      *(_QWORD *)(v1 + 8) = 0;
      v10 = *(unsigned int *)(v1 + 16);
      if ((_DWORD)v10)
      {
        v11 = 12 * v10;
        do
        {
          *(_QWORD *)result = -1;
          result += 12;
          v11 -= 12;
        }
        while (v11);
      }
    }
    else
    {
      *(_QWORD *)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
      *(_DWORD *)(v1 + 16) = 0;
    }
  }
  return result;
}

uint64_t sub_22EA89DB8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  llvm *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = result;
  v2 = *(unsigned int *)(result + 16);
  v3 = *(_DWORD *)(result + 8);
  v4 = 1 << (33 - __clz(v3 - 1));
  if (v4 <= 64)
    v4 = 64;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  if (v5 == (_DWORD)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((_DWORD)v2)
    {
      v6 = *(llvm **)result;
      v7 = 24 * v2;
      do
      {
        *(_DWORD *)v6 = -1;
        v6 = (llvm *)((char *)v6 + 24);
        v7 -= 24;
      }
      while (v7);
    }
  }
  else
  {
    result = llvm::deallocate_buffer(*(llvm **)result, (void *)(24 * v2));
    if (v5)
    {
      v8 = (4 * v5 / 3u + 1) | ((unint64_t)(4 * v5 / 3u + 1) >> 1);
      v9 = v8 | (v8 >> 2) | ((v8 | (v8 >> 2)) >> 4);
      LODWORD(v9) = (((v9 | (v9 >> 8)) >> 16) | v9 | (v9 >> 8)) + 1;
      *(_DWORD *)(v1 + 16) = v9;
      result = MEMORY[0x23489D23C](24 * v9, 8);
      *(_QWORD *)v1 = result;
      *(_QWORD *)(v1 + 8) = 0;
      v10 = *(unsigned int *)(v1 + 16);
      if ((_DWORD)v10)
      {
        v11 = 24 * v10;
        do
        {
          *(_DWORD *)result = -1;
          result += 24;
          v11 -= 24;
        }
        while (v11);
      }
    }
    else
    {
      *(_QWORD *)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
      *(_DWORD *)(v1 + 16) = 0;
    }
  }
  return result;
}

void sub_22EA89EC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7;
  char v8;
  unsigned int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  unsigned int v13;
  char v14;

  v7 = sub_22EA89F9C(*(_QWORD *)(*(_QWORD *)a2 + 88), a3);
  if (!HIDWORD(v7))
    goto LABEL_2;
  v9 = v7;
  if (!a4)
  {
    *(_QWORD *)a1 = v7;
LABEL_13:
    v8 = 1;
    goto LABEL_14;
  }
  sub_22F00905C(*(_QWORD *)(a4 + 40), *(_QWORD *)(*(_QWORD *)a2 + 88), 0, (uint64_t)&v12);
  if (v14)
  {
    if (v13 >= 0x41)
      v10 = v12;
    else
      v10 = (uint64_t *)&v12;
    v11 = *v10;
    if (v13 >= 0x41 && v12)
      MEMORY[0x2348A0E84]();
    *(_QWORD *)a1 = v9 | ((unint64_t)v11 << 32);
    goto LABEL_13;
  }
LABEL_2:
  v8 = 0;
  *(_BYTE *)a1 = 0;
LABEL_14:
  *(_BYTE *)(a1 + 8) = v8;
}

uint64_t sub_22EA89F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int **v3;
  uint64_t v4;
  unsigned int **v7;
  unsigned int v8;
  unsigned __int8 v9;

  sub_22F00905C(a2, a1, 0, (uint64_t)&v7);
  v2 = v9;
  if (v9)
  {
    if (v8 >= 0x41)
      v3 = v7;
    else
      v3 = (unsigned int **)&v7;
    v4 = *(unsigned int *)v3;
    if (v8 >= 0x41 && v7 != 0)
      MEMORY[0x2348A0E84]();
  }
  else
  {
    v4 = 0;
  }
  return v4 | (v2 << 32);
}

_QWORD *sub_22EA8A020(uint64_t a1, int a2)
{
  uint64_t v3;
  int *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(int **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = (v7 + 1);
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = MEMORY[0x23489D23C]((_QWORD *)v8, 12 * v8, 4);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F327248(a1, v4, &v4[3 * v3]);
    return (_QWORD *)llvm::deallocate_buffer((llvm *)v4, (void *)(12 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 12 * v10;
      do
      {
        *result = -1;
        result = (_QWORD *)((char *)result + 12);
        v11 -= 12;
      }
      while (v11);
    }
  }
  return result;
}

_DWORD *sub_22EA8A0EC(uint64_t a1, int a2)
{
  uint64_t v3;
  llvm *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  _DWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(llvm **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = (v7 + 1);
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = MEMORY[0x23489D23C]((_QWORD *)v8, 24 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F327500(a1, (uint64_t)v4, (uint64_t)v4 + 24 * v3);
    return (_DWORD *)llvm::deallocate_buffer(v4, (void *)(24 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 24 * v10;
      do
      {
        *result = -1;
        result += 6;
        v11 -= 24;
      }
      while (v11);
    }
  }
  return result;
}

void sub_22EA8A1B8(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v20;
  int v21;
  _OWORD *v22;
  unint64_t v23;
  int v24;

  v5 = sub_22EFC3B90(a2);
  if (v5)
  {
    v6 = v5;
LABEL_3:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 45
      && !sub_22E53B49C(v6))
    {
      v7 = a1[64];
      v8 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0));
      if (v8)
      {
        if ((*(_DWORD *)(v8 + 28) & 0x7Fu) - 35 >= 3)
          v9 = 0;
        else
          v9 = v8;
      }
      else
      {
        v9 = 0;
      }
      sub_22EA8A1B8(a1, v9, a3);
      if (a1[64] > v7)
      {
        v10 = *(_DWORD *)(v6 + 24);
        v11 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
        v12 = *(_QWORD *)(v6 + 48);
        v13 = (_BYTE *)sub_22E3B8AAC(v11);
        v14 = *v13;
        v13[v14 + 1] = 9;
        *v13 = v14 + 1;
        *(_QWORD *)&v13[8 * v14 + 16] = v12;
        v21 = v10;
        v24 = 6176;
        v22 = 0;
        v23 = v11;
        v22 = (_OWORD *)sub_22E3B8AAC(v11);
        sub_22E78D4E8(v22, (uint64_t)v13);
        sub_22E8928F4((unint64_t)(a1 + 62), (unint64_t)&v21);
        if (v22 && v23)
        {
          sub_22E3BB10C(v23, (unint64_t)v22);
          v22 = 0;
        }
        sub_22E3BB10C(v11, (unint64_t)v13);
      }
    }
    else if (!sub_22E54299C(v6) && !sub_22F311404(v6))
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0);
      v16 = sub_22E3E4B64(v15);
      if (v16 && (*(_DWORD *)(v16 + 20) - 2) <= 2 && (*(_DWORD *)(v16 + 16) & 0x780000) != 0x80000)
        v15 = *(_QWORD *)(*(_QWORD *)(v16 + 32) & 0xFFFFFFFFFFFFFFF0);
      v17 = *(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v17)
        v18 = *(_DWORD *)(v17 + 16) == 11;
      else
        v18 = 0;
      if (v18
        && ((*(_DWORD *)(v17 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
        && ((1 << ((*(_DWORD *)(v17 + 16) >> 19) + 83)) & 0x6000000303) != 0)
      {
        v20 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
        v21 = *(_DWORD *)(v6 + 24);
        v24 = 5737;
        v22 = 0;
        v23 = v20;
        sub_22E8928F4(a3 + 248, (unint64_t)&v21);
        if (v22)
        {
          if (v23)
            sub_22E3BB10C(v23, (unint64_t)v22);
        }
      }
    }
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
}

void sub_22EA8A448(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  _OWORD *v59;
  unint64_t v60;
  int v61;
  int v62[2];
  char v63;

  v5 = sub_22EFC3B90(a2);
  if (v5)
  {
    v6 = v5;
    v7 = (unint64_t)(a1 + 62);
    v8 = a3 + 56;
    v9 = a3 + 248;
    v10 = a3 + 80;
LABEL_3:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) != 45
      || sub_22E53B49C(v6))
    {
      v11 = sub_22E9AEF2C(v6);
      if (!v11)
        goto LABEL_36;
      v12 = v11;
      if (sub_22E54AA28(v6))
        goto LABEL_36;
      if (*(_WORD *)(v12 + 32) != 385)
      {
        v58 = *(unsigned __int16 *)(v12 + 32);
        if (sub_22E9AF314(v8, &v58)[1] >= 2u)
        {
          v51 = v10;
          v53 = v7;
          v23 = v8;
          v24 = v9;
          v25 = *(_DWORD *)(v6 + 24);
          v26 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
          v27 = *(_QWORD *)(v12 + 16);
          v28 = (_BYTE *)sub_22E3B8AAC(v26);
          sub_22E4D6448((uint64_t)(v28 + 336), v27, 1);
          if (!v28)
            v28 = (_BYTE *)sub_22E3B8AAC(v26);
          v29 = *v28;
          v28[v29 + 1] = 15;
          *v28 = v29 + 1;
          *(_QWORD *)&v28[8 * v29 + 16] = v12;
          v58 = v25;
          v61 = 5741;
          v59 = 0;
          v60 = v26;
          v59 = (_OWORD *)sub_22E3B8AAC(v26);
          sub_22E78D4E8(v59, (uint64_t)v28);
          sub_22E8928F4(v24, (unint64_t)&v58);
          if (v59 && v60)
          {
            sub_22E3BB10C(v60, (unint64_t)v59);
            v59 = 0;
          }
          sub_22E3BB10C(v26, (unint64_t)v28);
          v9 = v24;
          v8 = v23;
          v10 = v51;
          v7 = v53;
        }
        goto LABEL_36;
      }
      if ((*(_BYTE *)(v6 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v6);
        v14 = *(uint64_t **)v13;
        v15 = *(unsigned int *)(v13 + 8);
        v16 = *(uint64_t **)v13;
        if ((_DWORD)v15)
        {
          v17 = 8 * v15;
          v16 = *(uint64_t **)v13;
          while (*(_WORD *)(*v16 + 32) != 378)
          {
            ++v16;
            v17 -= 8;
            if (!v17)
              goto LABEL_13;
          }
        }
        v18 = v8;
        if (v16 != &v14[v15])
        {
          do
          {
            v36 = *v14++;
            v19 = v36;
          }
          while (*(_WORD *)(v36 + 32) != 378);
          goto LABEL_34;
        }
      }
      else
      {
LABEL_13:
        v18 = v8;
      }
      v19 = 0;
LABEL_34:
      sub_22EA89EC8((uint64_t)v62, a3, *(_QWORD *)(v12 + 40), v19);
      if (v63 && sub_22F32703C(v10, v62)[2] >= 2u)
      {
        v52 = v10;
        v55 = v7;
        v57 = v18;
        v37 = v9;
        if (v19)
        {
          v38 = *(_DWORD *)(v6 + 24);
          v39 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
          v40 = *(_QWORD *)(v12 + 16);
          v41 = (_BYTE *)sub_22E3B8AAC(v39);
          sub_22E4D6448((uint64_t)(v41 + 336), v40, 1);
          v42 = v62[0];
          if (!v41)
            v41 = (_BYTE *)sub_22E3B8AAC(v39);
          v9 = v37;
          v7 = v55;
          v43 = v41 + 1;
          v44 = *v41;
          v43[v44] = 3;
          v45 = v44 + 1;
          *v41 = v44 + 2;
          *(_QWORD *)&v41[8 * v44 + 16] = v42;
          v46 = v62[1];
          v43[v45] = 3;
          *(_QWORD *)&v41[8 * v45 + 16] = v46;
          v58 = v38;
          v61 = 5743;
        }
        else
        {
          v47 = *(_DWORD *)(v6 + 24);
          v39 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
          v48 = *(_QWORD *)(v12 + 16);
          v41 = (_BYTE *)sub_22E3B8AAC(v39);
          sub_22E4D6448((uint64_t)(v41 + 336), v48, 1);
          v49 = v62[0];
          if (!v41)
            v41 = (_BYTE *)sub_22E3B8AAC(v39);
          v9 = v37;
          v7 = v55;
          v50 = *v41;
          v41[v50 + 1] = 3;
          *v41 = v50 + 1;
          *(_QWORD *)&v41[8 * v50 + 16] = v49;
          v58 = v47;
          v61 = 5742;
        }
        v59 = 0;
        v60 = v39;
        v59 = (_OWORD *)sub_22E3B8AAC(v39);
        sub_22E78D4E8(v59, (uint64_t)v41);
        sub_22E8928F4(v9, (unint64_t)&v58);
        v18 = v57;
        if (v59)
        {
          if (v60)
          {
            sub_22E3BB10C(v60, (unint64_t)v59);
            v59 = 0;
          }
        }
        sub_22E3BB10C(v39, (unint64_t)v41);
        v10 = v52;
      }
      v8 = v18;
      goto LABEL_36;
    }
    v20 = a1[64];
    v21 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0));
    if (v21)
    {
      if ((*(_DWORD *)(v21 + 28) & 0x7Fu) - 35 >= 3)
        v22 = 0;
      else
        v22 = v21;
    }
    else
    {
      v22 = 0;
    }
    sub_22EA8A448(a1, v22, a3);
    if (a1[64] > v20)
    {
      v54 = v9;
      v56 = v8;
      v30 = v10;
      v31 = *(_DWORD *)(v6 + 24);
      v32 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
      v33 = *(_QWORD *)(v6 + 48);
      v34 = (_BYTE *)sub_22E3B8AAC(v32);
      v35 = *v34;
      v34[v35 + 1] = 9;
      *v34 = v35 + 1;
      *(_QWORD *)&v34[8 * v35 + 16] = v33;
      v58 = v31;
      v61 = 6176;
      v59 = 0;
      v60 = v32;
      v59 = (_OWORD *)sub_22E3B8AAC(v32);
      sub_22E78D4E8(v59, (uint64_t)v34);
      sub_22E8928F4(v7, (unint64_t)&v58);
      if (v59 && v60)
      {
        sub_22E3BB10C(v60, (unint64_t)v59);
        v59 = 0;
      }
      sub_22E3BB10C(v32, (unint64_t)v34);
      v10 = v30;
      v9 = v54;
      v8 = v56;
    }
LABEL_36:
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
}

unint64_t sub_22EA8A92C(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  _OWORD *v28;
  unint64_t v29;
  int v30;
  unint64_t v31;

  result = sub_22EFC3B90(a2);
  if (result)
  {
    v6 = result;
LABEL_3:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 45
      && !sub_22E53B49C(v6))
    {
      v16 = a1[64];
      v17 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0));
      if (v17)
      {
        if ((*(_DWORD *)(v17 + 28) & 0x7Fu) - 35 >= 3)
          v18 = 0;
        else
          v18 = v17;
      }
      else
      {
        v18 = 0;
      }
      result = sub_22EA8A92C(a1, v18, a3);
      if (a1[64] > v16)
      {
        v19 = *(_DWORD *)(v6 + 24);
        v20 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
        v21 = *(_QWORD *)(v6 + 48);
        v22 = (_BYTE *)sub_22E3B8AAC(v20);
        v23 = *v22;
        v22[v23 + 1] = 9;
        *v22 = v23 + 1;
        *(_QWORD *)&v22[8 * v23 + 16] = v21;
        v27 = v19;
        v30 = 6176;
        v28 = 0;
        v29 = v20;
        v28 = (_OWORD *)sub_22E3B8AAC(v20);
        sub_22E78D4E8(v28, (uint64_t)v22);
        sub_22E8928F4((unint64_t)(a1 + 62), (unint64_t)&v27);
        if (v28 && v29)
        {
          sub_22E3BB10C(v29, (unint64_t)v28);
          v28 = 0;
        }
        result = sub_22E3BB10C(v20, (unint64_t)v22);
      }
    }
    else
    {
      result = sub_22E54AA28(v6);
      if ((result & 1) == 0)
      {
        result = sub_22E9AEF2C(v6);
        if (result)
        {
          v7 = result;
          if (*(_WORD *)(result + 32) == 385)
          {
            result = sub_22EA89F9C(*(_QWORD *)(*(_QWORD *)a3 + 88), *(_QWORD *)(result + 40));
            v31 = result;
            if (HIDWORD(result))
            {
              v8 = result;
              result = (unint64_t)sub_22F3275B4(a3 + 104, (int *)&v31);
              if (*(_BYTE *)(result + 16))
              {
                v25 = *(_DWORD *)(v6 + 24);
                v24 = *(_QWORD *)(v7 + 16);
                v26 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
                v9 = (_BYTE *)sub_22E3B8AAC(v26);
                sub_22E4D6448((uint64_t)(v9 + 336), v24, 1);
                v10 = *(_QWORD *)(v6 + 48);
                if (!v9)
                {
                  v11 = *(_QWORD *)(v6 + 48);
                  v12 = sub_22E3B8AAC(v26);
                  v10 = v11;
                  v9 = (_BYTE *)v12;
                }
                v13 = v9 + 1;
                v14 = *v9;
                v13[v14] = 9;
                *v9 = v14 + 2;
                *(_QWORD *)&v9[8 * v14 + 16] = v10;
                v15 = (v14 + 1);
                v13[v15] = 3;
                *(_QWORD *)&v9[8 * v15 + 16] = v8;
                v27 = v25;
                v30 = 5736;
                v28 = 0;
                v29 = v26;
                v28 = (_OWORD *)sub_22E3B8AAC(v26);
                sub_22E78D4E8(v28, (uint64_t)v9);
                sub_22E8928F4(a3 + 248, (unint64_t)&v27);
                if (v28)
                {
                  if (v29)
                  {
                    sub_22E3BB10C(v29, (unint64_t)v28);
                    v28 = 0;
                  }
                }
                result = sub_22E3BB10C(v26, (unint64_t)v9);
              }
            }
          }
        }
      }
    }
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
  return result;
}

void sub_22EA8AC20(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _OWORD *v26;
  unint64_t v27;
  int v28;

  v5 = sub_22EFC3B90(a2);
  if (v5)
  {
    v6 = v5;
LABEL_3:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) != 45
      || sub_22E53B49C(v6))
    {
      if (sub_22E54AA28(v6) || (*(_BYTE *)(v6 + 29) & 1) == 0)
        goto LABEL_30;
      sub_22EFC8E88(v6);
      v8 = *(uint64_t **)v7;
      v9 = *(unsigned int *)(v7 + 8);
      v10 = *(uint64_t **)v7;
      if ((_DWORD)v9)
      {
        v11 = 8 * v9;
        v10 = *(uint64_t **)v7;
        while (*(_WORD *)(*v10 + 32) != 404)
        {
          ++v10;
          v11 -= 8;
          if (!v11)
            goto LABEL_30;
        }
      }
      if (v10 == &v8[v9])
        goto LABEL_30;
      do
      {
        v16 = *v8++;
        v15 = v16;
      }
      while (*(_WORD *)(v16 + 32) != 404);
      v17 = *(_DWORD *)(v6 + 24);
      v18 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
      v19 = *(_QWORD *)(v15 + 16);
      v20 = (_BYTE *)sub_22E3B8AAC(v18);
      sub_22E4D6448((uint64_t)(v20 + 336), v19, 1);
      if (!v20)
        v20 = (_BYTE *)sub_22E3B8AAC(v18);
      v21 = *v20;
      v20[v21 + 1] = 15;
      *v20 = v21 + 1;
      *(_QWORD *)&v20[8 * v21 + 16] = v15;
      v25 = v17;
      v28 = 5738;
      v26 = 0;
      v27 = v18;
      v26 = (_OWORD *)sub_22E3B8AAC(v18);
      sub_22E78D4E8(v26, (uint64_t)v20);
      sub_22E8928F4(a3 + 248, (unint64_t)&v25);
      if (v26)
      {
        if (v27)
        {
          sub_22E3BB10C(v27, (unint64_t)v26);
          v26 = 0;
        }
      }
LABEL_29:
      sub_22E3BB10C(v18, (unint64_t)v20);
      goto LABEL_30;
    }
    v12 = a1[64];
    v13 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0));
    if (v13)
    {
      if ((*(_DWORD *)(v13 + 28) & 0x7Fu) - 35 >= 3)
        v14 = 0;
      else
        v14 = v13;
    }
    else
    {
      v14 = 0;
    }
    sub_22EA8AC20(a1, v14, a3);
    if (a1[64] > v12)
    {
      v22 = *(_DWORD *)(v6 + 24);
      v18 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
      v23 = *(_QWORD *)(v6 + 48);
      v20 = (_BYTE *)sub_22E3B8AAC(v18);
      v24 = *v20;
      v20[v24 + 1] = 9;
      *v20 = v24 + 1;
      *(_QWORD *)&v20[8 * v24 + 16] = v23;
      v25 = v22;
      v28 = 6176;
      v26 = 0;
      v27 = v18;
      v26 = (_OWORD *)sub_22E3B8AAC(v18);
      sub_22E78D4E8(v26, (uint64_t)v20);
      sub_22E8928F4((unint64_t)(a1 + 62), (unint64_t)&v25);
      if (v26 && v27)
      {
        sub_22E3BB10C(v27, (unint64_t)v26);
        v26 = 0;
      }
      goto LABEL_29;
    }
LABEL_30:
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
}

unint64_t sub_22EA8AEE0(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result;
  unint64_t v8;
  _DWORD *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  BOOL v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _OWORD *v35;
  unint64_t v36;
  int v37;
  unint64_t v38;

  result = sub_22EFC3B90(a2);
  if (result)
  {
    v8 = result;
    v9 = a1 + 62;
LABEL_3:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) != 45
      || sub_22E53B49C(v8))
    {
      result = sub_22E54AA28(v8);
      if ((result & 1) != 0)
        goto LABEL_50;
      v10 = *(_DWORD *)(a3 + 136);
      if (!v10)
        goto LABEL_50;
      v11 = *(_QWORD *)(a3 + 128);
      v12 = v11 + 24 * v10;
      while (1)
      {
        if ((*(_BYTE *)(v8 + 29) & 1) == 0)
          goto LABEL_21;
        sub_22EFC8E88(v8);
        v14 = *(uint64_t **)v13;
        v15 = *(unsigned int *)(v13 + 8);
        v16 = *(uint64_t **)v13;
        if ((_DWORD)v15)
        {
          v17 = 8 * v15;
          v16 = *(uint64_t **)v13;
          while (*(_WORD *)(*v16 + 32) != 385)
          {
            ++v16;
            v17 -= 8;
            if (!v17)
              goto LABEL_21;
          }
        }
        if (v16 == &v14[v15])
        {
LABEL_21:
          v20 = *(_QWORD *)(*(_QWORD *)(v8 + 48) & 0xFFFFFFFFFFFFFFF0);
          result = sub_22E3E4B64(v20);
          if (result
            && (*(_DWORD *)(result + 20) - 2) <= 2
            && (*(_DWORD *)(result + 16) & 0x780000) != 0x80000)
          {
            v20 = *(_QWORD *)(*(_QWORD *)(result + 32) & 0xFFFFFFFFFFFFFFF0);
          }
          v21 = *(_QWORD *)(*(_QWORD *)(v20 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v21)
            v22 = *(_DWORD *)(v21 + 16) == 11;
          else
            v22 = 0;
          if (!v22)
            goto LABEL_38;
          v23 = ((*(_DWORD *)(v21 + 16) >> 19) & 0x1FFu) - 173 > 0x26
             || ((1 << ((*(_DWORD *)(v21 + 16) >> 19) + 83)) & 0x6000000303) == 0;
          if (v23 || !*(_BYTE *)(v11 + 8) && (!*(_BYTE *)(v11 + 16) || *(_DWORD *)(v11 + 12)))
            goto LABEL_38;
        }
        else
        {
          do
          {
            v19 = *v14++;
            v18 = v19;
          }
          while (*(_WORD *)(v19 + 32) != 385);
          if (!*(_BYTE *)(v11 + 8))
          {
            result = sub_22EA89F9C(*(_QWORD *)(*(_QWORD *)a3 + 88), *(_QWORD *)(v18 + 40));
            if (!HIDWORD(result) || !*(_BYTE *)(v11 + 16) || *(_DWORD *)(v11 + 12) > result)
              goto LABEL_38;
          }
        }
        v38 = v8;
        sub_22F25884C((uint64_t)&v34, a4, (uint64_t *)&v38);
        result = sub_22F25884C((uint64_t)&v34, a4, (uint64_t *)v11);
LABEL_38:
        v11 += 24;
        if (v11 == v12)
          goto LABEL_50;
      }
    }
    v24 = a1[64];
    v25 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v8 + 48) & 0xFFFFFFFFFFFFFFF0));
    if (v25)
    {
      if ((*(_DWORD *)(v25 + 28) & 0x7Fu) - 35 >= 3)
        v26 = 0;
      else
        v26 = v25;
    }
    else
    {
      v26 = 0;
    }
    result = sub_22EA8AEE0(a1, v26, a3, a4);
    if (a1[64] > v24)
    {
      v33 = a4;
      v27 = *(_DWORD *)(v8 + 24);
      v28 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
      v29 = (unint64_t)v9;
      v30 = *(_QWORD *)(v8 + 48);
      v31 = (_BYTE *)sub_22E3B8AAC(v28);
      v32 = *v31;
      v31[v32 + 1] = 9;
      *v31 = v32 + 1;
      *(_QWORD *)&v31[8 * v32 + 16] = v30;
      v9 = (_DWORD *)v29;
      v34 = v27;
      v37 = 6176;
      v35 = 0;
      v36 = v28;
      v35 = (_OWORD *)sub_22E3B8AAC(v28);
      sub_22E78D4E8(v35, (uint64_t)v31);
      sub_22E8928F4(v29, (unint64_t)&v34);
      if (v35 && v36)
      {
        sub_22E3BB10C(v36, (unint64_t)v35);
        v35 = 0;
      }
      result = sub_22E3BB10C(v28, (unint64_t)v31);
      a4 = v33;
    }
LABEL_50:
    while (1)
    {
      v8 = *(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v8)
        break;
      if ((*(_DWORD *)(v8 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
  return result;
}

void sub_22EA8B21C(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  _OWORD *v43;
  unint64_t v44;
  int v45;

  v7 = sub_22EFC3B90(a2);
  if (v7)
  {
    v8 = v7;
LABEL_3:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 45
      && !sub_22E53B49C(v8))
    {
      v9 = a1[64];
      v10 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v8 + 48) & 0xFFFFFFFFFFFFFFF0));
      if (v10)
      {
        if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 35 >= 3)
          v11 = 0;
        else
          v11 = v10;
      }
      else
      {
        v11 = 0;
      }
      sub_22EA8B21C(a1, v11, a3, a4);
      if (a1[64] <= v9)
        goto LABEL_16;
      v12 = *(_DWORD *)(v8 + 24);
      v13 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
      v14 = *(_QWORD *)(v8 + 48);
      v15 = (_BYTE *)sub_22E3B8AAC(v13);
      v16 = *v15;
      v15[v16 + 1] = 9;
      *v15 = v16 + 1;
      *(_QWORD *)&v15[8 * v16 + 16] = v14;
      LODWORD(v42) = v12;
      v45 = 6176;
      v43 = 0;
      v44 = v13;
      v43 = (_OWORD *)sub_22E3B8AAC(v13);
      sub_22E78D4E8(v43, (uint64_t)v15);
      sub_22E8928F4((unint64_t)(a1 + 62), (unint64_t)&v42);
      if (v43)
      {
        if (v44)
        {
          sub_22E3BB10C(v44, (unint64_t)v43);
          v43 = 0;
        }
      }
      goto LABEL_14;
    }
    if (!sub_22F2588D8(*(_QWORD *)a3, *(_DWORD *)(a3 + 16), v8, &v42))
      goto LABEL_16;
    if ((*(_BYTE *)(v8 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v8);
      v19 = *(uint64_t **)v18;
      v20 = *(unsigned int *)(v18 + 8);
      v21 = *(uint64_t **)v18;
      if ((_DWORD)v20)
      {
        v22 = 8 * v20;
        v21 = *(uint64_t **)v18;
        while (*(_WORD *)(*v21 + 32) != 385)
        {
          ++v21;
          v22 -= 8;
          if (!v22)
            goto LABEL_29;
        }
      }
      if (v21 != &v19[v20])
      {
        do
        {
          v24 = *v19++;
          v23 = v24;
        }
        while (*(_WORD *)(v24 + 32) != 385);
LABEL_56:
        v41 = *(_DWORD *)(v8 + 24);
        v38 = *(_QWORD *)(*(_QWORD *)a4 + 88) + 2128;
        v39 = *(_QWORD *)(v23 + 16);
        v15 = (_BYTE *)sub_22E3B8AAC(v38);
        sub_22E4D6448((uint64_t)(v15 + 336), v39, 1);
        if (!v15)
          v15 = (_BYTE *)sub_22E3B8AAC(v38);
        v40 = *v15;
        v15[v40 + 1] = 15;
        *v15 = v40 + 1;
        *(_QWORD *)&v15[8 * v40 + 16] = v23;
        LODWORD(v42) = v41;
        v45 = 5738;
        v43 = 0;
        v44 = v38;
        v43 = (_OWORD *)sub_22E3B8AAC(v38);
        sub_22E78D4E8(v43, (uint64_t)v15);
        sub_22E8928F4(a4 + 248, (unint64_t)&v42);
        if (v43 && v44)
        {
          sub_22E3BB10C(v44, (unint64_t)v43);
          v43 = 0;
        }
        v17 = v38;
        goto LABEL_15;
      }
    }
LABEL_29:
    v25 = *(_QWORD *)(*(_QWORD *)(v8 + 48) & 0xFFFFFFFFFFFFFFF0);
    v26 = sub_22E3E4B64(v25);
    if (v26 && (*(_DWORD *)(v26 + 20) - 2) <= 2 && (*(_DWORD *)(v26 + 16) & 0x780000) != 0x80000)
      v25 = *(_QWORD *)(*(_QWORD *)(v26 + 32) & 0xFFFFFFFFFFFFFFF0);
    v27 = *(_QWORD *)(*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v27)
      v28 = *(_DWORD *)(v27 + 16) == 11;
    else
      v28 = 0;
    if (!v28
      || (((*(_DWORD *)(v27 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
        ? (v34 = ((1 << ((*(_DWORD *)(v27 + 16) >> 19) + 83)) & 0x6000000303) == 0)
        : (v34 = 1),
          v34))
    {
      if ((*(_BYTE *)(v8 + 29) & 1) == 0)
        goto LABEL_16;
      sub_22EFC8E88(v8);
      v30 = *(uint64_t **)v29;
      v31 = *(unsigned int *)(v29 + 8);
      v32 = *(uint64_t **)v29;
      if ((_DWORD)v31)
      {
        v33 = 8 * v31;
        v32 = *(uint64_t **)v29;
        while (*(_WORD *)(*v32 + 32) != 403)
        {
          ++v32;
          v33 -= 8;
          if (!v33)
            goto LABEL_16;
        }
      }
      if (v32 == &v30[v31])
        goto LABEL_16;
      do
      {
        v37 = *v30++;
        v23 = v37;
      }
      while (*(_WORD *)(v37 + 32) != 403);
      goto LABEL_56;
    }
    v35 = *(_DWORD *)(v8 + 24);
    v13 = *(_QWORD *)(*(_QWORD *)a4 + 88) + 2128;
    v36 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v8 + 16))(v8);
    v15 = (_BYTE *)sub_22E3B8AAC(v13);
    sub_22E4D6448((uint64_t)(v15 + 336), v36, 1);
    LODWORD(v42) = v35;
    v45 = 5739;
    v43 = 0;
    v44 = v13;
    if (v15)
    {
      v43 = (_OWORD *)sub_22E3B8AAC(v13);
      sub_22E78D4E8(v43, (uint64_t)v15);
    }
    sub_22E8928F4(a4 + 248, (unint64_t)&v42);
    if (v43 && v44)
    {
      sub_22E3BB10C(v44, (unint64_t)v43);
      v43 = 0;
    }
    if (v15)
    {
LABEL_14:
      v17 = v13;
LABEL_15:
      sub_22E3BB10C(v17, (unint64_t)v15);
    }
LABEL_16:
    while (1)
    {
      v8 = *(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v8)
        break;
      if ((*(_DWORD *)(v8 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
}

void sub_22EA8B674(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  _DWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t **v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  uint64_t v32;
  unsigned __int8 *v33;
  unint64_t v34;
  int v35;
  int v36;
  _OWORD *v37;
  unint64_t v38;
  int v39;
  void *v40[2];
  unsigned __int8 v41;

  v5 = sub_22EFC3B90(a2);
  if (v5)
  {
    v6 = v5;
    v7 = a1 + 62;
LABEL_3:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 45
      && !sub_22E53B49C(v6))
    {
      v20 = a1[64];
      v21 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0));
      if (v21)
      {
        if ((*(_DWORD *)(v21 + 28) & 0x7Fu) - 35 >= 3)
          v22 = 0;
        else
          v22 = v21;
      }
      else
      {
        v22 = 0;
      }
      sub_22EA8B674(a1, v22, a3);
      if (a1[64] > v20)
      {
        v23 = *(_DWORD *)(v6 + 24);
        v24 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
        v25 = (unint64_t)v7;
        v26 = *(_QWORD *)(v6 + 48);
        v27 = (_BYTE *)sub_22E3B8AAC(v24);
        v28 = *v27;
        v27[v28 + 1] = 9;
        *v27 = v28 + 1;
        *(_QWORD *)&v27[8 * v28 + 16] = v26;
        v7 = (_DWORD *)v25;
        v36 = v23;
        v39 = 6176;
        v37 = 0;
        v38 = v24;
        v37 = (_OWORD *)sub_22E3B8AAC(v24);
        sub_22E78D4E8(v37, (uint64_t)v27);
        sub_22E8928F4(v25, (unint64_t)&v36);
        if (v37 && v38)
        {
          sub_22E3BB10C(v38, (unint64_t)v37);
          v37 = 0;
        }
        sub_22E3BB10C(v24, (unint64_t)v27);
      }
    }
    else if (!sub_22E54AA28(v6) && !sub_22E54299C(v6))
    {
      sub_22EA86170((uint64_t)v40, v6);
      if (*(_DWORD *)sub_22EA86100(a3 + 224, (uint64_t)v40) >= 2u)
      {
        v8 = *(_DWORD *)(v6 + 24);
        v9 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v6 + 16))(v6);
        v10 = v41;
        if (v41)
        {
          sub_22EFC8E88(v6);
          v12 = *v11;
          v13 = *((unsigned int *)v11 + 2);
          if ((_DWORD)v13 && *(_WORD *)(*v12 + 32) != 467)
          {
            v14 = 8 * v13 - 8;
            v15 = *v11;
            do
            {
              v16 = v15[1];
              ++v15;
              v14 -= 8;
            }
            while (*(_WORD *)(v16 + 32) != 467);
          }
          do
          {
            v18 = *v12++;
            v17 = v18;
          }
          while (*(_WORD *)(v18 + 32) != 467);
          v19 = *(_QWORD *)(v17 + 16);
          v8 = v19;
        }
        else
        {
          v19 = v9;
        }
        v29 = *(_QWORD *)(*(_QWORD *)a3 + 88) + 2128;
        v33 = 0;
        v34 = v29;
        v35 = 5746;
        sub_22E3B89A8(&v33, v40[0], (size_t)v40[1]);
        v30 = v33;
        if (!v33)
        {
          v30 = (unsigned __int8 *)sub_22E3B8AAC(v34);
          v33 = v30;
        }
        v30[*v30 + 1] = 3;
        v31 = v33;
        v32 = *v33;
        *v33 = v32 + 1;
        *(_QWORD *)&v31[8 * v32 + 16] = v10;
        sub_22E4D6448((uint64_t)(v31 + 336), v19, 1);
        v36 = v8;
        v39 = v35;
        v37 = 0;
        v38 = v34;
        if (v33)
        {
          v37 = (_OWORD *)sub_22E3B8AAC(v34);
          sub_22E78D4E8(v37, (uint64_t)v33);
        }
        sub_22E8928F4(a3 + 248, (unint64_t)&v36);
        if (v37 && v38)
        {
          sub_22E3BB10C(v38, (unint64_t)v37);
          v37 = 0;
        }
        if (v33)
        {
          if (v34)
            sub_22E3BB10C(v34, (unint64_t)v33);
        }
      }
    }
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
}

uint64_t sub_22EA8B9B8(_DWORD *a1, uint64_t a2, _QWORD **a3)
{
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  _OWORD *v18;
  unint64_t v19;
  int v20;
  uint64_t v21;

  result = sub_22EFC3B90(a2);
  if (result)
  {
    v6 = result;
LABEL_3:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 45
      && !sub_22E53B49C(v6))
    {
      v8 = a1[64];
      v9 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v6 + 48) & 0xFFFFFFFFFFFFFFF0));
      if (v9)
      {
        if ((*(_DWORD *)(v9 + 28) & 0x7Fu) - 35 >= 3)
          v10 = 0;
        else
          v10 = v9;
      }
      else
      {
        v10 = 0;
      }
      result = sub_22EA8B9B8(a1, v10, a3);
      if (a1[64] > v8)
      {
        v11 = *(_DWORD *)(v6 + 24);
        v12 = *(_QWORD *)(*(_QWORD *)a1 + 88) + 2128;
        v13 = *(_QWORD *)(v6 + 48);
        v14 = (_BYTE *)sub_22E3B8AAC(v12);
        v15 = *v14;
        v14[v15 + 1] = 9;
        *v14 = v15 + 1;
        *(_QWORD *)&v14[8 * v15 + 16] = v13;
        v17 = v11;
        v20 = 6176;
        v18 = 0;
        v19 = v12;
        v18 = (_OWORD *)sub_22E3B8AAC(v12);
        sub_22E78D4E8(v18, (uint64_t)v14);
        sub_22E8928F4((unint64_t)(a1 + 62), (unint64_t)&v17);
        if (v18 && v19)
        {
          sub_22E3BB10C(v19, (unint64_t)v18);
          v18 = 0;
        }
        result = sub_22E3BB10C(v12, (unint64_t)v14);
      }
    }
    else
    {
      v21 = 0;
      result = sub_22E9AEF2C(v6);
      v21 = result;
      if (result)
      {
        result = sub_22E54AA28(v6);
        if ((result & 1) == 0)
        {
          v17 = *(unsigned __int16 *)(v21 + 32);
          result = (uint64_t)sub_22E9AF314((uint64_t)(a3 + 7), &v17);
          if (*(_DWORD *)(result + 4) >= 2u)
          {
            sub_22E8FCA40(*a3, *(_DWORD *)(v6 + 24), 0x166Du, 0, (uint64_t)&v17);
            v16 = *(_QWORD *)(v21 + 16);
            v7 = sub_22E8906A0((uint64_t)&v17, &v16);
            sub_22E8FB3C4(v7, &v21);
            result = (uint64_t)sub_22E903BEC(&v17);
          }
        }
      }
    }
    while (1)
    {
      v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v6)
        break;
      if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_22EA8BBD4(_QWORD **a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  char v4;
  uint64_t result;

  v2 = *a2;
  if (a2 && (v2 & 0xFE) == 0x70)
  {
    v3 = *(_DWORD *)a2;
    switch((*(_DWORD *)a2 >> 18) & 0x3F)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
      case 0x15:
      case 0x16:
      case 0x17:
      case 0x18:
      case 0x19:
      case 0x1A:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
      case 0x20:
        v4 = sub_22EA8BE6C(a1, (uint64_t)a2);
        return v4 & 1;
      default:
        goto LABEL_7;
    }
  }
  if (a2 && v2 == 233)
  {
    v3 = *(_DWORD *)a2;
    switch((*(_DWORD *)a2 >> 18) & 0x1F)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
        v4 = sub_22EA8BEEC(a1, (uint64_t)a2);
        return v4 & 1;
      default:
LABEL_7:
        v2 = v3;
        break;
    }
  }
  __asm { BR              X9 }
  return result;
}

uint64_t sub_22EA8BE6C(_QWORD **a1, uint64_t a2)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  int v8;

  v4 = (*(_DWORD *)a2 >> 18) & 0x3F;
  v5 = v4 > 0x14;
  v6 = (1 << v4) & 0x1FFDFC;
  if (v5 || v6 == 0)
  {
    sub_22EA8BF28(a1, a2);
    return 0;
  }
  else
  {
    v8 = sub_22EA8BBD4(a1, *(_QWORD *)(a2 + 16));
    return v8 & sub_22EA8BBD4(a1, *(_QWORD *)(a2 + 24));
  }
}

uint64_t sub_22EA8BEEC(_QWORD **a1, uint64_t a2)
{
  if (((*(_DWORD *)a2 >> 18) & 0x1Eu) - 4 < 6)
    return sub_22EA8BBD4(a1, *(_QWORD *)(a2 + 16));
  sub_22EA8BF28(a1, a2);
  return 0;
}

unsigned int *sub_22EA8BF28(_QWORD **a1, uint64_t a2)
{
  int *v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v8;
  unsigned int v9[24];

  v3 = (int *)(a1 + 1);
  v4 = *a1;
  sub_22EFF605C(a2);
  sub_22E8FCA40(v4, v5, 0xED4u, 0, (uint64_t)v9);
  sub_22E8900C4((uint64_t)v9, v3);
  sub_22F0D4E74(a2);
  v8 = v6;
  sub_22E8906A0((uint64_t)v9, &v8);
  return sub_22E903BEC(v9);
}

uint64_t sub_22EA8BFA8(_QWORD **a1, uint64_t a2)
{
  unsigned int v2;
  BOOL v3;
  uint64_t v4;
  BOOL v5;

  v2 = (*(_DWORD *)a2 >> 18) & 0x7F;
  v3 = v2 >= 0x2A;
  v5 = v2 == 42;
  v4 = (1 << v2) & 0x781CBC07831;
  v5 = !v5 && v3 || v4 == 0;
  if (!v5)
    return sub_22EA8BBD4(a1, *(_QWORD *)(a2 + 16));
  sub_22EA8BF28(a1, a2);
  return 0;
}

BOOL sub_22EA8BFF8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _BOOL8 v6;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v19[24];
  uint64_t v20;
  uint64_t v21;
  unsigned int v22[24];
  uint64_t v23;

  v6 = sub_22EA53274(a2);
  if (v6)
  {
    sub_22EFC8E88(a2);
    v8 = *v7;
    v9 = *((unsigned int *)v7 + 2);
    if ((_DWORD)v9 && *(_WORD *)(*v8 + 32) != 210)
    {
      v10 = 8 * v9 - 8;
      v11 = *v7;
      do
      {
        v12 = v11[1];
        ++v11;
        v10 -= 8;
      }
      while (*(_WORD *)(v12 + 32) != 210);
    }
    do
    {
      v14 = *v8++;
      v13 = v14;
    }
    while (*(_WORD *)(v14 + 32) != 210);
    v23 = v13;
    if (*(_WORD *)(a3 + 32) != 0xD2)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v22);
      v21 = *(_QWORD *)(a3 + 16);
      v15 = sub_22E8906A0((uint64_t)v22, &v21);
      v20 = a3;
      v16 = sub_22E8FB3C4(v15, &v20);
      sub_22E9AEE38(v16, &v23);
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xED2u, 0, (uint64_t)v22);
      v21 = *(_QWORD *)(a3 + 16);
      v17 = sub_22E8906A0((uint64_t)v22, &v21);
      v20 = a3;
      sub_22E8FB3C4(v17, &v20);
    }
    sub_22E903BEC(v22);
    sub_22E8FCA40(a1, *(_DWORD *)(v13 + 16), 0x1574u, 0, (uint64_t)v19);
    sub_22E903BEC(v19);
  }
  return v6;
}

void sub_22EA8C15C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

void sub_22EA8C1BC()
{
  JUMPOUT(0x22EA8C194);
}

uint64_t sub_22EA8C1C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_22F114198(*(_QWORD *)(v0 + 24));
  if ((*(_BYTE *)(v1 + 28) & 0x80) == 0)
  {
    sub_22E496830(v1);
    JUMPOUT(0x22EA8C194);
  }
  return 0;
}

void sub_22EA8C61C()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA8C630(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24FAB7C78;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_22EA8C668(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAB7C78;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unsigned int *sub_22EA8C688(uint64_t a1)
{
  unsigned int v2[24];

  sub_22E8FCA40(**(_QWORD ***)(a1 + 8), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 24), 0x167Fu, 0, (uint64_t)v2);
  return sub_22E903BEC(v2);
}

void sub_22EA8C6C8()
{
  JUMPOUT(0x2348A0E9CLL);
}

__n128 sub_22EA8C6DC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_24FAB7CC0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_22EA8C714(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_24FAB7CC0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

unsigned int *sub_22EA8C734(uint64_t a1)
{
  _QWORD *v2;
  int v3;
  uint64_t v5;
  unsigned int v6[24];

  v2 = **(_QWORD ***)(a1 + 8);
  v3 = sub_22EFBAFDC(*(_QWORD *)(a1 + 16));
  sub_22E8FCA40(v2, v3, 0x1680u, 0, (uint64_t)v6);
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 48);
  sub_22E8901B8((uint64_t)v6, &v5);
  return sub_22E903BEC(v6);
}

void sub_22EA8C79C(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  char v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  unsigned int v27[25];
  unsigned int v28;
  void *__base;
  size_t __nel;
  _QWORD v31[6];

  v31[4] = *MEMORY[0x24BDAC8D0];
  __base = v31;
  __nel = 0x800000000;
  if (*(_WORD *)(a3 + 48))
  {
    v6 = 0;
    v26 = a2 + 18;
    while (1)
    {
      v7 = *(_QWORD *)(a3 + 8 * v6 + 80) & 0xFFFFFFFFFFFFFFFCLL;
      v28 = 0;
      if (!sub_22EA8D310((_QWORD *)a1, a2, a3, ++v6, v7, &v28, 0))
        break;
      v8 = v28;
      v9 = (v28 & 0x3FFFFFFF) + ((int)(2 * v28) >> 31) - 1;
      if (v9 >= sub_22EA8CD28(a2))
        goto LABEL_15;
      v10 = sub_22EA47EEC((uint64_t)a2, v9);
      sub_22F0D4E74(v7);
      v12 = v11;
      if (a2 && (v13 = a2 + 30, (a2[7] & 0x7Eu) - 58 > 0xFFFFFFF9)
        || (v14 = a2[7] & 0x7F, a2) && (v13 = a2 + 24, v14 == 24)
        || (v15 = 0, a2) && (v13 = v26, v14 == 1))
      {
        v16 = *(_QWORD *)(*v13 + 8 * v9);
        if (v16)
          v15 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
        else
          v15 = 0;
      }
      if (sub_22EAA0468((_QWORD *)a1, v10, a3, v12, v15, 0))
      {
LABEL_15:
        v17 = __nel;
        if (__nel >= (unint64_t)HIDWORD(__nel))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v17 = __nel;
        }
        *((_DWORD *)__base + v17) = v8;
        LODWORD(__nel) = __nel + 1;
      }
      if (v6 >= *(unsigned __int16 *)(a3 + 48))
      {
        v18 = __nel;
        if ((_DWORD)__nel)
          goto LABEL_36;
        goto LABEL_24;
      }
    }
  }
  else
  {
LABEL_24:
    if ((*(_DWORD *)(a3 + 16) & 0x80000000) == 0 && *(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956))
    {
      v19 = sub_22EA8D628((uint64_t)a2);
      v20 = sub_22EA8CD28(a2);
      if (!v20 || (v19 & 1) != 0)
      {
        if ((v19 & 1) == 0)
        {
LABEL_34:
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0x187Eu, 0, (uint64_t)v27);
          sub_22E903BEC(v27);
        }
      }
      else
      {
        v21 = v20;
        v22 = 0;
        while (1)
        {
          v23 = sub_22EA47EEC((uint64_t)a2, v22);
          if ((*(_BYTE *)(*(_QWORD *)(v23 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0
            || (sub_22EA47450(v23, v23, 0) & 1) != 0)
          {
            break;
          }
          if (v21 == ++v22)
            goto LABEL_34;
        }
      }
    }
    v18 = __nel;
LABEL_36:
    v24 = __base;
    if (v18 >= 2)
      qsort(__base, v18, 4uLL, (int (__cdecl *)(const void *, const void *))sub_22F327624);
    v25 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 48, 3);
    sub_22F395748(v25, *(_QWORD *)(a1 + 88), (_OWORD *)a3, v24, v18);
    sub_22EFCA95C((uint64_t)a2, v25);
  }
  if (__base != v31)
    free(__base);
}

uint64_t sub_22EA8CAB0(unsigned __int16 a1)
{
  char v1;
  uint64_t result;

  v1 = a1;
  if (a1 - 267 > 0x29)
    goto LABEL_6;
  if (((1 << (a1 - 11)) & 0x3F000000000) != 0)
    return 2;
  if (((1 << (a1 - 11)) & 0x3B) != 0)
    return 0;
LABEL_6:
  result = 1;
  if (((1 << v1) & 0x6400000000000) == 0)
    __break(1u);
  return result;
}

uint64_t sub_22EA8CB18(uint64_t a1)
{
  unint64_t v1;

  if (a1
    && (*(_DWORD *)(a1 + 28) & 0x7F) == 0x40
    && (v1 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFFFF0)), v1 >= 0x10))
  {
    return sub_22EA4C234(v1);
  }
  else
  {
    return 0;
  }
}

void sub_22EA8CB60(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v6;
  BOOL v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16[24];
  int v17;
  int v18;
  int *v19;
  uint64_t v20;
  unsigned int v21[24];

  v6 = *(_DWORD *)(a2 + 28) & 0x7F;
  if (v6 - 39 <= 2)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1875u, 0, (uint64_t)v21);
    sub_22E8D2984((uint64_t)v21, (uint64_t *)a3);
LABEL_3:
    sub_22E903BEC(v21);
    return;
  }
  if (a4)
  {
    v9 = v6 > 0x25;
    v10 = (1 << v6) & 0x3E00410000;
    if (v9 || v10 == 0)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB2Fu, 0, (uint64_t)v21);
      v12 = sub_22E8D2984((uint64_t)v21, (uint64_t *)a3);
      LODWORD(v19) = 11;
      sub_22E8900C4(v12, (int *)&v19);
      goto LABEL_3;
    }
  }
  v19 = 0;
  v20 = 0;
  v18 = 0;
  if (sub_22EA472B0((uint64_t)a1, a3, 0, (uint64_t *)&v19, &v18))
  {
    v17 = 0;
    if ((sub_22EF97694(v19, v20, &v17) & 1) == 0)
    {
      sub_22E8FCA40(a1, v18, 0x188Cu, 0, (uint64_t)v21);
      v14 = sub_22E8D2984((uint64_t)v21, (uint64_t *)a3);
      sub_22F2F2210(v14, (uint64_t)&v19);
      goto LABEL_3;
    }
    v13 = v17;
    if (v17 == 2)
    {
      if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1[11] + 15088) + 400))(*(_QWORD *)(a1[11] + 15088)) & 1) != 0)
      {
        v13 = 2;
      }
      else
      {
        sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1885u, 0, (uint64_t)v16);
        sub_22E903BEC(v16);
        v13 = 0;
      }
    }
    if (a4)
      sub_22F31F418(a1, a2, a3, v13);
    else
      sub_22F31F344(a1, a2, a3, v13);
    if (v15)
      sub_22EFCA95C(a2, v15);
  }
}

uint64_t sub_22EA8CD28(_DWORD *a1)
{
  uint64_t v2;

  v2 = sub_22EFCB008((uint64_t)a1, 1);
  if (v2)
    return (unsigned __int16)(*(_QWORD *)(v2 + 16) >> 38);
  if (a1 && (a1[7] & 0x7F) == 1)
    return a1[20];
  return a1[26];
}

uint64_t sub_22EA8CD7C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int v15[24];

  v6 = *(_DWORD *)(a2 + 28) & 0x7F;
  if (a2 && v6 == 51)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
    if ((!v7 || *(_BYTE *)(v7 + 16) != 32)
      && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32 || !sub_22F10CF48(v7)))
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x19DCu, 0, (uint64_t)v15);
      v8 = sub_22E8D2984((uint64_t)v15, (uint64_t *)a3);
      v14 = *(_QWORD *)(a2 + 48);
      v9 = sub_22E8901B8(v8, &v14);
      v13 = 0;
LABEL_17:
      sub_22E8900C4(v9, &v13);
      goto LABEL_18;
    }
    return 1;
  }
  if (a2 && v6 == 25)
  {
    v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) & 0xFFFFFFFFFFFFFFF0);
    if ((!v10 || *(_BYTE *)(v10 + 16) != 32)
      && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32 || !sub_22F10CF48(v10)))
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x19DCu, 0, (uint64_t)v15);
      v12 = sub_22E8D2984((uint64_t)v15, (uint64_t *)a3);
      v14 = *(_QWORD *)(a2 + 56);
      v9 = sub_22E8901B8(v12, &v14);
      v13 = 1;
      goto LABEL_17;
    }
    return 1;
  }
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1874u, 0, (uint64_t)v15);
  sub_22E8D2984((uint64_t)v15, (uint64_t *)a3);
LABEL_18:
  sub_22E903BEC(v15);
  return 0;
}

uint64_t sub_22EA8CF04(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int *a4, unsigned int a5)
{
  int v8;
  uint64_t result;
  int v10;
  void *v11;
  const void *v12;
  void **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  void *__dst[2];
  unint64_t v20;
  unsigned int v21[24];
  uint64_t v22;
  unsigned int v23;
  char v24;
  unsigned int v25;
  _QWORD *v26;
  __int128 v27;
  _QWORD v28[6];

  v28[5] = *MEMORY[0x24BDAC8D0];
  v25 = 0;
  v8 = sub_22EA4BAD4(a1, a2, a3, &v25, a5, 0);
  result = 0;
  if (!v8)
    return result;
  if ((v25 & 0x80000000) == 0)
  {
    *a4 = v25;
    return 1;
  }
  v23 = 32;
  v24 = 1;
  v22 = v25;
  sub_22EFF605C(a3);
  sub_22E8FCA40(a1, v10, 0xDDBu, 0, (uint64_t)v21);
  v26 = v28;
  v27 = xmmword_22F455490;
  llvm::APInt::toString();
  v11 = (void *)v27;
  if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8)
    abort();
  v12 = v26;
  if ((unint64_t)v27 >= 0x17)
  {
    v14 = (v27 & 0xFFFFFFFFFFFFFFF8) + 8;
    if (((unint64_t)v27 | 7) != 0x17)
      v14 = v27 | 7;
    v15 = v14 + 1;
    v13 = (void **)operator new(v14 + 1);
    __dst[1] = v11;
    v20 = v15 | 0x8000000000000000;
    __dst[0] = v13;
  }
  else
  {
    HIBYTE(v20) = v27;
    v13 = __dst;
    if (!(_QWORD)v27)
      goto LABEL_13;
  }
  memmove(v13, v12, (size_t)v11);
LABEL_13:
  *((_BYTE *)v11 + (_QWORD)v13) = 0;
  if (v26 != v28)
    free(v26);
  v16 = sub_22F2F3734((uint64_t)v21, __dst);
  LODWORD(v26) = 32;
  v17 = sub_22E8900C4(v16, (int *)&v26);
  v18 = 0;
  sub_22E8900C4(v17, &v18);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
  sub_22E903BEC(v21);
  if (v23 >= 0x41)
  {
    if (v22)
      MEMORY[0x2348A0E84](v22, 0x1000C8000313F17);
  }
  return 0;
}

uint64_t sub_22EA8D100(_QWORD *a1, _DWORD *a2, uint64_t *a3, unsigned int a4)
{
  unint64_t v7;
  int v8;
  uint64_t result;
  unsigned int v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24[25];
  unsigned int v25;

  v7 = a3[a4 + 10] & 0xFFFFFFFFFFFFFFFCLL;
  v25 = 0;
  v8 = sub_22EA8D310(a1, a2, (uint64_t)a3, a4 + 1, v7, &v25, 0);
  result = 0;
  if (v8)
  {
    v10 = (v25 & 0x3FFFFFFF) + ((int)(2 * v25) >> 31) - 1;
    v11 = sub_22EA47EEC((uint64_t)a2, v10) & 0xFFFFFFFFFFFFFFF0;
    v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 8) & 0xFFFFFFFFFFFFFFF0);
    v13 = *(_DWORD *)(v12 + 16);
    if (v12)
      v14 = v13 == 11;
    else
      v14 = 0;
    if (v14)
    {
      if (((*(_DWORD *)(v12 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
        return 1;
    }
    else if (v12 && v13 == 44)
    {
      v15 = sub_22F114198(*(_QWORD *)(v12 + 24));
      if (((*(_BYTE *)(v15 + 74) & 1) != 0 || *(_QWORD *)(v15 + 128) > 7uLL)
        && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v12 + 24)) + 76) & 0x80) == 0)
      {
        return 1;
      }
    }
    else if (v13 == 9)
    {
      return 1;
    }
    v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v16)
      v17 = *(_DWORD *)(v16 + 16) == 11;
    else
      v17 = 0;
    if (!v17
      || ((*(_DWORD *)(v16 + 16) >> 19) & 0x1FFu) - 167 >= 0xD
      || ((0x1803u >> ((*(_DWORD *)(v16 + 16) >> 19) + 89)) & 1) == 0)
    {
      sub_22F0D5A50(v7);
      sub_22E8FCA40(a1, v18, 0xAFCu, 0, (uint64_t)v24);
      v19 = sub_22E8D2984((uint64_t)v24, a3);
      if (a2 && (a2[7] & 0x7Eu) - 58 >= 0xFFFFFFFA)
      {
        v20 = a2 + 30;
      }
      else
      {
        v21 = a2[7] & 0x7F;
        if (a2 && v21 == 24)
        {
          v20 = a2 + 24;
        }
        else
        {
          v22 = 0;
          if (!a2 || v21 != 1)
            goto LABEL_34;
          v20 = a2 + 18;
        }
      }
      v22 = *(_QWORD *)(*v20 + 8 * v10);
      if (v22)
        v22 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v22 + 16))(v22);
LABEL_34:
      v23 = v22;
      sub_22E8906A0(v19, &v23);
      sub_22E903BEC(v24);
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_22EA8D310(_QWORD *a1, _DWORD *a2, uint64_t a3, unsigned int a4, uint64_t a5, unsigned int *a6, char a7)
{
  uint64_t v13;
  int v14;
  int v15;
  _BOOL4 v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t **v38;
  unsigned int v39;
  unsigned __int8 v40;
  unsigned int v41[3];

  v41[0] = a4;
  v13 = sub_22EFCB008((uint64_t)a2, 1);
  if (v13)
  {
    v14 = *(unsigned __int8 *)(v13 + 16) == 26;
    v15 = a2[7];
  }
  else
  {
    v15 = a2[7];
    v14 = (v15 & 0x7F) == 0x18 || (v15 & 0x7F) == 1;
  }
  if ((v15 & 0x7Eu) - 54 > 3
    || (*(_QWORD *)((*(uint64_t (**)(_DWORD *))(*(_QWORD *)a2 + 32))(a2) + 80) & 0xE000) == 0x4000)
  {
    v17 = 0;
    if (v14)
      goto LABEL_15;
LABEL_17:
    v18 = 1;
    goto LABEL_18;
  }
  if ((*((_QWORD *)a2 + 5) & 7) != 6)
  {
    v17 = 1;
    if (v14)
      goto LABEL_15;
    goto LABEL_17;
  }
  v17 = (*(_DWORD *)(*((_QWORD *)a2 + 5) & 0xFFFFFFFFFFFFFFF8) - 5) < 0xFFFFFFFC;
  if (!v14)
    goto LABEL_17;
LABEL_15:
  v18 = sub_22EA8D628((uint64_t)a2) ^ 1;
  v14 = sub_22EA8CD28(a2);
LABEL_18:
  LOBYTE(v38) = 0;
  v40 = 0;
  if ((*(_BYTE *)(a5 + 1) & 0x80) != 0)
    goto LABEL_33;
  sub_22F00905C(a5, a1[11], 0, (uint64_t)&v35);
  sub_22E54C490((uint64_t)&v38, (uint64_t)&v35);
  v19 = v40;
  if (v37 && v36 >= 0x41 && v35)
    MEMORY[0x2348A0E84](v35, 0x1000C8000313F17);
  if (!v19)
  {
LABEL_33:
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xAE0u, 0, (uint64_t)&v35);
    v34 = (uint64_t *)a3;
    sub_22EA8D684((uint64_t)&v35, &v34);
    v24 = sub_22E89519C((uint64_t)&v35, v41);
    v33 = 1;
    v25 = sub_22E8900C4(v24, &v33);
LABEL_34:
    v26 = (uint64_t *)v25;
    sub_22F0D4E74(a5);
    v32 = v27;
    v23 = v26;
    goto LABEL_35;
  }
  v20 = sub_22E5FA634(&v38, 0xFFFFFFFFuLL);
  if (v14 + v17 < v20)
    v21 = v18;
  else
    v21 = 0;
  if (!v20 || v21)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xAE2u, 0, (uint64_t)&v35);
    v34 = (uint64_t *)a3;
    sub_22EA8D684((uint64_t)&v35, &v34);
    v25 = sub_22E89519C((uint64_t)&v35, v41);
    goto LABEL_34;
  }
  if (v20 == 1 && (a7 & 1) == 0 && v17)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xAFFu, 0, (uint64_t)&v35);
    v34 = (uint64_t *)a3;
    sub_22EA8D684((uint64_t)&v35, &v34);
    sub_22F0D4E74(a5);
    v32 = v22;
    v23 = &v35;
LABEL_35:
    sub_22E8906A0((uint64_t)v23, &v32);
    sub_22E903BEC((unsigned int *)&v35);
    v28 = 0;
    goto LABEL_36;
  }
  v30 = v20 & 0x3FFFFFFF | 0x80000000;
  if ((a2[7] & 0x7Eu) - 58 >= 0xFFFFFFFA)
  {
    if (sub_22EFBAEF8((uint64_t)a2))
      v31 = 0x40000000;
    else
      v31 = 0;
    v30 |= v31;
  }
  *a6 = v30;
  v28 = 1;
LABEL_36:
  if (v40 && v39 >= 0x41 && v38)
    MEMORY[0x2348A0E84](v38, 0x1000C8000313F17);
  return v28;
}

uint64_t sub_22EA8D628(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22EFCB008(a1, 1);
  if (v2)
    return (*(unsigned __int8 *)(v2 + 23) >> 3) & 1;
  if (a1 && (*(_DWORD *)(a1 + 28) & 0x7F) == 1)
    return (*(unsigned __int8 *)(a1 + 49) >> 5) & 1;
  return (*(unsigned __int8 *)(a1 + 58) >> 2) & 1;
}

uint64_t sub_22EA8D684(uint64_t a1, uint64_t **a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _QWORD *v13;
  unsigned __int8 *v14;
  uint64_t v15;

  if (*(_BYTE *)(a1 + 80))
  {
    v4 = **a2;
    v5 = *(unsigned __int8 **)(a1 + 32);
    if (!v5)
    {
      v5 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(a1 + 40));
      *(_QWORD *)(a1 + 32) = v5;
    }
    v5[*v5 + 1] = 5;
    v6 = *(_BYTE **)(a1 + 32);
  }
  else
  {
    if (!*(_BYTE *)(a1 + 92))
      return a1;
    v9 = (uint64_t *)(*(_QWORD *)a1 + 12784);
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
    v15 = v10;
    v11 = sub_22F2F1D6C(v9, &v15)[1] + 32 * *(unsigned int *)(a1 + 88);
    v14 = *(unsigned __int8 **)(v11 + 8);
    v13 = (_QWORD *)(v11 + 8);
    v12 = v14;
    v4 = **a2;
    if (!v14)
    {
      v12 = (unsigned __int8 *)sub_22E3B8AAC(v13[1]);
      *v13 = v12;
    }
    v12[*v12 + 1] = 5;
    v6 = (_BYTE *)*v13;
  }
  v7 = *v6;
  *v6 = v7 + 1;
  *(_QWORD *)&v6[8 * v7 + 16] = v4;
  return a1;
}

uint64_t sub_22EA8D780(_QWORD *a1, unint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int *v19;
  char *v20;
  uint64_t v21;
  int v22;
  unsigned int v23[24];
  unsigned int v24[24];
  char *v25;
  uint64_t v26;
  _QWORD v27[33];

  v27[32] = *MEMORY[0x24BDAC8D0];
  v10 = *(_QWORD *)(a3 + 80) & 0xFFFFFFFFFFFFFFFCLL;
  *a4 = v10;
  if ((*(_BYTE *)(v10 + 1) & 0x80) == 0)
  {
    v11 = sub_22ED025A8(a1);
    if ((v11 & 1) != 0)
      return 0;
    *a4 = v11 & 0xFFFFFFFFFFFFFFFELL;
  }
  if (!sub_22EA472B0((uint64_t)a1, a3, 1u, a5, 0))
    return 0;
  if (!a5[1])
  {
    *a5 = (uint64_t)"<no message provided>";
    a5[1] = 21;
  }
  v25 = (char *)v27;
  v26 = 0x800000000;
  if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 52 > 5
    || (*(_BYTE *)(*a4 + 2) & 1) != 0
    || sub_22F00B7D0(*a4, a2, (uint64_t)&v25, v12, v13, v14, v15, v16))
  {
    v17 = 1;
  }
  else
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xAD4u, 0, (uint64_t)v24);
    sub_22E8D2984((uint64_t)v24, (uint64_t *)a3);
    sub_22E903BEC(v24);
    if ((_DWORD)v26)
    {
      v19 = (int *)v25;
      v20 = &v25[32 * v26];
      do
      {
        v21 = (uint64_t)(v19 + 2);
        v22 = *v19;
        v19 += 8;
        sub_22E90379C(a1, v22, v21, 0, (uint64_t)v23);
        sub_22E903BEC(v23);
      }
      while (v19 != (int *)v20);
    }
    v17 = 0;
  }
  sub_22E89277C(&v25);
  return v17;
}

uint64_t sub_22EA8D918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unsigned int v5;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD v17[10];

  v17[8] = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    if (a3)
    {
      v4 = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v5 = *(_DWORD *)(a3 + 8);
      if (v5 >= *(_DWORD *)(a3 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v5 = *(_DWORD *)(a3 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a3 + 8 * v5) = v4;
      ++*(_DWORD *)(a3 + 8);
    }
    else
    {
      v17[0] = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v16 = 0x800000001;
      v7 = 1;
      do
      {
        v8 = v7;
        v9 = &v17[v7];
        v10 = *(v9 - 1);
        if ((v10 & 4) != 0)
        {
          v7 = v8 - 1;
          LODWORD(v16) = v8 - 1;
        }
        else
        {
          *(v9 - 1) = v10 | 4;
          v11 = *(unsigned __int8 *)(v10 & 0xFFFFFFFFFFFFFFF8) - 1;
          if (v11 <= 0xEB)
            __asm { BR              X9 }
          v7 = v16;
          if ((_DWORD)v8 != (_DWORD)v16)
          {
            v12 = &v17[v16 - 1];
            if (&v17[v8] < v12)
            {
              v13 = &v17[v8 + 1];
              do
              {
                v14 = *(v13 - 1);
                *(v13 - 1) = *v12;
                *v12-- = v14;
              }
              while (v13++ < v12);
            }
          }
        }
      }
      while (v7);
    }
  }
  return 1;
}

uint64_t sub_22EA991B0(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  int v5;
  uint64_t result;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  unsigned int v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t **v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t **v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  BOOL v52;
  uint64_t v53;
  uint64_t **v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t **v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t **v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t **v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t **v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t **v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unsigned int v93;
  BOOL v94;
  uint64_t v95;
  uint64_t **v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t **v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t **v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t **v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t **v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t **v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t **v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  BOOL v127;
  uint64_t v128;
  uint64_t **v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int v133;
  BOOL v134;
  uint64_t v135;
  uint64_t **v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t **v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t **v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int v153;
  BOOL v154;
  uint64_t v155;
  uint64_t **v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t **v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t **v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t **v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t *v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t **v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  BOOL v185;
  uint64_t v186;
  uint64_t **v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  unint64_t v192;
  unint64_t v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t **v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t **v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t *v205;
  unint64_t *v206;
  unint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t **v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t **v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t **v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  unsigned int v224;
  BOOL v225;
  uint64_t v226;
  uint64_t **v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  BOOL v235;
  uint64_t v236;
  uint64_t **v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int v241;
  BOOL v242;
  uint64_t v243;
  uint64_t **v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t **v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  unsigned int v257;
  uint64_t v258;
  uint64_t **v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t **v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t *v268;
  unsigned int v269;
  uint64_t v270;
  uint64_t **v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  _DWORD *v275;
  uint64_t v276;
  uint64_t *v277;
  unsigned int v278;
  uint64_t v279;
  unsigned int v280;
  BOOL v281;
  uint64_t v282;
  uint64_t **v283;
  uint64_t *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  unsigned int v290;
  BOOL v291;
  uint64_t v292;
  uint64_t **v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t **v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t **v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int v305;
  BOOL v306;
  uint64_t v307;
  uint64_t **v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t **v312;
  uint64_t *v313;
  uint64_t v314;
  uint64_t v315;
  int v316;
  uint64_t v317;
  unsigned int v318;
  uint64_t v319;
  uint64_t **v320;
  uint64_t *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t **v324;
  uint64_t *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t **v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t **v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t *v337;
  unsigned int v338;
  uint64_t v339;
  uint64_t **v340;
  uint64_t *v341;
  uint64_t v342;
  uint64_t v343;
  unsigned int v344;
  uint64_t v345;
  uint64_t **v346;
  uint64_t *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t **v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t *v356;
  uint64_t v357;
  unint64_t *v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t *v363;
  uint64_t v364;
  uint64_t **v365;
  uint64_t *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t **v369;
  uint64_t *v370;
  uint64_t v371;
  uint64_t v372;
  unsigned int v373;
  BOOL v374;
  uint64_t v375;
  uint64_t **v376;
  uint64_t *v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  unint64_t v381;
  unsigned int v382;
  uint64_t v383;
  uint64_t **v384;
  uint64_t *v385;
  uint64_t v386;
  uint64_t v387;
  unint64_t v388;
  uint64_t v389;
  unsigned int v390;
  uint64_t v391;
  uint64_t **v392;
  uint64_t *v393;
  uint64_t v394;
  uint64_t v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t **v398;
  uint64_t *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  unint64_t v403;
  unint64_t *v404;
  unsigned int v405;
  uint64_t v406;
  uint64_t **v407;
  uint64_t *v408;
  uint64_t v409;
  uint64_t v410;
  unsigned int v411;
  BOOL v412;
  uint64_t v413;
  uint64_t **v414;
  uint64_t *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t **v418;
  uint64_t *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t **v422;
  uint64_t *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t **v426;
  uint64_t *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t **v430;
  uint64_t *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t **v434;
  uint64_t *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t **v438;
  uint64_t *v439;
  uint64_t v440;
  uint64_t v441;
  int v442;
  uint64_t v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t **v446;
  uint64_t *v447;
  uint64_t v448;
  uint64_t v449;
  unint64_t v450;
  unsigned int v451;
  uint64_t v452;
  uint64_t **v453;
  uint64_t *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t **v457;
  uint64_t *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t **v461;
  uint64_t *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t i;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  unsigned int v471;
  BOOL v472;
  uint64_t v473;
  uint64_t **v474;
  uint64_t *v475;
  uint64_t v476;
  uint64_t v477;
  unsigned int v478;
  uint64_t v479;
  uint64_t **v480;
  uint64_t *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t **v484;
  uint64_t *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t *v488;
  uint64_t **v489;
  uint64_t *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t *v493;
  unsigned int v494;
  uint64_t v495;
  uint64_t **v496;
  uint64_t *v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  uint64_t v501;
  uint64_t **v502;
  uint64_t *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t **v506;
  uint64_t *v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t **v511;
  uint64_t *v512;
  uint64_t v513;
  uint64_t v514;
  unint64_t v515;
  uint64_t v516;
  unsigned int v517;
  uint64_t v518;
  uint64_t **v519;
  uint64_t *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t **v530;
  uint64_t *v531;
  uint64_t v532;
  uint64_t v533;
  BOOL v534;
  uint64_t **v535;
  uint64_t *v536;
  uint64_t v537;
  uint64_t v538;
  BOOL v539;
  BOOL v540;
  BOOL v541;
  BOOL v542;
  BOOL v543;
  int *v544;
  BOOL v545;
  BOOL v546;
  BOOL v547;
  uint64_t **v548;
  uint64_t *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  int v559;
  uint64_t v560;

  if (!a2)
    return 1;
  v4 = a2 + 28;
  v5 = *(_DWORD *)(a2 + 28) & 0x7F;
  if ((*(_DWORD *)(a2 + 28) & 0x200) != 0)
  {
    if (v5 == 38)
      return sub_22EA9D038(a1, a2);
    return 1;
  }
  switch(v5)
  {
    case 0:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v8 = *v7;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v10 = *(_QWORD *)v9 + 8 * *(unsigned int *)(v9 + 8);
      }
      else
      {
        v10 = 0;
      }
      while (2)
      {
        if (v8 == (uint64_t *)v10)
          return 1;
        if ((sub_22EA9E3F8(a1, *v8) & 1) != 0)
        {
          ++v8;
          continue;
        }
        break;
      }
      return 0;
    case 1:
      v248 = *(unint64_t **)(a2 + 96);
      if (v248)
      {
        result = sub_22EA9D4A8(a1, *v248, (uint64_t)(v248 + 1));
        if (!(_DWORD)result)
          return result;
      }
      v249 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
      result = sub_22EA8D918(a1, v249, 0);
      if (!(_DWORD)result)
        return result;
      v250 = *(unsigned int *)(a2 + 112);
      if (!(_DWORD)v250)
        goto LABEL_454;
      v251 = 16 * v250;
      v252 = (_QWORD *)(*(_QWORD *)(a2 + 104) + 8);
      while (1)
      {
        if (*v252)
        {
          result = sub_22EA8D918(a1, *v252, 0);
          if (!(_DWORD)result)
            break;
        }
        v252 += 2;
        v251 -= 16;
        if (!v251)
        {
LABEL_454:
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v254 = *v253;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v256 = *(_QWORD *)v255 + 8 * *(unsigned int *)(v255 + 8);
            }
            else
            {
              v256 = 0;
            }
            while (v254 != (uint64_t *)v256)
            {
              if ((sub_22EA9E3F8(a1, *v254) & 1) == 0)
                return 0;
              ++v254;
            }
          }
          return 1;
        }
      }
      return result;
    case 2:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v217 = *v216;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v219 = *(_QWORD *)v218 + 8 * *(unsigned int *)(v218 + 8);
      }
      else
      {
        v219 = 0;
      }
      while (2)
      {
        if (v217 == (uint64_t *)v219)
          return 1;
        if ((sub_22EA9E3F8(a1, *v217) & 1) != 0)
        {
          ++v217;
          continue;
        }
        break;
      }
      return 0;
    case 3:
      result = sub_22EA991B0(a1);
      if (!(_DWORD)result)
        return result;
      v231 = *(_QWORD *)(a2 + 48);
      if (!v231)
        goto LABEL_421;
      v232 = *(unsigned int *)(v231 + 8);
      if (!(_DWORD)v232)
        goto LABEL_421;
      v233 = v231 + 16;
      while ((sub_22EA9E244(a1, v233) & 1) != 0)
      {
        v233 += 32;
        if (!--v232)
        {
LABEL_421:
          v234 = *(_DWORD *)v4 & 0x7F;
          v235 = v234 > 0x39 || ((1 << v234) & 0x3F0003E01011066) == 0;
          if (v235
            && (v234 - 70 <= 0xD ? (v541 = ((1 << (v234 - 70)) & 0x2803) == 0) : (v541 = 1), v541 && v234 - 19 > 4))
          {
            v236 = 0;
          }
          else
          {
            v236 = sub_22EFCAE04(a2);
          }
          result = sub_22EA9E35C(a1, v236);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v238 = *v237;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v240 = *(_QWORD *)v239 + 8 * *(unsigned int *)(v239 + 8);
            }
            else
            {
              v240 = 0;
            }
            while (v238 != (uint64_t *)v240)
            {
              if ((sub_22EA9E3F8(a1, *v238) & 1) == 0)
                return 0;
              ++v238;
            }
          }
          return 1;
        }
      }
      return 0;
    case 4:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v173 = *v172;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v175 = *(_QWORD *)v174 + 8 * *(unsigned int *)(v174 + 8);
      }
      else
      {
        v175 = 0;
      }
      while (2)
      {
        if (v173 == (uint64_t *)v175)
          return 1;
        if ((sub_22EA9E3F8(a1, *v173) & 1) != 0)
        {
          ++v173;
          continue;
        }
        break;
      }
      return 0;
    case 5:
      result = sub_22EA9E35C(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v298 = *v297;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v300 = *(_QWORD *)v299 + 8 * *(unsigned int *)(v299 + 8);
      }
      else
      {
        v300 = 0;
      }
      while (2)
      {
        if (v298 == (uint64_t *)v300)
          return 1;
        if ((sub_22EA9E3F8(a1, *v298) & 1) != 0)
        {
          ++v298;
          continue;
        }
        break;
      }
      return 0;
    case 6:
      result = sub_22EA9E35C(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v325 = *v324;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v327 = *(_QWORD *)v326 + 8 * *(unsigned int *)(v326 + 8);
      }
      else
      {
        v327 = 0;
      }
      while (2)
      {
        if (v325 == (uint64_t *)v327)
          return 1;
        if ((sub_22EA9E3F8(a1, *v325) & 1) != 0)
        {
          ++v325;
          continue;
        }
        break;
      }
      return 0;
    case 7:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 40), 0);
      if (!(_DWORD)result)
        return result;
      v241 = *(_DWORD *)v4 & 0x7F;
      v242 = v241 > 0x39 || ((1 << v241) & 0x3F0003E01011066) == 0;
      v243 = !v242 || v241 - 70 <= 0xD && ((1 << (v241 - 70)) & 0x2803) != 0 || v241 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v243);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v245 = *v244;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v247 = *(_QWORD *)v246 + 8 * *(unsigned int *)(v246 + 8);
      }
      else
      {
        v247 = 0;
      }
      while (2)
      {
        if (v245 == (uint64_t *)v247)
          return 1;
        if ((sub_22EA9E3F8(a1, *v245) & 1) != 0)
        {
          ++v245;
          continue;
        }
        break;
      }
      return 0;
    case 8:
      v336 = *(_QWORD *)(a2 + 40);
      v337 = (unint64_t *)(v336 & 0xFFFFFFFFFFFFFFF8);
      if ((v336 & 4) != 0 && v337)
      {
        if ((sub_22EA9D4A8(a1, *v337, (uint64_t)(v337 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22EA991B0(a1);
        if (!(_DWORD)result)
          return result;
      }
      v478 = *(_DWORD *)v4 & 0x7F;
      if (v478 <= 0x39 && ((1 << v478) & 0x3F0003E01011066) != 0
        || v478 - 70 <= 0xD && ((1 << (v478 - 70)) & 0x2803) != 0
        || v478 - 19 <= 4)
      {
        v479 = sub_22EFCAE04(a2);
      }
      else
      {
        v479 = 0;
      }
      result = sub_22EA9E35C(a1, v479);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v481 = *v480;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v483 = *(_QWORD *)v482 + 8 * *(unsigned int *)(v482 + 8);
      }
      else
      {
        v483 = 0;
      }
      while (2)
      {
        if (v481 == (uint64_t *)v483)
          return 1;
        if ((sub_22EA9E3F8(a1, *v481) & 1) != 0)
        {
          ++v481;
          continue;
        }
        break;
      }
      return 0;
    case 9:
      v204 = *(_QWORD *)(a2 + 48);
      v205 = (unint64_t *)(v204 & 0xFFFFFFFFFFFFFFF8);
      if ((v204 & 4) != 0 && v205)
      {
        if ((sub_22EA9D4A8(a1, *v205, (uint64_t)(v205 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22EA991B0(a1);
        if (!(_DWORD)result)
          return result;
      }
      v465 = *(unsigned int *)(a2 + 36);
      if (!(_DWORD)v465)
        goto LABEL_859;
      for (i = 0; i != v465; ++i)
      {
        v467 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * i);
        v468 = *(_DWORD *)(v467 + 12) & 0x1FFFFFFF;
        if ((_DWORD)v468)
        {
          v469 = v467 + 16;
          v470 = 8 * v468;
          while ((sub_22EA991B0(a1) & 1) != 0)
          {
            v469 += 8;
            v470 -= 8;
            if (!v470)
              goto LABEL_858;
          }
          return 0;
        }
LABEL_858:
        ;
      }
LABEL_859:
      v471 = *(_DWORD *)v4 & 0x7F;
      v472 = v471 > 0x39 || ((1 << v471) & 0x3F0003E01011066) == 0;
      if (v472 && (v471 - 70 <= 0xD ? (v547 = ((1 << (v471 - 70)) & 0x2803) == 0) : (v547 = 1), v547 && v471 - 19 > 4))
        v473 = 0;
      else
        v473 = sub_22EFCAE04(a2);
      result = sub_22EA9E35C(a1, v473);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v475 = *v474;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v477 = *(_QWORD *)v476 + 8 * *(unsigned int *)(v476 + 8);
        }
        else
        {
          v477 = 0;
        }
        while (v475 != (uint64_t *)v477)
        {
          if ((sub_22EA9E3F8(a1, *v475) & 1) == 0)
            return 0;
          ++v475;
        }
      }
      return 1;
    case 10:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v333 = *v332;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v335 = *(_QWORD *)v334 + 8 * *(unsigned int *)(v334 + 8);
      }
      else
      {
        v335 = 0;
      }
      while (2)
      {
        if (v333 == (uint64_t *)v335)
          return 1;
        if ((sub_22EA9E3F8(a1, *v333) & 1) != 0)
        {
          ++v333;
          continue;
        }
        break;
      }
      return 0;
    case 11:
      return (sub_22EA9D080(a1, a2) & 1) != 0;
    case 12:
      result = sub_22EA9E35C(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v201 = *v200;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v203 = *(_QWORD *)v202 + 8 * *(unsigned int *)(v202 + 8);
      }
      else
      {
        v203 = 0;
      }
      while (2)
      {
        if (v201 == (uint64_t *)v203)
          return 1;
        if ((sub_22EA9E3F8(a1, *v201) & 1) != 0)
        {
          ++v201;
          continue;
        }
        break;
      }
      return 0;
    case 13:
      if (!sub_22EA9D368(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v316 = *(_DWORD *)(a2 + 24);
      v317 = *(_QWORD *)(a2 + 80);
      v558 = *(_QWORD *)(a2 + 40);
      v559 = v316;
      v560 = v317;
      if (!sub_22EA9D3F0(a1, &v558))
        return 0;
      if ((v318 = *(_DWORD *)v4 & 0x7F, v318 <= 0x39) && ((1 << v318) & 0x3F0003E01011066) != 0
        || v318 - 70 <= 0xD && ((1 << (v318 - 70)) & 0x2803) != 0
        || v318 - 19 <= 4)
      {
        v319 = sub_22EFCAE04(a2);
      }
      else
      {
        v319 = 0;
      }
      if (!sub_22EA9E35C(a1, v319))
        return 0;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v321 = *v320;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v323 = *(_QWORD *)v322 + 8 * *(unsigned int *)(v322 + 8);
      }
      else
      {
        v323 = 0;
      }
      while (2)
      {
        if (v321 == (uint64_t *)v323)
          return 1;
        if ((sub_22EA9E3F8(a1, *v321) & 1) != 0)
        {
          ++v321;
          continue;
        }
        break;
      }
      return 0;
    case 14:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v141 = *v140;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v143 = *(_QWORD *)v142 + 8 * *(unsigned int *)(v142 + 8);
      }
      else
      {
        v143 = 0;
      }
      while (2)
      {
        if (v141 == (uint64_t *)v143)
          return 1;
        if ((sub_22EA9E3F8(a1, *v141) & 1) != 0)
        {
          ++v141;
          continue;
        }
        break;
      }
      return 0;
    case 15:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v221 = *v220;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v223 = *(_QWORD *)v222 + 8 * *(unsigned int *)(v222 + 8);
      }
      else
      {
        v223 = 0;
      }
      while (2)
      {
        if (v221 == (uint64_t *)v223)
          return 1;
        if ((sub_22EA9E3F8(a1, *v221) & 1) != 0)
        {
          ++v221;
          continue;
        }
        break;
      }
      return 0;
    case 16:
      result = sub_22EA9E35C(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v123 = *v122;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v125 = *(_QWORD *)v124 + 8 * *(unsigned int *)(v124 + 8);
      }
      else
      {
        v125 = 0;
      }
      while (2)
      {
        if (v123 == (uint64_t *)v125)
          return 1;
        if ((sub_22EA9E3F8(a1, *v123) & 1) != 0)
        {
          ++v123;
          continue;
        }
        break;
      }
      return 0;
    case 17:
      result = sub_22EA9D368(a1, *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80));
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v264 = *v263;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v266 = *(_QWORD *)v265 + 8 * *(unsigned int *)(v265 + 8);
      }
      else
      {
        v266 = 0;
      }
      while (2)
      {
        if (v264 == (uint64_t *)v266)
          return 1;
        if ((sub_22EA9E3F8(a1, *v264) & 1) != 0)
        {
          ++v264;
          continue;
        }
        break;
      }
      return 0;
    case 18:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v329 = *v328;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v331 = *(_QWORD *)v330 + 8 * *(unsigned int *)(v330 + 8);
      }
      else
      {
        v331 = 0;
      }
      while (2)
      {
        if (v329 == (uint64_t *)v331)
          return 1;
        if ((sub_22EA9E3F8(a1, *v329) & 1) != 0)
        {
          ++v329;
          continue;
        }
        break;
      }
      return 0;
    case 19:
      v361 = *(_QWORD *)(a2 + 112);
      if (!v361)
        goto LABEL_650;
      v362 = *(unsigned int *)(v361 + 8);
      if (!(_DWORD)v362)
        goto LABEL_650;
      v363 = (uint64_t *)(v361 + 16);
      v364 = 8 * v362;
      while ((sub_22EA9D198(a1, *v363) & 1) != 0)
      {
        ++v363;
        v364 -= 8;
        if (!v364)
        {
LABEL_650:
          result = sub_22EA9E35C(a1, a2 + 48);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v366 = *v365;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v368 = *(_QWORD *)v367 + 8 * *(unsigned int *)(v367 + 8);
            }
            else
            {
              v368 = 0;
            }
            while (v366 != (uint64_t *)v368)
            {
              if ((sub_22EA9E3F8(a1, *v366) & 1) == 0)
                return 0;
              ++v366;
            }
          }
          return 1;
        }
      }
      return 0;
    case 20:
      result = sub_22EA9E35C(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v284 = *v283;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v286 = *(_QWORD *)v285 + 8 * *(unsigned int *)(v285 + 8);
      }
      else
      {
        v286 = 0;
      }
      while (2)
      {
        if (v284 == (uint64_t *)v286)
          return 1;
        if ((sub_22EA9E3F8(a1, *v284) & 1) != 0)
        {
          ++v284;
          continue;
        }
        break;
      }
      return 0;
    case 21:
      result = sub_22EA9E35C(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v313 = *v312;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v315 = *(_QWORD *)v314 + 8 * *(unsigned int *)(v314 + 8);
      }
      else
      {
        v315 = 0;
      }
      while (2)
      {
        if (v313 == (uint64_t *)v315)
          return 1;
        if ((sub_22EA9E3F8(a1, *v313) & 1) != 0)
        {
          ++v313;
          continue;
        }
        break;
      }
      return 0;
    case 22:
      v354 = *(_QWORD *)(a2 + 112);
      if (!v354)
        goto LABEL_637;
      v355 = *(unsigned int *)(v354 + 8);
      if (!(_DWORD)v355)
        goto LABEL_637;
      v356 = (uint64_t *)(v354 + 16);
      v357 = 8 * v355;
      while ((sub_22EA9D198(a1, *v356) & 1) != 0)
      {
        ++v356;
        v357 -= 8;
        if (!v357)
        {
LABEL_637:
          v358 = (unint64_t *)sub_22F259044(a2);
          if (v358)
          {
            result = sub_22EA9D4A8(a1, *v358, (uint64_t)(v358 + 1));
            if (!(_DWORD)result)
              return result;
          }
          v359 = *(_QWORD *)(a2 + 120);
          if (!v359)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
            v359 = *(_QWORD *)(a2 + 120);
          }
          if (v359 < 8)
            v360 = 0;
          else
            v360 = *(_QWORD *)(v359 & 0xFFFFFFFFFFFFFFF8);
          if (v360 == a2)
          {
            v552 = sub_22F2590A8(a2);
            v553 = sub_22F25910C(a2);
            v554 = sub_22F259178(a2);
            v555 = sub_22F2591DC(a2);
            if (v552 != v553 && v554 != v555)
            {
              v556 = v554 + 4;
              v557 = v552 + 8;
              do
              {
                if (v557 == v553)
                  break;
                v557 += 8;
                v31 = v556 == v555;
                v556 += 4;
              }
              while (!v31);
            }
          }
          result = sub_22EA9E35C(a1, a2 + 48);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v531 = *v530;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v533 = *(_QWORD *)v532 + 8 * *(unsigned int *)(v532 + 8);
            }
            else
            {
              v533 = 0;
            }
            while (v531 != (uint64_t *)v533)
            {
              if ((sub_22EA9E3F8(a1, *v531) & 1) == 0)
                return 0;
              ++v531;
            }
          }
          return 1;
        }
      }
      return 0;
    case 23:
      v388 = *(_QWORD *)(a2 + 104);
      if (!v388)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
        v388 = *(_QWORD *)(a2 + 104);
      }
      if (v388 < 8)
        v389 = 0;
      else
        v389 = *(_QWORD *)(v388 & 0xFFFFFFFFFFFFFFF8);
      if (v389 == a2)
      {
        v523 = sub_22F259248(a2);
        v525 = v524;
        v526 = sub_22F2592CC(a2);
        if (v523 != v525 && v526 != v527)
        {
          v528 = v526 + 4;
          v529 = v523 + 8;
          do
          {
            if (v529 == v525)
              break;
            v529 += 8;
            v31 = v528 == v527;
            v528 += 4;
          }
          while (!v31);
        }
      }
      result = sub_22EA9E35C(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v485 = *v484;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v487 = *(_QWORD *)v486 + 8 * *(unsigned int *)(v486 + 8);
      }
      else
      {
        v487 = 0;
      }
      while (2)
      {
        if (v485 == (uint64_t *)v487)
          return 1;
        if ((sub_22EA9E3F8(a1, *v485) & 1) != 0)
        {
          ++v485;
          continue;
        }
        break;
      }
      return 0;
    case 24:
      v207 = *(unint64_t **)(a2 + 88);
      if (v207)
      {
        result = sub_22EA9D4A8(a1, *v207, (uint64_t)(v207 + 1));
        if (!(_DWORD)result)
          return result;
      }
      v208 = *(unsigned int *)(a2 + 104);
      if (!(_DWORD)v208)
        goto LABEL_379;
      v209 = *(_QWORD *)(a2 + 96);
      v210 = 8 * v208;
      while ((sub_22EA991B0(a1) & 1) != 0)
      {
        v209 += 8;
        v210 -= 8;
        if (!v210)
        {
LABEL_379:
          if ((*(unsigned int (**)(unint64_t))(*(_QWORD *)a2 + 72))(a2))
          {
            v211 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
            result = sub_22EA8D918(a1, v211, 0);
            if (!(_DWORD)result)
              return result;
          }
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v213 = *v212;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v215 = *(_QWORD *)v214 + 8 * *(unsigned int *)(v214 + 8);
            }
            else
            {
              v215 = 0;
            }
            while (v213 != (uint64_t *)v215)
            {
              if ((sub_22EA9E3F8(a1, *v213) & 1) == 0)
                return 0;
              ++v213;
            }
          }
          return 1;
        }
      }
      return 0;
    case 25:
      v206 = *(unint64_t **)(a2 + 64);
      if (v206)
      {
        if ((sub_22EA9D4A8(a1, *v206, (uint64_t)(v206 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22EA9DC10(a1, *(_QWORD *)(a2 + 56));
        if (!(_DWORD)result)
          return result;
      }
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v507 = *v506;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v509 = *(_QWORD *)v508 + 8 * *(unsigned int *)(v508 + 8);
      }
      else
      {
        v509 = 0;
      }
      while (2)
      {
        if (v507 == (uint64_t *)v509)
          return 1;
        if ((sub_22EA9E3F8(a1, *v507) & 1) != 0)
        {
          ++v507;
          continue;
        }
        break;
      }
      return 0;
    case 26:
      result = sub_22EA9E994(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      v411 = *(_DWORD *)v4 & 0x7F;
      v412 = v411 > 0x39 || ((1 << v411) & 0x3F0003E01011066) == 0;
      v413 = !v412 || v411 - 70 <= 0xD && ((1 << (v411 - 70)) & 0x2803) != 0 || v411 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v413);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v415 = *v414;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v417 = *(_QWORD *)v416 + 8 * *(unsigned int *)(v416 + 8);
      }
      else
      {
        v417 = 0;
      }
      while (2)
      {
        if (v415 == (uint64_t *)v417)
          return 1;
        if ((sub_22EA9E3F8(a1, *v415) & 1) != 0)
        {
          ++v415;
          continue;
        }
        break;
      }
      return 0;
    case 27:
      result = sub_22EA9E994(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 64), 0);
      if (!(_DWORD)result)
        return result;
      if ((v112 = *(_DWORD *)v4 & 0x7F, v112 <= 0x39) && ((1 << v112) & 0x3F0003E01011066) != 0
        || v112 - 70 <= 0xD && ((1 << (v112 - 70)) & 0x2803) != 0
        || v112 - 19 <= 4)
      {
        v113 = sub_22EFCAE04(a2);
      }
      else
      {
        v113 = 0;
      }
      result = sub_22EA9E35C(a1, v113);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v115 = *v114;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v117 = *(_QWORD *)v116 + 8 * *(unsigned int *)(v116 + 8);
      }
      else
      {
        v117 = 0;
      }
      while (2)
      {
        if (v115 == (uint64_t *)v117)
          return 1;
        if ((sub_22EA9E3F8(a1, *v115) & 1) != 0)
        {
          ++v115;
          continue;
        }
        break;
      }
      return 0;
    case 28:
      result = sub_22EA9E994(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EA991B0(a1);
      if (!(_DWORD)result)
        return result;
      if ((v390 = *(_DWORD *)v4 & 0x7F, v390 <= 0x39) && ((1 << v390) & 0x3F0003E01011066) != 0
        || v390 - 70 <= 0xD && ((1 << (v390 - 70)) & 0x2803) != 0
        || v390 - 19 <= 4)
      {
        v391 = sub_22EFCAE04(a2);
      }
      else
      {
        v391 = 0;
      }
      result = sub_22EA9E35C(a1, v391);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v393 = *v392;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v395 = *(_QWORD *)v394 + 8 * *(unsigned int *)(v394 + 8);
      }
      else
      {
        v395 = 0;
      }
      while (2)
      {
        if (v393 == (uint64_t *)v395)
          return 1;
        if ((sub_22EA9E3F8(a1, *v393) & 1) != 0)
        {
          ++v393;
          continue;
        }
        break;
      }
      return 0;
    case 29:
      result = sub_22EA9E994(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EA991B0(a1);
      if (!(_DWORD)result)
        return result;
      if ((v396 = *(_DWORD *)v4 & 0x7F, v396 <= 0x39) && ((1 << v396) & 0x3F0003E01011066) != 0
        || v396 - 70 <= 0xD && ((1 << (v396 - 70)) & 0x2803) != 0
        || v396 - 19 <= 4)
      {
        v397 = sub_22EFCAE04(a2);
      }
      else
      {
        v397 = 0;
      }
      result = sub_22EA9E35C(a1, v397);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v399 = *v398;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v401 = *(_QWORD *)v400 + 8 * *(unsigned int *)(v400 + 8);
      }
      else
      {
        v401 = 0;
      }
      while (2)
      {
        if (v399 == (uint64_t *)v401)
          return 1;
        if ((sub_22EA9E3F8(a1, *v399) & 1) != 0)
        {
          ++v399;
          continue;
        }
        break;
      }
      return 0;
    case 30:
      result = sub_22EA991B0(a1);
      if (!(_DWORD)result)
        return result;
      result = sub_22EA9E994(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      if ((v338 = *(_DWORD *)v4 & 0x7F, v338 <= 0x39) && ((1 << v338) & 0x3F0003E01011066) != 0
        || v338 - 70 <= 0xD && ((1 << (v338 - 70)) & 0x2803) != 0
        || v338 - 19 <= 4)
      {
        v339 = sub_22EFCAE04(a2);
      }
      else
      {
        v339 = 0;
      }
      result = sub_22EA9E35C(a1, v339);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v341 = *v340;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v343 = *(_QWORD *)v342 + 8 * *(unsigned int *)(v342 + 8);
      }
      else
      {
        v343 = 0;
      }
      while (2)
      {
        if (v341 == (uint64_t *)v343)
          return 1;
        if ((sub_22EA9E3F8(a1, *v341) & 1) != 0)
        {
          ++v341;
          continue;
        }
        break;
      }
      return 0;
    case 31:
      result = sub_22EA9E994(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22EA991B0(a1);
      if (!(_DWORD)result)
        return result;
      if ((v257 = *(_DWORD *)v4 & 0x7F, v257 <= 0x39) && ((1 << v257) & 0x3F0003E01011066) != 0
        || v257 - 70 <= 0xD && ((1 << (v257 - 70)) & 0x2803) != 0
        || v257 - 19 <= 4)
      {
        v258 = sub_22EFCAE04(a2);
      }
      else
      {
        v258 = 0;
      }
      result = sub_22EA9E35C(a1, v258);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v260 = *v259;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v262 = *(_QWORD *)v261 + 8 * *(unsigned int *)(v261 + 8);
      }
      else
      {
        v262 = 0;
      }
      while (2)
      {
        if (v260 == (uint64_t *)v262)
          return 1;
        if ((sub_22EA9E3F8(a1, *v260) & 1) != 0)
        {
          ++v260;
          continue;
        }
        break;
      }
      return 0;
    case 32:
      result = sub_22EA991B0(a1);
      if (!(_DWORD)result)
        return result;
      if (*(_QWORD *)(a2 + 72) >= 8uLL && (*(_QWORD *)(a2 + 72) & 6) != 2)
      {
        v544 = sub_22F259350(a2);
        result = sub_22EA9E244(a1, (uint64_t)v544);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EA9E994(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      if ((v344 = *(_DWORD *)v4 & 0x7F, v344 <= 0x39) && ((1 << v344) & 0x3F0003E01011066) != 0
        || v344 - 70 <= 0xD && ((1 << (v344 - 70)) & 0x2803) != 0
        || v344 - 19 <= 4)
      {
        v345 = sub_22EFCAE04(a2);
      }
      else
      {
        v345 = 0;
      }
      result = sub_22EA9E35C(a1, v345);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v347 = *v346;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v349 = *(_QWORD *)v348 + 8 * *(unsigned int *)(v348 + 8);
      }
      else
      {
        v349 = 0;
      }
      if (v347 == (uint64_t *)v349)
        return 1;
      while ((sub_22EA9E3F8(a1, *v347) & 1) != 0)
      {
        if (++v347 == (uint64_t *)v349)
          return 1;
      }
      return 0;
    case 33:
      v144 = *(_QWORD *)(a2 + 120);
      if ((v144 & 4) == 0)
        goto LABEL_252;
      v145 = 0;
      while (1)
      {
        v146 = v144 & 0xFFFFFFFFFFFFFFF8;
        if (v145 >= *(unsigned int *)(v146 + 16))
          break;
        sub_22EA9E994(a1, *(_QWORD *)(*(_QWORD *)(v146 + 24) + 8 * v145++));
        v144 = *(_QWORD *)(a2 + 120);
        if ((v144 & 4) == 0)
        {
LABEL_252:
          v147 = 0;
          v148 = 0;
          goto LABEL_946;
        }
      }
      v147 = *(_QWORD *)v146;
      v148 = *(_QWORD *)(v146 + 8);
LABEL_946:
      result = sub_22EA9D368(a1, v147, v148);
      if (!(_DWORD)result)
        return result;
      v510 = *(_QWORD *)(a2 + 128);
      if ((v510 & 4) != 0 && (v510 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        result = sub_22EA9D4A8(a1, *(_QWORD *)(v510 & 0xFFFFFFFFFFFFFFF8), (v510 & 0xFFFFFFFFFFFFFFF8) + 8);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EA9E35C(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v512 = *v511;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v514 = *(_QWORD *)v513 + 8 * *(unsigned int *)(v513 + 8);
      }
      else
      {
        v514 = 0;
      }
      if (v512 == (uint64_t *)v514)
        return 1;
      while ((sub_22EA9E3F8(a1, *v512) & 1) != 0)
      {
        if (++v512 == (uint64_t *)v514)
          return 1;
      }
      return 0;
    case 34:
      result = sub_22EA9EA34(a1, a2);
      if (!(_DWORD)result)
        return result;
      result = sub_22EA9E35C(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v119 = *v118;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v121 = *(_QWORD *)v120 + 8 * *(unsigned int *)(v120 + 8);
      }
      else
      {
        v121 = 0;
      }
      if (v119 == (uint64_t *)v121)
        return 1;
      while ((sub_22EA9E3F8(a1, *v119) & 1) != 0)
      {
        if (++v119 == (uint64_t *)v121)
          return 1;
      }
      return 0;
    case 35:
      result = sub_22EA9EAA8(a1, a2);
      if (!(_DWORD)result)
        return result;
      result = sub_22EA9E35C(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v101 = *v100;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v103 = *(_QWORD *)v102 + 8 * *(unsigned int *)(v102 + 8);
      }
      else
      {
        v103 = 0;
      }
      if (v101 == (uint64_t *)v103)
        return 1;
      while ((sub_22EA9E3F8(a1, *v101) & 1) != 0)
      {
        if (++v101 == (uint64_t *)v103)
          return 1;
      }
      return 0;
    case 36:
      v104 = *(unint64_t ***)(a2 + 160);
      if (v104)
      {
        if (*v104)
        {
          result = sub_22EA9D4A8(a1, **v104, (uint64_t)(*v104 + 1));
          if (!(_DWORD)result)
            return result;
        }
      }
      v105 = *(_QWORD *)(a2 + 120);
      if ((v105 & 4) != 0)
      {
        v488 = (uint64_t *)(v105 & 0xFFFFFFFFFFFFFFF8);
        v106 = *v488;
        v107 = v488[1];
      }
      else
      {
        v106 = 0;
        v107 = 0;
      }
      result = sub_22EA9D368(a1, v106, v107);
      if (!(_DWORD)result)
        return result;
      if (sub_22EFD5760(a2) != 2)
        return 1;
      result = sub_22EA9E35C(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v490 = *v489;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v492 = *(_QWORD *)v491 + 8 * *(unsigned int *)(v491 + 8);
      }
      else
      {
        v492 = 0;
      }
      if (v490 == (uint64_t *)v492)
        return 1;
      while ((sub_22EA9E3F8(a1, *v490) & 1) != 0)
      {
        if (++v490 == (uint64_t *)v492)
          return 1;
      }
      return 0;
    case 37:
      v63 = *(_QWORD *)(a2 + 184);
      if (!v63)
        goto LABEL_104;
      v64 = *(_DWORD *)(v63 + 12) & 0x1FFFFFFF;
      if (!(_DWORD)v64)
        goto LABEL_104;
      v65 = v63 + 16;
      v66 = 8 * v64;
      while ((sub_22EA991B0(a1) & 1) != 0)
      {
        v65 += 8;
        v66 -= 8;
        if (!v66)
        {
LABEL_104:
          v67 = *(_QWORD *)(a2 + 192);
          v68 = *(unsigned int *)(v67 + 8);
          if ((_DWORD)v68)
          {
            v69 = v67 + 16;
            while ((sub_22EA9E244(a1, v69) & 1) != 0)
            {
              v69 += 32;
              if (!--v68)
                goto LABEL_108;
            }
            return 0;
          }
LABEL_108:
          result = sub_22EA9EAA8(a1, a2);
          if (!(_DWORD)result)
            return result;
          result = sub_22EA9E35C(a1, a2 + 64);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v71 = *v70;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v73 = *(_QWORD *)v72 + 8 * *(unsigned int *)(v72 + 8);
            }
            else
            {
              v73 = 0;
            }
            if (v71 != (uint64_t *)v73)
            {
              while ((sub_22EA9E3F8(a1, *v71) & 1) != 0)
              {
                if (++v71 == (uint64_t *)v73)
                  return 1;
              }
              return 0;
            }
          }
          return 1;
        }
      }
      return 0;
    case 38:
      v402 = *(_QWORD *)(a2 + 48);
      if (v402)
      {
        result = sub_22EA9DC10(a1, v402 & 0xFFFFFFFFFFFFFFF0);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22EA9D038(a1, a2);
      if (!(_DWORD)result)
        return result;
      v403 = *(_QWORD *)(a2 + 72);
      if (v403 >= 8 && (*(_QWORD *)(a2 + 72) & 6) != 2)
      {
        v404 = (unint64_t *)(v403 & 0xFFFFFFFFFFFFFFF8);
        if ((*(_QWORD *)(a2 + 72) & 6) == 4 && v404)
          v404 = (unint64_t *)v404[1];
        result = sub_22EA9D4A8(a1, *v404, (uint64_t)(v404 + 1));
        if (!(_DWORD)result)
          return result;
      }
      if ((v405 = *(_DWORD *)v4 & 0x7F, v405 <= 0x39) && ((1 << v405) & 0x3F0003E01011066) != 0
        || v405 - 70 <= 0xD && ((1 << (v405 - 70)) & 0x2803) != 0
        || v405 - 19 <= 4)
      {
        v406 = sub_22EFCAE04(a2);
      }
      else
      {
        v406 = 0;
      }
      result = sub_22EA9E35C(a1, v406);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v408 = *v407;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v410 = *(_QWORD *)v409 + 8 * *(unsigned int *)(v409 + 8);
      }
      else
      {
        v410 = 0;
      }
      if (v408 == (uint64_t *)v410)
        return 1;
      while ((sub_22EA9E3F8(a1, *v408) & 1) != 0)
      {
        if (++v408 == (uint64_t *)v410)
          return 1;
      }
      return 0;
    case 39:
      return (sub_22EA9D198(a1, a2) & 1) != 0;
    case 40:
      v176 = *(_QWORD *)(a2 + 80);
      v177 = (unint64_t *)(v176 & 0xFFFFFFFFFFFFFFF8);
      if ((v176 & 4) != 0)
        v177 = (unint64_t *)*v177;
      result = sub_22EA9D4A8(a1, *v177, (uint64_t)(v177 + 1));
      if (!(_DWORD)result)
        return result;
      if ((v178 = *(_DWORD *)v4 & 0x7F, v178 <= 0x39) && ((1 << v178) & 0x3F0003E01011066) != 0
        || v178 - 70 <= 0xD && ((1 << (v178 - 70)) & 0x2803) != 0
        || v178 - 19 <= 4)
      {
        v179 = sub_22EFCAE04(a2);
      }
      else
      {
        v179 = 0;
      }
      result = sub_22EA9E35C(a1, v179);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v181 = *v180;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v183 = *(_QWORD *)v182 + 8 * *(unsigned int *)(v182 + 8);
      }
      else
      {
        v183 = 0;
      }
      if (v181 == (uint64_t *)v183)
        return 1;
      while ((sub_22EA9E3F8(a1, *v181) & 1) != 0)
      {
        if (++v181 == (uint64_t *)v183)
          return 1;
      }
      return 0;
    case 41:
      v267 = *(_QWORD *)(a2 + 80);
      v268 = (unint64_t *)(v267 & 0xFFFFFFFFFFFFFFF8);
      if ((v267 & 4) != 0)
        v268 = (unint64_t *)*v268;
      result = sub_22EA9D4A8(a1, *v268, (uint64_t)(v268 + 1));
      if (!(_DWORD)result)
        return result;
      if ((v269 = *(_DWORD *)v4 & 0x7F, v269 <= 0x39) && ((1 << v269) & 0x3F0003E01011066) != 0
        || v269 - 70 <= 0xD && ((1 << (v269 - 70)) & 0x2803) != 0
        || v269 - 19 <= 4)
      {
        v270 = sub_22EFCAE04(a2);
      }
      else
      {
        v270 = 0;
      }
      result = sub_22EA9E35C(a1, v270);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v272 = *v271;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v274 = *(_QWORD *)v273 + 8 * *(unsigned int *)(v273 + 8);
      }
      else
      {
        v274 = 0;
      }
      if (v272 == (uint64_t *)v274)
        return 1;
      while ((sub_22EA9E3F8(a1, *v272) & 1) != 0)
      {
        if (++v272 == (uint64_t *)v274)
          return 1;
      }
      return 0;
    case 42:
      result = sub_22EA9D368(a1, *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80));
      if (!(_DWORD)result)
        return result;
      v373 = *(_DWORD *)v4 & 0x7F;
      v374 = v373 > 0x39 || ((1 << v373) & 0x3F0003E01011066) == 0;
      v375 = !v374 || v373 - 70 <= 0xD && ((1 << (v373 - 70)) & 0x2803) != 0 || v373 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v375);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v377 = *v376;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v379 = *(_QWORD *)v378 + 8 * *(unsigned int *)(v378 + 8);
      }
      else
      {
        v379 = 0;
      }
      if (v377 == (uint64_t *)v379)
        return 1;
      while ((sub_22EA9E3F8(a1, *v377) & 1) != 0)
      {
        if (++v377 == (uint64_t *)v379)
          return 1;
      }
      return 0;
    case 43:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v41 = *v40;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v43 = *(_QWORD *)v42 + 8 * *(unsigned int *)(v42 + 8);
      }
      else
      {
        v43 = 0;
      }
      if (v41 == (uint64_t *)v43)
        return 1;
      while ((sub_22EA9E3F8(a1, *v41) & 1) != 0)
      {
        if (++v41 == (uint64_t *)v43)
          return 1;
      }
      return 0;
    case 44:
      result = sub_22EA9D368(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64));
      if (!(_DWORD)result)
        return result;
      v133 = *(_DWORD *)v4 & 0x7F;
      v134 = v133 > 0x39 || ((1 << v133) & 0x3F0003E01011066) == 0;
      v135 = !v134 || v133 - 70 <= 0xD && ((1 << (v133 - 70)) & 0x2803) != 0 || v133 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v135);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v137 = *v136;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v139 = *(_QWORD *)v138 + 8 * *(unsigned int *)(v138 + 8);
      }
      else
      {
        v139 = 0;
      }
      if (v137 == (uint64_t *)v139)
        return 1;
      while ((sub_22EA9E3F8(a1, *v137) & 1) != 0)
      {
        if (++v137 == (uint64_t *)v139)
          return 1;
      }
      return 0;
    case 45:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v351 = *v350;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v353 = *(_QWORD *)v352 + 8 * *(unsigned int *)(v352 + 8);
      }
      else
      {
        v353 = 0;
      }
      if (v351 == (uint64_t *)v353)
        return 1;
      while ((sub_22EA9E3F8(a1, *v351) & 1) != 0)
      {
        if (++v351 == (uint64_t *)v353)
          return 1;
      }
      return 0;
    case 46:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v435 = *v434;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v437 = *(_QWORD *)v436 + 8 * *(unsigned int *)(v436 + 8);
      }
      else
      {
        v437 = 0;
      }
      if (v435 == (uint64_t *)v437)
        return 1;
      while ((sub_22EA9E3F8(a1, *v435) & 1) != 0)
      {
        if (++v435 == (uint64_t *)v437)
          return 1;
      }
      return 0;
    case 47:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v79 = *v78;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v81 = *(_QWORD *)v80 + 8 * *(unsigned int *)(v80 + 8);
      }
      else
      {
        v81 = 0;
      }
      if (v79 == (uint64_t *)v81)
        return 1;
      while ((sub_22EA9E3F8(a1, *v79) & 1) != 0)
      {
        if (++v79 == (uint64_t *)v81)
          return 1;
      }
      return 0;
    case 48:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v150 = *v149;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v152 = *(_QWORD *)v151 + 8 * *(unsigned int *)(v151 + 8);
      }
      else
      {
        v152 = 0;
      }
      if (v150 == (uint64_t *)v152)
        return 1;
      while ((sub_22EA9E3F8(a1, *v150) & 1) != 0)
      {
        if (++v150 == (uint64_t *)v152)
          return 1;
      }
      return 0;
    case 49:
      result = sub_22EA9EB20(a1, a2);
      if (!(_DWORD)result)
        return result;
      v171 = *(_QWORD *)(a2 + 72);
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v515 = v171 & 0xFFFFFFFFFFFFFFFCLL;
        v516 = *(_QWORD *)(a2 + 72) & 3;
        if ((_DWORD)v516 && (_DWORD)v516 != 3)
          v515 = *(_QWORD *)(v515 + 8);
        if ((sub_22EA8D918(a1, v515, 0) & 1) == 0)
          return 0;
      }
      else if ((v171 & 3) != 0 && (v171 & 3) != 3)
      {
        result = sub_22EA8D918(a1, v171 & 0xFFFFFFFFFFFFFFFCLL, 0);
        if (!(_DWORD)result)
          return result;
      }
      v517 = *(_DWORD *)v4 & 0x7F;
      if (v517 <= 0x39 && ((1 << v517) & 0x3F0003E01011066) != 0
        || v517 - 70 <= 0xD && ((1 << (v517 - 70)) & 0x2803) != 0
        || v517 - 19 <= 4)
      {
        v518 = sub_22EFCAE04(a2);
      }
      else
      {
        v518 = 0;
      }
      result = sub_22EA9E35C(a1, v518);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v520 = *v519;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v522 = *(_QWORD *)v521 + 8 * *(unsigned int *)(v521 + 8);
        }
        else
        {
          v522 = 0;
        }
        for (; v520 != (uint64_t *)v522; ++v520)
        {
          if ((sub_22EA9E3F8(a1, *v520) & 1) == 0)
            return 0;
        }
      }
      return 1;
    case 50:
      result = sub_22EA9EB20(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v33 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3)
          v33 = *(_QWORD *)(v33 + 8);
        result = sub_22EA8D918(a1, v33, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v34 = *(_DWORD *)v4 & 0x7F, v34 <= 0x39) && ((1 << v34) & 0x3F0003E01011066) != 0
        || (v34 - 70 <= 0xD ? (v542 = ((1 << (v34 - 70)) & 0x2803) == 0) : (v542 = 1), !v542 || v34 - 19 <= 4))
      {
        v35 = sub_22EFCAE04(a2);
      }
      else
      {
        v35 = 0;
      }
      result = sub_22EA9E35C(a1, v35);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v37 = *v36;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v39 = *(_QWORD *)v38 + 8 * *(unsigned int *)(v38 + 8);
      }
      else
      {
        v39 = 0;
      }
      if (v37 == (uint64_t *)v39)
        return 1;
      while ((sub_22EA9E3F8(a1, *v37) & 1) != 0)
      {
        if (++v37 == (uint64_t *)v39)
          return 1;
      }
      return 0;
    case 51:
      result = sub_22EA9EB20(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v450 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3)
          v450 = *(_QWORD *)(v450 + 8);
        result = sub_22EA8D918(a1, v450, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v451 = *(_DWORD *)v4 & 0x7F, v451 <= 0x39) && ((1 << v451) & 0x3F0003E01011066) != 0
        || (v451 - 70 <= 0xD ? (v543 = ((1 << (v451 - 70)) & 0x2803) == 0) : (v543 = 1), !v543 || v451 - 19 <= 4))
      {
        v452 = sub_22EFCAE04(a2);
      }
      else
      {
        v452 = 0;
      }
      result = sub_22EA9E35C(a1, v452);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v454 = *v453;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v456 = *(_QWORD *)v455 + 8 * *(unsigned int *)(v455 + 8);
      }
      else
      {
        v456 = 0;
      }
      if (v454 == (uint64_t *)v456)
        return 1;
      while ((sub_22EA9E3F8(a1, *v454) & 1) != 0)
      {
        if (++v454 == (uint64_t *)v456)
          return 1;
      }
      return 0;
    case 52:
      result = sub_22EA9EBEC(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v431 = *v430;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v433 = *(_QWORD *)v432 + 8 * *(unsigned int *)(v432 + 8);
      }
      else
      {
        v433 = 0;
      }
      if (v431 == (uint64_t *)v433)
        return 1;
      while ((sub_22EA9E3F8(a1, *v431) & 1) != 0)
      {
        if (++v431 == (uint64_t *)v433)
          return 1;
      }
      return 0;
    case 53:
      result = sub_22EA9EBEC(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v75 = *v74;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v77 = *(_QWORD *)v76 + 8 * *(unsigned int *)(v76 + 8);
      }
      else
      {
        v77 = 0;
      }
      if (v75 == (uint64_t *)v77)
        return 1;
      while ((sub_22EA9E3F8(a1, *v75) & 1) != 0)
      {
        if (++v75 == (uint64_t *)v77)
          return 1;
      }
      return 0;
    case 54:
      result = sub_22EA9EBEC(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v419 = *v418;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v421 = *(_QWORD *)v420 + 8 * *(unsigned int *)(v420 + 8);
      }
      else
      {
        v421 = 0;
      }
      if (v419 == (uint64_t *)v421)
        return 1;
      while ((sub_22EA9E3F8(a1, *v419) & 1) != 0)
      {
        if (++v419 == (uint64_t *)v421)
          return 1;
      }
      return 0;
    case 55:
      result = sub_22EA9EBEC(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v427 = *v426;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v429 = *(_QWORD *)v428 + 8 * *(unsigned int *)(v428 + 8);
      }
      else
      {
        v429 = 0;
      }
      if (v427 == (uint64_t *)v429)
        return 1;
      while ((sub_22EA9E3F8(a1, *v427) & 1) != 0)
      {
        if (++v427 == (uint64_t *)v429)
          return 1;
      }
      return 0;
    case 56:
      result = sub_22EA9EBEC(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v83 = *v82;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v85 = *(_QWORD *)v84 + 8 * *(unsigned int *)(v84 + 8);
      }
      else
      {
        v85 = 0;
      }
      if (v83 == (uint64_t *)v85)
        return 1;
      while ((sub_22EA9E3F8(a1, *v83) & 1) != 0)
      {
        if (++v83 == (uint64_t *)v85)
          return 1;
      }
      return 0;
    case 57:
      result = sub_22EA9EBEC(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v370 = *v369;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v372 = *(_QWORD *)v371 + 8 * *(unsigned int *)(v371 + 8);
      }
      else
      {
        v372 = 0;
      }
      if (v370 == (uint64_t *)v372)
        return 1;
      while ((sub_22EA9E3F8(a1, *v370) & 1) != 0)
      {
        if (++v370 == (uint64_t *)v372)
          return 1;
      }
      return 0;
    case 58:
      result = sub_22EA9EB20(a1, a2);
      if (!(_DWORD)result)
        return result;
      v153 = *(_DWORD *)v4 & 0x7F;
      v154 = v153 > 0x39 || ((1 << v153) & 0x3F0003E01011066) == 0;
      v155 = !v154 || v153 - 70 <= 0xD && ((1 << (v153 - 70)) & 0x2803) != 0 || v153 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v155);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v157 = *v156;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v159 = *(_QWORD *)v158 + 8 * *(unsigned int *)(v158 + 8);
      }
      else
      {
        v159 = 0;
      }
      if (v157 == (uint64_t *)v159)
        return 1;
      while ((sub_22EA9E3F8(a1, *v157) & 1) != 0)
      {
        if (++v157 == (uint64_t *)v159)
          return 1;
      }
      return 0;
    case 59:
      result = sub_22EA9EB20(a1, a2);
      if (!(_DWORD)result)
        return result;
      v380 = *(_QWORD *)(a2 + 72);
      if (v380 >= 4 && (*(_QWORD *)(a2 + 72) & 3) != 1)
      {
        v381 = v380 & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_QWORD *)(a2 + 72) & 3) == 2 && v381)
          v381 = *(_QWORD *)(v381 + 8);
        result = sub_22EA8D918(a1, v381, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v382 = *(_DWORD *)v4 & 0x7F, v382 <= 0x39) && ((1 << v382) & 0x3F0003E01011066) != 0
        || v382 - 70 <= 0xD && ((1 << (v382 - 70)) & 0x2803) != 0
        || v382 - 19 <= 4)
      {
        v383 = sub_22EFCAE04(a2);
      }
      else
      {
        v383 = 0;
      }
      result = sub_22EA9E35C(a1, v383);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v385 = *v384;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v387 = *(_QWORD *)v386 + 8 * *(unsigned int *)(v386 + 8);
      }
      else
      {
        v387 = 0;
      }
      if (v385 == (uint64_t *)v387)
        return 1;
      while ((sub_22EA9E3F8(a1, *v385) & 1) != 0)
      {
        if (++v385 == (uint64_t *)v387)
          return 1;
      }
      return 0;
    case 60:
      result = sub_22EA9EFB0(a1, a2);
      if (!(_DWORD)result)
        return result;
      v184 = *(_DWORD *)v4 & 0x7F;
      v185 = v184 > 0x39 || ((1 << v184) & 0x3F0003E01011066) == 0;
      v186 = !v185 || v184 - 70 <= 0xD && ((1 << (v184 - 70)) & 0x2803) != 0 || v184 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v186);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v188 = *v187;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v190 = *(_QWORD *)v189 + 8 * *(unsigned int *)(v189 + 8);
      }
      else
      {
        v190 = 0;
      }
      if (v188 == (uint64_t *)v190)
        return 1;
      while ((sub_22EA9E3F8(a1, *v188) & 1) != 0)
      {
        if (++v188 == (uint64_t *)v190)
          return 1;
      }
      return 0;
    case 61:
      result = sub_22EA9EFB0(a1, a2);
      if (!(_DWORD)result)
        return result;
      v287 = *(unsigned int *)(a2 + 100);
      if (!(_DWORD)v287)
        goto LABEL_514;
      v288 = a2 + 104;
      v289 = 8 * v287;
      while ((sub_22EA991B0(a1) & 1) != 0)
      {
        v288 += 8;
        v289 -= 8;
        if (!v289)
        {
LABEL_514:
          v290 = *(_DWORD *)v4 & 0x7F;
          v291 = v290 > 0x39 || ((1 << v290) & 0x3F0003E01011066) == 0;
          if (v291
            && (v290 - 70 <= 0xD ? (v545 = ((1 << (v290 - 70)) & 0x2803) == 0) : (v545 = 1), v545 && v290 - 19 > 4))
          {
            v292 = 0;
          }
          else
          {
            v292 = sub_22EFCAE04(a2);
          }
          result = sub_22EA9E35C(a1, v292);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v294 = *v293;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v296 = *(_QWORD *)v295 + 8 * *(unsigned int *)(v295 + 8);
          }
          else
          {
            v296 = 0;
          }
          if (v294 == (uint64_t *)v296)
            return 1;
          while ((sub_22EA9E3F8(a1, *v294) & 1) != 0)
          {
            if (++v294 == (uint64_t *)v296)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 62:
      result = sub_22EA9EFB0(a1, a2);
      if (!(_DWORD)result)
        return result;
      v305 = *(_DWORD *)v4 & 0x7F;
      v306 = v305 > 0x39 || ((1 << v305) & 0x3F0003E01011066) == 0;
      v307 = !v306 || v305 - 70 <= 0xD && ((1 << (v305 - 70)) & 0x2803) != 0 || v305 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v307);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v309 = *v308;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v311 = *(_QWORD *)v310 + 8 * *(unsigned int *)(v310 + 8);
      }
      else
      {
        v311 = 0;
      }
      if (v309 == (uint64_t *)v311)
        return 1;
      while ((sub_22EA9E3F8(a1, *v309) & 1) != 0)
      {
        if (++v309 == (uint64_t *)v311)
          return 1;
      }
      return 0;
    case 63:
      result = sub_22EA9EFB0(a1, a2);
      if (!(_DWORD)result)
        return result;
      v224 = *(_DWORD *)v4 & 0x7F;
      v225 = v224 > 0x39 || ((1 << v224) & 0x3F0003E01011066) == 0;
      v226 = !v225 || v224 - 70 <= 0xD && ((1 << (v224 - 70)) & 0x2803) != 0 || v224 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v226);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v228 = *v227;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v230 = *(_QWORD *)v229 + 8 * *(unsigned int *)(v229 + 8);
      }
      else
      {
        v230 = 0;
      }
      if (v228 == (uint64_t *)v230)
        return 1;
      while ((sub_22EA9E3F8(a1, *v228) & 1) != 0)
      {
        if (++v228 == (uint64_t *)v230)
          return 1;
      }
      return 0;
    case 64:
      result = sub_22EA9EFB0(a1, a2);
      if (!(_DWORD)result)
        return result;
      v191 = *(_DWORD *)(a2 + 96) & 0x600;
      if (v191 != 1024)
        goto LABEL_343;
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 88) & 0xFFFFFFFFFFFFFFF8, 0);
      if (!(_DWORD)result)
        return result;
      v191 = *(_DWORD *)(a2 + 96) & 0x600;
LABEL_343:
      if (v191 != 1024 && v191 != 512 && *(_QWORD *)(a2 + 88) >= 8uLL)
      {
        v192 = sub_22EFBC5B4(a2);
        v193 = v192;
        if (v192 && (*(_BYTE *)v192 & 0xFE) == 0xAC)
          v193 = *(_QWORD *)(v192 + 16);
        result = sub_22EA8D918(a1, v193, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v194 = *(_DWORD *)v4 & 0x7F, v194 <= 0x39) && ((1 << v194) & 0x3F0003E01011066) != 0
        || v194 - 70 <= 0xD && ((1 << (v194 - 70)) & 0x2803) != 0
        || v194 - 19 <= 4)
      {
        v195 = sub_22EFCAE04(a2);
      }
      else
      {
        v195 = 0;
      }
      result = sub_22EA9E35C(a1, v195);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v197 = *v196;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v199 = *(_QWORD *)v198 + 8 * *(unsigned int *)(v198 + 8);
      }
      else
      {
        v199 = 0;
      }
      if (v197 == (uint64_t *)v199)
        return 1;
      while ((sub_22EA9E3F8(a1, *v197) & 1) != 0)
      {
        if (++v197 == (uint64_t *)v199)
          return 1;
      }
      return 0;
    case 65:
      v301 = *(unint64_t ***)(a2 + 120);
      if (v301)
      {
        if (*v301)
        {
          result = sub_22EA9D4A8(a1, **v301, (uint64_t)(*v301 + 1));
          if (!(_DWORD)result)
            return result;
        }
      }
      v302 = *(_QWORD *)(a2 + 56);
      if ((v302 & 4) != 0)
      {
        v493 = (uint64_t *)(v302 & 0xFFFFFFFFFFFFFFF8);
        v303 = *v493;
        v304 = v493[1];
      }
      else
      {
        v303 = 0;
        v304 = 0;
      }
      result = sub_22EA9D368(a1, v303, v304);
      if (!(_DWORD)result)
        return result;
      if (sub_22EFBC2B0(a2) != 2)
        return 1;
      v494 = *(_DWORD *)v4 & 0x7F;
      if (v494 <= 0x39 && ((1 << v494) & 0x3F0003E01011066) != 0
        || v494 - 70 <= 0xD && ((1 << (v494 - 70)) & 0x2803) != 0
        || v494 - 19 <= 4)
      {
        v495 = sub_22EFCAE04(a2);
      }
      else
      {
        v495 = 0;
      }
      result = sub_22EA9E35C(a1, v495);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v497 = *v496;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v499 = *(_QWORD *)v498 + 8 * *(unsigned int *)(v498 + 8);
      }
      else
      {
        v499 = 0;
      }
      if (v497 == (uint64_t *)v499)
        return 1;
      while ((sub_22EA9E3F8(a1, *v497) & 1) != 0)
      {
        if (++v497 == (uint64_t *)v499)
          return 1;
      }
      return 0;
    case 66:
      v44 = *(_QWORD *)(a2 + 424);
      if (!v44)
        goto LABEL_68;
      v45 = *(_DWORD *)(v44 + 12) & 0x1FFFFFFF;
      if (!(_DWORD)v45)
        goto LABEL_68;
      v46 = v44 + 16;
      v47 = 8 * v45;
      while ((sub_22EA991B0(a1) & 1) != 0)
      {
        v46 += 8;
        v47 -= 8;
        if (!v47)
        {
LABEL_68:
          v48 = *(_QWORD *)(a2 + 432);
          v49 = *(unsigned int *)(v48 + 8);
          if ((_DWORD)v49)
          {
            v50 = v48 + 16;
            while ((sub_22EA9E244(a1, v50) & 1) != 0)
            {
              v50 += 32;
              if (!--v49)
                goto LABEL_72;
            }
          }
          else
          {
LABEL_72:
            result = sub_22EA9EFB0(a1, a2);
            if (!(_DWORD)result)
              return result;
            v51 = *(_DWORD *)v4 & 0x7F;
            v52 = v51 > 0x39 || ((1 << v51) & 0x3F0003E01011066) == 0;
            if (v52
              && (v51 - 70 <= 0xD ? (v546 = ((1 << (v51 - 70)) & 0x2803) == 0) : (v546 = 1), v546 && v51 - 19 > 4))
            {
              v53 = 0;
            }
            else
            {
              v53 = sub_22EFCAE04(a2);
            }
            result = sub_22EA9E35C(a1, v53);
            if (!(_DWORD)result)
              return result;
            if ((*(_BYTE *)(v4 + 1) & 1) == 0)
              return 1;
            sub_22EFC8E88(a2);
            v55 = *v54;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v57 = *(_QWORD *)v56 + 8 * *(unsigned int *)(v56 + 8);
            }
            else
            {
              v57 = 0;
            }
            if (v55 == (uint64_t *)v57)
              return 1;
            while ((sub_22EA9E3F8(a1, *v55) & 1) != 0)
            {
              if (++v55 == (uint64_t *)v57)
                return 1;
            }
          }
          return 0;
        }
      }
      return 0;
    case 67:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 56), 0);
      if (!(_DWORD)result)
        return result;
      v126 = *(_DWORD *)v4 & 0x7F;
      v127 = v126 > 0x39 || ((1 << v126) & 0x3F0003E01011066) == 0;
      v128 = !v127 || v126 - 70 <= 0xD && ((1 << (v126 - 70)) & 0x2803) != 0 || v126 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22EA9E35C(a1, v128);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v130 = *v129;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v132 = *(_QWORD *)v131 + 8 * *(unsigned int *)(v131 + 8);
      }
      else
      {
        v132 = 0;
      }
      if (v130 == (uint64_t *)v132)
        return 1;
      while ((sub_22EA9E3F8(a1, *v130) & 1) != 0)
      {
        if (++v130 == (uint64_t *)v132)
          return 1;
      }
      return 0;
    case 68:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v462 = *v461;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v464 = *(_QWORD *)v463 + 8 * *(unsigned int *)(v463 + 8);
      }
      else
      {
        v464 = 0;
      }
      if (v462 == (uint64_t *)v464)
        return 1;
      while ((sub_22EA9E3F8(a1, *v462) & 1) != 0)
      {
        if (++v462 == (uint64_t *)v464)
          return 1;
      }
      return 0;
    case 69:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v109 = *v108;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v111 = *(_QWORD *)v110 + 8 * *(unsigned int *)(v110 + 8);
      }
      else
      {
        v111 = 0;
      }
      if (v109 == (uint64_t *)v111)
        return 1;
      while ((sub_22EA9E3F8(a1, *v109) & 1) != 0)
      {
        if (++v109 == (uint64_t *)v111)
          return 1;
      }
      return 0;
    case 70:
      v21 = *(_DWORD **)(a2 + 56);
      v24 = *v21;
      v23 = (uint64_t *)(v21 + 4);
      v22 = v24;
      if (!v24)
        return (sub_22EA9DC10(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      v25 = 8 * v22;
      while ((sub_22EA9F010(a1, *v23) & 1) != 0)
      {
        ++v23;
        v25 -= 8;
        if (!v25)
          return (sub_22EA9DC10(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      }
      return 0;
    case 71:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 88), 0);
      if ((_DWORD)result)
      {
        v62 = *(_QWORD *)(a2 + 96);
        if (!v62)
          return (sub_22EA9DC10(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
        result = sub_22EA8D918(a1, v62, 0);
        if ((_DWORD)result)
          return (sub_22EA9DC10(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      }
      return result;
    case 72:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v423 = *v422;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v425 = *(_QWORD *)v424 + 8 * *(unsigned int *)(v424 + 8);
      }
      else
      {
        v425 = 0;
      }
      if (v423 == (uint64_t *)v425)
        return 1;
      while ((sub_22EA9E3F8(a1, *v423) & 1) != 0)
      {
        if (++v423 == (uint64_t *)v425)
          return 1;
      }
      return 0;
    case 73:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v439 = *v438;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v441 = *(_QWORD *)v440 + 8 * *(unsigned int *)(v440 + 8);
      }
      else
      {
        v441 = 0;
      }
      if (v439 == (uint64_t *)v441)
        return 1;
      while ((sub_22EA9E3F8(a1, *v439) & 1) != 0)
      {
        if (++v439 == (uint64_t *)v441)
          return 1;
      }
      return 0;
    case 74:
      if (!sub_22EA9D368(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v442 = *(_DWORD *)(a2 + 24);
      v443 = *(_QWORD *)(a2 + 80);
      v558 = *(_QWORD *)(a2 + 40);
      v559 = v442;
      v560 = v443;
      if (!sub_22EA9D3F0(a1, &v558))
        return 0;
      if ((v444 = *(_DWORD *)v4 & 0x7F, v444 <= 0x39) && ((1 << v444) & 0x3F0003E01011066) != 0
        || v444 - 70 <= 0xD && ((1 << (v444 - 70)) & 0x2803) != 0
        || v444 - 19 <= 4)
      {
        v445 = sub_22EFCAE04(a2);
      }
      else
      {
        v445 = 0;
      }
      if (!sub_22EA9E35C(a1, v445))
        return 0;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v447 = *v446;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v449 = *(_QWORD *)v448 + 8 * *(unsigned int *)(v448 + 8);
      }
      else
      {
        v449 = 0;
      }
      while (2)
      {
        if (v447 == (uint64_t *)v449)
          return 1;
        if ((sub_22EA9E3F8(a1, *v447) & 1) != 0)
        {
          ++v447;
          continue;
        }
        break;
      }
      return 0;
    case 75:
      v86 = *(unsigned int **)(a2 + 40);
      v87 = *v86;
      v88 = v86[1];
      if (!(_DWORD)v88)
        goto LABEL_146;
      v89 = &v86[2 * v87 + 4];
      v90 = 8 * v88;
      while ((sub_22EA8D918(a1, *(_QWORD *)v89, 0) & 1) != 0)
      {
        v89 += 2;
        v90 -= 8;
        if (!v90)
        {
          v86 = *(unsigned int **)(a2 + 40);
          v87 = *v86;
LABEL_146:
          if ((_DWORD)v87)
          {
            v91 = (uint64_t *)(v86 + 4);
            v92 = 8 * v87;
            while ((sub_22EA9F010(a1, *v91) & 1) != 0)
            {
              ++v91;
              v92 -= 8;
              if (!v92)
                goto LABEL_150;
            }
          }
          else
          {
LABEL_150:
            v93 = *(_DWORD *)v4 & 0x7F;
            v94 = v93 > 0x39 || ((1 << v93) & 0x3F0003E01011066) == 0;
            if (v94
              && (v93 - 70 <= 0xD ? (v540 = ((1 << (v93 - 70)) & 0x2803) == 0) : (v540 = 1), v540 && v93 - 19 > 4))
            {
              v95 = 0;
            }
            else
            {
              v95 = sub_22EFCAE04(a2);
            }
            result = sub_22EA9E35C(a1, v95);
            if (!(_DWORD)result)
              return result;
            if ((*(_BYTE *)(v4 + 1) & 1) == 0)
              return 1;
            sub_22EFC8E88(a2);
            v97 = *v96;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v99 = *(_QWORD *)v98 + 8 * *(unsigned int *)(v98 + 8);
            }
            else
            {
              v99 = 0;
            }
            if (v97 == (uint64_t *)v99)
              return 1;
            while ((sub_22EA9E3F8(a1, *v97) & 1) != 0)
            {
              if (++v97 == (uint64_t *)v99)
                return 1;
            }
          }
          return 0;
        }
      }
      return 0;
    case 76:
      v275 = *(_DWORD **)(a2 + 40);
      v278 = *v275;
      v277 = (uint64_t *)(v275 + 4);
      v276 = v278;
      if (!v278)
        goto LABEL_1013;
      v279 = 8 * v276;
      while ((sub_22EA9F010(a1, *v277) & 1) != 0)
      {
        ++v277;
        v279 -= 8;
        if (!v279)
        {
          v280 = *(_DWORD *)v4 & 0x7F;
          v281 = v280 > 0x39 || ((1 << v280) & 0x3F0003E01011066) == 0;
          if (v281
            && (v280 - 70 <= 0xD ? (v539 = ((1 << (v280 - 70)) & 0x2803) == 0) : (v539 = 1), v539 && v280 - 19 > 4))
          {
LABEL_1013:
            v282 = 0;
          }
          else
          {
            v282 = sub_22EFCAE04(a2);
          }
          result = sub_22EA9E35C(a1, v282);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v549 = *v548;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v551 = *(_QWORD *)v550 + 8 * *(unsigned int *)(v550 + 8);
          }
          else
          {
            v551 = 0;
          }
          if (v549 == (uint64_t *)v551)
            return 1;
          while ((sub_22EA9E3F8(a1, *v549) & 1) != 0)
          {
            if (++v549 == (uint64_t *)v551)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 77:
      v26 = *(unsigned int **)(a2 + 40);
      v27 = v26[1];
      if (!(_DWORD)v27)
        goto LABEL_998;
      v28 = &v26[2 * *v26 + 4];
      v29 = 8 * v27;
      while ((sub_22EA8D918(a1, *(_QWORD *)v28, 0) & 1) != 0)
      {
        v28 += 2;
        v29 -= 8;
        if (!v29)
        {
          v30 = *(_DWORD *)v4 & 0x7F;
          v31 = v30 > 0x39 || ((1 << v30) & 0x3F0003E01011066) == 0;
          if (v31 && (v30 - 70 <= 0xD ? (v534 = ((1 << (v30 - 70)) & 0x2803) == 0) : (v534 = 1), v534 && v30 - 19 > 4))
LABEL_998:
            v32 = 0;
          else
            v32 = sub_22EFCAE04(a2);
          result = sub_22EA9E35C(a1, v32);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v536 = *v535;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v538 = *(_QWORD *)v537 + 8 * *(unsigned int *)(v537 + 8);
          }
          else
          {
            v538 = 0;
          }
          if (v536 == (uint64_t *)v538)
            return 1;
          while ((sub_22EA9E3F8(a1, *v536) & 1) != 0)
          {
            if (++v536 == (uint64_t *)v538)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 78:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v458 = *v457;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v460 = *(_QWORD *)v459 + 8 * *(unsigned int *)(v459 + 8);
      }
      else
      {
        v460 = 0;
      }
      if (v458 == (uint64_t *)v460)
        return 1;
      while ((sub_22EA9E3F8(a1, *v458) & 1) != 0)
      {
        if (++v458 == (uint64_t *)v460)
          return 1;
      }
      return 0;
    case 79:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v18 = *v17;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v20 = *(_QWORD *)v19 + 8 * *(unsigned int *)(v19 + 8);
      }
      else
      {
        v20 = 0;
      }
      if (v18 == (uint64_t *)v20)
        return 1;
      while ((sub_22EA9E3F8(a1, *v18) & 1) != 0)
      {
        if (++v18 == (uint64_t *)v20)
          return 1;
      }
      return 0;
    case 80:
      result = sub_22EA9E35C(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v59 = *v58;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v61 = *(_QWORD *)v60 + 8 * *(unsigned int *)(v60 + 8);
      }
      else
      {
        v61 = 0;
      }
      if (v59 == (uint64_t *)v61)
        return 1;
      while ((sub_22EA9E3F8(a1, *v59) & 1) != 0)
      {
        if (++v59 == (uint64_t *)v61)
          return 1;
      }
      return 0;
    case 81:
      v166 = sub_22EFCAE04(a2);
      result = sub_22EA9E35C(a1, v166);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v168 = *v167;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v170 = *(_QWORD *)v169 + 8 * *(unsigned int *)(v169 + 8);
      }
      else
      {
        v170 = 0;
      }
      if (v168 == (uint64_t *)v170)
        return 1;
      while ((sub_22EA9E3F8(a1, *v168) & 1) != 0)
      {
        if (++v168 == (uint64_t *)v170)
          return 1;
      }
      return 0;
    case 82:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFFCLL, 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 48), 0);
      if (!(_DWORD)result)
        return result;
      if ((v160 = *(_DWORD *)v4 & 0x7F, v160 <= 0x39) && ((1 << v160) & 0x3F0003E01011066) != 0
        || v160 - 70 <= 0xD && ((1 << (v160 - 70)) & 0x2803) != 0
        || v160 - 19 <= 4)
      {
        v161 = sub_22EFCAE04(a2);
      }
      else
      {
        v161 = 0;
      }
      result = sub_22EA9E35C(a1, v161);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v163 = *v162;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v165 = *(_QWORD *)v164 + 8 * *(unsigned int *)(v164 + 8);
      }
      else
      {
        v165 = 0;
      }
      if (v163 == (uint64_t *)v165)
        return 1;
      break;
    case 83:
      v11 = *(_QWORD *)(a2 + 88);
      v12 = *(_BYTE **)(v11 + 19016);
      v13 = *(_BYTE **)(v11 + 19024);
      v14 = v13 - v12;
      if (v13 == v12)
      {
        v15 = 0;
        v16 = 0;
      }
      else
      {
        if (v14 < 0)
          abort();
        v15 = (char *)operator new(v13 - v12);
        memmove(v15, v12, v14);
        v16 = &v15[8 * (v14 >> 3)];
      }
      if (v16 - v15 == 8 && (*(_DWORD *)(*(_QWORD *)v15 + 28) & 0x7F) == 0x53)
      {
        operator delete(v15);
        result = sub_22EA9E35C(a1, a2 + 40);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        if (v15 != v16)
        {
          v500 = v15;
          do
          {
            if ((*(_DWORD *)(*(_QWORD *)v500 + 28) & 0x7Fu) - 1 >= 2
              && ((*(_DWORD *)(*(_QWORD *)v500 + 28) & 0x7Fu) - 35 > 2
               || (v501 = *(_QWORD *)(*(_QWORD *)v500 + 128)) == 0
               || ((*(unsigned __int16 *)(v501 + 8) | (*(unsigned __int8 *)(v501 + 10) << 16)) & 0x100000) == 0)
              && !sub_22EA991B0(a1))
            {
              if (v15)
                operator delete(v15);
              return 0;
            }
            v500 += 8;
          }
          while (v500 != v16);
        }
        if (v15)
          operator delete(v15);
      }
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v503 = *v502;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v505 = *(_QWORD *)v504 + 8 * *(unsigned int *)(v504 + 8);
        }
        else
        {
          v505 = 0;
        }
        for (; v503 != (uint64_t *)v505; ++v503)
        {
          if ((sub_22EA9E3F8(a1, *v503) & 1) == 0)
            return 0;
        }
      }
      return 1;
    default:
      return 1;
  }
  while ((sub_22EA9E3F8(a1, *v163) & 1) != 0)
  {
    if (++v163 == (uint64_t *)v165)
      return 1;
  }
  return 0;
}

uint64_t sub_22EA9D038(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((*(_BYTE *)(a2 + 60) & 4) != 0)
  {
    if (*(_QWORD *)(a2 + 152))
    {
      if ((sub_22EA8D918(a1, *(_QWORD *)(a2 + 152), 0) & 1) == 0)
        return 0;
    }
    else
    {
      result = sub_22EA9D2C8(a1, a2 + 80);
      if (!(_DWORD)result)
        return result;
    }
  }
  return 1;
}

uint64_t sub_22EA9D080(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 40), 0);
  if ((_DWORD)result)
  {
    v5 = *(_DWORD *)(a2 + 28) & 0x7F;
    v6 = v5 > 0x39 || ((1 << v5) & 0x3F0003E01011066) == 0;
    if (v6 && (v5 - 70 <= 0xD ? (v8 = ((1 << (v5 - 70)) & 0x2803) == 0) : (v8 = 1), v8 && v5 - 19 > 4))
      v7 = 0;
    else
      v7 = sub_22EFCAE04(a2);
    result = sub_22EA9E35C(a1, v7);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v10 = *v9;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v12 = *(_QWORD *)v11 + 8 * *(unsigned int *)(v11 + 8);
      }
      else
      {
        v12 = 0;
      }
      if (v10 == v12)
      {
        return 1;
      }
      else
      {
        v13 = v10 + 8;
        do
        {
          result = sub_22EA9E3F8(a1, *(_QWORD *)(v13 - 8));
          if ((_DWORD)result)
            v14 = v13 == v12;
          else
            v14 = 1;
          v13 += 8;
        }
        while (!v14);
      }
    }
  }
  return result;
}

uint64_t sub_22EA9D198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  uint64_t result;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  if (!*(_DWORD *)(a2 + 96))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 80);
  v5 = (unint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (unint64_t *)*v5;
  result = sub_22EA9D4A8(a1, *v5, (uint64_t)(v5 + 1));
  if ((_DWORD)result)
  {
LABEL_5:
    v7 = *(_DWORD *)(a2 + 28) & 0x7F;
    v8 = v7 > 0x39 || ((1 << v7) & 0x3F0003E01011066) == 0;
    if (v8 && (v7 - 70 <= 0xD ? (v10 = ((1 << (v7 - 70)) & 0x2803) == 0) : (v10 = 1), v10 && v7 - 19 > 4))
      v9 = 0;
    else
      v9 = sub_22EFCAE04(a2);
    result = sub_22EA9E35C(a1, v9);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v12 = *v11;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v14 = *(_QWORD *)v13 + 8 * *(unsigned int *)(v13 + 8);
      }
      else
      {
        v14 = 0;
      }
      if (v12 == v14)
      {
        return 1;
      }
      else
      {
        v15 = v12 + 8;
        do
        {
          result = sub_22EA9E3F8(a1, *(_QWORD *)(v15 - 8));
          if ((_DWORD)result)
            v16 = v15 == v14;
          else
            v16 = 1;
          v15 += 8;
        }
        while (!v16);
      }
    }
  }
  return result;
}

uint64_t sub_22EA9D2C8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  __int128 v11;
  uint64_t v12;

  result = sub_22EA9D368(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  if ((_DWORD)result)
  {
    v11 = *(_OWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 40);
    result = sub_22EA9D3F0(a1, (uint64_t *)&v11);
    if ((_DWORD)result)
    {
      v5 = *(_QWORD *)(a2 + 64);
      if (v5 && (v6 = *(unsigned int *)(v5 + 8), (_DWORD)v6))
      {
        v7 = v5 + 16;
        v8 = v6 - 1;
        do
        {
          result = sub_22EA9E244(a1, v7);
          v10 = v8-- != 0;
          if (!(_DWORD)result)
            break;
          v7 += 32;
        }
        while (v10);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_22EA9D368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a2;
  v9[1] = a3;
  if (!a2)
    return 1;
  v5 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v5 || (result = sub_22EA9D368(a1, v5, a3), (_DWORD)result))
  {
    if (*(_QWORD *)(a2 + 16) && (*(_BYTE *)(a2 + 8) & 4) != 0)
    {
      v7 = sub_22F0AB4E0((uint64_t)v9);
      return sub_22EA9D4A8(a1, v7, v8);
    }
    return 1;
  }
  return result;
}

uint64_t sub_22EA9D3F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  int v9;
  unint64_t v10;

  v2 = *a2;
  v3 = *a2 & 7;
  v4 = v3;
  if ((_DWORD)v3 == 7)
  {
    v5 = *(_DWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
    if (v5 >= 3)
      v5 = 3;
    v4 = v5 | 8;
  }
  if ((v4 - 3) < 3)
  {
    if ((v3 - 3) <= 2)
    {
      v6 = (_QWORD *)a2[2];
      if (v6)
      {
        if ((sub_22EA9D4A8(a1, *v6, v6 + 1) & 1) == 0)
          return 0;
      }
    }
    return 1;
  }
  if (v4 != 8)
    return 1;
  if ((~(_BYTE)v2 & 7) != 0)
    goto LABEL_15;
  v8 = v2 & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_DWORD *)v8;
  if (*(_DWORD *)v8 >= 3u)
    v9 = 3;
  if (v9)
LABEL_15:
    v10 = 0;
  else
    v10 = *(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFFF9;
  result = sub_22EA9E180(a1, v10);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22EA9D4A8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v10;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  uint64_t v53;
  unint64_t *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  char v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;

  if (a2)
  {
    v4 = a2;
    do
    {
      v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      if ((v4 & 0xF) != 0)
      {
LABEL_4:
        if ((v6 & 0xFFFFFFFFFFFFFFF0) != 0)
          v7 = *(_QWORD *)((char *)&unk_22F47E170
                         + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
        else
          v7 = 1;
        a3 = (a3 + v7 - 1) & -v7;
        v4 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      }
      else
      {
        result = 1;
        switch(*(_BYTE *)(v6 + 16))
        {
          case 0:
          case 1:
          case 0x16:
          case 0x17:
          case 0x36:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47E170
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 - 1;
            goto LABEL_62;
          case 2:
          case 3:
          case 4:
          case 5:
            v21 = *(_QWORD *)(v4 + 32);
            if (v21 >= 0x10 && (*(_QWORD *)(v4 + 32) & 0xFLL) == 0)
              v73 = *(_QWORD *)((char *)&unk_22F47E170
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v73 = 1;
            result = sub_22EA9D4A8(a1, v21, (a3 + v73 + 15) & -v73);
            if (!(_DWORD)result)
              return result;
            v23 = *(_QWORD *)(a3 + 8);
            return sub_22EA8D918(a1, v23, 0);
          case 6:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47E170
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 11;
            goto LABEL_62;
          case 7:
          case 0x25:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47E170
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 7;
            goto LABEL_62;
          case 8:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47E170
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = v20 + a3;
            goto LABEL_62;
          case 0xA:
          case 0x20:
          case 0x24:
          case 0x26:
          case 0x27:
          case 0x28:
          case 0x29:
            v4 = *(_QWORD *)(v4 + 32);
            goto LABEL_9;
          case 0xC:
          case 0x37:
          case 0x38:
            goto LABEL_76;
          case 0xD:
          case 0x30:
            v23 = *(_QWORD *)(v4 + 24);
            return sub_22EA8D918(a1, v23, 0);
          case 0xE:
            result = sub_22EA9DC10(a1, *(_QWORD *)(v4 + 24));
            if (!(_DWORD)result)
              return result;
            if (!*(_QWORD *)(v4 + 40))
              return 1;
            result = sub_22EA9D368(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 16));
            if (!(_DWORD)result)
              return result;
            v25 = *(_DWORD *)(a3 + 28);
            v74 = *(_QWORD *)(*(_QWORD *)(v4 + 40) + 40);
            v75 = v25;
            sub_22EFC6D6C((uint64_t)&v76, v74);
            result = sub_22EA9D3F0(a1, &v74);
            if (!(_DWORD)result)
              return result;
            v26 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v26)
              return 1;
            v27 = v4 + 48;
            v28 = (uint64_t *)(a3 + 56);
            v29 = v26 - 1;
            do
            {
              v30 = *v28++;
              v77 = *(_OWORD *)v27;
              v78 = *(_QWORD *)(v27 + 16);
              v79 = v30;
              result = sub_22EA9E244(a1, (uint64_t)&v77);
              v31 = v29-- != 0;
              v32 = v31;
              if (!(_DWORD)result)
                break;
              v27 += 24;
            }
            while ((v32 & 1) != 0);
            return result;
          case 0xF:
            result = sub_22EA9E180(a1, *(_QWORD *)(v4 + 40));
            if (!(_DWORD)result)
              return result;
            v24 = *(_QWORD *)(v4 + 24);
            return sub_22EA9DC10(a1, v24);
          case 0x10:
            v33 = *(_QWORD *)(v4 + 40);
            goto LABEL_96;
          case 0x11:
            v23 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
            return sub_22EA8D918(a1, v23, 0);
          case 0x12:
            return sub_22EA9D368(a1, *(_QWORD *)(v4 + 32), *(_QWORD *)(a3 + 8));
          case 0x13:
            v33 = *(_QWORD *)(v4 + 40);
            if (!v33)
              goto LABEL_97;
LABEL_96:
            result = sub_22EA8D918(a1, v33, 0);
            if (!(_DWORD)result)
              return result;
LABEL_97:
            v24 = *(_QWORD *)(v4 + 48);
            return sub_22EA9DC10(a1, v24);
          case 0x14:
            v34 = *(_QWORD *)(a3 + 8);
            if (v34)
            {
              v35 = *(_QWORD *)(v4 + 32);
              if (v35)
              {
                result = sub_22EA9D368(a1, v35, v34);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v36 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v36)
              return 1;
            v37 = v4 + 48;
            v38 = (uint64_t *)(a3 + 32);
            v39 = v36 - 1;
            do
            {
              v40 = *v38++;
              v77 = *(_OWORD *)v37;
              v78 = *(_QWORD *)(v37 + 16);
              v79 = v40;
              result = sub_22EA9E244(a1, (uint64_t)&v77);
              v31 = v39-- != 0;
              v41 = v31;
              if (!(_DWORD)result)
                break;
              v37 += 24;
            }
            while ((v41 & 1) != 0);
            return result;
          case 0x15:
            v42 = *(_QWORD *)(v4 + 48);
            if (v42)
            {
              result = sub_22EA8D918(a1, v42, 0);
              if (!(_DWORD)result)
                return result;
            }
            v24 = *(_QWORD *)(v4 + 40);
            return sub_22EA9DC10(a1, v24);
          case 0x18:
            v17 = *(_QWORD *)(v4 + 32);
            if (v17)
            {
              result = sub_22EA9D368(a1, v17, *(_QWORD *)(a3 + 8));
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 40);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              goto LABEL_60;
            v20 = 1;
            goto LABEL_61;
          case 0x19:
            *(_QWORD *)&v77 = v4;
            *((_QWORD *)&v77 + 1) = a3;
            v43 = *(_QWORD *)(v4 + 24);
            v44 = sub_22E47EE80(&v77);
            return sub_22EA9D4A8(a1, v43, v44);
          case 0x1A:
            *(_QWORD *)&v77 = v4;
            *((_QWORD *)&v77 + 1) = a3;
            v45 = *(_QWORD *)(v4 + 24);
            v46 = sub_22E47EE80(&v77);
            result = sub_22EA9D4A8(a1, v45, v46);
            if (!(_DWORD)result)
              return result;
            v47 = v77;
            v48 = *(_QWORD *)(v77 + 16);
            if (*(_BYTE *)(v77 + 16) == 25 || (v48 & 0x3FFFC000000000) == 0)
              goto LABEL_126;
            v50 = 0;
            v51 = (unsigned __int16)(v48 >> 38);
            do
            {
              if (*(_QWORD *)(*((_QWORD *)&v77 + 1) + 8 * v50 + 16))
              {
                if ((sub_22EA991B0(a1) & 1) == 0)
                  return 0;
              }
              else if (v50 < (unsigned __int16)(*(_QWORD *)(v47 + 16) >> 38))
              {
                result = sub_22EA9DC10(a1, *(_QWORD *)(v47 + 40 + 8 * v50));
                if (!(_DWORD)result)
                  return result;
              }
              ++v50;
            }
            while (v51 != v50);
            v48 = *(_QWORD *)(v47 + 16);
LABEL_126:
            if ((v48 & 0x3C0000000000000) == 0x80000000000000)
            {
              v52 = (_DWORD *)((v47 + 8 * (unsigned __int16)(v48 >> 38) + 4 * ((v48 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
              v55 = *v52;
              v54 = (unint64_t *)(v52 + 2);
              v53 = v55;
              if (v55)
              {
                v56 = 8 * v53;
                while ((sub_22EA9DC10(a1, *v54) & 1) != 0)
                {
                  ++v54;
                  v56 -= 8;
                  if (!v56)
                    goto LABEL_131;
                }
                return 0;
              }
            }
LABEL_131:
            v57 = sub_22F257D3C(v47);
            if (!v57)
              return 1;
            result = sub_22EA8D918(a1, v57, 0);
            if ((_DWORD)result)
              return 1;
            return result;
          case 0x1C:
            v4 = *(_QWORD *)(v4 + 24);
LABEL_9:
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F47E170
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 3;
            goto LABEL_62;
          case 0x1D:
          case 0x1E:
            result = sub_22EA8D918(a1, *(_QWORD *)(a3 + 16), 0);
            if (!(_DWORD)result)
              return result;
            result = sub_22EA8D918(a1, *(_QWORD *)(a3 + 24), 0);
            if (!(_DWORD)result)
              return result;
LABEL_76:
            v24 = *(_QWORD *)(v4 + 32);
            return sub_22EA9DC10(a1, v24);
          case 0x1F:
            v19 = *(_QWORD **)(a3 + 8);
            if (v19)
            {
              if ((sub_22EA9D4A8(a1, *v19, v19 + 1) & 1) == 0)
                return 0;
            }
            else
            {
              result = sub_22EA9DC10(a1, *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0);
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 32);
            v20 = 1;
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
LABEL_60:
              v20 = *(_QWORD *)((char *)&unk_22F47E170
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
LABEL_61:
            v10 = a3 + v20 + 15;
LABEL_62:
            a3 = v10 & -v20;
            break;
          case 0x21:
            v58 = *(_QWORD *)(v4 + 24);
            v59 = *(_QWORD *)(v58 & 0xFFFFFFFFFFFFFFF0);
            if (v59 != v4)
            {
              v60 = 1;
              if (v58 >= 0x10 && (v58 & 0xF) == 0)
                v60 = *(_QWORD *)((char *)&unk_22F47E170
                                + ((uint64_t)((unint64_t)*(unsigned int *)(v59 + 16) << 56) >> 53));
              result = sub_22EA9D4A8(a1, v58, (a3+ (((HIWORD(*(_DWORD *)(v4 + 16)) & 0x3F8) + 4 * (*(_DWORD *)(v4 + 16) >> 26) + 31) & 0x7F8)+ v60- 1) & -v60);
              if (!(_DWORD)result)
                return result;
            }
            v61 = (*(_DWORD *)(v4 + 16) >> 19) & 0x7F;
            if (!(_DWORD)v61)
              return 1;
            v62 = (_QWORD *)(a3 + 24);
            v63 = v61 - 1;
            do
            {
              v64 = (_QWORD *)*v62++;
              result = sub_22EA9D4A8(a1, *v64, v64 + 1);
              v31 = v63-- != 0;
              v65 = v31;
            }
            while ((_DWORD)result && (v65 & 1) != 0);
            return result;
          case 0x2A:
            v66 = *(_DWORD *)(v4 + 20);
            *((_QWORD *)&v77 + 1) = *(_QWORD *)(v4 + 40);
            LODWORD(v77) = 8;
            DWORD1(v77) = v66;
            return sub_22EA9E0B4(a1, (uint64_t)&v77);
          case 0x2B:
            v24 = *(_QWORD *)(v4 + 8);
            return sub_22EA9DC10(a1, v24);
          case 0x2E:
            result = sub_22EA9E180(a1, *(_QWORD *)(v4 + 32));
            if (!(_DWORD)result)
              return result;
            v67 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v67)
              return 1;
            v68 = v4 + 40;
            v69 = (uint64_t *)(a3 + 16);
            v70 = v67 - 1;
            do
            {
              v71 = *v69++;
              v77 = *(_OWORD *)v68;
              v78 = *(_QWORD *)(v68 + 16);
              v79 = v71;
              result = sub_22EA9E244(a1, (uint64_t)&v77);
              v31 = v70-- != 0;
              v72 = v31;
              if (!(_DWORD)result)
                break;
              v68 += 24;
            }
            while ((v72 & 1) != 0);
            return result;
          case 0x31:
          case 0x33:
            v13 = *(unint64_t **)(a3 + 16);
            v14 = *v13;
            a3 = (uint64_t)(v13 + 1);
            v4 = v14;
            break;
          case 0x39:
            goto LABEL_4;
          default:
            return result;
        }
      }
    }
    while (v4);
  }
  return 1;
}

uint64_t sub_22EA9DC10(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _DWORD v45[2];
  uint64_t v46;

  if (a2 < 0x10)
    return 1;
  while (2)
  {
    v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    v5 = *(_DWORD *)(v4 + 16);
    result = 1;
    switch((char)v5)
    {
      case 0:
      case 1:
      case 4:
      case 6:
      case 7:
      case 8:
      case 10:
      case 12:
      case 29:
      case 32:
      case 36:
      case 37:
      case 38:
      case 39:
      case 54:
      case 55:
      case 56:
        goto LABEL_5;
      case 2:
        result = sub_22EA9DC10(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        if ((*(_BYTE *)(v4 + 19) & 2) == 0)
          return 1;
        v14 = *(_QWORD *)(v4 + 56);
        if (!v14)
          return 1;
        goto LABEL_49;
      case 3:
        result = sub_22EA9DC10(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v14 = *(_QWORD *)(v4 + 48);
        if (v14)
          goto LABEL_49;
        return 1;
      case 5:
        result = sub_22EA9DC10(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v13 = *(_QWORD *)(v4 + 40);
        return sub_22EA8D918(a1, v13, 0);
      case 13:
      case 48:
        v13 = *(_QWORD *)(v4 + 24);
        return sub_22EA8D918(a1, v13, 0);
      case 14:
        result = sub_22EA9DC10(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        if (!*(_QWORD *)(v4 + 40))
          return 1;
        result = sub_22EA991B0(a1);
        if (!(_DWORD)result)
          return result;
        v15 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v15)
          return 1;
        v16 = v4 + 48;
        v17 = v15 - 1;
        do
        {
          result = sub_22EA9E0B4(a1, v16);
          v18 = v17-- != 0;
          v19 = v18;
          if (!(_DWORD)result)
            break;
          v16 += 24;
        }
        while ((v19 & 1) != 0);
        return result;
      case 15:
        result = sub_22EA9E180(a1, *(_QWORD *)(v4 + 40));
        if ((_DWORD)result)
          goto LABEL_19;
        return result;
      case 16:
        v7 = *(_QWORD *)(v4 + 40);
        goto LABEL_22;
      case 17:
        v13 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
        return sub_22EA8D918(a1, v13, 0);
      case 18:
        return sub_22EA9E1E0(a1, *(_QWORD *)(v4 + 32));
      case 19:
        v7 = *(_QWORD *)(v4 + 40);
        if (!v7)
          goto LABEL_23;
LABEL_22:
        result = sub_22EA8D918(a1, v7, 0);
        if (!(_DWORD)result)
          return result;
LABEL_23:
        v6 = (unint64_t *)(v4 + 48);
        goto LABEL_6;
      case 20:
        result = sub_22EA9E1E0(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v20 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v20)
          return 1;
        v21 = v4 + 48;
        v22 = v20 - 1;
        do
        {
          result = sub_22EA9E0B4(a1, v21);
          v18 = v22-- != 0;
          v23 = v18;
          if (!(_DWORD)result)
            break;
          v21 += 24;
        }
        while ((v23 & 1) != 0);
        return result;
      case 21:
        v8 = *(_QWORD *)(v4 + 48);
        if (v8)
        {
          result = sub_22EA8D918(a1, v8, 0);
          if (!(_DWORD)result)
            return result;
        }
        goto LABEL_31;
      case 22:
        goto LABEL_34;
      case 23:
        v9 = *(_QWORD *)(v4 + 64);
        if (!v9)
          goto LABEL_5;
        goto LABEL_35;
      case 24:
        v10 = *(_QWORD *)(v4 + 32);
        if (v10)
        {
          result = sub_22EA9E1E0(a1, v10);
          if (!(_DWORD)result)
            return result;
        }
LABEL_31:
        v6 = (unint64_t *)(v4 + 40);
        goto LABEL_6;
      case 25:
      case 28:
      case 49:
LABEL_19:
        v6 = (unint64_t *)(v4 + 24);
        goto LABEL_6;
      case 26:
        result = sub_22EA9DC10(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        v24 = *(_QWORD *)(v4 + 16);
        v25 = (unsigned __int16)(v24 >> 38);
        if (!(unsigned __int16)(v24 >> 38))
          goto LABEL_82;
        v26 = 8 * v25;
        v27 = (_QWORD *)(v4 + 40);
        break;
      case 30:
        v11 = *(_QWORD *)(v4 + 48);
        if (v11)
        {
          result = sub_22EA8D918(a1, v11, 0);
          if (!(_DWORD)result)
            return result;
        }
LABEL_34:
        v9 = *(_QWORD *)(v4 + 56);
        if (!v9)
          goto LABEL_5;
LABEL_35:
        result = sub_22EA8D918(a1, v9, 0);
        if (!(_DWORD)result)
          return result;
LABEL_5:
        v6 = (unint64_t *)(v4 + 32);
LABEL_6:
        a2 = *v6;
        if (*v6 < 0x10)
          return 1;
        continue;
      case 31:
        v12 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_40;
      case 33:
        v34 = *(_QWORD *)(v4 + 24);
        if (*(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF0) != v4)
        {
          result = sub_22EA9DC10(a1, v34);
          if (!(_DWORD)result)
            return result;
        }
        v35 = (*(_QWORD *)(v4 + 16) >> 19) & 0x7FLL;
        if (!v35)
          return 1;
        v36 = (uint64_t *)(v4 + 48);
        v37 = 8 * v35 - 8;
        do
        {
          v38 = *v36++;
          result = sub_22EA9DC10(a1, v38);
          if ((_DWORD)result)
            v39 = v37 == 0;
          else
            v39 = 1;
          v37 -= 8;
        }
        while (!v39);
        return result;
      case 40:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 41:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 42:
        v40 = *(_DWORD *)(v4 + 20);
        v46 = *(_QWORD *)(v4 + 40);
        v45[0] = 8;
        v45[1] = v40;
        return sub_22EA9E0B4(a1, (uint64_t)v45);
      case 43:
        v6 = (unint64_t *)(v4 + 8);
        goto LABEL_6;
      case 46:
        result = sub_22EA9E180(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v41 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v41)
          return 1;
        v42 = v4 + 40;
        v43 = v41 - 1;
        do
        {
          result = sub_22EA9E0B4(a1, v42);
          v18 = v43-- != 0;
          v44 = v18;
          if (!(_DWORD)result)
            break;
          v42 += 24;
        }
        while ((v44 & 1) != 0);
        return result;
      case 51:
        v12 = *(_QWORD *)(v4 + 24);
LABEL_40:
        result = sub_22EA9DC10(a1, v12);
        if (!(_DWORD)result)
          return result;
        goto LABEL_5;
      default:
        return result;
    }
    break;
  }
  do
  {
    if ((sub_22EA9DC10(a1, *v27) & 1) == 0)
      return 0;
    ++v27;
    v26 -= 8;
  }
  while (v26);
  v24 = *(_QWORD *)(v4 + 16);
  v25 = (unsigned __int16)(v24 >> 38);
LABEL_82:
  if ((v24 & 0x3C0000000000000) == 0x80000000000000)
  {
    v28 = (_DWORD *)((v4 + 40 + 8 * v25 + 4 * ((v24 >> 59) & 1) + 7) & 0xFFFFFFFFFFFFFFF8);
    v31 = *v28;
    v30 = v28 + 2;
    v29 = v31;
    if (v31)
    {
      v32 = 8 * v29;
      while ((sub_22EA9DC10(a1, *v30) & 1) != 0)
      {
        ++v30;
        v32 -= 8;
        if (!v32)
          goto LABEL_87;
      }
      return 0;
    }
  }
LABEL_87:
  v33 = sub_22F257D3C(v4);
  if (!v33)
    return 1;
  v14 = v33;
LABEL_49:
  result = sub_22EA8D918(a1, v14, 0);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22EA9E0B4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      result = sub_22EA9DC10(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      result = sub_22EA9E180(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 8), 0);
      break;
    case 8:
      v4 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v4)
      {
        v5 = *(_QWORD *)(a2 + 8);
        v6 = v4 - 1;
        do
        {
          result = sub_22EA9E0B4(a1, v5);
          v8 = v6-- != 0;
          if (!(_DWORD)result)
            break;
          v5 += 24;
        }
        while (v8);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EA9E180(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  char v5;

  v2 = a2 & 0xFFFFFFFFFFFFFFF8;
  if ((a2 & 6) != 6 || v2 == 0)
  {
    if ((a2 & 6) != 4)
      return 1;
    if (!v2)
      return 1;
    result = sub_22EA9E1E0(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    if ((_DWORD)result)
      return 1;
  }
  else
  {
    v5 = sub_22EA9E1E0(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    return (v5 & 1) != 0;
  }
  return result;
}

uint64_t sub_22EA9E1E0(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 1;
  v4 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v4 || (result = sub_22EA9E1E0(a1, v4), (_DWORD)result))
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 && (*(_BYTE *)(a2 + 8) & 4) != 0)
      return sub_22EA9DC10(a1, v6 & 0xFFFFFFFFFFFFFFF0);
    return 1;
  }
  return result;
}

uint64_t sub_22EA9E244(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      v6 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (v6)
        result = sub_22EA9D4A8(a1, *v6, v6 + 1);
      else
        result = sub_22EA9DC10(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      v5 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (!*v5 || (result = sub_22EA9D368(a1, *v5, v5[1]), (_DWORD)result))
        result = sub_22EA9E180(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL, 0);
      break;
    case 8:
      v7 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        v9 = v7 - 1;
        do
        {
          result = sub_22EA9E0B4(a1, v8);
          v11 = v9-- != 0;
          if (!(_DWORD)result)
            break;
          v8 += 24;
        }
        while (v11);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22EA9E35C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (!a2)
    return 1;
  if ((*(_WORD *)(a2 + 8) & 0x80) != 0)
    sub_22EFCC320(a2);
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 1;
  while (1)
  {
    if ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 1 >= 2
      && ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 > 2
       || (v5 = *(_QWORD *)(v4 + 128)) == 0
       || ((*(unsigned __int16 *)(v5 + 8) | (*(unsigned __int8 *)(v5 + 10) << 16)) & 0x100000) == 0))
    {
      result = sub_22EA991B0(a1);
      if (!(_DWORD)result)
        break;
    }
    v4 = *(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v4)
      return 1;
  }
  return result;
}

uint64_t sub_22EA9E3F8(uint64_t a1, uint64_t a2)
{
  if (a2)
    __asm { BR              X10 }
  return 1;
}

void sub_22EA9E47C()
{
  uint64_t v0;
  uint64_t v1;

  if (sub_22EA8D918(v0, *(_QWORD *)(v1 + 40), 0))
    JUMPOUT(0x22EA9E438);
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v2 = *(unsigned int *)(v1 + 48);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2;
    while ((sub_22EA8D918(v0, *v3, 0) & 1) != 0)
    {
      ++v3;
      v4 -= 8;
      if (!v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v5 = *(unsigned int *)(v1 + 64);
    if (!(_DWORD)v5)
      JUMPOUT(0x22EA9E468);
    v6 = *(uint64_t **)(v1 + 72);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22EA8D918(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E5D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EA8D918(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EA9E468);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E6C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if (sub_22EA8D918(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 56);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 64);
      v4 = 8 * v2;
      do
      {
        if ((sub_22EA8D918(v0, *v3, 0) & 1) == 0)
          JUMPOUT(0x22EA9E5C8);
        ++v3;
        v4 -= 8;
      }
      while (v4);
    }
    v5 = *(unsigned int *)(v1 + 72);
    if (!(_DWORD)v5)
      JUMPOUT(0x22EA9E468);
    v6 = *(uint64_t **)(v1 + 80);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22EA8D918(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EA8D918(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EA9E468);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22EA8D918(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22EA9E468);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22EA8D918(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22EA9E46CLL);
}

void sub_22EA9E880()
{
  JUMPOUT(0x22EA9E454);
}

void sub_22EA9E888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  if (sub_22EA8D918(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 56);
      v4 = 8 * v2;
      while ((sub_22EA8D918(v0, *v3, 0) & 1) != 0)
      {
        ++v3;
        v4 -= 8;
        if (!v4)
          goto LABEL_6;
      }
LABEL_33:
      JUMPOUT(0x22EA9E5C8);
    }
LABEL_6:
    v5 = *(unsigned int *)(v1 + 64);
    if ((_DWORD)v5)
    {
      v6 = *(uint64_t **)(v1 + 72);
      v7 = 8 * v5;
      while ((sub_22EA8D918(v0, *v6, 0) & 1) != 0)
      {
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_10;
      }
      goto LABEL_33;
    }
LABEL_10:
    v8 = *(unsigned int *)(v1 + 80);
    if ((_DWORD)v8)
    {
      v9 = *(uint64_t **)(v1 + 88);
      v10 = 8 * v8;
      while ((sub_22EA8D918(v0, *v9, 0) & 1) != 0)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_14;
      }
      goto LABEL_33;
    }
LABEL_14:
    v11 = *(unsigned int *)(v1 + 96);
    if ((_DWORD)v11)
    {
      v12 = *(uint64_t **)(v1 + 104);
      v13 = 8 * v11;
      while ((sub_22EA8D918(v0, *v12, 0) & 1) != 0)
      {
        ++v12;
        v13 -= 8;
        if (!v13)
          goto LABEL_18;
      }
      goto LABEL_33;
    }
LABEL_18:
    v14 = *(unsigned int *)(v1 + 128);
    if (!(_DWORD)v14)
      JUMPOUT(0x22EA9E468);
    v15 = *(uint64_t **)(v1 + 136);
    v16 = 8 * v14 - 8;
    do
    {
      v17 = *v15++;
      if (sub_22EA8D918(v0, v17, 0))
        v18 = v16 == 0;
      else
        v18 = 1;
      v16 -= 8;
    }
    while (!v18);
  }
  JUMPOUT(0x22EA9E46CLL);
}

uint64_t sub_22EA9E994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (!a2)
    return 1;
  v4 = a2 + 16;
  v5 = *(_DWORD *)(a2 + 12);
  if ((v5 & 0x1FFFFFFF) != 0)
  {
    v6 = 8 * (v5 & 0x1FFFFFFF);
    v7 = a2 + 16;
    while ((sub_22EA991B0(a1) & 1) != 0)
    {
      v7 += 8;
      v6 -= 8;
      if (!v6)
      {
        v5 = *(_DWORD *)(a2 + 12);
        goto LABEL_7;
      }
    }
    return 0;
  }
  else
  {
LABEL_7:
    if ((v5 & 0x40000000) == 0)
      return 1;
    v8 = *(_QWORD *)(v4 + 8 * (v5 & 0x1FFFFFFF));
    if (!v8)
      return 1;
    result = sub_22EA8D918(a1, v8, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22EA9EA34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 120);
  if ((v3 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v3 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EA9E994(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v3 = *(_QWORD *)(a2 + 120);
      if ((v3 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  return sub_22EA9D368(a1, v7, v8);
}

uint64_t sub_22EA9EAA8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;

  result = sub_22EA9EA34(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_BYTE *)(a2 + 74) & 1) == 0)
      return 1;
    v5 = sub_22E46A3A0(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 24;
      do
      {
        result = sub_22EA9D4A8(a1, **(_QWORD **)(v8 - 8), *(_QWORD *)(v8 - 8) + 8);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 24;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22EA9EB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t *v11;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EA9E994(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22EA9D368(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_QWORD *)(a2 + 56);
    if ((v10 & 4) != 0)
    {
      v11 = *(unint64_t **)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
      if (v11)
        return (sub_22EA9D4A8(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    else if (v10 >= 8)
    {
      v11 = (unint64_t *)(v10 & 0xFFFFFFFFFFFFFFF8);
      return (sub_22EA9D4A8(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    result = sub_22EA9DC10(a1, *(_QWORD *)(a2 + 48));
    if (!(_DWORD)result)
      return result;
    return 1;
  }
  return result;
}

uint64_t sub_22EA9EBEC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  _BOOL4 v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22EA9E994(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22EA9D368(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_DWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 152);
    v38 = *(_QWORD *)(a2 + 40);
    v39 = v10;
    v40 = v11;
    result = sub_22EA9D3F0(a1, &v38);
    if ((_DWORD)result)
    {
      v12 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
      if ((*(_QWORD *)(a2 + 144) & 6) == 4 && v12 != 0 && (*(_BYTE *)(v12 + 16) & 6) != 0)
      {
        v14 = *(_QWORD *)(v12 + 32);
        if (v14)
        {
          v15 = *(unsigned int *)(v14 + 8);
          if ((_DWORD)v15)
          {
            v16 = v14 + 16;
            while ((sub_22EA9E244(a1, v16) & 1) != 0)
            {
              v16 += 32;
              if (!--v15)
                goto LABEL_19;
            }
            return 0;
          }
        }
      }
LABEL_19:
      v17 = *(_QWORD *)(a2 + 56);
      v18 = (unint64_t *)(v17 & 0xFFFFFFFFFFFFFFF8);
      if ((v17 & 4) != 0)
        v18 = (unint64_t *)v18[4];
      if (v18)
      {
        result = sub_22EA9D4A8(a1, *v18, (uint64_t)(v18 + 1));
        if (!(_DWORD)result)
          return result;
        v17 = *(_QWORD *)(a2 + 56);
      }
      if ((v17 & 4) == 0
        || (v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40)) == 0
        || (result = sub_22EA8D918(a1, v19, 0), (_DWORD)result))
      {
        if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
        {
          v20 = sub_22EFD7ED0(a2);
          v21 = sub_22EFD7ED0(a2) + 8 * ((*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL);
          while (v20 != v21)
          {
            v22 = *(_QWORD *)v20;
            if ((*(_WORD *)(*(_QWORD *)v20 + 28) & 4) != 0)
            {
              v23 = (unint64_t *)(*(_QWORD *)v22 & 0xFFFFFFFFFFFFFFF8);
              if ((*(_QWORD *)v22 & 6) != 0 || v23 == 0)
                goto LABEL_37;
              result = sub_22EA9D4A8(a1, *v23, (uint64_t)(v23 + 1));
              if (!(_DWORD)result)
                return result;
              if ((*(_WORD *)(v22 + 28) & 4) != 0)
              {
LABEL_37:
                result = sub_22EA8D918(a1, *(_QWORD *)(v22 + 8), 0);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v20 += 8;
          }
        }
        v25 = sub_22E49F868(a2) && (*(_BYTE *)(a2 + 83) & 2) == 0;
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
          goto LABEL_70;
        v26 = *(_WORD *)(a2 + 80) & 0x7F;
        v27 = -40;
        if (v26 > 0x46)
        {
          if (v26 == 83)
            goto LABEL_60;
          if (v26 == 71)
          {
            v27 = -56;
            goto LABEL_60;
          }
          if (v26 != 81)
          {
LABEL_55:
            v28 = v26 - 52;
            v29 = v26 - 33 >= 5;
            v30 = -48;
            if (!v29)
              v30 = -64;
            if (v28 >= 6)
              v27 = v30;
            else
              v27 = -72;
          }
        }
        else
        {
          if (v26 > 0x18)
            goto LABEL_54;
          if (v26 == 16)
          {
LABEL_46:
            v27 = -48;
            goto LABEL_60;
          }
          if (((1 << v26) & 0x1066) == 0)
          {
            if (v26 == 24)
              goto LABEL_46;
LABEL_54:
            if (v26 == 70)
            {
              v27 = -64;
              goto LABEL_60;
            }
            goto LABEL_55;
          }
        }
LABEL_60:
        v31 = *(_QWORD *)(a2 + 72 + v27 + 16);
        v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
        if ((v31 & 4) != 0)
          v32 = (_QWORD *)*v32;
        if (v32)
        {
          v33 = v32[8];
          if (v33)
          {
            if (((*(unsigned __int16 *)(v33 + 8) | (*(unsigned __int8 *)(v33 + 10) << 16)) & 0x100000) != 0)
            {
              v34 = sub_22EFD462C((unint64_t)(v32 - 8));
              if (v34)
              {
                if ((*(_DWORD *)(v34 + 28) & 0x7F) != 0x1D || (v34 = *(_QWORD *)(v34 + 48)) != 0)
                {
                  if (v34 == a2
                    || (v35 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v34 + 32))(v34),
                        v35 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2)))
                  {
                    if (!v25)
                      return 1;
LABEL_71:
                    v36 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
                    result = sub_22EA8D918(a1, v36, 0);
                    if (!(_DWORD)result)
                      return result;
                    if ((*(_WORD *)(a2 + 80) & 0x80) != 0)
                      sub_22EFCC320(a2 + 72);
                    v37 = *(_QWORD *)(a2 + 88);
                    if (v37)
                    {
                      do
                      {
                        if ((*(_DWORD *)(v37 + 28) & 0x7E) == 0x2E)
                        {
                          result = sub_22EA991B0(a1);
                          if (!(_DWORD)result)
                            break;
                        }
                        result = 1;
                        v37 = *(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF8;
                      }
                      while (v37);
                      return result;
                    }
                    return 1;
                  }
                }
              }
            }
          }
        }
LABEL_70:
        if (!v25)
          return 1;
        goto LABEL_71;
      }
    }
  }
  return result;
}

uint64_t sub_22EA9EFB0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = sub_22EA9EB20(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      return 1;
    if ((*(_BYTE *)(a2 + 97) & 8) != 0)
      return 1;
    v5 = sub_22EFBC5B4(a2);
    result = sub_22EA8D918(a1, v5, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22EA9F010(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *mm;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *i2;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *n;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *ii;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *nn;
  uint64_t v79;
  uint64_t v80;
  _QWORD *i1;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *i;
  uint64_t v92;
  uint64_t v93;
  _QWORD *j;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *jj;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *kk;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *k;
  uint64_t v175;
  uint64_t v176;
  _QWORD *m;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  __int128 v208;
  uint64_t v209;

  if (!a2)
    return 1;
  switch(*(_DWORD *)(a2 + 8))
  {
    case 3:
      v85 = (_QWORD *)(a2 + 24);
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if ((_DWORD)result)
      {
        v86 = *(unsigned int *)(a2 + 16);
        if (!(_DWORD)v86)
          return 1;
        v87 = 8 * v86;
        do
        {
          if ((sub_22EA8D918(a1, *v85, 0) & 1) == 0)
            return 0;
          ++v85;
          v87 -= 8;
        }
        while (v87);
        return 1;
      }
      return result;
    case 4:
    case 7:
    case 0xC:
    case 0x13:
    case 0x15:
    case 0x23:
    case 0x3C:
    case 0x3D:
    case 0x46:
    case 0x4B:
      v5 = *(_QWORD *)(a2 + 16);
      return (sub_22EA8D918(a1, v5, 0) & 1) != 0;
    case 5:
      v137 = (_QWORD *)(a2 + 24);
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if (!(_DWORD)result)
        return result;
      v138 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v138)
        return 1;
      v139 = 8 * v138;
      while ((sub_22EA8D918(a1, *v137, 0) & 1) != 0)
      {
        ++v137;
        v139 -= 8;
        if (!v139)
          return 1;
      }
      return 0;
    case 6:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 24), 0);
      if (!(_DWORD)result)
        return result;
      v134 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v134)
        return 1;
      v135 = (_QWORD *)(a2 + 40);
      v136 = 8 * v134;
      while ((sub_22EA8D918(a1, *v135, 0) & 1) != 0)
      {
        ++v135;
        v136 -= 8;
        if (!v136)
          return 1;
      }
      return 0;
    case 0xE:
      v88 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v88)
        return 1;
      v89 = a2 + 24;
      v90 = 8 * v88;
      for (i = (_QWORD *)(a2 + 24); (sub_22EA8D918(a1, *i, 0) & 1) != 0; ++i)
      {
        v90 -= 8;
        if (!v90)
        {
          v92 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v92)
            return 1;
          v93 = 8 * v92;
          for (j = (_QWORD *)(v89 + 8 * v92); (sub_22EA8D918(a1, *j, 0) & 1) != 0; ++j)
          {
            v93 -= 8;
            if (!v93)
            {
              v95 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v95)
                return 1;
              v96 = (_QWORD *)(v89 + 8 * v95 + 8 * v95);
              v97 = 8 * v95;
              while ((sub_22EA8D918(a1, *v96, 0) & 1) != 0)
              {
                ++v96;
                v97 -= 8;
                if (!v97)
                {
                  v98 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v98)
                    return 1;
                  v99 = (_QWORD *)(v89 + 8 * v98 + 8 * v98 + 8 * v98);
                  v100 = 8 * v98;
                  while ((sub_22EA8D918(a1, *v99, 0) & 1) != 0)
                  {
                    ++v99;
                    v100 -= 8;
                    if (!v100)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0xF:
      v171 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v171)
        return 1;
      v172 = a2 + 24;
      v173 = 8 * v171;
      for (k = (_QWORD *)(a2 + 24); (sub_22EA8D918(a1, *k, 0) & 1) != 0; ++k)
      {
        v173 -= 8;
        if (!v173)
        {
          v175 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v175)
            return 1;
          v176 = 8 * v175;
          for (m = (_QWORD *)(v172 + 8 * v175); (sub_22EA8D918(a1, *m, 0) & 1) != 0; ++m)
          {
            v176 -= 8;
            if (!v176)
            {
              v178 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v178)
                return 1;
              v179 = (_QWORD *)(v172 + 8 * v178 + 8 * v178);
              v180 = 8 * v178;
              while ((sub_22EA8D918(a1, *v179, 0) & 1) != 0)
              {
                ++v179;
                v180 -= 8;
                if (!v180)
                {
                  v181 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v181)
                    return 1;
                  v182 = (_QWORD *)(v172 + 8 * v181 + 8 * v181 + 8 * v181);
                  v183 = 8 * v181;
                  while ((sub_22EA8D918(a1, *v182, 0) & 1) != 0)
                  {
                    ++v182;
                    v183 -= 8;
                    if (!v183)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x12:
      v184 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v184)
        return 1;
      v185 = (_QWORD *)(a2 + 40);
      v186 = 8 * v184;
      while ((sub_22EA8D918(a1, *v185, 0) & 1) != 0)
      {
        ++v185;
        v186 -= 8;
        if (!v186)
          return 1;
      }
      return 0;
    case 0x14:
    case 0x58:
      v5 = *(_QWORD *)(a2 + 24);
      return (sub_22EA8D918(a1, v5, 0) & 1) != 0;
    case 0x16:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 40);
      return (sub_22EA8D918(a1, v5, 0) & 1) != 0;
    case 0x18:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 48);
      return (sub_22EA8D918(a1, v5, 0) & 1) != 0;
    case 0x1A:
      v193 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v193)
        return 1;
      v194 = (_QWORD *)(a2 + 24);
      v195 = 8 * v193;
      while ((sub_22EA8D918(a1, *v194, 0) & 1) != 0)
      {
        ++v194;
        v195 -= 8;
        if (!v195)
          return 1;
      }
      return 0;
    case 0x1B:
    case 0x1C:
    case 0x21:
    case 0x24:
    case 0x34:
    case 0x37:
    case 0x38:
    case 0x39:
    case 0x3A:
    case 0x3E:
    case 0x4E:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 32);
      return (sub_22EA8D918(a1, v5, 0) & 1) != 0;
    case 0x1D:
      v40 = a2 + 40;
      v41 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v41)
        goto LABEL_72;
      v42 = 8 * v41;
      v43 = (_QWORD *)(a2 + 40);
      while ((sub_22EA8D918(a1, *v43, 0) & 1) != 0)
      {
        ++v43;
        v42 -= 8;
        if (!v42)
        {
LABEL_72:
          result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          v44 = *(unsigned int *)(a2 + 16);
          if ((_DWORD)v44)
          {
            v45 = 8 * v44;
            for (n = (_QWORD *)(v40 + 8 * v44); (sub_22EA8D918(a1, *n, 0) & 1) != 0; ++n)
            {
              v45 -= 8;
              if (!v45)
              {
                v47 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v47)
                  return 1;
                v48 = (_QWORD *)(v40 + 8 * v47 + 8 * v47);
                v49 = 8 * v47;
                while ((sub_22EA8D918(a1, *v48, 0) & 1) != 0)
                {
                  ++v48;
                  v49 -= 8;
                  if (!v49)
                    return 1;
                }
                return 0;
              }
            }
            return 0;
          }
          return 1;
        }
      }
      return 0;
    case 0x1E:
      v82 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v82)
        return 1;
      v83 = (_QWORD *)(a2 + 24);
      v84 = 8 * v82;
      while ((sub_22EA8D918(a1, *v83, 0) & 1) != 0)
      {
        ++v83;
        v84 -= 8;
        if (!v84)
          return 1;
      }
      return 0;
    case 0x1F:
      v187 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v187)
        return 1;
      v188 = (_QWORD *)(a2 + 104);
      v189 = 8 * v187;
      while ((sub_22EA8D918(a1, *v188, 0) & 1) != 0)
      {
        ++v188;
        v189 -= 8;
        if (!v189)
          return 1;
      }
      return 0;
    case 0x22:
      v199 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v199)
        return 1;
      v200 = (_QWORD *)(a2 + 80);
      v201 = 8 * v199;
      while ((sub_22EA8D918(a1, *v200, 0) & 1) != 0)
      {
        ++v200;
        v201 -= 8;
        if (!v201)
          return 1;
      }
      return 0;
    case 0x25:
      if (!sub_22EA9D368(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22EA9D3F0(a1, (uint64_t *)&v208))
        return 0;
      v56 = a2 + 96;
      v57 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v57)
        goto LABEL_98;
      v58 = 8 * v57;
      v59 = (_QWORD *)(a2 + 96);
      while ((sub_22EA8D918(a1, *v59, 0) & 1) != 0)
      {
        ++v59;
        v58 -= 8;
        if (!v58)
        {
LABEL_98:
          if (sub_22EA8D918(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EA8D918(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v60 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v60)
              return 1;
            v61 = 8 * v60;
            for (ii = (_QWORD *)(v56 + 8 * v60); (sub_22EA8D918(a1, *ii, 0) & 1) != 0; ++ii)
            {
              v61 -= 8;
              if (!v61)
              {
                v63 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v63)
                  return 1;
                v64 = (_QWORD *)(v56 + 8 * v63 + 8 * v63);
                v65 = 8 * v63;
                while ((sub_22EA8D918(a1, *v64, 0) & 1) != 0)
                {
                  ++v64;
                  v65 -= 8;
                  if (!v65)
                  {
                    v66 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v66)
                      return 1;
                    v67 = (_QWORD *)(v56 + 8 * v66 + 8 * v66 + 8 * v66);
                    v68 = 8 * v66;
                    while ((sub_22EA8D918(a1, *v67, 0) & 1) != 0)
                    {
                      ++v67;
                      v68 -= 8;
                      if (!v68)
                      {
                        v69 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v69)
                          return 1;
                        v70 = (_QWORD *)(v56 + 8 * v69 + 8 * v69 + 8 * v69 + 8 * v69);
                        v71 = 8 * v69;
                        while ((sub_22EA8D918(a1, *v70, 0) & 1) != 0)
                        {
                          ++v70;
                          v71 -= 8;
                          if (!v71)
                          {
                            v72 = *(unsigned int *)(a2 + 16);
                            if (!(_DWORD)v72)
                              return 1;
                            v73 = (_QWORD *)(v56 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72);
                            v74 = 8 * v72;
                            while ((sub_22EA8D918(a1, *v73, 0) & 1) != 0)
                            {
                              ++v73;
                              v74 -= 8;
                              if (!v74)
                                return 1;
                            }
                            return 0;
                          }
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x27:
      v168 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v168)
        return 1;
      v169 = (_QWORD *)(a2 + 24);
      v170 = 8 * v168;
      while ((sub_22EA8D918(a1, *v169, 0) & 1) != 0)
      {
        ++v169;
        v170 -= 8;
        if (!v170)
          return 1;
      }
      return 0;
    case 0x29:
      v53 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v53)
        return 1;
      v54 = (_QWORD *)(a2 + 32);
      v55 = 8 * v53;
      while ((sub_22EA8D918(a1, *v54, 0) & 1) != 0)
      {
        ++v54;
        v55 -= 8;
        if (!v55)
          return 1;
      }
      return 0;
    case 0x2A:
      v50 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v50)
        return 1;
      v51 = (_QWORD *)(a2 + 80);
      v52 = 8 * v50;
      while ((sub_22EA8D918(a1, *v51, 0) & 1) != 0)
      {
        ++v51;
        v52 -= 8;
        if (!v52)
          return 1;
      }
      return 0;
    case 0x2B:
      v101 = a2 + 64;
      v102 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v102)
        goto LABEL_164;
      v103 = 8 * v102;
      v104 = (_QWORD *)(a2 + 64);
      while ((sub_22EA8D918(a1, *v104, 0) & 1) != 0)
      {
        ++v104;
        v103 -= 8;
        if (!v103)
        {
LABEL_164:
          result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v105 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v105)
            return 1;
          v106 = 8 * v105;
          for (jj = (_QWORD *)(v101 + 8 * v105); (sub_22EA8D918(a1, *jj, 0) & 1) != 0; ++jj)
          {
            v106 -= 8;
            if (!v106)
            {
              v108 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v108)
                return 1;
              v109 = (_QWORD *)(v101 + 8 * v108 + 8 * v108);
              v110 = 8 * v108;
              while ((sub_22EA8D918(a1, *v109, 0) & 1) != 0)
              {
                ++v109;
                v110 -= 8;
                if (!v110)
                {
                  v111 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v111)
                    return 1;
                  v112 = (_QWORD *)(v101 + 8 * v111 + 8 * v111 + 8 * v111);
                  v113 = 8 * v111;
                  while ((sub_22EA8D918(a1, *v112, 0) & 1) != 0)
                  {
                    ++v112;
                    v113 -= 8;
                    if (!v113)
                    {
                      v114 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v114)
                        return 1;
                      v115 = (_QWORD *)(v101 + 8 * v114 + 8 * v114 + 8 * v114 + 8 * v114);
                      v116 = 8 * v114;
                      while ((sub_22EA8D918(a1, *v115, 0) & 1) != 0)
                      {
                        ++v115;
                        v116 -= 8;
                        if (!v116)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2C:
      v117 = a2 + 64;
      v118 = *(unsigned int *)(a2 + 16);
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 64 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118), 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22EA8D918(a1, *(_QWORD *)(v117+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8), 0);
      if (!(_DWORD)result)
        return result;
      v119 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v119)
        goto LABEL_191;
      v120 = 8 * v119;
      v121 = (_QWORD *)(a2 + 64);
      while ((sub_22EA8D918(a1, *v121, 0) & 1) != 0)
      {
        ++v121;
        v120 -= 8;
        if (!v120)
        {
LABEL_191:
          result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v122 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v122)
            return 1;
          v123 = 8 * v122;
          for (kk = (_QWORD *)(v117 + 8 * v122); (sub_22EA8D918(a1, *kk, 0) & 1) != 0; ++kk)
          {
            v123 -= 8;
            if (!v123)
            {
              v125 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v125)
                return 1;
              v126 = (_QWORD *)(v117 + 8 * v125 + 8 * v125);
              v127 = 8 * v125;
              while ((sub_22EA8D918(a1, *v126, 0) & 1) != 0)
              {
                ++v126;
                v127 -= 8;
                if (!v127)
                {
                  v128 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v128)
                    return 1;
                  v129 = (_QWORD *)(v117 + 8 * v128 + 8 * v128 + 8 * v128);
                  v130 = 8 * v128;
                  while ((sub_22EA8D918(a1, *v129, 0) & 1) != 0)
                  {
                    ++v129;
                    v130 -= 8;
                    if (!v130)
                    {
                      v131 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v131)
                        return 1;
                      v132 = (_QWORD *)(v117 + 8 * v131 + 8 * v131 + 8 * v131 + 8 * v131);
                      v133 = 8 * v131;
                      while ((sub_22EA8D918(a1, *v132, 0) & 1) != 0)
                      {
                        ++v132;
                        v133 -= 8;
                        if (!v133)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2E:
      v190 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v190)
        return 1;
      v191 = (_QWORD *)(a2 + 136);
      v192 = 8 * v190;
      while ((sub_22EA8D918(a1, *v191, 0) & 1) != 0)
      {
        ++v191;
        v192 -= 8;
        if (!v192)
          return 1;
      }
      return 0;
    case 0x35:
      v6 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v6)
        return 1;
      v7 = a2 + 24;
      v8 = 8 * v6;
      for (mm = (_QWORD *)(a2 + 24); (sub_22EA8D918(a1, *mm, 0) & 1) != 0; ++mm)
      {
        v8 -= 8;
        if (!v8)
        {
          v10 = *(unsigned int *)(a2 + 16);
          v11 = (uint64_t *)(v7 + 8 * v10);
          v208 = (unint64_t)v11;
          if ((_DWORD)v10)
          {
            v12 = 0;
            v13 = &v11[v10];
            while (1)
            {
              if ((v12 & 3) != 0)
              {
                if ((v12 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                  v14 = (_QWORD *)((v12 & 0xFFFFFFFFFFFFFFFCLL) + 40);
                else
                  v14 = (_QWORD *)sub_22F3AC1A8(*v11);
                if ((sub_22EA8D918(a1, *v14, 0) & 1) == 0)
                  return 0;
                if (v12 < 4)
                  sub_22F3F2FE0((uint64_t)&v208, 1);
                else
                  sub_22F0D8720((uint64_t)&v208);
              }
              else
              {
                if (!sub_22EA8D918(a1, *v11, 0))
                  return 0;
                *(_QWORD *)&v208 = v11 + 1;
              }
              v12 = *((_QWORD *)&v208 + 1);
              v11 = (uint64_t *)v208;
              if ((uint64_t *)v208 == v13 && *((_QWORD *)&v208 + 1) == 0)
                return 1;
            }
          }
          return 1;
        }
      }
      return 0;
    case 0x3F:
      v75 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v75)
        return 1;
      v76 = a2 + 24;
      v77 = 8 * v75;
      for (nn = (_QWORD *)(a2 + 24); (sub_22EA8D918(a1, *nn, 0) & 1) != 0; ++nn)
      {
        v77 -= 8;
        if (!v77)
        {
          v79 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v79)
            return 1;
          v80 = 8 * v79;
          for (i1 = (_QWORD *)(v76 + 8 * v79); (sub_22EA8D918(a1, *i1, 0) & 1) != 0; ++i1)
          {
            v80 -= 8;
            if (!v80)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 0x42:
      if (!sub_22EA9D368(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v208 = *(_OWORD *)(a2 + 80);
      v209 = *(_QWORD *)(a2 + 96);
      if (!sub_22EA9D3F0(a1, (uint64_t *)&v208))
        return 0;
      v140 = a2 + 104;
      v141 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v141)
        goto LABEL_228;
      v142 = 8 * v141;
      v143 = (_QWORD *)(a2 + 104);
      while ((sub_22EA8D918(a1, *v143, 0) & 1) != 0)
      {
        ++v143;
        v142 -= 8;
        if (!v142)
        {
LABEL_228:
          if (sub_22EA8D918(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EA8D918(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v144 = *(unsigned int *)(a2 + 16);
            if ((_DWORD)v144)
            {
              v145 = 8 * v144;
              v146 = (_QWORD *)(v140 + 8 * v144);
              while ((sub_22EA8D918(a1, *v146, 0) & 1) != 0)
              {
                ++v146;
                v145 -= 8;
                if (!v145)
                {
                  v147 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v147)
                    goto LABEL_246;
                  v148 = (_QWORD *)(v140 + 8 * v147 + 8 * v147);
                  v149 = 8 * v147;
                  while ((sub_22EA8D918(a1, *v148, 0) & 1) != 0)
                  {
                    ++v148;
                    v149 -= 8;
                    if (!v149)
                    {
                      v150 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v150)
                        goto LABEL_246;
                      v151 = (_QWORD *)(v140 + 8 * v150 + 8 * v150 + 8 * v150);
                      v152 = 8 * v150;
                      while ((sub_22EA8D918(a1, *v151, 0) & 1) != 0)
                      {
                        ++v151;
                        v152 -= 8;
                        if (!v152)
                        {
                          v153 = *(unsigned int *)(a2 + 16);
                          if (!(_DWORD)v153)
                            goto LABEL_246;
                          v154 = (_QWORD *)(v140 + 8 * v153 + 8 * v153 + 8 * v153 + 8 * v153);
                          v155 = 8 * v153;
                          while ((sub_22EA8D918(a1, *v154, 0) & 1) != 0)
                          {
                            ++v154;
                            v155 -= 8;
                            if (!v155)
                              goto LABEL_246;
                          }
                          return 0;
                        }
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
            else
            {
LABEL_246:
              if (*(_DWORD *)(a2 + 48) != 1)
                return 1;
              v156 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v156)
                return 1;
              v157 = (_QWORD *)(v140 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156);
              v158 = 8 * v156;
              while ((sub_22EA8D918(a1, *v157, 0) & 1) != 0)
              {
                ++v157;
                v158 -= 8;
                if (!v158)
                {
                  v159 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v159)
                    return 1;
                  v160 = (_QWORD *)(v140 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159);
                  v161 = 8 * v159;
                  while ((sub_22EA8D918(a1, *v160, 0) & 1) != 0)
                  {
                    ++v160;
                    v161 -= 8;
                    if (!v161)
                    {
                      v162 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v162)
                        return 1;
                      v163 = (_QWORD *)(v140 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162);
                      v164 = 8 * v162;
                      while ((sub_22EA8D918(a1, *v163, 0) & 1) != 0)
                      {
                        ++v163;
                        v164 -= 8;
                        if (!v164)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x47:
      result = sub_22EA8D918(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 64);
      return (sub_22EA8D918(a1, v5, 0) & 1) != 0;
    case 0x49:
      v202 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v202)
        return 1;
      v203 = (_QWORD *)(a2 + 24);
      v204 = 8 * v202;
      while ((sub_22EA8D918(a1, *v203, 0) & 1) != 0)
      {
        ++v203;
        v204 -= 8;
        if (!v204)
          return 1;
      }
      return 0;
    case 0x4C:
      v165 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v165)
        return 1;
      v166 = (_QWORD *)(a2 + 24);
      v167 = 8 * v165;
      while ((sub_22EA8D918(a1, *v166, 0) & 1) != 0)
      {
        ++v166;
        v167 -= 8;
        if (!v167)
          return 1;
      }
      return 0;
    case 0x4D:
      if (!sub_22EA9D368(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22EA9D3F0(a1, (uint64_t *)&v208))
        return 0;
      v24 = a2 + 96;
      v25 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v25)
        goto LABEL_49;
      v26 = 8 * v25;
      v27 = (_QWORD *)(a2 + 96);
      while ((sub_22EA8D918(a1, *v27, 0) & 1) != 0)
      {
        ++v27;
        v26 -= 8;
        if (!v26)
        {
LABEL_49:
          if (sub_22EA8D918(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22EA8D918(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v28 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v28)
              return 1;
            v29 = 8 * v28;
            for (i2 = (_QWORD *)(v24 + 8 * v28); (sub_22EA8D918(a1, *i2, 0) & 1) != 0; ++i2)
            {
              v29 -= 8;
              if (!v29)
              {
                v31 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v31)
                  return 1;
                v32 = (_QWORD *)(v24 + 8 * v31 + 8 * v31);
                v33 = 8 * v31;
                while ((sub_22EA8D918(a1, *v32, 0) & 1) != 0)
                {
                  ++v32;
                  v33 -= 8;
                  if (!v33)
                  {
                    v34 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v34)
                      return 1;
                    v35 = (_QWORD *)(v24 + 8 * v34 + 8 * v34 + 8 * v34);
                    v36 = 8 * v34;
                    while ((sub_22EA8D918(a1, *v35, 0) & 1) != 0)
                    {
                      ++v35;
                      v36 -= 8;
                      if (!v36)
                      {
                        v37 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v37)
                          return 1;
                        v38 = (_QWORD *)(v24 + 8 * v37 + 8 * v37 + 8 * v37 + 8 * v37);
                        v39 = 8 * v37;
                        while ((sub_22EA8D918(a1, *v38, 0) & 1) != 0)
                        {
                          ++v38;
                          v39 -= 8;
                          if (!v39)
                            return 1;
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x51:
      v16 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v16)
        return 1;
      v17 = (_QWORD *)(a2 + 104);
      v18 = 8 * v16;
      while ((sub_22EA8D918(a1, *v17, 0) & 1) != 0)
      {
        ++v17;
        v18 -= 8;
        if (!v18)
          return 1;
      }
      return 0;
    case 0x59:
      v205 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v205)
        return 1;
      v206 = (_QWORD *)(a2 + 80);
      v207 = 8 * v205;
      while ((sub_22EA8D918(a1, *v206, 0) & 1) != 0)
      {
        ++v206;
        v207 -= 8;
        if (!v207)
          return 1;
      }
      return 0;
    case 0x5A:
      v196 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v196)
        return 1;
      v197 = (_QWORD *)(a2 + 80);
      v198 = 8 * v196;
      while ((sub_22EA8D918(a1, *v197, 0) & 1) != 0)
      {
        ++v197;
        v198 -= 8;
        if (!v198)
          return 1;
      }
      return 0;
    case 0x5B:
      v19 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v19)
        return 1;
      v20 = 0;
      v21 = a2 + 24;
      v22 = 2 * v19;
      break;
    default:
      return 1;
  }
  while (1)
  {
    v23 = *(_QWORD *)(v21 + 8 * (v20 + 1));
    result = sub_22EA8D918(a1, *(_QWORD *)(v21 + 8 * v20), 0);
    if (!(_DWORD)result)
      break;
    if ((sub_22EA8D918(a1, v23, 0) & 1) == 0)
      return 0;
    v20 += 2;
    if (v22 == v20)
      return 1;
  }
  return result;
}

uint64_t sub_22EAA00C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;

  if (!a2)
    return 1;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4 == v3)
    v5 = 0;
  else
    v5 = *(uint64_t **)(a2 + 24);
  if (v4 == v3)
    v6 = 0;
  else
    v6 = *(uint64_t **)(a2 + 16);
  v14 = 0;
  v15 = 0;
  v13 = v6;
  if (v6 == v5)
    return 1;
  v9 = 0;
  while (1)
  {
    if ((v9 & 3) == 0)
    {
      result = sub_22EA8D918(a1, *v6, a3);
      if (!(_DWORD)result)
        return result;
      v13 = v6 + 1;
      goto LABEL_18;
    }
    v10 = (_QWORD *)((v9 & 0xFFFFFFFFFFFFFFFCLL) != 0 ? (v9 & 0xFFFFFFFFFFFFFFFCLL) + 40 : sub_22F3AC1A8(*v6));
    if ((sub_22EA8D918(a1, *v10, a3) & 1) == 0)
      return 0;
    if (v9 < 4)
      sub_22F3F2FE0((uint64_t)&v13, 1);
    else
      sub_22F0D8720((uint64_t)&v13);
LABEL_18:
    v6 = v13;
    v9 = v14;
    if (v13 == v5 && v14 == 0)
      return 1;
  }
}

uint64_t sub_22EAA01BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  const void *v6;
  size_t v7;
  const void *v8;
  uint64_t i;
  size_t v10;

  v3 = a1;
  if (a1 != a2)
  {
    v4 = a1 + 16;
    result = a2;
    if (v3 + 16 == a2)
      return result;
    v6 = *(const void **)v3;
    while (1)
    {
      v7 = *(_QWORD *)(v4 - 8);
      v8 = *(const void **)v4;
      if (v7 == *(_QWORD *)(v4 + 8) && (!v7 || !memcmp(v6, *(const void **)v4, v7)))
        break;
      v4 += 16;
      v6 = v8;
      if (v4 == a2)
        return a2;
    }
    v3 = v4 - 16;
  }
  result = a2;
  if (v3 != a2)
  {
    for (i = v3 + 32; i != a2; i += 16)
    {
      v10 = *(_QWORD *)(v3 + 8);
      if (v10 != *(_QWORD *)(i + 8) || v10 && memcmp(*(const void **)v3, *(const void **)i, v10))
      {
        *(_OWORD *)(v3 + 16) = *(_OWORD *)i;
        v3 += 16;
      }
    }
    return v3 + 16;
  }
  return result;
}

uint64_t sub_22EAA0290(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;

  result = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (!result || *(_BYTE *)(result + 16) != 32)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32)
      return 0;
    result = sub_22F10CF48(result);
    if (!result)
      return result;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(result + 32) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(unsigned __int8 *)(v6 + 16) - 35 > 0xFFFFFFFD;
  else
    v7 = 0;
  if (!v7)
    v6 = sub_22F10CF48(v6);
  result = sub_22F272660(v6);
  if (result)
  {
    v8 = *(_QWORD *)(result + 40);
    if ((v8 & 7) != 0)
      v9 = 0;
    else
      v9 = v8 & 0xFFFFFFFFFFFFFFF8;
    return a3 && v9 == sub_22E3CB704(*(llvm::StringMapImpl **)(a2 + 15192), "NSAttributedString", 0x12uLL)
        || v9 == sub_22E3CB704(*(llvm::StringMapImpl **)(a2 + 15192), "NSString", 8uLL)
        || v9 == sub_22E3CB704(*(llvm::StringMapImpl **)(a2 + 15192), "NSMutableString", 0xFuLL);
  }
  return result;
}

uint64_t sub_22EAA0394(uint64_t a1, const void *a2, uint64_t a3, int a4)
{
  size_t v6;

  if (!*(_BYTE *)(a1 + 20))
  {
    v6 = *(_QWORD *)(a1 + 8);
    if (v6 == a3 && (!v6 || !memcmp(*(const void **)a1, a2, v6)))
    {
      *(_DWORD *)(a1 + 16) = a4;
      *(_BYTE *)(a1 + 20) = 1;
    }
  }
  return a1;
}

uint64_t sub_22EAA03EC(uint64_t a1, const void *a2, uint64_t a3, const void *a4, uint64_t a5, const void *a6, uint64_t a7, uint64_t a8, const void *a9, uint64_t a10, int a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = sub_22EAA0394(a1, a2, a3, a11);
  v16 = sub_22EAA0394(v15, a4, a5, a11);
  v17 = sub_22EAA0394(v16, a6, a7, a11);
  return sub_22EAA0394(v17, a9, a10, a11);
}

unint64_t sub_22EAA0468(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v16;
  unsigned int v17[24];
  uint64_t v18;
  uint64_t v19;

  v18 = a5;
  v19 = a4;
  v9 = sub_22EA47450((uint64_t)a1, a2, 0);
  if ((v9 & 1) == 0)
  {
    if (a6)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1886u, 0, (uint64_t)v17);
      v10 = sub_22E8D2984((uint64_t)v17, (uint64_t *)a3);
      v11 = sub_22E8906A0(v10, &v19);
      sub_22E8906A0(v11, &v18);
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1883u, 0, (uint64_t)v17);
      v12 = sub_22E8D2984((uint64_t)v17, (uint64_t *)a3);
      v13 = sub_22E8906A0(v12, &v19);
      v14 = sub_22E8906A0(v13, &v18);
      v16 = 0;
      sub_22E8900C4(v14, &v16);
    }
    sub_22E903BEC(v17);
  }
  return v9;
}

BOOL sub_22EAA0538(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 491)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

uint64_t sub_22EAA0598(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6)
{
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t i;
  unsigned __int8 *v23;
  unsigned int v24;
  int v25;
  int v26;
  int v27;
  BOOL v28;
  uint64_t v29;
  unsigned __int8 *v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  BOOL v36;
  unsigned int v37;
  unint64_t *v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unint64_t *v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55[24];

  v11 = (_QWORD *)result;
  if (*(unsigned __int16 *)(a3 + 48) != a5)
    goto LABEL_31;
  if (!a2
    || (*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC
    || (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2) + 80) & 0xE000) == 0x4000
    || (*(_QWORD *)(a2 + 40) & 7) == 6
    && (*(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) < 4)
  {
    sub_22E8FCA40(v11, *(_DWORD *)(a3 + 16), 0x1B8Cu, 0, (uint64_t)v55);
    sub_22E8D2984((uint64_t)v55, (uint64_t *)a3);
LABEL_8:
    result = (uint64_t)sub_22E903BEC(v55);
    goto LABEL_31;
  }
  v12 = a2 + 72;
  v13 = *(_WORD *)(a2 + 80) & 0x7F;
  v14 = -40;
  if (v13 > 0x46)
  {
    if (v13 == 83)
      goto LABEL_25;
    if (v13 == 71)
    {
      v14 = -56;
      goto LABEL_25;
    }
    if (v13 != 81)
    {
LABEL_20:
      v15 = v13 - 52;
      v16 = v13 - 33 >= 5;
      v17 = -48;
      if (!v16)
        v17 = -64;
      if (v15 >= 6)
        v14 = v17;
      else
        v14 = -72;
    }
  }
  else
  {
    if (v13 > 0x18)
      goto LABEL_19;
    if (v13 == 16)
    {
LABEL_12:
      v14 = -48;
      goto LABEL_25;
    }
    if (((1 << v13) & 0x1066) == 0)
    {
      if (v13 == 24)
        goto LABEL_12;
LABEL_19:
      if (v13 == 70)
      {
        v14 = -64;
        goto LABEL_25;
      }
      goto LABEL_20;
    }
  }
LABEL_25:
  v18 = *(_QWORD *)(v12 + v14 + 16);
  v19 = (_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF8);
  if ((v18 & 4) != 0)
    v19 = (_QWORD *)*v19;
  if (v19)
    v20 = (uint64_t)(v19 - 8);
  else
    v20 = 0;
  result = sub_22EAA0B64(v20);
  if ((result & 1) == 0)
  {
    result = sub_22F3276A8(v20);
    if ((result & 1) == 0)
    {
      if (!v19
        || (*(_DWORD *)(v20 + 28) & 0x7Fu) - 38 < 0xFFFFFFFD
        || (result = sub_22EFB3B2C(v20, (uint64_t (*)(uint64_t, uint64_t))sub_22EAA0DC0, (uint64_t)v55),
            (_DWORD)result))
      {
        sub_22E8FCA40(v11, *(_DWORD *)(a3 + 16), 0x1B8Bu, 0, (uint64_t)v55);
        v43 = sub_22E8D2984((uint64_t)v55, (uint64_t *)a3);
        v44 = *(_WORD *)(a2 + 80) & 0x7F;
        v45 = -40;
        if (v44 > 0x46)
        {
          switch(v44)
          {
            case 'S':
              goto LABEL_109;
            case 'G':
              v45 = -56;
              goto LABEL_109;
            case 'Q':
              goto LABEL_109;
          }
        }
        else
        {
          if (v44 <= 0x18)
          {
            if (v44 == 16)
              goto LABEL_97;
            if (((1 << v44) & 0x1066) != 0)
              goto LABEL_109;
            if (v44 == 24)
            {
LABEL_97:
              v45 = -48;
LABEL_109:
              v46 = *(_QWORD *)(v12 + v45 + 16);
              v47 = (_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF8);
              if ((v46 & 4) != 0)
                v47 = (_QWORD *)*v47;
              if (v47)
                v48 = (uint64_t)(v47 - 8);
              else
                v48 = 0;
              v51 = (unint64_t *)v48;
              sub_22E890024(v43, (uint64_t *)&v51);
              goto LABEL_8;
            }
          }
          if (v44 == 70)
          {
LABEL_107:
            v45 = -64;
            goto LABEL_109;
          }
        }
        if (v44 - 52 < 6)
        {
          v45 = -72;
          goto LABEL_109;
        }
        if (v44 - 33 < 5)
          goto LABEL_107;
        goto LABEL_97;
      }
    }
  }
LABEL_31:
  if (*(unsigned __int16 *)(a3 + 48) > a5)
  {
    v21 = a4 + 16;
    for (i = a5; i < *(unsigned __int16 *)(a3 + 48); ++i)
    {
      v23 = (unsigned __int8 *)(*(_QWORD *)(a3 + 8 * i + 80) & 0xFFFFFFFFFFFFFFFCLL);
      v24 = *(_DWORD *)v23;
      if ((*(_DWORD *)v23 & 0x8000) == 0)
      {
        if (*(_DWORD *)v23 == 225)
        {
          v25 = *((_DWORD *)v23 + 4);
          if (!v25)
            goto LABEL_62;
          v26 = v24 & 0x1C0000;
          v27 = v25 * ((v24 >> 21) & 7);
          v28 = !v26 && v27 == 1;
          if (v28 && v23[4 * *((unsigned int *)v23 + 1) + 20] == 42)
            goto LABEL_62;
          sub_22E8FCA40(v11, *(_DWORD *)(a3 + 16), 0x1B8Au, 0, (uint64_t)v55);
          sub_22E8D2984((uint64_t)v55, (uint64_t *)a3);
          goto LABEL_61;
        }
        v29 = *((_QWORD *)v23 + 1);
        v54 = v29;
        if (*v23 == 233 && (*(_DWORD *)v23 & 0x7C0000) == 0x100000)
        {
          v30 = (unsigned __int8 *)*((_QWORD *)v23 + 2);
          if (*v30 == 161)
          {
            if (sub_22EFBAEF8(*((_QWORD *)v30 + 2)))
            {
              v29 = *(_QWORD *)(*((_QWORD *)v30 + 2) + 48);
              v54 = v29;
            }
            else
            {
              v29 = v54;
            }
          }
        }
        if (sub_22EAA0BCC(v29))
          v31 = 1;
        else
          v31 = a6 == 0;
        if (!v31)
        {
          v32 = (*(_DWORD *)(a2 + 28) & 0x7Eu) - 52 >= 6 ? 0 : a2;
          if (v32 && *v23 == 181)
          {
            v53 = 0;
            v35 = *(_QWORD *)(*(_QWORD *)(v32 + 48) & 0xFFFFFFFFFFFFFFF0);
            if (v35)
              v36 = *(_BYTE *)(v35 + 16) == 26;
            else
              v36 = 0;
            v49 = v21;
            if (v36
              || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v35 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
              && (v35 = sub_22F10CF48(v35)) != 0)
            {
              v37 = (unsigned __int16)(*(_QWORD *)(v35 + 16) >> 38);
            }
            else
            {
              v37 = 0;
            }
            v53 = v37;
            sub_22F257F94((uint64_t)(v23 + 16), (llvm::APInt *)&v51);
            v38 = (unint64_t *)&v51;
            if (v52 >= 0x41)
              v38 = v51;
            v39 = *v38;
            result = sub_22E98EDA0((llvm::APInt *)&v51);
            if (v39 <= v53)
              v40 = result;
            else
              v40 = 0;
            if ((v40 & 1) != 0)
            {
              v54 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v32 + 120) + 8 * (v39 - 1)) + 48);
            }
            else
            {
              sub_22E8FCA40(v11, *(_DWORD *)(a3 + 16), 0xAE3u, 0, (uint64_t)v55);
              v41 = sub_22E8D2984((uint64_t)v55, (uint64_t *)a3);
              v50 = i + 1;
              v42 = sub_22E89519C(v41, &v50);
              sub_22E89519C(v42, &v53);
              result = (uint64_t)sub_22E903BEC(v55);
            }
            v21 = v49;
            if (v52 >= 0x41)
            {
              result = (uint64_t)v51;
              if (v51)
                result = MEMORY[0x2348A0E84](v51, 0x1000C8000313F17);
            }
            if (!v40)
              continue;
          }
        }
        result = sub_22EAA0C4C((uint64_t)v11, v54);
        if ((result & 1) == 0)
        {
          result = sub_22EAA0CD4((uint64_t)v11, v23);
          if ((result & 1) == 0)
          {
            sub_22E8FCA40(v11, *(_DWORD *)(a3 + 16), 0x1B87u, 0, (uint64_t)v55);
            v33 = sub_22E8D2984((uint64_t)v55, (uint64_t *)a3);
            sub_22E8901B8(v33, &v54);
LABEL_61:
            result = (uint64_t)sub_22E903BEC(v55);
          }
        }
      }
LABEL_62:
      v34 = *(unsigned int *)(a4 + 8);
      if (v34 >= *(unsigned int *)(a4 + 12))
      {
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
        v34 = *(unsigned int *)(a4 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a4 + 8 * v34) = v23;
      ++*(_DWORD *)(a4 + 8);
    }
  }
  return result;
}

BOOL sub_22EAA0B64(uint64_t a1)
{
  char v3;

  return sub_22F327648(a1)
      || a1
      && (*(_DWORD *)(a1 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD
      && !sub_22EFB3B2C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_22EAA0DA4, (uint64_t)&v3);
}

uint64_t sub_22EAA0BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(unsigned __int8 *)(v2 + 16);
  if (!v2 || v3 != 45)
  {
    if (*(_BYTE *)(v1 + 16) == 39 || v3 == 39 && (v1 = sub_22F10CF48(v1)) != 0)
    {
      v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(v2 + 16) != 45)
        return 0;
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t sub_22EAA0C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_22F10D4DC(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  if (!v4 || (v5 = *(_QWORD *)(v4 + 24)) == 0 || !sub_22F327648(v5))
  {
    result = sub_22EAA0BCC(a2);
    if (!result)
      return result;
    v7 = result;
    if ((sub_22F1110EC(result, 0) & 1) == 0 && (sub_22EAA0DDC(a1, *(_QWORD *)(v7 + 24)) & 1) == 0)
    {
      v8 = sub_22F114198(*(_QWORD *)(v7 + 24));
      return sub_22EAA0B64(v8);
    }
  }
  return 1;
}

uint64_t sub_22EAA0CD4(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  unsigned __int8 **v5;
  unsigned int v6;
  BOOL v7;
  int v8;

  while (1)
  {
    v4 = *a2;
    if ((v4 + 102) < 0xF5u)
      break;
LABEL_12:
    v5 = (unsigned __int8 **)(a2 + 16);
LABEL_13:
    a2 = *v5;
  }
  if (v4 == 233)
  {
    v6 = (*(_DWORD *)a2 >> 18) & 0x1F;
    v7 = v6 > 9;
    v8 = (1 << v6) & 0x230;
    if (v7 || v8 == 0)
      return 0;
    goto LABEL_12;
  }
  if (v4 == 214)
  {
LABEL_7:
    v5 = (unsigned __int8 **)(a2 + 24);
    goto LABEL_13;
  }
  if ((v4 & 0xFE) == 0x70)
  {
    if (((*(_DWORD *)a2 >> 18) & 0x3Fu) - 19 > 1 || !sub_22EAA0CD4(a1, *((_QWORD *)a2 + 2)))
      return 0;
    goto LABEL_7;
  }
  return sub_22EAA0C4C(a1, *((_QWORD *)a2 + 1));
}

BOOL sub_22EAA0DA4(uint64_t a1, uint64_t a2)
{
  return !sub_22F327648(a2);
}

BOOL sub_22EAA0DC0(uint64_t a1, uint64_t a2)
{
  return !sub_22F3276A8(a2);
}

uint64_t sub_22EAA0DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  _BOOL4 v5;
  unint64_t v6;
  _BOOL4 v7;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_22F114198(a2);
  v4 = sub_22EFCE144(v3 + 64, (*(_QWORD *)(a1 + 88) + 15392) | 6);
  LOBYTE(v5) = v4 > 7;
  v6 = sub_22EFCE144(v3 + 64, (*(_QWORD *)(a1 + 88) + 15936) | 6);
  LOBYTE(v7) = v6 > 7;
  if (v4 >= 8 && v6 > 7)
    return 1;
  result = 0;
  if (v3 && (*(_DWORD *)(v3 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
  {
    v10 = sub_22E46A3A0(v3);
    if (v10 != v11)
    {
      v12 = v10;
      v13 = v11;
      while (1)
      {
        v14 = *(uint64_t **)(v12 + 16);
        if (v5)
        {
          v5 = 1;
          if (!v7)
            goto LABEL_11;
        }
        else
        {
          v18 = *(_QWORD *)(*v14 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v18 + 8) & 0xF) != 0)
            v18 = (unint64_t)sub_22F10D2BC(*v14);
          v19 = sub_22F10C2A4(*(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF0));
          if (v19)
          {
            if ((*(_DWORD *)(v19 + 28) & 0x7Eu) - 34 >= 4)
              v20 = 0;
            else
              v20 = v19;
          }
          else
          {
            v20 = 0;
          }
          v5 = sub_22EFCE144(v20 + 64, (*(_QWORD *)(a1 + 88) + 15392) | 6) > 7;
          if (!v7)
          {
LABEL_11:
            v15 = *(_QWORD *)(*v14 & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v15 + 8) & 0xF) != 0)
              v15 = (unint64_t)sub_22F10D2BC(*v14);
            v16 = sub_22F10C2A4(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0));
            if (v16)
            {
              if ((*(_DWORD *)(v16 + 28) & 0x7Eu) - 34 >= 4)
                v17 = 0;
              else
                v17 = v16;
            }
            else
            {
              v17 = 0;
            }
            v7 = sub_22EFCE144(v17 + 64, (*(_QWORD *)(a1 + 88) + 15936) | 6) > 7;
            goto LABEL_22;
          }
        }
        v7 = 1;
LABEL_22:
        v12 += 24;
        if (v12 == v13)
          return v5 & v7;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_22EAA0FBC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v8;
  unsigned int v9[24];
  uint64_t v10;

  v10 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(unsigned __int8 *)(v4 + 16);
  result = 1;
  if (v5 != 32 && v5 != 39)
  {
    if (v5 == 45
      && ((sub_22F1110EC(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), 0) & 1) != 0|| (sub_22EAA0DDC((uint64_t)a1, *(_QWORD *)(v4 + 24)) & 1) != 0))
    {
      return 1;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1B89u, 0, (uint64_t)v9);
      v8 = sub_22E8D2984((uint64_t)v9, (uint64_t *)a3);
      sub_22E8901B8(v8, &v10);
      sub_22E903BEC(v9);
      return 0;
    }
  }
  return result;
}

BOOL sub_22EAA1084(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  int v5;
  _QWORD *v6;
  void *v8;
  uint64_t v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x24BDAC8D0];
  v8 = v10;
  v9 = 0x100000000;
  sub_22EAA0598(a1, a2, a3, (uint64_t)&v8, 0, 0);
  v5 = v9;
  v6 = v8;
  if ((_DWORD)v9 == 1)
    *a4 = *(_QWORD *)v8;
  if (v6 != v10)
    free(v6);
  return v5 == 1;
}

uint64_t sub_22EAA1130(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  BOOL v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v18;
  int v19;
  unsigned int v20[24];

  if (!sub_22E8D2B00(a3, a1, 1u))
    return 0;
  v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(a3 + 80) & 0xFFFFFFFFFFFFFFFCLL) + 8) & 0xFFFFFFFFFFFFFFF0)
                             + 8) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_DWORD *)(v8 + 16);
  if (v8)
    v10 = (v9 & 0xFF800FF) == 87031819;
  else
    v10 = 0;
  v11 = *(_DWORD *)(v8 + 16);
  if (!v10 && v11 != 9)
  {
    if (v11 == 44)
    {
      v14 = sub_22F114198(*(_QWORD *)(v8 + 24));
      if ((*(_BYTE *)(v14 + 74) & 1) == 0 && *(_QWORD *)(v14 + 128) < 8uLL
        || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v8 + 24)) + 76) & 0x80) != 0)
      {
        goto LABEL_18;
      }
    }
    else if (v11 != 11 || ((v9 >> 19) & 0x1FE) - 166 >= 0x14)
    {
LABEL_18:
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xAE0u, 0, (uint64_t)v20);
      v15 = sub_22E8D2984((uint64_t)v20, (uint64_t *)a3);
      v19 = 1;
      v16 = sub_22E8900C4(v15, &v19);
      v18 = 0;
      sub_22E8900C4(v16, &v18);
      sub_22E903BEC(v20);
      return 0;
    }
  }
  v13 = 1;
  sub_22EAA0598((uint64_t)a1, a2, a3, a4, 1u, 0);
  return v13;
}

BOOL sub_22EAA1294(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BOOL8 result;
  uint64_t v9;
  unsigned int v10[24];

  result = sub_22E8D2B00(a3, a1, 1u);
  if (result)
  {
    v9 = *(_QWORD *)(a2 + 48);
    if ((*(_BYTE *)(*(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0
      || (sub_22EAA0C4C((uint64_t)a1, v9) & 1) != 0)
    {
      sub_22EAA0598((uint64_t)a1, a2, a3, a4, 0, 0);
      return *(_DWORD *)(a4 + 8) != 0;
    }
    else
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x1B88u, 0, (uint64_t)v10);
      sub_22E8D2984((uint64_t)v10, (uint64_t *)a3);
      sub_22E903BEC(v10);
      return 0;
    }
  }
  return result;
}

uint64_t sub_22EAA135C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v9[24];
  uint64_t v10;

  v5 = sub_22EFD7558(a2);
  v6 = sub_22F10ACF8(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_22F10C2A4(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0));
  if (!v7)
    return 1;
  if ((*(_DWORD *)(v7 + 28) & 0x7Fu) - 35 > 2)
    return 1;
  v10 = v7;
  if (sub_22F327708(v7))
    return 1;
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x185Bu, 0, (uint64_t)v9);
  sub_22E890024((uint64_t)v9, &v10);
  sub_22E903BEC(v9);
  return 0;
}

uint64_t sub_22EAA1400(_QWORD *a1, _DWORD *a2, uint64_t a3)
{
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  BOOL v21;
  unsigned int v22[24];

  v6 = sub_22EA8CD28(a2);
  if (v6)
  {
    v7 = v6;
    v8 = 0;
    while (1)
    {
      if ((v9 = *(_QWORD *)(sub_22EA47EEC((uint64_t)a2, v8) & 0xFFFFFFFFFFFFFFF0)) != 0 && *(_BYTE *)(v9 + 16) == 39
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
        && (v9 = sub_22F10CF48(v9)) != 0)
      {
        if ((v10 = (uint64_t *)(*(_QWORD *)(v9 + 32) & 0xFFFFFFFFFFFFFFF0), (v11 = *v10) != 0)
          && *(_BYTE *)(v11 + 16) == 32
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
          && (v11 = sub_22F10CF48(v11)) != 0)
        {
          v15 = sub_22F31179C(v11);
          if (v15)
          {
            v16 = *(_QWORD *)(v15 + 40);
            if ((v16 & 7) != 0)
              v17 = 0;
            else
              v17 = v16 & 0xFFFFFFFFFFFFFFF8;
            v18 = a1[1618];
            if (!v18)
            {
              v18 = sub_22E3CB704((llvm::StringMapImpl *)(a1[10] + 544), "NSError", 7uLL);
              a1[1618] = v18;
            }
            if (v17 == v18)
              return 1;
          }
        }
        if ((v12 = *v10) != 0 && *(_BYTE *)(v12 + 16) == 39
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
          && (v12 = sub_22F10CF48(v12)) != 0)
        {
          v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v13)
          {
            if (*(_BYTE *)(v13 + 16) == 45)
            {
              v14 = sub_22F114198(*(_QWORD *)(v13 + 24));
              if (sub_22EE8140C(a1, v14))
                return 1;
            }
          }
        }
      }
      if (v7 == ++v8)
        goto LABEL_28;
    }
  }
  else
  {
LABEL_28:
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xAD6u, 0, (uint64_t)v22);
    v20 = sub_22E8D2984((uint64_t)v22, (uint64_t *)a3);
    v21 = (a2[7] & 0x7F) == 24;
    sub_22E894E38(v20, (unsigned __int8 *)&v21);
    sub_22E903BEC(v22);
    return 0;
  }
}

uint64_t sub_22EAA15F8(uint64_t result, uint64_t a2, _DWORD *a3, int *a4)
{
  _QWORD *v7;
  _QWORD *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  _QWORD *v15;
  unint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  BOOL v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  unsigned __int8 *v38;
  unsigned __int8 **v39;
  unsigned __int8 *v40;
  uint64_t v41[2];
  uint64_t v42;
  unsigned int v43;
  unsigned int v44[4];
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  char v48;
  unsigned int v49;
  char v50;
  _DWORD *v51;

  v7 = (_QWORD *)result;
  v51 = a3;
  if (!a4[9])
  {
    if (!a3[9])
      return result;
    sub_22E8FCA40((_QWORD *)result, a4[4], 0x1292u, 0, (uint64_t)v44);
    if (v48)
    {
      v9 = v46;
      if (!v46)
      {
        v9 = (unsigned __int8 *)sub_22E3B8AAC(v47);
        v46 = v9;
      }
      v9[*v9 + 1] = 15;
      v10 = v46;
    }
    else
    {
      if (!v50)
        goto LABEL_65;
      v34 = v45;
      v35 = (uint64_t *)(*(_QWORD *)v44 + 12784);
      if (v45)
        v34 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v45 + 32))(v45);
      v41[0] = v34;
      v36 = sub_22F2F1D6C(v35, v41);
      v37 = v36[1] + 32 * v49;
      v40 = *(unsigned __int8 **)(v37 + 8);
      v39 = (unsigned __int8 **)(v37 + 8);
      v38 = v40;
      if (!v40)
      {
        v38 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v39[1]);
        *v39 = v38;
      }
      v38[*v38 + 1] = 15;
      v10 = *v39;
    }
    v11 = *v10;
    *v10 = v11 + 1;
    *(_QWORD *)&v10[8 * v11 + 16] = a4;
LABEL_65:
    LOBYTE(v41[0]) = (*(_DWORD *)(a2 + 28) & 0x7F) == 24;
    sub_22E894E38((uint64_t)v44, (unsigned __int8 *)v41);
    return (uint64_t)sub_22E903BEC(v44);
  }
  if (a2 && (*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
  {
    v8 = (_QWORD *)(a2 + 120);
  }
  else if (a2 && (*(_DWORD *)(a2 + 28) & 0x7F) == 0x18)
  {
    v8 = (_QWORD *)(a2 + 96);
  }
  else
  {
    v8 = (_QWORD *)(a2 + 72);
  }
  v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v8 + 8 * ((a4[10] & 0x3FFFFFFFu) + ((2 * a4[10]) >> 31) - 1)) + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
    v13 = *(_BYTE *)(v12 + 16) == 10;
  else
    v13 = 0;
  if (!v13)
    v12 = sub_22F10CF48(v12);
  result = *(_QWORD *)(*(_QWORD *)(v12 + 32) & 0xFFFFFFFFFFFFFFF0);
  if (result)
    v14 = *(_BYTE *)(result + 16) == 26;
  else
    v14 = 0;
  if (v14
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
    && (result = sub_22F10CF48(result)) != 0)
  {
    v15 = (_QWORD *)(result + 40);
    v16 = (unsigned __int16)(*(_QWORD *)(result + 16) >> 38);
  }
  else
  {
    v15 = 0;
    v16 = 0;
  }
  v17 = a3[9];
  if ((v17 - 2) < 2)
  {
    v18 = a3[10];
    v43 = v18;
    if ((_DWORD)v18 && v16 >= v18)
    {
      v42 = v15[(v18 - 1)];
      result = sub_22F110744(*(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF0), v7[11]);
      if ((result & 1) != 0)
        return result;
      v19 = a3[9];
      v20 = v19 == 2;
      if (v19 == 2)
        v21 = "zero_argument";
      else
        v21 = "nonzero_argument";
      v22 = 16;
      if (v20)
        v22 = 13;
      v41[0] = (uint64_t)v21;
      v41[1] = v22;
      sub_22E8FCA40(v7, a3[4], 0x1291u, 0, (uint64_t)v44);
      sub_22E9AEE38((uint64_t)v44, (uint64_t *)&v51);
      v23 = sub_22F2F2210((uint64_t)v44, (uint64_t)v41);
      v24 = sub_22E89519C(v23, &v43);
      sub_22E8901B8(v24, &v42);
    }
    else
    {
      sub_22E8FCA40(v7, a3[4], 0xAE2u, 0, (uint64_t)v44);
      sub_22E9AEE38((uint64_t)v44, (uint64_t *)&v51);
      LODWORD(v41[0]) = 2;
      sub_22E8900C4((uint64_t)v44, (int *)v41);
    }
    return (uint64_t)sub_22E903BEC(v44);
  }
  if (v17 != 1)
    return result;
  if (!v16)
  {
LABEL_63:
    sub_22E8FCA40(v7, a3[4], 0x1290u, 0, (uint64_t)v44);
    sub_22E9AEE38((uint64_t)v44, (uint64_t *)&v51);
    goto LABEL_65;
  }
  v25 = 8 * v16;
  while (1)
  {
    if ((v26 = (uint64_t *)(*v15 & 0xFFFFFFFFFFFFFFF0), (v27 = *v26) != 0) && *(_BYTE *)(v27 + 16) == 32
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v27 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
      && (v27 = sub_22F10CF48(v27)) != 0)
    {
      v31 = sub_22F31179C(v27);
      if (v31)
      {
        v32 = *(_QWORD *)(v31 + 40);
        if ((v32 & 7) != 0)
          v33 = 0;
        else
          v33 = v32 & 0xFFFFFFFFFFFFFFF8;
        result = v7[1618];
        if (!result)
        {
          result = sub_22E3CB704((llvm::StringMapImpl *)(v7[10] + 544), "NSError", 7uLL);
          v7[1618] = result;
        }
        if (v33 == result)
          return result;
      }
    }
    if ((v28 = *v26) != 0 && *(_BYTE *)(v28 + 16) == 39
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
      && (v28 = sub_22F10CF48(v28)) != 0)
    {
      v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v28 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v29)
      {
        if (*(_BYTE *)(v29 + 16) == 45)
        {
          v30 = sub_22F114198(*(_QWORD *)(v29 + 24));
          result = sub_22EE8140C(v7, v30);
          if ((result & 1) != 0)
            return result;
        }
      }
    }
    ++v15;
    v25 -= 8;
    if (!v25)
      goto LABEL_63;
  }
}

uint64_t sub_22EAA1A4C(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  int *v14;
  unint64_t v16;
  unint64_t v17;
  int v18;
  unsigned int v19[24];

  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v8 != 10 && v8 != 32 && !sub_22F115064(v7))
  {
    if (a3)
    {
      v13 = *(_QWORD *)(a2 + 56);
      if ((v13 & 4) != 0 && (v16 = v13 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v16 + 16)))
        v14 = **(int ***)(v16 + 24);
      else
        v14 = (int *)(a2 + 64);
      sub_22E8FCA40(a1, *v14, 0x19E0u, 0, (uint64_t)v19);
      v18 = 0;
      goto LABEL_16;
    }
    return 0;
  }
  v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v9 & 8) != 0)
  {
    v10 = (*(_DWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 6) & 7;
    if (v10 == 2)
      goto LABEL_18;
    if (v10)
      goto LABEL_8;
  }
  if (sub_22F114FB4(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0)))
  {
LABEL_8:
    if (a3)
    {
      v11 = *(_QWORD *)(a2 + 56);
      if ((v11 & 4) != 0 && (v17 = v11 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v17 + 16)))
        v12 = **(int ***)(v17 + 24);
      else
        v12 = (int *)(a2 + 64);
      sub_22E8FCA40(a1, *v12, 0x19E0u, 0, (uint64_t)v19);
      v18 = 1;
LABEL_16:
      sub_22E8900C4((uint64_t)v19, &v18);
      sub_22E903BEC(v19);
      return 0;
    }
    return 0;
  }
LABEL_18:
  *(_QWORD *)(a2 + 48) = v6 | 1;
  *(_BYTE *)(a2 + 96) |= 0x80u;
  return 1;
}

BOOL sub_22EAA1BAC(unsigned int a1, _WORD *a2, unint64_t a3, _DWORD *a4, uint64_t a5, uint64_t a6)
{
  _DWORD *v7;
  size_t v8;
  const void *v9;
  unint64_t v12;
  unint64_t v13;
  unsigned int *v14;
  _DWORD *v15;
  unsigned int v16;
  const char *v17;
  uint64_t v18;
  const char *v19;
  size_t v20;

  v7 = a4;
  v8 = a3;
  v9 = a2;
  if (a3 >= 6 && *(_DWORD *)a2 == 1918984031 && a2[2] == 24429)
  {
    v9 = a2 + 3;
    v8 = a3 - 6;
  }
  if (12 * a5)
  {
    v12 = 0xAAAAAAAAAAAAAAABLL * ((12 * a5) >> 2);
    do
    {
      v13 = v12 >> 1;
      v14 = &v7[3 * (v12 >> 1)];
      v16 = *v14;
      v15 = v14 + 3;
      v12 += ~(v12 >> 1);
      if (v16 < a1)
        v7 = v15;
      else
        v12 = v13;
    }
    while (v12);
  }
  if (v7 == &a4[3 * a5] || *v7 != a1)
    return 0;
  if (a6)
  {
    v17 = (const char *)(a6 + (int)v7[1]);
    if (v8 != strlen(v17) || v8 && memcmp(v9, v17, v8))
    {
      v18 = (int)v7[2];
      if ((_DWORD)v18 == -1)
        return 0;
      v19 = (const char *)(a6 + v18);
      v20 = strlen(v19);
LABEL_27:
      if (v8 == v20)
      {
        if (v8)
          return memcmp(v9, v19, v8) == 0;
        return 1;
      }
      return 0;
    }
  }
  else if (v8)
  {
    v19 = (const char *)(int)v7[2];
    if ((_DWORD)v19 == -1)
      return 0;
    v20 = 0;
    goto LABEL_27;
  }
  return 1;
}

uint64_t sub_22EAA1D18(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t result;
  uint64_t v16;

  v5 = (uint64_t *)sub_22F255ABC(a1);
  v7 = v6;
  while (1)
  {
    do
    {
      v8 = v5;
      if (v5 >= v7)
      {
        if (v5 == v7)
          return 0;
        v9 = v7;
        while (*(_WORD *)(*v9 + 32) != 169)
        {
          if (++v9 == v5)
            goto LABEL_19;
        }
        v8 = v5;
      }
      else
      {
        while (*(_WORD *)(*v8 + 32) != 169)
        {
          if (++v8 == v7)
            goto LABEL_19;
        }
        v9 = v7;
      }
      if (v8 == v9)
      {
LABEL_19:
        v10 = v5;
        goto LABEL_20;
      }
      do
      {
        v10 = v5;
        v12 = *v5++;
        v11 = v12;
      }
      while (*(_WORD *)(v12 + 32) != 169);
    }
    while (a3 != *(_DWORD *)(v11 + 36));
    if (!a3)
      break;
    if (!memcmp(*(const void **)(v11 + 40), a2, a3))
      goto LABEL_20;
  }
  v10 = v5 - 1;
LABEL_20:
  v13 = v10 == v7;
  if (v10 >= v7)
  {
    while (!v13)
    {
      if (*(_WORD *)(*v7 + 32) == 169)
      {
        v14 = v10;
        goto LABEL_29;
      }
      v13 = ++v7 == v10;
    }
    return 0;
  }
  v14 = v10;
  while (*(_WORD *)(*v14 + 32) != 169)
  {
    if (++v14 == v7)
      return 0;
  }
LABEL_29:
  if (v14 == v7)
    return 0;
  do
  {
    v16 = *v10++;
    result = v16;
  }
  while (*(_WORD *)(v16 + 32) != 169);
  return result;
}

void sub_22EAA1E74(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 168)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 168)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

uint64_t sub_22EAA1F40(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t result;
  uint64_t v16;

  v5 = (uint64_t *)sub_22F255ABC(a1);
  v7 = v6;
  while (1)
  {
    do
    {
      v8 = v5;
      if (v5 >= v7)
      {
        if (v5 == v7)
          return 0;
        v9 = v7;
        while (*(_WORD *)(*v9 + 32) != 168)
        {
          if (++v9 == v5)
            goto LABEL_19;
        }
        v8 = v5;
      }
      else
      {
        while (*(_WORD *)(*v8 + 32) != 168)
        {
          if (++v8 == v7)
            goto LABEL_19;
        }
        v9 = v7;
      }
      if (v8 == v9)
      {
LABEL_19:
        v10 = v5;
        goto LABEL_20;
      }
      do
      {
        v10 = v5;
        v12 = *v5++;
        v11 = v12;
      }
      while (*(_WORD *)(v12 + 32) != 168);
    }
    while (a3 != *(_DWORD *)(v11 + 36));
    if (!a3)
      break;
    if (!memcmp(*(const void **)(v11 + 40), a2, a3))
      goto LABEL_20;
  }
  v10 = v5 - 1;
LABEL_20:
  v13 = v10 == v7;
  if (v10 >= v7)
  {
    while (!v13)
    {
      if (*(_WORD *)(*v7 + 32) == 168)
      {
        v14 = v10;
        goto LABEL_29;
      }
      v13 = ++v7 == v10;
    }
    return 0;
  }
  v14 = v10;
  while (*(_WORD *)(*v14 + 32) != 168)
  {
    if (++v14 == v7)
      return 0;
  }
LABEL_29:
  if (v14 == v7)
    return 0;
  do
  {
    v16 = *v10++;
    result = v16;
  }
  while (*(_WORD *)(v16 + 32) != 168);
  return result;
}

BOOL sub_22EAA209C(_QWORD *a1, uint64_t a2, unsigned int a3, int a4, int a5, int a6)
{
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16[24];

  *(_QWORD *)(a2 + 48) |= 0x10000uLL;
  if ((*(_BYTE *)(a1[9] + 104) & 0x40) != 0)
    a5 = a4;
  if (a5 == 58)
  {
    if (a6)
      v9 = 5071;
    else
      v9 = 146;
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), v9, 0, (uint64_t)v16);
    v15 = *(_QWORD *)(a2 + 16);
    v10 = sub_22E8906A0((uint64_t)v16, &v15);
    sub_22E8D2984(v10, (uint64_t *)a2);
  }
  else
  {
    v9 = a3;
    sub_22E8FCA40(a1, *(_DWORD *)(a2 + 16), a3, 0, (uint64_t)v16);
    v15 = *(_QWORD *)(a2 + 16);
    v11 = sub_22E8906A0((uint64_t)v16, &v15);
    v12 = sub_22E8D2984(v11, (uint64_t *)a2);
    v14 = *(_QWORD *)sub_22F1D5FAC(a5);
    sub_22E8AECC4(v12, &v14);
  }
  sub_22E903BEC(v16);
  return (int)sub_22F1CF5F4(*(_QWORD *)(a1[13] + 32), v9, *(_DWORD *)(a2 + 16), a1[13]) > 3;
}

uint64_t sub_22EAA21B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned int v24[24];
  unsigned int v25[24];
  uint64_t v26;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v6 = *(uint64_t **)v5;
  v7 = *(unsigned int *)(v5 + 8);
  i = *(uint64_t **)v5;
  if ((_DWORD)v7)
  {
    v9 = 8 * v7;
    for (i = *(uint64_t **)v5; *(_WORD *)(*i + 32) != 407; ++i)
    {
      v9 -= 8;
      if (!v9)
        return 0;
    }
  }
  if (i == &v6[v7])
    return 0;
  do
  {
    v11 = *v6++;
    v10 = v11;
  }
  while (*(_WORD *)(v11 + 32) != 407);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v25);
  v12 = sub_22E8D2984((uint64_t)v25, (uint64_t *)a3);
  v13 = v12;
  if (*(_BYTE *)(v12 + 80))
  {
    v14 = *(unsigned __int8 **)(v12 + 32);
    if (!v14)
    {
      v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
      *(_QWORD *)(v13 + 32) = v14;
    }
    v14[*v14 + 1] = 15;
    v15 = *(_BYTE **)(v13 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v12 + 92))
      goto LABEL_16;
    v18 = (uint64_t *)(*(_QWORD *)v12 + 12784);
    v19 = *(_QWORD *)(v12 + 16);
    if (v19)
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
    v26 = v19;
    v20 = sub_22F2F1D6C(v18, &v26)[1] + 32 * *(unsigned int *)(v13 + 88);
    v23 = *(unsigned __int8 **)(v20 + 8);
    v22 = (_QWORD *)(v20 + 8);
    v21 = v23;
    if (!v23)
    {
      v21 = (unsigned __int8 *)sub_22E3B8AAC(v22[1]);
      *v22 = v21;
    }
    v21[*v21 + 1] = 15;
    v15 = (_BYTE *)*v22;
  }
  v16 = *v15;
  *v15 = v16 + 1;
  *(_QWORD *)&v15[8 * v16 + 16] = v10;
LABEL_16:
  sub_22E903BEC(v25);
  sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x1574u, 0, (uint64_t)v24);
  sub_22E903BEC(v24);
  return 1;
}

uint64_t sub_22EAA2368(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned int v24[24];
  unsigned int v25[24];
  uint64_t v26;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v6 = *(uint64_t **)v5;
  v7 = *(unsigned int *)(v5 + 8);
  i = *(uint64_t **)v5;
  if ((_DWORD)v7)
  {
    v9 = 8 * v7;
    for (i = *(uint64_t **)v5; *(_WORD *)(*i + 32) != 409; ++i)
    {
      v9 -= 8;
      if (!v9)
        return 0;
    }
  }
  if (i == &v6[v7])
    return 0;
  do
  {
    v11 = *v6++;
    v10 = v11;
  }
  while (*(_WORD *)(v11 + 32) != 409);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v25);
  v12 = sub_22E8D2984((uint64_t)v25, (uint64_t *)a3);
  v13 = v12;
  if (*(_BYTE *)(v12 + 80))
  {
    v14 = *(unsigned __int8 **)(v12 + 32);
    if (!v14)
    {
      v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
      *(_QWORD *)(v13 + 32) = v14;
    }
    v14[*v14 + 1] = 15;
    v15 = *(_BYTE **)(v13 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v12 + 92))
      goto LABEL_16;
    v18 = (uint64_t *)(*(_QWORD *)v12 + 12784);
    v19 = *(_QWORD *)(v12 + 16);
    if (v19)
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
    v26 = v19;
    v20 = sub_22F2F1D6C(v18, &v26)[1] + 32 * *(unsigned int *)(v13 + 88);
    v23 = *(unsigned __int8 **)(v20 + 8);
    v22 = (_QWORD *)(v20 + 8);
    v21 = v23;
    if (!v23)
    {
      v21 = (unsigned __int8 *)sub_22E3B8AAC(v22[1]);
      *v22 = v21;
    }
    v21[*v21 + 1] = 15;
    v15 = (_BYTE *)*v22;
  }
  v16 = *v15;
  *v15 = v16 + 1;
  *(_QWORD *)&v15[8 * v16 + 16] = v10;
LABEL_16:
  sub_22E903BEC(v25);
  sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x1574u, 0, (uint64_t)v24);
  sub_22E903BEC(v24);
  return 1;
}

uint64_t sub_22EAA2518(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned int v24[24];
  unsigned int v25[24];
  uint64_t v26;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v6 = *(uint64_t **)v5;
  v7 = *(unsigned int *)(v5 + 8);
  i = *(uint64_t **)v5;
  if ((_DWORD)v7)
  {
    v9 = 8 * v7;
    for (i = *(uint64_t **)v5; *(_WORD *)(*i + 32) != 415; ++i)
    {
      v9 -= 8;
      if (!v9)
        return 0;
    }
  }
  if (i == &v6[v7])
    return 0;
  do
  {
    v11 = *v6++;
    v10 = v11;
  }
  while (*(_WORD *)(v11 + 32) != 415);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v25);
  v12 = sub_22E8D2984((uint64_t)v25, (uint64_t *)a3);
  v13 = v12;
  if (*(_BYTE *)(v12 + 80))
  {
    v14 = *(unsigned __int8 **)(v12 + 32);
    if (!v14)
    {
      v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
      *(_QWORD *)(v13 + 32) = v14;
    }
    v14[*v14 + 1] = 15;
    v15 = *(_BYTE **)(v13 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v12 + 92))
      goto LABEL_16;
    v18 = (uint64_t *)(*(_QWORD *)v12 + 12784);
    v19 = *(_QWORD *)(v12 + 16);
    if (v19)
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
    v26 = v19;
    v20 = sub_22F2F1D6C(v18, &v26)[1] + 32 * *(unsigned int *)(v13 + 88);
    v23 = *(unsigned __int8 **)(v20 + 8);
    v22 = (_QWORD *)(v20 + 8);
    v21 = v23;
    if (!v23)
    {
      v21 = (unsigned __int8 *)sub_22E3B8AAC(v22[1]);
      *v22 = v21;
    }
    v21[*v21 + 1] = 15;
    v15 = (_BYTE *)*v22;
  }
  v16 = *v15;
  *v15 = v16 + 1;
  *(_QWORD *)&v15[8 * v16 + 16] = v10;
LABEL_16:
  sub_22E903BEC(v25);
  sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x1574u, 0, (uint64_t)v24);
  sub_22E903BEC(v24);
  return 1;
}

uint64_t sub_22EAA26C8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned int v24[24];
  unsigned int v25[24];
  uint64_t v26;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v6 = *(uint64_t **)v5;
  v7 = *(unsigned int *)(v5 + 8);
  i = *(uint64_t **)v5;
  if ((_DWORD)v7)
  {
    v9 = 8 * v7;
    for (i = *(uint64_t **)v5; *(_WORD *)(*i + 32) != 420; ++i)
    {
      v9 -= 8;
      if (!v9)
        return 0;
    }
  }
  if (i == &v6[v7])
    return 0;
  do
  {
    v11 = *v6++;
    v10 = v11;
  }
  while (*(_WORD *)(v11 + 32) != 420);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v25);
  v12 = sub_22E8D2984((uint64_t)v25, (uint64_t *)a3);
  v13 = v12;
  if (*(_BYTE *)(v12 + 80))
  {
    v14 = *(unsigned __int8 **)(v12 + 32);
    if (!v14)
    {
      v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
      *(_QWORD *)(v13 + 32) = v14;
    }
    v14[*v14 + 1] = 15;
    v15 = *(_BYTE **)(v13 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v12 + 92))
      goto LABEL_16;
    v18 = (uint64_t *)(*(_QWORD *)v12 + 12784);
    v19 = *(_QWORD *)(v12 + 16);
    if (v19)
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
    v26 = v19;
    v20 = sub_22F2F1D6C(v18, &v26)[1] + 32 * *(unsigned int *)(v13 + 88);
    v23 = *(unsigned __int8 **)(v20 + 8);
    v22 = (_QWORD *)(v20 + 8);
    v21 = v23;
    if (!v23)
    {
      v21 = (unsigned __int8 *)sub_22E3B8AAC(v22[1]);
      *v22 = v21;
    }
    v21[*v21 + 1] = 15;
    v15 = (_BYTE *)*v22;
  }
  v16 = *v15;
  *v15 = v16 + 1;
  *(_QWORD *)&v15[8 * v16 + 16] = v10;
LABEL_16:
  sub_22E903BEC(v25);
  sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x1574u, 0, (uint64_t)v24);
  sub_22E903BEC(v24);
  return 1;
}

uint64_t sub_22EAA2878(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned int v24[24];
  unsigned int v25[24];
  uint64_t v26;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v6 = *(uint64_t **)v5;
  v7 = *(unsigned int *)(v5 + 8);
  i = *(uint64_t **)v5;
  if ((_DWORD)v7)
  {
    v9 = 8 * v7;
    for (i = *(uint64_t **)v5; *(_WORD *)(*i + 32) != 469; ++i)
    {
      v9 -= 8;
      if (!v9)
        return 0;
    }
  }
  if (i == &v6[v7])
    return 0;
  do
  {
    v11 = *v6++;
    v10 = v11;
  }
  while (*(_WORD *)(v11 + 32) != 469);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v25);
  v12 = sub_22E8D2984((uint64_t)v25, (uint64_t *)a3);
  v13 = v12;
  if (*(_BYTE *)(v12 + 80))
  {
    v14 = *(unsigned __int8 **)(v12 + 32);
    if (!v14)
    {
      v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
      *(_QWORD *)(v13 + 32) = v14;
    }
    v14[*v14 + 1] = 15;
    v15 = *(_BYTE **)(v13 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v12 + 92))
      goto LABEL_16;
    v18 = (uint64_t *)(*(_QWORD *)v12 + 12784);
    v19 = *(_QWORD *)(v12 + 16);
    if (v19)
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
    v26 = v19;
    v20 = sub_22F2F1D6C(v18, &v26)[1] + 32 * *(unsigned int *)(v13 + 88);
    v23 = *(unsigned __int8 **)(v20 + 8);
    v22 = (_QWORD *)(v20 + 8);
    v21 = v23;
    if (!v23)
    {
      v21 = (unsigned __int8 *)sub_22E3B8AAC(v22[1]);
      *v22 = v21;
    }
    v21[*v21 + 1] = 15;
    v15 = (_BYTE *)*v22;
  }
  v16 = *v15;
  *v15 = v16 + 1;
  *(_QWORD *)&v15[8 * v16 + 16] = v10;
LABEL_16:
  sub_22E903BEC(v25);
  sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x1574u, 0, (uint64_t)v24);
  sub_22E903BEC(v24);
  return 1;
}

uint64_t sub_22EAA2A28(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned int v24[24];
  unsigned int v25[24];
  uint64_t v26;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v6 = *(uint64_t **)v5;
  v7 = *(unsigned int *)(v5 + 8);
  i = *(uint64_t **)v5;
  if ((_DWORD)v7)
  {
    v9 = 8 * v7;
    for (i = *(uint64_t **)v5; *(_WORD *)(*i + 32) != 11; ++i)
    {
      v9 -= 8;
      if (!v9)
        return 0;
    }
  }
  if (i == &v6[v7])
    return 0;
  do
  {
    v11 = *v6++;
    v10 = v11;
  }
  while (*(_WORD *)(v11 + 32) != 11);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v25);
  v12 = sub_22E8D2984((uint64_t)v25, (uint64_t *)a3);
  v13 = v12;
  if (*(_BYTE *)(v12 + 80))
  {
    v14 = *(unsigned __int8 **)(v12 + 32);
    if (!v14)
    {
      v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
      *(_QWORD *)(v13 + 32) = v14;
    }
    v14[*v14 + 1] = 15;
    v15 = *(_BYTE **)(v13 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v12 + 92))
      goto LABEL_16;
    v18 = (uint64_t *)(*(_QWORD *)v12 + 12784);
    v19 = *(_QWORD *)(v12 + 16);
    if (v19)
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
    v26 = v19;
    v20 = sub_22F2F1D6C(v18, &v26)[1] + 32 * *(unsigned int *)(v13 + 88);
    v23 = *(unsigned __int8 **)(v20 + 8);
    v22 = (_QWORD *)(v20 + 8);
    v21 = v23;
    if (!v23)
    {
      v21 = (unsigned __int8 *)sub_22E3B8AAC(v22[1]);
      *v22 = v21;
    }
    v21[*v21 + 1] = 15;
    v15 = (_BYTE *)*v22;
  }
  v16 = *v15;
  *v15 = v16 + 1;
  *(_QWORD *)&v15[8 * v16 + 16] = v10;
LABEL_16:
  sub_22E903BEC(v25);
  sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x1574u, 0, (uint64_t)v24);
  sub_22E903BEC(v24);
  return 1;
}

void sub_22EAA2BD8(uint64_t a1, unint64_t a2)
{
  _BYTE *v2;
  _BYTE *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;

  v2 = *(_BYTE **)a1;
  if (a2 > (uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4)
  {
    if (a2 >> 60)
      abort();
    v5 = *(_BYTE **)(a1 + 8);
    v6 = (char *)operator new(16 * a2);
    v7 = &v6[(v5 - v2) & 0xFFFFFFFFFFFFFFF0];
    v8 = v7;
    if (v5 != v2)
    {
      v9 = &v6[(v5 - v2) & 0xFFFFFFFFFFFFFFF0];
      do
      {
        v8 = v9 - 16;
        *((_OWORD *)v9 - 1) = *((_OWORD *)v5 - 1);
        v5 -= 16;
        v9 -= 16;
      }
      while (v5 != v2);
    }
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = &v6[16 * a2];
    if (v2)
      operator delete(v2);
  }
}

void sub_22EAA2C88(uint64_t a1, uint64_t a2, uint64_t *a3, _DWORD *a4)
{
  _DWORD *v8;
  uint64_t v9;
  size_t v10;
  void **p_dst;
  uint64_t v12;
  unsigned __int16 *v13;
  size_t v14;
  uint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21[24];
  _BYTE v22[16];
  __int16 v23;
  unsigned __int16 *__dst;
  size_t v25;
  uint64_t v26;
  _QWORD v27[8];
  void *v28;
  uint64_t v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v8 = a4 + 5;
  v9 = a4[1];
  v10 = ((*a4 >> 21) & 7u) * a4[4];
  if (v10 >= 0x17)
  {
    if ((v10 | 7) == 0x17)
      v12 = (v10 & 0xFFFFFFF8) + 8;
    else
      v12 = v10 | 7;
    p_dst = (void **)operator new(v12 + 1);
    v25 = v10;
    v26 = v12 - 0x7FFFFFFFFFFFFFFFLL;
    __dst = (unsigned __int16 *)p_dst;
  }
  else
  {
    HIBYTE(v26) = ((*a4 >> 21) & 7) * *((_BYTE *)a4 + 16);
    p_dst = (void **)&__dst;
    if (!(_DWORD)v10)
      goto LABEL_9;
  }
  memcpy(p_dst, &v8[v9], v10);
LABEL_9:
  *((_BYTE *)p_dst + v10) = 0;
  if (v26 >= 0)
    v13 = (unsigned __int16 *)&__dst;
  else
    v13 = __dst;
  v14 = HIBYTE(v26) & 0x7F;
  if (v26 < 0)
    v14 = v25;
  sub_22F140DA4((uint64_t)v27, 0, *(_DWORD **)(a2 + 72), v13, v13, (uint64_t)v13 + v14, 1);
  v30[66] = 2;
  while (1)
  {
    sub_22F14651C(v27, (uint64_t)v22);
    if (v23 != 6)
      break;
    sub_22F14651C(v27, (uint64_t)v22);
    if (v23 != 71)
    {
      if (v23 == 1)
      {
        v15 = ((*a4 >> 21) & 7u) * a4[4];
        *(_QWORD *)a1 = &v8[a4[1]];
        *(_QWORD *)(a1 + 8) = v15;
        v16 = 1;
        goto LABEL_20;
      }
      break;
    }
  }
  sub_22EFF605C((uint64_t)a4);
  sub_22E8FCA40((_QWORD *)a2, v17, 0xF11u, 0, (uint64_t)v21);
  sub_22F0D4E74((uint64_t)a4);
  v20 = v18;
  v19 = sub_22E8906A0((uint64_t)v21, &v20);
  sub_22E8D2984(v19, a3);
  sub_22E903BEC(v21);
  v16 = 0;
  *(_BYTE *)a1 = 0;
LABEL_20:
  *(_BYTE *)(a1 + 16) = v16;
  v27[0] = &unk_24FAC8A48;
  sub_22E730D24((uint64_t)v30);
  if (v28 != &v29)
    free(v28);
  if (SHIBYTE(v26) < 0)
    operator delete(__dst);
}

uint64_t sub_22EAA2EA4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  unsigned int v24[24];
  unsigned int v25[24];
  uint64_t v26;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a2);
  v6 = *(uint64_t **)v5;
  v7 = *(unsigned int *)(v5 + 8);
  i = *(uint64_t **)v5;
  if ((_DWORD)v7)
  {
    v9 = 8 * v7;
    for (i = *(uint64_t **)v5; *(_WORD *)(*i + 32) != 396; ++i)
    {
      v9 -= 8;
      if (!v9)
        return 0;
    }
  }
  if (i == &v6[v7])
    return 0;
  do
  {
    v11 = *v6++;
    v10 = v11;
  }
  while (*(_WORD *)(v11 + 32) != 396);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB34u, 0, (uint64_t)v25);
  v12 = sub_22E8D2984((uint64_t)v25, (uint64_t *)a3);
  v13 = v12;
  if (*(_BYTE *)(v12 + 80))
  {
    v14 = *(unsigned __int8 **)(v12 + 32);
    if (!v14)
    {
      v14 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v13 + 40));
      *(_QWORD *)(v13 + 32) = v14;
    }
    v14[*v14 + 1] = 15;
    v15 = *(_BYTE **)(v13 + 32);
  }
  else
  {
    if (!*(_BYTE *)(v12 + 92))
      goto LABEL_16;
    v18 = (uint64_t *)(*(_QWORD *)v12 + 12784);
    v19 = *(_QWORD *)(v12 + 16);
    if (v19)
      v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v19 + 32))(v19);
    v26 = v19;
    v20 = sub_22F2F1D6C(v18, &v26)[1] + 32 * *(unsigned int *)(v13 + 88);
    v23 = *(unsigned __int8 **)(v20 + 8);
    v22 = (_QWORD *)(v20 + 8);
    v21 = v23;
    if (!v23)
    {
      v21 = (unsigned __int8 *)sub_22E3B8AAC(v22[1]);
      *v22 = v21;
    }
    v21[*v21 + 1] = 15;
    v15 = (_BYTE *)*v22;
  }
  v16 = *v15;
  *v15 = v16 + 1;
  *(_QWORD *)&v15[8 * v16 + 16] = v10;
LABEL_16:
  sub_22E903BEC(v25);
  sub_22E8FCA40(a1, *(_DWORD *)(v10 + 16), 0x1574u, 0, (uint64_t)v24);
  sub_22E903BEC(v24);
  return 1;
}

uint64_t sub_22EAA3054(_QWORD *a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  int v8;
  unsigned int v9[24];
  uint64_t v10;
  uint64_t v11;

  if ((a2 & 0x7Fu) - 49 < 3)
    return 1;
  v10 = v3;
  v11 = v4;
  if ((*(_BYTE *)(a1[9] + 120) & 4) != 0)
    return 1;
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB2Fu, 0, (uint64_t)v9);
  v7 = sub_22E8D2984((uint64_t)v9, (uint64_t *)a3);
  v8 = 5;
  sub_22E8900C4(v7, &v8);
  sub_22E903BEC(v9);
  return 0;
}

BOOL sub_22EAA30E0(_QWORD *a1, char a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v5;
  int v7;
  unsigned int v8[24];

  v3 = (a2 & 0x7F) - 49;
  if (v3 >= 3)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xB2Fu, 0, (uint64_t)v8);
    v5 = sub_22E8D2984((uint64_t)v8, (uint64_t *)a3);
    v7 = 5;
    sub_22E8900C4(v5, &v7);
    sub_22E903BEC(v8);
  }
  return v3 < 3;
}

uint64_t sub_22EAA3154(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *i;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v1 = *(uint64_t **)a1;
  v2 = *(unsigned int *)(a1 + 8);
  i = *(uint64_t **)a1;
  if ((_DWORD)v2)
  {
    v4 = 8 * v2;
    for (i = *(uint64_t **)a1; *(_WORD *)(*i + 32) != 157; ++i)
    {
      v4 -= 8;
      if (!v4)
        return 0;
    }
  }
  if (i == &v1[v2])
    return 0;
  do
  {
    v6 = *v1++;
    result = v6;
  }
  while (*(_WORD *)(v6 + 32) != 157);
  return result;
}

void sub_22EAA31B4(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 346)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 346)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

uint64_t sub_22EAA3280(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *i;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v1 = *(uint64_t **)a1;
  v2 = *(unsigned int *)(a1 + 8);
  i = *(uint64_t **)a1;
  if ((_DWORD)v2)
  {
    v4 = 8 * v2;
    for (i = *(uint64_t **)a1; *(_WORD *)(*i + 32) != 346; ++i)
    {
      v4 -= 8;
      if (!v4)
        return 0;
    }
  }
  if (i == &v1[v2])
    return 0;
  do
  {
    v6 = *v1++;
    result = v6;
  }
  while (*(_WORD *)(v6 + 32) != 346);
  return result;
}

void sub_22EAA32E0(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  if ((*(_BYTE *)(a1 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a1);
    v3 = *(char **)v2;
    v4 = *(unsigned int *)(v2 + 8);
    if ((_DWORD)v4)
    {
      v5 = &v3[8 * v4];
      v6 = 8 * v4 - 8;
      v7 = *(char **)v2;
      v8 = *(char **)v2;
      while (1)
      {
        v9 = *(_QWORD *)v8;
        v8 += 8;
        if (*(_WORD *)(v9 + 32) == 335)
          break;
        v6 -= 8;
        v7 = v8;
        if (v8 == v5)
          goto LABEL_15;
      }
      if (v8 == v5)
      {
        v5 = v7;
      }
      else
      {
        v10 = 8;
        v5 = v7;
        do
        {
          v11 = *(_QWORD *)&v7[v10];
          if (*(_WORD *)(v11 + 32) != 335)
          {
            *(_QWORD *)v5 = v11;
            v5 += 8;
          }
          v10 += 8;
          v6 -= 8;
        }
        while (v6);
        v3 = *(char **)v2;
      }
    }
    else
    {
      v5 = *(char **)v2;
    }
LABEL_15:
    v12 = (unint64_t)(v5 - v3) >> 3;
    *(_DWORD *)(v2 + 8) = v12;
    if (!(_DWORD)v12)
      *(_DWORD *)(a1 + 28) &= ~0x100u;
  }
}

uint64_t sub_22EAA33AC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *i;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v1 = *(uint64_t **)a1;
  v2 = *(unsigned int *)(a1 + 8);
  i = *(uint64_t **)a1;
  if ((_DWORD)v2)
  {
    v4 = 8 * v2;
    for (i = *(uint64_t **)a1; *(_WORD *)(*i + 32) != 335; ++i)
    {
      v4 -= 8;
      if (!v4)
        return 0;
    }
  }
  if (i == &v1[v2])
    return 0;
  do
  {
    v6 = *v1++;
    result = v6;
  }
  while (*(_WORD *)(v6 + 32) != 335);
  return result;
}

uint64_t sub_22EAA340C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *i;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v1 = *(uint64_t **)a1;
  v2 = *(unsigned int *)(a1 + 8);
  i = *(uint64_t **)a1;
  if ((_DWORD)v2)
  {
    v4 = 8 * v2;
    for (i = *(uint64_t **)a1; *(_WORD *)(*i + 32) != 322; ++i)
    {
      v4 -= 8;
      if (!v4)
        return 0;
    }
  }
  if (i == &v1[v2])
    return 0;
  do
  {
    v6 = *v1++;
    result = v6;
  }
  while (*(_WORD *)(v6 + 32) != 322);
  return result;
}

uint64_t sub_22EAA346C(uint64_t *a1, unsigned int a2)
{
  uint64_t *i;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  i = a1;
  if (a2)
  {
    v3 = 8 * a2;
    for (i = a1; *(unsigned __int16 *)(*i + 32) - 73 >= 4; ++i)
    {
      v3 -= 8;
      if (!v3)
        return 0;
    }
  }
  if (i == &a1[a2])
    return 0;
  do
  {
    v5 = *a1++;
    v4 = v5;
  }
  while (*(unsigned __int16 *)(v5 + 32) - 73 > 3);
  return v4;
}

BOOL sub_22EAA34D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v2 = *(_QWORD *)v1;
  v3 = *(unsigned int *)(v1 + 8);
  v4 = *(_QWORD *)v1 + 8 * v3;
  if ((_DWORD)v3)
  {
    v5 = 8 * v3;
    while (*(_WORD *)(*(_QWORD *)v2 + 32) != 424)
    {
      v2 += 8;
      v5 -= 8;
      if (!v5)
      {
        v2 = v4;
        return v2 != v4;
      }
    }
  }
  return v2 != v4;
}

uint64_t sub_22EAA3534(uint64_t a1, unint64_t a2, int *a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  uint64_t v13;
  int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  unsigned int v25;
  BOOL v26;

  if (!a4)
    return 0;
  v13 = 4 * a4;
  while (1)
  {
    v14 = *a3;
    v15 = a2;
    if (a7)
    {
      v16 = sub_22EF5C728(*(_QWORD *)(a1 + 88), a2);
      v15 = a2;
      if (v16)
      {
        v15 = a2;
        if (*(_BYTE *)(v16 + 16) == 2)
          v15 = *(_QWORD *)(v16 + 32);
      }
    }
    v17 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0);
    if (a5 == 1)
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v17 + 8) & 0xFFFFFFFFFFFFFFF0);
      v19 = v18 && *(_DWORD *)(v18 + 16) == 11;
      if (v19 && ((*(_DWORD *)(v18 + 16) >> 19) & 0x1FF) == v14)
        break;
    }
    v21 = sub_22E3E4B64(v17);
    if (v21)
    {
      v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v23 = v22 && *(_DWORD *)(v22 + 16) == 11;
      if (v23 && ((*(_DWORD *)(v22 + 16) >> 19) & 0x1FF) == v14)
      {
        v25 = *(_DWORD *)(v21 + 20);
        v26 = v25 < a5 || v25 > a6;
        if (!v26 && (*(_BYTE *)(v21 + 18) & 0x78) == 0)
          break;
      }
    }
    ++a3;
    v13 -= 4;
    if (!v13)
      return 0;
  }
  return 1;
}

uint64_t sub_22EAA366C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v2)
    v3 = *(_DWORD *)(v2 + 16) == 11;
  else
    v3 = 0;
  if (v3)
  {
    v4 = *(_DWORD *)(v2 + 16) & 0xFF80000;
    if (v4 == 90701824 || v4 == 91226112)
      return 1;
  }
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 2000) + 129) & 1) != 0)
    return sub_22EA81404(a2);
  return 0;
}

uint64_t sub_22EAA36D0(uint64_t a1, int *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;

  if (!a3)
    return 0;
  v4 = (uint64_t *)(*(_QWORD *)(a1 + 48) & 0xFFFFFFFFFFFFFFF0);
  v5 = 4 * a3;
  while (1)
  {
    v6 = *a2;
    v7 = sub_22E54A900(*v4);
    if (v7)
    {
      v8 = v7;
      v9 = sub_22F10C2A4(v7);
      v10 = (*(_DWORD *)(v9 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v9;
      v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v10 + 168) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v12 = v11 && *(_DWORD *)(v11 + 16) == 11;
      v13 = v12 && ((*(_DWORD *)(v11 + 16) >> 19) & 0x1FF) == v6;
      if (v13 && sub_22F409640(v8) == 4 && sub_22F4096D0(v8) == 3)
        break;
    }
    ++a2;
    v5 -= 4;
    if (!v5)
      return 0;
  }
  return 1;
}

uint64_t sub_22EAA37B8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _BYTE *v19;
  uint64_t v20;
  int *v21;
  char *v22;
  uint64_t v23;
  int v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  _QWORD *v30;
  unsigned __int8 *v31;
  unsigned int v32[24];
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  void *__p;
  uint64_t v39;
  uint64_t v40;
  char v41;
  unsigned int v42[24];
  uint64_t v43;
  void *v44;
  int v45;
  char *v46;
  uint64_t v47;
  _QWORD v48[33];

  v48[32] = *MEMORY[0x24BDAC8D0];
  v43 = *(_QWORD *)(a2 + 48);
  v5 = sub_22EFBAFDC(a2);
  v44 = &unk_24FAB6EF8;
  v45 = 3591;
  if ((sub_22EE8B0B0((uint64_t)a1, v5, v43) & 1) == 0)
  {
    v44 = a1;
    v46 = (char *)v48;
    v45 = *(unsigned __int16 *)(a3 + 32);
    v47 = 0x800000000;
    sub_22EAA3B0C((uint64_t)&v44, v43);
    v6 = v7;
    if ((v7 & 1) != 0)
    {
LABEL_30:
      sub_22E89277C(&v46);
      return v6;
    }
    if (*(_WORD *)(a3 + 32) != 395)
    {
      v8 = *(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF0);
      v9 = sub_22E3E4B64(v8);
      if (v9 && (*(_BYTE *)(v9 + 18) & 0x78) == 0)
        v8 = *(_QWORD *)(*(_QWORD *)(v9 + 32) & 0xFFFFFFFFFFFFFFF0);
      v10 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v10 && *(_DWORD *)(v10 + 16) == 11)
      {
        v12 = ((*(_DWORD *)(v10 + 16) >> 19) & 0x1FFu) - 166 > 0x2D
           || ((1 << ((*(_DWORD *)(v10 + 16) >> 19) + 90)) & 0x30000001B185) == 0;
        if (!v12 && sub_22F1105F0(*(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF0)))
        {
          sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xF38u, 0, (uint64_t)v42);
          v13 = sub_22E8901B8((uint64_t)v42, &v43);
          v14 = *(_QWORD *)(a3 + 16);
          v36 = 0;
          v37 = 0;
          v39 = 0;
          v40 = 0x400000000000000;
          v41 = 0;
          v34 = v14;
          v35 = 1;
          __p = (void *)1952541798;
          sub_22E890748(v13, &v34);
          if (SHIBYTE(v40) < 0)
            operator delete(__p);
          sub_22E903BEC(v42);
          goto LABEL_30;
        }
      }
    }
    sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0xEDDu, 0, (uint64_t)v42);
    v33 = *(_QWORD *)(a3 + 16);
    v15 = sub_22E8906A0((uint64_t)v42, &v33);
    v16 = sub_22E8901B8(v15, &v43);
    v17 = v16;
    if (*(_BYTE *)(v16 + 80))
    {
      v18 = *(unsigned __int8 **)(v16 + 32);
      if (!v18)
      {
        v18 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v17 + 40));
        *(_QWORD *)(v17 + 32) = v18;
      }
      v18[*v18 + 1] = 15;
      v19 = *(_BYTE **)(v17 + 32);
    }
    else
    {
      if (!*(_BYTE *)(v16 + 92))
      {
LABEL_27:
        sub_22E903BEC(v42);
        if ((_DWORD)v47)
        {
          v21 = (int *)v46;
          v22 = &v46[32 * v47];
          do
          {
            v23 = (uint64_t)(v21 + 2);
            v24 = *v21;
            v21 += 8;
            sub_22E90379C(a1, v24, v23, 0, (uint64_t)v32);
            sub_22E903BEC(v32);
          }
          while (v21 != (int *)v22);
        }
        goto LABEL_30;
      }
      v26 = (uint64_t *)(*(_QWORD *)v16 + 12784);
      v27 = *(_QWORD *)(v16 + 16);
      if (v27)
        v27 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v27 + 32))(v27);
      v34 = v27;
      v28 = sub_22F2F1D6C(v26, &v34)[1] + 32 * *(unsigned int *)(v17 + 88);
      v31 = *(unsigned __int8 **)(v28 + 8);
      v30 = (_QWORD *)(v28 + 8);
      v29 = v31;
      if (!v31)
      {
        v29 = (unsigned __int8 *)sub_22E3B8AAC(v30[1]);
        *v30 = v29;
      }
      v29[*v29 + 1] = 15;
      v19 = (_BYTE *)*v30;
    }
    v20 = *v19;
    *v19 = v20 + 1;
    *(_QWORD *)&v19[8 * v20 + 16] = a3;
    goto LABEL_27;
  }
  return 0;
}

void sub_22EAA3B0C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_22EAA3B64()
{
  int v0;

  if ((v0 & 0x780000) == 0)
    JUMPOUT(0x22EAA3B38);
  return 0;
}

BOOL sub_22EAA3EDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 402)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

uint64_t sub_22EAA3F3C()
{
  uint64_t v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  _BYTE v12[48];
  int *v13;
  void *v14;
  int v15;
  uint64_t v16;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v5 = v0;
  v16 = *MEMORY[0x24BDAC8D0];
  v13 = v6;
  LODWORD(v3) = *(_DWORD *)(v3 + 24);
  v7 = *(_QWORD *)(v4 + 48);
  v14 = &unk_24FAB6EF8;
  v15 = 4962;
  v8 = 1;
  if ((sub_22EE8B0B0(v0, v3, v7) & 1) == 0)
  {
    sub_22E99E5D4(*(_QWORD *)(v5 + 88), v4, *(_QWORD *)(v4 + 48), (uint64_t)v12);
    v11[0] = ((unint64_t)*(unsigned int *)(v4 + 24) << 32) | 2;
    v11[1] = v2 | ((unint64_t)v2 << 32);
    v8 = 1;
    sub_22EC395BC(&v14, v5, v12, v11, &v13, 1, 0, 1);
    v9 = sub_22EC3DF80((int)&v14, v5);
    if ((v9 & 1) == 0)
    {
      v13 = (int *)(v9 & 0xFFFFFFFFFFFFFFFELL);
      sub_22E98B2B0(v5, (unsigned __int8 *)(v9 & 0xFFFFFFFFFFFFFFFELL), v2, 0);
      v8 = (uint64_t)sub_22EBCCCF0(v5, v13);
      v13 = (int *)v8;
    }
    sub_22EC3CE2C((uint64_t)&v14);
  }
  return v8;
}

int32x2_t sub_22EAA40A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int32x2_t result;
  _QWORD *v6;
  uint64_t *v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t i;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  *(_DWORD *)(a2 + 96) |= 0x600u;
  v4 = a3 & 0xFFFFFFFFFFFFFFFBLL;
  *(_QWORD *)(a2 + 88) = a3 & 0xFFFFFFFFFFFFFFFBLL;
  v13 = a2;
  v14 = 0;
  if (sub_22E793870((uint64_t *)(a1 + 8464), &v13, &v14))
  {
    v6 = v14;
    if (v14 != (_QWORD *)(*(_QWORD *)(a1 + 8464) + 16 * *(unsigned int *)(a1 + 8480)))
    {
      v7 = v14 + 1;
      v8 = v14[1];
      if (v8 >= 8)
      {
        v9 = v8 & 0xFFFFFFFFFFFFFFF8;
        if (((v8 & 4) == 0 || !v9) && (v8 & 4) == 0)
        {
          v10 = 1;
          goto LABEL_10;
        }
        v10 = *(_DWORD *)(v9 + 8);
        if (v10)
        {
LABEL_10:
          for (i = 0; i != v10; ++i)
          {
            v12 = *v7 & 0xFFFFFFFFFFFFFFF8;
            if ((*v7 & 4) != 0)
              v12 = *(_QWORD *)(*(_QWORD *)v12 + 8 * i);
            *(_DWORD *)(v12 + 96) = *(_DWORD *)(v12 + 96) & 0xFFFFF9FF | 0x400;
            *(_QWORD *)(v12 + 88) = v4;
          }
        }
      }
      sub_22F29CFE8(v7);
      *v6 = -8192;
      result = vadd_s32(*(int32x2_t *)(a1 + 8472), (int32x2_t)0x1FFFFFFFFLL);
      *(int32x2_t *)(a1 + 8472) = result;
    }
  }
  return result;
}

int32x2_t sub_22EAA41A8(uint64_t a1, uint64_t a2, int a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  int32x2_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[12];
  uint64_t *v15[3];
  uint64_t v16;
  int v17;

  v17 = a3;
  if (a2 && a4)
  {
    v16 = a2;
    v14[0] = 0;
    if (sub_22E3B9914(a1 + 8488, &v16, v14))
    {
      *(_QWORD *)v14[0] = -8192;
      *(int32x2_t *)(a1 + 8496) = vadd_s32(*(int32x2_t *)(a1 + 8496), (int32x2_t)0x1FFFFFFFFLL);
    }
    v15[0] = &v16;
    v15[1] = (uint64_t *)a1;
    v15[2] = (uint64_t *)&v17;
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0)
    {
      if (!sub_22EE67384(a1, a4, 12))
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 48) & 0xFFFFFFFFFFFFFFF0) + 16) == 36)
        {
          sub_22E8FCA40((_QWORD *)a1, v17, 0x1197u, 0, (uint64_t)v14);
          sub_22F0D4E74(a4);
          v13 = v8;
          sub_22E8906A0((uint64_t)v14, &v13);
          sub_22E903BEC((unsigned int *)v14);
          v10 = v16;
          *(_DWORD *)(v16 + 96) |= 0x600u;
          *(_QWORD *)(v10 + 88) = 0;
          return result;
        }
        v11 = sub_22EAA3F3C();
        if ((v11 & 1) == 0)
        {
          v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
          v14[0] = a1;
          v14[1] = v11 & 0xFFFFFFFFFFFFFFFELL;
          if (!sub_22EAA4478((uint64_t)v14, (unsigned __int8 *)(v11 & 0xFFFFFFFFFFFFFFFELL)))
            return sub_22EAA40A4(a1, v16, v12);
        }
      }
    }
    else
    {
      sub_22E8FCA40((_QWORD *)a1, a3, 0x1192u, 0, (uint64_t)v14);
      sub_22F0D4E74(a4);
      v13 = v7;
      sub_22E8906A0((uint64_t)v14, &v13);
      sub_22E903BEC((unsigned int *)v14);
    }
    sub_22EAA4348(v15);
  }
  return result;
}

uint64_t sub_22EAA4348(uint64_t **a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v2 = a1[1];
  sub_22EFC77E8(**a1, 1);
  v3 = **a1;
  v4 = sub_22E3CD3D4(v2[11] + 2032, 24, 3);
  v5 = *(unsigned int *)a1[2];
  v6 = *(_QWORD *)(**a1 + 48);
  v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0);
  if (!v7 || (v8 = *(_DWORD *)(v7 + 16), (v8 & 0xFE) != 0x28))
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      goto LABEL_4;
    v13 = *(unsigned int *)a1[2];
    v10 = *(_QWORD *)(**a1 + 48);
    v7 = sub_22F10CF48(v7);
    v6 = v10;
    v5 = v13;
    if (!v7)
      goto LABEL_4;
    v8 = *(_DWORD *)(v7 + 16);
  }
  if ((v8 & 0x100000) != 0)
  {
    do
    {
      v11 = v5;
      v7 = *(_QWORD *)(*(_QWORD *)(v7 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (!v7 || (v12 = *(_DWORD *)(v7 + 16), (v12 & 0xFE) != 0x28))
      {
        v7 = sub_22F10CF48(v7);
        v12 = *(_DWORD *)(v7 + 16);
      }
      v5 = v11;
    }
    while ((v12 & 0x100000) != 0);
  }
  v6 = *(_QWORD *)(v7 + 32);
LABEL_4:
  result = sub_22E5BBE34(v4, v5, v6, 0, 0, 0);
  *(_DWORD *)(v3 + 96) |= 0x600u;
  *(_QWORD *)(v3 + 88) = v4 & 0xFFFFFFFFFFFFFFFBLL;
  return result;
}

uint64_t sub_22EAA4478(uint64_t a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  uint64_t result;

  v2 = *a2;
  if (a2 && (v2 & 0xFE) == 0x70)
  {
    v3 = *(_DWORD *)a2;
    switch((*(_DWORD *)a2 >> 18) & 0x3F)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
      case 0x15:
      case 0x16:
      case 0x17:
      case 0x18:
      case 0x19:
      case 0x1A:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
      case 0x20:
        return sub_22EAE934C(a1, (uint64_t)a2);
      default:
        goto LABEL_7;
    }
  }
  if (a2 && v2 == 233)
  {
    v3 = *(_DWORD *)a2;
    switch((*(_DWORD *)a2 >> 18) & 0x1F)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
        return sub_22EAE934C(a1, (uint64_t)a2);
      default:
LABEL_7:
        v2 = v3;
        break;
    }
  }
  __asm { BR              X10 }
  return result;
}

BOOL sub_22EAA4544()
{
  uint64_t v0;
  _QWORD **v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v5;
  unsigned int v6[36];

  sub_22E8FCA40(*v1, *(_DWORD *)(v0 + 4), 0x119Bu, 0, (uint64_t)v6);
  sub_22F0D4E74(v0);
  v5 = v2;
  v3 = *(_BYTE *)(sub_22E8906A0((uint64_t)v6, &v5) + 80) != 0;
  sub_22E903BEC(v6);
  return v3;
}

uint64_t sub_22EAA474C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unsigned int v22[24];
  unint64_t v23;
  uint64_t v24;

  v2 = *(unsigned int *)(a2 + 120);
  if ((_DWORD)v2)
  {
    v4 = (_QWORD *)result;
    v5 = 0;
    LODWORD(v6) = ((**(_QWORD **)a2 & 7) != 1) & (0x781u >> *(_DWORD *)(a2 + 80));
    v7 = (_DWORD *)(result + 8488);
    do
    {
      v8 = *(_QWORD *)(a2 + 112);
      v9 = *(_DWORD *)(v8 + 120 * v5);
      if (v9 != 6)
      {
        if (v9 == 3 && (v6 & 1) == 0)
        {
          v6 = *(unsigned int *)(v8 + 120 * v5 + 48);
          if (!(_DWORD)v6)
            goto LABEL_7;
          v10 = 0;
          v11 = (_QWORD *)(v8 + 120 * v5 + 72);
          v12 = 32 * v6;
          do
          {
            v24 = 0;
            v13 = *(_QWORD *)(*v11 + v10 + 16);
            v24 = v13;
            if ((*(_DWORD *)(v13 + 96) & 0x600) == 0x200)
            {
              v14 = *v11 + v10;
              v15 = *(void ***)(v14 + 24);
              *(_QWORD *)(v14 + 24) = 0;
              v23 = 0;
              v16 = *((_DWORD *)v15 + 2);
              if (v16 < 2)
              {
                v21 = sub_22EAE9434(v7, &v24);
                v17 = *((unsigned int *)v21 + 2) | ((unint64_t)*((unsigned int *)v21 + 2) << 32);
              }
              else
              {
                v17 = *((unsigned int *)*v15 + 6) | ((unint64_t)*((unsigned int *)*v15 + 6 * v16 - 6) << 32);
              }
              v23 = v17;
              sub_22E8FCA40(v4, *(_DWORD *)(v24 + 24), 0x1196u, 0, (uint64_t)v22);
              sub_22E8906A0((uint64_t)v22, (uint64_t *)&v23);
              sub_22E903BEC(v22);
              if (*v15 != v15 + 2)
                free(*v15);
              result = MEMORY[0x2348A0E9C](v15, 0x1080C4070FE8099);
            }
            else
            {
              result = sub_22EFBC5B4(v13);
              if (result && ((*(_BYTE *)result & 0xFE) != 0xAC || *(_QWORD *)(result + 16)))
              {
                sub_22E8FCA40(v4, *(_DWORD *)(v13 + 24), 0x1196u, 0, (uint64_t)v22);
                v18 = sub_22EFBC5B4(v24);
                if (v18 && (*(_BYTE *)v18 & 0xFE) == 0xAC)
                  v18 = *(_QWORD *)(v18 + 16);
                sub_22F0D4E74(v18);
                v23 = v19;
                sub_22E8906A0((uint64_t)v22, (uint64_t *)&v23);
                result = (uint64_t)sub_22E903BEC(v22);
                v20 = v24;
                *(_DWORD *)(v24 + 96) |= 0x600u;
                *(_QWORD *)(v20 + 88) = 0;
              }
            }
            v10 += 32;
          }
          while (v12 != v10);
        }
        LOBYTE(v6) = 0;
      }
LABEL_7:
      ++v5;
    }
    while (v5 != v2);
  }
  return result;
}

uint64_t sub_22EAA499C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _BOOL4 v20;
  int v21;
  _BOOL4 v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  BOOL v29;
  unint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v40;
  _DWORD *v41;
  int v44;
  uint64_t v45;
  unint64_t *v46;
  unsigned int v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v55;
  unint64_t i;
  unint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  unsigned int *v67;
  _BYTE *v68;
  _QWORD *v69;
  unsigned int v70;
  uint64_t v71;
  unint64_t v72;
  int v73;
  unint64_t v74;
  BOOL v75;
  int v76;
  unsigned int v78[24];
  unsigned int v79[24];
  unsigned int v80[24];
  unsigned int v81[24];
  _BYTE v82[96];
  _BYTE v83[100];
  int v84;
  unsigned int v85[24];
  unint64_t v86;
  unint64_t v87;
  unint64_t v88[12];
  uint64_t v89[2];

  v6 = a2;
  v89[0] = a2;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  if ((*(_BYTE *)(a2 + 31) & 8) != 0)
  {
    if ((v8 & 4) == 0)
      goto LABEL_7;
    ++v9;
    goto LABEL_6;
  }
  if ((v8 & 4) != 0)
LABEL_6:
    v9 = (_QWORD *)*v9;
LABEL_7:
  if (!a3)
    goto LABEL_139;
  v10 = a3;
  while ((*(_BYTE *)(v10 + 8) & 4) != 0 && !sub_22EC62AF4(a1, v10)
       || a4 && (sub_22E8CE620(a1 + 3320, (_QWORD *)v10, (unint64_t)v9, a4, 0) & 1) == 0 && !sub_22E8BB0E8(v6)
       || ((*(unsigned __int8 *)(v10 + 31) >> 3) & 1) != (*(_BYTE *)(v6 + 31) & 8) >> 3)
  {
    if ((*(_BYTE *)(v6 + 31) & 8) == 0 && (*(_BYTE *)(v10 + 104) & 3) == 0)
    {
      v10 = sub_22E3CD31C((uint64_t *)(v10 + 104), v10);
      if (v10)
        continue;
    }
    goto LABEL_139;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 48) & 0xFFFFFFFFFFFFFFF0);
  v12 = v11 && *(_BYTE *)(v11 + 16) == 26;
  if (!v12
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26
     || (v11 = sub_22F10CF48(v11)) == 0)
    || (v13 = *(_QWORD *)(v11 + 16), (v13 & 0x3FFFC000000000) == 0))
  {
LABEL_139:
    v15 = 0;
    goto LABEL_140;
  }
  v14 = 0;
  v15 = 0;
  v16 = (unsigned __int16)(v13 >> 38);
  do
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v10 + 120) + 8 * v14);
    v18 = (_QWORD *)v89[0];
    v19 = *(_QWORD *)(*(_QWORD *)(v89[0] + 120) + 8 * v14);
    if (!v17)
    {
      if ((*(_DWORD *)(v19 + 96) & 0x600) != 0x400
        && (*(_DWORD *)(v19 + 96) & 0x600) != 0x200
        && *(_QWORD *)(v19 + 88) <= 7uLL)
      {
        goto LABEL_126;
      }
LABEL_54:
      v27 = *(_QWORD *)(v89[0] + 144) & 6;
      v28 = (char *)(*(_QWORD *)(v89[0] + 144) & 0xFFFFFFFFFFFFFFF8);
      if (v27)
        v29 = 1;
      else
        v29 = v28 == 0;
      if (!v29)
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v19 + 24), 0x119Cu, 0, (uint64_t)v88);
        v87 = sub_22EFBF2CC(v19);
        sub_22E8906A0((uint64_t)v88, (uint64_t *)&v87);
        sub_22E903BEC((unsigned int *)v88);
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v10 + 24), 0x17E7u, 0, (uint64_t)v88);
        LOBYTE(v87) = 0;
        sub_22E894E38((uint64_t)v88, (unsigned __int8 *)&v87);
        goto LABEL_125;
      }
      if (v27 != 4 || v28 == 0)
      {
        if (v27 != 2 || v28 == 0)
        {
LABEL_72:
          v35 = *(_QWORD *)(v89[0] + 16);
          v36 = (_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF8);
          if ((v35 & 4) != 0)
            v36 = (_QWORD *)*v36;
          if (sub_22EFC7ADC((unint64_t)v36))
          {
            LODWORD(v86) = 2;
            v37 = v18[2];
            v38 = v37 & 0xFFFFFFFFFFFFFFF8;
            if ((v37 & 4) != 0)
              v38 = *(_QWORD *)v38;
            if (v38 && (*(_WORD *)(v38 + 8) & 0x7Fu) - 38 >= 0xFFFFFFFD)
            {
              if (*(_QWORD *)(v38 + 72) >= 8uLL && (*(_QWORD *)(v38 + 72) & 4) == 0)
              {
                LODWORD(v86) = 0;
              }
              else if ((*(_DWORD *)(v38 - 36) & 0x7F) == 0x25)
              {
                LODWORD(v86) = 1;
              }
            }
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v19 + 24), 0x1193u, 0, (uint64_t)v88);
            v45 = sub_22E8900C4((uint64_t)v88, (int *)&v86);
            v87 = sub_22EFBF2CC(v19);
            v46 = &v87;
            goto LABEL_134;
          }
          goto LABEL_126;
        }
        v34 = *v28;
      }
      else
      {
        v34 = v28[16];
      }
      if ((v34 & 6) == 0)
        goto LABEL_72;
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v19 + 24), 0x12F4u, 0, (uint64_t)v88);
      v40 = v18[18] & 6;
      v41 = (_DWORD *)(v18[18] & 0xFFFFFFFFFFFFFFF8);
      if (v40 != 4 || v41 == 0)
      {
        if (v40 != 2 || v41 == 0)
        {
          v44 = 0;
LABEL_133:
          LOBYTE(v84) = v44 == 2;
          v60 = sub_22E894E38((uint64_t)v88, (unsigned __int8 *)&v84);
          v87 = v18[5];
          v45 = sub_22E894538(v60, (uint64_t *)&v87);
          v86 = sub_22EFBF2CC(v19);
          v46 = &v86;
LABEL_134:
          v57 = (unint64_t *)v45;
          goto LABEL_124;
        }
      }
      else
      {
        v41 += 4;
      }
      v44 = ((*v41 >> 1) & 3) + 1;
      goto LABEL_133;
    }
    v20 = 1;
    if ((*(_DWORD *)(v17 + 96) & 0x600) != 0x400 && (*(_DWORD *)(v17 + 96) & 0x600) != 0x200)
      v20 = *(_QWORD *)(v17 + 88) > 7uLL;
    v21 = *(_DWORD *)(v19 + 96);
    v22 = 1;
    if ((v21 & 0x600) != 0x400 && (v21 & 0x600) != 0x200)
      v22 = *(_QWORD *)(v19 + 88) > 7uLL;
    if (v20 && v22)
    {
      if ((**(_BYTE **)(a1 + 72) & 0x20) == 0 || (*(_DWORD *)(v89[0] + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
        goto LABEL_120;
      v23 = *(_WORD *)(v89[0] + 80) & 0x7F;
      v24 = -40;
      if (v23 > 0x46)
      {
        if (v23 != 83)
        {
          if (v23 == 71)
          {
            v24 = -56;
          }
          else if (v23 != 81)
          {
            goto LABEL_105;
          }
        }
      }
      else
      {
        if (v23 > 0x18)
          goto LABEL_104;
        if (v23 == 16)
          goto LABEL_39;
        if (((1 << v23) & 0x1066) == 0)
        {
          if (v23 == 24)
          {
LABEL_39:
            v24 = -48;
          }
          else
          {
LABEL_104:
            if (v23 == 70)
            {
              v24 = -64;
            }
            else
            {
LABEL_105:
              v47 = v23 - 52;
              v48 = v23 - 33 >= 5;
              v49 = -64;
              if (v48)
                v49 = -48;
              v48 = v47 >= 6;
              v24 = -72;
              if (v48)
                v24 = v49;
            }
          }
        }
      }
      v50 = *(_QWORD *)(v89[0] + 72 + v24 + 16);
      v51 = (_QWORD *)(v50 & 0xFFFFFFFFFFFFFFF8);
      if ((v50 & 4) != 0)
        v51 = (_QWORD *)*v51;
      v52 = v51 ? (uint64_t)(v51 - 8) : 0;
      v53 = *(_QWORD *)(v52 + 136);
      if (v53 >= 8 && (v53 & 4) == 0)
      {
        *(_DWORD *)(v19 + 96) = v21 | 0x100;
        if ((*(_DWORD *)(v17 + 96) & 0x600) == 0x400)
        {
          v15 = 0;
          v58 = *(_QWORD *)(v17 + 88) & 0xFFFFFFFFFFFFFFF8;
          *(_DWORD *)(v19 + 96) = v21 & 0xFFFFF8FF | 0x500;
          *(_QWORD *)(v19 + 88) = v58;
        }
        else
        {
          v59 = sub_22EFBC5B4(v17);
          v15 = 0;
          *(_DWORD *)(v19 + 96) = v21 | 0x700;
          *(_QWORD *)(v19 + 88) = v59 & 0xFFFFFFFFFFFFFFFBLL;
        }
        v55 = 5327;
      }
      else
      {
LABEL_120:
        v15 = 1;
        v55 = 4504;
      }
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v19 + 24), v55, 0, (uint64_t)v88);
      v87 = sub_22EFBF2CC(v19);
      sub_22E8906A0((uint64_t)v88, (uint64_t *)&v87);
      sub_22E903BEC((unsigned int *)v88);
      for (i = v10; (*(_BYTE *)(v17 + 97) & 1) != 0; v17 = *(_QWORD *)(*(_QWORD *)(i + 120) + 8 * v14))
        i = sub_22E3CD31C((uint64_t *)(i + 104), i);
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v17 + 24), 0x6Du, 0, (uint64_t)v88);
      v87 = sub_22EFBF2CC(v17);
      v57 = v88;
      v46 = &v87;
LABEL_124:
      sub_22E8906A0((uint64_t)v57, (uint64_t *)v46);
LABEL_125:
      sub_22E903BEC((unsigned int *)v88);
      goto LABEL_126;
    }
    if (!v20)
    {
      if (!v22)
        goto LABEL_126;
      goto LABEL_54;
    }
    if ((*(_WORD *)(v89[0] + 30) & 0x180) == 0)
      goto LABEL_50;
    v25 = *(_QWORD *)(v89[0] + 16);
    v26 = v25 & 0xFFFFFFFFFFFFFFF8;
    if ((v25 & 4) != 0)
      v26 = *(_QWORD *)(v26 + 8);
    if ((sub_22EFC7ADC(v26) & 1) == 0)
    {
      v21 = *(_DWORD *)(v19 + 96);
LABEL_50:
      *(_DWORD *)(v19 + 96) = v21 | 0x100;
      if ((*(_DWORD *)(v17 + 96) & 0x600) == 0x400)
      {
        v32 = *(_QWORD *)(v17 + 88) & 0xFFFFFFFFFFFFFFF8;
        *(_DWORD *)(v19 + 96) = v21 & 0xFFFFF8FF | 0x500;
        *(_QWORD *)(v19 + 88) = v32;
      }
      else if ((*(_DWORD *)(v17 + 96) & 0x600) == 0x200)
      {
        *(_DWORD *)(v19 + 96) = v21 & 0xFFFFF8FF | 0x300;
      }
      else
      {
        v33 = sub_22EFBC5B4(v17);
        *(_DWORD *)(v19 + 96) = v21 | 0x700;
        *(_QWORD *)(v19 + 88) = v33 & 0xFFFFFFFFFFFFFFFBLL;
      }
    }
LABEL_126:
    ++v14;
  }
  while (v14 != v16);
  v6 = v89[0];
LABEL_140:
  if ((*(_DWORD *)(v6 + 28) & 0x7F) == 0x37)
  {
    v61 = sub_22EFC0EB8(v6);
    if (v61 < sub_22EFC0EB8(a3))
    {
      LODWORD(v86) = sub_22EAB3978(a1, v6);
      if ((_DWORD)v86 != sub_22EAB3978(a1, a3))
      {
        v62 = *(_QWORD *)(*(_QWORD *)(v6 + 120) + 8 * sub_22EFC0EB8(v6));
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v62 + 24), 0xC82u, 0, (uint64_t)v88);
        v87 = sub_22EFBF2CC(v62);
        v63 = sub_22E8906A0((uint64_t)v88, (uint64_t *)&v87);
        sub_22E8900C4(v63, (int *)&v86);
        sub_22E903BEC((unsigned int *)v88);
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0x6Cu, 0, (uint64_t)v85);
        sub_22E903BEC(v85);
      }
    }
  }
  v87 = 0;
  if (((*(_DWORD *)(a3 + 80) ^ *(_DWORD *)(v6 + 80)) & 0xC0000000) != 0)
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v6 + 24), 0xC0Bu, 0, (uint64_t)v88);
    v64 = sub_22E890024((uint64_t)v88, v89);
    LODWORD(v86) = *(_DWORD *)(v89[0] + 80) >> 30;
    v65 = sub_22E8900C4(v64, (int *)&v86);
    v84 = *(_DWORD *)(a3 + 80) >> 30;
    sub_22E8900C4(v65, &v84);
    sub_22E903BEC((unsigned int *)v88);
    v66 = *(_DWORD *)(a3 + 24);
    v67 = (unsigned int *)v83;
    v68 = v83;
    v69 = (_QWORD *)a1;
    v70 = 108;
    goto LABEL_146;
  }
  v72 = sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a3 + 112) + 104), *(_QWORD *)(a3 + 112));
  v71 = v89[0];
  if ((*(_BYTE *)(v72 + 82) & 1) == 0 && (*(_BYTE *)(v89[0] + 82) & 1) != 0)
  {
    v73 = sub_22EFBF86C(a3, &v87, 0);
    v71 = v89[0];
    if (v73)
    {
      if ((*(_BYTE *)(v89[0] + 82) & 2) != 0 || (*(_WORD *)(v89[0] + 30) & 0x180) == 0)
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v89[0] + 24), 0xE26u, 0, (uint64_t)v88);
        sub_22E890024((uint64_t)v88, v89);
        sub_22E903BEC((unsigned int *)v88);
        v66 = *(_DWORD *)(v87 + 24);
        v67 = (unsigned int *)v82;
        v68 = v82;
        v69 = (_QWORD *)a1;
        v70 = 109;
LABEL_146:
        sub_22E8FCA40(v69, v66, v70, 0, (uint64_t)v68);
        sub_22E903BEC(v67);
        v15 = 1;
        v71 = v89[0];
      }
    }
  }
  if ((*(_DWORD *)(v71 + 28) & 0x7F) == 0x35)
  {
    v74 = *(_QWORD *)(v71 + 144) & 0xFFFFFFFFFFFFFFF8;
    v75 = (*(_QWORD *)(v71 + 144) & 6) != 4 || v74 == 0;
    if (v75 || *(_QWORD *)(v74 + 16) <= 7uLL)
    {
      if ((*(_BYTE *)(a3 + 8) & 4) == 0)
        goto LABEL_161;
      if (sub_22EC62AF4(a1, a3))
      {
        v71 = v89[0];
LABEL_161:
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v71 + 24), 0xC7Au, 0, (uint64_t)v81);
        sub_22E903BEC(v81);
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0x6Cu, 0, (uint64_t)v80);
        sub_22E903BEC(v80);
      }
    }
  }
  v76 = *(_DWORD *)(a3 + 28);
  if ((v76 & 0x1800000) != 0
    && (v76 & 0x220000) == 0
    && sub_22EAA5368(*(_QWORD *)(a3 + 48), *(_QWORD *)(a3 + 120)))
  {
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v89[0] + 24), 0xDB4u, 0, (uint64_t)v79);
    sub_22E903BEC(v79);
    sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 24), 0x6Cu, 0, (uint64_t)v78);
    sub_22E903BEC(v78);
    v15 = 1;
  }
  v88[0] = 0;
  if (sub_22EFBF780(v89[0]) && sub_22EFBF86C(a3, v88, 1))
    sub_22EA30480((_QWORD *)a1, v89[0], v88[0], 0);
  return v15 & 1;
}

uint64_t sub_22EAA5368(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  BOOL v3;
  unint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v9;

  result = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (result)
    v3 = *(_BYTE *)(result + 16) == 26;
  else
    v3 = 0;
  if (v3)
    goto LABEL_6;
  v9 = a2;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
    return 0;
  result = sub_22F10CF48(result);
  a2 = v9;
  if (result)
  {
LABEL_6:
    v4 = *(_QWORD *)(result + 16);
    if ((v4 & 0x3FFFC000000000) != 0)
    {
      v5 = 8 * (unsigned __int16)(v4 >> 38);
      while (1)
      {
        v6 = *(_DWORD *)(*(_QWORD *)a2 + 96);
        if ((v6 & 0x600) == 0x400 || (v6 & 0x600) == 0x200)
        {
          if ((v6 & 0x100) == 0)
            return 1;
        }
        else
        {
          v7 = v6 & 0x100;
          if (*(_QWORD *)(*(_QWORD *)a2 + 88) >= 8uLL && v7 == 0)
            return 1;
        }
        a2 += 8;
        v5 -= 8;
        if (!v5)
          return 0;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_22EAA5428(uint64_t a1, uint64_t a2, uint64_t *a3, int **a4, uint64_t a5)
{
  int v5;
  unsigned int *v7;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  _BYTE v13[96];
  void *v14[2];
  void *v15[33];
  uint64_t v16;
  void *v17[2];
  _QWORD v18[18];
  _QWORD v19[6];

  v19[4] = *MEMORY[0x24BDAC8D0];
  v5 = *((_DWORD *)a3 + 20);
  if (((1 << v5) & 0x7FFF0FE) != 0)
  {
    sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)a3 + 22), 0xC5Bu, 0, (uint64_t)v14);
    v17[0] = (void *)a3[11];
    sub_22E8906A0((uint64_t)v14, (uint64_t *)v17);
    v7 = (unsigned int *)v14;
  }
  else
  {
    if (!a5)
    {
      v9 = *((_DWORD *)a3 + 22);
      if (v5 == 11)
        v10 = 5207;
      else
        v10 = 6398;
      if ((**(_QWORD **)(a1 + 72) & 0x800) != 0)
        v11 = v10;
      else
        v11 = 5206;
      sub_22E8FCA40((_QWORD *)a1, v9, v11, 0, (uint64_t)v14);
      v17[0] = (void *)a3[11];
      sub_22E8906A0((uint64_t)v14, (uint64_t *)v17);
      sub_22E903BEC((unsigned int *)v14);
      v12 = *a3;
      v14[0] = v15;
      v14[1] = (void *)0x800000000;
      v18[16] = v19;
      v18[17] = 0x800000000;
      v17[0] = v18;
      v17[1] = (void *)0x800000000;
      v15[31] = &v16;
      v15[32] = (void *)0x800000000;
      __asm { BR              X13 }
    }
    sub_22E8FCA40((_QWORD *)a1, **a4, 0xC66u, 0, (uint64_t)v13);
    v7 = (unsigned int *)v13;
  }
  sub_22E903BEC(v7);
  return 0;
}

void sub_22EAA6234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const llvm::APInt *v11;
  unsigned int v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t, unint64_t, uint64_t);
  uint64_t v37;
  int v38;
  void *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  _OWORD *v49;
  _OWORD *v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 *v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  _BYTE *v68;
  int v69;
  _QWORD *v70;
  _QWORD *v71;
  unsigned int v72;
  uint64_t j;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v84;
  uint64_t v85;
  unsigned int v86;
  unint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD *v96;
  _OWORD *v97;
  __int128 v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void **v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _DWORD *v107;
  uint64_t v108;
  _OWORD *v109;
  _OWORD *v110;
  __int128 v111;
  _OWORD *v112;
  _OWORD *v113;
  __int128 v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unsigned int v118;
  uint64_t v119;
  int v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int v142;
  unint64_t v143;
  unint64_t *v144;
  uint64_t v145;
  void *v146;
  void *v147;
  void *p_p;
  uint64_t i;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  uint64_t *v159;
  _QWORD *v160;
  uint64_t v161;
  unsigned __int8 *v162;
  _QWORD *v163;
  unsigned __int8 *v164;
  int v165;
  unint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  unint64_t v185;
  unsigned int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  int v192;
  uint64_t v193;
  unsigned int v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  _BYTE *v198;
  uint64_t v199;
  unint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned int *v210;
  int v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  unint64_t v216;
  unsigned int v217;
  void *v218;
  uint64_t v219;
  int v220;
  unsigned int v221;
  uint64_t v222;
  unint64_t *v223;
  unsigned int v224;
  char v225;
  uint64_t v226;
  __int128 v227;
  void *v228[2];
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  std::string v233;
  unint64_t v234;
  unsigned __int8 v235;
  unint64_t v236;
  char v237;
  unint64_t v238;
  void *v239[2];
  __int128 v240;
  uint64_t v241;
  llvm *v242;
  uint64_t v243;
  uint64_t v244;
  char v245;
  unsigned int v246;
  char v247;
  _BYTE *v248;
  void *v249;
  uint64_t v250;
  int v251;
  _BYTE v252[32];
  uint64_t v253;
  void *v254;
  uint64_t v255;
  _BYTE v256[16];
  int v257;
  int v258;
  int v259;
  uint64_t v260;
  __int16 v261;
  char v262;
  void *__src;
  __int128 __len;
  _QWORD v265[8];
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _QWORD *v269;
  uint64_t v270;
  unsigned int v271;
  _QWORD v272[3];
  __int16 v273;
  int v274;
  char v275;
  int v276;
  int v277;
  __int128 v278;
  void *v279[9];
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  _QWORD *v283;
  uint64_t v284;
  int v285;
  _BYTE v286[24];
  int v287;
  __int16 v288;
  char v289;
  void *__p;
  void *v291;
  unint64_t p_src;
  _QWORD v293[2];
  __int16 v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  _QWORD *v298;
  uint64_t v299;
  int v300;
  _QWORD v301[3];
  __int16 v302;
  int v303;
  char v304;
  _BYTE *v305;
  uint64_t v306;
  _BYTE v307[32];
  uint64_t v308;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v3 = v0;
  v308 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_DWORD *)(v5 + 16);
  if ((v6 & 0x400) != 0)
  {
    v14 = *(unsigned int *)(v1 + 100);
    if ((_DWORD)v14)
    {
      v15 = (uint64_t *)(v1 + 104);
      v16 = *(_QWORD *)(v3 + 88);
      v17 = 8 * v14;
      do
      {
        v18 = *v15++;
        *(_QWORD *)(v18 + 48) = *(_QWORD *)(v16 + 16832);
        v17 -= 8;
      }
      while (v17);
    }
    return;
  }
  if ((*(_DWORD *)(v5 + 16) & 0xFE) != 0x28)
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      goto LABEL_4;
    v5 = sub_22F10CF48(v5);
    if (!v5)
      goto LABEL_4;
    v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 0x100000) != 0)
  {
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v5 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (v5)
      {
        v211 = *(_DWORD *)(v5 + 16);
        if ((v211 & 0xFE) == 0x28)
          continue;
      }
      v5 = sub_22F10CF48(v5);
      v211 = *(_DWORD *)(v5 + 16);
    }
    while ((v211 & 0x100000) != 0);
  }
  v4 = *(_QWORD *)(v5 + 32);
LABEL_4:
  v226 = v4;
  v7 = *(unsigned int *)(v2 + 100);
  v8 = sub_22EF5C728(*(_QWORD *)(v3 + 88), v4);
  if (v8)
  {
    v10 = v8;
    if (*(_BYTE *)(v8 + 16) == 2)
    {
      v11 = (const llvm::APInt *)(v8 + 40);
      v12 = *(_DWORD *)(v8 + 48);
      LODWORD(__len) = v12;
      if (v12 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&__src, v11);
        v12 = __len;
        v13 = __src;
      }
      else
      {
        v13 = *(void **)v11;
        __src = *(void **)v11;
      }
      LODWORD(v239[1]) = v12;
      v239[0] = v13;
      LODWORD(__len) = 0;
      BYTE4(v239[1]) = 1;
      v37 = *(_QWORD *)(v10 + 32);
      __p = (void *)v3;
      v38 = sub_22EADF3A0((_QWORD *)v3, v2 + 104, v7, v2, v4, (unint64_t *)v239, v37, v9, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_22EADF648, (uint64_t)&__p);
      if (LODWORD(v239[1]) >= 0x41 && v239[0])
        MEMORY[0x2348A0E84](v239[0], 0x1000C8000313F17);
      if (__len < 0x41)
        goto LABEL_54;
      v39 = __src;
      if (!__src)
        goto LABEL_54;
LABEL_53:
      MEMORY[0x2348A0E84](v39, 0x1000C8000313F17);
LABEL_54:
      if (v38)
        sub_22EFC77E8(v2, 1);
      return;
    }
  }
  v19 = (uint64_t *)(v4 & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_22E3E4B64(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0));
  if (v20)
  {
    v22 = (void *)*(unsigned int *)(v20 + 20);
    LODWORD(v239[1]) = 64;
    v239[0] = v22;
    BYTE4(v239[1]) = 0;
    v23 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v23 & 8) != 0)
    {
      v25 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF0) + 0x18);
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
    }
    else
    {
      v24 = 0;
      v25 = 0;
    }
    v31 = *(_QWORD *)(v20 + 32);
    v32 = v25 | (v23 | v4) & 7;
    if (((v32 | v24) & 0xCFFFFFFF8) != 0)
    {
      v33 = *(_QWORD *)(v3 + 88);
      __src = (void *)(v32 | v24);
      v34 = sub_22E491354((unsigned int *)&__src, v31);
      v35 = sub_22EF5DBC4(v33, v34, (uint64_t)__src);
    }
    else
    {
      v35 = v32 & 7 | v31;
    }
    __src = (void *)v3;
    v36 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_22EADF648;
    goto LABEL_51;
  }
  v26 = *v19;
  if (*v19)
    v27 = *(_BYTE *)(*v19 + 16) == 12;
  else
    v27 = 0;
  if (v27
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 12
    && (v26 = sub_22F10CF48(v26)) != 0)
  {
    LODWORD(v239[1]) = 64;
    v239[0] = (void *)2;
    BYTE4(v239[1]) = 0;
    v28 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v28 & 8) != 0)
    {
      v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFF0) + 0x18);
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
    }
    else
    {
      v29 = 0;
      v30 = 0;
    }
    v53 = *(_QWORD *)(v26 + 32);
    v54 = v30 | (v28 | v4) & 7;
    if (((v54 | v29) & 0xCFFFFFFF8) != 0)
    {
      v55 = *(_QWORD *)(v3 + 88);
      __src = (void *)(v54 | v29);
      v56 = sub_22E491354((unsigned int *)&__src, v53);
      v35 = sub_22EF5DBC4(v55, v56, (uint64_t)__src);
    }
    else
    {
      v35 = v54 & 7 | v53;
    }
    __src = (void *)v3;
    v36 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_22EADF6B4;
LABEL_51:
    v38 = sub_22EADF3A0((_QWORD *)v3, v2 + 104, v7, v2, v4, (unint64_t *)v239, v35, v21, v36, (uint64_t)&__src);
    if (LODWORD(v239[1]) < 0x41)
      goto LABEL_54;
    v39 = v239[0];
    if (!v239[0])
      goto LABEL_54;
    goto LABEL_53;
  }
  v224 = 32;
  v223 = 0;
  v225 = 1;
  v40 = *(_DWORD *)(v2 + 24);
  LODWORD(__p) = 4;
  v239[0] = 0;
  LODWORD(v278) = 3;
  __src = (void *)*(unsigned int *)(v3 + 1704);
  sub_22EB4DDB8(v3 + 3688, (int *)&__p, (int *)&__src, (__int16 *)(v3 + 1693), (uint64_t *)v239, (int *)&v278);
  v41 = *(unsigned int *)(v3 + 3696);
  v42 = v41 - 2;
  v43 = *(_QWORD *)(v3 + 3688);
  v44 = *(_DWORD *)(v43 + 576 * (v41 - 2));
  if (v44 == 5)
  {
    *(_BYTE *)(v43 + 576 * v41 - 4) = *(_BYTE *)(v43 + 576 * v42 + 572);
    v45 = 1;
  }
  else if (v44 == 2)
  {
    *(_BYTE *)(v43 + 576 * v41 - 4) = 1;
    v45 = *(_BYTE *)(v43 + 576 * v42 + 573) != 0;
  }
  else
  {
    v45 = 0;
    *(_BYTE *)(v43 + 576 * v41 - 4) = 0;
  }
  v46 = v43 + 576 * v41;
  *(_BYTE *)(v46 - 3) = v45;
  *(_WORD *)(v3 + 1693) = 0;
  if (*(_DWORD *)(v3 + 1848))
  {
    llvm::SmallPtrSetImplBase::swap((llvm::SmallPtrSetImplBase *)(v3 + 1776), (llvm::SmallPtrSetImplBase *)(v46 - 560));
    sub_22EAEAE08(v3 + 1840, (uint64_t *)(v46 - 496));
  }
  v47 = sub_22E3CB704((llvm::StringMapImpl *)(*(_QWORD *)(v3 + 80) + 544), "value", 5uLL);
  __src = 0;
  *(_QWORD *)&__len = v265;
  *((_QWORD *)&__len + 1) = 0x800000000;
  v266 = 0;
  v267 = 0;
  v268 = 0;
  v269 = (_QWORD *)v3;
  v270 = v47;
  v271 = v40;
  sub_22EFC6D6C((uint64_t)v272, v47);
  v272[2] = 0;
  v272[1] = 0;
  v273 = 0;
  v274 = 257;
  v275 = 0;
  sub_22EC56024((uint64_t)&__src);
  v239[0] = &v240;
  v239[1] = (void *)0x800000000;
  v257 = v40;
  v258 = v40;
  v48 = 1;
  LODWORD(v278) = 1;
  *((_QWORD *)&v278 + 1) = v4;
  sub_22EDC0108(v3, (uint64_t)&v278, v40, (uint64_t)&__p);
  v49 = (_OWORD *)sub_22E78DF7C((uint64_t)v239, (unint64_t)&__p, 1);
  v50 = (char *)v239[0] + 32 * LODWORD(v239[1]);
  v51 = v49[1];
  *v50 = *v49;
  v50[1] = v51;
  ++LODWORD(v239[1]);
  if ((sub_22EADF6D4((_QWORD *)v3, &__src, v40, "tuple_size", 0xAuLL, (uint64_t)v239, 0) & 1) == 0 && DWORD2(__len))
  {
    LOBYTE(v291) = 0;
    __p = off_24FAB7D30;
    p_src = (unint64_t)&__src;
    v293[0] = v239;
    v278 = 0u;
    *(_OWORD *)v279 = 0u;
    v52 = sub_22EB235A8((_QWORD *)v3, (uint64_t)&v278, (uint64_t)&__src, 0, 0);
    if (HIDWORD(v279[1]))
      free(v279[0]);
    if ((v52 & 1) != 0)
      v48 = 2;
    else
      v48 = 2 * (sub_22EB4CB24(v3, v52 & 0xFFFFFFFFFFFFFFFELL, &v223, &__p, 0) & 1);
  }
  if (v239[0] != &v240)
    free(v239[0]);
  if (BYTE1(v274))
  {
    if ((_DWORD)__src == 5)
    {
      sub_22EC64D18(v269, (uint64_t)&__src);
    }
    else if (v267 && (*(_DWORD *)(v269[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v269, (uint64_t)&__src);
    }
  }
  if (v266)
  {
    v212 = sub_22EC6CBD0(v266);
    MEMORY[0x2348A0E9C](v212, 0x10E0C409F09D3C3);
  }
  if ((_QWORD *)__len != v265)
    free((void *)__len);
  sub_22EB48E64(v3);
  if (v48)
  {
    if (v48 == 2)
      goto LABEL_100;
    v57 = sub_22F10C2A4(*v19);
    if (!v57 || (v62 = v57, (*(_DWORD *)(v57 + 28) & 0x7Fu) - 35 > 2))
    {
      v58 = 1;
      goto LABEL_92;
    }
    if ((*(_DWORD *)(v57 + 72) & 0xE000) == 0x4000)
    {
      v58 = 0;
LABEL_92:
      sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v2 + 24), 0xC68u, 0, (uint64_t)v239);
      if (v245)
      {
        v63 = (unsigned __int8 *)v241;
        if (!v241)
        {
          v63 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v242);
          v241 = (uint64_t)v63;
        }
        v63[*v63 + 1] = 11;
        v64 = (_BYTE *)v241;
      }
      else
      {
        if (!v247)
          goto LABEL_98;
        v158 = (void *)v240;
        v159 = (uint64_t *)((char *)v239[0] + 12784);
        if ((_QWORD)v240)
          v158 = (void *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)v240 + 32))(v240);
        __src = v158;
        v160 = sub_22F2F1D6C(v159, (uint64_t *)&__src);
        v161 = v160[1] + 32 * v246;
        v164 = *(unsigned __int8 **)(v161 + 8);
        v163 = (_QWORD *)(v161 + 8);
        v162 = v164;
        if (!v164)
        {
          v162 = (unsigned __int8 *)sub_22E3B8AAC(v163[1]);
          *v163 = v162;
        }
        v162[*v162 + 1] = 11;
        v64 = (_BYTE *)*v163;
      }
      v65 = *v64;
      *v64 = v65 + 1;
      *(_QWORD *)&v64[8 * v65 + 16] = v2;
LABEL_98:
      LOBYTE(__src) = v58;
      v66 = sub_22E894E38((uint64_t)v239, (unsigned __int8 *)&__src);
      sub_22E8901B8(v66, &v226);
LABEL_99:
      sub_22E903BEC((unsigned int *)v239);
      goto LABEL_100;
    }
    v231 = v2 + 104;
    v232 = v7;
    v229 = v2;
    v230 = v4;
    v67 = *(_DWORD *)(v2 + 24);
    v239[0] = &unk_24FAB6EF8;
    LODWORD(v239[1]) = 3591;
    if (sub_22EE8B0B0(v3, v67, v4))
      goto LABEL_100;
    v68 = v307;
    v305 = v307;
    v306 = 0x400000000;
    v69 = *(_DWORD *)(v2 + 24);
    v238 = v62;
    v236 = 0;
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v62 + 104) + 96), *(_QWORD *)(v62 + 104));
    v70 = &unk_22F455000;
    v71 = &unk_22F455000;
    if ((**(_QWORD **)(v62 + 128) & 0x70000) != 0)
    {
      v72 = 0;
      v236 = v238;
    }
    else
    {
      v239[1] = &v239[1];
      *(_QWORD *)&v240 = &v239[1];
      *((_QWORD *)&v240 + 1) = 0;
      v241 = 1;
      for (i = 5; i != 21; i += 2)
        v239[i] = 0;
      v249 = v252;
      v250 = 4;
      v251 = 0;
      v253 = 0;
      v254 = v256;
      v255 = 0x400000000;
      v259 = 0;
      v260 = 0;
      v261 = 257;
      v262 = 1;
      v248 = v252;
      v239[0] = (void *)v238;
      if ((sub_22EFB3774(v238, (unsigned int (*)(uint64_t, unint64_t, uint64_t))sub_22EAE0050, (uint64_t)&v237, (uint64_t)v239, 0) & 1) == 0)
      {
        v72 = 0;
        v78 = v238;
        v165 = 1;
        goto LABEL_267;
      }
      v150 = v240;
      if ((void **)v240 != &v239[1])
      {
        v151 = 0;
        while (1)
        {
          if (v151)
          {
            v152 = **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(v150 + 16) + 24 * *(unsigned int *)(v150 + 24) - 24) + 16);
            v153 = *(_QWORD *)(v152 & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v153 + 8) & 0xF) != 0)
              v153 = (unint64_t)sub_22F10D2BC(v152);
            v154 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)v151 + 24 * *(unsigned int *)(v151 + 8) - 24)
                                           + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v154 + 8) & 0xF) != 0)
              v154 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)v151
                                                                             + 24 * *(unsigned int *)(v151 + 8)
                                                                             - 24)
                                                                 + 16));
            if (*(_QWORD *)((v153 & 0xFFFFFFFFFFFFFFF0) + 8) != *(_QWORD *)((v154 & 0xFFFFFFFFFFFFFFF0) + 8))
            {
              sub_22E8FCA40((_QWORD *)v3, v69, 0xC5Fu, 0, (uint64_t)&__src);
              v235 = 0;
              v172 = sub_22E894E38((uint64_t)&__src, &v235);
              v173 = sub_22E890024(v172, (uint64_t *)&v238);
              v174 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)v151 + 24 * *(unsigned int *)(v151 + 8) - 24)
                                             + 16) & 0xFFFFFFFFFFFFFFF0);
              if ((*(_BYTE *)(v174 + 8) & 0xF) != 0)
                v174 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)v151
                                                                               + 24 * *(unsigned int *)(v151 + 8)
                                                                               - 24)
                                                                   + 16));
              v233.__r_.__value_.__r.__words[0] = v174 & 0xFFFFFFFFFFFFFFF0;
              v175 = sub_22E8901B8(v173, (uint64_t *)&v233);
              v176 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)(v150 + 16)
                                                         + 24 * *(unsigned int *)(v150 + 24)
                                                         - 24)
                                             + 16) & 0xFFFFFFFFFFFFFFF0);
              if ((*(_BYTE *)(v176 + 8) & 0xF) != 0)
                v176 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)(v150 + 16)
                                                                               + 24 * *(unsigned int *)(v150 + 24)
                                                                               - 24)
                                                                   + 16));
              v234 = v176 & 0xFFFFFFFFFFFFFFF0;
              sub_22E8901B8(v175, (uint64_t *)&v234);
              sub_22E903BEC((unsigned int *)&__src);
              v72 = 0;
              v78 = 0;
              v165 = 1;
              v68 = v307;
              v71 = (_QWORD *)&unk_22F455000;
              goto LABEL_267;
            }
            if (*(_DWORD *)(v150 + 128) < *(_DWORD *)(v151 + 112))
              v151 = v150 + 16;
          }
          else
          {
            v151 = v150 + 16;
          }
          v150 = *(_QWORD *)(v150 + 8);
          if ((void **)v150 == &v239[1])
            goto LABEL_252;
        }
      }
      v151 = 0;
LABEL_252:
      v166 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)v151 + 24 * *(unsigned int *)(v151 + 8) - 24) + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v166 + 8) & 0xF) != 0)
        v166 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)v151
                                                                       + 24 * *(unsigned int *)(v151 + 8)
                                                                       - 24)
                                                           + 16));
      v71 = (_QWORD *)&unk_22F455000;
      v234 = v166 & 0xFFFFFFFFFFFFFFF0;
      __src = (void *)(*(_QWORD *)(*(_QWORD *)((v166 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0);
      v167 = sub_22EFB50E0(&v241, &__src);
      if (((_DWORD)v167[1] & 1u) + (*((_DWORD *)v167 + 2) >> 1) >= 2)
      {
        sub_22E8FCA40((_QWORD *)v3, v69, 0xC59u, 0, (uint64_t)&__src);
        v207 = sub_22E890024((uint64_t)&__src, (uint64_t *)&v238);
        v208 = sub_22E8901B8(v207, (uint64_t *)&v234);
        sub_22EAAAFAC(v3, (unint64_t *)v239, &v233);
        sub_22F2F3734(v208, (void **)&v233.__r_.__value_.__l.__data_);
        if (SHIBYTE(v233.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v233.__r_.__value_.__l.__data_);
        sub_22E903BEC((unsigned int *)&__src);
        v72 = 0;
        v165 = 1;
        v68 = v307;
      }
      else
      {
        v168 = v234;
        v169 = sub_22EF6477C(*(_QWORD *)(v3 + 88), v238);
        sub_22E90B400(v3, v69, v168, v169, v151, 3164, 0, 0);
        v72 = *(_DWORD *)(v151 + 112);
        v170 = sub_22F10C2A4(*(_QWORD *)(v234 & 0xFFFFFFFFFFFFFFF0));
        v68 = v307;
        if (v170)
        {
          if ((*(_DWORD *)(v170 + 28) & 0x7Fu) - 35 >= 3)
            v171 = 0;
          else
            v171 = v170;
        }
        else
        {
          v171 = 0;
        }
        v236 = v171;
        sub_22EAAB384(v240 + 16, (uint64_t)&v305);
        v165 = 0;
      }
      v78 = 0;
LABEL_267:
      if (v254 != v256)
        free(v254);
      if (v249 != v248)
        free(v249);
      if ((v241 & 1) == 0)
        llvm::deallocate_buffer(v242, (void *)(16 * v243));
      sub_22E687D9C((uint64_t *)&v239[1]);
      v70 = (_QWORD *)&unk_22F455000;
      if (v165)
      {
LABEL_274:
        v238 = v78 & 0xFFFFFFFFFFFFFFFCLL;
        if ((v78 & 0xFFFFFFFFFFFFFFFCLL) == 0)
        {
LABEL_315:
          v196 = 1;
          goto LABEL_316;
        }
        v177 = *(_QWORD *)(v3 + 88);
        v178 = sub_22EF6477C(v177, v78 & 0xFFFFFFFFFFFFFFFCLL);
        v179 = *(_QWORD *)((v230 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v179 & 8) != 0)
        {
          v181 = *(_QWORD *)((v179 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v180 = *(_QWORD *)((v179 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v180 = 0;
          v181 = 0;
        }
        v182 = v181 | (v179 | v230) & 7;
        if (((v182 | v180) & 0xCFFFFFFF8) != 0)
        {
          v239[0] = (void *)(v182 | v180);
          v183 = sub_22E491354((unsigned int *)v239, v178);
          v222 = sub_22EF5DBC4(v177, v183, (uint64_t)v239[0]);
        }
        else
        {
          v222 = v182 & 7 | v178;
        }
        __src = &v238;
        *(_QWORD *)&__len = v3;
        *((_QWORD *)&__len + 1) = &v229;
        v265[0] = &v230;
        v265[1] = &v231;
        v184 = sub_22EFC3B90(v238);
        if (v184)
        {
          v185 = v184;
          v186 = 0;
          v187 = v78 & 3;
LABEL_283:
          v188 = *(_QWORD *)(v185 + 40);
          if ((*(_BYTE *)(v185 + 68) & 1) != 0)
          {
            if (!v188)
              goto LABEL_308;
          }
          else if (!v188)
          {
            v189 = *(_QWORD *)(v238 + 128);
            if (v189 && ((*(unsigned __int16 *)(v189 + 8) | (*(unsigned __int8 *)(v189 + 10) << 16)) & 0x100000) != 0)
            {
              sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v229 + 24), 0xC5Eu, 0, (uint64_t)&__p);
              sub_22E903BEC((unsigned int *)&__p);
              sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v238 + 24), 0x163Eu, 0, (uint64_t)&v278);
              v210 = (unsigned int *)&v278;
              goto LABEL_326;
            }
            if (sub_22EFC2E8C(v185))
            {
              sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v229 + 24), 0xC5Au, 0, (uint64_t)v239);
              v209 = sub_22E8901B8((uint64_t)v239, &v230);
              v233.__r_.__value_.__s.__data_[0] = sub_22F10E06C(*(_QWORD *)(*(_QWORD *)(v185 + 48) & 0xFFFFFFFFFFFFFFF0));
              sub_22E894E38(v209, (unsigned __int8 *)&v233);
              sub_22E903BEC((unsigned int *)v239);
              sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v185 + 24), 0x64u, 0, (uint64_t)&v227);
              v210 = (unsigned int *)&v227;
LABEL_326:
              sub_22E903BEC(v210);
              goto LABEL_315;
            }
          }
          if (v232 <= v186)
            goto LABEL_314;
          v221 = v186;
          v190 = *(_QWORD *)(v231 + 8 * v186);
          v191 = *(unsigned int *)(v190 + 24);
          v192 = (*(_DWORD *)(v185 + 28) >> 13) & 3;
          v193 = v187;
          if ((int)v187 <= v192)
            v194 = (*(_DWORD *)(v185 + 28) >> 13) & 3;
          else
            v194 = v187;
          if (v192 == 2)
            v195 = 3;
          else
            v195 = v194;
          sub_22E90AD74(v3, *(_DWORD *)(v190 + 24), v62, v195 | v185);
          v196 = 1;
          v197 = sub_22F32D524(v3, v229, v230, 1, v191, 0);
          if ((v197 & 1) == 0)
          {
            v198 = v68;
            v199 = sub_22E90092C(v3, v197 & 0xFFFFFFFFFFFFFFFELL, v222, 8, 1, (uint64_t)&v305);
            if ((v199 & 1) == 0)
            {
              v200 = v199 & 0xFFFFFFFFFFFFFFFELL;
              *(_OWORD *)v239 = 0u;
              v240 = 0u;
              v201 = ((unint64_t)*(unsigned int *)(v185 + 28) >> 13) & 3 | v185;
              v233.__r_.__value_.__r.__words[0] = *(_QWORD *)(v185 + 40);
              LODWORD(v233.__r_.__value_.__r.__words[1]) = v191;
              sub_22EFC6D6C((uint64_t)&v233.__r_.__value_.__r.__words[2], (uint64_t)v233.__r_.__value_.__l.__data_);
              v202 = sub_22EC25974(v3, v200, 0, v191, v239, v185, v201, &v233);
              if (HIDWORD(v240))
                free((void *)v240);
              if ((v202 & 1) == 0)
              {
                v203 = *(_QWORD *)((v230 & 0xFFFFFFFFFFFFFFF0) + 8);
                v68 = v198;
                if ((v203 & 8) != 0)
                {
                  v205 = *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFFF0) + 0x18);
                  v204 = *(_QWORD *)((v203 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
                }
                else
                {
                  v204 = 0;
                  v205 = 0;
                }
                v187 = v193;
                v186 = v221 + 1;
                v206 = v205 | (v203 | v230) & 7;
                if ((*(_DWORD *)(v185 + 68) & 2) != 0)
                  v206 = v205 & 0xFFFFFFFE | (unint64_t)((v203 | v230) & 6);
                *(_QWORD *)(v190 + 48) = sub_22EE7D678((_QWORD *)v3, *(_QWORD *)(v185 + 48), v191, v206 | v204, 0);
                *(_QWORD *)(v190 + 64) = v202 & 0xFFFFFFFFFFFFFFFELL;
LABEL_308:
                while (1)
                {
                  v185 = *(_QWORD *)(v185 + 8) & 0xFFFFFFFFFFFFFFF8;
                  if (!v185)
                    break;
                  if ((*(_DWORD *)(v185 + 28) & 0x7Fu) - 49 < 3)
                    goto LABEL_283;
                }
LABEL_312:
                if (v232 == v186)
                {
                  v196 = 0;
                  goto LABEL_316;
                }
LABEL_314:
                sub_22EADFF5C((uint64_t)&__src);
                goto LABEL_315;
              }
              v196 = 1;
            }
            v68 = v198;
          }
LABEL_316:
          if (v305 != v68)
            free(v305);
          if (!v196)
            goto LABEL_101;
LABEL_100:
          sub_22EFC77E8(v2, 1);
          goto LABEL_101;
        }
        v186 = 0;
        goto LABEL_312;
      }
    }
    v239[0] = 0;
    v239[1] = &v239[1];
    *(_QWORD *)&v240 = &v239[1];
    *((_QWORD *)&v240 + 1) = 0;
    v241 = v70[111];
    for (j = 5; j != 21; j += 2)
      v239[j] = 0;
    v248 = v252;
    v249 = v252;
    v250 = v71[316];
    v251 = 0;
    v253 = 0;
    v254 = v256;
    v255 = 0x400000000;
    v259 = 0;
    v260 = 0;
    v261 = 257;
    v262 = 1;
    if (sub_22EFB3774(v236, (unsigned int (*)(uint64_t, unint64_t, uint64_t))sub_22EAE0050, (uint64_t)&v237, (uint64_t)v239, 0))
    {
      sub_22E8FCA40((_QWORD *)v3, v69, 0xC5Fu, 0, (uint64_t)&__src);
      LOBYTE(v234) = v236 == v238;
      v74 = sub_22E894E38((uint64_t)&__src, (unsigned __int8 *)&v234);
      v75 = sub_22E890024(v74, (uint64_t *)&v238);
      v76 = sub_22E890024(v75, (uint64_t *)&v236);
      v77 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)(v240 + 16) + 24 * *(unsigned int *)(v240 + 24) - 24)
                                    + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v77 + 8) & 0xF) != 0)
        v77 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(*(_QWORD *)(v240 + 16)
                                                                      + 24 * *(unsigned int *)(v240 + 24)
                                                                      - 24)
                                                          + 16));
      v233.__r_.__value_.__r.__words[0] = v77 & 0xFFFFFFFFFFFFFFF0;
      sub_22E8901B8(v76, (uint64_t *)&v233);
      sub_22E903BEC((unsigned int *)&__src);
      v78 = 0;
    }
    else
    {
      v78 = v236 | v72;
    }
    if (v254 != v256)
      free(v254);
    if (v249 != v248)
      free(v249);
    if ((v241 & 1) == 0)
      llvm::deallocate_buffer(v242, (void *)(16 * v243));
    sub_22E687D9C((uint64_t *)&v239[1]);
    goto LABEL_274;
  }
  v231 = v4;
  if (sub_22E508590((uint64_t)&v223, v7))
  {
    sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)(v2 + 24), 0xC69u, 0, (uint64_t)v239);
    v140 = sub_22E8901B8((uint64_t)v239, &v231);
    LODWORD(v278) = v7;
    v141 = sub_22E89519C(v140, (unsigned int *)&v278);
    v142 = v224;
    if (v224 < 0x41 || v142 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v223) <= 0x40)
    {
      v144 = v223;
      if (v142 < 0x41)
        v144 = (unint64_t *)&v223;
      v143 = *v144;
      if (v143 >= 0xFFFFFFFF)
        LODWORD(v143) = -1;
    }
    else
    {
      LODWORD(v143) = -1;
    }
    LODWORD(v227) = v143;
    v145 = sub_22E89519C(v141, (unsigned int *)&v227);
    __src = v265;
    __len = xmmword_22F455490;
    llvm::APInt::toString();
    v146 = (void *)__len;
    if ((unint64_t)__len >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v147 = __src;
    if ((unint64_t)__len >= 0x17)
    {
      v155 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)__len | 7) != 0x17)
        v155 = __len | 7;
      v156 = v155 + 1;
      p_p = operator new(v155 + 1);
      p_src = v156 | 0x8000000000000000;
      __p = p_p;
      v291 = v146;
    }
    else
    {
      HIBYTE(p_src) = __len;
      p_p = &__p;
      if (!(_QWORD)__len)
        goto LABEL_240;
    }
    memmove(p_p, v147, (size_t)v146);
LABEL_240:
    *((_BYTE *)v146 + (_QWORD)p_p) = 0;
    if (__src != v265)
      free(__src);
    v157 = sub_22F2F3734(v145, &__p);
    LOBYTE(__src) = sub_22E8BAD7C((uint64_t)&v223, v7);
    sub_22E894E38(v157, (unsigned __int8 *)&__src);
    if (SHIBYTE(p_src) < 0)
      operator delete(__p);
    goto LABEL_99;
  }
  if (!(_DWORD)v7)
    goto LABEL_101;
  v59 = sub_22E3CB704((llvm::StringMapImpl *)(*(_QWORD *)(v3 + 80) + 544), "get", 3uLL);
  v60 = *(_DWORD *)(v2 + 24);
  *(_QWORD *)&v278 = 0;
  v218 = (void *)v59;
  *((_QWORD *)&v278 + 1) = &v279[1];
  v279[0] = (void *)0x800000000;
  v280 = 0;
  v281 = 0;
  v282 = 0;
  v283 = (_QWORD *)v3;
  v285 = v60;
  v284 = v59;
  sub_22EFC6D6C((uint64_t)v286, v59);
  *(_OWORD *)&v286[8] = xmmword_22F463A40;
  v287 = 16842752;
  v288 = 0;
  v289 = 0;
  sub_22EC56024((uint64_t)&v278);
  v220 = 0;
  if ((sub_22EE8B180(v3, *(unsigned int *)(v2 + 24)) & 1) == 0)
  {
    v61 = sub_22F10C2A4(*v19);
    if (v61 && (*(_DWORD *)(v61 + 28) & 0x7Fu) - 35 <= 2)
      sub_22EC611AC(v3, &v278, v61 + 64, 0);
    if ((_DWORD)v278 == 5)
    {
LABEL_80:
      if (HIBYTE(v287))
      {
        if ((_DWORD)v278 == 5)
        {
          sub_22EC64D18(v283, (uint64_t)&v278);
        }
        else if (v281 && (*(_DWORD *)(v283[9] + 52) & 0x400000) != 0)
        {
          sub_22E90B5FC((unint64_t)v283, (uint64_t)&v278);
        }
      }
      if (v280)
      {
        v214 = sub_22EC6CBD0(v280);
        MEMORY[0x2348A0E9C](v214, 0x10E0C409F09D3C3);
      }
      if (*((void ***)&v278 + 1) != &v279[1])
        free(*((void **)&v278 + 1));
      goto LABEL_100;
    }
    if (LODWORD(v279[0]))
    {
      v79 = (_QWORD *)*((_QWORD *)&v278 + 1);
      v80 = 8 * LODWORD(v279[0]);
      while (1)
      {
        v81 = *v79 & 0xFFFFFFFFFFFFFFFCLL;
        v82 = *(_DWORD *)(v81 + 28);
        if ((v82 & 0x7Fu) <= 0x2F && ((1 << (v82 & 0x7F)) & 0xC00000060000) != 0)
        {
          v81 = sub_22EFBAEA4(v81);
          v82 = *(_DWORD *)(v81 + 28);
        }
        if ((v82 & 0x7F) == 0x1D)
        {
          v84 = *(_QWORD *)(v81 + 56);
          if ((*(_DWORD *)(v84 + 12) & 0x1FFFFFFF) != 0 && (*(_DWORD *)(*(_QWORD *)(v84 + 16) + 28) & 0x7F) == 0x3B)
            break;
        }
        ++v79;
        v80 -= 8;
        if (!v80)
          goto LABEL_124;
      }
      v220 = 1;
    }
    else
    {
LABEL_124:
      v220 = 0;
    }
  }
  v85 = 0;
  v86 = 0;
  v219 = 8 * v7;
  do
  {
    v87 = *(_QWORD *)(v2 + v85 + 104);
    v88 = *(_DWORD *)(v87 + 24);
    LODWORD(v239[0]) = 19;
    BYTE4(v239[0]) = 0;
    LODWORD(v239[1]) = v88;
    v240 = v87;
    v241 = 0;
    LODWORD(v242) = 0;
    v243 = 0;
    v244 = 0;
    sub_22EE012D0(v3, (unint64_t)v239);
    v89 = *(unsigned int *)(v87 + 24);
    v90 = sub_22F32D524(v3, v2, v4, 1, *(_DWORD *)(v87 + 24), 0);
    v91 = v90;
    if ((v90 & 1) != 0)
    {
      sub_22EE013E8((int32x2_t *)v3);
      goto LABEL_80;
    }
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) != 40)
    {
      v92 = v90 & 0xFFFFFFFFFFFFFFFELL;
      v93 = *(_QWORD *)((v90 & 0xFFFFFFFFFFFFFFFELL) + 8);
      v91 = sub_22E3CD3D4(*(_QWORD *)(v3 + 88) + 2032, 24, 3);
      sub_22F003694((unsigned int *)v91, v93, 5, v92, 0, 0, 2);
    }
    __src = (char *)&__len + 8;
    *(_QWORD *)&__len = 0x800000000;
    v276 = v89;
    v277 = v89;
    v94 = sub_22EF67C8C(*(_QWORD *)(v3 + 88));
    v95 = v86;
    sub_22EADFDC0((uint64_t)v239, v3, v89, v94, v86);
    v96 = (_OWORD *)sub_22E78DF7C((uint64_t)&__src, (unint64_t)v239, 1);
    v97 = (char *)__src + 32 * __len;
    v98 = v96[1];
    *v97 = *v96;
    v97[1] = v98;
    LODWORD(__len) = __len + 1;
    if (v220)
    {
      *(_OWORD *)v239 = 0u;
      v240 = 0u;
      v99 = sub_22EC24AB8(v3, v91 & 0xFFFFFFFFFFFFFFFELL, v4, v89, 0, (uint64_t *)v239, 0, 0, (uint64_t)&v278, (uint64_t)&__src, 0, 0, 0);
      if (HIDWORD(v240))
        free((void *)v240);
      if ((v99 & 1) != 0)
      {
LABEL_144:
        v120 = 1;
        goto LABEL_184;
      }
      v100 = v99 & 0xFFFFFFFFFFFFFFFELL;
      LOWORD(v215) = 0;
      v101 = v3;
      v102 = v89;
      v103 = 0;
      v104 = 0;
    }
    else
    {
      v105 = *(_QWORD *)(v3 + 88);
      v239[0] = v218;
      LODWORD(v239[1]) = v89;
      sub_22EFC6D6C((uint64_t)&v240, (uint64_t)v218);
      v100 = (unint64_t)sub_22F060684(v105, 0, 0, 0, 0, (uint64_t)v239, 1, (uint64_t)&__src, 0, 0);
      v239[0] = (void *)(v91 & 0xFFFFFFFFFFFFFFFELL);
      LOWORD(v215) = 0;
      v103 = v239;
      v101 = v3;
      v102 = v89;
      v104 = 1;
    }
    v106 = sub_22EB1CFA4(v101, 0, v100, v102, v103, v104, v89, 0, v215);
    if ((v106 & 1) != 0)
      goto LABEL_144;
    v217 = v86;
    v107 = (_DWORD *)(v106 & 0xFFFFFFFFFFFFFFFELL);
    v238 = v106 & 0xFFFFFFFFFFFFFFFELL;
    v239[0] = &v240;
    v239[1] = (void *)0x800000000;
    v257 = v89;
    v258 = v89;
    v108 = sub_22EF67C8C(*(_QWORD *)(v3 + 88));
    sub_22EADFDC0((uint64_t)&__p, v3, v89, v108, v95);
    v109 = (_OWORD *)sub_22E78DF7C((uint64_t)v239, (unint64_t)&__p, 1);
    v110 = (char *)v239[0] + 32 * LODWORD(v239[1]);
    v111 = v109[1];
    *v110 = *v109;
    v110[1] = v111;
    ++LODWORD(v239[1]);
    LODWORD(v227) = 1;
    *((_QWORD *)&v227 + 1) = v4;
    sub_22EDC0108(v3, (uint64_t)&v227, v89, (uint64_t)&__p);
    v112 = (_OWORD *)sub_22E78DF7C((uint64_t)v239, (unint64_t)&__p, 1);
    v113 = (char *)v239[0] + 32 * LODWORD(v239[1]);
    v114 = v112[1];
    *v113 = *v112;
    v113[1] = v114;
    ++LODWORD(v239[1]);
    v115 = sub_22E3CB704((llvm::StringMapImpl *)(*(_QWORD *)(v3 + 80) + 544), "type", 4uLL);
    __p = 0;
    v291 = v293;
    p_src = 0x800000000;
    v296 = 0;
    v297 = 0;
    v295 = 0;
    v298 = (_QWORD *)v3;
    v299 = v115;
    v300 = v89;
    sub_22EFC6D6C((uint64_t)v301, v115);
    v301[1] = 0;
    v301[2] = 0;
    v302 = 0;
    v303 = 257;
    v304 = 0;
    sub_22EC56024((uint64_t)&__p);
    v116 = 0;
    if ((sub_22EADF6D4((_QWORD *)v3, &__p, v89, "tuple_element", 0xDuLL, (uint64_t)v239, 0xC64u) & 1) == 0)
    {
      if ((_DWORD)__p != 2)
        goto LABEL_146;
      v117 = *(_QWORD *)v291 & 0xFFFFFFFFFFFFFFFCLL;
      v118 = *(_DWORD *)(v117 + 28) & 0x7F;
      if (v118 <= 0x2F && ((1 << v118) & 0xC00000060000) != 0)
      {
        v117 = sub_22EFBAEA4(*(_QWORD *)v291 & 0xFFFFFFFFFFFFFFFCLL);
        v118 = *(_DWORD *)(v117 + 28) & 0x7F;
      }
      if (v118 - 33 < 0xA)
      {
        v119 = *(_QWORD *)(v117 + 48);
        if (v119)
          v116 = v119 & 0xFFFFFFFFFFFFFFF0;
        else
          v116 = sub_22EF6462C(*(_QWORD *)(v3 + 88), v117);
      }
      else
      {
LABEL_146:
        BYTE1(v303) = 0;
        sub_22E8FCA40((_QWORD *)v3, v89, 0xC64u, 0, (uint64_t)&v227);
        sub_22EADFB24(&v305, *(_QWORD *)(v3 + 88) + 15104, (uint64_t)v239, 0);
        sub_22F2F3734((uint64_t)&v227, (void **)&v305);
        if ((v307[7] & 0x80000000) != 0)
          operator delete(v305);
        sub_22E903BEC((unsigned int *)&v227);
        if ((_DWORD)p_src)
        {
          sub_22E8FCA40((_QWORD *)v3, *(_DWORD *)((*(_QWORD *)v291 & 0xFFFFFFFFFFFFFFFCLL) + 24), 0x64u, 0, (uint64_t)&v227);
          sub_22E903BEC((unsigned int *)&v227);
        }
        v116 = 0;
      }
    }
    if (BYTE1(v303))
    {
      if ((_DWORD)__p == 5)
      {
        sub_22EC64D18(v298, (uint64_t)&__p);
      }
      else if (v296 && (*(_DWORD *)(v298[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v298, (uint64_t)&__p);
      }
    }
    if (v295)
    {
      v139 = sub_22EC6CBD0(v295);
      MEMORY[0x2348A0E9C](v139, 0x10E0C409F09D3C3);
    }
    if (v291 != v293)
      free(v291);
    if (v239[0] != &v240)
      free(v239[0]);
    if (v116 >= 0x10 && (v121 = sub_22EE7E490((_QWORD *)v3, v116, (*v107 & 0x300) == 256, v89), v121 >= 0x10))
    {
      v122 = v121;
      v216 = v116;
      v123 = *(_QWORD *)(v2 + 16);
      v124 = (_QWORD *)(v123 & 0xFFFFFFFFFFFFFFF8);
      if ((v123 & 4) != 0)
        v124 = (_QWORD *)*v124;
      v125 = *(_QWORD *)(v3 + 88);
      v126 = *(_QWORD *)(v87 + 40);
      if ((v126 & 7) != 0)
        v127 = 0;
      else
        v127 = v126 & 0xFFFFFFFFFFFFFFF8;
      v128 = sub_22EF579A8(*(_QWORD *)(v3 + 88), v216, v89);
      v129 = sub_22EFBB670(v125, (uint64_t)v124, v89, v89, v127, v122, (uint64_t)v128, *(_BYTE *)(v2 + 96) & 7);
      v130 = v129;
      v131 = *(_QWORD *)(v2 + 16);
      v132 = v131 & 0xFFFFFFFFFFFFFFF8;
      if ((v131 & 4) != 0)
        v132 = *(_QWORD *)(v132 + 8);
      sub_22EFC80C4(v129, v132);
      *(_BYTE *)(v130 + 96) = *(_BYTE *)(v130 + 96) & 0xE7 | *(_BYTE *)(v2 + 96) & 0x18;
      *(_DWORD *)(v130 + 28) |= 0x200u;
      v86 = v217;
      if ((*(_DWORD *)(v2 + 28) & 0x7F) != 0x40 && (*(_BYTE *)(v2 + 97) & 0x40) != 0)
        *(_DWORD *)(v130 + 96) |= 0x6000u;
      v133 = *(_QWORD *)(v130 + 16);
      v134 = v133 & 0xFFFFFFFFFFFFFFF8;
      if ((v133 & 4) != 0)
        v134 = *(_QWORD *)(v134 + 8);
      sub_22EFCCE00(v134, v130);
      LODWORD(__p) = 20;
      v135 = *(_QWORD *)(v130 + 48);
      v291 = 0;
      p_src = v135;
      LODWORD(v293[0]) = 0;
      v293[1] = v130;
      v294 = 0;
      v233.__r_.__value_.__r.__words[0] = (v89 << 32) | 2;
      LODWORD(v233.__r_.__value_.__r.__words[1]) = v89;
      HIDWORD(v233.__r_.__value_.__r.__words[1]) = v89;
      v120 = 1;
      sub_22EC395BC(v239, v3, &__p, &v233, &v238, 1, 0, 1);
      v136 = sub_22EC3DF80((int)v239, v3);
      if ((v136 & 1) == 0)
      {
        v137 = sub_22EBCF22C(v3, v136 & 0xFFFFFFFFFFFFFFFELL, v89, 0, 0);
        if ((v137 & 1) == 0)
        {
          sub_22EFBC9E4(v130, v137 & 0xFFFFFFFFFFFFFFFELL);
          sub_22EA2A59C(v3, v130);
          v227 = 0u;
          *(_OWORD *)v228 = 0u;
          v305 = *(_BYTE **)(v87 + 40);
          LODWORD(v306) = v89;
          sub_22EFC6D6C((uint64_t)v307, (uint64_t)v305);
          v138 = sub_22EB24A3C(v3, &v227, &v305, v130, 0, 0, 0);
          if (HIDWORD(v228[1]))
            free(v228[0]);
          if ((v138 & 1) == 0)
          {
            v120 = 0;
            *(_QWORD *)(v87 + 48) = v216;
            *(_QWORD *)(v87 + 64) = v138 & 0xFFFFFFFFFFFFFFFELL;
            v86 = v217 + 1;
          }
        }
      }
      sub_22EC3CE2C((uint64_t)v239);
    }
    else
    {
      v120 = 1;
      v86 = v217;
    }
LABEL_184:
    if (__src != (char *)&__len + 8)
      free(__src);
    sub_22EE013E8((int32x2_t *)v3);
    if (v120)
      goto LABEL_80;
    v85 += 8;
  }
  while (v219 != v85);
  if (HIBYTE(v287))
  {
    if ((_DWORD)v278 == 5)
    {
      sub_22EC64D18(v283, (uint64_t)&v278);
    }
    else if (v281 && (*(_DWORD *)(v283[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v283, (uint64_t)&v278);
    }
  }
  if (v280)
  {
    v213 = sub_22EC6CBD0(v280);
    MEMORY[0x2348A0E9C](v213, 0x10E0C409F09D3C3);
  }
  if (*((void ***)&v278 + 1) != &v279[1])
    free(*((void **)&v278 + 1));
LABEL_101:
  if (v224 >= 0x41 && v223)
    MEMORY[0x2348A0E84](v223, 0x1000C8000313F17);
}

uint64_t sub_22EAA82D0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  BOOL v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int *v17;
  uint64_t v18;
  unint64_t v19;
  _BYTE v20[96];
  unint64_t v21;
  _BYTE v22[96];

  v4 = *(_QWORD *)(a2[6] & 0xFFFFFFFFFFFFFFF0);
  if (v4)
    v5 = *(_BYTE *)(v4 + 16) == 26;
  else
    v5 = 0;
  if (v5
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26 && (v4 = sub_22F10CF48(v4)) != 0)
  {
    v6 = (unsigned __int16)(*(_QWORD *)(v4 + 16) >> 38);
  }
  else
  {
    v6 = 0;
  }
  v7 = a2[18] & 6;
  result = a2[18] & 0xFFFFFFFFFFFFFFF8;
  if (v7 != 4 || result == 0)
  {
    if (v7 != 2 || result == 0)
    {
      if (!v7)
      {
        if (result)
        {
          result = sub_22EFE9368(result);
          if ((*(_BYTE *)result & 4) != 0)
            return result;
        }
      }
      goto LABEL_22;
    }
  }
  else
  {
    result += 16;
  }
  if ((*(_QWORD *)result & 6) == 2)
    return result;
LABEL_22:
  if (v6)
  {
    v11 = 0;
    while (1)
    {
      v12 = *(_QWORD *)(a2[15] + 8 * v11);
      if ((*(_DWORD *)(v12 + 96) & 0x600) == 0x400
        || (*(_DWORD *)(v12 + 96) & 0x600) == 0x200
        || *(_QWORD *)(v12 + 88) > 7uLL)
      {
        break;
      }
      if (v6 == ++v11)
        return result;
    }
  }
  else
  {
    LODWORD(v11) = 0;
  }
  if (v11 < v6)
  {
    v13 = v11;
    v14 = v6;
    do
    {
      v15 = *(_QWORD *)(a2[15] + 8 * v13);
      if ((*(_DWORD *)(v15 + 96) & 0x600) != 0x400
        && (*(_DWORD *)(v15 + 96) & 0x600) != 0x200
        && *(_QWORD *)(v15 + 88) <= 7uLL
        && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v15 + 48) & 0xFFFFFFFFFFFFFFF0) + 16) != 36)
      {
        result = a1[1503];
        if (!result || (result = sub_22EE13028(result, *(_QWORD *)(a2[15] + 8 * v13)), (result & 1) == 0))
        {
          if ((*(_BYTE *)(v15 + 28) & 0x80) == 0)
          {
            if (*(_QWORD *)(v15 + 40) >= 8uLL && (*(_QWORD *)(v15 + 40) & 7) == 0)
            {
              sub_22E8FCA40(a1, *(_DWORD *)(v15 + 24), 0x1195u, 0, (uint64_t)v22);
              v18 = *(_QWORD *)(v15 + 40);
              if ((v18 & 7) != 0)
                v19 = 0;
              else
                v19 = v18 & 0xFFFFFFFFFFFFFFF8;
              v21 = v19;
              sub_22E8BAE44((uint64_t)v22, (uint64_t *)&v21);
              v17 = (unsigned int *)v22;
            }
            else
            {
              sub_22E8FCA40(a1, *(_DWORD *)(v15 + 24), 0x1194u, 0, (uint64_t)v20);
              v17 = (unsigned int *)v20;
            }
            result = (uint64_t)sub_22E903BEC(v17);
          }
        }
      }
      ++v13;
    }
    while (v14 != (_DWORD)v13);
  }
  return result;
}

uint64_t sub_22EAA84E0(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int *v25;
  int *v26;
  int *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  unsigned int v37;
  uint64_t v38;
  int v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  __int128 v43;
  unsigned __int8 **v44;
  int v45;
  BOOL v46;
  int v47;
  int v48;
  unsigned int v49;
  unint64_t v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  uint64_t v54;
  unsigned int v55;
  int v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t i;
  uint64_t v73;
  int v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t **v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v95;
  const void **v96;
  uint64_t v97;
  const void *v98;
  unint64_t v99;
  unint64_t v100;
  BOOL v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int v107[24];
  unsigned int v108[24];
  unsigned int v109[25];
  BOOL v110;
  BOOL v111;
  unsigned int v112[24];
  unsigned int v113[24];
  __int128 v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  void *v118[2];
  uint64_t v119;
  unint64_t v120;
  _QWORD v121[30];
  _DWORD *v122;
  uint64_t v123;
  _QWORD v124[4];

  v124[2] = *MEMORY[0x24BDAC8D0];
  if (!a2
    || (*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC
    || (*(_QWORD *)((*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2) + 80) & 0xE000) == 0x4000
    || (*(_QWORD *)(a2 + 40) & 7) == 6
    && (*(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) < 4)
  {
    goto LABEL_32;
  }
  v6 = *(_WORD *)(a2 + 80) & 0x7F;
  v7 = -40;
  if (v6 > 0x46)
  {
    if (v6 == 83)
      goto LABEL_22;
    if (v6 == 71)
    {
      v7 = -56;
      goto LABEL_22;
    }
    if (v6 != 81)
    {
LABEL_17:
      v8 = v6 - 52;
      v9 = v6 - 33 >= 5;
      v10 = -48;
      if (!v9)
        v10 = -64;
      if (v8 >= 6)
        v7 = v10;
      else
        v7 = -72;
    }
  }
  else
  {
    if (v6 > 0x18)
      goto LABEL_16;
    if (v6 == 16)
    {
LABEL_9:
      v7 = -48;
      goto LABEL_22;
    }
    if (((1 << v6) & 0x1066) == 0)
    {
      if (v6 == 24)
        goto LABEL_9;
LABEL_16:
      if (v6 == 70)
      {
        v7 = -64;
        goto LABEL_22;
      }
      goto LABEL_17;
    }
  }
LABEL_22:
  v11 = *(_QWORD *)(a2 + 72 + v7 + 16);
  v12 = (_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
  if ((v11 & 4) != 0)
    v12 = (_QWORD *)*v12;
  if (v12)
    v13 = (uint64_t)(v12 - 8);
  else
    v13 = 0;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v13 + 104) + 96), *(_QWORD *)(v13 + 104));
  if (*(_DWORD *)(*(_QWORD *)(v13 + 128) + 20))
  {
    if ((_DWORD)a3 != 1)
    {
      sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xC13u, 0, (uint64_t)v118);
      LOBYTE(v112[0]) = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
      v14 = sub_22E894E38((uint64_t)v118, (unsigned __int8 *)v112);
      v15 = (unsigned __int16)*(_DWORD *)(v13 + 72) >> 13;
      if ((unsigned __int16)*(_DWORD *)(v13 + 72) >> 13)
      {
        if (v15 == 3)
          v15 = 2;
        else
          v15 = 1;
      }
      LODWORD(v114) = v15;
      v23 = sub_22E89519C(v14, (unsigned int *)&v114);
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v13 + 104) + 96), *(_QWORD *)(v13 + 104));
      v113[0] = *(_DWORD *)(*(_QWORD *)(v13 + 128) + 20);
      sub_22E89519C(v23, v113);
      sub_22E903BEC((unsigned int *)v118);
      v24 = sub_22E483108(v13);
      if ((int *)v24 != v25)
      {
        v26 = (int *)v24;
        v27 = v25;
        do
        {
          sub_22E8FCA40(a1, *v26, 0x1579u, 0, (uint64_t)v118);
          v28 = *(_QWORD *)v26;
          v26 += 6;
          *(_QWORD *)&v114 = v28;
          sub_22E8906A0((uint64_t)v118, (uint64_t *)&v114);
          sub_22E903BEC((unsigned int *)v118);
        }
        while (v26 != v27);
      }
    }
    return 0;
  }
LABEL_32:
  v16 = *(_DWORD *)(a2 + 28);
  if ((v16 & 0x7F) != 0x37)
  {
    if (a2)
    {
      if ((v16 & 0x7Eu) - 58 >= 0xFFFFFFFC)
      {
        v17 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2);
        if ((*(_BYTE *)(v17 + 82) & 0xC) != 0 || sub_22EFD7260(v17))
        {
          if ((*(_BYTE *)(a1[9] + 1) & 0x10) == 0)
          {
            if ((_DWORD)a3 == 1)
              return 0;
            v18 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2);
            sub_22E8FCA40(a1, *(_DWORD *)(v18 + 24), 0xC12u, 0, (uint64_t)v108);
            sub_22E903BEC(v108);
            a3 = 0;
            if ((*(_BYTE *)(v18 + 82) & 4) == 0)
            {
              v19 = v18;
              do
                v19 = *(_QWORD *)sub_22F3B203C(v19);
              while ((*(_BYTE *)(v19 + 82) & 4) == 0);
              if (v19 != v18)
              {
                sub_22E8FCA40(a1, *(_DWORD *)(v19 + 24), 0x1723u, 0, (uint64_t)v107);
                sub_22E903BEC(v107);
              }
              return 0;
            }
            return a3;
          }
          if (!(_DWORD)a3)
          {
            sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x1908u, 0, (uint64_t)v109);
            sub_22E903BEC(v109);
          }
        }
      }
    }
    if (!sub_22EAA9494(a1, a2, a3))
      return 0;
    v16 = *(_DWORD *)(a2 + 28);
  }
  if (!a2 || (v16 & 0x7F) != 0x39)
  {
LABEL_77:
    if (!sub_22EAA957C(a1, a2, a3))
      return 0;
    v34 = (_BYTE *)(*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
    v35 = (uint64_t)v34;
    v122 = v124;
    v123 = 0x400000000;
    if (*v34 == 6)
    {
      if ((_DWORD)a3)
      {
        if ((_DWORD)a3 == 1 && (*(_BYTE *)(a1[9] + 1) & 0x10) == 0)
          return 0;
      }
      else
      {
        sub_22F0D5A50((uint64_t)v34);
        if ((*(_QWORD *)a1[9] & 0x1000) != 0)
          v40 = 6405;
        else
          v40 = 5195;
        sub_22E8FCA40(a1, v39, v40, 0, (uint64_t)v118);
        LOBYTE(v114) = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
        sub_22E894E38((uint64_t)v118, (unsigned __int8 *)&v114);
        sub_22E903BEC((unsigned int *)v118);
      }
    }
    v117 = 0;
    v116 = 0;
    sub_22F0D492C(v35);
    v114 = *(_OWORD *)v118;
    v41 = v120;
    v115 = v119;
    v42 = v121[0];
    while (1)
    {
      v43 = v114;
      if (v114 == __PAIR128__(v42, v41))
        break;
      v44 = (unsigned __int8 **)v114;
      if ((BYTE8(v114) & 3) != 0)
      {
        if ((*((_QWORD *)&v114 + 1) & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v44 = (unsigned __int8 **)((*((_QWORD *)&v114 + 1) & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v44 = (unsigned __int8 **)sub_22F3AC1A8(*(_QWORD *)v114);
      }
      if (*v44 && !sub_22EAE02E4(a1, a2, *v44, (uint64_t)&v122, (_DWORD *)&v117 + 1, &v117, &v116, a3))
        goto LABEL_270;
      if ((BYTE8(v43) & 3) != 0)
      {
        if (*((_QWORD *)&v43 + 1) < 4uLL)
          sub_22F3F2FE0((uint64_t)&v114, 1);
        else
          sub_22F0D8720((uint64_t)&v114);
      }
      else
      {
        *(_QWORD *)&v114 = v43 + 8;
      }
    }
    v45 = v116;
    if ((_DWORD)a3 == 1)
    {
      if (v116 && (*(_BYTE *)(a1[9] + 1) & 0x20) == 0
        || (_DWORD)v117 && (*(_BYTE *)(a1[9] + 1) & 0x10) == 0
        || HIDWORD(v117) && (*(_BYTE *)(a1[9] + 1) & 8) == 0)
      {
        goto LABEL_270;
      }
    }
    else
    {
      if (v116)
      {
        v46 = (*(_QWORD *)a1[9] & 0x2000) == 0;
        v47 = 6425;
        v48 = 5191;
      }
      else
      {
        v45 = v117;
        if ((_DWORD)v117)
        {
          v46 = (*(_QWORD *)a1[9] & 0x1000) == 0;
          v47 = 6403;
          v48 = 5190;
        }
        else
        {
          v45 = HIDWORD(v117);
          if (!HIDWORD(v117))
            goto LABEL_129;
          v46 = (*(_QWORD *)a1[9] & 0x400) == 0;
          v47 = 6386;
          v48 = 5189;
        }
      }
      if (v46)
        v49 = v48;
      else
        v49 = v47;
      sub_22E8FCA40(a1, v45, v49, 0, (uint64_t)v118);
      LOBYTE(v114) = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
      sub_22E894E38((uint64_t)v118, (unsigned __int8 *)&v114);
      sub_22E903BEC((unsigned int *)v118);
    }
LABEL_129:
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
    {
      v50 = a2 + 72;
      v51 = *(_WORD *)(a2 + 80) & 0x7F;
      v52 = -40;
      if (v51 > 0x46)
      {
        if (v51 == 83)
          goto LABEL_218;
        if (v51 == 71)
        {
          v52 = -56;
          goto LABEL_218;
        }
        if (v51 != 81)
        {
LABEL_213:
          v79 = v51 - 52;
          v9 = v51 - 33 >= 5;
          v80 = -48;
          if (!v9)
            v80 = -64;
          if (v79 >= 6)
            v52 = v80;
          else
            v52 = -72;
        }
      }
      else
      {
        if (v51 > 0x18)
          goto LABEL_212;
        if (v51 == 16)
        {
LABEL_133:
          v52 = -48;
          goto LABEL_218;
        }
        if (((1 << v51) & 0x1066) == 0)
        {
          if (v51 == 24)
            goto LABEL_133;
LABEL_212:
          if (v51 == 70)
          {
            v52 = -64;
            goto LABEL_218;
          }
          goto LABEL_213;
        }
      }
LABEL_218:
      v81 = *(_QWORD *)(v50 + v52 + 16);
      v82 = (_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF8);
      if ((v81 & 4) != 0)
        v82 = (_QWORD *)*v82;
      if (v82)
        v83 = (uint64_t)(v82 - 8);
      else
        v83 = 0;
      if ((*(_DWORD *)(v83 + 72) & 0xE000) == 0x4000)
      {
        if ((*(_DWORD *)(a2 + 84) & 0x1FFFFF00) == 0)
        {
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v83 + 104) + 96), *(_QWORD *)(v83 + 104));
          if ((**(_QWORD **)(v83 + 128) & 0x100000) != 0)
          {
            if ((_DWORD)a3)
            {
              if ((*(_BYTE *)(a1[9] + 1) & 0x10) != 0)
                goto LABEL_228;
LABEL_270:
              a3 = 0;
              goto LABEL_281;
            }
            if ((*(_QWORD *)a1[9] & 0x1000) != 0)
              v102 = 6407;
            else
              v102 = 5200;
            sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v102, 0, (uint64_t)&v114);
            sub_22E903BEC((unsigned int *)&v114);
            goto LABEL_275;
          }
        }
LABEL_268:
        v118[0] = &v119;
        v118[1] = (void *)0x800000000;
        if ((_DWORD)a3)
          goto LABEL_280;
LABEL_276:
        if ((sub_22F00AA7C(a2, (uint64_t)v118) & 1) == 0)
        {
          sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x144Au, 0, (uint64_t)v112);
          v111 = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
          v103 = sub_22E894E38((uint64_t)v112, (unsigned __int8 *)&v111);
          v110 = (*(_QWORD *)(a2 + 80) & 0xC0000000) == 0x80000000;
          sub_22E894E38(v103, (unsigned __int8 *)&v110);
          sub_22E903BEC(v112);
          if (LODWORD(v118[1]))
          {
            v104 = 0;
            v105 = 32 * LODWORD(v118[1]);
            do
            {
              sub_22E90379C(a1, *(_DWORD *)((char *)v118[0] + v104), (uint64_t)v118[0] + v104 + 8, 0, (uint64_t)v112);
              sub_22E903BEC(v112);
              v104 += 32;
            }
            while (v105 != v104);
          }
        }
        goto LABEL_280;
      }
      if ((sub_22EFC7ADC(v50) & 1) != 0)
        goto LABEL_268;
      if ((*(_QWORD *)(a2 + 80) & 0x1FFFFF0000000000) == 0x10000000000)
      {
        v84 = sub_22EFD7ED0(a2);
        if ((**(_BYTE **)v84 & 6) == 0 && (*(_WORD *)(*(_QWORD *)v84 + 28) & 1) != 0)
          goto LABEL_268;
      }
      v85 = sub_22EFC3B90(v83);
      v86 = v85;
      if (v85)
      {
        if ((sub_22EFC2E8C(v85) & 1) != 0)
        {
LABEL_242:
          v118[0] = v121;
          v118[1] = v121;
          v119 = 16;
          LODWORD(v120) = 0;
          v89 = (uint64_t **)sub_22EFD7ED0(a2);
          v90 = sub_22EFD7ED0(a2) + 8 * ((*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL);
          while (v89 != (uint64_t **)v90)
          {
            v91 = **v89;
            v92 = v91 & 0xFFFFFFFFFFFFFFF8;
            if ((v91 & 6) != 2 || v92 == 0)
            {
              if ((v91 & 6) == 4 && v92 != 0)
              {
                v95 = *(unsigned int *)(v92 + 64);
                if ((_DWORD)v95)
                {
                  v96 = *(const void ***)(v92 + 56);
                  v97 = 8 * v95;
                  do
                  {
                    v98 = *v96++;
                    sub_22E3BA850((uint64_t)v118, v98);
                    v97 -= 8;
                  }
                  while (v97);
                }
              }
            }
            else
            {
              sub_22E3BA850((uint64_t)v118, (const void *)v92);
            }
            ++v89;
          }
          LOBYTE(v114) = 0;
          v99 = sub_22EFC3B90(v83);
          if (v99)
          {
            v100 = v99;
            if (sub_22EAE1054(a1, a2, v99, (unsigned int *)v118, &v114, a3))
            {
              do
              {
                v100 = *(_QWORD *)(v100 + 8) & 0xFFFFFFFFFFFFFFF8;
                v101 = v100 == 0;
              }
              while (v100
                   && ((*(_DWORD *)(v100 + 28) & 0x7Fu) - 49 > 2
                    || (sub_22EAE1054(a1, a2, v100, (unsigned int *)v118, &v114, a3) & 1) != 0));
            }
            else
            {
              v101 = 0;
            }
          }
          else
          {
            v101 = 1;
          }
          if (v118[1] != v118[0])
            free(v118[1]);
          if (!v101)
            goto LABEL_270;
          goto LABEL_268;
        }
        v87 = 0;
        while (1)
        {
          v86 = *(_QWORD *)(v86 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v86)
            break;
          if ((*(_DWORD *)(v86 + 28) & 0x7Fu) - 49 <= 2)
          {
            ++v87;
            if ((sub_22EFC2E8C(v86) & 1) != 0)
              goto LABEL_242;
          }
        }
        LODWORD(v86) = v87 + 1;
      }
      v88 = (*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL;
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v83 + 104) + 96), *(_QWORD *)(v83 + 104));
      if ((_DWORD)v88 == *(_DWORD *)(*(_QWORD *)(v83 + 128) + 16) + (_DWORD)v86)
        goto LABEL_268;
      goto LABEL_242;
    }
    if ((_DWORD)v123)
    {
      if ((_DWORD)v123 == 1)
        goto LABEL_268;
      if ((_DWORD)a3 != 1)
      {
        if (!(_DWORD)a3)
        {
          if ((*(_QWORD *)a1[9] & 0x400) != 0)
            v53 = 6387;
          else
            v53 = 5192;
          sub_22E8FCA40(a1, v122[v123 - 1], v53, 0, (uint64_t)&v114);
          sub_22E903BEC((unsigned int *)&v114);
          if ((_DWORD)v123 != 1)
          {
            v54 = 0;
            v55 = 1;
            do
            {
              sub_22E8FCA40(a1, v122[v54], 0x1576u, 0, (uint64_t)v113);
              sub_22E903BEC(v113);
              v54 = v55;
            }
            while ((unint64_t)v123 - 1 > v55++);
            goto LABEL_268;
          }
LABEL_275:
          v118[0] = &v119;
          v118[1] = (void *)0x800000000;
          goto LABEL_276;
        }
        goto LABEL_228;
      }
    }
    else
    {
      if ((*(_BYTE *)(a1[9] + 1) & 4) != 0)
      {
        v58 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
        if (!v58 || *(unsigned __int8 *)(v58 + 16) - 27 <= 0xFFFFFFFD)
          v58 = sub_22F10CF48(v58);
        v59 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v58 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v59)
          v60 = (*(_DWORD *)(v59 + 16) & 0xFF800FF) == 86507531;
        else
          v60 = 0;
        if (v60)
        {
          v57 = 1;
        }
        else
        {
          v61 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
          if (!v61 || *(unsigned __int8 *)(v61 + 16) - 27 <= 0xFFFFFFFD)
            v61 = sub_22F10CF48(v61);
          v57 = (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v61 + 24) & 0xFFFFFFFFFFFFFFF0) + 17) >> 2) & 1;
        }
      }
      else
      {
        v57 = 0;
      }
      if ((_DWORD)a3 != 1)
      {
        if (!(_DWORD)a3)
        {
          if (v57)
            v78 = 6388;
          else
            v78 = 3075;
          sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), v78, 0, (uint64_t)v118);
          LOBYTE(v114) = (*(_QWORD *)(a2 + 80) & 0xC0000000) == 0x80000000;
          sub_22E894E38((uint64_t)v118, (unsigned __int8 *)&v114);
          sub_22E903BEC((unsigned int *)v118);
          if ((v57 & 1) == 0)
          {
LABEL_281:
            if (v122 != (_DWORD *)v124)
              free(v122);
            return a3;
          }
          goto LABEL_275;
        }
LABEL_228:
        v118[0] = &v119;
        v118[1] = (void *)0x800000000;
LABEL_280:
        sub_22E89277C((char **)v118);
        a3 = 1;
        goto LABEL_281;
      }
    }
    if ((*(_BYTE *)(a1[9] + 1) & 4) == 0)
      goto LABEL_270;
    goto LABEL_228;
  }
  v20 = a2 + 72;
  v21 = *(_WORD *)(a2 + 80) & 0x7F;
  v22 = -40;
  if (v21 > 0x46)
  {
    if (v21 == 83)
      goto LABEL_71;
    if (v21 == 71)
    {
      v22 = -56;
      goto LABEL_71;
    }
    if (v21 != 81)
    {
LABEL_66:
      v29 = v21 - 52;
      v9 = v21 - 33 >= 5;
      v30 = -48;
      if (!v9)
        v30 = -64;
      if (v29 >= 6)
        v22 = v30;
      else
        v22 = -72;
    }
  }
  else
  {
    if (v21 > 0x18)
      goto LABEL_65;
    if (v21 == 16)
    {
LABEL_53:
      v22 = -48;
      goto LABEL_71;
    }
    if (((1 << v21) & 0x1066) == 0)
    {
      if (v21 == 24)
        goto LABEL_53;
LABEL_65:
      if (v21 == 70)
      {
        v22 = -64;
        goto LABEL_71;
      }
      goto LABEL_66;
    }
  }
LABEL_71:
  v31 = *(_QWORD *)(v20 + v22 + 16);
  v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
  if ((v31 & 4) != 0)
    v32 = (_QWORD *)*v32;
  if (v32)
    v33 = (unint64_t)(v32 - 8);
  else
    v33 = 0;
  if ((sub_22EAA9528(v33) & 1) != 0)
    goto LABEL_77;
  if ((_DWORD)a3 == 1)
    return 0;
  *(_QWORD *)&v114 = a2;
  v113[0] = a3;
  v118[0] = v113;
  v118[1] = a1;
  v119 = (uint64_t)&v114;
  v37 = *(_WORD *)(a2 + 80) & 0x7F;
  v38 = -40;
  if (v37 > 0x46)
  {
    if (v37 == 83)
      goto LABEL_170;
    if (v37 == 71)
    {
      v38 = -56;
      goto LABEL_170;
    }
    if (v37 != 81)
    {
LABEL_165:
      v62 = v37 - 52;
      v9 = v37 - 33 >= 5;
      v63 = -48;
      if (!v9)
        v63 = -64;
      if (v62 >= 6)
        v38 = v63;
      else
        v38 = -72;
    }
  }
  else
  {
    if (v37 > 0x18)
      goto LABEL_164;
    if (v37 == 16)
    {
LABEL_89:
      v38 = -48;
      goto LABEL_170;
    }
    if (((1 << v37) & 0x1066) == 0)
    {
      if (v37 == 24)
        goto LABEL_89;
LABEL_164:
      if (v37 == 70)
      {
        v38 = -64;
        goto LABEL_170;
      }
      goto LABEL_165;
    }
  }
LABEL_170:
  v64 = *(_QWORD *)(v20 + v38 + 16);
  v65 = (_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF8);
  if ((v64 & 4) != 0)
    v65 = (_QWORD *)*v65;
  if (v65)
    v66 = (uint64_t)(v65 - 8);
  else
    v66 = 0;
  v106 = v66;
  v67 = sub_22E46A3A0(v66);
  if (v67 == v68)
  {
LABEL_194:
    v76 = sub_22EFC3B90(v106);
    if (v76)
    {
      v77 = v76;
      if (!sub_22EAE013C((uint64_t)v118, *(_DWORD *)(v76 + 24), *(_QWORD *)(v76 + 48), v76))
        return 0;
      while (1)
      {
        v77 = *(_QWORD *)(v77 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v77)
          break;
        if ((*(_DWORD *)(v77 + 28) & 0x7Fu) - 49 <= 2
          && (sub_22EAE013C((uint64_t)v118, *(_DWORD *)(v77 + 24), *(_QWORD *)(v77 + 48), v77) & 1) == 0)
        {
          return 0;
        }
      }
    }
    goto LABEL_77;
  }
  v69 = v67;
  v70 = v68;
  while (2)
  {
    v71 = **(_QWORD **)(v69 + 16);
    for (i = v71; ; i = sub_22F115B7C(i))
    {
      while (1)
      {
        if ((i & 0xF) != 0)
          goto LABEL_188;
        v73 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v73 <= 0x39)
          break;
LABEL_183:
        if (sub_22F115668(i))
          v71 = i;
        i = sub_22F115B7C(i);
        if (!i)
          goto LABEL_190;
      }
      if (v73 == 24)
        goto LABEL_189;
      if (v73 == 26)
        break;
      if (((1 << v73) & 0x20000000200003CLL) == 0)
        goto LABEL_183;
LABEL_188:
      ;
    }
    if ((*(_BYTE *)(i + 23) & 0x10) == 0)
      goto LABEL_188;
LABEL_189:
    v71 = i;
LABEL_190:
    v74 = sub_22F115668(v71);
    v75 = *(_QWORD *)(**(_QWORD **)(v69 + 16) & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v75 + 8) & 0xF) != 0)
      v75 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v69 + 16));
    if ((sub_22EAE013C((uint64_t)v118, v74, v75 & 0xFFFFFFFFFFFFFFF0, 0) & 1) != 0)
    {
      v69 += 24;
      if (v69 == v70)
        goto LABEL_194;
      continue;
    }
    return 0;
  }
}

uint64_t sub_22EAA9494(_QWORD *a1, uint64_t a2, int a3)
{
  unsigned int v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  BOOL v11;

  v6 = *(_DWORD *)(a2 + 24);
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
    v8 = *(unsigned __int8 *)(v7 + 16) - 27 > 0xFFFFFFFD;
  else
    v8 = 0;
  if (!v8)
    v7 = sub_22F10CF48(v7);
  v9 = *(_QWORD *)(v7 + 24);
  v11 = (*(_QWORD *)(a2 + 80) & 0xC0000000) == 0x80000000;
  return sub_22EAE00C8(a1, a3, v6, v9, 3082, (uint64_t)&v11) ^ 1;
}

uint64_t sub_22EAA9528(unint64_t a1)
{
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a1 + 104) + 96), *(_QWORD *)(a1 + 104));
  if ((*(_WORD *)(*(_QWORD *)(a1 + 128) + 8) & 0x10) != 0)
    return (*(unsigned __int8 *)(sub_22EFC8868(a1) + 1) >> 4) & 1;
  else
    return 0;
}

uint64_t sub_22EAA957C(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v16;
  BOOL v17;
  uint64_t v18;
  int v19;
  uint64_t (**v20)();
  int v21;
  int *v22;
  uint64_t *v23;
  BOOL *v24;
  BOOL *v25;

  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_BYTE *)(v6 + 16) == 26;
  else
    v7 = 0;
  if (!v7)
    v6 = sub_22F10CF48(v6);
  if (!(unsigned __int16)(*(_QWORD *)(v6 + 16) >> 38))
    return 1;
  v8 = 0;
  v9 = v6 + 40;
  v10 = 8 * (unsigned __int16)(*(_QWORD *)(v6 + 16) >> 38);
  while (1)
  {
    v11 = *(_DWORD **)(*(_QWORD *)(a2 + 120) + 8 * v8);
    v12 = v11[6];
    v13 = *(_QWORD *)(v9 + 8 * v8);
    v19 = v8 + 1;
    v18 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v11 + 16))(v11);
    v17 = (*(_DWORD *)(a2 + 28) & 0x7F) == 55;
    v16 = (*(_QWORD *)(a2 + 80) & 0xC0000000) == 0x80000000;
    v14 = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_BYTE *)(v14 + 17) & 4) != 0)
      goto LABEL_13;
    if (!a3)
      break;
    if (!sub_22F111D3C(v14, a1[11]))
      return 0;
LABEL_13:
    ++v8;
    v10 -= 8;
    if (!v10)
      return 1;
  }
  v20 = off_24FAB7D68;
  v21 = 3081;
  v22 = &v19;
  v23 = &v18;
  v24 = &v17;
  v25 = &v16;
  if ((sub_22EE8BC8C(a1, v12, v13, (void (***)(_QWORD, _QWORD *, _QWORD, unint64_t))&v20) & 1) == 0)
    goto LABEL_13;
  return 0;
}

unint64_t sub_22EAA96DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t result;

  if (a3)
  {
    if (*(_DWORD *)a3 && *(_DWORD *)(a3 + 4))
    {
      if (!*(_QWORD *)(a3 + 8))
        return 0;
LABEL_7:
      result = sub_22E958204(a1, a3, 1);
      if (!result)
        return result;
      goto LABEL_10;
    }
    if (*(_QWORD *)(a3 + 8))
      goto LABEL_7;
  }
  result = *(_QWORD *)(a1 + 216);
  if (!result)
    return result;
LABEL_10:
  if ((*(_WORD *)(result + 8) & 0x7Fu) - 35 >= 3)
    return 0;
  result -= 64;
  return result;
}

unint64_t sub_22EAA974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result;

  result = sub_22EAA96DC(a1, a2, a4);
  if (result)
    return (*(_QWORD *)(result + 40) & 7) == 0 && (*(_QWORD *)(result + 40) & 0xFFFFFFFFFFFFFFF8) == a2;
  return result;
}

uint64_t sub_22EAA9788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;

  if ((*(_QWORD *)(*(_QWORD *)(a1 + 72) + 140) & 0x100000000000000) == 0)
    return 0;
  if (!a3 || !*(_QWORD *)(a3 + 8))
  {
    v5 = *(_QWORD *)(a1 + 216);
    if (v5)
      goto LABEL_7;
    return 0;
  }
  v4 = sub_22E958204(a1, a3, 1);
  if (!v4)
    return 0;
  v5 = v4;
LABEL_7:
  if ((*(_WORD *)(v5 + 8) & 0x7Fu) - 35 >= 3)
    return 0;
  v6 = *(_QWORD *)(v5 - 24) & 0xFFFFFFFFFFFFFFF8;
  v7 = (*(_QWORD *)(v5 - 24) & 7) != 0 || v6 == 0;
  if (v7 || *(_QWORD *)a2 == v6)
    return 0;
  v8 = llvm::StringRef::edit_distance();
  result = 0;
  if ((3 * v8) < **(_DWORD **)(*(_QWORD *)a2 + 16))
  {
    v10 = *(_QWORD *)(v5 - 24);
    if ((v10 & 7) != 0)
      v11 = 0;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)a2 = v11;
    return 1;
  }
  return result;
}

uint64_t sub_22EAA9880(_QWORD *a1, unint64_t a2, uint64_t a3, char a4, char a5, uint64_t *a6, int a7)
{
  uint64_t v7;
  uint64_t *v8;
  int v9;
  int v11;
  unsigned int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t result;
  BOOL v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  size_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  int v94;
  _QWORD *v97;
  uint64_t v98;
  unsigned int v99[24];
  uint64_t v100[2];
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  _QWORD v106[12];

  v106[10] = *MEMORY[0x24BDAC8D0];
  v7 = *a6;
  v102 = v7;
  v103 = a3;
  v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_DWORD *)(*(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0) + 16);
  if ((v9 & 0x1000) != 0)
    return 0;
  if ((*(_DWORD *)(a2 + 72) & 0xE000) == 0x4000)
  {
    v11 = *(_DWORD *)(a2 + 24);
    v12 = 2937;
    goto LABEL_43;
  }
  v97 = a1;
  v14 = v7;
  if (!a7 || (v9 & 0x100) != 0)
    goto LABEL_20;
  sub_22E8FCA40(a1, a7, 0x1191u, 0, (uint64_t)&v104);
  v15 = *a6;
  v100[0] = v15;
  v100[1] = (uint64_t)(a6 + 1);
  for (i = v15; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_17;
      v17 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v17 <= 0x39)
        break;
LABEL_12:
      if (sub_22F115668(i))
        v15 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_19;
    }
    if (v17 == 24)
      goto LABEL_18;
    if (v17 == 26)
      break;
    if (((1 << v17) & 0x20000000200003CLL) == 0)
      goto LABEL_12;
LABEL_17:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_17;
LABEL_18:
  v15 = i;
LABEL_19:
  v18 = sub_22F115668(v15);
  v101 = v18 | ((unint64_t)sub_22F1167E8(v100) << 32);
  sub_22E8906A0((uint64_t)&v104, (uint64_t *)&v101);
  sub_22E903BEC((unsigned int *)&v104);
  a7 = 0;
  v14 = *a6;
LABEL_20:
  v94 = a7;
  v19 = v14;
  while (2)
  {
    while (2)
    {
      if ((v19 & 0xF) != 0)
        goto LABEL_31;
      v20 = *(unsigned __int8 *)(*(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v20 > 0x39)
      {
LABEL_26:
        if (sub_22F115668(v19))
          v14 = v19;
        v19 = sub_22F115B7C(v19);
        if (!v19)
          goto LABEL_33;
        continue;
      }
      break;
    }
    if (v20 == 24)
      break;
    if (v20 != 26)
    {
      if (((1 << v20) & 0x20000000200003CLL) != 0)
        goto LABEL_31;
      goto LABEL_26;
    }
    if ((*(_BYTE *)(v19 + 23) & 0x10) == 0)
    {
LABEL_31:
      v19 = sub_22F115B7C(v19);
      continue;
    }
    break;
  }
  v14 = v19;
LABEL_33:
  v21 = sub_22F115668(v14);
  v22 = *v8;
  if ((*(_BYTE *)(*v8 + 17) & 4) != 0)
  {
    v23 = (_DWORD *)sub_22F10C2A4(v22);
    if (!v23)
      goto LABEL_38;
    v27 = v23;
    if ((v23[7] & 0x7Fu) - 35 > 2)
      goto LABEL_38;
    v28 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v23 + 32))(v23);
    if (v28 != (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2))
    {
      v29 = *((_QWORD *)v27 + 16);
      if (!v29)
      {
        sub_22E3CD31C((uint64_t *)(*((_QWORD *)v27 + 13) + 96), *((_QWORD *)v27 + 13));
        v29 = *((_QWORD *)v27 + 16);
        if (!v29)
          goto LABEL_38;
      }
      v27 = *(_DWORD **)(v29 + 88);
      if (!v27)
        goto LABEL_38;
      v104 = v106;
      v105 = 0x800000000;
      v30 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2);
      v31 = (uint64_t)v27;
      while (1)
      {
        v32 = sub_22E46A3A0(v31);
        if (v32 != v33)
        {
          v34 = v32;
          v35 = v33;
          do
          {
            v36 = *(_QWORD *)(**(_QWORD **)(v34 + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v36 + 8) & 0xF) != 0)
              v36 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v34 + 16));
            v37 = sub_22F10C2A4(*(_QWORD *)(v36 & 0xFFFFFFFFFFFFFFF0));
            if (v37)
            {
              v38 = v37;
              if ((*(_DWORD *)(v37 + 28) & 0x7Fu) - 35 <= 2)
              {
                v39 = *(_QWORD *)(v37 + 128);
                if (v39
                  || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v37 + 104) + 96), *(_QWORD *)(v37 + 104)),
                      (v39 = *(_QWORD *)(v38 + 128)) != 0))
                {
                  v40 = *(_QWORD *)(v39 + 88);
                  if (v40)
                  {
                    if ((*(uint64_t (**)(uint64_t))(*(_QWORD *)v40 + 32))(v40) == v30)
                    {
                      v47 = 0;
                      goto LABEL_127;
                    }
                    v41 = v105;
                    if (v105 >= (unint64_t)HIDWORD(v105))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v41 = v105;
                    }
                    *((_QWORD *)v104 + v41) = v40;
                    LODWORD(v105) = v105 + 1;
                  }
                }
              }
            }
            v34 += 24;
          }
          while (v34 != v35);
        }
        if (!(_DWORD)v105)
          break;
        v31 = *((_QWORD *)v104 + v105 - 1);
        LODWORD(v105) = v105 - 1;
      }
      v47 = 1;
LABEL_127:
      if (v104 != v106)
        free(v104);
      if ((v47 & 1) != 0)
      {
LABEL_38:
        if ((*(_BYTE *)(*(_QWORD *)(a2 + 48) + 17) & 4) == 0)
          sub_22EFC77E8(a2, 1);
        v24 = v97[11];
        goto LABEL_41;
      }
    }
    sub_22E8FCA40(v97, v21, 0xBDCu, 0, (uint64_t)&v104);
    v84 = sub_22E8901B8((uint64_t)&v104, &v102);
    v85 = *(_QWORD *)(a2 + 48);
    if (v85)
      v86 = v85 & 0xFFFFFFFFFFFFFFF0;
    else
      v86 = sub_22EF6462C(v97[11], a2);
    v100[0] = v86;
    sub_22E8901B8(v84, v100);
    sub_22E903BEC((unsigned int *)&v104);
    v87 = (*(uint64_t (**)(_DWORD *))(*(_QWORD *)v27 + 32))(v27);
    if (v87 != (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2))
    {
      sub_22E8FCA40(v97, v27[6], 0x1771u, 0, (uint64_t)&v104);
      sub_22E8901B8((uint64_t)&v104, &v102);
      goto LABEL_44;
    }
    return 0;
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 45)
  {
    v11 = v21;
    a1 = v97;
    v12 = 2940;
LABEL_43:
    sub_22E8FCA40(a1, v11, v12, 0, (uint64_t)&v104);
    sub_22E8906A0((uint64_t)&v104, &v103);
    goto LABEL_44;
  }
  if (sub_22F10E06C(v22))
  {
    v11 = v21;
    a1 = v97;
    v12 = 5065;
    goto LABEL_43;
  }
  if (*(_DWORD *)(*(_QWORD *)(v97[11] + 15088) + 148) == 11)
  {
    if ((*(_BYTE *)(a2 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a2);
      v43 = *(uint64_t **)v42;
      v44 = *(unsigned int *)(v42 + 8);
      v45 = *(uint64_t **)v42;
      if ((_DWORD)v44)
      {
        v46 = 8 * v44;
        v45 = *(uint64_t **)v42;
        while (*(_WORD *)(*v45 + 32) != 157)
        {
          ++v45;
          v46 -= 8;
          if (!v46)
            goto LABEL_79;
        }
      }
      if (v45 != &v43[v44])
      {
        do
        {
          v49 = *v43++;
          v48 = v49;
        }
        while (*(_WORD *)(v49 + 32) != 157);
        goto LABEL_87;
      }
    }
LABEL_79:
    if ((*(_BYTE *)(a2 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a2);
      v51 = *(uint64_t **)v50;
      v52 = *(unsigned int *)(v50 + 8);
      v53 = *(uint64_t **)v50;
      if ((_DWORD)v52)
      {
        v54 = 8 * v52;
        v53 = *(uint64_t **)v50;
        while (*(_WORD *)(*v53 + 32) != 155)
        {
          ++v53;
          v54 -= 8;
          if (!v54)
            goto LABEL_91;
        }
      }
      if (v53 != &v51[v52])
      {
        do
        {
          v55 = *v51++;
          v48 = v55;
        }
        while (*(_WORD *)(v55 + 32) != 155);
LABEL_87:
        v56 = sub_22F10C2A4(*v8);
        if (v56)
        {
          v58 = *(_DWORD *)(v56 + 28);
          if ((v58 & 0x7Fu) - 35 <= 2 && (v58 & 0x7E) == 0x24)
            sub_22EAAA30C(v97, v57, v48, v56, v21);
        }
      }
    }
  }
LABEL_91:
  v104 = &unk_24FAB6EA8;
  LODWORD(v105) = 3583;
  v106[0] = &v103;
  if (sub_22EE8B0B0((uint64_t)v97, v21, v7))
  {
    sub_22EFC77E8(a2, 1);
    return 0;
  }
  v59 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 24));
  v60 = sub_22EFC3500(v59);
  v61 = v60;
  v100[0] = v60;
  if ((*(_BYTE *)(v60 + 29) & 1) == 0)
    goto LABEL_102;
  sub_22EFC8E88(v60);
  v63 = *(uint64_t **)v62;
  v64 = *(unsigned int *)(v62 + 8);
  v65 = *(uint64_t **)v62;
  if ((_DWORD)v64)
  {
    v66 = 8 * v64;
    v65 = *(uint64_t **)v62;
    while (*(_WORD *)(*v65 + 32) != 145)
    {
      ++v65;
      v66 -= 8;
      if (!v66)
        goto LABEL_102;
    }
  }
  if (v65 == &v63[v64])
  {
LABEL_102:
    v67 = 0;
  }
  else
  {
    do
    {
      v68 = *v63++;
      v67 = v68;
    }
    while (*(_WORD *)(v68 + 32) != 145);
  }
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_124;
  sub_22EFC8E88(a2);
  v70 = *(uint64_t **)v69;
  v71 = *(unsigned int *)(v69 + 8);
  v72 = *(uint64_t **)v69;
  if ((_DWORD)v71)
  {
    v73 = 8 * v71;
    v72 = *(uint64_t **)v69;
    while (*(_WORD *)(*v72 + 32) != 145)
    {
      ++v72;
      v73 -= 8;
      if (!v73)
        goto LABEL_124;
    }
  }
  if (v72 == &v70[v71])
  {
LABEL_124:
    if (!v67)
      goto LABEL_115;
    goto LABEL_125;
  }
  do
  {
    v75 = *v70++;
    v74 = v75;
  }
  while (*(_WORD *)(v75 + 32) != 145);
  if (!v67
    || (v76 = *(_DWORD *)(v67 + 36), v77 = *(unsigned int *)(v74 + 36), v76 != (_DWORD)v77)
    || v76 && memcmp(*(const void **)(v67 + 40), *(const void **)(v74 + 40), v77))
  {
LABEL_125:
    sub_22E8FCA40(v97, *(_DWORD *)(a2 + 24), 0xF47u, 0, (uint64_t)v99);
    sub_22E903BEC(v99);
    sub_22E8FCA40(v97, *(_DWORD *)(v61 + 24), 0x1557u, 0, (uint64_t)&v104);
    sub_22E890024((uint64_t)&v104, v100);
LABEL_44:
    sub_22E903BEC((unsigned int *)&v104);
    return 0;
  }
LABEL_115:
  if ((sub_22EF5EAF8(v97[11], a2, v61) & 1) == 0)
  {
    sub_22E8FCA40(v97, *(_DWORD *)(a2 + 24), 0x11ECu, 0, (uint64_t)&v104);
    v101 = *(_QWORD *)(a2 + 40);
    v78 = sub_22E894538((uint64_t)&v104, (uint64_t *)&v101);
    v98 = *(_QWORD *)(v61 + 40);
    sub_22E894538(v78, &v98);
    sub_22E903BEC((unsigned int *)&v104);
  }
  if ((*(_BYTE *)(v61 + 74) & 0x80) != 0)
  {
    sub_22E8FCA40(v97, v21, 0xB78u, 0, (uint64_t)&v104);
    v101 = *(_QWORD *)(v61 + 40);
    sub_22E894538((uint64_t)&v104, (uint64_t *)&v101);
    goto LABEL_44;
  }
  if ((*(_BYTE *)(v61 + 29) & 1) != 0)
  {
    sub_22EFC8E88(v61);
    v80 = *(uint64_t **)v79;
    v81 = *(unsigned int *)(v79 + 8);
    v82 = *(uint64_t **)v79;
    if ((_DWORD)v81)
    {
      v83 = 8 * v81;
      v82 = *(uint64_t **)v79;
      while (*(_WORD *)(*v82 + 32) != 176)
      {
        ++v82;
        v83 -= 8;
        if (!v83)
          goto LABEL_140;
      }
    }
    if (v82 != &v80[v81])
    {
      do
      {
        v89 = *v80++;
        v88 = v89;
      }
      while (*(_WORD *)(v89 + 32) != 176);
      sub_22E8FCA40(v97, v21, 0xBDEu, 0, (uint64_t)&v104);
      v101 = *(_QWORD *)(v61 + 40);
      v90 = sub_22E894538((uint64_t)&v104, (uint64_t *)&v101);
      v91 = *(unsigned __int8 *)(v88 + 30);
      if ((~(v91 << 16) & 0x780000) != 0)
        v92 = ((*(unsigned __int16 *)(v88 + 28) | (v91 << 16)) >> 19) & 0xF;
      else
        v92 = sub_22F1BFAD0(v88);
      LOBYTE(v98) = v92 == 1;
      sub_22E894E38(v90, (unsigned __int8 *)&v98);
      sub_22E903BEC((unsigned int *)&v104);
      sub_22E8FCA40(v97, *(_DWORD *)(v61 + 24), 0x15C9u, 0, (uint64_t)&v104);
      v101 = *(_QWORD *)(v61 + 40);
      v93 = sub_22E894538((uint64_t)&v104, (uint64_t *)&v101);
      v98 = *(_QWORD *)(v88 + 16);
      sub_22E8906A0(v93, &v98);
      goto LABEL_44;
    }
  }
LABEL_140:
  if ((*(_BYTE *)(v61 + 28) & 0x80) != 0)
    sub_22EFC77E8(a2, 1);
  v24 = v97[11];
LABEL_41:
  result = sub_22E3CD3D4(v24 + 2032, 24, 3);
  v26 = (*(_DWORD *)(a2 + 72) & 0xE000) == 24576;
  *(_QWORD *)result = v103;
  *(_DWORD *)(result + 8) = v94;
  *(_BYTE *)(result + 12) = a4 & 0xF3 | (4 * (a5 & 3)) | (2 * v26) | *(_BYTE *)(result + 12) & 0xE0;
  *(_QWORD *)(result + 16) = a6;
  return result;
}

void sub_22EAAA30C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  __int16 v32;
  __n128 v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _QWORD *v43;
  unsigned int v44;
  unsigned int v45[25];
  BOOL v46;
  unsigned int v47[24];
  uint64_t v48;

  v48 = a4;
  v9 = *(_QWORD *)(a4 + 152);
  v10 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  if ((v9 & 4) != 0 && v10)
  {
    do
    {
      v11 = *(_QWORD *)(*v10 + 152);
      v10 = (_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF8);
    }
    while ((v11 & 4) != 0 && v10);
  }
  v12 = v10[6];
  if ((*(_BYTE *)(v12 + 29) & 1) == 0)
    goto LABEL_13;
  sub_22EFC8E88(v12);
  v14 = *((unsigned int *)v13 + 2);
  if ((_DWORD)v14)
  {
    v15 = 8 * v14;
    v16 = *v13;
    while (*(_WORD *)(*(_QWORD *)v16 + 32) != 157)
    {
      v16 += 8;
      v15 -= 8;
      if (!v15)
        goto LABEL_13;
    }
  }
  else
  {
    v16 = *v13;
  }
  if (v16 == *v13 + 8 * v14)
  {
LABEL_13:
    if ((*(_BYTE *)(v12 + 29) & 1) == 0)
      goto LABEL_21;
    sub_22EFC8E88(v12);
    v18 = *((unsigned int *)v17 + 2);
    if ((_DWORD)v18)
    {
      v19 = 8 * v18;
      v20 = *v17;
      while (*(_WORD *)(*(_QWORD *)v20 + 32) != 155)
      {
        v20 += 8;
        v19 -= 8;
        if (!v19)
          goto LABEL_21;
      }
    }
    else
    {
      v20 = *v17;
    }
    if (v20 == *v17 + 8 * v18)
    {
LABEL_21:
      v21 = *(_BYTE *)(a4 + 180);
      if ((*(_BYTE *)(a4 + 29) & 1) == 0)
        goto LABEL_29;
      sub_22EFC8E88(a4);
      v23 = *((unsigned int *)v22 + 2);
      if ((_DWORD)v23)
      {
        v24 = 8 * v23;
        v25 = *v22;
        while (*(_WORD *)(*(_QWORD *)v25 + 32) != 157)
        {
          v25 += 8;
          v24 -= 8;
          if (!v24)
            goto LABEL_29;
        }
      }
      else
      {
        v25 = *v22;
      }
      if (v25 == *v22 + 8 * v23)
      {
LABEL_29:
        if ((*(_BYTE *)(a4 + 29) & 1) == 0)
          goto LABEL_37;
        sub_22EFC8E88(a4);
        v27 = *((unsigned int *)v26 + 2);
        if ((_DWORD)v27)
        {
          v28 = 8 * v27;
          v29 = *v26;
          while (*(_WORD *)(*(_QWORD *)v29 + 32) != 155)
          {
            v29 += 8;
            v28 -= 8;
            if (!v28)
              goto LABEL_37;
          }
        }
        else
        {
          v29 = *v26;
        }
        if (v29 == *v26 + 8 * v27)
        {
LABEL_37:
          v30 = v21 & 7;
          if (v30 <= 3 && v30 != 2)
          {
            v31 = sub_22EF9C5AC(a3);
            v32 = *(_WORD *)(v31 + 32);
            *(_BYTE *)(v31 + 34) |= 1u;
            *(_WORD *)(v31 + 32) = v32;
            sub_22EFCA95C(a4, v31);
            if (v31 && *(_WORD *)(v31 + 32) == 157)
              *(_BYTE *)(v31 + 35) = 1;
            if (v30)
              sub_22EAB2F64((uint64_t)a1, a4, v33);
            return;
          }
        }
      }
      if ((*(_BYTE *)(a4 + 29) & 1) == 0)
        goto LABEL_52;
      sub_22EFC8E88(a4);
      v35 = *((unsigned int *)v34 + 2);
      if ((_DWORD)v35)
      {
        v36 = 8 * v35;
        v37 = *v34;
        while (*(_WORD *)(*(_QWORD *)v37 + 32) != 157)
        {
          v37 += 8;
          v36 -= 8;
          if (!v36)
            goto LABEL_52;
        }
      }
      else
      {
        v37 = *v34;
      }
      if (v37 == *v34 + 8 * v35)
      {
LABEL_52:
        if ((*(_BYTE *)(a4 + 29) & 1) == 0)
          goto LABEL_60;
        sub_22EFC8E88(a4);
        v39 = *((unsigned int *)v38 + 2);
        if ((_DWORD)v39)
        {
          v40 = 8 * v39;
          v41 = *v38;
          while (*(_WORD *)(*(_QWORD *)v41 + 32) != 155)
          {
            v41 += 8;
            v40 -= 8;
            if (!v40)
              goto LABEL_60;
          }
        }
        else
        {
          v41 = *v38;
        }
        if (v41 == *v38 + 8 * v39)
        {
LABEL_60:
          sub_22E8FCA40(a1, a5, 0x186Du, 0, (uint64_t)v47);
          v46 = (*(_BYTE *)(a4 + 180) & 7) == 2;
          sub_22E894E38((uint64_t)v47, (unsigned __int8 *)&v46);
          sub_22E903BEC(v47);
          sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x154Cu, 0, (uint64_t)v45);
          sub_22E903BEC(v45);
          if ((*(_BYTE *)(a4 + 180) & 7) == 2)
          {
            v42 = *(_DWORD *)(a4 + 24);
            v43 = a1;
            v44 = 6099;
          }
          else
          {
            v42 = *(_DWORD *)(a4 + 176);
            v43 = a1;
            v44 = 6101;
          }
          sub_22E8FCA40(v43, v42, v44, 0, (uint64_t)v47);
          sub_22E890024((uint64_t)v47, &v48);
          sub_22E903BEC(v47);
        }
      }
    }
  }
}

uint64_t sub_22EAAA6A8(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, unint64_t a7, uint64_t a8, int a9)
{
  unint64_t v14;
  int v16;
  uint64_t v17;
  uint64_t v19;
  __int16 v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35[24];

  if (!a2)
    return 1;
  v14 = a2;
  v16 = *(_DWORD *)(a2 + 28) & 0x7F;
  if ((v16 - 26) <= 6)
  {
    v14 = *(_QWORD *)(a2 + 48);
    v16 = *(_DWORD *)(v14 + 28) & 0x7F;
  }
  if ((v16 - 38) < 0xFFFFFFFD)
    return 1;
  sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v14 + 104) + 96), *(_QWORD *)(v14 + 104));
  v19 = *(_QWORD *)(v14 + 128);
  v20 = *(_WORD *)(v19 + 8);
  v19 += 8;
  v21 = ((*(unsigned __int8 *)(v19 + 2) << 16) | 0x200000u) >> 16;
  *(_WORD *)v19 = v20;
  *(_BYTE *)(v19 + 2) = v21;
  v24 = *(_QWORD *)(a4 + 8);
  v23 = (uint64_t *)(a4 + 8);
  v22 = v24;
  if ((v24 & 4) != 0)
  {
    v26 = v22 & 0xFFFFFFFFFFFFFFF8;
    v23 = *(uint64_t **)v26;
    v25 = *(_QWORD *)v26 + 8 * *(unsigned int *)(v26 + 8);
  }
  else
  {
    v25 = (uint64_t)&v23[v22 > 7];
  }
  for (; v23 != (uint64_t *)v25; ++v23)
  {
    v27 = *v23;
    if ((*(_BYTE *)(*v23 + 50) & 1) == 0)
    {
      v28 = *(unsigned __int16 *)(*(_QWORD *)(v27 + 72) + 8);
      if (v28 != 479)
      {
        if (v28 == 480)
          v29 = 146;
        else
          v29 = 2941;
        sub_22E8FCA40(a1, *(_DWORD *)(v27 + 16), v29, 0, (uint64_t)v35);
        v30 = sub_22E8D2984((uint64_t)v35, (uint64_t *)v27);
        v34 = *(_QWORD *)(v27 + 16);
        sub_22E8906A0(v30, &v34);
        sub_22E903BEC(v35);
      }
    }
  }
  if (a7 >= 0x10)
  {
    v31 = 0;
    v32 = *(_QWORD *)(a7 & 0xFFFFFFFFFFFFFFF0);
    if (v32 && *(_BYTE *)(v32 + 16) == 57)
      v31 = *(uint64_t **)(v32 + 24);
  }
  else
  {
    v31 = 0;
  }
  if (a9 || (v17 = 1, (sub_22EE67290((uint64_t)a1, a3, (unint64_t *)v31, 1) & 1) == 0))
  {
    v33 = sub_22EAA9880(a1, v14, a3, a5, a6, v31, a9);
    if (v33)
    {
      return v33;
    }
    else
    {
      v17 = 1;
      sub_22EFC77E8(v14, 1);
    }
  }
  return v17;
}

uint64_t sub_22EAAA8A8(_QWORD *a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t **v12;
  uint64_t **v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BOOL4 v24;
  uint64_t *v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  void **v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v49;
  uint64_t v51;
  std::string __p;
  uint64_t v53[12];
  unint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int v58;
  _BYTE v59[32];
  uint64_t **v60;
  uint64_t *v61;
  uint64_t v62;
  __int128 v63;
  char *v64;
  uint64_t v65;
  _QWORD v66[2];
  unsigned int v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  int v71;
  _QWORD v72[5];
  void *v73;
  uint64_t v74;
  _DWORD v75[26];
  uint64_t v76;
  __int16 v77;
  char v78;
  uint64_t v79;

  v79 = *MEMORY[0x24BDAC8D0];
  if (a4)
  {
    v6 = 0;
    v7 = 0;
    v49 = 0;
    v8 = 0;
    v61 = 0;
    v62 = 0;
    v55 = v59;
    v56 = v59;
    v60 = &v61;
    v57 = 4;
    v58 = 0;
    do
    {
      v9 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a3 + 8 * v6) + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v9 + 8) & 0xF) != 0)
        v9 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(a3 + 8 * v6) + 16));
      v10 = *(_QWORD *)(*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
      v11 = v61;
      v12 = &v61;
      v13 = &v61;
      if (v61)
      {
        while (1)
        {
          while (1)
          {
            v13 = (uint64_t **)v11;
            v14 = v11[4];
            if (v10 >= v14)
              break;
            v11 = *v13;
            v12 = v13;
            if (!*v13)
              goto LABEL_12;
          }
          if (v14 >= v10)
            break;
          v11 = v13[1];
          if (!v11)
          {
            v12 = v13 + 1;
            goto LABEL_12;
          }
        }
      }
      else
      {
LABEL_12:
        v15 = (uint64_t *)v13;
        v13 = (uint64_t **)operator new(0x30uLL);
        v13[4] = (uint64_t *)v10;
        v13[5] = 0;
        *v13 = 0;
        v13[1] = 0;
        v13[2] = v15;
        *v12 = (uint64_t *)v13;
        v16 = (uint64_t *)v13;
        if (*v60)
        {
          v60 = (uint64_t **)*v60;
          v16 = *v12;
        }
        sub_22E49FD00(v61, v16);
        ++v62;
      }
      if (v13[5])
      {
        sub_22E8FCA40(a1, **(_DWORD **)(a3 + 8 * v6), 0xCCBu, 0, (uint64_t)&v63);
        v17 = *(_QWORD *)(*(_QWORD *)v13[5][2] & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v17 + 8) & 0xF) != 0)
          v17 = (unint64_t)sub_22F10D2BC(*(_QWORD *)v13[5][2]);
        v53[0] = v17 & 0xFFFFFFFFFFFFFFF0;
        v18 = sub_22E8901B8((uint64_t)&v63, v53);
        __p.__r_.__value_.__r.__words[0] = **(_QWORD **)(a3 + 8 * v6);
        sub_22E8906A0(v18, (uint64_t *)&__p);
        sub_22E903BEC((unsigned int *)&v63);
        v49 = 1;
      }
      else
      {
        v13[5] = *(uint64_t **)(a3 + 8 * v6);
        v19 = *(_QWORD *)(a3 + 8 * v6);
        v20 = v7 + 1;
        *(_QWORD *)(a3 + 8 * v7) = v19;
        v21 = *(_QWORD *)v10;
        if ((*(_BYTE *)(*(_QWORD *)v10 + 17) & 4) == 0)
        {
          if (a4 != 1)
          {
            sub_22EAAAED0((uint64_t)&v55, v10);
            v21 = *(_QWORD *)v10;
          }
          v22 = *(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v22 && *(_BYTE *)(v22 + 16) == 45)
          {
            v53[0] = 0;
            v23 = sub_22F114198(*(_QWORD *)(v22 + 24));
            v53[0] = v23;
            if ((*(_DWORD *)(a2 + 72) & 0xE000) == 0x2000)
            {
              v24 = sub_22EFD593C(v23);
              v25 = v13[5];
              if (!v24)
                goto LABEL_29;
              v26 = *((unsigned __int8 *)v25 + 12);
              v27 = (v26 >> 2) & 3;
              v28 = v26 & 2;
              if (v27 != 3)
                v28 = v27;
              if (v28)
              {
LABEL_29:
                sub_22E8FCA40(a1, *(_DWORD *)v25, 0xE34u, 0, (uint64_t)&v63);
                v29 = (unsigned __int16)*(_DWORD *)(v53[0] + 72) >> 13;
                if ((unsigned __int16)*(_DWORD *)(v53[0] + 72) >> 13)
                {
                  if (v29 == 3)
                    v29 = 2;
                  else
                    v29 = 1;
                }
                LODWORD(v54) = v29;
                v30 = sub_22E89519C((uint64_t)&v63, (unsigned int *)&v54);
                v31 = sub_22E890024(v30, v53);
                __p.__r_.__value_.__r.__words[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v53[0] + 16))(v53[0]);
                sub_22E8906A0(v31, (uint64_t *)&__p);
                sub_22E903BEC((unsigned int *)&v63);
                v49 = 1;
              }
            }
            if (sub_22E6339A4(v53[0]))
            {
              v32 = a1[11];
              v63 = 0uLL;
              LODWORD(v65) = 0;
              v64 = 0;
              WORD2(v65) = 0;
              BYTE6(v65) = ((((BYTE6(v65) >> 7) & 1) << 23) | 0x780000u) >> 16;
              v33 = sub_22F3A6474(v32, &v63);
              sub_22EFCA95C(a2, v33);
            }
          }
        }
        v7 = v20;
      }
      v6 = ++v8;
    }
    while (a4 > v8);
    sub_22EFCF870(a2, a3, v7);
    if (v7)
    {
      v34 = 0;
      v35 = v7;
      do
      {
        v36 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a3 + 8 * v34) + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v36 + 8) & 0xF) != 0)
          v36 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(a3 + 8 * v34) + 16));
        v54 = v36 & 0xFFFFFFFFFFFFFFF0;
        if ((*(_BYTE *)(*(_QWORD *)(v36 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0)
        {
          v37 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0);
          v38 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v55, v37);
          v39 = v56 == v55 ? (uint64_t *)((char *)&v57 + 4) : &v57;
          if (v38 != (void **)&v56[8 * *(unsigned int *)v39])
          {
            *(_QWORD *)&v63 = 0;
            *((_QWORD *)&v63 + 1) = (char *)&v63 + 8;
            v64 = (char *)&v63 + 8;
            v65 = 0;
            v40 = 40;
            v66[0] = 1;
            do
            {
              *(_QWORD *)((char *)&v63 + v40) = 0;
              v40 += 16;
            }
            while (v40 != 168);
            v68 = v72;
            v69 = v72;
            v70 = 4;
            v71 = 0;
            v72[4] = 0;
            v73 = v75;
            v74 = 0x400000000;
            v75[24] = 0;
            v76 = 0;
            v77 = 257;
            v78 = 1;
            v41 = sub_22F10C2A4(*v37);
            v42 = 0;
            if (v41)
            {
              if ((*(_DWORD *)(v41 + 28) & 0x7Fu) - 35 >= 3)
                v42 = 0;
              else
                v42 = v41;
            }
            sub_22EFB36DC(a2, v42, (unint64_t *)&v63);
            v53[0] = *v37 & 0xFFFFFFFFFFFFFFF0;
            v43 = sub_22EFB50E0(v66, v53);
            if (((_DWORD)v43[1] & 1u) + (*((_DWORD *)v43 + 2) >> 1) >= 2)
            {
              sub_22E8FCA40(a1, **(_DWORD **)(a3 + 8 * v34), 0x1A0Bu, 0, (uint64_t)v53);
              v44 = sub_22E8901B8((uint64_t)v53, (uint64_t *)&v54);
              sub_22EAAAFAC((uint64_t)a1, (unint64_t *)&v63, &__p);
              v45 = sub_22F2F3734(v44, (void **)&__p.__r_.__value_.__l.__data_);
              v51 = **(_QWORD **)(a3 + 8 * v34);
              sub_22E8906A0(v45, &v51);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              sub_22E903BEC((unsigned int *)v53);
            }
            if (v73 != v75)
              free(v73);
            if (v69 != v68)
              free(v69);
            if ((v66[0] & 1) == 0)
              llvm::deallocate_buffer((llvm *)v66[1], (void *)(16 * v67));
            sub_22E687D9C((uint64_t *)&v63 + 1);
          }
        }
        ++v34;
      }
      while (v34 != v35);
    }
    if (v56 != v55)
      free(v56);
    sub_22F258024(v61);
    v46 = v49;
  }
  else
  {
    v46 = 0;
  }
  return v46 & 1;
}

uint64_t sub_22EAAAED0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  const void *v9;
  char v10;

  result = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (result && *(_BYTE *)(result + 16) == 45)
  {
    v4 = sub_22F10C2A4(result);
    if (v4 && (*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 >= 3)
      v4 = 0;
    result = sub_22E46A3A0(v4);
    if (result != v5)
    {
      v6 = result;
      v7 = v5;
      do
      {
        v8 = *(_QWORD *)(**(_QWORD **)(v6 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v8 + 8) & 0xF) != 0)
          v8 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v6 + 16));
        v9 = (const void *)(*(_QWORD *)(*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0);
        result = sub_22E3BA850(a1, v9);
        if (v10)
          result = sub_22EAAAED0(a1, v9);
        v6 += 24;
      }
      while (v6 != v7);
    }
  }
  return result;
}

void sub_22EAAAFAC(uint64_t a1@<X0>, unint64_t *a2@<X1>, std::string *a3@<X8>)
{
  unint64_t *v4;
  unint64_t v5;
  char v8;
  uint64_t v9;
  unint64_t v10;
  void **v11;
  std::string::size_type v12;
  uint64_t v13;
  unint64_t v14;
  std::string *v15;
  std::string::size_type v16;
  void **v17;
  std::string::size_type v18;
  _QWORD *v19;
  unint64_t v20;
  std::string v21;
  void *__p[2];
  uint64_t v23;
  uint64_t *v24;
  _QWORD v25[2];

  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  v25[0] = 0;
  v25[1] = 0;
  v24 = v25;
  v4 = a2 + 1;
  v5 = a2[2];
  if ((unint64_t *)v5 == a2 + 1)
  {
    v19 = 0;
  }
  else
  {
    do
    {
      LODWORD(__p[0]) = *(_DWORD *)(*(_QWORD *)(v5 + 16) + 24 * *(unsigned int *)(v5 + 24) - 8);
      sub_22E67708C(&v24, (unsigned int *)__p, __p);
      if ((v8 & 1) != 0)
      {
        std::string::append(a3, "\n    ");
        v9 = *(_QWORD *)(*a2 + 48);
        if (v9)
          v10 = v9 & 0xFFFFFFFFFFFFFFF0;
        else
          v10 = sub_22EF6462C(*(_QWORD *)(a1 + 88), *a2);
        v21.__r_.__value_.__r.__words[0] = v10;
        sub_22F1192C0(&v21, (uint64_t)__p);
        if (v23 >= 0)
          v11 = __p;
        else
          v11 = (void **)__p[0];
        if (v23 >= 0)
          v12 = HIBYTE(v23) & 0x7F;
        else
          v12 = (std::string::size_type)__p[1];
        std::string::append(a3, (const std::string::value_type *)v11, v12);
        if (SHIBYTE(v23) < 0)
          operator delete(__p[0]);
        if (*(_DWORD *)(v5 + 24))
        {
          v13 = *(_QWORD *)(v5 + 16);
          do
          {
            v14 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)v13 + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v14 + 8) & 0xF) != 0)
              v14 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)v13 + 16));
            v20 = v14 & 0xFFFFFFFFFFFFFFF0;
            sub_22F1192C0(&v20, (uint64_t)&v21);
            v15 = std::string::insert(&v21, 0, " -> ");
            v16 = v15->__r_.__value_.__r.__words[2];
            *(_OWORD *)__p = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
            v23 = v16;
            v15->__r_.__value_.__l.__size_ = 0;
            v15->__r_.__value_.__r.__words[2] = 0;
            v15->__r_.__value_.__r.__words[0] = 0;
            if (v23 >= 0)
              v17 = __p;
            else
              v17 = (void **)__p[0];
            if (v23 >= 0)
              v18 = HIBYTE(v23) & 0x7F;
            else
              v18 = (std::string::size_type)__p[1];
            std::string::append(a3, (const std::string::value_type *)v17, v18);
            if (SHIBYTE(v23) < 0)
              operator delete(__p[0]);
            if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v21.__r_.__value_.__l.__data_);
            v13 += 24;
          }
          while (v13 != *(_QWORD *)(v5 + 16) + 24 * *(unsigned int *)(v5 + 24));
        }
      }
      v5 = *(_QWORD *)(v5 + 8);
    }
    while ((unint64_t *)v5 != v4);
    v19 = (_QWORD *)v25[0];
  }
  sub_22E3B4AB8((uint64_t)&v24, v19);
}

uint64_t sub_22EAAB1B8(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;

  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0
    && (v8 = sub_22F10C2A4(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0))) != 0
    && (v9 = v8, (*(_DWORD *)(v8 + 28) & 0x7Fu) - 35 <= 2)
    && (v10 = sub_22F10C2A4(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0))) != 0
    && ((v11 = v10, (*(_DWORD *)(v10 + 28) & 0x7Fu) - 35 <= 2) ? (v12 = (*(_DWORD *)(v10 + 28) & 0x80) == 0) : (v12 = 0),
        v12
     && (*(_BYTE *)(v9 + 28) & 0x80) == 0
     && (!sub_22EE8B180(a1, a2, a3, 1, 0) || (*(_BYTE *)(v9 + 74) & 2) != 0)))
  {
    return sub_22EFB35BC(v9, v11);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22EAAB2A0(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) != 0
    && (v9 = sub_22F10C2A4(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0))) != 0
    && (v11 = v9, (*(_DWORD *)(v9 + 28) & 0x7Fu) - 35 <= 2)
    && (v12 = sub_22F10C2A4(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0))) != 0
    && (v13 = v12, (*(_DWORD *)(v12 + 28) & 0x7Fu) - 35 <= 2)
    && (!sub_22EE8B180(a1, a2) || (*(_BYTE *)(v11 + 74) & 2) != 0))
  {
    return sub_22EFB36DC(v11, v13, a5);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_22EAAB384(uint64_t result, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  unsigned int v8;
  uint64_t v9;

  v3 = (_QWORD *)result;
  v4 = *(unsigned int *)(result + 8);
  v5 = v4 - 1;
  v6 = *(_DWORD *)(result + 8);
  while (v5 != -1)
  {
    v7 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)result + 24 * v5) + 12);
    --v6;
    --v5;
    if ((v7 & 1) != 0)
      goto LABEL_6;
  }
  v6 = 0;
LABEL_6:
  if (v6 != (_DWORD)v4)
  {
    v8 = *(_DWORD *)(a2 + 8);
    do
    {
      v9 = *(_QWORD *)(*v3 + 24 * v6);
      if (v8 >= *(_DWORD *)(a2 + 12))
      {
        result = llvm::SmallVectorBase<unsigned int>::grow_pod();
        v8 = *(_DWORD *)(a2 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a2 + 8 * v8) = v9;
      v8 = *(_DWORD *)(a2 + 8) + 1;
      *(_DWORD *)(a2 + 8) = v8;
      ++v6;
    }
    while ((_DWORD)v4 != v6);
  }
  return result;
}

uint64_t sub_22EAAB46C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  std::string __p;
  unsigned int v27[24];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  _QWORD v36[2];
  unsigned int v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  _QWORD v42[5];
  void *v43;
  uint64_t v44;
  _DWORD v45[26];
  uint64_t v46;
  __int16 v47;
  char v48;
  uint64_t v49;

  v14 = a9;
  v49 = *MEMORY[0x24BDAC8D0];
  v30 = a3;
  v31 = a2;
  v28 = a8;
  v29 = a7;
  v32 = 0;
  v33 = (uint64_t)&v33;
  v34 = &v33;
  v35 = 0;
  v15 = 40;
  v36[0] = 1;
  do
  {
    *(unint64_t *)((char *)&v32 + v15) = 0;
    v15 += 16;
  }
  while (v15 != 168);
  v38 = v42;
  v39 = v42;
  v40 = 4;
  v41 = 0;
  v42[4] = 0;
  v43 = v45;
  v44 = 0x400000000;
  v45[24] = 0;
  v46 = 0;
  v47 = 257;
  v48 = 0;
  if (!sub_22EAAB2A0(a1, a6, a2, a3, &v32))
    goto LABEL_16;
  *(_QWORD *)v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
  v17 = sub_22EFB50E0(v36, v27);
  v18 = v34;
  if (((_DWORD)v17[1] & 1u) + (*((_DWORD *)v17 + 2) >> 1) < 2)
  {
LABEL_14:
    if ((a10 & 1) != 0 || sub_22E90B400(a1, a6, v30, v31, (uint64_t)(v18 + 2), a4, 0, 0) != 1)
    {
      if (a9)
      {
        sub_22EAAB384((uint64_t)(v18 + 2), a9);
        v14 = 0;
      }
      goto LABEL_19;
    }
LABEL_16:
    v14 = 1;
    goto LABEL_19;
  }
  if ((**(_BYTE **)(a1 + 72) & 0x10) != 0)
  {
    while (v18 != &v33)
    {
      if (*((_DWORD *)v18 + 6) == 1)
      {
        if (a5)
        {
          sub_22E8FCA40((_QWORD *)a1, a6, 0x14AFu, 0, (uint64_t)v27);
          v23 = sub_22E8901B8((uint64_t)v27, &v30);
          v24 = sub_22E8901B8(v23, &v31);
          sub_22E8906A0(v24, &v29);
          sub_22E903BEC(v27);
        }
        goto LABEL_14;
      }
      v18 = (uint64_t *)v18[1];
    }
  }
  v14 = 1;
  if (a5)
  {
    sub_22F3AB3F4((uint64_t)&v32);
    HIBYTE(v47) = 1;
    sub_22EAAB2A0(a1, a6, v31, v30, &v32);
    sub_22EAAAFAC(a1, &v32, &__p);
    sub_22E8FCA40((_QWORD *)a1, a6, a5, 0, (uint64_t)v27);
    v19 = sub_22E8901B8((uint64_t)v27, &v31);
    v20 = sub_22E8901B8(v19, &v30);
    v21 = sub_22E90749C(v20, &__p);
    v22 = sub_22E8906A0(v21, &v29);
    sub_22E894538(v22, &v28);
    sub_22E903BEC(v27);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_19:
  if (v43 != v45)
    free(v43);
  if (v39 != v38)
    free(v39);
  if ((v36[0] & 1) == 0)
    llvm::deallocate_buffer((llvm *)v36[1], (void *)(16 * v37));
  sub_22E687D9C(&v33);
  return v14;
}

uint64_t sub_22EAAB770(_QWORD *a1, char a2, int a3, int a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v9 = a1[27];
  v11 = sub_22EFC7430(40, a1[11], v9, 0);
  v12 = sub_22EA41AB8(v11, 0, v9, a3);
  *(_QWORD *)v12 = &unk_24FAC4360;
  *(_DWORD *)(v12 + 36) = a4;
  *(_DWORD *)(v12 + 28) = *(_DWORD *)(v12 + 28) & 0xFFFF9FFF | ((a2 & 3) << 13);
  sub_22EFCCE00(a1[27], v11);
  return sub_22EA7DBF8(a1, v11, a5);
}

void sub_22EAAB818(_QWORD *a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  const char *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  unsigned int v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  BOOL v78;
  const char *v79;
  unsigned int v80[24];
  void *v81;
  _BYTE v82[12];
  char v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;

  v88 = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0 || !sub_22EAABFD4(a2) && !sub_22E4808EC(a2))
    return;
  v4 = *(_DWORD *)(a2 + 28);
  if ((v4 & 0x7Eu) - 58 >= 0xFFFFFFFC)
  {
    if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2) + 80) & 0xE000) == 0x4000
      || (*(_QWORD *)(a2 + 40) & 7) == 6
      && (*(_DWORD *)(*(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) < 4)
    {
      goto LABEL_14;
    }
    v34 = *(_WORD *)(a2 + 80) & 0x7F;
    v35 = -40;
    if (v34 > 0x46)
    {
      if (v34 == 83)
        goto LABEL_98;
      if (v34 == 71)
      {
        v35 = -56;
        goto LABEL_98;
      }
      if (v34 != 81)
      {
LABEL_93:
        v67 = v34 - 52;
        v68 = v34 - 33 >= 5;
        v69 = -48;
        if (!v68)
          v69 = -64;
        if (v67 >= 6)
          v35 = v69;
        else
          v35 = -72;
      }
    }
    else
    {
      if (v34 > 0x18)
        goto LABEL_92;
      if (v34 == 16)
      {
LABEL_44:
        v35 = -48;
        goto LABEL_98;
      }
      if (((1 << v34) & 0x1066) == 0)
      {
        if (v34 == 24)
          goto LABEL_44;
LABEL_92:
        if (v34 == 70)
        {
          v35 = -64;
          goto LABEL_98;
        }
        goto LABEL_93;
      }
    }
LABEL_98:
    v70 = *(_QWORD *)(a2 + 72 + v35 + 16);
    v71 = (_QWORD *)(v70 & 0xFFFFFFFFFFFFFFF8);
    if ((v70 & 4) != 0)
      v71 = (_QWORD *)*v71;
    if (v71)
      v72 = (uint64_t)(v71 - 8);
    else
      v72 = 0;
    if ((sub_22F3B1AA4(v72) & 1) != 0
      || (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
    {
      return;
    }
LABEL_14:
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
    if ((*(_BYTE *)(v10 + 82) & 0xC) != 0 || sub_22EFD7260(v10))
    {
LABEL_16:
      v11 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 32))(a2);
      if ((*(_BYTE *)(v11 + 82) & 0xC) != 0 || sub_22EFD7260(v11))
      {
        v12 = sub_22EFD7260(a2);
        if (sub_22EAABFD4(a2) && !v12)
        {
          sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xDBDu, 0, (uint64_t)v80);
          v81 = *(void **)(a2 + 40);
          sub_22E894538((uint64_t)v80, (uint64_t *)&v81);
          sub_22E903BEC(v80);
        }
        return;
      }
      v4 = *(_DWORD *)(a2 + 28);
      goto LABEL_5;
    }
    v81 = &v82[8];
    *(_QWORD *)v82 = 0x800000000;
    sub_22EAAC034((uint64_t)a1, a2, (uint64_t)&v81);
    if (!*(_DWORD *)v82)
    {
      if (v81 != &v82[8])
        free(v81);
      goto LABEL_16;
    }
    if ((*(_BYTE *)(a2 + 29) & 1) == 0)
      goto LABEL_78;
    sub_22EFC8E88(a2);
    v37 = *(uint64_t **)v36;
    v38 = *(unsigned int *)(v36 + 8);
    v39 = *(uint64_t **)v36;
    if ((_DWORD)v38)
    {
      v40 = 8 * v38;
      v39 = *(uint64_t **)v36;
      while (*(_WORD *)(*v39 + 32) != 273)
      {
        ++v39;
        v40 -= 8;
        if (!v40)
          goto LABEL_78;
      }
    }
    if (v39 != &v37[v38])
    {
      do
      {
        v60 = *v37++;
        v59 = v60;
      }
      while (*(_WORD *)(v60 + 32) != 273);
      sub_22E8FCA40(a1, *(_DWORD *)(v59 + 16), 0x1822u, 0, (uint64_t)v80);
      v61 = sub_22F2F30F4((uint64_t)v80, (uint64_t)"override");
      LOBYTE(v79) = *(_DWORD *)v82 > 1u;
      v62 = (unsigned __int8 *)&v79;
    }
    else
    {
LABEL_78:
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        goto LABEL_114;
      sub_22EFC8E88(a2);
      v55 = *(uint64_t **)v54;
      v56 = *(unsigned int *)(v54 + 8);
      v57 = *(uint64_t **)v54;
      if ((_DWORD)v56)
      {
        v58 = 8 * v56;
        v57 = *(uint64_t **)v54;
        while (*(_WORD *)(*v57 + 32) != 176)
        {
          ++v57;
          v58 -= 8;
          if (!v58)
            goto LABEL_114;
        }
      }
      if (v57 == &v55[v56])
        goto LABEL_114;
      do
      {
        v64 = *v55++;
        v63 = v64;
      }
      while (*(_WORD *)(v64 + 32) != 176);
      sub_22E8FCA40(a1, *(_DWORD *)(v63 + 16), 0x1822u, 0, (uint64_t)v80);
      v65 = *(unsigned __int8 *)(v63 + 30);
      if ((~(v65 << 16) & 0x780000) != 0)
        v66 = ((*(unsigned __int16 *)(v63 + 28) | (v65 << 16)) >> 19) & 0xF;
      else
        v66 = sub_22F1BFAD0(v63);
      v74 = "final";
      if (v66 == 1)
        v74 = "sealed";
      v79 = v74;
      v61 = sub_22E8AECC4((uint64_t)v80, (uint64_t *)&v79);
      v78 = *(_DWORD *)v82 > 1u;
      v62 = (unsigned __int8 *)&v78;
    }
    sub_22E894E38(v61, v62);
    sub_22E903BEC(v80);
LABEL_114:
    sub_22EAAC328((unint64_t)a1, a2, (uint64_t)&v81);
    sub_22EFC77E8(a2, 1);
    if (v81 != &v82[8])
      free(v81);
    return;
  }
LABEL_5:
  if ((v4 & 0x100) != 0)
  {
    sub_22EFC8E88(a2);
    v6 = *(uint64_t **)v5;
    v7 = *(unsigned int *)(v5 + 8);
    v8 = *(uint64_t **)v5;
    if ((_DWORD)v7)
    {
      v9 = 8 * v7;
      v8 = *(uint64_t **)v5;
      while (*(_WORD *)(*v8 + 32) != 273)
      {
        ++v8;
        v9 -= 8;
        if (!v9)
          goto LABEL_22;
      }
    }
    if (v8 != &v6[v7])
    {
      do
      {
        v19 = *v6++;
        v18 = v19;
      }
      while (*(_WORD *)(v19 + 32) != 273);
      sub_22E8FCA40(a1, *(_DWORD *)(v18 + 16), 0x1823u, 0, (uint64_t)v80);
      v20 = sub_22F2F30F4((uint64_t)v80, (uint64_t)"override");
      v21 = (void *)(*(_QWORD *)(v18 + 16) | ((unint64_t)*(_QWORD *)(v18 + 16) << 32));
      v83 = 0;
      *(_QWORD *)&v82[4] = 0;
      v85 = 0;
      v86 = 0;
      v84 = 0;
      v87 = 0;
      v81 = v21;
      v82[0] = 1;
      sub_22E890748(v20, &v81);
      if (SHIBYTE(v86) < 0)
        operator delete(v84);
      sub_22E903BEC(v80);
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v23 = *(char **)v22;
        v24 = *(unsigned int *)(v22 + 8);
        if ((_DWORD)v24)
        {
          v25 = &v23[8 * v24];
          v26 = 8 * v24 - 8;
          v27 = *(char **)v22;
          v28 = *(char **)v22;
          while (1)
          {
            v29 = *(_QWORD *)v28;
            v28 += 8;
            if (*(_WORD *)(v29 + 32) == 273)
              break;
            v26 -= 8;
            v27 = v28;
            if (v28 == v25)
              goto LABEL_125;
          }
          if (v28 == v25)
          {
            v25 = v27;
          }
          else
          {
            v75 = 8;
            v25 = v27;
            do
            {
              v76 = *(_QWORD *)&v27[v75];
              if (*(_WORD *)(v76 + 32) != 273)
              {
                *(_QWORD *)v25 = v76;
                v25 += 8;
              }
              v75 += 8;
              v26 -= 8;
            }
            while (v26);
            v23 = *(char **)v22;
          }
        }
        else
        {
          v25 = *(char **)v22;
        }
LABEL_125:
        v77 = (unint64_t)(v25 - v23) >> 3;
        *(_DWORD *)(v22 + 8) = v77;
        if (!(_DWORD)v77)
          *(_DWORD *)(a2 + 28) &= ~0x100u;
      }
    }
  }
LABEL_22:
  if ((*(_BYTE *)(a2 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a2);
    v14 = *(uint64_t **)v13;
    v15 = *(unsigned int *)(v13 + 8);
    i = *(uint64_t **)v13;
    if ((_DWORD)v15)
    {
      v17 = 8 * v15;
      for (i = *(uint64_t **)v13; *(_WORD *)(*i + 32) != 176; ++i)
      {
        v17 -= 8;
        if (!v17)
          return;
      }
    }
    if (i != &v14[v15])
    {
      do
      {
        v31 = *v14++;
        v30 = v31;
      }
      while (*(_WORD *)(v31 + 32) != 176);
      sub_22E8FCA40(a1, *(_DWORD *)(v30 + 16), 0x1823u, 0, (uint64_t)v80);
      v32 = *(unsigned __int8 *)(v30 + 30);
      if ((~(v32 << 16) & 0x780000) != 0)
        v33 = ((*(unsigned __int16 *)(v30 + 28) | (v32 << 16)) >> 19) & 0xF;
      else
        v33 = sub_22F1BFAD0(v30);
      v41 = "final";
      if (v33 == 1)
        v41 = "sealed";
      v79 = v41;
      v42 = sub_22E8AECC4((uint64_t)v80, (uint64_t *)&v79);
      v43 = (void *)(*(_QWORD *)(v30 + 16) | ((unint64_t)*(_QWORD *)(v30 + 16) << 32));
      v83 = 0;
      *(_QWORD *)&v82[4] = 0;
      v85 = 0;
      v86 = 0;
      v84 = 0;
      v87 = 0;
      v81 = v43;
      v82[0] = 1;
      sub_22E890748(v42, &v81);
      if (SHIBYTE(v86) < 0)
        operator delete(v84);
      sub_22E903BEC(v80);
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v45 = *(char **)v44;
        v46 = *(unsigned int *)(v44 + 8);
        if ((_DWORD)v46)
        {
          v47 = &v45[8 * v46];
          v48 = 8 * v46 - 8;
          v49 = *(char **)v44;
          v50 = *(char **)v44;
          while (1)
          {
            v51 = *(_QWORD *)v50;
            v50 += 8;
            if (*(_WORD *)(v51 + 32) == 176)
              break;
            v48 -= 8;
            v49 = v50;
            if (v50 == v47)
              goto LABEL_107;
          }
          if (v50 == v47)
          {
            v47 = v49;
          }
          else
          {
            v52 = 8;
            v47 = v49;
            do
            {
              v53 = *(_QWORD *)&v49[v52];
              if (*(_WORD *)(v53 + 32) != 176)
              {
                *(_QWORD *)v47 = v53;
                v47 += 8;
              }
              v52 += 8;
              v48 -= 8;
            }
            while (v48);
            v45 = *(char **)v44;
          }
        }
        else
        {
          v47 = *(char **)v44;
        }
LABEL_107:
        v73 = (unint64_t)(v47 - v45) >> 3;
        *(_DWORD *)(v44 + 8) = v73;
        if (!(_DWORD)v73)
          *(_DWORD *)(a2 + 28) &= ~0x100u;
      }
    }
  }
}

BOOL sub_22EAABFD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v2 = *(_QWORD *)v1;
  v3 = *(unsigned int *)(v1 + 8);
  v4 = *(_QWORD *)v1 + 8 * v3;
  if ((_DWORD)v3)
  {
    v5 = 8 * v3;
    while (*(_WORD *)(*(_QWORD *)v2 + 32) != 273)
    {
      v2 += 8;
      v5 -= 8;
      if (!v5)
      {
        v2 = v4;
        return v2 != v4;
      }
    }
  }
  return v2 != v4;
}

void sub_22EAAC034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t j;
  unint64_t *v17;
  BOOL v18;
  unint64_t v19;
  int v20;
  _QWORD v21[2];
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  int v25;
  _BYTE v26[64];
  void *v27[2];
  _BYTE v28[64];
  uint64_t v29;
  uint64_t v30[3];
  uint64_t v31;
  llvm *v32;
  unsigned int v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  int v37;
  _QWORD v38[5];
  void *v39;
  uint64_t v40;
  _DWORD v41[26];
  uint64_t v42;
  __int16 v43;
  char v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
    return;
  v29 = 0;
  v30[0] = (uint64_t)v30;
  v30[1] = (uint64_t)v30;
  v30[2] = 0;
  v31 = 1;
  for (i = 5; i != 21; i += 2)
    v30[i - 1] = 0;
  v34 = v38;
  v35 = v38;
  v36 = 4;
  v37 = 0;
  v38[4] = 0;
  v39 = v41;
  v40 = 0x400000000;
  v41[24] = 0;
  v42 = 0;
  v43 = 1;
  v44 = 0;
  v22 = v26;
  v23 = v26;
  v24 = 8;
  v25 = 0;
  v27[0] = v28;
  v21[0] = a1;
  v21[1] = a2;
  v7 = a2 + 72;
  v8 = *(_WORD *)(a2 + 80) & 0x7F;
  v9 = -40;
  v27[1] = (void *)0x800000000;
  if (v8 > 70)
  {
    if (v8 != 83)
    {
      if (v8 == 71)
      {
        v9 = -56;
        goto LABEL_20;
      }
      if (v8 == 81)
        goto LABEL_20;
LABEL_15:
      v10 = v8 - 52;
      v11 = (v8 - 33) >= 5;
      v12 = -48;
      if (!v11)
        v12 = -64;
      if (v10 >= 6)
        v9 = v12;
      else
        v9 = -72;
    }
  }
  else
  {
    if (v8 > 0x18)
      goto LABEL_14;
    if (v8 != 16)
    {
      if (((1 << v8) & 0x1066) != 0)
        goto LABEL_20;
      if (v8 != 24)
      {
LABEL_14:
        if (v8 == 70)
        {
          v9 = -64;
          goto LABEL_20;
        }
        goto LABEL_15;
      }
    }
    v9 = -48;
  }
LABEL_20:
  v13 = *(_QWORD *)(v7 + v9 + 16);
  v14 = (_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
  if ((v13 & 4) != 0)
    v14 = (_QWORD *)*v14;
  if (v14)
    v15 = (unint64_t)(v14 - 8);
  else
    v15 = 0;
  for (j = sub_22EFCE144(v15 + 64, v4); j; j = v17[1])
  {
    v17 = (unint64_t *)(j & 0xFFFFFFFFFFFFFFF8);
    v18 = (j & 0xFFFFFFFFFFFFFFF8) == 0 || (j & 4) == 0;
    v19 = j & 0xFFFFFFFFFFFFFFF8;
    if (!v18)
      v19 = *v17;
    v20 = *(_DWORD *)(v19 + 28) & 0x7E;
    if (v19 && v20 == 46)
    {
      v19 = *(_QWORD *)(v19 + 64);
      v20 = *(_DWORD *)(v19 + 28) & 0x7E;
    }
    if ((v20 - 58) >= 0xFFFFFFFC)
      sub_22EABC6C0(v19, (uint64_t)&v22);
    if (v18)
      break;
  }
  if ((sub_22EFB3774(v15, (unsigned int (*)(uint64_t, unint64_t, uint64_t))sub_22EAEAA2C, (uint64_t)v21, (uint64_t)&v29, 0) & 1) != 0)sub_22F24C890(a3, (uint64_t)v27);
  if (v27[0] != v28)
    free(v27[0]);
  if (v23 != v22)
    free(v23);
  if (v39 != v41)
    free(v39);
  if (v35 != v34)
    free(v35);
  if ((v31 & 1) == 0)
    llvm::deallocate_buffer(v32, (void *)(16 * v33));
  sub_22E687D9C(v30);
}

unint64_t sub_22EAAC328(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t j;
  unsigned int v18[24];
  unsigned __int8 *v19;
  unint64_t v20;
  int v21;

  v3 = *(unsigned int *)(a3 + 8);
  if ((_DWORD)v3)
  {
    v6 = (_QWORD *)result;
    for (i = 0; i != v3; ++i)
    {
      v8 = *(_QWORD *)(*(_QWORD *)a3 + 8 * i);
      v9 = v6[11] + 2128;
      v10 = (unsigned __int8 *)sub_22E3B8AAC(v9);
      v11 = *v10;
      v10[v11 + 1] = 11;
      *v10 = v11 + 1;
      *(_QWORD *)&v10[8 * v11 + 16] = v8;
      v21 = 5658;
      v19 = 0;
      v20 = v9;
      v12 = sub_22E3B8AAC(v9);
      v19 = (unsigned __int8 *)v12;
      v13 = *((_OWORD *)v10 + 5);
      v15 = *((_OWORD *)v10 + 2);
      v14 = *((_OWORD *)v10 + 3);
      *(_OWORD *)(v12 + 64) = *((_OWORD *)v10 + 4);
      *(_OWORD *)(v12 + 80) = v13;
      *(_OWORD *)(v12 + 32) = v15;
      *(_OWORD *)(v12 + 48) = v14;
      v16 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v10;
      *(_OWORD *)(v12 + 16) = v16;
      for (j = 96; j != 336; j += 24)
        std::string::operator=((std::string *)(v12 + j), (const std::string *)&v10[j]);
      sub_22E78D560(v12 + 336, (uint64_t)(v10 + 336));
      sub_22E78D658(v12 + 448, (uint64_t *)v10 + 56);
      sub_22E3BB10C(v9, (unint64_t)v10);
      sub_22ECFC6F4((uint64_t)v6, &v19, *(_QWORD *)(a2 + 48), *(_QWORD *)(v8 + 48));
      sub_22E90379C(v6, *(_DWORD *)(v8 + 24), (uint64_t)&v19, 0, (uint64_t)v18);
      result = (unint64_t)sub_22E903BEC(v18);
      if (v19)
      {
        result = v20;
        if (v20)
          result = sub_22E3BB10C(v20, (unint64_t)v19);
      }
    }
  }
  return result;
}

unsigned int *sub_22EAAC484(uint64_t a1, unsigned int a2, unsigned int a3)
{
  _QWORD *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v10[24];
  uint64_t v11;
  unsigned int v12[24];

  v5 = *(_QWORD **)(a1 + 8);
  if (!**(_BYTE **)a1)
  {
    v6 = *(_DWORD *)(**(_QWORD **)(a1 + 16) + 24);
LABEL_4:
    v7 = a3;
    goto LABEL_5;
  }
  v7 = a2;
  v6 = *(_DWORD *)(**(_QWORD **)(a1 + 16) + 24);
  if (sub_22F1CF68C(*(_QWORD *)(v5[13] + 32), a2, v6, v5[13]) == 1)
    goto LABEL_4;
LABEL_5:
  sub_22E8FCA40(v5, v6, v7, 0, (uint64_t)v12);
  v11 = *(_QWORD *)(**(_QWORD **)(a1 + 16) + 40);
  sub_22E894538((uint64_t)v12, &v11);
  sub_22E903BEC(v12);
  v8 = sub_22F3B203C(**(_QWORD **)(a1 + 16));
  sub_22E8FCA40(v5, *(_DWORD *)(*(_QWORD *)v8 + 24), 0x1723u, 0, (uint64_t)v10);
  return sub_22E903BEC(v10);
}

uint64_t sub_22EAAC570(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  unsigned int v17[25];
  BOOL v18;
  uint64_t v19;
  unsigned int v20[24];

  if ((*(_BYTE *)(a3 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a3);
  v7 = *(uint64_t **)v6;
  v8 = *(unsigned int *)(v6 + 8);
  i = *(uint64_t **)v6;
  if ((_DWORD)v8)
  {
    v10 = 8 * v8;
    for (i = *(uint64_t **)v6; *(_WORD *)(*i + 32) != 176; ++i)
    {
      v10 -= 8;
      if (!v10)
        return 0;
    }
  }
  if (i == &v7[v8])
    return 0;
  do
  {
    v12 = *v7++;
    v11 = v12;
  }
  while (*(_WORD *)(v12 + 32) != 176);
  sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xD28u, 0, (uint64_t)v20);
  v19 = *(_QWORD *)(a2 + 40);
  v13 = sub_22E894538((uint64_t)v20, &v19);
  v14 = *(unsigned __int8 *)(v11 + 30);
  if ((~(v14 << 16) & 0x780000) != 0)
    v15 = ((*(unsigned __int16 *)(v11 + 28) | (v14 << 16)) >> 19) & 0xF;
  else
    v15 = sub_22F1BFAD0(v11);
  v18 = v15 == 1;
  sub_22E894E38(v13, (unsigned __int8 *)&v18);
  sub_22E903BEC(v20);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 24), 0x1723u, 0, (uint64_t)v17);
  sub_22E903BEC(v17);
  return 1;
}

void sub_22EAAC6B4(_QWORD *a1, int *a2, uint64_t a3, unint64_t a4, unsigned __int8 a5)
{
  uint64_t i;
  uint64_t *j;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  int v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t **v30;
  _QWORD *v31;
  unsigned int v32[24];
  unsigned int v33[24];
  unint64_t v34;
  _QWORD v35[2];
  uint64_t **v36;
  uint64_t *v37;
  uint64_t v38;
  unsigned __int8 v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  llvm *v47;
  unsigned int v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  int v52;
  _QWORD v53[5];
  void *v54;
  uint64_t v55;
  _DWORD v56[26];
  uint64_t v57;
  __int16 v58;
  char v59;
  uint64_t v60;

  v60 = *MEMORY[0x24BDAC8D0];
  v40 = a4;
  v41 = a3;
  v39 = a5;
  if (sub_22F1CF68C(*(_QWORD *)(a1[13] + 32), 0x1B44u, *a2, a1[13]) != 1)
  {
    v31 = a1;
    v37 = 0;
    v38 = 0;
    v35[0] = &v36;
    v35[1] = &v41;
    v36 = &v37;
    v42 = 0;
    v43 = (uint64_t)&v43;
    v44 = &v43;
    v45 = 0;
    v46 = 1;
    for (i = 40; i != 168; i += 16)
      *(uint64_t *)((char *)&v42 + i) = 0;
    v49 = v53;
    v50 = v53;
    v51 = 4;
    v52 = 0;
    v53[4] = 0;
    v54 = v56;
    v55 = 0x400000000;
    v56[24] = 0;
    v58 = 257;
    v59 = 1;
    v57 = 0;
    if (sub_22EFB3774(a4, (unsigned int (*)(uint64_t, unint64_t, uint64_t))sub_22EAE9544, (uint64_t)v35, (uint64_t)&v42, 0))
    {
      for (j = v44; j != &v43; j = (uint64_t *)j[1])
      {
        v34 = 0;
        v10 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(j[2] + 24 * *((unsigned int *)j + 6) - 24) + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v10 + 8) & 0xF) != 0)
          v10 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(j[2] + 24 * *((unsigned int *)j + 6) - 24)
                                                            + 16));
        v11 = sub_22F10C2A4(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0));
        if (v11)
        {
          if ((*(_DWORD *)(v11 + 28) & 0x7Fu) - 35 >= 3)
            v12 = 0;
          else
            v12 = v11;
        }
        else
        {
          v12 = 0;
        }
        v34 = v12;
        v13 = v37;
        if (v37)
        {
          v14 = (uint64_t *)&v37;
          do
          {
            v15 = v14;
            v16 = v13;
            v17 = v13[4];
            v18 = v13 + 1;
            if (v17 >= v12)
              v14 = v13;
            else
              ++v13;
            v13 = (uint64_t *)*v13;
          }
          while (v13);
          if (v14 != (uint64_t *)&v37)
          {
            v19 = v17 >= v12 ? v16 : v15;
            if (v12 >= v19[4])
            {
              if (v17 < v12)
                v16 = v15;
              v20 = v16[5];
              v21 = *((_DWORD *)j + 32);
              v22 = (*(_DWORD *)(v20 + 28) >> 13) & 3;
              if (v21 <= v22)
                v21 = (*(_DWORD *)(v20 + 28) >> 13) & 3;
              v23 = v22 == 2 || v21 == 3;
              if (!v23)
              {
                sub_22E8FCA40(v31, *a2, 0x1B44u, 0, (uint64_t)v33);
                v24 = sub_22E894538((uint64_t)v33, &v41);
                v25 = sub_22E890024(v24, (uint64_t *)&v40);
                v26 = sub_22E890024(v25, (uint64_t *)&v34);
                sub_22E894E38(v26, &v39);
                sub_22E903BEC(v33);
                sub_22E8FCA40(v31, *(_DWORD *)(v20 + 24), 0x17BDu, 0, (uint64_t)v32);
                sub_22E903BEC(v32);
                v27 = v15 + 1;
                if (v17 >= v12)
                  v27 = v18;
                v28 = (uint64_t *)*v27;
                v29 = v14;
                if (*v27)
                {
                  do
                  {
                    v30 = (uint64_t **)v28;
                    v28 = (uint64_t *)*v28;
                  }
                  while (v28);
                }
                else
                {
                  do
                  {
                    v30 = (uint64_t **)v29[2];
                    v23 = *v30 == v29;
                    v29 = (uint64_t *)v30;
                  }
                  while (!v23);
                }
                if (v36 == (uint64_t **)v14)
                  v36 = v30;
                --v38;
                sub_22E6C2420(v37, v14);
                operator delete(v14);
              }
            }
          }
        }
      }
    }
    if (v54 != v56)
      free(v54);
    if (v50 != v49)
      free(v50);
    if ((v46 & 1) == 0)
      llvm::deallocate_buffer(v47, (void *)(16 * v48));
    sub_22E687D9C(&v43);
    sub_22F258024(v37);
  }
}

uint64_t sub_22EAACA38(_QWORD *a1, uint64_t *a2, unint64_t a3, _QWORD **a4, int **a5, uint64_t a6, uint64_t a7, int *a8, unsigned int a9)
{
  _DWORD *v14;
  _QWORD *v15;
  unsigned int v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t *v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int v38;
  unsigned int *v39;
  _BYTE *v40;
  _QWORD *v41;
  unsigned int v42;
  unint64_t *v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  int v52;
  _QWORD *v53;
  unsigned int v54;
  uint64_t v55;
  const char *v56;
  uint64_t *v57;
  int v58;
  uint64_t v59;
  int v60;
  unint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  int *v70;
  int v71;
  int v72;
  uint64_t v73;
  unint64_t v74;
  unsigned int v75;
  unint64_t v76;
  _QWORD *i;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  int v81;
  unsigned int v82;
  __int128 *v83;
  unsigned int *v84;
  int *v86;
  int v87;
  _QWORD *v88;
  unsigned int v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  int *v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  int v122;
  unint64_t *v123;
  unint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  unint64_t v127;
  BOOL v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int v150;
  uint64_t v152;
  unsigned int v153[24];
  unint64_t v154;
  int v155;
  _BYTE v156[96];
  _BYTE v157[100];
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  int v162;
  char *v163;
  const char *v164;
  char v165;
  uint64_t v166;
  char v167;
  void *__p[9];
  __int128 v169;
  uint64_t v170;
  int v171;
  __int16 v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  unsigned int v179;
  _BYTE v180[24];
  __int16 v181;
  char v182;
  int v183;
  uint64_t v184;

  v184 = *MEMORY[0x24BDAC8D0];
  v162 = a3;
  v14 = a4 + 5;
  v15 = *a4;
  sub_22EA12DB4((uint64_t)a1, (uint64_t)(a4 + 5));
  v159 = v160;
  v16 = v161;
  v158 = v161;
  if (!v161)
  {
    v16 = *((_DWORD *)a4 + 18);
    v158 = v16;
  }
  v17 = sub_22E8AD4A8((uint64_t)a4);
  v22 = v17;
  v23 = *a4 + 4;
  v24 = *v23;
  if ((*v23 & 4) != 0)
  {
    v26 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF8);
    v25 = (unint64_t *)(v26 + 8 * *(unsigned int *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8));
  }
  else
  {
    v25 = &v23[v24 > 7];
    v26 = (uint64_t)(*a4 + 4);
  }
  if ((unint64_t *)v26 != v25)
  {
    while ((*(_BYTE *)(*(_QWORD *)v26 + 50) & 0x10) == 0)
    {
      v26 += 8;
      if ((unint64_t *)v26 == v25)
      {
        v26 = (uint64_t)v25;
        break;
      }
    }
  }
  if ((v24 & 4) != 0)
    v27 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF8) + 8 * *(unsigned int *)((v24 & 0xFFFFFFFFFFFFFFF8) + 8);
  else
    v27 = (uint64_t)&v23[v24 > 7];
  if (v26 == v27)
    v28 = 0;
  else
    v28 = *(_QWORD *)v26;
  v29 = a1[27];
  if (v29)
    v30 = v29 - 64;
  else
    v30 = 0;
  if ((*(_DWORD *)(v30 + 72) & 0xE000) == 0x2000)
  {
    if (v17)
    {
      if ((_DWORD)a3)
      {
        v31 = 1;
LABEL_121:
        sub_22E8FCA40(a1, v16, 0x1Du, 0, (uint64_t)&v169);
        LODWORD(v164) = v31;
        v83 = (__int128 *)sub_22E89519C((uint64_t)&v169, (unsigned int *)&v164);
LABEL_127:
        sub_22E894538((uint64_t)v83, &v159);
LABEL_128:
        v84 = (unsigned int *)&v169;
LABEL_129:
        sub_22E903BEC(v84);
        return 0;
      }
      v33 = *v15;
      if ((*v15 & 7) == 3)
      {
        v31 = 2;
        goto LABEL_121;
      }
      v32 = a3;
      v81 = v160 & 7;
      if (v81 == 7)
      {
        v82 = *(_DWORD *)(v160 & 0xFFFFFFFFFFFFFFF8);
        if (v82 >= 3)
          v82 = 3;
        v81 = v82 | 8;
      }
      if ((v81 - 5) < 2)
      {
        v31 = 5;
        goto LABEL_121;
      }
      if ((v81 - 3) < 2)
      {
        sub_22E8FCA40(a1, v16, 0x1Du, 0, (uint64_t)&v169);
        LODWORD(v164) = v81;
        v96 = sub_22E89519C((uint64_t)&v169, (unsigned int *)&v164);
        sub_22F2F30F4(v96, (uint64_t)"");
        goto LABEL_128;
      }
    }
    else
    {
      v32 = a3;
      v33 = *v15;
      if ((*v15 & 7) != 1 && !v28)
      {
        v31 = 0;
        goto LABEL_121;
      }
    }
  }
  else
  {
    v32 = a3;
    v33 = *v15;
  }
  v152 = (uint64_t)a1;
  LODWORD(v34) = v33 & 7;
  if (v34 < 2 || (_DWORD)v34 == 3)
  {
    v35 = v32;
  }
  else
  {
    v35 = v32;
    if ((_DWORD)v34 == 7)
    {
      if (!v17)
      {
        if ((v33 & 0x6000000000) == 0)
          goto LABEL_125;
        goto LABEL_46;
      }
      v36 = v32;
      v37 = v28;
      v38 = *((_DWORD *)v15 + 24);
      v39 = (unsigned int *)v157;
      v40 = v157;
      v41 = (_QWORD *)v152;
      v42 = 3985;
    }
    else
    {
      v36 = v32;
      v37 = v28;
      v38 = *((_DWORD *)v15 + 24);
      v39 = (unsigned int *)v156;
      v40 = v156;
      v41 = (_QWORD *)v152;
      v42 = 4742;
    }
    sub_22E8FCA40(v41, v38, v42, 0, (uint64_t)v40);
    sub_22E903BEC(v39);
    v43 = *a4;
    *v43 = **a4 & 0xFFFFFFFFFFFFFFC0;
    v43[12] = 0;
    v33 = *v15;
    v34 = *v15 & 7;
    v28 = v37;
    v35 = v36;
  }
  if ((_DWORD)v34 != 7 && (_DWORD)v34)
    goto LABEL_56;
  v44 = (v33 & 0x6000000000) == 0 || v22;
  if ((v44 & 1) != 0)
  {
    if (!v22)
      goto LABEL_125;
    goto LABEL_56;
  }
LABEL_46:
  v145 = v28;
  sub_22E8FCA40((_QWORD *)v152, *((_DWORD *)v15 + 49), 0xE3Cu, 0, (uint64_t)&v169);
  v45 = *((unsigned int *)v15 + 49);
  if (!a9)
  {
    LODWORD(v164) = 0;
    v46 = sub_22E8900C4((uint64_t)&v169, (int *)&v164);
    LODWORD(v163) = 0;
    sub_22E8900C4(v46, (int *)&v163);
    if ((*((_BYTE *)*a4 + 3) & 2) != 0)
    {
      v167 = 0;
      v166 = 0;
      memset(__p, 0, 25);
      v164 = (const char *)(v45 | (v45 << 32));
      v165 = 1;
      sub_22E890748((uint64_t)&v169, &v164);
      if (SHIBYTE(__p[2]) < 0)
        operator delete(__p[0]);
    }
    else
    {
      v167 = 0;
      v166 = 0;
      __p[1] = 0;
      __p[2] = (void *)0x500000000000000;
      LOBYTE(__p[3]) = 0;
      v164 = (const char *)(v45 | (v45 << 32));
      v165 = 1;
      __p[0] = (void *)0x74736E6F63;
      sub_22E890748((uint64_t)&v169, &v164);
      if (SHIBYTE(__p[2]) < 0)
        operator delete(__p[0]);
      v47 = *a4;
      *v47 = **a4 & 0xFFFFFF9FFFFFFFFFLL;
      *((_DWORD *)v47 + 49) = 0;
      sub_22E8ADB6C(*a4, 1, v45, &v164, (int *)&v163, *(uint64_t **)(v152 + 72));
    }
    sub_22E903BEC((unsigned int *)&v169);
    v28 = v145;
LABEL_125:
    if ((v159 & 7) != 0)
    {
      sub_22E8FCA40((_QWORD *)v152, v16, 0xB77u, 0, (uint64_t)&v169);
      v83 = &v169;
      goto LABEL_127;
    }
    v154 = v159 & 0xFFFFFFFFFFFFFFF8;
    if (a6)
    {
      v86 = *a5;
      if (((*a5)[3] & 0x1FFFFFFF) != 0)
      {
        v87 = *((_DWORD *)a4 + 16);
        v88 = (_QWORD *)v152;
        v89 = 4826;
      }
      else
      {
        v87 = *v86;
        v88 = (_QWORD *)v152;
        v89 = 4827;
      }
      sub_22E8FCA40(v88, v87, v89, 0, (uint64_t)&v169);
      v92 = sub_22E8BAE44((uint64_t)&v169, (uint64_t *)&v154);
      v93 = v86[2];
      LODWORD(v164) = *v86;
      HIDWORD(v164) = v93;
      sub_22E8906A0(v92, (uint64_t *)&v164);
      goto LABEL_128;
    }
    if (*v14 == 7)
    {
      v111 = v28;
      sub_22E8FCA40((_QWORD *)v152, *((_DWORD *)a4 + 16), 0xEC4u, 0, (uint64_t)&v169);
      v112 = sub_22E8BAE44((uint64_t)&v169, (uint64_t *)&v154);
      v164 = *(const char **)((char *)a4[6] + 36);
      v113 = sub_22E8906A0(v112, (uint64_t *)&v164);
      sub_22F2F2168(v113, (unsigned int *)a4[6] + 9);
      sub_22E903BEC((unsigned int *)&v169);
      v28 = v111;
      v114 = v154;
      *((_DWORD *)a4 + 10) = 0;
      a4[6] = (_QWORD *)v114;
      *((_DWORD *)a4 + 16) = v16;
      *((_DWORD *)a4 + 17) = v16;
    }
    if (a4[2])
    {
      v90 = v28;
      v91 = sub_22E958204(v152, (uint64_t)(a4 + 1), 0);
      if (v91)
      {
        sub_22EA14220(v152, (uint64_t)(a4 + 1), v91, v159, *((_DWORD *)a4 + 16), *((_DWORD *)a4 + 10) == 7);
      }
      else
      {
        sub_22E8FCA40((_QWORD *)v152, *((_DWORD *)a4 + 16), 0xEC0u, 0, (uint64_t)&v169);
        v101 = sub_22E894538((uint64_t)&v169, &v159);
        v164 = (const char *)a4[1];
        sub_22E8906A0(v101, (uint64_t *)&v164);
        sub_22E903BEC((unsigned int *)&v169);
      }
      *((_DWORD *)a4 + 8) = 0;
      a4[1] = 0;
      a4[2] = 0;
      v28 = v90;
    }
    v102 = v35;
    LODWORD(v35) = v28 == 0;
    v103 = *(_QWORD *)(v152 + 216);
    if (v103)
      v104 = v103 - 64;
    else
      v104 = 0;
    if (!v28)
    {
      v106 = sub_22EA37C50((unsigned int *)v152, a2, v104, v16, a4, a7, a9, v102);
      v107 = (_QWORD *)v152;
      v50 = v106;
      if (!v106)
        return 0;
      goto LABEL_158;
    }
    if (*((_DWORD *)a4 + 10) || (v105 = (uint64_t)a4[6]) == 0)
    {
      sub_22E8FCA40((_QWORD *)v152, v16, 0xA4Bu, 0, (uint64_t)&v164);
      v84 = (unsigned int *)&v164;
      goto LABEL_129;
    }
    v146 = v28;
    v150 = *((_DWORD *)a4 + 16);
    v123 = sub_22EE8156C(v152, (uint64_t)a4, (uint64_t)a2, v16, v18, v19, v20, v21);
    v124 = *v123;
    if ((*(_BYTE *)(*(_QWORD *)(v152 + 72) + 1) & 1) != 0)
    {
      sub_22EAA474C(v152, (uint64_t)a4);
      if (sub_22EE67290(v152, *((_DWORD *)a4 + 16), v123, 3))
      {
        *((_WORD *)a4 + 544) |= 1u;
        v125 = *(_QWORD *)(v152 + 88);
        v124 = *(_QWORD *)(v125 + 16480);
        v123 = sub_22EF579A8(v125, v124, v150);
      }
    }
    sub_22EA11438((unsigned int *)v152, (uint64_t)*a4);
    v126 = *a4;
    v127 = **a4;
    v147 = v124;
    if ((v127 & 0x300000000) != 0)
    {
      v128 = (v127 & 0x100000000) == 0;
      v129 = 164;
      if (v128)
        v129 = 184;
      sub_22E8FCA40((_QWORD *)v152, *(_DWORD *)((char *)v126 + v129), 0xE2Au, 0, (uint64_t)&v169);
      LODWORD(v163) = (**(_DWORD **)(v152 + 72) >> 11) & 1;
      sub_22E89519C((uint64_t)&v169, (unsigned int *)&v163);
      sub_22E903BEC((unsigned int *)&v169);
      v126 = *a4;
      v127 = **a4;
    }
    v130 = (v127 >> 3) & 3;
    if ((_DWORD)v130)
    {
      sub_22E8FCA40((_QWORD *)v152, *((_DWORD *)v126 + 25), 0xE66u, 0, (uint64_t)&v169);
      v163 = off_24FAB8028[v130 - 1];
      sub_22E8AECC4((uint64_t)&v169, (uint64_t *)&v163);
      sub_22E903BEC((unsigned int *)&v169);
    }
    *(_QWORD *)&v169 = 0;
    *((_QWORD *)&v169 + 1) = &v171;
    v170 = 0x800000000;
    v174 = 0;
    v175 = 0;
    v176 = 0;
    v177 = (_QWORD *)v152;
    v178 = v105;
    v179 = v150;
    sub_22EFC6D6C((uint64_t)v180, v105);
    *(_OWORD *)&v180[8] = xmmword_22F463A40;
    v181 = 1;
    v182 = 1;
    v183 = 0;
    sub_22EC56024((uint64_t)&v169);
    sub_22EC63520(v152, (uint64_t)&v169, a2, 0, 0);
    if ((_DWORD)v169 == 3)
    {
      v131 = **((_QWORD **)&v169 + 1) & 0xFFFFFFFFFFFFFFFCLL;
      v132 = (uint64_t)v123;
    }
    else
    {
      v131 = 0;
      v132 = (uint64_t)v123;
      if ((_DWORD)v169 != 2)
        goto LABEL_207;
      v131 = **((_QWORD **)&v169 + 1) & 0xFFFFFFFFFFFFFFFCLL;
      v133 = *(_DWORD *)(v131 + 28) & 0x7F;
      if (v133 > 0x2F || ((1 << v133) & 0xC00000060000) == 0)
      {
LABEL_199:
        if (v133 <= 0x3B && ((1 << v133) & 0x800004100000000) != 0)
        {
          sub_22F34553C(v152, *((_DWORD *)a4 + 16), v131);
          v131 = 0;
        }
        else
        {
          if (v103)
            v135 = v104 + 64;
          else
            v135 = 0;
          if (!sub_22E8CE620(v152 + 3320, (_QWORD *)v131, v135, a2, 0))
            v131 = 0;
        }
        goto LABEL_207;
      }
      v131 = sub_22EFBAEA4(**((_QWORD **)&v169 + 1) & 0xFFFFFFFFFFFFFFFCLL);
    }
    if (v131)
    {
      v133 = *(_DWORD *)(v131 + 28) & 0x7F;
      goto LABEL_199;
    }
LABEL_207:
    if (v103)
      v136 = v104 + 64;
    else
      v136 = 0;
    v137 = *(_QWORD *)(v146 + 48);
    v138 = v146 + 8 * (unsigned __int16)v137 + 96 * ((v137 >> 18) & 1) + 80 + 16 * ((v137 >> 19) & 1);
    v139 = v138 + 16 * ((v137 >> 22) & 1);
    if ((v137 & 0x400000) != 0)
      v140 = *(unsigned int *)(v138 + 8);
    else
      v140 = (v137 >> 21) & 1;
    v50 = sub_22F3B3480(*(_QWORD *)(v152 + 88), v136, v150, v105, v147, v132, *((_DWORD *)a4 + 18), *(_QWORD *)(v139 + 8 * v140), *(_QWORD *)(v139 + 8 * v140 + 8));
    sub_22EA7E768((_QWORD *)v152, *(_QWORD *)(v152 + 3344), v50, (uint64_t)a4);
    v141 = *(_DWORD *)(v50 + 28);
    *(_DWORD *)(v50 + 28) = v141 & 0xFFFF9FFF | ((v102 & 3) << 13);
    if ((v141 & 0x80) != 0)
      sub_22EFC77E8(v104, 1);
    if (*((_DWORD *)*a4 + 48))
    {
      v142 = *(_QWORD *)(v50 + 8);
      if ((v142 & 6) != 0)
        *(_QWORD *)(v50 + 8) = v142 | 6;
    }
    if (!v131 || (*(_DWORD *)(v50 + 28) & 0x80) == 0)
      sub_22EA0483C(v152, v50, a2, 1);
    if ((_BYTE)v183)
    {
      if ((_DWORD)v169 == 5)
      {
        sub_22EC64D18(v177, (uint64_t)&v169);
      }
      else if (v175 && (*(_DWORD *)(v177[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v177, (uint64_t)&v169);
      }
    }
    if (v174)
    {
      v144 = sub_22EC6CBD0(v174);
      MEMORY[0x2348A0E9C](v144, 0x10E0C409F09D3C3);
    }
    if (*((int **)&v169 + 1) != &v171)
      free(*((void **)&v169 + 1));
    v107 = (_QWORD *)v152;
LABEL_158:
    v108 = v107[27];
    if (v108)
      v109 = v108 - 64;
    else
      v109 = 0;
    sub_22EAAC6B4(v107, (int *)&v158, v159, v109, 1u);
    goto LABEL_83;
  }
  LODWORD(v164) = 1;
  sub_22E8900C4((uint64_t)&v169, (int *)&v164);
  v163 = 0;
  LODWORD(v154) = 0;
  if ((sub_22E8AD658((uint64_t)*a4, v152, 3u, v45, &v163, (int *)&v154) & 1) != 0)
  {
    LODWORD(v164) = 1;
    sub_22E8900C4((uint64_t)&v169, (int *)&v164);
    sub_22E903BEC((unsigned int *)&v169);
    v28 = v145;
    goto LABEL_125;
  }
  v155 = 0;
  v48 = sub_22E8900C4((uint64_t)&v169, &v155);
  v167 = 0;
  v166 = 0;
  v164 = (const char *)(v45 | (v45 << 32));
  v165 = 0;
  __p[1] = 0;
  *(void **)((char *)&__p[1] + 7) = 0;
  strcpy((char *)__p, "static ");
  *(_WORD *)((char *)&__p[2] + 7) = 7;
  sub_22E890748(v48, &v164);
  if (SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  sub_22E903BEC((unsigned int *)&v169);
LABEL_56:
  v49 = sub_22EA13184(v152, (uint64_t)a2, a4, a5, a6);
  v50 = v49;
  if (!v49)
    return v50;
  if (a7)
  {
    if ((*(_DWORD *)(v49 + 28) & 0x80) != 0)
    {
LABEL_63:
      sub_22EFC77E8(v50, 1);
      goto LABEL_64;
    }
    v51 = *(_DWORD *)(v49 + 28) & 0x7F;
    if ((v51 - 60) >= 7)
    {
      if (v51 == 41)
      {
        v52 = v16;
        v53 = (_QWORD *)v152;
        v54 = 5025;
        goto LABEL_61;
      }
      if (v51 != 31)
      {
        sub_22E8FCA40((_QWORD *)v152, v16, 0xFDEu, 0, (uint64_t)&v169);
        v94 = sub_22E894538((uint64_t)&v169, &v159);
        v164 = *(const char **)(v50 + 48);
        v55 = sub_22E8901B8(v94, (uint64_t *)&v164);
        sub_22F0D4E74(a7);
        v163 = v95;
        v57 = (uint64_t *)&v163;
        goto LABEL_62;
      }
    }
    v52 = v16;
    v53 = (_QWORD *)v152;
    v54 = 4730;
LABEL_61:
    sub_22E8FCA40(v53, v52, v54, 0, (uint64_t)&v169);
    v55 = sub_22E894538((uint64_t)&v169, &v159);
    sub_22F0D4E74(a7);
    v164 = v56;
    v57 = (uint64_t *)&v164;
LABEL_62:
    sub_22E8906A0(v55, v57);
    sub_22E903BEC((unsigned int *)&v169);
    goto LABEL_63;
  }
LABEL_64:
  v58 = *(_DWORD *)(v50 + 28);
  if ((v58 & 0x7D | 2) == 0x1F)
  {
    v59 = *(_QWORD *)(v50 + 48);
    v60 = v58 & 0xFFFF9FFF | ((v35 & 3) << 13);
    *(_DWORD *)(v50 + 28) = v60;
    if (v59 != v50)
    {
      v60 = *(_DWORD *)(v59 + 28) & 0xFFFF9FFF | ((v35 & 3) << 13);
      *(_DWORD *)(v59 + 28) = v60;
      goto LABEL_69;
    }
  }
  else
  {
    v60 = v58 & 0xFFFF9FFF | ((v35 & 3) << 13);
    *(_DWORD *)(v50 + 28) = v60;
  }
  v59 = v50;
LABEL_69:
  if ((v60 & 0x7F) != 0x35)
    goto LABEL_82;
  if ((~*(_DWORD *)(v59 + 40) & 7) != 0)
    goto LABEL_74;
  v61 = *(_QWORD *)(v59 + 40) & 0xFFFFFFFFFFFFFFF8;
  v62 = *(_DWORD *)v61;
  if (*(_DWORD *)v61 >= 3u)
    v62 = 3;
  if (v62)
LABEL_74:
    v63 = 0;
  else
    v63 = *(_QWORD *)(v61 + 16);
  if (((*(_DWORD *)(v63 + 28) >> 13) & 3) == (_DWORD)v35)
    goto LABEL_82;
  v64 = *(_QWORD *)(v63 + 16);
  v65 = (_QWORD *)(v64 & 0xFFFFFFFFFFFFFFF8);
  if ((v64 & 4) != 0)
    v65 = (_QWORD *)*v65;
  v66 = sub_22EFCBB30((unint64_t)v65);
  v67 = *(_QWORD *)(v59 + 16);
  v68 = (_QWORD *)(v67 & 0xFFFFFFFFFFFFFFF8);
  if ((v67 & 4) != 0)
    v68 = (_QWORD *)*v68;
  v35 = sub_22EFCBB30((unint64_t)v68);
  if (!v35)
    goto LABEL_83;
  v69 = sub_22EFCC008(v66);
  if (v69 != sub_22EFCC008(v35))
  {
LABEL_82:
    LODWORD(v35) = 0;
LABEL_83:
    v70 = a8;
    goto LABEL_84;
  }
  v115 = *(_QWORD *)(v59 + 56);
  if ((v115 & 4) != 0 && (v143 = v115 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v143 + 16)))
    v116 = **(int ***)(v143 + 24);
  else
    v116 = (int *)(v59 + 64);
  sub_22E8FCA40((_QWORD *)v152, *v116, 0xC7Eu, 0, (uint64_t)v153);
  sub_22E903BEC(v153);
  v117 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v63 + 16))(v63);
  sub_22E8FCA40((_QWORD *)v152, v117, 0x1594u, 0, (uint64_t)&v169);
  LODWORD(v164) = (*(_DWORD *)(v63 + 28) >> 13) & 3;
  sub_22F30A170((uint64_t)&v169, (int *)&v164);
  sub_22E903BEC((unsigned int *)&v169);
  v118 = *(_QWORD *)(v152 + 216);
  if (v118)
    v119 = v118 - 64;
  else
    v119 = 0;
  v70 = a8;
  if ((*(_WORD *)(v119 + 72) & 0x80) != 0)
    sub_22EFCC320(v119 + 64);
  v120 = 0;
  v121 = *(_QWORD *)(v119 + 80);
  do
  {
    if ((*(_BYTE *)(v121 + 28) & 0x7F) == 0)
      v120 = v121;
    v121 = *(_QWORD *)(v121 + 8) & 0xFFFFFFFFFFFFFFF8;
  }
  while (v121);
  v122 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v120 + 16))(v120);
  sub_22E8FCA40((_QWORD *)v152, v122, 0x1593u, 0, (uint64_t)&v169);
  sub_22F30A170((uint64_t)&v169, &v162);
  sub_22E903BEC((unsigned int *)&v169);
  LODWORD(v35) = 0;
LABEL_84:
  v71 = *v70;
  if ((*v70 & 1) != 0)
  {
    v97 = *(_QWORD *)(v152 + 88);
    v98 = v70[2] | ((unint64_t)v70[2] << 32);
    v169 = 0uLL;
    v170 = v98;
    v171 = 0;
    v173 = 125;
    v172 = 478;
    v99 = sub_22F39AB60(v97, &v169);
    sub_22EFCA95C(v50, v99);
    v71 = *v70;
  }
  if ((v71 & 0xE) != 0)
  {
    v100 = sub_22F386C08(*(_QWORD *)(v152 + 88), v70[3] | ((unint64_t)v70[3] << 32), 5, (v71 & 4) != 0);
    sub_22EFCA95C(v50, v100);
  }
  v72 = v70[6];
  if (v72 && (*(_DWORD *)(v50 + 28) & 0x7Eu) - 54 <= 3)
    *(_DWORD *)(v50 + 140) = v72;
  sub_22EAAB818((_QWORD *)v152, v50);
  if ((_DWORD)v35)
  {
    sub_22EA11770(*(_QWORD *)(v152 + 2264), v50);
    if (sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(v152 + 104) + 32), 0x1BE0u, *(_DWORD *)(v50 + 24), *(_QWORD *)(v152 + 104)) != 1&& (*(_DWORD *)(v50 + 28) & 0x200) == 0&& (*(_DWORD *)(v50 + 28) & 0x6000) == 0x4000&& *(_QWORD *)(v50 + 40)&& !sub_22EA057AC(v50))
    {
      v73 = *(_QWORD *)(v50 + 16);
      v74 = v73 & 0xFFFFFFFFFFFFFFF8;
      if ((v73 & 4) != 0)
        v74 = *(_QWORD *)v74;
      v75 = (*(_WORD *)(v74 + 8) & 0x7E) - 34;
      if (v74)
        v76 = v74 - 64;
      else
        v76 = 0;
      if (v75 >= 4)
        v76 = 0;
      if ((sub_22EFC7ADC(v76 + 64) & 1) == 0)
      {
        for (i = (_QWORD *)(v50 + 48); ; i = (_QWORD *)(v80 + 32))
        {
          v78 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
          if (v78)
            v79 = (*(_DWORD *)(v78 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
          else
            v79 = 0;
          if (v79)
          {
            v80 = *(_QWORD *)(*i & 0xFFFFFFFFFFFFFFF0);
          }
          else if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v78 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3
                 || (v80 = sub_22F10CF48(v78)) == 0)
          {
            v110 = sub_22F10C2A4(v78);
            if (!v110
              || (v134 = v110, (*(_DWORD *)(v110 + 28) & 0x7Fu) - 35 > 2)
              || (*(_BYTE *)(v110 + 74) & 1) != 0
              && sub_22E49F698(v110)
              && (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v134 + 104) + 96), *(_QWORD *)(v134 + 104)),
                  (**(_QWORD **)(v134 + 128) & 0x100000000000) != 0))
            {
              *(_QWORD *)&v169 = v50;
              sub_22F327C3C(v152 + 2272, (uint64_t *)&v169);
            }
            return v50;
          }
        }
      }
    }
  }
  return v50;
}

uint64_t sub_22EAADB28(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  int *v11;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;

  v3 = *(unsigned int *)(a3 + 120);
  if ((_DWORD)v3)
  {
    v5 = result;
    v6 = *(int **)(a3 + 112);
    v7 = *(unsigned int *)(a3 + 120);
    while (1)
    {
      v9 = *v6;
      v6 += 30;
      v8 = v9;
      if (v9 != 6)
        break;
      if (!--v7)
        return result;
    }
    if (((1 << v8) & 0xB7) == 0)
    {
      v10 = 0;
      v11 = *(int **)(a3 + 112);
      while (1)
      {
        v13 = *v11;
        v11 += 30;
        v12 = v13;
        if (v13 != 6)
          break;
        if (v3 == ++v10)
        {
          v14 = 0;
          goto LABEL_15;
        }
      }
      if (((1 << v12) & 0xB7) != 0)
        v14 = 0;
      else
        v14 = v10;
LABEL_15:
      v15 = *(_QWORD *)(a3 + 112) + 120 * v14;
      v16 = *(_QWORD *)(v15 + 72);
      if (v16)
      {
        v17 = *(unsigned int *)(v15 + 48);
        if ((_DWORD)v17)
        {
          v18 = 32 * v17;
          v19 = (unint64_t *)(v16 + 16);
          do
          {
            if (*(_QWORD *)(*v19 + 40))
              result = sub_22EA0483C(v5, *v19, a2, 0);
            v19 += 4;
            v18 -= 32;
          }
          while (v18);
        }
      }
    }
  }
  return result;
}

uint64_t sub_22EAADC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  unint64_t v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  unint64_t v21;
  _QWORD v22[2];
  _BYTE v23[48];
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[12392];
  uint64_t v28;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v6 = (uint64_t)v5;
  v7 = v0;
  v28 = *MEMORY[0x24BDAC8D0];
  v26 = v1;
  sub_22E904AD8(v0, 0, v5, 0, (uint64_t *)&v24);
  v8 = v24;
  v24 = 0;
  if (v8)
  {
    if ((v8[8] & 7) != 0 || *(_QWORD *)(v25 + 1888))
      (*(void (**)(_BYTE *))(*(_QWORD *)v8 + 8))(v8);
    else
      *(_QWORD *)(v25 + 1888) = v8;
  }
  if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 49 >= 3)
    v9 = 0;
  else
    v9 = v6;
  if (v2)
  {
    if (!sub_22EE67384(v7, v2, 11))
    {
      if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0
        && (*(_BYTE *)(v2 + 1) & 0x80) == 0)
      {
        sub_22EC38F40((uint64_t)v23, v9, 0, 0, 1);
        v12 = *(_QWORD *)(v9 + 72) & 3;
        sub_22F0D5A50(v2);
        v14 = v13;
        if (v12 == 2)
        {
          sub_22F0D60E4(v2);
          v15 = v14;
          v17 = v14 | (unint64_t)(v16 << 32);
          v18 = 1;
        }
        else
        {
          v17 = v4 | ((unint64_t)v4 << 32);
          v15 = v13;
          v18 = 2;
        }
        v22[0] = v18 | (v15 << 32);
        v22[1] = v17;
        sub_22EC395BC(v27, v7, v23, v22, &v26, 1, 0, 1);
        v2 = sub_22EC3DF80((int)v27, v7);
        if ((v2 & 1) != 0)
        {
          sub_22EFC77E8(v9, 1);
          return sub_22EC3CE2C((uint64_t)v27);
        }
        sub_22EC3CE2C((uint64_t)v27);
      }
      result = sub_22EBCF22C(v7, v2 & 0xFFFFFFFFFFFFFFFELL, v4, 0, 0);
      if ((result & 1) != 0)
        return sub_22EFC77E8(v9, 1);
      v21 = result & 0xFFFFFFFFFFFFFFFELL;
      if ((*(_BYTE *)(v9 + 68) & 1) != 0)
      {
        *(_QWORD *)(*(_QWORD *)(v9 + 72) & 0xFFFFFFFFFFFFFFFCLL) = v21;
        return result;
      }
      v11 = *(_QWORD *)(v9 + 72) & 3 | v21;
      goto LABEL_30;
    }
    result = sub_22EFC77E8(v9, 1);
  }
  else
  {
    result = sub_22EFC77E8(v6, 1);
    if (!v9)
      return result;
  }
  if ((*(_BYTE *)(v9 + 68) & 1) != 0)
  {
    v11 = *(_QWORD *)(v9 + 72) & 0xFFFFFFFFFFFFFFFCLL;
    v19 = *(_QWORD *)(v9 + 72) & 3;
    if ((_DWORD)v19)
      v20 = (_DWORD)v19 == 3;
    else
      v20 = 1;
    if (!v20)
      v11 = *(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFFCLL;
  }
  else
  {
    v11 = 0;
  }
LABEL_30:
  *(_QWORD *)(v9 + 72) = v11;
  return result;
}

uint64_t sub_22EAADEB8(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8, _DWORD *a9, int a10)
{
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  unsigned int v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v37;
  unsigned int v38;
  int v39;
  unint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  unsigned int v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  unsigned int v67;
  _DWORD *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  unint64_t v104;
  unint64_t v105;
  int v106;
  uint64_t v107;
  void **v108;
  unint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (**v113)();
  int v114;
  char v115;
  uint64_t v116;
  _BYTE v117[19];
  unsigned int v118[24];
  uint64_t v119;
  __int128 v120;
  void *v121;
  uint64_t v122;
  _BYTE v123[22];
  __int128 v124;
  uint64_t v125;
  __int128 v126;
  void *v127[2];
  uint64_t v128;
  _BYTE v129[22];
  __int128 v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  _BYTE v135[64];
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  int v141;
  _QWORD v142[2];
  uint64_t v143;
  __int16 v144;
  int v145;
  char v146;
  uint64_t v147;

  v147 = *MEMORY[0x24BDAC8D0];
  v119 = a5;
  v18 = 1;
  v19 = (unint64_t)sub_22EBBCB14((uint64_t)a1, a9, 0, 1, (uint64_t)sub_22F2E6FA4, (uint64_t)&v132);
  if (v19 < 2)
    return v18;
  if (!a2)
    return 1;
  v20 = *(_DWORD *)(a2 + 28);
  if ((v20 & 0x7Fu) - 26 <= 6)
  {
    a2 = *(_QWORD *)(a2 + 48);
    v20 = *(_DWORD *)(a2 + 28);
  }
  if ((v20 & 0x7F) != 0x37)
    return 1;
  v21 = *(_WORD *)(a2 + 80) & 0x7F;
  v22 = -40;
  if (v21 > 0x46)
  {
    if (v21 == 83)
      goto LABEL_22;
    if (v21 == 71)
    {
      v22 = -56;
      goto LABEL_22;
    }
    if (v21 != 81)
    {
LABEL_17:
      v23 = v21 - 52;
      v24 = v21 - 33 >= 5;
      v25 = -48;
      if (!v24)
        v25 = -64;
      if (v23 >= 6)
        v22 = v25;
      else
        v22 = -72;
    }
  }
  else
  {
    if (v21 > 0x18)
      goto LABEL_16;
    if (v21 == 16)
    {
LABEL_9:
      v22 = -48;
      goto LABEL_22;
    }
    if (((1 << v21) & 0x1066) == 0)
    {
      if (v21 == 24)
        goto LABEL_9;
LABEL_16:
      if (v21 == 70)
      {
        v22 = -64;
        goto LABEL_22;
      }
      goto LABEL_17;
    }
  }
LABEL_22:
  v105 = v19 & 0xFFFFFFFFFFFFFFFELL;
  v106 = a8;
  v26 = *(_QWORD *)(a2 + 72 + v22 + 16);
  v27 = (_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF8);
  if ((v26 & 4) != 0)
    v27 = (_QWORD *)*v27;
  if (v27)
    v28 = (uint64_t)(v27 - 8);
  else
    v28 = 0;
  if (sub_22EAAEBCC(v19, v28, a4, a6, a5))
  {
    if (a10)
    {
      sub_22E8FCA40(a1, a10, 0x1190u, 0, (uint64_t)&v132);
      v34 = sub_22E8BAE44((uint64_t)&v132, &v119);
      sub_22F0D4E74(v105);
      *(_QWORD *)&v120 = __PAIR64__(v35, v106);
      sub_22E8906A0(v34, (uint64_t *)&v120);
      sub_22E903BEC((unsigned int *)&v132);
    }
    sub_22E46BB88(a2);
    return sub_22EAAEC58();
  }
  v104 = v28;
  if (a6)
  {
    if (a6 < 0x10)
      return 1;
    v37 = *(_QWORD *)(a6 & 0xFFFFFFFFFFFFFFF0);
    if (v37)
    {
      v38 = v106;
      if (*(_BYTE *)(v37 + 16) == 57)
      {
        a6 = *(_QWORD *)(v37 + 8);
        if (a6 >= 0x10)
        {
          if (!*(_QWORD *)(v37 + 24))
            goto LABEL_101;
          return sub_22EAAF190();
        }
        return 1;
      }
    }
    else
    {
      v38 = v106;
    }
LABEL_101:
    sub_22EF579A8(a1[11], a6, v38);
    return sub_22EAAF190();
  }
  v39 = (*(_DWORD *)a7 >> 12) & 0x3F;
  v38 = v106;
  if (v39 == 34)
  {
    sub_22E8FCA40(a1, *(_DWORD *)(a7 + 120), 0xC57u, 0, (uint64_t)v118);
    sub_22E903BEC(v118);
    return 1;
  }
  if (v39 == 31)
  {
    a6 = sub_22EE8C8BC((uint64_t)a1, *(unsigned __int8 **)(a7 + 8), 1, v29, v30, v31, v32, v33);
    goto LABEL_101;
  }
  v132 = 0;
  v133 = v135;
  v134 = 0x800000000;
  v136 = 0;
  v137 = 0;
  v138 = 0;
  v139 = a1;
  v140 = v119;
  v141 = v106;
  sub_22EFC6D6C((uint64_t)v142, v119);
  v143 = 0;
  v142[1] = 0;
  v144 = 0;
  v145 = 257;
  v146 = 0;
  sub_22EC56024((uint64_t)&v132);
  sub_22EC64BE8((uint64_t)a1, (uint64_t)&v132, (uint64_t)a3, a4, 0, 0);
  if ((_DWORD)v132 == 5)
  {
    v18 = 1;
  }
  else
  {
    if ((_DWORD)v132 == 2)
    {
      v41 = *(_QWORD *)v133 & 0xFFFFFFFFFFFFFFFCLL;
      v42 = *(_DWORD *)(v41 + 28) & 0x7F;
      if (v42 <= 0x2F && ((1 << v42) & 0xC00000060000) != 0)
      {
        v41 = sub_22EFBAEA4(*(_QWORD *)v133 & 0xFFFFFFFFFFFFFFFCLL);
        v42 = *(_DWORD *)(v41 + 28) & 0x7F;
      }
      if (v42 - 33 < 0xA)
      {
        v43 = 0;
LABEL_65:
        v51 = a1[11];
        v52 = *(_QWORD *)(v41 + 48);
        if (v52)
        {
          v53 = v52 & 0xFFFFFFFFFFFFFFF0;
          v54 = v41;
        }
        else
        {
          v54 = v41;
          v53 = sub_22EF6462C(a1[11], v41);
        }
        v58 = sub_22E46BB88(a2);
        a6 = sub_22EF5DD84(v51, v53, v58 >> 11);
        if ((*(_DWORD *)(v54 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
          sub_22EB4E494((uint64_t)a1, *(_DWORD *)(v54 + 24), v54, 0, v59, v60, v61, v62);
        else
          *(_DWORD *)(v54 + 28) |= 0x800u;
        v65 = *(_QWORD *)(a4 + 8);
        v64 = (uint64_t *)(a4 + 8);
        v63 = v65;
        if (v65)
        {
          a6 = sub_22EF65684(a1[11], 6, v63, a6, 0);
          v66 = a1[11];
          v67 = sub_22F11598C(a6);
          v43 = sub_22E3CD3D4(v66 + 2032, v67 + 8, 3);
          *(_QWORD *)v43 = a6;
          v68 = (_DWORD *)(v43 + 8);
          v69 = *(_QWORD *)(a6 + 40);
          v70 = 1;
          if (v69 >= 0x10 && (v69 & 0xF) == 0)
            v70 = *(_QWORD *)((char *)&unk_22F47F1E0
                            + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v69 & 0xFFFFFFFFFFFFFFF0)
                                                                           + 16) << 56) >> 53));
          v71 = 0;
          *(_DWORD *)(((unint64_t)v68 + v70 + 15) & -v70) = v38;
          *v68 = 0;
          if (*v64)
            sub_22F0ABC50(v64, a1[11]);
          *(_QWORD *)(v43 + 16) = v71;
        }
LABEL_92:
        if (BYTE1(v145))
        {
          if ((_DWORD)v132 == 5)
          {
            sub_22EC64D18(v139, (uint64_t)&v132);
          }
          else if (v137 && (*(_DWORD *)(v139[9] + 52) & 0x400000) != 0)
          {
            sub_22E90B5FC((unint64_t)v139, (uint64_t)&v132);
          }
        }
        if (v136)
        {
          v102 = sub_22EC6CBD0(v136);
          MEMORY[0x2348A0E9C](v102, 0x10E0C409F09D3C3);
        }
        if (v133 != v135)
        {
          free(v133);
          if (v43)
            return sub_22EAAF190();
          goto LABEL_101;
        }
        if (v43)
          return sub_22EAAF190();
        goto LABEL_101;
      }
    }
    BYTE1(v145) = 0;
    v45 = (_QWORD *)(a4 + 8);
    v44 = *(_QWORD *)(a4 + 8);
    if (!v44
      || (sub_22F0AAC5C(v44) & 4) == 0
      || (v55 = sub_22E958204((uint64_t)a1, a4, 0)) != 0
      && (*(_WORD *)(v55 + 8) & 0x7Fu) - 35 <= 2
      && !sub_22F3B1AA4(v55 - 64))
    {
      v103 = v106;
      v43 = 0;
      a6 = 0;
      goto LABEL_56;
    }
    if (*v45)
    {
      v56 = sub_22F0ABC50((uint64_t *)(a4 + 8), a1[11]);
      v57 = v72;
    }
    else
    {
      v56 = 0;
      v57 = 0;
    }
    v18 = 1;
    v73 = sub_22ED717D8(a1, 6, 0, v56, v57, v119, v106, 1);
    if (v73 >= 0x10)
    {
      a6 = v73;
      v103 = v106;
      v74 = a1[11];
      v75 = sub_22F11598C(v73);
      v43 = sub_22E3CD3D4(v74 + 2032, v75 + 8, 3);
      *(_QWORD *)v43 = a6;
      *(_DWORD *)(v43 + 24) = v106;
      *(_DWORD *)(v43 + 8) = 0;
      if (*v45)
        sub_22F0ABC50((uint64_t *)(a4 + 8), a1[11]);
      else
        v76 = 0;
      *(_QWORD *)(v43 + 16) = v76;
      LODWORD(v132) = 0;
      LODWORD(v134) = 0;
      if (v136)
      {
        v79 = sub_22EC6CBD0(v136);
        MEMORY[0x2348A0E9C](v79, 0x10E0C409F09D3C3);
      }
      HIBYTE(v145) = 0;
      v136 = 0;
      v137 = 0;
      v140 = v119;
LABEL_56:
      v46 = 0;
      v18 = (uint64_t)&v120;
      v126 = 0uLL;
      v127[0] = &v128;
      v127[1] = (void *)0x100000000;
      v115 = 1;
      v114 = 16843009;
      v113 = &off_24FAB7DB8;
      *(_QWORD *)v129 = 0;
      *(_QWORD *)&v129[8] = 0;
      *(_QWORD *)&v129[14] = 0;
      v131 = 0;
      v130 = 0uLL;
      *(_QWORD *)v117 = 0;
      v116 = 0;
      *(_DWORD *)&v117[7] = 0;
      *(_QWORD *)&v117[11] = v104;
      if (a6 <= 0xF && !(_DWORD)v134)
      {
        if (v27)
          v77 = v104 + 64;
        else
          v77 = 0;
        sub_22EC6AB20((uint64_t)a1, &v140, v143, a3, a4, (uint64_t)&v113, 1, v77, (uint64_t)&v120, 0, 0, 1u);
        v126 = v120;
        sub_22F24C77C((uint64_t)v127, (uint64_t)&v121);
        *(_OWORD *)v129 = *(_OWORD *)v123;
        *(_QWORD *)&v129[14] = *(_QWORD *)&v123[14];
        v18 = (uint64_t)&v124;
        sub_22EA44D30((void **)&v130);
        v130 = v124;
        v131 = v125;
        v125 = 0;
        v124 = 0uLL;
        v78 = v126;
        v108 = (void **)&v124;
        sub_22E8D19C8(&v108);
        if (v121 != &v122)
          free(v121);
        if (v78)
        {
          v80 = sub_22F2E6D78((uint64_t)&v126);
          if (v80 && (*(_DWORD *)(v80 + 28) & 0x7Fu) - 49 <= 2)
          {
            v81 = a1[11] + 2128;
            *(_QWORD *)&v120 = 0;
            *((_QWORD *)&v120 + 1) = v81;
            LODWORD(v121) = 3763;
            v82 = v119;
            *(_QWORD *)&v120 = sub_22E3B8AAC(v81);
            *(_BYTE *)(v120 + *(unsigned __int8 *)v120 + 1) = 5;
            v83 = v120;
            v84 = *(unsigned __int8 *)v120;
            *(_BYTE *)v120 = v84 + 1;
            *(_QWORD *)(v83 + 8 * v84 + 16) = v82;
            *(_BYTE *)(v83 + (v84 + 1) + 1) = 2;
            v85 = v120;
            v86 = *(unsigned __int8 *)v120;
            *(_BYTE *)v120 = v86 + 1;
            *(_QWORD *)(v85 + 8 * v86 + 16) = 1;
            sub_22EC6BEF8((uint64_t)a1, (uint64_t)&v126, (uint64_t)&v120, 1);
            if ((_QWORD)v120 && *((_QWORD *)&v120 + 1))
              sub_22E3BB10C(*((unint64_t *)&v120 + 1), v120);
            sub_22E46BB88(a2);
            v18 = sub_22EAAEC58();
            v46 = 0;
            v47 = 0;
            v38 = v106;
LABEL_61:
            v50 = v46;
            *(_QWORD *)&v120 = &v130;
            sub_22E8D19C8((void ***)&v120);
            if (v127[0] != &v128)
              free(v127[0]);
            if (v47)
            {
              v41 = v50;
              if (a6 > 0xF)
                goto LABEL_92;
              goto LABEL_65;
            }
            goto LABEL_68;
          }
          v87 = sub_22F2E6D78((uint64_t)&v126);
          if (v87 && (v88 = v87, (*(_DWORD *)(v87 + 28) & 0x7Fu) - 33 <= 9))
          {
            v111 = 0;
            v112 = 0;
            v89 = *(_QWORD *)(v87 + 48);
            if (v89)
              v90 = v89 & 0xFFFFFFFFFFFFFFF0;
            else
              v90 = sub_22EF6462C(a1[11], v87);
            if (sub_22EAAEF28((uint64_t)a1, v104, v90, (uint64_t)&v112, &v111))
            {
              v91 = a1[11] + 2128;
              *(_QWORD *)&v120 = 0;
              *((_QWORD *)&v120 + 1) = v91;
              LODWORD(v121) = 3763;
              v92 = v119;
              *(_QWORD *)&v120 = sub_22E3B8AAC(v91);
              *(_BYTE *)(v120 + *(unsigned __int8 *)v120 + 1) = 5;
              v93 = v120;
              v94 = *(unsigned __int8 *)v120;
              *(_BYTE *)v120 = v94 + 1;
              *(_QWORD *)(v93 + 8 * v94 + 16) = v92;
              *(_BYTE *)(v93 + (v94 + 1) + 1) = 2;
              v95 = v120;
              v96 = *(unsigned __int8 *)v120;
              *(_BYTE *)v120 = v96 + 1;
              *(_QWORD *)(v95 + 8 * v96 + 16) = 0;
              v97 = a1[11] + 2128;
              v108 = 0;
              v109 = v97;
              v110 = 0;
              sub_22EC6BF44((uint64_t)a1, (uint64_t)&v126, (uint64_t)&v120, (uint64_t)&v108, 1);
              if (v108 && v109)
                sub_22E3BB10C(v109, (unint64_t)v108);
              if ((_QWORD)v120 && *((_QWORD *)&v120 + 1))
                sub_22E3BB10C(*((unint64_t *)&v120 + 1), v120);
              if (v112)
                v98 = v112;
              else
                v98 = v111;
              sub_22E8FCA40(a1, *(_DWORD *)v98, 0x1557u, 0, (uint64_t)&v120);
              v99 = *(_QWORD *)(**(_QWORD **)(v98 + 16) & 0xFFFFFFFFFFFFFFF0);
              if ((*(_BYTE *)(v99 + 8) & 0xF) != 0)
                v99 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v98 + 16));
              v108 = (void **)(v99 & 0xFFFFFFFFFFFFFFF0);
              v100 = sub_22E8901B8((uint64_t)&v120, (uint64_t *)&v108);
              v107 = *(_QWORD *)v98;
              sub_22E8906A0(v100, &v107);
              sub_22E903BEC((unsigned int *)&v120);
            }
            else
            {
              v88 = 0;
            }
            v38 = v106;
            v46 = v88;
          }
          else
          {
            v46 = 0;
            v38 = v106;
          }
        }
        else
        {
          v46 = 0;
        }
      }
      v47 = 1;
      if (a6 <= 0xF && !v46)
      {
        sub_22E8FCA40(a1, v103, 0xEB2u, 0, (uint64_t)&v120);
        v48 = sub_22E8BAE44((uint64_t)&v120, &v119);
        sub_22F0D4E74(v105);
        v108 = (void **)__PAIR64__(v49, v38);
        sub_22E8906A0(v48, (uint64_t *)&v108);
        sub_22E903BEC((unsigned int *)&v120);
        v46 = 0;
        v47 = 0;
        v18 = 1;
      }
      goto LABEL_61;
    }
  }
LABEL_68:
  if (BYTE1(v145))
  {
    if ((_DWORD)v132 == 5)
    {
      sub_22EC64D18(v139, (uint64_t)&v132);
    }
    else if (v137 && (*(_DWORD *)(v139[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v139, (uint64_t)&v132);
    }
  }
  if (v136)
  {
    v101 = sub_22EC6CBD0(v136);
    MEMORY[0x2348A0E9C](v101, 0x10E0C409F09D3C3);
  }
  if (v133 != v135)
    free(v133);
  return v18;
}

uint64_t sub_22EAAEB14(_QWORD *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8, int a9, uint64_t *a10, uint64_t a11, int a12, int a13, int a14)
{
  uint64_t v19;
  _DWORD *v20;

  v19 = sub_22E3CD3D4(a1[11] + 2032, 8 * a11 + 24, 3);
  v20 = (_DWORD *)sub_22F002D50(v19, a9, a10, a11, a12);
  return sub_22EAADEB8(a1, a2, a3, a4, a5, a6, a7, a8, v20, a14);
}

unint64_t sub_22EAAEBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  unint64_t result;
  BOOL v7;
  unint64_t *v8;
  unsigned int v9;
  BOOL v10;
  int v11;

  if (*(_QWORD *)(a3 + 8))
    v5 = 0;
  else
    v5 = a4 == 0;
  if (!v5)
    return 0;
  for (result = sub_22EFCE144(a2 + 64, a5); result; result = v8[1])
  {
    v7 = (result & 4) == 0;
    v8 = (unint64_t *)(result & 0xFFFFFFFFFFFFFFF8);
    if ((result & 0xFFFFFFFFFFFFFFF8) == 0)
      v7 = 1;
    result &= 0xFFFFFFFFFFFFFFF8;
    if (!v7)
      result = *v8;
    v9 = (*(_DWORD *)(result + 28) & 0x7F) - 49;
    v10 = v9 > 0x13;
    v11 = (1 << v9) & 0x80007;
    if (!v10 && v11 != 0)
      break;
    if (v7)
      return 0;
  }
  return result;
}

uint64_t sub_22EAAEC58()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int v12;
  unint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  unint64_t v29;
  unint64_t v30;
  int v31;
  unsigned __int8 **v32;
  unint64_t v33;
  _QWORD v34[2];
  _BYTE v35[48];
  unint64_t v36;
  _BYTE v37[12392];
  uint64_t v38;

  v0 = MEMORY[0x24BDAC7A8]();
  v4 = v3;
  v5 = (unsigned __int8 *)v2;
  v7 = v6;
  v8 = v1;
  v9 = v0;
  v38 = *MEMORY[0x24BDAC8D0];
  v36 = v2;
  if ((*(_DWORD *)(v1 + 28) & 0x7Fu) - 49 >= 3)
    v10 = 0;
  else
    v10 = v1;
  if ((*(_DWORD *)(v1 + 28) & 0x7F) == 0x44)
    v11 = v1;
  else
    v11 = 0;
  if ((sub_22EE67384(v0, v2, 11) & 1) != 0 || (*(_BYTE *)(v8 + 28) & 0x80) != 0)
    return 1;
  v12 = *v5;
  if (v12 == 180)
  {
    v13 = (unint64_t *)*((_QWORD *)v5 + 2);
    v14 = (*((_QWORD *)v5 + 3) - (_QWORD)v13) >> 3;
  }
  else if (v12 == 215)
  {
    v13 = (unint64_t *)(v5 + 24);
    LODWORD(v14) = *((_DWORD *)v5 + 1);
  }
  else
  {
    LODWORD(v14) = 1;
    v13 = &v36;
  }
  sub_22F0D4E74((uint64_t)v5);
  v16 = v15;
  v33 = HIDWORD(v15);
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 48) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0
    && (*(_DWORD *)v5 & 0x8000) == 0)
  {
    v31 = *(_DWORD *)v5;
    v17 = &v36;
    if (v31 != 180)
      v17 = v13;
    v32 = (unsigned __int8 **)v17;
    if (*(_DWORD *)v5 == 180)
      v18 = 1;
    else
      v18 = v14;
    if (v10)
      v19 = v10;
    else
      v19 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * *(unsigned int *)(v11 + 64) - 8);
    sub_22EC38F40((uint64_t)v35, v19, v7, 0, 0);
    if (v31 == 180)
    {
      sub_22F0D5A50((uint64_t)v5);
      v22 = v21;
      sub_22F0D60E4((uint64_t)v5);
      v24 = v22 | (unint64_t)(v23 << 32);
      v25 = (v4 << 32) | 1;
    }
    else
    {
      v25 = v4 << 32;
      v24 = v16;
    }
    v34[0] = v25;
    v34[1] = v24;
    sub_22EC395BC(v37, v9, v35, v34, v32, v18, 0, 1);
    v27 = sub_22EC3DF80((uint64_t)v37, v9, (uint64_t)v35, (unsigned __int16 *)v34, v32, v18, 0, v26);
    if ((v27 & 1) == 0)
      v27 = sub_22EBCF22C(v9, v27 & 0xFFFFFFFFFFFFFFFELL, v16, 0, 0);
    if ((v27 & 1) == 0)
    {
      v36 = v27 & 0xFFFFFFFFFFFFFFFELL;
      v20 = v33;
LABEL_32:
      sub_22EC3CE2C((uint64_t)v37);
      goto LABEL_33;
    }
    v20 = v33;
    v36 = sub_22F32D6EC(v9, v16, v33, v32, v18, *(_QWORD *)(v8 + 48)) & 0xFFFFFFFFFFFFFFFELL;
    if (v36)
      goto LABEL_32;
    sub_22EC3CE2C((uint64_t)v37);
    return 1;
  }
  sub_22EB48DCC(v9);
  v20 = v33;
LABEL_33:
  result = sub_22E3CD3D4(*(_QWORD *)(v9 + 88) + 2032, 32, 3);
  v29 = v36;
  if (v10)
    v30 = v10 & 0xFFFFFFFFFFFFFFF9 | 2;
  else
    v30 = v11 & 0xFFFFFFFFFFFFFFF9 | 4;
  *(_QWORD *)result = v30;
  *(_QWORD *)(result + 8) = v29;
  *(_DWORD *)(result + 16) = v4;
  *(_DWORD *)(result + 20) = v16;
  *(_DWORD *)(result + 24) = v20;
  *(_WORD *)(result + 28) = 0;
  return result;
}

BOOL sub_22EAAEF28(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t i;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  llvm *v27;
  unsigned int v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  int v32;
  _QWORD v33[5];
  void *v34;
  uint64_t v35;
  _DWORD v36[26];
  uint64_t v37;
  __int16 v38;
  char v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)a4 = 0;
  v10 = sub_22E46A3A0(a2);
  if (v10 != v11)
  {
    v12 = v10;
    v13 = v11;
    while (1)
    {
      v14 = *(_QWORD *)(**(_QWORD **)(v12 + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v14 + 8) & 0xF) != 0)
        v14 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v12 + 16));
      if (*(_QWORD *)(*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
        break;
      v12 += 24;
      if (v12 == v13)
        goto LABEL_9;
    }
    *(_QWORD *)a4 = v12;
  }
LABEL_9:
  *a5 = 0;
  if (*(_QWORD *)a4 && (*(_BYTE *)(*(_QWORD *)a4 + 12) & 1) != 0)
    return 1;
  v22 = 0;
  v23 = (uint64_t)&v23;
  v24 = &v23;
  v25 = 0;
  v26 = 1;
  for (i = 40; i != 168; i += 16)
    *(unint64_t *)((char *)&v22 + i) = 0;
  v29 = v33;
  v30 = v33;
  v31 = 4;
  v32 = 0;
  v33[4] = 0;
  v34 = v36;
  v35 = 0x400000000;
  v36[24] = 0;
  v37 = 0;
  v38 = 257;
  v39 = 0;
  v16 = *(_DWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a2 + 48);
  if (v17)
    v18 = v17 & 0xFFFFFFFFFFFFFFF0;
  else
    v18 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a2);
  if (sub_22EAAB2A0(a1, v16, v18, a3, &v22))
  {
    v20 = v24;
    if (v24 != &v23)
    {
      while (1)
      {
        v21 = *(_QWORD *)(v20[2] + 24 * *((unsigned int *)v20 + 6) - 24);
        if ((*(_BYTE *)(v21 + 12) & 1) != 0)
          break;
        v20 = (uint64_t *)v20[1];
        if (v20 == &v23)
          goto LABEL_23;
      }
      *a5 = v21;
    }
  }
LABEL_23:
  if (v34 != v36)
    free(v34);
  if (v30 != v29)
    free(v30);
  if ((v26 & 1) == 0)
    llvm::deallocate_buffer(v27, (void *)(16 * v28));
  sub_22E687D9C(&v23);
  return (*(_QWORD *)a4 | *a5) != 0;
}

uint64_t sub_22EAAF190()
{
  uint64_t v0;
  int v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  int v16;
  _QWORD *v17;
  unsigned int v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  int v26;
  unsigned __int8 **v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v41[2];
  uint64_t v42[6];
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  unsigned int v46[3098];
  uint64_t v47;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = (_QWORD *)v0;
  v47 = *MEMORY[0x24BDAC8D0];
  v44 = (uint64_t)v5;
  v45 = v9;
  v12 = sub_22F115668(*v7);
  v13 = v12;
  v14 = v10 & 0xFFFFFFFFFFFFFFF0;
  if ((*(_BYTE *)(*(_QWORD *)v14 + 17) & 4) == 0
    && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 45)
  {
    v16 = v12;
    v17 = v11;
    v18 = 2939;
LABEL_22:
    sub_22E8FCA40(v17, v16, v18, 0, (uint64_t)v46);
    v22 = sub_22E8901B8((uint64_t)v46, (uint64_t *)&v45);
    v42[0] = sub_22F115668(*v8);
    v23 = v42;
LABEL_23:
    sub_22E8906A0(v22, v23);
    sub_22E903BEC(v46);
    return 1;
  }
  if (sub_22EFC7ADC(v11[27]))
  {
    if ((*(_BYTE *)(*(_QWORD *)v14 + 17) & 4) != 0)
      LOBYTE(v15) = 1;
    else
      v15 = v6[1] >> 7;
  }
  else
  {
    LOBYTE(v15) = 0;
  }
  sub_22F0D4E74((uint64_t)v6);
  v20 = v19;
  v40 = HIDWORD(v19);
  if (v2)
  {
    if ((*(_BYTE *)(*(_QWORD *)v14 + 17) & 1) != 0)
      goto LABEL_15;
    sub_22E8FCA40(v11, v2, 0x1191u, 0, (uint64_t)v46);
    v42[0] = __PAIR64__(v40, v13);
    sub_22E8906A0((uint64_t)v46, v42);
    sub_22E903BEC(v46);
  }
  else if ((sub_22EE67290((uint64_t)v11, v13, (unint64_t *)v8, 11) & 1) != 0
         || (sub_22EE67384((uint64_t)v11, (unint64_t)v6, 11) & 1) != 0)
  {
    return 1;
  }
  v2 = 0;
LABEL_15:
  v43 = 0uLL;
  if ((v15 & 1) == 0)
  {
    if (*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v4 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v45 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
      return sub_22EAAF63C();
    sub_22EAAEF28((uint64_t)v11, v4, v45, (uint64_t)&v43 + 8, &v43);
    if (v43 == 0)
    {
      if ((sub_22F3B1AA4(v4) & 1) != 0)
        goto LABEL_16;
      sub_22E8FCA40(v11, v13, 0xFDBu, 0, (uint64_t)v46);
      v37 = sub_22E8901B8((uint64_t)v46, (uint64_t *)&v45);
      v38 = *(_QWORD *)(v4 + 48);
      if (v38)
        v39 = v38 & 0xFFFFFFFFFFFFFFF0;
      else
        v39 = sub_22EF6462C(v11[11], v4);
      v42[0] = v39;
      v22 = sub_22E8901B8(v37, v42);
      v41[0] = sub_22F115668(*v8);
      v23 = v41;
      goto LABEL_23;
    }
    if (*((_QWORD *)&v43 + 1) && (_QWORD)v43)
    {
      v16 = v13;
      v17 = v11;
      v18 = 2938;
      goto LABEL_22;
    }
    if (*((_QWORD *)&v43 + 1))
      v25 = *((_QWORD *)&v43 + 1);
    else
      v25 = v43;
    v26 = *v6;
    if (v26 == 215)
    {
      v27 = (unsigned __int8 **)(v6 + 24);
      v28 = *((unsigned int *)v6 + 1);
    }
    else
    {
      v27 = (unsigned __int8 **)&v44;
      v28 = 1;
    }
    v29 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v29 & 8) != 0)
      v30 = *(_DWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v30 = 0;
    sub_22EC39128(v11[11], v25, (_QWORD)v43 != 0, v30, (uint64_t)v42);
    if (v26 == 215)
    {
      v31 = v13 << 32;
      v32 = v20;
    }
    else
    {
      v31 = (v13 << 32) | 1;
      v32 = v13 | ((unint64_t)v13 << 32);
    }
    v41[0] = v31;
    v41[1] = v32;
    sub_22EC395BC(v46, v11, v42, v41, v27, v28, 0, 1);
    v34 = sub_22EC3DF80((uint64_t)v46, (uint64_t)v11, (uint64_t)v42, (unsigned __int16 *)v41, v27, v28, 0, v33);
    v35 = v34;
    if ((v34 & 1) == 0)
      v35 = sub_22EBCF22C((uint64_t)v11, v34 & 0xFFFFFFFFFFFFFFFELL, v20, 0, 0);
    if ((v35 & 1) != 0)
    {
      v35 = sub_22F32D6EC((uint64_t)v11, v20, v40, v27, v28, v45);
      if ((v35 & 1) != 0)
      {
        v21 = 1;
        goto LABEL_45;
      }
    }
    else if (sub_22EFC7ADC(v11[27]))
    {
      v35 = v44;
    }
    v21 = sub_22E3CD3D4(v11[11] + 2032, 32, 3);
    v36 = *(_BYTE *)(v25 + 12);
    *(_QWORD *)v21 = (unint64_t)v8 & 0xFFFFFFFFFFFFFFF9;
    *(_QWORD *)(v21 + 8) = v35 & 0xFFFFFFFFFFFFFFFELL;
    *(_DWORD *)(v21 + 16) = v2;
    *(_DWORD *)(v21 + 20) = v20;
    *(_DWORD *)(v21 + 24) = v40;
    *(_WORD *)(v21 + 28) = 2 * (v36 & 1);
LABEL_45:
    sub_22EC3CE2C((uint64_t)v46);
    return v21;
  }
LABEL_16:
  sub_22EB48DCC((uint64_t)v11);
  v21 = sub_22E3CD3D4(v11[11] + 2032, 32, 3);
  *(_QWORD *)v21 = (unint64_t)v8 & 0xFFFFFFFFFFFFFFF9;
  *(_QWORD *)(v21 + 8) = v6;
  *(_DWORD *)(v21 + 16) = v2;
  *(_DWORD *)(v21 + 20) = v20;
  *(_DWORD *)(v21 + 24) = v40;
  *(_WORD *)(v21 + 28) = 0;
  return v21;
}

uint64_t sub_22EAAF63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t *v5;
  uint64_t *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned __int8 **v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30[3];
  int v31;
  int v32;
  char v33;
  unsigned int v34[24];
  uint64_t v35;
  unsigned int v36[3098];
  uint64_t v37;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = (_QWORD *)v0;
  v37 = *MEMORY[0x24BDAC8D0];
  v35 = (uint64_t)v3;
  v8 = sub_22F115668(*v5);
  v9 = v8;
  if ((*(_BYTE *)(v7[9] + 1) & 2) != 0)
  {
    sub_22E8FCA40(v7, v8, 0x1923u, 0, (uint64_t)v34);
    sub_22E903BEC(v34);
    v11 = *v4;
    if (v11 == 215)
    {
      v12 = (unsigned __int8 **)(v4 + 24);
      v13 = *((unsigned int *)v4 + 1);
    }
    else
    {
      v12 = (unsigned __int8 **)&v35;
      v13 = 1;
    }
    sub_22F0D4E74((uint64_t)v4);
    v15 = v14;
    v16 = v7[11];
    v17 = *(_QWORD *)(v2 + 48) & 0xFFFFFFFFFFFFFFF0;
    v18 = *(_QWORD *)((*v6 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v18 & 8) != 0)
      v19 = *(_DWORD *)((v18 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v19 = 0;
    LODWORD(v30[0]) = 11;
    v30[1] = 0;
    v30[2] = sub_22EF5DD84(v16, v17, v19);
    v31 = 0;
    v32 = 0;
    v33 = 0;
    if (v11 == 215)
    {
      v20 = v9 << 32;
      v21 = v15;
    }
    else
    {
      sub_22F0D5A50((uint64_t)v4);
      v23 = v22;
      sub_22F0D60E4((uint64_t)v4);
      v21 = v23 | (unint64_t)(v24 << 32);
      v20 = (v9 << 32) | 1;
    }
    v29[0] = v20;
    v29[1] = v21;
    sub_22EC395BC(v36, v7, v30, v29, v12, v13, 0, 1);
    v26 = sub_22EC3DF80((uint64_t)v36, (uint64_t)v7, (uint64_t)v30, (unsigned __int16 *)v29, v12, v13, 0, v25);
    v27 = v26;
    if ((v26 & 1) == 0)
      v27 = sub_22EBCF22C((uint64_t)v7, v26 & 0xFFFFFFFFFFFFFFFELL, v15, 0, 0);
    if ((v27 & 1) != 0)
    {
      v27 = sub_22F32D6EC((uint64_t)v7, v15, SHIDWORD(v15), v12, v13, *(_QWORD *)(v2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if ((v27 & 1) != 0)
      {
        v10 = 1;
        goto LABEL_18;
      }
    }
    else if (sub_22EFC7ADC(v7[27]))
    {
      v27 = v35;
    }
    v10 = sub_22E3CD3D4(v7[11] + 2032, 32, 3);
    *(_QWORD *)v10 = (unint64_t)v6 & 0xFFFFFFFFFFFFFFF9;
    *(_QWORD *)(v10 + 8) = v27 & 0xFFFFFFFFFFFFFFFELL;
    *(_DWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 20) = v15;
    *(_WORD *)(v10 + 28) = 1;
LABEL_18:
    sub_22EC3CE2C((uint64_t)v36);
    return v10;
  }
  sub_22E8FCA40(v7, v8, 0xC9Bu, 0, (uint64_t)v36);
  v30[0] = sub_22F115668(*v6);
  sub_22E8906A0((uint64_t)v36, v30);
  sub_22E903BEC(v36);
  return 1;
}

void sub_22EAAF8FC(uint64_t a1, unint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  const void *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t **v19;
  unint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  int v36;
  _BYTE v37[32];
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  int v41;
  _BYTE v42[32];
  _QWORD v43[4];
  void *v44;
  uint64_t v45;
  _QWORD v46[5];
  char v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD v51[3];

  v51[2] = *MEMORY[0x24BDAC8D0];
  if (sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x199Cu, *(_DWORD *)(a2 + 24), *(_QWORD *)(a1 + 104)) == 1|| (*(_BYTE *)(a2 + 28) & 0x80) != 0)
  {
    return;
  }
  v4 = *(_WORD *)(a2 + 80) & 0x7F;
  v5 = -40;
  if (v4 > 0x46)
  {
    if (v4 == 83)
      goto LABEL_19;
    if (v4 == 71)
    {
      v5 = -56;
      goto LABEL_19;
    }
    if (v4 != 81)
    {
LABEL_14:
      v6 = v4 - 52;
      v7 = v4 - 33 >= 5;
      v8 = -48;
      if (!v7)
        v8 = -64;
      if (v6 >= 6)
        v5 = v8;
      else
        v5 = -72;
    }
  }
  else
  {
    if (v4 > 0x18)
      goto LABEL_13;
    if (v4 == 16)
    {
LABEL_6:
      v5 = -48;
      goto LABEL_19;
    }
    if (((1 << v4) & 0x1066) == 0)
    {
      if (v4 == 24)
        goto LABEL_6;
LABEL_13:
      if (v4 == 70)
      {
        v5 = -64;
        goto LABEL_19;
      }
      goto LABEL_14;
    }
  }
LABEL_19:
  v9 = *(_QWORD *)(a2 + 72 + v5 + 16);
  v10 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  if ((v9 & 4) != 0)
    v10 = (_QWORD *)*v10;
  if (v10)
    v11 = (uint64_t)(v10 - 8);
  else
    v11 = 0;
  if ((sub_22EFC7ADC(v11 + 64) & 1) == 0)
  {
    v38 = v42;
    v39 = v42;
    v40 = 4;
    v41 = 0;
    if ((*(_BYTE *)(v11 + 72) & 0x80) != 0)
      sub_22EFCC320(v11 + 64);
    v12 = *(_QWORD *)(v11 + 80);
    if (v12)
    {
      while ((*(_DWORD *)(v12 + 28) & 0x7Fu) - 52 < 0xFFFFFFFD)
      {
        if ((*(_DWORD *)(v12 + 28) & 0x7F) == 0x44)
        {
          v13 = *(const void **)(*(_QWORD *)(v12 + 56) + 8 * *(unsigned int *)(v12 + 64) - 8);
LABEL_32:
          sub_22E3BA850((uint64_t)&v38, v13);
        }
        v12 = *(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v12)
          goto LABEL_34;
      }
      v13 = (const void *)v12;
      goto LABEL_32;
    }
LABEL_34:
    v33 = v37;
    v34 = v37;
    v35 = 4;
    v36 = 0;
    v14 = sub_22E46A3A0(v11);
    if (v14 != v15)
    {
      v16 = v14;
      v17 = v15;
      do
      {
        v18 = *(_QWORD *)(**(_QWORD **)(v16 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v18 + 8) & 0xF) != 0)
          v18 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v16 + 16));
        sub_22E3BA850((uint64_t)&v33, *(const void **)((v18 & 0xFFFFFFFFFFFFFFF0) + 8));
        v16 += 24;
      }
      while (v16 != v17);
    }
    if (HIDWORD(v40) != v41 || HIDWORD(v35) != v36)
    {
      v43[0] = *(_QWORD *)(a1 + 88);
      v43[1] = a1;
      v43[2] = &v38;
      v43[3] = &v33;
      v44 = v46;
      v45 = 0x400000000;
      v46[4] = 0;
      v47 = 0;
      v48 = 0;
      v49 = v51;
      v50 = 0x400000000;
      v19 = (uint64_t **)sub_22EFD7ED0(a2);
      v20 = sub_22EFD7ED0(a2) + 8 * ((*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL);
      while (1)
      {
        if (v19 == (uint64_t **)v20 || (v21 = *v19, HIDWORD(v40) == v41) && HIDWORD(v35) == v36)
        {
          if (v49 != v51)
            free(v49);
          if (v44 != v46)
            free(v44);
          break;
        }
        v22 = v21[1];
        if (v22)
        {
          if (*(_BYTE *)v22 != 121)
          {
            v30 = *v21;
            v31 = *v21 & 6;
            if (v31 == 2)
            {
              v28 = 0;
              v29 = (void *)(v30 & 0xFFFFFFFFFFFFFFF8);
            }
            else if (v31 == 4)
            {
              v28 = 0;
              v29 = *(void **)(*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFFF8) + 56)
                             + 8 * *(unsigned int *)((v30 & 0xFFFFFFFFFFFFFFF8) + 64)
                             - 8);
            }
            else if (v31 || (*((_WORD *)v21 + 14) & 1) != 0)
            {
              v29 = 0;
              v28 = 0;
            }
            else
            {
              v29 = 0;
              v28 = *(_QWORD *)(*(_QWORD *)(v30 & 0xFFFFFFFFFFFFFFF8) & 0xFFFFFFFFFFFFFFF0);
            }
            v32 = 0;
            goto LABEL_66;
          }
          v23 = *(_QWORD *)(v22 + 16);
          v24 = *(_QWORD *)(v23 + 72) & 3;
          if ((_DWORD)v24)
            v25 = (_DWORD)v24 == 3;
          else
            v25 = 1;
          if (!v25)
          {
            v22 = *(_QWORD *)(v23 + 72) & 0xFFFFFFFFFFFFFFFCLL;
            if ((*(_BYTE *)(v23 + 68) & 1) != 0)
              v22 = *(_QWORD *)v22;
            if (v22)
            {
              v26 = *v21;
              v27 = *v21 & 6;
              if (v27 == 2)
              {
                v28 = 0;
                v29 = (void *)(v26 & 0xFFFFFFFFFFFFFFF8);
              }
              else if (v27 == 4)
              {
                v28 = 0;
                v29 = *(void **)(*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF8) + 56)
                               + 8 * *(unsigned int *)((v26 & 0xFFFFFFFFFFFFFFF8) + 64)
                               - 8);
              }
              else if (v27 || (*((_WORD *)v21 + 14) & 1) != 0)
              {
                v29 = 0;
                v28 = 0;
              }
              else
              {
                v29 = 0;
                v28 = *(_QWORD *)(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF8) & 0xFFFFFFFFFFFFFFF0);
              }
              v32 = a2;
LABEL_66:
              sub_22EAE13A8((uint64_t)v43, (_DWORD *)v22, v32, v29, v28);
            }
          }
        }
        ++v19;
      }
    }
    if (v34 != v33)
      free(v34);
    if (v39 != v38)
      free(v39);
  }
}

uint64_t sub_22EAAFD60(_QWORD *a1, uint64_t a2, int a3, const void *a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  void *v12;
  int v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unsigned int v38;
  unint64_t v39;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  BOOL v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unsigned int v53;
  unint64_t v54;
  unsigned int v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  _BYTE *v63;
  unint64_t v64;
  uint64_t **v65;
  uint64_t **v66;
  uint64_t **v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  _QWORD **v73;
  uint64_t v74;
  int v75;
  unint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  _QWORD **v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  _QWORD *v95;
  unint64_t v96;
  BOOL v97;
  uint64_t v98;
  size_t v99;
  void *v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  uint64_t v111;
  _QWORD *v112;
  unint64_t v113;
  uint64_t v114;
  _QWORD v115[11];
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  int v119;
  _BYTE v120[128];
  void *v121[3];
  char v122;
  int v123;
  llvm *v124[2];
  unsigned int v125;
  _QWORD *v126;
  uint64_t v127;
  _BYTE v128[64];
  llvm *v129[2];
  unsigned int v130;
  uint64_t v131;

  v131 = *MEMORY[0x24BDAC8D0];
  v10 = a2 + 72;
  if (sub_22EFC7ADC(a2 + 72))
  {
    if (a5)
    {
      *(_QWORD *)(a2 + 80) = *(_QWORD *)(a2 + 80) & 0xE00000FFFFFFFFFFLL | ((a5 & 0x1FFFFF) << 40);
      if (a5 >> 61)
        v11 = -1;
      else
        v11 = 8 * a5;
      v12 = (void *)sub_22E3CD3D4(a1[11] + 2032, v11, 3);
      memcpy(v12, a4, 8 * a5);
      *(_QWORD *)(a2 + 160) = v12;
    }
    if (a3)
      sub_22EFC77E8(a2, 1);
    LOBYTE(v13) = 0;
    return v13 & 1;
  }
  v121[1] = a1;
  v121[2] = (void *)a2;
  v122 = a3;
  v124[0] = 0;
  v124[1] = 0;
  v125 = 0;
  v126 = v128;
  v127 = 0x800000000;
  v129[0] = 0;
  v129[1] = 0;
  v130 = 0;
  v14 = *(_QWORD *)(a2 + 80);
  if ((v14 & 0x2000000000000000) != 0 && *(_QWORD *)(a2 + 168))
  {
    v15 = 3;
    goto LABEL_19;
  }
  if (!((v14 >> 25) & 1 | ((*(_BYTE *)(a2 + 29) & 2) >> 1)))
    goto LABEL_18;
  if ((sub_22EFD3AF0(a2, (int *)&v116) & 1) != 0)
  {
    v15 = 1;
    goto LABEL_19;
  }
  if ((sub_22EFD83B0(a2, (int *)&v116) & 1) != 0)
    v15 = 2;
  else
LABEL_18:
    v15 = 0;
LABEL_19:
  v123 = v15;
  v16 = *(_WORD *)(a2 + 80) & 0x7F;
  v17 = -40;
  if (v16 > 0x46)
  {
    if (v16 != 83)
    {
      if (v16 == 71)
      {
        v17 = -56;
        goto LABEL_35;
      }
      if (v16 == 81)
        goto LABEL_35;
LABEL_30:
      v18 = v16 - 52;
      v49 = v16 - 33 >= 5;
      v19 = -48;
      if (!v49)
        v19 = -64;
      if (v18 >= 6)
        v17 = v19;
      else
        v17 = -72;
    }
  }
  else
  {
    if (v16 > 0x18)
      goto LABEL_29;
    if (v16 != 16)
    {
      if (((1 << v16) & 0x1066) != 0)
        goto LABEL_35;
      if (v16 != 24)
      {
LABEL_29:
        if (v16 == 70)
        {
          v17 = -64;
          goto LABEL_35;
        }
        goto LABEL_30;
      }
    }
    v17 = -48;
  }
LABEL_35:
  v111 = v10;
  v20 = *(_QWORD *)(v10 + v17 + 16);
  v21 = (_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF8);
  if ((v20 & 4) != 0)
    v21 = (_QWORD *)*v21;
  if (v21)
    v22 = v21 - 8;
  else
    v22 = 0;
  v23 = v22[16];
  if (!v23 && (sub_22E3CD31C((uint64_t *)(v22[13] + 96), v22[13]), (v23 = v22[16]) == 0)
    || (v24 = *(void **)(v23 + 88), (v121[0] = v24) == 0))
  {
    LOBYTE(v13) = 1;
    goto LABEL_210;
  }
  v112 = a1;
  if (!a5)
    goto LABEL_107;
  v25 = 0;
  v26 = 0;
  do
  {
    v27 = (uint64_t *)*((_QWORD *)a4 + v25);
    v28 = *v27;
    if ((*v27 & 6) != 0)
    {
      if ((*v27 & 6) == 2)
        v29 = v28 & 0xFFFFFFFFFFFFFFF8;
      else
LABEL_52:
        v29 = *(_QWORD *)(*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFF8) + 56)
                        + 8 * *(unsigned int *)((v28 & 0xFFFFFFFFFFFFFFF8) + 64)
                        - 8);
      v116 = (_BYTE *)(*(uint64_t (**)(unint64_t))(*(_QWORD *)v29 + 32))(v29);
      sub_22EAE9888((uint64_t)v124, (uint64_t *)&v116)[1] = v27;
      v31 = *v27 & 6;
      v32 = *v27 & 0xFFFFFFFFFFFFFFF8;
      if (v31 != 4 || v32 == 0)
      {
        if (v31 == 2 && v32 != 0)
        {
          v35 = *(_QWORD *)(v32 + 16);
          v36 = v35 & 0xFFFFFFFFFFFFFFF8;
          v37 = v35 & 0xFFFFFFFFFFFFFFF8;
          if ((v35 & 4) != 0)
            v37 = *(_QWORD *)v36;
          v38 = (*(_WORD *)(v37 + 8) & 0x7E) - 34;
          if (v37)
            v39 = v37 - 64;
          else
            v39 = 0;
          if (v38 >= 4)
            v39 = 0;
          if ((*(_DWORD *)(v39 + 72) & 0xE000) == 0x4000)
          {
            if ((v35 & 4) != 0)
              v36 = *(_QWORD *)v36;
            v40 = (*(_WORD *)(v36 + 8) & 0x7E) - 34;
            if (v36)
              v41 = v36 - 64;
            else
              v41 = 0;
            if (v40 >= 4)
              v42 = 0;
            else
              v42 = v41;
            v43 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v42 + 32))(v42);
            v44 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v32 + 32))(v32);
            v114 = v43;
            v115[0] = v44;
            sub_22F32A474((uint64_t)&v116, (uint64_t)v129, &v114, v115);
            a1 = v112;
          }
        }
      }
      else
      {
        v45 = *(unsigned int *)(v32 + 64);
        if ((_DWORD)v45)
        {
          v46 = *(_QWORD *)(v32 + 56);
          v47 = 8 * v45;
          do
          {
            v48 = *(_QWORD **)v46;
            if (*(_QWORD *)v46)
              v49 = (*(_DWORD *)(*(_QWORD *)v46 + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD;
            else
              v49 = 0;
            if (v49)
            {
              v50 = v48[2];
              v51 = v50 & 0xFFFFFFFFFFFFFFF8;
              v52 = v50 & 0xFFFFFFFFFFFFFFF8;
              if ((v50 & 4) != 0)
                v52 = *(_QWORD *)v51;
              v53 = (*(_WORD *)(v52 + 8) & 0x7E) - 34;
              if (v52)
                v54 = v52 - 64;
              else
                v54 = 0;
              if (v53 >= 4)
                v54 = 0;
              if ((*(_DWORD *)(v54 + 72) & 0xE000) == 0x4000)
              {
                if ((v50 & 4) != 0)
                  v51 = *(_QWORD *)v51;
                v55 = (*(_WORD *)(v51 + 8) & 0x7E) - 34;
                if (v51)
                  v56 = v51 - 64;
                else
                  v56 = 0;
                if (v55 >= 4)
                  v57 = 0;
                else
                  v57 = v56;
                v58 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v57 + 32))(v57);
                v59 = (*(uint64_t (**)(_QWORD *))(*v48 + 32))(v48);
                v114 = v58;
                v115[0] = v59;
                sub_22F32A474((uint64_t)&v116, (uint64_t)v129, &v114, v115);
                a1 = v112;
              }
            }
            v46 += 8;
            v47 -= 8;
          }
          while (v47);
        }
      }
      goto LABEL_105;
    }
    if ((*((_WORD *)v27 + 14) & 1) != 0)
      goto LABEL_52;
    v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v28 & 0xFFFFFFFFFFFFFFF8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(v30 + 16) != 45)
      v30 = 0;
    v116 = (_BYTE *)v30;
    sub_22EAE9888((uint64_t)v124, (uint64_t *)&v116)[1] = v27;
LABEL_105:
    v25 = ++v26;
  }
  while (a5 > v26);
  v24 = v121[0];
LABEL_107:
  v116 = v120;
  v117 = v120;
  v118 = 16;
  v119 = 0;
  v60 = sub_22E46A3A0((uint64_t)v24);
  if ((_BYTE *)v60 != v61)
  {
    v62 = (_BYTE *)v60;
    v63 = v61;
    do
    {
      if ((v62[12] & 1) != 0)
        sub_22E3BA850((uint64_t)&v116, v62);
      v62 += 24;
    }
    while (v62 != v63);
  }
  v64 = sub_22E483108((uint64_t)v121[0]);
  if ((uint64_t **)v64 != v65)
  {
    v66 = (uint64_t **)v64;
    v67 = v65;
    v13 = 0;
    while (1)
    {
      v68 = *(_QWORD *)(*v66[2] & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v68 + 8) & 0xF) != 0)
        v68 = (unint64_t)sub_22F10D2BC(*v66[2]);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v68 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 45)
        v69 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v68 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      else
        v69 = 0;
      if (v125)
      {
        v70 = ((v69 >> 4) ^ (v69 >> 9)) & (v125 - 1);
        v71 = *((_QWORD *)v124[0] + 2 * v70);
        if (v69 == v71)
        {
LABEL_121:
          v72 = (uint64_t *)*((_QWORD *)v124[0] + 2 * v70 + 1);
          if (v72)
          {
            v73 = (_QWORD **)v121[0];
            sub_22E3CD31C((uint64_t *)(*((_QWORD *)v121[0] + 13) + 96), *((_QWORD *)v121[0] + 13));
            if ((*v73[16] & 0x800) != 0)
            {
              v75 = sub_22EFD7AE4(v72);
              sub_22E8FCA40(a1, v75, 0x1826u, 0, (uint64_t)&v114);
              v76 = *(_QWORD *)(*v66[2] & 0xFFFFFFFFFFFFFFF0);
              if ((*(_BYTE *)(v76 + 8) & 0xF) != 0)
                v76 = (unint64_t)sub_22F10D2BC(*v66[2]);
              v113 = v76 & 0xFFFFFFFFFFFFFFF0;
              v77 = sub_22E8901B8((uint64_t)&v114, (uint64_t *)&v113);
              sub_22E890024(v77, (uint64_t *)v121);
              sub_22E903BEC((unsigned int *)&v114);
              sub_22F327E60((void **)a1, v121[0]);
            }
            v74 = v127;
            if (v127 >= (unint64_t)HIDWORD(v127))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v74 = v127;
            }
            v126[v74] = v72;
            goto LABEL_126;
          }
        }
        else
        {
          v78 = 1;
          while (v71 != -4096)
          {
            v79 = v70 + v78++;
            v70 = v79 & (v125 - 1);
            v71 = *((_QWORD *)v124[0] + 2 * v70);
            if (v69 == v71)
              goto LABEL_121;
          }
        }
      }
      if ((a3 & 1) != 0)
        goto LABEL_138;
      v80 = (_QWORD **)v121[0];
      sub_22E3CD31C((uint64_t *)(*((_QWORD *)v121[0] + 13) + 96), *((_QWORD *)v121[0] + 13));
      if ((*v80[16] & 0x800) != 0)
        goto LABEL_138;
      sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v116, v66);
      v114 = 0;
      if ((sub_22EAB08A8() & 1) != 0)
      {
        v13 = 1;
        goto LABEL_138;
      }
      v81 = v114;
      v82 = v127;
      if (v127 >= (unint64_t)HIDWORD(v127))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v82 = v127;
      }
      v126[v82] = v81;
LABEL_126:
      LODWORD(v127) = v127 + 1;
LABEL_138:
      v66 += 3;
      if (v66 == v67)
        goto LABEL_145;
    }
  }
  v13 = 0;
LABEL_145:
  v83 = sub_22E46A3A0((uint64_t)v121[0]);
  if (v83 != v84)
  {
    v85 = v83;
    v86 = v84;
    do
    {
      if ((*(_BYTE *)(v85 + 12) & 1) == 0)
      {
        v87 = *(_QWORD *)(**(_QWORD **)(v85 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v87 + 8) & 0xF) != 0)
          v87 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v85 + 16));
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v87 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) == 45)
          v88 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v87 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        else
          v88 = 0;
        if (v125)
        {
          v89 = ((v88 >> 4) ^ (v88 >> 9)) & (v125 - 1);
          v90 = *((_QWORD *)v124[0] + 2 * v89);
          if (v88 == v90)
          {
LABEL_155:
            v91 = *((_QWORD *)v124[0] + 2 * v89 + 1);
            if (v91)
              goto LABEL_160;
          }
          else
          {
            v93 = 1;
            while (v90 != -4096)
            {
              v94 = v89 + v93++;
              v89 = v94 & (v125 - 1);
              v90 = *((_QWORD *)v124[0] + 2 * v89);
              if (v88 == v90)
                goto LABEL_155;
            }
          }
        }
        if ((a3 & 1) == 0)
        {
          v114 = 0;
          if ((sub_22EAB08A8() & 1) == 0)
          {
            v91 = v114;
LABEL_160:
            v92 = v127;
            if (v127 >= (unint64_t)HIDWORD(v127))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v92 = v127;
            }
            v126[v92] = v91;
            LODWORD(v127) = v127 + 1;
            goto LABEL_163;
          }
          v13 = 1;
        }
      }
LABEL_163:
      v85 += 24;
    }
    while (v85 != v86);
  }
  v95 = v121[0];
  if ((*((_WORD *)v121[0] + 36) & 0x80) != 0)
    sub_22EFCC320((uint64_t)v121[0] + 64);
  v96 = v95[10];
  if (v96)
  {
    while (2)
    {
      if ((*(_DWORD *)(v96 + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD)
      {
        if (((*(_BYTE *)(v96 + 68) & 1) == 0 || *(_QWORD *)(v96 + 40))
          && (!sub_22EFC2E8C(v96) || (v123 - 1) <= 1))
        {
LABEL_183:
          v13 |= sub_22EAB0D1C();
        }
      }
      else
      {
        v97 = (*(_DWORD *)(v96 + 28) & 0x7F) != 0x44 || (v123 - 3) > 0xFFFFFFFD;
        if (!v97
          && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v96 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) != 4)
        {
          goto LABEL_183;
        }
      }
      v96 = *(_QWORD *)(v96 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v96)
        break;
      continue;
    }
  }
  v98 = v127;
  if ((_DWORD)v127)
  {
    *(_QWORD *)(a2 + 80) = *(_QWORD *)(a2 + 80) & 0xE00000FFFFFFFFFFLL | ((v127 & 0x1FFFFF) << 40);
    v99 = 8 * v98;
    v100 = (void *)sub_22E3CD3D4(a1[11] + 2032, 8 * v98, 3);
    memcpy(v100, v126, v99);
    *(_QWORD *)(a2 + 160) = v100;
    v101 = *(_WORD *)(a2 + 80) & 0x7F;
    v102 = -40;
    if (v101 > 0x46)
    {
      v104 = v111;
      if (v101 == 83)
      {
        v103 = (uint64_t)v112;
      }
      else
      {
        v103 = (uint64_t)v112;
        if (v101 == 71)
        {
          v102 = -56;
        }
        else if (v101 != 81)
        {
          goto LABEL_197;
        }
      }
    }
    else
    {
      v103 = (uint64_t)v112;
      v104 = v111;
      if (v101 > 0x18)
        goto LABEL_196;
      if (v101 == 16)
        goto LABEL_189;
      if (((1 << v101) & 0x1066) == 0)
      {
        if (v101 == 24)
        {
LABEL_189:
          v102 = -48;
        }
        else
        {
LABEL_196:
          if (v101 == 70)
          {
            v102 = -64;
          }
          else
          {
LABEL_197:
            v105 = v101 - 52;
            v49 = v101 - 33 >= 5;
            v106 = -48;
            if (!v49)
              v106 = -64;
            if (v105 >= 6)
              v102 = v106;
            else
              v102 = -72;
          }
        }
      }
    }
    v107 = *(_QWORD *)(v104 + v102 + 16);
    v108 = (_QWORD *)(v107 & 0xFFFFFFFFFFFFFFF8);
    if ((v107 & 4) != 0)
      v108 = (_QWORD *)*v108;
    if (v108)
      v109 = (unint64_t)(v108 - 8);
    else
      v109 = 0;
    sub_22EAB1884(v103, *(_DWORD *)(a2 + 24), v109);
  }
  if (v117 != v116)
    free(v117);
LABEL_210:
  llvm::deallocate_buffer(v129[0], (void *)(16 * v130));
  if (v126 != (_QWORD *)v128)
    free(v126);
  llvm::deallocate_buffer(v124[0], (void *)(16 * v125));
  return v13 & 1;
}

uint64_t sub_22EAB08A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t result;
  char v41;
  int v42;
  _QWORD v43[2];
  unint64_t v44;
  _BYTE v45[48];
  void *v46;
  uint64_t v47;
  _QWORD v48[4];
  unint64_t v49;
  int v50;
  _QWORD v51[1548];

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = (_QWORD *)v0;
  v51[1547] = *MEMORY[0x24BDAC8D0];
  v12 = *(_QWORD *)(v0 + 88);
  v13 = sub_22E46BB88(v9);
  sub_22EC39128(v12, v6, v4, v13 >> 11, (uint64_t)v45);
  if ((v8 - 1) < 2)
  {
    v16 = **(_QWORD **)(v10 + 120);
    v17 = *(_QWORD *)(v16 + 48);
    v18 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
    if (!v18 || (v19 = *(_DWORD *)(v18 + 16), (v19 & 0xFE) != 0x28))
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
        || (v18 = sub_22F10CF48(v18)) == 0)
      {
LABEL_8:
        v44 = 0;
        v20 = v11[11];
        v21 = *(_DWORD *)(v10 + 24);
        v49 = *(_QWORD *)(v16 + 40);
        v50 = v21;
        sub_22EFC6D6C((uint64_t)v51, v49);
        v22 = sub_22E3CD3D4(v20 + 2032, 32, 3);
        sub_22EFF6AE4(v22, v20, 0, 0, 0, v16, 0, (uint64_t)&v49, 0, 0, v17, 1, 0, 0);
        sub_22EB22288((uint64_t)v11, v22, 0);
        v23 = v11[11];
        v24 = *(_QWORD *)(**(_QWORD **)(v6 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v24 + 8) & 0xF) != 0)
          v24 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v6 + 16));
        v25 = v24 & 0xFFFFFFFFFFFFFFF0;
        v26 = *(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v26 + 8) & 0xF) != 0)
          v26 = (unint64_t)sub_22F10D2BC(v25);
        v27 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v27 & 8) != 0)
        {
          v29 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v28 = 0;
          v29 = 0;
        }
        v30 = v26 & 0xFFFFFFFFFFFFFFF0;
        v31 = v29 | (v27 | v17) & 7;
        if (((v31 | v28) & 0xCFFFFFFF8) != 0)
        {
          v49 = v31 | v28;
          v32 = sub_22E491354((unsigned int *)&v49, v30);
          v33 = sub_22EF5DBC4(v23, v32, v49);
        }
        else
        {
          v33 = v31 & 7 | v30;
        }
        if (v8 == 2)
        {
          v22 = sub_22EAE23C0(v11, v22);
          v34 = 2;
        }
        else
        {
          v34 = 1;
        }
        v46 = v48;
        v48[0] = v6;
        v47 = 0x400000001;
        v43[1] = 0;
        v44 = sub_22E90092C((uint64_t)v11, v22, v33, 8, v34, (uint64_t)&v46) & 0xFFFFFFFFFFFFFFFELL;
        v43[0] = (unint64_t)*(unsigned int *)(v10 + 24) << 32;
        sub_22EC395BC(&v49, v11, v45, v43, &v44, 1, 0, 1);
        v15 = sub_22EC3DF80((int)&v49, (int)v11);
        sub_22EC3CE2C((uint64_t)&v49);
        if (v46 != v48)
          free(v46);
        goto LABEL_24;
      }
      v19 = *(_DWORD *)(v18 + 16);
    }
    if ((v19 & 0x100000) != 0)
    {
      do
      {
        v18 = *(_QWORD *)(*(_QWORD *)(v18 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v18)
        {
          v42 = *(_DWORD *)(v18 + 16);
          if ((v42 & 0xFE) == 0x28)
            continue;
        }
        v18 = sub_22F10CF48(v18);
        v42 = *(_DWORD *)(v18 + 16);
      }
      while ((v42 & 0x100000) != 0);
    }
    v17 = *(_QWORD *)(v18 + 32);
    goto LABEL_8;
  }
  if (v8 != 3 && v8)
  {
    v15 = 0;
    goto LABEL_25;
  }
  v14 = *(unsigned int *)(v10 + 24) | ((unint64_t)*(unsigned int *)(v10 + 24) << 32);
  v46 = (void *)(((unint64_t)*(unsigned int *)(v10 + 24) << 32) | 3);
  v47 = v14;
  sub_22EC395BC(&v49, v11, v45, &v46, 0, 0, 0, 1);
  v15 = sub_22EC3DF80((int)&v49, (int)v11);
  sub_22EC3CE2C((uint64_t)&v49);
LABEL_24:
  if ((v15 & 1) != 0)
    return 1;
LABEL_25:
  v35 = sub_22EBCCCF0((uint64_t)v11, (int *)(v15 & 0xFFFFFFFFFFFFFFFELL));
  if ((v35 & 1) != 0)
    return 1;
  v36 = sub_22E3CD3D4(v11[11] + 2032, 32, 3);
  v37 = v11[11];
  v38 = *(_QWORD *)(**(_QWORD **)(v6 + 16) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v38 + 8) & 0xF) != 0)
    v38 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v6 + 16));
  v39 = (unint64_t)sub_22EF579A8(v37, v38 & 0xFFFFFFFFFFFFFFF0, 0);
  result = 0;
  v41 = *(_BYTE *)(v6 + 12);
  *(_QWORD *)v36 = v39 & 0xFFFFFFFFFFFFFFF9;
  *(_QWORD *)(v36 + 8) = (unint64_t)v35 & 0xFFFFFFFFFFFFFFFELL;
  *(_QWORD *)(v36 + 16) = 0;
  *(_DWORD *)(v36 + 24) = 0;
  *(_WORD *)(v36 + 28) = 2 * (v41 & 1);
  *v2 = v36;
  return result;
}

uint64_t sub_22EAB0D1C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  unsigned int v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int *v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  char v95;
  char v96;
  unint64_t v97;
  _QWORD v98[2];
  uint64_t v99[6];
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  unint64_t v105;
  void *v106;
  uint64_t v107;
  _BYTE v108[64];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  int v114;
  _BYTE v115[24];
  int v116;
  __int16 v117;
  char v118;
  uint64_t v119;

  v0 = MEMORY[0x24BDAC7A8]();
  v119 = *MEMORY[0x24BDAC8D0];
  if ((v2[28] & 0x80) != 0)
    return 0;
  v4 = v3;
  v5 = (unint64_t)v2;
  v6 = v1;
  v7 = (_QWORD *)v0;
  v8 = (*(uint64_t (**)(_BYTE *))(*(_QWORD *)v2 + 32))(v2);
  v102 = 0;
  if ((sub_22E4D6DA8(*(_QWORD *)(v6 + 24), *(_DWORD *)(v6 + 40), v8, &v102) & 1) != 0)
  {
    v15 = *(uint64_t **)(v102 + 8);
    if (v15)
      goto LABEL_4;
  }
  if (v4)
  {
    v17 = *(unsigned int *)(v4 + 64);
    if ((_DWORD)v17)
    {
      v18 = *(uint64_t **)(v4 + 56);
      v19 = 8 * v17;
      do
      {
        v20 = *v18 && (*(_DWORD *)(*v18 + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD;
        if (v20 && sub_22EAE2698(v6, *v18))
          return 0;
        ++v18;
        v19 -= 8;
      }
      while (v19);
    }
  }
  else if (sub_22EAE2698(v6, v5))
  {
    return 0;
  }
  v23 = (*(_DWORD *)(v5 + 72) & 3) == 0 || (*(_DWORD *)(v5 + 72) & 3) == 3;
  if (!v23 && (*(_DWORD *)(v6 + 20) - 1) >= 2)
  {
    v42 = sub_22EACC620(v7, *(_DWORD *)(*(_QWORD *)(v6 + 8) + 24), v5);
    if ((v42 & 1) == 0)
    {
      v43 = sub_22E46BB88(*(_QWORD *)(v6 + 8));
      sub_22EC38F40((uint64_t)&v102, v5, v43 >> 11, 1, 0);
      v44 = v42 & 0xFFFFFFFFFFFFFFFELL;
      sub_22EC3D074((uint64_t)v7, (uint64_t)&v102);
      v45 = (uint64_t *)sub_22E3CD3D4(v7[11] + 2032, 32, 3);
      v15 = v45;
      if (v4)
        v46 = v4;
      else
        v46 = v5;
      v47 = 4;
      if (!v4)
        v47 = 2;
      *v45 = v46 & 0xFFFFFFFFFFFFFFF9 | v47;
      v45[1] = v44;
      v45[2] = 0;
      *(uint64_t *)((char *)v45 + 22) = 0;
LABEL_4:
      v16 = v6;
LABEL_5:
      sub_22EAE2450(v16, v15, v9, v10, v11, v12, v13, v14);
      return 0;
    }
    return 1;
  }
  v21 = 0;
  if ((sub_22EAB29F0(v7[11], *(_QWORD *)(v5 + 48)) & 1) == 0 && !*(_BYTE *)(v6 + 16))
  {
    if ((*(_BYTE *)(v5 + 28) & 0x80) != 0)
      return 1;
    v25 = *(_QWORD **)v6;
    v24 = *(_QWORD *)(v6 + 8);
    v26 = *(_DWORD *)(v6 + 20);
    v27 = *(unsigned int *)(v24 + 24);
    v28 = *(_DWORD *)(v24 + 24);
    if ((v26 - 1) <= 1)
    {
      v29 = **(_QWORD **)(v24 + 120);
      v30 = *(_QWORD *)(v29 + 48);
      v31 = *(_QWORD *)(v30 & 0xFFFFFFFFFFFFFFF0);
      if (!v31 || (v32 = *(_DWORD *)(v31 + 16), (v32 & 0xFE) != 0x28))
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v31 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
          || (v31 = sub_22F10CF48(v31)) == 0)
        {
LABEL_32:
          if (sub_22EFC2F84(v5, v25[11]))
            return 0;
          v92 = v24;
          v33 = v25[11];
          v102 = *(_QWORD *)(v29 + 40);
          v94 = v28;
          v103 = v28;
          sub_22EFC6D6C((uint64_t)&v104, v102);
          v34 = sub_22E3CD3D4(v33 + 2032, 32, 3);
          v93 = v30;
          sub_22EFF6AE4(v34, v33, 0, 0, 0, v29, 0, (uint64_t)&v102, 0, 0, v30, 1, 0, 0);
          sub_22EB22288((uint64_t)v25, v34, 0);
          if (v26 == 2)
            v34 = sub_22EAE23C0(v25, v34);
          v100 = 0u;
          v101 = 0u;
          v35 = *(_QWORD *)(v5 + 40);
          v105 = 0;
          v106 = v108;
          v107 = 0x800000000;
          v109 = 0;
          v110 = 0;
          v111 = 0;
          v112 = v25;
          v113 = v35;
          v114 = v94;
          sub_22EFC6D6C((uint64_t)v115, v35);
          *(_OWORD *)&v115[8] = xmmword_22F463A40;
          v116 = 16842752;
          v117 = 0;
          v118 = 0;
          sub_22EC56024((uint64_t)&v105);
          if (v4)
            v36 = v4;
          else
            v36 = v5;
          v37 = v107;
          if (v107 >= HIDWORD(v107))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v37 = v107;
          }
          *((_QWORD *)v106 + v37) = v36;
          LODWORD(v107) = v107 + 1;
          LODWORD(v105) = 2;
          sub_22EC561E4((uint64_t)&v105);
          v38 = sub_22EC24AB8((uint64_t)v25, v34, v93, v27, 0, (uint64_t *)&v100, 0, 0, (uint64_t)&v105, 0, 0, 0, 0);
          v39 = v38;
          if ((v38 & 1) != 0)
          {
            v57 = 0;
            v21 = 1;
          }
          else
          {
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFFFELL) + 24)
                                                                          + 48) & 0xFFFFFFFFFFFFFFF0)
                                                  + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16) == 41)
              v39 = sub_22EAE23C0(v25, v38 & 0xFFFFFFFFFFFFFFFELL);
            v40 = sub_22E46BB88(v92) >> 11;
            if (v4)
              v41 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * *(unsigned int *)(v4 + 64) - 8);
            else
              v41 = v5;
            sub_22EC38F40((uint64_t)v99, v41, v40, 1, 0);
            v98[0] = v27 << 32;
            v98[1] = 0;
            v97 = v39 & 0xFFFFFFFFFFFFFFFELL;
            v21 = 1;
            sub_22EC395BC(&v102, v25, v99, v98, &v97, 1, 0, 1);
            v71 = sub_22EC3DF80((int)&v102, (int)v25);
            if ((v71 & 1) != 0)
            {
              v57 = 0;
            }
            else
            {
              v72 = sub_22EBCCCF0((uint64_t)v25, (int *)(v71 & 0xFFFFFFFFFFFFFFFELL));
              if ((v72 & 1) != 0)
              {
                v57 = 0;
                v21 = 1;
              }
              else
              {
                v73 = sub_22E3CD3D4(v25[11] + 2032, 32, 3);
                v57 = v73;
                v21 = 0;
                v74 = 4;
                if (!v4)
                  v74 = 2;
                *(_QWORD *)v73 = v36 & 0xFFFFFFFFFFFFFFF9 | v74;
                *(_QWORD *)(v73 + 8) = (unint64_t)v72 & 0xFFFFFFFFFFFFFFFELL;
                *(_DWORD *)(v73 + 16) = v94;
                *(_DWORD *)(v73 + 20) = v94;
                *(_DWORD *)(v73 + 24) = v94;
                *(_WORD *)(v73 + 28) = 0;
              }
            }
            sub_22EC3CE2C((uint64_t)&v102);
          }
          if (HIBYTE(v116))
          {
            if ((_DWORD)v105 == 5)
            {
              sub_22EC64D18(v112, (uint64_t)&v105);
            }
            else if (v110 && (*(_DWORD *)(v112[9] + 52) & 0x400000) != 0)
            {
              sub_22E90B5FC((unint64_t)v112, (uint64_t)&v105);
            }
          }
          if (v109)
          {
            v91 = sub_22EC6CBD0(v109);
            MEMORY[0x2348A0E9C](v91, 0x10E0C409F09D3C3);
          }
          if (v106 != v108)
            free(v106);
          if (HIDWORD(v101))
            free((void *)v101);
LABEL_110:
          if ((v21 & 1) == 0 && v57)
          {
            v16 = v6;
            v15 = (uint64_t *)v57;
            goto LABEL_5;
          }
          return v21;
        }
        v32 = *(_DWORD *)(v31 + 16);
      }
      if ((v32 & 0x100000) != 0)
      {
        do
        {
          v31 = *(_QWORD *)(*(_QWORD *)(v31 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v31)
          {
            v90 = *(_DWORD *)(v31 + 16);
            if ((v90 & 0xFE) == 0x28)
              continue;
          }
          v31 = sub_22F10CF48(v31);
          v90 = *(_DWORD *)(v31 + 16);
        }
        while ((v90 & 0x100000) != 0);
      }
      v30 = *(_QWORD *)(v31 + 32);
      goto LABEL_32;
    }
    v48 = sub_22EF5BA38(v25[11], *(_QWORD *)(v5 + 48));
    v49 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v48 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                             + 16);
    if (v49 == 45)
    {
      v50 = sub_22E46BB88(v24) >> 11;
      if (v4)
        v51 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * *(unsigned int *)(v4 + 64) - 8);
      else
        v51 = v5;
      sub_22EC38F40((uint64_t)&v105, v51, v50, 1, 0);
      v99[0] = (v27 << 32) | 3;
      v99[1] = v27 | ((unint64_t)v27 << 32);
      v21 = 1;
      sub_22EC395BC(&v102, v25, &v105, v99, 0, 0, 0, 1);
      v63 = sub_22EC3DF80((int)&v102, (int)v25);
      if ((v63 & 1) != 0)
      {
        v57 = 0;
      }
      else
      {
        v64 = sub_22EBCCCF0((uint64_t)v25, (int *)(v63 & 0xFFFFFFFFFFFFFFFELL));
        if ((v64 & 1) != 0)
        {
          v57 = 0;
          v21 = 1;
        }
        else
        {
          v65 = sub_22E3CD3D4(v25[11] + 2032, 32, 3);
          v57 = v65;
          v21 = 0;
          if (v4)
            v66 = v4;
          else
            v66 = v5;
          v67 = 4;
          if (!v4)
            v67 = 2;
          *(_QWORD *)v65 = v66 & 0xFFFFFFFFFFFFFFF9 | v67;
          *(_QWORD *)(v65 + 8) = (unint64_t)v64 & 0xFFFFFFFFFFFFFFFELL;
          *(_DWORD *)(v65 + 16) = v28;
          *(_DWORD *)(v65 + 20) = v28;
          *(_DWORD *)(v65 + 24) = v28;
          *(_WORD *)(v65 + 28) = 0;
        }
      }
      sub_22EC3CE2C((uint64_t)&v102);
      goto LABEL_110;
    }
    v52 = *(_QWORD *)(v5 + 16);
    v53 = v52 & 0xFFFFFFFFFFFFFFF8;
    if ((v52 & 4) != 0)
      v53 = *(_QWORD *)v53;
    v54 = (*(_WORD *)(v53 + 8) & 0x7E) - 34;
    if (v53)
      v55 = v53 - 64;
    else
      v55 = 0;
    if (v54 >= 4)
      v55 = 0;
    if ((*(_DWORD *)(v55 + 72) & 0xE000) == 0x4000)
    {
      v56 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFFF0) + 8);
LABEL_65:
      if ((v56 & 8) == 0 || (*(_WORD *)((v56 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x180) == 0)
        return 0;
      v57 = sub_22E3CD3D4(v25[11] + 2032, 32, 3);
      v58 = sub_22E3CD3D4(v25[11] + 2032, 16, 3);
      v59 = sub_22E5018F0(v58, *(_QWORD *)(v5 + 48));
      v21 = 0;
      *(_QWORD *)v57 = v5 & 0xFFFFFFFFFFFFFFF9 | 2;
      *(_QWORD *)(v57 + 8) = v59;
      *(_DWORD *)(v57 + 16) = v28;
      *(_DWORD *)(v57 + 20) = v28;
      *(_DWORD *)(v57 + 24) = v28;
      *(_WORD *)(v57 + 28) = 0;
      goto LABEL_110;
    }
    if ((v49 & 0xFE) == 0x28)
    {
      sub_22E8FCA40(v25, *(_DWORD *)(v24 + 24), 0x13C8u, 0, (uint64_t)&v102);
      LODWORD(v100) = (*(_DWORD *)(v24 + 28) >> 9) & 1;
      v60 = sub_22E8900C4((uint64_t)&v102, (int *)&v100);
      v61 = *(_WORD *)(v24 + 80) & 0x7F;
      v62 = -40;
      if (v61 > 0x46)
      {
        switch(v61)
        {
          case 'S':
            goto LABEL_128;
          case 'G':
            v62 = -56;
            goto LABEL_128;
          case 'Q':
            goto LABEL_128;
        }
      }
      else
      {
        if (v61 <= 0x18)
        {
          if (v61 == 16)
            goto LABEL_73;
          if (((1 << v61) & 0x1066) != 0)
            goto LABEL_128;
          if (v61 == 24)
          {
LABEL_73:
            v62 = -48;
LABEL_128:
            v75 = *(_QWORD *)(v24 + 72 + v62 + 16);
            v76 = (_QWORD *)(v75 & 0xFFFFFFFFFFFFFFF8);
            if ((v75 & 4) != 0)
              v76 = (_QWORD *)*v76;
            if (v76)
              v77 = (unint64_t)(v76 - 8);
            else
              v77 = 0;
            v78 = *(_QWORD *)(v77 + 48);
            if (v78)
              v79 = v78 & 0xFFFFFFFFFFFFFFF0;
            else
              v79 = sub_22EF6462C(v25[11], v77);
            v105 = v79;
            v80 = sub_22E8901B8(v60, (uint64_t *)&v105);
            LODWORD(v98[0]) = 0;
            v81 = sub_22E8900C4(v80, (int *)v98);
            v99[0] = *(_QWORD *)(v5 + 40);
            sub_22E894538(v81, v99);
            sub_22E903BEC((unsigned int *)&v102);
            v82 = (unsigned int *)&v96;
LABEL_151:
            sub_22E8FCA40(v25, *(_DWORD *)(v5 + 24), 0x64u, 0, (uint64_t)v82);
            sub_22E903BEC(v82);
            return 1;
          }
        }
        if (v61 == 70)
        {
LABEL_126:
          v62 = -64;
          goto LABEL_128;
        }
      }
      if (v61 - 52 < 6)
      {
        v62 = -72;
        goto LABEL_128;
      }
      if (v61 - 33 < 5)
        goto LABEL_126;
      goto LABEL_73;
    }
    if ((v48 & 1) == 0)
    {
      v56 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v56 & 1) == 0)
        goto LABEL_65;
    }
    sub_22E8FCA40(v25, *(_DWORD *)(v24 + 24), 0x13C8u, 0, (uint64_t)&v102);
    LODWORD(v100) = (*(_DWORD *)(v24 + 28) >> 9) & 1;
    v68 = sub_22E8900C4((uint64_t)&v102, (int *)&v100);
    v69 = *(_WORD *)(v24 + 80) & 0x7F;
    v70 = -40;
    if (v69 > 0x46)
    {
      switch(v69)
      {
        case 'S':
          goto LABEL_143;
        case 'G':
          v70 = -56;
          goto LABEL_143;
        case 'Q':
          goto LABEL_143;
      }
    }
    else
    {
      if (v69 <= 0x18)
      {
        if (v69 == 16)
          goto LABEL_90;
        if (((1 << v69) & 0x1066) != 0)
          goto LABEL_143;
        if (v69 == 24)
        {
LABEL_90:
          v70 = -48;
LABEL_143:
          v83 = *(_QWORD *)(v24 + 72 + v70 + 16);
          v84 = (_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF8);
          if ((v83 & 4) != 0)
            v84 = (_QWORD *)*v84;
          if (v84)
            v85 = (unint64_t)(v84 - 8);
          else
            v85 = 0;
          v86 = *(_QWORD *)(v85 + 48);
          if (v86)
            v87 = v86 & 0xFFFFFFFFFFFFFFF0;
          else
            v87 = sub_22EF6462C(v25[11], v85);
          v105 = v87;
          v88 = sub_22E8901B8(v68, (uint64_t *)&v105);
          LODWORD(v98[0]) = 1;
          v89 = sub_22E8900C4(v88, (int *)v98);
          v99[0] = *(_QWORD *)(v5 + 40);
          sub_22E894538(v89, v99);
          sub_22E903BEC((unsigned int *)&v102);
          v82 = (unsigned int *)&v95;
          goto LABEL_151;
        }
      }
      if (v69 == 70)
      {
LABEL_141:
        v70 = -64;
        goto LABEL_143;
      }
    }
    if (v69 - 52 < 6)
    {
      v70 = -72;
      goto LABEL_143;
    }
    if (v69 - 33 < 5)
      goto LABEL_141;
    goto LABEL_90;
  }
  return v21;
}

void sub_22EAB1884(uint64_t a1, unsigned int a2, unint64_t a3)
{
  unint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned __int8 *v37;
  unint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  int v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  int v50;
  _BYTE v51[68];
  unsigned int v52;

  v52 = a2;
  if ((sub_22EFC7ADC(a3 + 64) & 1) == 0 && (*(_DWORD *)(a3 + 72) & 0xE000) != 0x4000)
  {
    v5 = sub_22EFC3B90(a3);
    if (v5)
    {
      v6 = v5;
      v7 = *(_DWORD *)(v5 + 28);
LABEL_5:
      if ((v7 & 0x80) == 0 && (sub_22EAB29F0(*(_QWORD *)(a1 + 88), *(_QWORD *)(v6 + 48)) & 1) == 0)
      {
        v8 = sub_22EF5BA38(*(_QWORD *)(a1 + 88), *(_QWORD *)(v6 + 48));
        v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v9)
        {
          if (*(_BYTE *)(v9 + 16) == 45)
          {
            v10 = v8;
            v11 = sub_22F114198(*(_QWORD *)(v9 + 24));
            if ((*(_BYTE *)(v11 + 28) & 0x80) == 0)
            {
              v12 = v11;
              sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v11 + 104) + 96), *(_QWORD *)(v11 + 104));
              if ((**(_QWORD **)(v12 + 128) & 0x8000000000000000) == 0
                && ((*(_DWORD *)(v12 + 72) & 0xE000) != 0x4000 || (*(_BYTE *)(v12 + 75) & 1) == 0))
              {
                v13 = sub_22EC6602C(a1, v12) & 0xFFFFFFFFFFFFFFF8;
                v14 = *(_DWORD *)(v6 + 24);
                v15 = (_BYTE *)(*(_QWORD *)(a1 + 88) + 2128);
                v47 = 0;
                v48 = v15;
                LODWORD(v49) = 2585;
                v16 = *(_QWORD *)(v6 + 40);
                v47 = (_BYTE *)sub_22E3B8AAC((uint64_t)v15);
                v47[*v47 + 1] = 10;
                v17 = (unint64_t)v47;
                v18 = *v47;
                *v47 = v18 + 1;
                *(_QWORD *)(v17 + 8 * v18 + 16) = v16;
                *(_BYTE *)(v17 + (v18 + 1) + 1) = 9;
                v19 = (unint64_t)v47;
                v20 = *v47;
                *v47 = v20 + 1;
                *(_QWORD *)(v19 + 8 * v20 + 16) = v10;
                sub_22E90A46C(a1, v14, v13, (uint64_t)&v47, 0);
                if (v47 && v48)
                  sub_22E3BB10C((unint64_t)v48, (unint64_t)v47);
                sub_22EB4E494(a1, v52, v13, 1);
                sub_22EB17F48(a1, v13, &v52, 1, 0, 0, 0, 0);
              }
            }
          }
        }
      }
      while (1)
      {
        v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v6)
          break;
        v7 = *(_DWORD *)(v6 + 28);
        if ((v7 & 0x7Fu) - 49 < 3)
          goto LABEL_5;
      }
    }
    sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a3 + 104) + 96), *(_QWORD *)(a3 + 104));
    v21 = **(_QWORD **)(a3 + 128);
    v22 = (v21 & 0x800) == 0;
    if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088) + 148) == 11)
    {
      v23 = sub_22EFD10F8(a3);
      if (v23)
        v22 = ((v21 & 0x800) == 0) & ~sub_22EFC9084(v23, 1);
    }
    v47 = v51;
    v48 = v51;
    v49 = 8;
    v50 = 0;
    v24 = sub_22E46A3A0(a3);
    if (v24 != v25)
    {
      v26 = v24;
      v27 = v25;
      do
      {
        v28 = *(_QWORD *)(**(_QWORD **)(v26 + 16) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v28 + 8) & 0xF) != 0)
          v28 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v26 + 16));
        v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v28 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v29 || *(_BYTE *)(v29 + 16) != 45)
          goto LABEL_46;
        if ((*(_BYTE *)(v26 + 12) & 1) != 0)
        {
          if (!v22)
            goto LABEL_46;
          sub_22E3BA850((uint64_t)&v47, (const void *)v29);
        }
        v30 = sub_22F114198(*(_QWORD *)(v29 + 24));
        if ((*(_BYTE *)(v30 + 28) & 0x80) == 0)
        {
          v31 = v30;
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v30 + 104) + 96), *(_QWORD *)(v30 + 104));
          if ((**(_QWORD **)(v31 + 128) & 0x8000000000000000) == 0)
          {
            v32 = sub_22EC6602C(a1, v31);
            v33 = *(_DWORD *)v26;
            v34 = *(_QWORD *)(a1 + 88) + 2128;
            v44 = 0;
            v45 = v34;
            v46 = 2583;
            v35 = *(_QWORD *)(**(_QWORD **)(v26 + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v35 + 8) & 0xF) != 0)
            {
              v36 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v26 + 16));
              v37 = v44;
              v38 = v36 & 0xFFFFFFFFFFFFFFF0;
              if (!v44)
              {
                v34 = v45;
                goto LABEL_38;
              }
            }
            else
            {
              v38 = v35 & 0xFFFFFFFFFFFFFFF0;
LABEL_38:
              v37 = (unsigned __int8 *)sub_22E3B8AAC(v34);
              v44 = v37;
            }
            v37[*v37 + 1] = 9;
            v39 = v44;
            v40 = *v44;
            *v44 = v40 + 1;
            *(_QWORD *)&v39[8 * v40 + 16] = v38;
            sub_22E4D6448((uint64_t)(v39 + 336), *(_QWORD *)v26, 1);
            v41 = *(_QWORD *)(a3 + 48);
            if (v41)
              v42 = v41 & 0xFFFFFFFFFFFFFFF0;
            else
              v42 = sub_22EF6462C(*(_QWORD *)(a1 + 88), a3);
            v43 = v32 & 0xFFFFFFFFFFFFFFF8;
            sub_22E90A46C(a1, v33, v43, (uint64_t)&v44, v42);
            if (v44 && v45)
              sub_22E3BB10C(v45, (unint64_t)v44);
            sub_22EB4E494(a1, v52, v43, 1);
            sub_22EB17F48(a1, v43, &v52, 1, 0, 0, 0, 0);
          }
        }
LABEL_46:
        v26 += 24;
      }
      while (v26 != v27);
    }
    if ((v22 & 1) != 0)
      sub_22EAB2A98(a1, v52, a3, &v47);
    if (v48 != v47)
      free(v48);
  }
}

unsigned int *sub_22EAB1D44(unsigned int *result, unint64_t a2, int a3, _QWORD *a4, unint64_t a5, int a6)
{
  unint64_t v6;
  unsigned int *v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  BOOL v16;
  uint64_t **v17;
  uint64_t **v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int v24;
  _QWORD *v25;
  unint64_t i;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  unsigned int v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  unsigned int v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  unint64_t v88;
  unint64_t v89;
  unsigned int *v90;
  _QWORD *v91;
  unint64_t v92;
  unsigned int *v93;
  uint64_t v94;
  unint64_t v95;
  const void *v96;
  size_t v97;
  __int128 *p_dst;
  uint64_t v99;
  uint64_t v100;
  int *v101;
  uint64_t v102;
  int v103;
  uint64_t *v104;
  int v105;
  unint64_t v107;
  unint64_t v108;
  llvm *v109[2];
  unsigned int v110;
  llvm *v111[2];
  unsigned int v112;
  unsigned int v113[24];
  unint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  __int128 __p;
  unint64_t v119;
  char v120;
  uint64_t v121[12];
  __int128 __dst;
  unint64_t v123;
  void *v124;
  uint64_t v125;
  _BYTE v126[256];
  void *v127;
  uint64_t v128;
  _BYTE v129[48];
  void *v130;
  uint64_t v131;
  _QWORD v132[34];

  v132[32] = *MEMORY[0x24BDAC8D0];
  if (!a2)
    return result;
  v6 = a5;
  v8 = result;
  v9 = *(_DWORD *)(a2 + 28);
  if ((v9 & 0x7Fu) - 26 <= 6)
  {
    a2 = *(_QWORD *)(a2 + 48);
    v9 = *(_DWORD *)(a2 + 28);
  }
  if ((v9 & 0x7F) != 0x37)
  {
    sub_22E8FCA40(result, a3, 0x1118u, 0, (uint64_t)v113);
    return sub_22E903BEC(v113);
  }
  v107 = a2;
  v111[0] = 0;
  v111[1] = 0;
  v112 = 0;
  v109[0] = 0;
  v109[1] = 0;
  v110 = 0;
  if (!a5)
    goto LABEL_52;
  v10 = 0;
  v11 = 0;
  v12 = 0;
  do
  {
    v13 = a4[v10];
    v14 = *(_WORD *)(v13 + 28);
    *(_WORD *)(v13 + 28) = v14 & 3 | (8 * v12) | 4;
    v15 = *(_QWORD *)v13 & 6;
    if (!v15)
    {
      if ((v14 & 1) == 0)
      {
        v130 = (void *)sub_22EAB27F8((uint64_t *)v13);
        v18 = (uint64_t **)sub_22EAE9888((uint64_t)v111, (uint64_t *)&v130);
        v11 |= sub_22EAB2858(v8, v13, v18 + 1);
        goto LABEL_17;
      }
LABEL_69:
      if (v6 != 1)
      {
        v48 = sub_22EFD7AE4((uint64_t *)v13);
        sub_22E8FCA40(v8, v48, 0xC9Cu, 0, (uint64_t)&v130);
        v124 = (void *)sub_22EFD7B58(v13);
        v49 = sub_22E8906A0((uint64_t)&v130, (uint64_t *)&v124);
        v121[0] = sub_22EFD7B58(a4[v12 == 0]);
        sub_22E8906A0(v49, v121);
        sub_22E903BEC((unsigned int *)&v130);
      }
      sub_22F327D30((uint64_t)v8, v107, (uint64_t *)a4[v10]);
      goto LABEL_159;
    }
    v16 = v15 == 4 || v15 == 2;
    if (!v16)
      goto LABEL_69;
    v114 = sub_22EAB27F8((uint64_t *)v13);
    v17 = (uint64_t **)sub_22EAE9888((uint64_t)v111, (uint64_t *)&v114);
    if (sub_22EAB2858(v8, v13, v17 + 1))
      goto LABEL_14;
    v19 = *(_QWORD *)v13;
    v20 = *(_QWORD *)v13 & 6;
    if (v20 == 4)
    {
      v21 = *(_QWORD *)(*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 56)
                      + 8 * *(unsigned int *)((v19 & 0xFFFFFFFFFFFFFFF8) + 64)
                      - 8);
    }
    else if (v20 == 2)
    {
      v21 = v19 & 0xFFFFFFFFFFFFFFF8;
    }
    else
    {
      v21 = 0;
    }
    v22 = *(_QWORD *)(v21 + 16);
    v23 = v22 & 0xFFFFFFFFFFFFFFF8;
    if ((v22 & 4) != 0)
      v23 = *(_QWORD *)v23;
    v24 = (*(_WORD *)(v23 + 8) & 0x7E) - 34;
    if (v23)
      v25 = (_QWORD *)(v23 - 64);
    else
      v25 = 0;
    if (v24 >= 4)
      v25 = 0;
    for (i = v21; ; i = (unint64_t)v27)
    {
      v27 = v25;
      v124 = v25;
      if ((v25[9] & 0x1000000) != 0)
      {
        if ((v25[9] & 0xE000) != 0x4000)
          goto LABEL_44;
      }
      else if ((v25[9] & 0xE000) != 0x4000)
      {
        goto LABEL_17;
      }
      v28 = sub_22F329E14((uint64_t)v109, (uint64_t *)&v124);
      v29 = v28;
      v30 = v28[1];
      if (v30 && v30 != i)
        break;
      if (!v30)
      {
        v28[1] = i;
        v28[2] = v13;
      }
      if ((*((_BYTE *)v27 + 75) & 1) == 0)
        goto LABEL_17;
LABEL_44:
      v32 = v27[2];
      v33 = (_QWORD *)(v32 & 0xFFFFFFFFFFFFFFF8);
      if ((v32 & 4) != 0)
        v33 = (_QWORD *)*v33;
      if (v33)
        v25 = v33 - 8;
      else
        v25 = 0;
    }
    v34 = sub_22EFD7AE4((uint64_t *)v13);
    sub_22E8FCA40(v8, v34, 0xF7Bu, 0, (uint64_t)&v130);
    v121[0] = *(_QWORD *)(v21 + 40);
    v35 = sub_22E894538((uint64_t)&v130, v121);
    v127 = (void *)sub_22EFD7B58(v13);
    sub_22E8906A0(v35, (uint64_t *)&v127);
    sub_22E903BEC((unsigned int *)&v130);
    v36 = sub_22EFD7AE4((uint64_t *)v29[2]);
    sub_22E8FCA40(v8, v36, 0x1775u, 0, (uint64_t)&v130);
    LODWORD(v127) = 0;
    v37 = sub_22E8900C4((uint64_t)&v130, (int *)&v127);
    v121[0] = sub_22EFD7B58(v29[2]);
    sub_22E8906A0(v37, v121);
    sub_22E903BEC((unsigned int *)&v130);
LABEL_14:
    v11 = 1;
LABEL_17:
    v10 = ++v12;
  }
  while (v6 > v12);
  if ((v11 & 1) == 0)
  {
LABEL_52:
    v38 = v107;
    v39 = *(_QWORD *)(v107 + 16);
    v40 = (_QWORD *)(v39 & 0xFFFFFFFFFFFFFFF8);
    if ((v39 & 4) != 0)
      v40 = (_QWORD *)*v40;
    v41 = sub_22EFC7ADC((unint64_t)v40);
    if (v6 && (v41 & 1) == 0)
    {
      v42 = 0;
      v43 = 1;
      while (1)
      {
        v44 = *((_QWORD *)v8 + 13);
        v45 = sub_22EFD7AE4((uint64_t *)a4[v42]);
        if (sub_22F1CF68C(*(_QWORD *)(v44 + 32), 0x1A1Au, v45, v44) != 1)
          break;
        v42 = v43;
        v16 = v6 == v43++;
        if (v16)
          goto LABEL_158;
      }
      v130 = v132;
      v131 = 0x2000000000;
      v46 = *(_WORD *)(v107 + 80) & 0x7F;
      v47 = -40;
      if (v46 > 0x46)
      {
        if (v46 != 83)
        {
          if (v46 == 71)
          {
            v47 = -56;
          }
          else if (v46 != 81)
          {
            goto LABEL_75;
          }
        }
      }
      else
      {
        if (v46 > 0x18)
          goto LABEL_74;
        if (v46 == 16)
          goto LABEL_64;
        if (((1 << v46) & 0x1066) == 0)
        {
          if (v46 == 24)
          {
LABEL_64:
            v47 = -48;
          }
          else
          {
LABEL_74:
            if (v46 == 70)
            {
              v47 = -64;
            }
            else
            {
LABEL_75:
              v50 = v46 - 52;
              v51 = v46 - 33 >= 5;
              v52 = -48;
              if (!v51)
                v52 = -64;
              if (v50 >= 6)
                v47 = v52;
              else
                v47 = -72;
            }
          }
        }
      }
      v53 = *(_QWORD *)(v107 + 72 + v47 + 16);
      v54 = (_QWORD *)(v53 & 0xFFFFFFFFFFFFFFF8);
      if ((v53 & 4) != 0)
        v54 = (_QWORD *)*v54;
      if (v54)
        v55 = (uint64_t)(v54 - 8);
      else
        v55 = 0;
      v56 = sub_22E483108(v55);
      if (v56 != v57)
      {
        v58 = v56;
        v59 = v57;
        do
        {
          v60 = *(_QWORD *)(**(_QWORD **)(v58 + 16) & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v60 + 8) & 0xF) != 0)
            v60 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v58 + 16));
          v61 = *(_QWORD *)(*(_QWORD *)((v60 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          v62 = v131;
          if (v131 >= (unint64_t)HIDWORD(v131))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v62 = v131;
          }
          *((_QWORD *)v130 + v62) = v61;
          LODWORD(v131) = v131 + 1;
          v58 += 24;
        }
        while (v58 != v59);
      }
      v63 = sub_22E46A3A0(v55);
      if (v63 != v64)
      {
        v65 = v63;
        v66 = v64;
        do
        {
          if ((*(_BYTE *)(v65 + 12) & 1) == 0)
          {
            v67 = *(_QWORD *)(**(_QWORD **)(v65 + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v67 + 8) & 0xF) != 0)
              v67 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(v65 + 16));
            v68 = *(_QWORD *)(*(_QWORD *)((v67 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            v69 = v131;
            if (v131 >= (unint64_t)HIDWORD(v131))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v69 = v131;
            }
            *((_QWORD *)v130 + v69) = v68;
            LODWORD(v131) = v131 + 1;
          }
          v65 += 24;
        }
        while (v65 != v66);
      }
      v70 = sub_22EFC3B90(v55);
      if (v70)
      {
        v71 = v70;
LABEL_103:
        if ((*(_BYTE *)(v71 + 68) & 1) == 0 || *(_QWORD *)(v71 + 40))
          sub_22EAE28A4((_QWORD *)v71, (uint64_t)&v130);
        while (1)
        {
          v71 = *(_QWORD *)(v71 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v71)
            break;
          if ((*(_DWORD *)(v71 + 28) & 0x7Fu) - 49 < 3)
            goto LABEL_103;
        }
      }
      LODWORD(v72) = 0;
      LODWORD(v73) = 0;
      v74 = 0;
      v75 = v131;
      v127 = v129;
      v128 = 0xC00000000;
      v124 = v126;
      v125 = 0x2000000000;
      LODWORD(v121[0]) = 0;
      do
      {
        v76 = sub_22EAB27F8((uint64_t *)a4[v74]);
        v77 = v76;
        if ((_DWORD)v73 == (_DWORD)v75)
        {
LABEL_113:
          if ((_DWORD)v72)
          {
            v78 = v128;
            if (v128 >= (unint64_t)HIDWORD(v128))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v78 = v128;
            }
            *((_DWORD *)v127 + v78) = v72;
            LODWORD(v128) = v128 + 1;
            if ((_DWORD)v75)
            {
              v73 = 0;
              while (v77 != *((_QWORD *)v130 + v73))
              {
                if (v75 == ++v73)
                  goto LABEL_114;
              }
            }
            else
            {
              LODWORD(v73) = 0;
            }
          }
          else
          {
LABEL_114:
            LODWORD(v73) = v75;
          }
        }
        else
        {
          while (v76 != *((_QWORD *)v130 + v73))
          {
            LODWORD(v73) = v73 + 1;
            if ((_DWORD)v75 == (_DWORD)v73)
              goto LABEL_113;
          }
        }
        sub_22F32A084((uint64_t)&v124, v73, (unsigned int *)v121);
        v72 = (v72 + 1);
        LODWORD(v121[0]) = v72;
        v74 = v72;
      }
      while (v6 != v72);
      if ((_DWORD)v128)
      {
        v79 = 126 - 2 * __clz(v125);
        if ((_DWORD)v125)
          v80 = v79;
        else
          v80 = 0;
        sub_22EAE2AE4((unsigned int *)v124, (unsigned int *)v124 + 2 * v125, v80, 1);
        v81 = sub_22EFD7AE4((uint64_t *)a4[*(_DWORD *)v127 - 1]);
        if ((_DWORD)v128 == 1)
          v82 = 6682;
        else
          v82 = 6994;
        sub_22E8FCA40(v8, v81, v82, 0, (uint64_t)v121);
        v83 = v125;
        if ((_DWORD)v125)
        {
          v84 = 0;
          v85 = 4;
          while (1)
          {
            v86 = *(unsigned int *)((char *)v124 + v85);
            if (v84 != v86)
              break;
LABEL_146:
            ++v84;
            v85 += 8;
            if (v84 >= v83)
              goto LABEL_147;
          }
          v87 = a4;
          v88 = v6;
          v89 = sub_22EFD7B58(v87[v84]);
          v90 = v8;
          v91 = v87;
          v92 = sub_22EFD7B58(v87[v86]);
          v93 = v90;
          v94 = sub_22F142368(v92, 1u, *((_QWORD **)v90 + 14), *((_DWORD **)v90 + 9), 0);
          v116 = 0;
          v117 = 0;
          v119 = 0;
          __p = 0uLL;
          v120 = 0;
          v114 = v89;
          v115 = 1;
          if (v95 >= 0x7FFFFFFFFFFFFFF8)
            abort();
          v96 = (const void *)v94;
          v97 = v95;
          v108 = v108 & 0xFFFFFFFF00000000 | 1;
          if (v95 >= 0x17)
          {
            v99 = (v95 & 0xFFFFFFFFFFFFFFF8) + 8;
            if ((v95 | 7) != 0x17)
              v99 = v95 | 7;
            v100 = v99 + 1;
            p_dst = (__int128 *)operator new(v99 + 1);
            *((_QWORD *)&__dst + 1) = v97;
            v123 = v100 | 0x8000000000000000;
            *(_QWORD *)&__dst = p_dst;
          }
          else
          {
            HIBYTE(v123) = v95;
            p_dst = &__dst;
            if (!v95)
              goto LABEL_143;
          }
          memmove(p_dst, v96, v97);
LABEL_143:
          v6 = v88;
          *((_BYTE *)p_dst + v97) = 0;
          __p = __dst;
          v119 = v123;
          sub_22E890748((uint64_t)v121, &v114);
          a4 = v91;
          if (SHIBYTE(v119) < 0)
            operator delete((void *)__p);
          v83 = v125;
          v8 = v93;
          goto LABEL_146;
        }
LABEL_147:
        if ((_DWORD)v128 == 1)
        {
          sub_22EAE2988((uint64_t)v121, (uint64_t *)a4[*(_DWORD *)v127 - 1], (uint64_t *)a4[*(unsigned int *)v127]);
          sub_22E903BEC((unsigned int *)v121);
        }
        else
        {
          sub_22E903BEC((unsigned int *)v121);
          if ((_DWORD)v128)
          {
            v101 = (int *)v127;
            v102 = 4 * v128;
            do
            {
              v103 = *v101++;
              v104 = (uint64_t *)a4[v103 - 1];
              v105 = sub_22EFD7AE4(v104);
              sub_22E8FCA40(v8, v105, 0x1633u, 0, (uint64_t)v121);
              sub_22EAE2988((uint64_t)v121, v104, (uint64_t *)a4[v103]);
              v114 = sub_22EFD7B58((uint64_t)v104);
              sub_22E8906A0((uint64_t)v121, (uint64_t *)&v114);
              sub_22E903BEC((unsigned int *)v121);
              v102 -= 4;
            }
            while (v102);
          }
        }
      }
      if (v124 != v126)
        free(v124);
      v38 = v107;
      if (v127 != v129)
        free(v127);
      if (v130 != v132)
        free(v130);
    }
LABEL_158:
    sub_22EAAFD60(v8, v38, a6, a4, v6);
    sub_22EAAF8FC((uint64_t)v8, v38);
  }
LABEL_159:
  llvm::deallocate_buffer(v109[0], (void *)(24 * v110));
  return (unsigned int *)llvm::deallocate_buffer(v111[0], (void *)(16 * v112));
}

