uint64_t sub_22E933D68(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((*(_BYTE *)(a2 + 60) & 4) != 0)
  {
    if (*(_QWORD *)(a2 + 152))
    {
      if ((sub_22E933FF8(a1, *(_QWORD *)(a2 + 152), 0) & 1) == 0)
        return 0;
    }
    else
    {
      result = sub_22E940424(a1, a2 + 80);
      if (!(_DWORD)result)
        return result;
    }
  }
  return 1;
}

uint64_t sub_22E933DB0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 40), 0);
  if ((_DWORD)result)
  {
    v5 = *(_DWORD *)(a2 + 28) & 0x7F;
    v6 = v5 > 0x39 || ((1 << v5) & 0x3F0003E01011066) == 0;
    if (v6 && (v5 - 70 <= 0xD ? (v8 = ((1 << (v5 - 70)) & 0x2803) == 0) : (v8 = 1), v8 && v5 - 19 > 4))
      v7 = 0;
    else
      v7 = sub_22EFCAE04(a2);
    result = sub_22E942710(a1, v7);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v10 = *v9;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v12 = *(_QWORD *)v11 + 8 * *(unsigned int *)(v11 + 8);
      }
      else
      {
        v12 = 0;
      }
      if (v10 == v12)
      {
        return 1;
      }
      else
      {
        v13 = v10 + 8;
        do
        {
          result = sub_22E9427AC(a1, *(_QWORD *)(v13 - 8));
          if ((_DWORD)result)
            v14 = v13 == v12;
          else
            v14 = 1;
          v13 += 8;
        }
        while (!v14);
      }
    }
  }
  return result;
}

uint64_t sub_22E933EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  uint64_t result;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  if (!*(_DWORD *)(a2 + 96))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 80);
  v5 = (unint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (unint64_t *)*v5;
  result = sub_22E940604(a1, *v5, (uint64_t)(v5 + 1));
  if ((_DWORD)result)
  {
LABEL_5:
    v7 = *(_DWORD *)(a2 + 28) & 0x7F;
    v8 = v7 > 0x39 || ((1 << v7) & 0x3F0003E01011066) == 0;
    if (v8 && (v7 - 70 <= 0xD ? (v10 = ((1 << (v7 - 70)) & 0x2803) == 0) : (v10 = 1), v10 && v7 - 19 > 4))
      v9 = 0;
    else
      v9 = sub_22EFCAE04(a2);
    result = sub_22E942710(a1, v9);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v12 = *v11;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v14 = *(_QWORD *)v13 + 8 * *(unsigned int *)(v13 + 8);
      }
      else
      {
        v14 = 0;
      }
      if (v12 == v14)
      {
        return 1;
      }
      else
      {
        v15 = v12 + 8;
        do
        {
          result = sub_22E9427AC(a1, *(_QWORD *)(v15 - 8));
          if ((_DWORD)result)
            v16 = v15 == v14;
          else
            v16 = 1;
          v15 += 8;
        }
        while (!v16);
      }
    }
  }
  return result;
}

uint64_t sub_22E933FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unsigned int v5;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD v17[10];

  v17[8] = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    if (a3)
    {
      v4 = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v5 = *(_DWORD *)(a3 + 8);
      if (v5 >= *(_DWORD *)(a3 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v5 = *(_DWORD *)(a3 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a3 + 8 * v5) = v4;
      ++*(_DWORD *)(a3 + 8);
    }
    else
    {
      v17[0] = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v16 = 0x800000001;
      v7 = 1;
      do
      {
        v8 = v7;
        v9 = &v17[v7];
        v10 = *(v9 - 1);
        if ((v10 & 4) != 0)
        {
          v7 = v8 - 1;
          LODWORD(v16) = v8 - 1;
        }
        else
        {
          *(v9 - 1) = v10 | 4;
          v11 = *(unsigned __int8 *)(v10 & 0xFFFFFFFFFFFFFFF8) - 1;
          if (v11 <= 0xEB)
            __asm { BR              X9 }
          v7 = v16;
          if ((_DWORD)v8 != (_DWORD)v16)
          {
            v12 = &v17[v16 - 1];
            if (&v17[v8] < v12)
            {
              v13 = &v17[v8 + 1];
              do
              {
                v14 = *(v13 - 1);
                *(v13 - 1) = *v12;
                *v12-- = v14;
              }
              while (v13++ < v12);
            }
          }
        }
      }
      while (v7);
    }
  }
  return 1;
}

uint64_t sub_22E940424(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  __int128 v11;
  uint64_t v12;

  result = sub_22E9404C4(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  if ((_DWORD)result)
  {
    v11 = *(_OWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 40);
    result = sub_22E94054C(a1, (uint64_t *)&v11);
    if ((_DWORD)result)
    {
      v5 = *(_QWORD *)(a2 + 64);
      if (v5 && (v6 = *(unsigned int *)(v5 + 8), (_DWORD)v6))
      {
        v7 = v5 + 16;
        v8 = v6 - 1;
        do
        {
          result = sub_22E9413A0(a1, v7);
          v10 = v8-- != 0;
          if (!(_DWORD)result)
            break;
          v7 += 32;
        }
        while (v10);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_22E9404C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a2;
  v9[1] = a3;
  if (!a2)
    return 1;
  v5 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v5 || (result = sub_22E9404C4(a1, v5), (_DWORD)result))
  {
    if (*(_QWORD *)(a2 + 16) && (*(_BYTE *)(a2 + 8) & 4) != 0)
    {
      v7 = sub_22F0AB4E0((uint64_t)v9);
      return sub_22E940604(a1, v7, v8);
    }
    return 1;
  }
  return result;
}

uint64_t sub_22E94054C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  int v9;
  unint64_t v10;

  v2 = *a2;
  v3 = *a2 & 7;
  v4 = v3;
  if ((_DWORD)v3 == 7)
  {
    v5 = *(_DWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
    if (v5 >= 3)
      v5 = 3;
    v4 = v5 | 8;
  }
  if ((v4 - 3) < 3)
  {
    if ((v3 - 3) <= 2)
    {
      v6 = (_QWORD *)a2[2];
      if (v6)
      {
        if ((sub_22E940604(a1, *v6, v6 + 1) & 1) == 0)
          return 0;
      }
    }
    return 1;
  }
  if (v4 != 8)
    return 1;
  if ((~(_BYTE)v2 & 7) != 0)
    goto LABEL_15;
  v8 = v2 & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_DWORD *)v8;
  if (*(_DWORD *)v8 >= 3u)
    v9 = 3;
  if (v9)
LABEL_15:
    v10 = 0;
  else
    v10 = *(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFFF9;
  result = sub_22E9412DC(a1, v10);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22E940604(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v10;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _DWORD *v53;
  uint64_t v54;
  unint64_t *v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD *v65;
  char v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;

  if (a2)
  {
    v4 = a2;
    do
    {
      v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      if ((v4 & 0xF) != 0)
      {
LABEL_4:
        if ((v6 & 0xFFFFFFFFFFFFFFF0) != 0)
          v7 = *(_QWORD *)((char *)&unk_22F4656A0
                         + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
        else
          v7 = 1;
        a3 = (a3 + v7 - 1) & -v7;
        v4 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      }
      else
      {
        result = 1;
        switch(*(_BYTE *)(v6 + 16))
        {
          case 0:
          case 1:
          case 0x16:
          case 0x17:
          case 0x36:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 - 1;
            goto LABEL_62;
          case 2:
          case 3:
          case 4:
          case 5:
            v21 = *(_QWORD *)(v4 + 32);
            if (v21 >= 0x10 && (*(_QWORD *)(v4 + 32) & 0xFLL) == 0)
              v74 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v74 = 1;
            result = sub_22E940604(a1, v21, (a3 + v74 + 15) & -v74);
            if (!(_DWORD)result)
              return result;
            v23 = *(_QWORD *)(a3 + 8);
            return sub_22E933FF8(a1, v23, 0);
          case 6:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 11;
            goto LABEL_62;
          case 7:
          case 0x25:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 7;
            goto LABEL_62;
          case 8:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = v20 + a3;
            goto LABEL_62;
          case 0xA:
          case 0x20:
          case 0x24:
          case 0x26:
          case 0x27:
          case 0x28:
          case 0x29:
            v4 = *(_QWORD *)(v4 + 32);
            goto LABEL_9;
          case 0xC:
          case 0x37:
          case 0x38:
            goto LABEL_76;
          case 0xD:
          case 0x30:
            v23 = *(_QWORD *)(v4 + 24);
            return sub_22E933FF8(a1, v23, 0);
          case 0xE:
            result = sub_22E940D6C(a1, *(_QWORD *)(v4 + 24));
            if (!(_DWORD)result)
              return result;
            if (!*(_QWORD *)(v4 + 40))
              return 1;
            result = sub_22E9404C4(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 16));
            if (!(_DWORD)result)
              return result;
            v25 = *(_DWORD *)(a3 + 28);
            v75 = *(_QWORD *)(*(_QWORD *)(v4 + 40) + 40);
            v76 = v25;
            sub_22EFC6DC4((uint64_t)&v77, v75);
            result = sub_22E94054C(a1, &v75);
            if (!(_DWORD)result)
              return result;
            v26 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v26)
              return 1;
            v27 = v4 + 48;
            v28 = (uint64_t *)(a3 + 56);
            v29 = v26 - 1;
            do
            {
              v30 = *v28++;
              v78 = *(_OWORD *)v27;
              v79 = *(_QWORD *)(v27 + 16);
              v80 = v30;
              result = sub_22E9413A0(a1, (uint64_t)&v78);
              v31 = v29-- != 0;
              v32 = v31;
              if (!(_DWORD)result)
                break;
              v27 += 24;
            }
            while ((v32 & 1) != 0);
            return result;
          case 0xF:
            result = sub_22E9412DC(a1, *(_QWORD *)(v4 + 40));
            if (!(_DWORD)result)
              return result;
            v24 = *(_QWORD *)(v4 + 24);
            return sub_22E940D6C(a1, v24);
          case 0x10:
            v33 = *(_QWORD *)(v4 + 40);
            goto LABEL_96;
          case 0x11:
            v23 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
            return sub_22E933FF8(a1, v23, 0);
          case 0x12:
            return sub_22E9404C4(a1, *(_QWORD *)(v4 + 32), *(_QWORD *)(a3 + 8));
          case 0x13:
            v33 = *(_QWORD *)(v4 + 40);
            if (!v33)
              goto LABEL_97;
LABEL_96:
            result = sub_22E933FF8(a1, v33, 0);
            if (!(_DWORD)result)
              return result;
LABEL_97:
            v24 = *(_QWORD *)(v4 + 48);
            return sub_22E940D6C(a1, v24);
          case 0x14:
            v34 = *(_QWORD *)(a3 + 8);
            if (v34)
            {
              v35 = *(_QWORD *)(v4 + 32);
              if (v35)
              {
                result = sub_22E9404C4(a1, v35, v34);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v36 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v36)
              return 1;
            v37 = v4 + 48;
            v38 = (uint64_t *)(a3 + 32);
            v39 = v36 - 1;
            do
            {
              v40 = *v38++;
              v78 = *(_OWORD *)v37;
              v79 = *(_QWORD *)(v37 + 16);
              v80 = v40;
              result = sub_22E9413A0(a1, (uint64_t)&v78);
              v31 = v39-- != 0;
              v41 = v31;
              if (!(_DWORD)result)
                break;
              v37 += 24;
            }
            while ((v41 & 1) != 0);
            return result;
          case 0x15:
            v42 = *(_QWORD *)(v4 + 48);
            if (v42)
            {
              result = sub_22E933FF8(a1, v42, 0);
              if (!(_DWORD)result)
                return result;
            }
            v24 = *(_QWORD *)(v4 + 40);
            return sub_22E940D6C(a1, v24);
          case 0x18:
            v17 = *(_QWORD *)(v4 + 32);
            if (v17)
            {
              result = sub_22E9404C4(a1, v17, *(_QWORD *)(a3 + 8));
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 40);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              goto LABEL_60;
            v20 = 1;
            goto LABEL_61;
          case 0x19:
            *(_QWORD *)&v78 = v4;
            *((_QWORD *)&v78 + 1) = a3;
            v43 = *(_QWORD *)(v4 + 24);
            v44 = sub_22E47EE80(&v78);
            return sub_22E940604(a1, v43, v44);
          case 0x1A:
            *(_QWORD *)&v78 = v4;
            *((_QWORD *)&v78 + 1) = a3;
            v45 = *(_QWORD *)(v4 + 24);
            v46 = sub_22E47EE80(&v78);
            result = sub_22E940604(a1, v45, v46);
            if (!(_DWORD)result)
              return result;
            v47 = v78;
            v48 = *(_QWORD *)(v78 + 16);
            if (*(_BYTE *)(v78 + 16) == 25 || (v48 & 0x3FFFC000000000) == 0)
              goto LABEL_126;
            v50 = 0;
            v51 = (unsigned __int16)(v48 >> 38);
            do
            {
              v52 = *(_QWORD *)(*((_QWORD *)&v78 + 1) + 8 * v50 + 16);
              if (v52)
              {
                if ((sub_22E92FEE0(a1, v52) & 1) == 0)
                  return 0;
              }
              else if (v50 < (unsigned __int16)(*(_QWORD *)(v47 + 16) >> 38))
              {
                result = sub_22E940D6C(a1, *(_QWORD *)(v47 + 40 + 8 * v50));
                if (!(_DWORD)result)
                  return result;
              }
              ++v50;
            }
            while (v51 != v50);
            v48 = *(_QWORD *)(v47 + 16);
LABEL_126:
            if ((v48 & 0x3C0000000000000) == 0x80000000000000)
            {
              v53 = (_DWORD *)((v47 + 8 * (unsigned __int16)(v48 >> 38) + 4 * ((v48 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
              v56 = *v53;
              v55 = (unint64_t *)(v53 + 2);
              v54 = v56;
              if (v56)
              {
                v57 = 8 * v54;
                while ((sub_22E940D6C(a1, *v55) & 1) != 0)
                {
                  ++v55;
                  v57 -= 8;
                  if (!v57)
                    goto LABEL_131;
                }
                return 0;
              }
            }
LABEL_131:
            v58 = sub_22F257D3C(v47);
            if (!v58)
              return 1;
            result = sub_22E933FF8(a1, v58, 0);
            if ((_DWORD)result)
              return 1;
            return result;
          case 0x1C:
            v4 = *(_QWORD *)(v4 + 24);
LABEL_9:
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 3;
            goto LABEL_62;
          case 0x1D:
          case 0x1E:
            result = sub_22E933FF8(a1, *(_QWORD *)(a3 + 16), 0);
            if (!(_DWORD)result)
              return result;
            result = sub_22E933FF8(a1, *(_QWORD *)(a3 + 24), 0);
            if (!(_DWORD)result)
              return result;
LABEL_76:
            v24 = *(_QWORD *)(v4 + 32);
            return sub_22E940D6C(a1, v24);
          case 0x1F:
            v19 = *(_QWORD **)(a3 + 8);
            if (v19)
            {
              if ((sub_22E940604(a1, *v19, v19 + 1) & 1) == 0)
                return 0;
            }
            else
            {
              result = sub_22E940D6C(a1, *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0);
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 32);
            v20 = 1;
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
LABEL_60:
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
LABEL_61:
            v10 = a3 + v20 + 15;
LABEL_62:
            a3 = v10 & -v20;
            break;
          case 0x21:
            v59 = *(_QWORD *)(v4 + 24);
            v60 = *(_QWORD *)(v59 & 0xFFFFFFFFFFFFFFF0);
            if (v60 != v4)
            {
              v61 = 1;
              if (v59 >= 0x10 && (v59 & 0xF) == 0)
                v61 = *(_QWORD *)((char *)&unk_22F4656A0
                                + ((uint64_t)((unint64_t)*(unsigned int *)(v60 + 16) << 56) >> 53));
              result = sub_22E940604(a1, v59, (a3+ (((HIWORD(*(_DWORD *)(v4 + 16)) & 0x3F8) + 4 * (*(_DWORD *)(v4 + 16) >> 26) + 31) & 0x7F8)+ v61- 1) & -v61);
              if (!(_DWORD)result)
                return result;
            }
            v62 = (*(_DWORD *)(v4 + 16) >> 19) & 0x7F;
            if (!(_DWORD)v62)
              return 1;
            v63 = (_QWORD *)(a3 + 24);
            v64 = v62 - 1;
            do
            {
              v65 = (_QWORD *)*v63++;
              result = sub_22E940604(a1, *v65, v65 + 1);
              v31 = v64-- != 0;
              v66 = v31;
            }
            while ((_DWORD)result && (v66 & 1) != 0);
            return result;
          case 0x2A:
            v67 = *(_DWORD *)(v4 + 20);
            *((_QWORD *)&v78 + 1) = *(_QWORD *)(v4 + 40);
            LODWORD(v78) = 8;
            DWORD1(v78) = v67;
            return sub_22E941210(a1, (uint64_t)&v78);
          case 0x2B:
            v24 = *(_QWORD *)(v4 + 8);
            return sub_22E940D6C(a1, v24);
          case 0x2E:
            result = sub_22E9412DC(a1, *(_QWORD *)(v4 + 32));
            if (!(_DWORD)result)
              return result;
            v68 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v68)
              return 1;
            v69 = v4 + 40;
            v70 = (uint64_t *)(a3 + 16);
            v71 = v68 - 1;
            do
            {
              v72 = *v70++;
              v78 = *(_OWORD *)v69;
              v79 = *(_QWORD *)(v69 + 16);
              v80 = v72;
              result = sub_22E9413A0(a1, (uint64_t)&v78);
              v31 = v71-- != 0;
              v73 = v31;
              if (!(_DWORD)result)
                break;
              v69 += 24;
            }
            while ((v73 & 1) != 0);
            return result;
          case 0x31:
          case 0x33:
            v13 = *(unint64_t **)(a3 + 16);
            v14 = *v13;
            a3 = (uint64_t)(v13 + 1);
            v4 = v14;
            break;
          case 0x39:
            goto LABEL_4;
          default:
            return result;
        }
      }
    }
    while (v4);
  }
  return 1;
}

uint64_t sub_22E940D6C(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _DWORD v46[2];
  uint64_t v47;

  if (a2 < 0x10)
    return 1;
  while (2)
  {
    v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    v5 = *(_DWORD *)(v4 + 16);
    result = 1;
    switch((char)v5)
    {
      case 0:
      case 1:
      case 4:
      case 6:
      case 7:
      case 8:
      case 10:
      case 12:
      case 29:
      case 32:
      case 36:
      case 37:
      case 38:
      case 39:
      case 54:
      case 55:
      case 56:
        goto LABEL_5;
      case 2:
        result = sub_22E940D6C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        if ((*(_BYTE *)(v4 + 19) & 2) == 0)
          return 1;
        v14 = *(_QWORD *)(v4 + 56);
        if (!v14)
          return 1;
        goto LABEL_49;
      case 3:
        result = sub_22E940D6C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v14 = *(_QWORD *)(v4 + 48);
        if (v14)
          goto LABEL_49;
        return 1;
      case 5:
        result = sub_22E940D6C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v13 = *(_QWORD *)(v4 + 40);
        return sub_22E933FF8(a1, v13, 0);
      case 13:
      case 48:
        v13 = *(_QWORD *)(v4 + 24);
        return sub_22E933FF8(a1, v13, 0);
      case 14:
        result = sub_22E940D6C(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        v15 = *(_QWORD *)(v4 + 40);
        if (!v15)
          return 1;
        result = sub_22E92FEE0(a1, v15);
        if (!(_DWORD)result)
          return result;
        v16 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v16)
          return 1;
        v17 = v4 + 48;
        v18 = v16 - 1;
        do
        {
          result = sub_22E941210(a1, v17);
          v19 = v18-- != 0;
          v20 = v19;
          if (!(_DWORD)result)
            break;
          v17 += 24;
        }
        while ((v20 & 1) != 0);
        return result;
      case 15:
        result = sub_22E9412DC(a1, *(_QWORD *)(v4 + 40));
        if ((_DWORD)result)
          goto LABEL_19;
        return result;
      case 16:
        v7 = *(_QWORD *)(v4 + 40);
        goto LABEL_22;
      case 17:
        v13 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
        return sub_22E933FF8(a1, v13, 0);
      case 18:
        return sub_22E94133C(a1, *(_QWORD *)(v4 + 32));
      case 19:
        v7 = *(_QWORD *)(v4 + 40);
        if (!v7)
          goto LABEL_23;
LABEL_22:
        result = sub_22E933FF8(a1, v7, 0);
        if (!(_DWORD)result)
          return result;
LABEL_23:
        v6 = (unint64_t *)(v4 + 48);
        goto LABEL_6;
      case 20:
        result = sub_22E94133C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v21 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v21)
          return 1;
        v22 = v4 + 48;
        v23 = v21 - 1;
        do
        {
          result = sub_22E941210(a1, v22);
          v19 = v23-- != 0;
          v24 = v19;
          if (!(_DWORD)result)
            break;
          v22 += 24;
        }
        while ((v24 & 1) != 0);
        return result;
      case 21:
        v8 = *(_QWORD *)(v4 + 48);
        if (v8)
        {
          result = sub_22E933FF8(a1, v8, 0);
          if (!(_DWORD)result)
            return result;
        }
        goto LABEL_31;
      case 22:
        goto LABEL_34;
      case 23:
        v9 = *(_QWORD *)(v4 + 64);
        if (!v9)
          goto LABEL_5;
        goto LABEL_35;
      case 24:
        v10 = *(_QWORD *)(v4 + 32);
        if (v10)
        {
          result = sub_22E94133C(a1, v10);
          if (!(_DWORD)result)
            return result;
        }
LABEL_31:
        v6 = (unint64_t *)(v4 + 40);
        goto LABEL_6;
      case 25:
      case 28:
      case 49:
LABEL_19:
        v6 = (unint64_t *)(v4 + 24);
        goto LABEL_6;
      case 26:
        result = sub_22E940D6C(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        v25 = *(_QWORD *)(v4 + 16);
        v26 = (unsigned __int16)(v25 >> 38);
        if (!(unsigned __int16)(v25 >> 38))
          goto LABEL_82;
        v27 = 8 * v26;
        v28 = (_QWORD *)(v4 + 40);
        break;
      case 30:
        v11 = *(_QWORD *)(v4 + 48);
        if (v11)
        {
          result = sub_22E933FF8(a1, v11, 0);
          if (!(_DWORD)result)
            return result;
        }
LABEL_34:
        v9 = *(_QWORD *)(v4 + 56);
        if (!v9)
          goto LABEL_5;
LABEL_35:
        result = sub_22E933FF8(a1, v9, 0);
        if (!(_DWORD)result)
          return result;
LABEL_5:
        v6 = (unint64_t *)(v4 + 32);
LABEL_6:
        a2 = *v6;
        if (*v6 < 0x10)
          return 1;
        continue;
      case 31:
        v12 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_40;
      case 33:
        v35 = *(_QWORD *)(v4 + 24);
        if (*(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0) != v4)
        {
          result = sub_22E940D6C(a1, v35);
          if (!(_DWORD)result)
            return result;
        }
        v36 = (*(_QWORD *)(v4 + 16) >> 19) & 0x7FLL;
        if (!v36)
          return 1;
        v37 = (uint64_t *)(v4 + 48);
        v38 = 8 * v36 - 8;
        do
        {
          v39 = *v37++;
          result = sub_22E940D6C(a1, v39);
          if ((_DWORD)result)
            v40 = v38 == 0;
          else
            v40 = 1;
          v38 -= 8;
        }
        while (!v40);
        return result;
      case 40:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 41:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 42:
        v41 = *(_DWORD *)(v4 + 20);
        v47 = *(_QWORD *)(v4 + 40);
        v46[0] = 8;
        v46[1] = v41;
        return sub_22E941210(a1, (uint64_t)v46);
      case 43:
        v6 = (unint64_t *)(v4 + 8);
        goto LABEL_6;
      case 46:
        result = sub_22E9412DC(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v42 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v42)
          return 1;
        v43 = v4 + 40;
        v44 = v42 - 1;
        do
        {
          result = sub_22E941210(a1, v43);
          v19 = v44-- != 0;
          v45 = v19;
          if (!(_DWORD)result)
            break;
          v43 += 24;
        }
        while ((v45 & 1) != 0);
        return result;
      case 51:
        v12 = *(_QWORD *)(v4 + 24);
LABEL_40:
        result = sub_22E940D6C(a1, v12);
        if (!(_DWORD)result)
          return result;
        goto LABEL_5;
      default:
        return result;
    }
    break;
  }
  do
  {
    if ((sub_22E940D6C(a1, *v28) & 1) == 0)
      return 0;
    ++v28;
    v27 -= 8;
  }
  while (v27);
  v25 = *(_QWORD *)(v4 + 16);
  v26 = (unsigned __int16)(v25 >> 38);
LABEL_82:
  if ((v25 & 0x3C0000000000000) == 0x80000000000000)
  {
    v29 = (_DWORD *)((v4 + 40 + 8 * v26 + 4 * ((v25 >> 59) & 1) + 7) & 0xFFFFFFFFFFFFFFF8);
    v32 = *v29;
    v31 = v29 + 2;
    v30 = v32;
    if (v32)
    {
      v33 = 8 * v30;
      while ((sub_22E940D6C(a1, *v31) & 1) != 0)
      {
        ++v31;
        v33 -= 8;
        if (!v33)
          goto LABEL_87;
      }
      return 0;
    }
  }
LABEL_87:
  v34 = sub_22F257D3C(v4);
  if (!v34)
    return 1;
  v14 = v34;
LABEL_49:
  result = sub_22E933FF8(a1, v14, 0);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22E941210(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      result = sub_22E940D6C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      result = sub_22E9412DC(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 8), 0);
      break;
    case 8:
      v4 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v4)
      {
        v5 = *(_QWORD *)(a2 + 8);
        v6 = v4 - 1;
        do
        {
          result = sub_22E941210(a1, v5);
          v8 = v6-- != 0;
          if (!(_DWORD)result)
            break;
          v5 += 24;
        }
        while (v8);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22E9412DC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  char v5;

  v2 = a2 & 0xFFFFFFFFFFFFFFF8;
  if ((a2 & 6) != 6 || v2 == 0)
  {
    if ((a2 & 6) != 4)
      return 1;
    if (!v2)
      return 1;
    result = sub_22E94133C(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    if ((_DWORD)result)
      return 1;
  }
  else
  {
    v5 = sub_22E94133C(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    return (v5 & 1) != 0;
  }
  return result;
}

uint64_t sub_22E94133C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 1;
  v4 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v4 || (result = sub_22E94133C(a1, v4), (_DWORD)result))
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 && (*(_BYTE *)(a2 + 8) & 4) != 0)
      return sub_22E940D6C(a1, v6 & 0xFFFFFFFFFFFFFFF0);
    return 1;
  }
  return result;
}

uint64_t sub_22E9413A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      v6 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (v6)
        result = sub_22E940604(a1, *v6, v6 + 1);
      else
        result = sub_22E940D6C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      v5 = (uint64_t *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (!*v5 || (result = sub_22E9404C4(a1, *v5, v5[1]), (_DWORD)result))
        result = sub_22E9412DC(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL, 0);
      break;
    case 8:
      v7 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        v9 = v7 - 1;
        do
        {
          result = sub_22E941210(a1, v8);
          v11 = v9-- != 0;
          if (!(_DWORD)result)
            break;
          v8 += 24;
        }
        while (v11);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22E9414B8(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *mm;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *i2;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *n;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *ii;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *nn;
  uint64_t v79;
  uint64_t v80;
  _QWORD *i1;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *i;
  uint64_t v92;
  uint64_t v93;
  _QWORD *j;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *jj;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *kk;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *k;
  uint64_t v175;
  uint64_t v176;
  _QWORD *m;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  __int128 v208;
  uint64_t v209;

  if (!a2)
    return 1;
  switch(*(_DWORD *)(a2 + 8))
  {
    case 3:
      v85 = (_QWORD *)(a2 + 24);
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if ((_DWORD)result)
      {
        v86 = *(unsigned int *)(a2 + 16);
        if (!(_DWORD)v86)
          return 1;
        v87 = 8 * v86;
        do
        {
          if ((sub_22E933FF8(a1, *v85, 0) & 1) == 0)
            return 0;
          ++v85;
          v87 -= 8;
        }
        while (v87);
        return 1;
      }
      return result;
    case 4:
    case 7:
    case 0xC:
    case 0x13:
    case 0x15:
    case 0x23:
    case 0x3C:
    case 0x3D:
    case 0x46:
    case 0x4B:
      v5 = *(_QWORD *)(a2 + 16);
      return (sub_22E933FF8(a1, v5, 0) & 1) != 0;
    case 5:
      v137 = (_QWORD *)(a2 + 24);
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if (!(_DWORD)result)
        return result;
      v138 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v138)
        return 1;
      v139 = 8 * v138;
      while ((sub_22E933FF8(a1, *v137, 0) & 1) != 0)
      {
        ++v137;
        v139 -= 8;
        if (!v139)
          return 1;
      }
      return 0;
    case 6:
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 24), 0);
      if (!(_DWORD)result)
        return result;
      v134 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v134)
        return 1;
      v135 = (_QWORD *)(a2 + 40);
      v136 = 8 * v134;
      while ((sub_22E933FF8(a1, *v135, 0) & 1) != 0)
      {
        ++v135;
        v136 -= 8;
        if (!v136)
          return 1;
      }
      return 0;
    case 0xE:
      v88 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v88)
        return 1;
      v89 = a2 + 24;
      v90 = 8 * v88;
      for (i = (_QWORD *)(a2 + 24); (sub_22E933FF8(a1, *i, 0) & 1) != 0; ++i)
      {
        v90 -= 8;
        if (!v90)
        {
          v92 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v92)
            return 1;
          v93 = 8 * v92;
          for (j = (_QWORD *)(v89 + 8 * v92); (sub_22E933FF8(a1, *j, 0) & 1) != 0; ++j)
          {
            v93 -= 8;
            if (!v93)
            {
              v95 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v95)
                return 1;
              v96 = (_QWORD *)(v89 + 8 * v95 + 8 * v95);
              v97 = 8 * v95;
              while ((sub_22E933FF8(a1, *v96, 0) & 1) != 0)
              {
                ++v96;
                v97 -= 8;
                if (!v97)
                {
                  v98 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v98)
                    return 1;
                  v99 = (_QWORD *)(v89 + 8 * v98 + 8 * v98 + 8 * v98);
                  v100 = 8 * v98;
                  while ((sub_22E933FF8(a1, *v99, 0) & 1) != 0)
                  {
                    ++v99;
                    v100 -= 8;
                    if (!v100)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0xF:
      v171 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v171)
        return 1;
      v172 = a2 + 24;
      v173 = 8 * v171;
      for (k = (_QWORD *)(a2 + 24); (sub_22E933FF8(a1, *k, 0) & 1) != 0; ++k)
      {
        v173 -= 8;
        if (!v173)
        {
          v175 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v175)
            return 1;
          v176 = 8 * v175;
          for (m = (_QWORD *)(v172 + 8 * v175); (sub_22E933FF8(a1, *m, 0) & 1) != 0; ++m)
          {
            v176 -= 8;
            if (!v176)
            {
              v178 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v178)
                return 1;
              v179 = (_QWORD *)(v172 + 8 * v178 + 8 * v178);
              v180 = 8 * v178;
              while ((sub_22E933FF8(a1, *v179, 0) & 1) != 0)
              {
                ++v179;
                v180 -= 8;
                if (!v180)
                {
                  v181 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v181)
                    return 1;
                  v182 = (_QWORD *)(v172 + 8 * v181 + 8 * v181 + 8 * v181);
                  v183 = 8 * v181;
                  while ((sub_22E933FF8(a1, *v182, 0) & 1) != 0)
                  {
                    ++v182;
                    v183 -= 8;
                    if (!v183)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x12:
      v184 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v184)
        return 1;
      v185 = (_QWORD *)(a2 + 40);
      v186 = 8 * v184;
      while ((sub_22E933FF8(a1, *v185, 0) & 1) != 0)
      {
        ++v185;
        v186 -= 8;
        if (!v186)
          return 1;
      }
      return 0;
    case 0x14:
    case 0x58:
      v5 = *(_QWORD *)(a2 + 24);
      return (sub_22E933FF8(a1, v5, 0) & 1) != 0;
    case 0x16:
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 40);
      return (sub_22E933FF8(a1, v5, 0) & 1) != 0;
    case 0x18:
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 48);
      return (sub_22E933FF8(a1, v5, 0) & 1) != 0;
    case 0x1A:
      v193 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v193)
        return 1;
      v194 = (_QWORD *)(a2 + 24);
      v195 = 8 * v193;
      while ((sub_22E933FF8(a1, *v194, 0) & 1) != 0)
      {
        ++v194;
        v195 -= 8;
        if (!v195)
          return 1;
      }
      return 0;
    case 0x1B:
    case 0x1C:
    case 0x21:
    case 0x24:
    case 0x34:
    case 0x37:
    case 0x38:
    case 0x39:
    case 0x3A:
    case 0x3E:
    case 0x4E:
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 32);
      return (sub_22E933FF8(a1, v5, 0) & 1) != 0;
    case 0x1D:
      v40 = a2 + 40;
      v41 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v41)
        goto LABEL_72;
      v42 = 8 * v41;
      v43 = (_QWORD *)(a2 + 40);
      while ((sub_22E933FF8(a1, *v43, 0) & 1) != 0)
      {
        ++v43;
        v42 -= 8;
        if (!v42)
        {
LABEL_72:
          result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          v44 = *(unsigned int *)(a2 + 16);
          if ((_DWORD)v44)
          {
            v45 = 8 * v44;
            for (n = (_QWORD *)(v40 + 8 * v44); (sub_22E933FF8(a1, *n, 0) & 1) != 0; ++n)
            {
              v45 -= 8;
              if (!v45)
              {
                v47 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v47)
                  return 1;
                v48 = (_QWORD *)(v40 + 8 * v47 + 8 * v47);
                v49 = 8 * v47;
                while ((sub_22E933FF8(a1, *v48, 0) & 1) != 0)
                {
                  ++v48;
                  v49 -= 8;
                  if (!v49)
                    return 1;
                }
                return 0;
              }
            }
            return 0;
          }
          return 1;
        }
      }
      return 0;
    case 0x1E:
      v82 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v82)
        return 1;
      v83 = (_QWORD *)(a2 + 24);
      v84 = 8 * v82;
      while ((sub_22E933FF8(a1, *v83, 0) & 1) != 0)
      {
        ++v83;
        v84 -= 8;
        if (!v84)
          return 1;
      }
      return 0;
    case 0x1F:
      v187 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v187)
        return 1;
      v188 = (_QWORD *)(a2 + 104);
      v189 = 8 * v187;
      while ((sub_22E933FF8(a1, *v188, 0) & 1) != 0)
      {
        ++v188;
        v189 -= 8;
        if (!v189)
          return 1;
      }
      return 0;
    case 0x22:
      v199 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v199)
        return 1;
      v200 = (_QWORD *)(a2 + 80);
      v201 = 8 * v199;
      while ((sub_22E933FF8(a1, *v200, 0) & 1) != 0)
      {
        ++v200;
        v201 -= 8;
        if (!v201)
          return 1;
      }
      return 0;
    case 0x25:
      if (!sub_22E9404C4(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22E94054C(a1, (uint64_t *)&v208))
        return 0;
      v56 = a2 + 96;
      v57 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v57)
        goto LABEL_98;
      v58 = 8 * v57;
      v59 = (_QWORD *)(a2 + 96);
      while ((sub_22E933FF8(a1, *v59, 0) & 1) != 0)
      {
        ++v59;
        v58 -= 8;
        if (!v58)
        {
LABEL_98:
          if (sub_22E933FF8(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22E933FF8(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v60 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v60)
              return 1;
            v61 = 8 * v60;
            for (ii = (_QWORD *)(v56 + 8 * v60); (sub_22E933FF8(a1, *ii, 0) & 1) != 0; ++ii)
            {
              v61 -= 8;
              if (!v61)
              {
                v63 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v63)
                  return 1;
                v64 = (_QWORD *)(v56 + 8 * v63 + 8 * v63);
                v65 = 8 * v63;
                while ((sub_22E933FF8(a1, *v64, 0) & 1) != 0)
                {
                  ++v64;
                  v65 -= 8;
                  if (!v65)
                  {
                    v66 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v66)
                      return 1;
                    v67 = (_QWORD *)(v56 + 8 * v66 + 8 * v66 + 8 * v66);
                    v68 = 8 * v66;
                    while ((sub_22E933FF8(a1, *v67, 0) & 1) != 0)
                    {
                      ++v67;
                      v68 -= 8;
                      if (!v68)
                      {
                        v69 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v69)
                          return 1;
                        v70 = (_QWORD *)(v56 + 8 * v69 + 8 * v69 + 8 * v69 + 8 * v69);
                        v71 = 8 * v69;
                        while ((sub_22E933FF8(a1, *v70, 0) & 1) != 0)
                        {
                          ++v70;
                          v71 -= 8;
                          if (!v71)
                          {
                            v72 = *(unsigned int *)(a2 + 16);
                            if (!(_DWORD)v72)
                              return 1;
                            v73 = (_QWORD *)(v56 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72);
                            v74 = 8 * v72;
                            while ((sub_22E933FF8(a1, *v73, 0) & 1) != 0)
                            {
                              ++v73;
                              v74 -= 8;
                              if (!v74)
                                return 1;
                            }
                            return 0;
                          }
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x27:
      v168 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v168)
        return 1;
      v169 = (_QWORD *)(a2 + 24);
      v170 = 8 * v168;
      while ((sub_22E933FF8(a1, *v169, 0) & 1) != 0)
      {
        ++v169;
        v170 -= 8;
        if (!v170)
          return 1;
      }
      return 0;
    case 0x29:
      v53 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v53)
        return 1;
      v54 = (_QWORD *)(a2 + 32);
      v55 = 8 * v53;
      while ((sub_22E933FF8(a1, *v54, 0) & 1) != 0)
      {
        ++v54;
        v55 -= 8;
        if (!v55)
          return 1;
      }
      return 0;
    case 0x2A:
      v50 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v50)
        return 1;
      v51 = (_QWORD *)(a2 + 80);
      v52 = 8 * v50;
      while ((sub_22E933FF8(a1, *v51, 0) & 1) != 0)
      {
        ++v51;
        v52 -= 8;
        if (!v52)
          return 1;
      }
      return 0;
    case 0x2B:
      v101 = a2 + 64;
      v102 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v102)
        goto LABEL_164;
      v103 = 8 * v102;
      v104 = (_QWORD *)(a2 + 64);
      while ((sub_22E933FF8(a1, *v104, 0) & 1) != 0)
      {
        ++v104;
        v103 -= 8;
        if (!v103)
        {
LABEL_164:
          result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v105 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v105)
            return 1;
          v106 = 8 * v105;
          for (jj = (_QWORD *)(v101 + 8 * v105); (sub_22E933FF8(a1, *jj, 0) & 1) != 0; ++jj)
          {
            v106 -= 8;
            if (!v106)
            {
              v108 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v108)
                return 1;
              v109 = (_QWORD *)(v101 + 8 * v108 + 8 * v108);
              v110 = 8 * v108;
              while ((sub_22E933FF8(a1, *v109, 0) & 1) != 0)
              {
                ++v109;
                v110 -= 8;
                if (!v110)
                {
                  v111 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v111)
                    return 1;
                  v112 = (_QWORD *)(v101 + 8 * v111 + 8 * v111 + 8 * v111);
                  v113 = 8 * v111;
                  while ((sub_22E933FF8(a1, *v112, 0) & 1) != 0)
                  {
                    ++v112;
                    v113 -= 8;
                    if (!v113)
                    {
                      v114 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v114)
                        return 1;
                      v115 = (_QWORD *)(v101 + 8 * v114 + 8 * v114 + 8 * v114 + 8 * v114);
                      v116 = 8 * v114;
                      while ((sub_22E933FF8(a1, *v115, 0) & 1) != 0)
                      {
                        ++v115;
                        v116 -= 8;
                        if (!v116)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2C:
      v117 = a2 + 64;
      v118 = *(unsigned int *)(a2 + 16);
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 64 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118), 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22E933FF8(a1, *(_QWORD *)(v117+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8), 0);
      if (!(_DWORD)result)
        return result;
      v119 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v119)
        goto LABEL_191;
      v120 = 8 * v119;
      v121 = (_QWORD *)(a2 + 64);
      while ((sub_22E933FF8(a1, *v121, 0) & 1) != 0)
      {
        ++v121;
        v120 -= 8;
        if (!v120)
        {
LABEL_191:
          result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v122 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v122)
            return 1;
          v123 = 8 * v122;
          for (kk = (_QWORD *)(v117 + 8 * v122); (sub_22E933FF8(a1, *kk, 0) & 1) != 0; ++kk)
          {
            v123 -= 8;
            if (!v123)
            {
              v125 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v125)
                return 1;
              v126 = (_QWORD *)(v117 + 8 * v125 + 8 * v125);
              v127 = 8 * v125;
              while ((sub_22E933FF8(a1, *v126, 0) & 1) != 0)
              {
                ++v126;
                v127 -= 8;
                if (!v127)
                {
                  v128 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v128)
                    return 1;
                  v129 = (_QWORD *)(v117 + 8 * v128 + 8 * v128 + 8 * v128);
                  v130 = 8 * v128;
                  while ((sub_22E933FF8(a1, *v129, 0) & 1) != 0)
                  {
                    ++v129;
                    v130 -= 8;
                    if (!v130)
                    {
                      v131 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v131)
                        return 1;
                      v132 = (_QWORD *)(v117 + 8 * v131 + 8 * v131 + 8 * v131 + 8 * v131);
                      v133 = 8 * v131;
                      while ((sub_22E933FF8(a1, *v132, 0) & 1) != 0)
                      {
                        ++v132;
                        v133 -= 8;
                        if (!v133)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2E:
      v190 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v190)
        return 1;
      v191 = (_QWORD *)(a2 + 136);
      v192 = 8 * v190;
      while ((sub_22E933FF8(a1, *v191, 0) & 1) != 0)
      {
        ++v191;
        v192 -= 8;
        if (!v192)
          return 1;
      }
      return 0;
    case 0x35:
      v6 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v6)
        return 1;
      v7 = a2 + 24;
      v8 = 8 * v6;
      for (mm = (_QWORD *)(a2 + 24); (sub_22E933FF8(a1, *mm, 0) & 1) != 0; ++mm)
      {
        v8 -= 8;
        if (!v8)
        {
          v10 = *(unsigned int *)(a2 + 16);
          v11 = (uint64_t *)(v7 + 8 * v10);
          v208 = (unint64_t)v11;
          if ((_DWORD)v10)
          {
            v12 = 0;
            v13 = &v11[v10];
            while (1)
            {
              if ((v12 & 3) != 0)
              {
                if ((v12 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                  v14 = (_QWORD *)((v12 & 0xFFFFFFFFFFFFFFFCLL) + 40);
                else
                  v14 = (_QWORD *)sub_22F3AC1A8(*v11);
                if ((sub_22E933FF8(a1, *v14, 0) & 1) == 0)
                  return 0;
                if (v12 < 4)
                  sub_22F3F2FE0((uint64_t)&v208, 1);
                else
                  sub_22F0D8720((uint64_t)&v208);
              }
              else
              {
                if (!sub_22E933FF8(a1, *v11, 0))
                  return 0;
                *(_QWORD *)&v208 = v11 + 1;
              }
              v12 = *((_QWORD *)&v208 + 1);
              v11 = (uint64_t *)v208;
              if ((uint64_t *)v208 == v13 && *((_QWORD *)&v208 + 1) == 0)
                return 1;
            }
          }
          return 1;
        }
      }
      return 0;
    case 0x3F:
      v75 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v75)
        return 1;
      v76 = a2 + 24;
      v77 = 8 * v75;
      for (nn = (_QWORD *)(a2 + 24); (sub_22E933FF8(a1, *nn, 0) & 1) != 0; ++nn)
      {
        v77 -= 8;
        if (!v77)
        {
          v79 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v79)
            return 1;
          v80 = 8 * v79;
          for (i1 = (_QWORD *)(v76 + 8 * v79); (sub_22E933FF8(a1, *i1, 0) & 1) != 0; ++i1)
          {
            v80 -= 8;
            if (!v80)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 0x42:
      if (!sub_22E9404C4(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v208 = *(_OWORD *)(a2 + 80);
      v209 = *(_QWORD *)(a2 + 96);
      if (!sub_22E94054C(a1, (uint64_t *)&v208))
        return 0;
      v140 = a2 + 104;
      v141 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v141)
        goto LABEL_228;
      v142 = 8 * v141;
      v143 = (_QWORD *)(a2 + 104);
      while ((sub_22E933FF8(a1, *v143, 0) & 1) != 0)
      {
        ++v143;
        v142 -= 8;
        if (!v142)
        {
LABEL_228:
          if (sub_22E933FF8(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22E933FF8(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v144 = *(unsigned int *)(a2 + 16);
            if ((_DWORD)v144)
            {
              v145 = 8 * v144;
              v146 = (_QWORD *)(v140 + 8 * v144);
              while ((sub_22E933FF8(a1, *v146, 0) & 1) != 0)
              {
                ++v146;
                v145 -= 8;
                if (!v145)
                {
                  v147 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v147)
                    goto LABEL_246;
                  v148 = (_QWORD *)(v140 + 8 * v147 + 8 * v147);
                  v149 = 8 * v147;
                  while ((sub_22E933FF8(a1, *v148, 0) & 1) != 0)
                  {
                    ++v148;
                    v149 -= 8;
                    if (!v149)
                    {
                      v150 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v150)
                        goto LABEL_246;
                      v151 = (_QWORD *)(v140 + 8 * v150 + 8 * v150 + 8 * v150);
                      v152 = 8 * v150;
                      while ((sub_22E933FF8(a1, *v151, 0) & 1) != 0)
                      {
                        ++v151;
                        v152 -= 8;
                        if (!v152)
                        {
                          v153 = *(unsigned int *)(a2 + 16);
                          if (!(_DWORD)v153)
                            goto LABEL_246;
                          v154 = (_QWORD *)(v140 + 8 * v153 + 8 * v153 + 8 * v153 + 8 * v153);
                          v155 = 8 * v153;
                          while ((sub_22E933FF8(a1, *v154, 0) & 1) != 0)
                          {
                            ++v154;
                            v155 -= 8;
                            if (!v155)
                              goto LABEL_246;
                          }
                          return 0;
                        }
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
            else
            {
LABEL_246:
              if (*(_DWORD *)(a2 + 48) != 1)
                return 1;
              v156 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v156)
                return 1;
              v157 = (_QWORD *)(v140 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156);
              v158 = 8 * v156;
              while ((sub_22E933FF8(a1, *v157, 0) & 1) != 0)
              {
                ++v157;
                v158 -= 8;
                if (!v158)
                {
                  v159 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v159)
                    return 1;
                  v160 = (_QWORD *)(v140 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159);
                  v161 = 8 * v159;
                  while ((sub_22E933FF8(a1, *v160, 0) & 1) != 0)
                  {
                    ++v160;
                    v161 -= 8;
                    if (!v161)
                    {
                      v162 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v162)
                        return 1;
                      v163 = (_QWORD *)(v140 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162);
                      v164 = 8 * v162;
                      while ((sub_22E933FF8(a1, *v163, 0) & 1) != 0)
                      {
                        ++v163;
                        v164 -= 8;
                        if (!v164)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x47:
      result = sub_22E933FF8(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 64);
      return (sub_22E933FF8(a1, v5, 0) & 1) != 0;
    case 0x49:
      v202 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v202)
        return 1;
      v203 = (_QWORD *)(a2 + 24);
      v204 = 8 * v202;
      while ((sub_22E933FF8(a1, *v203, 0) & 1) != 0)
      {
        ++v203;
        v204 -= 8;
        if (!v204)
          return 1;
      }
      return 0;
    case 0x4C:
      v165 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v165)
        return 1;
      v166 = (_QWORD *)(a2 + 24);
      v167 = 8 * v165;
      while ((sub_22E933FF8(a1, *v166, 0) & 1) != 0)
      {
        ++v166;
        v167 -= 8;
        if (!v167)
          return 1;
      }
      return 0;
    case 0x4D:
      if (!sub_22E9404C4(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22E94054C(a1, (uint64_t *)&v208))
        return 0;
      v24 = a2 + 96;
      v25 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v25)
        goto LABEL_49;
      v26 = 8 * v25;
      v27 = (_QWORD *)(a2 + 96);
      while ((sub_22E933FF8(a1, *v27, 0) & 1) != 0)
      {
        ++v27;
        v26 -= 8;
        if (!v26)
        {
LABEL_49:
          if (sub_22E933FF8(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22E933FF8(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v28 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v28)
              return 1;
            v29 = 8 * v28;
            for (i2 = (_QWORD *)(v24 + 8 * v28); (sub_22E933FF8(a1, *i2, 0) & 1) != 0; ++i2)
            {
              v29 -= 8;
              if (!v29)
              {
                v31 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v31)
                  return 1;
                v32 = (_QWORD *)(v24 + 8 * v31 + 8 * v31);
                v33 = 8 * v31;
                while ((sub_22E933FF8(a1, *v32, 0) & 1) != 0)
                {
                  ++v32;
                  v33 -= 8;
                  if (!v33)
                  {
                    v34 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v34)
                      return 1;
                    v35 = (_QWORD *)(v24 + 8 * v34 + 8 * v34 + 8 * v34);
                    v36 = 8 * v34;
                    while ((sub_22E933FF8(a1, *v35, 0) & 1) != 0)
                    {
                      ++v35;
                      v36 -= 8;
                      if (!v36)
                      {
                        v37 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v37)
                          return 1;
                        v38 = (_QWORD *)(v24 + 8 * v37 + 8 * v37 + 8 * v37 + 8 * v37);
                        v39 = 8 * v37;
                        while ((sub_22E933FF8(a1, *v38, 0) & 1) != 0)
                        {
                          ++v38;
                          v39 -= 8;
                          if (!v39)
                            return 1;
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x51:
      v16 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v16)
        return 1;
      v17 = (_QWORD *)(a2 + 104);
      v18 = 8 * v16;
      while ((sub_22E933FF8(a1, *v17, 0) & 1) != 0)
      {
        ++v17;
        v18 -= 8;
        if (!v18)
          return 1;
      }
      return 0;
    case 0x59:
      v205 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v205)
        return 1;
      v206 = (_QWORD *)(a2 + 80);
      v207 = 8 * v205;
      while ((sub_22E933FF8(a1, *v206, 0) & 1) != 0)
      {
        ++v206;
        v207 -= 8;
        if (!v207)
          return 1;
      }
      return 0;
    case 0x5A:
      v196 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v196)
        return 1;
      v197 = (_QWORD *)(a2 + 80);
      v198 = 8 * v196;
      while ((sub_22E933FF8(a1, *v197, 0) & 1) != 0)
      {
        ++v197;
        v198 -= 8;
        if (!v198)
          return 1;
      }
      return 0;
    case 0x5B:
      v19 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v19)
        return 1;
      v20 = 0;
      v21 = a2 + 24;
      v22 = 2 * v19;
      break;
    default:
      return 1;
  }
  while (1)
  {
    v23 = *(_QWORD *)(v21 + 8 * (v20 + 1));
    result = sub_22E933FF8(a1, *(_QWORD *)(v21 + 8 * v20), 0);
    if (!(_DWORD)result)
      break;
    if ((sub_22E933FF8(a1, v23, 0) & 1) == 0)
      return 0;
    v20 += 2;
    if (v22 == v20)
      return 1;
  }
  return result;
}

uint64_t sub_22E94256C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;

  if (!a2)
    return 1;
  if (*a1 == a2)
    return 0;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  if (v5 == v4)
    v6 = 0;
  else
    v6 = *(uint64_t **)(a2 + 24);
  if (v5 == v4)
    v7 = 0;
  else
    v7 = *(uint64_t **)(a2 + 16);
  v14 = 0;
  v15 = 0;
  v13 = v7;
  if (v7 != v6)
  {
    v9 = 0;
    do
    {
      if ((v9 & 3) != 0)
      {
        if ((v9 & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v10 = (_QWORD *)((v9 & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v10 = (_QWORD *)sub_22F3AC1A8(*v7);
        if ((sub_22E933FF8(a1, *v10, a3) & 1) == 0)
          return 0;
        if (v9 < 4)
          sub_22F3F2FE0((uint64_t)&v13, 1);
        else
          sub_22F0D8720((uint64_t)&v13);
      }
      else
      {
        result = sub_22E933FF8(a1, *v7, a3);
        if (!(_DWORD)result)
          return result;
        v13 = v7 + 1;
      }
      v7 = v13;
      v9 = v14;
    }
    while (v13 != v6 || v14 != 0);
  }
  return 1;
}

uint64_t sub_22E942670(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  if (!a2)
    return 1;
  v4 = a2 + 16;
  v5 = *(_DWORD *)(a2 + 12);
  if ((v5 & 0x1FFFFFFF) != 0)
  {
    v6 = 8 * (v5 & 0x1FFFFFFF);
    v7 = (_QWORD *)(a2 + 16);
    while ((sub_22E92FEE0(a1, *v7) & 1) != 0)
    {
      ++v7;
      v6 -= 8;
      if (!v6)
      {
        v5 = *(_DWORD *)(a2 + 12);
        goto LABEL_7;
      }
    }
    return 0;
  }
  else
  {
LABEL_7:
    if ((v5 & 0x40000000) == 0)
      return 1;
    v8 = *(_QWORD *)(v4 + 8 * (v5 & 0x1FFFFFFF));
    if (!v8)
      return 1;
    result = sub_22E933FF8(a1, v8, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22E942710(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (!a2)
    return 1;
  if ((*(_WORD *)(a2 + 8) & 0x80) != 0)
    sub_22EFCC320(a2);
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 1;
  while (1)
  {
    if ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 1 >= 2
      && ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 > 2
       || (v5 = *(_QWORD *)(v4 + 128)) == 0
       || ((*(unsigned __int16 *)(v5 + 8) | (*(unsigned __int8 *)(v5 + 10) << 16)) & 0x100000) == 0))
    {
      result = sub_22E92FEE0(a1, v4);
      if (!(_DWORD)result)
        break;
    }
    v4 = *(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v4)
      return 1;
  }
  return result;
}

uint64_t sub_22E9427AC(uint64_t a1, uint64_t a2)
{
  if (a2)
    __asm { BR              X10 }
  return 1;
}

void sub_22E942830()
{
  uint64_t v0;
  uint64_t v1;

  if (sub_22E933FF8(v0, *(_QWORD *)(v1 + 40), 0))
    JUMPOUT(0x22E9427ECLL);
  JUMPOUT(0x22E942820);
}

void sub_22E94284C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v2 = *(unsigned int *)(v1 + 48);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2;
    while ((sub_22E933FF8(v0, *v3, 0) & 1) != 0)
    {
      ++v3;
      v4 -= 8;
      if (!v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v5 = *(unsigned int *)(v1 + 64);
    if (!(_DWORD)v5)
      JUMPOUT(0x22E94281CLL);
    v6 = *(uint64_t **)(v1 + 72);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22E933FF8(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E9429BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E9429F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E933FF8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E94281CLL);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942A78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if (sub_22E933FF8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 56);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 64);
      v4 = 8 * v2;
      do
      {
        if ((sub_22E933FF8(v0, *v3, 0) & 1) == 0)
          JUMPOUT(0x22E94297CLL);
        ++v3;
        v4 -= 8;
      }
      while (v4);
    }
    v5 = *(unsigned int *)(v1 + 72);
    if (!(_DWORD)v5)
      JUMPOUT(0x22E94281CLL);
    v6 = *(uint64_t **)(v1 + 80);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22E933FF8(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E933FF8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E94281CLL);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E933FF8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E94281CLL);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E933FF8(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E942820);
}

void sub_22E942C34()
{
  JUMPOUT(0x22E942808);
}

void sub_22E942C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  if (sub_22E933FF8(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 56);
      v4 = 8 * v2;
      while ((sub_22E933FF8(v0, *v3, 0) & 1) != 0)
      {
        ++v3;
        v4 -= 8;
        if (!v4)
          goto LABEL_6;
      }
LABEL_33:
      JUMPOUT(0x22E94297CLL);
    }
LABEL_6:
    v5 = *(unsigned int *)(v1 + 64);
    if ((_DWORD)v5)
    {
      v6 = *(uint64_t **)(v1 + 72);
      v7 = 8 * v5;
      while ((sub_22E933FF8(v0, *v6, 0) & 1) != 0)
      {
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_10;
      }
      goto LABEL_33;
    }
LABEL_10:
    v8 = *(unsigned int *)(v1 + 80);
    if ((_DWORD)v8)
    {
      v9 = *(uint64_t **)(v1 + 88);
      v10 = 8 * v8;
      while ((sub_22E933FF8(v0, *v9, 0) & 1) != 0)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_14;
      }
      goto LABEL_33;
    }
LABEL_14:
    v11 = *(unsigned int *)(v1 + 96);
    if ((_DWORD)v11)
    {
      v12 = *(uint64_t **)(v1 + 104);
      v13 = 8 * v11;
      while ((sub_22E933FF8(v0, *v12, 0) & 1) != 0)
      {
        ++v12;
        v13 -= 8;
        if (!v13)
          goto LABEL_18;
      }
      goto LABEL_33;
    }
LABEL_18:
    v14 = *(unsigned int *)(v1 + 128);
    if (!(_DWORD)v14)
      JUMPOUT(0x22E94281CLL);
    v15 = *(uint64_t **)(v1 + 136);
    v16 = 8 * v14 - 8;
    do
    {
      v17 = *v15++;
      if (sub_22E933FF8(v0, v17, 0))
        v18 = v16 == 0;
      else
        v18 = 1;
      v16 -= 8;
    }
    while (!v18);
  }
  JUMPOUT(0x22E942820);
}

uint64_t sub_22E942D48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 120);
  if ((v3 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v3 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E942670(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v3 = *(_QWORD *)(a2 + 120);
      if ((v3 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  return sub_22E9404C4(a1, v7, v8);
}

uint64_t sub_22E942DBC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;

  result = sub_22E942D48(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_BYTE *)(a2 + 74) & 1) == 0)
      return 1;
    v5 = sub_22E46A3A0(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 24;
      do
      {
        result = sub_22E940604(a1, **(_QWORD **)(v8 - 8), *(_QWORD *)(v8 - 8) + 8);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 24;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22E942E34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t *v11;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E942670(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22E9404C4(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_QWORD *)(a2 + 56);
    if ((v10 & 4) != 0)
    {
      v11 = *(unint64_t **)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
      if (v11)
        return (sub_22E940604(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    else if (v10 >= 8)
    {
      v11 = (unint64_t *)(v10 & 0xFFFFFFFFFFFFFFF8);
      return (sub_22E940604(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    result = sub_22E940D6C(a1, *(_QWORD *)(a2 + 48));
    if (!(_DWORD)result)
      return result;
    return 1;
  }
  return result;
}

uint64_t sub_22E942F00(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  _BOOL4 v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E942670(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22E9404C4(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_DWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 152);
    v38 = *(_QWORD *)(a2 + 40);
    v39 = v10;
    v40 = v11;
    result = sub_22E94054C(a1, &v38);
    if ((_DWORD)result)
    {
      v12 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
      if ((*(_QWORD *)(a2 + 144) & 6) == 4 && v12 != 0 && (*(_BYTE *)(v12 + 16) & 6) != 0)
      {
        v14 = *(_QWORD *)(v12 + 32);
        if (v14)
        {
          v15 = *(unsigned int *)(v14 + 8);
          if ((_DWORD)v15)
          {
            v16 = v14 + 16;
            while ((sub_22E9413A0(a1, v16) & 1) != 0)
            {
              v16 += 32;
              if (!--v15)
                goto LABEL_19;
            }
            return 0;
          }
        }
      }
LABEL_19:
      v17 = *(_QWORD *)(a2 + 56);
      v18 = (unint64_t *)(v17 & 0xFFFFFFFFFFFFFFF8);
      if ((v17 & 4) != 0)
        v18 = (unint64_t *)v18[4];
      if (v18)
      {
        result = sub_22E940604(a1, *v18, (uint64_t)(v18 + 1));
        if (!(_DWORD)result)
          return result;
        v17 = *(_QWORD *)(a2 + 56);
      }
      if ((v17 & 4) == 0
        || (v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40)) == 0
        || (result = sub_22E933FF8(a1, v19, 0), (_DWORD)result))
      {
        if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
        {
          v20 = sub_22EFD7ED0(a2);
          v21 = sub_22EFD7ED0(a2) + 8 * ((*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL);
          while (v20 != v21)
          {
            v22 = *(_QWORD *)v20;
            if ((*(_WORD *)(*(_QWORD *)v20 + 28) & 4) != 0)
            {
              v23 = (unint64_t *)(*(_QWORD *)v22 & 0xFFFFFFFFFFFFFFF8);
              if ((*(_QWORD *)v22 & 6) != 0 || v23 == 0)
                goto LABEL_37;
              result = sub_22E940604(a1, *v23, (uint64_t)(v23 + 1));
              if (!(_DWORD)result)
                return result;
              if ((*(_WORD *)(v22 + 28) & 4) != 0)
              {
LABEL_37:
                result = sub_22E933FF8(a1, *(_QWORD *)(v22 + 8), 0);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v20 += 8;
          }
        }
        v25 = sub_22E49F868(a2) && (*(_BYTE *)(a2 + 83) & 2) == 0;
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
          goto LABEL_70;
        v26 = *(_WORD *)(a2 + 80) & 0x7F;
        v27 = -40;
        if (v26 > 0x46)
        {
          if (v26 == 83)
            goto LABEL_60;
          if (v26 == 71)
          {
            v27 = -56;
            goto LABEL_60;
          }
          if (v26 != 81)
          {
LABEL_55:
            v28 = v26 - 52;
            v29 = v26 - 33 >= 5;
            v30 = -48;
            if (!v29)
              v30 = -64;
            if (v28 >= 6)
              v27 = v30;
            else
              v27 = -72;
          }
        }
        else
        {
          if (v26 > 0x18)
            goto LABEL_54;
          if (v26 == 16)
          {
LABEL_46:
            v27 = -48;
            goto LABEL_60;
          }
          if (((1 << v26) & 0x1066) == 0)
          {
            if (v26 == 24)
              goto LABEL_46;
LABEL_54:
            if (v26 == 70)
            {
              v27 = -64;
              goto LABEL_60;
            }
            goto LABEL_55;
          }
        }
LABEL_60:
        v31 = *(_QWORD *)(a2 + 72 + v27 + 16);
        v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
        if ((v31 & 4) != 0)
          v32 = (_QWORD *)*v32;
        if (v32)
        {
          v33 = v32[8];
          if (v33)
          {
            if (((*(unsigned __int16 *)(v33 + 8) | (*(unsigned __int8 *)(v33 + 10) << 16)) & 0x100000) != 0)
            {
              v34 = sub_22EFD462C((unint64_t)(v32 - 8));
              if (v34)
              {
                if ((*(_DWORD *)(v34 + 28) & 0x7F) != 0x1D || (v34 = *(_QWORD *)(v34 + 48)) != 0)
                {
                  if (v34 == a2
                    || (v35 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v34 + 32))(v34),
                        v35 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2)))
                  {
                    if (!v25)
                      return 1;
LABEL_71:
                    v36 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
                    result = sub_22E933FF8(a1, v36, 0);
                    if (!(_DWORD)result)
                      return result;
                    if ((*(_WORD *)(a2 + 80) & 0x80) != 0)
                      sub_22EFCC320(a2 + 72);
                    v37 = *(_QWORD *)(a2 + 88);
                    if (v37)
                    {
                      do
                      {
                        if ((*(_DWORD *)(v37 + 28) & 0x7E) == 0x2E)
                        {
                          result = sub_22E92FEE0(a1, v37);
                          if (!(_DWORD)result)
                            break;
                        }
                        result = 1;
                        v37 = *(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF8;
                      }
                      while (v37);
                      return result;
                    }
                    return 1;
                  }
                }
              }
            }
          }
        }
LABEL_70:
        if (!v25)
          return 1;
        goto LABEL_71;
      }
    }
  }
  return result;
}

uint64_t sub_22E9432C4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = sub_22E942E34(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      return 1;
    if ((*(_BYTE *)(a2 + 97) & 8) != 0)
      return 1;
    v5 = sub_22EFBC5B4(a2);
    result = sub_22E933FF8(a1, v5, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22E943324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  unsigned int v5;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD v17[10];

  v17[8] = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    if (a3)
    {
      v4 = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v5 = *(_DWORD *)(a3 + 8);
      if (v5 >= *(_DWORD *)(a3 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v5 = *(_DWORD *)(a3 + 8);
      }
      *(_QWORD *)(*(_QWORD *)a3 + 8 * v5) = v4;
      ++*(_DWORD *)(a3 + 8);
    }
    else
    {
      v17[0] = a2 & 0xFFFFFFFFFFFFFFFBLL;
      v16 = 0x800000001;
      v7 = 1;
      do
      {
        v8 = v7;
        v9 = &v17[v7];
        v10 = *(v9 - 1);
        if ((v10 & 4) != 0)
        {
          v7 = v8 - 1;
          LODWORD(v16) = v8 - 1;
        }
        else
        {
          *(v9 - 1) = v10 | 4;
          v11 = *(unsigned __int8 *)(v10 & 0xFFFFFFFFFFFFFFF8) - 1;
          if (v11 <= 0xEB)
            __asm { BR              X9 }
          v7 = v16;
          if ((_DWORD)v8 != (_DWORD)v16)
          {
            v12 = &v17[v16 - 1];
            if (&v17[v8] < v12)
            {
              v13 = &v17[v8 + 1];
              do
              {
                v14 = *(v13 - 1);
                *(v13 - 1) = *v12;
                *v12-- = v14;
              }
              while (v13++ < v12);
            }
          }
        }
      }
      while (v7);
    }
  }
  return 1;
}

uint64_t sub_22E94EC6C(uint64_t a1, unint64_t a2)
{
  unint64_t v4;
  int v5;
  uint64_t result;
  uint64_t **v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  int64_t v14;
  char *v15;
  char *v16;
  uint64_t **v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  unsigned int v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t v29;
  unsigned int v30;
  BOOL v31;
  uint64_t v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t **v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t **v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  BOOL v52;
  uint64_t v53;
  uint64_t **v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t **v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t **v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t **v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t **v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t **v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int *v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unsigned int v93;
  BOOL v94;
  uint64_t v95;
  uint64_t **v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t **v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t **v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t **v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t **v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t **v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t **v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  unsigned int v126;
  BOOL v127;
  uint64_t v128;
  uint64_t **v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int v133;
  BOOL v134;
  uint64_t v135;
  uint64_t **v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t **v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t **v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int v153;
  BOOL v154;
  uint64_t v155;
  uint64_t **v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int v160;
  uint64_t v161;
  uint64_t **v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t **v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t **v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t *v177;
  unsigned int v178;
  uint64_t v179;
  uint64_t **v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  BOOL v185;
  uint64_t v186;
  uint64_t **v187;
  uint64_t *v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  unint64_t v192;
  unint64_t v193;
  unsigned int v194;
  uint64_t v195;
  uint64_t **v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t **v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t *v205;
  unint64_t *v206;
  unint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t **v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t **v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t **v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  unsigned int v224;
  BOOL v225;
  uint64_t v226;
  uint64_t **v227;
  uint64_t *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  BOOL v235;
  uint64_t v236;
  uint64_t **v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int v241;
  BOOL v242;
  uint64_t v243;
  uint64_t **v244;
  uint64_t *v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t **v253;
  uint64_t *v254;
  uint64_t v255;
  uint64_t v256;
  unsigned int v257;
  uint64_t v258;
  uint64_t **v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t **v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t *v268;
  unsigned int v269;
  uint64_t v270;
  uint64_t **v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  _DWORD *v275;
  uint64_t v276;
  uint64_t *v277;
  unsigned int v278;
  uint64_t v279;
  unsigned int v280;
  BOOL v281;
  uint64_t v282;
  uint64_t **v283;
  uint64_t *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  unsigned int v290;
  BOOL v291;
  uint64_t v292;
  uint64_t **v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t **v297;
  uint64_t *v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t **v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int v305;
  BOOL v306;
  uint64_t v307;
  uint64_t **v308;
  uint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t **v312;
  uint64_t *v313;
  uint64_t v314;
  uint64_t v315;
  int v316;
  uint64_t v317;
  unsigned int v318;
  uint64_t v319;
  uint64_t **v320;
  uint64_t *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t **v324;
  uint64_t *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t **v328;
  uint64_t *v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t **v332;
  uint64_t *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t *v337;
  unsigned int v338;
  uint64_t v339;
  uint64_t **v340;
  uint64_t *v341;
  uint64_t v342;
  uint64_t v343;
  unsigned int v344;
  uint64_t v345;
  uint64_t **v346;
  uint64_t *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t **v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t *v356;
  uint64_t v357;
  unint64_t *v358;
  unint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t *v363;
  uint64_t v364;
  uint64_t **v365;
  uint64_t *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t **v369;
  uint64_t *v370;
  uint64_t v371;
  uint64_t v372;
  unsigned int v373;
  BOOL v374;
  uint64_t v375;
  uint64_t **v376;
  uint64_t *v377;
  uint64_t v378;
  uint64_t v379;
  unint64_t v380;
  unint64_t v381;
  unsigned int v382;
  uint64_t v383;
  uint64_t **v384;
  uint64_t *v385;
  uint64_t v386;
  uint64_t v387;
  unint64_t v388;
  uint64_t v389;
  unsigned int v390;
  uint64_t v391;
  uint64_t **v392;
  uint64_t *v393;
  uint64_t v394;
  uint64_t v395;
  unsigned int v396;
  uint64_t v397;
  uint64_t **v398;
  uint64_t *v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  unint64_t v403;
  unint64_t *v404;
  unsigned int v405;
  uint64_t v406;
  uint64_t **v407;
  uint64_t *v408;
  uint64_t v409;
  uint64_t v410;
  unsigned int v411;
  BOOL v412;
  uint64_t v413;
  uint64_t **v414;
  uint64_t *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t **v418;
  uint64_t *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t **v422;
  uint64_t *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t **v426;
  uint64_t *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t **v430;
  uint64_t *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t **v434;
  uint64_t *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t **v438;
  uint64_t *v439;
  uint64_t v440;
  uint64_t v441;
  int v442;
  uint64_t v443;
  unsigned int v444;
  uint64_t v445;
  uint64_t **v446;
  uint64_t *v447;
  uint64_t v448;
  uint64_t v449;
  unint64_t v450;
  unsigned int v451;
  uint64_t v452;
  uint64_t **v453;
  uint64_t *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t **v457;
  uint64_t *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t **v461;
  uint64_t *v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t i;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  unsigned int v471;
  BOOL v472;
  uint64_t v473;
  uint64_t **v474;
  uint64_t *v475;
  uint64_t v476;
  uint64_t v477;
  unsigned int v478;
  uint64_t v479;
  uint64_t **v480;
  uint64_t *v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t **v484;
  uint64_t *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t *v488;
  uint64_t **v489;
  uint64_t *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t *v493;
  unsigned int v494;
  uint64_t v495;
  uint64_t **v496;
  uint64_t *v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  uint64_t v501;
  uint64_t **v502;
  uint64_t *v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t **v506;
  uint64_t *v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t **v511;
  uint64_t *v512;
  uint64_t v513;
  uint64_t v514;
  unint64_t v515;
  uint64_t v516;
  unsigned int v517;
  uint64_t v518;
  uint64_t **v519;
  uint64_t *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t **v530;
  uint64_t *v531;
  uint64_t v532;
  uint64_t v533;
  BOOL v534;
  uint64_t **v535;
  uint64_t *v536;
  uint64_t v537;
  uint64_t v538;
  BOOL v539;
  BOOL v540;
  BOOL v541;
  BOOL v542;
  BOOL v543;
  int *v544;
  BOOL v545;
  BOOL v546;
  BOOL v547;
  uint64_t **v548;
  uint64_t *v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  int v559;
  uint64_t v560;

  if (!a2)
    return 1;
  v4 = a2 + 28;
  v5 = *(_DWORD *)(a2 + 28) & 0x7F;
  if ((*(_DWORD *)(a2 + 28) & 0x200) != 0)
  {
    if (v5 == 38)
      return sub_22E952AF4(a1, a2);
    return 1;
  }
  switch(v5)
  {
    case 0:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v8 = *v7;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v10 = *(_QWORD *)v9 + 8 * *(unsigned int *)(v9 + 8);
      }
      else
      {
        v10 = 0;
      }
      while (2)
      {
        if (v8 == (uint64_t *)v10)
          return 1;
        if ((sub_22E953EB4(a1, *v8) & 1) != 0)
        {
          ++v8;
          continue;
        }
        break;
      }
      return 0;
    case 1:
      v248 = *(unint64_t **)(a2 + 96);
      if (v248)
      {
        result = sub_22E952F64(a1, *v248, (uint64_t)(v248 + 1));
        if (!(_DWORD)result)
          return result;
      }
      v249 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
      result = sub_22E943324(a1, v249, 0);
      if (!(_DWORD)result)
        return result;
      v250 = *(unsigned int *)(a2 + 112);
      if (!(_DWORD)v250)
        goto LABEL_454;
      v251 = 16 * v250;
      v252 = (_QWORD *)(*(_QWORD *)(a2 + 104) + 8);
      while (1)
      {
        if (*v252)
        {
          result = sub_22E943324(a1, *v252, 0);
          if (!(_DWORD)result)
            break;
        }
        v252 += 2;
        v251 -= 16;
        if (!v251)
        {
LABEL_454:
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v254 = *v253;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v256 = *(_QWORD *)v255 + 8 * *(unsigned int *)(v255 + 8);
            }
            else
            {
              v256 = 0;
            }
            while (v254 != (uint64_t *)v256)
            {
              if ((sub_22E953EB4(a1, *v254) & 1) == 0)
                return 0;
              ++v254;
            }
          }
          return 1;
        }
      }
      return result;
    case 2:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v217 = *v216;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v219 = *(_QWORD *)v218 + 8 * *(unsigned int *)(v218 + 8);
      }
      else
      {
        v219 = 0;
      }
      while (2)
      {
        if (v217 == (uint64_t *)v219)
          return 1;
        if ((sub_22E953EB4(a1, *v217) & 1) != 0)
        {
          ++v217;
          continue;
        }
        break;
      }
      return 0;
    case 3:
      result = sub_22E94EC6C(a1);
      if (!(_DWORD)result)
        return result;
      v231 = *(_QWORD *)(a2 + 48);
      if (!v231)
        goto LABEL_421;
      v232 = *(unsigned int *)(v231 + 8);
      if (!(_DWORD)v232)
        goto LABEL_421;
      v233 = v231 + 16;
      while ((sub_22E953D00(a1, v233) & 1) != 0)
      {
        v233 += 32;
        if (!--v232)
        {
LABEL_421:
          v234 = *(_DWORD *)v4 & 0x7F;
          v235 = v234 > 0x39 || ((1 << v234) & 0x3F0003E01011066) == 0;
          if (v235
            && (v234 - 70 <= 0xD ? (v541 = ((1 << (v234 - 70)) & 0x2803) == 0) : (v541 = 1), v541 && v234 - 19 > 4))
          {
            v236 = 0;
          }
          else
          {
            v236 = sub_22EFCAE04(a2);
          }
          result = sub_22E953E18(a1, v236);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v238 = *v237;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v240 = *(_QWORD *)v239 + 8 * *(unsigned int *)(v239 + 8);
            }
            else
            {
              v240 = 0;
            }
            while (v238 != (uint64_t *)v240)
            {
              if ((sub_22E953EB4(a1, *v238) & 1) == 0)
                return 0;
              ++v238;
            }
          }
          return 1;
        }
      }
      return 0;
    case 4:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v173 = *v172;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v175 = *(_QWORD *)v174 + 8 * *(unsigned int *)(v174 + 8);
      }
      else
      {
        v175 = 0;
      }
      while (2)
      {
        if (v173 == (uint64_t *)v175)
          return 1;
        if ((sub_22E953EB4(a1, *v173) & 1) != 0)
        {
          ++v173;
          continue;
        }
        break;
      }
      return 0;
    case 5:
      result = sub_22E953E18(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v298 = *v297;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v300 = *(_QWORD *)v299 + 8 * *(unsigned int *)(v299 + 8);
      }
      else
      {
        v300 = 0;
      }
      while (2)
      {
        if (v298 == (uint64_t *)v300)
          return 1;
        if ((sub_22E953EB4(a1, *v298) & 1) != 0)
        {
          ++v298;
          continue;
        }
        break;
      }
      return 0;
    case 6:
      result = sub_22E953E18(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v325 = *v324;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v327 = *(_QWORD *)v326 + 8 * *(unsigned int *)(v326 + 8);
      }
      else
      {
        v327 = 0;
      }
      while (2)
      {
        if (v325 == (uint64_t *)v327)
          return 1;
        if ((sub_22E953EB4(a1, *v325) & 1) != 0)
        {
          ++v325;
          continue;
        }
        break;
      }
      return 0;
    case 7:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 40), 0);
      if (!(_DWORD)result)
        return result;
      v241 = *(_DWORD *)v4 & 0x7F;
      v242 = v241 > 0x39 || ((1 << v241) & 0x3F0003E01011066) == 0;
      v243 = !v242 || v241 - 70 <= 0xD && ((1 << (v241 - 70)) & 0x2803) != 0 || v241 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v243);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v245 = *v244;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v247 = *(_QWORD *)v246 + 8 * *(unsigned int *)(v246 + 8);
      }
      else
      {
        v247 = 0;
      }
      while (2)
      {
        if (v245 == (uint64_t *)v247)
          return 1;
        if ((sub_22E953EB4(a1, *v245) & 1) != 0)
        {
          ++v245;
          continue;
        }
        break;
      }
      return 0;
    case 8:
      v336 = *(_QWORD *)(a2 + 40);
      v337 = (unint64_t *)(v336 & 0xFFFFFFFFFFFFFFF8);
      if ((v336 & 4) != 0 && v337)
      {
        if ((sub_22E952F64(a1, *v337, (uint64_t)(v337 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22E94EC6C(a1);
        if (!(_DWORD)result)
          return result;
      }
      v478 = *(_DWORD *)v4 & 0x7F;
      if (v478 <= 0x39 && ((1 << v478) & 0x3F0003E01011066) != 0
        || v478 - 70 <= 0xD && ((1 << (v478 - 70)) & 0x2803) != 0
        || v478 - 19 <= 4)
      {
        v479 = sub_22EFCAE04(a2);
      }
      else
      {
        v479 = 0;
      }
      result = sub_22E953E18(a1, v479);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v481 = *v480;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v483 = *(_QWORD *)v482 + 8 * *(unsigned int *)(v482 + 8);
      }
      else
      {
        v483 = 0;
      }
      while (2)
      {
        if (v481 == (uint64_t *)v483)
          return 1;
        if ((sub_22E953EB4(a1, *v481) & 1) != 0)
        {
          ++v481;
          continue;
        }
        break;
      }
      return 0;
    case 9:
      v204 = *(_QWORD *)(a2 + 48);
      v205 = (unint64_t *)(v204 & 0xFFFFFFFFFFFFFFF8);
      if ((v204 & 4) != 0 && v205)
      {
        if ((sub_22E952F64(a1, *v205, (uint64_t)(v205 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22E94EC6C(a1);
        if (!(_DWORD)result)
          return result;
      }
      v465 = *(unsigned int *)(a2 + 36);
      if (!(_DWORD)v465)
        goto LABEL_859;
      for (i = 0; i != v465; ++i)
      {
        v467 = *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8 * i);
        v468 = *(_DWORD *)(v467 + 12) & 0x1FFFFFFF;
        if ((_DWORD)v468)
        {
          v469 = v467 + 16;
          v470 = 8 * v468;
          while ((sub_22E94EC6C(a1) & 1) != 0)
          {
            v469 += 8;
            v470 -= 8;
            if (!v470)
              goto LABEL_858;
          }
          return 0;
        }
LABEL_858:
        ;
      }
LABEL_859:
      v471 = *(_DWORD *)v4 & 0x7F;
      v472 = v471 > 0x39 || ((1 << v471) & 0x3F0003E01011066) == 0;
      if (v472 && (v471 - 70 <= 0xD ? (v547 = ((1 << (v471 - 70)) & 0x2803) == 0) : (v547 = 1), v547 && v471 - 19 > 4))
        v473 = 0;
      else
        v473 = sub_22EFCAE04(a2);
      result = sub_22E953E18(a1, v473);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v475 = *v474;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v477 = *(_QWORD *)v476 + 8 * *(unsigned int *)(v476 + 8);
        }
        else
        {
          v477 = 0;
        }
        while (v475 != (uint64_t *)v477)
        {
          if ((sub_22E953EB4(a1, *v475) & 1) == 0)
            return 0;
          ++v475;
        }
      }
      return 1;
    case 10:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v333 = *v332;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v335 = *(_QWORD *)v334 + 8 * *(unsigned int *)(v334 + 8);
      }
      else
      {
        v335 = 0;
      }
      while (2)
      {
        if (v333 == (uint64_t *)v335)
          return 1;
        if ((sub_22E953EB4(a1, *v333) & 1) != 0)
        {
          ++v333;
          continue;
        }
        break;
      }
      return 0;
    case 11:
      return (sub_22E952B3C(a1, a2) & 1) != 0;
    case 12:
      result = sub_22E953E18(a1, a2 + 40);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v201 = *v200;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v203 = *(_QWORD *)v202 + 8 * *(unsigned int *)(v202 + 8);
      }
      else
      {
        v203 = 0;
      }
      while (2)
      {
        if (v201 == (uint64_t *)v203)
          return 1;
        if ((sub_22E953EB4(a1, *v201) & 1) != 0)
        {
          ++v201;
          continue;
        }
        break;
      }
      return 0;
    case 13:
      if (!sub_22E952E24(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v316 = *(_DWORD *)(a2 + 24);
      v317 = *(_QWORD *)(a2 + 80);
      v558 = *(_QWORD *)(a2 + 40);
      v559 = v316;
      v560 = v317;
      if (!sub_22E952EAC(a1, &v558))
        return 0;
      if ((v318 = *(_DWORD *)v4 & 0x7F, v318 <= 0x39) && ((1 << v318) & 0x3F0003E01011066) != 0
        || v318 - 70 <= 0xD && ((1 << (v318 - 70)) & 0x2803) != 0
        || v318 - 19 <= 4)
      {
        v319 = sub_22EFCAE04(a2);
      }
      else
      {
        v319 = 0;
      }
      if (!sub_22E953E18(a1, v319))
        return 0;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v321 = *v320;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v323 = *(_QWORD *)v322 + 8 * *(unsigned int *)(v322 + 8);
      }
      else
      {
        v323 = 0;
      }
      while (2)
      {
        if (v321 == (uint64_t *)v323)
          return 1;
        if ((sub_22E953EB4(a1, *v321) & 1) != 0)
        {
          ++v321;
          continue;
        }
        break;
      }
      return 0;
    case 14:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v141 = *v140;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v143 = *(_QWORD *)v142 + 8 * *(unsigned int *)(v142 + 8);
      }
      else
      {
        v143 = 0;
      }
      while (2)
      {
        if (v141 == (uint64_t *)v143)
          return 1;
        if ((sub_22E953EB4(a1, *v141) & 1) != 0)
        {
          ++v141;
          continue;
        }
        break;
      }
      return 0;
    case 15:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v221 = *v220;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v223 = *(_QWORD *)v222 + 8 * *(unsigned int *)(v222 + 8);
      }
      else
      {
        v223 = 0;
      }
      while (2)
      {
        if (v221 == (uint64_t *)v223)
          return 1;
        if ((sub_22E953EB4(a1, *v221) & 1) != 0)
        {
          ++v221;
          continue;
        }
        break;
      }
      return 0;
    case 16:
      result = sub_22E953E18(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v123 = *v122;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v125 = *(_QWORD *)v124 + 8 * *(unsigned int *)(v124 + 8);
      }
      else
      {
        v125 = 0;
      }
      while (2)
      {
        if (v123 == (uint64_t *)v125)
          return 1;
        if ((sub_22E953EB4(a1, *v123) & 1) != 0)
        {
          ++v123;
          continue;
        }
        break;
      }
      return 0;
    case 17:
      result = sub_22E952E24(a1, *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80));
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v264 = *v263;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v266 = *(_QWORD *)v265 + 8 * *(unsigned int *)(v265 + 8);
      }
      else
      {
        v266 = 0;
      }
      while (2)
      {
        if (v264 == (uint64_t *)v266)
          return 1;
        if ((sub_22E953EB4(a1, *v264) & 1) != 0)
        {
          ++v264;
          continue;
        }
        break;
      }
      return 0;
    case 18:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v329 = *v328;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v331 = *(_QWORD *)v330 + 8 * *(unsigned int *)(v330 + 8);
      }
      else
      {
        v331 = 0;
      }
      while (2)
      {
        if (v329 == (uint64_t *)v331)
          return 1;
        if ((sub_22E953EB4(a1, *v329) & 1) != 0)
        {
          ++v329;
          continue;
        }
        break;
      }
      return 0;
    case 19:
      v361 = *(_QWORD *)(a2 + 112);
      if (!v361)
        goto LABEL_650;
      v362 = *(unsigned int *)(v361 + 8);
      if (!(_DWORD)v362)
        goto LABEL_650;
      v363 = (uint64_t *)(v361 + 16);
      v364 = 8 * v362;
      while ((sub_22E952C54(a1, *v363) & 1) != 0)
      {
        ++v363;
        v364 -= 8;
        if (!v364)
        {
LABEL_650:
          result = sub_22E953E18(a1, a2 + 48);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v366 = *v365;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v368 = *(_QWORD *)v367 + 8 * *(unsigned int *)(v367 + 8);
            }
            else
            {
              v368 = 0;
            }
            while (v366 != (uint64_t *)v368)
            {
              if ((sub_22E953EB4(a1, *v366) & 1) == 0)
                return 0;
              ++v366;
            }
          }
          return 1;
        }
      }
      return 0;
    case 20:
      result = sub_22E953E18(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v284 = *v283;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v286 = *(_QWORD *)v285 + 8 * *(unsigned int *)(v285 + 8);
      }
      else
      {
        v286 = 0;
      }
      while (2)
      {
        if (v284 == (uint64_t *)v286)
          return 1;
        if ((sub_22E953EB4(a1, *v284) & 1) != 0)
        {
          ++v284;
          continue;
        }
        break;
      }
      return 0;
    case 21:
      result = sub_22E953E18(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v313 = *v312;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v315 = *(_QWORD *)v314 + 8 * *(unsigned int *)(v314 + 8);
      }
      else
      {
        v315 = 0;
      }
      while (2)
      {
        if (v313 == (uint64_t *)v315)
          return 1;
        if ((sub_22E953EB4(a1, *v313) & 1) != 0)
        {
          ++v313;
          continue;
        }
        break;
      }
      return 0;
    case 22:
      v354 = *(_QWORD *)(a2 + 112);
      if (!v354)
        goto LABEL_637;
      v355 = *(unsigned int *)(v354 + 8);
      if (!(_DWORD)v355)
        goto LABEL_637;
      v356 = (uint64_t *)(v354 + 16);
      v357 = 8 * v355;
      while ((sub_22E952C54(a1, *v356) & 1) != 0)
      {
        ++v356;
        v357 -= 8;
        if (!v357)
        {
LABEL_637:
          v358 = (unint64_t *)sub_22F259044(a2);
          if (v358)
          {
            result = sub_22E952F64(a1, *v358, (uint64_t)(v358 + 1));
            if (!(_DWORD)result)
              return result;
          }
          v359 = *(_QWORD *)(a2 + 120);
          if (!v359)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
            v359 = *(_QWORD *)(a2 + 120);
          }
          if (v359 < 8)
            v360 = 0;
          else
            v360 = *(_QWORD *)(v359 & 0xFFFFFFFFFFFFFFF8);
          if (v360 == a2)
          {
            v552 = sub_22F2590A8(a2);
            v553 = sub_22F25910C(a2);
            v554 = sub_22F259178(a2);
            v555 = sub_22F2591DC(a2);
            if (v552 != v553 && v554 != v555)
            {
              v556 = v554 + 4;
              v557 = v552 + 8;
              do
              {
                if (v557 == v553)
                  break;
                v557 += 8;
                v31 = v556 == v555;
                v556 += 4;
              }
              while (!v31);
            }
          }
          result = sub_22E953E18(a1, a2 + 48);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v531 = *v530;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v533 = *(_QWORD *)v532 + 8 * *(unsigned int *)(v532 + 8);
            }
            else
            {
              v533 = 0;
            }
            while (v531 != (uint64_t *)v533)
            {
              if ((sub_22E953EB4(a1, *v531) & 1) == 0)
                return 0;
              ++v531;
            }
          }
          return 1;
        }
      }
      return 0;
    case 23:
      v388 = *(_QWORD *)(a2 + 104);
      if (!v388)
      {
        sub_22E3CD31C((uint64_t *)(*(_QWORD *)(a2 + 96) + 88), *(_QWORD *)(a2 + 96));
        v388 = *(_QWORD *)(a2 + 104);
      }
      if (v388 < 8)
        v389 = 0;
      else
        v389 = *(_QWORD *)(v388 & 0xFFFFFFFFFFFFFFF8);
      if (v389 == a2)
      {
        v523 = sub_22F259248(a2);
        v525 = v524;
        v526 = sub_22F2592CC(a2);
        if (v523 != v525 && v526 != v527)
        {
          v528 = v526 + 4;
          v529 = v523 + 8;
          do
          {
            if (v529 == v525)
              break;
            v529 += 8;
            v31 = v528 == v527;
            v528 += 4;
          }
          while (!v31);
        }
      }
      result = sub_22E953E18(a1, a2 + 48);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v485 = *v484;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v487 = *(_QWORD *)v486 + 8 * *(unsigned int *)(v486 + 8);
      }
      else
      {
        v487 = 0;
      }
      while (2)
      {
        if (v485 == (uint64_t *)v487)
          return 1;
        if ((sub_22E953EB4(a1, *v485) & 1) != 0)
        {
          ++v485;
          continue;
        }
        break;
      }
      return 0;
    case 24:
      v207 = *(unint64_t **)(a2 + 88);
      if (v207)
      {
        result = sub_22E952F64(a1, *v207, (uint64_t)(v207 + 1));
        if (!(_DWORD)result)
          return result;
      }
      v208 = *(unsigned int *)(a2 + 104);
      if (!(_DWORD)v208)
        goto LABEL_379;
      v209 = *(_QWORD *)(a2 + 96);
      v210 = 8 * v208;
      while ((sub_22E94EC6C(a1) & 1) != 0)
      {
        v209 += 8;
        v210 -= 8;
        if (!v210)
        {
LABEL_379:
          if ((*(unsigned int (**)(unint64_t))(*(_QWORD *)a2 + 72))(a2))
          {
            v211 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
            result = sub_22E943324(a1, v211, 0);
            if (!(_DWORD)result)
              return result;
          }
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v213 = *v212;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v215 = *(_QWORD *)v214 + 8 * *(unsigned int *)(v214 + 8);
            }
            else
            {
              v215 = 0;
            }
            while (v213 != (uint64_t *)v215)
            {
              if ((sub_22E953EB4(a1, *v213) & 1) == 0)
                return 0;
              ++v213;
            }
          }
          return 1;
        }
      }
      return 0;
    case 25:
      v206 = *(unint64_t **)(a2 + 64);
      if (v206)
      {
        if ((sub_22E952F64(a1, *v206, (uint64_t)(v206 + 1)) & 1) == 0)
          return 0;
      }
      else
      {
        result = sub_22E9536CC(a1, *(_QWORD *)(a2 + 56));
        if (!(_DWORD)result)
          return result;
      }
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v507 = *v506;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v509 = *(_QWORD *)v508 + 8 * *(unsigned int *)(v508 + 8);
      }
      else
      {
        v509 = 0;
      }
      while (2)
      {
        if (v507 == (uint64_t *)v509)
          return 1;
        if ((sub_22E953EB4(a1, *v507) & 1) != 0)
        {
          ++v507;
          continue;
        }
        break;
      }
      return 0;
    case 26:
      result = sub_22E954450(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      v411 = *(_DWORD *)v4 & 0x7F;
      v412 = v411 > 0x39 || ((1 << v411) & 0x3F0003E01011066) == 0;
      v413 = !v412 || v411 - 70 <= 0xD && ((1 << (v411 - 70)) & 0x2803) != 0 || v411 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v413);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v415 = *v414;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v417 = *(_QWORD *)v416 + 8 * *(unsigned int *)(v416 + 8);
      }
      else
      {
        v417 = 0;
      }
      while (2)
      {
        if (v415 == (uint64_t *)v417)
          return 1;
        if ((sub_22E953EB4(a1, *v415) & 1) != 0)
        {
          ++v415;
          continue;
        }
        break;
      }
      return 0;
    case 27:
      result = sub_22E954450(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 64), 0);
      if (!(_DWORD)result)
        return result;
      if ((v112 = *(_DWORD *)v4 & 0x7F, v112 <= 0x39) && ((1 << v112) & 0x3F0003E01011066) != 0
        || v112 - 70 <= 0xD && ((1 << (v112 - 70)) & 0x2803) != 0
        || v112 - 19 <= 4)
      {
        v113 = sub_22EFCAE04(a2);
      }
      else
      {
        v113 = 0;
      }
      result = sub_22E953E18(a1, v113);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v115 = *v114;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v117 = *(_QWORD *)v116 + 8 * *(unsigned int *)(v116 + 8);
      }
      else
      {
        v117 = 0;
      }
      while (2)
      {
        if (v115 == (uint64_t *)v117)
          return 1;
        if ((sub_22E953EB4(a1, *v115) & 1) != 0)
        {
          ++v115;
          continue;
        }
        break;
      }
      return 0;
    case 28:
      result = sub_22E954450(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22E94EC6C(a1);
      if (!(_DWORD)result)
        return result;
      if ((v390 = *(_DWORD *)v4 & 0x7F, v390 <= 0x39) && ((1 << v390) & 0x3F0003E01011066) != 0
        || v390 - 70 <= 0xD && ((1 << (v390 - 70)) & 0x2803) != 0
        || v390 - 19 <= 4)
      {
        v391 = sub_22EFCAE04(a2);
      }
      else
      {
        v391 = 0;
      }
      result = sub_22E953E18(a1, v391);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v393 = *v392;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v395 = *(_QWORD *)v394 + 8 * *(unsigned int *)(v394 + 8);
      }
      else
      {
        v395 = 0;
      }
      while (2)
      {
        if (v393 == (uint64_t *)v395)
          return 1;
        if ((sub_22E953EB4(a1, *v393) & 1) != 0)
        {
          ++v393;
          continue;
        }
        break;
      }
      return 0;
    case 29:
      result = sub_22E954450(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22E94EC6C(a1);
      if (!(_DWORD)result)
        return result;
      if ((v396 = *(_DWORD *)v4 & 0x7F, v396 <= 0x39) && ((1 << v396) & 0x3F0003E01011066) != 0
        || v396 - 70 <= 0xD && ((1 << (v396 - 70)) & 0x2803) != 0
        || v396 - 19 <= 4)
      {
        v397 = sub_22EFCAE04(a2);
      }
      else
      {
        v397 = 0;
      }
      result = sub_22E953E18(a1, v397);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v399 = *v398;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v401 = *(_QWORD *)v400 + 8 * *(unsigned int *)(v400 + 8);
      }
      else
      {
        v401 = 0;
      }
      while (2)
      {
        if (v399 == (uint64_t *)v401)
          return 1;
        if ((sub_22E953EB4(a1, *v399) & 1) != 0)
        {
          ++v399;
          continue;
        }
        break;
      }
      return 0;
    case 30:
      result = sub_22E94EC6C(a1);
      if (!(_DWORD)result)
        return result;
      result = sub_22E954450(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      if ((v338 = *(_DWORD *)v4 & 0x7F, v338 <= 0x39) && ((1 << v338) & 0x3F0003E01011066) != 0
        || v338 - 70 <= 0xD && ((1 << (v338 - 70)) & 0x2803) != 0
        || v338 - 19 <= 4)
      {
        v339 = sub_22EFCAE04(a2);
      }
      else
      {
        v339 = 0;
      }
      result = sub_22E953E18(a1, v339);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v341 = *v340;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v343 = *(_QWORD *)v342 + 8 * *(unsigned int *)(v342 + 8);
      }
      else
      {
        v343 = 0;
      }
      while (2)
      {
        if (v341 == (uint64_t *)v343)
          return 1;
        if ((sub_22E953EB4(a1, *v341) & 1) != 0)
        {
          ++v341;
          continue;
        }
        break;
      }
      return 0;
    case 31:
      result = sub_22E954450(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      result = sub_22E94EC6C(a1);
      if (!(_DWORD)result)
        return result;
      if ((v257 = *(_DWORD *)v4 & 0x7F, v257 <= 0x39) && ((1 << v257) & 0x3F0003E01011066) != 0
        || v257 - 70 <= 0xD && ((1 << (v257 - 70)) & 0x2803) != 0
        || v257 - 19 <= 4)
      {
        v258 = sub_22EFCAE04(a2);
      }
      else
      {
        v258 = 0;
      }
      result = sub_22E953E18(a1, v258);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v260 = *v259;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v262 = *(_QWORD *)v261 + 8 * *(unsigned int *)(v261 + 8);
      }
      else
      {
        v262 = 0;
      }
      while (2)
      {
        if (v260 == (uint64_t *)v262)
          return 1;
        if ((sub_22E953EB4(a1, *v260) & 1) != 0)
        {
          ++v260;
          continue;
        }
        break;
      }
      return 0;
    case 32:
      result = sub_22E94EC6C(a1);
      if (!(_DWORD)result)
        return result;
      if (*(_QWORD *)(a2 + 72) >= 8uLL && (*(_QWORD *)(a2 + 72) & 6) != 2)
      {
        v544 = sub_22F259350(a2);
        result = sub_22E953D00(a1, (uint64_t)v544);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22E954450(a1, *(_QWORD *)(a2 + 56));
      if (!(_DWORD)result)
        return result;
      if ((v344 = *(_DWORD *)v4 & 0x7F, v344 <= 0x39) && ((1 << v344) & 0x3F0003E01011066) != 0
        || v344 - 70 <= 0xD && ((1 << (v344 - 70)) & 0x2803) != 0
        || v344 - 19 <= 4)
      {
        v345 = sub_22EFCAE04(a2);
      }
      else
      {
        v345 = 0;
      }
      result = sub_22E953E18(a1, v345);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v347 = *v346;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v349 = *(_QWORD *)v348 + 8 * *(unsigned int *)(v348 + 8);
      }
      else
      {
        v349 = 0;
      }
      if (v347 == (uint64_t *)v349)
        return 1;
      while ((sub_22E953EB4(a1, *v347) & 1) != 0)
      {
        if (++v347 == (uint64_t *)v349)
          return 1;
      }
      return 0;
    case 33:
      v144 = *(_QWORD *)(a2 + 120);
      if ((v144 & 4) == 0)
        goto LABEL_252;
      v145 = 0;
      while (1)
      {
        v146 = v144 & 0xFFFFFFFFFFFFFFF8;
        if (v145 >= *(unsigned int *)(v146 + 16))
          break;
        sub_22E954450(a1, *(_QWORD *)(*(_QWORD *)(v146 + 24) + 8 * v145++));
        v144 = *(_QWORD *)(a2 + 120);
        if ((v144 & 4) == 0)
        {
LABEL_252:
          v147 = 0;
          v148 = 0;
          goto LABEL_946;
        }
      }
      v147 = *(_QWORD *)v146;
      v148 = *(_QWORD *)(v146 + 8);
LABEL_946:
      result = sub_22E952E24(a1, v147, v148);
      if (!(_DWORD)result)
        return result;
      v510 = *(_QWORD *)(a2 + 128);
      if ((v510 & 4) != 0 && (v510 & 0xFFFFFFFFFFFFFFF8) != 0)
      {
        result = sub_22E952F64(a1, *(_QWORD *)(v510 & 0xFFFFFFFFFFFFFFF8), (v510 & 0xFFFFFFFFFFFFFFF8) + 8);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22E953E18(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v512 = *v511;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v514 = *(_QWORD *)v513 + 8 * *(unsigned int *)(v513 + 8);
      }
      else
      {
        v514 = 0;
      }
      if (v512 == (uint64_t *)v514)
        return 1;
      while ((sub_22E953EB4(a1, *v512) & 1) != 0)
      {
        if (++v512 == (uint64_t *)v514)
          return 1;
      }
      return 0;
    case 34:
      result = sub_22E9544F0(a1, a2);
      if (!(_DWORD)result)
        return result;
      result = sub_22E953E18(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v119 = *v118;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v121 = *(_QWORD *)v120 + 8 * *(unsigned int *)(v120 + 8);
      }
      else
      {
        v121 = 0;
      }
      if (v119 == (uint64_t *)v121)
        return 1;
      while ((sub_22E953EB4(a1, *v119) & 1) != 0)
      {
        if (++v119 == (uint64_t *)v121)
          return 1;
      }
      return 0;
    case 35:
      result = sub_22E954564(a1, a2);
      if (!(_DWORD)result)
        return result;
      result = sub_22E953E18(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v101 = *v100;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v103 = *(_QWORD *)v102 + 8 * *(unsigned int *)(v102 + 8);
      }
      else
      {
        v103 = 0;
      }
      if (v101 == (uint64_t *)v103)
        return 1;
      while ((sub_22E953EB4(a1, *v101) & 1) != 0)
      {
        if (++v101 == (uint64_t *)v103)
          return 1;
      }
      return 0;
    case 36:
      v104 = *(unint64_t ***)(a2 + 160);
      if (v104)
      {
        if (*v104)
        {
          result = sub_22E952F64(a1, **v104, (uint64_t)(*v104 + 1));
          if (!(_DWORD)result)
            return result;
        }
      }
      v105 = *(_QWORD *)(a2 + 120);
      if ((v105 & 4) != 0)
      {
        v488 = (uint64_t *)(v105 & 0xFFFFFFFFFFFFFFF8);
        v106 = *v488;
        v107 = v488[1];
      }
      else
      {
        v106 = 0;
        v107 = 0;
      }
      result = sub_22E952E24(a1, v106, v107);
      if (!(_DWORD)result)
        return result;
      if (sub_22EFD5760(a2) != 2)
        return 1;
      result = sub_22E953E18(a1, a2 + 64);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v490 = *v489;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v492 = *(_QWORD *)v491 + 8 * *(unsigned int *)(v491 + 8);
      }
      else
      {
        v492 = 0;
      }
      if (v490 == (uint64_t *)v492)
        return 1;
      while ((sub_22E953EB4(a1, *v490) & 1) != 0)
      {
        if (++v490 == (uint64_t *)v492)
          return 1;
      }
      return 0;
    case 37:
      v63 = *(_QWORD *)(a2 + 184);
      if (!v63)
        goto LABEL_104;
      v64 = *(_DWORD *)(v63 + 12) & 0x1FFFFFFF;
      if (!(_DWORD)v64)
        goto LABEL_104;
      v65 = v63 + 16;
      v66 = 8 * v64;
      while ((sub_22E94EC6C(a1) & 1) != 0)
      {
        v65 += 8;
        v66 -= 8;
        if (!v66)
        {
LABEL_104:
          v67 = *(_QWORD *)(a2 + 192);
          v68 = *(unsigned int *)(v67 + 8);
          if ((_DWORD)v68)
          {
            v69 = v67 + 16;
            while ((sub_22E953D00(a1, v69) & 1) != 0)
            {
              v69 += 32;
              if (!--v68)
                goto LABEL_108;
            }
            return 0;
          }
LABEL_108:
          result = sub_22E954564(a1, a2);
          if (!(_DWORD)result)
            return result;
          result = sub_22E953E18(a1, a2 + 64);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v71 = *v70;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v73 = *(_QWORD *)v72 + 8 * *(unsigned int *)(v72 + 8);
            }
            else
            {
              v73 = 0;
            }
            if (v71 != (uint64_t *)v73)
            {
              while ((sub_22E953EB4(a1, *v71) & 1) != 0)
              {
                if (++v71 == (uint64_t *)v73)
                  return 1;
              }
              return 0;
            }
          }
          return 1;
        }
      }
      return 0;
    case 38:
      v402 = *(_QWORD *)(a2 + 48);
      if (v402)
      {
        result = sub_22E9536CC(a1, v402 & 0xFFFFFFFFFFFFFFF0);
        if (!(_DWORD)result)
          return result;
      }
      result = sub_22E952AF4(a1, a2);
      if (!(_DWORD)result)
        return result;
      v403 = *(_QWORD *)(a2 + 72);
      if (v403 >= 8 && (*(_QWORD *)(a2 + 72) & 6) != 2)
      {
        v404 = (unint64_t *)(v403 & 0xFFFFFFFFFFFFFFF8);
        if ((*(_QWORD *)(a2 + 72) & 6) == 4 && v404)
          v404 = (unint64_t *)v404[1];
        result = sub_22E952F64(a1, *v404, (uint64_t)(v404 + 1));
        if (!(_DWORD)result)
          return result;
      }
      if ((v405 = *(_DWORD *)v4 & 0x7F, v405 <= 0x39) && ((1 << v405) & 0x3F0003E01011066) != 0
        || v405 - 70 <= 0xD && ((1 << (v405 - 70)) & 0x2803) != 0
        || v405 - 19 <= 4)
      {
        v406 = sub_22EFCAE04(a2);
      }
      else
      {
        v406 = 0;
      }
      result = sub_22E953E18(a1, v406);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v408 = *v407;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v410 = *(_QWORD *)v409 + 8 * *(unsigned int *)(v409 + 8);
      }
      else
      {
        v410 = 0;
      }
      if (v408 == (uint64_t *)v410)
        return 1;
      while ((sub_22E953EB4(a1, *v408) & 1) != 0)
      {
        if (++v408 == (uint64_t *)v410)
          return 1;
      }
      return 0;
    case 39:
      return (sub_22E952C54(a1, a2) & 1) != 0;
    case 40:
      v176 = *(_QWORD *)(a2 + 80);
      v177 = (unint64_t *)(v176 & 0xFFFFFFFFFFFFFFF8);
      if ((v176 & 4) != 0)
        v177 = (unint64_t *)*v177;
      result = sub_22E952F64(a1, *v177, (uint64_t)(v177 + 1));
      if (!(_DWORD)result)
        return result;
      if ((v178 = *(_DWORD *)v4 & 0x7F, v178 <= 0x39) && ((1 << v178) & 0x3F0003E01011066) != 0
        || v178 - 70 <= 0xD && ((1 << (v178 - 70)) & 0x2803) != 0
        || v178 - 19 <= 4)
      {
        v179 = sub_22EFCAE04(a2);
      }
      else
      {
        v179 = 0;
      }
      result = sub_22E953E18(a1, v179);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v181 = *v180;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v183 = *(_QWORD *)v182 + 8 * *(unsigned int *)(v182 + 8);
      }
      else
      {
        v183 = 0;
      }
      if (v181 == (uint64_t *)v183)
        return 1;
      while ((sub_22E953EB4(a1, *v181) & 1) != 0)
      {
        if (++v181 == (uint64_t *)v183)
          return 1;
      }
      return 0;
    case 41:
      v267 = *(_QWORD *)(a2 + 80);
      v268 = (unint64_t *)(v267 & 0xFFFFFFFFFFFFFFF8);
      if ((v267 & 4) != 0)
        v268 = (unint64_t *)*v268;
      result = sub_22E952F64(a1, *v268, (uint64_t)(v268 + 1));
      if (!(_DWORD)result)
        return result;
      if ((v269 = *(_DWORD *)v4 & 0x7F, v269 <= 0x39) && ((1 << v269) & 0x3F0003E01011066) != 0
        || v269 - 70 <= 0xD && ((1 << (v269 - 70)) & 0x2803) != 0
        || v269 - 19 <= 4)
      {
        v270 = sub_22EFCAE04(a2);
      }
      else
      {
        v270 = 0;
      }
      result = sub_22E953E18(a1, v270);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v272 = *v271;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v274 = *(_QWORD *)v273 + 8 * *(unsigned int *)(v273 + 8);
      }
      else
      {
        v274 = 0;
      }
      if (v272 == (uint64_t *)v274)
        return 1;
      while ((sub_22E953EB4(a1, *v272) & 1) != 0)
      {
        if (++v272 == (uint64_t *)v274)
          return 1;
      }
      return 0;
    case 42:
      result = sub_22E952E24(a1, *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80));
      if (!(_DWORD)result)
        return result;
      v373 = *(_DWORD *)v4 & 0x7F;
      v374 = v373 > 0x39 || ((1 << v373) & 0x3F0003E01011066) == 0;
      v375 = !v374 || v373 - 70 <= 0xD && ((1 << (v373 - 70)) & 0x2803) != 0 || v373 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v375);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v377 = *v376;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v379 = *(_QWORD *)v378 + 8 * *(unsigned int *)(v378 + 8);
      }
      else
      {
        v379 = 0;
      }
      if (v377 == (uint64_t *)v379)
        return 1;
      while ((sub_22E953EB4(a1, *v377) & 1) != 0)
      {
        if (++v377 == (uint64_t *)v379)
          return 1;
      }
      return 0;
    case 43:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v41 = *v40;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v43 = *(_QWORD *)v42 + 8 * *(unsigned int *)(v42 + 8);
      }
      else
      {
        v43 = 0;
      }
      if (v41 == (uint64_t *)v43)
        return 1;
      while ((sub_22E953EB4(a1, *v41) & 1) != 0)
      {
        if (++v41 == (uint64_t *)v43)
          return 1;
      }
      return 0;
    case 44:
      result = sub_22E952E24(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64));
      if (!(_DWORD)result)
        return result;
      v133 = *(_DWORD *)v4 & 0x7F;
      v134 = v133 > 0x39 || ((1 << v133) & 0x3F0003E01011066) == 0;
      v135 = !v134 || v133 - 70 <= 0xD && ((1 << (v133 - 70)) & 0x2803) != 0 || v133 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v135);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v137 = *v136;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v139 = *(_QWORD *)v138 + 8 * *(unsigned int *)(v138 + 8);
      }
      else
      {
        v139 = 0;
      }
      if (v137 == (uint64_t *)v139)
        return 1;
      while ((sub_22E953EB4(a1, *v137) & 1) != 0)
      {
        if (++v137 == (uint64_t *)v139)
          return 1;
      }
      return 0;
    case 45:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v351 = *v350;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v353 = *(_QWORD *)v352 + 8 * *(unsigned int *)(v352 + 8);
      }
      else
      {
        v353 = 0;
      }
      if (v351 == (uint64_t *)v353)
        return 1;
      while ((sub_22E953EB4(a1, *v351) & 1) != 0)
      {
        if (++v351 == (uint64_t *)v353)
          return 1;
      }
      return 0;
    case 46:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v435 = *v434;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v437 = *(_QWORD *)v436 + 8 * *(unsigned int *)(v436 + 8);
      }
      else
      {
        v437 = 0;
      }
      if (v435 == (uint64_t *)v437)
        return 1;
      while ((sub_22E953EB4(a1, *v435) & 1) != 0)
      {
        if (++v435 == (uint64_t *)v437)
          return 1;
      }
      return 0;
    case 47:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v79 = *v78;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v81 = *(_QWORD *)v80 + 8 * *(unsigned int *)(v80 + 8);
      }
      else
      {
        v81 = 0;
      }
      if (v79 == (uint64_t *)v81)
        return 1;
      while ((sub_22E953EB4(a1, *v79) & 1) != 0)
      {
        if (++v79 == (uint64_t *)v81)
          return 1;
      }
      return 0;
    case 48:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v150 = *v149;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v152 = *(_QWORD *)v151 + 8 * *(unsigned int *)(v151 + 8);
      }
      else
      {
        v152 = 0;
      }
      if (v150 == (uint64_t *)v152)
        return 1;
      while ((sub_22E953EB4(a1, *v150) & 1) != 0)
      {
        if (++v150 == (uint64_t *)v152)
          return 1;
      }
      return 0;
    case 49:
      result = sub_22E9545DC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v171 = *(_QWORD *)(a2 + 72);
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v515 = v171 & 0xFFFFFFFFFFFFFFFCLL;
        v516 = *(_QWORD *)(a2 + 72) & 3;
        if ((_DWORD)v516 && (_DWORD)v516 != 3)
          v515 = *(_QWORD *)(v515 + 8);
        if ((sub_22E943324(a1, v515, 0) & 1) == 0)
          return 0;
      }
      else if ((v171 & 3) != 0 && (v171 & 3) != 3)
      {
        result = sub_22E943324(a1, v171 & 0xFFFFFFFFFFFFFFFCLL, 0);
        if (!(_DWORD)result)
          return result;
      }
      v517 = *(_DWORD *)v4 & 0x7F;
      if (v517 <= 0x39 && ((1 << v517) & 0x3F0003E01011066) != 0
        || v517 - 70 <= 0xD && ((1 << (v517 - 70)) & 0x2803) != 0
        || v517 - 19 <= 4)
      {
        v518 = sub_22EFCAE04(a2);
      }
      else
      {
        v518 = 0;
      }
      result = sub_22E953E18(a1, v518);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v520 = *v519;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v522 = *(_QWORD *)v521 + 8 * *(unsigned int *)(v521 + 8);
        }
        else
        {
          v522 = 0;
        }
        for (; v520 != (uint64_t *)v522; ++v520)
        {
          if ((sub_22E953EB4(a1, *v520) & 1) == 0)
            return 0;
        }
      }
      return 1;
    case 50:
      result = sub_22E9545DC(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v33 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3)
          v33 = *(_QWORD *)(v33 + 8);
        result = sub_22E943324(a1, v33, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v34 = *(_DWORD *)v4 & 0x7F, v34 <= 0x39) && ((1 << v34) & 0x3F0003E01011066) != 0
        || (v34 - 70 <= 0xD ? (v542 = ((1 << (v34 - 70)) & 0x2803) == 0) : (v542 = 1), !v542 || v34 - 19 <= 4))
      {
        v35 = sub_22EFCAE04(a2);
      }
      else
      {
        v35 = 0;
      }
      result = sub_22E953E18(a1, v35);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v37 = *v36;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v39 = *(_QWORD *)v38 + 8 * *(unsigned int *)(v38 + 8);
      }
      else
      {
        v39 = 0;
      }
      if (v37 == (uint64_t *)v39)
        return 1;
      while ((sub_22E953EB4(a1, *v37) & 1) != 0)
      {
        if (++v37 == (uint64_t *)v39)
          return 1;
      }
      return 0;
    case 51:
      result = sub_22E9545DC(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(a2 + 68) & 1) != 0)
      {
        v450 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (*(_DWORD *)(a2 + 72) & 3) != 3)
          v450 = *(_QWORD *)(v450 + 8);
        result = sub_22E943324(a1, v450, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v451 = *(_DWORD *)v4 & 0x7F, v451 <= 0x39) && ((1 << v451) & 0x3F0003E01011066) != 0
        || (v451 - 70 <= 0xD ? (v543 = ((1 << (v451 - 70)) & 0x2803) == 0) : (v543 = 1), !v543 || v451 - 19 <= 4))
      {
        v452 = sub_22EFCAE04(a2);
      }
      else
      {
        v452 = 0;
      }
      result = sub_22E953E18(a1, v452);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v454 = *v453;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v456 = *(_QWORD *)v455 + 8 * *(unsigned int *)(v455 + 8);
      }
      else
      {
        v456 = 0;
      }
      if (v454 == (uint64_t *)v456)
        return 1;
      while ((sub_22E953EB4(a1, *v454) & 1) != 0)
      {
        if (++v454 == (uint64_t *)v456)
          return 1;
      }
      return 0;
    case 52:
      result = sub_22E9546A8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v431 = *v430;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v433 = *(_QWORD *)v432 + 8 * *(unsigned int *)(v432 + 8);
      }
      else
      {
        v433 = 0;
      }
      if (v431 == (uint64_t *)v433)
        return 1;
      while ((sub_22E953EB4(a1, *v431) & 1) != 0)
      {
        if (++v431 == (uint64_t *)v433)
          return 1;
      }
      return 0;
    case 53:
      result = sub_22E9546A8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v75 = *v74;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v77 = *(_QWORD *)v76 + 8 * *(unsigned int *)(v76 + 8);
      }
      else
      {
        v77 = 0;
      }
      if (v75 == (uint64_t *)v77)
        return 1;
      while ((sub_22E953EB4(a1, *v75) & 1) != 0)
      {
        if (++v75 == (uint64_t *)v77)
          return 1;
      }
      return 0;
    case 54:
      result = sub_22E9546A8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v419 = *v418;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v421 = *(_QWORD *)v420 + 8 * *(unsigned int *)(v420 + 8);
      }
      else
      {
        v421 = 0;
      }
      if (v419 == (uint64_t *)v421)
        return 1;
      while ((sub_22E953EB4(a1, *v419) & 1) != 0)
      {
        if (++v419 == (uint64_t *)v421)
          return 1;
      }
      return 0;
    case 55:
      result = sub_22E9546A8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v427 = *v426;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v429 = *(_QWORD *)v428 + 8 * *(unsigned int *)(v428 + 8);
      }
      else
      {
        v429 = 0;
      }
      if (v427 == (uint64_t *)v429)
        return 1;
      while ((sub_22E953EB4(a1, *v427) & 1) != 0)
      {
        if (++v427 == (uint64_t *)v429)
          return 1;
      }
      return 0;
    case 56:
      result = sub_22E9546A8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v83 = *v82;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v85 = *(_QWORD *)v84 + 8 * *(unsigned int *)(v84 + 8);
      }
      else
      {
        v85 = 0;
      }
      if (v83 == (uint64_t *)v85)
        return 1;
      while ((sub_22E953EB4(a1, *v83) & 1) != 0)
      {
        if (++v83 == (uint64_t *)v85)
          return 1;
      }
      return 0;
    case 57:
      result = sub_22E9546A8(a1, a2);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v370 = *v369;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v372 = *(_QWORD *)v371 + 8 * *(unsigned int *)(v371 + 8);
      }
      else
      {
        v372 = 0;
      }
      if (v370 == (uint64_t *)v372)
        return 1;
      while ((sub_22E953EB4(a1, *v370) & 1) != 0)
      {
        if (++v370 == (uint64_t *)v372)
          return 1;
      }
      return 0;
    case 58:
      result = sub_22E9545DC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v153 = *(_DWORD *)v4 & 0x7F;
      v154 = v153 > 0x39 || ((1 << v153) & 0x3F0003E01011066) == 0;
      v155 = !v154 || v153 - 70 <= 0xD && ((1 << (v153 - 70)) & 0x2803) != 0 || v153 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v155);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v157 = *v156;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v159 = *(_QWORD *)v158 + 8 * *(unsigned int *)(v158 + 8);
      }
      else
      {
        v159 = 0;
      }
      if (v157 == (uint64_t *)v159)
        return 1;
      while ((sub_22E953EB4(a1, *v157) & 1) != 0)
      {
        if (++v157 == (uint64_t *)v159)
          return 1;
      }
      return 0;
    case 59:
      result = sub_22E9545DC(a1, a2);
      if (!(_DWORD)result)
        return result;
      v380 = *(_QWORD *)(a2 + 72);
      if (v380 >= 4 && (*(_QWORD *)(a2 + 72) & 3) != 1)
      {
        v381 = v380 & 0xFFFFFFFFFFFFFFFCLL;
        if ((*(_QWORD *)(a2 + 72) & 3) == 2 && v381)
          v381 = *(_QWORD *)(v381 + 8);
        result = sub_22E943324(a1, v381, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v382 = *(_DWORD *)v4 & 0x7F, v382 <= 0x39) && ((1 << v382) & 0x3F0003E01011066) != 0
        || v382 - 70 <= 0xD && ((1 << (v382 - 70)) & 0x2803) != 0
        || v382 - 19 <= 4)
      {
        v383 = sub_22EFCAE04(a2);
      }
      else
      {
        v383 = 0;
      }
      result = sub_22E953E18(a1, v383);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v385 = *v384;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v387 = *(_QWORD *)v386 + 8 * *(unsigned int *)(v386 + 8);
      }
      else
      {
        v387 = 0;
      }
      if (v385 == (uint64_t *)v387)
        return 1;
      while ((sub_22E953EB4(a1, *v385) & 1) != 0)
      {
        if (++v385 == (uint64_t *)v387)
          return 1;
      }
      return 0;
    case 60:
      result = sub_22E954A6C(a1, a2);
      if (!(_DWORD)result)
        return result;
      v184 = *(_DWORD *)v4 & 0x7F;
      v185 = v184 > 0x39 || ((1 << v184) & 0x3F0003E01011066) == 0;
      v186 = !v185 || v184 - 70 <= 0xD && ((1 << (v184 - 70)) & 0x2803) != 0 || v184 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v186);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v188 = *v187;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v190 = *(_QWORD *)v189 + 8 * *(unsigned int *)(v189 + 8);
      }
      else
      {
        v190 = 0;
      }
      if (v188 == (uint64_t *)v190)
        return 1;
      while ((sub_22E953EB4(a1, *v188) & 1) != 0)
      {
        if (++v188 == (uint64_t *)v190)
          return 1;
      }
      return 0;
    case 61:
      result = sub_22E954A6C(a1, a2);
      if (!(_DWORD)result)
        return result;
      v287 = *(unsigned int *)(a2 + 100);
      if (!(_DWORD)v287)
        goto LABEL_514;
      v288 = a2 + 104;
      v289 = 8 * v287;
      while ((sub_22E94EC6C(a1) & 1) != 0)
      {
        v288 += 8;
        v289 -= 8;
        if (!v289)
        {
LABEL_514:
          v290 = *(_DWORD *)v4 & 0x7F;
          v291 = v290 > 0x39 || ((1 << v290) & 0x3F0003E01011066) == 0;
          if (v291
            && (v290 - 70 <= 0xD ? (v545 = ((1 << (v290 - 70)) & 0x2803) == 0) : (v545 = 1), v545 && v290 - 19 > 4))
          {
            v292 = 0;
          }
          else
          {
            v292 = sub_22EFCAE04(a2);
          }
          result = sub_22E953E18(a1, v292);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v294 = *v293;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v296 = *(_QWORD *)v295 + 8 * *(unsigned int *)(v295 + 8);
          }
          else
          {
            v296 = 0;
          }
          if (v294 == (uint64_t *)v296)
            return 1;
          while ((sub_22E953EB4(a1, *v294) & 1) != 0)
          {
            if (++v294 == (uint64_t *)v296)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 62:
      result = sub_22E954A6C(a1, a2);
      if (!(_DWORD)result)
        return result;
      v305 = *(_DWORD *)v4 & 0x7F;
      v306 = v305 > 0x39 || ((1 << v305) & 0x3F0003E01011066) == 0;
      v307 = !v306 || v305 - 70 <= 0xD && ((1 << (v305 - 70)) & 0x2803) != 0 || v305 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v307);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v309 = *v308;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v311 = *(_QWORD *)v310 + 8 * *(unsigned int *)(v310 + 8);
      }
      else
      {
        v311 = 0;
      }
      if (v309 == (uint64_t *)v311)
        return 1;
      while ((sub_22E953EB4(a1, *v309) & 1) != 0)
      {
        if (++v309 == (uint64_t *)v311)
          return 1;
      }
      return 0;
    case 63:
      result = sub_22E954A6C(a1, a2);
      if (!(_DWORD)result)
        return result;
      v224 = *(_DWORD *)v4 & 0x7F;
      v225 = v224 > 0x39 || ((1 << v224) & 0x3F0003E01011066) == 0;
      v226 = !v225 || v224 - 70 <= 0xD && ((1 << (v224 - 70)) & 0x2803) != 0 || v224 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v226);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v228 = *v227;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v230 = *(_QWORD *)v229 + 8 * *(unsigned int *)(v229 + 8);
      }
      else
      {
        v230 = 0;
      }
      if (v228 == (uint64_t *)v230)
        return 1;
      while ((sub_22E953EB4(a1, *v228) & 1) != 0)
      {
        if (++v228 == (uint64_t *)v230)
          return 1;
      }
      return 0;
    case 64:
      result = sub_22E954A6C(a1, a2);
      if (!(_DWORD)result)
        return result;
      v191 = *(_DWORD *)(a2 + 96) & 0x600;
      if (v191 != 1024)
        goto LABEL_343;
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 88) & 0xFFFFFFFFFFFFFFF8, 0);
      if (!(_DWORD)result)
        return result;
      v191 = *(_DWORD *)(a2 + 96) & 0x600;
LABEL_343:
      if (v191 != 1024 && v191 != 512 && *(_QWORD *)(a2 + 88) >= 8uLL)
      {
        v192 = sub_22EFBC5B4(a2);
        v193 = v192;
        if (v192 && (*(_BYTE *)v192 & 0xFE) == 0xAC)
          v193 = *(_QWORD *)(v192 + 16);
        result = sub_22E943324(a1, v193, 0);
        if (!(_DWORD)result)
          return result;
      }
      if ((v194 = *(_DWORD *)v4 & 0x7F, v194 <= 0x39) && ((1 << v194) & 0x3F0003E01011066) != 0
        || v194 - 70 <= 0xD && ((1 << (v194 - 70)) & 0x2803) != 0
        || v194 - 19 <= 4)
      {
        v195 = sub_22EFCAE04(a2);
      }
      else
      {
        v195 = 0;
      }
      result = sub_22E953E18(a1, v195);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v197 = *v196;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v199 = *(_QWORD *)v198 + 8 * *(unsigned int *)(v198 + 8);
      }
      else
      {
        v199 = 0;
      }
      if (v197 == (uint64_t *)v199)
        return 1;
      while ((sub_22E953EB4(a1, *v197) & 1) != 0)
      {
        if (++v197 == (uint64_t *)v199)
          return 1;
      }
      return 0;
    case 65:
      v301 = *(unint64_t ***)(a2 + 120);
      if (v301)
      {
        if (*v301)
        {
          result = sub_22E952F64(a1, **v301, (uint64_t)(*v301 + 1));
          if (!(_DWORD)result)
            return result;
        }
      }
      v302 = *(_QWORD *)(a2 + 56);
      if ((v302 & 4) != 0)
      {
        v493 = (uint64_t *)(v302 & 0xFFFFFFFFFFFFFFF8);
        v303 = *v493;
        v304 = v493[1];
      }
      else
      {
        v303 = 0;
        v304 = 0;
      }
      result = sub_22E952E24(a1, v303, v304);
      if (!(_DWORD)result)
        return result;
      if (sub_22EFBC2B0(a2) != 2)
        return 1;
      v494 = *(_DWORD *)v4 & 0x7F;
      if (v494 <= 0x39 && ((1 << v494) & 0x3F0003E01011066) != 0
        || v494 - 70 <= 0xD && ((1 << (v494 - 70)) & 0x2803) != 0
        || v494 - 19 <= 4)
      {
        v495 = sub_22EFCAE04(a2);
      }
      else
      {
        v495 = 0;
      }
      result = sub_22E953E18(a1, v495);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v497 = *v496;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v499 = *(_QWORD *)v498 + 8 * *(unsigned int *)(v498 + 8);
      }
      else
      {
        v499 = 0;
      }
      if (v497 == (uint64_t *)v499)
        return 1;
      while ((sub_22E953EB4(a1, *v497) & 1) != 0)
      {
        if (++v497 == (uint64_t *)v499)
          return 1;
      }
      return 0;
    case 66:
      v44 = *(_QWORD *)(a2 + 424);
      if (!v44)
        goto LABEL_68;
      v45 = *(_DWORD *)(v44 + 12) & 0x1FFFFFFF;
      if (!(_DWORD)v45)
        goto LABEL_68;
      v46 = v44 + 16;
      v47 = 8 * v45;
      while ((sub_22E94EC6C(a1) & 1) != 0)
      {
        v46 += 8;
        v47 -= 8;
        if (!v47)
        {
LABEL_68:
          v48 = *(_QWORD *)(a2 + 432);
          v49 = *(unsigned int *)(v48 + 8);
          if ((_DWORD)v49)
          {
            v50 = v48 + 16;
            while ((sub_22E953D00(a1, v50) & 1) != 0)
            {
              v50 += 32;
              if (!--v49)
                goto LABEL_72;
            }
          }
          else
          {
LABEL_72:
            result = sub_22E954A6C(a1, a2);
            if (!(_DWORD)result)
              return result;
            v51 = *(_DWORD *)v4 & 0x7F;
            v52 = v51 > 0x39 || ((1 << v51) & 0x3F0003E01011066) == 0;
            if (v52
              && (v51 - 70 <= 0xD ? (v546 = ((1 << (v51 - 70)) & 0x2803) == 0) : (v546 = 1), v546 && v51 - 19 > 4))
            {
              v53 = 0;
            }
            else
            {
              v53 = sub_22EFCAE04(a2);
            }
            result = sub_22E953E18(a1, v53);
            if (!(_DWORD)result)
              return result;
            if ((*(_BYTE *)(v4 + 1) & 1) == 0)
              return 1;
            sub_22EFC8E88(a2);
            v55 = *v54;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v57 = *(_QWORD *)v56 + 8 * *(unsigned int *)(v56 + 8);
            }
            else
            {
              v57 = 0;
            }
            if (v55 == (uint64_t *)v57)
              return 1;
            while ((sub_22E953EB4(a1, *v55) & 1) != 0)
            {
              if (++v55 == (uint64_t *)v57)
                return 1;
            }
          }
          return 0;
        }
      }
      return 0;
    case 67:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 56), 0);
      if (!(_DWORD)result)
        return result;
      v126 = *(_DWORD *)v4 & 0x7F;
      v127 = v126 > 0x39 || ((1 << v126) & 0x3F0003E01011066) == 0;
      v128 = !v127 || v126 - 70 <= 0xD && ((1 << (v126 - 70)) & 0x2803) != 0 || v126 - 19 <= 4 ? sub_22EFCAE04(a2) : 0;
      result = sub_22E953E18(a1, v128);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v130 = *v129;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v132 = *(_QWORD *)v131 + 8 * *(unsigned int *)(v131 + 8);
      }
      else
      {
        v132 = 0;
      }
      if (v130 == (uint64_t *)v132)
        return 1;
      while ((sub_22E953EB4(a1, *v130) & 1) != 0)
      {
        if (++v130 == (uint64_t *)v132)
          return 1;
      }
      return 0;
    case 68:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v462 = *v461;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v464 = *(_QWORD *)v463 + 8 * *(unsigned int *)(v463 + 8);
      }
      else
      {
        v464 = 0;
      }
      if (v462 == (uint64_t *)v464)
        return 1;
      while ((sub_22E953EB4(a1, *v462) & 1) != 0)
      {
        if (++v462 == (uint64_t *)v464)
          return 1;
      }
      return 0;
    case 69:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v109 = *v108;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v111 = *(_QWORD *)v110 + 8 * *(unsigned int *)(v110 + 8);
      }
      else
      {
        v111 = 0;
      }
      if (v109 == (uint64_t *)v111)
        return 1;
      while ((sub_22E953EB4(a1, *v109) & 1) != 0)
      {
        if (++v109 == (uint64_t *)v111)
          return 1;
      }
      return 0;
    case 70:
      v21 = *(_DWORD **)(a2 + 56);
      v24 = *v21;
      v23 = (uint64_t *)(v21 + 4);
      v22 = v24;
      if (!v24)
        return (sub_22E9536CC(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      v25 = 8 * v22;
      while ((sub_22E954ACC(a1, *v23) & 1) != 0)
      {
        ++v23;
        v25 -= 8;
        if (!v25)
          return (sub_22E9536CC(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      }
      return 0;
    case 71:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 88), 0);
      if ((_DWORD)result)
      {
        v62 = *(_QWORD *)(a2 + 96);
        if (!v62)
          return (sub_22E9536CC(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
        result = sub_22E943324(a1, v62, 0);
        if ((_DWORD)result)
          return (sub_22E9536CC(a1, *(_QWORD *)(a2 + 48)) & 1) != 0;
      }
      return result;
    case 72:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v423 = *v422;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v425 = *(_QWORD *)v424 + 8 * *(unsigned int *)(v424 + 8);
      }
      else
      {
        v425 = 0;
      }
      if (v423 == (uint64_t *)v425)
        return 1;
      while ((sub_22E953EB4(a1, *v423) & 1) != 0)
      {
        if (++v423 == (uint64_t *)v425)
          return 1;
      }
      return 0;
    case 73:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v439 = *v438;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v441 = *(_QWORD *)v440 + 8 * *(unsigned int *)(v440 + 8);
      }
      else
      {
        v441 = 0;
      }
      if (v439 == (uint64_t *)v441)
        return 1;
      while ((sub_22E953EB4(a1, *v439) & 1) != 0)
      {
        if (++v439 == (uint64_t *)v441)
          return 1;
      }
      return 0;
    case 74:
      if (!sub_22E952E24(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v442 = *(_DWORD *)(a2 + 24);
      v443 = *(_QWORD *)(a2 + 80);
      v558 = *(_QWORD *)(a2 + 40);
      v559 = v442;
      v560 = v443;
      if (!sub_22E952EAC(a1, &v558))
        return 0;
      if ((v444 = *(_DWORD *)v4 & 0x7F, v444 <= 0x39) && ((1 << v444) & 0x3F0003E01011066) != 0
        || v444 - 70 <= 0xD && ((1 << (v444 - 70)) & 0x2803) != 0
        || v444 - 19 <= 4)
      {
        v445 = sub_22EFCAE04(a2);
      }
      else
      {
        v445 = 0;
      }
      if (!sub_22E953E18(a1, v445))
        return 0;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v447 = *v446;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v449 = *(_QWORD *)v448 + 8 * *(unsigned int *)(v448 + 8);
      }
      else
      {
        v449 = 0;
      }
      while (2)
      {
        if (v447 == (uint64_t *)v449)
          return 1;
        if ((sub_22E953EB4(a1, *v447) & 1) != 0)
        {
          ++v447;
          continue;
        }
        break;
      }
      return 0;
    case 75:
      v86 = *(unsigned int **)(a2 + 40);
      v87 = *v86;
      v88 = v86[1];
      if (!(_DWORD)v88)
        goto LABEL_146;
      v89 = &v86[2 * v87 + 4];
      v90 = 8 * v88;
      while ((sub_22E943324(a1, *(_QWORD *)v89, 0) & 1) != 0)
      {
        v89 += 2;
        v90 -= 8;
        if (!v90)
        {
          v86 = *(unsigned int **)(a2 + 40);
          v87 = *v86;
LABEL_146:
          if ((_DWORD)v87)
          {
            v91 = (uint64_t *)(v86 + 4);
            v92 = 8 * v87;
            while ((sub_22E954ACC(a1, *v91) & 1) != 0)
            {
              ++v91;
              v92 -= 8;
              if (!v92)
                goto LABEL_150;
            }
          }
          else
          {
LABEL_150:
            v93 = *(_DWORD *)v4 & 0x7F;
            v94 = v93 > 0x39 || ((1 << v93) & 0x3F0003E01011066) == 0;
            if (v94
              && (v93 - 70 <= 0xD ? (v540 = ((1 << (v93 - 70)) & 0x2803) == 0) : (v540 = 1), v540 && v93 - 19 > 4))
            {
              v95 = 0;
            }
            else
            {
              v95 = sub_22EFCAE04(a2);
            }
            result = sub_22E953E18(a1, v95);
            if (!(_DWORD)result)
              return result;
            if ((*(_BYTE *)(v4 + 1) & 1) == 0)
              return 1;
            sub_22EFC8E88(a2);
            v97 = *v96;
            if ((*(_BYTE *)(a2 + 29) & 1) != 0)
            {
              sub_22EFC8E88(a2);
              v99 = *(_QWORD *)v98 + 8 * *(unsigned int *)(v98 + 8);
            }
            else
            {
              v99 = 0;
            }
            if (v97 == (uint64_t *)v99)
              return 1;
            while ((sub_22E953EB4(a1, *v97) & 1) != 0)
            {
              if (++v97 == (uint64_t *)v99)
                return 1;
            }
          }
          return 0;
        }
      }
      return 0;
    case 76:
      v275 = *(_DWORD **)(a2 + 40);
      v278 = *v275;
      v277 = (uint64_t *)(v275 + 4);
      v276 = v278;
      if (!v278)
        goto LABEL_1013;
      v279 = 8 * v276;
      while ((sub_22E954ACC(a1, *v277) & 1) != 0)
      {
        ++v277;
        v279 -= 8;
        if (!v279)
        {
          v280 = *(_DWORD *)v4 & 0x7F;
          v281 = v280 > 0x39 || ((1 << v280) & 0x3F0003E01011066) == 0;
          if (v281
            && (v280 - 70 <= 0xD ? (v539 = ((1 << (v280 - 70)) & 0x2803) == 0) : (v539 = 1), v539 && v280 - 19 > 4))
          {
LABEL_1013:
            v282 = 0;
          }
          else
          {
            v282 = sub_22EFCAE04(a2);
          }
          result = sub_22E953E18(a1, v282);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v549 = *v548;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v551 = *(_QWORD *)v550 + 8 * *(unsigned int *)(v550 + 8);
          }
          else
          {
            v551 = 0;
          }
          if (v549 == (uint64_t *)v551)
            return 1;
          while ((sub_22E953EB4(a1, *v549) & 1) != 0)
          {
            if (++v549 == (uint64_t *)v551)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 77:
      v26 = *(unsigned int **)(a2 + 40);
      v27 = v26[1];
      if (!(_DWORD)v27)
        goto LABEL_998;
      v28 = &v26[2 * *v26 + 4];
      v29 = 8 * v27;
      while ((sub_22E943324(a1, *(_QWORD *)v28, 0) & 1) != 0)
      {
        v28 += 2;
        v29 -= 8;
        if (!v29)
        {
          v30 = *(_DWORD *)v4 & 0x7F;
          v31 = v30 > 0x39 || ((1 << v30) & 0x3F0003E01011066) == 0;
          if (v31 && (v30 - 70 <= 0xD ? (v534 = ((1 << (v30 - 70)) & 0x2803) == 0) : (v534 = 1), v534 && v30 - 19 > 4))
LABEL_998:
            v32 = 0;
          else
            v32 = sub_22EFCAE04(a2);
          result = sub_22E953E18(a1, v32);
          if (!(_DWORD)result)
            return result;
          if ((*(_BYTE *)(v4 + 1) & 1) == 0)
            return 1;
          sub_22EFC8E88(a2);
          v536 = *v535;
          if ((*(_BYTE *)(a2 + 29) & 1) != 0)
          {
            sub_22EFC8E88(a2);
            v538 = *(_QWORD *)v537 + 8 * *(unsigned int *)(v537 + 8);
          }
          else
          {
            v538 = 0;
          }
          if (v536 == (uint64_t *)v538)
            return 1;
          while ((sub_22E953EB4(a1, *v536) & 1) != 0)
          {
            if (++v536 == (uint64_t *)v538)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 78:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v458 = *v457;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v460 = *(_QWORD *)v459 + 8 * *(unsigned int *)(v459 + 8);
      }
      else
      {
        v460 = 0;
      }
      if (v458 == (uint64_t *)v460)
        return 1;
      while ((sub_22E953EB4(a1, *v458) & 1) != 0)
      {
        if (++v458 == (uint64_t *)v460)
          return 1;
      }
      return 0;
    case 79:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v18 = *v17;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v20 = *(_QWORD *)v19 + 8 * *(unsigned int *)(v19 + 8);
      }
      else
      {
        v20 = 0;
      }
      if (v18 == (uint64_t *)v20)
        return 1;
      while ((sub_22E953EB4(a1, *v18) & 1) != 0)
      {
        if (++v18 == (uint64_t *)v20)
          return 1;
      }
      return 0;
    case 80:
      result = sub_22E953E18(a1, 0);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v59 = *v58;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v61 = *(_QWORD *)v60 + 8 * *(unsigned int *)(v60 + 8);
      }
      else
      {
        v61 = 0;
      }
      if (v59 == (uint64_t *)v61)
        return 1;
      while ((sub_22E953EB4(a1, *v59) & 1) != 0)
      {
        if (++v59 == (uint64_t *)v61)
          return 1;
      }
      return 0;
    case 81:
      v166 = sub_22EFCAE04(a2);
      result = sub_22E953E18(a1, v166);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v168 = *v167;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v170 = *(_QWORD *)v169 + 8 * *(unsigned int *)(v169 + 8);
      }
      else
      {
        v170 = 0;
      }
      if (v168 == (uint64_t *)v170)
        return 1;
      while ((sub_22E953EB4(a1, *v168) & 1) != 0)
      {
        if (++v168 == (uint64_t *)v170)
          return 1;
      }
      return 0;
    case 82:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFFCLL, 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 48), 0);
      if (!(_DWORD)result)
        return result;
      if ((v160 = *(_DWORD *)v4 & 0x7F, v160 <= 0x39) && ((1 << v160) & 0x3F0003E01011066) != 0
        || v160 - 70 <= 0xD && ((1 << (v160 - 70)) & 0x2803) != 0
        || v160 - 19 <= 4)
      {
        v161 = sub_22EFCAE04(a2);
      }
      else
      {
        v161 = 0;
      }
      result = sub_22E953E18(a1, v161);
      if (!(_DWORD)result)
        return result;
      if ((*(_BYTE *)(v4 + 1) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v163 = *v162;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v165 = *(_QWORD *)v164 + 8 * *(unsigned int *)(v164 + 8);
      }
      else
      {
        v165 = 0;
      }
      if (v163 == (uint64_t *)v165)
        return 1;
      break;
    case 83:
      v11 = *(_QWORD *)(a2 + 88);
      v12 = *(_BYTE **)(v11 + 19016);
      v13 = *(_BYTE **)(v11 + 19024);
      v14 = v13 - v12;
      if (v13 == v12)
      {
        v15 = 0;
        v16 = 0;
      }
      else
      {
        if (v14 < 0)
          abort();
        v15 = (char *)operator new(v13 - v12);
        memmove(v15, v12, v14);
        v16 = &v15[8 * (v14 >> 3)];
      }
      if (v16 - v15 == 8 && (*(_DWORD *)(*(_QWORD *)v15 + 28) & 0x7F) == 0x53)
      {
        operator delete(v15);
        result = sub_22E953E18(a1, a2 + 40);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        if (v15 != v16)
        {
          v500 = v15;
          do
          {
            if ((*(_DWORD *)(*(_QWORD *)v500 + 28) & 0x7Fu) - 1 >= 2
              && ((*(_DWORD *)(*(_QWORD *)v500 + 28) & 0x7Fu) - 35 > 2
               || (v501 = *(_QWORD *)(*(_QWORD *)v500 + 128)) == 0
               || ((*(unsigned __int16 *)(v501 + 8) | (*(unsigned __int8 *)(v501 + 10) << 16)) & 0x100000) == 0)
              && !sub_22E94EC6C(a1))
            {
              if (v15)
                operator delete(v15);
              return 0;
            }
            v500 += 8;
          }
          while (v500 != v16);
        }
        if (v15)
          operator delete(v15);
      }
      if ((*(_BYTE *)(v4 + 1) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v503 = *v502;
        if ((*(_BYTE *)(a2 + 29) & 1) != 0)
        {
          sub_22EFC8E88(a2);
          v505 = *(_QWORD *)v504 + 8 * *(unsigned int *)(v504 + 8);
        }
        else
        {
          v505 = 0;
        }
        for (; v503 != (uint64_t *)v505; ++v503)
        {
          if ((sub_22E953EB4(a1, *v503) & 1) == 0)
            return 0;
        }
      }
      return 1;
    default:
      return 1;
  }
  while ((sub_22E953EB4(a1, *v163) & 1) != 0)
  {
    if (++v163 == (uint64_t *)v165)
      return 1;
  }
  return 0;
}

uint64_t sub_22E952AF4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((*(_BYTE *)(a2 + 60) & 4) != 0)
  {
    if (*(_QWORD *)(a2 + 152))
    {
      if ((sub_22E943324(a1, *(_QWORD *)(a2 + 152), 0) & 1) == 0)
        return 0;
    }
    else
    {
      result = sub_22E952D84(a1, a2 + 80);
      if (!(_DWORD)result)
        return result;
    }
  }
  return 1;
}

uint64_t sub_22E952B3C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;

  result = sub_22E943324(a1, *(_QWORD *)(a2 + 40), 0);
  if ((_DWORD)result)
  {
    v5 = *(_DWORD *)(a2 + 28) & 0x7F;
    v6 = v5 > 0x39 || ((1 << v5) & 0x3F0003E01011066) == 0;
    if (v6 && (v5 - 70 <= 0xD ? (v8 = ((1 << (v5 - 70)) & 0x2803) == 0) : (v8 = 1), v8 && v5 - 19 > 4))
      v7 = 0;
    else
      v7 = sub_22EFCAE04(a2);
    result = sub_22E953E18(a1, v7);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v10 = *v9;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v12 = *(_QWORD *)v11 + 8 * *(unsigned int *)(v11 + 8);
      }
      else
      {
        v12 = 0;
      }
      if (v10 == v12)
      {
        return 1;
      }
      else
      {
        v13 = v10 + 8;
        do
        {
          result = sub_22E953EB4(a1, *(_QWORD *)(v13 - 8));
          if ((_DWORD)result)
            v14 = v13 == v12;
          else
            v14 = 1;
          v13 += 8;
        }
        while (!v14);
      }
    }
  }
  return result;
}

uint64_t sub_22E952C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t *v5;
  uint64_t result;
  unsigned int v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  if (!*(_DWORD *)(a2 + 96))
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 80);
  v5 = (unint64_t *)(v4 & 0xFFFFFFFFFFFFFFF8);
  if ((v4 & 4) != 0)
    v5 = (unint64_t *)*v5;
  result = sub_22E952F64(a1, *v5, (uint64_t)(v5 + 1));
  if ((_DWORD)result)
  {
LABEL_5:
    v7 = *(_DWORD *)(a2 + 28) & 0x7F;
    v8 = v7 > 0x39 || ((1 << v7) & 0x3F0003E01011066) == 0;
    if (v8 && (v7 - 70 <= 0xD ? (v10 = ((1 << (v7 - 70)) & 0x2803) == 0) : (v10 = 1), v10 && v7 - 19 > 4))
      v9 = 0;
    else
      v9 = sub_22EFCAE04(a2);
    result = sub_22E953E18(a1, v9);
    if ((_DWORD)result)
    {
      if ((*(_BYTE *)(a2 + 29) & 1) == 0)
        return 1;
      sub_22EFC8E88(a2);
      v12 = *v11;
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v14 = *(_QWORD *)v13 + 8 * *(unsigned int *)(v13 + 8);
      }
      else
      {
        v14 = 0;
      }
      if (v12 == v14)
      {
        return 1;
      }
      else
      {
        v15 = v12 + 8;
        do
        {
          result = sub_22E953EB4(a1, *(_QWORD *)(v15 - 8));
          if ((_DWORD)result)
            v16 = v15 == v14;
          else
            v16 = 1;
          v15 += 8;
        }
        while (!v16);
      }
    }
  }
  return result;
}

uint64_t sub_22E952D84(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  __int128 v11;
  uint64_t v12;

  result = sub_22E952E24(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  if ((_DWORD)result)
  {
    v11 = *(_OWORD *)(a2 + 24);
    v12 = *(_QWORD *)(a2 + 40);
    result = sub_22E952EAC(a1, (uint64_t *)&v11);
    if ((_DWORD)result)
    {
      v5 = *(_QWORD *)(a2 + 64);
      if (v5 && (v6 = *(unsigned int *)(v5 + 8), (_DWORD)v6))
      {
        v7 = v5 + 16;
        v8 = v6 - 1;
        do
        {
          result = sub_22E953D00(a1, v7);
          v10 = v8-- != 0;
          if (!(_DWORD)result)
            break;
          v7 += 32;
        }
        while (v10);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_22E952E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = a2;
  v9[1] = a3;
  if (!a2)
    return 1;
  v5 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v5 || (result = sub_22E952E24(a1, v5, a3), (_DWORD)result))
  {
    if (*(_QWORD *)(a2 + 16) && (*(_BYTE *)(a2 + 8) & 4) != 0)
    {
      v7 = sub_22F0AB4E0((uint64_t)v9);
      return sub_22E952F64(a1, v7, v8);
    }
    return 1;
  }
  return result;
}

uint64_t sub_22E952EAC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  int v9;
  unint64_t v10;

  v2 = *a2;
  v3 = *a2 & 7;
  v4 = v3;
  if ((_DWORD)v3 == 7)
  {
    v5 = *(_DWORD *)(v2 & 0xFFFFFFFFFFFFFFF8);
    if (v5 >= 3)
      v5 = 3;
    v4 = v5 | 8;
  }
  if ((v4 - 3) < 3)
  {
    if ((v3 - 3) <= 2)
    {
      v6 = (_QWORD *)a2[2];
      if (v6)
      {
        if ((sub_22E952F64(a1, *v6, v6 + 1) & 1) == 0)
          return 0;
      }
    }
    return 1;
  }
  if (v4 != 8)
    return 1;
  if ((~(_BYTE)v2 & 7) != 0)
    goto LABEL_15;
  v8 = v2 & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_DWORD *)v8;
  if (*(_DWORD *)v8 >= 3u)
    v9 = 3;
  if (v9)
LABEL_15:
    v10 = 0;
  else
    v10 = *(_QWORD *)(v8 + 16) & 0xFFFFFFFFFFFFFFF9;
  result = sub_22E953C3C(a1, v10);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22E952F64(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v10;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v50;
  uint64_t v51;
  _DWORD *v52;
  uint64_t v53;
  unint64_t *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  char v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;

  if (a2)
  {
    v4 = a2;
    do
    {
      v6 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      if ((v4 & 0xF) != 0)
      {
LABEL_4:
        if ((v6 & 0xFFFFFFFFFFFFFFF0) != 0)
          v7 = *(_QWORD *)((char *)&unk_22F4656A0
                         + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) << 56) >> 53));
        else
          v7 = 1;
        a3 = (a3 + v7 - 1) & -v7;
        v4 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
      }
      else
      {
        result = 1;
        switch(*(_BYTE *)(v6 + 16))
        {
          case 0:
          case 1:
          case 0x16:
          case 0x17:
          case 0x36:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 - 1;
            goto LABEL_62;
          case 2:
          case 3:
          case 4:
          case 5:
            v21 = *(_QWORD *)(v4 + 32);
            if (v21 >= 0x10 && (*(_QWORD *)(v4 + 32) & 0xFLL) == 0)
              v73 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v73 = 1;
            result = sub_22E952F64(a1, v21, (a3 + v73 + 15) & -v73);
            if (!(_DWORD)result)
              return result;
            v23 = *(_QWORD *)(a3 + 8);
            return sub_22E943324(a1, v23, 0);
          case 6:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 11;
            goto LABEL_62;
          case 7:
          case 0x25:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 7;
            goto LABEL_62;
          case 8:
            v4 = *(_QWORD *)(v4 + 32);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = v20 + a3;
            goto LABEL_62;
          case 0xA:
          case 0x20:
          case 0x24:
          case 0x26:
          case 0x27:
          case 0x28:
          case 0x29:
            v4 = *(_QWORD *)(v4 + 32);
            goto LABEL_9;
          case 0xC:
          case 0x37:
          case 0x38:
            goto LABEL_76;
          case 0xD:
          case 0x30:
            v23 = *(_QWORD *)(v4 + 24);
            return sub_22E943324(a1, v23, 0);
          case 0xE:
            result = sub_22E9536CC(a1, *(_QWORD *)(v4 + 24));
            if (!(_DWORD)result)
              return result;
            if (!*(_QWORD *)(v4 + 40))
              return 1;
            result = sub_22E952E24(a1, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 16));
            if (!(_DWORD)result)
              return result;
            v25 = *(_DWORD *)(a3 + 28);
            v74 = *(_QWORD *)(*(_QWORD *)(v4 + 40) + 40);
            v75 = v25;
            sub_22EFC6DC4((uint64_t)&v76, v74);
            result = sub_22E952EAC(a1, &v74);
            if (!(_DWORD)result)
              return result;
            v26 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v26)
              return 1;
            v27 = v4 + 48;
            v28 = (uint64_t *)(a3 + 56);
            v29 = v26 - 1;
            do
            {
              v30 = *v28++;
              v77 = *(_OWORD *)v27;
              v78 = *(_QWORD *)(v27 + 16);
              v79 = v30;
              result = sub_22E953D00(a1, (uint64_t)&v77);
              v31 = v29-- != 0;
              v32 = v31;
              if (!(_DWORD)result)
                break;
              v27 += 24;
            }
            while ((v32 & 1) != 0);
            return result;
          case 0xF:
            result = sub_22E953C3C(a1, *(_QWORD *)(v4 + 40));
            if (!(_DWORD)result)
              return result;
            v24 = *(_QWORD *)(v4 + 24);
            return sub_22E9536CC(a1, v24);
          case 0x10:
            v33 = *(_QWORD *)(v4 + 40);
            goto LABEL_96;
          case 0x11:
            v23 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
            return sub_22E943324(a1, v23, 0);
          case 0x12:
            return sub_22E952E24(a1, *(_QWORD *)(v4 + 32), *(_QWORD *)(a3 + 8));
          case 0x13:
            v33 = *(_QWORD *)(v4 + 40);
            if (!v33)
              goto LABEL_97;
LABEL_96:
            result = sub_22E943324(a1, v33, 0);
            if (!(_DWORD)result)
              return result;
LABEL_97:
            v24 = *(_QWORD *)(v4 + 48);
            return sub_22E9536CC(a1, v24);
          case 0x14:
            v34 = *(_QWORD *)(a3 + 8);
            if (v34)
            {
              v35 = *(_QWORD *)(v4 + 32);
              if (v35)
              {
                result = sub_22E952E24(a1, v35, v34);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v36 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v36)
              return 1;
            v37 = v4 + 48;
            v38 = (uint64_t *)(a3 + 32);
            v39 = v36 - 1;
            do
            {
              v40 = *v38++;
              v77 = *(_OWORD *)v37;
              v78 = *(_QWORD *)(v37 + 16);
              v79 = v40;
              result = sub_22E953D00(a1, (uint64_t)&v77);
              v31 = v39-- != 0;
              v41 = v31;
              if (!(_DWORD)result)
                break;
              v37 += 24;
            }
            while ((v41 & 1) != 0);
            return result;
          case 0x15:
            v42 = *(_QWORD *)(v4 + 48);
            if (v42)
            {
              result = sub_22E943324(a1, v42, 0);
              if (!(_DWORD)result)
                return result;
            }
            v24 = *(_QWORD *)(v4 + 40);
            return sub_22E9536CC(a1, v24);
          case 0x18:
            v17 = *(_QWORD *)(v4 + 32);
            if (v17)
            {
              result = sub_22E952E24(a1, v17, *(_QWORD *)(a3 + 8));
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 40);
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              goto LABEL_60;
            v20 = 1;
            goto LABEL_61;
          case 0x19:
            *(_QWORD *)&v77 = v4;
            *((_QWORD *)&v77 + 1) = a3;
            v43 = *(_QWORD *)(v4 + 24);
            v44 = sub_22E47EE80(&v77);
            return sub_22E952F64(a1, v43, v44);
          case 0x1A:
            *(_QWORD *)&v77 = v4;
            *((_QWORD *)&v77 + 1) = a3;
            v45 = *(_QWORD *)(v4 + 24);
            v46 = sub_22E47EE80(&v77);
            result = sub_22E952F64(a1, v45, v46);
            if (!(_DWORD)result)
              return result;
            v47 = v77;
            v48 = *(_QWORD *)(v77 + 16);
            if (*(_BYTE *)(v77 + 16) == 25 || (v48 & 0x3FFFC000000000) == 0)
              goto LABEL_126;
            v50 = 0;
            v51 = (unsigned __int16)(v48 >> 38);
            do
            {
              if (*(_QWORD *)(*((_QWORD *)&v77 + 1) + 8 * v50 + 16))
              {
                if ((sub_22E94EC6C(a1) & 1) == 0)
                  return 0;
              }
              else if (v50 < (unsigned __int16)(*(_QWORD *)(v47 + 16) >> 38))
              {
                result = sub_22E9536CC(a1, *(_QWORD *)(v47 + 40 + 8 * v50));
                if (!(_DWORD)result)
                  return result;
              }
              ++v50;
            }
            while (v51 != v50);
            v48 = *(_QWORD *)(v47 + 16);
LABEL_126:
            if ((v48 & 0x3C0000000000000) == 0x80000000000000)
            {
              v52 = (_DWORD *)((v47 + 8 * (unsigned __int16)(v48 >> 38) + 4 * ((v48 >> 59) & 1) + 47) & 0xFFFFFFFFFFFFFFF8);
              v55 = *v52;
              v54 = (unint64_t *)(v52 + 2);
              v53 = v55;
              if (v55)
              {
                v56 = 8 * v53;
                while ((sub_22E9536CC(a1, *v54) & 1) != 0)
                {
                  ++v54;
                  v56 -= 8;
                  if (!v56)
                    goto LABEL_131;
                }
                return 0;
              }
            }
LABEL_131:
            v57 = sub_22F257D3C(v47);
            if (!v57)
              return 1;
            result = sub_22E943324(a1, v57, 0);
            if ((_DWORD)result)
              return 1;
            return result;
          case 0x1C:
            v4 = *(_QWORD *)(v4 + 24);
LABEL_9:
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
            else
              v20 = 1;
            v10 = a3 + v20 + 3;
            goto LABEL_62;
          case 0x1D:
          case 0x1E:
            result = sub_22E943324(a1, *(_QWORD *)(a3 + 16), 0);
            if (!(_DWORD)result)
              return result;
            result = sub_22E943324(a1, *(_QWORD *)(a3 + 24), 0);
            if (!(_DWORD)result)
              return result;
LABEL_76:
            v24 = *(_QWORD *)(v4 + 32);
            return sub_22E9536CC(a1, v24);
          case 0x1F:
            v19 = *(_QWORD **)(a3 + 8);
            if (v19)
            {
              if ((sub_22E952F64(a1, *v19, v19 + 1) & 1) == 0)
                return 0;
            }
            else
            {
              result = sub_22E9536CC(a1, *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0);
              if (!(_DWORD)result)
                return result;
            }
            v4 = *(_QWORD *)(v4 + 32);
            v20 = 1;
            if (v4 >= 0x10 && (v4 & 0xF) == 0)
LABEL_60:
              v20 = *(_QWORD *)((char *)&unk_22F4656A0
                              + ((uint64_t)((unint64_t)*(unsigned int *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0)
                                                                             + 16) << 56) >> 53));
LABEL_61:
            v10 = a3 + v20 + 15;
LABEL_62:
            a3 = v10 & -v20;
            break;
          case 0x21:
            v58 = *(_QWORD *)(v4 + 24);
            v59 = *(_QWORD *)(v58 & 0xFFFFFFFFFFFFFFF0);
            if (v59 != v4)
            {
              v60 = 1;
              if (v58 >= 0x10 && (v58 & 0xF) == 0)
                v60 = *(_QWORD *)((char *)&unk_22F4656A0
                                + ((uint64_t)((unint64_t)*(unsigned int *)(v59 + 16) << 56) >> 53));
              result = sub_22E952F64(a1, v58, (a3+ (((HIWORD(*(_DWORD *)(v4 + 16)) & 0x3F8) + 4 * (*(_DWORD *)(v4 + 16) >> 26) + 31) & 0x7F8)+ v60- 1) & -v60);
              if (!(_DWORD)result)
                return result;
            }
            v61 = (*(_DWORD *)(v4 + 16) >> 19) & 0x7F;
            if (!(_DWORD)v61)
              return 1;
            v62 = (_QWORD *)(a3 + 24);
            v63 = v61 - 1;
            do
            {
              v64 = (_QWORD *)*v62++;
              result = sub_22E952F64(a1, *v64, v64 + 1);
              v31 = v63-- != 0;
              v65 = v31;
            }
            while ((_DWORD)result && (v65 & 1) != 0);
            return result;
          case 0x2A:
            v66 = *(_DWORD *)(v4 + 20);
            *((_QWORD *)&v77 + 1) = *(_QWORD *)(v4 + 40);
            LODWORD(v77) = 8;
            DWORD1(v77) = v66;
            return sub_22E953B70(a1, (uint64_t)&v77);
          case 0x2B:
            v24 = *(_QWORD *)(v4 + 8);
            return sub_22E9536CC(a1, v24);
          case 0x2E:
            result = sub_22E953C3C(a1, *(_QWORD *)(v4 + 32));
            if (!(_DWORD)result)
              return result;
            v67 = *(unsigned int *)(v4 + 20);
            if (!(_DWORD)v67)
              return 1;
            v68 = v4 + 40;
            v69 = (uint64_t *)(a3 + 16);
            v70 = v67 - 1;
            do
            {
              v71 = *v69++;
              v77 = *(_OWORD *)v68;
              v78 = *(_QWORD *)(v68 + 16);
              v79 = v71;
              result = sub_22E953D00(a1, (uint64_t)&v77);
              v31 = v70-- != 0;
              v72 = v31;
              if (!(_DWORD)result)
                break;
              v68 += 24;
            }
            while ((v72 & 1) != 0);
            return result;
          case 0x31:
          case 0x33:
            v13 = *(unint64_t **)(a3 + 16);
            v14 = *v13;
            a3 = (uint64_t)(v13 + 1);
            v4 = v14;
            break;
          case 0x39:
            goto LABEL_4;
          default:
            return result;
        }
      }
    }
    while (v4);
  }
  return 1;
}

uint64_t sub_22E9536CC(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _DWORD v45[2];
  uint64_t v46;

  if (a2 < 0x10)
    return 1;
  while (2)
  {
    v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    v5 = *(_DWORD *)(v4 + 16);
    result = 1;
    switch((char)v5)
    {
      case 0:
      case 1:
      case 4:
      case 6:
      case 7:
      case 8:
      case 10:
      case 12:
      case 29:
      case 32:
      case 36:
      case 37:
      case 38:
      case 39:
      case 54:
      case 55:
      case 56:
        goto LABEL_5;
      case 2:
        result = sub_22E9536CC(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        if ((*(_BYTE *)(v4 + 19) & 2) == 0)
          return 1;
        v14 = *(_QWORD *)(v4 + 56);
        if (!v14)
          return 1;
        goto LABEL_49;
      case 3:
        result = sub_22E9536CC(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v14 = *(_QWORD *)(v4 + 48);
        if (v14)
          goto LABEL_49;
        return 1;
      case 5:
        result = sub_22E9536CC(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v13 = *(_QWORD *)(v4 + 40);
        return sub_22E943324(a1, v13, 0);
      case 13:
      case 48:
        v13 = *(_QWORD *)(v4 + 24);
        return sub_22E943324(a1, v13, 0);
      case 14:
        result = sub_22E9536CC(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        if (!*(_QWORD *)(v4 + 40))
          return 1;
        result = sub_22E94EC6C(a1);
        if (!(_DWORD)result)
          return result;
        v15 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v15)
          return 1;
        v16 = v4 + 48;
        v17 = v15 - 1;
        do
        {
          result = sub_22E953B70(a1, v16);
          v18 = v17-- != 0;
          v19 = v18;
          if (!(_DWORD)result)
            break;
          v16 += 24;
        }
        while ((v19 & 1) != 0);
        return result;
      case 15:
        result = sub_22E953C3C(a1, *(_QWORD *)(v4 + 40));
        if ((_DWORD)result)
          goto LABEL_19;
        return result;
      case 16:
        v7 = *(_QWORD *)(v4 + 40);
        goto LABEL_22;
      case 17:
        v13 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
        return sub_22E943324(a1, v13, 0);
      case 18:
        return sub_22E953C9C(a1, *(_QWORD *)(v4 + 32));
      case 19:
        v7 = *(_QWORD *)(v4 + 40);
        if (!v7)
          goto LABEL_23;
LABEL_22:
        result = sub_22E943324(a1, v7, 0);
        if (!(_DWORD)result)
          return result;
LABEL_23:
        v6 = (unint64_t *)(v4 + 48);
        goto LABEL_6;
      case 20:
        result = sub_22E953C9C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v20 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v20)
          return 1;
        v21 = v4 + 48;
        v22 = v20 - 1;
        do
        {
          result = sub_22E953B70(a1, v21);
          v18 = v22-- != 0;
          v23 = v18;
          if (!(_DWORD)result)
            break;
          v21 += 24;
        }
        while ((v23 & 1) != 0);
        return result;
      case 21:
        v8 = *(_QWORD *)(v4 + 48);
        if (v8)
        {
          result = sub_22E943324(a1, v8, 0);
          if (!(_DWORD)result)
            return result;
        }
        goto LABEL_31;
      case 22:
        goto LABEL_34;
      case 23:
        v9 = *(_QWORD *)(v4 + 64);
        if (!v9)
          goto LABEL_5;
        goto LABEL_35;
      case 24:
        v10 = *(_QWORD *)(v4 + 32);
        if (v10)
        {
          result = sub_22E953C9C(a1, v10);
          if (!(_DWORD)result)
            return result;
        }
LABEL_31:
        v6 = (unint64_t *)(v4 + 40);
        goto LABEL_6;
      case 25:
      case 28:
      case 49:
LABEL_19:
        v6 = (unint64_t *)(v4 + 24);
        goto LABEL_6;
      case 26:
        result = sub_22E9536CC(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        v24 = *(_QWORD *)(v4 + 16);
        v25 = (unsigned __int16)(v24 >> 38);
        if (!(unsigned __int16)(v24 >> 38))
          goto LABEL_82;
        v26 = 8 * v25;
        v27 = (_QWORD *)(v4 + 40);
        break;
      case 30:
        v11 = *(_QWORD *)(v4 + 48);
        if (v11)
        {
          result = sub_22E943324(a1, v11, 0);
          if (!(_DWORD)result)
            return result;
        }
LABEL_34:
        v9 = *(_QWORD *)(v4 + 56);
        if (!v9)
          goto LABEL_5;
LABEL_35:
        result = sub_22E943324(a1, v9, 0);
        if (!(_DWORD)result)
          return result;
LABEL_5:
        v6 = (unint64_t *)(v4 + 32);
LABEL_6:
        a2 = *v6;
        if (*v6 < 0x10)
          return 1;
        continue;
      case 31:
        v12 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_40;
      case 33:
        v34 = *(_QWORD *)(v4 + 24);
        if (*(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF0) != v4)
        {
          result = sub_22E9536CC(a1, v34);
          if (!(_DWORD)result)
            return result;
        }
        v35 = (*(_QWORD *)(v4 + 16) >> 19) & 0x7FLL;
        if (!v35)
          return 1;
        v36 = (uint64_t *)(v4 + 48);
        v37 = 8 * v35 - 8;
        do
        {
          v38 = *v36++;
          result = sub_22E9536CC(a1, v38);
          if ((_DWORD)result)
            v39 = v37 == 0;
          else
            v39 = 1;
          v37 -= 8;
        }
        while (!v39);
        return result;
      case 40:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 41:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 42:
        v40 = *(_DWORD *)(v4 + 20);
        v46 = *(_QWORD *)(v4 + 40);
        v45[0] = 8;
        v45[1] = v40;
        return sub_22E953B70(a1, (uint64_t)v45);
      case 43:
        v6 = (unint64_t *)(v4 + 8);
        goto LABEL_6;
      case 46:
        result = sub_22E953C3C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v41 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v41)
          return 1;
        v42 = v4 + 40;
        v43 = v41 - 1;
        do
        {
          result = sub_22E953B70(a1, v42);
          v18 = v43-- != 0;
          v44 = v18;
          if (!(_DWORD)result)
            break;
          v42 += 24;
        }
        while ((v44 & 1) != 0);
        return result;
      case 51:
        v12 = *(_QWORD *)(v4 + 24);
LABEL_40:
        result = sub_22E9536CC(a1, v12);
        if (!(_DWORD)result)
          return result;
        goto LABEL_5;
      default:
        return result;
    }
    break;
  }
  do
  {
    if ((sub_22E9536CC(a1, *v27) & 1) == 0)
      return 0;
    ++v27;
    v26 -= 8;
  }
  while (v26);
  v24 = *(_QWORD *)(v4 + 16);
  v25 = (unsigned __int16)(v24 >> 38);
LABEL_82:
  if ((v24 & 0x3C0000000000000) == 0x80000000000000)
  {
    v28 = (_DWORD *)((v4 + 40 + 8 * v25 + 4 * ((v24 >> 59) & 1) + 7) & 0xFFFFFFFFFFFFFFF8);
    v31 = *v28;
    v30 = v28 + 2;
    v29 = v31;
    if (v31)
    {
      v32 = 8 * v29;
      while ((sub_22E9536CC(a1, *v30) & 1) != 0)
      {
        ++v30;
        v32 -= 8;
        if (!v32)
          goto LABEL_87;
      }
      return 0;
    }
  }
LABEL_87:
  v33 = sub_22F257D3C(v4);
  if (!v33)
    return 1;
  v14 = v33;
LABEL_49:
  result = sub_22E943324(a1, v14, 0);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22E953B70(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      result = sub_22E9536CC(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      result = sub_22E953C3C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 8), 0);
      break;
    case 8:
      v4 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v4)
      {
        v5 = *(_QWORD *)(a2 + 8);
        v6 = v4 - 1;
        do
        {
          result = sub_22E953B70(a1, v5);
          v8 = v6-- != 0;
          if (!(_DWORD)result)
            break;
          v5 += 24;
        }
        while (v8);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22E953C3C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  char v5;

  v2 = a2 & 0xFFFFFFFFFFFFFFF8;
  if ((a2 & 6) != 6 || v2 == 0)
  {
    if ((a2 & 6) != 4)
      return 1;
    if (!v2)
      return 1;
    result = sub_22E953C9C(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    if ((_DWORD)result)
      return 1;
  }
  else
  {
    v5 = sub_22E953C9C(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    return (v5 & 1) != 0;
  }
  return result;
}

uint64_t sub_22E953C9C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 1;
  v4 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v4 || (result = sub_22E953C9C(a1, v4), (_DWORD)result))
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 && (*(_BYTE *)(a2 + 8) & 4) != 0)
      return sub_22E9536CC(a1, v6 & 0xFFFFFFFFFFFFFFF0);
    return 1;
  }
  return result;
}

uint64_t sub_22E953D00(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      v6 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (v6)
        result = sub_22E952F64(a1, *v6, v6 + 1);
      else
        result = sub_22E9536CC(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      v5 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (!*v5 || (result = sub_22E952E24(a1, *v5, v5[1]), (_DWORD)result))
        result = sub_22E953C3C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL, 0);
      break;
    case 8:
      v7 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        v9 = v7 - 1;
        do
        {
          result = sub_22E953B70(a1, v8);
          v11 = v9-- != 0;
          if (!(_DWORD)result)
            break;
          v8 += 24;
        }
        while (v11);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22E953E18(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (!a2)
    return 1;
  if ((*(_WORD *)(a2 + 8) & 0x80) != 0)
    sub_22EFCC320(a2);
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 1;
  while (1)
  {
    if ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 1 >= 2
      && ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 > 2
       || (v5 = *(_QWORD *)(v4 + 128)) == 0
       || ((*(unsigned __int16 *)(v5 + 8) | (*(unsigned __int8 *)(v5 + 10) << 16)) & 0x100000) == 0))
    {
      result = sub_22E94EC6C(a1);
      if (!(_DWORD)result)
        break;
    }
    v4 = *(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v4)
      return 1;
  }
  return result;
}

uint64_t sub_22E953EB4(uint64_t a1, uint64_t a2)
{
  if (a2)
    __asm { BR              X10 }
  return 1;
}

void sub_22E953F38()
{
  uint64_t v0;
  uint64_t v1;

  if (sub_22E943324(v0, *(_QWORD *)(v1 + 40), 0))
    JUMPOUT(0x22E953EF4);
  JUMPOUT(0x22E953F28);
}

void sub_22E953F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v2 = *(unsigned int *)(v1 + 48);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2;
    while ((sub_22E943324(v0, *v3, 0) & 1) != 0)
    {
      ++v3;
      v4 -= 8;
      if (!v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v5 = *(unsigned int *)(v1 + 64);
    if (!(_DWORD)v5)
      JUMPOUT(0x22E953F24);
    v6 = *(uint64_t **)(v1 + 72);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22E943324(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E95408C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E9540C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E9540FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E954134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E943324(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E953F24);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E954180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E9541B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if (sub_22E943324(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 56);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 64);
      v4 = 8 * v2;
      do
      {
        if ((sub_22E943324(v0, *v3, 0) & 1) == 0)
          JUMPOUT(0x22E954084);
        ++v3;
        v4 -= 8;
      }
      while (v4);
    }
    v5 = *(unsigned int *)(v1 + 72);
    if (!(_DWORD)v5)
      JUMPOUT(0x22E953F24);
    v6 = *(uint64_t **)(v1 + 80);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22E943324(v0, v8, 0))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E954234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E95426C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E9542A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E943324(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E953F24);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E9542F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E943324(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E953F24);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E943324(v0, v5, 0))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E953F28);
}

void sub_22E95433C()
{
  JUMPOUT(0x22E953F10);
}

void sub_22E954344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  if (sub_22E943324(v0, *(_QWORD *)(v1 + 40), 0))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 56);
      v4 = 8 * v2;
      while ((sub_22E943324(v0, *v3, 0) & 1) != 0)
      {
        ++v3;
        v4 -= 8;
        if (!v4)
          goto LABEL_6;
      }
LABEL_33:
      JUMPOUT(0x22E954084);
    }
LABEL_6:
    v5 = *(unsigned int *)(v1 + 64);
    if ((_DWORD)v5)
    {
      v6 = *(uint64_t **)(v1 + 72);
      v7 = 8 * v5;
      while ((sub_22E943324(v0, *v6, 0) & 1) != 0)
      {
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_10;
      }
      goto LABEL_33;
    }
LABEL_10:
    v8 = *(unsigned int *)(v1 + 80);
    if ((_DWORD)v8)
    {
      v9 = *(uint64_t **)(v1 + 88);
      v10 = 8 * v8;
      while ((sub_22E943324(v0, *v9, 0) & 1) != 0)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_14;
      }
      goto LABEL_33;
    }
LABEL_14:
    v11 = *(unsigned int *)(v1 + 96);
    if ((_DWORD)v11)
    {
      v12 = *(uint64_t **)(v1 + 104);
      v13 = 8 * v11;
      while ((sub_22E943324(v0, *v12, 0) & 1) != 0)
      {
        ++v12;
        v13 -= 8;
        if (!v13)
          goto LABEL_18;
      }
      goto LABEL_33;
    }
LABEL_18:
    v14 = *(unsigned int *)(v1 + 128);
    if (!(_DWORD)v14)
      JUMPOUT(0x22E953F24);
    v15 = *(uint64_t **)(v1 + 136);
    v16 = 8 * v14 - 8;
    do
    {
      v17 = *v15++;
      if (sub_22E943324(v0, v17, 0))
        v18 = v16 == 0;
      else
        v18 = 1;
      v16 -= 8;
    }
    while (!v18);
  }
  JUMPOUT(0x22E953F28);
}

uint64_t sub_22E954450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (!a2)
    return 1;
  v4 = a2 + 16;
  v5 = *(_DWORD *)(a2 + 12);
  if ((v5 & 0x1FFFFFFF) != 0)
  {
    v6 = 8 * (v5 & 0x1FFFFFFF);
    v7 = a2 + 16;
    while ((sub_22E94EC6C(a1) & 1) != 0)
    {
      v7 += 8;
      v6 -= 8;
      if (!v6)
      {
        v5 = *(_DWORD *)(a2 + 12);
        goto LABEL_7;
      }
    }
    return 0;
  }
  else
  {
LABEL_7:
    if ((v5 & 0x40000000) == 0)
      return 1;
    v8 = *(_QWORD *)(v4 + 8 * (v5 & 0x1FFFFFFF));
    if (!v8)
      return 1;
    result = sub_22E943324(a1, v8, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22E9544F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 120);
  if ((v3 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v3 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E954450(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v3 = *(_QWORD *)(a2 + 120);
      if ((v3 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  return sub_22E952E24(a1, v7, v8);
}

uint64_t sub_22E954564(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;

  result = sub_22E9544F0(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_BYTE *)(a2 + 74) & 1) == 0)
      return 1;
    v5 = sub_22E46A3A0(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 24;
      do
      {
        result = sub_22E952F64(a1, **(_QWORD **)(v8 - 8), *(_QWORD *)(v8 - 8) + 8);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 24;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22E9545DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t *v11;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E954450(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22E952E24(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_QWORD *)(a2 + 56);
    if ((v10 & 4) != 0)
    {
      v11 = *(unint64_t **)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
      if (v11)
        return (sub_22E952F64(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    else if (v10 >= 8)
    {
      v11 = (unint64_t *)(v10 & 0xFFFFFFFFFFFFFFF8);
      return (sub_22E952F64(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    result = sub_22E9536CC(a1, *(_QWORD *)(a2 + 48));
    if (!(_DWORD)result)
      return result;
    return 1;
  }
  return result;
}

uint64_t sub_22E9546A8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  _BOOL4 v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E954450(a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22E952E24(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_DWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 152);
    v38 = *(_QWORD *)(a2 + 40);
    v39 = v10;
    v40 = v11;
    result = sub_22E952EAC(a1, &v38);
    if ((_DWORD)result)
    {
      v12 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
      if ((*(_QWORD *)(a2 + 144) & 6) == 4 && v12 != 0 && (*(_BYTE *)(v12 + 16) & 6) != 0)
      {
        v14 = *(_QWORD *)(v12 + 32);
        if (v14)
        {
          v15 = *(unsigned int *)(v14 + 8);
          if ((_DWORD)v15)
          {
            v16 = v14 + 16;
            while ((sub_22E953D00(a1, v16) & 1) != 0)
            {
              v16 += 32;
              if (!--v15)
                goto LABEL_19;
            }
            return 0;
          }
        }
      }
LABEL_19:
      v17 = *(_QWORD *)(a2 + 56);
      v18 = (unint64_t *)(v17 & 0xFFFFFFFFFFFFFFF8);
      if ((v17 & 4) != 0)
        v18 = (unint64_t *)v18[4];
      if (v18)
      {
        result = sub_22E952F64(a1, *v18, (uint64_t)(v18 + 1));
        if (!(_DWORD)result)
          return result;
        v17 = *(_QWORD *)(a2 + 56);
      }
      if ((v17 & 4) == 0
        || (v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40)) == 0
        || (result = sub_22E943324(a1, v19, 0), (_DWORD)result))
      {
        if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
        {
          v20 = sub_22EFD7ED0(a2);
          v21 = sub_22EFD7ED0(a2) + 8 * ((*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL);
          while (v20 != v21)
          {
            v22 = *(_QWORD *)v20;
            if ((*(_WORD *)(*(_QWORD *)v20 + 28) & 4) != 0)
            {
              v23 = (unint64_t *)(*(_QWORD *)v22 & 0xFFFFFFFFFFFFFFF8);
              if ((*(_QWORD *)v22 & 6) != 0 || v23 == 0)
                goto LABEL_37;
              result = sub_22E952F64(a1, *v23, (uint64_t)(v23 + 1));
              if (!(_DWORD)result)
                return result;
              if ((*(_WORD *)(v22 + 28) & 4) != 0)
              {
LABEL_37:
                result = sub_22E943324(a1, *(_QWORD *)(v22 + 8), 0);
                if (!(_DWORD)result)
                  return result;
              }
            }
            v20 += 8;
          }
        }
        v25 = sub_22E49F868(a2) && (*(_BYTE *)(a2 + 83) & 2) == 0;
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
          goto LABEL_70;
        v26 = *(_WORD *)(a2 + 80) & 0x7F;
        v27 = -40;
        if (v26 > 0x46)
        {
          if (v26 == 83)
            goto LABEL_60;
          if (v26 == 71)
          {
            v27 = -56;
            goto LABEL_60;
          }
          if (v26 != 81)
          {
LABEL_55:
            v28 = v26 - 52;
            v29 = v26 - 33 >= 5;
            v30 = -48;
            if (!v29)
              v30 = -64;
            if (v28 >= 6)
              v27 = v30;
            else
              v27 = -72;
          }
        }
        else
        {
          if (v26 > 0x18)
            goto LABEL_54;
          if (v26 == 16)
          {
LABEL_46:
            v27 = -48;
            goto LABEL_60;
          }
          if (((1 << v26) & 0x1066) == 0)
          {
            if (v26 == 24)
              goto LABEL_46;
LABEL_54:
            if (v26 == 70)
            {
              v27 = -64;
              goto LABEL_60;
            }
            goto LABEL_55;
          }
        }
LABEL_60:
        v31 = *(_QWORD *)(a2 + 72 + v27 + 16);
        v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
        if ((v31 & 4) != 0)
          v32 = (_QWORD *)*v32;
        if (v32)
        {
          v33 = v32[8];
          if (v33)
          {
            if (((*(unsigned __int16 *)(v33 + 8) | (*(unsigned __int8 *)(v33 + 10) << 16)) & 0x100000) != 0)
            {
              v34 = sub_22EFD462C((unint64_t)(v32 - 8));
              if (v34)
              {
                if ((*(_DWORD *)(v34 + 28) & 0x7F) != 0x1D || (v34 = *(_QWORD *)(v34 + 48)) != 0)
                {
                  if (v34 == a2
                    || (v35 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v34 + 32))(v34),
                        v35 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2)))
                  {
                    if (!v25)
                      return 1;
LABEL_71:
                    v36 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
                    result = sub_22E943324(a1, v36, 0);
                    if (!(_DWORD)result)
                      return result;
                    if ((*(_WORD *)(a2 + 80) & 0x80) != 0)
                      sub_22EFCC320(a2 + 72);
                    v37 = *(_QWORD *)(a2 + 88);
                    if (v37)
                    {
                      do
                      {
                        if ((*(_DWORD *)(v37 + 28) & 0x7E) == 0x2E)
                        {
                          result = sub_22E94EC6C(a1);
                          if (!(_DWORD)result)
                            break;
                        }
                        result = 1;
                        v37 = *(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF8;
                      }
                      while (v37);
                      return result;
                    }
                    return 1;
                  }
                }
              }
            }
          }
        }
LABEL_70:
        if (!v25)
          return 1;
        goto LABEL_71;
      }
    }
  }
  return result;
}

uint64_t sub_22E954A6C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = sub_22E9545DC(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      return 1;
    if ((*(_BYTE *)(a2 + 97) & 8) != 0)
      return 1;
    v5 = sub_22EFBC5B4(a2);
    result = sub_22E943324(a1, v5, 0);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22E954ACC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *mm;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *i2;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *n;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *ii;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *nn;
  uint64_t v79;
  uint64_t v80;
  _QWORD *i1;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *i;
  uint64_t v92;
  uint64_t v93;
  _QWORD *j;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *jj;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *kk;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *k;
  uint64_t v175;
  uint64_t v176;
  _QWORD *m;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  __int128 v208;
  uint64_t v209;

  if (!a2)
    return 1;
  switch(*(_DWORD *)(a2 + 8))
  {
    case 3:
      v85 = (_QWORD *)(a2 + 24);
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if ((_DWORD)result)
      {
        v86 = *(unsigned int *)(a2 + 16);
        if (!(_DWORD)v86)
          return 1;
        v87 = 8 * v86;
        do
        {
          if ((sub_22E943324(a1, *v85, 0) & 1) == 0)
            return 0;
          ++v85;
          v87 -= 8;
        }
        while (v87);
        return 1;
      }
      return result;
    case 4:
    case 7:
    case 0xC:
    case 0x13:
    case 0x15:
    case 0x23:
    case 0x3C:
    case 0x3D:
    case 0x46:
    case 0x4B:
      v5 = *(_QWORD *)(a2 + 16);
      return (sub_22E943324(a1, v5, 0) & 1) != 0;
    case 5:
      v137 = (_QWORD *)(a2 + 24);
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)), 0);
      if (!(_DWORD)result)
        return result;
      v138 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v138)
        return 1;
      v139 = 8 * v138;
      while ((sub_22E943324(a1, *v137, 0) & 1) != 0)
      {
        ++v137;
        v139 -= 8;
        if (!v139)
          return 1;
      }
      return 0;
    case 6:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 24), 0);
      if (!(_DWORD)result)
        return result;
      v134 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v134)
        return 1;
      v135 = (_QWORD *)(a2 + 40);
      v136 = 8 * v134;
      while ((sub_22E943324(a1, *v135, 0) & 1) != 0)
      {
        ++v135;
        v136 -= 8;
        if (!v136)
          return 1;
      }
      return 0;
    case 0xE:
      v88 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v88)
        return 1;
      v89 = a2 + 24;
      v90 = 8 * v88;
      for (i = (_QWORD *)(a2 + 24); (sub_22E943324(a1, *i, 0) & 1) != 0; ++i)
      {
        v90 -= 8;
        if (!v90)
        {
          v92 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v92)
            return 1;
          v93 = 8 * v92;
          for (j = (_QWORD *)(v89 + 8 * v92); (sub_22E943324(a1, *j, 0) & 1) != 0; ++j)
          {
            v93 -= 8;
            if (!v93)
            {
              v95 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v95)
                return 1;
              v96 = (_QWORD *)(v89 + 8 * v95 + 8 * v95);
              v97 = 8 * v95;
              while ((sub_22E943324(a1, *v96, 0) & 1) != 0)
              {
                ++v96;
                v97 -= 8;
                if (!v97)
                {
                  v98 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v98)
                    return 1;
                  v99 = (_QWORD *)(v89 + 8 * v98 + 8 * v98 + 8 * v98);
                  v100 = 8 * v98;
                  while ((sub_22E943324(a1, *v99, 0) & 1) != 0)
                  {
                    ++v99;
                    v100 -= 8;
                    if (!v100)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0xF:
      v171 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v171)
        return 1;
      v172 = a2 + 24;
      v173 = 8 * v171;
      for (k = (_QWORD *)(a2 + 24); (sub_22E943324(a1, *k, 0) & 1) != 0; ++k)
      {
        v173 -= 8;
        if (!v173)
        {
          v175 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v175)
            return 1;
          v176 = 8 * v175;
          for (m = (_QWORD *)(v172 + 8 * v175); (sub_22E943324(a1, *m, 0) & 1) != 0; ++m)
          {
            v176 -= 8;
            if (!v176)
            {
              v178 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v178)
                return 1;
              v179 = (_QWORD *)(v172 + 8 * v178 + 8 * v178);
              v180 = 8 * v178;
              while ((sub_22E943324(a1, *v179, 0) & 1) != 0)
              {
                ++v179;
                v180 -= 8;
                if (!v180)
                {
                  v181 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v181)
                    return 1;
                  v182 = (_QWORD *)(v172 + 8 * v181 + 8 * v181 + 8 * v181);
                  v183 = 8 * v181;
                  while ((sub_22E943324(a1, *v182, 0) & 1) != 0)
                  {
                    ++v182;
                    v183 -= 8;
                    if (!v183)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x12:
      v184 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v184)
        return 1;
      v185 = (_QWORD *)(a2 + 40);
      v186 = 8 * v184;
      while ((sub_22E943324(a1, *v185, 0) & 1) != 0)
      {
        ++v185;
        v186 -= 8;
        if (!v186)
          return 1;
      }
      return 0;
    case 0x14:
    case 0x58:
      v5 = *(_QWORD *)(a2 + 24);
      return (sub_22E943324(a1, v5, 0) & 1) != 0;
    case 0x16:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 40);
      return (sub_22E943324(a1, v5, 0) & 1) != 0;
    case 0x18:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 48);
      return (sub_22E943324(a1, v5, 0) & 1) != 0;
    case 0x1A:
      v193 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v193)
        return 1;
      v194 = (_QWORD *)(a2 + 24);
      v195 = 8 * v193;
      while ((sub_22E943324(a1, *v194, 0) & 1) != 0)
      {
        ++v194;
        v195 -= 8;
        if (!v195)
          return 1;
      }
      return 0;
    case 0x1B:
    case 0x1C:
    case 0x21:
    case 0x24:
    case 0x34:
    case 0x37:
    case 0x38:
    case 0x39:
    case 0x3A:
    case 0x3E:
    case 0x4E:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 32);
      return (sub_22E943324(a1, v5, 0) & 1) != 0;
    case 0x1D:
      v40 = a2 + 40;
      v41 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v41)
        goto LABEL_72;
      v42 = 8 * v41;
      v43 = (_QWORD *)(a2 + 40);
      while ((sub_22E943324(a1, *v43, 0) & 1) != 0)
      {
        ++v43;
        v42 -= 8;
        if (!v42)
        {
LABEL_72:
          result = sub_22E943324(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          v44 = *(unsigned int *)(a2 + 16);
          if ((_DWORD)v44)
          {
            v45 = 8 * v44;
            for (n = (_QWORD *)(v40 + 8 * v44); (sub_22E943324(a1, *n, 0) & 1) != 0; ++n)
            {
              v45 -= 8;
              if (!v45)
              {
                v47 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v47)
                  return 1;
                v48 = (_QWORD *)(v40 + 8 * v47 + 8 * v47);
                v49 = 8 * v47;
                while ((sub_22E943324(a1, *v48, 0) & 1) != 0)
                {
                  ++v48;
                  v49 -= 8;
                  if (!v49)
                    return 1;
                }
                return 0;
              }
            }
            return 0;
          }
          return 1;
        }
      }
      return 0;
    case 0x1E:
      v82 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v82)
        return 1;
      v83 = (_QWORD *)(a2 + 24);
      v84 = 8 * v82;
      while ((sub_22E943324(a1, *v83, 0) & 1) != 0)
      {
        ++v83;
        v84 -= 8;
        if (!v84)
          return 1;
      }
      return 0;
    case 0x1F:
      v187 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v187)
        return 1;
      v188 = (_QWORD *)(a2 + 104);
      v189 = 8 * v187;
      while ((sub_22E943324(a1, *v188, 0) & 1) != 0)
      {
        ++v188;
        v189 -= 8;
        if (!v189)
          return 1;
      }
      return 0;
    case 0x22:
      v199 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v199)
        return 1;
      v200 = (_QWORD *)(a2 + 80);
      v201 = 8 * v199;
      while ((sub_22E943324(a1, *v200, 0) & 1) != 0)
      {
        ++v200;
        v201 -= 8;
        if (!v201)
          return 1;
      }
      return 0;
    case 0x25:
      if (!sub_22E952E24(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22E952EAC(a1, (uint64_t *)&v208))
        return 0;
      v56 = a2 + 96;
      v57 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v57)
        goto LABEL_98;
      v58 = 8 * v57;
      v59 = (_QWORD *)(a2 + 96);
      while ((sub_22E943324(a1, *v59, 0) & 1) != 0)
      {
        ++v59;
        v58 -= 8;
        if (!v58)
        {
LABEL_98:
          if (sub_22E943324(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22E943324(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v60 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v60)
              return 1;
            v61 = 8 * v60;
            for (ii = (_QWORD *)(v56 + 8 * v60); (sub_22E943324(a1, *ii, 0) & 1) != 0; ++ii)
            {
              v61 -= 8;
              if (!v61)
              {
                v63 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v63)
                  return 1;
                v64 = (_QWORD *)(v56 + 8 * v63 + 8 * v63);
                v65 = 8 * v63;
                while ((sub_22E943324(a1, *v64, 0) & 1) != 0)
                {
                  ++v64;
                  v65 -= 8;
                  if (!v65)
                  {
                    v66 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v66)
                      return 1;
                    v67 = (_QWORD *)(v56 + 8 * v66 + 8 * v66 + 8 * v66);
                    v68 = 8 * v66;
                    while ((sub_22E943324(a1, *v67, 0) & 1) != 0)
                    {
                      ++v67;
                      v68 -= 8;
                      if (!v68)
                      {
                        v69 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v69)
                          return 1;
                        v70 = (_QWORD *)(v56 + 8 * v69 + 8 * v69 + 8 * v69 + 8 * v69);
                        v71 = 8 * v69;
                        while ((sub_22E943324(a1, *v70, 0) & 1) != 0)
                        {
                          ++v70;
                          v71 -= 8;
                          if (!v71)
                          {
                            v72 = *(unsigned int *)(a2 + 16);
                            if (!(_DWORD)v72)
                              return 1;
                            v73 = (_QWORD *)(v56 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72);
                            v74 = 8 * v72;
                            while ((sub_22E943324(a1, *v73, 0) & 1) != 0)
                            {
                              ++v73;
                              v74 -= 8;
                              if (!v74)
                                return 1;
                            }
                            return 0;
                          }
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x27:
      v168 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v168)
        return 1;
      v169 = (_QWORD *)(a2 + 24);
      v170 = 8 * v168;
      while ((sub_22E943324(a1, *v169, 0) & 1) != 0)
      {
        ++v169;
        v170 -= 8;
        if (!v170)
          return 1;
      }
      return 0;
    case 0x29:
      v53 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v53)
        return 1;
      v54 = (_QWORD *)(a2 + 32);
      v55 = 8 * v53;
      while ((sub_22E943324(a1, *v54, 0) & 1) != 0)
      {
        ++v54;
        v55 -= 8;
        if (!v55)
          return 1;
      }
      return 0;
    case 0x2A:
      v50 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v50)
        return 1;
      v51 = (_QWORD *)(a2 + 80);
      v52 = 8 * v50;
      while ((sub_22E943324(a1, *v51, 0) & 1) != 0)
      {
        ++v51;
        v52 -= 8;
        if (!v52)
          return 1;
      }
      return 0;
    case 0x2B:
      v101 = a2 + 64;
      v102 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v102)
        goto LABEL_164;
      v103 = 8 * v102;
      v104 = (_QWORD *)(a2 + 64);
      while ((sub_22E943324(a1, *v104, 0) & 1) != 0)
      {
        ++v104;
        v103 -= 8;
        if (!v103)
        {
LABEL_164:
          result = sub_22E943324(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22E943324(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v105 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v105)
            return 1;
          v106 = 8 * v105;
          for (jj = (_QWORD *)(v101 + 8 * v105); (sub_22E943324(a1, *jj, 0) & 1) != 0; ++jj)
          {
            v106 -= 8;
            if (!v106)
            {
              v108 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v108)
                return 1;
              v109 = (_QWORD *)(v101 + 8 * v108 + 8 * v108);
              v110 = 8 * v108;
              while ((sub_22E943324(a1, *v109, 0) & 1) != 0)
              {
                ++v109;
                v110 -= 8;
                if (!v110)
                {
                  v111 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v111)
                    return 1;
                  v112 = (_QWORD *)(v101 + 8 * v111 + 8 * v111 + 8 * v111);
                  v113 = 8 * v111;
                  while ((sub_22E943324(a1, *v112, 0) & 1) != 0)
                  {
                    ++v112;
                    v113 -= 8;
                    if (!v113)
                    {
                      v114 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v114)
                        return 1;
                      v115 = (_QWORD *)(v101 + 8 * v114 + 8 * v114 + 8 * v114 + 8 * v114);
                      v116 = 8 * v114;
                      while ((sub_22E943324(a1, *v115, 0) & 1) != 0)
                      {
                        ++v115;
                        v116 -= 8;
                        if (!v116)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2C:
      v117 = a2 + 64;
      v118 = *(unsigned int *)(a2 + 16);
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 64 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118), 0);
      if (!(_DWORD)result)
        return result;
      result = sub_22E943324(a1, *(_QWORD *)(v117+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8), 0);
      if (!(_DWORD)result)
        return result;
      v119 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v119)
        goto LABEL_191;
      v120 = 8 * v119;
      v121 = (_QWORD *)(a2 + 64);
      while ((sub_22E943324(a1, *v121, 0) & 1) != 0)
      {
        ++v121;
        v120 -= 8;
        if (!v120)
        {
LABEL_191:
          result = sub_22E943324(a1, *(_QWORD *)(a2 + 24), 0);
          if (!(_DWORD)result)
            return result;
          result = sub_22E943324(a1, *(_QWORD *)(a2 + 40), 0);
          if (!(_DWORD)result)
            return result;
          v122 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v122)
            return 1;
          v123 = 8 * v122;
          for (kk = (_QWORD *)(v117 + 8 * v122); (sub_22E943324(a1, *kk, 0) & 1) != 0; ++kk)
          {
            v123 -= 8;
            if (!v123)
            {
              v125 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v125)
                return 1;
              v126 = (_QWORD *)(v117 + 8 * v125 + 8 * v125);
              v127 = 8 * v125;
              while ((sub_22E943324(a1, *v126, 0) & 1) != 0)
              {
                ++v126;
                v127 -= 8;
                if (!v127)
                {
                  v128 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v128)
                    return 1;
                  v129 = (_QWORD *)(v117 + 8 * v128 + 8 * v128 + 8 * v128);
                  v130 = 8 * v128;
                  while ((sub_22E943324(a1, *v129, 0) & 1) != 0)
                  {
                    ++v129;
                    v130 -= 8;
                    if (!v130)
                    {
                      v131 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v131)
                        return 1;
                      v132 = (_QWORD *)(v117 + 8 * v131 + 8 * v131 + 8 * v131 + 8 * v131);
                      v133 = 8 * v131;
                      while ((sub_22E943324(a1, *v132, 0) & 1) != 0)
                      {
                        ++v132;
                        v133 -= 8;
                        if (!v133)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2E:
      v190 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v190)
        return 1;
      v191 = (_QWORD *)(a2 + 136);
      v192 = 8 * v190;
      while ((sub_22E943324(a1, *v191, 0) & 1) != 0)
      {
        ++v191;
        v192 -= 8;
        if (!v192)
          return 1;
      }
      return 0;
    case 0x35:
      v6 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v6)
        return 1;
      v7 = a2 + 24;
      v8 = 8 * v6;
      for (mm = (_QWORD *)(a2 + 24); (sub_22E943324(a1, *mm, 0) & 1) != 0; ++mm)
      {
        v8 -= 8;
        if (!v8)
        {
          v10 = *(unsigned int *)(a2 + 16);
          v11 = (uint64_t *)(v7 + 8 * v10);
          v208 = (unint64_t)v11;
          if ((_DWORD)v10)
          {
            v12 = 0;
            v13 = &v11[v10];
            while (1)
            {
              if ((v12 & 3) != 0)
              {
                if ((v12 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                  v14 = (_QWORD *)((v12 & 0xFFFFFFFFFFFFFFFCLL) + 40);
                else
                  v14 = (_QWORD *)sub_22F3AC1A8(*v11);
                if ((sub_22E943324(a1, *v14, 0) & 1) == 0)
                  return 0;
                if (v12 < 4)
                  sub_22F3F2FE0((uint64_t)&v208, 1);
                else
                  sub_22F0D8720((uint64_t)&v208);
              }
              else
              {
                if (!sub_22E943324(a1, *v11, 0))
                  return 0;
                *(_QWORD *)&v208 = v11 + 1;
              }
              v12 = *((_QWORD *)&v208 + 1);
              v11 = (uint64_t *)v208;
              if ((uint64_t *)v208 == v13 && *((_QWORD *)&v208 + 1) == 0)
                return 1;
            }
          }
          return 1;
        }
      }
      return 0;
    case 0x3F:
      v75 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v75)
        return 1;
      v76 = a2 + 24;
      v77 = 8 * v75;
      for (nn = (_QWORD *)(a2 + 24); (sub_22E943324(a1, *nn, 0) & 1) != 0; ++nn)
      {
        v77 -= 8;
        if (!v77)
        {
          v79 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v79)
            return 1;
          v80 = 8 * v79;
          for (i1 = (_QWORD *)(v76 + 8 * v79); (sub_22E943324(a1, *i1, 0) & 1) != 0; ++i1)
          {
            v80 -= 8;
            if (!v80)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 0x42:
      if (!sub_22E952E24(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v208 = *(_OWORD *)(a2 + 80);
      v209 = *(_QWORD *)(a2 + 96);
      if (!sub_22E952EAC(a1, (uint64_t *)&v208))
        return 0;
      v140 = a2 + 104;
      v141 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v141)
        goto LABEL_228;
      v142 = 8 * v141;
      v143 = (_QWORD *)(a2 + 104);
      while ((sub_22E943324(a1, *v143, 0) & 1) != 0)
      {
        ++v143;
        v142 -= 8;
        if (!v142)
        {
LABEL_228:
          if (sub_22E943324(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22E943324(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v144 = *(unsigned int *)(a2 + 16);
            if ((_DWORD)v144)
            {
              v145 = 8 * v144;
              v146 = (_QWORD *)(v140 + 8 * v144);
              while ((sub_22E943324(a1, *v146, 0) & 1) != 0)
              {
                ++v146;
                v145 -= 8;
                if (!v145)
                {
                  v147 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v147)
                    goto LABEL_246;
                  v148 = (_QWORD *)(v140 + 8 * v147 + 8 * v147);
                  v149 = 8 * v147;
                  while ((sub_22E943324(a1, *v148, 0) & 1) != 0)
                  {
                    ++v148;
                    v149 -= 8;
                    if (!v149)
                    {
                      v150 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v150)
                        goto LABEL_246;
                      v151 = (_QWORD *)(v140 + 8 * v150 + 8 * v150 + 8 * v150);
                      v152 = 8 * v150;
                      while ((sub_22E943324(a1, *v151, 0) & 1) != 0)
                      {
                        ++v151;
                        v152 -= 8;
                        if (!v152)
                        {
                          v153 = *(unsigned int *)(a2 + 16);
                          if (!(_DWORD)v153)
                            goto LABEL_246;
                          v154 = (_QWORD *)(v140 + 8 * v153 + 8 * v153 + 8 * v153 + 8 * v153);
                          v155 = 8 * v153;
                          while ((sub_22E943324(a1, *v154, 0) & 1) != 0)
                          {
                            ++v154;
                            v155 -= 8;
                            if (!v155)
                              goto LABEL_246;
                          }
                          return 0;
                        }
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
            else
            {
LABEL_246:
              if (*(_DWORD *)(a2 + 48) != 1)
                return 1;
              v156 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v156)
                return 1;
              v157 = (_QWORD *)(v140 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156);
              v158 = 8 * v156;
              while ((sub_22E943324(a1, *v157, 0) & 1) != 0)
              {
                ++v157;
                v158 -= 8;
                if (!v158)
                {
                  v159 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v159)
                    return 1;
                  v160 = (_QWORD *)(v140 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159);
                  v161 = 8 * v159;
                  while ((sub_22E943324(a1, *v160, 0) & 1) != 0)
                  {
                    ++v160;
                    v161 -= 8;
                    if (!v161)
                    {
                      v162 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v162)
                        return 1;
                      v163 = (_QWORD *)(v140 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162);
                      v164 = 8 * v162;
                      while ((sub_22E943324(a1, *v163, 0) & 1) != 0)
                      {
                        ++v163;
                        v164 -= 8;
                        if (!v164)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x47:
      result = sub_22E943324(a1, *(_QWORD *)(a2 + 16), 0);
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 64);
      return (sub_22E943324(a1, v5, 0) & 1) != 0;
    case 0x49:
      v202 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v202)
        return 1;
      v203 = (_QWORD *)(a2 + 24);
      v204 = 8 * v202;
      while ((sub_22E943324(a1, *v203, 0) & 1) != 0)
      {
        ++v203;
        v204 -= 8;
        if (!v204)
          return 1;
      }
      return 0;
    case 0x4C:
      v165 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v165)
        return 1;
      v166 = (_QWORD *)(a2 + 24);
      v167 = 8 * v165;
      while ((sub_22E943324(a1, *v166, 0) & 1) != 0)
      {
        ++v166;
        v167 -= 8;
        if (!v167)
          return 1;
      }
      return 0;
    case 0x4D:
      if (!sub_22E952E24(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22E952EAC(a1, (uint64_t *)&v208))
        return 0;
      v24 = a2 + 96;
      v25 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v25)
        goto LABEL_49;
      v26 = 8 * v25;
      v27 = (_QWORD *)(a2 + 96);
      while ((sub_22E943324(a1, *v27, 0) & 1) != 0)
      {
        ++v27;
        v26 -= 8;
        if (!v26)
        {
LABEL_49:
          if (sub_22E943324(a1, *(_QWORD *)(a2 + 24), 0)
            && sub_22E943324(a1, *(_QWORD *)(a2 + 40), 0))
          {
            v28 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v28)
              return 1;
            v29 = 8 * v28;
            for (i2 = (_QWORD *)(v24 + 8 * v28); (sub_22E943324(a1, *i2, 0) & 1) != 0; ++i2)
            {
              v29 -= 8;
              if (!v29)
              {
                v31 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v31)
                  return 1;
                v32 = (_QWORD *)(v24 + 8 * v31 + 8 * v31);
                v33 = 8 * v31;
                while ((sub_22E943324(a1, *v32, 0) & 1) != 0)
                {
                  ++v32;
                  v33 -= 8;
                  if (!v33)
                  {
                    v34 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v34)
                      return 1;
                    v35 = (_QWORD *)(v24 + 8 * v34 + 8 * v34 + 8 * v34);
                    v36 = 8 * v34;
                    while ((sub_22E943324(a1, *v35, 0) & 1) != 0)
                    {
                      ++v35;
                      v36 -= 8;
                      if (!v36)
                      {
                        v37 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v37)
                          return 1;
                        v38 = (_QWORD *)(v24 + 8 * v37 + 8 * v37 + 8 * v37 + 8 * v37);
                        v39 = 8 * v37;
                        while ((sub_22E943324(a1, *v38, 0) & 1) != 0)
                        {
                          ++v38;
                          v39 -= 8;
                          if (!v39)
                            return 1;
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x51:
      v16 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v16)
        return 1;
      v17 = (_QWORD *)(a2 + 104);
      v18 = 8 * v16;
      while ((sub_22E943324(a1, *v17, 0) & 1) != 0)
      {
        ++v17;
        v18 -= 8;
        if (!v18)
          return 1;
      }
      return 0;
    case 0x59:
      v205 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v205)
        return 1;
      v206 = (_QWORD *)(a2 + 80);
      v207 = 8 * v205;
      while ((sub_22E943324(a1, *v206, 0) & 1) != 0)
      {
        ++v206;
        v207 -= 8;
        if (!v207)
          return 1;
      }
      return 0;
    case 0x5A:
      v196 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v196)
        return 1;
      v197 = (_QWORD *)(a2 + 80);
      v198 = 8 * v196;
      while ((sub_22E943324(a1, *v197, 0) & 1) != 0)
      {
        ++v197;
        v198 -= 8;
        if (!v198)
          return 1;
      }
      return 0;
    case 0x5B:
      v19 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v19)
        return 1;
      v20 = 0;
      v21 = a2 + 24;
      v22 = 2 * v19;
      break;
    default:
      return 1;
  }
  while (1)
  {
    v23 = *(_QWORD *)(v21 + 8 * (v20 + 1));
    result = sub_22E943324(a1, *(_QWORD *)(v21 + 8 * v20), 0);
    if (!(_DWORD)result)
      break;
    if ((sub_22E943324(a1, v23, 0) & 1) == 0)
      return 0;
    v20 += 2;
    if (v22 == v20)
      return 1;
  }
  return result;
}

uint64_t sub_22E955B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  unint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;

  if (!a2)
    return 1;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  if (v4 == v3)
    v5 = 0;
  else
    v5 = *(uint64_t **)(a2 + 24);
  if (v4 == v3)
    v6 = 0;
  else
    v6 = *(uint64_t **)(a2 + 16);
  v14 = 0;
  v15 = 0;
  v13 = v6;
  if (v6 == v5)
    return 1;
  v9 = 0;
  while (1)
  {
    if ((v9 & 3) == 0)
    {
      result = sub_22E943324(a1, *v6, a3);
      if (!(_DWORD)result)
        return result;
      v13 = v6 + 1;
      goto LABEL_18;
    }
    v10 = (_QWORD *)((v9 & 0xFFFFFFFFFFFFFFFCLL) != 0 ? (v9 & 0xFFFFFFFFFFFFFFFCLL) + 40 : sub_22F3AC1A8(*v6));
    if ((sub_22E943324(a1, *v10, a3) & 1) == 0)
      return 0;
    if (v9 < 4)
      sub_22F3F2FE0((uint64_t)&v13, 1);
    else
      sub_22F0D8720((uint64_t)&v13);
LABEL_18:
    v6 = v13;
    v9 = v14;
    if (v13 == v5 && v14 == 0)
      return 1;
  }
}

uint64_t sub_22E955C78(uint64_t a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _DWORD v45[2];
  uint64_t v46;

  if (a2 < 0x10)
    return 1;
  while (2)
  {
    v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    v5 = *(_DWORD *)(v4 + 16);
    result = 1;
    switch((char)v5)
    {
      case 0:
      case 1:
      case 4:
      case 6:
      case 7:
      case 8:
      case 10:
      case 12:
      case 29:
      case 32:
      case 36:
      case 37:
      case 38:
      case 39:
      case 54:
      case 55:
      case 56:
        goto LABEL_5;
      case 2:
        result = sub_22E955C78(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        if ((*(_BYTE *)(v4 + 19) & 2) == 0)
          return 1;
        v14 = *(_QWORD *)(v4 + 56);
        if (!v14)
          return 1;
        goto LABEL_49;
      case 3:
        result = sub_22E955C78(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v14 = *(_QWORD *)(v4 + 48);
        if (v14)
          goto LABEL_49;
        return 1;
      case 5:
        result = sub_22E955C78(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v13 = *(_QWORD *)(v4 + 40);
        return sub_22E91E72C(a1, v13);
      case 13:
      case 48:
        v13 = *(_QWORD *)(v4 + 24);
        return sub_22E91E72C(a1, v13);
      case 14:
        result = sub_22E955C78(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        if (!*(_QWORD *)(v4 + 40))
          return 1;
        result = sub_22E929BF4(a1);
        if (!(_DWORD)result)
          return result;
        v15 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v15)
          return 1;
        v16 = v4 + 48;
        v17 = v15 - 1;
        do
        {
          result = sub_22E956104(a1, v16);
          v18 = v17-- != 0;
          v19 = v18;
          if (!(_DWORD)result)
            break;
          v16 += 24;
        }
        while ((v19 & 1) != 0);
        return result;
      case 15:
        result = sub_22E9561CC(a1, *(_QWORD *)(v4 + 40));
        if ((_DWORD)result)
          goto LABEL_19;
        return result;
      case 16:
        v7 = *(_QWORD *)(v4 + 40);
        goto LABEL_22;
      case 17:
        v13 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFFCLL;
        return sub_22E91E72C(a1, v13);
      case 18:
        return sub_22E95622C(a1, *(_QWORD *)(v4 + 32));
      case 19:
        v7 = *(_QWORD *)(v4 + 40);
        if (!v7)
          goto LABEL_23;
LABEL_22:
        result = sub_22E91E72C(a1, v7);
        if (!(_DWORD)result)
          return result;
LABEL_23:
        v6 = (unint64_t *)(v4 + 48);
        goto LABEL_6;
      case 20:
        result = sub_22E95622C(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v20 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v20)
          return 1;
        v21 = v4 + 48;
        v22 = v20 - 1;
        do
        {
          result = sub_22E956104(a1, v21);
          v18 = v22-- != 0;
          v23 = v18;
          if (!(_DWORD)result)
            break;
          v21 += 24;
        }
        while ((v23 & 1) != 0);
        return result;
      case 21:
        v8 = *(_QWORD *)(v4 + 48);
        if (v8)
        {
          result = sub_22E91E72C(a1, v8);
          if (!(_DWORD)result)
            return result;
        }
        goto LABEL_31;
      case 22:
        goto LABEL_34;
      case 23:
        v9 = *(_QWORD *)(v4 + 64);
        if (!v9)
          goto LABEL_5;
        goto LABEL_35;
      case 24:
        v10 = *(_QWORD *)(v4 + 32);
        if (v10)
        {
          result = sub_22E95622C(a1, v10);
          if (!(_DWORD)result)
            return result;
        }
LABEL_31:
        v6 = (unint64_t *)(v4 + 40);
        goto LABEL_6;
      case 25:
      case 28:
      case 49:
LABEL_19:
        v6 = (unint64_t *)(v4 + 24);
        goto LABEL_6;
      case 26:
        result = sub_22E955C78(a1, *(_QWORD *)(v4 + 24));
        if (!(_DWORD)result)
          return result;
        v24 = *(_QWORD *)(v4 + 16);
        v25 = (unsigned __int16)(v24 >> 38);
        if (!(unsigned __int16)(v24 >> 38))
          goto LABEL_82;
        v26 = 8 * v25;
        v27 = (_QWORD *)(v4 + 40);
        break;
      case 30:
        v11 = *(_QWORD *)(v4 + 48);
        if (v11)
        {
          result = sub_22E91E72C(a1, v11);
          if (!(_DWORD)result)
            return result;
        }
LABEL_34:
        v9 = *(_QWORD *)(v4 + 56);
        if (!v9)
          goto LABEL_5;
LABEL_35:
        result = sub_22E91E72C(a1, v9);
        if (!(_DWORD)result)
          return result;
LABEL_5:
        v6 = (unint64_t *)(v4 + 32);
LABEL_6:
        a2 = *v6;
        if (*v6 < 0x10)
          return 1;
        continue;
      case 31:
        v12 = *(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF0;
        goto LABEL_40;
      case 33:
        v34 = *(_QWORD *)(v4 + 24);
        if (*(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF0) != v4)
        {
          result = sub_22E955C78(a1, v34);
          if (!(_DWORD)result)
            return result;
        }
        v35 = (*(_QWORD *)(v4 + 16) >> 19) & 0x7FLL;
        if (!v35)
          return 1;
        v36 = (uint64_t *)(v4 + 48);
        v37 = 8 * v35 - 8;
        do
        {
          v38 = *v36++;
          result = sub_22E955C78(a1, v38);
          if ((_DWORD)result)
            v39 = v37 == 0;
          else
            v39 = 1;
          v37 -= 8;
        }
        while (!v39);
        return result;
      case 40:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 41:
        while ((v5 & 0x100000) != 0)
        {
          v4 = *(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v4)
          {
            v5 = *(_DWORD *)(v4 + 16);
            if ((v5 & 0xFE) == 0x28)
              continue;
          }
          v4 = sub_22F10CF48(v4);
          v5 = *(_DWORD *)(v4 + 16);
        }
        goto LABEL_5;
      case 42:
        v40 = *(_DWORD *)(v4 + 20);
        v46 = *(_QWORD *)(v4 + 40);
        v45[0] = 8;
        v45[1] = v40;
        return sub_22E956104(a1, (uint64_t)v45);
      case 43:
        v6 = (unint64_t *)(v4 + 8);
        goto LABEL_6;
      case 46:
        result = sub_22E9561CC(a1, *(_QWORD *)(v4 + 32));
        if (!(_DWORD)result)
          return result;
        v41 = *(unsigned int *)(v4 + 20);
        if (!(_DWORD)v41)
          return 1;
        v42 = v4 + 40;
        v43 = v41 - 1;
        do
        {
          result = sub_22E956104(a1, v42);
          v18 = v43-- != 0;
          v44 = v18;
          if (!(_DWORD)result)
            break;
          v42 += 24;
        }
        while ((v44 & 1) != 0);
        return result;
      case 51:
        v12 = *(_QWORD *)(v4 + 24);
LABEL_40:
        result = sub_22E955C78(a1, v12);
        if (!(_DWORD)result)
          return result;
        goto LABEL_5;
      default:
        return result;
    }
    break;
  }
  do
  {
    if ((sub_22E955C78(a1, *v27) & 1) == 0)
      return 0;
    ++v27;
    v26 -= 8;
  }
  while (v26);
  v24 = *(_QWORD *)(v4 + 16);
  v25 = (unsigned __int16)(v24 >> 38);
LABEL_82:
  if ((v24 & 0x3C0000000000000) == 0x80000000000000)
  {
    v28 = (_DWORD *)((v4 + 40 + 8 * v25 + 4 * ((v24 >> 59) & 1) + 7) & 0xFFFFFFFFFFFFFFF8);
    v31 = *v28;
    v30 = v28 + 2;
    v29 = v31;
    if (v31)
    {
      v32 = 8 * v29;
      while ((sub_22E955C78(a1, *v30) & 1) != 0)
      {
        ++v30;
        v32 -= 8;
        if (!v32)
          goto LABEL_87;
      }
      return 0;
    }
  }
LABEL_87:
  v33 = sub_22F257D3C(v4);
  if (!v33)
    return 1;
  v14 = v33;
LABEL_49:
  result = sub_22E91E72C(a1, v14);
  if ((_DWORD)result)
    return 1;
  return result;
}

uint64_t sub_22E956104(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v8;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      result = sub_22E955C78(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      result = sub_22E9561CC(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 8));
      break;
    case 8:
      v4 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v4)
      {
        v5 = *(_QWORD *)(a2 + 8);
        v6 = v4 - 1;
        do
        {
          result = sub_22E956104(a1, v5);
          v8 = v6-- != 0;
          if (!(_DWORD)result)
            break;
          v5 += 24;
        }
        while (v8);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22E9561CC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  char v5;

  v2 = a2 & 0xFFFFFFFFFFFFFFF8;
  if ((a2 & 6) != 6 || v2 == 0)
  {
    if ((a2 & 6) != 4)
      return 1;
    if (!v2)
      return 1;
    result = sub_22E95622C(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    if ((_DWORD)result)
      return 1;
  }
  else
  {
    v5 = sub_22E95622C(a1, *(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF8);
    return (v5 & 1) != 0;
  }
  return result;
}

uint64_t sub_22E95622C(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (!a2)
    return 1;
  v4 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF8;
  if (!v4 || (result = sub_22E95622C(a1, v4), (_DWORD)result))
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 && (*(_BYTE *)(a2 + 8) & 4) != 0)
      return sub_22E955C78(a1, v6 & 0xFFFFFFFFFFFFFFF0);
    return 1;
  }
  return result;
}

uint64_t sub_22E956290(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v11;

  result = 1;
  switch(*(_DWORD *)a2)
  {
    case 1:
      v6 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (v6)
        result = sub_22E92DE94(a1, *v6, v6 + 1);
      else
        result = sub_22E955C78(a1, *(_QWORD *)(a2 + 8));
      break;
    case 5:
    case 6:
      v5 = (_QWORD *)(*(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      if (!*v5 || (result = sub_22E92DD54(a1, *v5, v5[1]), (_DWORD)result))
        result = sub_22E9561CC(a1, *(_QWORD *)(a2 + 8));
      break;
    case 7:
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
      break;
    case 8:
      v7 = *(unsigned int *)(a2 + 4);
      if ((_DWORD)v7)
      {
        v8 = *(_QWORD *)(a2 + 8);
        v9 = v7 - 1;
        do
        {
          result = sub_22E956104(a1, v8);
          v11 = v9-- != 0;
          if (!(_DWORD)result)
            break;
          v8 += 24;
        }
        while (v11);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_22E9563A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  if (!a2)
    return 1;
  if ((*(_WORD *)(a2 + 8) & 0x80) != 0)
    sub_22EFCC320(a2);
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 1;
  while (1)
  {
    if ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 1 >= 2
      && ((*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 > 2
       || (v5 = *(_QWORD *)(v4 + 128)) == 0
       || ((*(unsigned __int16 *)(v5 + 8) | (*(unsigned __int8 *)(v5 + 10) << 16)) & 0x100000) == 0))
    {
      result = sub_22E929BF4(a1);
      if (!(_DWORD)result)
        break;
    }
    v4 = *(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v4)
      return 1;
  }
  return result;
}

uint64_t sub_22E956440(uint64_t a1, uint64_t a2)
{
  if (a2)
    __asm { BR              X10 }
  return 1;
}

void sub_22E9564C0()
{
  uint64_t v0;
  uint64_t v1;

  if (sub_22E91E72C(v0, *(_QWORD *)(v1 + 40)))
    JUMPOUT(0x22E956480);
  JUMPOUT(0x22E9564B0);
}

void sub_22E9564D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v2 = *(unsigned int *)(v1 + 48);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2;
    while ((sub_22E91E72C(v0, *v3) & 1) != 0)
    {
      ++v3;
      v4 -= 8;
      if (!v4)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    v5 = *(unsigned int *)(v1 + 64);
    if (!(_DWORD)v5)
      JUMPOUT(0x22E9564ACLL);
    v6 = *(uint64_t **)(v1 + 72);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22E91E72C(v0, v8))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E9565F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E95662C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E956660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E956694()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E91E72C(v0, *(_QWORD *)(v1 + 40)))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E9564ACLL);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E9566D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E95670C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  if (sub_22E91E72C(v0, *(_QWORD *)(v1 + 40)))
  {
    v2 = *(unsigned int *)(v1 + 56);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 64);
      v4 = 8 * v2;
      do
      {
        if ((sub_22E91E72C(v0, *v3) & 1) == 0)
          JUMPOUT(0x22E9565F0);
        ++v3;
        v4 -= 8;
      }
      while (v4);
    }
    v5 = *(unsigned int *)(v1 + 72);
    if (!(_DWORD)v5)
      JUMPOUT(0x22E9564ACLL);
    v6 = *(uint64_t **)(v1 + 80);
    v7 = 8 * v5 - 8;
    do
    {
      v8 = *v6++;
      if (sub_22E91E72C(v0, v8))
        v9 = v7 == 0;
      else
        v9 = 1;
      v7 -= 8;
    }
    while (!v9);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E95677C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E9567B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v2 = *(unsigned int *)(v1 + 36);
  if ((_DWORD)v2)
  {
    v3 = *(uint64_t **)(v1 + 40);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E9567E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E91E72C(v0, *(_QWORD *)(v1 + 40)))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E9564ACLL);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E956828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  if (sub_22E91E72C(v0, *(_QWORD *)(v1 + 40)))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if (!(_DWORD)v2)
      JUMPOUT(0x22E9564ACLL);
    v3 = *(uint64_t **)(v1 + 56);
    v4 = 8 * v2 - 8;
    do
    {
      v5 = *v3++;
      if (sub_22E91E72C(v0, v5))
        v6 = v4 == 0;
      else
        v6 = 1;
      v4 -= 8;
    }
    while (!v6);
  }
  JUMPOUT(0x22E9564B0);
}

void sub_22E95686C()
{
  JUMPOUT(0x22E956498);
}

void sub_22E956874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  if (sub_22E91E72C(v0, *(_QWORD *)(v1 + 40)))
  {
    v2 = *(unsigned int *)(v1 + 48);
    if ((_DWORD)v2)
    {
      v3 = *(uint64_t **)(v1 + 56);
      v4 = 8 * v2;
      while ((sub_22E91E72C(v0, *v3) & 1) != 0)
      {
        ++v3;
        v4 -= 8;
        if (!v4)
          goto LABEL_6;
      }
LABEL_33:
      JUMPOUT(0x22E9565F0);
    }
LABEL_6:
    v5 = *(unsigned int *)(v1 + 64);
    if ((_DWORD)v5)
    {
      v6 = *(uint64_t **)(v1 + 72);
      v7 = 8 * v5;
      while ((sub_22E91E72C(v0, *v6) & 1) != 0)
      {
        ++v6;
        v7 -= 8;
        if (!v7)
          goto LABEL_10;
      }
      goto LABEL_33;
    }
LABEL_10:
    v8 = *(unsigned int *)(v1 + 80);
    if ((_DWORD)v8)
    {
      v9 = *(uint64_t **)(v1 + 88);
      v10 = 8 * v8;
      while ((sub_22E91E72C(v0, *v9) & 1) != 0)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_14;
      }
      goto LABEL_33;
    }
LABEL_14:
    v11 = *(unsigned int *)(v1 + 96);
    if ((_DWORD)v11)
    {
      v12 = *(uint64_t **)(v1 + 104);
      v13 = 8 * v11;
      while ((sub_22E91E72C(v0, *v12) & 1) != 0)
      {
        ++v12;
        v13 -= 8;
        if (!v13)
          goto LABEL_18;
      }
      goto LABEL_33;
    }
LABEL_18:
    v14 = *(unsigned int *)(v1 + 128);
    if (!(_DWORD)v14)
      JUMPOUT(0x22E9564ACLL);
    v15 = *(uint64_t **)(v1 + 136);
    v16 = 8 * v14 - 8;
    do
    {
      v17 = *v15++;
      if (sub_22E91E72C(v0, v17))
        v18 = v16 == 0;
      else
        v18 = 1;
      v16 -= 8;
    }
    while (!v18);
  }
  JUMPOUT(0x22E9564B0);
}

uint64_t sub_22E956968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (!a2)
    return 1;
  v4 = a2 + 16;
  v5 = *(_DWORD *)(a2 + 12);
  if ((v5 & 0x1FFFFFFF) != 0)
  {
    v6 = 8 * (v5 & 0x1FFFFFFF);
    v7 = a2 + 16;
    while ((sub_22E929BF4(a1) & 1) != 0)
    {
      v7 += 8;
      v6 -= 8;
      if (!v6)
      {
        v5 = *(_DWORD *)(a2 + 12);
        goto LABEL_7;
      }
    }
    return 0;
  }
  else
  {
LABEL_7:
    if ((v5 & 0x40000000) == 0)
      return 1;
    v8 = *(_QWORD *)(v4 + 8 * (v5 & 0x1FFFFFFF));
    if (!v8)
      return 1;
    result = sub_22E91E72C(a1, v8);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22E956A04(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 120);
  if ((v3 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v3 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E956968((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v3 = *(_QWORD *)(a2 + 120);
      if ((v3 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  return sub_22E92DD54(a1, v7, v8);
}

uint64_t sub_22E956A78(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;

  result = sub_22E956A04(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_BYTE *)(a2 + 74) & 1) == 0)
      return 1;
    v5 = sub_22E46A3A0(a2);
    if (v5 == v6)
    {
      return 1;
    }
    else
    {
      v7 = v6;
      v8 = v5 + 24;
      do
      {
        result = sub_22E92DE94(a1, **(_QWORD **)(v8 - 8), *(_QWORD *)(v8 - 8) + 8);
        if ((_DWORD)result)
          v9 = v8 == v7;
        else
          v9 = 1;
        v8 += 24;
      }
      while (!v9);
    }
  }
  return result;
}

uint64_t sub_22E956AF0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t *v11;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E956968((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22E92DD54(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_QWORD *)(a2 + 56);
    if ((v10 & 4) != 0)
    {
      v11 = *(unint64_t **)((v10 & 0xFFFFFFFFFFFFFFF8) + 32);
      if (v11)
        return (sub_22E92DE94(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    else if (v10 >= 8)
    {
      v11 = (unint64_t *)(v10 & 0xFFFFFFFFFFFFFFF8);
      return (sub_22E92DE94(a1, *v11, (uint64_t)(v11 + 1)) & 1) != 0;
    }
    result = sub_22E955C78((uint64_t)a1, *(_QWORD *)(a2 + 48));
    if (!(_DWORD)result)
      return result;
    return 1;
  }
  return result;
}

uint64_t sub_22E956BBC(_QWORD *a1, unint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  _BOOL4 v25;
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;

  v4 = *(_QWORD *)(a2 + 56);
  if ((v4 & 4) != 0)
  {
    v5 = 0;
    while (1)
    {
      v6 = v4 & 0xFFFFFFFFFFFFFFF8;
      if (v5 >= *(unsigned int *)(v6 + 16))
        break;
      sub_22E956968((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(v6 + 24) + 8 * v5++));
      v4 = *(_QWORD *)(a2 + 56);
      if ((v4 & 4) == 0)
        goto LABEL_5;
    }
    v7 = *(_QWORD *)v6;
    v8 = *(_QWORD *)(v6 + 8);
  }
  else
  {
LABEL_5:
    v7 = 0;
    v8 = 0;
  }
  result = sub_22E92DD54(a1, v7, v8);
  if ((_DWORD)result)
  {
    v10 = *(_DWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 152);
    v38 = *(_QWORD *)(a2 + 40);
    v39 = v10;
    v40 = v11;
    result = sub_22E92DDDC((uint64_t)a1, &v38);
    if ((_DWORD)result)
    {
      v12 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
      if ((*(_QWORD *)(a2 + 144) & 6) == 4 && v12 != 0 && (*(_BYTE *)(v12 + 16) & 6) != 0)
      {
        v14 = *(_QWORD *)(v12 + 32);
        if (v14)
        {
          v15 = *(unsigned int *)(v14 + 8);
          if ((_DWORD)v15)
          {
            v16 = v14 + 16;
            while ((sub_22E956290((uint64_t)a1, v16) & 1) != 0)
            {
              v16 += 32;
              if (!--v15)
                goto LABEL_19;
            }
            return 0;
          }
        }
      }
LABEL_19:
      v17 = *(_QWORD *)(a2 + 56);
      v18 = (unint64_t *)(v17 & 0xFFFFFFFFFFFFFFF8);
      if ((v17 & 4) != 0)
        v18 = (unint64_t *)v18[4];
      if (v18)
      {
        result = sub_22E92DE94(a1, *v18, (uint64_t)(v18 + 1));
        if (!(_DWORD)result)
          return result;
        v17 = *(_QWORD *)(a2 + 56);
      }
      if ((v17 & 4) == 0
        || (v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF8) + 40)) == 0
        || (result = sub_22E91E72C(a1, v19), (_DWORD)result))
      {
        if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x37)
        {
          v20 = sub_22EFD7ED0(a2);
          v21 = sub_22EFD7ED0(a2) + 8 * ((*(_QWORD *)(a2 + 80) >> 40) & 0x1FFFFFLL);
          while (v20 != v21)
          {
            v22 = *(_QWORD *)v20;
            if ((*(_WORD *)(*(_QWORD *)v20 + 28) & 4) != 0)
            {
              v23 = (unint64_t *)(*(_QWORD *)v22 & 0xFFFFFFFFFFFFFFF8);
              if ((*(_QWORD *)v22 & 6) != 0 || v23 == 0)
                goto LABEL_37;
              result = sub_22E92DE94(a1, *v23, (uint64_t)(v23 + 1));
              if (!(_DWORD)result)
                return result;
              if ((*(_WORD *)(v22 + 28) & 4) != 0)
              {
LABEL_37:
                result = sub_22E91E72C(a1, *(_QWORD *)(v22 + 8));
                if (!(_DWORD)result)
                  return result;
              }
            }
            v20 += 8;
          }
        }
        v25 = sub_22E49F868(a2) && (*(_BYTE *)(a2 + 83) & 2) == 0;
        if ((*(_DWORD *)(a2 + 28) & 0x7Eu) - 58 < 0xFFFFFFFC)
          goto LABEL_70;
        v26 = *(_WORD *)(a2 + 80) & 0x7F;
        v27 = -40;
        if (v26 > 0x46)
        {
          if (v26 == 83)
            goto LABEL_60;
          if (v26 == 71)
          {
            v27 = -56;
            goto LABEL_60;
          }
          if (v26 != 81)
          {
LABEL_55:
            v28 = v26 - 52;
            v29 = v26 - 33 >= 5;
            v30 = -48;
            if (!v29)
              v30 = -64;
            if (v28 >= 6)
              v27 = v30;
            else
              v27 = -72;
          }
        }
        else
        {
          if (v26 > 0x18)
            goto LABEL_54;
          if (v26 == 16)
          {
LABEL_46:
            v27 = -48;
            goto LABEL_60;
          }
          if (((1 << v26) & 0x1066) == 0)
          {
            if (v26 == 24)
              goto LABEL_46;
LABEL_54:
            if (v26 == 70)
            {
              v27 = -64;
              goto LABEL_60;
            }
            goto LABEL_55;
          }
        }
LABEL_60:
        v31 = *(_QWORD *)(a2 + 72 + v27 + 16);
        v32 = (_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF8);
        if ((v31 & 4) != 0)
          v32 = (_QWORD *)*v32;
        if (v32)
        {
          v33 = v32[8];
          if (v33)
          {
            if (((*(unsigned __int16 *)(v33 + 8) | (*(unsigned __int8 *)(v33 + 10) << 16)) & 0x100000) != 0)
            {
              v34 = sub_22EFD462C((unint64_t)(v32 - 8));
              if (v34)
              {
                if ((*(_DWORD *)(v34 + 28) & 0x7F) != 0x1D || (v34 = *(_QWORD *)(v34 + 48)) != 0)
                {
                  if (v34 == a2
                    || (v35 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v34 + 32))(v34),
                        v35 == (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 32))(a2)))
                  {
                    if (!v25)
                      return 1;
LABEL_71:
                    v36 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)a2 + 64))(a2);
                    result = sub_22E91E72C(a1, v36);
                    if (!(_DWORD)result)
                      return result;
                    if ((*(_WORD *)(a2 + 80) & 0x80) != 0)
                      sub_22EFCC320(a2 + 72);
                    v37 = *(_QWORD *)(a2 + 88);
                    if (v37)
                    {
                      do
                      {
                        if ((*(_DWORD *)(v37 + 28) & 0x7E) == 0x2E)
                        {
                          result = sub_22E929BF4(a1);
                          if (!(_DWORD)result)
                            break;
                        }
                        result = 1;
                        v37 = *(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF8;
                      }
                      while (v37);
                      return result;
                    }
                    return 1;
                  }
                }
              }
            }
          }
        }
LABEL_70:
        if (!v25)
          return 1;
        goto LABEL_71;
      }
    }
  }
  return result;
}

uint64_t sub_22E956F74(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;

  result = sub_22E956AF0(a1, a2);
  if ((_DWORD)result)
  {
    if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
      return 1;
    if ((*(_BYTE *)(a2 + 97) & 8) != 0)
      return 1;
    v5 = sub_22EFBC5B4(a2);
    result = sub_22E91E72C(a1, v5);
    if ((_DWORD)result)
      return 1;
  }
  return result;
}

uint64_t sub_22E956FD0(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *mm;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *i2;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *n;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *ii;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *nn;
  uint64_t v79;
  uint64_t v80;
  _QWORD *i1;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *i;
  uint64_t v92;
  uint64_t v93;
  _QWORD *j;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *jj;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *kk;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *k;
  uint64_t v175;
  uint64_t v176;
  _QWORD *m;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  uint64_t v192;
  uint64_t v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  __int128 v208;
  uint64_t v209;

  if (!a2)
    return 1;
  switch(*(_DWORD *)(a2 + 8))
  {
    case 3:
      v85 = (_QWORD *)(a2 + 24);
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)));
      if ((_DWORD)result)
      {
        v86 = *(unsigned int *)(a2 + 16);
        if (!(_DWORD)v86)
          return 1;
        v87 = 8 * v86;
        do
        {
          if ((sub_22E91E72C(a1, *v85) & 1) == 0)
            return 0;
          ++v85;
          v87 -= 8;
        }
        while (v87);
        return 1;
      }
      return result;
    case 4:
    case 7:
    case 0xC:
    case 0x13:
    case 0x15:
    case 0x23:
    case 0x3C:
    case 0x3D:
    case 0x46:
    case 0x4B:
      v5 = *(_QWORD *)(a2 + 16);
      return (sub_22E91E72C(a1, v5) & 1) != 0;
    case 5:
      v137 = (_QWORD *)(a2 + 24);
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 24 + 8 * *(unsigned int *)(a2 + 16)));
      if (!(_DWORD)result)
        return result;
      v138 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v138)
        return 1;
      v139 = 8 * v138;
      while ((sub_22E91E72C(a1, *v137) & 1) != 0)
      {
        ++v137;
        v139 -= 8;
        if (!v139)
          return 1;
      }
      return 0;
    case 6:
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 24));
      if (!(_DWORD)result)
        return result;
      v134 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v134)
        return 1;
      v135 = (_QWORD *)(a2 + 40);
      v136 = 8 * v134;
      while ((sub_22E91E72C(a1, *v135) & 1) != 0)
      {
        ++v135;
        v136 -= 8;
        if (!v136)
          return 1;
      }
      return 0;
    case 0xE:
      v88 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v88)
        return 1;
      v89 = a2 + 24;
      v90 = 8 * v88;
      for (i = (_QWORD *)(a2 + 24); (sub_22E91E72C(a1, *i) & 1) != 0; ++i)
      {
        v90 -= 8;
        if (!v90)
        {
          v92 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v92)
            return 1;
          v93 = 8 * v92;
          for (j = (_QWORD *)(v89 + 8 * v92); (sub_22E91E72C(a1, *j) & 1) != 0; ++j)
          {
            v93 -= 8;
            if (!v93)
            {
              v95 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v95)
                return 1;
              v96 = (_QWORD *)(v89 + 8 * v95 + 8 * v95);
              v97 = 8 * v95;
              while ((sub_22E91E72C(a1, *v96) & 1) != 0)
              {
                ++v96;
                v97 -= 8;
                if (!v97)
                {
                  v98 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v98)
                    return 1;
                  v99 = (_QWORD *)(v89 + 8 * v98 + 8 * v98 + 8 * v98);
                  v100 = 8 * v98;
                  while ((sub_22E91E72C(a1, *v99) & 1) != 0)
                  {
                    ++v99;
                    v100 -= 8;
                    if (!v100)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0xF:
      v171 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v171)
        return 1;
      v172 = a2 + 24;
      v173 = 8 * v171;
      for (k = (_QWORD *)(a2 + 24); (sub_22E91E72C(a1, *k) & 1) != 0; ++k)
      {
        v173 -= 8;
        if (!v173)
        {
          v175 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v175)
            return 1;
          v176 = 8 * v175;
          for (m = (_QWORD *)(v172 + 8 * v175); (sub_22E91E72C(a1, *m) & 1) != 0; ++m)
          {
            v176 -= 8;
            if (!v176)
            {
              v178 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v178)
                return 1;
              v179 = (_QWORD *)(v172 + 8 * v178 + 8 * v178);
              v180 = 8 * v178;
              while ((sub_22E91E72C(a1, *v179) & 1) != 0)
              {
                ++v179;
                v180 -= 8;
                if (!v180)
                {
                  v181 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v181)
                    return 1;
                  v182 = (_QWORD *)(v172 + 8 * v181 + 8 * v181 + 8 * v181);
                  v183 = 8 * v181;
                  while ((sub_22E91E72C(a1, *v182) & 1) != 0)
                  {
                    ++v182;
                    v183 -= 8;
                    if (!v183)
                      return 1;
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x12:
      v184 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v184)
        return 1;
      v185 = (_QWORD *)(a2 + 40);
      v186 = 8 * v184;
      while ((sub_22E91E72C(a1, *v185) & 1) != 0)
      {
        ++v185;
        v186 -= 8;
        if (!v186)
          return 1;
      }
      return 0;
    case 0x14:
    case 0x58:
      v5 = *(_QWORD *)(a2 + 24);
      return (sub_22E91E72C(a1, v5) & 1) != 0;
    case 0x16:
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 16));
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 40);
      return (sub_22E91E72C(a1, v5) & 1) != 0;
    case 0x18:
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 16));
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 48);
      return (sub_22E91E72C(a1, v5) & 1) != 0;
    case 0x1A:
      v193 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v193)
        return 1;
      v194 = (_QWORD *)(a2 + 24);
      v195 = 8 * v193;
      while ((sub_22E91E72C(a1, *v194) & 1) != 0)
      {
        ++v194;
        v195 -= 8;
        if (!v195)
          return 1;
      }
      return 0;
    case 0x1B:
    case 0x1C:
    case 0x21:
    case 0x24:
    case 0x34:
    case 0x37:
    case 0x38:
    case 0x39:
    case 0x3A:
    case 0x3E:
    case 0x4E:
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 16));
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 32);
      return (sub_22E91E72C(a1, v5) & 1) != 0;
    case 0x1D:
      v40 = a2 + 40;
      v41 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v41)
        goto LABEL_72;
      v42 = 8 * v41;
      v43 = (_QWORD *)(a2 + 40);
      while ((sub_22E91E72C(a1, *v43) & 1) != 0)
      {
        ++v43;
        v42 -= 8;
        if (!v42)
        {
LABEL_72:
          result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 24));
          if (!(_DWORD)result)
            return result;
          v44 = *(unsigned int *)(a2 + 16);
          if ((_DWORD)v44)
          {
            v45 = 8 * v44;
            for (n = (_QWORD *)(v40 + 8 * v44); (sub_22E91E72C(a1, *n) & 1) != 0; ++n)
            {
              v45 -= 8;
              if (!v45)
              {
                v47 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v47)
                  return 1;
                v48 = (_QWORD *)(v40 + 8 * v47 + 8 * v47);
                v49 = 8 * v47;
                while ((sub_22E91E72C(a1, *v48) & 1) != 0)
                {
                  ++v48;
                  v49 -= 8;
                  if (!v49)
                    return 1;
                }
                return 0;
              }
            }
            return 0;
          }
          return 1;
        }
      }
      return 0;
    case 0x1E:
      v82 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v82)
        return 1;
      v83 = (_QWORD *)(a2 + 24);
      v84 = 8 * v82;
      while ((sub_22E91E72C(a1, *v83) & 1) != 0)
      {
        ++v83;
        v84 -= 8;
        if (!v84)
          return 1;
      }
      return 0;
    case 0x1F:
      v187 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v187)
        return 1;
      v188 = (_QWORD *)(a2 + 104);
      v189 = 8 * v187;
      while ((sub_22E91E72C(a1, *v188) & 1) != 0)
      {
        ++v188;
        v189 -= 8;
        if (!v189)
          return 1;
      }
      return 0;
    case 0x22:
      v199 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v199)
        return 1;
      v200 = (_QWORD *)(a2 + 80);
      v201 = 8 * v199;
      while ((sub_22E91E72C(a1, *v200) & 1) != 0)
      {
        ++v200;
        v201 -= 8;
        if (!v201)
          return 1;
      }
      return 0;
    case 0x25:
      if (!sub_22E92DD54(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22E92DDDC((uint64_t)a1, (uint64_t *)&v208))
        return 0;
      v56 = a2 + 96;
      v57 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v57)
        goto LABEL_98;
      v58 = 8 * v57;
      v59 = (_QWORD *)(a2 + 96);
      while ((sub_22E91E72C(a1, *v59) & 1) != 0)
      {
        ++v59;
        v58 -= 8;
        if (!v58)
        {
LABEL_98:
          if (sub_22E91E72C(a1, *(_QWORD *)(a2 + 24))
            && sub_22E91E72C(a1, *(_QWORD *)(a2 + 40)))
          {
            v60 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v60)
              return 1;
            v61 = 8 * v60;
            for (ii = (_QWORD *)(v56 + 8 * v60); (sub_22E91E72C(a1, *ii) & 1) != 0; ++ii)
            {
              v61 -= 8;
              if (!v61)
              {
                v63 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v63)
                  return 1;
                v64 = (_QWORD *)(v56 + 8 * v63 + 8 * v63);
                v65 = 8 * v63;
                while ((sub_22E91E72C(a1, *v64) & 1) != 0)
                {
                  ++v64;
                  v65 -= 8;
                  if (!v65)
                  {
                    v66 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v66)
                      return 1;
                    v67 = (_QWORD *)(v56 + 8 * v66 + 8 * v66 + 8 * v66);
                    v68 = 8 * v66;
                    while ((sub_22E91E72C(a1, *v67) & 1) != 0)
                    {
                      ++v67;
                      v68 -= 8;
                      if (!v68)
                      {
                        v69 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v69)
                          return 1;
                        v70 = (_QWORD *)(v56 + 8 * v69 + 8 * v69 + 8 * v69 + 8 * v69);
                        v71 = 8 * v69;
                        while ((sub_22E91E72C(a1, *v70) & 1) != 0)
                        {
                          ++v70;
                          v71 -= 8;
                          if (!v71)
                          {
                            v72 = *(unsigned int *)(a2 + 16);
                            if (!(_DWORD)v72)
                              return 1;
                            v73 = (_QWORD *)(v56 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72 + 8 * v72);
                            v74 = 8 * v72;
                            while ((sub_22E91E72C(a1, *v73) & 1) != 0)
                            {
                              ++v73;
                              v74 -= 8;
                              if (!v74)
                                return 1;
                            }
                            return 0;
                          }
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x27:
      v168 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v168)
        return 1;
      v169 = (_QWORD *)(a2 + 24);
      v170 = 8 * v168;
      while ((sub_22E91E72C(a1, *v169) & 1) != 0)
      {
        ++v169;
        v170 -= 8;
        if (!v170)
          return 1;
      }
      return 0;
    case 0x29:
      v53 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v53)
        return 1;
      v54 = (_QWORD *)(a2 + 32);
      v55 = 8 * v53;
      while ((sub_22E91E72C(a1, *v54) & 1) != 0)
      {
        ++v54;
        v55 -= 8;
        if (!v55)
          return 1;
      }
      return 0;
    case 0x2A:
      v50 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v50)
        return 1;
      v51 = (_QWORD *)(a2 + 80);
      v52 = 8 * v50;
      while ((sub_22E91E72C(a1, *v51) & 1) != 0)
      {
        ++v51;
        v52 -= 8;
        if (!v52)
          return 1;
      }
      return 0;
    case 0x2B:
      v101 = a2 + 64;
      v102 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v102)
        goto LABEL_164;
      v103 = 8 * v102;
      v104 = (_QWORD *)(a2 + 64);
      while ((sub_22E91E72C(a1, *v104) & 1) != 0)
      {
        ++v104;
        v103 -= 8;
        if (!v103)
        {
LABEL_164:
          result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 24));
          if (!(_DWORD)result)
            return result;
          result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 40));
          if (!(_DWORD)result)
            return result;
          v105 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v105)
            return 1;
          v106 = 8 * v105;
          for (jj = (_QWORD *)(v101 + 8 * v105); (sub_22E91E72C(a1, *jj) & 1) != 0; ++jj)
          {
            v106 -= 8;
            if (!v106)
            {
              v108 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v108)
                return 1;
              v109 = (_QWORD *)(v101 + 8 * v108 + 8 * v108);
              v110 = 8 * v108;
              while ((sub_22E91E72C(a1, *v109) & 1) != 0)
              {
                ++v109;
                v110 -= 8;
                if (!v110)
                {
                  v111 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v111)
                    return 1;
                  v112 = (_QWORD *)(v101 + 8 * v111 + 8 * v111 + 8 * v111);
                  v113 = 8 * v111;
                  while ((sub_22E91E72C(a1, *v112) & 1) != 0)
                  {
                    ++v112;
                    v113 -= 8;
                    if (!v113)
                    {
                      v114 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v114)
                        return 1;
                      v115 = (_QWORD *)(v101 + 8 * v114 + 8 * v114 + 8 * v114 + 8 * v114);
                      v116 = 8 * v114;
                      while ((sub_22E91E72C(a1, *v115) & 1) != 0)
                      {
                        ++v115;
                        v116 -= 8;
                        if (!v116)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2C:
      v117 = a2 + 64;
      v118 = *(unsigned int *)(a2 + 16);
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 64 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118 + 8 * v118));
      if (!(_DWORD)result)
        return result;
      result = sub_22E91E72C(a1, *(_QWORD *)(v117+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8 * *(unsigned int *)(a2 + 16)+ 8));
      if (!(_DWORD)result)
        return result;
      v119 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v119)
        goto LABEL_191;
      v120 = 8 * v119;
      v121 = (_QWORD *)(a2 + 64);
      while ((sub_22E91E72C(a1, *v121) & 1) != 0)
      {
        ++v121;
        v120 -= 8;
        if (!v120)
        {
LABEL_191:
          result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 24));
          if (!(_DWORD)result)
            return result;
          result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 40));
          if (!(_DWORD)result)
            return result;
          v122 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v122)
            return 1;
          v123 = 8 * v122;
          for (kk = (_QWORD *)(v117 + 8 * v122); (sub_22E91E72C(a1, *kk) & 1) != 0; ++kk)
          {
            v123 -= 8;
            if (!v123)
            {
              v125 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v125)
                return 1;
              v126 = (_QWORD *)(v117 + 8 * v125 + 8 * v125);
              v127 = 8 * v125;
              while ((sub_22E91E72C(a1, *v126) & 1) != 0)
              {
                ++v126;
                v127 -= 8;
                if (!v127)
                {
                  v128 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v128)
                    return 1;
                  v129 = (_QWORD *)(v117 + 8 * v128 + 8 * v128 + 8 * v128);
                  v130 = 8 * v128;
                  while ((sub_22E91E72C(a1, *v129) & 1) != 0)
                  {
                    ++v129;
                    v130 -= 8;
                    if (!v130)
                    {
                      v131 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v131)
                        return 1;
                      v132 = (_QWORD *)(v117 + 8 * v131 + 8 * v131 + 8 * v131 + 8 * v131);
                      v133 = 8 * v131;
                      while ((sub_22E91E72C(a1, *v132) & 1) != 0)
                      {
                        ++v132;
                        v133 -= 8;
                        if (!v133)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
              return 0;
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x2E:
      v190 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v190)
        return 1;
      v191 = (_QWORD *)(a2 + 136);
      v192 = 8 * v190;
      while ((sub_22E91E72C(a1, *v191) & 1) != 0)
      {
        ++v191;
        v192 -= 8;
        if (!v192)
          return 1;
      }
      return 0;
    case 0x35:
      v6 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v6)
        return 1;
      v7 = a2 + 24;
      v8 = 8 * v6;
      for (mm = (_QWORD *)(a2 + 24); (sub_22E91E72C(a1, *mm) & 1) != 0; ++mm)
      {
        v8 -= 8;
        if (!v8)
        {
          v10 = *(unsigned int *)(a2 + 16);
          v11 = (uint64_t *)(v7 + 8 * v10);
          v208 = (unint64_t)v11;
          if ((_DWORD)v10)
          {
            v12 = 0;
            v13 = &v11[v10];
            while (1)
            {
              if ((v12 & 3) != 0)
              {
                if ((v12 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                  v14 = (_QWORD *)((v12 & 0xFFFFFFFFFFFFFFFCLL) + 40);
                else
                  v14 = (_QWORD *)sub_22F3AC1A8(*v11);
                if ((sub_22E91E72C(a1, *v14) & 1) == 0)
                  return 0;
                if (v12 < 4)
                  sub_22F3F2FE0((uint64_t)&v208, 1);
                else
                  sub_22F0D8720((uint64_t)&v208);
              }
              else
              {
                if (!sub_22E91E72C(a1, *v11))
                  return 0;
                *(_QWORD *)&v208 = v11 + 1;
              }
              v12 = *((_QWORD *)&v208 + 1);
              v11 = (uint64_t *)v208;
              if ((uint64_t *)v208 == v13 && *((_QWORD *)&v208 + 1) == 0)
                return 1;
            }
          }
          return 1;
        }
      }
      return 0;
    case 0x3F:
      v75 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v75)
        return 1;
      v76 = a2 + 24;
      v77 = 8 * v75;
      for (nn = (_QWORD *)(a2 + 24); (sub_22E91E72C(a1, *nn) & 1) != 0; ++nn)
      {
        v77 -= 8;
        if (!v77)
        {
          v79 = *(unsigned int *)(a2 + 16);
          if (!(_DWORD)v79)
            return 1;
          v80 = 8 * v79;
          for (i1 = (_QWORD *)(v76 + 8 * v79); (sub_22E91E72C(a1, *i1) & 1) != 0; ++i1)
          {
            v80 -= 8;
            if (!v80)
              return 1;
          }
          return 0;
        }
      }
      return 0;
    case 0x42:
      if (!sub_22E92DD54(a1, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72)))
        return 0;
      v208 = *(_OWORD *)(a2 + 80);
      v209 = *(_QWORD *)(a2 + 96);
      if (!sub_22E92DDDC((uint64_t)a1, (uint64_t *)&v208))
        return 0;
      v140 = a2 + 104;
      v141 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v141)
        goto LABEL_228;
      v142 = 8 * v141;
      v143 = (_QWORD *)(a2 + 104);
      while ((sub_22E91E72C(a1, *v143) & 1) != 0)
      {
        ++v143;
        v142 -= 8;
        if (!v142)
        {
LABEL_228:
          if (sub_22E91E72C(a1, *(_QWORD *)(a2 + 24))
            && sub_22E91E72C(a1, *(_QWORD *)(a2 + 40)))
          {
            v144 = *(unsigned int *)(a2 + 16);
            if ((_DWORD)v144)
            {
              v145 = 8 * v144;
              v146 = (_QWORD *)(v140 + 8 * v144);
              while ((sub_22E91E72C(a1, *v146) & 1) != 0)
              {
                ++v146;
                v145 -= 8;
                if (!v145)
                {
                  v147 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v147)
                    goto LABEL_246;
                  v148 = (_QWORD *)(v140 + 8 * v147 + 8 * v147);
                  v149 = 8 * v147;
                  while ((sub_22E91E72C(a1, *v148) & 1) != 0)
                  {
                    ++v148;
                    v149 -= 8;
                    if (!v149)
                    {
                      v150 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v150)
                        goto LABEL_246;
                      v151 = (_QWORD *)(v140 + 8 * v150 + 8 * v150 + 8 * v150);
                      v152 = 8 * v150;
                      while ((sub_22E91E72C(a1, *v151) & 1) != 0)
                      {
                        ++v151;
                        v152 -= 8;
                        if (!v152)
                        {
                          v153 = *(unsigned int *)(a2 + 16);
                          if (!(_DWORD)v153)
                            goto LABEL_246;
                          v154 = (_QWORD *)(v140 + 8 * v153 + 8 * v153 + 8 * v153 + 8 * v153);
                          v155 = 8 * v153;
                          while ((sub_22E91E72C(a1, *v154) & 1) != 0)
                          {
                            ++v154;
                            v155 -= 8;
                            if (!v155)
                              goto LABEL_246;
                          }
                          return 0;
                        }
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
            else
            {
LABEL_246:
              if (*(_DWORD *)(a2 + 48) != 1)
                return 1;
              v156 = *(unsigned int *)(a2 + 16);
              if (!(_DWORD)v156)
                return 1;
              v157 = (_QWORD *)(v140 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156 + 8 * v156);
              v158 = 8 * v156;
              while ((sub_22E91E72C(a1, *v157) & 1) != 0)
              {
                ++v157;
                v158 -= 8;
                if (!v158)
                {
                  v159 = *(unsigned int *)(a2 + 16);
                  if (!(_DWORD)v159)
                    return 1;
                  v160 = (_QWORD *)(v140 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159 + 8 * v159);
                  v161 = 8 * v159;
                  while ((sub_22E91E72C(a1, *v160) & 1) != 0)
                  {
                    ++v160;
                    v161 -= 8;
                    if (!v161)
                    {
                      v162 = *(unsigned int *)(a2 + 16);
                      if (!(_DWORD)v162)
                        return 1;
                      v163 = (_QWORD *)(v140 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162 + 8 * v162);
                      v164 = 8 * v162;
                      while ((sub_22E91E72C(a1, *v163) & 1) != 0)
                      {
                        ++v163;
                        v164 -= 8;
                        if (!v164)
                          return 1;
                      }
                      return 0;
                    }
                  }
                  return 0;
                }
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x47:
      result = sub_22E91E72C(a1, *(_QWORD *)(a2 + 16));
      if (!(_DWORD)result)
        return result;
      v5 = *(_QWORD *)(a2 + 64);
      return (sub_22E91E72C(a1, v5) & 1) != 0;
    case 0x49:
      v202 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v202)
        return 1;
      v203 = (_QWORD *)(a2 + 24);
      v204 = 8 * v202;
      while ((sub_22E91E72C(a1, *v203) & 1) != 0)
      {
        ++v203;
        v204 -= 8;
        if (!v204)
          return 1;
      }
      return 0;
    case 0x4C:
      v165 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v165)
        return 1;
      v166 = (_QWORD *)(a2 + 24);
      v167 = 8 * v165;
      while ((sub_22E91E72C(a1, *v166) & 1) != 0)
      {
        ++v166;
        v167 -= 8;
        if (!v167)
          return 1;
      }
      return 0;
    case 0x4D:
      if (!sub_22E92DD54(a1, *(_QWORD *)(a2 + 56), *(_QWORD *)(a2 + 64)))
        return 0;
      v208 = *(_OWORD *)(a2 + 72);
      v209 = *(_QWORD *)(a2 + 88);
      if (!sub_22E92DDDC((uint64_t)a1, (uint64_t *)&v208))
        return 0;
      v24 = a2 + 96;
      v25 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v25)
        goto LABEL_49;
      v26 = 8 * v25;
      v27 = (_QWORD *)(a2 + 96);
      while ((sub_22E91E72C(a1, *v27) & 1) != 0)
      {
        ++v27;
        v26 -= 8;
        if (!v26)
        {
LABEL_49:
          if (sub_22E91E72C(a1, *(_QWORD *)(a2 + 24))
            && sub_22E91E72C(a1, *(_QWORD *)(a2 + 40)))
          {
            v28 = *(unsigned int *)(a2 + 16);
            if (!(_DWORD)v28)
              return 1;
            v29 = 8 * v28;
            for (i2 = (_QWORD *)(v24 + 8 * v28); (sub_22E91E72C(a1, *i2) & 1) != 0; ++i2)
            {
              v29 -= 8;
              if (!v29)
              {
                v31 = *(unsigned int *)(a2 + 16);
                if (!(_DWORD)v31)
                  return 1;
                v32 = (_QWORD *)(v24 + 8 * v31 + 8 * v31);
                v33 = 8 * v31;
                while ((sub_22E91E72C(a1, *v32) & 1) != 0)
                {
                  ++v32;
                  v33 -= 8;
                  if (!v33)
                  {
                    v34 = *(unsigned int *)(a2 + 16);
                    if (!(_DWORD)v34)
                      return 1;
                    v35 = (_QWORD *)(v24 + 8 * v34 + 8 * v34 + 8 * v34);
                    v36 = 8 * v34;
                    while ((sub_22E91E72C(a1, *v35) & 1) != 0)
                    {
                      ++v35;
                      v36 -= 8;
                      if (!v36)
                      {
                        v37 = *(unsigned int *)(a2 + 16);
                        if (!(_DWORD)v37)
                          return 1;
                        v38 = (_QWORD *)(v24 + 8 * v37 + 8 * v37 + 8 * v37 + 8 * v37);
                        v39 = 8 * v37;
                        while ((sub_22E91E72C(a1, *v38) & 1) != 0)
                        {
                          ++v38;
                          v39 -= 8;
                          if (!v39)
                            return 1;
                        }
                        return 0;
                      }
                    }
                    return 0;
                  }
                }
                return 0;
              }
            }
          }
          return 0;
        }
      }
      return 0;
    case 0x51:
      v16 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v16)
        return 1;
      v17 = (_QWORD *)(a2 + 104);
      v18 = 8 * v16;
      while ((sub_22E91E72C(a1, *v17) & 1) != 0)
      {
        ++v17;
        v18 -= 8;
        if (!v18)
          return 1;
      }
      return 0;
    case 0x59:
      v205 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v205)
        return 1;
      v206 = (_QWORD *)(a2 + 80);
      v207 = 8 * v205;
      while ((sub_22E91E72C(a1, *v206) & 1) != 0)
      {
        ++v206;
        v207 -= 8;
        if (!v207)
          return 1;
      }
      return 0;
    case 0x5A:
      v196 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v196)
        return 1;
      v197 = (_QWORD *)(a2 + 80);
      v198 = 8 * v196;
      while ((sub_22E91E72C(a1, *v197) & 1) != 0)
      {
        ++v197;
        v198 -= 8;
        if (!v198)
          return 1;
      }
      return 0;
    case 0x5B:
      v19 = *(unsigned int *)(a2 + 16);
      if (!(_DWORD)v19)
        return 1;
      v20 = 0;
      v21 = a2 + 24;
      v22 = 2 * v19;
      break;
    default:
      return 1;
  }
  while (1)
  {
    v23 = *(_QWORD *)(v21 + 8 * (v20 + 1));
    result = sub_22E91E72C(a1, *(_QWORD *)(v21 + 8 * v20));
    if (!(_DWORD)result)
      break;
    if ((sub_22E91E72C(a1, v23) & 1) == 0)
      return 0;
    v20 += 2;
    if (v22 == v20)
      return 1;
  }
  return result;
}

uint64_t sub_22E957F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;

  if (!a2)
    return 1;
  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  if (v3 == v2)
    v4 = 0;
  else
    v4 = *(uint64_t **)(a2 + 24);
  if (v3 == v2)
    v5 = 0;
  else
    v5 = *(uint64_t **)(a2 + 16);
  v12 = 0;
  v13 = 0;
  v11 = v5;
  if (v5 == v4)
    return 1;
  v7 = 0;
  while (1)
  {
    if ((v7 & 3) == 0)
    {
      result = sub_22E91E72C(a1, *v5);
      if (!(_DWORD)result)
        return result;
      v11 = v5 + 1;
      goto LABEL_18;
    }
    v8 = (_QWORD *)((v7 & 0xFFFFFFFFFFFFFFFCLL) != 0 ? (v7 & 0xFFFFFFFFFFFFFFFCLL) + 40 : sub_22F3AC1A8(*v5));
    if ((sub_22E91E72C(a1, *v8) & 1) == 0)
      return 0;
    if (v7 < 4)
      sub_22F3F2FE0((uint64_t)&v11, 1);
    else
      sub_22F0D8720((uint64_t)&v11);
LABEL_18:
    v5 = v11;
    v7 = v12;
    if (v11 == v4 && v12 == 0)
      return 1;
  }
}

uint64_t sub_22E958014(uint64_t a1, uint64_t a2)
{
  int v3;
  void **v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;

  v3 = *(unsigned __int8 *)(a1 + 56);
  if (*(_BYTE *)(a2 + 56))
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = (void **)(a1 + 16);
    if (v3)
    {
      if (*(char *)(a1 + 39) < 0)
        operator delete(*v5);
      v6 = *(_OWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)v5 = v6;
      *(_BYTE *)(a2 + 39) = 0;
      *(_BYTE *)(a2 + 16) = 0;
      v7 = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v7;
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_OWORD *)v5 = v8;
      *(_QWORD *)(a2 + 24) = 0;
      *(_QWORD *)(a2 + 32) = 0;
      *(_QWORD *)(a2 + 16) = 0;
      v9 = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v9;
      *(_BYTE *)(a1 + 56) = 1;
    }
  }
  else if (*(_BYTE *)(a1 + 56))
  {
    if (*(char *)(a1 + 39) < 0)
      operator delete(*(void **)(a1 + 16));
    *(_BYTE *)(a1 + 56) = 0;
  }
  return a1;
}

uint64_t sub_22E9580E4(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)(v4 + 16) & 0x400) == 0
    && ((*(_DWORD *)(v4 + 16) & 0xFE) == 0x2C
     || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x2C
     && (v4 = sub_22F10CF48(v4)) != 0))
  {
    v5 = sub_22F114198(*(_QWORD *)(v4 + 24));
  }
  else
  {
    v5 = sub_22E95816C(a2, *(_QWORD *)(a1 + 216));
  }
  if (v5)
    return v5 + 64;
  else
    return 0;
}

uint64_t sub_22E95816C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v5;

  if (a1 >= 0x10)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v3 = *(unsigned __int8 *)(v2 + 16);
    if (v2 && v3 == 45)
    {
      v5 = sub_22F114198(*(_QWORD *)(v2 + 24));
      if (sub_22EFC7ADC(v5 + 64))
      {
        if (!sub_22EFB3CF0(v5, a2))
          return 0;
      }
      return v5;
    }
    if (v3 == 27)
      return sub_22F114198(*(_QWORD *)(v2 + 24));
  }
  return 0;
}

unint64_t sub_22E958204(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35[2];

  v3 = *(_QWORD *)(a2 + 8);
  if (!v3)
    return 0;
  if ((sub_22F0AAC5C(*(_QWORD *)(a2 + 8)) & 4) == 0)
  {
    v7 = *(_QWORD *)(v3 + 16);
    if (!v7)
    {
      v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 1960) + 80);
      v9 = sub_22E3CD31C((uint64_t *)(v30 + 72), v30);
      v10 = v9 + 40;
LABEL_10:
      if (v9)
        return v10;
      else
        return 0;
    }
    if ((*(_QWORD *)(v3 + 8) & 4) != 0)
    {
      if ((*(_DWORD *)(v7 + 16) & 0xFE) != 0x2C)
        v7 = sub_22F10CF48(v7);
      v8 = *(_QWORD *)(v7 + 24);
      goto LABEL_8;
    }
    v28 = *(_DWORD *)(v7 + 28) & 0x7F;
    if ((v28 - 35) < 3)
    {
      v9 = sub_22F0AABF8(v3);
      goto LABEL_9;
    }
    v29 = *(_QWORD *)(v3 + 8) & 6;
    if (v28 == 16)
    {
      if (v29 == 2)
        v24 = *(_QWORD *)(v3 + 16);
      else
        v24 = 0;
    }
    else
    {
      if (v28 == 17 && v29 == 2)
        v24 = *(_QWORD *)(v3 + 16);
      else
        v24 = 0;
      do
      {
        v24 = *(_QWORD *)(v24 + 88);
        if (v24)
          v32 = (*(_DWORD *)(v24 + 28) & 0x7F) == 17;
        else
          v32 = 0;
      }
      while (v32);
    }
    v25 = v24 + 48;
    goto LABEL_31;
  }
  v12 = *(_QWORD *)(v3 + 8);
  if ((v12 & 4) != 0 && (v13 = *(_QWORD *)(v3 + 16)) != 0)
  {
    v14 = sub_22E95816C(v13 & 0xFFFFFFFFFFFFFFF0, *(_QWORD *)(a1 + 216));
    v15 = v14 == 0;
    if (v14)
      result = v14 + 64;
    else
      result = 0;
    if (!v15 || a3 == 0)
      return result;
    v12 = *(_QWORD *)(v3 + 8);
  }
  else if (!a3)
  {
    return 0;
  }
  if ((v12 & 4) == 0)
    return 0;
  v17 = *(_QWORD *)(v3 + 16);
  if (!v17)
    return 0;
  v18 = *(_QWORD *)(*(_QWORD *)(v17 + 8) & 0xFFFFFFFFFFFFFFF0);
  result = sub_22F10D628(v18);
  if (!result)
  {
    v26 = *(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v26 && *(_BYTE *)(v26 + 16) == 45)
    {
      v8 = *(_QWORD *)(v26 + 24);
LABEL_8:
      v9 = sub_22F114198(v8);
LABEL_9:
      v10 = v9 + 64;
      goto LABEL_10;
    }
    return result;
  }
  v19 = result;
  v35[0] = *(_QWORD *)(result + 32);
  v20 = sub_22F0F08CC(v35);
  if (!v20)
    return 0;
  v21 = v20;
  if ((*(_DWORD *)(v20 + 28) & 0x7F) != 0x1C)
    return 0;
  v22 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF0) + 8);
  v23 = sub_22EFEAD74(v20);
  if ((v23 & 7 | *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF0) + 8)) == (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF0) + 8) | v22 & 7))
  {
    v24 = *(_QWORD *)(v21 + 48);
    v25 = v24 + 64;
LABEL_31:
    if (v24)
      return v25;
    else
      return 0;
  }
  result = sub_22F3B8778(v21, v22);
  if (result)
  {
    v27 = result;
    if ((*(_BYTE *)(result + 8) & 4) != 0
      && (sub_22EC62AF4(a1, result) & 1) == 0
      && (sub_22EC63260(a1, v27, 0) & 1) == 0)
    {
      if (*(_QWORD *)(a2 + 8))
      {
        v33 = *(_QWORD *)(a2 + 16);
        v35[0] = *(_QWORD *)(a2 + 8);
        v35[1] = v33;
        v34 = sub_22F0AB364(v35);
      }
      else
      {
        v34 = 0;
      }
      sub_22F338924(a1, v34, v27, 4, 1);
    }
    return v27 + 64;
  }
  return result;
}

uint64_t sub_22E958490(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t *v19;

  result = 0;
  if (!a3 || (*(_WORD *)(a3 + 8) & 0x7Fu) - 38 < 0xFFFFFFFB)
    return result;
  if ((sub_22EFC7ADC(a3) & 1) != 0)
    return 0;
  v7 = *(_QWORD *)(a3 - 16);
  v8 = v7 ? v7 & 0xFFFFFFFFFFFFFFF0 : sub_22EF6462C(a1[11], a3 - 64);
  v9 = sub_22F10C2A4(*(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0));
  if ((*(_BYTE *)(v9 + 74) & 2) != 0)
    return 0;
  v10 = v9;
  if (*(_QWORD *)(a2 + 8))
  {
    v11 = *(_QWORD *)(a2 + 16);
    v17 = *(void **)(a2 + 8);
    v18 = v11;
    v12 = sub_22F0AB364((uint64_t *)&v17);
    v13 = *(_QWORD *)a2;
    v14 = v12;
    if (v12)
      goto LABEL_11;
  }
  else
  {
    v13 = *(_QWORD *)a2;
  }
  v14 = v13;
LABEL_11:
  v16 = v13;
  v17 = &unk_24FAB6EA8;
  LODWORD(v18) = 3587;
  v19 = &v16;
  if (!sub_22EE8B0B0((uint64_t)a1, v14, v8))
  {
    if ((*(_DWORD *)(v10 + 28) & 0x7F) == 0x21)
      return sub_22E9585EC(a1, v10, v14, a2);
    return 0;
  }
  v15 = *(_QWORD *)a2;
  if (!*(_QWORD *)a2)
    *(_DWORD *)a2 = 0;
  *(_DWORD *)(a2 + 4) = HIDWORD(v15);
  *(_QWORD *)(a2 + 8) = 0;
  *(_DWORD *)(a2 + 24) = 0;
  return 1;
}

uint64_t sub_22E9585EC(_QWORD *a1, unint64_t a2, unsigned int a3, uint64_t a4)
{
  char v6;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BOOL8 v13;
  unint64_t v14;
  int v15;
  unsigned int v17[24];
  uint64_t v18;
  unint64_t v19;
  void *v20[2];
  _QWORD v21[11];

  v21[10] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a2 + 74) & 1) == 0)
  {
    v9 = sub_22F3ACA44(a2);
    if (v9 && (**(_QWORD **)(a2 + 144) & 6) != 2)
    {
      v14 = v9;
      sub_22EE007CC(a2, 0, 0, 0, (uint64_t)v20);
      v15 = sub_22EE0C484((uint64_t)a1, a3, a2, v14, (uint64_t)v20, 1);
      if (v20[0] != v21)
        free(v20[0]);
      if (!v15)
        return 0;
      if (!a4)
        return 1;
      v11 = *(_QWORD *)a4;
      if (*(_QWORD *)a4)
      {
LABEL_9:
        *(_DWORD *)(a4 + 4) = HIDWORD(v11);
        *(_QWORD *)(a4 + 8) = 0;
        *(_DWORD *)(a4 + 24) = 0;
        return 1;
      }
    }
    else
    {
      if (!a4)
      {
        sub_22E8FCA40(a1, a3, 0xE00u, 0, (uint64_t)v20);
        v19 = *(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0;
        sub_22E8901B8((uint64_t)v20, (uint64_t *)&v19);
        sub_22E903BEC((unsigned int *)v20);
        sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0x64u, 0, (uint64_t)v17);
        sub_22E903BEC(v17);
        return 1;
      }
      sub_22E8FCA40(a1, a3, 0xE03u, 0, (uint64_t)v20);
      v19 = *(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0;
      v10 = sub_22E8901B8((uint64_t)v20, (uint64_t *)&v19);
      v18 = *(_QWORD *)a4;
      sub_22E8906A0(v10, &v18);
      sub_22E903BEC((unsigned int *)v20);
      v11 = *(_QWORD *)a4;
      if (*(_QWORD *)a4)
        goto LABEL_9;
    }
    *(_DWORD *)a4 = 0;
    goto LABEL_9;
  }
  v20[0] = 0;
  v6 = sub_22EE8B858((uint64_t)a1, a2, (unint64_t *)v20, 0);
  result = 0;
  if ((v6 & 1) == 0)
  {
    sub_22EE03478((uint64_t)a1);
    v13 = v12 != 0;
    sub_22F338924((uint64_t)a1, a3, (unint64_t)v20[0], 1, v12 == 0);
    return v13;
  }
  return result;
}

uint64_t sub_22E958824(_QWORD *a1, int a2, int a3, uint64_t a4)
{
  _QWORD *v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  __int16 v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unsigned int *v19;
  unint64_t v20;
  _DWORD *v22;
  const char *v23;
  uint64_t v24;
  unsigned int v25;
  _QWORD v26[2];
  _BYTE v27[96];
  _BYTE v28[96];
  _BYTE v29[96];

  v8 = a1 + 1611;
  while (1)
  {
    v8 = (_QWORD *)*v8;
    if (!v8)
      goto LABEL_34;
    v9 = *((_DWORD *)v8 + 2);
    if ((v9 & 1) != 0)
      break;
    if ((v9 & 0x20) != 0)
    {
      v10 = (_QWORD *)v8[45];
      goto LABEL_29;
    }
  }
  v11 = v8[45];
  v12 = *(_WORD *)(v11 + 8);
  if (v11)
    v13 = (v12 & 0x7Eu) - 58 >= 0xFFFFFFFC;
  else
    v13 = 0;
  if (!v13)
  {
LABEL_34:
    sub_22E8FCA40(a1, a2, 0xE64u, 0, (uint64_t)v29);
    v19 = (unsigned int *)v29;
    goto LABEL_35;
  }
  v14 = v12 & 0x7F;
  v15 = -40;
  if (v14 > 70)
  {
    if (v14 != 83)
    {
      if (v14 == 71)
      {
        v15 = -56;
      }
      else if (v14 != 81)
      {
        goto LABEL_22;
      }
    }
  }
  else
  {
    if (v14 <= 0x18)
    {
      if (v14 == 16)
      {
LABEL_14:
        v15 = -48;
        goto LABEL_27;
      }
      if (((1 << v14) & 0x1066) != 0)
        goto LABEL_27;
      if (v14 == 24)
        goto LABEL_14;
    }
    if (v14 != 70)
    {
LABEL_22:
      if ((v14 - 52) < 6)
      {
        v15 = -72;
      }
      else
      {
        v15 = -48;
        if ((v14 - 33) < 5)
          v15 = -64;
      }
      goto LABEL_27;
    }
    v15 = -64;
  }
LABEL_27:
  v16 = *(_QWORD *)(v11 + v15 + 16);
  v10 = (_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF8);
  if ((v16 & 4) != 0)
    v10 = (_QWORD *)*v10;
LABEL_29:
  if (!v10)
    goto LABEL_34;
  v17 = v10[8];
  if (v17 && ((*(unsigned __int16 *)(v17 + 8) | (*(unsigned __int8 *)(v17 + 10) << 16)) & 0x100000) != 0)
  {
    sub_22E8FCA40(a1, a2, 0x128Du, 0, (uint64_t)v28);
    v19 = (unsigned int *)v28;
  }
  else
  {
    sub_22E3CD31C((uint64_t *)(v10[5] + 96), v10[5]);
    if (*(_DWORD *)(v10[8] + 16))
    {
      sub_22F3E8E2C((uint64_t *)(a4 + 8), a1[11], (uint64_t)(v10 - 8), a2, a3);
      result = 0;
      *(_DWORD *)a4 = a2;
      *(_DWORD *)(a4 + 4) = a3;
      return result;
    }
    sub_22E8FCA40(a1, a2, 0xFA4u, 0, (uint64_t)v27);
    v20 = *(v10 - 3) & 0xFFFFFFFFFFFFFFF8;
    if ((*(v10 - 3) & 7) != 0 || v20 == 0)
    {
      v24 = 0;
      v23 = "";
    }
    else
    {
      v22 = *(_DWORD **)(v20 + 16);
      v25 = *v22;
      v23 = (const char *)(v22 + 4);
      v24 = v25;
    }
    v26[0] = v23;
    v26[1] = v24;
    sub_22F2F2210((uint64_t)v27, (uint64_t)v26);
    v19 = (unsigned int *)v27;
  }
LABEL_35:
  sub_22E903BEC(v19);
  return 1;
}

uint64_t sub_22E958A54(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  unint64_t v4;
  unsigned int v6;
  uint64_t result;
  unint64_t v9;
  int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = a2;
  v6 = *(_DWORD *)(a2 + 28) & 0x7F;
  if (v6 <= 0x2F && ((1 << v6) & 0xC00000060000) != 0)
  {
    v4 = sub_22EFBAEA4(a2);
    v6 = *(_DWORD *)(v4 + 28) & 0x7F;
  }
  if (v6 == 16)
    return 1;
  if (v6 - 33 > 9)
    return 0;
  v9 = *(_QWORD *)(v4 + 48);
  if (!v9)
    v9 = sub_22EF6462C(*(_QWORD *)(a1 + 88), v4);
  if ((*(_BYTE *)(*(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
    return 1;
  v10 = *(_DWORD *)(v4 + 28);
  if ((v10 & 0x7Fu) - 42 < 0xFFFFFFFD)
  {
    if ((v10 & 0x7Eu) - 34 >= 4)
    {
      if ((v10 & 0x7F) != 0x21)
        return 0;
      goto LABEL_20;
    }
    return 1;
  }
  v11 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v4 + 80) & 0xFFFFFFFFFFFFFFF8)
                                                                           + ((2 * *(_QWORD *)(v4 + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0)
                                                   + 8) & 0xFFFFFFFFFFFFFFF0)
                           + 16);
  if (v11 == 45)
    return 1;
  if (v11 != 44)
    return 0;
LABEL_20:
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 1) & 2) != 0)
    return 1;
  if (a3)
  {
    result = 0;
    *a3 = 1;
    return result;
  }
  return 0;
}

uint64_t sub_22E958B98(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  _BYTE v22[64];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  _BYTE v29[24];
  int v30;
  __int16 v31;
  char v32;
  uint64_t v33;

  v3 = 0;
  v33 = *MEMORY[0x24BDAC8D0];
  if (a2 && a3)
  {
    do
    {
      v4 = a3;
      v5 = *(_QWORD *)(a3 + 8);
      a3 = v5 & 0xFFFFFFFFFFFFFFF8;
    }
    while ((v5 & 0xFFFFFFFFFFFFFFF8) != 0);
    v6 = *(_QWORD *)(v4 + 16);
    v7 = v5 & 6;
    if (v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
    {
      v19 = 0;
      v20 = v22;
      v21 = 0x800000000;
      v23 = 0;
      v24 = 0;
      v25 = 0;
      v26 = a1;
      v27 = v6;
      v28 = 0;
      sub_22EFC6D6C((uint64_t)v29, v6);
      *(_OWORD *)&v29[8] = xmmword_22F4605B0;
      v30 = 16842752;
      v31 = 0;
      v32 = 0;
      sub_22EC56024((uint64_t)&v19);
      v18 = (uint64_t)a1;
      sub_22EC63520(a1, &v19, a2, 0, 0);
      v12 = 0;
      if ((_DWORD)v19 == 2)
      {
        v12 = *(_QWORD *)v20 & 0xFFFFFFFFFFFFFFFCLL;
        v13 = *(_DWORD *)(v12 + 28) & 0x7F;
        v14 = v13 > 0x2F;
        v15 = (1 << v13) & 0xC00000060000;
        if (!v14 && v15 != 0)
          v12 = sub_22EFBAEA4(*(_QWORD *)v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (!sub_22E958A54(v18, v12, 0))
          v12 = 0;
      }
      if (HIBYTE(v30))
      {
        if ((_DWORD)v19 == 5)
        {
          sub_22EC64D18(v26, (uint64_t)&v19);
        }
        else if (v24 && (*(_DWORD *)(v26[9] + 52) & 0x400000) != 0)
        {
          sub_22E90B5FC((unint64_t)v26, (uint64_t)&v19);
        }
      }
      if (v23)
      {
        v17 = sub_22EC6CBD0(v23);
        MEMORY[0x2348A0E9C](v17, 0x10E0C409F09D3C3);
      }
      if (v20 != v22)
        free(v20);
      return v12;
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_22E958D90(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, uint64_t a5, unint64_t a6, char a7, _BYTE *a8, char a9)
{
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unsigned int v28;
  char v29;
  int v31;
  unint64_t v32;
  unsigned int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char v45;
  void *v46;
  int v47;
  void *v48;
  void **v49;
  uint64_t v50;
  void **p_s1;
  int v52;
  int v53;
  int v54;
  int v55;
  char v56;
  _BOOL4 v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unsigned int v80;
  unint64_t v81;
  unint64_t v82;
  int v83;
  char v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  int v91;
  char v92;
  unint64_t v93;
  unsigned int v94;
  uint64_t v95;
  unsigned int v96;
  char v97;
  char v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  int v104;
  char v105;
  _DWORD *v106;
  uint64_t v107;
  size_t v108;
  void *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  BOOL v115;
  int v116;
  uint64_t (**v117)();
  unint64_t v118;
  unsigned int v119;
  uint64_t v120;
  uint64_t (**v121)();
  uint64_t v122;
  uint64_t v123;
  int v124;
  _QWORD *v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  unint64_t v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  unsigned int v140[24];
  unsigned int v141[24];
  unsigned int v142[24];
  void *v143[2];
  char v144;
  uint64_t v145;
  _BYTE v146[96];
  void *__s1;
  _BYTE __n[12];
  char v149;
  char v150;
  void *__p;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t (**v155)();
  int v156;
  char v157;
  uint64_t v158;
  _BYTE v159[11];
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  int *v163;
  int64x2_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  __int128 v173;
  uint64_t v174;
  __int128 v175;
  _BYTE v176[6];
  char v177;
  uint64_t v178;
  void *v179;
  uint64_t v180;
  _BYTE v181[64];
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  __int128 v186;
  uint64_t v187;
  uint64_t (**v188)();
  unsigned int v189;
  int v190;
  int v191;
  __int16 v192;
  char v193;
  uint64_t v194;

  v194 = *MEMORY[0x24BDAC8D0];
  v17 = (uint64_t *)(a3 + 8);
  if (sub_22E95A25C(*(_QWORD *)(a3 + 8)))
    return 1;
  v137 = a6;
  v138 = a7;
  v19 = *(_QWORD *)(a3 + 8);
  v20 = *(_DWORD *)(a3 + 16);
  if (a9)
    v21 = 7;
  else
    v21 = 6;
  v178 = 0;
  v179 = v181;
  v180 = 0x800000000;
  v182 = 0;
  v183 = 0;
  v184 = 0;
  v185 = (_QWORD *)a1;
  *(_QWORD *)&v186 = v19;
  DWORD2(v186) = v20;
  sub_22EFC6D6C((uint64_t)&v187, v19);
  v188 = 0;
  v189 = v21;
  v190 = 0;
  v191 = 16842752;
  v192 = 0;
  v193 = 0;
  sub_22EC56024((uint64_t)&v178);
  v22 = 0;
  if (*(_QWORD *)a3 >= 0x10uLL)
  {
    v22 = *(_QWORD *)a3;
    v23 = *(_QWORD *)(*(_QWORD *)a3 & 0xFFFFFFFFFFFFFFF0);
    if (v23)
    {
      if (*(_BYTE *)(v23 + 16) == 57)
        v22 = *(_QWORD *)(v23 + 8);
    }
  }
  v162 = v22;
  v161 = 0;
  if (a8)
    *a8 = 0;
  v139 = a5;
  if (v22 >= 0x10)
  {
    v26 = sub_22E9580E4(a1, v22);
    v161 = v26;
    v28 = (*(unsigned __int8 *)(*(_QWORD *)(v162 & 0xFFFFFFFFFFFFFFF0) + 17) >> 2) & 1;
    if (!v26)
      goto LABEL_26;
  }
  else
  {
    if (!*(_QWORD *)(a5 + 8))
    {
LABEL_28:
      sub_22EC63520(a1, &v178, a2, 0, 0);
      v26 = 0;
      v28 = 0;
      v29 = 0;
      goto LABEL_29;
    }
    v24 = sub_22E958204(a1, a5, a4);
    v25 = a5;
    v26 = v24;
    v161 = v24;
    v27 = *(_QWORD *)(v25 + 8);
    if (v27)
      v28 = (sub_22F0AAC5C(v27) >> 2) & 1;
    else
      v28 = 0;
    v188 = *(uint64_t (***)())v139;
    if (!v26)
    {
LABEL_26:
      if ((v28 & 1) != 0)
      {
        v26 = 0;
        v29 = 0;
        v28 = 1;
        goto LABEL_29;
      }
      goto LABEL_28;
    }
  }
  if ((sub_22EFC7ADC(v26) & 1) == 0 && (sub_22E958490((_QWORD *)a1, v139, v26) & 1) != 0)
    goto LABEL_30;
  sub_22EC611AC(a1, &v178, v26, 0);
  v29 = 0;
  if (v162 >= 0x10 && !(_DWORD)v180)
  {
    if (a2)
    {
      sub_22EC63520(a1, &v178, a2, 0, 0);
    }
    else if (a6)
    {
      v32 = *(unsigned int *)(a6 + 28);
      if (HIDWORD(v180))
      {
        v33 = 0;
      }
      else
      {
        v136 = *(unsigned int *)(a6 + 28);
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v32 = v136;
        v33 = v180;
      }
      *((_QWORD *)v179 + v33) = (v32 >> 13) & 3 | a6;
      LODWORD(v180) = v180 + 1;
      LODWORD(v178) = 2;
      v135 = 1;
      if ((_DWORD)v180)
        goto LABEL_47;
      goto LABEL_42;
    }
    v29 = 1;
  }
LABEL_29:
  if ((_DWORD)v178 != 5)
  {
    v135 = v29;
    if ((_DWORD)v180)
      goto LABEL_47;
LABEL_42:
    if (v28)
    {
      if (!v26
        || (*(_WORD *)(v26 + 8) & 0x7Eu) - 34 > 3
        || (*(_QWORD *)(v26 + 64)
         || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v26 + 40) + 96), *(_QWORD *)(v26 + 40)), *(_QWORD *)(v26 + 64)))
        && sub_22F3B1AA4(v26 - 64))
      {
        if ((v138 & 1) != 0)
          goto LABEL_30;
        v64 = *(_QWORD *)(a1 + 88);
        v65 = *(_QWORD *)(a3 + 8);
        v66 = v139;
        goto LABEL_129;
      }
    }
LABEL_47:
    v31 = v180;
    if (!(_DWORD)v180 && (v138 & 1) == 0)
    {
      v163 = 0;
      v164.i64[0] = (uint64_t)&v165;
      v164.i64[1] = 0x800000000;
      v169 = 0;
      v170 = 0;
      v171 = 0;
      v172 = (_QWORD *)a1;
      v173 = v186;
      v174 = v187;
      v175 = 0uLL;
      *(_WORD *)v176 = 0;
      *(_DWORD *)&v176[2] = 257;
      v177 = 0;
      sub_22EC56024((uint64_t)&v163);
      if (v161)
      {
        sub_22EC611AC(a1, &v163, v161, 0);
      }
      else
      {
        if (a2)
          v34 = v28;
        else
          v34 = 1;
        if ((v34 & 1) == 0)
          sub_22EC63520(a1, &v163, a2, 0, 0);
      }
      if (v164.i32[2])
      {
        v176[3] = 0;
        if (a8)
        {
          *a8 = 1;
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 20), 0xF98u, 0, (uint64_t)&v155);
          v35 = sub_22E8BAE44((uint64_t)&v155, v17);
          LODWORD(v143[0]) = (**(_DWORD **)(a1 + 72) >> 8) & 1;
          v36 = sub_22E89519C(v35, (unsigned int *)v143);
          v37 = *(unsigned int *)(a3 + 20);
          *(_QWORD *)&__n[4] = 0;
          v149 = 0;
          v153 = 0x100000000000000;
          v152 = 0;
          v154 = 0;
          __s1 = (void *)(v37 | (v37 << 32));
          __n[0] = 1;
          __p = (void *)58;
          sub_22E890748(v36, &__s1);
          if (SHIBYTE(v153) < 0)
            operator delete(__p);
          sub_22E903BEC((unsigned int *)&v155);
          if ((_DWORD)v163 != 2)
            goto LABEL_115;
          v38 = *(_QWORD *)v164.i64[0] & 0xFFFFFFFFFFFFFFFCLL;
          if ((*(_DWORD *)(v38 + 28) & 0x7Fu) <= 0x2F
            && ((1 << (*(_DWORD *)(v38 + 28) & 0x7F)) & 0xC00000060000) != 0)
          {
            v38 = sub_22EFBAEA4(v38);
            if (!v38)
              goto LABEL_115;
          }
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v38 + 24), 0x64u, 0, (uint64_t)v146);
          v39 = (unsigned int *)v146;
        }
        else
        {
          if (a9)
            v58 = 19;
          else
            v58 = 3311;
          sub_22E8FCA40((_QWORD *)a1, SDWORD2(v173), v58, 0, (uint64_t)&v155);
          v59 = sub_22E8BAE44((uint64_t)&v155, v17);
          LODWORD(__s1) = (**(_DWORD **)(a1 + 72) >> 8) & 1;
          sub_22E89519C(v59, (unsigned int *)&__s1);
          sub_22E903BEC((unsigned int *)&v155);
          if ((_DWORD)v163 != 2)
            goto LABEL_115;
          v60 = *(_QWORD *)v164.i64[0] & 0xFFFFFFFFFFFFFFFCLL;
          if ((*(_DWORD *)(v60 + 28) & 0x7Fu) <= 0x2F
            && ((1 << (*(_DWORD *)(v60 + 28) & 0x7F)) & 0xC00000060000) != 0)
          {
            v60 = sub_22EFBAEA4(v60);
            if (!v60)
              goto LABEL_115;
          }
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v60 + 24), 0x15C9u, 0, (uint64_t)&v155);
          sub_22E8BAE44((uint64_t)&v155, v17);
          v39 = (unsigned int *)&v155;
        }
        sub_22E903BEC(v39);
LABEL_115:
        if (v176[3])
        {
          if ((_DWORD)v163 == 5)
          {
            sub_22EC64D18(v172, (uint64_t)&v163);
          }
          else if (v170 && (*(_DWORD *)(v172[9] + 52) & 0x400000) != 0)
          {
            sub_22E90B5FC((unint64_t)v172, (uint64_t)&v163);
          }
        }
        if (v169)
        {
          v132 = sub_22EC6CBD0(v169);
          MEMORY[0x2348A0E9C](v132, 0x10E0C409F09D3C3);
        }
        if ((int *)v164.i64[0] != &v165)
          free((void *)v164.i64[0]);
        goto LABEL_30;
      }
      if (v176[3])
      {
        if ((_DWORD)v163 == 5)
        {
          sub_22EC64D18(v172, (uint64_t)&v163);
        }
        else if (v170 && (*(_DWORD *)(v172[9] + 52) & 0x400000) != 0)
        {
          sub_22E90B5FC((unint64_t)v172, (uint64_t)&v163);
        }
      }
      if (v169)
      {
        v133 = sub_22EC6CBD0(v169);
        MEMORY[0x2348A0E9C](v133, 0x10E0C409F09D3C3);
      }
      if ((int *)v164.i64[0] != &v165)
        free((void *)v164.i64[0]);
      v31 = v180;
    }
    v40 = v138;
    if (v31 || (v138 & 1) != 0 || (**(_BYTE **)(a1 + 72) & 0x10) != 0)
    {
LABEL_155:
      if ((_DWORD)v178 == 2)
        v81 = *(_QWORD *)v179 & 0xFFFFFFFFFFFFFFFCLL;
      else
        v81 = 0;
      v82 = v137;
      LOBYTE(v143[0]) = 0;
      v83 = sub_22E958A54(a1, v81, v143);
      if ((v83 & 1) == 0 && LOBYTE(v143[0]))
      {
        sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0x14BCu, 0, (uint64_t)v142);
        sub_22E903BEC(v142);
        goto LABEL_162;
      }
      if (v83)
      {
LABEL_162:
        v84 = v135;
        if (v162 < 0x10)
          v84 = 1;
        if ((v84 & 1) != 0 || (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 2) != 0)
          goto LABEL_186;
        if (a2)
        {
          v85 = *(_QWORD *)(a3 + 8);
          v86 = *(_DWORD *)(a3 + 16);
          v163 = 0;
          v164.i64[0] = (uint64_t)&v165;
          v164.i64[1] = 0x800000000;
          v169 = 0;
          v170 = 0;
          v171 = 0;
          v172 = (_QWORD *)a1;
          *(_QWORD *)&v173 = v85;
          DWORD2(v173) = v86;
          sub_22EFC6D6C((uint64_t)&v174, v85);
          v175 = xmmword_22F4605B0;
          *(_DWORD *)v176 = 16842752;
          *(_WORD *)&v176[4] = 0;
          v177 = 0;
          sub_22EC56024((uint64_t)&v163);
          sub_22EC63520(a1, &v163, a2, 0, 0);
          v82 = 0;
          v87 = (int)v163;
          if ((_DWORD)v163 == 2)
          {
            v82 = *(_QWORD *)v164.i64[0] & 0xFFFFFFFFFFFFFFFCLL;
            if ((*(_DWORD *)(v82 + 28) & 0x7Fu) <= 0x2F
              && ((1 << (*(_DWORD *)(v82 + 28) & 0x7F)) & 0xC00000060000) != 0)
            {
              v82 = sub_22EFBAEA4(*(_QWORD *)v164.i64[0] & 0xFFFFFFFFFFFFFFFCLL);
            }
          }
          if (v176[3])
          {
            if (v87 == 5)
            {
              sub_22EC64D18(v172, (uint64_t)&v163);
            }
            else if (v170 && (*(_DWORD *)(v172[9] + 52) & 0x400000) != 0)
            {
              sub_22E90B5FC((unint64_t)v172, (uint64_t)&v163);
            }
          }
          if (v169)
          {
            v134 = sub_22EC6CBD0(v169);
            MEMORY[0x2348A0E9C](v134, 0x10E0C409F09D3C3);
          }
          if ((int *)v164.i64[0] != &v165)
            free((void *)v164.i64[0]);
        }
        if (!sub_22E958A54(a1, v82, 0))
        {
LABEL_186:
          if (!v81)
          {
            v92 = 1;
            if ((v40 & 1) != 0)
              goto LABEL_238;
LABEL_208:
            sub_22EB17F48(a1, v81, a3 + 20, 1, 0, 0, 0, 0);
            v96 = *(_DWORD *)(v81 + 28) & 0x7F;
            if (v96 == 16)
              v97 = v92;
            else
              v97 = 1;
            if ((v97 & 1) == 0)
            {
              v103 = *(_QWORD *)(a1 + 88);
              v66 = v139;
              v67 = *(_DWORD *)(a3 + 16);
              v68 = *(_DWORD *)(a3 + 20);
              sub_22F0AB8AC((uint64_t *)(v139 + 8), v103, v81, v67, v68);
LABEL_222:
              if (!*(_DWORD *)v66)
                *(_DWORD *)v66 = v67;
LABEL_226:
              v18 = 0;
              *(_DWORD *)(v66 + 4) = v68;
              goto LABEL_31;
            }
            if (v96 == 17)
              v98 = v92;
            else
              v98 = 1;
            v99 = *(_QWORD *)(a1 + 88);
            if ((v98 & 1) == 0)
            {
              v104 = *(_DWORD *)(a3 + 16);
              v68 = *(_DWORD *)(a3 + 20);
              v66 = v139;
              sub_22F0AB8AC((uint64_t *)(v139 + 8), v99, v81, v104, v68);
              if (!*(_DWORD *)v139)
                *(_DWORD *)v139 = v104;
              goto LABEL_226;
            }
            v100 = v81;
            if (v96 <= 0x2F)
            {
              v100 = v81;
              if (((1 << v96) & 0xC00000060000) != 0)
                v100 = sub_22EFBAEA4(v81);
            }
            v101 = *(_QWORD *)(v100 + 48);
            if (v101)
              v102 = v101 & 0xFFFFFFFFFFFFFFF0;
            else
              v102 = sub_22EF6462C(v99, v100);
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v102 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16) == 44)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0x1927u, 0, (uint64_t)v140);
              sub_22E903BEC(v140);
            }
            v163 = &v165;
            v164 = vdupq_n_s64(0x20uLL);
            v167 = 0;
            if ((*(_DWORD *)(v81 + 28) & 0x7E) == 0x2E)
              v105 = v92;
            else
              v105 = 1;
            if ((v105 & 1) == 0)
              v102 = sub_22F36C604(*(_QWORD *)(a1 + 88), v81, v102);
            sub_22EEB5360((uint64_t)&v163, v102, 4uLL, 4);
            *v106 = *(_DWORD *)(a3 + 16);
            v107 = *(_QWORD *)(a1 + 88);
            v108 = v164.i64[0] - v164.i64[1];
            v109 = (void *)sub_22E3CD3D4(v107 + 2032, v164.i64[0] - v164.i64[1], 3);
            memcpy(v109, (char *)v163 + v164.i64[1], v108);
            sub_22E8ACD1C(v139, v107, 0, v102, (uint64_t)v109, *(_DWORD *)(a3 + 20));
            if (v163 != &v165 && v163)
              MEMORY[0x2348A0E84]();
LABEL_238:
            v18 = 0;
            goto LABEL_31;
          }
        }
        else
        {
          v88 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v82 + 32))(v82);
          if (v88 != (*(uint64_t (**)(unint64_t))(*(_QWORD *)v81 + 32))(v81))
          {
            if ((*(_DWORD *)(v82 + 28) & 0x7Fu) - 33 > 9
              || (*(_DWORD *)(v81 + 28) & 0x7Fu) - 33 > 9
              || ((v89 = *(_QWORD *)(v82 + 48)) == 0
                ? (v90 = sub_22EF6462C(*(_QWORD *)(a1 + 88), v82))
                : (v90 = v89 & 0xFFFFFFFFFFFFFFF0),
                  (v110 = *(_QWORD *)(v81 + 48)) == 0
                ? (v111 = sub_22EF6462C(*(_QWORD *)(a1 + 88), v81))
                : (v111 = v110 & 0xFFFFFFFFFFFFFFF0),
                  (*(_QWORD *)((v90 & 0xFFFFFFFFFFFFFFF0) + 8) | v90 & 7) != (*(_QWORD *)((v111 & 0xFFFFFFFFFFFFFFF0)
                                                                                          + 8) | v111 & 7)))
            {
              if ((v40 & 1) != 0)
                goto LABEL_30;
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0xF97u, 0, (uint64_t)&v163);
              sub_22E8BAE44((uint64_t)&v163, v17);
              sub_22E903BEC((unsigned int *)&v163);
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v81 + 24), 0x152Au, 0, (uint64_t)&v163);
              sub_22E8901B8((uint64_t)&v163, (uint64_t *)&v162);
              sub_22E903BEC((unsigned int *)&v163);
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v82 + 24), 0x152Bu, 0, (uint64_t)v141);
              sub_22E903BEC(v141);
            }
          }
        }
        v91 = *(_DWORD *)(v81 + 28);
        if ((v91 & 0x7Fu) - 39 <= 2)
        {
          if ((v91 & 0x7Eu) - 58 < 0xFFFFFFFA)
          {
            v92 = 0;
            *(_DWORD *)(v81 + 28) = v91 | 0x800;
            if ((v40 & 1) != 0)
              goto LABEL_238;
            goto LABEL_208;
          }
          sub_22EB4E494(a1, *(unsigned int *)(v81 + 24), v81, 0);
        }
        v92 = 0;
        if ((v40 & 1) != 0)
          goto LABEL_238;
        goto LABEL_208;
      }
      if ((v40 & 1) != 0)
        goto LABEL_30;
      if (!(_DWORD)v180)
      {
        sub_22F30C4D4((uint64_t)&v178, 0);
        sub_22EC63520(a1, &v178, a2, 0, 0);
      }
      v66 = v139;
      if ((**(_BYTE **)(a1 + 72) & 0x10) == 0)
        goto LABEL_272;
      v93 = v161;
      if (!v161)
        v93 = *(_QWORD *)(a1 + 216);
      if (!sub_22EFC7ADC(v93)
        || ((v94 = *(_WORD *)(v93 + 8) & 0x7F, v94 > 0x18) || ((1 << v94) & 0x1000006) == 0) && v94 - 52 > 5)
      {
LABEL_272:
        if ((_DWORD)v180)
        {
          if ((_DWORD)v178 == 2)
          {
            v118 = *(_QWORD *)v179 & 0xFFFFFFFFFFFFFFFCLL;
            v119 = *(_DWORD *)(v118 + 28) & 0x7F;
            if (v119 <= 0x2F && ((1 << v119) & 0xC00000060000) != 0)
            {
              v118 = sub_22EFBAEA4(*(_QWORD *)v179 & 0xFFFFFFFFFFFFFFFCLL);
              v119 = *(_DWORD *)(v118 + 28) & 0x7F;
            }
            if (v119 - 33 <= 9)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0xCEFu, 0, (uint64_t)&v163);
              v120 = *(_QWORD *)(v118 + 48);
              if (v120)
                v121 = (uint64_t (**)())(v120 & 0xFFFFFFFFFFFFFFF0);
              else
                v121 = (uint64_t (**)())sub_22EF6462C(*(_QWORD *)(a1 + 88), v118);
              v155 = v121;
              v129 = sub_22E8901B8((uint64_t)&v163, (uint64_t *)&v155);
              LODWORD(__s1) = (**(_DWORD **)(a1 + 72) >> 8) & 1;
              sub_22E89519C(v129, (unsigned int *)&__s1);
              goto LABEL_291;
            }
          }
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0xCEFu, 0, (uint64_t)&v163);
          v122 = sub_22E8BAE44((uint64_t)&v163, v17);
          LODWORD(v155) = (**(_DWORD **)(a1 + 72) >> 8) & 1;
          sub_22E89519C(v122, (unsigned int *)&v155);
          sub_22E903BEC((unsigned int *)&v163);
          if ((_DWORD)v178 != 2)
            goto LABEL_30;
          v123 = *(_QWORD *)v179 & 0xFFFFFFFFFFFFFFFCLL;
          if ((*(_DWORD *)(v123 + 28) & 0x7Fu) <= 0x2F
            && ((1 << (*(_DWORD *)(v123 + 28) & 0x7F)) & 0xC00000060000) != 0)
          {
            v123 = sub_22EFBAEA4(v123);
            if (!v123)
              goto LABEL_30;
          }
          v124 = *(_DWORD *)(v123 + 24);
          v125 = (_QWORD *)a1;
          v126 = 5577;
        }
        else
        {
          if (*(_QWORD *)(v139 + 8))
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0xFAAu, 0, (uint64_t)&v163);
            v127 = sub_22E8BAE44((uint64_t)&v163, v17);
            v128 = sub_22E894FB4(v127, (uint64_t *)&v161);
            v155 = *(uint64_t (***)())v139;
            sub_22E8906A0(v128, (uint64_t *)&v155);
LABEL_291:
            sub_22E903BEC((unsigned int *)&v163);
            goto LABEL_30;
          }
          v124 = *(_DWORD *)(a3 + 16);
          v125 = (_QWORD *)a1;
          v126 = 5049;
        }
        sub_22E8FCA40(v125, v124, v126, 0, (uint64_t)&v163);
        sub_22E8BAE44((uint64_t)&v163, v17);
        goto LABEL_291;
      }
      v95 = -40;
      if ((*(_WORD *)(v93 + 8) & 0x7Fu) > 0x46)
      {
        switch(v94)
        {
          case 'S':
            goto LABEL_260;
          case 'G':
            v95 = -56;
            goto LABEL_260;
          case 'Q':
LABEL_260:
            v112 = *(_QWORD *)(v93 + v95 + 16);
            v113 = v112 & 0xFFFFFFFFFFFFFFF8;
            if ((v112 & 4) != 0)
              v113 = *(_QWORD *)v113;
            v114 = v113 - 64;
            if (v113)
              v115 = (*(_WORD *)(v113 + 8) & 0x7Fu) - 38 >= 0xFFFFFFFD;
            else
              v115 = 0;
            v116 = !v115;
            if (v116)
              v117 = 0;
            else
              v117 = (uint64_t (**)())v114;
            v155 = v117;
            if ((v116 & 1) == 0 && (sub_22F3B1AA4(v114) & 1) != 0)
            {
              sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 16), 0x1511u, 0, (uint64_t)&v163);
              v130 = sub_22E8BAE44((uint64_t)&v163, v17);
              sub_22E890024(v130, (uint64_t *)&v155);
              sub_22E903BEC((unsigned int *)&v163);
              v64 = *(_QWORD *)(a1 + 88);
              v65 = *(_QWORD *)(a3 + 8);
LABEL_129:
              v67 = *(_DWORD *)(a3 + 16);
              v68 = *(_DWORD *)(a3 + 20);
              sub_22F3E8D84((uint64_t *)(v66 + 8), v64, v65, v67, v68);
              goto LABEL_222;
            }
            goto LABEL_272;
        }
      }
      else
      {
        if (v94 <= 0x18)
        {
          if (v94 == 16)
          {
LABEL_203:
            v95 = -48;
            goto LABEL_260;
          }
          if (((1 << v94) & 0x1066) != 0)
            goto LABEL_260;
          if (v94 == 24)
            goto LABEL_203;
        }
        if (v94 == 70)
        {
LABEL_258:
          v95 = -64;
          goto LABEL_260;
        }
      }
      if (v94 - 52 >= 6)
      {
        if (v94 - 33 >= 5)
          goto LABEL_203;
        goto LABEL_258;
      }
      v95 = -72;
      goto LABEL_260;
    }
    v41 = v186;
    v145 = v186;
    LODWORD(v178) = 0;
    LODWORD(v180) = 0;
    if (v182)
    {
      v42 = sub_22EC6CBD0(v182);
      MEMORY[0x2348A0E9C](v42, 0x10E0C409F09D3C3);
    }
    HIBYTE(v192) = 0;
    v182 = 0;
    v183 = 0;
    v157 = 1;
    v156 = 16843009;
    memset(v159, 0, sizeof(v159));
    v158 = 0;
    v155 = &off_24FAB6E70;
    v160 = a1;
    v43 = v161;
    v44 = (uint64_t *)v139;
    sub_22EC6AB20(a1, (uint64_t *)&v186, v189, a2, v139, (uint64_t)&v155, 1, v161, (uint64_t)&v163, a4, 0, 1u);
    if (!v163)
    {
      v61 = *v17;
      v40 = v138;
LABEL_153:
      *(_QWORD *)&v186 = v61;
      __s1 = &v168;
      sub_22E8D19C8((void ***)&__s1);
      if ((uint64_t *)v164.i64[1] != &v166)
        free((void *)v164.i64[1]);
      goto LABEL_155;
    }
    if (!v43)
    {
      *(_QWORD *)__n = *(_QWORD *)(a1 + 88) + 2128;
      *(_DWORD *)&__n[8] = 5050;
      __s1 = (void *)sub_22E3B8AAC(*(uint64_t *)__n);
      *((_BYTE *)__s1 + *(unsigned __int8 *)__s1 + 1) = 10;
      v62 = __s1;
      v63 = *(unsigned __int8 *)__s1;
      *(_BYTE *)__s1 = v63 + 1;
      v62[v63 + 2] = v41;
      goto LABEL_142;
    }
    if (!BYTE4(v167))
    {
      v69 = 0;
LABEL_141:
      v70 = *(_QWORD *)(a1 + 88) + 2128;
      __s1 = 0;
      *(_QWORD *)__n = v70;
      *(_DWORD *)&__n[8] = 4012;
      __s1 = (void *)sub_22E3B8AAC(v70);
      *((_BYTE *)__s1 + *(unsigned __int8 *)__s1 + 1) = 10;
      v71 = __s1;
      v72 = *(unsigned __int8 *)__s1;
      *(_BYTE *)__s1 = v72 + 1;
      v71[v72 + 2] = v41;
      *((_BYTE *)v71 + (v72 + 1) + 1) = 13;
      v73 = __s1;
      v74 = *(unsigned __int8 *)__s1;
      *(_BYTE *)__s1 = v74 + 1;
      v73[v74 + 2] = v43;
      *((_BYTE *)v73 + (v74 + 1) + 1) = 2;
      v75 = __s1;
      v76 = *(unsigned __int8 *)__s1;
      *(_BYTE *)__s1 = v76 + 1;
      v75[v76 + 2] = v69;
      sub_22E4D6448((uint64_t)(v75 + 42), *v44, 1);
LABEL_142:
      sub_22EC6BEF8(a1, (uint64_t)&v163, (uint64_t)&__s1, 1);
      if (__s1 && *(_QWORD *)__n)
        sub_22E3BB10C(*(unint64_t *)__n, (unint64_t)__s1);
      v40 = v138;
      if (v164.i64[0])
      {
        v77 = DWORD2(v186) | ((unint64_t)DWORD2(v186) << 32);
        sub_22F0AB9D8((uint64_t)(v44 + 1), *(_QWORD *)(a1 + 88), v164.u64[0], v77);
        *v44 = v77;
      }
      if (v165)
      {
        v78 = *(_QWORD *)v164.i64[1];
        if (*(_QWORD *)v164.i64[1])
        {
          v79 = *(unsigned int *)(v78 + 28);
          v80 = v180;
          if (v180 >= HIDWORD(v180))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v80 = v180;
          }
          *((_QWORD *)v179 + v80) = (v79 >> 13) & 3 | v78;
          LODWORD(v180) = v180 + 1;
          LODWORD(v178) = 2;
        }
      }
      v61 = (uint64_t)v163;
      goto LABEL_153;
    }
    sub_22EFC683C(&v145, &__s1);
    sub_22EC6887C((uint64_t *)&v163, *(unsigned int **)(a1 + 72), (uint64_t)v143);
    v45 = v150;
    if (v150 >= 0)
      v46 = (void *)(v150 & 0x7F);
    else
      v46 = *(void **)__n;
    v47 = v144;
    v48 = (void *)(v144 & 0x7F);
    if (v144 < 0)
      v48 = v143[1];
    if (v46 == v48)
    {
      if (v144 >= 0)
        v49 = v143;
      else
        v49 = (void **)v143[0];
      if (v150 < 0)
      {
        v57 = memcmp(__s1, v49, *(size_t *)__n) == 0;
      }
      else if ((v150 & 0x7F) != 0)
      {
        v50 = (v150 & 0x7F) - 1;
        p_s1 = &__s1;
        do
        {
          v53 = *(unsigned __int8 *)p_s1;
          p_s1 = (void **)((char *)p_s1 + 1);
          v52 = v53;
          v55 = *(unsigned __int8 *)v49;
          v49 = (void **)((char *)v49 + 1);
          v54 = v55;
          v115 = v50-- != 0;
          v56 = v115;
          v57 = v52 == v54;
        }
        while (v52 == v54 && (v56 & 1) != 0);
      }
      else
      {
        v57 = 1;
      }
    }
    else
    {
      v57 = 0;
    }
    if (v47 < 0)
    {
      operator delete(v143[0]);
      if ((v150 & 0x80) == 0)
      {
LABEL_136:
        if (v57)
        {
LABEL_137:
          v44 = (uint64_t *)v139;
          *(_DWORD *)(v139 + 24) = 0;
          v69 = 1;
          *(_QWORD *)v139 = 0;
          *(_QWORD *)(v139 + 8) = 0;
          goto LABEL_141;
        }
LABEL_140:
        v69 = 0;
        v44 = (uint64_t *)v139;
        goto LABEL_141;
      }
    }
    else if ((v45 & 0x80) == 0)
    {
      goto LABEL_136;
    }
    operator delete(__s1);
    if (v57)
      goto LABEL_137;
    goto LABEL_140;
  }
LABEL_30:
  v18 = 1;
LABEL_31:
  if (HIBYTE(v191))
  {
    if ((_DWORD)v178 == 5)
    {
      sub_22EC64D18(v185, (uint64_t)&v178);
    }
    else if (v183 && (*(_DWORD *)(v185[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v185, (uint64_t)&v178);
    }
  }
  if (v182)
  {
    v131 = sub_22EC6CBD0(v182);
    MEMORY[0x2348A0E9C](v131, 0x10E0C409F09D3C3);
  }
  if (v179 != v181)
    free(v179);
  return v18;
}

BOOL sub_22E95A25C(uint64_t a1)
{
  _QWORD *v1;
  _WORD *v2;
  unsigned int v3;
  uint64_t v4;

  v1 = *(_QWORD **)(a1 + 16);
  v4 = *v1;
  v2 = v1 + 2;
  v3 = v4;
  return (v4 & 0xFFFFFFFE) != 0 && *v2 == 9020 && v3 >= 2uLL && *(_WORD *)((char *)v2 + v3 - 2) == 15907;
}

uint64_t sub_22E95A2AC(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, _BYTE *a7, char a8)
{
  BOOL v8;

  if (*(_DWORD *)a5)
    v8 = *(_DWORD *)(a5 + 4) == 0;
  else
    v8 = 1;
  if (!v8 && *(_QWORD *)(a5 + 8) == 0)
    return 1;
  else
    return sub_22E958D90(a1, a2, a3, a4, a5, 0, 0, a7, a8);
}

uint64_t sub_22E95A2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v8;
  BOOL v9;
  uint64_t v11;
  int v13;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  size_t v21;
  void *v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  _QWORD *v26;
  int64x2_t v27;
  _QWORD v28[10];

  v28[9] = *MEMORY[0x24BDAC8D0];
  if (*(_DWORD *)a2)
    v8 = *(_DWORD *)(a2 + 4) == 0;
  else
    v8 = 1;
  v9 = !v8 && *(_QWORD *)(a2 + 8) == 0;
  if (v9 || (*(_QWORD *)a3 & 0x3F000) == 0x32000)
    return 1;
  v13 = a4;
  v11 = 1;
  v16 = sub_22EE8C8BC(a1, *(unsigned __int8 **)(a3 + 8), 1, a4, a5, a6, a7, a8);
  v25 = v16;
  if (v16 >= 0x10)
  {
    v17 = v16;
    v18 = *(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(v18 + 16) & 0x400) != 0
      || (*(_DWORD *)(v18 + 16) & 0xFE) == 0x2C
      || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v18 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x2C
      && sub_22F10CF48(v18))
    {
      v26 = v28;
      v27 = vdupq_n_s64(0x20uLL);
      v28[4] = 0;
      sub_22EEB5360((uint64_t)&v26, v17, 8uLL, 4);
      *v19 = *(_DWORD *)(a3 + 120);
      v19[1] = *(_DWORD *)(a3 + 140);
      v20 = *(_QWORD *)(a1 + 88);
      v21 = v27.i64[0] - v27.i64[1];
      v22 = (void *)sub_22E3CD3D4(v20 + 2032, v27.i64[0] - v27.i64[1], 3);
      memcpy(v22, (char *)v26 + v27.i64[1], v21);
      sub_22E8ACD1C(a2, v20, 0, v17, (uint64_t)v22, v13);
      if (v26 != v28 && v26)
        MEMORY[0x2348A0E84]();
      return 0;
    }
    else
    {
      sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a3 + 120), 0xCEFu, 0, (uint64_t)&v26);
      v23 = sub_22E8901B8((uint64_t)&v26, (uint64_t *)&v25);
      v24 = (**(_DWORD **)(a1 + 72) >> 8) & 1;
      sub_22E89519C(v23, (unsigned int *)&v24);
      sub_22E903BEC((unsigned int *)&v26);
    }
  }
  return v11;
}

uint64_t sub_22E95A504(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v5;

  if (*(_DWORD *)a3)
    v5 = *(_DWORD *)(a3 + 4) == 0;
  else
    v5 = 1;
  if (!v5 && *(_QWORD *)(a3 + 8) == 0)
    return 0;
  else
    return sub_22E958D90(a1, a2, a4, a5, a3, 0, 1, 0, 0) ^ 1;
}

uint64_t sub_22E95A564(_QWORD *a1, uint64_t *a2, uint64_t a3, int a4, uint64_t a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned int a11, int a12, int a13)
{
  uint64_t v15;
  uint64_t *v19;
  uint64_t v20;
  _BYTE *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  size_t v35;
  void *v36;
  _BYTE *v37;
  BOOL v38;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v44;
  _DWORD *v45;
  _DWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  void *v53;
  BOOL v55;
  unint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  _BYTE *v59;
  int64x2_t v60;
  _BYTE v61[32];
  uint64_t v62;
  char *v63;
  uint64_t v64;
  _DWORD v65[66];
  uint64_t v66;

  v15 = a5;
  v66 = *MEMORY[0x24BDAC8D0];
  v58[0] = a9;
  v58[1] = a10;
  v19 = (uint64_t *)(a3 + 8);
  if (*(_DWORD *)a3 && *(_DWORD *)(a3 + 4) && !*(_QWORD *)(a3 + 8))
    return 1;
  v57 = a5;
  v63 = (char *)v65;
  v64 = 0x800000000;
  v65[64] = a7;
  v65[65] = a11;
  sub_22ED58288((uint64_t)a1, (uint64_t)v58, (uint64_t)&v63);
  v21 = (_BYTE *)(v15 & 0xFFFFFFFFFFFFFFF8);
  if ((v15 & 6) == 6)
    v22 = v15 & 0xFFFFFFFFFFFFFFF8;
  else
    v22 = 0;
  if (v22)
  {
    v23 = *(_QWORD *)(v22 + 8);
    if ((v23 & 4) == 0)
    {
      v44 = sub_22F36CB1C(a1[11], 6u, v23 & 0xFFFFFFFFFFFFFFF8, *(_QWORD *)(v22 + 16), (uint64_t)&v63);
      v59 = v61;
      v60 = vdupq_n_s64(0x20uLL);
      v62 = 0;
      sub_22EEB5360((uint64_t)&v59, v44, (8 * *(_DWORD *)(v44 + 20) + 32), 8);
      v46 = v45;
      *v45 = 0;
      if (!*v19 || !sub_22F0ABC50(v19, a1[11]))
        v47 = 0;
      *((_QWORD *)v46 + 1) = v47;
      v46[4] = a6;
      v46[5] = a4;
      v46[6] = a7;
      v46[7] = a11;
      if ((_DWORD)v64)
      {
        v48 = 0;
        v49 = v46 + 8;
        v50 = 32 * v64;
        do
        {
          *v49++ = *(_QWORD *)&v63[v48 + 24];
          v48 += 32;
        }
        while (v50 != v48);
      }
      v51 = a1[11];
      v52 = v60.i64[0] - v60.i64[1];
      v53 = (void *)sub_22E3CD3D4(v51 + 2032, v60.i64[0] - v60.i64[1], 3);
      memcpy(v53, &v59[v60.i64[1]], v52);
      sub_22E8ACD1C(a3, v51, a4, v44, (uint64_t)v53, a13);
      v37 = v59;
      v38 = v59 == v61;
      goto LABEL_26;
    }
  }
  if ((v15 & 6) != 2 || !v21 || (*(_DWORD *)v21 & 3) != 1)
  {
LABEL_12:
    v24 = sub_22F0F08CC(&v57);
    v25 = v24;
    v26 = 0;
    if ((v15 & 6) == 2 && v21)
    {
      v26 = (*v21 & 3) == 0;
      if (v22)
        goto LABEL_34;
    }
    else if (v22)
    {
      goto LABEL_34;
    }
    if (!v26 && (*(_DWORD *)(v24 + 28) & 0x7D | 2) != 0x1F)
    {
      v27 = sub_22ED60904(a1, v15, a6, (uint64_t)&v63);
      v56 = v27;
      if (v27 < 0x10)
      {
LABEL_41:
        v20 = 1;
        goto LABEL_42;
      }
      v28 = v27;
      v29 = *(_QWORD *)(v27 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_DWORD *)(v29 + 16) & 0x400) != 0
        || (*(_DWORD *)(v29 + 16) & 0xFE) == 0x2C
        || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v29 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x2C
        && sub_22F10CF48(v29))
      {
        v59 = v61;
        v60 = vdupq_n_s64(0x20uLL);
        v62 = 0;
        sub_22EEB5360((uint64_t)&v59, v28, (8 * *(_DWORD *)(v28 + 20) + 16), 8);
        *v30 = a6;
        v30[1] = a4;
        v30[2] = a7;
        v30[3] = a11;
        if ((_DWORD)v64)
        {
          v31 = 0;
          v32 = v30 + 4;
          v33 = 32 * v64;
          do
          {
            *v32++ = *(_QWORD *)&v63[v31 + 24];
            v31 += 32;
          }
          while (v33 != v31);
        }
        v34 = a1[11];
        v35 = v60.i64[0] - v60.i64[1];
        v36 = (void *)sub_22E3CD3D4(v34 + 2032, v60.i64[0] - v60.i64[1], 3);
        memcpy(v36, &v59[v60.i64[1]], v35);
        sub_22E8ACD1C(a3, v34, a4, v28, (uint64_t)v36, a13);
        v37 = v59;
        v38 = v59 == v61;
LABEL_26:
        if (!v38 && v37 != 0)
          MEMORY[0x2348A0E84]();
        v20 = 0;
        goto LABEL_42;
      }
      sub_22E8FCA40(a1, a6, 0xF99u, 0, (uint64_t)&v59);
      sub_22E8901B8((uint64_t)&v59, (uint64_t *)&v56);
LABEL_40:
      sub_22E903BEC((unsigned int *)&v59);
      sub_22ED602F4(a1, v57);
      goto LABEL_41;
    }
LABEL_34:
    v56 = __PAIR64__(a11, a6);
    if (HIDWORD(*(_QWORD *)a3) && *(_QWORD *)a3)
      LODWORD(v56) = *(_QWORD *)a3;
    sub_22E8FCA40(a1, a13, 0xFCDu, 0, (uint64_t)&v59);
    v40 = 0;
    if (v25)
      v40 = (*(_DWORD *)(v25 + 28) & 0x7F) == 31;
    v55 = v40;
    v41 = sub_22E894E38((uint64_t)&v59, (unsigned __int8 *)&v55);
    v42 = sub_22F30C54C(v41, &v57);
    sub_22E8906A0(v42, (uint64_t *)&v56);
    goto LABEL_40;
  }
  v20 = 1;
  if ((sub_22ED61690(a1, a2, (unint64_t *)&v57, a6, 1) & 1) == 0)
  {
    v15 = v57;
    v21 = (_BYTE *)(v57 & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_12;
  }
LABEL_42:
  if (v63 != (char *)v65)
    free(v63);
  return v20;
}

_QWORD *sub_22E95AA60(uint64_t a1, int *a2)
{
  int v2;
  int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v7;
  _QWORD *v10;

  v2 = *a2;
  v3 = a2[1];
  if (v3)
    v4 = v2 == 0;
  else
    v4 = 1;
  v5 = *((_QWORD *)a2 + 1);
  if (v4 && v5 == 0)
    return 0;
  v7 = !v2 || v3 == 0;
  if (!v7 && v5 == 0)
    return 0;
  v10 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, a2[6] + 8, 3);
  *v10 = *((_QWORD *)a2 + 1);
  memcpy(v10 + 1, *((const void **)a2 + 2), a2[6]);
  return v10;
}

void sub_22E95AAE0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    sub_22E8ACE30(a4, *a2, (uint64_t)(a2 + 1));
  }
  else
  {
    if (!*(_DWORD *)a4)
      *(_DWORD *)a4 = a3;
    *(_DWORD *)(a4 + 4) = HIDWORD(a3);
    *(_QWORD *)(a4 + 8) = 0;
    *(_DWORD *)(a4 + 24) = 0;
  }
}

BOOL sub_22E95AB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  int v4;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v3 = *(_QWORD *)(a1 + 216);
  v4 = *(_WORD *)(v3 + 8) & 0x7F;
  if (v4 == 24 || (v4 - 19) < 5)
    return 0;
  v7 = *(_QWORD *)(a3 + 8);
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 && ((*(_QWORD *)(v7 + 8) & 6) != 2 || (*(_DWORD *)(v8 + 28) & 0x7Fu) - 35 < 3))
    return 1;
  v9 = *(_WORD *)(sub_22EFCBB30(v3) + 8) & 0x7F;
  return v9 == 83 || v9 == 16;
}

uint64_t sub_22E95AB9C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  if (*(_DWORD *)a3)
    v3 = *(_DWORD *)(a3 + 4) == 0;
  else
    v3 = 1;
  if (!v3 && *(_QWORD *)(a3 + 8) == 0)
    return 1;
  v8 = 1;
  v9 = sub_22E958204((uint64_t)a1, a3, 1);
  if (v9)
  {
    v10 = v9;
    if ((sub_22EFC7ADC(v9) & 1) != 0 || (sub_22E958490(a1, a3, v10) & 1) == 0)
    {
      a1[27] = v10;
      *(_QWORD *)(a2 + 360) = v10;
      if (sub_22EFC7ADC(v10))
        sub_22ED72834((uint64_t)a1, a3);
      return 0;
    }
  }
  return v8;
}

void sub_22E95AC4C()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22E95AC60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = sub_22F2E6D78(a2);
  return sub_22E958A54(v2, v3, 0);
}

__n128 sub_22E95AC90@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  __n128 result;
  uint64_t v6;

  v4 = operator new();
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v4 + 8) = result;
  *(_QWORD *)v4 = &off_24FAB6E70;
  v6 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v4 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v4 + 32) = v6;
  *a2 = v4;
  return result;
}

uint64_t sub_22E95ACE8(_QWORD *a1, unsigned int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
  unsigned int v10;
  unsigned int v11;
  unsigned int v13;
  uint64_t *v17;
  uint64_t *v18;

  v10 = a7;
  v11 = a6;
  v13 = a4;
  v17 = sub_22EE89D90((uint64_t)a1, a5, *(_QWORD *)(a8 + 8), a4, a5, a6, a7, a8);
  if ((*(_WORD *)(a5 + 1088) & 1) != 0 || (**(_QWORD **)a5 & 0x3F000) == 0x32000)
    return 1;
  v18 = v17;
  if ((*(_BYTE *)(a1[9] + 1) & 1) != 0)
    sub_22EAA474C((uint64_t)a1, a5);
  return sub_22E95ADCC(a1, a2, a3, v18, a8, v13 | ((unint64_t)v11 << 32), v10 | ((unint64_t)a9 << 32));
}

uint64_t sub_22E95ADCC(_QWORD *a1, unsigned int a2, int a3, uint64_t *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t *v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  unsigned int *v30;
  uint64_t v31;
  char v32;
  int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  int v43;
  char v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  int v50;
  unsigned int v51;
  unsigned __int8 *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  unsigned int *v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int *v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t i;
  int v74;
  int v75;
  int v76;
  uint64_t *v77;
  unsigned int v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  unint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  unsigned int *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t *v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  _BOOL4 v128;
  BOOL v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  int v139;
  int v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  BOOL v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  uint64_t *v165;
  _QWORD *v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v174;
  int v175;
  unint64_t v176;
  char v177;
  uint64_t v178;
  char v179;
  char __p[9];
  char v181[3];
  int v182;
  uint64_t v183;
  char v184;
  int v185;
  unint64_t v186[12];
  uint64_t v187;
  unint64_t v188;
  unint64_t v189;
  unsigned int *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  int v195;
  int v196;
  void *v197[2];
  uint64_t v198;
  char v199;
  unint64_t v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  llvm *v207;
  unsigned int v208;
  _QWORD *v209;
  _QWORD *v210;
  uint64_t v211;
  int v212;
  _QWORD v213[5];
  _DWORD *v214;
  uint64_t v215;
  _DWORD v216[26];
  uint64_t v217;
  __int16 v218;
  char v219;
  uint64_t v220;

  v220 = *MEMORY[0x24BDAC8D0];
  v13 = (uint64_t *)(*a4 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(*v13 + 17) & 4) != 0)
    v14 = 1;
  else
    v14 = *(unsigned __int8 *)(a5 | 1) >> 7;
  v172 = HIDWORD(a7);
  sub_22E95C574((uint64_t)&v190, (uint64_t)a1, *a4, a5);
  v174 = a2;
  v200 = a7 & 0xFFFFFFFF00000000 | a2;
  v201 = a6;
  sub_22E95C6A4((unsigned int *)&v190);
  if (a3 > 145)
  {
    if (a3 != 146)
    {
      if (a3 == 348)
      {
        if (v14)
        {
          v20 = v191;
LABEL_160:
          v40 = sub_22F3C5C20(a1[11], v193, v194, v195, v20 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)a4, a2, v172, a6);
          goto LABEL_258;
        }
        LODWORD(v176) = 2905;
        v16 = sub_22E95F674((uint64_t)v190, v191, v192, &v176, &v195);
        v17 = v16 - 1;
        if (v16 != 1 && (_DWORD)v176)
        {
          sub_22E8FCA40(v190, v200, v176, 0, (uint64_t)&v202);
          LODWORD(v189) = 6;
          sub_22E8900C4((uint64_t)&v202, (int *)&v189);
          v186[0] = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8);
          v18 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)v186);
          v19 = sub_22E8901B8(v18, &v192);
          sub_22E8906A0(v19, (uint64_t *)&v200);
          sub_22E903BEC((unsigned int *)&v202);
        }
        if (v17 < 2)
        {
          v20 = v191;
          if ((v191 & 1) != 0)
            goto LABEL_276;
          goto LABEL_160;
        }
LABEL_106:
        v66 = 1;
        v191 = 1;
        goto LABEL_277;
      }
      if (v14)
      {
        v23 = v191;
LABEL_36:
        v24 = a1[11];
        v25 = v193;
        v26 = v194;
        v27 = v195;
        v28 = v23 & 0xFFFFFFFFFFFFFFFELL;
        v29 = sub_22E3CD3D4(v24 + 2032, 48, 3);
        sub_22F0629EC(v29, v25, v26, v27, v28, (uint64_t)a4, a2, v172, a6);
        v30 = (unsigned int *)v29;
LABEL_259:
        v66 = (uint64_t)sub_22E95C720(&v190, v30);
        goto LABEL_277;
      }
      if (v194)
      {
        if (!v196)
        {
          v31 = v191;
          if ((v191 & 1) != 0)
            goto LABEL_276;
LABEL_98:
          v57 = *(_QWORD *)((v192 & 0xFFFFFFFFFFFFFFF0) + 8);
          v58 = (uint64_t *)(*(_QWORD *)((*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if ((sub_22F1105F0(*v58) & 1) == 0 && !sub_22F110DD0(*v58)
            || (v59 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFF0),
                (sub_22F1105F0(*(_QWORD *)(v57 & 0xFFFFFFFFFFFFFFF0)) & 1) == 0)
            && !sub_22F110DD0(*v59)
            || (v60 = *v58, sub_22F11057C(*v58))
            || sub_22F11057C(*v59)
            || (*(_BYTE *)(*((_QWORD *)v190 + 9) + 133) & 2) == 0
            && ((v118 = sub_22E3E4B64(v60)) != 0 && (*(_DWORD *)(v118 + 16) & 0x780000) == 0x80000
             || (v119 = sub_22E3E4B64(*v59)) != 0 && (*(_DWORD *)(v119 + 16) & 0x780000) == 0x80000))
          {
            v61 = v190;
            v62 = v200;
            v63 = 2905;
          }
          else
          {
            v120 = sub_22EF5CDF0(*((_QWORD *)v190 + 11), *v58);
            if (v120 == sub_22EF5CDF0(*((_QWORD *)v190 + 11), *v59))
            {
              if (*(_QWORD *)(v58[1] & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v57 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
                v121 = 5;
              else
                v121 = 10;
              v195 = v121;
              v23 = v191;
              if ((v191 & 1) != 0)
                goto LABEL_276;
              goto LABEL_36;
            }
            if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v59 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
               - 55 >= 2)
              v139 = 2905;
            else
              v139 = 2909;
            if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v59 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
               - 55 >= 2)
              v140 = 2911;
            else
              v140 = 2912;
            if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v58 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
               - 55 >= 2)
              v63 = v139;
            else
              v63 = v140;
            v61 = v190;
            v62 = v200;
          }
          sub_22E8FCA40(v61, v62, v63, 0, (uint64_t)&v202);
          LODWORD(v176) = 7;
          sub_22E8900C4((uint64_t)&v202, (int *)&v176);
          v186[0] = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8);
          v64 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)v186);
          v65 = sub_22E8901B8(v64, &v192);
          sub_22E8906A0(v65, (uint64_t *)&v200);
          sub_22E903BEC((unsigned int *)&v202);
          goto LABEL_106;
        }
        v31 = sub_22EB19A28(v190);
      }
      else
      {
        v31 = sub_22EB1A358(v190, v191 & 0xFFFFFFFFFFFFFFFELL, 0);
      }
      v191 = v31;
      if ((v31 & 1) != 0)
        goto LABEL_276;
      goto LABEL_98;
    }
    if ((v14 & 1) != 0)
    {
LABEL_254:
      if (a1[162] == a1[161])
        v138 = 0;
      else
        v138 = a1[162];
      v40 = sub_22F061078(a1[11], v193, v194, v195, v191 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)v197, (uint64_t)a4, v138, v174, SHIDWORD(v174), v172, a6);
      goto LABEL_258;
    }
    v176 = (unint64_t)&v190;
    if (v196)
    {
      if (v196 == 260)
      {
        if ((v191 & 1) != 0)
          goto LABEL_252;
        v22 = 1;
      }
      else
      {
        v191 = sub_22EB19A28(v190);
        if ((v191 & 1) != 0)
          goto LABEL_252;
        v22 = 0;
        v196 = 0;
      }
    }
    else
    {
      v22 = 0;
    }
    v46 = v192;
    v47 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v192 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v47)
      v48 = (*(_DWORD *)(v47 + 16) & 0xFF800FF) == 86507531;
    else
      v48 = 0;
    if (v48)
    {
      v195 = 25;
      if ((v22 & 1) != 0)
      {
        v196 = 0;
        sub_22F343028(v190, (unint64_t *)&v191, 0, 1, v200, v192, 0xB75u);
        v56 = v191;
        if ((v191 & 1) != 0)
          goto LABEL_252;
      }
      else
      {
        v56 = v191;
      }
      v191 = sub_22EBCEBF8((uint64_t)v190, (unsigned __int8 *)(v56 & 0xFFFFFFFFFFFFFFFELL));
    }
    else
    {
      if (*(_DWORD *)(v47 + 16) == 45 || v194 != 0)
        v22 = 1;
      if ((v22 & 1) == 0)
      {
        v191 = sub_22EB1B954((uint64_t)v190, (void *)(v191 & 0xFFFFFFFFFFFFFFFELL));
        if ((v191 & 1) != 0)
          goto LABEL_252;
        v46 = v192;
      }
      LODWORD(v187) = 2905;
      v50 = sub_22E962680((uint64_t)v190, (uint64_t)&v191, v46, 3, v200, (uint64_t)&v187, (uint64_t)&v195, (uint64_t)v197, 0);
      v51 = v50 - 1;
      if (v50 != 1 && (_DWORD)v187)
      {
        if ((v191 & 1) != 0)
          goto LABEL_252;
        if (*(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8) == *(_QWORD *)(*((_QWORD *)v190 + 11) + 16840))
        {
          v52 = sub_22E9058F0((unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL));
          sub_22E8FCA40(v190, v200, 0xB75u, 0, (uint64_t)&v202);
          v189 = *((_QWORD *)v52 + 2);
          v53 = sub_22E894538((uint64_t)&v202, (uint64_t *)&v189);
          v54 = sub_22E8901B8(v53, &v192);
          v55 = sub_22E8906A0(v54, (uint64_t *)&v200);
          *(_OWORD *)v186 = *(_OWORD *)(v52 + 40);
          v188 = sub_22F0AB0EC(v186);
          sub_22E8906A0(v55, (uint64_t *)&v188);
          sub_22E903BEC((unsigned int *)&v202);
          sub_22ED11AD0(v190, (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL), 0, 0);
        }
        else
        {
          sub_22E9607B0();
        }
      }
      if (v51 > 1)
      {
        v137 = 1;
      }
      else
      {
        if (v195 == 1)
          sub_22E98D52C(v190, v191 & 0xFFFFFFFFFFFFFFFELL, v192, v200);
        if ((*(_WORD *)(*((_QWORD *)v190 + 9) + 148) & 0xALL) == 0)
          goto LABEL_252;
        v202 = (void *)(v191 & 0xFFFFFFFFFFFFFFFELL);
        if (sub_22EC32FE4((uint64_t)v190, v200, v192, (uint64_t *)&v202, 3, 1, 0, 0) == 1)
          v199 = 1;
        v137 = (uint64_t)v202;
      }
      v191 = v137;
    }
LABEL_252:
    sub_22E95F17C((uint64_t *)&v176);
    if ((v191 & 1) != 0)
      goto LABEL_276;
    sub_22E990EC8((int64_t)a1, *v13, (unsigned __int8 *)a5);
    goto LABEL_254;
  }
  if (a3 == 131)
  {
    if ((v14 & 1) != 0)
    {
LABEL_64:
      v40 = sub_22F3C5B88(a1[11], v193, v194, v191 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)a4, a2, v172, a6);
LABEL_258:
      v30 = (unsigned int *)v40;
      goto LABEL_259;
    }
    v186[0] = (unint64_t)&v190;
    if (v194)
    {
      if (!v196)
      {
        if ((v191 & 1) != 0)
          goto LABEL_62;
        goto LABEL_57;
      }
      v21 = sub_22EB19A28(v190);
    }
    else
    {
      v21 = sub_22EB1B954((uint64_t)v190, (void *)(v191 & 0xFFFFFFFFFFFFFFFELL));
    }
    v191 = v21;
    if ((v21 & 1) != 0)
      goto LABEL_62;
LABEL_57:
    LODWORD(v189) = 2905;
    v37 = sub_22E95F3B0((uint64_t)v190, &v191, v192, 0, (int *)&v189);
    if (!v37 && (_DWORD)v189)
    {
      sub_22E8FCA40(v190, v200, v189, 0, (uint64_t)&v202);
      LODWORD(v188) = 0;
      sub_22E8900C4((uint64_t)&v202, (int *)&v188);
      v176 = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8);
      v38 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)&v176);
      v39 = sub_22E8901B8(v38, &v192);
      sub_22E8906A0(v39, (uint64_t *)&v200);
      sub_22E903BEC((unsigned int *)&v202);
LABEL_61:
      v191 = 1;
      goto LABEL_62;
    }
    if ((v37 - 1) >= 2)
      goto LABEL_61;
LABEL_62:
    sub_22E95F17C((uint64_t *)v186);
    if ((v191 & 1) != 0)
      goto LABEL_276;
    sub_22E990EC8((int64_t)a1, *v13, (unsigned __int8 *)a5);
    goto LABEL_64;
  }
  if (a3 != 133)
  {
    if ((v14 & 1) != 0)
    {
LABEL_157:
      v40 = sub_22F3C5A2C(a1[11], v193, v194, v195, v191 & 0xFFFFFFFFFFFFFFFELL, 0, (uint64_t)a4, v174, v172, a6);
      goto LABEL_258;
    }
    if (v194 || v196 == 260)
    {
      if (v196)
      {
        if (v196 != 260)
        {
          v191 = sub_22EB19A28(v190);
          if ((v191 & 1) == 0)
            v196 = 0;
        }
      }
    }
    else
    {
      v191 = sub_22EB1B954((uint64_t)v190, (void *)(v191 & 0xFFFFFFFFFFFFFFFELL));
    }
    v32 = v191;
    if ((v191 & 1) != 0)
    {
LABEL_155:
      if ((v32 & 1) != 0)
        goto LABEL_276;
      sub_22E990EC8((int64_t)a1, *v13, (unsigned __int8 *)a5);
      goto LABEL_157;
    }
    v175 = 2905;
    v33 = sub_22E95F8C0(v190, &v191, v192, 0, v200, &v175, &v195);
    v34 = v33 - 1;
    if (v33 != 1 && v175)
    {
      if ((v191 & 1) != 0)
        goto LABEL_154;
      if (*(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8) == *(_QWORD *)(*((_QWORD *)v190 + 11) + 16840))
      {
        sub_22E8FCA40(v190, v200, 0xB70u, 0, (uint64_t)&v202);
        v186[0] = *((_QWORD *)sub_22E9058F0((unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL)) + 2);
        v35 = sub_22E894538((uint64_t)&v202, (uint64_t *)v186);
        v36 = sub_22E8901B8(v35, &v192);
        sub_22E8906A0(v36, (uint64_t *)&v200);
        sub_22E903BEC((unsigned int *)&v202);
        sub_22ED11AD0(v190, (unsigned __int8 *)(v191 & 0xFFFFFFFFFFFFFFFELL), 0, 0);
      }
      else
      {
        sub_22E9607B0();
      }
    }
    if (v34 <= 1)
    {
      v68 = v190;
      v67 = v191;
      if ((*(_WORD *)(*((_QWORD *)v190 + 9) + 148) & 0xALL) != 0)
      {
        v202 = (void *)(v191 & 0xFFFFFFFFFFFFFFFELL);
        if (sub_22EC32FE4((uint64_t)v190, v200, v192, (uint64_t *)&v202, 3, 1, 0, 0) == 1)
          v199 = 1;
        v67 = (uint64_t)v202;
        v191 = (uint64_t)v202;
        v68 = v190;
      }
      v69 = v200;
      v189 = v200;
      v169 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFFFFELL) + 8);
      v170 = v192;
      v70 = sub_22F10AEAC(*(_QWORD *)(v169 & 0xFFFFFFFFFFFFFFF0));
      if (!v70)
      {
        v88 = sub_22F10C2A4(*(_QWORD *)(v169 & 0xFFFFFFFFFFFFFFF0));
        if (!v88)
          goto LABEL_152;
        v70 = v88;
        if ((*(_DWORD *)(v88 + 28) & 0x7Fu) - 35 > 2)
          goto LABEL_152;
      }
      if ((*(_BYTE *)(v70 + 74) & 1) == 0)
        goto LABEL_152;
      if ((*(_BYTE *)(v70 + 28) & 0x80) != 0)
        goto LABEL_152;
      v71 = sub_22F10AEAC(*(_QWORD *)(v170 & 0xFFFFFFFFFFFFFFF0));
      if (!v71)
        goto LABEL_152;
      v72 = v71;
      if ((*(_BYTE *)(v71 + 74) & 1) == 0 || (*(_BYTE *)(v71 + 28) & 0x80) != 0)
        goto LABEL_152;
      v202 = 0;
      v203 = (uint64_t)&v203;
      v204 = &v203;
      v205 = 0;
      v206 = 1;
      for (i = 40; i != 168; i += 16)
        *(void **)((char *)&v202 + i) = 0;
      v209 = v213;
      v210 = v213;
      v211 = 4;
      v213[4] = 0;
      v214 = v216;
      v215 = 0x400000000;
      v212 = 0;
      v216[24] = 0;
      v217 = 0;
      v218 = 257;
      v219 = 1;
      v74 = sub_22EFB36DC(v70, v71, (unint64_t *)&v202);
      v75 = 0;
      v164 = v74;
      if ((v74 & 1) == 0)
      {
        if (!sub_22EFB36DC(v72, v70, (unint64_t *)&v202))
        {
LABEL_308:
          if (v214 != v216)
            free(v214);
          if (v210 != v209)
            free(v210);
          if ((v206 & 1) == 0)
            llvm::deallocate_buffer(v207, (void *)(16 * v208));
          sub_22E687D9C(&v203);
LABEL_152:
          if ((sub_22E960DC8((uint64_t)v190, v191, v192) & 1) == 0)
          {
            sub_22E8FCA40(v190, v200, 0x18BEu, 0, (uint64_t)&v202);
            v186[0] = *(_QWORD *)((v191 & 0xFFFFFFFFFFFFFFFELL) + 8);
            v89 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)v186);
            v90 = sub_22E8901B8(v89, &v192);
            sub_22E8906A0(v90, (uint64_t *)&v200);
            sub_22E903BEC((unsigned int *)&v202);
          }
          goto LABEL_154;
        }
        v75 = 1;
      }
      v163 = v75;
      if (v204 == &v203)
      {
        LOBYTE(v76) = 1;
LABEL_300:
        v154 = v170;
        if (v164)
          v155 = v170;
        else
          v155 = v169;
        if (v164)
          v154 = v169;
        v187 = v154;
        v188 = v155;
        sub_22E8FCA40(v68, v69, 0x1B26u, 0, (uint64_t)v186);
        v156 = sub_22E8901B8((uint64_t)v186, &v187);
        v157 = sub_22E8901B8(v156, (uint64_t *)&v188);
        LOBYTE(v185) = (v76 & 1) == 0;
        v158 = sub_22E894E38(v157, (unsigned __int8 *)&v185);
        LODWORD(v176) = v163;
        v159 = sub_22E8900C4(v158, (int *)&v176);
        sub_22E8906A0(v159, (uint64_t *)&v189);
        sub_22E903BEC((unsigned int *)v186);
        sub_22E8FCA40(v68, v69, 0x17AFu, 0, (uint64_t)v186);
        v185 = v163;
        v160 = sub_22E8900C4((uint64_t)v186, &v185);
        v179 = 0;
        v178 = 0;
        strcpy(v181, "st");
        v182 = 0;
        v183 = 0xB00000000000000;
        v184 = 0;
        v176 = v69 | ((unint64_t)v69 << 32);
        v177 = 1;
        strcpy(__p, "static_c");
        sub_22E890748(v160, &v176);
        if (SHIBYTE(v183) < 0)
          operator delete(*(void **)__p);
        sub_22E903BEC((unsigned int *)v186);
      }
      else
      {
        v76 = 1;
        v77 = v204;
        v161 = v69;
        while (1)
        {
          v162 = v76;
          v165 = v77;
          v78 = *((_DWORD *)v77 + 6);
          if (!v78)
            break;
          v79 = 0;
          v80 = (_QWORD *)v77[2];
          v166 = &v80[3 * v78];
          do
          {
            if ((*(_BYTE *)(*v80 + 12) & 1) != 0)
            {
              v76 = v162;
              goto LABEL_148;
            }
            v81 = *(_QWORD *)(**(_QWORD **)(*v80 + 16) & 0xFFFFFFFFFFFFFFF0);
            if ((*(_BYTE *)(v81 + 8) & 0xF) != 0)
              v81 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*v80 + 16));
            v82 = sub_22F10C2A4(*(_QWORD *)(v81 & 0xFFFFFFFFFFFFFFF0));
            if (v82)
            {
              if ((*(_DWORD *)(v82 + 28) & 0x7Fu) - 35 >= 3)
                v83 = 0;
              else
                v83 = v82;
              v167 = v83;
            }
            else
            {
              v167 = 0;
            }
            v84 = v80[1];
            v85 = *(_QWORD *)(v84 + 128);
            if (!v85)
            {
              sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v84 + 104) + 96), *(_QWORD *)(v84 + 104));
              v85 = *(_QWORD *)(v84 + 128);
              if (!v85)
                goto LABEL_308;
            }
            if ((*(_BYTE *)(v84 + 28) & 0x80) != 0)
              goto LABEL_308;
            v86 = *(_QWORD *)(v85 + 88);
            if (!v86 || (*(_BYTE *)(v86 + 74) & 1) == 0)
              goto LABEL_308;
            v87 = sub_22F0C975C(*((_QWORD *)v68 + 11), v84);
            v79 += sub_22E46A3EC(v87, v167);
            v80 += 3;
          }
          while (v80 != v166);
          if (!v79)
            goto LABEL_308;
          v76 = 0;
LABEL_148:
          v77 = (uint64_t *)v165[1];
          v69 = v161;
          if (v77 == &v203)
            goto LABEL_300;
        }
      }
      goto LABEL_308;
    }
    v191 = 1;
LABEL_154:
    v32 = v191;
    goto LABEL_155;
  }
  if ((*(_BYTE *)(a1[9] + 60) & 1) == 0)
  {
    if (v14)
    {
      v91 = v191;
LABEL_280:
      v40 = sub_22F3C58E4(a1[11], v193, v194, v195, v91 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)v197, (uint64_t)a4, v174, v172, a6);
      goto LABEL_258;
    }
    v186[0] = (unint64_t)&v190;
    if (v194)
    {
      if (!v196)
      {
        v15 = v191;
        if ((v191 & 1) != 0)
          goto LABEL_275;
        goto LABEL_66;
      }
      v15 = sub_22EB19A28(v190);
    }
    else
    {
      v15 = sub_22EB1B954((uint64_t)v190, (void *)(v191 & 0xFFFFFFFFFFFFFFFELL));
    }
    v191 = v15;
    if ((v15 & 1) != 0)
    {
LABEL_275:
      sub_22E95F17C((uint64_t *)v186);
      v91 = v191;
      if ((v191 & 1) != 0)
        goto LABEL_276;
      goto LABEL_280;
    }
LABEL_66:
    v176 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v41 = (uint64_t *)(*(_QWORD *)((v192 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v42 = *v41;
    v43 = *(unsigned __int8 *)(*v41 + 16);
    if (*v41 && v43 == 39)
      goto LABEL_70;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v42 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
    {
      v42 = sub_22F10CF48(*v41);
      if (v42)
      {
LABEL_70:
        v44 = 0;
        v45 = (uint64_t *)(v42 + 32);
        v42 = 0;
        goto LABEL_174;
      }
      v42 = *v41;
      v43 = *(_DWORD *)(*v41 + 16);
    }
    if ((v43 & 0xFE) != 0x28
      && ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v42 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
       || (v42 = sub_22F10CF48(v42)) == 0))
    {
      sub_22E8FCA40(v190, v200, 0xB64u, 0, (uint64_t)&v202);
      v107 = sub_22E8901B8((uint64_t)&v202, &v192);
      goto LABEL_206;
    }
    v92 = v42;
    if ((*(_BYTE *)(v42 + 18) & 0x10) != 0)
    {
      v92 = v42;
      do
      {
        while (1)
        {
          v92 = *(_QWORD *)(*(_QWORD *)(v92 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v92)
            break;
          v93 = *(_DWORD *)(v92 + 16);
          if ((v93 & 0xFE) != 0x28)
            break;
          if ((v93 & 0x100000) == 0)
            goto LABEL_173;
        }
        v92 = sub_22F10CF48(v92);
      }
      while ((*(_DWORD *)(v92 + 16) & 0x100000) != 0);
    }
LABEL_173:
    v45 = (uint64_t *)(v92 + 32);
    v44 = 1;
LABEL_174:
    v94 = *v45;
    v95 = (unint64_t *)(*v45 & 0xFFFFFFFFFFFFFFF0);
    v96 = *(_QWORD *)(*(_QWORD *)(*v95 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (*(_DWORD *)(v96 + 16) == 45)
      v97 = *(_QWORD *)(*(_QWORD *)(*v95 + 8) & 0xFFFFFFFFFFFFFFF0);
    else
      v97 = 0;
    if (v96)
      v98 = (*(_DWORD *)(v96 + 16) & 0xFF800FF) == 86507531;
    else
      v98 = 0;
    if (v98)
      goto LABEL_183;
    if (v97)
    {
      v202 = &unk_24FAB6EA8;
      LODWORD(v203) = 2899;
      v204 = &v201;
      if (sub_22EE8B0B0((uint64_t)v190, v200, v94))
        goto LABEL_274;
LABEL_183:
      v99 = v190;
      v100 = *(_QWORD *)((v176 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v44 & 1) != 0)
      {
        v101 = v176 & 7 | v100;
        v102 = *(_DWORD *)(v191 & 0xFFFFFFFFFFFFFFFELL) & 0x300;
        v171 = v97;
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v42 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 40)
        {
          if (v102 != 256)
          {
            sub_22E8FCA40(v190, v200, 0xB5Cu, 0, (uint64_t)&v202);
            LODWORD(v189) = 3;
            sub_22E8900C4((uint64_t)&v202, (int *)&v189);
            v103 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)&v176);
            v104 = sub_22E8901B8(v103, &v192);
            sub_22E8906A0(v104, (uint64_t *)&v200);
            sub_22E903BEC((unsigned int *)&v202);
          }
        }
        else if (!v102)
        {
          v191 = sub_22F335E0C((uint64_t)v190, v101, v191 & 0xFFFFFFFFFFFFFFFELL, 0);
        }
        goto LABEL_197;
      }
      v105 = *(_QWORD *)(v100 & 0xFFFFFFFFFFFFFFF0);
      if (!v105 || *(_BYTE *)(v105 + 16) != 39)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v105 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
        {
          v105 = sub_22F10CF48(v105);
          if (v105)
            goto LABEL_191;
          v99 = v190;
        }
        sub_22E8FCA40(v99, v200, 0xB63u, 0, (uint64_t)&v202);
        v141 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)&v176);
        v114 = sub_22E8901B8(v141, &v192);
        sub_22F0D4E74(v191 & 0xFFFFFFFFFFFFFFFELL);
        v189 = v142;
        v116 = &v189;
        goto LABEL_272;
      }
LABEL_191:
      v171 = v97;
      v101 = *(_QWORD *)(v105 + 32);
LABEL_197:
      v108 = v101 & 0xFFFFFFFFFFFFFFF0;
      v109 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v101 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v109 && *(_BYTE *)(v109 + 16) == 45)
      {
        v189 = v191 & 0xFFFFFFFFFFFFFFFELL;
        v202 = &unk_24FAB6ED0;
        LODWORD(v203) = 2899;
        v204 = (uint64_t *)&v189;
        if (sub_22EE8B0B0((uint64_t)v190, v200, v101))
          goto LABEL_274;
        v110 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v110 & 8) != 0)
        {
          v112 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v111 = *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v111 = 0;
          v112 = 0;
        }
        v168 = v101 & 0xFFFFFFFFFFFFFFF0;
        v122 = *v95;
        if ((*(_BYTE *)(*v95 + 8) & 0xF) != 0)
        {
          v123 = v111;
          v124 = v95;
          v125 = v101;
          v126 = *(_QWORD *)((v101 & 0xFFFFFFFFFFFFFFF0) + 8);
          v122 = (unint64_t)sub_22F10D2BC(v94);
          LOBYTE(v110) = v126;
          v101 = v125;
          v95 = v124;
          v111 = v123;
        }
        v127 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v128 = (*(_DWORD *)(v127 + 16) & 0xFF80000) == 86507520;
        if (v127)
          v129 = *(_DWORD *)(v127 + 16) == 11;
        else
          v129 = 0;
        if (!v129)
          v128 = 0;
        v130 = v95[1];
        if ((v130 & 8) != 0)
        {
          v132 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v131 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v131 = 0;
          v132 = 0;
        }
        v133 = v112 | (v110 | v101) & 7;
        if (v128)
          v134 = v133 & 0xFFFFFFFFFFFFFFF7;
        else
          v134 = v133;
        v202 = (void *)(v131 | v132 | (v130 | v94) & 7);
        if ((sub_22E95F24C((unsigned int *)&v202, v134 | v111) & 1) != 0)
        {
          if (v171 == v109)
          {
            v135 = 5;
            goto LABEL_298;
          }
          if (v171 && sub_22EAAB1B8(v190, v200, v101, v94))
          {
            if (!sub_22EAAB46C((uint64_t)v190, v101, v94, 5082, 0xA41u, v200, v200, 0, (uint64_t)v197, 0))
            {
              v135 = 7;
LABEL_298:
              v195 = v135;
              goto LABEL_275;
            }
LABEL_274:
            v191 = 1;
            goto LABEL_275;
          }
          v144 = sub_22F114198(*(_QWORD *)(v109 + 24));
          v145 = sub_22EFC3500(v144);
          sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v145 + 104) + 96), *(_QWORD *)(v145 + 104));
          if ((**(_QWORD **)(v145 + 128) & 0x400) == 0)
          {
            sub_22E8FCA40(v190, v200, 0xB62u, 0, (uint64_t)&v202);
            v146 = *(_QWORD *)v168;
            if ((*(_BYTE *)(*(_QWORD *)v168 + 8) & 0xF) != 0)
              v146 = (unint64_t)sub_22F10D2BC(v101);
            v189 = v146 & 0xFFFFFFFFFFFFFFF0;
            v147 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)&v189);
            sub_22F0D4E74(v191 & 0xFFFFFFFFFFFFFFFELL);
            v188 = v148;
            sub_22E8906A0(v147, (uint64_t *)&v188);
            sub_22E903BEC((unsigned int *)&v202);
            v191 = 1;
          }
          v149 = *(_QWORD *)(*((_QWORD *)v190 + 9) + 8);
          if ((v149 & 0x8000000000000) != 0
            || ((v150 = *(_QWORD *)(*(_QWORD *)(*v95 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
              ? (v151 = (*(_DWORD *)(v150 + 16) & 0xFF800FF) == 86507531)
              : (v151 = 0),
                v151))
          {
            if ((v149 & 0x10000000000000) == 0)
            {
              v152 = *(_DWORD *)(*(_QWORD *)(*((_QWORD *)v190 + 11) + 15088) + 148);
              LOBYTE(v189) = (*(_BYTE *)(*(_QWORD *)(*((_QWORD *)v190 + 13) + 40) + 40) & 3) == 1;
              if (v152 == 11
                || (v153 = *(_QWORD *)(*(_QWORD *)(*v95 + 8) & 0xFFFFFFFFFFFFFFF0)) == 0
                || (*(_DWORD *)(v153 + 16) & 0xFF800FF) != 0x528000B)
              {
                sub_22E8FCA40(v190, v200, 0x1A6Eu, 0, (uint64_t)&v202);
                sub_22E894E38((uint64_t)&v202, (unsigned __int8 *)&v189);
                sub_22E903BEC((unsigned int *)&v202);
              }
            }
            v135 = 9;
            goto LABEL_298;
          }
          sub_22E8FCA40(v190, v200, 0xFA7u, 0, (uint64_t)&v202);
LABEL_273:
          sub_22E903BEC((unsigned int *)&v202);
          goto LABEL_274;
        }
        sub_22E8FCA40(v190, v200, 0xB5Bu, 0, (uint64_t)&v202);
        LODWORD(v189) = 3;
        sub_22E8900C4((uint64_t)&v202, (int *)&v189);
        v136 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)&v176);
        v107 = sub_22E8901B8(v136, &v192);
        v117 = (uint64_t *)&v200;
LABEL_207:
        sub_22E8906A0(v107, v117);
        goto LABEL_273;
      }
      sub_22E8FCA40(v190, v200, 0xB61u, 0, (uint64_t)&v202);
      v113 = *(_QWORD *)v108;
      if ((*(_BYTE *)(*(_QWORD *)v108 + 8) & 0xF) != 0)
        v113 = (unint64_t)sub_22F10D2BC(v101);
      v189 = v113 & 0xFFFFFFFFFFFFFFF0;
      v114 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)&v189);
      sub_22F0D4E74(v191 & 0xFFFFFFFFFFFFFFFELL);
      v188 = v115;
      v116 = &v188;
LABEL_272:
      sub_22E8906A0(v114, (uint64_t *)v116);
      goto LABEL_273;
    }
    sub_22E8FCA40(v190, v200, 0xB61u, 0, (uint64_t)&v202);
    v106 = *v95;
    if ((*(_BYTE *)(*v95 + 8) & 0xF) != 0)
      v106 = (unint64_t)sub_22F10D2BC(v94);
    v189 = v106 & 0xFFFFFFFFFFFFFFF0;
    v107 = sub_22E8901B8((uint64_t)&v202, (uint64_t *)&v189);
LABEL_206:
    v117 = &v201;
    goto LABEL_207;
  }
  sub_22E8FCA40(a1, a2, 0x36u, 0, (uint64_t)&v202);
  sub_22F2F30F4((uint64_t)&v202, (uint64_t)"dynamic_cast");
  sub_22E903BEC((unsigned int *)&v202);
LABEL_276:
  v66 = 1;
LABEL_277:
  if (v197[0] != &v198)
    free(v197[0]);
  return v66;
}

uint64_t sub_22E95C574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  BOOL v16;
  int v17;
  uint64_t v19;

  v19 = a3;
  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a4;
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = sub_22F1133DC(&v19, *(_QWORD *)(a2 + 88));
  *(_DWORD *)(a1 + 32) = sub_22E8BBBD0(a3);
  *(_DWORD *)(a1 + 36) = 0;
  *(_QWORD *)(a1 + 48) = a1 + 64;
  *(_QWORD *)(a1 + 56) = 0x400000000;
  *(_BYTE *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 108) = 0;
  *(_QWORD *)(a1 + 100) = 0;
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 88) + 2000) + 1) & 0x40) == 0)
  {
    v8 = *(_QWORD *)(a1 + 16);
    v9 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0);
    v10 = *(_QWORD *)(v9 + 8);
    v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v11 != 45 && (v11 & 0xFEu) - 2 >= 4)
    {
      v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v12 & 8) == 0 || (*(_BYTE *)((v12 & 0xFFFFFFFFFFFFFFF0) + 0x1C) & 0xC) == 0)
      {
        if ((v10 & 0xF) != 0)
          v9 = (unint64_t)sub_22F10D2BC(*(_QWORD *)(a1 + 16));
        *(_QWORD *)(a1 + 16) = v9 & 0xFFFFFFFFFFFFFFF0;
      }
    }
  }
  v13 = *(_QWORD *)(*(_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_DWORD *)(v13 + 16);
  v16 = v14 == 11 && v13 != 0 && (v14 & 0xFE00000) > 0x8180000;
  v17 = (v14 >> 19) & 0x1FF;
  if (!v16)
    v17 = 0;
  *(_DWORD *)(a1 + 40) = v17;
  return a1;
}

unsigned int *sub_22E95C6A4(unsigned int *result)
{
  uint64_t *v1;
  uint64_t v2;
  unsigned int *v3;
  uint64_t v4;
  unsigned int v5[24];

  v1 = (uint64_t *)(result + 4);
  v2 = *(_QWORD *)((*((_QWORD *)result + 2) & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v2 & 8) != 0 && (*(_BYTE *)((v2 & 0xFFFFFFFFFFFFFFF0) + 0x1C) & 0xC) != 0)
  {
    v3 = result;
    sub_22E8FCA40(*(_QWORD **)result, result[27], 0x11F6u, 0, (uint64_t)v5);
    v4 = sub_22E8901B8((uint64_t)v5, v1);
    sub_22E8906A0(v4, (uint64_t *)(v3 + 27));
    return sub_22E903BEC(v5);
  }
  return result;
}

unsigned int *sub_22E95C720(_BYTE *a1, unsigned int *a2)
{
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  unsigned __int8 *i;

  v2 = a2;
  if (a1[96])
  {
    v3 = *(_QWORD *)(*(_QWORD *)a1 + 88);
    v4 = *(_QWORD *)(v3 + 16880);
    v5 = (*a2 >> 8) & 3;
    if (*(_QWORD *)(*(_QWORD *)a1 + 1296) == *(_QWORD *)(*(_QWORD *)a1 + 1288))
    {
      v6 = 0;
      v7 = 24;
    }
    else
    {
      v6 = *(_QWORD *)(*(_QWORD *)a1 + 1296);
      if (HIDWORD(v6))
        v7 = 32;
      else
        v7 = 24;
    }
    v8 = (unsigned int *)sub_22E3CD3D4(v3 + 2032, v7, 3);
    v2 = sub_22F003694(v8, v4, 0, (uint64_t)v2, 0, v6, v5);
  }
  for (i = (unsigned __int8 *)*((_QWORD *)v2 + 2); *i == 153; i = (unsigned __int8 *)*((_QWORD *)i + 2))
    *(_DWORD *)i |= 0x2000000u;
  return v2;
}

uint64_t sub_22E95C7F8(uint64_t a1, unsigned int a2, uint64_t *a3, uint64_t a4, unsigned int a5)
{
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  void *v15;
  int v16;
  uint64_t v17;
  char v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  void **v26;
  int *v27;
  uint64_t v29[2];
  int v30;
  int v31;
  void *v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37[2];
  int v38;
  int v39;
  void *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  sub_22E95C574((uint64_t)&v35, a1, *a3, a4);
  v42 = a2 | ((unint64_t)a5 << 32);
  v10 = *a3;
  v29[0] = v10;
  v29[1] = (uint64_t)(a3 + 1);
  for (i = v10; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_12;
      v12 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v12 <= 0x39)
        break;
LABEL_7:
      if (sub_22F115668(i))
        v10 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_14;
    }
    if (v12 == 24)
      goto LABEL_13;
    if (v12 == 26)
      break;
    if (((1 << v12) & 0x20000000200003CLL) == 0)
      goto LABEL_7;
LABEL_12:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_12;
LABEL_13:
  v10 = i;
LABEL_14:
  v13 = sub_22F115668(v10);
  v43 = v13 | ((unint64_t)sub_22F1167E8(v29) << 32);
  if ((*(_BYTE *)(a4 + 1) & 0x80) != 0 || (*(_BYTE *)(*(_QWORD *)(*a3 & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0)
  {
LABEL_24:
    v17 = sub_22E3CD3D4(*(_QWORD *)(a1 + 88) + 2032, 40, 3);
    v19 = v38;
    v18 = v39;
    v20 = v37[1];
    v21 = v36 & 0xFFFFFFFFFFFFFFFELL;
    *(_BYTE *)v17 = -113;
    if (byte_255E04EB3)
    {
      v22 = sub_22F0D3748(143);
      ++*((_DWORD *)v22 + 2);
    }
    v23 = *(_DWORD *)v17 & 0xF80000FF;
    *(_QWORD *)(v17 + 8) = v20;
    *(_QWORD *)(v17 + 16) = v21;
    v24 = ((v19 & 3) << 8) | ((v18 & 0x7F) << 18) | v23;
    *(_QWORD *)v17 = v24;
    *(_QWORD *)(v17 + 24) = a3;
    *(_DWORD *)v17 = v24 & 0xFFFC1FFF | ((sub_22EFB2630(v17) & 0x1F) << 13);
    *(_DWORD *)(v17 + 32) = a2;
    *(_DWORD *)(v17 + 36) = a5;
    v25 = (uint64_t)sub_22E95C720(&v35, (unsigned int *)v17);
    goto LABEL_33;
  }
  v14 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFFFELL) + 8);
  v34 = v14;
  v32 = &unk_24FAB6EF8;
  v33 = 4937;
  if ((sub_22EE8B0B0((uint64_t)v35, v42, v37[0]) & 1) != 0
    || (v32 = &unk_24FAB6EF8, v33 = 3591, (sub_22EE8B0B0((uint64_t)v35, v42, v14) & 1) != 0))
  {
LABEL_32:
    v25 = 1;
    v36 = 1;
    goto LABEL_33;
  }
  if ((*(_BYTE *)((v36 & 0xFFFFFFFFFFFFFFFELL) + 1) & 3) == 0)
    v36 = sub_22F335E0C((uint64_t)v35, v14, v36 & 0xFFFFFFFFFFFFFFFELL, 0);
  sub_22EF5CCD0(v35[11], *(_QWORD *)(v37[0] & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v32);
  v15 = v32;
  sub_22EF5CCD0(v35[11], *(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v32);
  v16 = (int)v32;
  if (v15 != v32)
  {
    sub_22E8FCA40(v35, v42, 0xB81u, 0, (uint64_t)&v32);
    v31 = v16;
    v26 = (void **)sub_22E8900C4((uint64_t)&v32, &v31);
    v30 = (int)v15;
    v27 = &v30;
LABEL_31:
    sub_22E8900C4((uint64_t)v26, v27);
    sub_22E903BEC((unsigned int *)&v32);
    goto LABEL_32;
  }
  if ((sub_22F111968(v37, v35[11]) & 1) == 0)
  {
    sub_22E8FCA40(v35, v42, 0xB80u, 0, (uint64_t)&v32);
    v31 = 1;
LABEL_30:
    v26 = &v32;
    v27 = &v31;
    goto LABEL_31;
  }
  if ((sub_22F111968((unint64_t *)&v34, v35[11]) & 1) == 0)
  {
    sub_22E8FCA40(v35, v42, 0xB80u, 0, (uint64_t)&v32);
    v31 = 0;
    goto LABEL_30;
  }
  v39 = 3;
  if ((v36 & 1) == 0)
    goto LABEL_24;
  v25 = 1;
LABEL_33:
  if (v40 != &v41)
    free(v40);
  return v25;
}

uint64_t sub_22E95CBEC(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v7;
  unsigned int v9;
  int v10;
  uint64_t result;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unsigned int v17;
  BOOL v18;
  uint64_t v19;
  unsigned int v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  unsigned int v27[24];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v7 = a2;
  v29 = a3;
  v30 = a2;
  v28 = a5;
  if (a4)
    v9 = 6884;
  else
    v9 = 7083;
  v10 = a5;
  result = sub_22F1CF68C(*(_QWORD *)(a1[13] + 32), v9, a5, a1[13]);
  if ((_DWORD)result == 1)
    return result;
  if (a4)
  {
    v12 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFF0);
    result = *v12;
    if (!*v12 || *(_BYTE *)(result + 16) != 39)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
        return result;
      result = sub_22F10CF48(result);
      if (!result)
        return result;
    }
    v13 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFF0);
    result = *v13;
    if (!*v13 || *(_BYTE *)(result + 16) != 39)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
        return result;
      result = sub_22F10CF48(result);
      if (!result)
        return result;
    }
    v7 = sub_22F10ACF8(*v12);
    goto LABEL_20;
  }
  v13 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFF0);
  result = *v13;
  if (!*v13 || (*(_DWORD *)(result + 16) & 0xFE) != 0x28)
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      return result;
    result = sub_22F10CF48(result);
    if (!result)
      return result;
LABEL_20:
    result = *v13;
  }
  result = sub_22F10ACF8(result);
  v14 = (uint64_t *)(result & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*(_QWORD *)((result & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
  {
    result = *v14;
    v16 = *(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0);
    v17 = *(_DWORD *)(v16 + 16);
    v18 = v16 && *(_DWORD *)(v16 + 16) == 11;
    if (!v18
      || (((v17 >> 19) & 0x1FF) - 167 <= 0xD ? (v25 = ((1 << ((v17 >> 19) + 89)) & 0x383F) == 0) : (v25 = 1), v25))
    {
      if ((v17 & 0xFF800FF) != 0x528000B)
      {
        v19 = *(_QWORD *)(*(_QWORD *)(*v15 + 8) & 0xFFFFFFFFFFFFFFF0);
        v20 = *(_DWORD *)(v19 + 16);
        v21 = v19 && *(_DWORD *)(v19 + 16) == 11;
        if (!v21
          || (((v20 >> 19) & 0x1FF) - 167 <= 0xD ? (v26 = ((1 << ((v20 >> 19) + 89)) & 0x383F) == 0) : (v26 = 1), v26))
        {
          if ((v20 & 0xFF800FF) != 0x528000B && (*(_DWORD *)(*v15 + 16) & 0xFE) != 0x2C)
          {
            if ((*(_DWORD *)(v19 + 16) & 0xFE) == 0x2C)
            {
              result = sub_22F10CF48(*v15);
              if (result)
                return result;
              result = *v14;
            }
            if ((!result || (*(_DWORD *)(result + 16) & 0xFE) != 0x2C)
              && ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x2C
               || (result = sub_22F10CF48(result)) == 0))
            {
              if ((!sub_22F110B50(*v15) || !sub_22F110930(*v14)) && (!sub_22F110930(*v15) || !sub_22F110B50(*v14))
                || (v22 = sub_22EF5CDF0(a1[11], *v14), result = sub_22EF5CDF0(a1[11], *v15), v22 != result))
              {
                sub_22E8FCA40(a1, v10, v9, 0, (uint64_t)v27);
                v23 = sub_22E8901B8((uint64_t)v27, &v30);
                v24 = sub_22E8901B8(v23, &v29);
                sub_22E8906A0(v24, &v28);
                return (uint64_t)sub_22E903BEC(v27);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22E95CF10(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8[24];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v10 = a3;
  v11 = a2;
  v9 = a4;
  v4 = (*(_QWORD *)(a1[9] + 8) >> 42) & ((*(_QWORD *)(a1[9] + 232) & 0x6000000000000000) == 0x2000000000000000);
  if ((_DWORD)v4 == 1)
  {
    sub_22E8FCA40(a1, a2, 0xE41u, 0, (uint64_t)v8);
    v6 = sub_22E8901B8((uint64_t)v8, &v10);
    v7 = sub_22E8901B8(v6, &v9);
    sub_22E8906A0(v7, &v11);
    sub_22E903BEC(v8);
    return 1;
  }
  return v4;
}

uint64_t sub_22E95CFA4(_QWORD *a1, unsigned int a2, uint64_t *a3, unsigned int a4, unsigned __int8 *a5)
{
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;
  uint64_t *v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int *v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unsigned int v68;
  BOOL v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82;
  BOOL v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int v87;
  uint64_t v88;
  uint64_t v90;
  int v91;
  int v92;
  _QWORD *v93;
  unsigned int v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  _QWORD *v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  _QWORD *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  unint64_t v150;
  unsigned int v151;
  unint64_t v152;
  uint64_t *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  unsigned int v158;
  unsigned int v159;
  void *v160;
  const void *v161;
  void **v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  int v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  _QWORD *v185;
  int v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  int v193;
  uint64_t v194;
  int v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  unsigned int v200;
  uint64_t v201;
  unsigned int v202;
  uint64_t v203;
  unsigned int v204;
  int v205;
  uint64_t v206;
  uint64_t v207;
  void *v208;
  int v209;
  int v210;
  int v211;
  void *__dst[2];
  unint64_t v214;
  uint64_t v215;
  unsigned int v216;
  char v217;
  int v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t *v221;
  int v222[2];
  unint64_t v223;
  uint64_t v224[2];
  int v225;
  int v226;
  int v227;
  void *v228;
  _BYTE v229[36];
  uint64_t v230[2];
  uint64_t v231[2];
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  char v235;
  _QWORD *v236;
  __int128 v237;
  _QWORD v238[7];

  v238[5] = *MEMORY[0x24BDAC8D0];
  sub_22E95C574((uint64_t)v222, (uint64_t)a1, *a3, (uint64_t)a5);
  v9 = *a3;
  v220 = v9;
  v221 = a3 + 1;
  for (i = v9; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_12;
      v11 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v11 <= 0x39)
        break;
LABEL_7:
      if (sub_22F115668(i))
        v9 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_14;
    }
    if (v11 == 24)
      goto LABEL_13;
    if (v11 == 26)
      break;
    if (((1 << v11) & 0x20000000200003CLL) == 0)
      goto LABEL_7;
LABEL_12:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_12;
LABEL_13:
  v9 = i;
LABEL_14:
  v12 = sub_22F115668(v9);
  v13 = v12 | ((unint64_t)sub_22F1167E8((uint64_t *)&v220) << 32);
  v230[1] = v13;
  sub_22F0D60E4((uint64_t)a5);
  v230[0] = a2 | ((unint64_t)v14 << 32);
  if ((*(_BYTE *)(a1[9] + 1) & 1) != 0)
  {
    sub_22E95E970((_QWORD **)v222, 0, *a5 == 180);
    goto LABEL_19;
  }
  if (v227 == 263)
  {
    v227 = 0;
    v15 = sub_22EB53278(*(uint64_t *)v222, v13, v224[0], (unsigned __int8 *)(v223 & 0xFFFFFFFFFFFFFFFELL), &v226, &v225);
    goto LABEL_17;
  }
  v23 = *(_QWORD *)v222;
  v24 = *(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)(*(_QWORD *)(v24 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v25)
    v26 = (*(_DWORD *)(v25 + 16) & 0xFF800FF) == 86507531;
  else
    v26 = 0;
  if (v26)
  {
    v223 = sub_22EBCEBF8(*(uint64_t *)v222, (unsigned __int8 *)(v223 & 0xFFFFFFFFFFFFFFFELL));
    if ((v223 & 1) != 0)
      goto LABEL_19;
    v30 = 25;
    goto LABEL_40;
  }
  v27 = *(_QWORD *)(*(_QWORD *)v222 + 88);
  v28 = *(_QWORD *)(v27 + 2000);
  if ((*(_BYTE *)(v28 + 1) & 1) == 0 && (*(_QWORD *)(v28 + 20) & 0x2000000000) == 0)
  {
    v29 = (_QWORD *)(v223 & 0xFFFFFFFFFFFFFFFELL);
    goto LABEL_43;
  }
  if ((*(_BYTE *)(v24 + 17) & 4) != 0)
    goto LABEL_19;
  v29 = (_QWORD *)(v223 & 0xFFFFFFFFFFFFFFFELL);
  if ((*(_DWORD *)(v223 & 0xFFFFFFFFFFFFFFFELL) & 0x18000) != 0)
    goto LABEL_19;
LABEL_43:
  if (v29[1] != *(_QWORD *)(v27 + 16840))
  {
LABEL_46:
    v33 = sub_22EB1B954(v23, v29);
    v223 = v33;
    if ((v33 & 1) != 0)
      goto LABEL_19;
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v219 = v34;
    v231[0] = v34;
    v236 = (_QWORD *)v224[0];
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)v222 + 72) + 52) & 0x40000000) != 0)
    {
      v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(v35 + 16) == 39)
      {
        v36 = 0;
        v37 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v34 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v38 = 4972;
        while (*(_BYTE *)(v37 + 16) == 39)
        {
          v39 = *(_QWORD *)(v35 + 32);
          __dst[0] = (void *)v39;
          v40 = *(_QWORD *)(v37 + 32);
          if ((v36 & 1) != 0)
          {
            v41 = (_QWORD *)(v39 & 0xFFFFFFFFFFFFFFF0);
            v42 = v41[1];
            if ((v42 & 8) != 0)
              v43 = *(_DWORD *)((v42 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
            else
              v43 = 0;
            v44 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFF0);
            v45 = *(_QWORD *)((v40 & 0xFFFFFFFFFFFFFFF0) + 8);
            if ((v45 & 8) != 0)
              v46 = *(_DWORD *)((v45 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
            else
              v46 = 0;
            if (v43 != v46)
            {
LABEL_78:
              sub_22E8FCA40(*(_QWORD **)v222, v230[0], v38, 0, (uint64_t)&v220);
              v56 = sub_22E8901B8((uint64_t)&v220, v231);
              v57 = sub_22E8901B8(v56, (uint64_t *)&v236);
              v218 = 6;
              v58 = sub_22E8900C4(v57, &v218);
              sub_22F0D4E74(v223 & 0xFFFFFFFFFFFFFFFELL);
              v215 = v59;
              sub_22E8906A0(v58, &v215);
              sub_22E903BEC((unsigned int *)&v220);
              if ((v36 & 1) == 0)
                v223 = 1;
              break;
            }
          }
          else
          {
            if (!sub_22E95F83C(__dst, v40))
              goto LABEL_78;
            v41 = (_QWORD *)(*(_QWORD *)(v35 + 32) & 0xFFFFFFFFFFFFFFF0);
            v44 = (uint64_t *)(*(_QWORD *)(v37 + 32) & 0xFFFFFFFFFFFFFFF0);
          }
          v35 = *v41;
          v37 = *v44;
          v38 = 5309;
          v36 = 1;
          if (*(_BYTE *)(*v41 + 16) != 39)
            break;
        }
      }
    }
    if ((v223 & 1) != 0)
      goto LABEL_19;
    v220 = (unint64_t)&unk_24FAB6EF8;
    LODWORD(v221) = 4937;
    if (sub_22EE8B0B0(*(uint64_t *)v222, v230[0], v224[0]))
    {
LABEL_141:
      v223 = 1;
      goto LABEL_19;
    }
    v60 = v224[0];
    v61 = v224[0] & 0xFFFFFFFFFFFFFFF0;
    v62 = *(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0);
    v63 = sub_22F111384(v62);
    v64 = v219;
    if ((v63 & 1) != 0)
    {
      v65 = v219 & 0xFFFFFFFFFFFFFFF0;
      if (*(_QWORD *)(*(_QWORD *)(v61 + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v219 & 0xFFFFFFFFFFFFFFF0)
                                                                                             + 8) & 0xFFFFFFFFFFFFFFF0))
      {
LABEL_84:
        v30 = 5;
LABEL_40:
        v226 = v30;
        goto LABEL_19;
      }
    }
    else
    {
      v65 = v219 & 0xFFFFFFFFFFFFFFF0;
    }
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v65 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
       - 55 < 2
      || (v66 = *(_QWORD *)(v62 + 8) & 0xFFFFFFFFFFFFFFF0,
          *(unsigned __int8 *)(*(_QWORD *)v66 + 16) - 55 <= 1))
    {
      if ((sub_22EB35A88(v219, v60) & 1) != 0 || (sub_22EB35A88(v60, v64) & 1) != 0)
      {
        v30 = 1;
        goto LABEL_40;
      }
      v61 = v224[0] & 0xFFFFFFFFFFFFFFF0;
      v66 = *(_QWORD *)(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
    }
    v67 = *(_QWORD *)v66;
    v68 = *(_DWORD *)(*(_QWORD *)v66 + 16);
    if (*(_QWORD *)v66)
      v69 = v68 == 11;
    else
      v69 = 0;
    if (v69)
    {
      v71 = v61;
      if (((v68 >> 19) & 0x1FF) - 166 < 0x35)
        goto LABEL_116;
    }
    else if (v67 && v68 == 44)
    {
      v70 = sub_22F114198(*(_QWORD *)(v67 + 24));
      if ((*(_BYTE *)(v70 + 74) & 1) != 0 || *(_QWORD *)(v70 + 128) > 7uLL)
        goto LABEL_116;
      v71 = v224[0] & 0xFFFFFFFFFFFFFFF0;
      v66 = *(_QWORD *)(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
    }
    else
    {
      v71 = v61;
      v77 = v68 > 0x27u;
      v78 = (1 << v68) & 0x8180001600;
      if (!v77 && v78 != 0)
      {
LABEL_116:
        v80 = *(_QWORD *)(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
        v81 = *(_QWORD *)v80;
        v82 = *(_DWORD *)(*(_QWORD *)v80 + 16);
        if (*(_QWORD *)v80)
          v83 = v82 == 11;
        else
          v83 = 0;
        if (v83)
        {
          if (((v82 >> 19) & 0x1FF) - 166 < 0x35)
            goto LABEL_142;
        }
        else if (v81 && v82 == 44)
        {
          v84 = sub_22F114198(*(_QWORD *)(v81 + 24));
          if ((*(_BYTE *)(v84 + 74) & 1) != 0 || *(_QWORD *)(v84 + 128) > 7uLL)
            goto LABEL_142;
          v80 = *(_QWORD *)(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
        }
        else
        {
          v77 = v82 > 0x27u;
          v85 = (1 << v82) & 0x8180001600;
          if (!v77 && v85 != 0)
            goto LABEL_142;
        }
        v87 = *(unsigned __int8 *)(*(_QWORD *)v80 + 16);
        v77 = v87 > 0x38;
        v88 = (1 << v87) & 0x180000060000000;
        if (v77 || v88 == 0)
        {
          v90 = *(_QWORD *)v222;
          sub_22EFF605C(v223 & 0xFFFFFFFFFFFFFFFELL);
          v92 = v91;
          v93 = (_QWORD *)v90;
          v94 = 4967;
          goto LABEL_138;
        }
LABEL_142:
        v98 = *(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0);
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v98 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56)
        {
          v15 = sub_22F32E3C4(*(_QWORD **)v222, v230[0], v224[0], v223 & 0xFFFFFFFFFFFFFFFELL, &v226);
LABEL_17:
          v223 = v15;
          goto LABEL_19;
        }
        if (sub_22F30C7FC(v98) || sub_22F30C7FC(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0)))
        {
          if (!sub_22F32E16C(*(_QWORD **)v222, v230[0], v224[0], v219, &v226))
            goto LABEL_19;
          goto LABEL_141;
        }
        v99 = sub_22E3E4B64(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0));
        if (v99)
        {
          v100 = v99;
          if (sub_22E95CF10(*(_QWORD **)v222, v230[0], v224[0], v219))
            goto LABEL_141;
          v101 = (*(_DWORD *)(v100 + 16) >> 19) & 0xF;
          if (v101 == 2
            || (v102 = *(_QWORD *)v222, (v101 - 3) <= 1)
            && (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v222 + 72) + 232) & 0x6000000000000000) == 0x4000000000000000)
          {
            v103 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            v104 = *(_DWORD *)(v103 + 16);
            if (v103 && v104 == 11)
            {
              if (((*(_DWORD *)(v103 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
                goto LABEL_191;
            }
            else if (v103 && v104 == 44)
            {
              v119 = sub_22F114198(*(_QWORD *)(v103 + 24));
              if (((*(_BYTE *)(v119 + 74) & 1) != 0 || *(_QWORD *)(v119 + 128) > 7uLL)
                && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v103 + 24)) + 76) & 0x80) == 0)
              {
                goto LABEL_191;
              }
            }
            else if (v104 == 9)
            {
LABEL_191:
              v226 = 27;
              v15 = sub_22EB35F48(*(uint64_t *)v222, v224[0], v223 & 0xFFFFFFFFFFFFFFFELL);
              goto LABEL_17;
            }
            v122 = v219;
            if (sub_22F10E0EC(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0)))
              goto LABEL_191;
            v102 = *(_QWORD *)v222;
          }
          else
          {
            v122 = v219;
          }
          v135 = v230[0];
          v108 = v224[0];
          v136 = v122;
          goto LABEL_254;
        }
        v108 = v219;
        if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 55 <= 1)
        {
          v135 = v230[0];
          v102 = *(_QWORD *)v222;
          v136 = v224[0];
LABEL_254:
          if (!sub_22F32E2A0(v102, v135, v108, v136, &v226))
            goto LABEL_19;
          goto LABEL_141;
        }
        if (*(unsigned __int8 *)(v223 & 0xFFFFFFFFFFFFFFFELL) == 207)
        {
          v109 = *(_QWORD **)v222;
          sub_22EFF605C(v223 & 0xFFFFFFFFFFFFFFFELL);
          sub_22E8FCA40(v109, v110, 0xBCCu, 0, (uint64_t)&v220);
          goto LABEL_140;
        }
        v113 = sub_22F110E9C(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0));
        v114 = *(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0);
        if (v113)
        {
          if (!sub_22F110E9C(v114))
          {
            if (!sub_22F110744(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0), *(_QWORD *)(*(_QWORD *)v222 + 88))
              && sub_22F110E9C(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0)))
            {
              v115 = *(_QWORD *)v222;
              sub_22F0D5A50(v223 & 0xFFFFFFFFFFFFFFFELL);
              v117 = v116;
              v105 = (_QWORD *)v115;
              v118 = 3019;
LABEL_188:
              sub_22E8FCA40(v105, v117, v118, 0, (uint64_t)&v220);
              v95 = v224;
              goto LABEL_139;
            }
            v126 = sub_22EF5CDF0(*(_QWORD *)(*(_QWORD *)v222 + 88), *(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0));
            if (v126 > sub_22EF5CDF0(*(_QWORD *)(*(_QWORD *)v222 + 88), *(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0)))
            {
              v127 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
              v128 = *(_DWORD *)(v127 + 16);
              if (!v127 || (v128 & 0xFF800FF) != 0x530000B)
              {
                v129 = sub_22F10DFD8(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0));
                if (v128 == 44)
                  v130 = 7165;
                else
                  v130 = 7166;
                if (v128 == 44)
                  v131 = 6886;
                else
                  v131 = 6887;
                if (v129)
                  v132 = v130;
                else
                  v132 = v131;
                sub_22E8FCA40(*(_QWORD **)v222, v230[0], v132, 0, (uint64_t)&v220);
                v133 = sub_22E8901B8((uint64_t)&v220, &v219);
                v134 = sub_22E8901B8(v133, v224);
                sub_22E8906A0(v134, v230);
                sub_22E903BEC((unsigned int *)&v220);
              }
            }
          }
LABEL_193:
          v123 = *(_QWORD *)v222;
          v124 = *(_QWORD *)(*(_QWORD *)v222 + 72);
          if ((*(_DWORD *)(v124 + 52) & 0x40000000) != 0)
          {
            if (sub_22F420564(*(_QWORD *)v222 + 24, (uint64_t)"cl_khr_fp16", 11, v124))
            {
              v123 = *(_QWORD *)v222;
            }
            else
            {
              v123 = *(_QWORD *)v222;
              v163 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
              if (v163 && (*(_DWORD *)(v163 + 16) & 0xFF800FF) == 0x690000B)
              {
                sub_22F0D5A50(v223 & 0xFFFFFFFFFFFFFFFELL);
                v117 = v164;
                v105 = (_QWORD *)v123;
                v118 = 4390;
                goto LABEL_188;
              }
            }
          }
          if ((*(_WORD *)(*(_QWORD *)(v123 + 72) + 148) & 0xALL) != 0)
          {
            v220 = v223 & 0xFFFFFFFFFFFFFFFELL;
            if (sub_22EC32FE4(v123, v230[0], v224[0], (uint64_t *)&v220, 1, 1, 0, 0) == 1)
              v229[32] = 1;
            v223 = v220;
            if ((v220 & 1) != 0)
              goto LABEL_19;
            v125 = *(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0);
            if (!v125 || *(_BYTE *)(v125 + 16) != 39)
            {
              if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v125 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
                v125 = sub_22F10CF48(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0));
              else
                v125 = 0;
            }
            if ((*(_WORD *)(*(_QWORD *)(*(_QWORD *)v222 + 72) + 148) & 2) != 0 && v125)
            {
              v137 = *(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0);
              if (!v137 || *(_BYTE *)(v137 + 16) != 39)
              {
                if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v137 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
                  goto LABEL_232;
                v138 = sub_22F10CF48(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0));
                if (!v138)
                  goto LABEL_232;
                v137 = v138;
              }
              v181 = *(_QWORD *)(v125 + 32);
              v182 = *(_QWORD *)((v181 & 0xFFFFFFFFFFFFFFF0) + 8);
              if ((v182 & 8) != 0)
                v210 = *(_DWORD *)((v182 & 0xFFFFFFFFFFFFFFF0) + 0x18);
              else
                v210 = 0;
              v183 = *(_QWORD *)((*(_QWORD *)(v137 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
              if ((v183 & 8) != 0)
                v211 = (*(_DWORD *)((v183 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 6) & 7;
              else
                v211 = 0;
              if (sub_22F40ACB8(*(_QWORD *)(v181 & 0xFFFFFFFFFFFFFFF0))
                && sub_22F40ACB8(*(_QWORD *)(*(_QWORD *)(v137 + 32) & 0xFFFFFFFFFFFFFFF0)))
              {
                v184 = ((v210 | (v182 | v181) & 7u) >> 6) & 7;
                if (v184 != v211
                  && (v184 == 3
                   || v211 == 3
                   || v184 && v211 && !(v210 & 1 | (v182 | v181) & 1)))
                {
                  v185 = *(_QWORD **)v222;
                  sub_22F0D5A50(v223 & 0xFFFFFFFFFFFFFFFELL);
                  sub_22E8FCA40(v185, v186, 0x136Eu, 0, (uint64_t)&v220);
                  v187 = sub_22E8901B8((uint64_t)&v220, &v219);
                  v188 = sub_22E8901B8(v187, v224);
                  LODWORD(v236) = 6;
                  v189 = sub_22E8900C4(v188, (int *)&v236);
                  sub_22F0D4E74(v223 & 0xFFFFFFFFFFFFFFFELL);
                  v231[0] = v190;
                  sub_22E8906A0(v189, v231);
                  sub_22E903BEC((unsigned int *)&v220);
                  goto LABEL_19;
                }
              }
            }
            else if (!sub_22F334CD0(*(uint64_t *)v222, v224[0], v219))
            {
              v167 = *(_QWORD **)v222;
              sub_22F0D5A50(v223 & 0xFFFFFFFFFFFFFFFELL);
              sub_22E8FCA40(v167, v168, 0xA60u, 0, (uint64_t)&v220);
              LODWORD(v236) = 1;
              v169 = sub_22E8900C4((uint64_t)&v220, (int *)&v236);
              v170 = sub_22E8901B8(v169, &v219);
              v171 = sub_22E8901B8(v170, v224);
              sub_22F0D4E74(v223 & 0xFFFFFFFFFFFFFFFELL);
              v231[0] = v172;
              sub_22E8906A0(v171, v231);
              sub_22E903BEC((unsigned int *)&v220);
              v223 = 1;
              goto LABEL_19;
            }
          }
LABEL_232:
          if ((sub_22E960DC8(*(uint64_t *)v222, v223, v224[0]) & 1) == 0)
          {
            sub_22E8FCA40(*(_QWORD **)v222, v230[0], 0x18BEu, 0, (uint64_t)&v220);
            v139 = sub_22E8901B8((uint64_t)&v220, &v219);
            v140 = sub_22E8901B8(v139, v224);
            sub_22E8906A0(v140, v230);
            sub_22E903BEC((unsigned int *)&v220);
          }
          v141 = *(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0);
          if (*(_BYTE *)(v141 + 16) == 39)
          {
            v142 = *(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0);
            if (*(_BYTE *)(v142 + 16) == 39)
            {
              v143 = *(_QWORD *)(v142 + 32);
              v144 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v141 + 32) & 0xFFFFFFFFFFFFFFF0));
              if (v144)
                v145 = (*(_DWORD *)(v144 + 28) & 0x7Eu) - 34 >= 4 ? 0 : v144;
              else
                v145 = 0;
              v146 = sub_22F10C2A4(*(_QWORD *)(v143 & 0xFFFFFFFFFFFFFFF0));
              if (v146)
              {
                if (v145)
                {
                  v165 = v146;
                  if ((*(_DWORD *)(v146 + 28) & 0x7Eu) - 34 <= 3 && sub_22E9641C4(v145) && v145 != v165)
                  {
                    sub_22E8FCA40(*(_QWORD **)v222, v230[0], 0xBC9u, 0, (uint64_t)&v220);
                    v166 = sub_22E8901B8((uint64_t)&v220, &v219);
                    sub_22E8901B8(v166, v224);
                    goto LABEL_140;
                  }
                }
              }
            }
          }
          sub_22E961B20(*(uint64_t *)v222, &v223, v224[0]);
          sub_22E961CF8(*(uint64_t *)v222, &v223, v224[0], v230[0]);
          v147 = v224[0];
          v231[0] = v224[0];
          v148 = *(_QWORD **)v222;
          v149 = *(_QWORD *)(*(_QWORD *)v222 + 104);
          v150 = v223 & 0xFFFFFFFFFFFFFFFELL;
          sub_22EFF605C(v223 & 0xFFFFFFFFFFFFFFFELL);
          if (sub_22F1CF68C(*(_QWORD *)(v149 + 32), 0x18A1u, v151, v149) == 1
            || (*(_BYTE *)v150 + 118) > 4u)
          {
LABEL_349:
            v209 = sub_22EB3547C((uint64_t)v148, &v223, v147);
            v226 = v209;
            if ((v223 & 1) == 0 && v209 == 1)
              sub_22E98D52C(*(_QWORD **)v222, v223 & 0xFFFFFFFFFFFFFFFELL, v224[0], v230[0]);
            goto LABEL_19;
          }
          v152 = *(_QWORD *)(v150 + 8);
          v236 = (_QWORD *)v152;
          v153 = (uint64_t *)(v147 & 0xFFFFFFFFFFFFFFF0);
          v154 = *(_QWORD *)(v147 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v154 + 8) & 0xF) != 0)
            v154 = (unint64_t)sub_22F10D2BC(v147);
          v155 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v154 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v155 && (*(_DWORD *)(v155 + 16) & 0xFF800FF) == 0x528000B)
          {
LABEL_348:
            v148 = *(_QWORD **)v222;
            v147 = v224[0];
            goto LABEL_349;
          }
          v156 = (uint64_t *)(v152 & 0xFFFFFFFFFFFFFFF0);
          v157 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v152 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          v158 = *(_DWORD *)(v157 + 16);
          if (v158 > 0x1F)
          {
            if (v158 != 32)
            {
              if (v158 == 44)
              {
                v177 = sub_22F114198(*(_QWORD *)(v157 + 24));
                if ((*(_BYTE *)(v177 + 74) & 1) == 0 && *(_QWORD *)(v177 + 128) < 8uLL
                  || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v157 + 24)) + 76) & 0x80) != 0)
                {
                  goto LABEL_328;
                }
                goto LABEL_293;
              }
              if (v158 != 39)
                goto LABEL_328;
            }
          }
          else
          {
            if (v158 == 9)
            {
LABEL_293:
              v178 = *(_QWORD *)(*(_QWORD *)(*v153 + 8) & 0xFFFFFFFFFFFFFFF0);
              v179 = *(_DWORD *)(v178 + 16);
              if (v178 && v179 == 11)
              {
                if (((*(_DWORD *)(v178 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
                  goto LABEL_328;
              }
              else if (v178 && v179 == 44)
              {
                v180 = sub_22F114198(*(_QWORD *)(v178 + 24));
                if ((*(_BYTE *)(v180 + 74) & 1) == 0 && *(_QWORD *)(v180 + 128) <= 7uLL
                  || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v178 + 24)) + 76) & 0x80) != 0)
                {
                  goto LABEL_328;
                }
              }
              else if (v179 != 9)
              {
                goto LABEL_328;
              }
              v191 = 0;
              v192 = *(_QWORD *)(*(_QWORD *)(*v156 + 8) & 0xFFFFFFFFFFFFFFF0);
              v193 = *(_DWORD *)(v192 + 16);
              if (v192 && v193 == 11)
                v191 = (*(_DWORD *)(v192 + 16) & 0xFF80000) == 87031808;
              v194 = *(_QWORD *)(*(_QWORD *)(*v153 + 8) & 0xFFFFFFFFFFFFFFF0);
              v195 = *(_DWORD *)(v194 + 16);
              if (v194 && v195 == 11)
                v191 ^= (*(_DWORD *)(v194 + 16) & 0xFF80000) == 87031808;
              if ((v191 & 1) == 0 && (v193 == 44) == (v195 == 44))
                goto LABEL_348;
LABEL_328:
              v196 = *v156;
              v197 = *(_QWORD *)(*(_QWORD *)(*v156 + 8) & 0xFFFFFFFFFFFFFFF0);
              v198 = *(_DWORD *)(v197 + 16);
              if (v197 && v198 == 11)
              {
                if (((*(_DWORD *)(v197 + 16) >> 19) & 0x1FEu) - 210 <= 7)
                {
                  v199 = *(_QWORD *)(*(_QWORD *)(*v153 + 8) & 0xFFFFFFFFFFFFFFF0);
                  if (v199)
                  {
                    v200 = *(_DWORD *)(v199 + 16);
                    if (v200 == 11 && ((v200 >> 19) & 0x1FE) - 210 < 8)
                      goto LABEL_348;
                  }
                }
              }
              else if (v198 == 44
                     && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v153 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 44)
              {
                goto LABEL_348;
              }
              if ((!sub_22F10E0B8(*v156) || !sub_22F10E0B8(*v153)) && (!sub_22F10E148(v196) || !sub_22F10E148(*v153)))
              {
                v201 = *(_QWORD *)(*(_QWORD *)(*v156 + 8) & 0xFFFFFFFFFFFFFFF0);
                if (!v201
                  || (v202 = *(_DWORD *)(v201 + 16), v202 != 11)
                  || ((v202 >> 19) & 0x1FE) - 186 > 0x17
                  || (v203 = *(_QWORD *)(*(_QWORD *)(*v153 + 8) & 0xFFFFFFFFFFFFFFF0)) == 0
                  || (v204 = *(_DWORD *)(v203 + 16), v204 != 11)
                  || ((v204 >> 19) & 0x1FE) - 186 >= 0x18)
                {
                  sub_22EFF605C(v223 & 0xFFFFFFFFFFFFFFFELL);
                  sub_22E8FCA40(v148, v205, 0x18A1u, 0, (uint64_t)&v220);
                  v206 = sub_22E8901B8((uint64_t)&v220, (uint64_t *)&v236);
                  v207 = sub_22E8901B8(v206, v231);
                  sub_22F0D4E74(v223 & 0xFFFFFFFFFFFFFFFELL);
                  __dst[0] = v208;
                  sub_22E8906A0(v207, (uint64_t *)__dst);
                  sub_22E903BEC((unsigned int *)&v220);
                }
              }
              goto LABEL_348;
            }
            if (v158 != 10)
            {
LABEL_248:
              if (v158 != 11 || ((*(_DWORD *)(v157 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
                goto LABEL_328;
              goto LABEL_293;
            }
          }
          v159 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v153 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
          if (v159 <= 0x27 && ((1 << v159) & 0x8100000400) != 0)
            goto LABEL_348;
          goto LABEL_248;
        }
        if (sub_22F110744(v114, *(_QWORD *)(*(_QWORD *)v222 + 88))
          || !sub_22F110E9C(*(_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF0)))
        {
          sub_22E9618B0(1uLL, v230, v223 & 0xFFFFFFFFFFFFFFFELL, v224[0], *(_QWORD **)v222);
          goto LABEL_193;
        }
        v120 = *(_QWORD *)v222;
        sub_22EFF605C(v223 & 0xFFFFFFFFFFFFFFFELL);
        v92 = v121;
        v93 = (_QWORD *)v120;
        v94 = 3018;
LABEL_138:
        sub_22E8FCA40(v93, v92, v94, 0, (uint64_t)&v220);
        v95 = &v219;
LABEL_139:
        v96 = sub_22E8901B8((uint64_t)&v220, v95);
        sub_22F0D4E74(v223 & 0xFFFFFFFFFFFFFFFELL);
        v231[0] = v97;
        sub_22E8906A0(v96, v231);
LABEL_140:
        sub_22E903BEC((unsigned int *)&v220);
        goto LABEL_141;
      }
    }
    v72 = *(_QWORD *)v66;
    v73 = *(unsigned __int8 *)(*(_QWORD *)v66 + 16);
    if (v73 <= 0x38 && ((1 << v73) & 0x180000060000000) != 0)
      goto LABEL_116;
    if (v73 == 45)
    {
      if (*(_QWORD *)(*(_QWORD *)(v71 + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v219 & 0xFFFFFFFFFFFFFFF0)
                                                                                             + 8) & 0xFFFFFFFFFFFFFFF0))
      {
        sub_22E8FCA40(*(_QWORD **)v222, v230[0], 0x14F7u, 0, (uint64_t)&v220);
        v111 = sub_22E8901B8((uint64_t)&v220, v224);
        sub_22F0D4E74(v223 & 0xFFFFFFFFFFFFFFFELL);
        v231[0] = v112;
        sub_22E8906A0(v111, v231);
        sub_22E903BEC((unsigned int *)&v220);
        goto LABEL_84;
      }
      if ((*(_DWORD *)(sub_22F114198(*(_QWORD *)(v72 + 24)) + 72) & 0xE000) == 0x4000)
      {
        v75 = sub_22F114198(*(_QWORD *)(v72 + 24));
        if (sub_22EFFB594(v75, v219))
        {
          sub_22E8FCA40(*(_QWORD **)v222, v230[0], 0x14F8u, 0, (uint64_t)&v220);
          sub_22F0D4E74(v223 & 0xFFFFFFFFFFFFFFFELL);
          v231[0] = v76;
          sub_22E8906A0((uint64_t)&v220, v231);
          sub_22E903BEC((unsigned int *)&v220);
          v30 = 11;
          goto LABEL_40;
        }
        v93 = *(_QWORD **)v222;
        v92 = v230[0];
        v94 = 4938;
        goto LABEL_138;
      }
    }
    v105 = *(_QWORD **)v222;
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)v222 + 72) + 52) & 0x40000000) == 0
      || ((v106 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
        ? (v107 = (*(_DWORD *)(v106 + 16) & 0xFF800FF) == 116916235)
        : (v107 = 0),
          !v107))
    {
LABEL_187:
      v117 = v230[0];
      v118 = 4946;
      goto LABEL_188;
    }
    LOWORD(v231[0]) = 0;
    v231[1] = 0;
    LODWORD(v232) = 0;
    if (!sub_22F00554C(v223 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)v231, *(_QWORD *)(*(_QWORD *)v222 + 88), 0, 0))
    {
      if (v232 >= 2)
        sub_22EF53BC0(&v232);
      v105 = *(_QWORD **)v222;
      goto LABEL_187;
    }
    v216 = v234;
    if (v234 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v215, (const llvm::APInt *)&v233);
    else
      v215 = v233;
    v217 = v235;
    if (sub_22E42E5EC((uint64_t)&v215, 0))
    {
      v226 = 65;
LABEL_206:
      if (v216 >= 0x41 && v215)
        MEMORY[0x2348A0E84](v215, 0x1000C8000313F17);
      if (v232 >= 2)
        sub_22EF53BC0(&v232);
      goto LABEL_19;
    }
    sub_22E8FCA40(*(_QWORD **)v222, v230[0], 0x1125u, 0, (uint64_t)&v220);
    v236 = v238;
    v237 = xmmword_22F455490;
    llvm::APInt::toString();
    v160 = (void *)v237;
    if ((unint64_t)v237 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v161 = v236;
    if ((unint64_t)v237 >= 0x17)
    {
      v173 = (v237 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v237 | 7) != 0x17)
        v173 = v237 | 7;
      v174 = v173 + 1;
      v162 = (void **)operator new(v173 + 1);
      __dst[1] = v160;
      v214 = v174 | 0x8000000000000000;
      __dst[0] = v162;
    }
    else
    {
      HIBYTE(v214) = v237;
      v162 = __dst;
      if (!(_QWORD)v237)
        goto LABEL_285;
    }
    memmove(v162, v161, (size_t)v160);
LABEL_285:
    *((_BYTE *)v160 + (_QWORD)v162) = 0;
    if (v236 != v238)
      free(v236);
    v175 = sub_22F2F3734((uint64_t)&v220, __dst);
    sub_22F0D4E74(v223 & 0xFFFFFFFFFFFFFFFELL);
    v236 = v176;
    sub_22E8906A0(v175, (uint64_t *)&v236);
    if (SHIBYTE(v214) < 0)
      operator delete(__dst[0]);
    sub_22E903BEC((unsigned int *)&v220);
    v223 = 1;
    goto LABEL_206;
  }
  v31 = sub_22ED13340(*(unsigned int **)v222, (uint64_t)v29, v224[0], 1, &v220, 0);
  if (v31)
  {
    v223 = sub_22ED147E8(*(uint64_t *)v222, (unsigned __int8 *)(v223 & 0xFFFFFFFFFFFFFFFELL), v220, v31, v32);
    v23 = *(_QWORD *)v222;
    v29 = (_QWORD *)(v223 & 0xFFFFFFFFFFFFFFFELL);
    goto LABEL_46;
  }
LABEL_19:
  if ((v223 & 1) != 0)
  {
    v22 = 1;
    goto LABEL_75;
  }
  v16 = a2;
  v17 = *(_QWORD **)v222;
  v231[0] = v224[0];
  v18 = *(_QWORD *)((v223 & 0xFFFFFFFFFFFFFFFELL) + 8);
  v236 = (_QWORD *)v18;
  v19 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                           + 16);
  if (v19 != 32 && v19 != 39)
  {
    v20 = *(_QWORD *)(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
    goto LABEL_34;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v224[0] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
  v21 = *(unsigned __int8 *)(*(_QWORD *)v20 + 16);
  if (v21 == 32 || v21 == 39)
  {
LABEL_35:
    __dst[0] = 0;
    v215 = 0;
    v219 = 0;
    if (sub_22E9613DC(*(uint64_t *)v222, v18, v224[0], 1, 0, (unint64_t *)__dst, &v215, &v219) != 1)
      goto LABEL_71;
    if ((~(_DWORD)v219 & 5) != 0)
    {
      if ((v219 & 1) != 0)
      {
        v49 = 1;
      }
      else
      {
        if ((v219 & 4) == 0)
        {
          sub_22F0D5A50(v223 & 0xFFFFFFFFFFFFFFFELL);
          sub_22E8FCA40(v17, v47, 0x18C2u, 0, (uint64_t)&v220);
          v48 = sub_22E8901B8((uint64_t)&v220, (uint64_t *)&v236);
          sub_22E8901B8(v48, v231);
LABEL_70:
          sub_22E903BEC((unsigned int *)&v220);
          goto LABEL_71;
        }
        v49 = 2;
      }
      v218 = v49;
    }
    else
    {
      v218 = 0;
    }
    sub_22F0D5A50(v223 & 0xFFFFFFFFFFFFFFFELL);
    sub_22E8FCA40(v17, v50, 0x18C1u, 0, (uint64_t)&v220);
    v51 = sub_22E8901B8((uint64_t)&v220, (uint64_t *)__dst);
    v52 = sub_22E8901B8(v51, &v215);
    sub_22E8900C4(v52, &v218);
    goto LABEL_70;
  }
LABEL_34:
  if (*(_BYTE *)(*(_QWORD *)v20 + 16) == 40)
    goto LABEL_35;
LABEL_71:
  sub_22E95C6A4((unsigned int *)v222);
  if (a1[162] == a1[161])
    v53 = 0;
  else
    v53 = a1[162];
  v54 = sub_22EFFB7AC(a1[11], v224[1], v225, v226, v223 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)&v228, v53, (uint64_t)a3, v16, SHIDWORD(v16), a4);
  v22 = (uint64_t)sub_22E95C720(v222, v54);
LABEL_75:
  if (v228 != v229)
    free(v228);
  return v22;
}

void sub_22E95E970(_QWORD **a1, int a2, unsigned __int8 a3)
{
  int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t *v14;
  _DWORD *v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  __int128 v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51[12];
  uint64_t v52;
  int v53;

  v6 = *((_DWORD *)a1 + 10);
  if (v6)
  {
    if (v6 == 260)
    {
      if (((_BYTE)a1[1] & 1) != 0)
        return;
      LOBYTE(v6) = 1;
    }
    else
    {
      if (v6 == 263)
      {
        *((_DWORD *)a1 + 10) = 0;
        v7 = sub_22EB53278((uint64_t)*a1, *(_QWORD **)((char *)a1 + 108), (uint64_t)a1[2], (unsigned __int8 *)((unint64_t)a1[1] & 0xFFFFFFFFFFFFFFFELL), (_DWORD *)a1 + 9, (int *)a1 + 8);
LABEL_46:
        a1[1] = (_QWORD *)v7;
        return;
      }
      v8 = sub_22EB19A28((uint64_t)*a1, (_DWORD *)((unint64_t)a1[1] & 0xFFFFFFFFFFFFFFFELL));
      a1[1] = (_QWORD *)v8;
      if ((v8 & 1) != 0)
        return;
      LOBYTE(v6) = 0;
      *((_DWORD *)a1 + 10) = 0;
    }
  }
  v10 = (uint64_t *)(a1 + 2);
  v9 = (uint64_t)a1[2];
  v11 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
    v13 = (*(_DWORD *)(v12 + 16) & 0xFF800FF) == 86507531;
  else
    v13 = 0;
  if (v13)
  {
    *((_DWORD *)a1 + 9) = 25;
    if ((v6 & 1) != 0)
    {
      *((_DWORD *)a1 + 10) = 0;
      sub_22F343028((unsigned int *)*a1, (unint64_t *)a1 + 1, 0, 1, *(uint64_t *)((char *)a1 + 108), v9, 0xB56u);
      v29 = (unint64_t)a1[1];
      if ((v29 & 1) != 0)
        return;
    }
    else
    {
      v29 = (unint64_t)a1[1];
    }
    v7 = sub_22EBCEBF8((uint64_t)*a1, (unsigned __int8 *)(v29 & 0xFFFFFFFFFFFFFFFELL));
    goto LABEL_46;
  }
  if ((*(_BYTE *)(v11 + 17) & 4) == 0)
  {
    v14 = (uint64_t *)(a1 + 1);
    v15 = (_DWORD *)((unint64_t)a1[1] & 0xFFFFFFFFFFFFFFFELL);
    if ((*v15 & 0x18000) == 0)
    {
      if (*(_DWORD *)(v12 + 16) == 45 || *((_DWORD *)a1 + 8) != 0)
        LOBYTE(v6) = 1;
      if ((v6 & 1) == 0)
      {
        v17 = sub_22EB1B954((uint64_t)*a1, v15);
        a1[1] = (_QWORD *)v17;
        if ((v17 & 1) != 0)
          return;
        v11 = *(_QWORD *)(*v10 & 0xFFFFFFFFFFFFFFF0);
      }
      v18 = sub_22E3E4B64(v11);
      v19 = *a1;
      if (!v18)
        goto LABEL_56;
      if (sub_22E95CF10(v19, *(uint64_t *)((char *)a1 + 100), (uint64_t)a1[2], *(_QWORD *)(((unint64_t)a1[1] & 0xFFFFFFFFFFFFFFFELL) + 8)))goto LABEL_84;
      v20 = (*(_DWORD *)(v18 + 16) >> 19) & 0xF;
      if (v20 != 2)
      {
        v19 = *a1;
        if ((v20 - 3) > 1
          || (*(_QWORD *)((*a1)[9] + 232) & 0x6000000000000000) != 0x4000000000000000)
        {
LABEL_56:
          v53 = 2905;
          v30 = sub_22E95F3B0((uint64_t)v19, (uint64_t *)a1 + 1, *v10, 1, &v53);
          v31 = *v14;
          if ((*v14 & 1) != 0)
            return;
          if ((v30 - 1) > 1)
          {
            if (a2)
              v33 = 2;
            else
              v33 = 1;
            v34 = sub_22E95F674((uint64_t)*a1, v31, (uint64_t)a1[2], &v53, (int *)a1 + 9);
            v31 = (uint64_t)a1[1];
            if ((v31 & 1) != 0)
              return;
            v32 = v34;
            if (!v34)
            {
              v46 = sub_22E962680((uint64_t)*a1, (uint64_t)(a1 + 1), (uint64_t)a1[2], v33, *(uint64_t *)((char *)a1 + 100), (uint64_t)&v53, (uint64_t)a1 + 36, (uint64_t)(a1 + 6), a3);
              v31 = (uint64_t)a1[1];
              if ((v31 & 1) != 0)
                return;
              v32 = v46;
              if (!v46)
              {
                v47 = sub_22E95F8C0((uint64_t)*a1, (uint64_t *)a1 + 1, (uint64_t)a1[2], 1uLL, *(uint64_t *)((char *)a1 + 100), &v53, (int *)a1 + 9);
                v31 = (uint64_t)a1[1];
                if ((v31 & 1) != 0)
                  return;
                v32 = v47;
              }
            }
          }
          else
          {
            *((_DWORD *)a1 + 9) = 5;
            v32 = 1;
            if (a2)
              LODWORD(v33) = 2;
            else
              LODWORD(v33) = 1;
          }
          v35 = (uint64_t)*a1;
          v36 = v32 - 1;
          if ((*(_WORD *)((*a1)[9] + 148) & 0xALL) != 0 && v36 <= 1)
          {
            v51[0] = v31 & 0xFFFFFFFFFFFFFFFELL;
            if (sub_22EC32FE4(v35, *(unint64_t *)((char *)a1 + 100), (uint64_t)a1[2], v51, v33, 1, 0, 0) == 1)*((_BYTE *)a1 + 96) = 1;
            v31 = v51[0];
            *v14 = v51[0];
          }
          if (v32 != 1 && v53)
          {
            if (*(_QWORD *)((v31 & 0xFFFFFFFFFFFFFFFELL) + 8) == *(_QWORD *)((*a1)[11] + 16840))
            {
              if (sub_22ED13340((unsigned int *)*a1, v31 & 0xFFFFFFFFFFFFFFFELL, *v10, 1, &v52, 0))
              {
                v38 = sub_22E9058F0((unsigned __int8 *)((unint64_t)a1[1] & 0xFFFFFFFFFFFFFFFELL));
                sub_22E8FCA40(*a1, *((_DWORD *)a1 + 25), 0xB56u, 0, (uint64_t)v51);
                v50 = *((_QWORD *)v38 + 2);
                v39 = sub_22E894538((uint64_t)v51, &v50);
                v40 = sub_22E8901B8(v39, (uint64_t *)a1 + 2);
                v41 = sub_22E8906A0(v40, (uint64_t *)((char *)a1 + 100));
                v48 = *(_OWORD *)(v38 + 40);
                v49 = sub_22F0AB0EC((unint64_t *)&v48);
                sub_22E8906A0(v41, (uint64_t *)&v49);
                sub_22E903BEC((unsigned int *)v51);
                sub_22ED11AD0((unsigned int *)*a1, (unsigned __int8 *)((unint64_t)a1[1] & 0xFFFFFFFFFFFFFFFELL), 0, 0);
              }
            }
            else
            {
              sub_22E9607B0();
            }
          }
          if (v36 <= 1)
          {
            v42 = *a1;
            v43 = (uint64_t)a1[1];
            if (*((_DWORD *)a1 + 9) == 1)
            {
              sub_22E98D52C(v42, v43 & 0xFFFFFFFFFFFFFFFELL, (uint64_t)a1[2], *(uint64_t *)((char *)a1 + 100));
              v42 = *a1;
              v43 = (uint64_t)a1[1];
            }
            if ((sub_22E960DC8((uint64_t)v42, v43, *v10) & 1) == 0)
            {
              sub_22E8FCA40(*a1, *((_DWORD *)a1 + 25), 0x18BEu, 0, (uint64_t)v51);
              *(_QWORD *)&v48 = *(_QWORD *)(((unint64_t)a1[1] & 0xFFFFFFFFFFFFFFFELL) + 8);
              v44 = sub_22E8901B8((uint64_t)v51, (uint64_t *)&v48);
              v45 = sub_22E8901B8(v44, (uint64_t *)a1 + 2);
              sub_22E8906A0(v45, (uint64_t *)((char *)a1 + 100));
              sub_22E903BEC((unsigned int *)v51);
            }
            return;
          }
LABEL_84:
          *v14 = 1;
          return;
        }
      }
      v22 = *v14;
      v23 = *v14 & 0xFFFFFFFFFFFFFFFELL;
      v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v25 = *(_DWORD *)(v24 + 16);
      if (v24)
        v26 = v25 == 11;
      else
        v26 = 0;
      if (v26)
      {
        if (((*(_DWORD *)(v24 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
          goto LABEL_54;
      }
      else if (v24 && v25 == 44)
      {
        v27 = sub_22F114198(*(_QWORD *)(v24 + 24));
        if ((*(_BYTE *)(v27 + 74) & 1) != 0 || *(_QWORD *)(v27 + 128) > 7uLL)
        {
          v28 = sub_22F114198(*(_QWORD *)(v24 + 24));
          v22 = *v14;
          if ((*(_BYTE *)(v28 + 76) & 0x80) == 0)
          {
            v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
            goto LABEL_54;
          }
        }
        else
        {
          v22 = *v14;
        }
      }
      else if (v25 == 9)
      {
        goto LABEL_54;
      }
      v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
      if (!sub_22F10E0EC(*(_QWORD *)(*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)))
      {
        v19 = *a1;
        goto LABEL_56;
      }
LABEL_54:
      *((_DWORD *)a1 + 9) = 27;
      v7 = sub_22EB35F48((uint64_t)*a1, (uint64_t)a1[2], v23);
      goto LABEL_46;
    }
  }
}

uint64_t sub_22E95EF24(uint64_t *a1, uint64_t *a2, uint64_t a3, unsigned int a4, uint64_t a5, unsigned int a6)
{
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  unint64_t v19;
  unint64_t v20;
  unsigned int *v21;
  uint64_t v23[2];
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  void *v29;
  _BYTE v30[44];
  unint64_t v31;
  uint64_t v32;

  v32 = *MEMORY[0x24BDAC8D0];
  sub_22E95C574((uint64_t)&v24, (uint64_t)a1, a3, a5);
  v11 = *a2;
  v23[0] = v11;
  v23[1] = (uint64_t)(a2 + 1);
  for (i = v11; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_12;
      v13 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v13 <= 0x39)
        break;
LABEL_7:
      if (sub_22F115668(i))
        v11 = i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_14;
    }
    if (v13 == 24)
      goto LABEL_13;
    if (v13 == 26)
      break;
    if (((1 << v13) & 0x20000000200003CLL) == 0)
      goto LABEL_7;
LABEL_12:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_12;
LABEL_13:
  v11 = i;
LABEL_14:
  v14 = sub_22F115668(v11);
  v31 = v14 | ((unint64_t)sub_22F1167E8(v23) << 32);
  sub_22F0D60E4(a5);
  *(_QWORD *)&v30[36] = v14 | ((unint64_t)v15 << 32);
  v16 = 1;
  sub_22E95E970(&v24, 1, 0);
  if ((v25 & 1) == 0)
  {
    sub_22E95C6A4(&v24);
    v17 = v25 & 0xFFFFFFFFFFFFFFFELL;
    v18 = *(unsigned __int8 *)(v25 & 0xFFFFFFFFFFFFFFFELL);
    if (v18 == 116)
    {
      v19 = *(_QWORD *)(v17 + 24);
      LOBYTE(v18) = *(_BYTE *)v19;
    }
    else
    {
      v19 = v25 & 0xFFFFFFFFFFFFFFFELL;
    }
    if ((v18 & 0xFE) == 0x76)
      *(_QWORD *)(v19 + 24) = a4 | ((unint64_t)a6 << 32);
    if (a1[162] == a1[161])
      v20 = 0;
    else
      v20 = a1[162];
    v21 = (unsigned int *)sub_22F06126C(a1[11], v26, v27, (uint64_t)a2, v28, v17, (uint64_t)&v29, v20, a4, 0, a6);
    v16 = (uint64_t)sub_22E95C720(&v24, v21);
  }
  if (v29 != v30)
    free(v29);
  return v16;
}

uint64_t *sub_22E95F17C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v10[24];

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 8);
  if ((v3 & 1) == 0)
  {
    v4 = *(_QWORD *)(*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v4)
    {
      if (*(_BYTE *)(v4 + 16) == 39)
      {
        v5 = *(_QWORD **)v2;
        v6 = *(_QWORD *)(v2 + 24);
        v7 = *(_DWORD *)(v2 + 100);
        if (sub_22F10E1FC(*(_QWORD *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0), 12))
        {
          v8 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0);
          if (v8)
          {
            if (*(_BYTE *)(v8 + 16) == 39
              && (sub_22F10E1FC(*(_QWORD *)(*(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFFFF0), 12) & 1) == 0)
            {
              sub_22E8FCA40(v5, v7, 0x1A74u, 0, (uint64_t)v10);
              sub_22E903BEC(v10);
            }
          }
        }
      }
    }
  }
  return a1;
}

uint64_t sub_22E95F24C(unsigned int *a1, uint64_t a2)
{
  uint64_t result;
  unsigned int v5;
  BOOL v6;
  BOOL v7;
  char v8;
  unsigned int v9;
  unsigned int v10;

  result = sub_22E95F2F0(*a1 >> 11, a2 >> 11);
  if ((_DWORD)result)
  {
    v5 = *a1;
    if (((a2 & 0x30) == 0
       || ((v5 & 0x30) != 0 ? (v6 = ((*a1 ^ a2) & 0x30) == 0) : (v6 = 1), v6))
      && ((((unsigned __int16)*a1 ^ (unsigned __int16)a2) & 0x1C0) == 0 ? (v7 = a1[1] == HIDWORD(a2)) : (v7 = 0), v7))
    {
      v8 = a2 & ~(_BYTE)v5;
      v9 = (v5 >> 9) & 3;
      v10 = (v5 >> 3) & 1;
      if ((a2 & 8) == 0)
        v10 = 1;
      if (v9 < ((a2 >> 9) & 3))
        v10 = 0;
      if ((v8 & 7) != 0)
        return 0;
      else
        return v10;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL sub_22E95F2F0(unsigned int a1, unsigned int a2)
{
  unsigned int v3;
  _BOOL8 result;
  BOOL v5;
  BOOL v6;

  if (a1 == a2 || a1 == 5 && a2 != 3)
    return 1;
  v3 = a2 & 0xFFFFFFFE;
  if (a1 == 1 && v3 == 6)
    return 1;
  if (a1 == 19 && v3 == 20)
    return 1;
  result = 0;
  if (a1 <= 0x1A && ((1 << a1) & 0x7000001) != 0)
  {
    v5 = a2 == 26 || v3 == 24;
    v6 = v5 || a2 == 0;
    result = v6;
    if (!a1 && (a2 > 0x1A || ((1 << a2) & 0x7000001) == 0))
    {
      if (a2 - 19 < 5)
        return 1;
      return a2 == 10 || v3 == 8;
    }
  }
  return result;
}

uint64_t sub_22E95F3B0(uint64_t a1, uint64_t *a2, uint64_t a3, char a4, int *a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t v13;
  int v14;
  int v15;
  uint64_t result;
  int v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22;
  BOOL v23;
  uint64_t v24;
  BOOL v25;

  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
  v10 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFFFELL) + 8);
  v11 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
  if (!v11 || (v12 = *(_DWORD *)(v11 + 16), (v12 & 0xFE) != 0x28))
  {
    v13 = v9 | a3 & 7;
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
      || (v11 = sub_22F10CF48(v11)) == 0)
    {
      v15 = 0;
      goto LABEL_24;
    }
    v12 = *(_DWORD *)(v11 + 16);
  }
  if (v12 == 40)
  {
    v14 = *(_DWORD *)(*a2 & 0xFFFFFFFFFFFFFFFELL);
    if ((v14 & 0x300) != 0x100)
      goto LABEL_40;
LABEL_13:
    v15 = 0;
    goto LABEL_15;
  }
  if (v12 != 41)
  {
    v15 = 0;
    v14 = *(_DWORD *)(*a2 & 0xFFFFFFFFFFFFFFFELL);
    goto LABEL_15;
  }
  v14 = *(_DWORD *)(*a2 & 0xFFFFFFFFFFFFFFFELL);
  if ((v14 & 0x300) != 0)
    goto LABEL_13;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 45)
  {
LABEL_40:
    result = 0;
    v17 = 2908;
    goto LABEL_42;
  }
  v15 = 1;
LABEL_15:
  if ((v14 & 0x1C00) == 0x400)
  {
    result = 0;
    v17 = 2904;
LABEL_42:
    *a5 = v17;
    return result;
  }
  v18 = *(_QWORD *)(a1 + 88);
  if ((v12 & 0x100000) != 0)
  {
    do
    {
      while (1)
      {
        v11 = *(_QWORD *)(*(_QWORD *)(v11 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v11)
          break;
        v19 = *(_DWORD *)(v11 + 16);
        if ((v19 & 0xFE) != 0x28)
          break;
        if ((v19 & 0x100000) == 0)
          goto LABEL_23;
      }
      v11 = sub_22F10CF48(v11);
    }
    while ((*(_DWORD *)(v11 + 16) & 0x100000) != 0);
  }
LABEL_23:
  v13 = sub_22EF5B848(v18, *(_QWORD *)(v11 + 32), 0);
  v10 = sub_22EF5B848(*(_QWORD *)(a1 + 88), v10, 0);
LABEL_24:
  v20 = v13 & 0xFFFFFFFFFFFFFFF0;
  v21 = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0);
  v22 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  v23 = v22 > 0x27 || ((1 << v22) & 0x8180000000) == 0;
  if (v23
    || (*(_BYTE *)(v21 + 16) == 39 || v22 == 39 && (v21 = sub_22F10CF48(v21)) != 0)
    && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 25 < 2
    || ((v24 = *(_QWORD *)v20) != 0 ? (v25 = *(_BYTE *)(*(_QWORD *)v20 + 16) == 31) : (v25 = 0),
        (v25
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v24 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 31
      && (v24 = sub_22F10CF48(v24)) != 0)
     && sub_22F28C8B4(v24)))
  {
    if ((a4 & 1) != 0)
      return 0;
    result = 0;
    v17 = 2901;
    goto LABEL_42;
  }
  result = sub_22EF68504(*(_QWORD *)(a1 + 88), v10, v13);
  if ((v15 & result) == 1)
  {
    *a2 = sub_22F335E0C(a1, *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFFFELL) + 8), *a2 & 0xFFFFFFFFFFFFFFFELL, 0);
    return 1;
  }
  return result;
}

uint64_t sub_22E95F674(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, int *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;

  v9 = *(_QWORD *)(a1 + 72);
  if ((*(_DWORD *)(v9 + 52) & 0x40000000) == 0 && (*(_BYTE *)(v9 + 104) & 0x24) == 0)
    return 0;
  v10 = *(_QWORD *)(*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v10 || *(_BYTE *)(v10 + 16) != 39)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
      return 0;
    result = sub_22F10CF48(v10);
    v10 = result;
    if (!result)
      return result;
  }
  result = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
  if (result && *(_BYTE *)(result + 16) == 39)
    goto LABEL_11;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
    return 0;
  result = sub_22F10CF48(result);
  if (!result)
    return result;
LABEL_11:
  v12 = *(_QWORD *)(v10 + 32);
  v20 = *(_QWORD *)(result + 32);
  if (sub_22E95F83C(&v20, v12))
  {
    v13 = sub_22EF5DEB0(*(_QWORD *)(a1 + 88), *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF0) + 8) | v12 & 7);
    v14 = sub_22EF5DEB0(*(_QWORD *)(a1 + 88), v20 & 7 | *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF0) + 8));
    if ((*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8) | v13 & 7) != (*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF0) + 8) | v14 & 7))
      return 0;
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v15 & 8) != 0)
      v16 = *(_DWORD *)((v15 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v16 = 0;
    v17 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v17 & 8) != 0)
      v18 = *(_DWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v18 = 0;
    if (v16 == v18)
      v19 = 5;
    else
      v19 = 66;
    *a5 = v19;
    return 1;
  }
  else
  {
    *a4 = 2903;
    return 3;
  }
}

BOOL sub_22E95F83C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;

  v2 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v2 & 8) != 0)
    v3 = *(_DWORD *)((v2 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
  else
    v3 = 0;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v4 & 8) != 0)
    v5 = *(_DWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
  else
    v5 = 0;
  return sub_22E95F2F0(v3, v5) || sub_22E95F2F0(v5, v3);
}

uint64_t sub_22E95F8C0(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4, uint64_t a5, int *a6, int *a7)
{
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  BOOL v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  BOOL v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  int v49;
  const char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  int v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  int v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  int v82;
  int v83;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  _BOOL4 v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  unsigned int v93;
  int v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t *v107;
  uint64_t v108;
  int v109;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  const char *v114;
  unsigned int v115;
  uint64_t v116;
  uint64_t v117[12];
  const char *v118;
  unint64_t v119;
  unsigned __int8 v120;
  uint64_t v121;
  unint64_t v122;

  v120 = a4;
  v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) | a3 & 7;
  v121 = a5;
  v122 = v12;
  v13 = *a2;
  v14 = *a2 & 0xFFFFFFFFFFFFFFFELL;
  v15 = *(_QWORD *)(v14 + 8);
  v119 = v15;
  if (v15 == *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16840))
  {
    v117[0] = v13;
    v16 = sub_22E8BBBD0(v12) == 0;
    v17 = sub_22F343028((unsigned int *)a1, (unint64_t *)v117, v16, 0, 0, 0, 0);
    v13 = v117[0];
    if (v17)
      v18 = v117[0] > 1uLL;
    else
      v18 = 0;
    if (!v18)
    {
      v117[0] = v14;
      if (!sub_22F342EDC((_QWORD *)a1, v117, 1))
        return 0;
      v13 = v117[0];
      if (v117[0] < 2uLL)
        return 0;
    }
    *a2 = v13;
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v119 = v15;
    v12 = v122;
  }
  v19 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0);
  if (v19 && (*(_DWORD *)(v19 + 16) & 0xFE) == 0x28)
    goto LABEL_13;
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
  {
    v20 = sub_22F10CF48(v19);
    if (v20)
    {
      v19 = v20;
      v13 = *a2;
LABEL_13:
      v21 = (unsigned __int8 *)(v13 & 0xFFFFFFFFFFFFFFFELL);
      v22 = *(_DWORD *)(v13 & 0xFFFFFFFFFFFFFFFELL);
      if ((v22 & 0x300) != 0)
      {
        if ((a4 & 1) == 0)
        {
          sub_22E95CBEC((_QWORD *)a1, v119, v122, 0, v121);
          v21 = (unsigned __int8 *)(*a2 & 0xFFFFFFFFFFFFFFFELL);
          v22 = *(_DWORD *)v21;
        }
        switch((v22 >> 10) & 7)
        {
          case 1u:
            *a6 = 2904;
            return 0;
          case 2u:
            v50 = "vector element";
            goto LABEL_76;
          case 3u:
            v50 = "property expression";
            goto LABEL_76;
          case 4u:
            v50 = "container subscripting expression";
            goto LABEL_76;
          case 5u:
            v50 = "matrix element";
LABEL_76:
            v118 = v50;
            if (sub_22F001E84(v21))
              goto LABEL_77;
            goto LABEL_78;
          default:
            if (!sub_22F001E84(v21))
            {
              v26 = *(_QWORD *)(a1 + 88);
              if ((*(_BYTE *)(v19 + 18) & 0x10) != 0)
              {
                do
                {
                  while (1)
                  {
                    v19 = *(_QWORD *)(*(_QWORD *)(v19 + 32) & 0xFFFFFFFFFFFFFFF0);
                    if (!v19)
                      break;
                    v27 = *(_DWORD *)(v19 + 16);
                    if ((v27 & 0xFE) != 0x28)
                      break;
                    if ((v27 & 0x100000) == 0)
                      goto LABEL_29;
                  }
                  v19 = sub_22F10CF48(v19);
                }
                while ((*(_DWORD *)(v19 + 16) & 0x100000) != 0);
              }
LABEL_29:
              v122 = sub_22EF5B848(v26, *(_QWORD *)(v19 + 32), 0);
              v15 = sub_22EF5B848(*(_QWORD *)(a1 + 88), v119, 0);
              v23 = 1;
              goto LABEL_30;
            }
LABEL_77:
            v118 = "global builtin variable";
LABEL_78:
            sub_22E8FCA40((_QWORD *)a1, v121, 0xB71u, 0, (uint64_t)v117);
            v51 = sub_22E96133C((uint64_t)v117, (uint64_t *)&v118);
            v52 = sub_22E8901B8(v51, (uint64_t *)&v122);
            v53 = sub_22E8906A0(v52, &v121);
            sub_22F0D4E74(*a2 & 0xFFFFFFFFFFFFFFFELL);
            v116 = v54;
            sub_22E8906A0(v53, &v116);
            sub_22E903BEC((unsigned int *)v117);
            *a6 = 0;
            *a2 = 1;
            break;
        }
        return 0;
      }
      v24 = 0;
      v25 = 2908;
      goto LABEL_20;
    }
    v23 = 0;
    v15 = v119;
  }
  else
  {
    v23 = 0;
  }
LABEL_30:
  v28 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF0) + 8) | v15 & 7;
  v119 = v28;
  v29 = *(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0);
  if (v29)
    v30 = *(_BYTE *)(v29 + 16) == 31;
  else
    v30 = 0;
  if (!v30)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v29 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 31)
    {
      v29 = sub_22F10CF48(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0));
      v28 = v119;
    }
    else
    {
      v29 = 0;
    }
  }
  v31 = *(_QWORD *)(v28 & 0xFFFFFFFFFFFFFFF0);
  if (v31)
    v32 = *(_BYTE *)(v31 + 16) == 31;
  else
    v32 = 0;
  if (!v32)
  {
    v33 = *(_QWORD *)(v31 + 8) & 0xFFFFFFFFFFFFFFF0;
    if (*(_BYTE *)(*(_QWORD *)v33 + 16) != 31)
      goto LABEL_49;
    v31 = sub_22F10CF48(*(_QWORD *)(v28 & 0xFFFFFFFFFFFFFFF0));
  }
  if (v29)
    v34 = v31 == 0;
  else
    v34 = 1;
  if (!v34)
  {
    v76 = sub_22F28C8B4(v29);
    v77 = sub_22F28C8B4(v31);
    if (v76 == v77)
    {
      v78 = *(_QWORD *)(a1 + 88);
      if (*(_DWORD *)(*(_QWORD *)(v78 + 15088) + 148) == 11)
      {
        sub_22EE8B180(a1, v121);
        sub_22EE8B180(a1, v121);
        v78 = *(_QWORD *)(a1 + 88);
      }
      v79 = sub_22EF5CDF0(v78, v29);
      if (v79 == sub_22EF5CDF0(*(_QWORD *)(a1 + 88), v31))
      {
        v80 = sub_22E9613DC(a1, v119, v122, a4 ^ 1, a4, 0, 0, 0);
        if (v80)
        {
          if (v80 == 3)
            v25 = 5181;
          else
            v25 = 2907;
          if (v80 == 3)
            v24 = 2;
          else
            v24 = 3;
LABEL_20:
          *a6 = v25;
          return v24;
        }
        v64 = 19;
        goto LABEL_155;
      }
      v40 = 2906;
LABEL_57:
      *a6 = v40;
      return 3;
    }
    return 0;
  }
  v28 = v119;
  v33 = *(_QWORD *)(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
LABEL_49:
  v35 = v122;
  if (*(_QWORD *)v33)
    v36 = (*(_DWORD *)(*(_QWORD *)v33 + 16) & 0xFF800FF) == 114294795;
  else
    v36 = 0;
  if (v36)
  {
    v37 = sub_22F110744(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0), *(_QWORD *)(a1 + 88));
    v28 = v119;
    v38 = *(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0);
    if (v37)
    {
      v39 = sub_22EF5CDF0(*(_QWORD *)(a1 + 88), v38);
      if (v39 > sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0)))
        goto LABEL_56;
      goto LABEL_94;
    }
    v35 = v122;
    v33 = *(_QWORD *)(v38 + 8) & 0xFFFFFFFFFFFFFFF0;
  }
  v41 = v23;
  v42 = *(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0);
  v43 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v42 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  v44 = v43 - 55;
  v45 = *(_QWORD *)v33;
  v46 = *(unsigned __int8 *)(*(_QWORD *)v33 + 16);
  v47 = v46 - 55;
  if (v46 - 55 < 2 || v44 <= 1)
  {
    if ((sub_22EB35A88(v28, v35) & 1) != 0 || sub_22EB35A88(v35, v28))
      goto LABEL_65;
    if (v44 >= 2 && !sub_22F110744(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0), *(_QWORD *)(a1 + 88))
      || v47 >= 2 && !sub_22F110744(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0), *(_QWORD *)(a1 + 88)))
    {
      return 0;
    }
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 104) & 0x20) == 0)
      goto LABEL_256;
    if (v47 > 1 || v44 > 1)
      goto LABEL_256;
    v66 = *(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0);
    if (!v66 || *(unsigned __int8 *)(v66 + 16) - 57 <= 0xFFFFFFFD)
      v66 = sub_22F10CF48(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0));
    v67 = *(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0);
    if (!v67 || *(unsigned __int8 *)(v67 + 16) - 57 <= 0xFFFFFFFD)
      v67 = sub_22F10CF48(v67);
    if (*(_DWORD *)(v66 + 20) != 4
      || *(_DWORD *)(v67 + 20) != 3
      || (*(_BYTE *)(v66 + 18) & 0x78) != 0
      || (*(_BYTE *)(v67 + 18) & 0x78) != 0
      || (v68 = sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(v66 + 32) & 0xFFFFFFFFFFFFFFF0)),
          v68 != sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *(_QWORD *)(*(_QWORD *)(v67 + 32) & 0xFFFFFFFFFFFFFFF0))))
    {
LABEL_256:
      if (!sub_22F32E0C8(a1, v119, v122)
        && ((*(_DWORD *)(*(_QWORD *)(a1 + 72) + 52) & 0x40000000) == 0
         || (a4 & 1) != 0
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                     + 16) != 56
         && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                     + 16) != 56
         || !sub_22EB35AD4(a1, v119, v122)))
      {
        if (v44 >= 2)
        {
          v40 = 2911;
        }
        else if (v47 >= 2)
        {
          v40 = 2909;
        }
        else
        {
          v40 = 2912;
        }
        goto LABEL_57;
      }
LABEL_65:
      v24 = 1;
      *a7 = 1;
      return v24;
    }
    v64 = 10;
LABEL_155:
    *a7 = v64;
    return 1;
  }
  if (v28 == v35)
  {
    *a7 = 5;
    v49 = *(_DWORD *)(v45 + 16);
    if (v49 == 9)
      return 1;
    if (v49 == 44)
    {
      v72 = sub_22F114198(*(_QWORD *)(v45 + 24));
      if ((*(_BYTE *)(v72 + 74) & 1) != 0 || *(_QWORD *)(v72 + 128) > 7uLL)
        return 1;
      v33 = *(_QWORD *)(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
    }
    else if (v49 == 11 && ((*(_DWORD *)(v45 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
    {
      return 1;
    }
    v73 = *(unsigned __int8 *)(*(_QWORD *)v33 + 16);
    v18 = v73 > 0x27;
    v74 = (1 << v73) & 0x8180000400;
    return !v18 && v74 != 0;
  }
  v55 = (v43 < 0x28) & (0x8100000400uLL >> v43);
  if (v46 > 0x27 || ((1 << v46) & 0x8100000400) == 0)
  {
    v57 = 0;
    v24 = 0;
    v58 = v41;
    if (!v55)
      return v24;
  }
  else
  {
    v57 = 1;
    v58 = v41;
  }
  if (sub_22F110744(v42, *(_QWORD *)(a1 + 88)))
  {
    v59 = sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0));
    if (v59 > sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0)))
    {
      if ((**(_BYTE **)(a1 + 72) & 0x20) != 0)
      {
        v60 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v60 || (*(_DWORD *)(v60 + 16) & 0xFF800FF) != 0x530000B)
        {
          if (sub_22F10DFD8(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0)))
            v61 = 7166;
          else
            v61 = 6887;
          sub_22E8FCA40((_QWORD *)a1, v121, v61, 0, (uint64_t)v117);
          v62 = sub_22E8901B8((uint64_t)v117, (uint64_t *)&v119);
          v63 = sub_22E8901B8(v62, (uint64_t *)&v122);
          sub_22E8906A0(v63, &v121);
          sub_22E903BEC((unsigned int *)v117);
          goto LABEL_94;
        }
      }
LABEL_56:
      v40 = 2930;
      goto LABEL_57;
    }
LABEL_94:
    v64 = 23;
    goto LABEL_155;
  }
  v70 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v71 = *(_DWORD *)(v70 + 16);
  if (v70 && v71 == 11)
  {
    if (((*(_DWORD *)(v70 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
      goto LABEL_154;
  }
  else if (v70 && v71 == 44)
  {
    v81 = sub_22F114198(*(_QWORD *)(v70 + 24));
    if ((*(_BYTE *)(v81 + 74) & 1) != 0 || *(_QWORD *)(v81 + 128) >= 8uLL)
      goto LABEL_154;
  }
  else if (v71 == 9)
  {
LABEL_154:
    sub_22E9618B0(a4, &v121, *a2 & 0xFFFFFFFFFFFFFFFELL, v122, (_QWORD *)a1);
    v64 = 22;
    goto LABEL_155;
  }
  if ((v55 & v57) != 1)
    return 0;
  v82 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                           + 16);
  v83 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                           + 16);
  if (v82 == 10)
  {
    if (v83 == 32)
      return 0;
  }
  else if (v82 == 32 && v83 == 10)
  {
    return 0;
  }
  v85 = sub_22E9613DC(a1, v119, v122, a4 ^ 1, a4, 0, 0, 0);
  if (v85)
  {
    if (v85 == 3)
      v86 = 5181;
    else
      v86 = 2907;
    if (v85 == 3)
      v24 = 2;
    else
      v24 = 3;
    *a6 = v86;
  }
  else
  {
    v24 = 1;
  }
  if (!sub_22E961A34(v119, v122))
  {
    if (v58)
    {
      v91 = 2;
    }
    else
    {
      v94 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 16);
      if (v94 == 10)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) != 10)
        {
          v91 = 45;
          goto LABEL_205;
        }
      }
      else if (v94 == 32)
      {
        *a7 = sub_22F32DF80((unsigned int *)a1, a2);
        goto LABEL_206;
      }
      v91 = 1;
    }
LABEL_205:
    *a7 = v91;
    goto LABEL_206;
  }
  *a7 = 66;
  if ((a4 & 1) != 0)
  {
    v87 = *(_QWORD *)(a1 + 72);
    if ((*(_DWORD *)(v87 + 52) & 0x40000000) != 0 || (*(_BYTE *)(v87 + 104) & 0x20) != 0)
    {
      v117[0] = sub_22F10ACF8(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0));
      v88 = sub_22F10ACF8(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0));
      v89 = sub_22E95F83C(v117, v88);
      v90 = v122;
      if (v89)
        v24 = v24;
      else
        v24 = 3;
      goto LABEL_207;
    }
  }
  else
  {
    v92 = *(_QWORD *)((sub_22F10ACF8(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v92 & 8) != 0)
      v93 = *(_DWORD *)((v92 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v93 = 0;
    v95 = *(_QWORD *)((sub_22F10ACF8(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v95 & 8) != 0)
      v96 = *(_DWORD *)((v95 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    else
      v96 = 0;
    if (!sub_22E95F2F0(v93, v96))
    {
      v24 = 3;
LABEL_209:
      v90 = v122;
      goto LABEL_210;
    }
  }
LABEL_206:
  v90 = v122;
  if ((_DWORD)a4)
  {
LABEL_207:
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v90 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32)
      return v24;
    sub_22E961B20(a1, a2, v90);
    goto LABEL_209;
  }
LABEL_210:
  sub_22E961CF8(a1, a2, v90, v121);
  v97 = *(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0);
  if ((v97 && *(_BYTE *)(v97 + 16) == 39
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v97 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
     && (v97 = sub_22F10CF48(v97)) != 0)
    && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v97 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 25 <= 1)
  {
    v98 = *(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0);
    if (!v98 || *(_BYTE *)(v98 + 16) != 39)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v98 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
        goto LABEL_243;
      v98 = sub_22F10CF48(v98);
      if (!v98)
        goto LABEL_243;
    }
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v98 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                  + 8) & 0xFFFFFFFFFFFFFFF0)
                                          + 16)
       - 25 >= 2)
      goto LABEL_243;
  }
  else
  {
    v99 = *(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0);
    if ((v99 && *(_BYTE *)(v99 + 16) == 39
       || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v99 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
       && (v99 = sub_22F10CF48(v99)) != 0)
      && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v99 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                  + 8) & 0xFFFFFFFFFFFFFFF0)
                                          + 16)
       - 25 <= 1)
    {
LABEL_243:
      if ((**(_QWORD **)(a1 + 72) & 0x200) != 0)
        v115 = 6432;
      else
        v115 = 5186;
      sub_22E8FCA40((_QWORD *)a1, v121, v115, 0, (uint64_t)v117);
      sub_22E8906A0((uint64_t)v117, &v121);
LABEL_247:
      sub_22E903BEC((unsigned int *)v117);
      return v24;
    }
    v100 = sub_22F10ACF8(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0));
    v101 = sub_22F10ACF8(*(_QWORD *)(v122 & 0xFFFFFFFFFFFFFFF0));
    v102 = v101;
    if (v100 >= 0x10)
      v102 = sub_22F10ACF8(*(_QWORD *)(v101 & 0xFFFFFFFFFFFFFFF0));
    v103 = sub_22F10ACF8(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0));
    v104 = sub_22F10ACF8(*(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0));
    if (v103 >= 0x10)
      v104 = sub_22F10ACF8(*(_QWORD *)(v104 & 0xFFFFFFFFFFFFFFF0));
    if (v102 >= 0x10 && v104 >= 0x10)
    {
      while (1)
      {
        v105 = *(_QWORD *)((v102 & 0xFFFFFFFFFFFFFFF0) + 8);
        v106 = (v105 & 8) != 0 ? *(_DWORD *)((v105 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11 : 0;
        v107 = (uint64_t *)(v104 & 0xFFFFFFFFFFFFFFF0);
        v108 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFFFF0) + 8);
        v109 = (v108 & 8) != 0 ? *(_DWORD *)((v108 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11 : 0;
        if (v106 != v109)
          break;
        v102 = sub_22F10ACF8(*(_QWORD *)(v102 & 0xFFFFFFFFFFFFFFF0));
        v104 = sub_22F10ACF8(*v107);
        if (v102 < 0x10 || v104 < 0x10)
          return v24;
      }
      sub_22E8FCA40((_QWORD *)a1, v121, 0x18A0u, 0, (uint64_t)v117);
      v111 = sub_22E894E38((uint64_t)v117, &v120);
      v112 = sub_22E8901B8(v111, (uint64_t *)&v119);
      v113 = sub_22E8901B8(v112, (uint64_t *)&v122);
      sub_22F0D4E74(*a2 & 0xFFFFFFFFFFFFFFFELL);
      v118 = v114;
      sub_22E8906A0(v113, (uint64_t *)&v118);
      goto LABEL_247;
    }
  }
  return v24;
}

unsigned int *sub_22E9607B0()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  signed int v8;
  unsigned int v9;
  unsigned int v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unsigned int *result;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  unsigned __int8 *v37;
  unsigned __int8 **v38;
  unsigned __int8 *v39;
  int v40;
  int v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t i;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  unint64_t v59;
  int v60;
  _QWORD v61[2];
  uint64_t v62[3];
  int v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66[4];
  uint64_t v67;
  unsigned __int8 *v68;
  uint64_t v69;
  char v70;
  unsigned int v71;
  char v72;
  int v73;
  int v74;
  _DWORD v75[3050];
  uint64_t v76;

  v0 = MEMORY[0x24BDAC7A8]();
  v6 = v3;
  v7 = v2;
  v8 = v1;
  v10 = v9;
  v11 = (_QWORD *)v0;
  v76 = *MEMORY[0x24BDAC8D0];
  v55 = v4;
  v56 = v2;
  if (v9 == 2905)
  {
    v12 = v4;
    v65 = v3;
    if (v1 > 7 || ((1 << v1) & 0xCD) == 0)
    {
      v30 = *(_QWORD *)(v3 + 8);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 45
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v30 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 45)
      {
        LODWORD(v62[0]) = 9;
        v62[1] = 0;
        v62[2] = v4;
        v63 = 0;
        v64 = 0;
        if (v1 == 5)
        {
          v31 = v5 | (unint64_t)(v2 << 32) | 0x500;
        }
        else if (v1 == 4)
        {
          v31 = v5 | (unint64_t)(v2 << 32) | 0x400;
        }
        else
        {
          v31 = (v2 << 32) | 0x300;
        }
        v61[0] = v31;
        v61[1] = v2;
        sub_22EC395BC(v66, v0, v62, v61, &v65, 1, 0, 1);
        if ((v73 & 0xFFFFFFFE) == 0x1E)
        {
          switch(v74)
          {
            case 3:
              v40 = 1;
              v41 = 4470;
              break;
            case 2:
              v40 = 2;
              v41 = 4461;
              break;
            case 1:
              v40 = 0;
              if (v75[2])
                v41 = 4480;
              else
                v41 = 4478;
              break;
            default:
              v41 = 0;
              v40 = 0;
              break;
          }
          v42 = v11[11] + 2128;
          v43 = (unsigned __int8 *)sub_22E3B8AAC(v42);
          v44 = *v43;
          v45 = v43 + 1;
          v45[v44] = 2;
          *(_QWORD *)&v43[8 * v44 + 16] = v8;
          v46 = (v44 + 1);
          v45[v46] = 9;
          *(_QWORD *)&v43[8 * v46 + 16] = v30;
          v47 = (v44 + 2);
          v45[v47] = 9;
          *v43 = v44 + 3;
          *(_QWORD *)&v43[8 * v47 + 16] = v12;
          sub_22E4D6448((uint64_t)(v43 + 336), v7, 1);
          sub_22F0D4E74(v65);
          sub_22E4D6448((uint64_t)(v43 + 336), v48, 1);
          LODWORD(v57) = v7;
          v60 = v41;
          v59 = v42;
          v49 = (_OWORD *)sub_22E3B8AAC(v42);
          v58 = v49;
          v50 = *((_OWORD *)v43 + 5);
          v52 = *((_OWORD *)v43 + 2);
          v51 = *((_OWORD *)v43 + 3);
          v49[4] = *((_OWORD *)v43 + 4);
          v49[5] = v50;
          v49[2] = v52;
          v49[3] = v51;
          v53 = *((_OWORD *)v43 + 1);
          *v49 = *(_OWORD *)v43;
          v49[1] = v53;
          for (i = 96; i != 336; i += 24)
            std::string::operator=((std::string *)((char *)v49 + i), (const std::string *)&v43[i]);
          sub_22E78D560((uint64_t)(v49 + 21), (uint64_t)(v43 + 336));
          sub_22E78D658((uint64_t)(v49 + 28), (uint64_t *)v43 + 56);
          sub_22ED1231C((uint64_t)v75, (int *)&v57, v11, v40, (int)&v65, 1u, "", 0, 0);
          if (v58 && v59)
          {
            sub_22E3BB10C(v59, (unint64_t)v58);
            v58 = 0;
          }
          sub_22E3BB10C(v42, (unint64_t)v43);
          return (unsigned int *)sub_22EC3CE2C((uint64_t)v66);
        }
        sub_22EC3CE2C((uint64_t)v66);
      }
    }
  }
  sub_22E8FCA40(v11, v7, v10, 0, (uint64_t)v66);
  if (v70)
  {
    v13 = v68;
    if (!v68)
    {
      v13 = (unsigned __int8 *)sub_22E3B8AAC(v69);
      v68 = v13;
    }
    v14 = v8;
    v13[*v13 + 1] = 2;
    v15 = v68;
  }
  else
  {
    if (!v72)
      goto LABEL_10;
    v33 = v67;
    v34 = (uint64_t *)(*(_QWORD *)v66 + 12784);
    if (v67)
      v33 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v67 + 32))(v67);
    v62[0] = v33;
    v35 = sub_22F2F1D6C(v34, v62);
    v36 = v35[1] + 32 * v71;
    v39 = *(unsigned __int8 **)(v36 + 8);
    v38 = (unsigned __int8 **)(v36 + 8);
    v37 = v39;
    if (!v39)
    {
      v37 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v38[1]);
      *v38 = v37;
    }
    v14 = v8;
    v37[*v37 + 1] = 2;
    v15 = *v38;
  }
  v16 = *v15;
  *v15 = v16 + 1;
  *(_QWORD *)&v15[8 * v16 + 16] = v14;
LABEL_10:
  v62[0] = *(_QWORD *)(v6 + 8);
  v17 = sub_22E8901B8((uint64_t)v66, v62);
  v18 = sub_22E8901B8(v17, &v55);
  v19 = sub_22E8906A0(v18, &v56);
  sub_22F0D4E74(v6);
  v57 = v20;
  sub_22E8906A0(v19, &v57);
  sub_22E903BEC(v66);
  v21 = v55;
  v22 = *(_QWORD *)(v55 & 0xFFFFFFFFFFFFFFF0);
  if (v22 && *(_BYTE *)(v22 + 16) == 39
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
    && (v22 = sub_22F10CF48(v22)) != 0)
  {
    v21 = *(_QWORD *)(v22 + 32);
    v23 = 1;
  }
  else
  {
    v23 = 0;
  }
  v24 = *(_QWORD *)(v6 + 8);
  result = *(unsigned int **)(v24 & 0xFFFFFFFFFFFFFFF0);
  if (result && *((_BYTE *)result + 16) == 39
    || *(_BYTE *)(*(_QWORD *)(*((_QWORD *)result + 1) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
    && (result = (unsigned int *)sub_22F10CF48((uint64_t)result)) != 0)
  {
    v24 = *((_QWORD *)result + 4);
    --v23;
  }
  if (!v23)
  {
    result = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) == 45
           ? *(unsigned int **)(*(_QWORD *)(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
           : 0;
    v26 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                   + 16) == 45
        ? *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
        : 0;
    if (result && v26 != 0)
    {
      v28 = sub_22F10C2A4((uint64_t)result);
      if (v28)
      {
        if ((*(_DWORD *)(v28 + 28) & 0x7Fu) - 35 >= 3)
          v29 = 0;
        else
          v29 = v28;
      }
      else
      {
        v29 = 0;
      }
      v62[0] = v29;
      if ((*(_BYTE *)(v29 + 74) & 1) == 0)
      {
        sub_22E8FCA40(v11, *(_DWORD *)(v29 + 24), 0x17F5u, 0, (uint64_t)v66);
        sub_22E890024((uint64_t)v66, v62);
        sub_22E903BEC(v66);
      }
      result = (unsigned int *)sub_22F10C2A4(v26);
      if (result)
      {
        if ((result[7] & 0x7F) - 35 >= 3)
          v32 = 0;
        else
          v32 = (uint64_t)result;
      }
      else
      {
        v32 = 0;
      }
      v57 = v32;
      if ((*(_BYTE *)(v32 + 74) & 1) == 0)
      {
        sub_22E8FCA40(v11, *(_DWORD *)(v32 + 24), 0x17F5u, 0, (uint64_t)v66);
        sub_22E890024((uint64_t)v66, &v57);
        return sub_22E903BEC(v66);
      }
    }
  }
  return result;
}

uint64_t sub_22E960DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t result;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t v28;
  BOOL v29;
  uint64_t *v30;
  uint64_t v31;
  int v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  BOOL v44;
  int v45;

  v5 = *(_QWORD *)(a1 + 104);
  v6 = a2 & 0xFFFFFFFFFFFFFFFELL;
  sub_22EFF605C(a2 & 0xFFFFFFFFFFFFFFFELL);
  result = sub_22F1CF68C(*(_QWORD *)(v5 + 32), 0x18BEu, v7, v5);
  if ((_DWORD)result == 1)
    return result;
  v9 = (uint64_t *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v9;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if ((v11 == 10
     || (*(_BYTE *)(v10 + 16) == 39 || v11 == 39 && (v10 = sub_22F10CF48(v10)) != 0)
     && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                 + 8) & 0xFFFFFFFFFFFFFFF0)
                                         + 16)
      - 25 <= 1)
    && ((v12 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0)) != 0 && *(_BYTE *)(v12 + 16) == 39
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
     && (v12 = sub_22F10CF48(v12)) != 0)
    && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 25 < 2)
  {
    goto LABEL_8;
  }
  v28 = *v9;
  v29 = *v9 && *(_BYTE *)(*v9 + 16) == 31;
  if ((v29
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 31
     && (v28 = sub_22F10CF48(v28)) != 0)
    && sub_22F28C8B4(v28)
    && ((v40 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0)) != 0 && *(_BYTE *)(v40 + 16) == 31
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v40 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 31
     && (v40 = sub_22F10CF48(v40)) != 0)
    && sub_22F28C8B4(v40))
  {
LABEL_8:
    v13 = sub_22F10ACF8(*v9);
    v14 = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0);
    if (v14)
      v15 = *(unsigned __int8 *)(v14 + 16) - 27 > 0xFFFFFFFD;
    else
      v15 = 0;
    if (!v15)
      v14 = sub_22F10CF48(*(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0));
    v16 = *(_QWORD *)(sub_22F10ACF8(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0);
    if (v16)
      v17 = *(unsigned __int8 *)(v16 + 16) - 27 >= 0xFFFFFFFE;
    else
      v17 = 0;
    if (v17)
      goto LABEL_18;
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 25 > 1)
    return 1;
  v30 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFF0);
  v31 = *v30;
  if (!*v30 || (v32 = *(_DWORD *)(v31 + 16), (v32 & 0xFE) != 0x28))
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v31 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      return 1;
    v31 = sub_22F10CF48(v31);
    if (!v31)
      return 1;
    v32 = *(_DWORD *)(v31 + 16);
  }
  if ((v32 & 0x100000) != 0)
  {
    do
    {
      v31 = *(_QWORD *)(*(_QWORD *)(v31 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (v31)
      {
        v41 = *(_DWORD *)(v31 + 16);
        if ((v41 & 0xFE) == 0x28)
          continue;
      }
      v31 = sub_22F10CF48(v31);
      v41 = *(_DWORD *)(v31 + 16);
    }
    while ((v41 & 0x100000) != 0);
  }
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v31 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 25 > 1)
    return 1;
  v14 = *v9;
  if (!v14 || *(unsigned __int8 *)(v14 + 16) - 27 <= 0xFFFFFFFD)
    v14 = sub_22F10CF48(v14);
  v42 = *v30;
  if (!*v30 || (v43 = *(_DWORD *)(v42 + 16), (v43 & 0xFE) != 0x28))
  {
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v42 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      goto LABEL_97;
    v42 = sub_22F10CF48(v42);
    if (!v42)
      goto LABEL_97;
    v43 = *(_DWORD *)(v42 + 16);
  }
  if ((v43 & 0x100000) != 0)
  {
    do
    {
      v42 = *(_QWORD *)(*(_QWORD *)(v42 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (v42)
      {
        v45 = *(_DWORD *)(v42 + 16);
        if ((v45 & 0xFE) == 0x28)
          continue;
      }
      v42 = sub_22F10CF48(v42);
      v45 = *(_DWORD *)(v42 + 16);
    }
    while ((v45 & 0x100000) != 0);
  }
  v30 = (uint64_t *)(*(_QWORD *)(v42 + 32) & 0xFFFFFFFFFFFFFFF0);
LABEL_97:
  v16 = *v30;
  if (v16)
    v44 = *(unsigned __int8 *)(v16 + 16) - 27 > 0xFFFFFFFD;
  else
    v44 = 0;
  if (!v44)
LABEL_17:
    v16 = sub_22F10CF48(v16);
LABEL_18:
  v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v18)
    v19 = (*(_DWORD *)(v18 + 16) & 0xFF800FF) == 86507531;
  else
    v19 = 0;
  if (v19)
  {
    v20 = v14;
    if ((*(_BYTE *)(v14 + 16) == 26
       || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
       && (v20 = sub_22F10CF48(v14)) != 0)
      && (*(_DWORD *)(v20 + 20) & 0x83FFFC0) == 0)
    {
      return 1;
    }
  }
  v21 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v21 && (*(_DWORD *)(v21 + 16) & 0xFF800FF) == 86507531)
  {
    v23 = v16;
    if ((*(_BYTE *)(v16 + 16) == 26
       || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
       && (v23 = sub_22F10CF48(v16)) != 0)
      && (*(_DWORD *)(v23 + 20) & 0x83FFFC0) == 0)
    {
      return 1;
    }
  }
  result = sub_22E9625A0(*(_QWORD *)(v14 + 24), *(_QWORD *)(v16 + 24), *(_QWORD *)(a1 + 88));
  if (!(_DWORD)result)
    return result;
  if (*(_BYTE *)(v14 + 16) == 25
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 25 && sub_22F10CF48(v14)
    || *(_BYTE *)(v16 + 16) == 25
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 25 && sub_22F10CF48(v16))
  {
    return 1;
  }
  v24 = *(_QWORD *)(v14 + 16);
  v25 = (unsigned __int16)(v24 >> 38);
  v26 = *(_QWORD *)(v16 + 16);
  v27 = (unsigned __int16)(v26 >> 38);
  if (v25 <= v27)
  {
    if ((v24 & 0x800000000000000) != 0)
    {
      v27 = (unsigned __int16)(v24 >> 38);
      goto LABEL_65;
    }
    v17 = v25 >= v27;
    v27 = (unsigned __int16)(v24 >> 38);
    if (v17)
      goto LABEL_65;
    return 0;
  }
  if ((v26 & 0x800000000000000) == 0)
    return 0;
LABEL_65:
  if (!v27)
    return 1;
  v33 = (uint64_t *)(v14 + 40);
  v34 = (uint64_t *)(v16 + 40);
  v35 = v27 - 1;
  do
  {
    v37 = *v33++;
    v36 = v37;
    v38 = *v34++;
    result = sub_22E9625A0(v36, v38, *(_QWORD *)(a1 + 88));
    v17 = v35-- != 0;
    v39 = v17;
  }
  while ((_DWORD)result && (v39 & 1) != 0);
  return result;
}

uint64_t sub_22E96133C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (*(_BYTE *)(a1 + 80))
  {
    sub_22E8AEE74((unsigned __int8 **)(a1 + 32), a2);
  }
  else if (*(_BYTE *)(a1 + 92))
  {
    v5 = (uint64_t *)(*(_QWORD *)a1 + 12784);
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
      v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
    v8 = v6;
    v7 = sub_22F2F1D6C(v5, &v8);
    sub_22E8AEE74((unsigned __int8 **)(v7[1] + 32 * *(unsigned int *)(a1 + 88) + 8), a2);
  }
  return a1;
}

uint64_t sub_22E9613DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, unint64_t *a6, uint64_t *a7, uint64_t *a8)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t *v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  if (a5 && (a4 & 1) == 0 && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 2000) + 1) & 0x40) == 0)
    return 0;
  v42 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 8) | a2 & 7;
  v47 = v42;
  v10 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) | a3 & 7;
  v46 = v10;
  v11 = 1;
  LODWORD(v9) = 1;
  while (2)
  {
    v12 = *(_QWORD *)(a1 + 88);
    v13 = *(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
    {
      v46 = sub_22F10ACF8(v13);
      v14 = 1;
      goto LABEL_40;
    }
    v14 = 1;
    if ((sub_22EF68220(*(_QWORD *)(a1 + 88), &v47, (unint64_t *)&v46, 1) & 1) == 0)
    {
      v15 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFF0);
      v16 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v47 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 16);
      if (v16 <= 0x1E)
      {
        if (v16 == 2)
        {
LABEL_19:
          v17 = 4;
          goto LABEL_20;
        }
        if (v16 == 10)
        {
          v17 = 3;
          goto LABEL_20;
        }
      }
      else
      {
        if (v16 == 31)
        {
          v17 = 2;
          goto LABEL_20;
        }
        v17 = 1;
        if (v16 == 32 || v16 == 39)
        {
LABEL_20:
          v18 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                   + 16);
          if (v18 <= 0x1E)
          {
            if (v18 == 2)
            {
LABEL_30:
              v14 = 4;
              goto LABEL_31;
            }
            if (v18 != 10)
              goto LABEL_29;
            v14 = 3;
          }
          else if (v18 == 31)
          {
            v14 = 2;
          }
          else if (v18 != 32 && v18 != 39)
          {
LABEL_29:
            if (v18 == 4)
              goto LABEL_30;
            return 0;
          }
LABEL_31:
          v19 = sub_22EF5C728(v12, v47);
          if (v19)
            v20 = *(_QWORD *)(v19 + 32);
          else
            v20 = sub_22F10ACF8(*v15);
          v47 = v20;
          v21 = v46;
          v22 = sub_22EF5C728(v12, v46);
          if (v22)
            v23 = *(_QWORD *)(v22 + 32);
          else
            v23 = sub_22F10ACF8(*(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF0));
          v46 = v23;
          if (v17 == v14)
            v14 = 2;
          else
            v14 = 3;
          goto LABEL_40;
        }
      }
      if (v16 != 4)
        return 0;
      goto LABEL_19;
    }
    while (1)
    {
LABEL_40:
      sub_22EF68100(v12, &v47, (unint64_t *)&v46, 1);
      v24 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFF0);
      v25 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v47 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 16);
      if (v25 <= 0x27)
      {
        if (v25 == 2)
          goto LABEL_44;
        if (((1 << v25) & 0x8180000400) != 0)
          goto LABEL_59;
      }
      if ((_DWORD)v25 != 4)
        goto LABEL_59;
LABEL_44:
      v26 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 16);
      if (v26 > 0x27)
        goto LABEL_48;
      if (((1 << v26) & 0x8180000400) == 0)
        break;
      v14 = 3;
LABEL_52:
      v27 = sub_22EF5C728(v12, v47);
      if (v27)
        v28 = *(_QWORD *)(v27 + 32);
      else
        v28 = sub_22F10ACF8(*v24);
      v47 = v28;
      v29 = v46;
      v30 = sub_22EF5C728(v12, v46);
      if (v30)
        v31 = *(_QWORD *)(v30 + 32);
      else
        v31 = sub_22F10ACF8(*(_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF0));
      v46 = (*(_DWORD *)((v46 & 0xFFFFFFFFFFFFFFF0) + 8) | v46) & 7 | (unint64_t)v31;
    }
    if (v26 == 2)
      goto LABEL_49;
LABEL_48:
    if ((_DWORD)v26 == 4)
    {
LABEL_49:
      if (v14 == 3)
        v14 = 3;
      else
        v14 = 2;
      goto LABEL_52;
    }
LABEL_59:
    if (v14 <= (int)v9)
      v9 = v9;
    else
      v9 = v14;
    v44 = 0;
    v45 = 0;
    sub_22EF67F34(*(_QWORD *)(a1 + 88), v47, &v45);
    sub_22EF67F34(*(_QWORD *)(a1 + 88), v46, &v44);
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v47 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                          + 16)
       - 33 < 2
      || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                          + 16)
       - 33 <= 1)
    {
      LODWORD(v45) = v45 & 0xFFFFFFFE;
    }
    if (!a4 || (v32 = v45 & 7, v33 = v44 & 7, v43 = v33, (_DWORD)v32 == (_DWORD)v33))
    {
LABEL_71:
      if (a5)
      {
        v34 = (v44 >> 6) & 7;
        v35 = (v45 >> 6) & 7;
        if (v34 != v35 && (v34 == 3 || v35 == 3 || (v44 & 1) == 0 && v34 && v35))
          return v9;
      }
      if ((v11 & 1) == 0)
        goto LABEL_84;
      if ((v44 & 1) != 0)
      {
        v11 = 1;
        goto LABEL_86;
      }
      if (a6)
        *a6 = v42;
      if (a7)
      {
        v11 = 0;
        *a7 = v10;
      }
      else
      {
LABEL_84:
        v11 = 0;
      }
LABEL_86:
      v10 = v46;
      v42 = v47;
      continue;
    }
    break;
  }
  if (a8)
  {
    v48 = v45 & 7;
    sub_22E96251C((unsigned int *)&v48, v33);
    *a8 = v48;
  }
  if ((sub_22E95F24C((unsigned int *)&v43, v32) & 1) != 0)
  {
    if ((v11 & 1) != 0)
      goto LABEL_71;
  }
  else
  {
    if (a6)
      *a6 = v42;
    if (a7)
      *a7 = v10;
  }
  return v9;
}

unint64_t sub_22E9618B0(unint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  _QWORD *v14;
  unsigned int v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  BOOL v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25[24];
  uint64_t v26;
  uint64_t v27;

  v9 = result;
  v10 = *(_QWORD *)(a3 + 8);
  v26 = v10;
  v27 = a4;
  v11 = a5[9];
  if ((*(_BYTE *)(v11 + 104) & 0x20) != 0 && (*(_BYTE *)(v11 + 121) & 0x10) == 0)
  {
    result = sub_22F10ACF8(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0));
    v12 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v12 & 8) != 0 && (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x6800)
    {
      v13 = *(_DWORD *)a2;
      v14 = a5;
      v15 = 3849;
LABEL_22:
      sub_22E8FCA40(v14, v13, v15, 0, (uint64_t)v25);
      v23 = sub_22E8901B8((uint64_t)v25, &v26);
      v24 = sub_22E8901B8(v23, &v27);
      sub_22E8906A0(v24, a2);
      return (unint64_t)sub_22E903BEC(v25);
    }
  }
  if (v9)
  {
    v16 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFF0);
    result = sub_22F110744(*(_QWORD *)(v10 & 0xFFFFFFFFFFFFFFF0), a5[11]);
    if ((_DWORD)result)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(*v16 + 8) & 0xFFFFFFFFFFFFFFF0);
      v18 = *(_DWORD *)(v17 + 16);
      v19 = v17 && (v18 & 0xFF800FF) == 87031819;
      v20 = v19;
      if (v18 != 44 && !v20)
      {
        result = sub_22F0085E8(a3, a5[11], 0);
        if ((result & 1) == 0)
        {
          v21 = (uint64_t *)(a4 & 0xFFFFFFFFFFFFFFF0);
          v22 = sub_22EF5CDF0(a5[11], *(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0));
          result = sub_22EF5CDF0(a5[11], *v16);
          if (v22 > result)
          {
            if (sub_22F10DFD8(*v21))
              v15 = 6689;
            else
              v15 = 6688;
            v13 = *(_DWORD *)a2;
            v14 = a5;
            goto LABEL_22;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22E961A34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (!v3 || *(_BYTE *)(v3 + 16) != 39)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
      return 0;
    result = sub_22F10CF48(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0));
    v3 = result;
    if (!result)
      return result;
  }
  result = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (!result || *(_BYTE *)(result + 16) != 39)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
    {
      result = sub_22F10CF48(result);
      if (!result)
        return result;
      goto LABEL_9;
    }
    return 0;
  }
LABEL_9:
  v5 = *(_QWORD *)((*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v5 & 8) != 0)
    v6 = *(_DWORD *)((v5 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
  else
    v6 = 0;
  v7 = *(_QWORD *)((*(_QWORD *)(result + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v7 & 8) != 0)
    v8 = *(_DWORD *)((v7 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
  else
    v8 = 0;
  return v6 != v8;
}

uint64_t sub_22E961B20(uint64_t result, _QWORD *a2, uint64_t a3)
{
  uint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;
  BOOL v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17[24];
  uint64_t v18;
  uint64_t v19;

  v18 = *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFFFELL) + 8);
  v19 = a3;
  v3 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFF0);
  v4 = a3 & 0xFFFFFFFFFFFFFFF0;
  if ((*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFF0) + 8) | v18 & 7) != (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) | a3 & 7))
  {
    if ((v5 = a3, v7 = (_QWORD *)result, (result = *v3) != 0) && *(_BYTE *)(result + 16) == 39
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
      && (result = sub_22F10CF48(result)) != 0
      && (*(_BYTE *)(result + 16) == 39
       || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
       && (result = sub_22F10CF48(result)) != 0))
    {
      v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v8 && (*(_DWORD *)(v8 + 16) & 0xFF800FF) == 115867659)
      {
        result = *(_QWORD *)v4;
        if (*(_BYTE *)(*(_QWORD *)v4 + 16) == 39)
        {
          v5 = sub_22F10ACF8(result);
          result = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0);
        }
        if ((*(_BYTE *)(result + 8) & 0xF) != 0)
          result = (uint64_t)sub_22F10D2BC(v5);
        v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v10)
          v11 = (*(_DWORD *)(v10 + 16) & 0xFF800FF) == 86507531;
        else
          v11 = 0;
        if (!v11)
        {
          sub_22EFF605C(*a2 & 0xFFFFFFFFFFFFFFFELL);
          sub_22E8FCA40(v7, v12, 0x18C0u, 0, (uint64_t)v17);
          v13 = sub_22E8901B8((uint64_t)v17, &v18);
          v14 = sub_22E8901B8(v13, &v19);
          sub_22F0D4E74(*a2 & 0xFFFFFFFFFFFFFFFELL);
          v16 = v15;
          sub_22E8906A0(v14, &v16);
          return (uint64_t)sub_22E903BEC(v17);
        }
      }
    }
  }
  return result;
}

void sub_22E961CF8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  int v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  unsigned __int8 *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  int v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unsigned int v30;
  uint64_t v31;
  _WORD *v32;
  unint64_t v33;
  _QWORD *v34;
  void *v35;
  size_t v36;
  _QWORD *v37;
  void *v38;
  size_t v39;
  _WORD *v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  _DWORD *v44;
  _BOOL4 v45;
  uint64_t v46;
  int v47;
  uint64_t *v48;
  unsigned int v49;
  unsigned int v50;
  _DWORD *v51;
  unsigned __int16 *v52;
  _BOOL4 v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  size_t v57;
  const void *v58;
  size_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _DWORD v64[6];
  void *v65;
  char v66;
  unsigned int v67[24];
  _BYTE v68[24];
  unint64_t v69;
  _WORD *v70;
  uint64_t v71;
  char *v72;
  size_t v73;
  _QWORD v74[2];
  uint64_t v75;
  uint64_t v76;
  void *v77;
  __int128 v78;
  _BYTE v79[64];
  unsigned __int16 *v80;
  uint64_t v81;
  _QWORD v82[13];

  v82[12] = *MEMORY[0x24BDAC8D0];
  v76 = a4;
  v4 = (uint64_t *)(*(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFFFELL) + 8) & 7 | v4[1]) != (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) | a3 & 7))
  {
    if ((v6 = a4, (v9 = *v4) != 0) && *(_BYTE *)(v9 + 16) == 39
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
      && (v9 = sub_22F10CF48(v9)) != 0)
    {
      if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                    + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 16)
         - 25 <= 1
        && ((v10 = *v5) != 0 && *(_BYTE *)(v10 + 16) == 39
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
         && (v10 = sub_22F10CF48(v10)) != 0)
        && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                    + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 16)
         - 25 <= 1)
      {
        v11 = *v4;
        if (!*v4 || *(_BYTE *)(v11 + 16) != 39)
          v11 = sub_22F10CF48(v11);
        v12 = *(_QWORD *)(*(_QWORD *)(v11 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v12)
          v13 = *(unsigned __int8 *)(v12 + 16) - 27 > 0xFFFFFFFD;
        else
          v13 = 0;
        if (!v13)
          v12 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(v11 + 32) & 0xFFFFFFFFFFFFFFF0));
        v14 = *v5;
        if (!*v5 || *(_BYTE *)(v14 + 16) != 39)
          v14 = sub_22F10CF48(v14);
        v15 = *(_QWORD *)(*(_QWORD *)(v14 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v15 || *(unsigned __int8 *)(v15 + 16) - 27 <= 0xFFFFFFFD)
          v15 = sub_22F10CF48(v15);
        v16 = (*(_DWORD *)(v12 + 16) >> 19) & 0x1F;
        v17 = (*(_DWORD *)(v15 + 16) >> 19) & 0x1F;
        if (v16 != v17)
        {
          v18 = sub_22EFFA6B0((unsigned __int8 *)(*a2 & 0xFFFFFFFFFFFFFFFELL));
          v19 = *v18;
          if (v19 == 233)
          {
            if ((*(_DWORD *)v18 & 0x7C0000) == 0x100000)
            {
              v18 = sub_22EFFA6B0(*((unsigned __int8 **)v18 + 2));
              v19 = *v18;
            }
            else
            {
              v19 = *(_DWORD *)v18;
            }
          }
          if (v19 == 161)
          {
            v20 = (*(_DWORD *)(*((_QWORD *)v18 + 2) + 28) & 0x7Eu) - 52 >= 6 ? 0 : *((_QWORD *)v18 + 2);
            v75 = v20;
            if (v20)
            {
              v21 = *(_QWORD *)(a1 + 88);
              v22 = sub_22EFBF68C(v20);
              v23 = sub_22EFBAEF8(v20);
              v24 = sub_22EF72F20(v21, v22, v23, 0);
              if (v17 != v24 && v16 == v24)
              {
                v74[0] = sub_22F40A550(v16);
                v74[1] = v25;
                v72 = sub_22F40A550(v17);
                v73 = v26;
                sub_22E8FCA40((_QWORD *)a1, v6, 0x18BDu, 0, (uint64_t)&v80);
                v27 = sub_22F2F2210((uint64_t)&v80, (uint64_t)v74);
                v28 = sub_22F2F2210(v27, (uint64_t)&v72);
                sub_22E8906A0(v28, &v76);
                sub_22E903BEC((unsigned int *)&v80);
                if (sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x18BDu, v76, *(_QWORD *)(a1 + 104)) != 1)
                {
                  v29 = &v70;
                  v30 = *(_DWORD *)(*(_QWORD *)(v20 + 112) + 24);
                  v31 = *(_QWORD *)(a1 + 80);
                  v80 = (unsigned __int16 *)v82;
                  v81 = 0x600000000;
                  v77 = v79;
                  v78 = xmmword_22F44E300;
                  sub_22F242C48((uint64_t)v68, (uint64_t)&v77);
                  v32 = v70;
                  v33 = v69 - (_QWORD)v70;
                  if ((**(_BYTE **)(a1 + 72) & 0x20) != 0)
                  {
                    if (v33 > 1)
                    {
                      *v70 = 24415;
                      v38 = ++v70;
                      v37 = v68;
                    }
                    else
                    {
                      v37 = (_QWORD *)llvm::raw_ostream::write((llvm::raw_ostream *)v68, "__");
                      v29 = v37 + 4;
                      v38 = (void *)v37[4];
                    }
                    v39 = v73;
                    if (v73 <= v37[3] - (_QWORD)v38)
                    {
                      if (v73)
                      {
                        memcpy(v38, v72, v73);
                        *v29 += v39;
                      }
                    }
                    else
                    {
                      llvm::raw_ostream::write((llvm::raw_ostream *)v37, v72);
                    }
                    v51 = (_DWORD *)sub_22E3CB704((llvm::StringMapImpl *)(v31 + 544), *(const void **)v71, *(_QWORD *)(v71 + 8));
                    v53 = sub_22F1D2F98(v51, *(uint64_t **)(a1 + 72));
                    if (v53)
                      v54 = *(_QWORD *)v51 & 0x1FFLL;
                    else
                      v54 = 5;
                    if (v53)
                      v51 = 0;
                    v55 = v81;
                    if (v81 >= HIDWORD(v81))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v55 = v81;
                    }
                    v52 = &v80[8 * v55];
                    *(_QWORD *)v52 = v54;
                  }
                  else
                  {
                    if (v33 > 0xE)
                    {
                      *(_QWORD *)v70 = *(_QWORD *)"__attribute__((";
                      *(_QWORD *)((char *)v32 + 7) = *(_QWORD *)"bute__((";
                      v35 = (char *)v70 + 15;
                      v70 = (_WORD *)((char *)v70 + 15);
                      v34 = v68;
                    }
                    else
                    {
                      v34 = (_QWORD *)llvm::raw_ostream::write((llvm::raw_ostream *)v68, "__attribute__((");
                      v29 = v34 + 4;
                      v35 = (void *)v34[4];
                    }
                    v36 = v73;
                    if (v73 <= v34[3] - (_QWORD)v35)
                    {
                      if (v73)
                      {
                        memcpy(v35, v72, v73);
                        *v29 += v36;
                      }
                    }
                    else
                    {
                      v34 = (_QWORD *)llvm::raw_ostream::write((llvm::raw_ostream *)v34, v72);
                    }
                    v40 = (_WORD *)v34[4];
                    if (v34[3] - (_QWORD)v40 > 1uLL)
                    {
                      *v40 = 10537;
                      v34[4] += 2;
                    }
                    else
                    {
                      llvm::raw_ostream::write((llvm::raw_ostream *)v34, "))");
                    }
                    v41 = v81;
                    if (v81 >= HIDWORD(v81))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v41 = v81;
                    }
                    *(_OWORD *)&v80[8 * v41] = xmmword_22F465870;
                    v42 = v81 + 1;
                    LODWORD(v81) = v42;
                    if (v42 >= HIDWORD(v81))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v42 = v81;
                    }
                    *(_OWORD *)&v80[8 * v42] = xmmword_22F465880;
                    v43 = v81 + 1;
                    LODWORD(v81) = v43;
                    if (v43 >= HIDWORD(v81))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v43 = v81;
                    }
                    *(_OWORD *)&v80[8 * v43] = xmmword_22F465880;
                    LODWORD(v81) = v81 + 1;
                    v44 = (_DWORD *)sub_22E3CB704((llvm::StringMapImpl *)(v31 + 544), v72, v73);
                    v45 = sub_22F1D2F98(v44, *(uint64_t **)(a1 + 72));
                    if (v45)
                      v46 = *(_QWORD *)v44 & 0x1FFLL;
                    else
                      v46 = 5;
                    if (v45)
                      v44 = 0;
                    v47 = v81;
                    if (v81 >= HIDWORD(v81))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v47 = v81;
                    }
                    v48 = (uint64_t *)&v80[8 * v47];
                    *v48 = v46;
                    v48[1] = (uint64_t)v44;
                    v49 = v81 + 1;
                    LODWORD(v81) = v49;
                    if (v49 >= HIDWORD(v81))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v49 = v81;
                    }
                    *(_OWORD *)&v80[8 * v49] = xmmword_22F465890;
                    v50 = v81 + 1;
                    LODWORD(v81) = v50;
                    if (v50 >= HIDWORD(v81))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod();
                      v50 = v81;
                    }
                    v51 = 0;
                    v52 = &v80[8 * v50];
                    *(_QWORD *)v52 = 22;
                  }
                  *((_QWORD *)v52 + 1) = v51;
                  LODWORD(v81) = v81 + 1;
                  v56 = sub_22F18DFA4(v31, v30, v80, v81);
                  if (v57)
                  {
                    v58 = (const void *)v56;
                    v59 = v57;
                    v60 = 0;
                    *(_QWORD *)&v78 = 0;
                    if (*((_QWORD *)&v78 + 1) < v57)
                    {
                      llvm::SmallVectorBase<unsigned long long>::grow_pod();
                      v60 = v78;
                    }
                    memcpy((char *)v77 + v60, v58, v59);
                    *(_QWORD *)&v78 = v78 + v59;
                  }
                  v61 = v70;
                  if ((unint64_t)v70 >= v69)
                  {
                    llvm::raw_ostream::write((llvm::raw_ostream *)v68);
                  }
                  else
                  {
                    v70 = (_WORD *)((char *)v70 + 1);
                    *v61 = 32;
                  }
                  sub_22E8FCA40((_QWORD *)a1, v30, 0x1564u, 0, (uint64_t)v67);
                  v62 = sub_22E890024((uint64_t)v67, &v75);
                  v63 = sub_22F2F2210(v62, (uint64_t)&v72);
                  sub_22E729148(v77, v78, v30, 0, (uint64_t)v64);
                  sub_22E890748(v63, v64);
                  if (v66 < 0)
                    operator delete(v65);
                  sub_22E903BEC(v67);
                  llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v68);
                  if (v77 != v79)
                    free(v77);
                  if (v80 != (unsigned __int16 *)v82)
                    free(v80);
                }
              }
            }
          }
        }
      }
    }
  }
}

unsigned int *sub_22E96251C(unsigned int *result, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;

  if (a2 <= 7)
  {
    v2 = *result & ~(_DWORD)a2;
LABEL_3:
    *result = v2;
    goto LABEL_4;
  }
  v3 = *result & (~(_BYTE)a2 | 0xFFFFFFF8);
  if (((*result ^ a2) & 0x30) == 0)
    v3 &= 0xFFFFFFCF;
  if ((((unsigned __int16)v3 ^ (unsigned __int16)a2) & 0x1C0) == 0)
    v3 &= 0xFFFFFE3F;
  if ((v3 ^ a2) < 0x800)
    v3 &= 0x7FFu;
  *result = v3;
  if ((((unsigned __int16)v3 ^ (unsigned __int16)a2) & 0x600) == 0)
  {
    v2 = v3 & 0xFFFFF9FF;
    goto LABEL_3;
  }
LABEL_4:
  if (result[1] == HIDWORD(a2))
    result[1] = 0;
  return result;
}

BOOL sub_22E9625A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD v8[3];
  _QWORD v9[3];

  v4 = (uint64_t *)(a1 & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
    && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
  {
    return 1;
  }
  if (sub_22F110744(v5, a3)
    && sub_22F110744(*v6, a3)
    && (sub_22EF5CCD0(a3, *v4, (uint64_t)v9), sub_22EF5CCD0(a3, *v6, (uint64_t)v8), v9[0] == v8[0]))
  {
    return 1;
  }
  else
  {
    return *(_QWORD *)(v4[1] & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(v6[1] & 0xFFFFFFFFFFFFFFF0);
  }
}

uint64_t sub_22E962680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v9;
  int *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  uint64_t i;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unsigned int v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  int v65;
  BOOL v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  unsigned int v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  int v90;
  unint64_t v91;
  unsigned int v92;
  BOOL v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t j;
  int v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __n128 v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  int v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int *v147;
  unsigned int v148;
  int *v149;
  uint64_t v150;
  int v151;
  uint64_t v152[3];
  int v153;
  uint64_t v154;
  std::string __p;
  unint64_t v156;
  unint64_t v157;
  uint64_t v158;
  unint64_t v159;
  void (**v160)(_QWORD, uint64_t, _QWORD, uint64_t);
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  llvm *v165;
  unsigned int v166;
  _BYTE *v167;
  _BYTE *v168;
  uint64_t v169;
  int v170;
  _BYTE v171[32];
  uint64_t v172;
  void *v173;
  uint64_t v174;
  _BYTE v175[96];
  int v176;
  uint64_t v177;
  __int16 v178;
  char v179;
  uint64_t v180;

  v9 = MEMORY[0x24BDAC7A8]();
  v146 = v11;
  v147 = v10;
  v149 = v12;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = (_QWORD *)v9;
  v180 = *MEMORY[0x24BDAC8D0];
  v150 = v13;
  v148 = v15 - 1;
  v22 = *v19;
  v23 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(v17 & 0xFFFFFFFFFFFFFFF0);
  if (v24 && (*(_DWORD *)(v24 + 16) & 0xFE) == 0x28
    || (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v24 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28
    && (v24 = sub_22F10CF48(v24)) != 0)
  {
    v25 = v22 & 0xFFFFFFFFFFFFFFFELL;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v24 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 41
      || (*(_DWORD *)v25 & 0x300) == 0x100)
    {
      if ((*(_BYTE *)(v24 + 18) & 0x10) != 0)
      {
        do
        {
          while (1)
          {
            v24 = *(_QWORD *)(*(_QWORD *)(v24 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v24)
              break;
            v26 = *(_DWORD *)(v24 + 16);
            if ((v26 & 0xFE) != 0x28)
              break;
            if ((v26 & 0x100000) == 0)
              goto LABEL_13;
          }
          v24 = sub_22F10CF48(v24);
        }
        while ((*(_DWORD *)(v24 + 16) & 0x100000) != 0);
      }
LABEL_13:
      v27 = sub_22E963B58(v21, *(_QWORD *)(v25 + 8) & 7 | *(_QWORD *)((*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF0) + 8), *(_QWORD *)((*(_QWORD *)(v24 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) | *(_QWORD *)(v24 + 32) & 7, v148 < 2, v14, *(_QWORD *)(v25 + 8), v18, v149, v147, v146);
      if ((_DWORD)v27)
        return v27;
    }
    else
    {
      *v149 = 2908;
    }
  }
  v28 = *v20;
  v29 = *v23;
  if (*v23 && *(_BYTE *)(v29 + 16) == 41
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v29 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 41
    && (v29 = sub_22F10CF48(*v23)) != 0)
  {
    v30 = v28 & 0xFFFFFFFFFFFFFFFELL;
    if ((*(_BYTE *)((v28 & 0xFFFFFFFFFFFFFFFELL) + 1) & 3) != 0)
    {
      v31 = *(_QWORD *)(v30 + 8);
      v32 = v29;
      if ((*(_BYTE *)(v29 + 18) & 0x10) != 0)
      {
        v32 = v29;
        do
        {
          while (1)
          {
            v32 = *(_QWORD *)(*(_QWORD *)(v32 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v32)
              break;
            v33 = *(_DWORD *)(v32 + 16);
            if ((v33 & 0xFE) != 0x28)
              break;
            if ((v33 & 0x100000) == 0)
              goto LABEL_28;
          }
          v32 = sub_22F10CF48(v32);
        }
        while ((*(_DWORD *)(v32 + 16) & 0x100000) != 0);
      }
LABEL_28:
      v34 = *(_QWORD *)(v32 + 32);
      v152[0] = v34;
      if (v148 <= 1)
      {
        v35 = v21[9];
        if (((*(_DWORD *)(v35 + 52) & 0x40000000) != 0 || (*(_BYTE *)(v35 + 104) & 0x20) != 0)
          && !sub_22E95F83C(v152, v31))
        {
          goto LABEL_69;
        }
        v36 = *(_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v36 + 8) & 0xF) != 0)
          v36 = (unint64_t)sub_22F10D2BC(v31);
        v31 = v36 & 0xFFFFFFFFFFFFFFF0;
        v37 = *(_QWORD *)(v152[0] & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v37 + 8) & 0xF) != 0)
          v37 = (unint64_t)sub_22F10D2BC(v152[0]);
        v34 = v37 & 0xFFFFFFFFFFFFFFF0;
        v152[0] = v37 & 0xFFFFFFFFFFFFFFF0;
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 0;
      sub_22F0D5A50(v30);
      v39 = sub_22ED0169C((uint64_t)v21, v38, v34, v31, (int *)&__p);
      if (v39 == 2)
      {
        if ((__p.__r_.__value_.__s.__data_[0] & 8) == 0)
        {
          v40 = 5;
          goto LABEL_294;
        }
        *v147 = 7;
        v160 = 0;
        v161 = (uint64_t)&v161;
        v162 = &v161;
        v163 = 0;
        v164 = 1;
        for (i = 5; i != 21; i += 2)
          (&v160)[i] = 0;
        v167 = v171;
        v168 = v171;
        v169 = 4;
        v170 = 0;
        v172 = 0;
        v173 = v175;
        v174 = 0x400000000;
        v176 = 0;
        v177 = 0;
        v178 = 257;
        v179 = 1;
        sub_22F0D5A50(v30);
        v44 = v43;
        v45 = *(_QWORD *)(v30 + 8);
        if ((*(_BYTE *)(v29 + 18) & 0x10) != 0)
        {
          do
          {
            while (1)
            {
              v29 = *(_QWORD *)(*(_QWORD *)(v29 + 32) & 0xFFFFFFFFFFFFFFF0);
              if (!v29)
                break;
              v46 = *(_DWORD *)(v29 + 16);
              if ((v46 & 0xFE) != 0x28)
                break;
              if ((v46 & 0x100000) == 0)
                goto LABEL_54;
            }
            v29 = sub_22F10CF48(v29);
          }
          while ((*(_DWORD *)(v29 + 16) & 0x100000) != 0);
        }
LABEL_54:
        if (sub_22EAAB2A0((uint64_t)v21, v44, v45, *(_QWORD *)(v29 + 32), (unint64_t *)&v160))
        {
          sub_22EAAB384((uint64_t)(v162 + 2), v146);
          if (v173 != v175)
            free(v173);
          if (v168 != v167)
            free(v168);
          if ((v164 & 1) == 0)
            llvm::deallocate_buffer(v165, (void *)(16 * v166));
          sub_22E687D9C(&v161);
          return 1;
        }
        if (v173 != v175)
          free(v173);
        if (v168 != v167)
          free(v168);
        if ((v164 & 1) == 0)
          llvm::deallocate_buffer(v165, (void *)(16 * v166));
        sub_22E687D9C(&v161);
      }
      else if (v148 >= 2 && v39)
      {
        if ((*(_DWORD *)v30 & 0x300) == 0x100)
          v41 = 2918;
        else
          v41 = 2931;
LABEL_45:
        *v149 = v41;
        return 3;
      }
    }
  }
LABEL_69:
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45)
  {
    v160 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB6EF8;
    LODWORD(v161) = 2899;
    if ((sub_22EE8B0B0((uint64_t)v21, v14, v18) & 1) != 0
      || (v160 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB6EF8,
          LODWORD(v161) = 2621,
          (sub_22EAB2EB4((uint64_t)v21, v14, v18, &v160) & 1) != 0))
    {
      *v149 = 0;
      return 3;
    }
  }
  LODWORD(v152[0]) = 9;
  v152[1] = 0;
  v152[2] = v18;
  v153 = 0;
  v154 = 0;
  if (v16 == 2)
  {
    v47 = a9 | (unint64_t)(v14 << 32) | 0x500;
  }
  else if (v16 == 1)
  {
    v47 = a9 | (unint64_t)(v14 << 32) | 0x400;
  }
  else
  {
    v47 = (v14 << 32) | 0x300;
  }
  __p.__r_.__value_.__r.__words[0] = v47;
  __p.__r_.__value_.__l.__size_ = v14;
  v159 = *v20 & 0xFFFFFFFFFFFFFFFELL;
  sub_22EC395BC(&v160, v21, v152, &__p, &v159, 1, 0, 1);
  if ((_DWORD)v160
    || v148 >= 2 && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
  {
    v48 = sub_22EC3DF80((int)&v160, (int)v21);
    if ((v48 & 1) != 0)
    {
      *v149 = 0;
      LODWORD(v27) = 3;
      v50 = 1;
    }
    else
    {
      v49 = 5;
      if ((_DWORD)v162)
      {
        if (*(_DWORD *)(v161 + 40 * v162 - 40) == 19)
          v49 = 21;
        else
          v49 = 5;
      }
      *v147 = v49;
      *v20 = v48;
      v50 = 1;
      LODWORD(v27) = 1;
    }
  }
  else
  {
    v50 = 0;
    LODWORD(v27) = 0;
  }
  sub_22EC3CE2C((uint64_t)&v160);
  if ((*v20 & 1) != 0)
    v27 = 3;
  else
    v27 = v27;
  if ((v50 & 1) == 0 && (*v20 & 1) == 0)
  {
    v51 = *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v52 = *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFFF0) + 8);
    v53 = v52 & 0xFFFFFFFFFFFFFFF0;
    v54 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v52 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v55 = *(_DWORD *)(v54 + 16);
    if (v54)
      v56 = v55 == 11;
    else
      v56 = 0;
    if (v56)
    {
      v58 = *v23;
      if ((v55 & 0xFF80000) == 0x6B80000
        && (v60 = *(_QWORD *)(*(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
        && (v61 = *(_DWORD *)(v60 + 16), v61 == 11)
        && ((v61 >> 19) & 0x1FE) - 210 < 8
        || ((v55 >> 19) & 0x1FE) - 210 <= 7
        && (v62 = *(_QWORD *)(*(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
        && (*(_DWORD *)(v62 + 16) & 0xFF800FF) == 0x6B8000B)
      {
        v40 = 42;
        goto LABEL_294;
      }
    }
    else if (v55 == 44)
    {
      v57 = sub_22F114198(*(_QWORD *)(v54 + 24));
      v58 = *v23;
      if ((*(_BYTE *)(v57 + 76) & 0x80) != 0)
      {
        v59 = *(_QWORD *)(*(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v59 && (*(_DWORD *)(v59 + 16) & 0xFF800FF) == 0x530000B)
        {
          v40 = 31;
          goto LABEL_294;
        }
        if (sub_22F110744(*v23, v21[11]))
        {
LABEL_136:
          v40 = 30;
          goto LABEL_294;
        }
        v58 = *v23;
        v81 = *(_QWORD *)(*(_QWORD *)(*v23 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v81)
        {
          v82 = *(_DWORD *)(v81 + 16);
          if (v82 == 11 && ((v82 >> 19) & 0x1FE) - 210 <= 7)
          {
            v40 = 32;
            goto LABEL_294;
          }
        }
      }
    }
    else
    {
      v58 = *v23;
    }
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 44)
    {
LABEL_146:
      if ((*(_BYTE *)(v21[9] + 104) & 0x20) != 0
        && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56)
      {
        v76 = *(_QWORD *)v53;
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v53 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56)
        {
          if (*(_BYTE *)(v58 + 16) != 56)
          {
            v58 = sub_22F10CF48(v58);
            v76 = *(_QWORD *)v53;
          }
          if (!v76 || *(_BYTE *)(v76 + 16) != 56)
            v76 = sub_22F10CF48(v76);
          v77 = *(unsigned int *)(v58 + 20);
          if ((_DWORD)v77 == *(_DWORD *)(v76 + 20))
          {
            v78 = (*(_DWORD *)(v58 + 16) >> 19) & 0xF;
            if ((_DWORD)v78 != ((*(_DWORD *)(v76 + 16) >> 19) & 0xF))
            {
              v79 = *(_QWORD *)(v76 + 32);
              if (*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v58 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v79 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
              {
                v40 = 28;
                goto LABEL_294;
              }
              v80 = sub_22EF63724(v21[11], v79, v77, v78);
              *v20 = sub_22E90092C((uint64_t)v21, *v20 & 0xFFFFFFFFFFFFFFFELL, v80, 28, 0, 0);
            }
            v40 = 29;
LABEL_294:
            *v147 = v40;
            return 1;
          }
          v58 = *v23;
        }
      }
      v83 = v51 & 7 | v52;
      if (v58 && *(_BYTE *)(v58 + 16) == 39
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
        && (v58 = sub_22F10CF48(v58)) != 0)
      {
        v84 = *(_QWORD *)v53;
        if (*(_QWORD *)v53 && *(_BYTE *)(v84 + 16) == 39
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v84 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
          && (v84 = sub_22F10CF48(v84)) != 0)
        {
          v27 = sub_22E963B58(v21, *(_QWORD *)(v84 + 32) & 7 | *(_QWORD *)((*(_QWORD *)(v84 + 32) & 0xFFFFFFFFFFFFFFF0) + 8), *(_QWORD *)(v58 + 32) & 7 | *(_QWORD *)((*(_QWORD *)(v58 + 32) & 0xFFFFFFFFFFFFFFF0) + 8), v148 < 2, v14, v51 & 7 | v52, v18, v149, v147, v146);
          if ((_DWORD)v27)
            return v27;
        }
        else
        {
          *v149 = 2934;
        }
      }
      v159 = v14;
      v85 = *v23;
      if (!*v23 || *(_BYTE *)(v85 + 16) != 31)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v85 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 31)
          goto LABEL_230;
        v85 = sub_22F10CF48(*v23);
        if (!v85)
          goto LABEL_230;
      }
      v86 = *v20 & 0xFFFFFFFFFFFFFFFELL;
      if (*(_QWORD *)(v86 + 8) != *(_QWORD *)(v21[11] + 16840)
        || (v87 = sub_22ED13340(v21, v86, v18, 0, &v158, 0)) == 0)
      {
        v90 = 0;
        v91 = v83;
        goto LABEL_206;
      }
      v88 = *(_WORD *)(v87 + 80) & 0x7F;
      v89 = -40;
      if (v88 > 0x46)
      {
        if (v88 != 83)
        {
          if (v88 == 71)
          {
            v89 = -56;
            goto LABEL_198;
          }
          if (v88 == 81)
            goto LABEL_198;
LABEL_193:
          v92 = v88 - 52;
          v93 = v88 - 33 >= 5;
          v94 = -48;
          if (!v93)
            v94 = -64;
          if (v92 >= 6)
            v89 = v94;
          else
            v89 = -72;
        }
      }
      else
      {
        if (v88 > 0x18)
          goto LABEL_192;
        if (v88 != 16)
        {
          if (((1 << v88) & 0x1066) != 0)
            goto LABEL_198;
          if (v88 != 24)
          {
LABEL_192:
            if (v88 == 70)
            {
              v89 = -64;
              goto LABEL_198;
            }
            goto LABEL_193;
          }
        }
        v89 = -48;
      }
LABEL_198:
      v95 = v21[11];
      v96 = *(_QWORD *)(v87 + 48);
      v97 = *(_QWORD *)(v87 + 72 + v89 + 16);
      v98 = (_QWORD *)(v97 & 0xFFFFFFFFFFFFFFF8);
      if ((v97 & 4) != 0)
        v98 = (_QWORD *)*v98;
      if (v98)
        v99 = (unint64_t)(v98 - 8);
      else
        v99 = 0;
      v100 = *(_QWORD *)(v99 + 48);
      if (!v100)
        v100 = sub_22EF6462C(v21[11], v99);
      v91 = sub_22F36A6C0(v95, v96, *(_QWORD *)(v100 & 0xFFFFFFFFFFFFFFF0));
      v90 = 1;
LABEL_206:
      v101 = *(_QWORD *)(v91 & 0xFFFFFFFFFFFFFFF0);
      if ((!v101 || *(_BYTE *)(v101 + 16) != 31)
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v101 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 31
         || (v101 = sub_22F10CF48(*(_QWORD *)(v91 & 0xFFFFFFFFFFFFFFF0))) == 0))
      {
        *v149 = 2932;
        goto LABEL_230;
      }
      if (*(_DWORD *)(*(_QWORD *)(v21[11] + 15088) + 148) == 11)
      {
        v144 = v53;
        v102 = v83;
        v103 = v90;
        v104 = v159;
        sub_22EE8B180(v21, v159);
        v105 = v104;
        v90 = v103;
        v83 = v102;
        v53 = v144;
        sub_22EE8B180(v21, v105);
      }
      if (*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v101 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v85 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
      {
LABEL_230:
        v115 = *(_QWORD *)v53;
        if (!*(_QWORD *)v53 || *(_BYTE *)(v115 + 16) != 39)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v115 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
            goto LABEL_238;
          v115 = sub_22F10CF48(v115);
          if (!v115)
            goto LABEL_238;
        }
        v116 = *(_QWORD *)(v115 + 32);
        v117 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v116 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v117 || (*(_DWORD *)(v117 + 16) & 0xFF800FF) != 86507531)
          goto LABEL_238;
        v123 = *v23;
        if (*v23 && *(_BYTE *)(v123 + 16) == 39)
          goto LABEL_262;
        v124 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v123 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v124 == 39)
        {
          v123 = sub_22F10CF48(v123);
          if (v123)
          {
LABEL_262:
            v125 = *(_QWORD *)(v123 + 32);
            if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v125 & 0xFFFFFFFFFFFFFFF0)
                                                                          + 8) & 0xFFFFFFFFFFFFFFF0)
                                                  + 16)
               - 27 <= 0xFFFFFFFD)
            {
              if (v148 < 2)
                goto LABEL_307;
              v126 = *(_QWORD *)((v125 & 0xFFFFFFFFFFFFFFF0) + 8);
              if ((v126 & 8) != 0)
              {
                v128 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFFFF0) + 0x18);
                v127 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
              }
              else
              {
                v127 = 0;
                v128 = 0;
              }
              v132 = v128 | (v126 | v125) & 7;
              v160 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))(v132 | v127);
              v133 = *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFFF0) + 8);
              if ((v133 & 8) != 0)
              {
                v134 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
                v135 = *(_QWORD *)((v133 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFE0FLL;
              }
              else
              {
                v134 = 0;
                v135 = 0;
              }
              if ((v136 = (v133 | v116) & 7,
                    LODWORD(v160) = v132 & 0xFFFFFE0F,
                    (v132 & 0xFFFFFE0F) == (v135 | v136))
                && HIDWORD(v127) == HIDWORD(v134)
                || sub_22E95F24C((unsigned int *)&v160, v135 | v136 | v134))
              {
LABEL_307:
                if (sub_22E961A34(v83, v18))
                  v40 = 66;
                else
                  v40 = 1;
                goto LABEL_294;
              }
              v41 = 2907;
              goto LABEL_45;
            }
            if (v148 >= 2 && (*(_BYTE *)v21[9] & 0x10) != 0)
            {
              sub_22E8FCA40(v21, v150, 0x14B1u, 0, (uint64_t)&v160);
              sub_22E8906A0((uint64_t)&v160, &v150);
              sub_22E903BEC((unsigned int *)&v160);
LABEL_240:
              v27 = 1;
              *v147 = 1;
              return v27;
            }
LABEL_238:
            v119 = *(_QWORD *)v53;
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v53 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
              && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32)
            {
              goto LABEL_240;
            }
            if (v148 >= 2)
            {
              if ((sub_22F334C20((uint64_t)v21, v18, *v20 & 0xFFFFFFFFFFFFFFFELL, v147) & 1) != 0)
                return 1;
              v119 = *(_QWORD *)v53;
              if (*(_QWORD *)v53)
              {
LABEL_243:
                if (*(_BYTE *)(v119 + 16) == 39)
                  goto LABEL_246;
              }
            }
            else if (v119)
            {
              goto LABEL_243;
            }
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v119 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
              || (v119 = sub_22F10CF48(v119)) == 0)
            {
LABEL_255:
              if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v53 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                    + 16)
                 - 29 > 1
                || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16)
                 - 29 > 1)
              {
                return 0;
              }
              if (!sub_22F32E16C(v21, v150, v18, v83, v147))
                return 1;
              goto LABEL_115;
            }
LABEL_246:
            v120 = *v23;
            if (*v23 && *(_BYTE *)(v120 + 16) == 39
              || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v120 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
              && (v120 = sub_22F10CF48(v120)) != 0)
            {
              v121 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v119 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
              if (v121)
              {
                if (*(_BYTE *)(v121 + 16) == 45)
                {
                  v122 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v120 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
                  if (v122)
                  {
                    if (*(_BYTE *)(v122 + 16) == 45)
                      *v149 = 2910;
                  }
                }
              }
            }
            goto LABEL_255;
          }
          v124 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        }
        if (v124 == 32)
        {
          v40 = 43;
          goto LABEL_294;
        }
        if (v148 <= 1 && v124 == 10)
        {
          v40 = 45;
          goto LABEL_294;
        }
        goto LABEL_238;
      }
      v142 = v90;
      v106 = *(_QWORD *)(v101 + 40) & 0xFFFFFFFFFFFFFFF0;
      v107 = *(_QWORD *)(v85 + 40) & 0xFFFFFFFFFFFFFFF0;
      v156 = v107;
      v157 = v106;
      v160 = 0;
      v161 = (uint64_t)&v161;
      v145 = v83;
      v162 = &v161;
      v163 = 0;
      v164 = 1;
      for (j = 5; j != 21; j += 2)
        (&v160)[j] = 0;
      v167 = v171;
      v168 = v171;
      v169 = 4;
      v170 = 0;
      v172 = 0;
      v173 = v175;
      v174 = 0x400000000;
      v176 = 0;
      v177 = 0;
      v178 = 257;
      v179 = 1;
      v109 = v159;
      v27 = 0;
      v143 = sub_22EAAB2A0((uint64_t)v21, v159, v106, v107, (unint64_t *)&v160);
      if (v143)
      {
        v152[0] = *(_QWORD *)(*(_QWORD *)(v107 + 8) & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0;
        v110 = sub_22EFB50E0(&v164, v152);
        if (((_DWORD)v110[1] & 1u) + (*((_DWORD *)v110 + 2) >> 1) >= 2)
        {
          sub_22F3AB3F4((uint64_t)&v160);
          HIBYTE(v178) = 1;
          sub_22EAAB2A0((uint64_t)v21, v159, v157, v156, (unint64_t *)&v160);
          sub_22EAAAFAC((uint64_t)v21, (unint64_t *)&v160, &__p);
          sub_22E8FCA40(v21, v159, 0xA45u, 0, (uint64_t)v152);
          v151 = 1;
          v138 = sub_22E8900C4((uint64_t)v152, &v151);
          v139 = sub_22E8901B8(v138, (uint64_t *)&v157);
          v140 = sub_22E8901B8(v139, (uint64_t *)&v156);
          v141 = sub_22E90749C(v140, &__p);
          sub_22E8906A0(v141, (uint64_t *)&v159);
          sub_22E903BEC((unsigned int *)v152);
          *v149 = 0;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          goto LABEL_220;
        }
        v111 = v172;
        if (v172)
        {
          sub_22E8FCA40(v21, v109, 0xEC6u, 0, (uint64_t)v152);
          v112 = sub_22E8901B8((uint64_t)v152, (uint64_t *)&v157);
          v113 = sub_22E8901B8(v112, (uint64_t *)&v156);
          __p.__r_.__value_.__r.__words[0] = v111 & 0xFFFFFFFFFFFFFFF0;
          v114 = sub_22E8901B8(v113, (uint64_t *)&__p);
          sub_22E8906A0(v114, (uint64_t *)&v159);
          sub_22E903BEC((unsigned int *)v152);
LABEL_219:
          *v149 = 0;
LABEL_220:
          v27 = 3;
          goto LABEL_221;
        }
        if (v148 >= 2
          && sub_22E90B400((uint64_t)v21, v109, v107, v106, (uint64_t)(v162 + 2), 5082, 0, 0) == 1)
        {
          goto LABEL_219;
        }
        if (v142)
        {
          v129 = sub_22ED13340(v21, *v20 & 0xFFFFFFFFFFFFFFFELL, v18, 1, &v158, 0);
          if (!v129)
            goto LABEL_219;
          v131 = sub_22ED147E8((uint64_t)v21, (unsigned __int8 *)(*v20 & 0xFFFFFFFFFFFFFFFELL), v158, v129, v130);
          *v20 = v131;
          if (v131 <= 1)
            goto LABEL_219;
        }
        sub_22EAAB384((uint64_t)(v162 + 2), v146);
        *v147 = 17;
        v27 = 1;
      }
LABEL_221:
      if (v173 != v175)
        free(v173);
      v83 = v145;
      if (v168 != v167)
        free(v168);
      if ((v164 & 1) == 0)
        llvm::deallocate_buffer(v165, (void *)(16 * v166));
      sub_22E687D9C(&v161);
      if ((v143 & 1) != 0)
        return v27;
      goto LABEL_230;
    }
    v160 = (void (**)(_QWORD, uint64_t, _QWORD, uint64_t))&unk_24FAB6EF8;
    LODWORD(v161) = 2899;
    if (sub_22EE8B0B0((uint64_t)v21, v14, v18))
    {
LABEL_115:
      *v20 = 1;
      return 3;
    }
    v63 = *(_QWORD *)(*(_QWORD *)v53 + 8) & 0xFFFFFFFFFFFFFFF0;
    v64 = *(_QWORD *)v63;
    v65 = *(_DWORD *)(*(_QWORD *)v63 + 16);
    if (*(_QWORD *)v63)
      v66 = v65 == 11;
    else
      v66 = 0;
    if (v66)
    {
      if (((*(_DWORD *)(*(_QWORD *)v63 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
        goto LABEL_138;
    }
    else if (v64 && v65 == 44)
    {
      v67 = sub_22F114198(*(_QWORD *)(v64 + 24));
      if ((*(_BYTE *)(v67 + 74) & 1) == 0 && *(_QWORD *)(v67 + 128) <= 7uLL)
      {
        v63 = *(_QWORD *)(*(_QWORD *)v53 + 8) & 0xFFFFFFFFFFFFFFF0;
LABEL_138:
        v73 = *(_QWORD *)v63;
        v74 = *(_DWORD *)(*(_QWORD *)v63 + 16);
        if (v73)
          v75 = v74 == 11;
        else
          v75 = 0;
        if (v75 && ((v74 >> 19) & 0x1FE) - 210 < 8)
        {
          v40 = 39;
          goto LABEL_294;
        }
        v58 = *v23;
        goto LABEL_146;
      }
    }
    else if (v65 != 9)
    {
      goto LABEL_138;
    }
    v68 = *(_QWORD *)(*v23 + 8) & 0xFFFFFFFFFFFFFFF0;
    v69 = *(_QWORD *)v68;
    if ((*(_BYTE *)(sub_22F114198(*(_QWORD *)(*(_QWORD *)v68 + 24)) + 77) & 2) != 0)
    {
      v70 = sub_22F114198(*(_QWORD *)(v69 + 24));
      v71 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22E496830(v70) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v40 = 30;
      if (v71)
        v72 = *(_DWORD *)(v71 + 16) == 11;
      else
        v72 = 0;
      if (v72)
      {
        if ((*(_DWORD *)(v71 + 16) & 0xFF80000) == 0x5300000)
          v40 = 31;
        else
          v40 = 30;
      }
      goto LABEL_294;
    }
    goto LABEL_136;
  }
  return v27;
}

uint64_t sub_22E963B58(_QWORD *a1, unint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, _DWORD *a8, _DWORD *a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  BOOL v18;
  uint64_t *v19;
  uint64_t i;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  BOOL v26;
  _BOOL4 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  char v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  std::string *v40;
  std::string::size_type v41;
  void **v42;
  std::string::size_type v43;
  void **v44;
  std::string::size_type v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void *__p[2];
  uint64_t v57;
  unint64_t v58;
  std::string v59;
  uint64_t *v60;
  _QWORD *v61[2];
  std::string v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  _QWORD v70[2];
  unsigned int v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  int v75;
  _BYTE v76[32];
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _DWORD v80[26];
  uint64_t v81;
  __int16 v82;
  char v83;
  uint64_t v84;

  v84 = *MEMORY[0x24BDAC8D0];
  v64 = a6;
  v65 = a5;
  v63 = a7;
  v15 = a5;
  if ((sub_22EE8B180(a1, a5) & 1) != 0)
    return 0;
  v16 = 0;
  if ((sub_22EE8B180(a1, v15) & 1) == 0 && a3 >= 0x10)
  {
    v18 = *(_BYTE *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 16) == 45 && a2 >= 0x10;
    if (!v18 || *(_BYTE *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 16) != 45)
      return 0;
    v54 = a3 & 0xFFFFFFFFFFFFFFF0;
    v55 = a2 & 0xFFFFFFFFFFFFFFF0;
    v19 = &v67;
    v66 = 0;
    v67 = (uint64_t)&v67;
    v68 = &v67;
    v69 = 0;
    v70[0] = 1;
    for (i = 40; i != 168; i += 16)
      *(unint64_t *)((char *)&v66 + i) = 0;
    v72 = v76;
    v73 = v76;
    v74 = 4;
    v75 = 0;
    v77 = 0;
    v78 = v80;
    v79 = 0x400000000;
    v80[24] = 0;
    v81 = 0;
    v82 = 257;
    v83 = 1;
    v16 = 0;
    if (!sub_22EAAB2A0((uint64_t)a1, v15, a3, a2, &v66))
      goto LABEL_75;
    if ((a4 & 1) != 0)
      goto LABEL_34;
    v21 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v21 & 8) != 0)
    {
      v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 0x18);
      v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
    }
    else
    {
      v22 = 0;
      v23 = 0;
    }
    v24 = *(_QWORD *)v54;
    if ((*(_BYTE *)(*(_QWORD *)v54 + 8) & 0xF) != 0)
      v24 = (unint64_t)sub_22F10D2BC(a3);
    v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v26 = v25 && *(_DWORD *)(v25 + 16) == 11;
    v27 = v26 && (*(_DWORD *)(v25 + 16) & 0xFF80000) == 86507520;
    v28 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v28 & 8) != 0)
    {
      v30 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFF0) + 0x18);
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
    }
    else
    {
      v29 = 0;
      v30 = 0;
    }
    v31 = v27
        ? v23 & 0xFFFFFFFFFFFFFFF7 | (v21 | a2) & 7
        : v23 | (v21 | a2) & 7;
    __p[0] = (void *)(v29 | v30 | (v28 | a3) & 7);
    v19 = &v67;
    if ((sub_22E95F24C((unsigned int *)__p, v31 | v22) & 1) != 0)
    {
LABEL_34:
      __p[0] = (void *)(*(_QWORD *)(*(_QWORD *)v55 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0);
      v32 = sub_22EFB50E0(v70, __p);
      if (((_DWORD)v32[1] & 1u) + (*((_DWORD *)v32 + 2) >> 1) < 2)
      {
        if (v77)
        {
          v62.__r_.__value_.__r.__words[0] = v77 & 0xFFFFFFFFFFFFFFF0;
          sub_22E8FCA40(a1, v65, 0x1274u, 0, (uint64_t)__p);
          v51 = sub_22E8901B8((uint64_t)__p, &v64);
          v52 = sub_22E8901B8(v51, &v63);
          v53 = sub_22E8901B8(v52, (uint64_t *)&v62);
          sub_22E8906A0(v53, &v65);
          sub_22E903BEC((unsigned int *)__p);
        }
        else if ((a4 & 1) != 0
               || sub_22E90B400((uint64_t)a1, v65, a2, a3, (uint64_t)(v68 + 2), 3271, 0, 0) != 1)
        {
          sub_22EAAB384((uint64_t)(v68 + 2), a10);
          *a9 = 6;
          v16 = 1;
          goto LABEL_75;
        }
        *a8 = 0;
      }
      else
      {
        if (!HIBYTE(v82))
        {
          sub_22F3AB3F4((uint64_t)&v66);
          HIBYTE(v82) = 1;
          sub_22EAAB2A0((uint64_t)a1, v65, a3, a2, &v66);
        }
        memset(&v62, 0, sizeof(v62));
        v61[0] = 0;
        v61[1] = 0;
        v60 = (uint64_t *)v61;
        v33 = v68;
        if (v68 != &v67)
        {
          do
          {
            LODWORD(__p[0]) = *(_DWORD *)(v33[2] + 24 * *((unsigned int *)v33 + 6) - 8);
            sub_22E67708C(&v60, (unsigned int *)__p, __p);
            if ((v34 & 1) != 0)
            {
              v35 = v19;
              std::string::append(&v62, "\n    ");
              v36 = *((unsigned int *)v33 + 6);
              if ((_DWORD)v36)
              {
                v37 = 24 * v36;
                v38 = v33[2] - 24;
                do
                {
                  v39 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v38 + v37) + 16) & 0xFFFFFFFFFFFFFFF0);
                  if ((*(_BYTE *)(v39 + 8) & 0xF) != 0)
                    v39 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)(v38 + v37) + 16));
                  v58 = v39 & 0xFFFFFFFFFFFFFFF0;
                  sub_22F1192C0(&v58, (uint64_t)&v59);
                  v40 = std::string::append(&v59, " -> ");
                  v41 = v40->__r_.__value_.__r.__words[2];
                  *(_OWORD *)__p = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
                  v57 = v41;
                  v40->__r_.__value_.__l.__size_ = 0;
                  v40->__r_.__value_.__r.__words[2] = 0;
                  v40->__r_.__value_.__r.__words[0] = 0;
                  if (v57 >= 0)
                    v42 = __p;
                  else
                    v42 = (void **)__p[0];
                  if (v57 >= 0)
                    v43 = HIBYTE(v57) & 0x7F;
                  else
                    v43 = (std::string::size_type)__p[1];
                  std::string::append(&v62, (const std::string::value_type *)v42, v43);
                  if (SHIBYTE(v57) < 0)
                    operator delete(__p[0]);
                  if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
                    operator delete(v59.__r_.__value_.__l.__data_);
                  v37 -= 24;
                }
                while (v37);
              }
              v59.__r_.__value_.__r.__words[0] = a3;
              sub_22F1192C0(&v59, (uint64_t)__p);
              if (v57 >= 0)
                v44 = __p;
              else
                v44 = (void **)__p[0];
              if (v57 >= 0)
                v45 = HIBYTE(v57) & 0x7F;
              else
                v45 = (std::string::size_type)__p[1];
              std::string::append(&v62, (const std::string::value_type *)v44, v45);
              if (SHIBYTE(v57) < 0)
                operator delete(__p[0]);
              v19 = v35;
            }
            v33 = (uint64_t *)v33[1];
          }
          while (v33 != v19);
        }
        sub_22E8FCA40(a1, v65, 0xA3Fu, 0, (uint64_t)__p);
        v46 = *(_QWORD *)v55;
        if ((*(_BYTE *)(*(_QWORD *)v55 + 8) & 0xF) != 0)
          v46 = (unint64_t)sub_22F10D2BC(a2);
        v59.__r_.__value_.__r.__words[0] = v46 & 0xFFFFFFFFFFFFFFF0;
        v47 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v59);
        v48 = *(_QWORD *)v54;
        if ((*(_BYTE *)(*(_QWORD *)v54 + 8) & 0xF) != 0)
          v48 = (unint64_t)sub_22F10D2BC(a3);
        v58 = v48 & 0xFFFFFFFFFFFFFFF0;
        v49 = sub_22E8901B8(v47, (uint64_t *)&v58);
        v50 = sub_22E90749C(v49, &v62);
        sub_22E8906A0(v50, &v65);
        sub_22E903BEC((unsigned int *)__p);
        *a8 = 0;
        sub_22E3B4AB8((uint64_t)&v60, v61[0]);
        if (SHIBYTE(v62.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v62.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      *a8 = 2907;
    }
    v16 = 3;
LABEL_75:
    if (v78 != v80)
      free(v78);
    if (v73 != v72)
      free(v73);
    if ((v70[0] & 1) == 0)
      llvm::deallocate_buffer((llvm *)v70[1], (void *)(16 * v71));
    sub_22E687D9C(v19);
  }
  return v16;
}

BOOL sub_22E9641C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 291)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

void sub_22E964224(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  unsigned __int8 *v26;
  unsigned int v27;
  unsigned __int8 *v28;
  size_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  size_t v58;
  _BYTE *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  _BYTE *v66;
  unint64_t v67;
  unsigned int v68;
  const char **v69;
  char *v70;
  size_t v71;
  size_t v72;
  uint64_t v74;
  unint64_t v75;
  unsigned int *v76;
  int v77;
  int v78;
  uint64_t v79;
  unsigned int **v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  char v87;
  int *v88;
  uint64_t *v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  unsigned __int8 *v93;
  _QWORD *v94;
  int v95;
  _QWORD v96[3];
  char v97;
  int v98;
  uint64_t v99;
  unsigned int v100;
  char v101;
  int *v102;
  unsigned int v103;
  char v104;
  char v105;
  _QWORD v106[4];
  _QWORD v107[5];
  _QWORD v108[3];
  _QWORD v109[4];
  int v110;
  unsigned int v111;
  uint64_t v112;
  char v113;
  unsigned int *v114;
  uint64_t v115;
  unsigned int *v116;
  uint64_t (**v117)();
  __int128 v118;
  _QWORD v119[2];
  int *v120;
  __int128 v121;
  _QWORD v122[3];

  v122[2] = *MEMORY[0x24BDAC8D0];
  v114 = a3;
  v115 = a2;
  if ((*a3 & 0x18000) == 0
    && (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) != 4
    && !*(_BYTE *)(a1 + 3209))
  {
    v5 = a2;
    v113 = 0;
    v112 = 0;
    if ((*(_BYTE *)(a2 + 29) & 1) == 0)
      goto LABEL_14;
    sub_22EFC8E88(a2);
    v7 = *(uint64_t **)v6;
    v8 = *(unsigned int *)(v6 + 8);
    v9 = *(uint64_t **)v6;
    if ((_DWORD)v8)
    {
      v10 = 8 * v8;
      v9 = *(uint64_t **)v6;
      while (*(_WORD *)(*v9 + 32) != 162)
      {
        ++v9;
        v10 -= 8;
        if (!v10)
          goto LABEL_14;
      }
    }
    if (v9 == &v7[v8])
    {
LABEL_14:
      v112 = 0;
    }
    else
    {
      do
      {
        v12 = *v7++;
        v11 = v12;
      }
      while (*(_WORD *)(v12 + 32) != 162);
      v112 = v11;
      v5 = *(_QWORD *)(v11 + 40);
      v113 = 1;
    }
    v13 = sub_22EFC01DC(v5, 1);
    v111 = v13;
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)(a1 + 88);
      v16 = *(_QWORD **)(v15 + 15088);
      v110 = 0;
      v110 = sub_22F1E724C(v16, *(_DWORD *)((char *)v16 + *(_QWORD *)(*v16 - 24) + 112));
      v109[0] = &v113;
      v109[1] = &v112;
      v109[2] = &v115;
      v109[3] = &v114;
      v108[0] = v109;
      v108[1] = &v114;
      v108[2] = a1;
      v107[0] = &v115;
      v107[1] = v109;
      v107[2] = &v114;
      v107[3] = a1;
      v107[4] = &v110;
      v106[0] = v109;
      v106[1] = &v114;
      v106[2] = a1;
      v106[3] = &v110;
      LOBYTE(v102) = 0;
      v105 = 0;
      LOBYTE(v99) = 0;
      v101 = 0;
      v98 = 0;
      v97 = 0;
      v96[0] = a1;
      v96[1] = &v111;
      v96[2] = &v97;
      if (v14 <= 819)
      {
        switch(v14)
        {
          case 461:
          case 463:
            goto LABEL_59;
          case 462:
          case 464:
          case 465:
          case 466:
          case 467:
          case 468:
          case 469:
          case 470:
          case 471:
          case 472:
          case 473:
          case 474:
          case 475:
          case 476:
          case 482:
          case 483:
            goto LABEL_159;
          case 477:
          case 478:
          case 479:
          case 480:
          case 481:
          case 485:
          case 486:
          case 487:
          case 488:
          case 489:
            v98 = 6321;
            sub_22E96535C((uint64_t)&v120, (uint64_t)v108, a3[4] - 2);
            sub_22E54C490((uint64_t)&v102, (uint64_t)&v120);
            if (BYTE8(v121) && v121 >= 0x41 && v120)
              MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
            v23 = v114[4] - 1;
            goto LABEL_23;
          case 484:
            v98 = 6599;
            sub_22E964F20((uint64_t)&v120, (uint64_t)v106, v17, v18, v19, v20, v21, v22);
            sub_22E54C490((uint64_t)&v102, (uint64_t)&v120);
            if (BYTE8(v121) && v121 >= 0x41 && v120)
              MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
            sub_22E96535C((uint64_t)&v120, (uint64_t)v108, 2u);
            sub_22E54C490((uint64_t)&v99, (uint64_t)&v120);
            if (BYTE8(v121) && v121 >= 0x41 && v120)
              MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
            v97 = 1;
            goto LABEL_102;
          case 490:
          case 492:
            v98 = 6321;
            sub_22E96535C((uint64_t)&v120, (uint64_t)v108, 1u);
            sub_22E54C490((uint64_t)&v102, (uint64_t)&v120);
            if (BYTE8(v121) && v121 >= 0x41 && v120)
              MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
            v23 = 3;
LABEL_23:
            sub_22E96535C((uint64_t)&v120, (uint64_t)v108, v23);
            sub_22E54C490((uint64_t)&v99, (uint64_t)&v120);
            if (BYTE8(v121) && v121 >= 0x41 && v120)
              MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
            v97 = 1;
            v24 = 6321;
            goto LABEL_128;
          case 491:
            goto LABEL_81;
          default:
            v37 = v14 + 93;
            if ((v14 - 419) > 0x13)
              goto LABEL_159;
            if (((1 << v37) & 0x1D) != 0)
              goto LABEL_72;
            if (((1 << v37) & 0xA0080) != 0)
              goto LABEL_62;
            if (v14 != 431)
              goto LABEL_159;
            goto LABEL_51;
        }
      }
      if (v14 > 837)
      {
        switch(v14)
        {
          case 838:
            goto LABEL_72;
          case 839:
          case 840:
          case 841:
          case 842:
          case 845:
          case 846:
          case 848:
            goto LABEL_159;
          case 843:
          case 847:
LABEL_59:
            v98 = 6598;
            v43 = 1;
            goto LABEL_63;
          case 844:
LABEL_81:
            v54 = 24;
            if (v14 == 844)
              v54 = 8;
            v55 = sub_22EFFA6B0(*(unsigned __int8 **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                                    + ((unint64_t)*a3 >> 24)
                                                    + v54));
            if (*v55 != 225)
              goto LABEL_124;
            v56 = v55;
            if ((*(_DWORD *)v55 & 0x140000 | 0x80000) == 0x80000)
            {
              v57 = &v55[4 * *((unsigned int *)v55 + 1) + 20];
              v58 = *((_DWORD *)v55 + 4) * ((*(_DWORD *)v55 >> 21) & 7u);
              v117 = &off_24FAB6FC0;
              if ((_DWORD)v58 && (v59 = memchr(v57, 0, v58)) != 0)
                v60 = v59 - v57;
              else
                v60 = -1;
              if (v58 < v60)
                v60 = v58;
              *(_QWORD *)&v118 = v60 + 1;
              v61 = sub_22EF5C728(v15, *((_QWORD *)v56 + 1));
              if (*(_BYTE *)(v61 + 16) == 2)
                v62 = v61;
              else
                v62 = 0;
              v63 = (unint64_t *)(v62 + 40);
              if (*(_DWORD *)(v62 + 48) >= 0x41u)
                v63 = (unint64_t *)*v63;
              v64 = *v63;
              if (v64 <= 1)
                v64 = 1;
              v65 = v64 - 1;
              if ((_DWORD)v58 && (v66 = memchr(v57, 0, v58)) != 0)
                v67 = v66 - v57;
              else
                v67 = -1;
              if (v67 >= v65)
                v67 = v65;
              if ((sub_22F0C5938((unsigned __int8 **)&v117, v57, &v57[v67], *(_QWORD *)(a1 + 72), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088), 0) & 1) != 0)
              {
LABEL_124:
                v24 = 0;
                v68 = 0;
              }
              else
              {
                v98 = 6596;
                LODWORD(v94) = 64;
                v93 = (unsigned __int8 *)v118;
                BYTE4(v94) = 1;
                llvm::APInt::zextOrTrunc((llvm::APInt *)&v93);
                v86 = v121;
                v87 = BYTE4(v94);
                v88 = v120;
                if (v105)
                {
                  if (v103 >= 0x41 && v102)
                    MEMORY[0x2348A0E84](v102, 0x1000C8000313F17);
                  v102 = v88;
                  v103 = v86;
                  v104 = v87;
                }
                else
                {
                  v103 = v121;
                  v102 = v120;
                  v104 = BYTE4(v94);
                  v105 = 1;
                }
                if (v94 >= 0x41 && v93)
                  MEMORY[0x2348A0E84](v93, 0x1000C8000313F17);
                if (v111 == 491)
                {
                  sub_22E96535C((uint64_t)&v120, (uint64_t)v108, 2u);
                  sub_22E54C490((uint64_t)&v99, (uint64_t)&v120);
                  if (BYTE8(v121) && v121 >= 0x41 && v120)
                    MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
                  v97 = 1;
                }
                else
                {
                  sub_22E9650DC((uint64_t)&v120, (uint64_t)v107, 0, v81, v82, v83, v84, v85);
                  sub_22E54C490((uint64_t)&v99, (uint64_t)&v120);
                  if (BYTE8(v121) && v121 >= 0x41 && v120)
                    MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
                }
                v68 = 2;
                v24 = 6596;
              }
            }
            else
            {
              v24 = 0;
              v68 = 1;
            }
            if (v68 <= 1)
              v68 = 1;
            if (v68 == 2)
              goto LABEL_128;
            goto LABEL_159;
          case 849:
          case 850:
          case 851:
            if (v14 == 849)
              v25 = 1;
            else
              v25 = 2;
            LODWORD(v116) = v25;
            v26 = sub_22EFFA6B0(*(unsigned __int8 **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1)
                                                                + 2
                                                                + 2 * (v14 != 849)]
                                                    + ((unint64_t)*a3 >> 24)));
            if (*v26 == 225)
            {
              v27 = *(_DWORD *)v26;
              if ((*(_DWORD *)v26 & 0x140000 | 0x80000) == 0x80000)
              {
                v120 = &v98;
                *(_QWORD *)&v121 = &v116;
                *((_QWORD *)&v121 + 1) = v96;
                v122[0] = a1;
                v122[1] = &v114;
                v28 = &v26[4 * *((unsigned int *)v26 + 1) + 20];
                v29 = *((_DWORD *)v26 + 4) * ((v27 >> 21) & 7);
                v93 = (unsigned __int8 *)v107;
                v94 = &v116;
                v117 = &off_24FAB6F20;
                *(_QWORD *)&v118 = sub_22E9B3108;
                *((_QWORD *)&v118 + 1) = &v93;
                v119[0] = sub_22E9B3120;
                v119[1] = &v120;
                v30 = sub_22EF5C728(v15, *((_QWORD *)v26 + 1));
                if (*(_BYTE *)(v30 + 16) == 2)
                  v31 = v30;
                else
                  v31 = 0;
                v32 = (unint64_t *)(v31 + 40);
                if (*(_DWORD *)(v31 + 48) >= 0x41u)
                  v32 = (unint64_t *)*v32;
                v33 = *v32;
                if (v33 <= 1)
                  v33 = 1;
                v34 = v33 - 1;
                if ((_DWORD)v29 && (v35 = memchr(v28, 0, v29)) != 0)
                  v36 = v35 - v28;
                else
                  v36 = -1;
                if (v36 >= v34)
                  v36 = v34;
                sub_22F0D2E10((uint64_t)&v117, v28, &v28[v36], *(_QWORD *)(a1 + 72), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088));
              }
            }
            goto LABEL_159;
          default:
            if (v14 == 885)
              goto LABEL_72;
            if (v14 == 887)
              goto LABEL_62;
            goto LABEL_159;
        }
      }
      switch(v14)
      {
        case 820:
        case 822:
LABEL_72:
          v98 = 6597;
          sub_22E96535C((uint64_t)&v120, (uint64_t)v108, a3[4] - 1);
          sub_22E54C490((uint64_t)&v102, (uint64_t)&v120);
          if (BYTE8(v121) && v121 >= 0x41 && v120)
            MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
          sub_22E9650DC((uint64_t)&v120, (uint64_t)v107, 0, v49, v50, v51, v52, v53);
          sub_22E54C490((uint64_t)&v99, (uint64_t)&v120);
          if (BYTE8(v121) && v121 >= 0x41 && v120)
            MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
          v24 = 6597;
          goto LABEL_128;
        case 823:
LABEL_51:
          v98 = 6599;
          sub_22E964F20((uint64_t)&v120, (uint64_t)v106, v17, v18, v19, v20, v21, v22);
          sub_22E54C490((uint64_t)&v102, (uint64_t)&v120);
          if (BYTE8(v121) && v121 >= 0x41 && v120)
            MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
          sub_22E9650DC((uint64_t)&v120, (uint64_t)v107, 0, v38, v39, v40, v41, v42);
          sub_22E54C490((uint64_t)&v99, (uint64_t)&v120);
          if (BYTE8(v121) && v121 >= 0x41 && v120)
            MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
LABEL_102:
          v24 = 6599;
          goto LABEL_128;
        case 824:
        case 828:
LABEL_62:
          v98 = 6598;
          v43 = a3[4] - 1;
LABEL_63:
          sub_22E96535C((uint64_t)&v120, (uint64_t)v108, v43);
          sub_22E54C490((uint64_t)&v102, (uint64_t)&v120);
          if (BYTE8(v121) && v121 >= 0x41 && v120)
            MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
          sub_22E9650DC((uint64_t)&v120, (uint64_t)v107, 0, v44, v45, v46, v47, v48);
          sub_22E54C490((uint64_t)&v99, (uint64_t)&v120);
          if (BYTE8(v121) && v121 >= 0x41 && v120)
            MEMORY[0x2348A0E84](v120, 0x1000C8000313F17);
          v24 = 6598;
LABEL_128:
          if (!v105)
            goto LABEL_159;
          if (!v101)
            goto LABEL_163;
          if ((int)sub_22E4634B4((uint64_t)&v102, (uint64_t)&v99) < 1)
            goto LABEL_159;
          if (v111 > 0x7E7)
          {
            v89 = *(uint64_t **)(*(_QWORD *)(a1 + 88) + 15208);
            v90 = v89[1];
            if (v90 + 2024 <= (unint64_t)v111)
            {
              v91 = v111 - v90 - 2024;
              v92 = v89[2];
            }
            else
            {
              v91 = v111 - 2024;
              v92 = *v89;
            }
            v69 = (const char **)(v92 + 48 * v91);
          }
          else
          {
            v69 = (const char **)&(&off_24FAC8C40)[6 * v111];
          }
          v70 = (char *)*v69;
          if (*v69)
          {
            v71 = strlen(*v69);
            v72 = v71;
            if (!v97)
            {
              if (v71 >= 0xA && *(_QWORD *)v70 == 0x69746C6975625F5FLL && *((_WORD *)v70 + 4) == 24430)
              {
                v70 += 10;
                v72 = v71 - 10;
              }
              goto LABEL_149;
            }
          }
          else
          {
            if (!v97)
            {
              v70 = 0;
              v72 = 0;
              goto LABEL_149;
            }
            v72 = 0;
          }
          v74 = 12;
          if (v72 < 0xC)
            v74 = v72;
          v70 += v74;
          v75 = v72 - v74;
          if (v75 >= v75 - 4)
            v72 = v75 - 4;
          else
            v72 = v75;
LABEL_149:
          v120 = (int *)v122;
          v121 = xmmword_22F44E350;
          v117 = (uint64_t (**)())v119;
          v118 = xmmword_22F44E350;
          llvm::APInt::toString();
          llvm::APInt::toString();
          v76 = v114;
          sub_22EFFAE7C(v114);
          v78 = v77;
          v79 = *(_QWORD *)(a1 + 88) + 2128;
          v93 = 0;
          v94 = (_QWORD *)v79;
          v95 = v24;
          sub_22E3B89A8(&v93, v70, v72);
          sub_22E3B89A8(&v93, v120, v121);
          sub_22E3B89A8(&v93, v117, v118);
          v116 = v76;
          if (v76)
            v80 = &v116;
          else
            v80 = 0;
          sub_22EB52944(a1, v78, v80, v76 != 0, (uint64_t *)&v93);
          if (v93 && v94)
            sub_22E3BB10C((unint64_t)v94, (unint64_t)v93);
          if (v117 != v119)
            free(v117);
          if (v120 != (int *)v122)
            free(v120);
LABEL_159:
          if (v101 && v100 >= 0x41 && v99)
            MEMORY[0x2348A0E84](v99, 0x1000C8000313F17);
LABEL_163:
          if (v105 && v103 >= 0x41)
          {
            if (v102)
              MEMORY[0x2348A0E84](v102, 0x1000C8000313F17);
          }
          break;
        default:
          goto LABEL_159;
      }
    }
  }
}

uint64_t sub_22E964F20(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD **v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  BOOL v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD **v22;
  unsigned int v23;
  unint64_t v24;
  unsigned int v25;
  char v26;
  unint64_t v27[2];
  int v28;

  v9 = result;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD ***)a2;
  if (!***(_BYTE ***)a2)
  {
    v17 = 1;
    goto LABEL_16;
  }
  v12 = *v11[1];
  v13 = *(_DWORD *)(v12 + 48);
  if (v13 < 2)
  {
    result = *(_QWORD *)(*(_QWORD *)(*v11[2] + 48) & 0xFFFFFFFFFFFFFFF0);
    if (result)
      v15 = *(_BYTE *)(result + 16) == 26;
    else
      v15 = 0;
    if (v15)
      goto LABEL_9;
    v23 = *(_DWORD *)(v12 + 48);
    v21 = *(_QWORD *)(a2 + 16);
    v22 = *(_QWORD ***)a2;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
    {
      v16 = 0;
      goto LABEL_10;
    }
    result = sub_22F10CF48(result);
    v10 = v21;
    v11 = v22;
    v13 = v23;
    if (result)
LABEL_9:
      v16 = (unsigned __int16)(*(_QWORD *)(result + 16) >> 38);
    else
      v16 = 0;
LABEL_10:
    v14 = v16 - v13 + 1;
    goto LABEL_11;
  }
  v14 = *(_DWORD *)(*(_QWORD *)(v12 + 56) + 4);
LABEL_11:
  if (v14 >= *(_DWORD *)(*v11[3] + 16))
  {
LABEL_13:
    *(_BYTE *)v9 = 0;
    *(_BYTE *)(v9 + 16) = 0;
    return result;
  }
  v17 = v14;
LABEL_16:
  v18 = *(_QWORD *)(**(_QWORD **)(a2 + 8)
                  + ((unint64_t)***(unsigned int ***)(a2 + 8) >> 24)
                  + 8 * (((unint64_t)***(unsigned int ***)(a2 + 8) >> 18) & 1)
                  + 8 * v17
                  + 8);
  v27[0] = 0;
  result = sub_22F3C45A4(v18, v27, *(_QWORD *)(v10 + 88), a4, a5, a6, a7, a8);
  if ((result & 1) == 0)
    goto LABEL_13;
  v25 = 64;
  v24 = v27[0] + 1;
  v26 = 1;
  result = llvm::APInt::zextOrTrunc((llvm::APInt *)&v24);
  v19 = v26;
  v20 = v27[1];
  *(_DWORD *)(v9 + 8) = v28;
  *(_QWORD *)v9 = v20;
  *(_BYTE *)(v9 + 12) = v19;
  *(_BYTE *)(v9 + 16) = 1;
  if (v25 >= 0x41)
  {
    result = v24;
    if (v24)
      return MEMORY[0x2348A0E84](v24, 0x1000C8000313F17);
  }
  return result;
}

void sub_22E9650DC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  BOOL v26;
  unsigned int v27;
  uint64_t v28;
  BOOL v29;
  int v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  unsigned int v38;
  char v39;
  _QWORD v40[2];
  int v41;

  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
    v13 = *(_BYTE *)(v12 + 16) == 26;
  else
    v13 = 0;
  if (!v13)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
      goto LABEL_18;
    v12 = sub_22F10CF48(v12);
    if (!v12)
      goto LABEL_18;
  }
  if (a3 >= (unsigned __int16)(*(_QWORD *)(v12 + 16) >> 38))
    goto LABEL_18;
  v14 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)a2 + 120) + 8 * a3);
  if ((*(_BYTE *)(v14 + 29) & 1) == 0)
    goto LABEL_18;
  sub_22EFC8E88(v14);
  v16 = *(uint64_t **)v15;
  v17 = *(unsigned int *)(v15 + 8);
  v18 = *(uint64_t **)v15;
  if ((_DWORD)v17)
  {
    v19 = 8 * v17;
    v18 = *(uint64_t **)v15;
    while (*(_WORD *)(*v18 + 32) != 83)
    {
      ++v18;
      v19 -= 8;
      if (!v19)
        goto LABEL_18;
    }
  }
  if (v18 != &v16[v17])
  {
    do
    {
      v21 = *v16++;
      v20 = v21;
    }
    while (*(_WORD *)(v21 + 32) != 83);
    v22 = *(_DWORD *)(v20 + 36);
  }
  else
  {
LABEL_18:
    v22 = 0;
  }
  v23 = *(_QWORD *)(a2 + 8);
  if (!**(_BYTE **)v23)
    goto LABEL_32;
  v24 = **(_QWORD **)(v23 + 8);
  v25 = *(_DWORD *)(v24 + 48);
  v26 = a3 >= v25;
  v27 = a3 - v25;
  if (!v26)
  {
    a3 = *(_DWORD *)(*(_QWORD *)(v24 + 56) + 4 * a3);
    goto LABEL_29;
  }
  v28 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v23 + 16) + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v28)
    v29 = *(_BYTE *)(v28 + 16) == 26;
  else
    v29 = 0;
  if (v29)
    goto LABEL_27;
  v36 = v27;
  v35 = *(_QWORD *)(a2 + 8);
  v34 = v22;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
  {
    v30 = 0;
    goto LABEL_28;
  }
  v28 = sub_22F10CF48(v28);
  v22 = v34;
  v23 = v35;
  v27 = v36;
  if (v28)
LABEL_27:
    v30 = (unsigned __int16)(*(_QWORD *)(v28 + 16) >> 38);
  else
    v30 = 0;
LABEL_28:
  a3 = v27 + v30;
LABEL_29:
  if (a3 >= *(_DWORD *)(**(_QWORD **)(v23 + 24) + 16))
  {
LABEL_30:
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 16) = 0;
    return;
  }
LABEL_32:
  v31 = *(_QWORD *)(**(_QWORD **)(a2 + 16)
                  + ((unint64_t)***(unsigned int ***)(a2 + 16) >> 24)
                  + 8 * (((unint64_t)***(unsigned int ***)(a2 + 16) >> 18) & 1)
                  + 8 * a3
                  + 8);
  v40[0] = 0;
  if ((sub_22F3C4410(v31, v40, *(_QWORD *)(v11 + 88), v22, a5, a6, a7, a8) & 1) == 0)
    goto LABEL_30;
  v38 = 64;
  v37 = v40[0];
  v39 = 1;
  llvm::APInt::zextOrTrunc((llvm::APInt *)&v37);
  v32 = v39;
  v33 = v40[1];
  *(_DWORD *)(a1 + 8) = v41;
  *(_QWORD *)a1 = v33;
  *(_BYTE *)(a1 + 12) = v32;
  *(_BYTE *)(a1 + 16) = 1;
  if (v38 >= 0x41)
  {
    if (v37)
      MEMORY[0x2348A0E84](v37, 0x1000C8000313F17);
  }
}

void sub_22E96535C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  _QWORD **v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD **v16;
  uint64_t v17;
  unsigned int v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD ***)a2;
  if (!***(_BYTE ***)a2)
    goto LABEL_12;
  v6 = *v5[1];
  v7 = *(_DWORD *)(v6 + 48);
  v8 = a3 - v7;
  if (a3 < v7)
  {
    a3 = *(_DWORD *)(*(_QWORD *)(v6 + 56) + 4 * a3);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(*v5[2] + 48) & 0xFFFFFFFFFFFFFFF0);
  if (v9)
    v10 = *(_BYTE *)(v9 + 16) == 26;
  else
    v10 = 0;
  if (v10)
    goto LABEL_9;
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD ***)a2;
  v14 = a2;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
  {
    v11 = 0;
    v4 = *(_QWORD *)(a2 + 16);
    goto LABEL_10;
  }
  v9 = sub_22F10CF48(v9);
  a2 = v14;
  v4 = v15;
  v5 = v16;
  if (v9)
LABEL_9:
    v11 = (unsigned __int16)(*(_QWORD *)(v9 + 16) >> 38);
  else
    v11 = 0;
LABEL_10:
  a3 = v8 + v11;
LABEL_11:
  if (a3 >= *(_DWORD *)(*v5[3] + 16))
  {
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 16) = 0;
    return;
  }
LABEL_12:
  v19 = 0;
  v20 = 0;
  LODWORD(v21) = 0;
  if (sub_22F00554C(*(_QWORD *)(**(_QWORD **)(a2 + 8)+ ((unint64_t)***(unsigned int ***)(a2 + 8) >> 24)+ 8 * (((unint64_t)***(unsigned int ***)(a2 + 8) >> 18) & 1)+ 8 * a3+ 8), (uint64_t)&v19, *(_QWORD *)(v4 + 88), 0, 0))
  {
    v12 = v23;
    v18 = v23;
    if (v23 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v17, (const llvm::APInt *)&v22);
      v12 = v18;
      v13 = v17;
    }
    else
    {
      v13 = v22;
    }
    *(_DWORD *)(a1 + 8) = v12;
    *(_QWORD *)a1 = v13;
    *(_BYTE *)(a1 + 12) = 1;
    *(_BYTE *)(a1 + 16) = 1;
  }
  else
  {
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  if (v21 >= 2)
    sub_22EF53BC0(&v21);
}

uint64_t sub_22E965528(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  int v5;
  int v7;
  uint64_t v8;
  unsigned int *v9;
  int v10;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  int v17;
  int v18;
  char v19;
  int v20;

  v5 = a3;
  if ((a3 - 3035) <= 6)
  {
    v7 = 1 << (a3 + 37);
    if ((v7 & 0x5A) != 0)
    {
      v8 = a3;
      v9 = a4;
      v10 = 5;
      return sub_22E97D1B4(a1, v8, v9, v10);
    }
    if ((v7 & 0x24) != 0)
    {
      v8 = a3;
      v9 = a4;
      v10 = 3;
      return sub_22E97D1B4(a1, v8, v9, v10);
    }
    v13 = 1;
    if (sub_22E9797E0((uint64_t)a1, a4, 1u, 0, 1, 1))
      return v13;
    v14 = (uint64_t)a1;
    v15 = a4;
    v16 = 2;
    goto LABEL_14;
  }
  if ((a3 - 2986) < 4)
    return sub_22E97CB60(a1, a3, a4, 0x40u);
  if ((sub_22E97BBA4(a1, a2, a3, a4) & 1) != 0 || sub_22F30E4BC(a1, v5, a4) || sub_22F30F160((uint64_t)a1, a2, v5, a4))
    return 1;
  v19 = v5 + 79;
  if ((v5 - 2993) > 0x29)
  {
LABEL_26:
    v20 = v5 - 2916;
    v13 = 0;
    switch(v20)
    {
      case 0:
        v14 = (uint64_t)a1;
        v15 = a4;
        v16 = 1;
        v17 = 1;
        v18 = 32;
        return sub_22E9797E0(v14, v15, v16, v17, v18, 1);
      case 1:
        v14 = (uint64_t)a1;
        v15 = a4;
        v16 = 1;
        v17 = 0;
        v18 = 31;
        return sub_22E9797E0(v14, v15, v16, v17, v18, 1);
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        return v13;
      case 8:
        v14 = (uint64_t)a1;
        v15 = a4;
        v16 = 1;
        v17 = 1;
        v18 = 16;
        return sub_22E9797E0(v14, v15, v16, v17, v18, 1);
      case 9:
        v14 = (uint64_t)a1;
        v15 = a4;
        v16 = 1;
        goto LABEL_31;
      default:
        return 0;
    }
  }
  if (((1 << v19) & 0xFFFFC) == 0)
  {
    if (((1 << v19) & 0x3C000000000) != 0)
    {
      v14 = (uint64_t)a1;
      v15 = a4;
      v16 = 0;
LABEL_31:
      v17 = 0;
      v18 = 15;
      return sub_22E9797E0(v14, v15, v16, v17, v18, 1);
    }
    if (((1 << v19) & 3) != 0)
    {
      v14 = (uint64_t)a1;
      v15 = a4;
      v16 = 1;
LABEL_14:
      v17 = 0;
      v18 = 1;
      return sub_22E9797E0(v14, v15, v16, v17, v18, 1);
    }
    goto LABEL_26;
  }
  v13 = 1;
  if (sub_22E9797E0((uint64_t)a1, a4, 0, 0, 15, 1))
    return v13;
  return sub_22E97C9CC((uint64_t)a1, a2, *(_DWORD **)((char *)&a4[2 * (((unint64_t)*a4 >> 18) & 1) + 2] + ((unint64_t)*a4 >> 24)), 0);
}

uint64_t sub_22E9657C8(_QWORD *a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  int v5;
  _QWORD *v6;
  unsigned int *v9;
  unsigned int v10;
  int v11;
  _BOOL8 v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  char *v28;
  int v29;
  char *v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int *v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  _DWORD *v40;
  _BOOL4 v41;
  BOOL v42;
  unsigned int v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  int v47;
  int v48;
  _QWORD *v49;
  unsigned int v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  _QWORD *v55;
  unsigned int v56;
  uint64_t v57;
  int v58;
  unsigned int *v59;
  uint64_t v60;
  unsigned int v61[20];
  char v62;
  uint64_t *v63;
  unsigned int v64;
  char v65;
  void *v66;
  uint64_t v67;
  _QWORD v68[7];

  v5 = a3;
  v6 = a1;
  v68[5] = *MEMORY[0x24BDAC8D0];
  if ((a3 - 8979) <= 3)
    return sub_22E97CB60(a1, a3, a4, 0x80u);
  switch((int)a3)
  {
    case 9002:
    case 9003:
    case 9004:
    case 9005:
    case 9006:
    case 9007:
      return sub_22F30F5AC(a1, a3, a4);
    case 9013:
      v12 = 1;
      if (sub_22E9797E0((uint64_t)a1, a4, 1u, 0, 1, 1)
        || sub_22E9797E0((uint64_t)v6, a4, 2u, 0, 2, 1)
        || sub_22E9797E0((uint64_t)v6, a4, 3u, 0, 1, 1))
      {
        return v12;
      }
      a1 = v6;
      v9 = a4;
      v10 = 4;
      v11 = 1;
      return sub_22E9797E0((uint64_t)a1, v9, v10, 0, v11, 1);
    case 9014:
    case 9015:
    case 9016:
    case 9017:
    case 9018:
    case 9019:
      return sub_22E97D1B4(a1, a3, a4, 5);
    default:
      if (a3 >> 1 != 4578)
      {
        if ((_DWORD)a3 == 9161)
        {
          v9 = a4;
          v10 = 0;
          v11 = 0xFFFF;
          return sub_22E9797E0((uint64_t)a1, v9, v10, 0, v11, 1);
        }
        if ((_DWORD)a3 == 9155)
        {
          v9 = a4;
          v10 = 0;
          v11 = 31;
          return sub_22E9797E0((uint64_t)a1, v9, v10, 0, v11, 1);
        }
        if ((sub_22E97BBA4(a1, a2, a3, a4) & 1) != 0)
          return 1;
        v66 = v68;
        v67 = 0x300000000;
        v13 = 0x300000002;
        v14 = 16;
        if (v5 > 6663)
        {
          if (v5 <= 7603)
          {
            switch(v5)
            {
              case 6664:
              case 6667:
              case 6670:
              case 6674:
              case 6677:
              case 6680:
              case 6684:
              case 6687:
              case 6690:
              case 6694:
              case 6697:
              case 6700:
                v14 = 0;
                v17 = 2;
                goto LABEL_49;
              case 6665:
              case 6666:
              case 6668:
              case 6669:
              case 6671:
              case 6672:
              case 6673:
              case 6675:
              case 6676:
              case 6678:
              case 6679:
              case 6681:
              case 6682:
              case 6683:
              case 6685:
              case 6686:
              case 6688:
              case 6689:
              case 6691:
              case 6692:
              case 6693:
              case 6695:
              case 6696:
              case 6698:
              case 6699:
              case 6701:
              case 6702:
              case 6703:
                v14 = 0;
                v17 = 3;
LABEL_49:
                v13 = v17 & 0xFFFF0000FFFFFFFFLL | 0xC00000000;
                goto LABEL_129;
              case 6711:
              case 6712:
              case 6713:
              case 6714:
                goto LABEL_120;
              case 6791:
              case 6792:
              case 6793:
              case 6794:
                goto LABEL_50;
              case 6795:
              case 6796:
              case 6797:
              case 6798:
              case 6803:
              case 6804:
              case 6805:
              case 6806:
              case 6813:
              case 6814:
              case 6815:
              case 6816:
              case 6817:
              case 6818:
              case 6825:
              case 6826:
              case 6849:
              case 6850:
              case 6851:
              case 6852:
              case 6859:
              case 6860:
              case 6932:
              case 6933:
              case 6934:
              case 6935:
              case 6940:
              case 6941:
              case 6942:
              case 6943:
              case 6950:
              case 6951:
              case 6952:
              case 6953:
              case 6954:
              case 6955:
              case 6962:
              case 6963:
              case 6986:
              case 6987:
              case 6988:
              case 6989:
              case 6996:
              case 6997:
                v14 = 0;
                v13 = 0x100000001;
                goto LABEL_129;
              case 6799:
              case 6800:
              case 6801:
              case 6802:
              case 6807:
              case 6808:
              case 6809:
              case 6810:
              case 6811:
              case 6812:
              case 6819:
              case 6820:
              case 6821:
              case 6822:
              case 6823:
              case 6824:
              case 6853:
              case 6854:
              case 6855:
              case 6856:
              case 6857:
              case 6858:
              case 6936:
              case 6937:
              case 6938:
              case 6939:
              case 6944:
              case 6945:
              case 6946:
              case 6947:
              case 6948:
              case 6949:
              case 6956:
              case 6957:
              case 6958:
              case 6959:
              case 6960:
              case 6961:
              case 6990:
              case 6991:
              case 6992:
              case 6993:
              case 6994:
              case 6995:
                sub_22F2CF824((uint64_t)&v66, 0x100000002, 0);
                v14 = 0;
                v13 = 1;
                goto LABEL_129;
              case 6861:
                goto LABEL_66;
              case 6862:
                goto LABEL_69;
              case 6875:
              case 6883:
              case 6897:
              case 7016:
              case 7027:
                v14 = 16;
                goto LABEL_113;
              case 6876:
              case 6884:
              case 6898:
              case 7017:
              case 7028:
                v14 = 32;
                goto LABEL_113;
              case 6905:
              case 6916:
              case 6924:
              case 7038:
                v14 = 16;
                goto LABEL_111;
              case 6906:
              case 6917:
              case 6925:
              case 7039:
                v14 = 32;
                goto LABEL_111;
              case 6907:
              case 7040:
                v14 = 64;
LABEL_111:
                v26 = 2;
                goto LABEL_114;
              case 7010:
                goto LABEL_96;
              case 7011:
                goto LABEL_97;
              case 7012:
              case 7013:
              case 7014:
              case 7015:
                goto LABEL_38;
              case 7018:
              case 7029:
                v14 = 64;
LABEL_113:
                v26 = 3;
LABEL_114:
                v13 = v26 & 0xFFFF0000FFFFFFFFLL | 0x700000000;
                goto LABEL_129;
              case 7097:
              case 7100:
              case 7109:
              case 7175:
              case 7178:
              case 7187:
                goto LABEL_28;
              case 7098:
              case 7101:
              case 7110:
              case 7176:
              case 7179:
              case 7188:
                goto LABEL_55;
              case 7099:
              case 7102:
              case 7111:
              case 7177:
              case 7180:
              case 7189:
                goto LABEL_56;
              case 7103:
              case 7106:
              case 7112:
              case 7181:
              case 7184:
              case 7190:
                goto LABEL_58;
              case 7104:
              case 7107:
              case 7113:
              case 7182:
              case 7185:
              case 7191:
                goto LABEL_59;
              case 7105:
              case 7108:
              case 7114:
              case 7183:
              case 7186:
              case 7192:
                goto LABEL_60;
              case 7163:
              case 7164:
              case 7165:
                goto LABEL_81;
              case 7166:
              case 7167:
              case 7168:
                goto LABEL_82;
              case 7169:
              case 7170:
              case 7171:
                goto LABEL_83;
              case 7172:
              case 7173:
              case 7174:
                goto LABEL_80;
              default:
                goto LABEL_189;
            }
          }
          if (v5 <= 8433)
          {
            switch(v5)
            {
              case 7604:
              case 7605:
              case 7606:
              case 7616:
              case 7617:
              case 7618:
              case 7649:
              case 7653:
              case 7836:
              case 7840:
              case 7844:
              case 7848:
                goto LABEL_129;
              case 7607:
              case 7608:
              case 7609:
              case 7619:
              case 7620:
              case 7621:
              case 7650:
              case 7654:
              case 7837:
              case 7841:
              case 7845:
              case 7849:
                goto LABEL_72;
              case 7610:
              case 7611:
              case 7612:
              case 7622:
              case 7623:
              case 7624:
              case 7651:
              case 7655:
              case 7838:
              case 7842:
              case 7846:
              case 7850:
                goto LABEL_109;
              case 7613:
              case 7614:
              case 7615:
              case 7625:
              case 7626:
              case 7627:
              case 7652:
              case 7656:
              case 7839:
              case 7843:
              case 7847:
              case 7851:
                goto LABEL_128;
              case 7628:
              case 7631:
              case 7769:
              case 7772:
LABEL_28:
                v14 = 16;
                goto LABEL_57;
              case 7629:
              case 7632:
              case 7770:
              case 7773:
LABEL_55:
                v14 = 32;
                goto LABEL_57;
              case 7630:
              case 7633:
              case 7771:
              case 7774:
LABEL_56:
                v14 = 64;
LABEL_57:
                v20 = 1;
                goto LABEL_62;
              case 7634:
              case 7637:
              case 7775:
              case 7778:
LABEL_58:
                v14 = 16;
                goto LABEL_61;
              case 7635:
              case 7638:
              case 7776:
              case 7779:
LABEL_59:
                v14 = 32;
                goto LABEL_61;
              case 7636:
              case 7639:
              case 7777:
              case 7780:
LABEL_60:
                v14 = 64;
LABEL_61:
                v20 = 2;
LABEL_62:
                v13 = v20 & 0xFFFF0000FFFFFFFFLL | 0x400000000;
                goto LABEL_129;
              case 7640:
              case 7641:
              case 7642:
              case 7643:
              case 7644:
              case 7645:
              case 7646:
              case 7647:
              case 7648:
              case 7657:
              case 7658:
              case 7659:
              case 7660:
              case 7661:
              case 7662:
              case 7663:
              case 7664:
              case 7665:
              case 7666:
              case 7667:
              case 7668:
              case 7669:
              case 7670:
              case 7671:
              case 7672:
              case 7673:
              case 7674:
              case 7675:
              case 7676:
              case 7677:
              case 7678:
              case 7679:
              case 7680:
              case 7681:
              case 7682:
              case 7683:
              case 7684:
              case 7685:
              case 7686:
              case 7687:
              case 7688:
              case 7689:
              case 7690:
              case 7691:
              case 7692:
              case 7693:
              case 7694:
              case 7695:
              case 7696:
              case 7697:
              case 7698:
              case 7699:
              case 7700:
              case 7701:
              case 7702:
              case 7703:
              case 7704:
              case 7705:
              case 7706:
              case 7707:
              case 7708:
              case 7709:
              case 7710:
              case 7711:
              case 7712:
              case 7713:
              case 7714:
              case 7715:
              case 7716:
              case 7717:
              case 7718:
              case 7719:
              case 7756:
              case 7789:
              case 7790:
              case 7791:
              case 7792:
              case 7793:
              case 7794:
              case 7795:
              case 7796:
              case 7797:
              case 7798:
              case 7799:
              case 7800:
              case 7801:
              case 7802:
              case 7803:
              case 7804:
              case 7805:
              case 7806:
              case 7807:
              case 7808:
              case 7809:
              case 7810:
              case 7811:
              case 7812:
              case 7813:
              case 7814:
              case 7815:
              case 7816:
              case 7817:
              case 7818:
              case 7819:
              case 7820:
              case 7821:
              case 7822:
              case 7823:
              case 7824:
              case 7825:
              case 7826:
              case 7827:
              case 7828:
              case 7829:
              case 7830:
              case 7831:
              case 7832:
              case 7833:
              case 7834:
              case 7835:
                goto LABEL_189;
              case 7720:
              case 7721:
              case 7722:
              case 7723:
              case 7724:
              case 7725:
              case 7726:
              case 7727:
              case 7728:
              case 7729:
              case 7730:
              case 7731:
                goto LABEL_34;
              case 7732:
              case 7733:
              case 7734:
              case 7735:
              case 7736:
              case 7737:
              case 7738:
              case 7739:
              case 7740:
              case 7741:
              case 7742:
              case 7743:
                goto LABEL_41;
              case 7744:
              case 7745:
              case 7746:
              case 7747:
              case 7748:
              case 7749:
              case 7750:
              case 7751:
              case 7752:
              case 7753:
              case 7754:
              case 7755:
                goto LABEL_42;
              case 7757:
              case 7760:
              case 7763:
              case 7766:
                v14 = 8;
                goto LABEL_90;
              case 7758:
              case 7761:
              case 7764:
              case 7767:
                v14 = 16;
                goto LABEL_90;
              case 7759:
              case 7762:
              case 7765:
              case 7768:
                v14 = 32;
LABEL_90:
                v24 = 1;
                goto LABEL_91;
              case 7781:
              case 7785:
LABEL_81:
                v14 = 16;
                goto LABEL_84;
              case 7782:
              case 7786:
LABEL_82:
                v14 = 32;
                goto LABEL_84;
              case 7783:
              case 7787:
LABEL_83:
                v14 = 64;
                goto LABEL_84;
              case 7784:
              case 7788:
LABEL_80:
                v14 = 8;
LABEL_84:
                v24 = 2;
LABEL_91:
                v13 = v24 & 0xFFFF0000FFFFFFFFLL | 0x500000000;
                break;
              default:
                v27 = 8395;
                goto LABEL_117;
            }
            goto LABEL_129;
          }
          if (v5 > 8584)
          {
            switch(v5)
            {
              case 8734:
              case 8738:
                goto LABEL_129;
              case 8735:
              case 8739:
                goto LABEL_72;
              case 8736:
              case 8740:
                goto LABEL_109;
              case 8737:
              case 8741:
                goto LABEL_128;
              default:
                v27 = 8585;
LABEL_117:
                if (v5 != v27)
                  goto LABEL_189;
                v14 = 8;
                v13 = 0x900000003;
                break;
            }
            goto LABEL_129;
          }
          if (v5 != 8434 && v5 != 8435 && v5 != 8436)
            goto LABEL_189;
          v14 = 0;
          v23 = 2;
LABEL_123:
          v13 = v23 & 0xFFFF0000FFFFFFFFLL | 0x600000000;
LABEL_129:
          sub_22F2CF824((uint64_t)&v66, v13, v14);
          v28 = (char *)v66;
          if ((_DWORD)v67)
          {
            v29 = 0;
            v30 = (char *)v66 + 12 * v67;
            v59 = a4 + 2;
            while (2)
            {
              v31 = *(unsigned int *)v28;
              v32 = *((_DWORD *)v28 + 2);
              switch(*((_DWORD *)v28 + 1))
              {
                case 0:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 0;
                  v32 = 31;
                  goto LABEL_149;
                case 1:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 1;
                  v32 = 16;
                  goto LABEL_149;
                case 2:
                  v36 = 2048;
                  goto LABEL_143;
                case 3:
                  goto LABEL_139;
                case 4:
                  if (v32 >= 0)
                    v37 = *((_DWORD *)v28 + 2);
                  else
                    v37 = v32 + 1;
                  v32 = v37 >> 1;
LABEL_139:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 1;
                  goto LABEL_149;
                case 5:
                  --v32;
                  goto LABEL_148;
                case 6:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 0;
                  v32 = 7;
                  goto LABEL_149;
                case 7:
                  v36 = 128;
LABEL_143:
                  v38 = v36 / v32;
                  goto LABEL_147;
                case 8:
                  v39 = 2 * v32;
                  goto LABEL_146;
                case 9:
                  v39 = 4 * v32;
LABEL_146:
                  v38 = 128 / v39;
LABEL_147:
                  v32 = v38 - 1;
LABEL_148:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 0;
                  goto LABEL_149;
                case 0xA:
                  v40 = *(_DWORD **)((char *)&v59[2 * (((unint64_t)*a4 >> 18) & 1) + 2 * v31]
                                   + ((unint64_t)*a4 >> 24));
                  if ((*v40 & 0x18000) != 0)
                    goto LABEL_157;
                  v41 = 1;
                  v64 = 1;
                  v63 = 0;
                  v65 = 0;
                  v42 = sub_22F30D0F4(v6, a4, v31, (uint64_t)&v63);
                  v43 = v64;
                  if (v42)
                    goto LABEL_179;
                  v44 = v64 > 0x40 ? *v63 : (uint64_t)((_QWORD)v63 << -(char)v64) >> -(char)v64;
                  v41 = 0;
                  if (v44 == 90 || v44 == 270)
                    goto LABEL_179;
                  sub_22EFFAE7C(a4);
                  v48 = v47;
                  v49 = v6;
                  v50 = 4680;
                  goto LABEL_178;
                case 0xB:
                  v40 = *(_DWORD **)((char *)&v59[2 * (((unint64_t)*a4 >> 18) & 1) + 2 * v31]
                                   + ((unint64_t)*a4 >> 24));
                  if ((*v40 & 0x18000) != 0)
                  {
LABEL_157:
                    v41 = 0;
                    goto LABEL_158;
                  }
                  v41 = 1;
                  v64 = 1;
                  v63 = 0;
                  v65 = 0;
                  v45 = sub_22F30D0F4(v6, a4, v31, (uint64_t)&v63);
                  v43 = v64;
                  if (v45)
                    goto LABEL_179;
                  if (v64 > 0x40)
                    v46 = *v63;
                  else
                    v46 = (uint64_t)((_QWORD)v63 << -(char)v64) >> -(char)v64;
                  v41 = 0;
                  if (v46 > 179)
                  {
                    if (v46 == 180 || v46 == 270)
                      goto LABEL_179;
                  }
                  else if (!v46 || v46 == 90)
                  {
                    goto LABEL_179;
                  }
                  sub_22EFFAE7C(a4);
                  v48 = v51;
                  v49 = v6;
                  v50 = 4681;
LABEL_178:
                  sub_22E8FCA40(v49, v48, v50, 0, (uint64_t)v61);
                  sub_22F0D4E74((uint64_t)v40);
                  v60 = v52;
                  v41 = *(_BYTE *)(sub_22E8906A0((uint64_t)v61, &v60) + 80) != 0;
                  sub_22E903BEC(v61);
                  v43 = v64;
LABEL_179:
                  if (v43 >= 0x41 && v63)
                    MEMORY[0x2348A0E84](v63, 0x1000C8000313F17);
LABEL_158:
                  v29 |= v41;
LABEL_150:
                  v28 += 12;
                  if (v28 != v30)
                    continue;
                  if (v66 != v68)
                    free(v66);
                  if ((v29 & 1) != 0)
                    return 1;
                  goto LABEL_189;
                case 0xC:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 0;
                  v32 = 13;
                  goto LABEL_149;
                case 0xD:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 0;
                  v32 = 1;
                  goto LABEL_149;
                case 0xE:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 0;
                  v32 = 2;
                  goto LABEL_149;
                case 0xF:
                  v33 = (uint64_t)v6;
                  v34 = a4;
                  v35 = 0;
                  v32 = 3;
LABEL_149:
                  v29 |= sub_22E9797E0(v33, v34, v31, v35, v32, 1);
                  goto LABEL_150;
                default:
                  goto LABEL_150;
              }
            }
          }
          if (v66 != v68)
            free(v66);
          goto LABEL_189;
        }
        if (v5 <= 4423)
        {
          if (v5 <= 3676)
          {
            if (v5 > 3456)
            {
              switch(v5)
              {
                case 3572:
                case 3573:
                case 3574:
                case 3575:
                case 3576:
                case 3577:
                case 3578:
                case 3579:
                case 3580:
                  v14 = 0;
                  v15 = 3;
                  goto LABEL_51;
                case 3581:
                case 3582:
                case 3583:
                case 3584:
                case 3585:
                case 3586:
                case 3587:
                case 3588:
LABEL_50:
                  v14 = 0;
                  v15 = 2;
LABEL_51:
                  v13 = v15 & 0xFFFF0000FFFFFFFFLL | 0xA00000000;
                  goto LABEL_129;
                case 3589:
                  sub_22F2CF824((uint64_t)&v66, 0xB00000004, 0);
                  goto LABEL_127;
                case 3590:
                  sub_22F2CF824((uint64_t)&v66, 0xB00000004, 0);
                  goto LABEL_202;
                case 3591:
                case 3592:
                  goto LABEL_38;
                default:
                  if (v5 == 3457)
                    goto LABEL_122;
                  goto LABEL_189;
              }
            }
            switch(v5)
            {
              case 3406:
              case 3407:
              case 3408:
                goto LABEL_129;
              case 3409:
              case 3410:
              case 3411:
LABEL_72:
                v14 = 32;
                goto LABEL_129;
              case 3412:
              case 3413:
              case 3414:
LABEL_109:
                v14 = 64;
                goto LABEL_129;
              case 3415:
              case 3416:
              case 3417:
                goto LABEL_128;
              default:
                if (v5 == 3451)
                {
                  v14 = 0;
                  v18 = 3;
LABEL_43:
                  v13 = v18 & 0xFFFF0000FFFFFFFFLL | 0xF00000000;
                  goto LABEL_129;
                }
                if (v5 != 3454)
                  goto LABEL_189;
LABEL_122:
                v14 = 0;
                v23 = 3;
                break;
            }
            goto LABEL_123;
          }
          if (v5 <= 3960)
          {
            switch(v5)
            {
              case 3677:
              case 3678:
              case 3679:
              case 3680:
              case 3681:
              case 3682:
              case 3683:
              case 3684:
              case 3685:
                goto LABEL_99;
              case 3686:
              case 3688:
              case 3690:
LABEL_96:
                v25 = 16;
                goto LABEL_98;
              case 3687:
              case 3689:
              case 3691:
LABEL_97:
                v25 = 32;
LABEL_98:
                sub_22F2CF824((uint64_t)&v66, 0x800000003, v25);
LABEL_99:
                v14 = 0;
                v16 = 4;
                goto LABEL_100;
              case 3692:
              case 3693:
              case 3694:
              case 3695:
              case 3696:
              case 3697:
              case 3698:
              case 3699:
LABEL_38:
                v14 = 0;
                v16 = 3;
LABEL_100:
                v13 = v16 & 0xFFFF0000FFFFFFFFLL | 0xB00000000;
                goto LABEL_129;
              default:
                if (v5 == 3959)
                  goto LABEL_120;
                goto LABEL_189;
            }
          }
          if (v5 <= 4211)
          {
            if (v5 != 3961 && v5 != 3963 && v5 != 3969)
              goto LABEL_189;
LABEL_120:
            v13 = 0;
            v14 = 0;
            goto LABEL_129;
          }
          switch(v5)
          {
            case 4212:
            case 4214:
LABEL_127:
              v13 = 0x900000003;
LABEL_128:
              v14 = 8;
              goto LABEL_129;
            case 4213:
            case 4215:
LABEL_202:
              v13 = 0x900000003;
LABEL_68:
              v14 = 16;
              goto LABEL_129;
            default:
              break;
          }
        }
        else if (v5 <= 6031)
        {
          switch(v5)
          {
            case 4424:
            case 4425:
            case 4428:
            case 4432:
              v13 = 0x200000002;
              goto LABEL_68;
            case 4426:
            case 4429:
            case 4433:
              v13 = 0x200000002;
              goto LABEL_72;
            case 4427:
            case 4430:
            case 4434:
              v13 = 0x200000002;
              goto LABEL_109;
            case 4431:
            case 4435:
              v13 = 0x200000002;
              goto LABEL_128;
            case 4436:
            case 4437:
            case 4438:
            case 4439:
            case 4440:
            case 4441:
            case 4442:
            case 4443:
            case 4444:
            case 4445:
            case 4446:
            case 4447:
            case 4448:
            case 4449:
            case 4450:
            case 4451:
            case 4452:
            case 4453:
            case 4454:
            case 4455:
            case 4456:
            case 4457:
            case 4458:
            case 4459:
            case 4460:
            case 4461:
            case 4462:
            case 4463:
            case 4464:
            case 4465:
            case 4466:
            case 4467:
            case 4468:
            case 4469:
            case 4470:
            case 4471:
              break;
            case 4472:
            case 4473:
            case 4474:
            case 4475:
            case 4476:
            case 4477:
            case 4478:
            case 4479:
            case 4480:
            case 4481:
            case 4482:
            case 4483:
LABEL_34:
              v14 = 0;
              v13 = 0xD00000001;
              goto LABEL_129;
            case 4484:
            case 4485:
            case 4486:
            case 4487:
            case 4488:
            case 4489:
            case 4490:
            case 4491:
            case 4492:
            case 4493:
            case 4494:
            case 4495:
LABEL_41:
              v14 = 0;
              v13 = 0xE00000001;
              goto LABEL_129;
            case 4496:
            case 4497:
            case 4498:
            case 4499:
            case 4500:
            case 4501:
            case 4502:
            case 4503:
            case 4504:
            case 4505:
            case 4506:
            case 4507:
LABEL_42:
              v14 = 0;
              v18 = 1;
              goto LABEL_43;
            default:
              switch(v5)
              {
                case 5965:
                case 5968:
                case 5971:
LABEL_66:
                  v19 = 3;
LABEL_67:
                  v13 = v19 & 0xFFFF0000FFFFFFFFLL | 0x700000000;
                  goto LABEL_68;
                case 5966:
                case 5969:
                case 5972:
LABEL_69:
                  v21 = 3;
LABEL_71:
                  v13 = v21 & 0xFFFF0000FFFFFFFFLL | 0x700000000;
                  goto LABEL_72;
                case 5967:
                case 5970:
                case 5973:
LABEL_73:
                  v22 = 3;
LABEL_102:
                  v13 = v22 & 0xFFFF0000FFFFFFFFLL | 0x700000000;
                  goto LABEL_109;
                default:
                  goto LABEL_189;
              }
          }
        }
        else if (v5 <= 6144)
        {
          switch(v5)
          {
            case 6032:
            case 6033:
            case 6035:
            case 6051:
            case 6052:
            case 6054:
              goto LABEL_66;
            case 6034:
            case 6036:
            case 6053:
            case 6055:
              goto LABEL_69;
            case 6037:
            case 6038:
            case 6039:
            case 6040:
            case 6041:
            case 6042:
            case 6043:
            case 6044:
            case 6045:
            case 6046:
            case 6047:
            case 6048:
            case 6049:
            case 6050:
              break;
            default:
              switch(v5)
              {
                case 6078:
                case 6081:
                case 6084:
                  goto LABEL_66;
                case 6079:
                case 6082:
                case 6085:
                  goto LABEL_69;
                case 6080:
                case 6083:
                case 6086:
                  goto LABEL_73;
                default:
                  goto LABEL_189;
              }
          }
        }
        else
        {
          switch(v5)
          {
            case 6145:
            case 6146:
            case 6148:
            case 6164:
            case 6165:
            case 6167:
              goto LABEL_66;
            case 6147:
            case 6149:
            case 6166:
            case 6168:
              goto LABEL_69;
            case 6150:
            case 6151:
            case 6152:
            case 6153:
            case 6154:
            case 6155:
            case 6156:
            case 6157:
            case 6158:
            case 6159:
            case 6160:
            case 6161:
            case 6162:
            case 6163:
              break;
            default:
              switch(v5)
              {
                case 6274:
                case 6277:
                case 6280:
LABEL_54:
                  v19 = 2;
                  goto LABEL_67;
                case 6275:
                case 6278:
                case 6281:
LABEL_70:
                  v21 = 2;
                  goto LABEL_71;
                case 6276:
                case 6279:
                case 6282:
                  v22 = 2;
                  goto LABEL_102;
                default:
                  switch(v5)
                  {
                    case 6388:
                    case 6390:
                    case 6404:
                    case 6406:
                      goto LABEL_54;
                    case 6389:
                    case 6391:
                    case 6405:
                    case 6407:
                      goto LABEL_70;
                    default:
                      goto LABEL_189;
                  }
              }
          }
        }
LABEL_189:
        v12 = 0;
        v11 = 15;
        if (v5 > 9010)
        {
          if (v5 == 9011)
          {
LABEL_194:
            a1 = v6;
            v9 = a4;
            v10 = 0;
            return sub_22E9797E0((uint64_t)a1, v9, v10, 0, v11, 1);
          }
          if (v5 == 9031)
          {
            v11 = 0xFFFF;
            goto LABEL_194;
          }
          return v12;
        }
        if (v5 == 9009)
          goto LABEL_194;
        if (v5 != 9010)
          return v12;
        v12 = 1;
        LODWORD(v67) = 1;
        v66 = 0;
        BYTE4(v67) = 0;
        if (sub_22F30D0F4(v6, a4, 0, (uint64_t)&v66))
        {
LABEL_198:
          if (v67 >= 0x41 && v66)
            MEMORY[0x2348A0E84](v66, 0x1000C8000313F17);
          return v12;
        }
        if (sub_22F30FDA8((uint64_t)&v66, 0) && sub_22F30FE14((uint64_t)&v66, 15))
        {
LABEL_209:
          v12 = 0;
          goto LABEL_198;
        }
        if (sub_22E42E5EC((uint64_t)&v66, 16)
          || sub_22E42E5EC((uint64_t)&v66, 20)
          || sub_22E42E5EC((uint64_t)&v66, 24)
          || sub_22E42E5EC((uint64_t)&v66, 28))
        {
          if ((*(unsigned int (**)(uint64_t, const char *, uint64_t))(*(_QWORD *)a2 + 568))(a2, "xs", 2))
            goto LABEL_209;
          sub_22EFFAE7C(a4);
          v54 = v53;
          v55 = v6;
          v56 = 2699;
        }
        else
        {
          sub_22EFFAE7C(a4);
          v54 = v58;
          v55 = v6;
          v56 = 2698;
        }
        sub_22E8FCA40(v55, v54, v56, 0, (uint64_t)v61);
        if (v67 > 0x40)
          v57 = *(_QWORD *)v66;
        else
          v57 = (uint64_t)((_QWORD)v66 << -(uint64_t)v67) >> -(uint64_t)v67;
        v63 = (uint64_t *)v57;
        sub_22E97D804((uint64_t)v61, (uint64_t *)&v63);
        v12 = v62 != 0;
        sub_22E903BEC(v61);
        goto LABEL_198;
      }
      v9 = a4;
      v10 = 0;
      v11 = 0x7FFF;
      return sub_22E9797E0((uint64_t)a1, v9, v10, 0, v11, 1);
  }
}

uint64_t sub_22E9665C0(_QWORD *a1, int a2, unsigned int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  unsigned __int8 **v16;
  int v17;
  unsigned int v19;
  unsigned int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unsigned __int8 *v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  unsigned int v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  int v42;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  BOOL v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v57;
  int v58;
  unsigned int v59[24];
  uint64_t v60;
  unsigned int v61;
  char v62;

  if (sub_22E979C64(a1, a3, 2u))
    return 1;
  v7 = *(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 4] + ((unint64_t)*a3 >> 24));
  sub_22F00905C(v7, a1[11], 0, (uint64_t)&v60);
  if (!v62)
  {
    if ((a2 - 2024) > 2)
      v20 = 4551;
    else
      v20 = dword_22F468E64[a2 - 2024];
    sub_22F0D5A50(v7);
    sub_22E8FCA40(a1, v21, v20, 0, (uint64_t)v59);
    v58 = 2;
    v22 = sub_22E8900C4((uint64_t)v59, &v58);
    sub_22F0D4E74(v7);
    v57 = v23;
    sub_22E8906A0(v22, &v57);
    sub_22E903BEC(v59);
    v6 = 1;
    goto LABEL_121;
  }
  v8 = *(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2] + ((unint64_t)*a3 >> 24));
  switch(a2)
  {
    case 2024:
      v9 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
      v10 = (*(_DWORD *)(v9 + 16) & 0xFE00000u) < 0x8180001 || v9 == 0;
      if (!v10 && *(_DWORD *)(v9 + 16) == 11)
        goto LABEL_33;
      v12 = *(unsigned __int8 **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                + ((unint64_t)*a3 >> 24));
      while (2)
      {
        v13 = v12;
        v14 = *v12;
        if (v14 > 213)
        {
          if (v14 == 233)
          {
            if ((*(_DWORD *)v13 & 0x7C0000) != 0x300000)
              goto LABEL_28;
            v16 = (unsigned __int8 **)(v13 + 16);
          }
          else
          {
            if (v14 != 214)
              goto LABEL_28;
            v16 = (unsigned __int8 **)(v13 + 24);
          }
LABEL_27:
          v12 = *v16;
          if (v12 == v13)
            goto LABEL_28;
          continue;
        }
        break;
      }
      if (v14 == 155)
      {
        if ((**((_DWORD **)v13 + 2) & 0x18000) != 0)
          goto LABEL_28;
        if (v13[48])
          v16 = (unsigned __int8 **)(v13 + 24);
        else
          v16 = (unsigned __int8 **)(v13 + 32);
        goto LABEL_27;
      }
      if (v14 == 176)
      {
        v15 = *((unsigned int *)v13 + 5);
        if ((_DWORD)v15 != -1)
        {
          v16 = (unsigned __int8 **)&v13[8 * v15 + 40];
          goto LABEL_27;
        }
      }
LABEL_28:
      v17 = *(_DWORD *)v13;
      if ((v17 & 0x1C00) != 0x400 && v17 != 107 && v17 != 188)
      {
LABEL_33:
        v19 = 4553;
        goto LABEL_112;
      }
LABEL_65:
      v6 = 0;
      v32 = *(_QWORD *)(a1[11] + 16528);
LABEL_120:
      *((_QWORD *)a3 + 1) = v32;
LABEL_121:
      if (v62 && v61 >= 0x41 && v60)
        MEMORY[0x2348A0E84](v60, 0x1000C8000313F17);
      return v6;
    case 2025:
      goto LABEL_119;
    case 2026:
      v24 = (uint64_t *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
      v25 = *v24;
      if ((*(_DWORD *)(*v24 + 16) & 0xFE00000u) >= 0x8180001
        && v25 != 0
        && *(_DWORD *)(*v24 + 16) == 11)
      {
        goto LABEL_111;
      }
      v28 = *(unsigned __int8 **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                + ((unint64_t)*a3 >> 24));
      do
      {
        LODWORD(v29) = *v28;
        if (v29 > 0xD5)
        {
          if ((_DWORD)v29 == 233)
          {
            LODWORD(v29) = *(_DWORD *)v28;
            if ((*(_DWORD *)v28 & 0x7C0000) != 0x300000)
              goto LABEL_64;
            v30 = v28 + 16;
          }
          else
          {
            if ((_DWORD)v29 != 214)
              break;
            v30 = v28 + 24;
          }
        }
        else if ((_DWORD)v29 == 155)
        {
          if ((**((_DWORD **)v28 + 2) & 0x18000) != 0)
            goto LABEL_111;
          v30 = v28 + 24;
          if (!v28[48])
            v30 = v28 + 32;
          LOBYTE(v29) = -101;
        }
        else
        {
          if ((_DWORD)v29 != 176)
            break;
          v29 = *((unsigned int *)v28 + 5);
          if ((_DWORD)v29 == -1)
            goto LABEL_111;
          v30 = &v28[8 * v29 + 40];
          LOBYTE(v29) = -80;
        }
        v31 = *(unsigned __int8 **)v30;
        v10 = v31 == v28;
        v28 = v31;
      }
      while (!v10);
      if (v29 != 233 && v29 != 161)
        goto LABEL_111;
LABEL_64:
      if (sub_22F10D4DC(v25))
        goto LABEL_65;
      v50 = *(_QWORD *)(*(_QWORD *)(sub_22F10CF48(*v24) + 8) & 0xFFFFFFFFFFFFFFF0);
      v51 = *(unsigned __int8 *)(v50 + 16);
      if (v50 && v51 == 45)
      {
        if (*(_QWORD *)(sub_22F114198(*(_QWORD *)(v50 + 24)) + 40))
          goto LABEL_65;
LABEL_111:
        v19 = 4554;
        goto LABEL_112;
      }
      v19 = 4554;
      if (!v50 || v51 != 44 || !*(_QWORD *)(sub_22F114198(*(_QWORD *)(v50 + 24)) + 40))
        goto LABEL_112;
      goto LABEL_65;
    case 2027:
      v33 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_DWORD *)(v33 + 16) & 0xFE00000u) >= 0x8180001 && v33 != 0 && *(_DWORD *)(v33 + 16) == 11)
        goto LABEL_107;
      v36 = *(unsigned __int8 **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                + ((unint64_t)*a3 >> 24));
      do
      {
        v37 = v36;
        v38 = *v36;
        if (v38 > 0xD5)
        {
          if (v38 == 233)
          {
            if ((*(_DWORD *)v36 & 0x7C0000) != 0x300000)
              goto LABEL_90;
            v38 = *(_DWORD *)v36;
            v40 = v36 + 16;
          }
          else
          {
            if (v38 != 214)
              break;
            v40 = v36 + 24;
          }
        }
        else if (v38 == 155)
        {
          if ((**((_DWORD **)v36 + 2) & 0x18000) != 0)
            goto LABEL_107;
          v40 = v36 + 24;
          if (!v37[48])
            v40 = v37 + 32;
          v38 = 155;
        }
        else
        {
          if (v38 != 176)
            break;
          v39 = *((unsigned int *)v36 + 5);
          if ((_DWORD)v39 == -1)
            goto LABEL_107;
          v40 = &v36[8 * v39 + 40];
          v38 = 176;
        }
        v36 = *(unsigned __int8 **)v40;
      }
      while (v36 != v37);
      if (v38 != 233)
        goto LABEL_107;
LABEL_90:
      v41 = (unsigned __int8 *)*((_QWORD *)v37 + 2);
      if (*v41 != 144)
        goto LABEL_107;
      v42 = (*(_DWORD *)v41 >> 18) & 0x7F;
      if (v42 != 22 && v42 != 14)
        goto LABEL_107;
      v44 = (unsigned __int8 *)*((_QWORD *)v41 + 2);
      if (*v44 != 161)
        goto LABEL_107;
      v45 = *((_QWORD *)v44 + 2);
      v19 = 4550;
      if (!v45)
        goto LABEL_112;
      if ((*(_DWORD *)(v45 + 28) & 0x7F) != 0x43)
        goto LABEL_112;
      v46 = *(_QWORD *)(*(_QWORD *)(sub_22F10CF48(v33) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (!v46 || *(_BYTE *)(v46 + 16) != 44)
        goto LABEL_112;
      v47 = sub_22F114198(*(_QWORD *)(v46 + 24));
      v48 = sub_22E49F9AC(v47);
      sub_22EFC3500(v47);
      if (v48)
        v49 = v45 == v48;
      else
        v49 = 1;
      if (!v49)
      {
        while (1)
        {
          v48 = *(_QWORD *)(v48 + 8) & 0xFFFFFFFFFFFFFFF8;
          if (!v48)
            break;
          if ((*(_DWORD *)(v48 + 28) & 0x7F) == 0x43 && v45 == v48)
            goto LABEL_119;
        }
      }
      if (!v48)
      {
LABEL_107:
        v19 = 4550;
LABEL_112:
        sub_22F0D5A50(v8);
        sub_22E8FCA40(a1, v52, v19, 0, (uint64_t)v59);
        v6 = 1;
        v58 = 1;
        v53 = sub_22E8900C4((uint64_t)v59, &v58);
        sub_22F0D4E74(v8);
        v57 = v54;
        sub_22E8906A0(v53, &v57);
        sub_22E903BEC(v59);
        goto LABEL_121;
      }
LABEL_119:
      v6 = 0;
      v32 = *(_QWORD *)(a1[11] + 16536);
      goto LABEL_120;
    default:
      goto LABEL_65;
  }
}

uint64_t sub_22E966B98(_QWORD *a1, _DWORD *a2, int a3, unsigned int *a4)
{
  BOOL v4;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  _QWORD *v13;
  unsigned int v14;
  unsigned __int8 *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  BOOL v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  char v37;
  int v38;
  char v39;
  uint64_t v40;
  unsigned int v41[20];
  unsigned __int8 v42;
  uint64_t v43;
  unsigned int v44;
  char v45;
  uint64_t v46;
  int v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  if (a3 == 2026)
  {
    v9 = *(unsigned __int8 **)((char *)&a4[2 * (((unint64_t)*a4 >> 18) & 1) + 2] + ((unint64_t)*a4 >> 24));
    v15 = sub_22EFFA6B0(v9);
    if (*v15 == 225)
    {
      if (((*(uint64_t (**)(_DWORD *, unsigned __int8 *, _QWORD))(*(_QWORD *)a2 + 592))(a2, &v15[4 * *((unsigned int *)v15 + 1) + 20], ((*(_DWORD *)v15 >> 21) & 7u) * *((_DWORD *)v15 + 4)) & 1) == 0)
      {
        sub_22EFFAE7C(a4);
        v12 = v22;
        v13 = a1;
        v14 = 3652;
        goto LABEL_10;
      }
      return 0;
    }
LABEL_9:
    sub_22EFFAE7C(a4);
    v12 = v17;
    v13 = a1;
    v14 = 3350;
    goto LABEL_10;
  }
  if (a3 == 2025)
  {
    v9 = *(unsigned __int8 **)((char *)&a4[2 * (((unint64_t)*a4 >> 18) & 1) + 2] + ((unint64_t)*a4 >> 24));
    v10 = sub_22EFFA6B0(v9);
    if (*v10 == 225)
    {
      if (((*(uint64_t (**)(_DWORD *, unsigned __int8 *, _QWORD))(*(_QWORD *)a2 + 576))(a2, &v10[4 * *((unsigned int *)v10 + 1) + 20], ((*(_DWORD *)v10 >> 21) & 7u) * *((_DWORD *)v10 + 4)) & 1) == 0)
      {
        sub_22EFFAE7C(a4);
        v12 = v11;
        v13 = a1;
        v14 = 3654;
LABEL_10:
        sub_22E8FCA40(v13, v12, v14, 0, (uint64_t)v41);
        sub_22F0D4E74((uint64_t)v9);
        v43 = v18;
        v19 = *(unsigned __int8 *)(sub_22E8906A0((uint64_t)v41, &v43) + 80);
LABEL_14:
        v16 = v19 != 0;
        sub_22E903BEC(v41);
        return v16;
      }
      return 0;
    }
    goto LABEL_9;
  }
  if ((a3 & 0xFFFFFFFE) == 0x7EE && a2[14] != 41)
  {
    sub_22F0D5A50(*(_QWORD *)((char *)a4 + *((unsigned __int8 *)a4 + 3)));
    sub_22E8FCA40(a1, v20, 0xA0Eu, 0, (uint64_t)v41);
    v19 = v42;
    goto LABEL_14;
  }
  if (sub_22F3107D0(a1, a3, a4) || sub_22F310B44(a1, a3, a4))
    return 1;
  if ((a3 - 4079) >= 5)
  {
    if ((a3 - 4075) < 4)
    {
      v16 = 1;
      if (sub_22E9797E0((uint64_t)a1, a4, 0, 0, 7, 1))
        return v16;
    }
LABEL_50:
    v16 = 0;
    v35 = 1;
    if (a3 > 3125)
    {
      if (a3 <= 3510)
      {
        switch(a3)
        {
          case 3126:
          case 3127:
          case 3128:
          case 3129:
          case 3130:
          case 3131:
          case 3132:
          case 3133:
          case 3134:
            goto LABEL_83;
          case 3135:
          case 3136:
          case 3137:
          case 3138:
          case 3139:
          case 3140:
          case 3141:
          case 3142:
          case 3143:
          case 3144:
          case 3145:
          case 3146:
          case 3147:
          case 3148:
          case 3149:
          case 3150:
          case 3151:
          case 3152:
          case 3153:
          case 3154:
          case 3155:
          case 3160:
          case 3161:
          case 3168:
          case 3169:
          case 3170:
          case 3171:
          case 3172:
          case 3173:
          case 3174:
          case 3175:
          case 3176:
          case 3177:
          case 3178:
          case 3179:
          case 3180:
          case 3181:
          case 3182:
          case 3183:
          case 3184:
          case 3195:
          case 3196:
          case 3199:
          case 3200:
          case 3201:
          case 3202:
          case 3207:
          case 3208:
          case 3209:
          case 3210:
          case 3211:
          case 3212:
            return v16;
          case 3156:
          case 3157:
          case 3158:
          case 3159:
          case 3185:
          case 3186:
            goto LABEL_95;
          case 3162:
          case 3163:
          case 3164:
          case 3165:
          case 3187:
          case 3188:
          case 3189:
          case 3190:
          case 3191:
          case 3192:
          case 3193:
          case 3194:
          case 3197:
          case 3198:
          case 3203:
          case 3204:
          case 3205:
          case 3206:
          case 3213:
          case 3214:
            goto LABEL_118;
          case 3166:
          case 3167:
            goto LABEL_79;
          default:
            switch(a3)
            {
              case 3336:
              case 3337:
                goto LABEL_118;
              case 3338:
              case 3339:
              case 3342:
              case 3343:
              case 3344:
              case 3345:
              case 3346:
              case 3347:
              case 3348:
              case 3349:
              case 3350:
              case 3351:
              case 3352:
              case 3353:
              case 3354:
              case 3355:
              case 3356:
              case 3357:
              case 3358:
              case 3359:
              case 3360:
              case 3361:
              case 3362:
              case 3363:
                return v16;
              case 3340:
              case 3341:
                goto LABEL_79;
              case 3364:
              case 3365:
              case 3366:
              case 3367:
              case 3368:
              case 3369:
              case 3370:
              case 3371:
              case 3372:
              case 3373:
              case 3374:
              case 3375:
LABEL_74:
                LODWORD(v16) = 0;
                v36 = 255;
                v35 = 3;
                return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
              case 3376:
              case 3377:
              case 3378:
              case 3379:
              case 3380:
              case 3381:
                goto LABEL_83;
              case 3382:
              case 3383:
              case 3384:
              case 3385:
                goto LABEL_125;
              default:
                switch(a3)
                {
                  case 3236:
                  case 3237:
                    goto LABEL_118;
                  case 3256:
                  case 3257:
                    goto LABEL_83;
                  case 3262:
                  case 3263:
                  case 3264:
                  case 3265:
                  case 3266:
                  case 3267:
                  case 3268:
                  case 3269:
                  case 3278:
                  case 3279:
                  case 3280:
                  case 3281:
                  case 3282:
                  case 3283:
                  case 3284:
                  case 3285:
                    goto LABEL_74;
                  case 3272:
                  case 3273:
                    goto LABEL_95;
                  default:
                    return v16;
                }
            }
        }
      }
      if (a3 <= 3658)
      {
        v36 = 1;
        switch(a3)
        {
          case 3511:
          case 3513:
          case 3516:
          case 3517:
          case 3518:
          case 3519:
          case 3520:
            return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
          case 3512:
          case 3514:
          case 3515:
            goto LABEL_110;
          case 3521:
          case 3523:
          case 3525:
          case 3526:
          case 3527:
          case 3528:
          case 3529:
          case 3530:
            goto LABEL_64;
          case 3522:
          case 3524:
          case 3531:
          case 3532:
            goto LABEL_125;
          case 3533:
          case 3534:
          case 3535:
          case 3536:
          case 3537:
          case 3538:
            goto LABEL_96;
          case 3549:
          case 3550:
          case 3563:
          case 3564:
          case 3565:
          case 3566:
          case 3567:
          case 3568:
          case 3569:
          case 3570:
          case 3612:
          case 3613:
          case 3614:
          case 3615:
          case 3616:
          case 3617:
          case 3618:
          case 3619:
          case 3637:
            goto LABEL_118;
          case 3624:
          case 3625:
          case 3626:
          case 3627:
            goto LABEL_83;
          case 3635:
          case 3636:
            goto LABEL_87;
          default:
            return v16;
        }
      }
      switch(a3)
      {
        case 3716:
        case 3717:
        case 3718:
          goto LABEL_96;
        case 3719:
        case 3720:
        case 3721:
        case 3722:
        case 3723:
        case 3724:
        case 3725:
        case 3726:
        case 3731:
        case 3732:
        case 3734:
        case 3735:
        case 3738:
        case 3739:
        case 3740:
        case 3741:
          return v16;
        case 3727:
        case 3728:
        case 3729:
        case 3730:
        case 3742:
        case 3743:
        case 3744:
        case 3745:
          goto LABEL_118;
        case 3733:
          goto LABEL_95;
        case 3736:
        case 3737:
LABEL_79:
          LODWORD(v16) = 0;
          v36 = 255;
          goto LABEL_80;
        default:
          v36 = 1;
          switch(a3)
          {
            case 4001:
              return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
            case 4002:
              goto LABEL_64;
            case 4003:
              return v16;
            case 4004:
              goto LABEL_110;
            case 4005:
              goto LABEL_125;
            default:
              if ((a3 - 3659) < 2)
                goto LABEL_118;
              return v16;
          }
      }
    }
    if (a3 > 2730)
    {
      if (a3 > 2826)
      {
        v36 = 1;
        switch(a3)
        {
          case 2827:
          case 2828:
          case 2829:
          case 2830:
          case 2831:
          case 2832:
            goto LABEL_83;
          case 2833:
            return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
          case 2834:
            goto LABEL_110;
          case 2835:
          case 2836:
          case 2837:
          case 2838:
          case 2839:
          case 2840:
          case 2841:
          case 2842:
          case 2843:
          case 2844:
          case 2845:
          case 2846:
          case 2847:
          case 2848:
          case 2849:
          case 2850:
          case 2851:
          case 2852:
          case 2853:
          case 2854:
          case 2855:
          case 2856:
          case 2857:
          case 2858:
          case 2859:
          case 2860:
          case 2861:
          case 2862:
          case 2863:
          case 2864:
          case 2865:
          case 2866:
          case 2867:
          case 2868:
          case 2869:
          case 2870:
          case 2871:
          case 2872:
          case 2873:
          case 2874:
          case 2875:
          case 2876:
          case 2877:
          case 2878:
          case 2887:
          case 2888:
          case 2889:
          case 2890:
            return v16;
          case 2879:
          case 2880:
          case 2881:
          case 2882:
          case 2883:
          case 2884:
          case 2885:
          case 2886:
            v36 = 3;
            LODWORD(v16) = 2;
LABEL_80:
            v35 = 4;
            return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
          case 2891:
          case 2892:
          case 2893:
          case 2894:
          case 2895:
          case 2896:
          case 2897:
          case 2898:
          case 2899:
          case 2900:
          case 2901:
          case 2902:
          case 2903:
          case 2904:
          case 2905:
          case 2906:
          case 2907:
          case 2908:
          case 2909:
          case 2910:
          case 2911:
          case 2912:
          case 2913:
          case 2914:
            goto LABEL_77;
          default:
            if ((a3 - 3099) < 9)
              goto LABEL_83;
            if ((a3 - 3057) >= 4)
              return v16;
            goto LABEL_118;
        }
      }
      if ((a3 - 2784) > 0x13)
        goto LABEL_76;
      v38 = 1 << (a3 + 32);
      if ((v38 & 0x3F) != 0)
      {
LABEL_87:
        LODWORD(v16) = 0;
        v36 = 31;
        goto LABEL_126;
      }
      if ((v38 & 0x800C0) == 0)
      {
LABEL_76:
        if ((a3 - 2731) >= 8)
        {
          if ((a3 - 2739) >= 4)
            return v16;
          LODWORD(v16) = 0;
          v35 = 3;
          goto LABEL_111;
        }
LABEL_77:
        LODWORD(v16) = 0;
        v36 = 7;
LABEL_126:
        v35 = 2;
        return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
      }
    }
    else
    {
      if (a3 > 2420)
      {
        if (a3 <= 2554)
        {
          v36 = 1;
          switch(a3)
          {
            case 2421:
            case 2425:
            case 2490:
              goto LABEL_95;
            case 2422:
            case 2426:
            case 2442:
            case 2443:
            case 2444:
              goto LABEL_83;
            case 2423:
            case 2424:
            case 2427:
            case 2437:
            case 2438:
            case 2439:
            case 2440:
            case 2441:
            case 2452:
            case 2453:
            case 2454:
            case 2455:
            case 2458:
            case 2459:
            case 2460:
            case 2461:
            case 2462:
            case 2463:
            case 2464:
            case 2465:
            case 2466:
            case 2467:
            case 2468:
            case 2469:
            case 2470:
            case 2471:
            case 2472:
            case 2473:
            case 2474:
            case 2475:
            case 2476:
            case 2477:
            case 2478:
            case 2479:
            case 2480:
            case 2481:
            case 2482:
            case 2483:
            case 2484:
            case 2485:
              return v16;
            case 2428:
            case 2429:
            case 2430:
            case 2431:
            case 2432:
            case 2433:
            case 2489:
              goto LABEL_87;
            case 2434:
            case 2435:
            case 2436:
              return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
            case 2445:
              goto LABEL_110;
            case 2446:
            case 2448:
              goto LABEL_118;
            case 2447:
            case 2456:
            case 2457:
            case 2487:
              goto LABEL_96;
            case 2449:
            case 2450:
            case 2451:
              goto LABEL_64;
            case 2486:
              LODWORD(v16) = 0;
              v36 = 31;
              return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
            case 2488:
              goto LABEL_116;
            case 2491:
              goto LABEL_77;
            default:
              v39 = a3 + 55;
              if ((a3 - 2505) > 0x29)
                return v16;
              if (((1 << v39) & 0x20E00000000) != 0)
                goto LABEL_118;
              if (((1 << v39) & 0x11) == 0)
                return v16;
              goto LABEL_83;
          }
        }
        v36 = 1;
        switch(a3)
        {
          case 2555:
          case 2565:
          case 2568:
            goto LABEL_118;
          case 2556:
          case 2557:
          case 2558:
          case 2559:
          case 2560:
          case 2561:
          case 2564:
          case 2566:
            return v16;
          case 2562:
            goto LABEL_95;
          case 2563:
          case 2567:
            goto LABEL_83;
          case 2569:
            return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
          case 2570:
LABEL_64:
            LODWORD(v16) = 0;
            goto LABEL_126;
          default:
            if ((a3 - 2605) < 2)
              goto LABEL_118;
            if (a3 != 2652)
              return v16;
            goto LABEL_125;
        }
      }
      if (a3 > 2285)
      {
        v37 = a3 - 40;
        if ((a3 - 2344) <= 0xD)
        {
          if (((1 << v37) & 0x809) != 0)
          {
LABEL_96:
            LODWORD(v16) = 0;
            v36 = 15;
            return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
          }
          if (((1 << v37) & 0x1006) != 0)
          {
LABEL_95:
            LODWORD(v16) = 0;
            v36 = 15;
            goto LABEL_126;
          }
          if (a3 == 2357)
          {
LABEL_125:
            LODWORD(v16) = 0;
            v36 = 3;
            goto LABEL_126;
          }
        }
        switch(a3)
        {
          case 2321:
          case 2322:
            goto LABEL_118;
          case 2323:
          case 2324:
          case 2325:
          case 2327:
          case 2328:
            return v16;
          case 2326:
          case 2329:
            goto LABEL_83;
          case 2330:
            goto LABEL_125;
          case 2331:
            goto LABEL_95;
          default:
            if (a3 != 2286)
              return v16;
            goto LABEL_125;
        }
      }
      if (a3 <= 2239)
      {
        if (a3 <= 2131)
        {
          if (a3 != 2058)
          {
            if (a3 == 2117)
            {
              v36 = 1;
              return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
            }
            if (a3 != 2131)
              return v16;
            goto LABEL_110;
          }
LABEL_116:
          LODWORD(v16) = 0;
          v36 = 7;
          return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
        }
        if ((a3 - 2238) < 2)
        {
LABEL_110:
          LODWORD(v16) = 0;
LABEL_111:
          v36 = 3;
          return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
        }
        if (a3 != 2132)
          return v16;
        goto LABEL_125;
      }
      if (a3 <= 2279)
      {
        if (a3 == 2240)
          goto LABEL_116;
        if (a3 != 2241)
        {
          if (a3 != 2275)
            return v16;
LABEL_83:
          LODWORD(v16) = 0;
          v36 = 255;
          goto LABEL_126;
        }
        goto LABEL_77;
      }
      if ((a3 - 2280) >= 3)
        return v16;
    }
LABEL_118:
    LODWORD(v16) = 0;
    v36 = 255;
    return sub_22E9797E0((uint64_t)a1, a4, v35, v16, v36, 0);
  }
  v23 = 0;
  v46 = 0x100000000;
  v47 = 2;
  do
  {
    if (sub_22E9797E0((uint64_t)a1, a4, *(_DWORD *)((char *)&v46 + v23), 0, 7, 1))
      return 1;
    v23 += 4;
  }
  while (v23 != 12);
  v24 = 0;
  v25 = 0;
  v26 = a4 + 2;
  while (1)
  {
    v27 = *(unsigned int *)((char *)&v46 + v24);
    if ((**(_DWORD **)((char *)&v26[2 * (((unint64_t)*a4 >> 18) & 1) + 2 * v27] + ((unint64_t)*a4 >> 24)) & 0x18000) == 0)
      break;
LABEL_26:
    v24 += 4;
    if (v24 == 12)
      goto LABEL_50;
  }
  v44 = 1;
  v43 = 0;
  v45 = 0;
  v28 = sub_22F30D0F4(a1, a4, v27, (uint64_t)&v43);
  v29 = v44;
  if (v28)
  {
    v30 = 0;
    v4 = 1;
    goto LABEL_42;
  }
  if (v45)
  {
    v31 = v43;
    if (v44 < 0x41)
      v31 = (uint64_t)&v43;
    goto LABEL_37;
  }
  if (v44 > 0x40)
  {
    v31 = v43;
LABEL_37:
    LODWORD(v31) = *(_DWORD *)v31;
    goto LABEL_38;
  }
  v31 = v43 << -(char)v44 >> -(char)v44;
LABEL_38:
  if ((v31 & 0xFFFFFFF8) != 0)
    abort();
  v32 = 1 << v31;
  if ((v32 & v25) != 0)
  {
    sub_22EFFAE7C(a4);
    sub_22E8FCA40(a1, v33, 0x1428u, 0, (uint64_t)v41);
    sub_22F0D4E74(*(_QWORD *)((char *)&v26[2 * (((unint64_t)*a4 >> 18) & 1) + 2 * v27]
                            + ((unint64_t)*a4 >> 24)));
    v40 = v34;
    v4 = *(_BYTE *)(sub_22E8906A0((uint64_t)v41, &v40) + 80) != 0;
    sub_22E903BEC(v41);
    v30 = 0;
    v29 = v44;
  }
  else
  {
    v25 |= v32;
    v30 = 1;
  }
LABEL_42:
  if (v29 >= 0x41 && v43)
    MEMORY[0x2348A0E84](v43, 0x1000C8000313F17);
  if (v30)
    goto LABEL_26;
  if (!v4)
    goto LABEL_50;
  return 1;
}

uint64_t sub_22E967410(_QWORD *a1, _QWORD *a2, int a3, unsigned int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  const char *v12;
  _QWORD *v13;
  unsigned int *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL4 v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  unsigned int *v63;
  int v64;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  _QWORD *v73;
  unsigned int *v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  uint64_t v80;
  unsigned int v81;
  char v82;
  uint64_t v83;
  uint64_t *v84;
  unsigned int v85;
  char v86;
  unsigned __int8 v87;
  uint64_t v88;
  uint64_t v89;

  v8 = *(_QWORD *)(*a2 - 24);
  v9 = sub_22F1E724C(a2, *(_DWORD *)((char *)a2 + v8 + 124));
  v81 = 1;
  v80 = 0;
  v82 = 0;
  if (a3 > 2122)
  {
    if (((a3 - 2607) > 0xB || ((1 << (a3 - 47)) & 0xC1F) == 0) && a3 != 2140 && a3 != 2123)
      goto LABEL_8;
  }
  else if ((a3 - 2057) > 0x3D || ((1 << (a3 - 9)) & 0x2907350000122355) == 0)
  {
    goto LABEL_8;
  }
  if ((_DWORD)v9 != 64)
  {
    sub_22EFFAE7C(a4);
    sub_22E8FCA40(a1, v18, 0xA0Fu, 0, (uint64_t)&v84);
    sub_22F0D4E74((uint64_t)a4);
    v89 = v19;
    v20 = sub_22E8906A0((uint64_t)&v84, &v89);
LABEL_13:
    v21 = *(unsigned __int8 *)(v20 + 80);
LABEL_14:
    v10 = v21 != 0;
LABEL_15:
    sub_22E903BEC((unsigned int *)&v84);
    goto LABEL_190;
  }
LABEL_8:
  v10 = 0;
  if (a3 <= 2181)
  {
    switch(a3)
    {
      case 2068:
      case 2069:
      case 2072:
      case 2073:
        goto LABEL_47;
      case 2070:
      case 2071:
      case 2076:
      case 2077:
      case 2078:
      case 2079:
      case 2080:
      case 2081:
      case 2082:
      case 2083:
      case 2084:
      case 2085:
      case 2086:
      case 2087:
      case 2095:
      case 2096:
      case 2100:
      case 2101:
      case 2102:
      case 2103:
      case 2104:
      case 2111:
      case 2112:
      case 2114:
      case 2115:
      case 2124:
      case 2125:
      case 2126:
      case 2127:
      case 2128:
      case 2129:
      case 2130:
      case 2131:
      case 2132:
      case 2133:
      case 2134:
      case 2135:
      case 2136:
      case 2137:
      case 2138:
      case 2139:
        goto LABEL_190;
      case 2074:
      case 2075:
        v24 = (uint64_t)a1;
        v25 = a4;
        v26 = 2;
        v34 = 1;
        goto LABEL_55;
      case 2088:
        v36 = sub_22F30EA70(a1, a4, 0);
        goto LABEL_189;
      case 2089:
      case 2108:
        v73 = a1;
        v74 = a4;
        v75 = 2;
        goto LABEL_199;
      case 2090:
      case 2091:
      case 2092:
      case 2093:
        v10 = 1;
        if ((sub_22E97DB20(a1, a4, (uint64_t)"isa-v30-instructions", 20, 0x11ABu, (uint64_t)"9", 1) & 1) != 0)
          goto LABEL_190;
        v11 = "vsx";
        v12 = "";
        v13 = a1;
        v14 = a4;
        v15 = 3;
        v16 = 4526;
LABEL_11:
        v17 = 0;
        goto LABEL_52;
      case 2094:
        v57 = *(_QWORD *)(*(_QWORD *)((char *)&a4[2 * (((unint64_t)*a4 >> 18) & 1) + 2]
                                    + ((unint64_t)*a4 >> 24))
                        + 8);
        v58 = a1[11];
        if (v57 != *(_QWORD *)(v58 + 16560) && v57 != *(_QWORD *)(v58 + 16568))
        {
          sub_22EFFAE7C(a4);
          sub_22E8FCA40(a1, v72, 0x11AFu, 0, (uint64_t)&v84);
          v21 = v87;
          goto LABEL_14;
        }
        v10 = 1;
        if ((sub_22E97DB20(a1, a4, (uint64_t)"isa-v30-instructions", 20, 0x11ABu, (uint64_t)"9", 1) & 1) != 0)
          goto LABEL_190;
        if ((sub_22E97DB20(a1, a4, (uint64_t)"vsx", 3, 0x11AEu, (uint64_t)"", 0) & 1) != 0)
        {
LABEL_79:
          v10 = 1;
          goto LABEL_190;
        }
        v24 = (uint64_t)a1;
        v25 = a4;
        v26 = 1;
        v34 = 0;
        v35 = 127;
        goto LABEL_113;
      case 2097:
      case 2099:
      case 2105:
      case 2106:
      case 2107:
LABEL_25:
        v11 = "isa-v30-instructions";
        v12 = "9";
        v13 = a1;
        v14 = a4;
        v15 = 20;
        goto LABEL_51;
      case 2098:
        v10 = 1;
        if ((sub_22E97DB20(a1, a4, (uint64_t)"isa-v30-instructions", 20, 0x11ABu, (uint64_t)"9", 1) & 1) != 0)
          goto LABEL_190;
        v24 = (uint64_t)a1;
        v25 = a4;
        v26 = 0;
LABEL_112:
        v34 = 0;
        v35 = 1;
        goto LABEL_113;
      case 2109:
      case 2110:
        if (sub_22F30D0F4(a1, a4, 2u, (uint64_t)&v80))
          goto LABEL_79;
        v73 = a1;
        v74 = a4;
        v75 = 3;
LABEL_199:
        v36 = sub_22F310254(v73, v74, v75);
        goto LABEL_189;
      case 2113:
      case 2116:
        v11 = "isa-v206-instructions";
        v12 = "7";
        goto LABEL_50;
      case 2117:
      case 2118:
      case 2123:
        v11 = "power9-vector";
        v12 = "9";
        v13 = a1;
        v14 = a4;
        v15 = 13;
        goto LABEL_51;
      case 2119:
      case 2120:
        v24 = (uint64_t)a1;
        v25 = a4;
        v26 = 0;
LABEL_54:
        v34 = 0;
LABEL_55:
        v35 = 31;
        goto LABEL_113;
      case 2121:
        v24 = (uint64_t)a1;
        v25 = a4;
        v26 = 0;
LABEL_98:
        v34 = 0;
        v35 = 255;
        goto LABEL_113;
      case 2122:
        v10 = 1;
        if (sub_22E9797E0((uint64_t)a1, a4, 0, 0, 7, 1))
          goto LABEL_190;
        v24 = (uint64_t)a1;
        v25 = a4;
        v26 = 1;
        goto LABEL_91;
      case 2140:
        v10 = 1;
        if ((sub_22E97DB20(a1, a4, (uint64_t)"isa-v30-instructions", 20, 0x11ABu, (uint64_t)"9", 1) & 1) == 0)
        {
          v10 = 1;
          if (!sub_22E9797E0((uint64_t)a1, a4, 2u, 0, 3, 1))
          {
            sub_22F00905C(*(_QWORD *)((char *)&a4[2 * (((unint64_t)*a4 >> 18) & 1) + 6] + ((unint64_t)*a4 >> 24)), a1[11], 0, (uint64_t)&v84);
            if (v85 > 0x40)
            {
              v59 = *v84;
              if (v86)
                MEMORY[0x2348A0E84]();
            }
            else
            {
              v59 = (uint64_t)((_QWORD)v84 << -(uint64_t)v85) >> -(uint64_t)v85;
            }
            LODWORD(v89) = v59;
            if ((_DWORD)v59)
            {
              sub_22EFFAE7C(a4);
              sub_22E8FCA40(a1, v76, 0x1842u, 0, (uint64_t)&v84);
              sub_22E8900C4((uint64_t)&v84, (int *)&v89);
              sub_22E903BEC((unsigned int *)&v84);
            }
LABEL_109:
            v10 = 0;
          }
        }
        goto LABEL_190;
      case 2141:
      case 2142:
      case 2143:
      case 2144:
      case 2145:
      case 2146:
        v22 = (_QWORD *)a1[11];
        if (*(_DWORD *)(v22[1886] + 68) != 21 || a3 != 2144 && a3 != 2141)
        {
          v23 = v22[2072];
          v89 = v23;
          switch(a3)
          {
            case 2142:
            case 2145:
              v23 = v22[2071];
              goto LABEL_35;
            case 2143:
            case 2146:
              v23 = v22[2070];
LABEL_35:
              v89 = v23;
              break;
            default:
              break;
          }
          v27 = a4[4];
          if ((_DWORD)v27)
          {
            v28 = *a4;
            v29 = (v28 >> 18) & 1;
            if (*(_QWORD *)(*(_QWORD *)((char *)&a4[2 * v29 + 2] + (v28 >> 24)) + 8) == v23)
            {
              v30 = 0;
              v31 = (uint64_t)&a4[2 * v29 + 4] + (v28 >> 24);
              do
              {
                if (v27 - 1 == v30)
                  goto LABEL_42;
                v32 = *(_QWORD *)(*(_QWORD *)(v31 + 8 * v30++) + 8);
              }
              while (v32 == v23);
              v33 = v30 < v27;
            }
            else
            {
              v30 = 0;
              v33 = 1;
            }
            sub_22EFFAE7C(a4);
            sub_22E8FCA40(a1, v37, 0x1357u, 0, (uint64_t)&v84);
            v88 = *(_QWORD *)(*(_QWORD *)((char *)&a4[2 * (((unint64_t)*a4 >> 18) & 1) + 2 + 2 * v30]
                                        + ((unint64_t)*a4 >> 24))
                            + 8);
            v38 = sub_22E8901B8((uint64_t)&v84, &v88);
            v39 = sub_22E8901B8(v38, &v89);
            LODWORD(v83) = 1;
            v40 = sub_22E8900C4(v39, (int *)&v83);
            v79 = 0;
            v41 = sub_22E8900C4(v40, &v79);
            v78 = 0;
            LODWORD(a4) = *(_BYTE *)(sub_22E8900C4(v41, &v78) + 80) != 0;
            sub_22E903BEC((unsigned int *)&v84);
          }
          else
          {
LABEL_42:
            v33 = 0;
          }
          v10 = v33 & a4;
          goto LABEL_190;
        }
        sub_22EFFAE7C(a4);
        sub_22E8FCA40(a1, v66, 0x12A9u, 0, (uint64_t)&v84);
        v67 = sub_22F2F30F4((uint64_t)&v84, (uint64_t)"builtin");
        LOBYTE(v83) = 1;
        v68 = sub_22E894E38(v67, (unsigned __int8 *)&v83);
        LODWORD(v88) = 128;
        v69 = sub_22E8900C4(v68, (int *)&v88);
        v89 = *(_QWORD *)(a1[11] + 16576);
        v70 = sub_22E8901B8(v69, &v89);
        LOBYTE(v79) = 0;
        v71 = sub_22E894E38(v70, (unsigned __int8 *)&v79);
        v20 = sub_22E90749C(v71, (_BYTE *)(*(_QWORD *)(a1[11] + 15088) + 32));
        break;
      default:
        if (a3 == 2040)
        {
LABEL_47:
          v11 = "isa-v207-instructions";
          v12 = "8";
LABEL_50:
          v13 = a1;
          v14 = a4;
          v15 = 21;
LABEL_51:
          v16 = 4523;
          v17 = 1;
LABEL_52:
          v36 = sub_22E97DB20(v13, v14, (uint64_t)v11, v15, v16, (uint64_t)v12, v17);
          goto LABEL_189;
        }
        if (a3 != 2180)
          goto LABEL_190;
        v24 = (uint64_t)a1;
        v25 = a4;
        v26 = 0;
LABEL_46:
        v34 = 0;
        v35 = 3;
        goto LABEL_113;
    }
    goto LABEL_13;
  }
  switch(a3)
  {
    case 2410:
    case 2411:
    case 2412:
    case 2413:
      goto LABEL_111;
    case 2414:
    case 2415:
    case 2416:
    case 2417:
    case 2418:
    case 2419:
    case 2420:
    case 2421:
    case 2422:
    case 2423:
    case 2424:
    case 2425:
    case 2426:
    case 2427:
    case 2428:
    case 2429:
    case 2431:
    case 2432:
    case 2433:
    case 2434:
    case 2437:
    case 2438:
    case 2439:
    case 2440:
    case 2441:
    case 2442:
    case 2443:
    case 2444:
    case 2445:
    case 2446:
    case 2447:
    case 2448:
    case 2449:
    case 2450:
    case 2453:
    case 2454:
    case 2455:
    case 2456:
    case 2457:
    case 2458:
    case 2459:
    case 2460:
    case 2461:
    case 2462:
    case 2463:
    case 2464:
    case 2465:
    case 2466:
    case 2467:
    case 2468:
    case 2469:
    case 2470:
    case 2471:
    case 2472:
    case 2473:
    case 2474:
    case 2477:
    case 2478:
    case 2479:
    case 2480:
    case 2481:
    case 2482:
    case 2483:
    case 2484:
    case 2485:
    case 2486:
    case 2487:
    case 2488:
    case 2489:
    case 2490:
    case 2491:
    case 2492:
    case 2493:
    case 2494:
    case 2495:
    case 2496:
    case 2497:
    case 2498:
    case 2499:
    case 2500:
    case 2501:
    case 2502:
    case 2503:
    case 2504:
    case 2505:
    case 2506:
    case 2507:
    case 2508:
    case 2509:
    case 2510:
    case 2511:
    case 2512:
    case 2513:
    case 2514:
    case 2515:
    case 2516:
    case 2517:
    case 2518:
    case 2519:
    case 2520:
    case 2521:
    case 2522:
    case 2523:
    case 2524:
    case 2525:
    case 2526:
    case 2527:
    case 2532:
    case 2533:
    case 2534:
    case 2535:
    case 2536:
    case 2537:
    case 2538:
    case 2539:
    case 2540:
    case 2541:
    case 2542:
    case 2543:
    case 2544:
    case 2545:
    case 2546:
    case 2547:
    case 2548:
    case 2549:
    case 2550:
    case 2551:
    case 2552:
    case 2553:
    case 2554:
    case 2555:
    case 2559:
    case 2560:
    case 2561:
    case 2562:
    case 2563:
    case 2565:
    case 2566:
    case 2567:
    case 2568:
    case 2569:
    case 2570:
    case 2571:
    case 2572:
    case 2573:
    case 2574:
    case 2575:
    case 2576:
    case 2577:
    case 2578:
    case 2579:
    case 2580:
    case 2581:
    case 2612:
    case 2613:
    case 2614:
    case 2622:
    case 2623:
    case 2624:
    case 2625:
      goto LABEL_190;
    case 2430:
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 1;
      v34 = 2;
      goto LABEL_101;
    case 2435:
    case 2436:
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 2;
      goto LABEL_100;
    case 2451:
    case 2452:
      v42 = (unint64_t)&a4[2 * (((unint64_t)*a4 >> 18) & 1)] + ((unint64_t)*a4 >> 24);
      v43 = *(_QWORD *)(*(_QWORD *)(v42 + 8) + 8);
      v44 = *(_QWORD *)(*(_QWORD *)(v42 + 16) + 8);
      if (sub_22EF6A330(a1[11], v44) == 32)
        v45 = 12;
      else
        v45 = 8;
      v10 = 1;
      if (sub_22E9797E0((uint64_t)a1, a4, 2u, 0, v45, 1))
        goto LABEL_190;
      v89 = v44;
      v46 = *(_QWORD *)(v43 & 0xFFFFFFFFFFFFFFF0);
      if (v46)
        v47 = *(unsigned __int8 *)(v46 + 16) - 57 > 0xFFFFFFFD;
      else
        v47 = 0;
      if (!v47)
        v46 = sub_22F10CF48(v46);
      v88 = *(_QWORD *)(v46 + 32);
      v48 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFFF0) + 8) | v88 & 7;
      v49 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFFF0) + 8) | v44 & 7;
      v10 = v48 != v49;
      if (v48 == v49)
        goto LABEL_190;
      sub_22EFFAE7C(a4);
      sub_22E8FCA40(a1, v50, 0x1338u, 0, (uint64_t)&v84);
      sub_22F0D4E74((uint64_t)a4);
      v83 = v51;
      v52 = sub_22E8906A0((uint64_t)&v84, &v83);
      v53 = sub_22E8901B8(v52, &v88);
      sub_22E8901B8(v53, &v89);
      goto LABEL_15;
    case 2475:
    case 2476:
      v10 = 1;
      if ((sub_22E97DB20(a1, a4, (uint64_t)"isa-v207-instructions", 21, 0x11ABu, (uint64_t)"8", 1) & 1) != 0)
        goto LABEL_190;
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 1;
      v34 = 1;
      v35 = 16;
      goto LABEL_113;
    case 2528:
    case 2529:
    case 2530:
    case 2531:
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 1;
      goto LABEL_46;
    case 2556:
    case 2557:
      v36 = sub_22F310428(a1, a4);
      goto LABEL_189;
    case 2558:
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 3;
      goto LABEL_98;
    case 2564:
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 3;
LABEL_100:
      v34 = 0;
LABEL_101:
      v35 = 7;
      goto LABEL_113;
    case 2582:
    case 2583:
      v10 = 1;
      v54 = (uint64_t)a1;
      v55 = a4;
      v56 = 1;
      goto LABEL_103;
    case 2584:
    case 2589:
    case 2590:
    case 2591:
    case 2593:
    case 2594:
    case 2595:
    case 2596:
    case 2597:
    case 2598:
    case 2599:
    case 2600:
    case 2601:
    case 2602:
    case 2603:
    case 2604:
      goto LABEL_10;
    case 2585:
    case 2587:
      v10 = 1;
      v54 = (uint64_t)a1;
      v55 = a4;
      v56 = 31;
      goto LABEL_103;
    case 2586:
    case 2588:
      if ((sub_22E97DB20(a1, a4, (uint64_t)"htm", 3, 0x11ADu, (uint64_t)"", 0) & 1) != 0)
        goto LABEL_79;
      v10 = 1;
      if (sub_22E9797E0((uint64_t)a1, a4, 0, 0, 31, 1))
        goto LABEL_190;
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 2;
      goto LABEL_54;
    case 2592:
      v10 = 1;
      v54 = (uint64_t)a1;
      v55 = a4;
      v56 = 7;
LABEL_103:
      if (sub_22E9797E0(v54, v55, 0, 0, v56, 1))
        goto LABEL_190;
LABEL_10:
      v11 = "htm";
      v12 = "";
      v13 = a1;
      v14 = a4;
      v15 = 3;
      v16 = 4525;
      goto LABEL_11;
    case 2605:
    case 2606:
    case 2607:
    case 2608:
      v11 = "extdiv";
      goto LABEL_32;
    case 2609:
      v11 = "bpermd";
LABEL_32:
      v12 = "7";
      v13 = a1;
      v14 = a4;
      v15 = 6;
      goto LABEL_51;
    case 2610:
    case 2611:
      v11 = "isa-v31-instructions";
      v12 = "10";
      v13 = a1;
      v14 = a4;
      v15 = 20;
      v16 = 4523;
      v17 = 2;
      goto LABEL_52;
    case 2615:
      v10 = 1;
      v9 = sub_22E9797E0((uint64_t)a1, a4, 1u, 0, 1, 1);
      if ((v9 & 1) != 0)
        goto LABEL_190;
      v8 = *(_QWORD *)(*a2 - 24);
LABEL_108:
      v60 = *(_QWORD *)((char *)a2 + v8 + 88);
      if (v60 == llvm::APFloatBase::PPCDoubleDouble((llvm::APFloatBase *)v9))
        goto LABEL_109;
      sub_22EFFAE7C(a4);
      sub_22E8FCA40(a1, v77, 0x11ACu, 0, (uint64_t)&v84);
      v20 = sub_22F2F30F4((uint64_t)&v84, (uint64_t)"ibmlongdouble");
      goto LABEL_13;
    case 2616:
      goto LABEL_108;
    case 2617:
    case 2618:
    case 2619:
      goto LABEL_25;
    case 2620:
      v10 = 1;
      if ((sub_22E97DB20(a1, a4, (uint64_t)"vsx", 3, 0x11ABu, (uint64_t)"7", 1) & 1) != 0)
        goto LABEL_190;
LABEL_111:
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 1;
      goto LABEL_112;
    case 2621:
      v11 = "vsx";
      v12 = "7";
      v13 = a1;
      v14 = a4;
      v15 = 3;
      goto LABEL_51;
    case 2626:
      v61 = "W256SLiW256C*";
      v62 = a1;
      v63 = a4;
      v64 = 2626;
      goto LABEL_188;
    case 2627:
      v61 = "vW256SLiW256C*";
      v62 = a1;
      v63 = a4;
      v64 = 2627;
      goto LABEL_188;
    case 2628:
      v61 = "vW256*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2628;
      goto LABEL_188;
    case 2629:
      v61 = "vv*W256*";
      v62 = a1;
      v63 = a4;
      v64 = 2629;
      goto LABEL_188;
    case 2630:
      v61 = "vW256*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2630;
      goto LABEL_188;
    case 2631:
      v61 = "vW512*VVVV";
      v62 = a1;
      v63 = a4;
      v64 = 2631;
      goto LABEL_188;
    case 2632:
      v61 = "W256SLiW256C*";
      v62 = a1;
      v63 = a4;
      v64 = 2632;
      goto LABEL_188;
    case 2633:
      v61 = "vW256SLiW256C*";
      v62 = a1;
      v63 = a4;
      v64 = 2633;
      goto LABEL_188;
    case 2634:
      v61 = "vW256*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2634;
      goto LABEL_188;
    case 2635:
      v61 = "vv*W256*";
      v62 = a1;
      v63 = a4;
      v64 = 2635;
      goto LABEL_188;
    case 2636:
      v61 = "vW512*VVVV";
      v62 = a1;
      v63 = a4;
      v64 = 2636;
      goto LABEL_188;
    case 2637:
      v61 = "vv*W512*";
      v62 = a1;
      v63 = a4;
      v64 = 2637;
      goto LABEL_188;
    case 2638:
      v61 = "vW512*";
      v62 = a1;
      v63 = a4;
      v64 = 2638;
      goto LABEL_188;
    case 2639:
      v61 = "vW512*";
      v62 = a1;
      v63 = a4;
      v64 = 2639;
      goto LABEL_188;
    case 2640:
      v61 = "vW512*";
      v62 = a1;
      v63 = a4;
      v64 = 2640;
      goto LABEL_188;
    case 2641:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2641;
      goto LABEL_188;
    case 2642:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2642;
      goto LABEL_188;
    case 2643:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2643;
      goto LABEL_188;
    case 2644:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2644;
      goto LABEL_188;
    case 2645:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2645;
      goto LABEL_188;
    case 2646:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2646;
      goto LABEL_188;
    case 2647:
      v61 = "vW512*W256V";
      v62 = a1;
      v63 = a4;
      v64 = 2647;
      goto LABEL_188;
    case 2648:
      v61 = "vW512*VVi15i15i255";
      v62 = a1;
      v63 = a4;
      v64 = 2648;
      goto LABEL_188;
    case 2649:
      v61 = "vW512*VVi15i15i15";
      v62 = a1;
      v63 = a4;
      v64 = 2649;
      goto LABEL_188;
    case 2650:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2650;
      goto LABEL_188;
    case 2651:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2651;
      goto LABEL_188;
    case 2652:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2652;
      goto LABEL_188;
    case 2653:
      v61 = "vW512*VVi15i15";
      v62 = a1;
      v63 = a4;
      v64 = 2653;
      goto LABEL_188;
    case 2654:
      v61 = "vW512*W256Vi15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2654;
      goto LABEL_188;
    case 2655:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2655;
      goto LABEL_188;
    case 2656:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2656;
      goto LABEL_188;
    case 2657:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2657;
      goto LABEL_188;
    case 2658:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2658;
      goto LABEL_188;
    case 2659:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2659;
      goto LABEL_188;
    case 2660:
      v61 = "vW512*VVi15i15i255";
      v62 = a1;
      v63 = a4;
      v64 = 2660;
      goto LABEL_188;
    case 2661:
      v61 = "vW512*VVi15i15i15";
      v62 = a1;
      v63 = a4;
      v64 = 2661;
      goto LABEL_188;
    case 2662:
      v61 = "vW512*VVi15i15i15";
      v62 = a1;
      v63 = a4;
      v64 = 2662;
      goto LABEL_188;
    case 2663:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2663;
      goto LABEL_188;
    case 2664:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2664;
      goto LABEL_188;
    case 2665:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2665;
      goto LABEL_188;
    case 2666:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2666;
      goto LABEL_188;
    case 2667:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2667;
      goto LABEL_188;
    case 2668:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2668;
      goto LABEL_188;
    case 2669:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2669;
      goto LABEL_188;
    case 2670:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2670;
      goto LABEL_188;
    case 2671:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2671;
      goto LABEL_188;
    case 2672:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2672;
      goto LABEL_188;
    case 2673:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2673;
      goto LABEL_188;
    case 2674:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2674;
      goto LABEL_188;
    case 2675:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2675;
      goto LABEL_188;
    case 2676:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2676;
      goto LABEL_188;
    case 2677:
      v61 = "vW512*VVi15i15";
      v62 = a1;
      v63 = a4;
      v64 = 2677;
      goto LABEL_188;
    case 2678:
      v61 = "vW512*VVi15i15";
      v62 = a1;
      v63 = a4;
      v64 = 2678;
      goto LABEL_188;
    case 2679:
      v61 = "vW512*VVi15i15";
      v62 = a1;
      v63 = a4;
      v64 = 2679;
      goto LABEL_188;
    case 2680:
      v61 = "vW512*VVi15i15";
      v62 = a1;
      v63 = a4;
      v64 = 2680;
      goto LABEL_188;
    case 2681:
      v61 = "vW512*W256V";
      v62 = a1;
      v63 = a4;
      v64 = 2681;
      goto LABEL_188;
    case 2682:
      v61 = "vW512*W256V";
      v62 = a1;
      v63 = a4;
      v64 = 2682;
      goto LABEL_188;
    case 2683:
      v61 = "vW512*W256V";
      v62 = a1;
      v63 = a4;
      v64 = 2683;
      goto LABEL_188;
    case 2684:
      v61 = "vW512*W256V";
      v62 = a1;
      v63 = a4;
      v64 = 2684;
      goto LABEL_188;
    case 2685:
      v61 = "vW512*W256Vi15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2685;
      goto LABEL_188;
    case 2686:
      v61 = "vW512*W256Vi15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2686;
      goto LABEL_188;
    case 2687:
      v61 = "vW512*W256Vi15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2687;
      goto LABEL_188;
    case 2688:
      v61 = "vW512*W256Vi15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2688;
      goto LABEL_188;
    case 2689:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2689;
      goto LABEL_188;
    case 2690:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2690;
      goto LABEL_188;
    case 2691:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2691;
      goto LABEL_188;
    case 2692:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2692;
      goto LABEL_188;
    case 2693:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2693;
      goto LABEL_188;
    case 2694:
      v61 = "vW512*VV";
      v62 = a1;
      v63 = a4;
      v64 = 2694;
      goto LABEL_188;
    case 2695:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2695;
      goto LABEL_188;
    case 2696:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2696;
      goto LABEL_188;
    case 2697:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2697;
      goto LABEL_188;
    case 2698:
      v61 = "vW512*VVi15i15i3";
      v62 = a1;
      v63 = a4;
      v64 = 2698;
LABEL_188:
      v36 = sub_22E97DC14(v62, v63, v64, v61);
      goto LABEL_189;
    default:
      if ((a3 - 2182) < 4)
      {
        v24 = (uint64_t)a1;
        v25 = a4;
        v26 = 2;
        goto LABEL_46;
      }
      if ((a3 - 2344) > 1)
        goto LABEL_190;
      v10 = 1;
      if (sub_22E9797E0((uint64_t)a1, a4, 1u, 0, 1, 1))
        goto LABEL_190;
      v24 = (uint64_t)a1;
      v25 = a4;
      v26 = 2;
      break;
  }
LABEL_91:
  v34 = 0;
  v35 = 15;
LABEL_113:
  v36 = sub_22E9797E0(v24, v25, v26, v34, v35, 1);
LABEL_189:
  v10 = v36;
LABEL_190:
  if (v81 >= 0x41 && v80)
    MEMORY[0x2348A0E84](v80, 0x1000C8000313F17);
  return v10;
}

BOOL sub_22E9686A4(_QWORD *a1, int a2, unsigned int *a3)
{
  int v3;
  _BOOL8 v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  int v18;
  uint64_t v19;
  unsigned int v20[24];
  uint64_t v21[2];
  uint64_t v22[9];
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unsigned int v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v3 = a2 - 2058;
  if ((a2 - 2058) > 5 || ((0x3Du >> v3) & 1) == 0)
    return 0;
  v9 = qword_22F468E70[v3];
  v10 = *(_QWORD *)((_BYTE *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2 + 2 * qword_22F468EA0[v3]]
                  + ((unint64_t)*a3 >> 24)) & 0xFFFFFFFFFFFFFFFELL;
  v23 = 0;
  v24 = 0;
  LODWORD(v25) = 0;
  if (sub_22F00554C(v10, (uint64_t)&v23, a1[11], 0, 0))
  {
    v11 = (unint64_t *)&v26;
    if (v27 >= 0x41)
      v11 = v26;
    v12 = *v11;
    if (v12 < 6 && (a2 != 2058 || (v12 & 0xFFFFFFFE) != 0))
    {
      v17 = *(_QWORD *)((_BYTE *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2 + 2 * v9]
                      + ((unint64_t)*a3 >> 24)) & 0xFFFFFFFFFFFFFFFELL;
      LOWORD(v21[0]) = 0;
      v21[1] = 0;
      LODWORD(v22[0]) = 0;
      v4 = 0;
      if ((sub_22F006900(v17, (uint64_t)v21, a1[11], 0) & 1) == 0)
      {
        sub_22EFF605C(v17);
        sub_22E8FCA40(a1, v18, 0xD16u, 0, (uint64_t)v20);
        v19 = *(_QWORD *)(v17 + 8);
        v4 = *(_BYTE *)(sub_22E8901B8((uint64_t)v20, &v19) + 80) != 0;
        sub_22E903BEC(v20);
      }
      if (LODWORD(v22[0]) >= 2)
        sub_22EF53BC0(v22);
      goto LABEL_14;
    }
    sub_22F0D5A50(v10);
    sub_22E8FCA40(a1, v13, 0x1857u, 0, (uint64_t)v20);
    sub_22F0D4E74(v10);
    v21[0] = v14;
    v15 = sub_22E8906A0((uint64_t)v20, v21);
  }
  else
  {
    sub_22EFF605C(v10);
    sub_22E8FCA40(a1, v16, 0x1366u, 0, (uint64_t)v20);
    v21[0] = *(_QWORD *)(v10 + 8);
    v15 = sub_22E8901B8((uint64_t)v20, v21);
  }
  v4 = *(_BYTE *)(v15 + 80) != 0;
  sub_22E903BEC(v20);
LABEL_14:
  if (v25 >= 2)
    sub_22EF53BC0(&v25);
  return v4;
}

BOOL sub_22E968908(_QWORD *a1, uint64_t a2, unsigned int a3, unsigned int *a4)
{
  char **v6;
  const char *v7;
  int v8;
  _BOOL8 v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  int v13;
  _QWORD *v14;
  unsigned int *v15;
  unsigned int v16;
  _QWORD *v17;
  unsigned int *v18;
  unsigned int v19;
  int v20;
  int v21;
  _BOOL8 v22;
  uint64_t *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t __dst;
  uint64_t v31;
  uint64_t v32;
  char v33;
  const char *v34;
  const char *v35;
  uint64_t v36;
  int v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD v40[8];

  v40[6] = *MEMORY[0x24BDAC8D0];
  v38 = v40;
  v39 = 0x300000000;
  if (a3 > 0x7E7)
  {
    v24 = *(uint64_t **)(a1[11] + 15208);
    v25 = v24[1];
    if (v25 + 2024 <= (unint64_t)a3)
    {
      v26 = a3 - v25 - 2024;
      v27 = v24[2];
    }
    else
    {
      v26 = a3 - 2024;
      v27 = *v24;
    }
    v6 = (char **)(v27 + 48 * v26);
  }
  else
  {
    v6 = &(&off_24FAC8C40)[6 * a3];
  }
  v7 = v6[5];
  v34 = v7;
  if (v7)
    v7 = (const char *)strlen(v7);
  v35 = v7;
  llvm::StringRef::split();
  if (*(_DWORD *)(a2 + 56) != 31 && a3 - 3214 <= 0x16 && ((1 << (a3 + 114)) & 0x7E060F) != 0)
  {
    sub_22F0D5A50(*(_QWORD *)((char *)a4 + *((unsigned __int8 *)a4 + 3)));
    sub_22E8FCA40(a1, v8, 0xA0Eu, 0, (uint64_t)&__dst);
    v9 = v33 != 0;
    sub_22E903BEC((unsigned int *)&__dst);
    goto LABEL_26;
  }
  v9 = 0;
  if ((int)a3 > 3158)
  {
    if (a3 - 3216 <= 0x1A)
    {
      if (((1 << (a3 + 112)) & 0x6000183) != 0)
      {
        v11 = a4;
        v10 = (uint64_t)a1;
        v12 = 2;
        v13 = 3;
LABEL_24:
        v22 = sub_22E9797E0(v10, v11, v12, 0, v13, 1);
LABEL_25:
        v9 = v22;
        goto LABEL_26;
      }
      if (a3 == 3221)
      {
        v11 = a4;
        v10 = (uint64_t)a1;
        v12 = 1;
        v13 = 10;
        goto LABEL_24;
      }
    }
    if (a3 == 3159)
    {
      v9 = 1;
      if (!sub_22E9797E0((uint64_t)a1, a4, 0, 0, 3, 1))
      {
        v15 = a4;
        v14 = a1;
        v16 = 1;
        goto LABEL_32;
      }
    }
    goto LABEL_26;
  }
  switch(a3)
  {
    case 0xAFBu:
      v18 = a4;
      v17 = a1;
      sub_22F36AD2C(a1[11], *(_QWORD *)(*(_QWORD *)((*((_QWORD *)a4 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0));
      sub_22F36AD2C(a1[11], *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(*(_QWORD *)((char *)&v18[2 * (((unint64_t)*v18 >> 18) & 1) + 2]+ ((unint64_t)*v18 >> 24))+ 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0));
      v19 = v37 * v36;
      v20 = v31;
      v21 = v32;
LABEL_21:
      v13 = v19 / (v21 * v20) - 1;
      v10 = (uint64_t)v17;
      v11 = v18;
      v12 = 1;
      goto LABEL_24;
    case 0xAFCu:
      v18 = a4;
      v17 = a1;
      sub_22F36AD2C(a1[11], *(_QWORD *)(*(_QWORD *)((*((_QWORD *)a4 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0));
      sub_22F36AD2C(a1[11], *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(*(_QWORD *)((char *)&v18[2 * (((unint64_t)*v18 >> 18) & 1) + 6]+ ((unint64_t)*v18 >> 24))+ 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0));
      v19 = v32 * v31;
      v20 = v36;
      v21 = v37;
      goto LABEL_21;
    case 0xC56u:
      v9 = 1;
      if (!sub_22E9797E0((uint64_t)a1, a4, 1u, 0, 3, 1))
      {
        v15 = a4;
        v14 = a1;
        v16 = 2;
LABEL_32:
        v22 = sub_22F31069C(v14, v15, v16);
        goto LABEL_25;
      }
      break;
  }
LABEL_26:
  if (v38 != v40)
    free(v38);
  return v9;
}

uint64_t sub_22E969000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unint64_t v16;
  unsigned __int8 **v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int v29;
  BOOL v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  int v34;
  _QWORD *v35;
  unsigned int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  _QWORD *v44;
  unsigned int v45;
  unsigned int *v46;
  int v47;
  unint64_t v48;
  uint64_t v49;
  BOOL v50;
  _QWORD *v51;
  unsigned int v52;
  unsigned int *v53;
  unsigned int v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  unint64_t v66;
  uint64_t v67;
  BOOL v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *p_src;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  unint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int8x8_t *p_dst;
  _QWORD *v108;
  unsigned int *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  uint64_t *v121;
  int v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v126;
  _QWORD *v127;
  unint64_t v128;
  uint64_t v129;
  BOOL v130;
  int v131;
  int v132;
  int v133;
  _QWORD *v134;
  unsigned int v135;
  unint64_t v136;
  uint64_t v137;
  BOOL v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unsigned int v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  BOOL v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  char v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  int v166;
  BOOL v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  BOOL v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  BOOL v179;
  _QWORD *v180;
  int v181;
  unint64_t v182;
  uint64_t v183;
  BOOL v184;
  unint64_t v185;
  uint64_t v186;
  BOOL v187;
  int v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  unsigned int v192;
  int v193;
  _QWORD *v194;
  unsigned int *v195;
  unsigned int v196;
  uint64_t *v197;
  unsigned int *v198;
  unsigned __int8 *v199;
  int v200;
  unsigned int v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t *v208;
  uint64_t v209;
  int v210;
  BOOL v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  BOOL v215;
  uint64_t *v216;
  unint64_t v217;
  uint64_t v218;
  BOOL v219;
  unint64_t v220;
  uint64_t v221;
  BOOL v222;
  unint64_t v223;
  uint64_t v224;
  BOOL v225;
  uint64_t *v226;
  unint64_t v227;
  uint64_t v228;
  BOOL v229;
  unint64_t v230;
  uint64_t v231;
  BOOL v232;
  unint64_t v233;
  uint64_t v234;
  BOOL v235;
  uint64_t v236;
  int v237;
  const char *v238;
  uint64_t v239;
  void *v240;
  unsigned __int8 *v241;
  unsigned __int8 *v242;
  int v243;
  uint64_t v244;
  uint8x8_t v245;
  int v246;
  uint64_t v247;
  _BYTE *v248;
  unint64_t v249;
  uint64_t v250;
  BOOL v251;
  unint64_t v252;
  uint64_t v253;
  BOOL v254;
  unint64_t v255;
  uint64_t v256;
  BOOL v257;
  unint64_t v258;
  uint64_t v259;
  BOOL v260;
  uint64_t v261;
  unint64_t v262;
  char v263;
  uint64_t v264;
  unint64_t v265;
  _BYTE *v266;
  size_t v267;
  BOOL v268;
  BOOL v269;
  int v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  uint64_t v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unint64_t v280;
  _QWORD *v281;
  uint64_t v282;
  BOOL v283;
  char v284;
  unint64_t v285;
  uint64_t v286;
  BOOL v287;
  int v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  _QWORD *v294;
  uint64_t v295;
  char v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  char v304;
  unint64_t v305;
  int v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  int v311;
  void *v312;
  _BYTE *v313;
  unint64_t v314;
  _QWORD *v315;
  uint64_t v316;
  uint64_t v317;
  char v318;
  uint64_t v319;
  unint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char v324;
  unint64_t v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  unsigned int v331;
  int v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  int v337;
  _QWORD *v338;
  unsigned int *v339;
  int v340;
  char v341;
  uint64_t v342;
  unint64_t v343;
  uint64_t v344;
  BOOL v345;
  uint64_t v346;
  unint64_t v347;
  unint64_t v348;
  uint64_t v349;
  int v350;
  unsigned __int8 *v351;
  uint64_t v352;
  unsigned __int8 *v353;
  uint64_t v354;
  uint64_t v355;
  int v356;
  BOOL v357;
  uint64_t v358;
  uint64_t *v359;
  uint64_t v360;
  BOOL v361;
  BOOL v362;
  uint64_t v363;
  int v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  _QWORD *v372;
  unsigned int v373;
  unsigned int *v374;
  int v375;
  uint64_t *v377;
  unint64_t v378;
  uint64_t v379;
  BOOL v380;
  int v381;
  uint64_t v382;
  unsigned __int8 *v383;
  uint64_t v384;
  int v385;
  int v386;
  unsigned int *v387;
  unint64_t v388;
  uint64_t v389;
  BOOL v390;
  uint64_t v391;
  unint64_t v392;
  uint64_t v393;
  char v394;
  char v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t *v402;
  uint64_t v403;
  uint64_t *v404;
  uint64_t v405;
  int v406;
  int v407;
  _QWORD *v408;
  unsigned int v409;
  uint64_t v410;
  unsigned __int8 **v411;
  uint64_t v412;
  unsigned __int8 *v413;
  unsigned __int8 *v414;
  char v415;
  char v416;
  char v417;
  char v418;
  char v419;
  _QWORD *v420;
  unsigned int v421;
  int v422;
  int v423;
  unint64_t v424;
  unsigned __int8 **v425;
  unsigned __int8 *v426;
  unsigned __int8 **v427;
  unsigned __int8 *v428;
  uint64_t v429;
  unint64_t v430;
  uint64_t v431;
  int v432;
  _QWORD *v433;
  unsigned int v434;
  unsigned __int32 v435;
  int v436;
  uint64_t v437;
  uint64_t v438;
  unint64_t v439;
  uint64_t v440;
  BOOL v441;
  uint64_t v442;
  int v443;
  uint64_t v444;
  unint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t *v449;
  uint64_t v450;
  uint64_t v451;
  unint64_t v452;
  uint64_t v453;
  BOOL v454;
  uint64_t *v455;
  unint64_t v456;
  uint64_t v457;
  BOOL v458;
  unint64_t v459;
  uint64_t v460;
  BOOL v461;
  unint64_t v462;
  uint64_t v463;
  BOOL v464;
  unint64_t v465;
  uint64_t v466;
  BOOL v467;
  char v468;
  uint64_t *v469;
  _QWORD *v470;
  int v471;
  unint64_t v472;
  uint64_t v473;
  BOOL v474;
  unint64_t v475;
  uint64_t v476;
  BOOL v477;
  unint64_t v478;
  uint64_t v479;
  BOOL v480;
  int v481;
  uint64_t v482;
  unint64_t v483;
  uint64_t v484;
  BOOL v485;
  uint64_t *v486;
  uint64_t v487;
  char v488;
  unint64_t v489;
  unint64_t *v490;
  unint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  BOOL v495;
  uint64_t v496;
  uint64_t v497;
  unint64_t v498;
  uint64_t v499;
  BOOL v500;
  unsigned __int8 *v501;
  unsigned __int8 *v502;
  int v503;
  _BOOL4 v504;
  int v505;
  uint64_t v506;
  uint64_t v507;
  unint64_t v508;
  uint64_t v509;
  BOOL v510;
  unint64_t v511;
  uint64_t v512;
  BOOL v513;
  unint64_t v514;
  uint64_t v515;
  BOOL v516;
  unint64_t v517;
  uint64_t v518;
  BOOL v519;
  unint64_t v520;
  uint64_t v521;
  BOOL v522;
  unint64_t v523;
  uint64_t v524;
  BOOL v525;
  char v526;
  unint64_t v527;
  uint64_t v528;
  BOOL v529;
  unint64_t v530;
  uint64_t v531;
  BOOL v532;
  int v533;
  _QWORD *v534;
  unsigned int v535;
  unint64_t v536;
  uint64_t v537;
  BOOL v538;
  unsigned __int8 *v539;
  unsigned __int8 *v540;
  uint64_t v541;
  uint64_t v542;
  unint64_t v543;
  unint64_t v544;
  uint64_t v545;
  BOOL v546;
  int v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t *v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  unint64_t v554;
  uint64_t v555;
  unint64_t v556;
  unsigned __int8 *v557;
  int v558;
  char v559;
  unint64_t v560;
  uint64_t *v561;
  unint64_t v562;
  uint64_t v563;
  BOOL v564;
  char v565;
  uint64_t v566;
  uint64_t v567;
  int v568;
  unint64_t v569;
  uint64_t v570;
  unsigned int v571;
  int v572;
  uint64_t v574;
  BOOL v575;
  int v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  unint64_t v581;
  uint64_t v582;
  char v583;
  char v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t *v588;
  uint64_t v589;
  uint64_t v590;
  int v591;
  uint64_t v592;
  unint64_t v593;
  unint64_t v594;
  uint64_t v595;
  uint64_t v596;
  int v598;
  uint64_t v599;
  uint64_t *v600;
  unint64_t v601;
  uint64_t v602;
  BOOL v603;
  uint64_t *v604;
  unint64_t v605;
  uint64_t v606;
  BOOL v607;
  unint64_t v608;
  uint64_t v609;
  BOOL v610;
  unsigned int v611;
  unsigned int v612;
  unint64_t v613;
  unint64_t v614;
  llvm::APFloatBase *v615;
  BOOL v616;
  int v617;
  void *v618;
  int *v619;
  uint64_t v620;
  uint64_t v621;
  int v622;
  int v623;
  uint64_t *v624;
  _QWORD *v625;
  void *v626;
  uint64_t v627;
  uint64_t v628;
  unint64_t v629;
  uint64_t v630;
  BOOL v631;
  uint64_t v632;
  int v633;
  unsigned int v634;
  unint64_t v635;
  unint64_t v636;
  uint64_t v637;
  uint64_t v638;
  unint64_t v639;
  uint64_t v640;
  int v641;
  BOOL v642;
  uint64_t v643;
  unint64_t v644;
  unsigned int v645;
  uint64_t v646;
  char *v648;
  unint64_t v649;
  _QWORD *v650;
  uint64_t v651;
  char v652;
  uint64_t v653;
  uint64_t v654;
  unint64_t v655;
  unint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  char v661;
  unint64_t v662;
  uint64_t v663;
  BOOL v664;
  int v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  int v672;
  unint64_t v673;
  uint64_t v674;
  int v675;
  int v676;
  int v678;
  _BYTE *v679;
  uint64_t *v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  unint64_t v684;
  unint64_t v685;
  unint64_t v686;
  uint64_t v687;
  unint64_t v688;
  uint64_t v689;
  BOOL v690;
  int v691;
  uint64_t v692;
  uint64_t v693;
  int v694;
  uint64_t v695;
  uint64_t v696;
  unint64_t v697;
  _QWORD *v698;
  uint64_t v699;
  char v700;
  uint64_t v701;
  unint64_t v702;
  unint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  BOOL v707;
  char v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  BOOL v716;
  unint64_t v717;
  uint64_t v718;
  BOOL v719;
  int v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  BOOL v724;
  uint64_t v725;
  uint64_t v726;
  unint64_t v727;
  uint64_t v728;
  char v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  unint64_t v733;
  unint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  char v739;
  unint64_t v740;
  uint64_t v741;
  uint64_t v742;
  BOOL v743;
  uint64_t v744;
  uint64_t v745;
  BOOL v746;
  int v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  int v751;
  uint64_t v752;
  uint64_t v753;
  unsigned int v754;
  int v755;
  unint64_t v756;
  uint64_t v757;
  _QWORD *v758;
  uint64_t v759;
  uint64_t v760;
  BOOL v761;
  int v762;
  uint64_t v763;
  void *v764;
  unint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  unint64_t v770;
  uint64_t v771;
  uint64_t v772;
  unint64_t v773;
  unint64_t v774;
  char v775;
  uint64_t v776;
  int v777;
  uint64_t v778;
  uint64_t v779;
  int v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  unint64_t v785;
  _QWORD *v786;
  uint64_t v787;
  char v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  unint64_t v792;
  uint64_t *v793;
  uint64_t v794;
  char v796;
  unint64_t v797;
  int v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  int v803;
  uint64_t v804;
  uint64_t v805;
  int v806;
  uint64_t v807;
  int v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  char *v813;
  int v814;
  uint64_t v815;
  unint64_t v816;
  uint64_t v817;
  char v818;
  uint64_t v819;
  uint64_t v820;
  unint64_t v821;
  unint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  char v827;
  unint64_t v828;
  uint64_t v829;
  BOOL v830;
  uint64_t v831;
  uint64_t v832;
  int v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  unint64_t v838;
  uint64_t v839;
  uint64_t v840;
  unint64_t v841;
  uint64_t *v842;
  uint64_t v843;
  char v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  unint64_t v848;
  unint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  char v854;
  unint64_t v855;
  uint64_t *v856;
  uint64_t v857;
  uint64_t v858;
  unsigned int v859;
  BOOL v860;
  int v861;
  uint64_t v862;
  int v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  unint64_t v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  unint64_t v872;
  uint64_t *v873;
  uint64_t v874;
  char v876;
  unint64_t v877;
  int v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  unint64_t v884;
  _QWORD *v885;
  uint64_t v886;
  char v887;
  uint64_t v888;
  uint64_t v889;
  unint64_t v890;
  _QWORD *v891;
  uint64_t v892;
  BOOL v893;
  char v894;
  uint64_t v895;
  uint64_t v896;
  unsigned int v897;
  uint64_t v898;
  unint64_t v899;
  int v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  unint64_t v904;
  uint64_t v905;
  char v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  unint64_t v910;
  uint64_t v911;
  uint64_t v912;
  BOOL v913;
  char v914;
  unint64_t v915;
  uint64_t v916;
  unsigned int v917;
  int v918;
  uint64_t v920;
  BOOL v921;
  int v922;
  uint64_t v923;
  uint64_t v924;
  uint64_t v925;
  unint64_t v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  int v933;
  BOOL v934;
  uint64_t v935;
  int v936;
  uint64_t v937;
  uint64_t v938;
  __int128 *v939;
  int v940;
  __int128 *v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t *v944;
  uint64_t v945;
  char v946;
  unint64_t v947;
  unint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  char v953;
  uint64_t v954;
  char v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  llvm::APFloatBase *v959;
  uint64_t v960;
  int v961;
  unsigned int v962;
  _BOOL4 v963;
  unsigned __int8 *v964;
  int v965;
  uint64_t *v966;
  uint64_t v967;
  int v968;
  uint64_t v969;
  int v970;
  uint64_t *v971;
  uint64_t v972;
  unint64_t v973;
  uint64_t v974;
  unsigned int v975;
  BOOL v976;
  uint64_t v977;
  unint64_t v978;
  unint64_t *v979;
  _QWORD *v980;
  uint64_t v981;
  char v982;
  uint64_t v983;
  uint64_t v984;
  unint64_t v985;
  uint64_t *v986;
  uint64_t v987;
  char v989;
  unint64_t v990;
  int v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  unint64_t v996;
  _QWORD *v997;
  uint64_t v998;
  char v999;
  uint64_t v1000;
  uint64_t v1001;
  unint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  BOOL v1005;
  char v1006;
  unint64_t v1007;
  uint64_t v1008;
  uint64_t *v1009;
  uint64_t v1010;
  uint64_t v1011;
  uint64_t v1012;
  BOOL v1013;
  int v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  BOOL v1018;
  uint64_t v1019;
  unint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  int v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t *v1026;
  unint64_t v1027;
  _QWORD *v1028;
  uint64_t v1029;
  char v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  unint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  char v1038;
  unint64_t v1039;
  uint64_t v1040;
  int v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  unint64_t v1046;
  uint64_t v1047;
  char v1048;
  uint64_t v1049;
  uint64_t v1050;
  unint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  BOOL v1054;
  char v1055;
  unint64_t v1056;
  uint64_t v1057;
  unsigned int v1058;
  int v1059;
  uint64_t v1061;
  BOOL v1062;
  int v1063;
  uint64_t v1064;
  uint64_t v1065;
  uint64_t v1066;
  unint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  unint64_t v1070;
  unint64_t v1071;
  _QWORD *v1072;
  uint64_t v1073;
  char v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t v1077;
  unint64_t v1078;
  _QWORD *v1079;
  uint64_t v1080;
  char v1082;
  unint64_t v1083;
  uint64_t v1084;
  BOOL v1085;
  int v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  uint64_t v1090;
  unsigned int v1091;
  unint64_t v1092;
  uint64_t *v1093;
  uint64_t v1094;
  uint64_t v1095;
  uint64_t v1096;
  uint64_t v1097;
  unint64_t v1098;
  uint64_t v1099;
  uint64_t v1100;
  char v1102;
  unint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  BOOL v1106;
  int v1107;
  uint64_t v1108;
  int v1109;
  uint64_t v1110;
  uint64_t v1111;
  uint64_t v1112;
  char v1113;
  int v1114;
  _BYTE *v1115;
  uint64_t v1116;
  char v1117;
  int v1118;
  uint64_t v1119;
  uint64_t v1120;
  unint64_t v1121;
  _QWORD *v1122;
  uint64_t v1123;
  char v1124;
  uint64_t v1125;
  uint64_t v1126;
  uint64_t v1127;
  unint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  char v1132;
  unint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  int v1136;
  uint64_t v1137;
  uint64_t v1138;
  uint64_t v1139;
  unint64_t v1140;
  _QWORD *v1141;
  uint64_t v1142;
  char v1143;
  uint64_t v1144;
  uint64_t v1145;
  uint64_t v1146;
  unint64_t v1147;
  _QWORD *v1148;
  uint64_t v1149;
  char v1151;
  unint64_t v1152;
  uint64_t v1153;
  BOOL v1154;
  int v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  BOOL v1159;
  uint64_t v1160;
  uint64_t v1161;
  uint64_t v1162;
  uint64_t v1163;
  uint64_t v1164;
  unint64_t v1165;
  uint64_t v1166;
  uint64_t *v1167;
  unint64_t v1168;
  char v1169;
  uint64_t v1170;
  uint64_t v1171;
  unint64_t v1172;
  uint64_t v1173;
  uint64_t v1174;
  BOOL v1175;
  char v1176;
  unint64_t v1177;
  uint64_t v1178;
  unsigned int v1179;
  unint64_t v1180;
  int v1181;
  uint64_t v1183;
  uint64_t v1186;
  unsigned int v1187;
  unint64_t v1188;
  int v1189;
  BOOL v1190;
  uint64_t v1191;
  BOOL v1192;
  int v1193;
  uint64_t v1194;
  uint64_t v1195;
  uint64_t v1196;
  BOOL v1197;
  uint64_t v1198;
  unint64_t v1199;
  uint64_t v1200;
  int v1201;
  int v1202;
  uint64_t *v1203;
  unsigned int v1204;
  uint64_t v1205;
  uint64_t v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  unint64_t v1213;
  unint64_t v1214;
  _QWORD *v1215;
  _QWORD *v1216;
  uint64_t v1217;
  char v1218;
  uint64_t v1219;
  uint64_t v1220;
  unint64_t v1221;
  _QWORD *v1222;
  uint64_t v1223;
  char v1225;
  unint64_t v1226;
  uint64_t v1227;
  BOOL v1228;
  int v1229;
  uint64_t v1230;
  uint64_t v1231;
  uint64_t v1232;
  uint64_t v1233;
  uint64_t v1234;
  uint64_t v1235;
  int v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  int v1241;
  BOOL v1242;
  uint64_t v1243;
  int v1244;
  int v1245;
  _QWORD *v1246;
  unsigned int v1247;
  uint64_t v1248;
  uint64_t v1249;
  int v1250;
  BOOL v1251;
  uint64_t v1252;
  char v1253;
  int v1254;
  uint64_t v1255;
  uint64_t v1256;
  uint64_t v1257;
  int v1258;
  uint64_t v1259;
  uint64_t v1260;
  void *v1261;
  int v1262;
  uint64_t v1263;
  uint64_t v1264;
  uint64_t v1265;
  unsigned __int8 *v1266;
  uint64_t v1267;
  unint64_t v1268;
  char v1269;
  uint64_t v1270;
  unint64_t v1271;
  _BYTE *v1272;
  size_t v1273;
  BOOL v1274;
  BOOL v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t *v1278;
  unsigned int v1279;
  unsigned int v1280;
  uint64_t v1281;
  char v1282;
  int v1283;
  uint64_t v1284;
  int v1285;
  void *v1286;
  int v1287;
  uint64_t v1288;
  _BYTE *v1289;
  uint64_t v1290;
  uint64_t v1291;
  uint64_t v1292;
  unint64_t v1293;
  uint64_t v1294;
  uint64_t v1295;
  int v1296;
  BOOL v1297;
  uint64_t v1298;
  int v1299;
  uint64_t v1300;
  BOOL v1301;
  int v1302;
  int v1303;
  int v1304;
  unsigned int v1306;
  unsigned int v1307;
  unsigned int v1308;
  int v1309;
  uint64_t v1310;
  unint64_t v1311;
  _QWORD *v1312;
  uint64_t v1313;
  uint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  unint64_t v1317;
  uint64_t v1318;
  uint64_t v1319;
  char v1321;
  unint64_t v1322;
  int v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  uint64_t v1327;
  BOOL v1328;
  uint64_t v1329;
  unint64_t v1330;
  uint64_t v1331;
  char v1332;
  uint64_t v1333;
  uint64_t v1334;
  unint64_t v1335;
  uint64_t v1336;
  uint64_t v1337;
  char v1339;
  unint64_t v1340;
  uint64_t v1341;
  uint64_t v1342;
  unsigned int v1343;
  BOOL v1344;
  uint64_t v1345;
  int v1346;
  BOOL v1347;
  uint64_t v1348;
  BOOL v1349;
  int v1350;
  uint64_t v1351;
  uint64_t v1352;
  uint64_t v1353;
  unint64_t v1354;
  uint64_t v1355;
  uint64_t v1356;
  uint64_t v1357;
  unint64_t v1358;
  uint64_t v1359;
  uint64_t v1360;
  char v1362;
  unint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  unsigned int v1366;
  BOOL v1367;
  uint64_t v1368;
  int v1369;
  BOOL v1370;
  uint64_t v1371;
  BOOL v1372;
  int v1373;
  uint64_t v1374;
  uint64_t v1375;
  uint64_t v1376;
  uint64_t v1377;
  unint64_t v1378;
  _QWORD *v1379;
  uint64_t v1380;
  char v1381;
  uint64_t v1382;
  uint64_t v1383;
  unint64_t v1384;
  uint64_t v1385;
  uint64_t v1386;
  char v1388;
  unint64_t v1389;
  int v1390;
  uint64_t v1391;
  uint64_t v1392;
  uint64_t v1393;
  uint64_t v1394;
  uint64_t v1395;
  unint64_t v1396;
  unint64_t v1397;
  _QWORD *v1398;
  uint64_t v1399;
  char v1400;
  uint64_t v1401;
  uint64_t v1402;
  unint64_t v1403;
  uint64_t v1404;
  uint64_t v1405;
  BOOL v1406;
  char v1407;
  unint64_t v1408;
  unint64_t v1409;
  uint64_t v1410;
  unsigned int v1411;
  int v1412;
  uint64_t v1414;
  BOOL v1415;
  int v1416;
  uint64_t v1417;
  uint64_t v1418;
  uint64_t v1419;
  uint64_t v1420;
  unint64_t v1421;
  uint64_t v1422;
  uint64_t v1423;
  uint64_t *v1424;
  int v1425;
  uint64_t v1426;
  __int32 v1427;
  unint64_t v1428;
  uint64_t v1429;
  char v1430;
  uint64_t v1431;
  uint64_t v1432;
  unint64_t v1433;
  uint64_t v1434;
  uint64_t v1435;
  BOOL v1436;
  char v1437;
  uint64_t v1438;
  uint64_t v1439;
  uint64_t v1440;
  BOOL v1441;
  int v1442;
  uint64_t v1443;
  uint64_t v1444;
  uint64_t v1445;
  unint64_t v1446;
  BOOL v1447;
  uint64_t v1448;
  uint64_t v1449;
  uint64_t v1450;
  unint64_t v1451;
  unint64_t v1452;
  char v1453;
  uint64_t v1454;
  uint64_t v1455;
  unint64_t v1456;
  uint64_t v1457;
  uint64_t v1458;
  char v1460;
  unint64_t v1461;
  uint64_t *v1462;
  uint64_t v1463;
  unsigned int v1464;
  int v1465;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  BOOL v1470;
  int v1471;
  uint64_t v1472;
  uint64_t v1473;
  uint64_t v1474;
  unint64_t v1475;
  int v1476;
  int8x8_t *v1477;
  uint64_t v1478;
  unint64_t v1479;
  _QWORD *v1480;
  unint64_t v1481;
  char v1482;
  uint64_t v1483;
  uint64_t v1484;
  uint64_t v1485;
  unint64_t v1486;
  uint64_t v1487;
  uint64_t v1488;
  char v1490;
  unint64_t v1491;
  int v1492;
  uint64_t v1493;
  uint64_t v1494;
  uint64_t v1495;
  unint64_t v1496;
  uint64_t v1497;
  char v1498;
  uint64_t v1499;
  unint64_t v1500;
  uint64_t v1501;
  BOOL v1502;
  char v1503;
  unint64_t v1504;
  uint64_t v1505;
  uint64_t v1506;
  unint64_t v1507;
  uint64_t v1508;
  uint64_t v1509;
  unsigned int v1510;
  uint64_t v1511;
  __int128 v1512;
  unint64_t v1513;
  uint64_t *v1514;
  uint64_t v1515;
  char v1516;
  uint64_t v1517;
  uint64_t v1518;
  uint64_t v1519;
  unint64_t v1520;
  uint64_t v1521;
  uint64_t v1522;
  char v1524;
  unint64_t v1525;
  uint64_t v1526;
  uint64_t v1527;
  uint64_t v1528;
  BOOL v1529;
  BOOL v1530;
  uint64_t v1531;
  int v1532;
  uint64_t v1533;
  uint64_t v1534;
  uint64_t v1535;
  unint64_t v1536;
  uint64_t v1537;
  uint64_t v1538;
  unint64_t v1539;
  uint64_t v1540;
  char v1541;
  uint64_t v1542;
  uint64_t v1543;
  uint64_t v1544;
  unint64_t v1545;
  uint64_t v1546;
  uint64_t v1547;
  BOOL v1548;
  char v1549;
  uint64_t v1550;
  unsigned int v1551;
  uint64_t v1552;
  unint64_t v1553;
  int v1554;
  uint64_t v1555;
  uint64_t v1556;
  uint64_t v1557;
  uint64_t v1558;
  unint64_t v1559;
  unint64_t *v1560;
  uint64_t v1561;
  char v1562;
  uint64_t v1563;
  uint64_t v1564;
  unint64_t v1565;
  uint64_t v1566;
  uint64_t v1567;
  BOOL v1568;
  char v1569;
  _QWORD *v1570;
  int v1571;
  uint64_t v1572;
  uint64_t v1573;
  uint64_t v1574;
  unint64_t v1575;
  uint64_t v1576;
  uint64_t v1577;
  uint64_t v1578;
  unint64_t v1579;
  unint64_t v1580;
  uint64_t v1581;
  uint64_t v1582;
  uint64_t v1583;
  uint64_t v1584;
  unint64_t v1585;
  uint64_t v1586;
  uint64_t v1587;
  BOOL v1588;
  char v1589;
  uint64_t v1590;
  int v1591;
  uint64_t v1592;
  uint64_t v1593;
  uint64_t v1594;
  unint64_t v1595;
  unsigned int v1596;
  uint64_t v1597;
  unint64_t v1598;
  uint64_t v1599;
  char v1600;
  uint64_t v1601;
  uint64_t v1602;
  unint64_t v1603;
  unint64_t v1604;
  unint64_t v1605;
  uint64_t v1606;
  uint64_t v1607;
  uint64_t v1608;
  char v1610;
  unint64_t v1611;
  uint64_t v1612;
  uint64_t v1613;
  BOOL v1614;
  unint64_t v1615;
  uint64_t v1616;
  int v1617;
  uint64_t v1618;
  uint64_t v1619;
  uint64_t v1620;
  unint64_t v1621;
  uint64_t v1622;
  char v1623;
  uint64_t v1624;
  uint64_t v1625;
  unint64_t v1626;
  uint64_t v1627;
  uint64_t v1628;
  BOOL v1629;
  char v1630;
  uint64_t v1631;
  uint64_t v1632;
  unint64_t v1633;
  int v1634;
  uint64_t v1635;
  uint64_t v1636;
  uint64_t v1637;
  unint64_t v1638;
  uint64_t v1639;
  uint64_t v1640;
  uint64_t v1641;
  unint64_t v1642;
  uint64_t v1643;
  uint64_t v1644;
  char v1646;
  unint64_t v1647;
  uint64_t v1648;
  uint64_t v1649;
  BOOL v1650;
  int v1651;
  uint64_t v1652;
  uint64_t v1653;
  uint64_t v1654;
  uint64_t v1655;
  unint64_t v1656;
  _QWORD *v1657;
  uint64_t v1658;
  char v1659;
  uint64_t v1660;
  uint64_t v1661;
  uint64_t v1662;
  unint64_t v1663;
  uint64_t v1664;
  uint64_t v1665;
  char v1667;
  unint64_t v1668;
  uint64_t v1669;
  uint64_t v1670;
  int v1671;
  uint64_t v1672;
  uint64_t v1673;
  uint64_t v1674;
  unint64_t v1675;
  uint64_t v1676;
  uint64_t v1677;
  uint64_t v1678;
  uint64_t v1679;
  unint64_t v1680;
  uint64_t v1681;
  uint64_t v1682;
  char v1684;
  unint64_t v1685;
  uint64_t v1686;
  uint64_t v1687;
  int v1688;
  uint64_t v1689;
  uint64_t v1690;
  uint64_t v1691;
  unint64_t v1692;
  unint64_t v1693;
  uint64_t v1694;
  uint64_t v1695;
  uint64_t v1696;
  unint64_t v1697;
  uint64_t *v1698;
  uint64_t v1699;
  char v1701;
  unint64_t v1702;
  int v1703;
  uint64_t v1704;
  uint64_t v1705;
  uint64_t v1706;
  uint64_t v1707;
  uint64_t v1708;
  unint64_t v1709;
  uint64_t v1710;
  uint64_t v1711;
  uint64_t v1712;
  uint64_t v1713;
  unint64_t v1714;
  uint64_t v1715;
  uint64_t v1716;
  char v1718;
  unint64_t v1719;
  uint64_t v1720;
  int v1721;
  uint64_t v1722;
  uint64_t v1723;
  uint64_t v1724;
  uint64_t v1725;
  unint64_t v1726;
  _QWORD *v1727;
  uint64_t v1728;
  char v1729;
  uint64_t v1730;
  uint64_t v1731;
  uint64_t v1732;
  unint64_t v1733;
  uint64_t *v1734;
  uint64_t v1735;
  uint64_t v1737;
  char v1738;
  unint64_t v1739;
  uint64_t v1740;
  BOOL v1741;
  int v1742;
  uint64_t v1743;
  uint64_t v1744;
  uint64_t v1745;
  uint64_t v1746;
  unint64_t v1747;
  uint64_t v1748;
  char v1749;
  uint64_t v1750;
  uint64_t v1751;
  unint64_t v1752;
  uint64_t v1753;
  uint64_t v1754;
  BOOL v1755;
  char v1756;
  unint64_t v1757;
  uint64_t v1758;
  uint64_t v1759;
  BOOL v1760;
  int v1761;
  uint64_t v1762;
  uint64_t v1763;
  uint64_t v1764;
  BOOL v1765;
  uint64_t v1766;
  unint64_t v1767;
  uint64_t v1768;
  char v1769;
  uint64_t v1770;
  uint64_t v1771;
  unint64_t v1772;
  uint64_t v1773;
  uint64_t v1774;
  char v1776;
  unint64_t v1777;
  uint64_t v1778;
  uint64_t v1779;
  unsigned int v1780;
  BOOL v1781;
  uint64_t v1782;
  int v1783;
  BOOL v1784;
  int v1785;
  BOOL v1786;
  uint64_t v1787;
  int v1788;
  uint64_t v1789;
  uint64_t v1790;
  uint64_t v1791;
  unint64_t v1792;
  _QWORD *v1793;
  uint64_t v1794;
  char v1795;
  uint64_t v1796;
  unint64_t v1797;
  uint64_t v1798;
  uint64_t v1799;
  BOOL v1800;
  char v1801;
  uint64_t v1802;
  uint64_t v1803;
  unsigned int v1804;
  uint64_t v1805;
  unint64_t v1806;
  uint64_t v1807;
  int v1808;
  uint64_t v1809;
  uint64_t v1810;
  uint64_t v1811;
  unint64_t v1812;
  uint64_t v1813;
  int v1814;
  uint64_t v1815;
  uint64_t v1816;
  uint64_t v1817;
  unint64_t v1818;
  uint64_t v1819;
  uint64_t v1820;
  char v1821;
  uint64_t v1822;
  uint64_t v1823;
  unint64_t v1824;
  uint64_t v1825;
  uint64_t v1826;
  BOOL v1827;
  char v1828;
  uint64_t v1829;
  uint64_t v1830;
  unint64_t v1831;
  int v1832;
  uint64_t v1833;
  uint64_t v1834;
  uint64_t v1835;
  uint64_t v1836;
  unint64_t v1837;
  uint64_t v1838;
  uint64_t v1839;
  uint64_t v1840;
  unint64_t v1841;
  uint64_t v1842;
  int v1843;
  uint64_t v1844;
  uint64_t v1845;
  uint64_t v1846;
  uint64_t v1847;
  uint64_t v1848;
  void *v1849;
  int v1850;
  uint64_t v1851;
  uint64_t v1852;
  unsigned int v1853;
  BOOL v1854;
  uint64_t v1855;
  uint64_t v1856;
  uint64_t v1857;
  uint64_t v1858;
  uint64_t v1859;
  uint64_t v1860;
  uint64_t v1861;
  int v1862;
  uint64_t v1863;
  void *v1864;
  int v1865;
  uint64_t v1866;
  uint64_t v1867;
  uint64_t v1868;
  unsigned int v1869;
  unsigned int v1870;
  uint64_t v1871;
  uint64_t v1872;
  uint64_t v1873;
  _QWORD *v1874;
  uint64_t v1875;
  unsigned int v1876;
  uint64_t *v1877;
  uint64_t v1878;
  int v1879;
  int v1880;
  uint64_t v1881;
  uint64_t v1882;
  uint64_t v1883;
  uint64_t v1884;
  uint64_t v1885;
  uint64_t v1886;
  uint64_t v1887;
  int v1888;
  uint64_t v1889;
  uint64_t v1890;
  uint64_t v1891;
  uint64_t v1892;
  uint64_t *v1893;
  uint64_t v1894;
  int v1895;
  BOOL v1896;
  uint64_t v1897;
  int v1898;
  uint64_t v1899;
  uint64_t v1900;
  uint64_t v1901;
  int v1902;
  uint64_t v1903;
  void *v1904;
  uint64_t v1905;
  int v1906;
  uint64_t *v1907;
  uint64_t v1908;
  int v1909;
  uint64_t v1910;
  uint64_t v1911;
  uint64_t v1912;
  unint64_t v1913;
  uint64_t v1914;
  uint64_t v1915;
  unint64_t v1916;
  int v1917;
  int v1918;
  unint64_t v1919;
  uint64_t v1920;
  int v1921;
  uint64_t v1922;
  unsigned int *v1923;
  int v1924;
  uint64_t v1925;
  uint64_t v1926;
  uint64_t v1927;
  uint64_t v1928;
  uint64_t v1929;
  uint64_t v1930;
  int v1931;
  uint64_t v1932;
  unint64_t v1933;
  uint64_t v1934;
  uint64_t v1935;
  uint64_t v1937;
  uint64_t v1938;
  uint64_t v1939;
  uint64_t v1940;
  int v1941;
  unsigned __int8 *v1942;
  int v1943;
  unsigned __int8 *v1944;
  int v1945;
  int v1946;
  uint64_t v1947;
  uint64_t v1948;
  int v1949;
  int v1950;
  uint64_t v1951;
  uint64_t v1952;
  uint64_t v1953;
  _WORD *v1954;
  uint64_t v1955;
  uint64_t v1956;
  uint64_t v1957;
  int v1958;
  uint64_t v1959;
  uint64_t v1960;
  int v1961;
  uint64_t v1962;
  uint64_t v1963;
  unint64_t v1964;
  int v1965;
  int v1966;
  _QWORD *v1967;
  unsigned int v1968;
  int v1969;
  uint64_t v1970;
  uint64_t v1971;
  void *v1972;
  int v1973;
  uint64_t v1974;
  uint64_t v1975;
  uint64_t *v1976;
  unsigned __int8 *v1977;
  unsigned int v1978;
  uint64_t v1979;
  unsigned __int8 *v1980;
  unsigned __int8 *v1981;
  unint64_t v1982;
  unint64_t v1983;
  uint64_t v1984;
  uint64_t v1985;
  uint64_t v1986;
  unint64_t v1987;
  unint64_t v1988;
  uint64_t v1989;
  unint64_t v1990;
  unint64_t v1991;
  int v1992;
  uint64_t v1993;
  uint64_t v1994;
  int v1995;
  uint64_t v1996;
  void *v1997;
  uint64_t v1998;
  uint64_t v1999;
  uint64_t v2000;
  int v2001;
  unsigned int *v2002;
  uint8x8_t v2003;
  int v2004;
  uint64_t v2005;
  char v2006;
  uint64_t v2007;
  uint64_t v2008;
  uint64_t v2009;
  unint64_t v2010;
  uint64_t v2011;
  uint64_t v2012;
  unint64_t *v2013;
  uint64_t v2014;
  BOOL v2015;
  uint64_t v2016;
  unint64_t v2017;
  uint64_t v2018;
  uint64_t v2019;
  uint64_t v2020;
  uint64_t v2021;
  uint64_t v2022;
  uint64_t v2023;
  int v2024;
  uint64_t v2025;
  uint64_t v2026;
  void *v2027;
  void *v2028;
  int v2029;
  uint64_t v2030;
  uint64_t v2031;
  uint64_t v2032;
  unint64_t v2033;
  unsigned int v2034;
  __int128 *v2035;
  int v2036;
  uint64_t v2037;
  uint64_t v2038;
  unint64_t v2039;
  unint64_t v2040;
  unint64_t v2041;
  uint64_t v2042;
  int v2043;
  uint64_t v2044;
  uint64_t v2046;
  uint64_t v2047;
  int v2048;
  uint64_t v2049;
  void *v2050;
  int v2051;
  int v2052;
  uint64_t v2053;
  uint64_t v2054;
  uint64_t v2055;
  uint64_t v2056;
  uint64_t v2057;
  uint64_t v2058;
  BOOL v2059;
  int v2060;
  uint64_t v2061;
  void *v2062;
  uint64_t v2063;
  unint64_t v2064;
  uint64_t v2065;
  uint64_t v2066;
  int v2067;
  unsigned int v2068;
  uint64_t v2069;
  unint64_t v2070;
  unsigned int v2071;
  __int128 *v2072;
  int v2073;
  int v2074;
  uint64_t v2075;
  void *v2076;
  unint64_t v2077;
  uint64_t v2078;
  uint64_t v2079;
  int v2080;
  int v2081;
  uint64_t v2082;
  int v2083;
  int v2084;
  uint64_t v2085;
  int v2086;
  int v2087;
  _QWORD *v2088;
  unsigned int v2089;
  unsigned int v2090;
  uint64_t v2091;
  int v2092;
  size_t v2093;
  void *v2094;
  void **v2095;
  uint64_t v2096;
  int v2097;
  BOOL v2098;
  BOOL v2099;
  unsigned int v2100;
  uint64_t v2101;
  uint64_t v2102;
  uint64_t v2103;
  uint64_t v2104;
  int v2105;
  uint64_t v2106;
  _QWORD *v2107;
  _QWORD *v2108;
  unsigned int v2109;
  unsigned int v2110;
  uint64_t v2111;
  char v2112;
  int v2113;
  int v2114;
  uint64_t v2115;
  _QWORD *v2116;
  _QWORD *v2117;
  unsigned int v2118;
  unsigned int v2119;
  unint64_t v2120;
  char v2121;
  int v2122;
  unsigned int v2123;
  uint64_t v2124;
  unsigned int v2125;
  uint64_t v2126;
  unsigned int v2127;
  uint64_t v2128;
  uint64_t v2129;
  unsigned int v2130;
  uint64_t v2131;
  int v2132;
  uint64_t v2133;
  uint64_t v2134;
  uint64_t v2135;
  uint64_t v2136;
  uint64_t v2137;
  uint64_t v2138;
  unsigned int v2139;
  _QWORD *v2140;
  uint64_t v2141;
  uint64_t v2142;
  uint64_t v2143;
  uint64_t v2144;
  uint64_t v2145;
  uint64_t v2146;
  uint64_t v2147;
  uint64_t v2148;
  uint64_t v2149;
  uint64_t v2150;
  uint64_t v2151;
  uint64_t v2152;
  uint64_t v2153;
  uint64_t v2154;
  uint64_t v2155;
  uint64_t v2156;
  uint64_t v2157;
  uint64_t v2158;
  uint64_t v2159;
  uint64_t v2160;
  uint64_t v2161;
  uint64_t v2162;
  uint64_t v2163;
  uint64_t v2164;
  int v2165;
  uint64_t *v2166;
  uint64_t *v2167;
  uint64_t *v2168;
  uint64_t *v2169;
  uint64_t *v2170;
  uint64_t *v2171;
  uint64_t *v2172;
  uint64_t *v2173;
  uint64_t *v2174;
  uint64_t *v2175;
  uint64_t *v2176;
  uint64_t *v2177;
  uint64_t *v2178;
  uint64_t *v2179;
  uint64_t *v2180;
  uint64_t *v2181;
  uint64_t *v2182;
  uint64_t *v2183;
  uint64_t *v2184;
  uint64_t *v2185;
  uint64_t *v2186;
  uint64_t *v2187;
  uint64_t *v2188;
  uint64_t *v2189;
  uint64_t *v2190;
  uint64_t *v2191;
  uint64_t *v2192;
  _BYTE v2193[96];
  unsigned int v2194[24];
  uint64_t v2195;
  uint64_t v2196;
  uint64_t v2197;
  unsigned int v2198;
  uint64_t v2199;
  unsigned int v2200;
  char v2201;
  unint64_t v2202;
  BOOL v2203;
  unint64_t v2204;
  unsigned int v2205;
  char v2206;
  void *__dst;
  size_t v2208;
  unint64_t v2209;
  _BYTE __p[24];
  __int128 v2211;
  __int128 v2212;
  __int128 v2213;
  int v2214;
  void *__src;
  __int128 __len;
  _BYTE v2217[40];
  __int128 v2218;
  uint64_t v2219;
  int8x8_t v2220;
  _QWORD v2221[8];
  __int128 v2222;
  uint64_t v2223;
  _BYTE v2224[80];
  uint64_t v2225;

  v5 = a3;
  v7 = a1;
  v2225 = *MEMORY[0x24BDAC8D0];
  v2195 = 0;
  v2196 = a2;
  v8 = (uint64_t *)(a1 + 88);
  sub_22EF72B64(*(_QWORD *)(a1 + 88), a3, &v2195, (_DWORD *)&v2195 + 1);
  if ((_DWORD)v2195)
  {
    HIDWORD(v2195) = 0;
  }
  else
  {
    v32 = HIDWORD(v2195);
    if (HIDWORD(v2195))
    {
      v33 = 0;
      do
      {
        v34 = 1 << v33;
        if (((1 << v33) & v32) != 0)
        {
          *(_DWORD *)&__p[8] = 1;
          *(_QWORD *)__p = 0;
          __p[12] = 0;
          if (v33 < *(_DWORD *)(a4 + 16))
          {
            if (sub_22F30D0F4((_QWORD *)v7, (unsigned int *)a4, v33, (uint64_t)__p))
            {
              if (*(_DWORD *)&__p[8] >= 0x41u && *(_QWORD *)__p)
                MEMORY[0x2348A0E84](*(_QWORD *)__p, 0x1000C8000313F17);
              return 1;
            }
            v32 = HIDWORD(v2195) & ~v34;
            HIDWORD(v2195) = v32;
            if (*(_DWORD *)&__p[8] >= 0x41u && *(_QWORD *)__p)
            {
              MEMORY[0x2348A0E84](*(_QWORD *)__p, 0x1000C8000313F17);
              v32 = HIDWORD(v2195);
            }
          }
          else
          {
            v32 &= ~v34;
            HIDWORD(v2195) = v32;
          }
        }
        ++v33;
      }
      while (v32);
    }
  }
  switch((int)v5)
  {
    case 346:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u))
        return 1;
      v486 = v8;
      v487 = 0;
      v488 = 0;
      v490 = (unint64_t *)(a4 + 8);
      LODWORD(v489) = *(_DWORD *)a4;
      v22 = 1;
      do
      {
        v491 = (unint64_t)&v490[(v489 >> 18) & 1] + ((unint64_t)v489 >> 24);
        v492 = *(_QWORD *)(v491 + 8 * v487);
        v493 = *(_QWORD *)(*(_QWORD *)(v492 + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v493 + 17) & 4) != 0)
        {
          while (v487 != 1)
          {
            v492 = *(_QWORD *)(v491 + 8);
            v493 = *(_QWORD *)(*(_QWORD *)(v492 + 8) & 0xFFFFFFFFFFFFFFF0);
            v487 = 1;
            if ((*(_BYTE *)(v493 + 17) & 4) == 0)
            {
              v488 = 1;
              goto LABEL_718;
            }
          }
          goto LABEL_728;
        }
LABEL_718:
        v494 = *(_QWORD *)(*(_QWORD *)(v493 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v494)
          v495 = *(_DWORD *)(v494 + 16) == 11;
        else
          v495 = 0;
        if (!v495 || ((*(_DWORD *)(v494 + 16) >> 19) & 0x1FEu) - 210 > 7)
        {
          sub_22F0D5A50(v492);
          sub_22E8FCA40((_QWORD *)v7, v1902, 0x133Cu, 0, (uint64_t)__p);
          *(_QWORD *)&v2222 = *(_QWORD *)(v492 + 8);
          v103 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
          sub_22F0D4E74(v492);
          *(_QWORD *)&v2218 = v1903;
          p_dst = (int8x8_t *)&v2218;
LABEL_504:
          v336 = sub_22E8906A0(v103, (uint64_t *)p_dst);
          goto LABEL_505;
        }
        v496 = sub_22EB1A358(v7, v492, 0);
        if ((v496 & 1) != 0)
          return v22;
        v489 = *(unsigned int *)a4;
        v497 = (v489 >> 18) & 1;
        *(unint64_t *)((char *)&v490[v497 + v487] + (v489 >> 24)) = v496 & 0xFFFFFFFFFFFFFFFELL;
        v30 = v487 == 1;
        v487 = 1;
      }
      while (!v30);
      if ((v488 & 1) != 0)
      {
LABEL_728:
        *v490 = *(_QWORD *)(*v486 + 16832);
        return a4;
      }
      v2020 = a4 + (v489 >> 24) + 8 * v497;
      v2022 = *(_QWORD *)(v2020 + 8);
      v2021 = *(_QWORD *)(v2020 + 16);
      v2023 = *(_QWORD *)(v2022 + 8);
      if ((*(_QWORD *)((v2023 & 0xFFFFFFFFFFFFFFF0) + 8) | v2023 & 7) != (*(_QWORD *)((*(_QWORD *)(v2021 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                                       + 8) | *(_QWORD *)(v2021 + 8) & 7))
      {
        sub_22F0D5A50(v2022);
        sub_22E8FCA40((_QWORD *)v7, v2024, 0x1338u, 0, (uint64_t)__p);
        *(_QWORD *)&v2222 = *(_QWORD *)(v2022 + 8);
        v2025 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
        *(_QWORD *)&v2218 = *(_QWORD *)(v2021 + 8);
        v2026 = sub_22E8901B8(v2025, (uint64_t *)&v2218);
        sub_22F0D4E74(v2022);
        __src = v2027;
        v103 = sub_22E8906A0(v2026, (uint64_t *)&__src);
        sub_22F0D4E74(v2021);
        __dst = v2028;
        p_dst = (int8x8_t *)&__dst;
        goto LABEL_504;
      }
      v2096 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2023 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v2097 = *(_DWORD *)(v2096 + 16) & 0xFF800FF;
      if (v2096)
        v2098 = v2097 == 112197643;
      else
        v2098 = 0;
      if (v2098)
      {
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v2105, 0xE37u, 0, (uint64_t)__p);
        v336 = sub_22F2F30F4((uint64_t)__p, (uint64_t)"_Float16");
      }
      else
      {
        if (v2096)
          v2099 = v2097 == 110100491;
        else
          v2099 = 0;
        if (!v2099)
        {
          *v490 = sub_22F369F4C(*v486, v2023);
          return a4;
        }
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v2114, 0xE37u, 0, (uint64_t)__p);
        v336 = sub_22F2F30F4((uint64_t)__p, (uint64_t)"half");
      }
LABEL_505:
      v337 = *(unsigned __int8 *)(v336 + 80);
      sub_22E903BEC((unsigned int *)__p);
      if (v337)
        return 1;
      return a4;
    case 347:
    case 348:
    case 349:
    case 350:
    case 351:
    case 352:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u))
        return 1;
      v90 = a4 + ((unint64_t)*(unsigned int *)a4 >> 24) + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      v92 = *(_QWORD *)(v90 + 8);
      v91 = *(_QWORD *)(v90 + 16);
      *(_QWORD *)&v2222 = v92;
      *(_QWORD *)&v2218 = v91;
      sub_22EFF605C(a4);
      v94 = sub_22EB1F050(v7, (uint64_t *)&v2222, (uint64_t *)&v2218, v93, 2);
      if ((v2222 & 1) != 0 || (v2218 & 1) != 0)
        return 1;
      v95 = v94;
      v96 = v2222 & 0xFFFFFFFFFFFFFFFELL;
      v97 = a4 + ((unint64_t)*(unsigned int *)a4 >> 24) + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      v98 = v2218 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(v97 + 8) = v2222 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(v97 + 16) = v98;
      if ((*(_BYTE *)(v96 + 1) & 0x80) != 0 || (*(_BYTE *)(v98 + 1) & 0x80) != 0)
        return a4;
      if (v95 >= 0x10)
      {
        v99 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v95 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v100 = v99 && *(_DWORD *)(v99 + 16) == 11;
        if (v100 && ((*(_DWORD *)(v99 + 16) >> 19) & 0x1FEu) - 210 <= 7)
          return a4;
      }
      sub_22F0D5A50(v96);
      sub_22E8FCA40((_QWORD *)v7, v101, 0x1339u, 0, (uint64_t)__p);
      __src = *(void **)((v2222 & 0xFFFFFFFFFFFFFFFELL) + 8);
      v102 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&__src);
      __dst = *(void **)((v2218 & 0xFFFFFFFFFFFFFFFELL) + 8);
      v103 = sub_22E8901B8(v102, (uint64_t *)&__dst);
      sub_22F0D5A50(v2222 & 0xFFFFFFFFFFFFFFFELL);
      v105 = v104;
      sub_22F0D60E4(v2218 & 0xFFFFFFFFFFFFFFFELL);
      v2204 = __PAIR64__(v106, v105);
      p_dst = (int8x8_t *)&v2204;
      goto LABEL_504;
    case 353:
      if ((sub_22E978F54((uint64_t *)v7, (unsigned int *)a4, 6u) & 1) != 0)
        return 1;
      return a4;
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 360:
    case 361:
      v22 = 1;
      if ((sub_22E978F54((uint64_t *)v7, (unsigned int *)a4, 1u) & 1) != 0)
        return v22;
      return a4;
    case 402:
      v22 = 1;
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return v22;
      v22 = 1;
      v342 = sub_22EB1B954(v7, *(void **)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8));
      if ((v342 & 1) != 0)
        return v22;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 8) = v342 & 0xFFFFFFFFFFFFFFFELL;
      goto LABEL_625;
    case 403:
      v22 = 1;
      if (!sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        goto LABEL_625;
      return v22;
    case 404:
      *(_QWORD *)&v2218 = 0x900000004;
      v481 = *(_DWORD *)(*(_QWORD *)(*v8 + 15088) + 76);
      if (v481 == 4)
      {
        v482 = 0;
        goto LABEL_1233;
      }
      if (v481 == 9)
      {
        v482 = 1;
LABEL_1233:
        v813 = (char *)((unint64_t)&v2218 | (4 * v482));
        goto LABEL_1235;
      }
      v813 = (char *)&v2218 + 8;
LABEL_1235:
      if (v813 - (char *)&v2218 == 8)
      {
        if ((sub_22E978904((_QWORD *)v7, *(unsigned __int8 **)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8)) & 1) == 0)return a4;
        return 1;
      }
      sub_22EFFAE7C((unsigned int *)a4);
      sub_22E8FCA40((_QWORD *)v7, v814, 0xBA8u, 0, (uint64_t)__p);
      sub_22F0D4E74(a4);
      *(_QWORD *)&v2222 = v815;
      v313 = __p;
      p_src = (uint64_t *)&v2222;
      goto LABEL_477;
    case 406:
    case 409:
    case 1299:
      v180 = (_QWORD *)v7;
      v181 = v5;
      goto LABEL_987;
    case 410:
      if (sub_22F30D7E8((_QWORD *)v7, (unsigned int *)a4))
        return 1;
      return a4;
    case 420:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 3u))
        return 1;
      v22 = 1;
      v553 = sub_22EB1B954(v7, *(void **)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8));
      if ((v553 & 1) != 0)
        return v22;
      v554 = a4
           + ((unint64_t)*(unsigned int *)a4 >> 24)
           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      *(_QWORD *)(v554 + 8) = v553 & 0xFFFFFFFFFFFFFFFELL;
      v22 = 1;
      v555 = sub_22EB1B954(v7, *(void **)(v554 + 16));
      if ((v555 & 1) != 0)
        return v22;
      v556 = a4
           + ((unint64_t)*(unsigned int *)a4 >> 24)
           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      *(_QWORD *)(v556 + 16) = v555 & 0xFFFFFFFFFFFFFFFELL;
      v557 = *(unsigned __int8 **)(v556 + 24);
      if ((v557[2] & 1) != 0)
        return a4;
      sub_22F007D7C(v557, *v8, 0, (uint64_t)__p);
      v558 = *(_DWORD *)&__p[8];
      if (*(_DWORD *)&__p[8] > 0x40u)
      {
        v1941 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)__p);
        if (*(_QWORD *)__p)
          MEMORY[0x2348A0E84](*(_QWORD *)__p, 0x1000C8000313F17);
        if (v1941 == v558)
          return a4;
      }
      else if (!*(_QWORD *)__p)
      {
        return a4;
      }
      v1942 = *(unsigned __int8 **)(a4
                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                  + 8);
      sub_22EFF605C(a4);
      sub_22E979D8C(v7, v1942, v1943);
      v1944 = *(unsigned __int8 **)(a4
                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                  + 16);
      sub_22EFF605C(a4);
      sub_22E979D8C(v7, v1944, v1945);
      return a4;
    case 453:
    case 455:
      if (sub_22E9797E0(v7, (unsigned int *)a4, 0, 0, 0xFFFF, 1))
        return 1;
      LOWORD(v2222) = 0;
      *((_QWORD *)&v2222 + 1) = 0;
      LODWORD(v2223) = 0;
      v236 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 8);
      if ((*(_BYTE *)(v236 + 2) & 1) == 0
        && sub_22F00554C(v236, (uint64_t)&v2222, *v8, 0, 0)
        && sub_22E508590((uint64_t)v2224, 0))
      {
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v237, 0x19C9u, 0, (uint64_t)__p);
        v238 = "__builtin_frame_address";
        if ((_DWORD)v5 == 453)
          v238 = "__builtin_return_address";
        *(_QWORD *)&v2218 = v238;
        v239 = sub_22E8AECC4((uint64_t)__p, (uint64_t *)&v2218);
        sub_22F0D4E74(a4);
        __src = v240;
        sub_22E8906A0(v239, (uint64_t *)&__src);
        sub_22E903BEC((unsigned int *)__p);
      }
      if (v2223 >= 2)
        sub_22EF53BC0(&v2223);
      return a4;
    case 457:
      if (sub_22F30DC28((_QWORD *)v7, (unsigned int *)a4))
        return 1;
      return a4;
    case 458:
      if (sub_22F30DAA8((_QWORD *)v7, (unsigned int *)a4))
        return 1;
      return a4;
    case 466:
      v22 = 1;
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return v22;
      v544 = *(_QWORD *)(*(_QWORD *)(a4
                                   + ((unint64_t)*(unsigned int *)a4 >> 24)
                                   + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                   + 8)
                       + 8);
      v545 = *(_QWORD *)(v544 & 0xFFFFFFFFFFFFFFF0);
      if (v545)
        v546 = (*(_DWORD *)(v545 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
      else
        v546 = 0;
      if (v546)
        goto LABEL_3276;
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v545 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 <= 3)
      {
        v545 = sub_22F10CF48(v545);
        if (v545)
        {
LABEL_3276:
          v549 = *(_QWORD *)(v545 + 32);
          v548 = *v8;
          goto LABEL_839;
        }
        v547 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v544 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                  + 16);
      }
      else
      {
        v547 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v545 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
      }
      if ((v547 - 25) > 1)
        goto LABEL_840;
      v548 = *v8;
      v549 = v544;
LABEL_839:
      v544 = sub_22EF5B848(v548, v549, 0);
LABEL_840:
      *(_QWORD *)(a4 + 8) = v544;
      v550 = (uint64_t *)(v544 & 0xFFFFFFFFFFFFFFF0);
      v551 = *(_QWORD *)(v544 & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v551 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      {
        if ((*(_BYTE *)(v551 + 16) == 39 || (v551 = sub_22F10CF48(v551)) != 0)
          && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v551 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                      + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 25 < 2)
        {
          v552 = 0x100000001;
        }
        else
        {
          v1276 = *v550;
          if (!sub_22F10DFD8(*v550))
          {
            sub_22EFFAE7C((unsigned int *)a4);
            v1870 = v1869;
            v1871 = sub_22F10ACF8(v1276);
            *(_QWORD *)__p = &unk_24FAB6EF8;
            *(_DWORD *)&__p[8] = 3591;
            v22 = 1;
            if ((sub_22EE8B0B0(v7, v1870, v1871) & 1) == 0)
            {
              v1872 = *(_QWORD *)(v7 + 88);
              LODWORD(v2211) = 0;
              *(_DWORD *)__p = 1;
              v1873 = sub_22EF60188(v1872, v544);
              *(_QWORD *)&__p[8] = 0;
              *(_QWORD *)&__p[16] = v1873;
              *((_QWORD *)&v2211 + 1) = 0;
              v451 = sub_22EC45014(v7, __p, 0, *(_QWORD *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8), 0, 0);
              if ((v451 & 1) == 0)
              {
LABEL_825:
                *(_QWORD *)(a4
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8) = v451 & 0xFFFFFFFFFFFFFFFELL;
                return a4;
              }
            }
            return v22;
          }
          v552 = 0x100000002;
        }
      }
      else
      {
        v552 = 0x100000000;
      }
      *(_QWORD *)&v2222 = v552;
      sub_22EFFAE7C((unsigned int *)a4);
      sub_22E8FCA40((_QWORD *)v7, v936, 0xB9Au, 0, (uint64_t)__p);
      v937 = sub_22E89519C((uint64_t)__p, (unsigned int *)&v2222);
      sub_22F0D4E74(a4);
      *(_QWORD *)&v2218 = v938;
      p_src = (uint64_t *)&v2218;
      v313 = (_BYTE *)v937;
      goto LABEL_477;
    case 468:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return 1;
      v592 = sub_22EB1B954(v7, *(void **)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8));
      if ((v592 & 1) != 0)
        return 1;
      v593 = v592 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 8) = v592 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)&v2222 = *(_QWORD *)((v592 & 0xFFFFFFFFFFFFFFFELL) + 8);
      v594 = v2222 & 0xFFFFFFFFFFFFFFF0;
      v595 = sub_22F10AEAC(*(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0));
      *(_QWORD *)&v2218 = v595;
      v596 = *(_QWORD *)v594;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v594 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39 || v595 == 0)
      {
        sub_22F0D5A50(v593);
        sub_22E8FCA40((_QWORD *)v7, v598, 0xDC6u, 0, (uint64_t)__p);
        LODWORD(__src) = 0;
        v599 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
        sub_22E8901B8(v599, (uint64_t *)&v2222);
        goto LABEL_478;
      }
      v1277 = v595;
      v1278 = v8;
      sub_22F0D5A50(v593);
      v1280 = v1279;
      v1281 = sub_22F10ACF8(v596);
      *(_QWORD *)__p = &unk_24FAB6EF8;
      *(_DWORD *)&__p[8] = 3527;
      v1282 = sub_22EE8B0B0(v7, v1280, v1281);
      if ((v1282 & 1) != 0)
        return 1;
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v1277 + 104) + 96), *(_QWORD *)(v1277 + 104));
      if ((**(_QWORD **)(v1277 + 128) & 0x400) == 0)
      {
        sub_22F0D5A50(v593);
        sub_22E8FCA40((_QWORD *)v7, v1283, 0xDC6u, 0, (uint64_t)__p);
        LODWORD(__src) = 1;
        v1284 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
        sub_22E890024(v1284, (uint64_t *)&v2218);
        goto LABEL_478;
      }
      v726 = *v1278;
      v687 = *(_QWORD *)(*v1278 + 16392) | 1;
      goto LABEL_1118;
    case 475:
    case 476:
      v22 = 1;
      if (sub_22E9797E0(v7, (unsigned int *)a4, 1u, 0, 3, 1))
        return v22;
      return a4;
    case 500:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 3u))
        return 1;
      v614 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 24);
      *(_QWORD *)__p = &__p[16];
      *(_QWORD *)&__p[8] = 0x800000000;
      LOWORD(v2218) = 0;
      LODWORD(v2219) = 0;
      *((_QWORD *)&v2218 + 1) = __p;
      v615 = (llvm::APFloatBase *)sub_22F006900(v614, (uint64_t)&v2218, *v8, 0);
      if ((_DWORD)v615)
        v616 = (_DWORD)v2219 == 3;
      else
        v616 = 0;
      if (!v616)
      {
        sub_22F0D5A50(v614);
        sub_22E8FCA40((_QWORD *)v7, v617, 0x11D0u, 0, (uint64_t)&v2222);
        sub_22F0D4E74(v614);
        __src = v618;
        sub_22E8906A0((uint64_t)&v2222, (uint64_t *)&__src);
        sub_22E903BEC((unsigned int *)&v2222);
        if (*(_DWORD *)&__p[8])
        {
          v619 = *(int **)__p;
          v620 = *(_QWORD *)__p + 32 * *(unsigned int *)&__p[8];
          do
          {
            v621 = (uint64_t)(v619 + 2);
            v622 = *v619;
            v619 += 8;
            sub_22E90379C((_QWORD *)v7, v622, v621, 0, (uint64_t)v2194);
            sub_22E903BEC(v2194);
          }
          while (v619 != (int *)v620);
        }
        v623 = 1;
LABEL_3289:
        if (v2219 >= 2)
          sub_22EF53BC0(&v2219);
        sub_22E89277C((char **)__p);
        if (v623 == 5)
          goto LABEL_2936;
        return 1;
      }
      v2178 = v8;
      v956 = v2221[0];
      v957 = llvm::APFloatBase::PPCDoubleDouble(v615);
      v958 = v5;
      if (v957 == v956)
        v959 = (llvm::APFloatBase *)MEMORY[0x23489F2A0](&__len, v2221);
      else
        v959 = (llvm::APFloatBase *)llvm::detail::IEEEFloat::IEEEFloat((llvm::detail::IEEEFloat *)&__len, (const llvm::detail::IEEEFloat *)v2221);
      LOBYTE(v2199) = 0;
      v960 = llvm::APFloatBase::IEEEdouble(v959);
      llvm::APFloat::convert();
      llvm::detail::IEEEFloat::IEEEFloat((llvm::detail::IEEEFloat *)&__dst, 0.0);
      MEMORY[0x23489F4E0]((char *)&v2222 + 8, &__dst, v960);
      llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&__dst);
      if (v957 == (_QWORD)__len)
        v961 = llvm::detail::DoubleAPFloat::compare((llvm::detail::DoubleAPFloat *)&__len, (const llvm::detail::DoubleAPFloat *)((char *)&v2222 + 8));
      else
        v961 = llvm::detail::IEEEFloat::compare((llvm::detail::IEEEFloat *)&__len, (const llvm::detail::IEEEFloat *)((char *)&v2222 + 8));
      if ((v961 - 1) > 1)
      {
        v963 = 1;
        v5 = v958;
      }
      else
      {
        llvm::detail::IEEEFloat::IEEEFloat((llvm::detail::IEEEFloat *)&v2204, 1.0);
        MEMORY[0x23489F4E0](&v2208, &v2204, v960);
        llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v2204);
        if (v957 == (_QWORD)__len)
          v962 = llvm::detail::DoubleAPFloat::compare((llvm::detail::DoubleAPFloat *)&__len, (const llvm::detail::DoubleAPFloat *)&v2208);
        else
          v962 = llvm::detail::IEEEFloat::compare((llvm::detail::IEEEFloat *)&__len, (const llvm::detail::IEEEFloat *)&v2208);
        v963 = v962 > 1;
        v5 = v958;
        if (v957 == v2208)
          sub_22E463170((llvm::APFloatBase *)&v2209);
        else
          llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v2208);
      }
      if (v957 == *((_QWORD *)&v2222 + 1))
      {
        sub_22E463170((llvm::APFloatBase *)&v2223);
        if (v963)
          goto LABEL_1898;
      }
      else
      {
        llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)((char *)&v2222 + 8));
        if (v963)
        {
LABEL_1898:
          sub_22F0D5A50(v614);
          sub_22E8FCA40((_QWORD *)v7, v1285, 0x11D1u, 0, (uint64_t)&v2222);
          sub_22F0D4E74(v614);
          __dst = v1286;
          sub_22E8906A0((uint64_t)&v2222, (uint64_t *)&__dst);
          sub_22E903BEC((unsigned int *)&v2222);
          v623 = 1;
LABEL_3286:
          if (v957 == (_QWORD)__len)
            sub_22E463170((llvm::APFloatBase *)((char *)&__len + 8));
          else
            llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&__len);
          v8 = v2178;
          goto LABEL_3289;
        }
      }
      v623 = 5;
      goto LABEL_3286;
    case 501:
      v331 = *(_DWORD *)(a4 + 16);
      LODWORD(v2218) = v331;
      if (v331 > 3)
      {
        sub_22EFFAEF8((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v332, 0x1344u, 0, (uint64_t)__p);
        LODWORD(__src) = 0;
        v333 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
        LODWORD(__dst) = 3;
        v334 = sub_22E8900C4(v333, (int *)&__dst);
        v103 = sub_22E89519C(v334, (unsigned int *)&v2218);
        sub_22F0D4E74(a4);
        *(_QWORD *)&v2222 = v335;
        p_dst = (int8x8_t *)&v2222;
        goto LABEL_504;
      }
      if (v331 == 1)
        return a4;
      v754 = 1;
      while (1)
      {
        v755 = v754 == 1 ? 1 : 3;
        if (sub_22E9797E0(v7, (unsigned int *)a4, v754, 0, v755, 1))
          break;
        if (v331 == ++v754)
          return a4;
      }
      return 1;
    case 506:
      return sub_22E97915C((_QWORD *)v7, (unsigned int *)a4);
    case 508:
    case 509:
      goto LABEL_1673;
    case 510:
    case 511:
      v241 = *(unsigned __int8 **)(a4
                                 + ((unint64_t)*(unsigned int *)a4 >> 24)
                                 + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                 + 16);
      if ((*(_DWORD *)v241 & 0x18000) != 0)
        goto LABEL_1673;
      v242 = sub_22EFFA6B0(*(unsigned __int8 **)(a4
                                               + ((unint64_t)*(unsigned int *)a4 >> 24)
                                               + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                               + 16));
      if (*v242 == 232 && ((*(_DWORD *)v242 >> 18) & 0xFu) - 1 <= 1)
      {
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v243, 0x1833u, 0, (uint64_t)__p);
        sub_22F0D4E74((uint64_t)v241);
        *(_QWORD *)&v2222 = v244;
        sub_22E8906A0((uint64_t)__p, (uint64_t *)&v2222);
        sub_22E903BEC((unsigned int *)__p);
      }
      sub_22F007D7C(v241, *v8, 0, (uint64_t)&v2222);
      if (DWORD2(v2222) > 0x40)
      {
        if (llvm::APInt::countPopulationSlowCase((llvm::APInt *)&v2222) != 1)
          goto LABEL_357;
      }
      else
      {
        v245 = (uint8x8_t)vcnt_s8(*(int8x8_t *)&v2222);
        v245.i16[0] = vaddlv_u8(v245);
        if (v245.u32[0] != 1)
        {
LABEL_357:
          sub_22EFFAE7C((unsigned int *)a4);
          sub_22E8FCA40((_QWORD *)v7, v246, 0xA39u, 0, (uint64_t)__p);
          sub_22F0D4E74((uint64_t)v241);
          *(_QWORD *)&v2218 = v247;
          v248 = __p;
          goto LABEL_1668;
        }
      }
      v805 = sub_22EF5CDF0(*v8, *(_QWORD *)(*(_QWORD *)(*v8 + 16408) & 0xFFFFFFFFFFFFFFF0));
      if (sub_22E8BAD7C((uint64_t)&v2222, v805))
      {
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v806, 0xA3Bu, 0, (uint64_t)__p);
        LODWORD(__src) = sub_22EF5CDF0(*(_QWORD *)(v7 + 88), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 88) + 16408) & 0xFFFFFFFFFFFFFFF0));
        v807 = sub_22E89519C((uint64_t)__p, (unsigned int *)&__src);
      }
      else
      {
        v1113 = -1;
        if (!sub_22E42E8B8((uint64_t)&v2222, 0x7FFFFFFFLL))
        {
          v1117 = 1;
LABEL_1669:
          if (DWORD2(v2222) >= 0x41 && (_QWORD)v2222)
            MEMORY[0x2348A0E84](v2222, 0x1000C8000313F17);
          if (v1117 & 1 | ((v1113 & 1) == 0))
          {
LABEL_1673:
            sub_22EFFAE7C((unsigned int *)a4);
            sub_22E8FCA40((_QWORD *)v7, v1118, 0x1832u, 0, (uint64_t)__p);
            v1119 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if (v1119)
            {
              if ((*(_DWORD *)(v1119 + 28) & 0x7Eu) - 52 >= 6)
                v1120 = 0;
              else
                v1120 = v1119;
            }
            else
            {
              v1120 = 0;
            }
            *(_QWORD *)&v2222 = v1120;
            sub_22E890024((uint64_t)__p, (uint64_t *)&v2222);
LABEL_1679:
            sub_22E903BEC((unsigned int *)__p);
            return a4;
          }
          return 1;
        }
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v1114, 0xA3Au, 0, (uint64_t)__p);
        LODWORD(__src) = 0x7FFFFFFF;
        v807 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
      }
      v1115 = (_BYTE *)v807;
      sub_22F0D4E74((uint64_t)v241);
      *(_QWORD *)&v2218 = v1116;
      v248 = v1115;
LABEL_1668:
      v1113 = *(_BYTE *)(sub_22E8906A0((uint64_t)v248, (uint64_t *)&v2218) + 80) != 0;
      sub_22E903BEC((unsigned int *)__p);
      v1117 = 0;
      goto LABEL_1669;
    case 512:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u))
        return 1;
      sub_22EFFAE7C((unsigned int *)a4);
      v423 = v422;
      v424 = *(unsigned int *)a4;
      v425 = (unsigned __int8 **)(a4 + (v424 >> 24));
      v426 = sub_22EFFEB40(*v425);
      v427 = &v425[(v424 >> 18) & 1];
      v428 = v427[1];
      if (*v428 != 138)
      {
        v432 = v423;
        v433 = (_QWORD *)v7;
        v434 = 3474;
        goto LABEL_1901;
      }
      v429 = (uint64_t)v426;
      v430 = (unint64_t)*(unsigned int *)v428 >> 24;
      v431 = *(_QWORD *)&v428[v430];
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v431 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 10)
      {
        v432 = v423;
        v433 = (_QWORD *)v7;
        v434 = 3472;
        goto LABEL_1901;
      }
      v1266 = v427[2];
      v1267 = sub_22EFFA604((unsigned __int8 *)v431);
      if (!v1267 || (*(_DWORD *)(v1267 + 28) & 0x7Eu) - 52 > 5)
        goto LABEL_2991;
      if (sub_22EFC01DC(v1267, 0))
      {
        v432 = v423;
        v433 = (_QWORD *)v7;
        v434 = 3473;
        goto LABEL_1901;
      }
      v430 = v428[3];
LABEL_2991:
      v1977 = *(unsigned __int8 **)&v428[v430];
      do
      {
        v1978 = *v1977;
        if (v1978 > 0xD5)
        {
          if (v1978 == 233)
          {
            if ((*(_DWORD *)v1977 & 0x7C0000) != 0x300000)
              goto LABEL_3010;
            v1978 = *(_DWORD *)v1977;
            v1980 = v1977 + 16;
          }
          else
          {
            if (v1978 != 214)
              break;
            v1980 = v1977 + 24;
          }
        }
        else if (v1978 == 155)
        {
          if ((**((_DWORD **)v1977 + 2) & 0x18000) != 0)
            goto LABEL_3010;
          v1980 = v1977 + 24;
          if (!v1977[48])
            v1980 = v1977 + 32;
          v1978 = 155;
        }
        else
        {
          if (v1978 != 176)
            break;
          v1979 = *((unsigned int *)v1977 + 5);
          if ((_DWORD)v1979 == -1)
            goto LABEL_3010;
          v1980 = &v1977[8 * v1979 + 40];
          v1978 = 176;
        }
        v1981 = *(unsigned __int8 **)v1980;
        v30 = v1981 == v1977;
        v1977 = v1981;
      }
      while (!v30);
      if (v1978 == 129)
      {
        v432 = v423;
        v433 = (_QWORD *)v7;
        v434 = 3475;
LABEL_1901:
        sub_22E8FCA40(v433, v432, v434, 0, (uint64_t)__p);
        v804 = (uint64_t)v428;
      }
      else
      {
LABEL_3010:
        v1982 = sub_22EB1B998(v7, v1266);
        if ((v1982 & 1) != 0)
          return 1;
        v1983 = v1982 & 0xFFFFFFFFFFFFFFFELL;
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v1982 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) == 39)
        {
          v1984 = sub_22EFFA9C0((uint64_t)v428, *(_QWORD *)(v7 + 88));
          v1985 = *(_QWORD *)(v1983 + 8);
          *(_QWORD *)&v2222 = v1984;
          *((_QWORD *)&v2222 + 1) = v1985;
          v1986 = *(_QWORD *)(v7 + 88);
          *(_WORD *)__p = 0;
          __p[2] = 0;
          *(_OWORD *)&__p[4] = 0uLL;
          v2211 = 0u;
          v2212 = 0u;
          v2213 = 0u;
          v2214 = 0;
          v1987 = sub_22EF63D8C(v1986, v1984, (uint64_t *)&v2222, 2uLL, (__int128 *)__p, 0);
          v1988 = sub_22EF5B848(*(_QWORD *)(v7 + 88), v1987, 0);
          v1989 = sub_22E90092C(v7, v429, v1988, 64, 0, 0);
          *(_QWORD *)(a4 + 8) = *((_QWORD *)v428 + 1);
          v1990 = *(unsigned int *)a4;
          v1991 = v1990 >> 24;
          LODWORD(v1990) = v1990 & 0xFFFFFCFF | (((*(_DWORD *)v428 >> 8) & 3) << 8);
          *(_DWORD *)a4 = v1990;
          *(_DWORD *)a4 = v1990 & 0xFFFFE3FF | (((*(_DWORD *)v428 >> 10) & 7) << 10);
          *(_QWORD *)(a4 + v1991) = v1989 & 0xFFFFFFFFFFFFFFFELL;
          *(_QWORD *)(a4
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                    + 16) = v1983;
          return a4;
        }
        sub_22E8FCA40((_QWORD *)v7, v423, 0x124Eu, 0, (uint64_t)__p);
        v804 = (uint64_t)v1266;
      }
LABEL_1902:
      sub_22F0D4E74(v804);
      *(_QWORD *)&v2222 = v1288;
      v1289 = __p;
      v1026 = (uint64_t *)&v2222;
      goto LABEL_2924;
    case 513:
      if ((sub_22F30E104((_QWORD *)v7, (unsigned int *)a4) & 1) != 0)
        return 1;
      *(_QWORD *)&v2222 = *(_QWORD *)(*(_QWORD *)(a4
                                                + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                + 8)
                                    + 8);
      v1877 = (uint64_t *)(v2222 & 0xFFFFFFFFFFFFFFF0);
      v1878 = sub_22E3E4B64(*(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0));
      if (v1878)
        v1877 = (uint64_t *)(*(_QWORD *)(v1878 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (!sub_22F110B50(*v1877))
        return a4;
      sub_22F0D5A50(*(_QWORD *)(a4
                              + ((unint64_t)*(unsigned int *)a4 >> 24)
                              + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                              + 8));
      sub_22E8FCA40((_QWORD *)v7, v1879, 0xB99u, 0, (uint64_t)__p);
      LODWORD(v2218) = 1;
      v969 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
      v970 = 3;
      goto LABEL_2796;
    case 514:
    case 515:
      if ((sub_22F30E19C((_QWORD *)v7, (unsigned int *)a4) & 1) != 0)
        return 1;
      return a4;
    case 516:
    case 517:
    case 518:
    case 519:
      if ((sub_22F30E104((_QWORD *)v7, (unsigned int *)a4) & 1) != 0)
        return 1;
      *(_QWORD *)&v2222 = *(_QWORD *)(*(_QWORD *)(a4
                                                + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                + 8)
                                    + 8);
      v966 = (uint64_t *)(v2222 & 0xFFFFFFFFFFFFFFF0);
      v967 = sub_22E3E4B64(*(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0));
      if (v967)
        v966 = (uint64_t *)(*(_QWORD *)(v967 + 32) & 0xFFFFFFFFFFFFFFF0);
      if (sub_22F10E0EC(*v966))
        return a4;
      sub_22F0D5A50(*(_QWORD *)(a4
                              + ((unint64_t)*(unsigned int *)a4 >> 24)
                              + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                              + 8));
      sub_22E8FCA40((_QWORD *)v7, v968, 0xB99u, 0, (uint64_t)__p);
      LODWORD(v2218) = 1;
      v969 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
      v970 = 5;
LABEL_2796:
      LODWORD(__src) = v970;
      v679 = (_BYTE *)sub_22E8900C4(v969, (int *)&__src);
      v680 = (uint64_t *)&v2222;
      goto LABEL_1047;
    case 520:
    case 521:
      if ((sub_22F30E19C((_QWORD *)v7, (unsigned int *)a4) & 1) != 0)
        return 1;
      v1292 = *(_QWORD *)(a4
                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                        + 8);
      *(_QWORD *)&v2222 = *(_QWORD *)(v1292 + 8);
      v1293 = v2222 & 0xFFFFFFFFFFFFFFF0;
      v1294 = sub_22E3E4B64(*(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0));
      if (v1294)
        v1293 = *(_QWORD *)(v1294 + 32) & 0xFFFFFFFFFFFFFFF0;
      v1295 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1293 + 8) & 0xFFFFFFFFFFFFFFF0);
      v1296 = *(_DWORD *)(v1295 + 16);
      if (v1295)
        v1297 = v1296 == 11;
      else
        v1297 = 0;
      if (v1297)
      {
        if (((*(_DWORD *)(v1295 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
          return a4;
      }
      else if (v1295 && v1296 == 44)
      {
        v1298 = sub_22F114198(*(_QWORD *)(v1295 + 24));
        if (((*(_BYTE *)(v1298 + 74) & 1) != 0 || *(_QWORD *)(v1298 + 128) > 7uLL)
          && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v1295 + 24)) + 76) & 0x80) == 0)
        {
          return a4;
        }
      }
      else if (v1296 == 9)
      {
        return a4;
      }
      sub_22F0D5A50(v1292);
      sub_22E8FCA40((_QWORD *)v7, v1973, 0xB99u, 0, (uint64_t)__p);
      v22 = 1;
      LODWORD(v2218) = 1;
      v1974 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
      LODWORD(__src) = 6;
      v1975 = sub_22E8900C4(v1974, (int *)&__src);
      sub_22E8901B8(v1975, (uint64_t *)&v2222);
      goto LABEL_39;
    case 522:
    case 523:
      if ((sub_22F30E300((_QWORD *)v7, (unsigned int *)a4) & 1) != 0)
        return 1;
      v1290 = *(_QWORD *)(a4
                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                        + 8);
      v1291 = sub_22E3E4B64(*(_QWORD *)(*(_QWORD *)(v1290 + 8) & 0xFFFFFFFFFFFFFFF0));
      if (v1291)
      {
        v447 = *(_QWORD *)(v1291 + 32);
        goto LABEL_1545;
      }
      sub_22F0D5A50(v1290);
      sub_22E8FCA40((_QWORD *)v7, v1950, 0xB99u, 0, (uint64_t)__p);
      LODWORD(v2218) = 1;
      v1951 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
      LODWORD(__src) = 4;
      v679 = (_BYTE *)sub_22E8900C4(v1951, (int *)&__src);
      *(_QWORD *)&v2222 = *(_QWORD *)(v1290 + 8);
      v680 = (uint64_t *)&v2222;
      goto LABEL_1047;
    case 524:
    case 525:
    case 526:
      if ((sub_22F30E300((_QWORD *)v7, (unsigned int *)a4) & 1) != 0)
        return 1;
      v1237 = *(_QWORD *)(a4
                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                        + 8);
      v1238 = sub_22E3E4B64(*(_QWORD *)(*(_QWORD *)(v1237 + 8) & 0xFFFFFFFFFFFFFFF0));
      if (!v1238)
        goto LABEL_3015;
      v1239 = v1238;
      v447 = *(_QWORD *)(v1238 + 32);
      v1240 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v447 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v1241 = *(_DWORD *)(v1240 + 16);
      if (v1240)
        v1242 = v1241 == 11;
      else
        v1242 = 0;
      if (v1242)
      {
        if (((*(_DWORD *)(v1240 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
          goto LABEL_1545;
      }
      else if (v1240 && v1241 == 44)
      {
        v1243 = sub_22F114198(*(_QWORD *)(v1240 + 24));
        if (((*(_BYTE *)(v1243 + 74) & 1) != 0 || *(_QWORD *)(v1243 + 128) > 7uLL)
          && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v1240 + 24)) + 76) & 0x80) == 0)
        {
          v447 = *(_QWORD *)(v1239 + 32);
          goto LABEL_1545;
        }
      }
      else if (v1241 == 9)
      {
        goto LABEL_1545;
      }
LABEL_3015:
      sub_22F0D5A50(v1237);
      sub_22E8FCA40((_QWORD *)v7, v1992, 0xB99u, 0, (uint64_t)__p);
      v22 = 1;
      LODWORD(v2218) = 1;
      v1993 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
      LODWORD(__src) = 6;
      v1994 = sub_22E8900C4(v1993, (int *)&__src);
      *(_QWORD *)&v2222 = *(_QWORD *)(v1237 + 8);
      sub_22E8901B8(v1994, (uint64_t *)&v2222);
      goto LABEL_39;
    case 527:
      return sub_22F30E378((_QWORD *)v7, (unsigned int *)a4, a4);
    case 528:
      if ((*(_BYTE *)(*(_QWORD *)(v7 + 72) + 204) & 8) == 0)
      {
        sub_22EFFAE7C((unsigned int *)a4);
        v407 = v533;
        v408 = (_QWORD *)v7;
        v409 = 2973;
        goto LABEL_1403;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 4u))
        return 1;
      v624 = v8;
      v765 = a4
           + ((unint64_t)*(unsigned int *)a4 >> 24)
           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      v766 = *(_QWORD *)(v765 + 16);
      v768 = *(_QWORD *)(v765 + 24);
      v767 = *(_QWORD *)(v765 + 32);
      v769 = sub_22EB1B954(v7, *(void **)(v765 + 8));
      v22 = v769;
      if ((v769 & 1) != 0)
        return v22;
      v770 = v769 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 8) = v769 & 0xFFFFFFFFFFFFFFFELL;
      if ((*(_BYTE *)((v769 & 0xFFFFFFFFFFFFFFFELL) + 1) & 0x80) != 0)
        goto LABEL_3133;
      if ((v771 = *(_QWORD *)(*(_QWORD *)(v770 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0 && *(_BYTE *)(v771 + 16) == 39
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v771 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
        && (v771 = sub_22F10CF48(v771)) != 0)
      {
        v772 = *(_QWORD *)(v771 + 32);
        v773 = *(_QWORD *)(v772 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v773 + 8) & 0xF) != 0)
          v773 = (unint64_t)sub_22F10D2BC(v772);
        v774 = v773 & 0xFFFFFFFFFFFFFFF0;
        if (sub_22E99600C(v773 & 0xFFFFFFFFFFFFFFF0))
        {
          v775 = 0;
          v776 = v7;
        }
        else
        {
          sub_22F0D5A50(v770);
          v776 = v7;
          sub_22E8FCA40((_QWORD *)v7, v1961, 0xB99u, 0, (uint64_t)__p);
          v775 = 1;
          LODWORD(v2218) = 1;
          v1962 = sub_22E89519C((uint64_t)__p, (unsigned int *)&v2218);
          LODWORD(__src) = 2;
          v1963 = sub_22E8900C4(v1962, (int *)&__src);
          *(_QWORD *)&v2222 = *(_QWORD *)(v770 + 8);
          sub_22E8901B8(v1963, (uint64_t *)&v2222);
          sub_22E903BEC((unsigned int *)__p);
        }
      }
      else
      {
        sub_22F0D5A50(v770);
        v776 = v7;
        sub_22E8FCA40((_QWORD *)v7, v1958, 0xB99u, 0, (uint64_t)__p);
        v775 = 1;
        LODWORD(v2218) = 1;
        v1959 = sub_22E89519C((uint64_t)__p, (unsigned int *)&v2218);
        LODWORD(__src) = 2;
        v1960 = sub_22E8900C4(v1959, (int *)&__src);
        *(_QWORD *)&v2222 = *(_QWORD *)(v770 + 8);
        sub_22E8901B8(v1960, (uint64_t *)&v2222);
        sub_22E903BEC((unsigned int *)__p);
        v774 = 0;
      }
      if ((sub_22EB1A358(v776, v766, 0) & 1) != 0
        || (sub_22EF67C8C(*(_QWORD *)(v7 + 88)), v2063 = sub_22F32DB2C(), (v2063 & 1) != 0))
      {
        v1964 = 0;
      }
      else
      {
        v1964 = v2063 & 0xFFFFFFFFFFFFFFFELL;
        *(_QWORD *)(a4
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 16) = v2063 & 0xFFFFFFFFFFFFFFFELL;
      }
      if ((sub_22EB1A358(v7, v768, 0) & 1) != 0
        || (sub_22EF67C8C(*(_QWORD *)(v7 + 88)), v2065 = sub_22F32DB2C(), (v2065 & 1) != 0))
      {
        v2064 = 0;
      }
      else
      {
        v2064 = v2065 & 0xFFFFFFFFFFFFFFFELL;
        *(_QWORD *)(a4
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 24) = v2065 & 0xFFFFFFFFFFFFFFFELL;
      }
      if (v1964 && (*(_BYTE *)(v1964 + 1) & 0x80) != 0 || v2064 && (*(_BYTE *)(v2064 + 1) & 0x80) != 0)
      {
LABEL_3133:
        v447 = *(_QWORD *)(*v624 + 16832);
        goto LABEL_1545;
      }
      if (v1964)
      {
        v2066 = sub_22E996088(v1964, (uint64_t)"row", 3, (_QWORD *)v7);
        v2165 = v2066 & 0xFFFFFF00;
        v2067 = BYTE4(v2066);
        v2068 = v2066;
      }
      else
      {
        v2067 = 0;
        v2068 = 0;
        v2165 = 0;
      }
      if (v2064)
      {
        v2069 = sub_22E996088(v2064, (uint64_t)"column", 6, (_QWORD *)v7);
        v2139 = v2069 & 0xFFFFFF00;
        LODWORD(v2064) = BYTE4(v2069);
        v2132 = v2069;
      }
      else
      {
        v2139 = 0;
        v2132 = 0;
      }
      if ((sub_22EB1A358(v7, v767, 0) & 1) != 0)
        return 1;
      sub_22EF67C8C(*(_QWORD *)(v7 + 88));
      v2085 = sub_22F32DB2C();
      if ((v2085 & 1) != 0)
        return 1;
      v2070 = v2085 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 32) = v2085 & 0xFFFFFFFFFFFFFFFELL;
      if (!v2067)
        return 1;
      sub_22F00905C(v2085 & 0xFFFFFFFFFFFFFFFELL, *v624, 0, (uint64_t)&v2222);
      if (!(_BYTE)v2223)
        goto LABEL_3150;
      v2071 = DWORD2(v2222);
      v2072 = (__int128 *)v2222;
      if (DWORD2(v2222) < 0x41)
        v2072 = &v2222;
      if (*(_QWORD *)v2072 >= (unint64_t)(v2165 | v2068))
        goto LABEL_3147;
      sub_22F0D5A50(v2070);
      sub_22E8FCA40((_QWORD *)v7, v2073, 0xBA2u, 0, (uint64_t)__p);
      sub_22E903BEC((unsigned int *)__p);
      if (!(_BYTE)v2223)
        return 1;
      v775 = 1;
      v2071 = DWORD2(v2222);
LABEL_3147:
      if (v2071 >= 0x41 && (_QWORD)v2222)
        MEMORY[0x2348A0E84](v2222, 0x1000C8000313F17);
LABEL_3150:
      v22 = 1;
      if ((v775 & 1) != 0 || !(_DWORD)v2064)
        return v22;
      v560 = sub_22F36BBA8(*v624, v774, v2165 | v2068, v2132 | v2139);
      goto LABEL_1119;
    case 529:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 3u))
        return 1;
      v624 = v8;
      v625 = (_QWORD *)(a4
                      + ((unint64_t)*(unsigned int *)a4 >> 24)
                      + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1));
      v626 = (void *)v625[2];
      v627 = v625[3];
      v628 = sub_22EB1A358(v7, v625[1], 0);
      v22 = v628;
      if ((v628 & 1) != 0)
        return v22;
      v629 = v628 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 8) = v628 & 0xFFFFFFFFFFFFFFFELL;
      if ((*(_BYTE *)((v628 & 0xFFFFFFFFFFFFFFFELL) + 1) & 0x80) != 0)
        goto LABEL_3133;
      v630 = *(_QWORD *)(*(_QWORD *)(v629 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v630)
        v631 = *(_BYTE *)(v630 + 16) == 29;
      else
        v631 = 0;
      if (v631)
        goto LABEL_966;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v630 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 29
        && (v632 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(v629 + 8) & 0xFFFFFFFFFFFFFFF0))) != 0)
      {
        v630 = v632;
LABEL_966:
        v633 = 0;
      }
      else
      {
        sub_22F0D5A50(v629);
        sub_22E8FCA40((_QWORD *)v7, v1909, 0xB99u, 0, (uint64_t)__p);
        v633 = 1;
        LODWORD(v2218) = 1;
        v1910 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
        LODWORD(__src) = 1;
        v1911 = sub_22E8900C4(v1910, (int *)&__src);
        *(_QWORD *)&v2222 = *(_QWORD *)(v629 + 8);
        sub_22E8901B8(v1911, (uint64_t *)&v2222);
        sub_22E903BEC((unsigned int *)__p);
        v630 = 0;
      }
      v1912 = sub_22EB1B954(v7, v626);
      v22 = v1912;
      if ((v1912 & 1) != 0)
        return v22;
      v1913 = v1912 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 16) = v1912 & 0xFFFFFFFFFFFFFFFELL;
      if ((*(_BYTE *)((v1912 & 0xFFFFFFFFFFFFFFFELL) + 1) & 0x80) != 0)
        goto LABEL_3133;
      v1914 = *(_QWORD *)(*(_QWORD *)(v1913 + 8) & 0xFFFFFFFFFFFFFFF0);
      if ((!v1914 || *(_BYTE *)(v1914 + 16) != 39)
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1914 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
         || (v1914 = sub_22F10CF48(v1914)) == 0))
      {
        sub_22F0D5A50(v1913);
        sub_22E8FCA40((_QWORD *)v7, v2029, 0xB99u, 0, (uint64_t)__p);
        LODWORD(v2218) = 2;
        v2030 = sub_22E89519C((uint64_t)__p, (unsigned int *)&v2218);
        LODWORD(__src) = 2;
        v2031 = sub_22E8900C4(v2030, (int *)&__src);
        *(_QWORD *)&v2222 = *(_QWORD *)(v1913 + 8);
        sub_22E8901B8(v2031, (uint64_t *)&v2222);
        v1923 = (unsigned int *)__p;
        goto LABEL_3054;
      }
      v1915 = *(_QWORD *)(v1914 + 32);
      v1916 = v1915 & 0xFFFFFFFFFFFFFFF0;
      if ((v1915 & 1) != 0 || (v1917 = v633, (*(_BYTE *)((v1915 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) != 0))
      {
        sub_22F0D5A50(v1913);
        sub_22E8FCA40((_QWORD *)v7, v1918, 0xBA1u, 0, (uint64_t)__p);
        sub_22E903BEC((unsigned int *)__p);
        v1917 = 1;
      }
      v1919 = *(_QWORD *)v1916;
      if ((*(_BYTE *)(*(_QWORD *)v1916 + 8) & 0xF) != 0)
        v1919 = (unint64_t)sub_22F10D2BC(v1915);
      v1920 = *(_QWORD *)((v1919 & 0xFFFFFFFFFFFFFFF0) + 8);
      *(_QWORD *)&v2218 = v1920;
      if ((v633 & 1) == 0
        && (*(_QWORD *)((v1920 & 0xFFFFFFFFFFFFFFF0) + 8) | v1920 & 7) != (*(_QWORD *)((*(_QWORD *)(v630 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                                       + 8) | *(_QWORD *)(v630 + 32) & 7))
      {
        sub_22F0D5A50(v1913);
        sub_22E8FCA40((_QWORD *)v7, v1921, 0xB9Fu, 0, (uint64_t)&v2222);
        v1922 = sub_22E8901B8((uint64_t)&v2222, (uint64_t *)&v2218);
        __src = *(void **)(v630 + 32);
        sub_22E8901B8(v1922, (uint64_t *)&__src);
        v1923 = (unsigned int *)&v2222;
LABEL_3054:
        sub_22E903BEC(v1923);
        v1917 = 1;
      }
      v22 = sub_22EB1A358(v7, v627, 0);
      if ((v22 & 1) != 0)
        return v22;
      sub_22EF67C8C(*(_QWORD *)(v7 + 88));
      v2032 = sub_22F32DB2C();
      v22 = v2032;
      if ((v2032 & 1) != 0)
        return v22;
      v2033 = v2032 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 24) = v2032 & 0xFFFFFFFFFFFFFFFELL;
      if ((v633 & 1) != 0)
        goto LABEL_3266;
      sub_22F00905C(v2032 & 0xFFFFFFFFFFFFFFFELL, *v624, 0, (uint64_t)&v2218);
      if (!(_BYTE)v2219)
        goto LABEL_3266;
      v2034 = DWORD2(v2218);
      v2035 = (__int128 *)v2218;
      if (DWORD2(v2218) < 0x41)
        v2035 = &v2218;
      if (*(_QWORD *)v2035 >= (unint64_t)*(unsigned int *)(v630 + 40))
        goto LABEL_3064;
      sub_22F0D5A50(v2033);
      sub_22E8FCA40((_QWORD *)v7, v2036, 0xBA2u, 0, (uint64_t)&v2222);
      sub_22E903BEC((unsigned int *)&v2222);
      if ((_BYTE)v2219)
      {
        v1917 = 1;
        v2034 = DWORD2(v2218);
LABEL_3064:
        if (v2034 >= 0x41 && (_QWORD)v2218)
          MEMORY[0x2348A0E84](v2218, 0x1000C8000313F17);
      }
      else
      {
        v1917 = 1;
      }
LABEL_3266:
      if (v1917)
        return 1;
      else
        return a4;
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 539:
    case 540:
    case 541:
    case 542:
    case 543:
    case 544:
    case 545:
    case 546:
    case 547:
    case 548:
    case 549:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 556:
    case 557:
    case 558:
    case 559:
    case 560:
    case 561:
    case 562:
    case 563:
    case 564:
    case 565:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
    case 575:
    case 576:
    case 577:
    case 578:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
    case 584:
    case 585:
    case 586:
    case 587:
    case 588:
    case 589:
    case 590:
    case 591:
    case 592:
    case 593:
    case 594:
    case 595:
    case 596:
    case 597:
    case 598:
    case 599:
    case 600:
    case 601:
    case 602:
    case 603:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 612:
    case 613:
    case 614:
    case 615:
    case 616:
    case 617:
    case 618:
    case 619:
    case 620:
    case 621:
    case 622:
    case 623:
    case 624:
    case 625:
    case 626:
    case 627:
    case 628:
    case 629:
    case 630:
    case 631:
      v2166 = v8;
      v15 = (unsigned int *)(a4 & 0xFFFFFFFFFFFFFFFELL);
      v16 = *(unsigned int *)(a4 & 0xFFFFFFFFFFFFFFFELL);
      v17 = (unsigned __int8 **)((a4 & 0xFFFFFFFFFFFFFFFELL) + (v16 >> 24));
      v18 = *v17;
      v19 = sub_22EFFBBCC(*v17);
      if (!*(_DWORD *)((a4 & 0xFFFFFFFFFFFFFFFELL) + 16))
      {
        sub_22EFFAEF8((unsigned int *)(a4 & 0xFFFFFFFFFFFFFFFELL));
        sub_22E8FCA40((_QWORD *)v7, v37, 0x133Eu, 0, (uint64_t)__p);
        LODWORD(v2218) = 0;
        v38 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
        v22 = 1;
        LODWORD(__src) = 1;
        v39 = sub_22E8900C4(v38, (int *)&__src);
        LODWORD(__dst) = v15[4];
        v40 = sub_22E89519C(v39, (unsigned int *)&__dst);
        sub_22F0D4E74((uint64_t)v18);
        *(_QWORD *)&v2222 = v41;
        v42 = (uint64_t *)&v2222;
LABEL_37:
        v43 = v40;
        goto LABEL_38;
      }
      v20 = v19;
      v21 = *((_QWORD *)v19 + 2);
      v22 = 1;
      v23 = sub_22EB1B954(v7, v17[((v16 >> 18) & 1) + 1]);
      if ((v23 & 1) != 0)
        return v22;
      v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)((char *)&v15[2 * (((unint64_t)*v15 >> 18) & 1) + 2] + ((unint64_t)*v15 >> 24)) = v23 & 0xFFFFFFFFFFFFFFFELL;
      v25 = *(_QWORD *)(*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
      if ((!v25 || *(_BYTE *)(v25 + 16) != 39)
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
         || (v25 = sub_22F10CF48(v25)) == 0))
      {
        if ((v20[2] & 4) != 0)
        {
          *(_OWORD *)__p = *((_OWORD *)v20 + 2);
          v69 = sub_22F0AB0EC((unint64_t *)__p);
        }
        else
        {
          v69 = *((_DWORD *)v20 + 1);
        }
        sub_22E8FCA40((_QWORD *)v7, v69, 0xAC3u, 0, (uint64_t)__p);
        *(_QWORD *)&v2222 = *(_QWORD *)(v24 + 8);
        v70 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
        goto LABEL_82;
      }
      v2140 = (_QWORD *)v7;
      v26 = *(_QWORD *)(v25 + 32);
      *(_QWORD *)&v2222 = v26;
      v27 = v26 & 0xFFFFFFFFFFFFFFF0;
      v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v29 = *(_DWORD *)(v28 + 16);
      if (v28)
        v30 = v29 == 11;
      else
        v30 = 0;
      if (v30)
      {
        if (((*(_DWORD *)(v28 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
          goto LABEL_148;
      }
      else
      {
        if (v28 && v29 == 44)
        {
          v31 = sub_22F114198(*(_QWORD *)(v28 + 24));
          if (((*(_BYTE *)(v31 + 74) & 1) != 0 || *(_QWORD *)(v31 + 128) > 7uLL)
            && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v28 + 24)) + 76) & 0x80) == 0)
          {
            goto LABEL_152;
          }
LABEL_148:
          v123 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v27 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
          v119 = v123 > 0x27;
          v124 = (1 << v123) & 0x8100000400;
          if (v119 || v124 == 0)
          {
            if ((v20[2] & 4) != 0)
            {
              *(_OWORD *)__p = *((_OWORD *)v20 + 2);
              v188 = sub_22F0AB0EC((unint64_t *)__p);
            }
            else
            {
              v188 = *((_DWORD *)v20 + 1);
            }
            v133 = v188;
            v134 = v2140;
            v135 = 2757;
            goto LABEL_475;
          }
          goto LABEL_152;
        }
        if (v29 != 9)
          goto LABEL_148;
      }
LABEL_152:
      v126 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v126 & 8) == 0)
      {
        v127 = v2140;
        if (((v126 | v26) & 1) == 0)
        {
LABEL_154:
          v128 = *(_QWORD *)v27;
          if ((*(_BYTE *)(*(_QWORD *)v27 + 8) & 0xF) != 0)
            v128 = (unint64_t)sub_22F10D2BC(v26);
          *(_QWORD *)&v2222 = v128 & 0xFFFFFFFFFFFFFFF0;
          sub_22EF5CCD0(*v2166, *(_QWORD *)(v128 & 0xFFFFFFFFFFFFFFF0), (uint64_t)__p);
          switch(*(_QWORD *)__p)
          {
            case 1:
            case 2:
            case 4:
            case 8:
              goto LABEL_989;
            case 3:
            case 5:
            case 6:
            case 7:
              goto LABEL_472;
            default:
              if (*(_QWORD *)__p == 16)
              {
LABEL_989:
                v648 = (char *)&loc_22E96D5F0 + 4 * word_22F46761E[sub_22EFC01DC(v21, 0) - 530];
                __asm { BR              X10 }
              }
LABEL_472:
              if ((v20[2] & 4) != 0)
              {
                *(_OWORD *)__p = *((_OWORD *)v20 + 2);
                v311 = sub_22F0AB0EC((unint64_t *)__p);
              }
              else
              {
                v311 = *((_DWORD *)v20 + 1);
              }
              v133 = v311;
              v134 = v127;
              v135 = 2758;
              break;
          }
          goto LABEL_475;
        }
        goto LABEL_167;
      }
      v129 = *(_QWORD *)((v126 & 0xFFFFFFFFFFFFFFF0) + 0x18);
      v130 = (v129 & 0xC00000000) == 0 || (*(_QWORD *)((v126 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x200000000) == 0;
      v127 = v2140;
      if (!v130)
      {
        sub_22F0D5A50(v24);
        sub_22E8FCA40(v2140, v139, 0xACEu, 0, (uint64_t)__p);
        v22 = 1;
        LODWORD(__src) = 1;
        v140 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
        v40 = sub_22E8901B8(v140, (uint64_t *)&v2222);
        sub_22F0D4E74(v24);
        *(_QWORD *)&v2218 = v141;
        v42 = (uint64_t *)&v2218;
        goto LABEL_37;
      }
      if (((v126 | v26) & 1) != 0)
      {
LABEL_167:
        if ((v20[2] & 4) != 0)
        {
          *(_OWORD *)__p = *((_OWORD *)v20 + 2);
          v132 = sub_22F0AB0EC((unint64_t *)__p);
        }
        else
        {
          v132 = *((_DWORD *)v20 + 1);
        }
        v133 = v132;
        v134 = v127;
        v135 = 2753;
LABEL_475:
        sub_22E8FCA40(v134, v133, v135, 0, (uint64_t)__p);
        *(_QWORD *)&v2218 = *(_QWORD *)(v24 + 8);
        v71 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
        sub_22F0D4E74(v24);
        __src = v312;
        p_src = (uint64_t *)&__src;
        goto LABEL_476;
      }
      if (((v129 >> 6) & 7) - 2 > 2)
        goto LABEL_154;
      if ((v20[2] & 4) != 0)
      {
        *(_OWORD *)__p = *((_OWORD *)v20 + 2);
        v131 = sub_22F0AB0EC((unint64_t *)__p);
      }
      else
      {
        v131 = *((_DWORD *)v20 + 1);
      }
      sub_22E8FCA40(v2140, v131, 0xA59u, 0, (uint64_t)__p);
      v70 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
LABEL_82:
      v71 = v70;
      v72 = v24;
LABEL_83:
      sub_22F0D4E74(v72);
      *(_QWORD *)&v2218 = v73;
      p_src = (uint64_t *)&v2218;
LABEL_476:
      v313 = (_BYTE *)v71;
LABEL_477:
      sub_22E8906A0((uint64_t)v313, p_src);
LABEL_478:
      sub_22E903BEC((unsigned int *)__p);
      return 1;
    case 632:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 0;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 633:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 1;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 634:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 2;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 635:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 3;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 636:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 4;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 637:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 5;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 638:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 6;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 639:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 7;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 640:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 8;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 641:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 9;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 642:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 10;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 643:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 11;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 644:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 12;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 645:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 13;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 649:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 14;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 650:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 15;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 651:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 16;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 652:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 17;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 653:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 18;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 654:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 19;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 655:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 20;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 656:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 21;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 657:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 22;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 658:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 23;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 659:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 24;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 660:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 25;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 661:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 26;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 662:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 27;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 663:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 28;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 664:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 29;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 665:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 30;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 666:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 31;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 667:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 32;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 668:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 33;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 669:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 34;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 670:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 35;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 677:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 36;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 678:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 37;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 679:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 38;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 680:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 39;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 681:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 40;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 682:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 41;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 683:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 42;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 684:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 43;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 685:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 44;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 686:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 45;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 687:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 46;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 688:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 47;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 689:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 48;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 690:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 49;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 691:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 50;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 692:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 51;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 693:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 52;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 694:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 53;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 695:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 54;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 696:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 55;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 697:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 56;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 698:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 57;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 699:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 58;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 700:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 59;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 701:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 60;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 702:
      v1874 = (_QWORD *)v7;
      v1875 = a4;
      v1876 = 61;
      return sub_22F30DCCC(v1874, v1875, v1876);
    case 703:
      sub_22EFFAE7C((unsigned int *)a4);
      sub_22E8FCA40((_QWORD *)v7, v381, 0x1855u, 0, (uint64_t)__p);
      sub_22F0D4E74(*(_QWORD *)(a4 + *(unsigned __int8 *)(a4 + 3)));
      *(_QWORD *)&v2222 = v382;
      sub_22E8906A0((uint64_t)__p, (uint64_t *)&v2222);
      goto LABEL_1679;
    case 713:
      v410 = *(unsigned int *)(a4 + 16);
      if (!(_DWORD)v410)
      {
        sub_22EFFAEF8((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v808, 0x133Eu, 0, (uint64_t)__p);
        LODWORD(v2218) = 0;
        v809 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
        v22 = 1;
        LODWORD(__src) = 1;
        v810 = sub_22E8900C4(v809, (int *)&__src);
        LODWORD(__dst) = *(_DWORD *)(a4 + 16);
        v811 = sub_22E89519C(v810, (unsigned int *)&__dst);
        sub_22F0D4E74(*(_QWORD *)(a4 + *(unsigned __int8 *)(a4 + 3)));
        *(_QWORD *)&v2222 = v812;
        v42 = (uint64_t *)&v2222;
        v43 = v811;
LABEL_38:
        sub_22E8906A0(v43, v42);
        goto LABEL_39;
      }
      v411 = (unsigned __int8 **)(a4
                                + ((unint64_t)*(unsigned int *)a4 >> 24)
                                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                + 8);
      v412 = 8 * v410;
      while (1)
      {
        v413 = *v411;
        v414 = sub_22EFFBBCC(*v411);
        if (*v414 != 225 || (*(_DWORD *)v414 & 0x1C0000) != 0x40000)
          break;
        ++v411;
        v412 -= 8;
        if (!v412)
          goto LABEL_2936;
      }
      sub_22F0D5A50((uint64_t)v413);
      sub_22E8FCA40((_QWORD *)v7, v803, 0xF75u, 0, (uint64_t)__p);
      v804 = (uint64_t)v413;
      goto LABEL_1902;
    case 714:
    case 1195:
      sub_22F30D714((unsigned int *)v7, (unsigned int *)a4, v9, v10, v11, v12, v13, v14);
      return a4;
    case 719:
    case 720:
    case 721:
    case 722:
    case 764:
    case 769:
      *(_OWORD *)__p = xmmword_22F4658B0;
      v108 = (_QWORD *)v7;
      v109 = (unsigned int *)a4;
      v110 = 4;
      goto LABEL_145;
    case 727:
    case 728:
      v189 = v7;
      v190 = a4;
      v191 = 0x100000;
      v192 = 59;
      goto LABEL_415;
    case 729:
    case 730:
      v189 = v7;
      v190 = a4;
      v191 = 0x200000;
      v192 = 60;
LABEL_415:
      if ((sub_22E979E44(v189, v190, v191, v192) & 1) == 0)
        return a4;
      return 1;
    case 733:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return 1;
      sub_22EFFAE7C((unsigned int *)a4);
      v612 = v611;
      v613 = sub_22EF69FD4(*(_QWORD *)(v7 + 88), *(_QWORD *)(**(_QWORD **)(a2 + 120) + 48));
      if ((sub_22EBBAAD4((_QWORD *)v7, v612, v613, a4) & 1) != 0)
        return 1;
      v447 = *(_QWORD *)(*v8 + 16816);
      goto LABEL_1545;
    case 765:
    case 766:
    case 767:
    case 770:
    case 771:
    case 772:
      *(_QWORD *)__p = 0x2700000001;
      *(_DWORD *)&__p[8] = 3;
      v108 = (_QWORD *)v7;
      v109 = (unsigned int *)a4;
      v110 = 3;
LABEL_145:
      if (!sub_22E978E88(v108, v109, __p, v110))
        return a4;
      return 1;
    case 799:
      v645 = *(_DWORD *)(*(_QWORD *)(*v8 + 15088) + 56);
      v119 = v645 > 0x27;
      v646 = (1 << v645) & 0x800000000ALL;
      v180 = (_QWORD *)v7;
      if (v119 || v646 == 0)
      {
        v181 = 799;
LABEL_987:
        if ((sub_22E978AC0(v180, v181, (unsigned int *)a4) & 1) != 0)
          return 1;
      }
      else
      {
        v1253 = sub_22F30D2B8((_QWORD *)v7, (unsigned int *)a4);
        if ((v1253 & 1) != 0)
          return 1;
      }
      return a4;
    case 1188:
    case 1189:
    case 1190:
    case 1191:
    case 1192:
    case 1193:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return 1;
      v117 = *(_QWORD *)(**(_QWORD **)(a2 + 120) + 48);
      v118 = *(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (v118)
        v119 = *(unsigned __int8 *)(v118 + 16) - 27 > 0xFFFFFFFD;
      else
        v119 = 0;
      if (!v119)
        v118 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0));
      v120 = *(_QWORD *)(v117 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v120 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_1029;
      v121 = (uint64_t *)(*(_QWORD *)(v118 + 24) & 0xFFFFFFFFFFFFFFF0);
      if ((v5 & 0xFFFFFFFE) == 0x4A4)
      {
        v122 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v121 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v122 != 32 && v122 != 39)
          goto LABEL_1029;
      }
      else if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v121 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
      {
        goto LABEL_1029;
      }
      v671 = sub_22F10ACF8(v120);
      if (*(_QWORD *)(*(_QWORD *)((v671 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((sub_22F10ACF8(*v121) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
        return a4;
LABEL_1029:
      sub_22EFFAE7C((unsigned int *)a4);
      sub_22E8FCA40((_QWORD *)v7, v672, 0xBA3u, 0, (uint64_t)__p);
      sub_22E890024((uint64_t)__p, &v2196);
      goto LABEL_2925;
    case 1194:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u))
        return 1;
      v635 = *(unsigned int *)a4;
      v636 = v635 >> 24;
      v637 = a4 + (v635 >> 24);
      v638 = (v635 >> 18) & 1;
      v428 = *(unsigned __int8 **)(v637 + 8 * v638 + 8);
      v639 = *((_QWORD *)v428 + 1);
      v640 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v639 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v641 = *(_DWORD *)(v640 + 16);
      if (v640)
        v642 = v641 == 11;
      else
        v642 = 0;
      if (v642)
      {
        if (((*(_DWORD *)(v640 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
          goto LABEL_1900;
      }
      else
      {
        if (v640 && v641 == 44)
        {
          v643 = sub_22F114198(*(_QWORD *)(v640 + 24));
          if (((*(_BYTE *)(v643 + 74) & 1) != 0 || *(_QWORD *)(v643 + 128) > 7uLL)
            && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v640 + 24)) + 76) & 0x80) == 0)
          {
            v644 = *(unsigned int *)a4;
            v636 = v644 >> 24;
            v638 = (v644 >> 18) & 1;
            goto LABEL_1450;
          }
LABEL_1900:
          sub_22F0D5A50((uint64_t)v428);
          v432 = v1287;
          v433 = (_QWORD *)v7;
          v434 = 2963;
          goto LABEL_1901;
        }
        if (v641 != 9)
          goto LABEL_1900;
      }
LABEL_1450:
      v964 = sub_22EFFBBCC(*(unsigned __int8 **)(a4 + v636 + 8 * v638 + 16));
      v428 = v964;
      if (*v964 != 225 || (v964[2] & 0x1C) != 0)
      {
        sub_22F0D5A50((uint64_t)v964);
        v432 = v965;
        v433 = (_QWORD *)v7;
        v434 = 2964;
        goto LABEL_1901;
      }
LABEL_2293:
      *(_QWORD *)(a4 + 8) = v639;
      return a4;
    case 1206:
    case 1207:
    case 1208:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 3u))
        return 1;
      v158 = v8;
      v159 = 0;
      v160 = a4 + 8;
      v22 = 1;
      v161 = 1;
      do
      {
        v162 = v161;
        v163 = sub_22EB1B954(v7, *(void **)(v160+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v159));
        if ((v163 & 1) != 0)
          return v22;
        v164 = v163 & 0xFFFFFFFFFFFFFFFELL;
        *(_QWORD *)(v160
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v159) = v163 & 0xFFFFFFFFFFFFFFFELL;
        *(_QWORD *)&v2222 = *(_QWORD *)((v163 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v165 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v166 = *(_DWORD *)(v165 + 16);
        if (v165)
          v167 = v166 == 11;
        else
          v167 = 0;
        if (v167)
        {
          if (((*(_DWORD *)(v165 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
            goto LABEL_1161;
        }
        else if (v165 && v166 == 44)
        {
          v168 = sub_22F114198(*(_QWORD *)(v165 + 24));
          if ((*(_BYTE *)(v168 + 74) & 1) == 0 && *(_QWORD *)(v168 + 128) <= 7uLL
            || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v165 + 24)) + 76) & 0x80) != 0)
          {
LABEL_1161:
            sub_22F0D5A50(v164);
            sub_22E8FCA40((_QWORD *)v7, v751, 0x1169u, 0, (uint64_t)__p);
            v752 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
            goto LABEL_1162;
          }
        }
        else if (v166 != 9)
        {
          goto LABEL_1161;
        }
        v161 = 0;
        v159 = 1;
      }
      while ((v162 & 1) != 0);
      v22 = 1;
      v169 = sub_22EB1B954(v7, *(void **)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 24));
      if ((v169 & 1) != 0)
        return v22;
      v170 = v169 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 24) = v169 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)&v2222 = *(_QWORD *)((v169 & 0xFFFFFFFFFFFFFFFELL) + 8);
      v171 = *(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0);
      if (!v171 || *(_BYTE *)(v171 + 16) != 39)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v171 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
          goto LABEL_2920;
        v171 = sub_22F10CF48(*(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0));
        if (!v171)
          goto LABEL_2920;
      }
      v172 = *(_QWORD *)(v171 + 32);
      v173 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v172 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v174 = *(_DWORD *)(v173 + 16);
      if (v173)
        v175 = v174 == 11;
      else
        v175 = 0;
      if (v175)
      {
        if (((*(_DWORD *)(v173 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
          goto LABEL_2920;
      }
      else if (v173 && v174 == 44)
      {
        v176 = sub_22F114198(*(_QWORD *)(v173 + 24));
        if ((*(_BYTE *)(v176 + 74) & 1) == 0 && *(_QWORD *)(v176 + 128) <= 7uLL
          || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v173 + 24)) + 76) & 0x80) != 0)
        {
          goto LABEL_2920;
        }
        v172 = *(_QWORD *)(v171 + 32);
      }
      else if (v174 != 9)
      {
        goto LABEL_2920;
      }
      if ((v172 & 1) == 0 && (*(_BYTE *)((v172 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
      {
        v8 = v158;
        if ((_DWORD)v5 != 1208)
          goto LABEL_2936;
        v1927 = 8;
        while (1)
        {
          v1928 = *(_QWORD *)(a4
                            + ((unint64_t)*(unsigned int *)a4 >> 24)
                            + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                            + v1927);
          v1929 = *(_QWORD *)(v1928 + 8);
          if (v1927 == 24)
            v1929 = sub_22F10ACF8(*(_QWORD *)(v1929 & 0xFFFFFFFFFFFFFFF0));
          v1930 = *(_QWORD *)(v1929 & 0xFFFFFFFFFFFFFFF0);
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1930 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 9
            && sub_22F110930(v1930)
            && sub_22EF6A330(*v158, v1929) > 0x80)
          {
            break;
          }
          v1927 += 8;
          if (v1927 == 32)
            goto LABEL_2936;
        }
        sub_22F0D5A50(v1928);
        sub_22E8FCA40((_QWORD *)v7, v2083, 0x1168u, 0, (uint64_t)__p);
        LODWORD(v2222) = 128;
        v2084 = *(unsigned __int8 *)(sub_22E8900C4((uint64_t)__p, (int *)&v2222) + 80);
        sub_22E903BEC((unsigned int *)__p);
        if (!v2084)
          goto LABEL_2936;
        return 1;
      }
LABEL_2920:
      sub_22F0D5A50(v170);
      sub_22E8FCA40((_QWORD *)v7, v1931, 0x116Au, 0, (uint64_t)__p);
      v1817 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
      goto LABEL_2921;
    case 1227:
      v22 = 1;
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return v22;
      *(_QWORD *)__p = *(_QWORD *)(a4
                                 + ((unint64_t)*(unsigned int *)a4 >> 24)
                                 + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                 + 8);
      sub_22EFFAE7C((unsigned int *)a4);
      v560 = sub_22EB44D0C((_QWORD *)v7, (uint64_t *)__p, v634);
      if (v560 <= 0xF)
        return 1;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 8) = *(_QWORD *)__p & 0xFFFFFFFFFFFFFFFELL;
      goto LABEL_1119;
    case 1228:
      v22 = 1;
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return v22;
      v22 = 1;
      v346 = sub_22EB1B954(v7, *(void **)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8));
      if ((v346 & 1) != 0)
        return v22;
      v347 = v346 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)(a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 8) = v347;
      v348 = sub_22F3C0ED0(v347, *v8);
      if (!v348 || (v349 = v348, (*(_DWORD *)(v348 + 28) & 0x7Eu) - 52 >= 6))
      {
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v1969, 0xDBFu, 0, (uint64_t)__p);
        v804 = a4;
        goto LABEL_1902;
      }
      sub_22EFFAE7C((unsigned int *)a4);
      v22 = 1;
      if (sub_22ED10E50((_QWORD *)v7, v349, 1, 0, v350))
        return a4;
      return v22;
    case 1229:
    case 1230:
      v22 = sub_22EBC3A24();
      if ((v22 & 1) != 0)
        sub_22EBBCB14(v7, a4 & 0xFFFFFFFFFFFFFFFELL, 0, 0, sub_22F2E6FA4, __p);
      return v22;
    case 1232:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u))
        return 1;
      v351 = sub_22EFFA6B0(*(unsigned __int8 **)(a4
                                               + ((unint64_t)*(unsigned int *)a4 >> 24)
                                               + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                               + 8));
      *(_QWORD *)&v2222 = *((_QWORD *)v351 + 1);
      v352 = *(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v352 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22F10ACF8(v352) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) != 45)
      {
        sub_22F0D5A50((uint64_t)v351);
        sub_22E8FCA40((_QWORD *)v7, v1880, 0x1357u, 0, (uint64_t)__p);
        v1881 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
        v1882 = sub_22F2F30F4(v1881, (uint64_t)"structure pointer");
        v22 = 1;
        LODWORD(v2218) = 1;
        v1883 = sub_22E8900C4(v1882, (int *)&v2218);
        LODWORD(__src) = 0;
        v1884 = sub_22E8900C4(v1883, (int *)&__src);
        LODWORD(__dst) = 3;
        v1885 = sub_22E8900C4(v1884, (int *)&__dst);
        LODWORD(v2204) = 1;
        v1886 = sub_22E8900C4(v1885, (int *)&v2204);
        v1887 = sub_22E8901B8(v1886, (uint64_t *)&v2222);
        sub_22F2F30F4(v1887, (uint64_t)"structure pointer");
LABEL_39:
        sub_22E903BEC((unsigned int *)__p);
        return v22;
      }
      v353 = sub_22EFFEB40(*(unsigned __int8 **)(a4
                                               + ((unint64_t)*(unsigned int *)a4 >> 24)
                                               + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                               + 16));
      *(_QWORD *)&v2218 = *((_QWORD *)v353 + 1);
      v354 = *(_QWORD *)(v2218 & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v354 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
        goto LABEL_549;
      v355 = *(_QWORD *)(sub_22F10ACF8(v354) & 0xFFFFFFFFFFFFFFF0);
      v356 = *(unsigned __int8 *)(v355 + 16);
      if (v355)
        v357 = (v356 - 27) > 0xFFFFFFFD;
      else
        v357 = 0;
      if (v357)
        goto LABEL_533;
      if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v355 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 25 <= 1)
      {
        v355 = sub_22F10CF48(v355);
        if (v355)
        {
          v356 = *(unsigned __int8 *)(v355 + 16);
LABEL_533:
          if (v356 != 26
            || (v358 = *(_QWORD *)(v355 + 16), (v358 & 0x3FFFC000000000) != 0)
            && (v358 & 0x800000000000000) != 0
            && *(_QWORD *)(v355 + 24) == *(_QWORD *)(*v8 + 16480)
            && (v359 = (uint64_t *)(*(_QWORD *)(v355 + 40) & 0xFFFFFFFFFFFFFFF0),
                *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v359 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
            && ((v360 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22F10ACF8(*v359) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
              ? (v361 = *(_DWORD *)(v360 + 16) == 11)
              : (v361 = 0),
                v361
             && (((*(_DWORD *)(v360 + 16) >> 19) & 0x1FFu) - 167 <= 0xC
               ? (v362 = ((1 << ((*(_DWORD *)(v360 + 16) >> 19) + 89)) & 0x1803) == 0)
               : (v362 = 1),
                 !v362
              && ((v363 = sub_22F10ACF8(*v359), (v363 & 1) != 0)
               || (*(_BYTE *)((v363 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) != 0))))
          {
LABEL_625:
            v447 = *(_QWORD *)(*v8 + 16480);
LABEL_1545:
            *(_QWORD *)(a4 + 8) = v447;
            return a4;
          }
        }
      }
LABEL_549:
      sub_22F0D5A50((uint64_t)v353);
      sub_22E8FCA40((_QWORD *)v7, v364, 0x1357u, 0, (uint64_t)__p);
      v365 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
      v366 = sub_22F2F30F4(v365, (uint64_t)"'int (*)(const char *, ...)'");
      LODWORD(__src) = 1;
      v367 = sub_22E8900C4(v366, (int *)&__src);
      LODWORD(__dst) = 0;
      v368 = sub_22E8900C4(v367, (int *)&__dst);
      LODWORD(v2204) = 3;
      v369 = sub_22E8900C4(v368, (int *)&v2204);
      LODWORD(v2199) = 2;
      v370 = sub_22E8900C4(v369, (int *)&v2199);
      v371 = sub_22E8901B8(v370, (uint64_t *)&v2218);
      sub_22F2F30F4(v371, (uint64_t)"'int (*)(const char *, ...)'");
      goto LABEL_2925;
    case 1233:
      v22 = 1;
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return v22;
      goto LABEL_1543;
    case 1234:
    case 1235:
    case 1236:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u))
        return 1;
      v142 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 8);
      v2203 = (_DWORD)v5 == 1234;
      v143 = *(_QWORD *)(v142 + 8);
      v2202 = v143;
      v144 = v143 & 0xFFFFFFFFFFFFFFF0;
      v145 = *(_QWORD *)(v143 & 0xFFFFFFFFFFFFFFF0);
      v146 = *(_QWORD *)(*(_QWORD *)(v145 + 8) & 0xFFFFFFFFFFFFFFF0);
      v147 = *(_DWORD *)(v146 + 16);
      if ((v147 & 0xFE) - 6 >= 0xFFFFFFFC)
      {
        v143 = sub_22F36A2BC(*v8, v143);
        v2202 = v143;
        v144 = v143 & 0xFFFFFFFFFFFFFFF0;
        v145 = *(_QWORD *)(v143 & 0xFFFFFFFFFFFFFFF0);
        v146 = *(_QWORD *)(*(_QWORD *)(v145 + 8) & 0xFFFFFFFFFFFFFFF0);
        v147 = *(_DWORD *)(v146 + 16);
      }
      if (v147 > 0x26u)
      {
        if (v147 == 39)
          goto LABEL_1044;
        if (v147 != 44)
          goto LABEL_1046;
        v674 = sub_22F114198(*(_QWORD *)(v146 + 24));
        if ((*(_BYTE *)(v674 + 74) & 1) == 0 && *(_QWORD *)(v674 + 128) < 8uLL)
          goto LABEL_1046;
        if ((*(_BYTE *)(sub_22F114198(*(_QWORD *)(v146 + 24)) + 76) & 0x80) != 0)
          goto LABEL_1046;
        v145 = *(_QWORD *)v144;
        v147 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v144 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
      }
      else if (v147 != 9 && (v147 != 11 || ((v147 >> 19) & 0x1FE) - 166 >= 0x14))
      {
LABEL_1046:
        sub_22EFF605C(v142);
        sub_22E8FCA40((_QWORD *)v7, v678, 0x1367u, 0, (uint64_t)__p);
        v679 = __p;
        v680 = (uint64_t *)&v2202;
LABEL_1047:
        sub_22E8901B8((uint64_t)v679, v680);
        goto LABEL_2925;
      }
      v675 = v147;
      if (v147 == 44)
        goto LABEL_1046;
      v676 = v147 & 0xFF80000;
      if (v675 == 11 && v676 == 87031808)
        goto LABEL_1046;
LABEL_1044:
      if ((*(_BYTE *)(v145 + 16) == 39
         || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v145 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
         && (v145 = sub_22F10CF48(v145)) != 0)
        && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v145 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                    + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 16)
         - 25 <= 1)
      {
        goto LABEL_1046;
      }
      v971 = v8;
      v972 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 16);
      v973 = *(_QWORD *)(v972 + 8) & 0xFFFFFFFFFFFFFFF0;
      v974 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v973 + 8) & 0xFFFFFFFFFFFFFFF0);
      v975 = *(_DWORD *)(v974 + 16);
      if (v974)
        v976 = v975 == 11;
      else
        v976 = 0;
      if (v976)
      {
        if (((v975 >> 19) & 0x1FE) - 166 >= 0x14)
          goto LABEL_1949;
      }
      else if (v974 && v975 == 44)
      {
        v977 = sub_22F114198(*(_QWORD *)(v974 + 24));
        if ((*(_BYTE *)(v977 + 74) & 1) == 0 && *(_QWORD *)(v977 + 128) <= 7uLL
          || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v974 + 24)) + 76) & 0x80) != 0)
        {
          goto LABEL_1949;
        }
        v975 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v973 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
      }
      else if (v975 != 9)
      {
        goto LABEL_1949;
      }
      v1303 = v975;
      if (v975 != 44)
      {
        v1304 = v975 & 0xFF80000;
        if (v1303 != 11 || v1304 != 87031808)
        {
          LOWORD(v2218) = 0;
          *((_QWORD *)&v2218 + 1) = 0;
          LODWORD(v2219) = 0;
          v1306 = sub_22EF6A330(*v971, v143);
          if ((*(_BYTE *)(v972 + 2) & 1) != 0 || (v1307 = v1306, !sub_22F00554C(v972, (uint64_t)&v2218, *v971, 2, 0)))
          {
LABEL_3036:
            v2005 = *(_QWORD *)(v7 + 88);
            v2006 = 1;
            LODWORD(v2211) = 0;
            *(_DWORD *)__p = 1;
            v2007 = sub_22EF60188(v2005, v143);
            *(_QWORD *)&__p[8] = 0;
            *(_QWORD *)&__p[16] = v2007;
            *((_QWORD *)&v2211 + 1) = 0;
            v2008 = sub_22EC45014(v7, __p, 0, v142, 0, 0);
            if ((v2008 & 1) == 0)
            {
              *(_QWORD *)(a4
                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                        + 8) = v2008 & 0xFFFFFFFFFFFFFFFELL;
              v2009 = *(_QWORD *)(v7 + 88);
              v2010 = *(_QWORD *)(v972 + 8);
              LODWORD(v2211) = 0;
              *(_DWORD *)__p = 1;
              v2011 = sub_22EF60188(v2009, v2010);
              *(_QWORD *)&__p[8] = 0;
              *(_QWORD *)&__p[16] = v2011;
              *((_QWORD *)&v2211 + 1) = 0;
              v2012 = sub_22EC45014(v7, __p, 0, v972, 0, 0);
              if ((v2012 & 1) == 0)
              {
                v2006 = 0;
                *(_QWORD *)(a4
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 16) = v2012 & 0xFFFFFFFFFFFFFFFELL;
                v2013 = &v2202;
                if (v2203)
                  v2013 = (unint64_t *)(*v971 + 16400);
                *(_QWORD *)(a4 + 8) = *v2013;
              }
            }
LABEL_3101:
            if (v2219 >= 2)
              sub_22EF53BC0(&v2219);
            if ((v2006 & 1) == 0)
              return a4;
            return 1;
          }
          v1308 = v1307 - 1;
          v2205 = v2221[0];
          if (LODWORD(v2221[0]) > 0x40)
            llvm::APInt::initSlowCase((llvm::APInt *)&v2204, (const llvm::APInt *)&v2220);
          else
            v2204 = (unint64_t)v2220;
          v2206 = BYTE4(v2221[0]);
          v2198 = v1307;
          if (v1307 > 0x40)
          {
            llvm::APInt::initSlowCase((llvm::APInt *)&v2197);
            v1307 = v2198;
            v1999 = 1 << v1308;
            if (v2198 > 0x40)
            {
              *(_QWORD *)(v2197 + 8 * (v1308 >> 6)) |= v1999;
              v2000 = v2197;
LABEL_3022:
              v2200 = v1307;
              v2199 = v2000;
              v2198 = 0;
              v2201 = 1;
              if (sub_22E8BAD7C((uint64_t)&v2204, 1))
              {
                sub_22EFF605C(v972);
                sub_22E8FCA40((_QWORD *)v7, v2001, 0xA3Bu, 0, (uint64_t)__p);
                LODWORD(__src) = 1;
                sub_22E8900C4((uint64_t)__p, (int *)&__src);
LABEL_3024:
                v2002 = (unsigned int *)__p;
                goto LABEL_3094;
              }
              if ((int)sub_22E4634B4((uint64_t)&v2204, (uint64_t)&v2199) < 1)
              {
                if (v2205 > 0x40)
                {
                  if (llvm::APInt::countPopulationSlowCase((llvm::APInt *)&v2204) == 1)
                    goto LABEL_3028;
                }
                else
                {
                  v2003 = (uint8x8_t)vcnt_s8((int8x8_t)v2204);
                  v2003.i16[0] = vaddlv_u8(v2003);
                  if (v2003.u32[0] == 1)
                  {
LABEL_3028:
                    if (sub_22E42E5EC((uint64_t)&v2204, 1))
                    {
                      sub_22EFF605C(v972);
                      sub_22E8FCA40((_QWORD *)v7, v2004, 0x1830u, 0, (uint64_t)__p);
                      sub_22E894E38((uint64_t)__p, (unsigned __int8 *)&v2203);
                      sub_22E903BEC((unsigned int *)__p);
                    }
                    if (v2200 >= 0x41 && v2199)
                      MEMORY[0x2348A0E84](v2199, 0x1000C8000313F17);
                    if (v2205 >= 0x41 && v2204)
                      MEMORY[0x2348A0E84](v2204, 0x1000C8000313F17);
                    goto LABEL_3036;
                  }
                }
                sub_22EFF605C(v972);
                sub_22E8FCA40((_QWORD *)v7, v2051, 0xA39u, 0, (uint64_t)&v2222);
                v2002 = (unsigned int *)&v2222;
LABEL_3094:
                sub_22E903BEC(v2002);
                if (v2200 >= 0x41 && v2199)
                  MEMORY[0x2348A0E84](v2199, 0x1000C8000313F17);
                if (v2205 >= 0x41 && v2204)
                  MEMORY[0x2348A0E84](v2204, 0x1000C8000313F17);
                v2006 = 1;
                goto LABEL_3101;
              }
              sub_22EFF605C(v972);
              sub_22E8FCA40((_QWORD *)v7, v2092, 0xA3Au, 0, (uint64_t)__p);
              __src = v2217;
              __len = xmmword_22F455490;
              llvm::APInt::toString();
              v2093 = __len;
              if ((unint64_t)__len >= 0x7FFFFFFFFFFFFFF8)
                abort();
              v2094 = __src;
              if ((unint64_t)__len >= 0x17)
              {
                v2103 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
                if (((unint64_t)__len | 7) != 0x17)
                  v2103 = __len | 7;
                v2104 = v2103 + 1;
                v2095 = (void **)operator new(v2103 + 1);
                v2208 = v2093;
                v2209 = v2104 | 0x8000000000000000;
                __dst = v2095;
              }
              else
              {
                HIBYTE(v2209) = __len;
                v2095 = &__dst;
                if (!(_QWORD)__len)
                  goto LABEL_3221;
              }
              memmove(v2095, v2094, v2093);
LABEL_3221:
              *((_BYTE *)v2095 + v2093) = 0;
              if (__src != v2217)
                free(__src);
              sub_22F2F3734((uint64_t)__p, &__dst);
              if (SHIBYTE(v2209) < 0)
                operator delete(__dst);
              goto LABEL_3024;
            }
            v1998 = v2197;
          }
          else
          {
            v1998 = 0;
            v1999 = 1 << v1308;
          }
          v2000 = v1999 | v1998;
          v2197 = v2000;
          goto LABEL_3022;
        }
      }
LABEL_1949:
      sub_22EFF605C(v972);
      sub_22E8FCA40((_QWORD *)v7, v1309, 0x1366u, 0, (uint64_t)__p);
      *(_QWORD *)&v2218 = *(_QWORD *)(v972 + 8);
      v679 = __p;
      v680 = (uint64_t *)&v2218;
      goto LABEL_1047;
    case 1241:
    case 1242:
      v197 = v8;
      v198 = (unsigned int *)(a4 & 0xFFFFFFFFFFFFFFFELL);
      v199 = sub_22EFFBBCC(*(unsigned __int8 **)((a4 & 0xFFFFFFFFFFFFFFFELL)
                                               + *(unsigned __int8 *)((a4 & 0xFFFFFFFFFFFFFFFELL) + 3)));
      v200 = sub_22EFC01DC(*((_QWORD *)v199 + 2), 0);
      v22 = 1;
      if (v200 == 1241)
        v201 = 2;
      else
        v201 = 1;
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)(a4 & 0xFFFFFFFFFFFFFFFELL), v201))
        return v22;
      v202 = v201 - 1;
      v22 = 1;
      v203 = sub_22EB1B954(v7, *(void **)((char *)&v198[2 * (((unint64_t)*v198 >> 18) & 1) + 2 + 2 * v202]+ ((unint64_t)*v198 >> 24)));
      if ((v203 & 1) != 0)
        return v22;
      v204 = v203 & 0xFFFFFFFFFFFFFFFELL;
      *(_QWORD *)((char *)&v198[2 * (((unint64_t)*v198 >> 18) & 1) + 2 + 2 * v202]
                + ((unint64_t)*v198 >> 24)) = v203 & 0xFFFFFFFFFFFFFFFELL;
      v205 = *(_QWORD *)(*(_QWORD *)((v203 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
      if ((!v205 || *(_BYTE *)(v205 + 16) != 39)
        && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v205 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
         || (v205 = sub_22F10CF48(v205)) == 0))
      {
        if ((v199[2] & 4) != 0)
        {
          *(_OWORD *)__p = *((_OWORD *)v199 + 2);
          v1244 = sub_22F0AB0EC((unint64_t *)__p);
        }
        else
        {
          v1244 = *((_DWORD *)v199 + 1);
        }
        v1245 = v1244;
        v1246 = (_QWORD *)v7;
        v1247 = 4051;
        goto LABEL_1841;
      }
      v206 = *(_QWORD *)(v205 + 32);
      v207 = *(_QWORD *)(v206 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v207 + 8) & 0xF) != 0)
        v207 = (unint64_t)sub_22F10D2BC(v206);
      v208 = (uint64_t *)(v207 & 0xFFFFFFFFFFFFFFF0);
      v209 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v207 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v210 = *(_DWORD *)(v209 + 16);
      if (v209)
        v211 = v210 == 11;
      else
        v211 = 0;
      if (v211)
      {
        if (((*(_DWORD *)(v209 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
          goto LABEL_2741;
      }
      else if (v209 && v210 == 44)
      {
        v212 = sub_22F114198(*(_QWORD *)(v209 + 24));
        if (((*(_BYTE *)(v212 + 74) & 1) != 0 || *(_QWORD *)(v212 + 128) > 7uLL)
          && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v209 + 24)) + 76) & 0x80) == 0)
        {
          goto LABEL_2741;
        }
      }
      else if (v210 == 9)
      {
        goto LABEL_2741;
      }
      v1853 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v208 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
      v1854 = v1853 > 0x27 || ((1 << v1853) & 0x8100000400) == 0;
      if (v1854 && !sub_22F10E0EC(*v208) && v1853 - 55 >= 2)
      {
        if ((v199[2] & 4) != 0)
        {
          *(_OWORD *)__p = *((_OWORD *)v199 + 2);
          v1906 = sub_22F0AB0EC((unint64_t *)__p);
        }
        else
        {
          v1906 = *((_DWORD *)v199 + 1);
        }
        v1245 = v1906;
        v1246 = (_QWORD *)v7;
        v1247 = 4052;
LABEL_1841:
        sub_22E8FCA40(v1246, v1245, v1247, 0, (uint64_t)__p);
        *(_QWORD *)&v2222 = *(_QWORD *)(v204 + 8);
        v71 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
        v72 = v204;
        goto LABEL_83;
      }
LABEL_2741:
      if (v200 != 1241)
      {
        *((_QWORD *)v198 + 1) = v208;
        return a4;
      }
      v1855 = *(_QWORD *)((char *)&v198[2 * (((unint64_t)*v198 >> 18) & 1) + 2] + ((unint64_t)*v198 >> 24));
      v1856 = *(_QWORD *)(v7 + 88);
      v22 = 1;
      LODWORD(v2211) = 0;
      *(_DWORD *)__p = 1;
      v1857 = sub_22EF60188(v1856, (unint64_t)v208);
      *(_QWORD *)&__p[8] = 0;
      *(_QWORD *)&__p[16] = v1857;
      *((_QWORD *)&v2211 + 1) = 0;
      v1858 = sub_22EC45014(v7, __p, 0, v1855, 0, 0);
      if ((v1858 & 1) == 0)
      {
        *(_QWORD *)((char *)&v198[2 * (((unint64_t)*v198 >> 18) & 1) + 2] + ((unint64_t)*v198 >> 24)) = v1858 & 0xFFFFFFFFFFFFFFFELL;
        *((_QWORD *)v198 + 1) = *(_QWORD *)(*v197 + 16392);
        return a4;
      }
      return v22;
    case 1256:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u) || sub_22E99645C((_QWORD *)v7, a4))
        return 1;
      v526 = sub_22E9964C0((_QWORD *)v7, (uint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8), 0, 0);
      v419 = sub_22E996958((_QWORD *)v7, (unint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 16));
      v22 = 1;
      if ((v526 & 1) == 0)
        goto LABEL_789;
      return v22;
    case 1257:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u) || sub_22E99645C((_QWORD *)v7, a4))
        return 1;
      v468 = sub_22E9964C0((_QWORD *)v7, (uint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8), 5, 0);
      v469 = (uint64_t *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 16);
      v470 = (_QWORD *)v7;
      v471 = 6;
      goto LABEL_856;
    case 1258:
      v338 = (_QWORD *)v7;
      v339 = (unsigned int *)a4;
      v340 = 1;
      v341 = 1;
      return sub_22E979F10(v338, v339, v340, v341);
    case 1259:
      v338 = (_QWORD *)v7;
      v339 = (unsigned int *)a4;
      v340 = 1;
      goto LABEL_553;
    case 1260:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u) || sub_22E99645C((_QWORD *)v7, a4))
        return 1;
      v468 = sub_22E9964C0((_QWORD *)v7, (uint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8), 3, 0);
      v469 = (uint64_t *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 16);
      v470 = (_QWORD *)v7;
      v471 = 4;
LABEL_856:
      v559 = sub_22E9964C0(v470, v469, v471, 0);
      v22 = 1;
      if ((v468 & 1) != 0 || (v559 & 1) != 0)
        return v22;
      v560 = sub_22F36D7FC(*v8);
      goto LABEL_1119;
    case 1261:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 5u) || sub_22E99645C((_QWORD *)v7, a4))
        return 1;
      v415 = sub_22E9964C0((_QWORD *)v7, (uint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8), 2, 0);
      v416 = sub_22E996958((_QWORD *)v7, (unint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 16));
      v417 = sub_22E9964C0((_QWORD *)v7, (uint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 24), 4, 0);
      v418 = sub_22E996958((_QWORD *)v7, (unint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 32));
      v419 = sub_22E9964C0((_QWORD *)v7, (uint64_t *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 40), 4, 0);
      v22 = 1;
      if ((v415 & 1) != 0 || (v416 & 1) != 0 || (v417 & 1) != 0 || (v418 & 1) != 0)
        return v22;
LABEL_789:
      if ((v419 & 1) != 0)
        return v22;
      goto LABEL_1543;
    case 1262:
      v338 = (_QWORD *)v7;
      v339 = (unsigned int *)a4;
      v340 = 2;
LABEL_553:
      v341 = 0;
      return sub_22E979F10(v338, v339, v340, v341);
    case 1263:
      if (sub_22E99645C((_QWORD *)v7, a4))
        return 1;
      v501 = sub_22EFFA6B0(*(unsigned __int8 **)(a4
                                               + ((unint64_t)*(unsigned int *)a4 >> 24)
                                               + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                               + 8));
      v502 = v501;
      v503 = *v501;
      if (v503 == 225)
      {
        v22 = a4;
        if ((*(_DWORD *)v501 & 0xE00000) == 0x200000)
          return v22;
      }
      v504 = v503 == 225;
      sub_22EFF605C((uint64_t)v501);
      sub_22E8FCA40((_QWORD *)v7, v505, 0x11FCu, 0, (uint64_t)__p);
      LODWORD(v2218) = v504;
      v506 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
      v507 = (uint64_t)v502;
      goto LABEL_1539;
    case 1264:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u))
        return 1;
      v582 = a4 + 8;
      LODWORD(v581) = *(_DWORD *)a4;
      v583 = 1;
      do
      {
        v584 = v583;
        v585 = sub_22EB1B954(v7, *(void **)(v582 + BYTE3(v581) + 8 * ((v581 >> 18) & 1) + 8));
        if ((v585 & 1) != 0)
          return 1;
        v583 = 0;
        v581 = *(unsigned int *)a4;
        v586 = (v581 >> 18) & 1;
        *(_QWORD *)(v582 + (v581 >> 24) + 8 * v586 + 8) = v585 & 0xFFFFFFFFFFFFFFFELL;
      }
      while ((v584 & 1) != 0);
      v587 = *(_QWORD *)(a4 + (v581 >> 24) + 8 * v586 + 8);
      v22 = a4;
      if ((*(_BYTE *)(v587 + 1) & 0x80) != 0)
        return v22;
      v22 = a4;
      if ((*(_BYTE *)((v585 & 0xFFFFFFFFFFFFFFFELL) + 2) & 1) != 0)
        return v22;
      v588 = v8;
      v589 = *(_QWORD *)(v587 + 8);
      v590 = sub_22F10C2A4(*(_QWORD *)(v589 & 0xFFFFFFFFFFFFFFF0));
      if (!v590 || (*(_DWORD *)(v590 + 28) & 0x7Fu) - 35 >= 3)
      {
        sub_22EFF605C(v587);
        v407 = v591;
        v408 = (_QWORD *)v7;
        v409 = 5141;
        goto LABEL_1403;
      }
      v1953 = *(_QWORD *)(a4
                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                        + 16);
      LODWORD(v2222) = 0;
      if (!sub_22F0092DC(v1953, *v588, (uint64_t *)&v2222, 0)
        || (_DWORD)v2222 != 12
        || (v1954 = (_WORD *)(*((_QWORD *)&v2222 + 1) & 0xFFFFFFFFFFFFFFF8),
            (*(_DWORD *)((*((_QWORD *)&v2222 + 1) & 0xFFFFFFFFFFFFFFF8) + 28) & 0x7Eu) - 54 >= 4)
        || (v1955 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)v1954 + 32))(*((_QWORD *)&v2222 + 1) & 0xFFFFFFFFFFFFFFF8),
            (*(_BYTE *)(v1955 + 82) & 0xC) == 0)
        && !sub_22EFD7260(v1955))
      {
        sub_22EFF605C(v1953);
        v1966 = v1965;
        v1967 = (_QWORD *)v7;
        v1968 = 5138;
LABEL_2980:
        sub_22E8FCA40(v1967, v1966, v1968, 0, (uint64_t)__p);
        sub_22E903BEC((unsigned int *)__p);
        v22 = 1;
        goto LABEL_3164;
      }
      v1956 = sub_22F10C2A4(*(_QWORD *)(v589 & 0xFFFFFFFFFFFFFFF0));
      if (v1956)
      {
        if ((*(_DWORD *)(v1956 + 28) & 0x7Fu) - 35 >= 3)
          v1957 = 0;
        else
          v1957 = v1956;
      }
      else
      {
        v1957 = 0;
      }
      v2090 = v1954[40] & 0x7F;
      v2091 = 0x7FFFFFFFFFFFFFECLL;
      if (v2090 > 0x46)
      {
        switch(v2090)
        {
          case 'S':
            goto LABEL_3240;
          case 'G':
            v2091 = 0x7FFFFFFFFFFFFFE4;
            goto LABEL_3240;
          case 'Q':
LABEL_3240:
            v2106 = *(_QWORD *)&v1954[v2091 + 44];
            v2107 = (_QWORD *)(v2106 & 0xFFFFFFFFFFFFFFF8);
            if ((v2106 & 4) != 0)
              v2107 = (_QWORD *)*v2107;
            if (v2107)
              v2108 = v2107 - 8;
            else
              v2108 = 0;
            if ((_QWORD *)v1957 != v2108)
            {
              sub_22EFFAE7C((unsigned int *)a4);
              v2110 = v2109;
              v2111 = sub_22EFD7784((uint64_t)v1954);
              v2112 = sub_22EAAB1B8(v7, v2110, v589, v2111);
              v22 = a4;
              if ((v2112 & 1) == 0)
              {
                sub_22EFF605C(v587);
                v1966 = v2113;
                v1967 = (_QWORD *)v7;
                v1968 = 5140;
                goto LABEL_2980;
              }
LABEL_3164:
              if (v2222 >= 2)
                sub_22EF53BC0((uint64_t *)&v2222);
              return v22;
            }
LABEL_3274:
            v22 = a4;
            goto LABEL_3164;
        }
      }
      else
      {
        if (v2090 <= 0x18)
        {
          if (v2090 == 16)
          {
LABEL_3182:
            v2091 = 0x7FFFFFFFFFFFFFE8;
            goto LABEL_3240;
          }
          if (((1 << v2090) & 0x1066) != 0)
            goto LABEL_3240;
          if (v2090 == 24)
            goto LABEL_3182;
        }
        if (v2090 == 70)
        {
LABEL_3238:
          v2091 = 0x7FFFFFFFFFFFFFE0;
          goto LABEL_3240;
        }
      }
      if (v2090 - 52 >= 6)
      {
        if (v2090 - 33 >= 5)
          goto LABEL_3182;
        goto LABEL_3238;
      }
      v2091 = 0x7FFFFFFFFFFFFFDCLL;
      goto LABEL_3240;
    case 1265:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u))
        return 1;
      v391 = 0;
      v393 = a4 + 8;
      LODWORD(v392) = *(_DWORD *)a4;
      v394 = 1;
      do
      {
        v395 = v394;
        v396 = sub_22EB1B954(v7, *(void **)(v393+ ((unint64_t)v392 >> 24)+ 8 * ((v392 >> 18) & 1)+ 8 * v391));
        if ((v396 & 1) != 0)
          return 1;
        v394 = 0;
        v392 = *(unsigned int *)a4;
        v397 = (v392 >> 18) & 1;
        *(_QWORD *)(v393 + (v392 >> 24) + 8 * v397 + 8 * v391) = v396 & 0xFFFFFFFFFFFFFFFELL;
        v391 = 1;
      }
      while ((v395 & 1) != 0);
      v398 = a4 + (v392 >> 24) + 8 * v397;
      v401 = *(_QWORD *)(v398 + 8);
      v399 = v398 + 8;
      v400 = v401;
      v22 = a4;
      if ((*(_BYTE *)(v401 + 1) & 0x80) != 0)
        return v22;
      v22 = a4;
      if ((*(_BYTE *)(*(_QWORD *)(v399 + 8) + 2) & 1) != 0)
        return v22;
      v402 = v8;
      v403 = *(_QWORD *)(v400 + 8);
      v404 = (uint64_t *)(v403 & 0xFFFFFFFFFFFFFFF0);
      v405 = sub_22F10C2A4(*(_QWORD *)(v403 & 0xFFFFFFFFFFFFFFF0));
      if (!v405 || (*(_DWORD *)(v405 + 28) & 0x7Fu) - 35 >= 3)
      {
        sub_22EFF605C(v400);
        v407 = v406;
        v408 = (_QWORD *)v7;
        v409 = 3736;
LABEL_1403:
        sub_22E8FCA40(v408, v407, v409, 0, (uint64_t)__p);
        goto LABEL_478;
      }
      v1952 = *(_QWORD *)(a4
                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                        + 16);
      LODWORD(v2222) = 0;
      if (!sub_22F0092DC(v1952, *v402, (uint64_t *)&v2222, 0))
      {
        v2014 = *(_QWORD *)(*(_QWORD *)(v1952 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v2014)
          v2015 = *(_BYTE *)(v2014 + 16) == 31;
        else
          v2015 = 0;
        if (!v2015)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2014 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 31)
            goto LABEL_3162;
          v2016 = sub_22F10CF48(*(_QWORD *)(*(_QWORD *)(v1952 + 8) & 0xFFFFFFFFFFFFFFF0));
          if (!v2016)
            goto LABEL_3162;
          v2014 = v2016;
        }
        if (!sub_22F28C8B4(v2014))
        {
LABEL_3162:
          sub_22EFF605C(v1952);
          sub_22E8FCA40((_QWORD *)v7, v2081, 0xE97u, 0, (uint64_t)__p);
          v22 = 1;
LABEL_3163:
          sub_22E903BEC((unsigned int *)__p);
          goto LABEL_3164;
        }
        v2017 = sub_22F40AE38(v2014);
        v2018 = sub_22F10C2A4(*v404);
        if (v2018)
        {
          if ((*(_DWORD *)(v2018 + 28) & 0x7Fu) - 35 >= 3)
            v2019 = 0;
          else
            v2019 = v2018;
        }
        else
        {
          v2019 = 0;
        }
        if (v2019 == v2017)
          goto LABEL_3274;
        sub_22EFFAE7C((unsigned int *)a4);
        v2119 = v2123;
        v2120 = sub_22EF6477C(*(_QWORD *)(v7 + 88), v2017);
LABEL_3263:
        v2121 = sub_22EAAB1B8(v7, v2119, v403, v2120);
        v22 = a4;
        if ((v2121 & 1) != 0)
          goto LABEL_3164;
        sub_22EFF605C(v400);
        v2087 = v2122;
        v2088 = (_QWORD *)v7;
        v2089 = 6702;
        goto LABEL_3175;
      }
      if ((_DWORD)v2222 == 2)
      {
        v2080 = v2223;
        if (v2223 > 0x40)
        {
          if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)((char *)&v2222 + 8)) != v2080)
            goto LABEL_3162;
        }
        else if (*((_QWORD *)&v2222 + 1))
        {
          goto LABEL_3162;
        }
LABEL_3174:
        sub_22EFF605C(v1952);
        v2087 = v2086;
        v2088 = (_QWORD *)v7;
        v2089 = 6703;
LABEL_3175:
        sub_22E8FCA40(v2088, v2087, v2089, 0, (uint64_t)__p);
        v22 = a4;
        goto LABEL_3163;
      }
      if ((_DWORD)v2222 != 12)
      {
        if ((_DWORD)v2222 == 7 && (v2224[28] & 1) != 0)
          goto LABEL_3174;
        goto LABEL_3162;
      }
      v2077 = *((_QWORD *)&v2222 + 1) & 0xFFFFFFFFFFFFFFF8;
      if ((*(_DWORD *)((*((_QWORD *)&v2222 + 1) & 0xFFFFFFFFFFFFFFF8) + 28) & 0x7Eu) - 54 >= 4)
        goto LABEL_3162;
      v2078 = sub_22F10C2A4(*v404);
      if (v2078)
      {
        if ((*(_DWORD *)(v2078 + 28) & 0x7Fu) - 35 >= 3)
          v2079 = 0;
        else
          v2079 = v2078;
      }
      else
      {
        v2079 = 0;
      }
      v2100 = *(_WORD *)(v2077 + 80) & 0x7F;
      v2101 = -40;
      if (v2100 > 0x46)
      {
        switch(v2100)
        {
          case 'S':
            goto LABEL_3256;
          case 'G':
            v2101 = -56;
            goto LABEL_3256;
          case 'Q':
            goto LABEL_3256;
        }
      }
      else
      {
        if (v2100 <= 0x18)
        {
          if (v2100 == 16)
            goto LABEL_3208;
          if (((1 << v2100) & 0x1066) != 0)
            goto LABEL_3256;
          if (v2100 == 24)
          {
LABEL_3208:
            v2101 = -48;
LABEL_3256:
            v2115 = *(_QWORD *)(v2077 + 72 + v2101 + 16);
            v2116 = (_QWORD *)(v2115 & 0xFFFFFFFFFFFFFFF8);
            if ((v2115 & 4) != 0)
              v2116 = (_QWORD *)*v2116;
            if (v2116)
              v2117 = v2116 - 8;
            else
              v2117 = 0;
            if ((_QWORD *)v2079 == v2117)
              goto LABEL_3274;
            sub_22EFFAE7C((unsigned int *)a4);
            v2119 = v2118;
            v2120 = sub_22EFD7784(v2077);
            goto LABEL_3263;
          }
        }
        if (v2100 == 70)
        {
LABEL_3254:
          v2101 = -64;
          goto LABEL_3256;
        }
      }
      if (v2100 - 52 < 6)
      {
        v2101 = -72;
        goto LABEL_3256;
      }
      if (v2100 - 33 < 5)
        goto LABEL_3254;
      goto LABEL_3208;
    case 1266:
    case 1267:
      v193 = *(_DWORD *)(a4 + 16);
      if (v193 != 4)
      {
        if (v193 != 2)
        {
          sub_22EFFAE7C((unsigned int *)a4);
          sub_22E8FCA40((_QWORD *)v7, v694, 0x1120u, 0, (uint64_t)__p);
          v695 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if (v695)
          {
            if ((*(_DWORD *)(v695 + 28) & 0x7Eu) - 52 >= 6)
              v696 = 0;
            else
              v696 = v695;
          }
          else
          {
            v696 = 0;
          }
          *(_QWORD *)&v2222 = v696;
          v928 = sub_22E890024((uint64_t)__p, (uint64_t *)&v2222);
          v929 = a4;
LABEL_1824:
          sub_22F0D4E74(v929);
          *(_QWORD *)&v2218 = v1235;
          v1026 = (uint64_t *)&v2218;
          goto LABEL_2863;
        }
        if ((sub_22E996B28((_QWORD *)v7, (unsigned int *)a4) & 1) != 0)
          return 1;
        v194 = (_QWORD *)v7;
        v195 = (unsigned int *)a4;
        v196 = 1;
LABEL_2902:
        if ((sub_22E996D74(v194, v195, v196) & 1) != 0)
          return 1;
        return a4;
      }
      if ((sub_22E996B28((_QWORD *)v7, (unsigned int *)a4) & 1) != 0)
        return 1;
      v688 = a4
           + ((unint64_t)*(unsigned int *)a4 >> 24)
           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      v689 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v688 + 16) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v689)
        v690 = (*(_DWORD *)(v689 + 16) & 0xFF800FF) == 118489099;
      else
        v690 = 0;
      if (!v690)
      {
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v691, 0x1123u, 0, (uint64_t)__p);
        v692 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
        if (v692)
        {
          if ((*(_DWORD *)(v692 + 28) & 0x7Eu) - 52 >= 6)
            v693 = 0;
          else
            v693 = v692;
        }
        else
        {
          v693 = 0;
        }
        *(_QWORD *)&v2222 = v693;
        v1859 = sub_22E890024((uint64_t)__p, (uint64_t *)&v2222);
        v1860 = sub_22E8901B8(v1859, (uint64_t *)(*v8 + 17240));
        *(_QWORD *)&v2218 = *(_QWORD *)(*(_QWORD *)(a4
                                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                  + 16)
                                      + 8);
        v928 = sub_22E8901B8(v1860, (uint64_t *)&v2218);
        v1861 = *(_QWORD *)(a4
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 16);
        goto LABEL_2862;
      }
      v1248 = *(_QWORD *)(v688 + 24);
      v1249 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1248 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v1250 = *(_DWORD *)(v1249 + 16);
      if (v1249)
        v1251 = v1250 == 11;
      else
        v1251 = 0;
      if (v1251)
      {
        if (((*(_DWORD *)(v1249 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
          goto LABEL_2900;
      }
      else
      {
        if (v1249 && v1250 == 44)
        {
          v1252 = sub_22F114198(*(_QWORD *)(v1249 + 24));
          if (((*(_BYTE *)(v1252 + 74) & 1) != 0 || *(_QWORD *)(v1252 + 128) > 7uLL)
            && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v1249 + 24)) + 76) & 0x80) == 0)
          {
            goto LABEL_2901;
          }
LABEL_2900:
          if (!sub_22F110B50(*(_QWORD *)(*(_QWORD *)(v1248 + 8) & 0xFFFFFFFFFFFFFFF0)))
          {
            sub_22EFFAE7C((unsigned int *)a4);
            sub_22E8FCA40((_QWORD *)v7, v1924, 0x1123u, 0, (uint64_t)__p);
            v1925 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if (v1925)
            {
              if ((*(_DWORD *)(v1925 + 28) & 0x7Eu) - 52 >= 6)
                v1926 = 0;
              else
                v1926 = v1925;
            }
            else
            {
              v1926 = 0;
            }
            *(_QWORD *)&v2222 = v1926;
            v1970 = sub_22E890024((uint64_t)__p, (uint64_t *)&v2222);
            v1971 = sub_22E8901B8(v1970, (uint64_t *)(*v8 + 16528));
            *(_QWORD *)&v2218 = *(_QWORD *)(v1248 + 8);
            v506 = sub_22E8901B8(v1971, (uint64_t *)&v2218);
            sub_22F0D4E74(v1248);
            __src = v1972;
            v1026 = (uint64_t *)&__src;
            goto LABEL_2923;
          }
          goto LABEL_2901;
        }
        if (v1250 != 9)
          goto LABEL_2900;
      }
LABEL_2901:
      v194 = (_QWORD *)v7;
      v195 = (unsigned int *)a4;
      v196 = 3;
      goto LABEL_2902;
    case 1268:
    case 1269:
    case 1276:
    case 1277:
      goto LABEL_262;
    case 1270:
    case 1271:
    case 1278:
    case 1279:
      goto LABEL_305;
    case 1272:
    case 1273:
      if ((sub_22E97A1F8((_QWORD *)v7, a4) & 1) != 0)
        return 1;
LABEL_262:
      if ((sub_22E97A00C((_QWORD *)v7, (unsigned int *)a4) & 1) == 0)
        return a4;
      return 1;
    case 1274:
    case 1275:
      if ((sub_22E97A1F8((_QWORD *)v7, a4) & 1) != 0)
        return 1;
LABEL_305:
      if ((sub_22E97A2F0((_QWORD *)v7, (unsigned int *)a4) & 1) == 0)
        return a4;
      return 1;
    case 1280:
    case 1281:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return 1;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4
                                                                                + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                                                + 8
                                                                                * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                                                + 8)
                                                                    + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 38)
        return a4;
      sub_22EFFAE7C((unsigned int *)a4);
      sub_22E8FCA40((_QWORD *)v7, v270, 0x1121u, 0, (uint64_t)__p);
      v271 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
      if (v271)
      {
        if ((*(_DWORD *)(v271 + 28) & 0x7Eu) - 52 >= 6)
          v272 = 0;
        else
          v272 = v271;
      }
      else
      {
        v272 = 0;
      }
      *(_QWORD *)&v2222 = v272;
      v928 = sub_22E890024((uint64_t)__p, (uint64_t *)&v2222);
      v929 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 8);
      goto LABEL_1824;
    case 1282:
      v435 = *(_DWORD *)(a4 + 16);
      LODWORD(v2204) = v435;
      if (v435 <= 3)
      {
        sub_22EFFAE7C((unsigned int *)a4);
        sub_22E8FCA40((_QWORD *)v7, v436, 0x133Eu, 0, (uint64_t)__p);
        LODWORD(__src) = 0;
        v437 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
        LODWORD(__dst) = 4;
        v438 = sub_22E8900C4(v437, (int *)&__dst);
        sub_22E89519C(v438, (unsigned int *)&v2204);
        goto LABEL_2925;
      }
      v2141 = v5;
      v756 = a4
           + ((unint64_t)*(unsigned int *)a4 >> 24)
           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      v759 = *(_QWORD *)(v756 + 8);
      v758 = (_QWORD *)(v756 + 8);
      v757 = v759;
      v760 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v759 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v760)
        v761 = (*(_DWORD *)(v760 + 16) & 0xFF800FF) == 117964811;
      else
        v761 = 0;
      if (!v761)
      {
        sub_22F0D5A50(v757);
        sub_22E8FCA40((_QWORD *)v7, v762, 0x111Fu, 0, (uint64_t)__p);
        v763 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
        if (v763)
        {
          if ((*(_DWORD *)(v763 + 28) & 0x7Eu) - 52 >= 6)
            v764 = 0;
          else
            v764 = (void *)v763;
        }
        else
        {
          v764 = 0;
        }
        __src = v764;
        v1377 = sub_22E890024((uint64_t)__p, (uint64_t *)&__src);
        sub_22E8901B8(v1377, (uint64_t *)(*v8 + 17232));
        goto LABEL_2925;
      }
      v930 = v758[2];
      v931 = v758[3];
      v932 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v758[1] + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v933 = *(_DWORD *)(v932 + 16);
      if (v932)
        v934 = v933 == 11;
      else
        v934 = 0;
      if (v934)
      {
        if (((*(_DWORD *)(v932 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
          goto LABEL_1872;
      }
      else
      {
        if (v932 && v933 == 44)
        {
          v935 = sub_22F114198(*(_QWORD *)(v932 + 24));
          if ((*(_BYTE *)(v935 + 74) & 1) == 0 && *(_QWORD *)(v935 + 128) <= 7uLL
            || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v932 + 24)) + 76) & 0x80) != 0)
          {
            goto LABEL_2750;
          }
LABEL_1872:
          v1268 = *(_QWORD *)(*(_QWORD *)(v930 + 8) & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v1268 + 8) & 0xF) != 0)
            v1268 = (unint64_t)sub_22F10D2BC(*(_QWORD *)(v930 + 8));
          __src = (void *)(v1268 & 0xFFFFFFFFFFFFFFF0);
          sub_22F1192C0(&__src, (uint64_t)__p);
          v1269 = __p[23];
          if (__p[23] >= 0)
            v1270 = __p[23] & 0x7F;
          else
            v1270 = *(_QWORD *)&__p[8];
          if (v1270 == 9)
          {
            if (__p[23] >= 0)
              v1271 = __p[23];
            else
              v1271 = *(_QWORD *)&__p[8];
            if (__p[23] >= 0)
              v1272 = __p;
            else
              v1272 = *(_BYTE **)__p;
            if (v1271 >= 9)
              v1273 = 9;
            else
              v1273 = v1271;
            v1274 = memcmp(v1272, "ndrange_t", v1273) == 0;
            v1275 = v1271 == 9 && v1274;
          }
          else
          {
            v1275 = 0;
          }
          if (v1269 < 0)
            operator delete(*(void **)__p);
          if (!v1275)
          {
            sub_22F0D5A50(*(_QWORD *)(a4
                                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                    + 24));
            sub_22E8FCA40((_QWORD *)v7, v1995, 0x111Fu, 0, (uint64_t)__p);
            v1996 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if (v1996)
            {
              if ((*(_DWORD *)(v1996 + 28) & 0x7Eu) - 52 >= 6)
                v1997 = 0;
              else
                v1997 = (void *)v1996;
            }
            else
            {
              v1997 = 0;
            }
            __src = v1997;
            v1976 = (uint64_t *)&__src;
LABEL_3075:
            v2038 = sub_22E890024((uint64_t)__p, v1976);
            sub_22F2F30F4(v2038, (uint64_t)"'ndrange_t'");
            goto LABEL_2925;
          }
          v1299 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v931 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                             + 8) & 0xFFFFFFFFFFFFFFF0)
                                     + 16);
          if (v435 == 4)
          {
            if (v1299 == 10)
            {
              v1300 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v931 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 32) & 0xFFFFFFFFFFFFFFF0);
              if (v1300)
                v1301 = *(_BYTE *)(v1300 + 16) == 26;
              else
                v1301 = 0;
              if (!v1301)
                v1300 = sub_22F10CF48(v1300);
              if ((*(_DWORD *)(v1300 + 20) & 0x3FFFC0) != 0)
              {
                sub_22F0D5A50(v931);
                sub_22E8FCA40((_QWORD *)v7, v1302, 0x1128u, 0, (uint64_t)&v2222);
                v387 = (unsigned int *)&v2222;
                goto LABEL_2926;
              }
              goto LABEL_1227;
            }
            v2047 = v931;
LABEL_3090:
            sub_22F0D5A50(v2047);
            sub_22E8FCA40((_QWORD *)v7, v2048, 0x111Fu, 0, (uint64_t)__p);
            v2049 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if (v2049)
            {
              if ((*(_DWORD *)(v2049 + 28) & 0x7Eu) - 52 >= 6)
                v2050 = 0;
              else
                v2050 = (void *)v2049;
            }
            else
            {
              v2050 = 0;
            }
            __src = v2050;
            v1907 = (uint64_t *)&__src;
LABEL_2883:
            v1908 = sub_22E890024((uint64_t)__p, v1907);
            sub_22F2F30F4(v1908, (uint64_t)"block");
            goto LABEL_2925;
          }
          if (v1299 == 10)
          {
            if ((sub_22E996F00((_QWORD *)v7, (unsigned __int8 *)v931) & 1) != 0
              || (sub_22E9970D0((_QWORD *)v7, (unsigned int *)a4, *(_QWORD *)(v931 + 8), 4u) & 1) != 0)
            {
              return 1;
            }
            return a4;
          }
          if (v435 < 7)
          {
            sub_22EFFAE7C((unsigned int *)a4);
            sub_22E8FCA40((_QWORD *)v7, v1949, 0x112Au, 0, (uint64_t)&v2218);
            v387 = (unsigned int *)&v2218;
            goto LABEL_2926;
          }
          v1892 = *(_QWORD *)(a4
                            + ((unint64_t)*(unsigned int *)a4 >> 24)
                            + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                            + 56);
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1892 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) != 10)
          {
            v2047 = *(_QWORD *)(a4
                              + ((unint64_t)*(unsigned int *)a4 >> 24)
                              + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                              + 56);
            goto LABEL_3090;
          }
          v1893 = v8;
          if ((sub_22E996F00((_QWORD *)v7, *(unsigned __int8 **)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 56)) & 1) != 0)return 1;
          v1894 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v931 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          v1895 = *(_DWORD *)(v1894 + 16);
          if (v1894)
            v1896 = v1895 == 11;
          else
            v1896 = 0;
          if (v1896)
          {
            if (((*(_DWORD *)(v1894 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
              goto LABEL_3077;
          }
          else
          {
            if (v1894 && v1895 == 44)
            {
              v1897 = sub_22F114198(*(_QWORD *)(v1894 + 24));
              if ((*(_BYTE *)(v1897 + 74) & 1) == 0 && *(_QWORD *)(v1897 + 128) <= 7uLL
                || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v1894 + 24)) + 76) & 0x80) != 0)
              {
                goto LABEL_3155;
              }
LABEL_3077:
              v2039 = a4
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
              v2041 = *(_QWORD *)(v2039 + 40);
              v2040 = *(_QWORD *)(v2039 + 48);
              if (sub_22EFFBE1C(v2041, *v1893, 2))
                goto LABEL_3114;
              v2042 = *(_QWORD *)(*(_QWORD *)(v2041 + 8) & 0xFFFFFFFFFFFFFFF0);
              v2043 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v2042 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
              if (v2043 == 39 || v2043 == 32)
              {
                v2042 = *(_QWORD *)(sub_22F10ACF8(v2042) & 0xFFFFFFFFFFFFFFF0);
              }
              else if ((v2043 & 0xFEu) - 2 <= 3)
              {
                while (1)
                {
                  if (v2042 && (*(_DWORD *)(v2042 + 16) & 0xFEu) - 6 > 0xFFFFFFFB)
                  {
                    v2124 = v2042;
                  }
                  else
                  {
                    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v2042 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
                      break;
                    v2124 = sub_22F10CF48(v2042);
                    if (!v2124)
                      break;
                  }
                  v2042 = *(_QWORD *)(*(_QWORD *)(v2124 + 32) & 0xFFFFFFFFFFFFFFF0);
                }
              }
              v2044 = *(_QWORD *)(*(_QWORD *)(v2042 + 8) & 0xFFFFFFFFFFFFFFF0);
              if (v2044 && (*(_DWORD *)(v2044 + 16) & 0xFF800FF) == 117440523)
              {
LABEL_3114:
                if (sub_22EFFBE1C(v2040, *v1893, 2)
                  || (v2057 = *(_QWORD *)(*(_QWORD *)(v2040 + 8) & 0xFFFFFFFFFFFFFFF0),
                      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2057 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
                  && ((v2058 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22F10ACF8(v2057) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
                    ? (v2059 = (*(_DWORD *)(v2058 + 16) & 0xFF800FF) == 117440523)
                    : (v2059 = 0),
                      v2059))
                {
                  v8 = v1893;
                  if (v435 == 7)
                    goto LABEL_1227;
                  if ((sub_22E9970D0((_QWORD *)v7, (unsigned int *)a4, *(_QWORD *)(v1892 + 8), 7u) & 1) == 0)
                    goto LABEL_2936;
                  return 1;
                }
                v2046 = *(_QWORD *)(a4
                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                  + 48);
              }
              else
              {
                v2046 = *(_QWORD *)(a4
                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                  + 40);
              }
              sub_22F0D5A50(v2046);
              sub_22E8FCA40((_QWORD *)v7, v2060, 0x111Fu, 0, (uint64_t)__p);
              v2061 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if (v2061)
              {
                if ((*(_DWORD *)(v2061 + 28) & 0x7Eu) - 52 >= 6)
                  v2062 = 0;
                else
                  v2062 = (void *)v2061;
              }
              else
              {
                v2062 = 0;
              }
              __src = v2062;
              v2082 = sub_22E890024((uint64_t)__p, (uint64_t *)&__src);
              __dst = (void *)sub_22EF5B848(*v1893, *(_QWORD *)(*v1893 + 17224), 0);
              sub_22E8901B8(v2082, (uint64_t *)&__dst);
              goto LABEL_2925;
            }
            if (v1895 == 9)
              goto LABEL_3077;
          }
LABEL_3155:
          sub_22F0D5A50(*(_QWORD *)(a4
                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                  + 32));
          sub_22E8FCA40((_QWORD *)v7, v2074, 0x111Fu, 0, (uint64_t)__p);
          v2075 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if (v2075)
          {
            if ((*(_DWORD *)(v2075 + 28) & 0x7Eu) - 52 >= 6)
              v2076 = 0;
            else
              v2076 = (void *)v2075;
          }
          else
          {
            v2076 = 0;
          }
          __src = v2076;
          v2102 = sub_22E890024((uint64_t)__p, (uint64_t *)&__src);
          sub_22F2F30F4(v2102, (uint64_t)"integer");
          goto LABEL_2925;
        }
        if (v933 == 9)
          goto LABEL_1872;
      }
LABEL_2750:
      sub_22F0D5A50(*(_QWORD *)(a4
                              + ((unint64_t)*(unsigned int *)a4 >> 24)
                              + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                              + 16));
      sub_22E8FCA40((_QWORD *)v7, v1862, 0x111Fu, 0, (uint64_t)__p);
      v1863 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
      if (v1863)
      {
        if ((*(_DWORD *)(v1863 + 28) & 0x7Eu) - 52 >= 6)
          v1864 = 0;
        else
          v1864 = (void *)v1863;
      }
      else
      {
        v1864 = 0;
      }
      __src = v1864;
      v2037 = sub_22E890024((uint64_t)__p, (uint64_t *)&__src);
      sub_22F3115F4(v2037);
      goto LABEL_2925;
    case 1283:
    case 1284:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return 1;
      v273 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 8);
      goto LABEL_1411;
    case 1285:
    case 1286:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 2u) || (sub_22E97A1F8((_QWORD *)v7, a4) & 1) != 0)
        return 1;
      v261 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 8);
      v262 = *(_QWORD *)(*(_QWORD *)(v261 + 8) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v262 + 8) & 0xF) != 0)
        v262 = (unint64_t)sub_22F10D2BC(*(_QWORD *)(v261 + 8));
      *(_QWORD *)&v2222 = v262 & 0xFFFFFFFFFFFFFFF0;
      sub_22F1192C0(&v2222, (uint64_t)__p);
      v263 = __p[23];
      if (__p[23] >= 0)
        v264 = __p[23] & 0x7F;
      else
        v264 = *(_QWORD *)&__p[8];
      if (v264 == 9)
      {
        if (__p[23] >= 0)
          v265 = __p[23];
        else
          v265 = *(_QWORD *)&__p[8];
        if (__p[23] >= 0)
          v266 = __p;
        else
          v266 = *(_BYTE **)__p;
        if (v265 >= 9)
          v267 = 9;
        else
          v267 = v265;
        v268 = memcmp(v266, "ndrange_t", v267) == 0;
        v269 = v265 == 9 && v268;
      }
      else
      {
        v269 = 0;
      }
      if (v263 < 0)
        operator delete(*(void **)__p);
      if (!v269)
      {
        sub_22F0D5A50(v261);
        sub_22E8FCA40((_QWORD *)v7, v1946, 0x111Fu, 0, (uint64_t)__p);
        v1947 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
        if (v1947)
        {
          if ((*(_DWORD *)(v1947 + 28) & 0x7Eu) - 52 >= 6)
            v1948 = 0;
          else
            v1948 = v1947;
        }
        else
        {
          v1948 = 0;
        }
        *(_QWORD *)&v2222 = v1948;
        v1976 = (uint64_t *)&v2222;
        goto LABEL_3075;
      }
      v273 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 16);
LABEL_1411:
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v273 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) != 10)
      {
        sub_22F0D5A50(v273);
        sub_22E8FCA40((_QWORD *)v7, v1850, 0x111Fu, 0, (uint64_t)__p);
        v1851 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
        if (v1851)
        {
          if ((*(_DWORD *)(v1851 + 28) & 0x7Eu) - 52 >= 6)
            v1852 = 0;
          else
            v1852 = v1851;
        }
        else
        {
          v1852 = 0;
        }
        *(_QWORD *)&v2222 = v1852;
        v1907 = (uint64_t *)&v2222;
        goto LABEL_2883;
      }
      if ((sub_22E996F00((_QWORD *)v7, (unsigned __int8 *)v273) & 1) != 0)
        return 1;
      return a4;
    case 1287:
    case 1288:
    case 1289:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return 1;
      v148 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a4
                                               + ((unint64_t)*(unsigned int *)a4 >> 24)
                                               + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                               + 8)
                                   + 8) & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v148 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      {
        v149 = *(_QWORD *)((sub_22F10ACF8(*v148) & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v149 & 8) == 0 || (*(_QWORD *)((v149 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0x1800)
        {
          v150 = *(_QWORD *)((sub_22F10ACF8(*v148) & 0xFFFFFFFFFFFFFFF0) + 8);
          if ((v150 & 8) == 0 || (*(_QWORD *)((v150 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0x2800)
          {
            sub_22F0D5A50(*(_QWORD *)(a4
                                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                    + 8));
            sub_22E8FCA40((_QWORD *)v7, v1254, 0x1AD0u, 0, (uint64_t)__p);
            v1255 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1255 + 28) & 0x7Eu) - 52 >= 6)
              v1256 = 0;
            else
              v1256 = v1255;
            v1257 = *(_QWORD *)(v1256 + 40);
            v1258 = *(_DWORD *)(v1256 + 24);
            v1259 = *(_QWORD *)(v1256 + 152);
            *(_QWORD *)&v2218 = v1257;
            DWORD2(v2218) = v1258;
            v2219 = v1259;
            sub_22EFC6E98(&v2218, &v2222);
            v1260 = sub_22F2F3734((uint64_t)__p, (void **)&v2222);
            sub_22F0D4E74(*(_QWORD *)(a4
                                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                    + 8));
            __src = v1261;
            sub_22E8906A0(v1260, (uint64_t *)&__src);
            if (SHIBYTE(v2223) < 0)
              operator delete((void *)v2222);
            sub_22E903BEC((unsigned int *)__p);
          }
          v151 = sub_22F10ACF8(*v148);
          v152 = *(_QWORD *)((v151 & 0xFFFFFFFFFFFFFFF0) + 8);
          if ((v152 & 8) != 0)
          {
            v153 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
            v154 = *(_QWORD *)((v152 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x7FFLL;
          }
          else
          {
            v153 = 0;
            v154 = 0;
          }
          v681 = qword_22F468ED0[(int)v5 - 1287];
          v682 = v154 | (v152 | v151) & 7;
          v683 = *v8;
          v684 = *(_QWORD *)(v151 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v684 + 8) & 0xF) != 0)
            v684 = (unint64_t)sub_22F10D2BC(v151);
          v685 = v684 & 0xFFFFFFFFFFFFFFF0;
          if (((v153 | v681 | v682) & 0xC00003FF8) != 0)
          {
            *(_QWORD *)__p = v153 | v681 | v682;
            v686 = sub_22E491354((unsigned int *)__p, v685);
            v687 = sub_22EF5DBC4(v683, v686, *(uint64_t *)__p);
          }
          else
          {
            v687 = v685 | v682 & 7;
          }
          v726 = v683;
LABEL_1118:
          v560 = sub_22EF5B848(v726, v687, 0);
LABEL_1119:
          *(_QWORD *)(a4 + 8) = v560;
          return a4;
        }
      }
      sub_22EFFAE7C((unsigned int *)a4);
      sub_22E8FCA40((_QWORD *)v7, v1262, 0x1124u, 0, (uint64_t)__p);
      *(_QWORD *)&v2222 = *(_QWORD *)(a4
                                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                    + 8);
      v1263 = sub_22F2F37E0((uint64_t)__p, (uint64_t *)&v2222);
      v1264 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
      if (v1264)
      {
        if ((*(_DWORD *)(v1264 + 28) & 0x7Eu) - 52 >= 6)
          v1265 = 0;
        else
          v1265 = v1264;
      }
      else
      {
        v1265 = 0;
      }
      *(_QWORD *)&v2218 = v1265;
      v928 = sub_22E890024(v1263, (uint64_t *)&v2218);
      v1861 = a4;
LABEL_2862:
      sub_22F0D4E74(v1861);
      __src = v1904;
      v1026 = (uint64_t *)&__src;
LABEL_2863:
      v1289 = (_BYTE *)v928;
      goto LABEL_2924;
    case 1294:
      goto LABEL_2806;
    case 1295:
      *(_WORD *)(v7 + 1693) = 257;
LABEL_2806:
      if ((sub_22F30DD70((_QWORD *)v7, (unsigned int *)a4) & 1) == 0)
        return a4;
      return 1;
    case 1296:
      if (*(_DWORD *)(a4 + 16) == 1)
      {
        v383 = sub_22EFFEB40(*(unsigned __int8 **)(a4
                                                 + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                 + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                 + 8));
        if (*v383 == 161)
        {
          v384 = *((_QWORD *)v383 + 2);
          v385 = *(_DWORD *)(v384 + 28);
          if (((v385 & 0x7Eu) - 52 < 6 || (v385 & 0x7Fu) - 60 <= 6)
            && (sub_22E462B18(*((_QWORD *)v383 + 2)) || sub_22E466E5C(v384)
                                                     || sub_22E466EBC(v384)
                                                     || sub_22E466F1C(v384)))
          {
            return a4;
          }
        }
      }
      sub_22EFFAE7C((unsigned int *)a4);
      sub_22E8FCA40((_QWORD *)v7, v386, 0xDCEu, 0, (uint64_t)v2193);
      v387 = (unsigned int *)v2193;
      goto LABEL_2926;
    case 1302:
      if (sub_22F30D5A0((_QWORD *)v7, (unsigned int *)a4))
        return 1;
      return a4;
    case 1310:
      v442 = *(_QWORD *)(v7 + 216);
      if (v442
        && (*(_WORD *)(v442 + 8) & 0x7Eu) - 58 >= 0xFFFFFFFA
        && (*(_QWORD *)(sub_22EFCB008(v442 - 72, 1) + 16) & 0xF80000) == 0xF00000)
      {
        return a4;
      }
      sub_22F0D5A50(*(_QWORD *)(a4 + *(unsigned __int8 *)(a4 + 3)));
      sub_22E8FCA40((_QWORD *)v7, v443, 0xBA9u, 0, (uint64_t)__p);
      v444 = *(_QWORD *)(sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3))) + 40);
      if ((v444 & 7) != 0)
        v445 = 0;
      else
        v445 = v444 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)&v2222 = v445;
      v446 = sub_22E8BAE44((uint64_t)__p, (uint64_t *)&v2222);
      sub_22F2F30F4(v446, (uint64_t)"__attribute__((valist_size))");
      goto LABEL_478;
    case 1311:
    case 1312:
      LODWORD(__dst) = 0;
      v216 = v8;
      v217 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v218 = *(_QWORD *)(v217 & 0xFFFFFFFFFFFFFFF0);
      if (v218)
        v219 = *(_BYTE *)(v218 + 16) == 26;
      else
        v219 = 0;
      if (!v219)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v218 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v218 = sub_22F10CF48(*(_QWORD *)(v217 & 0xFFFFFFFFFFFFFFF0));
        else
          v218 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v218 + 16) >> 38)))
        return 1;
      v996 = *(_QWORD *)(v218 + 16);
      v997 = (_QWORD *)(a4 + 8);
      if ((v996 & 0x3FFFC000000000) == 0)
        goto LABEL_1537;
      v2148 = v5;
      v998 = 0;
      v999 = 0;
      v1000 = v218 + 40;
      v1001 = (unsigned __int16)(v996 >> 38);
      while (1)
      {
        v1002 = *(_QWORD *)(v1000 + 8 * v998);
        v1003 = *(_QWORD *)((char *)&v997[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v998]
                          + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1003;
        v1004 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1002 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1004)
          v1005 = (*(_DWORD *)(v1004 + 16) & 0xFF800FF) == 137887755;
        else
          v1005 = 0;
        if (v1005)
        {
          v1008 = *(_QWORD *)(*(_QWORD *)(v1003 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (!v1008 || *(_BYTE *)(v1008 + 16) != 39)
          {
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1008 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
              goto LABEL_1523;
            v1008 = sub_22F10CF48(v1008);
            if (!v1008)
              goto LABEL_1523;
          }
          v1009 = (uint64_t *)(*(_QWORD *)(v1008 + 32) & 0xFFFFFFFFFFFFFFF0);
          v1010 = v1009[1];
          if ((v1010 & 8) == 0 || ((*(_DWORD *)((v1010 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11) - 11) > 1)
            goto LABEL_1523;
          v1011 = *v1009;
          if (*v1009 && *(_BYTE *)(v1011 + 16) == 56
            || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1011 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
            && (v1011 = sub_22F10CF48(v1011)) != 0)
          {
            v1009 = (uint64_t *)(*(_QWORD *)(v1011 + 32) & 0xFFFFFFFFFFFFFFF0);
          }
          v1012 = *(_QWORD *)(*(_QWORD *)(*v1009 + 8) & 0xFFFFFFFFFFFFFFF0);
          v1013 = v1012 && *(_DWORD *)(v1012 + 16) == 11;
          if (!v1013
            || (((*(_DWORD *)(v1012 + 16) >> 19) & 0x1FFu) - 168 <= 0x2C
              ? (v1018 = ((1 << ((*(_DWORD *)(v1012 + 16) >> 19) + 88)) & 0x1C000000ECE1) == 0)
              : (v1018 = 1),
                v1018))
          {
LABEL_1523:
            sub_22F0D5A50(v1003);
            sub_22E8FCA40((_QWORD *)v7, v1014, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1003 + 8);
            v1015 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1016 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1016 + 28) & 0x7Eu) - 52 >= 6)
              v1017 = 0;
            else
              v1017 = v1016;
            __src = *(void **)(v1017 + 40);
            sub_22E894538(v1015, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_1527:
            v1006 = 1;
            goto LABEL_1528;
          }
          v1006 = 1;
          v1019 = sub_22EB1B954(v7, *(void **)((char *)&v997[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v998]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
          if ((v1019 & 1) != 0)
            goto LABEL_1528;
          v1006 = 0;
          v1007 = v1019 & 0xFFFFFFFFFFFFFFFELL;
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1002) & 1) != 0)
            goto LABEL_1527;
          v1006 = 0;
          v1007 = v2222;
        }
        *(_QWORD *)((char *)&v997[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v998]
                  + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1007;
LABEL_1528:
        v999 |= v1006;
        if (v1001 == ++v998)
        {
          v5 = v2148;
          if ((v999 & 1) == 0)
          {
LABEL_1537:
            v1020 = a4
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
            v1021 = *(_QWORD *)(v1020 + 16);
            v1022 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1020 + 8) + 8) & 0xFFFFFFFFFFFFFFF0));
            if (*(_QWORD *)(*(_QWORD *)((v1022 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v1021 + 8) & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
            {
              sub_22EFFAE7C((unsigned int *)a4);
              sub_22E8FCA40((_QWORD *)v7, v1023, 0xEE8u, 0, (uint64_t)__p);
              LODWORD(v2218) = 0;
              v1024 = sub_22E8900C4((uint64_t)__p, (int *)&v2218);
              LODWORD(__src) = 1;
              v506 = sub_22E8900C4(v1024, (int *)&__src);
              v507 = v1021;
LABEL_1539:
              sub_22F0D4E74(v507);
              *(_QWORD *)&v2222 = v1025;
              v1026 = (uint64_t *)&v2222;
              goto LABEL_2923;
            }
            v1310 = *(_QWORD *)(*v216 + 17512);
LABEL_2196:
            *v997 = v1310;
LABEL_2870:
            v8 = v216;
LABEL_2936:
            if (v5 < 0x7E8)
              return a4;
            v1937 = v5;
            v1938 = *v8;
            v1939 = *(_QWORD *)(*(_QWORD *)(*v8 + 15208) + 8);
            if (v1939 + 2024 <= (unint64_t)v5)
            {
              v1940 = *(_QWORD *)(v1938 + 15096);
              v1937 = (v5 - v1939);
            }
            else
            {
              v1940 = *(_QWORD *)(v1938 + 15088);
            }
            if ((sub_22F30CD14((_QWORD *)v7, v1940, v1937, (unsigned int *)a4) & 1) == 0)
              return a4;
          }
          return 1;
        }
      }
    case 1314:
      LODWORD(__dst) = 0;
      v561 = v8;
      v562 = sub_22EF72B64(*v8, 0x522u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v563 = *(_QWORD *)(v562 & 0xFFFFFFFFFFFFFFF0);
      if (v563)
        v564 = *(_BYTE *)(v563 + 16) == 26;
      else
        v564 = 0;
      if (!v564)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v563 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v563 = sub_22F10CF48(*(_QWORD *)(v562 & 0xFFFFFFFFFFFFFFF0));
        else
          v563 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v563 + 16) >> 38)))
        return 1;
      v1747 = *(_QWORD *)(v563 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v1747 & 0x3FFFC000000000) == 0)
        goto LABEL_2621;
      v2161 = v5;
      v1748 = 0;
      v1749 = 0;
      v1750 = v563 + 40;
      v1751 = (unsigned __int16)(v1747 >> 38);
      do
      {
        v1752 = *(_QWORD *)(v1750 + 8 * v1748);
        v1753 = *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1748]
                                    + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1753;
        v1754 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1752 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1754)
          v1755 = (*(_DWORD *)(v1754 + 16) & 0xFF800FF) == 137887755;
        else
          v1755 = 0;
        if (!v1755)
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1752) & 1) != 0)
            goto LABEL_2611;
          v1756 = 0;
          v1757 = v2222;
          goto LABEL_2618;
        }
        if ((_DWORD)v1748)
        {
          if ((_DWORD)v1748 == 2)
          {
            *(_QWORD *)__p = 0xAE000000B6;
            *(_DWORD *)&__p[8] = 211;
            if ((sub_22E99C700(*(_QWORD *)(v1753 + 8), __p, 3) & 1) != 0)
              goto LABEL_2607;
          }
          else
          {
            v1758 = *(_QWORD *)(*(_QWORD *)(v1753 + 8) & 0xFFFFFFFFFFFFFFF0);
            if ((!v1758 || *(_BYTE *)(v1758 + 16) != 39)
              && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1758 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
               || (v1758 = sub_22F10CF48(v1758)) == 0)
              || ((v1759 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1758 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
                ? (v1760 = *(_DWORD *)(v1759 + 16) == 11)
                : (v1760 = 0),
                  !v1760
               || (((*(_DWORD *)(v1759 + 16) >> 19) & 0x1FFu) - 174 <= 0x25
                 ? (v1765 = ((1 << ((*(_DWORD *)(v1759 + 16) >> 19) + 82)) & 0x2000000101) == 0)
                 : (v1765 = 1),
                   v1765)))
            {
LABEL_2607:
              sub_22F0D5A50(v1753);
              sub_22E8FCA40((_QWORD *)v7, v1761, 0xEEEu, 0, (uint64_t)__p);
              *(_QWORD *)&v2218 = *(_QWORD *)(v1753 + 8);
              v1762 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
              v1763 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if ((*(_DWORD *)(v1763 + 28) & 0x7Eu) - 52 >= 6)
                v1764 = 0;
              else
                v1764 = v1763;
              __src = *(void **)(v1764 + 40);
              sub_22E894538(v1762, (uint64_t *)&__src);
              sub_22E903BEC((unsigned int *)__p);
LABEL_2611:
              v1756 = 1;
              goto LABEL_2619;
            }
          }
        }
        else if (sub_22E99C688(*(_QWORD *)(v1753 + 8)))
        {
          goto LABEL_2607;
        }
        v1756 = 1;
        v1766 = sub_22EB1B954(v7, *(void **)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1748]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v1766 & 1) == 0)
        {
          v1756 = 0;
          v1757 = v1766 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2618:
          *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1748]
                              + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1757;
        }
LABEL_2619:
        v1749 |= v1756;
        ++v1748;
      }
      while (v1751 != v1748);
      v5 = v2161;
      if ((v1749 & 1) != 0)
        return 1;
LABEL_2621:
      if (!sub_22E99C4C0((_QWORD *)v7, (unsigned int *)a4, 1u, 2u))
      {
        v8 = v561;
        v1069 = *v561;
        goto LABEL_1605;
      }
      return 1;
    case 1315:
    case 1317:
    case 1322:
      LODWORD(__dst) = 0;
      v177 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v178 = *(_QWORD *)(v177 & 0xFFFFFFFFFFFFFFF0);
      if (v178)
        v179 = *(_BYTE *)(v178 + 16) == 26;
      else
        v179 = 0;
      if (!v179)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v178 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v178 = sub_22F10CF48(*(_QWORD *)(v177 & 0xFFFFFFFFFFFFFFF0));
        else
          v178 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v178 + 16) >> 38)))
        return 1;
      v867 = *(_QWORD *)(v178 + 16);
      if ((v867 & 0x3FFFC000000000) == 0)
        goto LABEL_1344;
      v2143 = v5;
      v2175 = v8;
      v786 = (_QWORD *)v7;
      v868 = 0;
      v788 = 0;
      v869 = a4 + 8;
      v870 = v178 + 40;
      v871 = (unsigned __int16)(v867 >> 38);
      while (1)
      {
        v872 = *(_QWORD *)(v870 + 8 * v868);
        v873 = *(uint64_t **)(v869
                           + ((unint64_t)*(unsigned int *)a4 >> 24)
                           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                           + 8 * v868);
        *(_QWORD *)&v2222 = v873;
        v874 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v872 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v874 || (*(_DWORD *)(v874 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v868)
        {
          *(_QWORD *)__p = 0xAE000000B6;
          *(_DWORD *)&__p[8] = 211;
          if ((sub_22E99C700(v873[1], __p, 3) & 1) != 0)
            goto LABEL_1333;
        }
        else
        {
          if (sub_22E99C688(v873[1]))
          {
LABEL_1333:
            sub_22F0D5A50((uint64_t)v873);
            sub_22E8FCA40(v786, v878, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = v873[1];
            v879 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v880 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v880 + 28) & 0x7Eu) - 52 >= 6)
              v881 = 0;
            else
              v881 = v880;
            __src = *(void **)(v881 + 40);
            sub_22E894538(v879, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_1337:
            v876 = 1;
            goto LABEL_1342;
          }
          v873 = *(uint64_t **)(v869
                             + ((unint64_t)*(unsigned int *)a4 >> 24)
                             + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1));
        }
        v876 = 1;
        v882 = sub_22EB1B954((uint64_t)v786, v873);
        if ((v882 & 1) == 0)
        {
          v876 = 0;
          v877 = v882 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1341;
        }
LABEL_1342:
        v788 |= v876;
        if (v871 == ++v868)
          goto LABEL_1343;
      }
      if ((sub_22E9969B8((uint64_t)v786, (unint64_t *)&v2222, v872) & 1) == 0)
      {
        v876 = 0;
        v877 = v2222;
LABEL_1341:
        *(_QWORD *)(v869
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v868) = v877;
        goto LABEL_1342;
      }
      goto LABEL_1337;
    case 1318:
    case 1319:
    case 1320:
    case 1321:
    case 1323:
      LODWORD(__dst) = 0;
      v136 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v137 = *(_QWORD *)(v136 & 0xFFFFFFFFFFFFFFF0);
      if (v137)
        v138 = *(_BYTE *)(v137 + 16) == 26;
      else
        v138 = 0;
      if (!v138)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v137 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v137 = sub_22F10CF48(*(_QWORD *)(v136 & 0xFFFFFFFFFFFFFFF0));
        else
          v137 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v137 + 16) >> 38)))
        return 1;
      v785 = *(_QWORD *)(v137 + 16);
      if ((v785 & 0x3FFFC000000000) == 0)
        goto LABEL_1344;
      v2143 = v5;
      v2175 = v8;
      v786 = (_QWORD *)v7;
      v787 = 0;
      v788 = 0;
      v789 = a4 + 8;
      v790 = v137 + 40;
      v791 = (unsigned __int16)(v785 >> 38);
      while (1)
      {
        v792 = *(_QWORD *)(v790 + 8 * v787);
        v793 = *(uint64_t **)(v789
                           + ((unint64_t)*(unsigned int *)a4 >> 24)
                           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                           + 8 * v787);
        *(_QWORD *)&v2222 = v793;
        v794 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v792 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v794 || (*(_DWORD *)(v794 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v787)
        {
          *(_QWORD *)__p = 0xAE000000B6;
          if ((sub_22E99C700(v793[1], __p, 2) & 1) != 0)
            goto LABEL_1215;
        }
        else
        {
          if (sub_22E99C688(v793[1]))
          {
LABEL_1215:
            sub_22F0D5A50((uint64_t)v793);
            sub_22E8FCA40(v786, v798, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = v793[1];
            v799 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v800 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v800 + 28) & 0x7Eu) - 52 >= 6)
              v801 = 0;
            else
              v801 = v800;
            __src = *(void **)(v801 + 40);
            sub_22E894538(v799, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_1219:
            v796 = 1;
            goto LABEL_1224;
          }
          v793 = *(uint64_t **)(v789
                             + ((unint64_t)*(unsigned int *)a4 >> 24)
                             + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1));
        }
        v796 = 1;
        v802 = sub_22EB1B954((uint64_t)v786, v793);
        if ((v802 & 1) == 0)
        {
          v796 = 0;
          v797 = v802 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1223;
        }
LABEL_1224:
        v788 |= v796;
        if (v791 == ++v787)
        {
LABEL_1343:
          v7 = (uint64_t)v786;
          v5 = v2143;
          v8 = v2175;
          if ((v788 & 1) != 0)
            return 1;
LABEL_1344:
          if (sub_22E99C4C0((_QWORD *)v7, (unsigned int *)a4, 0xFFFFFFFF, 1u))
            return 1;
          v883 = *(_QWORD *)(a4
                           + ((unint64_t)*(unsigned int *)a4 >> 24)
                           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                           + 16);
LABEL_2552:
          *(_QWORD *)(a4 + 8) = *(_QWORD *)(v883 + 8);
          goto LABEL_2936;
        }
      }
      if ((sub_22E9969B8((uint64_t)v786, (unint64_t *)&v2222, v792) & 1) == 0)
      {
        v796 = 0;
        v797 = v2222;
LABEL_1223:
        *(_QWORD *)(v789
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v787) = v797;
        goto LABEL_1224;
      }
      goto LABEL_1219;
    case 1324:
    case 1325:
      LODWORD(__dst) = 0;
      v213 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v214 = *(_QWORD *)(v213 & 0xFFFFFFFFFFFFFFF0);
      if (v214)
        v215 = *(_BYTE *)(v214 + 16) == 26;
      else
        v215 = 0;
      if (!v215)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v214 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v214 = sub_22F10CF48(*(_QWORD *)(v213 & 0xFFFFFFFFFFFFFFF0));
        else
          v214 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v214 + 16) >> 38)))
        return 1;
      v978 = *(_QWORD *)(v214 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v978 & 0x3FFFC000000000) == 0)
        goto LABEL_2525;
      v2147 = v5;
      v2179 = v8;
      v980 = (_QWORD *)v7;
      v981 = 0;
      v982 = 0;
      v983 = v214 + 40;
      v984 = (unsigned __int16)(v978 >> 38);
      while (1)
      {
        v985 = *(_QWORD *)(v983 + 8 * v981);
        v986 = *(uint64_t **)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v981]
                           + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v986;
        v987 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v985 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v987 || (*(_DWORD *)(v987 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v981)
        {
          *(_DWORD *)__p = 175;
          if ((sub_22E99C700(v986[1], __p, 1) & 1) != 0)
            goto LABEL_1486;
        }
        else
        {
          if (sub_22E99C688(v986[1]))
          {
LABEL_1486:
            sub_22F0D5A50((uint64_t)v986);
            sub_22E8FCA40(v980, v991, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = v986[1];
            v992 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v993 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v993 + 28) & 0x7Eu) - 52 >= 6)
              v994 = 0;
            else
              v994 = v993;
            __src = *(void **)(v994 + 40);
            sub_22E894538(v992, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_1490:
            v989 = 1;
            goto LABEL_1495;
          }
          v986 = *(uint64_t **)((char *)&v979[((unint64_t)*(unsigned int *)a4 >> 18) & 1]
                             + ((unint64_t)*(unsigned int *)a4 >> 24));
        }
        v989 = 1;
        v995 = sub_22EB1B954((uint64_t)v980, v986);
        if ((v995 & 1) == 0)
        {
          v989 = 0;
          v990 = v995 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1494;
        }
LABEL_1495:
        v982 |= v989;
        if (v984 == ++v981)
          goto LABEL_2524;
      }
      if ((sub_22E9969B8((uint64_t)v980, (unint64_t *)&v2222, v985) & 1) == 0)
      {
        v989 = 0;
        v990 = v2222;
LABEL_1494:
        *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v981]
                            + ((unint64_t)*(unsigned int *)a4 >> 24)) = v990;
        goto LABEL_1495;
      }
      goto LABEL_1490;
    case 1326:
      LODWORD(__dst) = 0;
      v439 = sub_22EF72B64(*v8, 0x52Eu, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v440 = *(_QWORD *)(v439 & 0xFFFFFFFFFFFFFFF0);
      if (v440)
        v441 = *(_BYTE *)(v440 + 16) == 26;
      else
        v441 = 0;
      if (!v441)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v440 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v440 = sub_22F10CF48(*(_QWORD *)(v439 & 0xFFFFFFFFFFFFFFF0));
        else
          v440 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v440 + 16) >> 38)))
        return 1;
      v1378 = *(_QWORD *)(v440 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v1378 & 0x3FFFC000000000) == 0)
        goto LABEL_2085;
      v2186 = v8;
      v1379 = (_QWORD *)v7;
      v1380 = 0;
      v1381 = 0;
      v1382 = v440 + 40;
      v1383 = (unsigned __int16)(v1378 >> 38);
      while (1)
      {
        v1384 = *(_QWORD *)(v1382 + 8 * v1380);
        v1385 = *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1380]
                                    + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1385;
        v1386 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1384 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1386 || (*(_DWORD *)(v1386 + 16) & 0xFF800FF) != 137887755)
          break;
        if (sub_22E99C688(*(_QWORD *)(v1385 + 8)))
        {
          sub_22F0D5A50(v1385);
          sub_22E8FCA40(v1379, v1390, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1385 + 8);
          v1391 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1392 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1392 + 28) & 0x7Eu) - 52 >= 6)
            v1393 = 0;
          else
            v1393 = v1392;
          __src = *(void **)(v1393 + 40);
          sub_22E894538(v1391, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_2079:
          v1388 = 1;
          goto LABEL_2083;
        }
        v1388 = 1;
        v1394 = sub_22EB1B954((uint64_t)v1379, *(void **)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1380]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v1394 & 1) == 0)
        {
          v1388 = 0;
          v1389 = v1394 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_2082;
        }
LABEL_2083:
        v1381 |= v1388;
        if (v1383 == ++v1380)
        {
          v7 = (uint64_t)v1379;
          v8 = v2186;
          if ((v1381 & 1) != 0)
            return 1;
LABEL_2085:
          v1395 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4
                                                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                                  + 8
                                                                  * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                                  + 8)
                                                      + 8) & 0xFFFFFFFFFFFFFFF0));
          v1396 = *(_QWORD *)(v1395 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v1396 + 8) & 0xF) != 0)
            v1396 = (unint64_t)sub_22F10D2BC(v1395);
          v1070 = v1396 & 0xFFFFFFFFFFFFFFF0;
          goto LABEL_2935;
        }
      }
      if ((sub_22E9969B8((uint64_t)v1379, (unint64_t *)&v2222, v1384) & 1) == 0)
      {
        v1388 = 0;
        v1389 = v2222;
LABEL_2082:
        *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1380]
                            + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1389;
        goto LABEL_2083;
      }
      goto LABEL_2079;
    case 1327:
      LODWORD(__dst) = 0;
      v527 = sub_22EF72B64(*v8, 0x52Fu, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v528 = *(_QWORD *)(v527 & 0xFFFFFFFFFFFFFFF0);
      if (v528)
        v529 = *(_BYTE *)(v528 + 16) == 26;
      else
        v529 = 0;
      if (!v529)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v528 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v528 = sub_22F10CF48(*(_QWORD *)(v527 & 0xFFFFFFFFFFFFFFF0));
        else
          v528 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v528 + 16) >> 38)))
        return 1;
      v1693 = *(_QWORD *)(v528 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v1693 & 0x3FFFC000000000) == 0)
        goto LABEL_2525;
      v2147 = v5;
      v2179 = v8;
      v980 = (_QWORD *)v7;
      v1694 = 0;
      v982 = 0;
      v1695 = v528 + 40;
      v1696 = (unsigned __int16)(v1693 >> 38);
      while (1)
      {
        v1697 = *(_QWORD *)(v1695 + 8 * v1694);
        v1698 = *(uint64_t **)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1694]
                            + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1698;
        v1699 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1697 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1699 || (*(_DWORD *)(v1699 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v1694)
        {
          *(_QWORD *)__p = 0xAE000000B6;
          *(_DWORD *)&__p[8] = 211;
          if ((sub_22E99C700(v1698[1], __p, 3) & 1) != 0)
            goto LABEL_2514;
        }
        else
        {
          if (sub_22E99C688(v1698[1]))
          {
LABEL_2514:
            sub_22F0D5A50((uint64_t)v1698);
            sub_22E8FCA40(v980, v1703, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = v1698[1];
            v1704 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1705 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1705 + 28) & 0x7Eu) - 52 >= 6)
              v1706 = 0;
            else
              v1706 = v1705;
            __src = *(void **)(v1706 + 40);
            sub_22E894538(v1704, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_2518:
            v1701 = 1;
            goto LABEL_2523;
          }
          v1698 = *(uint64_t **)((char *)&v979[((unint64_t)*(unsigned int *)a4 >> 18) & 1]
                              + ((unint64_t)*(unsigned int *)a4 >> 24));
        }
        v1701 = 1;
        v1707 = sub_22EB1B954((uint64_t)v980, v1698);
        if ((v1707 & 1) == 0)
        {
          v1701 = 0;
          v1702 = v1707 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_2522;
        }
LABEL_2523:
        v982 |= v1701;
        if (v1696 == ++v1694)
        {
LABEL_2524:
          v7 = (uint64_t)v980;
          v5 = v2147;
          v8 = v2179;
          if ((v982 & 1) != 0)
            return 1;
LABEL_2525:
          if (sub_22E99C4C0((_QWORD *)v7, (unsigned int *)a4, 0xFFFFFFFF, 1u))
            return 1;
          v1708 = *v8;
          goto LABEL_2934;
        }
      }
      if ((sub_22E9969B8((uint64_t)v980, (unint64_t *)&v2222, v1697) & 1) == 0)
      {
        v1701 = 0;
        v1702 = v2222;
LABEL_2522:
        *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1694]
                            + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1702;
        goto LABEL_2523;
      }
      goto LABEL_2518;
    case 1328:
      LODWORD(__dst) = 0;
      v536 = sub_22EF72B64(*v8, 0x530u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v537 = *(_QWORD *)(v536 & 0xFFFFFFFFFFFFFFF0);
      if (v537)
        v538 = *(_BYTE *)(v537 + 16) == 26;
      else
        v538 = 0;
      if (!v538)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v537 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v537 = sub_22F10CF48(*(_QWORD *)(v536 & 0xFFFFFFFFFFFFFFF0));
        else
          v537 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v537 + 16) >> 38)))
        return 1;
      v1726 = *(_QWORD *)(v537 + 16);
      if ((v1726 & 0x3FFFC000000000) == 0)
        goto LABEL_2581;
      v2192 = v8;
      v1727 = (_QWORD *)v7;
      v1728 = 0;
      v1729 = 0;
      v1730 = a4 + 8;
      v1731 = v537 + 40;
      v1732 = (unsigned __int16)(v1726 >> 38);
      while (1)
      {
        v1733 = *(_QWORD *)(v1731 + 8 * v1728);
        v1734 = *(uint64_t **)(v1730
                            + ((unint64_t)*(unsigned int *)a4 >> 24)
                            + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                            + 8 * v1728);
        *(_QWORD *)&v2222 = v1734;
        v1735 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1733 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1735 || (*(_DWORD *)(v1735 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v1728)
        {
          v1740 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1734[1] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v1740)
            v1741 = (*(_DWORD *)(v1740 + 16) & 0xFF800FF) == 91226123;
          else
            v1741 = 0;
          if (v1741)
          {
LABEL_2570:
            v1737 = v5;
            sub_22F0D5A50((uint64_t)v1734);
            sub_22E8FCA40(v1727, v1742, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = v1734[1];
            v1743 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1744 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1744 + 28) & 0x7Eu) - 52 >= 6)
              v1745 = 0;
            else
              v1745 = v1744;
            __src = *(void **)(v1745 + 40);
            sub_22E894538(v1743, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_2574:
            v1738 = 1;
            goto LABEL_2579;
          }
          v1737 = v5;
        }
        else
        {
          if ((sub_22E99C778(v1734[1]) & 1) != 0)
            goto LABEL_2570;
          v1737 = v5;
          v1734 = *(uint64_t **)(v1730
                              + ((unint64_t)*(unsigned int *)a4 >> 24)
                              + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1));
        }
        v1738 = 1;
        v1746 = sub_22EB1B954((uint64_t)v1727, v1734);
        if ((v1746 & 1) == 0)
        {
          v1738 = 0;
          v1739 = v1746 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_2578;
        }
LABEL_2579:
        v1729 |= v1738;
        ++v1728;
        v5 = v1737;
        if (v1732 == v1728)
        {
          v7 = (uint64_t)v1727;
          v8 = v2192;
          if ((v1729 & 1) != 0)
            return 1;
LABEL_2581:
          v1213 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4
                                                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                                  + 8
                                                                  * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                                  + 8)
                                                      + 8) & 0xFFFFFFFFFFFFFFF0));
LABEL_2582:
          *(_QWORD *)(a4 + 8) = v1213;
          goto LABEL_2936;
        }
      }
      v1737 = v5;
      if ((sub_22E9969B8((uint64_t)v1727, (unint64_t *)&v2222, v1733) & 1) == 0)
      {
        v1738 = 0;
        v1739 = v2222;
LABEL_2578:
        *(_QWORD *)(v1730
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v1728) = v1739;
        goto LABEL_2579;
      }
      goto LABEL_2574;
    case 1329:
      LODWORD(__dst) = 0;
      v343 = sub_22EF72B64(*v8, 0x531u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v344 = *(_QWORD *)(v343 & 0xFFFFFFFFFFFFFFF0);
      if (v344)
        v345 = *(_BYTE *)(v344 + 16) == 26;
      else
        v345 = 0;
      if (!v345)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v344 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v344 = sub_22F10CF48(*(_QWORD *)(v343 & 0xFFFFFFFFFFFFFFF0));
        else
          v344 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v344 + 16) >> 38)))
        return 1;
      v2185 = v8;
      v1311 = *(_QWORD *)(v344 + 16);
      if ((v1311 & 0x3FFFC000000000) == 0)
        return a4;
      v1312 = (_QWORD *)v7;
      v1313 = 0;
      v955 = 0;
      v1314 = a4 + 8;
      v1315 = v344 + 40;
      v1316 = (unsigned __int16)(v1311 >> 38);
      while (1)
      {
        v1317 = *(_QWORD *)(v1315 + 8 * v1313);
        v1318 = *(_QWORD *)(v1314
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1313);
        *(_QWORD *)&v2222 = v1318;
        v1319 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1317 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1319 || (*(_DWORD *)(v1319 + 16) & 0xFF800FF) != 137887755)
          break;
        if ((_DWORD)v1313 == 2)
        {
          v1327 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1318 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v1327)
            v1328 = (*(_DWORD *)(v1327 + 16) & 0xFF800FF) == 91226123;
          else
            v1328 = 0;
          if (v1328)
          {
LABEL_1965:
            sub_22F0D5A50(v1318);
            sub_22E8FCA40(v1312, v1323, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1318 + 8);
            v1324 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1325 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1325 + 28) & 0x7Eu) - 52 >= 6)
              v1326 = 0;
            else
              v1326 = v1325;
            __src = *(void **)(v1326 + 40);
            sub_22E894538(v1324, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_1969:
            v1321 = 1;
            goto LABEL_1977;
          }
        }
        else if ((_DWORD)v1313 == 1)
        {
          if ((sub_22E99C778(*(_QWORD *)(v1318 + 8)) & 1) != 0)
            goto LABEL_1965;
        }
        else if ((sub_22E99C7D0(*(_QWORD *)(v1318 + 8)) & 1) != 0)
        {
          goto LABEL_1965;
        }
        v1321 = 1;
        v1329 = sub_22EB1B954((uint64_t)v1312, *(void **)(v1314+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1313));
        if ((v1329 & 1) == 0)
        {
          v1321 = 0;
          v1322 = v1329 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1976;
        }
LABEL_1977:
        v955 |= v1321;
        if (v1316 == ++v1313)
        {
          v7 = (uint64_t)v1312;
          v8 = v2185;
LABEL_2730:
          if ((v955 & 1) == 0)
            goto LABEL_2936;
          return 1;
        }
      }
      if ((sub_22E9969B8((uint64_t)v1312, (unint64_t *)&v2222, v1317) & 1) == 0)
      {
        v1321 = 0;
        v1322 = v2222;
LABEL_1976:
        *(_QWORD *)(v1314
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v1313) = v1322;
        goto LABEL_1977;
      }
      goto LABEL_1969;
    case 1330:
    case 1331:
    case 1332:
    case 1333:
    case 1334:
    case 1335:
      LODWORD(__dst) = 0;
      v75 = v5;
      v111 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v112 = v111;
      v113 = (int)v5 - 1330;
      v114 = qword_22F468EE8[v113];
      v115 = qword_22F468F18[(int)v113];
      v2135 = dword_22F468F48[(int)v113];
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, dword_22F468F60[(int)v113]))
        return 1;
      v116 = *(_QWORD *)(v112 & 0xFFFFFFFFFFFFFFF0);
      if (!v116 || *(_BYTE *)(v116 + 16) != 26)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v116 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v116 = sub_22F10CF48(v116);
        else
          v116 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v116 + 16) >> 38)))
        return 1;
      v816 = *(_QWORD *)(v116 + 16);
      v650 = (_QWORD *)(a4 + 8);
      if ((v816 & 0x3FFFC000000000) == 0)
        goto LABEL_1278;
      v2128 = v114;
      v2131 = v115;
      v2176 = v8;
      v817 = 0;
      v818 = 0;
      v819 = v116 + 40;
      v820 = (unsigned __int16)(v816 >> 38);
      while (1)
      {
        v821 = *(_QWORD *)(v819 + 8 * v817);
        v822 = *(unsigned int *)a4;
        v823 = (v822 >> 18) & 1;
        v824 = *(_QWORD *)((char *)&v650[v823 + v817] + (v822 >> 24));
        *(_QWORD *)&v2222 = v824;
        v825 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v821 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v825 || (*(_DWORD *)(v825 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v817 == 1)
        {
          if (sub_22E99CB80(v824, *(_QWORD *)(*(_QWORD *)((char *)&v650[v823] + (v822 >> 24)) + 8)))
            goto LABEL_1268;
        }
        else if (v2135 == v817)
        {
          v829 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v824 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v829)
            v830 = *(_DWORD *)(v829 + 16) == 11;
          else
            v830 = 0;
          if (!v830 || ((*(_DWORD *)(v829 + 16) >> 19) & 0x1FFu) - 175 <= 0xFFFFFFFD)
            goto LABEL_1268;
        }
        else
        {
          if (v2131 == v817)
          {
            v831 = *(_QWORD *)(*(_QWORD *)(v824 + 8) & 0xFFFFFFFFFFFFFFF0);
            if ((!v831 || *(_BYTE *)(v831 + 16) != 39)
              && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v831 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
               || (v831 = sub_22F10CF48(v831)) == 0))
            {
LABEL_1268:
              sub_22F0D5A50(v824);
              sub_22E8FCA40((_QWORD *)v7, v833, 0xEEEu, 0, (uint64_t)__p);
              *(_QWORD *)&v2218 = *(_QWORD *)(v824 + 8);
              v834 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
              v835 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if ((*(_DWORD *)(v835 + 28) & 0x7Eu) - 52 >= 6)
                v836 = 0;
              else
                v836 = v835;
              __src = *(void **)(v836 + 40);
              sub_22E894538(v834, (uint64_t *)&__src);
              sub_22E903BEC((unsigned int *)__p);
LABEL_1272:
              v827 = 1;
              goto LABEL_1276;
            }
            v832 = *(_QWORD *)(v831 + 32);
          }
          else
          {
            v832 = *(_QWORD *)(v824 + 8);
          }
          if ((sub_22E99CC7C(v832) & 1) != 0)
            goto LABEL_1268;
        }
        v827 = 1;
        v837 = sub_22EB1B954(v7, *(void **)((char *)&v650[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v817]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v837 & 1) == 0)
        {
          v827 = 0;
          v828 = v837 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1275;
        }
LABEL_1276:
        v818 |= v827;
        if (v820 == ++v817)
        {
          v8 = v2176;
          v114 = v2128;
          v115 = v2131;
          if ((v818 & 1) != 0)
            return 1;
LABEL_1278:
          if ((sub_22E99C8B4((_QWORD *)v7, (unsigned int *)a4, 1u, 0xFFFFFFFF, v2135, 0xFFFFFFFF) & 1) != 0)
            return 1;
          v838 = a4
               + ((unint64_t)*(unsigned int *)a4 >> 24)
               + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
               + 8;
          v839 = *(_QWORD *)(*(_QWORD *)(v838 + 8 * v114) + 8);
          v840 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v838 + 8 * v115) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (!v840 || *(_BYTE *)(v840 + 16) != 39)
            v840 = sub_22F10CF48(v840);
          if (*(_QWORD *)(*(_QWORD *)((v839 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v840 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
            return 1;
          v670 = *(_QWORD *)(*v8 + 16400);
LABEL_1026:
          *v650 = v670;
          v5 = v75;
          goto LABEL_2936;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v821) & 1) == 0)
      {
        v827 = 0;
        v828 = v2222;
LABEL_1275:
        *(_QWORD *)((char *)&v650[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v817]
                  + ((unint64_t)*(unsigned int *)a4 >> 24)) = v828;
        goto LABEL_1276;
      }
      goto LABEL_1272;
    case 1336:
    case 1337:
    case 1338:
    case 1339:
    case 1340:
    case 1341:
    case 1342:
    case 1343:
    case 1344:
    case 1345:
    case 1346:
    case 1347:
    case 1348:
    case 1349:
    case 1350:
    case 1351:
    case 1352:
    case 1353:
    case 1354:
    case 1355:
    case 1356:
    case 1357:
    case 1358:
    case 1359:
    case 1360:
    case 1361:
    case 1362:
    case 1363:
    case 1364:
    case 1365:
    case 1366:
    case 1367:
    case 1368:
    case 1369:
    case 1370:
    case 1371:
    case 1372:
    case 1373:
    case 1374:
    case 1375:
    case 1376:
    case 1377:
    case 1378:
    case 1379:
    case 1380:
    case 1381:
    case 1382:
    case 1383:
    case 1396:
    case 1397:
    case 1398:
    case 1399:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1405:
    case 1406:
    case 1407:
      if ((sub_22E97A450(v7, v5) & 1) != 0)
        return 1;
      return a4;
    case 1384:
    case 1385:
    case 1386:
    case 1387:
    case 1388:
    case 1389:
    case 1390:
    case 1391:
    case 1392:
    case 1393:
    case 1394:
    case 1395:
      LODWORD(__dst) = 0;
      v60 = v8;
      v61 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v62 = v61;
      v63 = (int)v5 - 1384;
      v2133 = dword_22F468F78[v63];
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, dword_22F468FA8[(int)v63]))
        return 1;
      v64 = *(_QWORD *)(v62 & 0xFFFFFFFFFFFFFFF0);
      if (v64)
        v65 = *(_BYTE *)(v64 + 16) == 26;
      else
        v65 = 0;
      if (!v65)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v64 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v64 = sub_22F10CF48(v64);
        else
          v64 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v64 + 16) >> 38)))
        return 1;
      v727 = *(_QWORD *)(v64 + 16);
      if ((v727 & 0x3FFFC000000000) == 0)
        goto LABEL_1159;
      v2142 = v5;
      v728 = 0;
      v729 = 0;
      v730 = a4 + 8;
      v731 = v64 + 40;
      v732 = (unsigned __int16)(v727 >> 38);
      while (1)
      {
        v733 = *(_QWORD *)(v731 + 8 * v728);
        v734 = *(unsigned int *)a4;
        v735 = (v734 >> 18) & 1;
        v736 = *(_QWORD *)(v730 + (v734 >> 24) + 8 * v735 + 8 * v728);
        *(_QWORD *)&v2222 = v736;
        v737 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v733 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v737 || (*(_DWORD *)(v737 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v728 == 1)
        {
          if (sub_22E99CB80(v736, *(_QWORD *)(*(_QWORD *)(v730 + (v734 >> 24) + 8 * v735) + 8)))
            goto LABEL_1152;
        }
        else if (v2133 == v728)
        {
          v742 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v736 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v742)
            v743 = *(_DWORD *)(v742 + 16) == 11;
          else
            v743 = 0;
          if (!v743 || ((*(_DWORD *)(v742 + 16) >> 19) & 0x1FFu) - 175 < 0xFFFFFFFE)
            goto LABEL_1152;
        }
        else
        {
          v744 = *(_QWORD *)(*(_QWORD *)(v736 + 8) & 0xFFFFFFFFFFFFFFF0);
          if ((!v744 || *(_BYTE *)(v744 + 16) != 56)
            && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v744 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
             || (v744 = sub_22F10CF48(v744)) == 0)
            || *(_DWORD *)(v744 + 20) != 4
            || ((v745 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v744 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
              ? (v746 = (*(_DWORD *)(v745 + 16) & 0xFF800FF) == 91750411)
              : (v746 = 0),
                !v746))
          {
LABEL_1152:
            sub_22F0D5A50(v736);
            sub_22E8FCA40((_QWORD *)v7, v747, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v736 + 8);
            v748 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v749 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v749 + 28) & 0x7Eu) - 52 >= 6)
              v750 = 0;
            else
              v750 = v749;
            __src = *(void **)(v750 + 40);
            sub_22E894538(v748, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_1156:
            v739 = 1;
            goto LABEL_1157;
          }
        }
        v739 = 1;
        v741 = sub_22EB1B954(v7, *(void **)(v730+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v728));
        if ((v741 & 1) == 0)
        {
          v739 = 0;
          v740 = v741 & 0xFFFFFFFFFFFFFFFELL;
LABEL_1134:
          *(_QWORD *)(v730
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                    + 8 * v728) = v740;
        }
LABEL_1157:
        v729 |= v739;
        if (v732 == ++v728)
        {
          v5 = v2142;
          if ((v729 & 1) == 0)
          {
LABEL_1159:
            v8 = v60;
            if ((sub_22E99C8B4((_QWORD *)v7, (unsigned int *)a4, 1u, 0xFFFFFFFF, v2133, 0xFFFFFFFF) & 1) == 0)
              goto LABEL_2936;
          }
          return 1;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v733) & 1) != 0)
        goto LABEL_1156;
      v739 = 0;
      v740 = v2222;
      goto LABEL_1134;
    case 1426:
      if ((*(_DWORD *)(a4 + 16) - 3) > 1)
      {
        if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 3u))
          return 1;
        return a4;
      }
      v2172 = v8;
      v565 = 0;
      v566 = 8;
      while (1)
      {
        v567 = *(_QWORD *)(a4
                         + ((unint64_t)*(unsigned int *)a4 >> 24)
                         + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                         + v566);
        v568 = *(_DWORD *)(a4 + 16);
        v569 = *(_QWORD *)(v567 + 8) & 0xFFFFFFFFFFFFFFF0;
        v570 = *(_QWORD *)v569;
        if (*(_QWORD *)v569 && *(_BYTE *)(v570 + 16) == 56
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v570 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
          && (v570 = sub_22F10CF48(v570)) != 0)
        {
          v571 = *(_DWORD *)(v570 + 20);
          v119 = v571 > 0x10;
          v572 = (1 << v571) & 0x1011C;
          if (v119 || v572 == 0)
            goto LABEL_892;
          v569 = *(_QWORD *)(v570 + 32) & 0xFFFFFFFFFFFFFFF0;
        }
        v574 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v569 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v574)
          v575 = *(_DWORD *)(v574 + 16) == 11;
        else
          v575 = 0;
        if (!v575 || ((*(_DWORD *)(v574 + 16) >> 19) & 0x1FFu) - 168 > 0x2C)
          goto LABEL_892;
        if (((1 << ((*(_DWORD *)(v574 + 16) >> 19) + 88)) & 0xECE1) == 0)
        {
          if (((1 << ((*(_DWORD *)(v574 + 16) >> 19) + 88)) & 0x1C0000000000) != 0 && v568 == 4)
            goto LABEL_896;
LABEL_892:
          sub_22F0D5A50(v567);
          sub_22E8FCA40((_QWORD *)v7, v576, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2222 = *(_QWORD *)(v567 + 8);
          v577 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
          v578 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v578 + 28) & 0x7Eu) - 52 >= 6)
            v579 = 0;
          else
            v579 = v578;
          *(_QWORD *)&v2218 = *(_QWORD *)(v579 + 40);
          sub_22E894538(v577, (uint64_t *)&v2218);
          sub_22E903BEC((unsigned int *)__p);
          v565 = 1;
          goto LABEL_896;
        }
        if (v568 != 3)
          goto LABEL_892;
LABEL_896:
        v566 += 8;
        if (v566 == 32)
        {
          v777 = *(_DWORD *)(a4 + 16);
          v778 = *(_QWORD *)(a4
                           + ((unint64_t)*(unsigned int *)a4 >> 24)
                           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                           + 8 * (v777 - 1)
                           + 8);
          if (v777 == 4)
          {
            v779 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v778 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            if (!v779 || (*(_DWORD *)(v779 + 16) & 0xFF800FF) != 95420427)
            {
              sub_22F0D5A50(v778);
              sub_22E8FCA40((_QWORD *)v7, v781, 0xEEEu, 0, (uint64_t)__p);
              *(_QWORD *)&v2222 = *(_QWORD *)(v778 + 8);
              v782 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
              v783 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if ((*(_DWORD *)(v783 + 28) & 0x7Eu) - 52 >= 6)
                v784 = 0;
              else
                v784 = v783;
              *(_QWORD *)&v2218 = *(_QWORD *)(v784 + 40);
              sub_22E894538(v782, (uint64_t *)&v2218);
              sub_22E903BEC((unsigned int *)__p);
              v565 = 1;
            }
          }
          sub_22F00905C(v778, *v8, 0, (uint64_t)&v2222);
          if ((_BYTE)v2223)
          {
            v939 = DWORD2(v2222) >= 0x41 ? (__int128 *)v2222 : &v2222;
            if (*(_QWORD *)v939 >= 4uLL)
            {
              sub_22EFFAE7C((unsigned int *)a4);
              sub_22E8FCA40((_QWORD *)v7, v940, 0xEE6u, 0, (uint64_t)__p);
              v941 = &v2222;
              if (DWORD2(v2222) >= 0x41)
                v941 = (__int128 *)v2222;
              LODWORD(__src) = *(_QWORD *)v941;
              v942 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
              sub_22F0D4E74(v778);
              *(_QWORD *)&v2218 = v943;
              v944 = (uint64_t *)&v2218;
              v945 = v942;
              goto LABEL_2724;
            }
          }
          if ((v565 & 1) == 0)
          {
            v946 = 0;
            v947 = a4
                 + ((unint64_t)*(unsigned int *)a4 >> 24)
                 + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
            v950 = *(_QWORD *)(v947 + 8);
            v948 = v947 + 8;
            v949 = v950;
            v951 = *(_QWORD *)(v950 + 8);
            v952 = 1;
            while (1)
            {
              v953 = v946;
              v954 = *(_QWORD *)(v948 + 8 * v952);
              if (*(_QWORD *)(*(_QWORD *)((v951 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v954 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
                break;
              v946 = 1;
              v952 = 2;
              if ((v953 & 1) != 0)
              {
                v955 = 0;
                *(_QWORD *)(a4 + 8) = v951;
LABEL_2726:
                if ((_BYTE)v2223 && DWORD2(v2222) >= 0x41 && (_QWORD)v2222)
                  MEMORY[0x2348A0E84](v2222, 0x1000C8000313F17);
                goto LABEL_2730;
              }
            }
            LODWORD(__dst) = v952;
            sub_22EFFAE7C((unsigned int *)a4);
            sub_22E8FCA40((_QWORD *)v7, v1843, 0xEEAu, 0, (uint64_t)__p);
            LODWORD(v2204) = 0;
            v1844 = sub_22E8900C4((uint64_t)__p, (int *)&v2204);
            v1845 = sub_22E8900C4(v1844, (int *)&__dst);
            sub_22F0D4E74(v949);
            *(_QWORD *)&v2218 = v1846;
            v1847 = v1845;
            v8 = v2172;
            v1848 = sub_22E8906A0(v1847, (uint64_t *)&v2218);
            sub_22F0D4E74(v954);
            __src = v1849;
            v944 = (uint64_t *)&__src;
            v945 = v1848;
LABEL_2724:
            sub_22E8906A0(v945, v944);
            sub_22E903BEC((unsigned int *)__p);
          }
          v955 = 1;
          goto LABEL_2726;
        }
      }
    case 1427:
    case 1429:
    case 1656:
    case 1657:
    case 1663:
    case 1664:
    case 1689:
    case 1690:
    case 1691:
      v44 = (_QWORD *)v7;
      v45 = v5;
      goto LABEL_94;
    case 1428:
      v44 = (_QWORD *)v7;
      v45 = 1428;
      goto LABEL_41;
    case 1432:
      v372 = (_QWORD *)v7;
      v373 = 1432;
      v374 = (unsigned int *)a4;
      v375 = 1;
      goto LABEL_871;
    case 1433:
      v372 = (_QWORD *)v7;
      v373 = 1433;
      v374 = (unsigned int *)a4;
      v375 = 0;
LABEL_871:
      if ((sub_22E97A910(v372, v373, v374, v375) & 1) == 0)
        return a4;
      return 1;
    case 1434:
      LODWORD(__dst) = 0;
      v216 = v8;
      v452 = sub_22EF72B64(*v8, 0x59Au, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v453 = *(_QWORD *)(v452 & 0xFFFFFFFFFFFFFFF0);
      if (v453)
        v454 = *(_BYTE *)(v453 + 16) == 26;
      else
        v454 = 0;
      if (!v454)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v453 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v453 = sub_22F10CF48(*(_QWORD *)(v452 & 0xFFFFFFFFFFFFFFF0));
        else
          v453 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v453 + 16) >> 38)))
        return 1;
      v1397 = *(_QWORD *)(v453 + 16);
      v1398 = (_QWORD *)(a4 + 8);
      if ((v1397 & 0x3FFFC000000000) == 0)
        goto LABEL_2124;
      v2153 = v5;
      v1399 = 0;
      v1400 = 0;
      v1401 = v453 + 40;
      v1402 = (unsigned __int16)(v1397 >> 38);
      while (1)
      {
        v1403 = *(_QWORD *)(v1401 + 8 * v1399);
        v1404 = *(_QWORD *)((char *)&v1398[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1399]
                          + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1404;
        v1405 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1403 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1405)
          v1406 = (*(_DWORD *)(v1405 + 16) & 0xFF800FF) == 137887755;
        else
          v1406 = 0;
        if (v1406)
        {
          v1409 = *(_QWORD *)(v1404 + 8) & 0xFFFFFFFFFFFFFFF0;
          v1410 = *(_QWORD *)v1409;
          if (*(_QWORD *)v1409 && *(_BYTE *)(v1410 + 16) == 56
            || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1410 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
            && (v1410 = sub_22F10CF48(v1410)) != 0)
          {
            v1411 = *(_DWORD *)(v1410 + 20);
            v119 = v1411 > 0x10;
            v1412 = (1 << v1411) & 0x1011C;
            if (v119 || v1412 == 0)
            {
LABEL_2114:
              sub_22F0D5A50(v1404);
              sub_22E8FCA40((_QWORD *)v7, v1416, 0xEEEu, 0, (uint64_t)__p);
              *(_QWORD *)&v2218 = *(_QWORD *)(v1404 + 8);
              v1417 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
              v1418 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if ((*(_DWORD *)(v1418 + 28) & 0x7Eu) - 52 >= 6)
                v1419 = 0;
              else
                v1419 = v1418;
              __src = *(void **)(v1419 + 40);
              sub_22E894538(v1417, (uint64_t *)&__src);
              sub_22E903BEC((unsigned int *)__p);
LABEL_2118:
              v1407 = 1;
              goto LABEL_2119;
            }
            v1409 = *(_QWORD *)(v1410 + 32) & 0xFFFFFFFFFFFFFFF0;
          }
          v1414 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1409 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v1414)
            v1415 = *(_DWORD *)(v1414 + 16) == 11;
          else
            v1415 = 0;
          if (!v1415 || ((*(_DWORD *)(v1414 + 16) >> 19) & 0x1FFu) - 213 <= 0xFFFFFFFC)
            goto LABEL_2114;
          v1407 = 1;
          v1420 = sub_22EB1B954(v7, *(void **)((char *)&v1398[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1399]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
          if ((v1420 & 1) != 0)
            goto LABEL_2119;
          v1407 = 0;
          v1408 = v1420 & 0xFFFFFFFFFFFFFFFELL;
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1403) & 1) != 0)
            goto LABEL_2118;
          v1407 = 0;
          v1408 = v2222;
        }
        *(_QWORD *)((char *)&v1398[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1399]
                  + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1408;
LABEL_2119:
        v1400 |= v1407;
        if (v1402 == ++v1399)
        {
          v5 = v2153;
          if ((v1400 & 1) != 0)
            return 1;
LABEL_2124:
          v1421 = a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
          v1422 = *(_QWORD *)(v1421 + 8);
          v170 = *(_QWORD *)(v1421 + 16);
          v1423 = *(_QWORD *)(v1422 + 8);
          v1424 = (uint64_t *)(v1423 & 0xFFFFFFFFFFFFFFF0);
          if (*(_QWORD *)(*(_QWORD *)((v1423 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v170 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
          {
            v1905 = *v1424;
            if (*v1424 && *(_BYTE *)(v1905 + 16) == 56
              || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1905 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
              && (v1905 = sub_22F10CF48(v1905)) != 0)
            {
              v1423 = *(_QWORD *)(v1905 + 32);
            }
            *v1398 = v1423;
            goto LABEL_2870;
          }
          sub_22EFFAE7C((unsigned int *)a4);
          sub_22E8FCA40((_QWORD *)v7, v1425, 0xEEAu, 0, (uint64_t)__p);
          LODWORD(__src) = 0;
          v1426 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
          v1427 = 1;
          goto LABEL_2695;
        }
      }
    case 1443:
      LODWORD(__dst) = 0;
      v2169 = v8;
      v608 = sub_22EF72B64(*v8, 0x5A3u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v609 = *(_QWORD *)(v608 & 0xFFFFFFFFFFFFFFF0);
      if (v609)
        v610 = *(_BYTE *)(v609 + 16) == 26;
      else
        v610 = 0;
      if (!v610)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v609 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v609 = sub_22F10CF48(*(_QWORD *)(v608 & 0xFFFFFFFFFFFFFFF0));
        else
          v609 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v609 + 16) >> 38)))
        return 1;
      v1818 = *(_QWORD *)(v609 + 16);
      v1819 = a4 + 8;
      if ((v1818 & 0x3FFFC000000000) == 0)
        goto LABEL_2718;
      v2164 = v5;
      v1820 = 0;
      v1821 = 0;
      v1822 = v609 + 40;
      v1823 = (unsigned __int16)(v1818 >> 38);
      while (1)
      {
        v1824 = *(_QWORD *)(v1822 + 8 * v1820);
        v1825 = *(_QWORD *)(v1819
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1820);
        *(_QWORD *)&v2222 = v1825;
        v1826 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1824 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1826)
          v1827 = (*(_DWORD *)(v1826 + 16) & 0xFF800FF) == 137887755;
        else
          v1827 = 0;
        if (v1827)
        {
          v1829 = *(_QWORD *)(v1825 + 8);
          sub_22EFF605C(v1825);
          if ((sub_22EA54118(v7, v1829) & 1) == 0)
          {
            sub_22F0D5A50(v1825);
            sub_22E8FCA40((_QWORD *)v7, v1832, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1825 + 8);
            v1833 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1834 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1834 + 28) & 0x7Eu) - 52 >= 6)
              v1835 = 0;
            else
              v1835 = v1834;
            __src = *(void **)(v1835 + 40);
            sub_22E894538(v1833, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
            v1828 = 1;
            goto LABEL_2716;
          }
          v1828 = 1;
          v1830 = sub_22EB1B954(v7, *(void **)(v1819+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1820));
          if ((v1830 & 1) == 0)
          {
            v1828 = 0;
            v1831 = v1830 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2711:
            *(_QWORD *)(v1819
                      + ((unint64_t)*(unsigned int *)a4 >> 24)
                      + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                      + 8 * v1820) = v1831;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1824) & 1) == 0)
          {
            v1828 = 0;
            v1831 = v2222;
            goto LABEL_2711;
          }
          v1828 = 1;
        }
LABEL_2716:
        v1821 |= v1828;
        if (v1823 == ++v1820)
        {
          v5 = v2164;
          if ((v1821 & 1) != 0)
            return 1;
LABEL_2718:
          v1836 = *(unsigned int *)(a4 + 16);
          v1837 = *(unsigned int *)a4;
          if ((_DWORD)v1836)
          {
            v1838 = 0;
            v1839 = 8 * v1836;
            do
            {
              v1840 = sub_22EB1A358(v7, *(_QWORD *)(v1819 + BYTE3(v1837) + 8 * ((v1837 >> 18) & 1) + v1838), 0);
              if ((v1840 & 1) != 0)
                return 1;
              v1837 = *(unsigned int *)a4;
              v1841 = v1837 >> 24;
              v1842 = (v1837 >> 18) & 1;
              *(_QWORD *)(v1819 + (v1837 >> 24) + 8 * v1842 + v1838) = v1840 & 0xFFFFFFFFFFFFFFFELL;
              v1838 += 8;
            }
            while (v1839 != v1838);
          }
          else
          {
            v1841 = v1837 >> 24;
            v1842 = (v1837 >> 18) & 1;
          }
          *(_QWORD *)(a4 + 8) = *(_QWORD *)(*(_QWORD *)(a4 + v1841 + 8 * v1842 + 24) + 8);
LABEL_501:
          v8 = v2169;
          goto LABEL_2936;
        }
      }
    case 1449:
    case 1450:
    case 1451:
    case 1452:
    case 1785:
    case 1786:
    case 1787:
    case 1788:
    case 1789:
    case 1790:
    case 1791:
    case 1796:
    case 1797:
    case 1798:
    case 1799:
    case 1800:
      if ((sub_22E97AD58((_QWORD *)v7, v5, (unsigned int *)a4) & 1) != 0)
        return 1;
      return a4;
    case 1549:
    case 1550:
    case 1551:
      LODWORD(__dst) = 0;
      v185 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v186 = *(_QWORD *)(v185 & 0xFFFFFFFFFFFFFFF0);
      if (v186)
        v187 = *(_BYTE *)(v186 + 16) == 26;
      else
        v187 = 0;
      if (!v187)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v186 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v186 = sub_22F10CF48(*(_QWORD *)(v185 & 0xFFFFFFFFFFFFFFF0));
        else
          v186 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v186 + 16) >> 38)))
        return 1;
      v904 = *(_QWORD *)(v186 + 16);
      if ((v904 & 0x3FFFC000000000) == 0)
        goto LABEL_2550;
      v2146 = v5;
      v2177 = v8;
      v905 = 0;
      v906 = 0;
      v907 = a4 + 8;
      v908 = v186 + 40;
      v909 = (unsigned __int16)(v904 >> 38);
      while (1)
      {
        v910 = *(_QWORD *)(v908 + 8 * v905);
        v911 = *(_QWORD *)(v907
                         + ((unint64_t)*(unsigned int *)a4 >> 24)
                         + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                         + 8 * v905);
        *(_QWORD *)&v2222 = v911;
        v912 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v910 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v912)
          v913 = (*(_DWORD *)(v912 + 16) & 0xFF800FF) == 137887755;
        else
          v913 = 0;
        if (v913)
        {
          v915 = *(_QWORD *)(v911 + 8) & 0xFFFFFFFFFFFFFFF0;
          v916 = *(_QWORD *)v915;
          if (*(_QWORD *)v915 && *(_BYTE *)(v916 + 16) == 56
            || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v916 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
            && (v916 = sub_22F10CF48(v916)) != 0)
          {
            v917 = *(_DWORD *)(v916 + 20);
            v119 = v917 > 0x10;
            v918 = (1 << v917) & 0x1011C;
            if (v119 || v918 == 0)
            {
LABEL_1393:
              sub_22F0D5A50(v911);
              sub_22E8FCA40((_QWORD *)v7, v922, 0xEEEu, 0, (uint64_t)__p);
              *(_QWORD *)&v2218 = *(_QWORD *)(v911 + 8);
              v923 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
              v924 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if ((*(_DWORD *)(v924 + 28) & 0x7Eu) - 52 >= 6)
                v925 = 0;
              else
                v925 = v924;
              __src = *(void **)(v925 + 40);
              sub_22E894538(v923, (uint64_t *)&__src);
              sub_22E903BEC((unsigned int *)__p);
              v914 = 1;
              goto LABEL_1401;
            }
            v915 = *(_QWORD *)(v916 + 32) & 0xFFFFFFFFFFFFFFF0;
          }
          v920 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v915 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v920)
            v921 = (*(_DWORD *)(v920 + 16) & 0xFF000FF) == 110100491;
          else
            v921 = 0;
          if (!v921)
            goto LABEL_1393;
          v914 = 1;
          v927 = sub_22EB1B954(v7, *(void **)(v907+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v905));
          if ((v927 & 1) == 0)
          {
            v914 = 0;
            v926 = v927 & 0xFFFFFFFFFFFFFFFELL;
            goto LABEL_1400;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v910) & 1) == 0)
          {
            v914 = 0;
            v926 = v2222;
LABEL_1400:
            *(_QWORD *)(v907
                      + ((unint64_t)*(unsigned int *)a4 >> 24)
                      + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                      + 8 * v905) = v926;
            goto LABEL_1401;
          }
          v914 = 1;
        }
LABEL_1401:
        v906 |= v914;
        if (v909 == ++v905)
        {
          v8 = v2177;
LABEL_1663:
          v5 = v2146;
          if ((v906 & 1) != 0)
            return 1;
LABEL_2550:
          v1692 = a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
LABEL_2551:
          v883 = *(_QWORD *)(v1692 + 8);
          goto LABEL_2552;
        }
      }
    case 1560:
      LODWORD(__dst) = 0;
      v455 = v8;
      v456 = sub_22EF72B64(*v8, 0x618u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v457 = *(_QWORD *)(v456 & 0xFFFFFFFFFFFFFFF0);
      if (v457)
        v458 = *(_BYTE *)(v457 + 16) == 26;
      else
        v458 = 0;
      if (!v458)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v457 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v457 = sub_22F10CF48(*(_QWORD *)(v456 & 0xFFFFFFFFFFFFFFF0));
        else
          v457 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v457 + 16) >> 38)))
        return 1;
      v1428 = *(_QWORD *)(v457 + 16);
      if ((v1428 & 0x3FFFC000000000) == 0)
        goto LABEL_2158;
      v2154 = v5;
      v1429 = 0;
      v1430 = 0;
      v1431 = a4 + 8;
      v2137 = v457 + 40;
      v1432 = (unsigned __int16)(v1428 >> 38);
      while (1)
      {
        v1433 = *(_QWORD *)(v2137 + 8 * v1429);
        v1434 = *(_QWORD *)(v1431
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1429);
        *(_QWORD *)&v2222 = v1434;
        v1435 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1433 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1435)
          v1436 = (*(_DWORD *)(v1435 + 16) & 0xFF800FF) == 137887755;
        else
          v1436 = 0;
        if (v1436)
        {
          v1438 = *(_QWORD *)(*(_QWORD *)(v1434 + 8) & 0xFFFFFFFFFFFFFFF0);
          v1439 = sub_22E3E4B64(v1438);
          if (v1439
            && (*(_DWORD *)(v1439 + 20) - 2) <= 2
            && (*(_DWORD *)(v1439 + 16) & 0x780000) != 0x80000)
          {
            v1438 = *(_QWORD *)(*(_QWORD *)(v1439 + 32) & 0xFFFFFFFFFFFFFFF0);
          }
          v1440 = *(_QWORD *)(*(_QWORD *)(v1438 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v1440)
            v1441 = *(_DWORD *)(v1440 + 16) == 11;
          else
            v1441 = 0;
          if (!v1441
            || (((*(_DWORD *)(v1440 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
              ? (v1447 = ((1 << ((*(_DWORD *)(v1440 + 16) >> 19) + 83)) & 0x6000000303) == 0)
              : (v1447 = 1),
                v1447))
          {
            sub_22F0D5A50(v1434);
            sub_22E8FCA40((_QWORD *)v7, v1442, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1434 + 8);
            v1443 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1444 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1444 + 28) & 0x7Eu) - 52 >= 6)
              v1445 = 0;
            else
              v1445 = v1444;
            __src = *(void **)(v1445 + 40);
            sub_22E894538(v1443, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
            v1437 = 1;
            goto LABEL_2156;
          }
          v1437 = 1;
          v1448 = sub_22EB1B954(v7, *(void **)(v1431+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1429));
          if ((v1448 & 1) == 0)
          {
            v1437 = 0;
            v1446 = v1448 & 0xFFFFFFFFFFFFFFFELL;
            goto LABEL_2155;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1433) & 1) == 0)
          {
            v1437 = 0;
            v1446 = v2222;
LABEL_2155:
            *(_QWORD *)(v1431
                      + ((unint64_t)*(unsigned int *)a4 >> 24)
                      + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                      + 8 * v1429) = v1446;
            goto LABEL_2156;
          }
          v1437 = 1;
        }
LABEL_2156:
        v1430 |= v1437;
        if (v1432 == ++v1429)
        {
          v5 = v2154;
          if ((v1430 & 1) != 0)
            return 1;
LABEL_2158:
          v1449 = *(_QWORD *)(a4
                            + ((unint64_t)*(unsigned int *)a4 >> 24)
                            + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                            + 8 * (*(_DWORD *)(a4 + 16) - 1)
                            + 8);
          v8 = v455;
          v1450 = *v455;
LABEL_2316:
          v1558 = sub_22EF5DD84(v1450, *(_QWORD *)(v1449 + 8), 14);
          v1213 = sub_22EF5B848(v1450, v1558, 0);
          goto LABEL_2582;
        }
      }
    case 1561:
    case 1562:
    case 1563:
      LODWORD(__dst) = 0;
      v2170 = v8;
      v182 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v183 = *(_QWORD *)(v182 & 0xFFFFFFFFFFFFFFF0);
      if (v183)
        v184 = *(_BYTE *)(v183 + 16) == 26;
      else
        v184 = 0;
      if (!v184)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v183 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v183 = sub_22F10CF48(*(_QWORD *)(v182 & 0xFFFFFFFFFFFFFFF0));
        else
          v183 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v183 + 16) >> 38)))
        return 1;
      v884 = *(_QWORD *)(v183 + 16);
      v885 = (_QWORD *)(a4 + 8);
      if ((v884 & 0x3FFFC000000000) == 0)
        goto LABEL_1369;
      v2145 = v5;
      v886 = 0;
      v887 = 0;
      v888 = v183 + 40;
      v889 = (unsigned __int16)(v884 >> 38);
      while (1)
      {
        v890 = *(_QWORD *)(v888 + 8 * v886);
        v891 = *(_QWORD **)((char *)&v885[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v886]
                          + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v891;
        v892 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v890 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v892)
          v893 = (*(_DWORD *)(v892 + 16) & 0xFF800FF) == 137887755;
        else
          v893 = 0;
        if (v893)
        {
          v895 = *(_QWORD *)(v891[1] & 0xFFFFFFFFFFFFFFF0);
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v895 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
          {
            v896 = sub_22F10ACF8(v895);
            sub_22EFFAE7C((unsigned int *)a4);
            if (!sub_22EA52F00((_QWORD *)v7, v896, v897))
            {
              sub_22F0D5A50((uint64_t)v891);
              sub_22E8FCA40((_QWORD *)v7, v900, 0xEEEu, 0, (uint64_t)__p);
              *(_QWORD *)&v2218 = v891[1];
              v901 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
              v902 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if ((*(_DWORD *)(v902 + 28) & 0x7Eu) - 52 >= 6)
                v903 = 0;
              else
                v903 = v902;
              __src = *(void **)(v903 + 40);
              sub_22E894538(v901, (uint64_t *)&__src);
              sub_22E903BEC((unsigned int *)__p);
              v894 = 1;
              goto LABEL_1367;
            }
            v891 = *(_QWORD **)((char *)&v885[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v886]
                              + ((unint64_t)*(unsigned int *)a4 >> 24));
          }
          v894 = 1;
          v898 = sub_22EB1B954(v7, v891);
          if ((v898 & 1) == 0)
          {
            v894 = 0;
            v899 = v898 & 0xFFFFFFFFFFFFFFFELL;
LABEL_1362:
            *(_QWORD *)((char *)&v885[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v886]
                      + ((unint64_t)*(unsigned int *)a4 >> 24)) = v899;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v890) & 1) == 0)
          {
            v894 = 0;
            v899 = v2222;
            goto LABEL_1362;
          }
          v894 = 1;
        }
LABEL_1367:
        v887 |= v894;
        if (v889 == ++v886)
        {
          v5 = v2145;
          if ((v887 & 1) == 0)
          {
LABEL_1369:
            *v885 = *(_QWORD *)(*v2170 + 16392);
            v8 = v2170;
            goto LABEL_2936;
          }
          return 1;
        }
      }
    case 1564:
      LODWORD(__dst) = 0;
      v483 = sub_22EF72B64(*v8, 0x61Cu, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v484 = *(_QWORD *)(v483 & 0xFFFFFFFFFFFFFFF0);
      if (v484)
        v485 = *(_BYTE *)(v484 + 16) == 26;
      else
        v485 = 0;
      if (!v485)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v484 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v484 = sub_22F10CF48(*(_QWORD *)(v483 & 0xFFFFFFFFFFFFFFF0));
        else
          v484 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v484 + 16) >> 38)))
        return 1;
      v1539 = *(_QWORD *)(v484 + 16);
      if ((v1539 & 0x3FFFC000000000) == 0)
        goto LABEL_2315;
      v2157 = v5;
      v2188 = v8;
      v1540 = 0;
      v1541 = 0;
      v1542 = a4 + 8;
      v1543 = v484 + 40;
      v1544 = (unsigned __int16)(v1539 >> 38);
      while (1)
      {
        v1545 = *(_QWORD *)(v1543 + 8 * v1540);
        v1546 = *(_QWORD *)(v1542
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1540);
        *(_QWORD *)&v2222 = v1546;
        v1547 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1545 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1547)
          v1548 = (*(_DWORD *)(v1547 + 16) & 0xFF800FF) == 137887755;
        else
          v1548 = 0;
        if (v1548)
        {
          v1550 = *(_QWORD *)(v1546 + 8);
          sub_22EFFAE7C((unsigned int *)a4);
          if ((sub_22EA52D74((_QWORD *)v7, v1550, v1551, 0) & 1) == 0)
          {
            sub_22F0D5A50(v1546);
            sub_22E8FCA40((_QWORD *)v7, v1554, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1546 + 8);
            v1555 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1556 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1556 + 28) & 0x7Eu) - 52 >= 6)
              v1557 = 0;
            else
              v1557 = v1556;
            __src = *(void **)(v1557 + 40);
            sub_22E894538(v1555, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
            v1549 = 1;
            goto LABEL_2313;
          }
          v1549 = 1;
          v1552 = sub_22EB1B954(v7, *(void **)(v1542+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1540));
          if ((v1552 & 1) == 0)
          {
            v1549 = 0;
            v1553 = v1552 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2308:
            *(_QWORD *)(v1542
                      + ((unint64_t)*(unsigned int *)a4 >> 24)
                      + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                      + 8 * v1540) = v1553;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1545) & 1) == 0)
          {
            v1549 = 0;
            v1553 = v2222;
            goto LABEL_2308;
          }
          v1549 = 1;
        }
LABEL_2313:
        v1541 |= v1549;
        if (v1544 == ++v1540)
        {
          v5 = v2157;
          v8 = v2188;
          if ((v1541 & 1) != 0)
            return 1;
LABEL_2315:
          v1449 = *(_QWORD *)(a4
                            + ((unint64_t)*(unsigned int *)a4 >> 24)
                            + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                            + 8 * (*(_DWORD *)(a4 + 16) - 1)
                            + 8);
          v1450 = *v8;
          goto LABEL_2316;
        }
      }
    case 1565:
      LODWORD(__dst) = 0;
      v604 = v8;
      v605 = sub_22EF72B64(*v8, 0x61Du, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v606 = *(_QWORD *)(v605 & 0xFFFFFFFFFFFFFFF0);
      if (v606)
        v607 = *(_BYTE *)(v606 + 16) == 26;
      else
        v607 = 0;
      if (!v607)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v606 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v606 = sub_22F10CF48(*(_QWORD *)(v605 & 0xFFFFFFFFFFFFFFF0));
        else
          v606 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v606 + 16) >> 38)))
        return 1;
      v1792 = *(_QWORD *)(v606 + 16);
      v1793 = (_QWORD *)(a4 + 8);
      if ((v1792 & 0x3FFFC000000000) == 0)
        goto LABEL_2693;
      v2163 = v5;
      v1794 = 0;
      v1795 = 0;
      v2138 = v606 + 40;
      v1796 = (unsigned __int16)(v1792 >> 38);
      while (1)
      {
        v1797 = *(_QWORD *)(v2138 + 8 * v1794);
        v1798 = *(_QWORD *)((char *)&v1793[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1794]
                          + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1798;
        v1799 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1797 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1799)
          v1800 = (*(_DWORD *)(v1799 + 16) & 0xFF800FF) == 137887755;
        else
          v1800 = 0;
        if (v1800)
        {
          v1802 = *(_QWORD *)(*(_QWORD *)(v1798 + 8) & 0xFFFFFFFFFFFFFFF0);
          if ((!v1802 || *(_BYTE *)(v1802 + 16) != 39)
            && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1802 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
             || (v1802 = sub_22F10CF48(v1802)) == 0)
            || (v1803 = *(_QWORD *)(v1802 + 32), !v1794)
            && ((v1807 = *(_QWORD *)((v1803 & 0xFFFFFFFFFFFFFFF0) + 8), (v1807 & 8) == 0)
             || (*(_QWORD *)((v1807 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0x7000)
            || (sub_22EFFAE7C((unsigned int *)a4), (sub_22EA52D74((_QWORD *)v7, v1803, v1804, 0) & 1) == 0))
          {
            sub_22F0D5A50(v1798);
            sub_22E8FCA40((_QWORD *)v7, v1808, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1798 + 8);
            v1809 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1810 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1810 + 28) & 0x7Eu) - 52 >= 6)
              v1811 = 0;
            else
              v1811 = v1810;
            __src = *(void **)(v1811 + 40);
            sub_22E894538(v1809, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
            v1801 = 1;
            goto LABEL_2691;
          }
          v1801 = 1;
          v1805 = sub_22EB1B954(v7, *(void **)((char *)&v1793[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1794]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
          if ((v1805 & 1) == 0)
          {
            v1801 = 0;
            v1806 = v1805 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2684:
            *(_QWORD *)((char *)&v1793[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1794]
                      + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1806;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1797) & 1) == 0)
          {
            v1801 = 0;
            v1806 = v2222;
            goto LABEL_2684;
          }
          v1801 = 1;
        }
LABEL_2691:
        v1795 |= v1801;
        if (v1796 == ++v1794)
        {
          v5 = v2163;
          if ((v1795 & 1) != 0)
            return 1;
LABEL_2693:
          v1812 = a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
          v1422 = *(_QWORD *)(v1812 + 8);
          v170 = *(_QWORD *)(v1812 + 24);
          v1813 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v1422 + 8) & 0xFFFFFFFFFFFFFFF0));
          if (*(_QWORD *)(*(_QWORD *)((v1813 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v170 + 8) & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
          {
            v8 = v604;
            *v1793 = *(_QWORD *)(*v604 + 16392);
            goto LABEL_2936;
          }
          sub_22EFFAE7C((unsigned int *)a4);
          sub_22E8FCA40((_QWORD *)v7, v1814, 0xEEAu, 0, (uint64_t)__p);
          LODWORD(__src) = 0;
          v1426 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
          v1427 = 2;
LABEL_2695:
          LODWORD(v2204) = v1427;
          v1477 = (int8x8_t *)&v2204;
LABEL_2696:
          v1815 = sub_22E8900C4(v1426, (int *)v1477);
          sub_22F0D4E74(v1422);
          *(_QWORD *)&v2222 = v1816;
          v1817 = sub_22E8906A0(v1815, (uint64_t *)&v2222);
LABEL_2921:
          v506 = v1817;
          v753 = v170;
LABEL_2922:
          sub_22F0D4E74(v753);
          *(_QWORD *)&v2218 = v1932;
          v1026 = (uint64_t *)&v2218;
LABEL_2923:
          v1289 = (_BYTE *)v506;
LABEL_2924:
          sub_22E8906A0((uint64_t)v1289, v1026);
LABEL_2925:
          v387 = (unsigned int *)__p;
LABEL_2926:
          sub_22E903BEC(v387);
          return 1;
        }
      }
    case 1580:
      LODWORD(__dst) = 0;
      v377 = v8;
      v388 = sub_22EF72B64(*v8, 0x62Cu, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v389 = *(_QWORD *)(v388 & 0xFFFFFFFFFFFFFFF0);
      if (v389)
        v390 = *(_BYTE *)(v389 + 16) == 26;
      else
        v390 = 0;
      if (!v390)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v389 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v389 = sub_22F10CF48(*(_QWORD *)(v388 & 0xFFFFFFFFFFFFFFF0));
        else
          v389 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v389 + 16) >> 38)))
        return 1;
      v1354 = *(_QWORD *)(v389 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v1354 & 0x3FFFC000000000) == 0)
        goto LABEL_2933;
      v2152 = v5;
      v1355 = 0;
      v1332 = 0;
      v1356 = v389 + 40;
      v1357 = (unsigned __int16)(v1354 >> 38);
      while (1)
      {
        v1358 = *(_QWORD *)(v1356 + 8 * v1355);
        v1359 = *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1355]
                                    + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1359;
        v1360 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1358 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1360 || (*(_DWORD *)(v1360 + 16) & 0xFF800FF) != 137887755)
          break;
        v1364 = *(_QWORD *)(*(_QWORD *)(v1359 + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((!v1364 || *(_BYTE *)(v1364 + 16) != 39)
          && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1364 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
           || (v1364 = sub_22F10CF48(v1364)) == 0)
          || (v1365 = *(_QWORD *)((*(_QWORD *)(v1364 + 32) & 0xFFFFFFFFFFFFFFF0) + 8), (v1365 & 8) == 0)
          || ((v1366 = *(_DWORD *)((v1365 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800, v1366 != 26624)
            ? (v1367 = v1366 == 22528)
            : (v1367 = 1),
              !v1367))
        {
LABEL_2054:
          sub_22F0D5A50(v1359);
          sub_22E8FCA40((_QWORD *)v7, v1373, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1359 + 8);
          v1374 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1375 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1375 + 28) & 0x7Eu) - 52 >= 6)
            v1376 = 0;
          else
            v1376 = v1375;
          __src = *(void **)(v1376 + 40);
          sub_22E894538(v1374, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_2058:
          v1362 = 1;
          goto LABEL_2059;
        }
        v1368 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1364 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v1369 = *(_DWORD *)(v1368 + 16) & 0xFF800FF;
        if (v1355 == 5)
        {
          if (v1368)
            v1370 = v1369 == 91226123;
          else
            v1370 = 0;
          if (!v1370)
            goto LABEL_2054;
        }
        else
        {
          if (v1368)
            v1372 = v1369 == 86507531;
          else
            v1372 = 0;
          if (!v1372)
            goto LABEL_2054;
        }
        v1362 = 1;
        v1371 = sub_22EB1B954(v7, *(void **)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1355]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v1371 & 1) == 0)
        {
          v1362 = 0;
          v1363 = v1371 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2031:
          *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1355]
                              + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1363;
        }
LABEL_2059:
        v1332 |= v1362;
        if (v1357 == ++v1355)
          goto LABEL_2060;
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1358) & 1) != 0)
        goto LABEL_2058;
      v1362 = 0;
      v1363 = v2222;
      goto LABEL_2031;
    case 1581:
      LODWORD(__dst) = 0;
      v600 = v8;
      v601 = sub_22EF72B64(*v8, 0x62Du, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v602 = *(_QWORD *)(v601 & 0xFFFFFFFFFFFFFFF0);
      if (v602)
        v603 = *(_BYTE *)(v602 + 16) == 26;
      else
        v603 = 0;
      if (!v603)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v602 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v602 = sub_22F10CF48(*(_QWORD *)(v601 & 0xFFFFFFFFFFFFFFF0));
        else
          v602 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v602 + 16) >> 38)))
        return 1;
      v1767 = *(_QWORD *)(v602 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v1767 & 0x3FFFC000000000) == 0)
        goto LABEL_2664;
      v2162 = v5;
      v1768 = 0;
      v1769 = 0;
      v1770 = v602 + 40;
      v1771 = (unsigned __int16)(v1767 >> 38);
      while (1)
      {
        v1772 = *(_QWORD *)(v1770 + 8 * v1768);
        v1773 = *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1768]
                                    + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1773;
        v1774 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1772 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1774 || (*(_DWORD *)(v1774 + 16) & 0xFF800FF) != 137887755)
          break;
        v1778 = *(_QWORD *)(*(_QWORD *)(v1773 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1778 || *(_BYTE *)(v1778 + 16) != 39)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1778 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
            goto LABEL_2657;
          v1778 = sub_22F10CF48(v1778);
          if (!v1778)
            goto LABEL_2657;
        }
        v1779 = *(_QWORD *)((*(_QWORD *)(v1778 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v1779 & 8) == 0)
          goto LABEL_2657;
        v1780 = *(_DWORD *)((v1779 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800;
        v1781 = v1780 == 26624 || v1780 == 22528;
        if (!v1781
          || ((v1782 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1778 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0),
               v30 = v1782 == 0,
               v1783 = *(_DWORD *)(v1782 + 16) & 0xFF800FF,
               !v30)
            ? (v1784 = v1783 == 90701835)
            : (v1784 = 0),
              v1784 ? (v1785 = 0) : (v1785 = 1),
              v1783 != 91226123 ? (v1786 = v1785 == 0) : (v1786 = 1),
              !v1786))
        {
LABEL_2657:
          sub_22F0D5A50(v1773);
          sub_22E8FCA40((_QWORD *)v7, v1788, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1773 + 8);
          v1789 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1790 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1790 + 28) & 0x7Eu) - 52 >= 6)
            v1791 = 0;
          else
            v1791 = v1790;
          __src = *(void **)(v1791 + 40);
          sub_22E894538(v1789, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_2661:
          v1776 = 1;
          goto LABEL_2662;
        }
        v1776 = 1;
        v1787 = sub_22EB1B954(v7, *(void **)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1768]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v1787 & 1) == 0)
        {
          v1776 = 0;
          v1777 = v1787 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2633:
          *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1768]
                              + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1777;
        }
LABEL_2662:
        v1769 |= v1776;
        if (v1771 == ++v1768)
        {
          v5 = v2162;
          if ((v1769 & 1) != 0)
            return 1;
LABEL_2664:
          v8 = v600;
          v1708 = *v600;
LABEL_2934:
          v1070 = *(_QWORD *)(v1708 + 16392);
          goto LABEL_2935;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1772) & 1) != 0)
        goto LABEL_2661;
      v1776 = 0;
      v1777 = v2222;
      goto LABEL_2633;
    case 1584:
      LODWORD(__dst) = 0;
      v377 = v8;
      v378 = sub_22EF72B64(*v8, 0x630u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v379 = *(_QWORD *)(v378 & 0xFFFFFFFFFFFFFFF0);
      if (v379)
        v380 = *(_BYTE *)(v379 + 16) == 26;
      else
        v380 = 0;
      if (!v380)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v379 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v379 = sub_22F10CF48(*(_QWORD *)(v378 & 0xFFFFFFFFFFFFFFF0));
        else
          v379 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v379 + 16) >> 38)))
        return 1;
      v1330 = *(_QWORD *)(v379 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v1330 & 0x3FFFC000000000) == 0)
        goto LABEL_2933;
      v2152 = v5;
      v1331 = 0;
      v1332 = 0;
      v1333 = v379 + 40;
      v1334 = (unsigned __int16)(v1330 >> 38);
      while (1)
      {
        v1335 = *(_QWORD *)(v1333 + 8 * v1331);
        v1336 = *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1331]
                                    + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1336;
        v1337 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1335 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1337 || (*(_DWORD *)(v1337 + 16) & 0xFF800FF) != 137887755)
          break;
        v1341 = *(_QWORD *)(*(_QWORD *)(v1336 + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((!v1341 || *(_BYTE *)(v1341 + 16) != 39)
          && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1341 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
           || (v1341 = sub_22F10CF48(v1341)) == 0)
          || (v1342 = *(_QWORD *)((*(_QWORD *)(v1341 + 32) & 0xFFFFFFFFFFFFFFF0) + 8), (v1342 & 8) == 0)
          || ((v1343 = *(_DWORD *)((v1342 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800, v1343 != 26624)
            ? (v1344 = v1343 == 22528)
            : (v1344 = 1),
              !v1344))
        {
LABEL_2014:
          sub_22F0D5A50(v1336);
          sub_22E8FCA40((_QWORD *)v7, v1350, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1336 + 8);
          v1351 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1352 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1352 + 28) & 0x7Eu) - 52 >= 6)
            v1353 = 0;
          else
            v1353 = v1352;
          __src = *(void **)(v1353 + 40);
          sub_22E894538(v1351, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_2018:
          v1339 = 1;
          goto LABEL_2019;
        }
        v1345 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1341 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v1346 = *(_DWORD *)(v1345 + 16) & 0xFF800FF;
        if (v1331 == 5)
        {
          if (v1345)
            v1347 = v1346 == 91226123;
          else
            v1347 = 0;
          if (!v1347)
            goto LABEL_2014;
        }
        else
        {
          if (v1345)
            v1349 = v1346 == 86507531;
          else
            v1349 = 0;
          if (!v1349)
            goto LABEL_2014;
        }
        v1339 = 1;
        v1348 = sub_22EB1B954(v7, *(void **)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1331]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v1348 & 1) == 0)
        {
          v1339 = 0;
          v1340 = v1348 & 0xFFFFFFFFFFFFFFFELL;
LABEL_1991:
          *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1331]
                              + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1340;
        }
LABEL_2019:
        v1332 |= v1339;
        if (v1334 == ++v1331)
        {
LABEL_2060:
          v5 = v2152;
          if ((v1332 & 1) != 0)
            return 1;
LABEL_2933:
          v8 = v377;
          v1708 = *v377;
          goto LABEL_2934;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1335) & 1) != 0)
        goto LABEL_2018;
      v1339 = 0;
      v1340 = v2222;
      goto LABEL_1991;
    case 1597:
    case 1599:
    case 1600:
    case 1601:
    case 1603:
    case 1606:
    case 1607:
    case 1608:
    case 1609:
    case 1610:
    case 1611:
    case 1612:
    case 1614:
    case 1615:
    case 1616:
    case 1617:
    case 1618:
    case 1619:
      v51 = (_QWORD *)v7;
      v52 = v5;
      v53 = (unsigned int *)a4;
      v54 = -1;
      goto LABEL_50;
    case 1598:
      v51 = (_QWORD *)v7;
      v52 = 1598;
      v53 = (unsigned int *)a4;
      v54 = -1;
      v55 = 1;
      goto LABEL_51;
    case 1602:
      v51 = (_QWORD *)v7;
      v52 = 1602;
      v53 = (unsigned int *)a4;
      v54 = 1;
      goto LABEL_50;
    case 1604:
      v51 = (_QWORD *)v7;
      v52 = 1604;
      v53 = (unsigned int *)a4;
      v54 = 2;
LABEL_50:
      v55 = 0;
LABEL_51:
      if ((sub_22E97AFD0(v51, v52, v53, v54, v55) & 1) == 0)
        return a4;
      return 1;
    case 1605:
    case 1613:
      *(_DWORD *)__p = 0;
      v220 = sub_22EF72B64(*v8, v5, __p, 0);
      if (*(_DWORD *)__p)
        return 1;
      v221 = *(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0);
      if (v221)
        v222 = *(_BYTE *)(v221 + 16) == 26;
      else
        v222 = 0;
      if (!v222)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v221 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v221 = sub_22F10CF48(*(_QWORD *)(v220 & 0xFFFFFFFFFFFFFFF0));
        else
          v221 = 0;
      }
      if ((sub_22E99CD24((_QWORD *)v7, (unsigned int *)a4, v221, (unsigned int (*)(uint64_t, uint64_t))sub_22E99D6E0) & 1) != 0|| sub_22E99D5C0((_QWORD *)v7, (unsigned int *)a4, 0xFFFFFFFF))
      {
        return 1;
      }
LABEL_1543:
      v673 = a4
           + ((unint64_t)*(unsigned int *)a4 >> 24)
           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      goto LABEL_1544;
    case 1620:
    case 1621:
    case 1622:
    case 1623:
    case 1624:
    case 1625:
    case 1626:
    case 1627:
      *(_DWORD *)__p = 0;
      v80 = sub_22EF72B64(*v8, v5, __p, 0);
      if (*(_DWORD *)__p)
        return 1;
      v81 = *(_QWORD *)(v80 & 0xFFFFFFFFFFFFFFF0);
      if (v81)
        v82 = *(_BYTE *)(v81 + 16) == 26;
      else
        v82 = 0;
      if (!v82)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v81 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v81 = sub_22F10CF48(*(_QWORD *)(v80 & 0xFFFFFFFFFFFFFFF0));
        else
          v81 = 0;
      }
      if (sub_22E99CD24((_QWORD *)v7, (unsigned int *)a4, v81, (unsigned int (*)(uint64_t, uint64_t))sub_22E99D7A0))return 1;
      v673 = a4
           + ((unint64_t)*(unsigned int *)a4 >> 24)
           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
           + 8 * (*(_DWORD *)(a4 + 16) - 1);
LABEL_1544:
      v447 = *(_QWORD *)(*(_QWORD *)(v673 + 8) + 8);
      goto LABEL_1545;
    case 1628:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return 1;
      v539 = *(unsigned __int8 **)(a4
                                 + ((unint64_t)*(unsigned int *)a4 >> 24)
                                 + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                 + 8);
      if (*v539 == 233 && (*(_DWORD *)v539 & 0x7C0000) == 0x100000)
        v539 = (unsigned __int8 *)*((_QWORD *)v539 + 2);
      if (!sub_22F0017D4(v539))
      {
        sub_22F0D5A50((uint64_t)v539);
        sub_22E8FCA40((_QWORD *)v7, v1236, 0xA81u, 0, (uint64_t)__p);
        LODWORD(v2222) = 1;
        sub_22E8900C4((uint64_t)__p, (int *)&v2222);
        goto LABEL_2925;
      }
      v540 = *(unsigned __int8 **)(a4
                                 + ((unint64_t)*(unsigned int *)a4 >> 24)
                                 + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                 + 8);
      if (*v540 != 233)
        v540 = (unsigned __int8 *)(sub_22EB2941C((_QWORD *)v7, 0, 0, 4, *(_QWORD *)(a4+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8)) & 0xFFFFFFFFFFFFFFFELL);
      v541 = *(_QWORD *)(v7 + 88);
      v542 = sub_22EF5DD84(v541, *(_QWORD *)(v541 + 16392), 13);
      v543 = sub_22EF5B848(v541, v542, 0);
      v451 = sub_22E90092C(v7, (uint64_t)v540, v543, 1, 0, 0);
      goto LABEL_825;
    case 1645:
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, 1u))
        return 1;
      v448 = *(_QWORD *)(a4
                       + ((unint64_t)*(unsigned int *)a4 >> 24)
                       + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                       + 8);
      *(_QWORD *)&v2222 = *(_QWORD *)(v448 + 8);
      v449 = (uint64_t *)(v2222 & 0xFFFFFFFFFFFFFFF0);
      v450 = *(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v450 + 17) & 4) != 0)
        return a4;
      if ((sub_22F1105F0(v450) & 1) != 0 || sub_22F110DD0(*v449))
      {
        *(_QWORD *)(a4 + 8) = *(_QWORD *)(*(_QWORD *)(v7 + 88) + 16400);
        v451 = sub_22EB1A358(v7, v448, 0);
        goto LABEL_825;
      }
      v1538 = v448;
LABEL_2753:
      sub_22F0D5A50(v1538);
      sub_22E8FCA40((_QWORD *)v7, v1865, 0xEEEu, 0, (uint64_t)__p);
      v1866 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2222);
      v1867 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
      if ((*(_DWORD *)(v1867 + 28) & 0x7Eu) - 52 >= 6)
        v1868 = 0;
      else
        v1868 = v1867;
      *(_QWORD *)&v2218 = *(_QWORD *)(v1868 + 40);
      sub_22E894538(v1866, (uint64_t *)&v2218);
      goto LABEL_2925;
    case 1646:
    case 1647:
    case 1649:
    case 1650:
    case 1652:
    case 1655:
    case 1658:
    case 1659:
    case 1660:
    case 1661:
    case 1662:
    case 1665:
    case 1666:
    case 1667:
    case 1669:
    case 1670:
    case 1672:
    case 1673:
    case 1674:
    case 1675:
    case 1676:
    case 1677:
    case 1678:
    case 1685:
    case 1688:
    case 1694:
    case 1695:
    case 1700:
    case 1701:
    case 1702:
    case 1704:
    case 1705:
    case 1706:
    case 1707:
    case 1708:
    case 1709:
      v44 = (_QWORD *)v7;
      v45 = v5;
      goto LABEL_41;
    case 1648:
      v44 = (_QWORD *)v7;
      v45 = 1648;
      goto LABEL_94;
    case 1651:
      v44 = (_QWORD *)v7;
      v45 = 1651;
      goto LABEL_94;
    case 1653:
      v44 = (_QWORD *)v7;
      v45 = 1653;
      goto LABEL_41;
    case 1654:
      v44 = (_QWORD *)v7;
      v45 = 1654;
      goto LABEL_94;
    case 1668:
      v44 = (_QWORD *)v7;
      v45 = 1668;
      goto LABEL_94;
    case 1671:
      v44 = (_QWORD *)v7;
      v45 = 1671;
      goto LABEL_94;
    case 1679:
      v534 = (_QWORD *)v7;
      v535 = 1679;
      goto LABEL_827;
    case 1680:
      v44 = (_QWORD *)v7;
      v45 = 1680;
      goto LABEL_94;
    case 1681:
      *(_DWORD *)__p = 0;
      v472 = sub_22EF72B64(*v8, 0x691u, __p, 0);
      if (*(_DWORD *)__p)
        return 1;
      v473 = *(_QWORD *)(v472 & 0xFFFFFFFFFFFFFFF0);
      if (v473)
        v474 = *(_BYTE *)(v473 + 16) == 26;
      else
        v474 = 0;
      if (!v474)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v473 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v473 = sub_22F10CF48(*(_QWORD *)(v472 & 0xFFFFFFFFFFFFFFF0));
        else
          v473 = 0;
      }
      if ((sub_22E99CD24((_QWORD *)v7, (unsigned int *)a4, v473, (unsigned int (*)(uint64_t, uint64_t))sub_22E99CF1C) & 1) != 0|| sub_22E99CFDC((_QWORD *)v7, (unsigned int *)a4, 1)|| sub_22E99D140((_QWORD *)v7, (unsigned int *)a4, 1))
      {
        return 1;
      }
      v1508 = *v8;
      v639 = *(_QWORD *)(*v8 + 16480);
      v1509 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4
                                                + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                + 8)
                                    + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v1509)
      {
        v1510 = *(_DWORD *)(v1509 + 16);
        if (v1510 == 56)
          goto LABEL_2249;
      }
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1509 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56)
      {
        v1511 = sub_22F10CF48(v1509);
        if (v1511)
        {
          v1509 = v1511;
          v1508 = *v8;
          v1510 = *(_DWORD *)(v1509 + 16);
LABEL_2249:
          v639 = sub_22EF63724(v1508, v639, *(unsigned int *)(v1509 + 20), (v1510 >> 19) & 0xF);
        }
      }
      goto LABEL_2293;
    case 1682:
      v420 = (_QWORD *)v7;
      v421 = 1682;
      goto LABEL_642;
    case 1683:
      v44 = (_QWORD *)v7;
      v45 = 1683;
      goto LABEL_41;
    case 1684:
      v534 = (_QWORD *)v7;
      v535 = 1684;
LABEL_827:
      if ((sub_22E97B0E0(v534, v535, (unsigned int *)a4) & 1) == 0)
        return a4;
      return 1;
    case 1686:
      v44 = (_QWORD *)v7;
      v45 = 1686;
      goto LABEL_41;
    case 1687:
      v44 = (_QWORD *)v7;
      v45 = 1687;
      goto LABEL_94;
    case 1692:
      v44 = (_QWORD *)v7;
      v45 = 1692;
      goto LABEL_41;
    case 1693:
      v420 = (_QWORD *)v7;
      v421 = 1693;
      goto LABEL_642;
    case 1696:
      v44 = (_QWORD *)v7;
      v45 = 1696;
      goto LABEL_94;
    case 1697:
      LODWORD(__dst) = 0;
      v462 = sub_22EF72B64(*v8, 0x6A1u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v463 = *(_QWORD *)(v462 & 0xFFFFFFFFFFFFFFF0);
      if (v463)
        v464 = *(_BYTE *)(v463 + 16) == 26;
      else
        v464 = 0;
      if (!v464)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v463 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v463 = sub_22F10CF48(*(_QWORD *)(v462 & 0xFFFFFFFFFFFFFFF0));
        else
          v463 = 0;
      }
      v1478 = sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v463 + 16) >> 38));
      if ((v1478 & 1) != 0)
        return 1;
      v1479 = *(_QWORD *)(v463 + 16);
      if ((v1479 & 0x3FFFC000000000) == 0)
        goto LABEL_2220;
      v2187 = v8;
      v1480 = (_QWORD *)v7;
      v1481 = 0;
      v1482 = 0;
      v1483 = a4 + 8;
      v1484 = v463 + 40;
      v1485 = (unsigned __int16)(v1479 >> 38);
      while (1)
      {
        v1486 = *(_QWORD *)(v1484 + 8 * v1481);
        v1487 = *(_QWORD *)(v1483
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1481);
        *(_QWORD *)&v2222 = v1487;
        v1488 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1486 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1488 || (*(_DWORD *)(v1488 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v1481 >= 2)
        {
          if (sub_22E99DB48(*(_QWORD *)(v1487 + 8)))
          {
LABEL_2213:
            sub_22F0D5A50(v1487);
            sub_22E8FCA40(v1480, v1492, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1487 + 8);
            v1493 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1494 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1494 + 28) & 0x7Eu) - 52 >= 6)
              v1495 = 0;
            else
              v1495 = v1494;
            __src = *(void **)(v1495 + 40);
            sub_22E894538(v1493, (uint64_t *)&__src);
            v1478 = (uint64_t)sub_22E903BEC((unsigned int *)__p);
LABEL_2217:
            v1490 = 1;
            goto LABEL_2218;
          }
        }
        else if (sub_22E99CF1C(v1478, v1487))
        {
          goto LABEL_2213;
        }
        v1490 = 1;
        v1478 = sub_22EB1B954((uint64_t)v1480, *(void **)(v1483+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1481));
        if ((v1478 & 1) == 0)
        {
          v1490 = 0;
          v1491 = v1478 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2211:
          *(_QWORD *)(v1483
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                    + 8 * v1481) = v1491;
        }
LABEL_2218:
        v1482 |= v1490;
        if (v1485 == ++v1481)
        {
          v7 = (uint64_t)v1480;
          v8 = v2187;
          if ((v1482 & 1) != 0)
            return 1;
LABEL_2220:
          if (sub_22E99D860((_QWORD *)v7, (unsigned int *)a4))
            return 1;
          goto LABEL_2550;
        }
      }
      v1478 = sub_22E9969B8((uint64_t)v1480, (unint64_t *)&v2222, v1486);
      if ((v1478 & 1) != 0)
        goto LABEL_2217;
      v1490 = 0;
      v1491 = v2222;
      goto LABEL_2211;
    case 1698:
      v44 = (_QWORD *)v7;
      v45 = 1698;
      goto LABEL_41;
    case 1699:
      v420 = (_QWORD *)v7;
      v421 = 1699;
LABEL_642:
      if ((sub_22E97B36C(v420, v421, (unsigned int *)a4) & 1) == 0)
        return a4;
      return 1;
    case 1703:
      LODWORD(__src) = 0;
      v478 = sub_22EF72B64(*v8, 0x6A7u, &__src, 0);
      if ((_DWORD)__src)
        return 1;
      v479 = *(_QWORD *)(v478 & 0xFFFFFFFFFFFFFFF0);
      if (v479)
        v480 = *(_BYTE *)(v479 + 16) == 26;
      else
        v480 = 0;
      if (!v480)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v479 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v479 = sub_22F10CF48(*(_QWORD *)(v478 & 0xFFFFFFFFFFFFFFF0));
        else
          v479 = 0;
      }
      if ((sub_22E99CD24((_QWORD *)v7, (unsigned int *)a4, v479, (unsigned int (*)(uint64_t, uint64_t))sub_22E99DC58) & 1) != 0)return 1;
      v1536 = a4
            + ((unint64_t)*(unsigned int *)a4 >> 24)
            + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
      v639 = *(_QWORD *)(*(_QWORD *)(v1536 + 8) + 8);
      *(_QWORD *)&v2222 = *(_QWORD *)(*(_QWORD *)(v1536 + 16) + 8);
      v1537 = *(_QWORD *)(v2222 & 0xFFFFFFFFFFFFFFF0);
      if (!v1537 || *(_BYTE *)(v1537 + 16) != 39)
        v1537 = sub_22F10CF48(v1537);
      if (*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v1537 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v639 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
        goto LABEL_2293;
      v1538 = *(_QWORD *)(a4
                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                        + 16);
      goto LABEL_2753;
    case 1710:
      v44 = (_QWORD *)v7;
      v45 = 1710;
LABEL_94:
      v46 = (unsigned int *)a4;
      v47 = 0;
      goto LABEL_95;
    case 1711:
      v44 = (_QWORD *)v7;
      v45 = 1711;
LABEL_41:
      v46 = (unsigned int *)a4;
      v47 = 1;
LABEL_95:
      if ((sub_22E97A810(v44, v45, v46, v47) & 1) == 0)
        return a4;
      return 1;
    case 1712:
    case 1713:
    case 1716:
    case 1717:
    case 1720:
    case 1721:
    case 1722:
    case 1725:
    case 1726:
    case 1727:
    case 1728:
      LODWORD(__dst) = 0;
      v2169 = v8;
      v66 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v67 = *(_QWORD *)(v66 & 0xFFFFFFFFFFFFFFF0);
      if (v67)
        v68 = *(_BYTE *)(v67 + 16) == 26;
      else
        v68 = 0;
      if (!v68)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v67 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v67 = sub_22F10CF48(*(_QWORD *)(v66 & 0xFFFFFFFFFFFFFFF0));
        else
          v67 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v67 + 16) >> 38)))
        return 1;
      v314 = *(_QWORD *)(v67 + 16);
      v315 = (_QWORD *)(a4 + 8);
      if ((v314 & 0x3FFFC000000000) == 0)
        goto LABEL_500;
      v316 = v5;
      v317 = 0;
      v318 = 0;
      v319 = (unsigned __int16)(v314 >> 38);
      while (1)
      {
        v320 = *(_QWORD *)(v67 + 40 + 8 * v317);
        v321 = *(_QWORD *)((char *)&v315[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v317]
                         + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v321;
        v322 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v320 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v322 || (*(_DWORD *)(v322 + 16) & 0xFF800FF) != 137887755)
          break;
        if (sub_22E99DD74(v321, v316))
        {
          sub_22F0D5A50(v321);
          sub_22E8FCA40((_QWORD *)v7, v326, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v321 + 8);
          v327 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v328 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v328 + 28) & 0x7Eu) - 52 >= 6)
            v329 = 0;
          else
            v329 = v328;
          __src = *(void **)(v329 + 40);
          sub_22E894538(v327, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_494:
          v324 = 1;
          goto LABEL_498;
        }
        v324 = 1;
        v330 = sub_22EB1B954(v7, *(void **)((char *)&v315[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v317]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v330 & 1) == 0)
        {
          v324 = 0;
          v325 = v330 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_497;
        }
LABEL_498:
        v318 |= v324;
        if (v319 == ++v317)
        {
          v5 = v316;
          if ((v318 & 1) != 0)
            return 1;
LABEL_500:
          *v315 = *(_QWORD *)(v67 + 24);
          goto LABEL_501;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v320) & 1) == 0)
      {
        v324 = 0;
        v325 = v2222;
LABEL_497:
        *(_QWORD *)((char *)&v315[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v317]
                  + ((unint64_t)*(unsigned int *)a4 >> 24)) = v325;
        goto LABEL_498;
      }
      goto LABEL_494;
    case 1731:
    case 1734:
    case 1735:
    case 1738:
    case 1739:
    case 1740:
    case 1741:
    case 1742:
    case 1743:
    case 1744:
    case 1745:
    case 1746:
    case 1747:
    case 1748:
    case 1749:
    case 1750:
    case 1751:
    case 1752:
    case 1753:
    case 1754:
    case 1757:
    case 1822:
    case 1823:
    case 1826:
    case 1827:
    case 1828:
    case 1829:
    case 1830:
    case 1831:
    case 1832:
    case 1833:
    case 1834:
    case 1835:
    case 1836:
    case 1837:
    case 1838:
    case 1839:
    case 1840:
    case 1841:
    case 1842:
      v35 = (_QWORD *)v7;
      v36 = v5;
      goto LABEL_34;
    case 1758:
    case 1759:
    case 1760:
    case 1761:
    case 1762:
    case 1763:
    case 1764:
    case 1765:
    case 1766:
    case 1767:
    case 1768:
    case 1769:
    case 1770:
    case 1771:
    case 1772:
    case 1773:
      LODWORD(__dst) = 0;
      sub_22EF72B64(*v8, v5, &__dst, 0);
      if (!(_DWORD)__dst)
        __asm { BR              X10 }
      return 1;
    case 1774:
    case 1775:
      LODWORD(__dst) = 0;
      v226 = v8;
      v227 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v228 = *(_QWORD *)(v227 & 0xFFFFFFFFFFFFFFF0);
      if (v228)
        v229 = *(_BYTE *)(v228 + 16) == 26;
      else
        v229 = 0;
      if (!v229)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v228 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v228 = sub_22F10CF48(*(_QWORD *)(v227 & 0xFFFFFFFFFFFFFFF0));
        else
          v228 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v228 + 16) >> 38)))
        return 1;
      v1046 = *(_QWORD *)(v228 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v1046 & 0x3FFFC000000000) == 0)
        goto LABEL_1604;
      v2149 = v5;
      v1047 = 0;
      v1048 = 0;
      v1049 = v228 + 40;
      v1050 = (unsigned __int16)(v1046 >> 38);
      while (1)
      {
        v1051 = *(_QWORD *)(v1049 + 8 * v1047);
        v1052 = *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1047]
                                    + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1052;
        v1053 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1051 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1053)
          v1054 = (*(_DWORD *)(v1053 + 16) & 0xFF800FF) == 137887755;
        else
          v1054 = 0;
        if (v1054)
        {
          v1056 = *(_QWORD *)(v1052 + 8) & 0xFFFFFFFFFFFFFFF0;
          v1057 = *(_QWORD *)v1056;
          if (*(_QWORD *)v1056 && *(_BYTE *)(v1057 + 16) == 56
            || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1057 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
            && (v1057 = sub_22F10CF48(v1057)) != 0)
          {
            v1058 = *(_DWORD *)(v1057 + 20);
            v119 = v1058 > 0x10;
            v1059 = (1 << v1058) & 0x1011C;
            if (v119 || v1059 == 0)
            {
LABEL_1594:
              sub_22F0D5A50(v1052);
              sub_22E8FCA40((_QWORD *)v7, v1063, 0xEEEu, 0, (uint64_t)__p);
              *(_QWORD *)&v2218 = *(_QWORD *)(v1052 + 8);
              v1064 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
              v1065 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if ((*(_DWORD *)(v1065 + 28) & 0x7Eu) - 52 >= 6)
                v1066 = 0;
              else
                v1066 = v1065;
              __src = *(void **)(v1066 + 40);
              sub_22E894538(v1064, (uint64_t *)&__src);
              sub_22E903BEC((unsigned int *)__p);
              v1055 = 1;
              goto LABEL_1602;
            }
            v1056 = *(_QWORD *)(v1057 + 32) & 0xFFFFFFFFFFFFFFF0;
          }
          v1061 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1056 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v1061)
            v1062 = (*(_DWORD *)(v1061 + 16) & 0xFF800FF) == 87031819;
          else
            v1062 = 0;
          if (!v1062)
            goto LABEL_1594;
          v1055 = 1;
          v1068 = sub_22EB1B954(v7, *(void **)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1047]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
          if ((v1068 & 1) == 0)
          {
            v1055 = 0;
            v1067 = v1068 & 0xFFFFFFFFFFFFFFFELL;
            goto LABEL_1601;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1051) & 1) == 0)
          {
            v1055 = 0;
            v1067 = v2222;
LABEL_1601:
            *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1047]
                                + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1067;
            goto LABEL_1602;
          }
          v1055 = 1;
        }
LABEL_1602:
        v1048 |= v1055;
        if (v1050 == ++v1047)
        {
          v5 = v2149;
          if ((v1048 & 1) != 0)
            return 1;
LABEL_1604:
          v8 = v226;
          v1069 = *v226;
LABEL_1605:
          v1070 = *(_QWORD *)(v1069 + 16400);
LABEL_2935:
          *v979 = v1070;
          goto LABEL_2936;
        }
      }
    case 1776:
      LODWORD(v2204) = 0;
      v216 = v8;
      v459 = sub_22EF72B64(*v8, 0x6F0u, &v2204, 0);
      if ((_DWORD)v2204)
        return 1;
      v460 = *(_QWORD *)(v459 & 0xFFFFFFFFFFFFFFF0);
      if (v460)
        v461 = *(_BYTE *)(v460 + 16) == 26;
      else
        v461 = 0;
      if (!v461)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v460 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v460 = sub_22F10CF48(*(_QWORD *)(v459 & 0xFFFFFFFFFFFFFFF0));
        else
          v460 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v460 + 16) >> 38)))
        return 1;
      v1451 = *(_QWORD *)(v460 + 16);
      v997 = (_QWORD *)(a4 + 8);
      if ((v1451 & 0x3FFFC000000000) == 0)
        goto LABEL_2194;
      v2155 = v5;
      v1452 = 0;
      v1453 = 0;
      v1454 = v460 + 40;
      v1455 = (unsigned __int16)(v1451 >> 38);
      while (1)
      {
        v1456 = *(_QWORD *)(v1454 + 8 * v1452);
        v1457 = *(_QWORD *)((char *)&v997[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1452]
                          + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1457;
        v1458 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1456 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1458 || (*(_DWORD *)(v1458 + 16) & 0xFF800FF) != 137887755)
          break;
        v1462 = (uint64_t *)(*(_QWORD *)(v1457 + 8) & 0xFFFFFFFFFFFFFFF0);
        v1463 = *v1462;
        if (*v1462 && *(_BYTE *)(v1463 + 16) == 56
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1463 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
          && (v1463 = sub_22F10CF48(v1463)) != 0)
        {
          v1464 = *(_DWORD *)(v1463 + 20);
          v119 = v1464 > 0x10;
          v1465 = (1 << v1464) & 0x1011C;
          if (v119 || v1465 == 0)
          {
LABEL_2187:
            sub_22F0D5A50(v1457);
            sub_22E8FCA40((_QWORD *)v7, v1471, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1457 + 8);
            v1472 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1473 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1473 + 28) & 0x7Eu) - 52 >= 6)
              v1474 = 0;
            else
              v1474 = v1473;
            __src = *(void **)(v1474 + 40);
            sub_22E894538(v1472, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_2191:
            v1460 = 1;
            goto LABEL_2192;
          }
          v1462 = (uint64_t *)(*(_QWORD *)(v1463 + 32) & 0xFFFFFFFFFFFFFFF0);
        }
        v1467 = *v1462;
        if (v1452 > 1)
        {
          v1469 = *(_QWORD *)(*(_QWORD *)(v1467 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v1469)
            v1470 = (*(_DWORD *)(v1469 + 16) & 0xFF800FF) == 87031819;
          else
            v1470 = 0;
          if (!v1470)
            goto LABEL_2187;
        }
        else if (!sub_22F110E9C(v1467))
        {
          goto LABEL_2187;
        }
        v1460 = 1;
        v1468 = sub_22EB1B954(v7, *(void **)((char *)&v997[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1452]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v1468 & 1) == 0)
        {
          v1460 = 0;
          v1461 = v1468 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2182:
          *(_QWORD *)((char *)&v997[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1452]
                    + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1461;
        }
LABEL_2192:
        v1453 |= v1460;
        if (v1455 == ++v1452)
        {
          v5 = v2155;
          if ((v1453 & 1) != 0)
            return 1;
LABEL_2194:
          v1475 = a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
          v1422 = *(_QWORD *)(v1475 + 8);
          v170 = *(_QWORD *)(v1475 + 16);
          v1310 = *(_QWORD *)(v1422 + 8);
          if (*(_QWORD *)(*(_QWORD *)((v1310 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v170 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
            goto LABEL_2196;
          sub_22EFFAE7C((unsigned int *)a4);
          sub_22E8FCA40((_QWORD *)v7, v1476, 0xEEAu, 0, (uint64_t)__p);
          LODWORD(__src) = 0;
          v1426 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
          LODWORD(__dst) = 1;
          v1477 = (int8x8_t *)&__dst;
          goto LABEL_2696;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1456) & 1) != 0)
        goto LABEL_2191;
      v1460 = 0;
      v1461 = v2222;
      goto LABEL_2182;
    case 1805:
    case 1806:
      LODWORD(v2204) = 0;
      v255 = sub_22EF72B64(*v8, v5, &v2204, 0);
      if ((_DWORD)v2204)
        return 1;
      v256 = *(_QWORD *)(v255 & 0xFFFFFFFFFFFFFFF0);
      if (v256)
        v257 = *(_BYTE *)(v256 + 16) == 26;
      else
        v257 = 0;
      if (!v257)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v256 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v256 = sub_22F10CF48(*(_QWORD *)(v255 & 0xFFFFFFFFFFFFFFF0));
        else
          v256 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v256 + 16) >> 38)))
        return 1;
      v1165 = *(_QWORD *)(v256 + 16);
      v1166 = a4 + 8;
      v2151 = v5;
      if ((v1165 & 0x3FFFC000000000) == 0)
        goto LABEL_1789;
      v1167 = v8;
      v1168 = 0;
      v1169 = 0;
      v1170 = v256 + 40;
      v1171 = (unsigned __int16)(v1165 >> 38);
      while (1)
      {
        v1172 = *(_QWORD *)(v1170 + 8 * v1168);
        v1173 = *(_QWORD *)(v1166
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1168);
        *(_QWORD *)&v2222 = v1173;
        v1174 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1172 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1174)
          v1175 = (*(_DWORD *)(v1174 + 16) & 0xFF800FF) == 137887755;
        else
          v1175 = 0;
        if (v1175)
        {
          if (v1168 >= (*(_DWORD *)(a4 + 16) - 1))
          {
            v1186 = *(_QWORD *)(*(_QWORD *)(v1173 + 8) & 0xFFFFFFFFFFFFFFF0);
            if (!v1186 || *(_BYTE *)(v1186 + 16) != 56)
            {
              if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1186 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
                goto LABEL_1775;
              v1186 = sub_22F10CF48(v1186);
              if (!v1186)
                goto LABEL_1775;
            }
            HIDWORD(v1188) = *(_DWORD *)(v1186 + 20);
            LODWORD(v1188) = HIDWORD(v1188) - 2;
            v1187 = v1188 >> 1;
            v119 = v1187 > 7;
            v1189 = (1 << v1187) & 0x8B;
            v1190 = v119 || v1189 == 0;
            if (v1190
              || ((v1191 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1186 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
                ? (v1192 = *(_DWORD *)(v1191 + 16) == 11)
                : (v1192 = 0),
                  !v1192
               || (((*(_DWORD *)(v1191 + 16) >> 19) & 0x1FFu) - 168 <= 7
                 ? (v1197 = ((1 << ((*(_DWORD *)(v1191 + 16) >> 19) + 88)) & 0xE1) == 0)
                 : (v1197 = 1),
                   v1197)))
            {
LABEL_1775:
              sub_22F0D5A50(v1173);
              sub_22E8FCA40((_QWORD *)v7, v1193, 0xEEEu, 0, (uint64_t)__p);
              *(_QWORD *)&v2218 = *(_QWORD *)(v1173 + 8);
              v1194 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
              v1195 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
              if ((*(_DWORD *)(v1195 + 28) & 0x7Eu) - 52 >= 6)
                v1196 = 0;
              else
                v1196 = v1195;
              __src = *(void **)(v1196 + 40);
              sub_22E894538(v1194, (uint64_t *)&__src);
              sub_22E903BEC((unsigned int *)__p);
LABEL_1779:
              v1176 = 1;
              goto LABEL_1780;
            }
          }
          else
          {
            v1178 = *(_QWORD *)(*(_QWORD *)(v1173 + 8) & 0xFFFFFFFFFFFFFFF0);
            if (!v1178 || *(_BYTE *)(v1178 + 16) != 56)
            {
              if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1178 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
                goto LABEL_1775;
              v1178 = sub_22F10CF48(v1178);
              if (!v1178)
                goto LABEL_1775;
            }
            HIDWORD(v1180) = *(_DWORD *)(v1178 + 20);
            LODWORD(v1180) = HIDWORD(v1180) - 2;
            v1179 = v1180 >> 1;
            v119 = v1179 > 7;
            v1181 = (1 << v1179) & 0x8B;
            if (v119 || v1181 == 0)
              goto LABEL_1775;
            v1183 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1178 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            if (!v1183 || *(_DWORD *)(v1183 + 16) != 11)
              goto LABEL_1775;
            if (((*(_DWORD *)(v1183 + 16) >> 19) & 0x1FFu) - 168 > 0x2C
              || ((1 << ((*(_DWORD *)(v1183 + 16) >> 19) + 88)) & 0x1C000000ECE1) == 0)
            {
              goto LABEL_1775;
            }
          }
          v1176 = 1;
          v1198 = sub_22EB1B954(v7, *(void **)(v1166+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1168));
          if ((v1198 & 1) != 0)
            goto LABEL_1780;
          v1176 = 0;
          v1177 = v1198 & 0xFFFFFFFFFFFFFFFELL;
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1172) & 1) != 0)
            goto LABEL_1779;
          v1176 = 0;
          v1177 = v2222;
        }
        *(_QWORD *)(v1166
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v1168) = v1177;
LABEL_1780:
        v1169 |= v1176;
        if (v1171 == ++v1168)
        {
          v8 = v1167;
          v5 = v2151;
          if ((v1169 & 1) != 0)
            return 1;
LABEL_1789:
          v1199 = a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1);
          v1200 = *(_QWORD *)(v1199 + 8);
          v1201 = *(_DWORD *)(a4 + 16);
          LODWORD(__src) = 0;
          v1202 = v1201 - 1;
          v164 = *(_QWORD *)(v1199 + 8 + 8 * (v1201 - 1));
          if (v1201 != 1)
          {
            v1203 = v8;
            v1204 = 0;
            do
            {
              v1205 = *(_QWORD *)(v1166
                                + ((unint64_t)*(unsigned int *)a4 >> 24)
                                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                + 8 * v1204);
              v1206 = *v1203;
              v1207 = sub_22E3E4B64(*(_QWORD *)(*(_QWORD *)(v1205 + 8) & 0xFFFFFFFFFFFFFFF0));
              v1208 = sub_22EF5CDF0(v1206, *(_QWORD *)(*(_QWORD *)(v1207 + 32) & 0xFFFFFFFFFFFFFFF0));
              v1209 = *v1203;
              v1210 = sub_22E3E4B64(*(_QWORD *)(*(_QWORD *)(v164 + 8) & 0xFFFFFFFFFFFFFFF0));
              if (v1208 != sub_22EF5CDF0(v1209, *(_QWORD *)(*(_QWORD *)(v1210 + 32) & 0xFFFFFFFFFFFFFFF0)))
              {
                sub_22EFFAE7C((unsigned int *)a4);
                sub_22E8FCA40((_QWORD *)v7, v1888, 0xEF4u, 0, (uint64_t)__p);
                v1889 = sub_22E89519C((uint64_t)__p, (unsigned int *)&__src);
                LODWORD(__dst) = *(_DWORD *)(a4 + 16) - 1;
                v1890 = sub_22E89519C(v1889, (unsigned int *)&__dst);
                sub_22F0D4E74(v1200);
                *(_QWORD *)&v2222 = v1891;
                v752 = sub_22E8906A0(v1890, (uint64_t *)&v2222);
LABEL_1162:
                v506 = v752;
                v753 = v164;
                goto LABEL_2922;
              }
              if (*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v1200 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v1205 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
              {
                sub_22EFFAE7C((unsigned int *)a4);
                sub_22E8FCA40((_QWORD *)v7, v1898, 0xEEAu, 0, (uint64_t)__p);
                LODWORD(__dst) = 0;
                v1899 = sub_22E8900C4((uint64_t)__p, (int *)&__dst);
                v1900 = sub_22E89519C(v1899, (unsigned int *)&__src);
                sub_22F0D4E74(v1200);
                *(_QWORD *)&v2222 = v1901;
                v506 = sub_22E8906A0(v1900, (uint64_t *)&v2222);
                v753 = v1205;
                goto LABEL_2922;
              }
              v1204 = (_DWORD)__src + 1;
              LODWORD(__src) = v1204;
            }
            while (v1204 != v1202);
            v1200 = *(_QWORD *)(a4
                              + ((unint64_t)*(unsigned int *)a4 >> 24)
                              + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                              + 8);
            v8 = v1203;
            v5 = v2151;
          }
          v1211 = sub_22E3E4B64(*(_QWORD *)(*(_QWORD *)(v1200 + 8) & 0xFFFFFFFFFFFFFFF0));
          v1212 = sub_22E3E4B64(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4
                                                                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                                  + 8
                                                                  * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                                  + 8 * (*(_DWORD *)(a4 + 16) - 1)
                                                                  + 8)
                                                      + 8) & 0xFFFFFFFFFFFFFFF0));
          v1162 = *(_QWORD *)(v1211 + 32);
          v1163 = *(unsigned int *)(v1212 + 20);
          v1164 = (*(_DWORD *)(v1211 + 16) >> 19) & 0xF;
          v1161 = *v8;
LABEL_1796:
          v1213 = sub_22EF63724(v1161, v1162, v1163, v1164);
          goto LABEL_2582;
        }
      }
    case 1812:
    case 1813:
      LODWORD(__dst) = 0;
      v252 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v253 = *(_QWORD *)(v252 & 0xFFFFFFFFFFFFFFF0);
      if (v253)
        v254 = *(_BYTE *)(v253 + 16) == 26;
      else
        v254 = 0;
      if (!v254)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v253 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v253 = sub_22F10CF48(*(_QWORD *)(v252 & 0xFFFFFFFFFFFFFFF0));
        else
          v253 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v253 + 16) >> 38)))
        return 1;
      v1140 = *(_QWORD *)(v253 + 16);
      if ((v1140 & 0x3FFFC000000000) == 0)
        goto LABEL_1731;
      v2183 = v8;
      v1141 = (_QWORD *)v7;
      v1142 = 0;
      v1143 = 0;
      v1144 = a4 + 8;
      v1145 = v253 + 40;
      v1146 = (unsigned __int16)(v1140 >> 38);
      while (1)
      {
        v1147 = *(_QWORD *)(v1145 + 8 * v1142);
        v1148 = *(_QWORD **)(v1144
                           + ((unint64_t)*(unsigned int *)a4 >> 24)
                           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                           + 8 * v1142);
        *(_QWORD *)&v2222 = v1148;
        v1149 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1147 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1149 || (*(_DWORD *)(v1149 + 16) & 0xFF800FF) != 137887755)
          break;
        v1153 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1148[1] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1153)
          v1154 = *(_DWORD *)(v1153 + 16) == 11;
        else
          v1154 = 0;
        if (!v1154
          || (((*(_DWORD *)(v1153 + 16) >> 19) & 0x1FFu) - 210 <= 5
            ? (v1159 = ((1 << ((*(_DWORD *)(v1153 + 16) >> 19) + 46)) & 0x27) == 0)
            : (v1159 = 1),
              v1159))
        {
          sub_22F0D5A50((uint64_t)v1148);
          sub_22E8FCA40(v1141, v1155, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = v1148[1];
          v1156 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1157 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1157 + 28) & 0x7Eu) - 52 >= 6)
            v1158 = 0;
          else
            v1158 = v1157;
          __src = *(void **)(v1158 + 40);
          sub_22E894538(v1156, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_1721:
          v1151 = 1;
          goto LABEL_1729;
        }
        v1151 = 1;
        v1160 = sub_22EB1B954((uint64_t)v1141, v1148);
        if ((v1160 & 1) == 0)
        {
          v1151 = 0;
          v1152 = v1160 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1728;
        }
LABEL_1729:
        v1143 |= v1151;
        if (v1146 == ++v1142)
        {
          v7 = (uint64_t)v1141;
          v8 = v2183;
          if ((v1143 & 1) != 0)
            return 1;
LABEL_1731:
          v1161 = *v8;
          v1162 = *(_QWORD *)(*(_QWORD *)(a4
                                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                        + 8)
                            + 8);
          v1163 = 64;
          v1164 = 0;
          goto LABEL_1796;
        }
      }
      if ((sub_22E9969B8((uint64_t)v1141, (unint64_t *)&v2222, v1147) & 1) == 0)
      {
        v1151 = 0;
        v1152 = v2222;
LABEL_1728:
        *(_QWORD *)(v1144
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v1142) = v1152;
        goto LABEL_1729;
      }
      goto LABEL_1721;
    case 1814:
      LODWORD(__dst) = 0;
      v498 = sub_22EF72B64(*v8, 0x716u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v499 = *(_QWORD *)(v498 & 0xFFFFFFFFFFFFFFF0);
      if (v499)
        v500 = *(_BYTE *)(v499 + 16) == 26;
      else
        v500 = 0;
      if (!v500)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v499 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v499 = sub_22F10CF48(*(_QWORD *)(v498 & 0xFFFFFFFFFFFFFFF0));
        else
          v499 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v499 + 16) >> 38)))
        return 1;
      v1559 = *(_QWORD *)(v499 + 16);
      v1560 = (unint64_t *)(a4 + 8);
      if ((v1559 & 0x3FFFC000000000) == 0)
        goto LABEL_2344;
      v2189 = v8;
      v1561 = 0;
      v1562 = 0;
      v1563 = v499 + 40;
      v1564 = (unsigned __int16)(v1559 >> 38);
      while (1)
      {
        v1565 = *(_QWORD *)(v1563 + 8 * v1561);
        v1566 = *(unint64_t *)((char *)&v1560[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1561]
                                    + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1566;
        v1567 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1565 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1567)
          v1568 = (*(_DWORD *)(v1567 + 16) & 0xFF800FF) == 137887755;
        else
          v1568 = 0;
        if (v1568)
        {
          if ((_DWORD)v1561)
          {
            if ((_DWORD)v1561 == 2)
            {
              v1570 = (_QWORD *)v7;
              if (sub_22E99E0AC(v7, *(_QWORD *)(v1566 + 8)))
                goto LABEL_2330;
            }
            else
            {
              v1570 = (_QWORD *)v7;
              if (sub_22E99E050(*(_QWORD *)(v7 + 72), *(_QWORD *)(v1566 + 8)))
              {
LABEL_2330:
                sub_22F0D5A50(v1566);
                sub_22E8FCA40(v1570, v1571, 0xEEEu, 0, (uint64_t)__p);
                *(_QWORD *)&v2218 = *(_QWORD *)(v1566 + 8);
                v1572 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
                v1573 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
                if ((*(_DWORD *)(v1573 + 28) & 0x7Eu) - 52 >= 6)
                  v1574 = 0;
                else
                  v1574 = v1573;
                __src = *(void **)(v1574 + 40);
                sub_22E894538(v1572, (uint64_t *)&__src);
                sub_22E903BEC((unsigned int *)__p);
                v1569 = 1;
                goto LABEL_2339;
              }
            }
          }
          else
          {
            v1570 = (_QWORD *)v7;
            if (sub_22E99DF9C(*(_QWORD *)(v1566 + 8)))
              goto LABEL_2330;
          }
          v1569 = 1;
          v1576 = sub_22EB1B954((uint64_t)v1570, *(void **)((char *)&v1560[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1561]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
          if ((v1576 & 1) == 0)
          {
            v1569 = 0;
            v1575 = v1576 & 0xFFFFFFFFFFFFFFFELL;
            goto LABEL_2338;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1565) & 1) == 0)
          {
            v1569 = 0;
            v1575 = v2222;
LABEL_2338:
            *(unint64_t *)((char *)&v1560[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1561]
                                + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1575;
            goto LABEL_2339;
          }
          v1569 = 1;
        }
LABEL_2339:
        v1562 |= v1569;
        if (v1564 == ++v1561)
        {
          v8 = v2189;
          if ((v1562 & 1) == 0)
          {
LABEL_2344:
            if (!sub_22E99DE78((_QWORD *)v7, (unsigned int *)a4, 1u, 2u))
            {
              v1577 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4
                                                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                        + 8)
                                            + 8) & 0xFFFFFFFFFFFFFFF0);
              if (!v1577 || *(_BYTE *)(v1577 + 16) != 39)
                v1577 = sub_22F10CF48(v1577);
              v1578 = *(_QWORD *)(v1577 + 32);
              v1579 = *(_QWORD *)(v1578 & 0xFFFFFFFFFFFFFFF0);
              if ((*(_BYTE *)(v1579 + 8) & 0xF) != 0)
                v1579 = (unint64_t)sub_22F10D2BC(v1578);
              *v1560 = sub_22EF63724(*v8, v1579 & 0xFFFFFFFFFFFFFFF0, 64, 0);
              goto LABEL_2936;
            }
          }
          return 1;
        }
      }
    case 1815:
      LODWORD(__dst) = 0;
      v377 = v8;
      v465 = sub_22EF72B64(*v8, 0x717u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v466 = *(_QWORD *)(v465 & 0xFFFFFFFFFFFFFFF0);
      if (v466)
        v467 = *(_BYTE *)(v466 + 16) == 26;
      else
        v467 = 0;
      if (!v467)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v466 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v466 = sub_22F10CF48(*(_QWORD *)(v465 & 0xFFFFFFFFFFFFFFF0));
        else
          v466 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v466 + 16) >> 38)))
        return 1;
      v1496 = *(_QWORD *)(v466 + 16);
      v979 = (unint64_t *)(a4 + 8);
      if ((v1496 & 0x3FFFC000000000) != 0)
      {
        v1497 = 0;
        v1498 = 0;
        v1499 = (unsigned __int16)(v1496 >> 38);
        do
        {
          v1500 = *(_QWORD *)(v466 + 40 + 8 * v1497);
          *(_QWORD *)&v2222 = *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                                + v1497]
                                                  + ((unint64_t)*(unsigned int *)a4 >> 24));
          v1501 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1500 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v1501)
            v1502 = (*(_DWORD *)(v1501 + 16) & 0xFF800FF) == 137887755;
          else
            v1502 = 0;
          if (v1502)
            __asm { BR              X9 }
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1500) & 1) != 0)
          {
            v1503 = 1;
          }
          else
          {
            v1503 = 0;
            *(unint64_t *)((char *)&v979[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1497]
                                + ((unint64_t)*(unsigned int *)a4 >> 24)) = v2222;
          }
          v1498 |= v1503;
          ++v1497;
        }
        while (v1499 != v1497);
        if ((v1498 & 1) != 0)
          return 1;
      }
      if (sub_22E99DE78((_QWORD *)v7, (unsigned int *)a4, 2u, 3u))
        return 1;
      v1504 = *(unsigned int *)a4;
      v1505 = (v1504 >> 18) & 1;
      v1506 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + (v1504 >> 24) + 8 * v1505 + 8) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v1506 && *(_BYTE *)(v1506 + 16) == 56)
      {
        v1507 = v1504 >> 24;
      }
      else
      {
        v1506 = sub_22F10CF48(v1506);
        v1933 = *(unsigned int *)a4;
        v1507 = v1933 >> 24;
        v1505 = (v1933 >> 18) & 1;
      }
      v1934 = *(_QWORD *)(v1506 + 32);
      v1935 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + v1507 + 8 * v1505 + 16) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (!v1935 || *(_BYTE *)(v1935 + 16) != 39)
        v1935 = sub_22F10CF48(v1935);
      if (*(_QWORD *)(*(_QWORD *)((v1934 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v1935 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
        goto LABEL_2933;
      sub_22EFFAE7C((unsigned int *)a4);
      sub_22E8FCA40((_QWORD *)v7, v2052, 0xEECu, 0, (uint64_t)__p);
      LODWORD(__src) = 0;
      v2053 = sub_22E8900C4((uint64_t)__p, (int *)&__src);
      LODWORD(v2204) = 1;
      v2054 = sub_22E8900C4(v2053, (int *)&v2204);
      sub_22F0D4E74(*(_QWORD *)(a4
                              + ((unint64_t)*(unsigned int *)a4 >> 24)
                              + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                              + 8));
      *(_QWORD *)&v2222 = v2055;
      v2056 = sub_22E8906A0(v2054, (uint64_t *)&v2222);
      *(_QWORD *)&v2218 = *(_QWORD *)(a4
                                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                    + 16);
      sub_22F2F37E0(v2056, (uint64_t *)&v2218);
      goto LABEL_2925;
    case 1816:
      LODWORD(v2204) = 0;
      v475 = sub_22EF72B64(*v8, 0x718u, &v2204, 0);
      if ((_DWORD)v2204)
        return 1;
      v476 = *(_QWORD *)(v475 & 0xFFFFFFFFFFFFFFF0);
      if (v476)
        v477 = *(_BYTE *)(v476 + 16) == 26;
      else
        v477 = 0;
      if (!v477)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v476 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v476 = sub_22F10CF48(*(_QWORD *)(v475 & 0xFFFFFFFFFFFFFFF0));
        else
          v476 = 0;
      }
      *(_QWORD *)&v1512 = 0x4000000040;
      *((_QWORD *)&v1512 + 1) = 0x4000000040;
      v2222 = v1512;
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v476 + 16) >> 38)))
        return 1;
      v1513 = *(_QWORD *)(v476 + 16);
      if ((v1513 & 0x3FFFC000000000) == 0)
        goto LABEL_2498;
      v2156 = v5;
      v1514 = v8;
      v1515 = 0;
      v1516 = 0;
      v1517 = a4 + 8;
      v1518 = v476 + 40;
      v1519 = (unsigned __int16)(v1513 >> 38);
      while (1)
      {
        v1520 = *(_QWORD *)(v1518 + 8 * v1515);
        v1521 = *(_QWORD *)(v1517
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1515);
        *(_QWORD *)&v2218 = v1521;
        v1522 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1520 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1522 || (*(_DWORD *)(v1522 + 16) & 0xFF800FF) != 137887755)
          break;
        v1526 = *(_QWORD *)(*(_QWORD *)(v1521 + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((!v1526 || *(_BYTE *)(v1526 + 16) != 56)
          && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1526 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
           || (v1526 = sub_22F10CF48(v1526)) == 0)
          || *(_DWORD *)(v1526 + 20) != *((_DWORD *)&v2222 + v1515)
          || ((v1527 = *(_QWORD *)(*(_QWORD *)(v1526 + 32) & 0xFFFFFFFFFFFFFFF0),
               (v1528 = *(_QWORD *)(*(_QWORD *)(v1527 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0)
            ? (v1529 = *(_DWORD *)(v1528 + 16) == 11)
            : (v1529 = 0),
              !v1529
           || (((*(_DWORD *)(v1528 + 16) >> 19) & 0x1FFu) - 210 <= 5
             ? (v1530 = ((1 << ((*(_DWORD *)(v1528 + 16) >> 19) + 46)) & 0x27) == 0)
             : (v1530 = 1),
               v1530 || !sub_22F10E0EC(v1527))))
        {
          sub_22F0D5A50(v1521);
          sub_22E8FCA40((_QWORD *)v7, v1532, 0xEEEu, 0, (uint64_t)__p);
          __src = *(void **)(v1521 + 8);
          v1533 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&__src);
          v1534 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1534 + 28) & 0x7Eu) - 52 >= 6)
            v1535 = 0;
          else
            v1535 = v1534;
          __dst = *(void **)(v1535 + 40);
          sub_22E894538(v1533, (uint64_t *)&__dst);
          sub_22E903BEC((unsigned int *)__p);
LABEL_2282:
          v1524 = 1;
          goto LABEL_2283;
        }
        v1524 = 1;
        v1531 = sub_22EB1B954(v7, *(void **)(v1517+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1515));
        if ((v1531 & 1) == 0)
        {
          v1524 = 0;
          v1525 = v1531 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2260:
          *(_QWORD *)(v1517
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                    + 8 * v1515) = v1525;
        }
LABEL_2283:
        v1516 |= v1524;
        if (v1519 == ++v1515)
        {
          v8 = v1514;
          v5 = v2156;
          if ((v1516 & 1) != 0)
            return 1;
LABEL_2498:
          v1091 = *(_DWORD *)(a4 + 16) - 1;
LABEL_2499:
          v1692 = a4
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 8 * v1091;
          goto LABEL_2551;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2218, v1520) & 1) != 0)
        goto LABEL_2282;
      v1524 = 0;
      v1525 = v2218;
      goto LABEL_2260;
    case 1817:
    case 1821:
      LODWORD(__dst) = 0;
      v230 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v231 = *(_QWORD *)(v230 & 0xFFFFFFFFFFFFFFF0);
      if (v231)
        v232 = *(_BYTE *)(v231 + 16) == 26;
      else
        v232 = 0;
      if (!v232)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v231 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v231 = sub_22F10CF48(*(_QWORD *)(v230 & 0xFFFFFFFFFFFFFFF0));
        else
          v231 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v231 + 16) >> 38)))
        return 1;
      v1071 = *(_QWORD *)(v231 + 16);
      if ((v1071 & 0x3FFFC000000000) == 0)
        goto LABEL_1630;
      v2181 = v8;
      v1072 = (_QWORD *)v7;
      v1073 = 0;
      v1074 = 0;
      v1075 = a4 + 8;
      v1076 = v231 + 40;
      v1077 = (unsigned __int16)(v1071 >> 38);
      while (1)
      {
        v1078 = *(_QWORD *)(v1076 + 8 * v1073);
        v1079 = *(_QWORD **)(v1075
                           + ((unint64_t)*(unsigned int *)a4 >> 24)
                           + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                           + 8 * v1073);
        *(_QWORD *)&v2222 = v1079;
        v1080 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1078 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1080 || (*(_DWORD *)(v1080 + 16) & 0xFF800FF) != 137887755)
          break;
        v1084 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1079[1] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1084)
          v1085 = (*(_DWORD *)(v1084 + 16) & 0xFF000FF) == 91226123;
        else
          v1085 = 0;
        if (!v1085)
        {
          sub_22F0D5A50((uint64_t)v1079);
          sub_22E8FCA40(v1072, v1086, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = v1079[1];
          v1087 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1088 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1088 + 28) & 0x7Eu) - 52 >= 6)
            v1089 = 0;
          else
            v1089 = v1088;
          __src = *(void **)(v1089 + 40);
          sub_22E894538(v1087, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_1624:
          v1082 = 1;
          goto LABEL_1628;
        }
        v1082 = 1;
        v1090 = sub_22EB1B954((uint64_t)v1072, v1079);
        if ((v1090 & 1) == 0)
        {
          v1082 = 0;
          v1083 = v1090 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1627;
        }
LABEL_1628:
        v1074 |= v1082;
        if (v1077 == ++v1073)
        {
          v7 = (uint64_t)v1072;
          v8 = v2181;
          if ((v1074 & 1) != 0)
            return 1;
LABEL_1630:
          v1091 = v5 == 1821;
          goto LABEL_2499;
        }
      }
      if ((sub_22E9969B8((uint64_t)v1072, (unint64_t *)&v2222, v1078) & 1) == 0)
      {
        v1082 = 0;
        v1083 = v2222;
LABEL_1627:
        *(_QWORD *)(v1075
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v1073) = v1083;
        goto LABEL_1628;
      }
      goto LABEL_1624;
    case 1819:
      v35 = (_QWORD *)v7;
      v36 = 1819;
      goto LABEL_34;
    case 1843:
    case 1844:
      LODWORD(__dst) = 0;
      v258 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v259 = *(_QWORD *)(v258 & 0xFFFFFFFFFFFFFFF0);
      if (v259)
        v260 = *(_BYTE *)(v259 + 16) == 26;
      else
        v260 = 0;
      if (!v260)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v259 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v259 = sub_22F10CF48(*(_QWORD *)(v258 & 0xFFFFFFFFFFFFFFF0));
        else
          v259 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v259 + 16) >> 38)))
        return 1;
      v1214 = *(_QWORD *)(v259 + 16);
      v1215 = (_QWORD *)(a4 + 8);
      if ((v1214 & 0x3FFFC000000000) == 0)
        goto LABEL_1821;
      v2184 = v8;
      v1216 = (_QWORD *)v7;
      v1217 = 0;
      v1218 = 0;
      v1219 = v259 + 40;
      v1220 = (unsigned __int16)(v1214 >> 38);
      while (1)
      {
        v1221 = *(_QWORD *)(v1219 + 8 * v1217);
        v1222 = *(_QWORD **)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1217]
                           + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1222;
        v1223 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1221 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1223 || (*(_DWORD *)(v1223 + 16) & 0xFF800FF) != 137887755)
          break;
        v1227 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1222[1] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1227)
          v1228 = (*(_DWORD *)(v1227 + 16) & 0xFF000FF) == 91226123;
        else
          v1228 = 0;
        if (!v1228)
        {
          sub_22F0D5A50((uint64_t)v1222);
          sub_22E8FCA40(v1216, v1229, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = v1222[1];
          v1230 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1231 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1231 + 28) & 0x7Eu) - 52 >= 6)
            v1232 = 0;
          else
            v1232 = v1231;
          __src = *(void **)(v1232 + 40);
          sub_22E894538(v1230, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_1815:
          v1225 = 1;
          goto LABEL_1819;
        }
        v1225 = 1;
        v1233 = sub_22EB1B954((uint64_t)v1216, v1222);
        if ((v1233 & 1) == 0)
        {
          v1225 = 0;
          v1226 = v1233 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1818;
        }
LABEL_1819:
        v1218 |= v1225;
        if (v1220 == ++v1217)
        {
          v7 = (uint64_t)v1216;
          v8 = v2184;
          if ((v1218 & 1) != 0)
            return 1;
LABEL_1821:
          v1234 = *(_QWORD *)(*v8 + 16400);
LABEL_2448:
          *v1215 = v1234;
          goto LABEL_2936;
        }
      }
      if ((sub_22E9969B8((uint64_t)v1216, (unint64_t *)&v2222, v1221) & 1) == 0)
      {
        v1225 = 0;
        v1226 = v2222;
LABEL_1818:
        *(_QWORD *)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1217]
                  + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1226;
        goto LABEL_1819;
      }
      goto LABEL_1815;
    case 1845:
      v35 = (_QWORD *)v7;
      v36 = 1845;
LABEL_34:
      if ((sub_22E97B834(v35, v36, (unsigned int *)a4) & 1) == 0)
        return a4;
      return 1;
    case 1846:
      LODWORD(__dst) = 0;
      v523 = sub_22EF72B64(*v8, 0x736u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v524 = *(_QWORD *)(v523 & 0xFFFFFFFFFFFFFFF0);
      if (v524)
        v525 = *(_BYTE *)(v524 + 16) == 26;
      else
        v525 = 0;
      if (!v525)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v524 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v524 = sub_22F10CF48(*(_QWORD *)(v523 & 0xFFFFFFFFFFFFFFF0));
        else
          v524 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v524 + 16) >> 38)))
        return 1;
      v1675 = *(_QWORD *)(v524 + 16);
      if ((v1675 & 0x3FFFC000000000) == 0)
        goto LABEL_2498;
      v2150 = v5;
      v2182 = v8;
      v1122 = (_QWORD *)v7;
      v1676 = 0;
      v1124 = 0;
      v1677 = a4 + 8;
      v1678 = v524 + 40;
      v1679 = (unsigned __int16)(v1675 >> 38);
      while (1)
      {
        v1680 = *(_QWORD *)(v1678 + 8 * v1676);
        v1681 = *(_QWORD *)(v1677
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1676);
        *(_QWORD *)&v2222 = v1681;
        v1682 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1680 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1682 || (*(_DWORD *)(v1682 + 16) & 0xFF800FF) != 137887755)
          break;
        v1686 = *(_QWORD *)(v1681 + 8);
        if (v1676 == 1)
        {
          if (sub_22E99E16C(v1686, 1))
            goto LABEL_2490;
        }
        else if ((sub_22E99E24C(v1686) & 1) != 0)
        {
LABEL_2490:
          sub_22F0D5A50(v1681);
          sub_22E8FCA40(v1122, v1688, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1681 + 8);
          v1689 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1690 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1690 + 28) & 0x7Eu) - 52 >= 6)
            v1691 = 0;
          else
            v1691 = v1690;
          __src = *(void **)(v1691 + 40);
          sub_22E894538(v1689, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_2494:
          v1684 = 1;
          goto LABEL_2495;
        }
        v1684 = 1;
        v1687 = sub_22EB1B954((uint64_t)v1122, *(void **)(v1677+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1676));
        if ((v1687 & 1) == 0)
        {
          v1684 = 0;
          v1685 = v1687 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2488:
          *(_QWORD *)(v1677
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                    + 8 * v1676) = v1685;
        }
LABEL_2495:
        v1124 |= v1684;
        if (v1679 == ++v1676)
          goto LABEL_2496;
      }
      if ((sub_22E9969B8((uint64_t)v1122, (unint64_t *)&v2222, v1680) & 1) != 0)
        goto LABEL_2494;
      v1684 = 0;
      v1685 = v2222;
      goto LABEL_2488;
    case 1847:
    case 1848:
      LODWORD(__dst) = 0;
      v249 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v250 = *(_QWORD *)(v249 & 0xFFFFFFFFFFFFFFF0);
      if (v250)
        v251 = *(_BYTE *)(v250 + 16) == 26;
      else
        v251 = 0;
      if (!v251)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v250 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v250 = sub_22F10CF48(*(_QWORD *)(v249 & 0xFFFFFFFFFFFFFFF0));
        else
          v250 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v250 + 16) >> 38)))
        return 1;
      v1121 = *(_QWORD *)(v250 + 16);
      if ((v1121 & 0x3FFFC000000000) == 0)
        goto LABEL_2498;
      v2150 = v5;
      v2182 = v8;
      v1122 = (_QWORD *)v7;
      v1123 = 0;
      v1124 = 0;
      v1125 = a4 + 8;
      v1126 = v250 + 40;
      v1127 = (unsigned __int16)(v1121 >> 38);
      while (1)
      {
        v1128 = *(_QWORD *)(v1126 + 8 * v1123);
        v1129 = *(_QWORD *)(v1125
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1123);
        *(_QWORD *)&v2222 = v1129;
        v1130 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1128 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1130 || (*(_DWORD *)(v1130 + 16) & 0xFF800FF) != 137887755)
          break;
        v1134 = *(_QWORD *)(v1129 + 8);
        if (v1123 == 1)
        {
          if (sub_22E99E310(v1134))
            goto LABEL_1696;
        }
        else if ((sub_22E99E3E8(v1134, 0) & 1) != 0)
        {
LABEL_1696:
          sub_22F0D5A50(v1129);
          sub_22E8FCA40(v1122, v1136, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1129 + 8);
          v1137 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1138 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1138 + 28) & 0x7Eu) - 52 >= 6)
            v1139 = 0;
          else
            v1139 = v1138;
          __src = *(void **)(v1139 + 40);
          sub_22E894538(v1137, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_1700:
          v1132 = 1;
          goto LABEL_1701;
        }
        v1132 = 1;
        v1135 = sub_22EB1B954((uint64_t)v1122, *(void **)(v1125+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1123));
        if ((v1135 & 1) == 0)
        {
          v1132 = 0;
          v1133 = v1135 & 0xFFFFFFFFFFFFFFFELL;
LABEL_1694:
          *(_QWORD *)(v1125
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                    + 8 * v1123) = v1133;
        }
LABEL_1701:
        v1124 |= v1132;
        if (v1127 == ++v1123)
        {
LABEL_2496:
          v7 = (uint64_t)v1122;
          goto LABEL_2497;
        }
      }
      if ((sub_22E9969B8((uint64_t)v1122, (unint64_t *)&v2222, v1128) & 1) != 0)
        goto LABEL_1700;
      v1132 = 0;
      v1133 = v2222;
      goto LABEL_1694;
    case 1849:
      LODWORD(__dst) = 0;
      v530 = sub_22EF72B64(*v8, 0x739u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v531 = *(_QWORD *)(v530 & 0xFFFFFFFFFFFFFFF0);
      if (v531)
        v532 = *(_BYTE *)(v531 + 16) == 26;
      else
        v532 = 0;
      if (!v532)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v531 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v531 = sub_22F10CF48(*(_QWORD *)(v530 & 0xFFFFFFFFFFFFFFF0));
        else
          v531 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v531 + 16) >> 38)))
        return 1;
      v1709 = *(_QWORD *)(v531 + 16);
      if ((v1709 & 0x3FFFC000000000) == 0)
        goto LABEL_2550;
      v2160 = v5;
      v2191 = v8;
      v1657 = (_QWORD *)v7;
      v1710 = 0;
      v1659 = 0;
      v1711 = a4 + 8;
      v1712 = v531 + 40;
      v1713 = (unsigned __int16)(v1709 >> 38);
      while (1)
      {
        v1714 = *(_QWORD *)(v1712 + 8 * v1710);
        v1715 = *(_QWORD *)(v1711
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1710);
        *(_QWORD *)&v2222 = v1715;
        v1716 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1714 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1716 || (*(_DWORD *)(v1716 + 16) & 0xFF800FF) != 137887755)
          break;
        v1720 = *(_QWORD *)(v1715 + 8);
        if (v1710)
        {
          if ((sub_22E99E16C(v1720, 0) & 1) != 0)
            goto LABEL_2539;
        }
        else if (sub_22E99E24C(v1720))
        {
LABEL_2539:
          sub_22F0D5A50(v1715);
          sub_22E8FCA40(v1657, v1721, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1715 + 8);
          v1722 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1723 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1723 + 28) & 0x7Eu) - 52 >= 6)
            v1724 = 0;
          else
            v1724 = v1723;
          __src = *(void **)(v1724 + 40);
          sub_22E894538(v1722, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_2543:
          v1718 = 1;
          goto LABEL_2548;
        }
        v1718 = 1;
        v1725 = sub_22EB1B954((uint64_t)v1657, *(void **)(v1711+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1710));
        if ((v1725 & 1) == 0)
        {
          v1718 = 0;
          v1719 = v1725 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_2547;
        }
LABEL_2548:
        v1659 |= v1718;
        if (v1713 == ++v1710)
          goto LABEL_2549;
      }
      if ((sub_22E9969B8((uint64_t)v1657, (unint64_t *)&v2222, v1714) & 1) == 0)
      {
        v1718 = 0;
        v1719 = v2222;
LABEL_2547:
        *(_QWORD *)(v1711
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v1710) = v1719;
        goto LABEL_2548;
      }
      goto LABEL_2543;
    case 1850:
    case 1851:
      LODWORD(__dst) = 0;
      v223 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v224 = *(_QWORD *)(v223 & 0xFFFFFFFFFFFFFFF0);
      if (v224)
        v225 = *(_BYTE *)(v224 + 16) == 26;
      else
        v225 = 0;
      if (!v225)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v224 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v224 = sub_22F10CF48(*(_QWORD *)(v223 & 0xFFFFFFFFFFFFFFF0));
        else
          v224 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v224 + 16) >> 38)))
        return 1;
      v1027 = *(_QWORD *)(v224 + 16);
      if ((v1027 & 0x3FFFC000000000) == 0)
        goto LABEL_1569;
      v2180 = v8;
      v1028 = (_QWORD *)v7;
      v1029 = 0;
      v1030 = 0;
      v1031 = a4 + 8;
      v1032 = v224 + 40;
      v1033 = (unsigned __int16)(v1027 >> 38);
      while (1)
      {
        v1034 = *(_QWORD *)(v1032 + 8 * v1029);
        v1035 = *(_QWORD *)(v1031
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1029);
        *(_QWORD *)&v2222 = v1035;
        v1036 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1034 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1036 || (*(_DWORD *)(v1036 + 16) & 0xFF800FF) != 137887755)
          break;
        v1040 = *(_QWORD *)(v1035 + 8);
        if (v1029)
        {
          if (sub_22E99E310(v1040))
            goto LABEL_1558;
        }
        else if (sub_22E99E3E8(v1040, 1))
        {
LABEL_1558:
          sub_22F0D5A50(v1035);
          sub_22E8FCA40(v1028, v1041, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1035 + 8);
          v1042 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1043 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1043 + 28) & 0x7Eu) - 52 >= 6)
            v1044 = 0;
          else
            v1044 = v1043;
          __src = *(void **)(v1044 + 40);
          sub_22E894538(v1042, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_1562:
          v1038 = 1;
          goto LABEL_1567;
        }
        v1038 = 1;
        v1045 = sub_22EB1B954((uint64_t)v1028, *(void **)(v1031+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1029));
        if ((v1045 & 1) == 0)
        {
          v1038 = 0;
          v1039 = v1045 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1566;
        }
LABEL_1567:
        v1030 |= v1038;
        if (v1033 == ++v1029)
        {
          v7 = (uint64_t)v1028;
          v8 = v2180;
          if ((v1030 & 1) != 0)
            return 1;
LABEL_1569:
          if (sub_22E99D2C8((_QWORD *)v7, (unsigned int *)a4))
            return 1;
          goto LABEL_2550;
        }
      }
      if ((sub_22E9969B8((uint64_t)v1028, (unint64_t *)&v2222, v1034) & 1) == 0)
      {
        v1038 = 0;
        v1039 = v2222;
LABEL_1566:
        *(_QWORD *)(v1031
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v1029) = v1039;
        goto LABEL_1567;
      }
      goto LABEL_1562;
    case 1876:
    case 1877:
    case 1878:
    case 1879:
    case 1880:
    case 1881:
    case 1882:
    case 1883:
    case 1884:
    case 1885:
    case 1886:
    case 1887:
    case 1888:
    case 1889:
    case 1890:
    case 1891:
    case 1892:
      LODWORD(__dst) = 0;
      v56 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v57 = *(_QWORD *)(v56 & 0xFFFFFFFFFFFFFFF0);
      v58 = v57 && *(_BYTE *)(v57 + 16) == 26;
      v2168 = v8;
      if (v58)
      {
        v59 = v5;
      }
      else
      {
        v59 = v5;
        v57 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v57 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
            ? sub_22F10CF48(v57)
            : 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v57 + 16) >> 38)))
        return 1;
      v293 = *(_QWORD *)(v57 + 16);
      if ((v293 & 0x3FFFC000000000) == 0)
        goto LABEL_470;
      v294 = (_QWORD *)v7;
      v295 = 0;
      v296 = 0;
      v297 = a4 + 8;
      v298 = v57 + 40;
      v299 = (unsigned __int16)(v293 >> 38);
      while (1)
      {
        v300 = *(_QWORD *)(v298 + 8 * v295);
        v301 = *(_QWORD *)(v297
                         + ((unint64_t)*(unsigned int *)a4 >> 24)
                         + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                         + 8 * v295);
        *(_QWORD *)&v2222 = v301;
        v302 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v300 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v302 || (*(_DWORD *)(v302 + 16) & 0xFF800FF) != 137887755)
          break;
        if (sub_22E99DD74(v301, v59))
        {
          sub_22F0D5A50(v301);
          sub_22E8FCA40(v294, v306, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v301 + 8);
          v307 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v308 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v308 + 28) & 0x7Eu) - 52 >= 6)
            v309 = 0;
          else
            v309 = v308;
          __src = *(void **)(v309 + 40);
          sub_22E894538(v307, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_464:
          v304 = 1;
          goto LABEL_468;
        }
        v304 = 1;
        v310 = sub_22EB1B954((uint64_t)v294, *(void **)(v297+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v295));
        if ((v310 & 1) == 0)
        {
          v304 = 0;
          v305 = v310 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_467;
        }
LABEL_468:
        v296 |= v304;
        if (v299 == ++v295)
        {
          v7 = (uint64_t)v294;
          if ((v296 & 1) == 0)
          {
LABEL_470:
            *(_QWORD *)(a4 + 8) = *(_QWORD *)(*(_QWORD *)(a4
                                                        + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                        + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                        + 16)
                                            + 8);
            v8 = v2168;
            v5 = v59;
            goto LABEL_2936;
          }
          return 1;
        }
      }
      if ((sub_22E9969B8((uint64_t)v294, (unint64_t *)&v2222, v300) & 1) == 0)
      {
        v304 = 0;
        v305 = v2222;
LABEL_467:
        *(_QWORD *)(v297
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v295) = v305;
        goto LABEL_468;
      }
      goto LABEL_464;
    case 1893:
    case 1894:
    case 1895:
    case 1896:
    case 1897:
    case 1898:
    case 1899:
    case 1900:
    case 1901:
    case 1902:
    case 1903:
    case 1904:
    case 1905:
    case 1906:
    case 1907:
    case 1908:
    case 1909:
    case 1910:
    case 1911:
    case 1912:
    case 1913:
      LODWORD(__dst) = 0;
      v48 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v49 = *(_QWORD *)(v48 & 0xFFFFFFFFFFFFFFF0);
      if (v49)
        v50 = *(_BYTE *)(v49 + 16) == 26;
      else
        v50 = 0;
      v2141 = v5;
      v2167 = v8;
      if (!v50)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v49 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v49 = sub_22F10CF48(v49);
        else
          v49 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v49 + 16) >> 38)))
        return 1;
      v274 = *(_QWORD *)(v49 + 16);
      if ((v274 & 0x3FFFC000000000) == 0)
        goto LABEL_448;
      v275 = 0;
      v276 = 0;
      v277 = a4 + 8;
      v278 = v49 + 40;
      v279 = (unsigned __int16)(v274 >> 38);
      while (1)
      {
        v280 = *(_QWORD *)(v278 + 8 * v275);
        v281 = *(_QWORD **)(v277
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v275);
        *(_QWORD *)&v2222 = v281;
        v282 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v280 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v282)
          v283 = (*(_DWORD *)(v282 + 16) & 0xFF800FF) == 137887755;
        else
          v283 = 0;
        if (v283)
        {
          v286 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v281[1] & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v286)
            v287 = *(_DWORD *)(v286 + 16) == 11;
          else
            v287 = 0;
          if (!v287 || ((*(_DWORD *)(v286 + 16) >> 19) & 0x1FFu) - 175 <= 0xFFFFFFFD)
          {
            sub_22F0D5A50((uint64_t)v281);
            sub_22E8FCA40((_QWORD *)v7, v288, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = v281[1];
            v289 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v290 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v290 + 28) & 0x7Eu) - 52 >= 6)
              v291 = 0;
            else
              v291 = v290;
            __src = *(void **)(v291 + 40);
            sub_22E894538(v289, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_442:
            v284 = 1;
            goto LABEL_443;
          }
          v284 = 1;
          v292 = sub_22EB1B954(v7, v281);
          if ((v292 & 1) != 0)
            goto LABEL_443;
          v284 = 0;
          v285 = v292 & 0xFFFFFFFFFFFFFFFELL;
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v280) & 1) != 0)
            goto LABEL_442;
          v284 = 0;
          v285 = v2222;
        }
        *(_QWORD *)(v277
                  + ((unint64_t)*(unsigned int *)a4 >> 24)
                  + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                  + 8 * v275) = v285;
LABEL_443:
        v276 |= v284;
        if (v279 == ++v275)
        {
          if ((v276 & 1) != 0)
            return 1;
LABEL_448:
          *(_QWORD *)(a4 + 8) = *(_QWORD *)(*(_QWORD *)(a4
                                                      + ((unint64_t)*(unsigned int *)a4 >> 24)
                                                      + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                                                      + 8)
                                          + 8);
          v8 = v2167;
LABEL_1227:
          v5 = v2141;
          goto LABEL_2936;
        }
      }
    case 1914:
    case 1915:
    case 1916:
    case 1917:
    case 1918:
    case 1919:
    case 1920:
      LODWORD(__dst) = 0;
      v83 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v84 = (int)v5 - 1914;
      v85 = dword_22F468FD8[v84];
      v86 = dword_22F468FF4[(int)v84];
      v87 = dword_22F469010[(int)v84];
      v88 = *(_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF0);
      if (v88)
        v89 = *(_BYTE *)(v88 + 16) == 26;
      else
        v89 = 0;
      if (!v89)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v88 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v88 = sub_22F10CF48(*(_QWORD *)(v83 & 0xFFFFFFFFFFFFFFF0));
        else
          v88 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v88 + 16) >> 38)))
        return 1;
      v697 = *(_QWORD *)(v88 + 16);
      v698 = (_QWORD *)(a4 + 8);
      if ((v697 & 0x3FFFC000000000) == 0)
        goto LABEL_1114;
      v2125 = v87;
      v2127 = v86;
      v2130 = v85;
      v2174 = v8;
      v699 = 0;
      v700 = 0;
      v2136 = v88 + 40;
      v701 = (unsigned __int16)(v697 >> 38);
      while (1)
      {
        v702 = *(_QWORD *)(v2136 + 8 * v699);
        v703 = *(unsigned int *)a4;
        v704 = (v703 >> 18) & 1;
        v705 = *(_QWORD *)((char *)&v698[v704 + v699] + (v703 >> 24));
        *(_QWORD *)&v2222 = v705;
        v706 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v702 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v706)
          v707 = (*(_DWORD *)(v706 + 16) & 0xFF800FF) == 137887755;
        else
          v707 = 0;
        if (v707)
        {
          v709 = v5;
          if ((_DWORD)v699 == 4)
          {
            if (sub_22E99CB80(v705, *(_QWORD *)(*(_QWORD *)((char *)&v698[v704] + (v703 >> 24)) + 8)))
              goto LABEL_1101;
          }
          else if ((_DWORD)v699 == 1)
          {
            v710 = *(_QWORD *)(*(_QWORD *)(v705 + 8) & 0xFFFFFFFFFFFFFFF0);
            if (!v710 || *(_BYTE *)(v710 + 16) != 39)
            {
              if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v710 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
                goto LABEL_1101;
              v710 = sub_22F10CF48(v710);
              if (!v710)
                goto LABEL_1101;
            }
            v711 = *(_QWORD *)(*(_QWORD *)(v710 + 32) & 0xFFFFFFFFFFFFFFF0);
            v712 = *v2174;
            v713 = sub_22E3E4B64(v711);
            v714 = v711;
            if (v713)
            {
              v714 = v711;
              if ((*(_DWORD *)(v713 + 20) - 2) <= 2)
              {
                v714 = v711;
                if ((*(_DWORD *)(v713 + 16) & 0x780000) != 0x80000)
                  v714 = *(_QWORD *)(*(_QWORD *)(v713 + 32) & 0xFFFFFFFFFFFFFFF0);
              }
            }
            v715 = *(_QWORD *)(*(_QWORD *)(v714 + 8) & 0xFFFFFFFFFFFFFFF0);
            v716 = v715 && *(_DWORD *)(v715 + 16) == 11;
            if (!v716
              || (((*(_DWORD *)(v715 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
                ? (v724 = ((1 << ((*(_DWORD *)(v715 + 16) >> 19) + 83)) & 0x6000000303) == 0)
                : (v724 = 1),
                  v724))
            {
              if ((sub_22F10BE84(v711, v712) & 1) == 0)
              {
LABEL_1101:
                sub_22F0D5A50(v705);
                sub_22E8FCA40((_QWORD *)v7, v720, 0xEEEu, 0, (uint64_t)__p);
                *(_QWORD *)&v2218 = *(_QWORD *)(v705 + 8);
                v721 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
                v722 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
                if ((*(_DWORD *)(v722 + 28) & 0x7Eu) - 52 >= 6)
                  v723 = 0;
                else
                  v723 = v722;
                __src = *(void **)(v723 + 40);
                sub_22E894538(v721, (uint64_t *)&__src);
                sub_22E903BEC((unsigned int *)__p);
                v708 = 1;
                v5 = v709;
                goto LABEL_1112;
              }
            }
          }
          else
          {
            v718 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v705 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            if (v718)
              v719 = *(_DWORD *)(v718 + 16) == 11;
            else
              v719 = 0;
            if (!v719 || ((*(_DWORD *)(v718 + 16) >> 19) & 0x1FFu) - 175 < 0xFFFFFFFE)
              goto LABEL_1101;
          }
          v708 = 1;
          v725 = sub_22EB1B954(v7, *(void **)((char *)&v698[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v699]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
          v5 = v709;
          if ((v725 & 1) == 0)
          {
            v708 = 0;
            v717 = v725 & 0xFFFFFFFFFFFFFFFELL;
            goto LABEL_1111;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v702) & 1) == 0)
          {
            v708 = 0;
            v717 = v2222;
LABEL_1111:
            *(_QWORD *)((char *)&v698[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v699]
                      + ((unint64_t)*(unsigned int *)a4 >> 24)) = v717;
            goto LABEL_1112;
          }
          v708 = 1;
        }
LABEL_1112:
        v700 |= v708;
        if (v701 == ++v699)
        {
          v8 = v2174;
          v86 = v2127;
          v85 = v2130;
          v87 = v2125;
          if ((v700 & 1) == 0)
          {
LABEL_1114:
            if (!sub_22E99C8B4((_QWORD *)v7, (unsigned int *)a4, 4u, v85, v86, v87))
            {
              *v698 = *(_QWORD *)(*v8 + 16392);
              goto LABEL_2936;
            }
          }
          return 1;
        }
      }
    case 1921:
    case 1922:
    case 1923:
    case 1924:
    case 1925:
    case 1926:
    case 1927:
    case 1928:
    case 1929:
    case 1930:
      LODWORD(__dst) = 0;
      v75 = v5;
      v76 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v77 = (int)v5 - 1921;
      v2134 = dword_22F469030[v77];
      v2126 = dword_22F469058[(int)v77];
      v2129 = dword_22F469080[(int)v77];
      v78 = *(_QWORD *)(v76 & 0xFFFFFFFFFFFFFFF0);
      if (v78)
        v79 = *(_BYTE *)(v78 + 16) == 26;
      else
        v79 = 0;
      if (!v79)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v78 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v78 = sub_22F10CF48(*(_QWORD *)(v76 & 0xFFFFFFFFFFFFFFF0));
        else
          v78 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v78 + 16) >> 38)))
        return 1;
      v649 = *(_QWORD *)(v78 + 16);
      v650 = (_QWORD *)(a4 + 8);
      if ((v649 & 0x3FFFC000000000) == 0)
        goto LABEL_1024;
      v2173 = v8;
      v651 = 0;
      v652 = 0;
      v653 = v78 + 40;
      v654 = (unsigned __int16)(v649 >> 38);
      while (1)
      {
        v655 = *(_QWORD *)(v653 + 8 * v651);
        v656 = *(unsigned int *)a4;
        v657 = (v656 >> 18) & 1;
        v658 = *(_QWORD *)((char *)&v650[v657 + v651] + (v656 >> 24));
        *(_QWORD *)&v2222 = v658;
        v659 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v655 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v659 || (*(_DWORD *)(v659 + 16) & 0xFF800FF) != 137887755)
          break;
        if (v651 == 1)
        {
          if (sub_22E99CB80(v658, *(_QWORD *)(*(_QWORD *)((char *)&v650[v657] + (v656 >> 24)) + 8)))
            goto LABEL_1014;
        }
        else if (v2134 == v651 || v2129 == v651 || v2126 == v651)
        {
          v663 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v658 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v663)
            v664 = *(_DWORD *)(v663 + 16) == 11;
          else
            v664 = 0;
          if (!v664 || ((*(_DWORD *)(v663 + 16) >> 19) & 0x1FFu) - 175 <= 0xFFFFFFFD)
          {
LABEL_1014:
            sub_22F0D5A50(v658);
            sub_22E8FCA40((_QWORD *)v7, v665, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v658 + 8);
            v666 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v667 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v667 + 28) & 0x7Eu) - 52 >= 6)
              v668 = 0;
            else
              v668 = v667;
            __src = *(void **)(v668 + 40);
            sub_22E894538(v666, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_1018:
            v661 = 1;
            goto LABEL_1022;
          }
        }
        else if ((sub_22E99CC7C(*(_QWORD *)(v658 + 8)) & 1) != 0)
        {
          goto LABEL_1014;
        }
        v661 = 1;
        v669 = sub_22EB1B954(v7, *(void **)((char *)&v650[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v651]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v669 & 1) == 0)
        {
          v661 = 0;
          v662 = v669 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_1021;
        }
LABEL_1022:
        v652 |= v661;
        if (v654 == ++v651)
        {
          v8 = v2173;
          if ((v652 & 1) != 0)
            return 1;
LABEL_1024:
          if (sub_22E99C8B4((_QWORD *)v7, (unsigned int *)a4, 1u, v2129, v2126, v2134))
            return 1;
          v670 = *(_QWORD *)(*v8 + 16392);
          goto LABEL_1026;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v655) & 1) == 0)
      {
        v661 = 0;
        v662 = v2222;
LABEL_1021:
        *(_QWORD *)((char *)&v650[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v651]
                  + ((unint64_t)*(unsigned int *)a4 >> 24)) = v662;
        goto LABEL_1022;
      }
      goto LABEL_1018;
    case 1931:
    case 1932:
      LODWORD(__dst) = 0;
      v233 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v234 = *(_QWORD *)(v233 & 0xFFFFFFFFFFFFFFF0);
      if (v234)
        v235 = *(_BYTE *)(v234 + 16) == 26;
      else
        v235 = 0;
      if (!v235)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v234 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v234 = sub_22F10CF48(*(_QWORD *)(v233 & 0xFFFFFFFFFFFFFFF0));
        else
          v234 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v234 + 16) >> 38)))
        return 1;
      v1092 = *(_QWORD *)(v234 + 16);
      if ((v1092 & 0x3FFFC000000000) == 0)
        goto LABEL_2550;
      v2146 = v5;
      v1093 = v8;
      v1094 = 0;
      v906 = 0;
      v1095 = a4 + 8;
      v1096 = v234 + 40;
      v1097 = (unsigned __int16)(v1092 >> 38);
      while (1)
      {
        v1098 = *(_QWORD *)(v1096 + 8 * v1094);
        v1099 = *(_QWORD *)(v1095
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1094);
        *(_QWORD *)&v2222 = v1099;
        v1100 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1098 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1100 || (*(_DWORD *)(v1100 + 16) & 0xFF800FF) != 137887755)
          break;
        v1104 = *(_QWORD *)(*(_QWORD *)(v1099 + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((!v1104 || *(_BYTE *)(v1104 + 16) != 56)
          && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1104 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
           || (v1104 = sub_22F10CF48(v1104)) == 0)
          || *(_DWORD *)(v1104 + 20) != 2
          || ((v1105 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1104 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
            ? (v1106 = *(_DWORD *)(v1105 + 16) == 11)
            : (v1106 = 0),
              !v1106 || (v1107 = (*(_DWORD *)(v1105 + 16) >> 19) & 0x1FF, v1107 != 174) && v1107 != 211))
        {
          sub_22F0D5A50(v1099);
          sub_22E8FCA40((_QWORD *)v7, v1109, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1099 + 8);
          v1110 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1111 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1111 + 28) & 0x7Eu) - 52 >= 6)
            v1112 = 0;
          else
            v1112 = v1111;
          __src = *(void **)(v1112 + 40);
          sub_22E894538(v1110, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_1660:
          v1102 = 1;
          goto LABEL_1661;
        }
        v1102 = 1;
        v1108 = sub_22EB1B954(v7, *(void **)(v1095+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1094));
        if ((v1108 & 1) == 0)
        {
          v1102 = 0;
          v1103 = v1108 & 0xFFFFFFFFFFFFFFFELL;
LABEL_1641:
          *(_QWORD *)(v1095
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                    + 8 * v1094) = v1103;
        }
LABEL_1661:
        v906 |= v1102;
        if (v1097 == ++v1094)
        {
          v8 = v1093;
          goto LABEL_1663;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1098) & 1) != 0)
        goto LABEL_1660;
      v1102 = 0;
      v1103 = v2222;
      goto LABEL_1641;
    case 1934:
    case 1935:
    case 2006:
      LODWORD(__dst) = 0;
      v155 = sub_22EF72B64(*v8, v5, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v156 = *(_QWORD *)(v155 & 0xFFFFFFFFFFFFFFF0);
      if (v156)
        v157 = *(_BYTE *)(v156 + 16) == 26;
      else
        v157 = 0;
      if (!v157)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v156 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v156 = sub_22F10CF48(*(_QWORD *)(v155 & 0xFFFFFFFFFFFFFFF0));
        else
          v156 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v156 + 16) >> 38)))
        return 1;
      v841 = *(_QWORD *)(v156 + 16);
      if ((v841 & 0x3FFFC000000000) == 0)
        return a4;
      v2144 = v5;
      v842 = v8;
      v843 = 0;
      v844 = 0;
      v845 = a4 + 8;
      v846 = v156 + 40;
      v847 = (unsigned __int16)(v841 >> 38);
      while (1)
      {
        v848 = *(_QWORD *)(v846 + 8 * v843);
        v849 = *(unsigned int *)a4;
        v850 = (v849 >> 18) & 1;
        v851 = *(_QWORD *)(v845 + (v849 >> 24) + 8 * v850 + 8 * v843);
        *(_QWORD *)&v2222 = v851;
        v852 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v848 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v852 || (*(_DWORD *)(v852 + 16) & 0xFF800FF) != 137887755)
          break;
        sub_22F007D7C(*(unsigned __int8 **)(v845 + (v849 >> 24) + 8 * v850), *v842, 0, (uint64_t)__p);
        v856 = (uint64_t *)__p;
        if (*(_DWORD *)&__p[8] >= 0x41u)
          v856 = *(uint64_t **)__p;
        v857 = *v856;
        if (*(_DWORD *)&__p[8] >= 0x41u && *(_QWORD *)__p)
          MEMORY[0x2348A0E84]();
        v858 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v851 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v859 = *(_DWORD *)(v858 + 16);
        if (v858)
          v860 = *(_DWORD *)(v858 + 16) == 11;
        else
          v860 = 0;
        if (!v860 || ((v857 & 1) != 0 ? (v861 = 253) : (v861 = 254), ((v859 >> 19) & 0x1FF) != v861))
        {
          sub_22F0D5A50(v851);
          sub_22E8FCA40((_QWORD *)v7, v863, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v851 + 8);
          v864 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v865 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v865 + 28) & 0x7Eu) - 52 >= 6)
            v866 = 0;
          else
            v866 = v865;
          __src = *(void **)(v866 + 40);
          sub_22E894538(v864, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_1315:
          v854 = 1;
          goto LABEL_1316;
        }
        v854 = 1;
        v862 = sub_22EB1B954(v7, *(void **)(v845+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v843));
        if ((v862 & 1) == 0)
        {
          v854 = 0;
          v855 = v862 & 0xFFFFFFFFFFFFFFFELL;
LABEL_1294:
          *(_QWORD *)(v845
                    + ((unint64_t)*(unsigned int *)a4 >> 24)
                    + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                    + 8 * v843) = v855;
        }
LABEL_1316:
        v844 |= v854;
        if (v847 == ++v843)
        {
          v8 = v842;
          v5 = v2144;
          if ((v844 & 1) == 0)
            goto LABEL_2936;
          return 1;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v848) & 1) != 0)
        goto LABEL_1315;
      v854 = 0;
      v855 = v2222;
      goto LABEL_1294;
    case 1949:
      LODWORD(__dst) = 0;
      v508 = sub_22EF72B64(*v8, 0x79Du, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v509 = *(_QWORD *)(v508 & 0xFFFFFFFFFFFFFFF0);
      if (v509)
        v510 = *(_BYTE *)(v509 + 16) == 26;
      else
        v510 = 0;
      if (!v510)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v509 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v509 = sub_22F10CF48(*(_QWORD *)(v508 & 0xFFFFFFFFFFFFFFF0));
        else
          v509 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v509 + 16) >> 38)))
        return 1;
      v1580 = *(_QWORD *)(v509 + 16);
      if ((v1580 & 0x3FFFC000000000) == 0)
        goto LABEL_2498;
      v2150 = v5;
      v2182 = v8;
      v1581 = 0;
      v1124 = 0;
      v1582 = a4 + 8;
      v1583 = v509 + 40;
      v1584 = (unsigned __int16)(v1580 >> 38);
      while (1)
      {
        v1585 = *(_QWORD *)(v1583 + 8 * v1581);
        v1586 = *(_QWORD *)(v1582
                          + ((unint64_t)*(unsigned int *)a4 >> 24)
                          + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                          + 8 * v1581);
        *(_QWORD *)&v2222 = v1586;
        v1587 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1585 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1587)
          v1588 = (*(_DWORD *)(v1587 + 16) & 0xFF800FF) == 137887755;
        else
          v1588 = 0;
        if (v1588)
        {
          v1590 = *(_QWORD *)(v1586 + 8);
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1590 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) != 39
            || (sub_22EFF605C(v1586), (sub_22F320D00(v7, v1590, v1596) & 1) == 0))
          {
            sub_22F0D5A50(v1586);
            sub_22E8FCA40((_QWORD *)v7, v1591, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1586 + 8);
            v1592 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1593 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1593 + 28) & 0x7Eu) - 52 >= 6)
              v1594 = 0;
            else
              v1594 = v1593;
            __src = *(void **)(v1594 + 40);
            sub_22E894538(v1592, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
            v1589 = 1;
            goto LABEL_2368;
          }
          v1589 = 1;
          v1597 = sub_22EB1B954(v7, *(void **)(v1582+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1581));
          if ((v1597 & 1) == 0)
          {
            v1589 = 0;
            v1595 = v1597 & 0xFFFFFFFFFFFFFFFELL;
            goto LABEL_2367;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1585) & 1) == 0)
          {
            v1589 = 0;
            v1595 = v2222;
LABEL_2367:
            *(_QWORD *)(v1582
                      + ((unint64_t)*(unsigned int *)a4 >> 24)
                      + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                      + 8 * v1581) = v1595;
            goto LABEL_2368;
          }
          v1589 = 1;
        }
LABEL_2368:
        v1124 |= v1589;
        if (v1584 == ++v1581)
        {
LABEL_2497:
          v5 = v2150;
          v8 = v2182;
          if ((v1124 & 1) != 0)
            return 1;
          goto LABEL_2498;
        }
      }
    case 2016:
      LODWORD(__dst) = 0;
      v2171 = v8;
      v514 = sub_22EF72B64(*v8, 0x7E0u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v515 = *(_QWORD *)(v514 & 0xFFFFFFFFFFFFFFF0);
      if (v515)
        v516 = *(_BYTE *)(v515 + 16) == 26;
      else
        v516 = 0;
      if (!v516)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v515 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v515 = sub_22F10CF48(*(_QWORD *)(v514 & 0xFFFFFFFFFFFFFFF0));
        else
          v515 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v515 + 16) >> 38)))
        return 1;
      v1621 = *(_QWORD *)(v515 + 16);
      v1215 = (_QWORD *)(a4 + 8);
      if ((v1621 & 0x3FFFC000000000) == 0)
        goto LABEL_2421;
      v2159 = v5;
      v1622 = 0;
      v1623 = 0;
      v1624 = v515 + 40;
      v1625 = (unsigned __int16)(v1621 >> 38);
      while (1)
      {
        v1626 = *(_QWORD *)(v1624 + 8 * v1622);
        v1627 = *(_QWORD *)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1622]
                          + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1627;
        v1628 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1626 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1628)
          v1629 = (*(_DWORD *)(v1628 + 16) & 0xFF800FF) == 137887755;
        else
          v1629 = 0;
        if (v1629)
        {
          v1631 = *(_QWORD *)(v1627 + 8);
          if ((sub_22E536DC0(*(_QWORD *)(v1631 & 0xFFFFFFFFFFFFFFF0)) & 1) == 0 && (sub_22EA53D88(v1631) & 1) == 0)
          {
            sub_22F0D5A50(v1627);
            sub_22E8FCA40((_QWORD *)v7, v1634, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1627 + 8);
            v1635 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1636 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1636 + 28) & 0x7Eu) - 52 >= 6)
              v1637 = 0;
            else
              v1637 = v1636;
            __src = *(void **)(v1637 + 40);
            sub_22E894538(v1635, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
            v1630 = 1;
            goto LABEL_2419;
          }
          v1630 = 1;
          v1632 = sub_22EB1B954(v7, *(void **)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1622]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
          if ((v1632 & 1) == 0)
          {
            v1630 = 0;
            v1633 = v1632 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2414:
            *(_QWORD *)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1622]
                      + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1633;
          }
        }
        else
        {
          if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1626) & 1) == 0)
          {
            v1630 = 0;
            v1633 = v2222;
            goto LABEL_2414;
          }
          v1630 = 1;
        }
LABEL_2419:
        v1623 |= v1630;
        if (v1625 == ++v1622)
        {
          v5 = v2159;
          if ((v1623 & 1) != 0)
            return 1;
LABEL_2421:
          v8 = v2171;
LABEL_2447:
          v1234 = *(_QWORD *)(*v8 + 16392);
          goto LABEL_2448;
        }
      }
    case 2017:
      LODWORD(__dst) = 0;
      v511 = sub_22EF72B64(*v8, 0x7E1u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v512 = *(_QWORD *)(v511 & 0xFFFFFFFFFFFFFFF0);
      if (v512)
        v513 = *(_BYTE *)(v512 + 16) == 26;
      else
        v513 = 0;
      if (!v513)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v512 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v512 = sub_22F10CF48(*(_QWORD *)(v511 & 0xFFFFFFFFFFFFFFF0));
        else
          v512 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v512 + 16) >> 38)))
        return 1;
      v1598 = *(_QWORD *)(v512 + 16);
      v1215 = (_QWORD *)(a4 + 8);
      if ((v1598 & 0x3FFFC000000000) == 0)
        goto LABEL_2447;
      v2158 = v5;
      v2190 = v8;
      v1599 = 0;
      v1600 = 0;
      v1601 = v512 + 40;
      v1602 = (unsigned __int16)(v1598 >> 38);
      while (1)
      {
        v1603 = *(_QWORD *)(v1601 + 8 * v1599);
        v1604 = *(unsigned int *)a4;
        v1605 = v1604 >> 24;
        v1606 = (v1604 >> 18) & 1;
        v1607 = *(_QWORD *)((char *)&v1215[v1606 + v1599] + v1605);
        *(_QWORD *)&v2222 = v1607;
        v1608 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1603 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1608 || (*(_DWORD *)(v1608 + 16) & 0xFF800FF) != 137887755)
          break;
        v1612 = *(_QWORD *)(v1607 + 8);
        v1613 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1612 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v1613)
          v1614 = (*(_DWORD *)(v1613 + 16) & 0xFF800FF) == 86507531;
        else
          v1614 = 0;
        if (!v1614)
        {
          if (!sub_22EA53C48(v1612))
          {
            sub_22F0D5A50(v1607);
            sub_22E8FCA40((_QWORD *)v7, v1617, 0xEEEu, 0, (uint64_t)__p);
            *(_QWORD *)&v2218 = *(_QWORD *)(v1607 + 8);
            v1618 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
            v1619 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
            if ((*(_DWORD *)(v1619 + 28) & 0x7Eu) - 52 >= 6)
              v1620 = 0;
            else
              v1620 = v1619;
            __src = *(void **)(v1620 + 40);
            sub_22E894538(v1618, (uint64_t *)&__src);
            sub_22E903BEC((unsigned int *)__p);
LABEL_2396:
            v1610 = 1;
            goto LABEL_2397;
          }
          v1615 = *(unsigned int *)a4;
          v1605 = v1615 >> 24;
          v1606 = (v1615 >> 18) & 1;
        }
        v1610 = 1;
        v1616 = sub_22EB1B954(v7, *(void **)((char *)&v1215[v1606 + v1599] + v1605));
        if ((v1616 & 1) == 0)
        {
          v1610 = 0;
          v1611 = v1616 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2391:
          *(_QWORD *)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1599]
                    + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1611;
        }
LABEL_2397:
        v1600 |= v1610;
        if (v1602 == ++v1599)
          goto LABEL_2446;
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1603) & 1) != 0)
        goto LABEL_2396;
      v1610 = 0;
      v1611 = v2222;
      goto LABEL_2391;
    case 2019:
      LODWORD(__dst) = 0;
      v517 = sub_22EF72B64(*v8, 0x7E3u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v518 = *(_QWORD *)(v517 & 0xFFFFFFFFFFFFFFF0);
      if (v518)
        v519 = *(_BYTE *)(v518 + 16) == 26;
      else
        v519 = 0;
      if (!v519)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v518 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v518 = sub_22F10CF48(*(_QWORD *)(v517 & 0xFFFFFFFFFFFFFFF0));
        else
          v518 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v518 + 16) >> 38)))
        return 1;
      v1638 = *(_QWORD *)(v518 + 16);
      v1215 = (_QWORD *)(a4 + 8);
      if ((v1638 & 0x3FFFC000000000) == 0)
        goto LABEL_2447;
      v2158 = v5;
      v2190 = v8;
      v1639 = 0;
      v1600 = 0;
      v1640 = v518 + 40;
      v1641 = (unsigned __int16)(v1638 >> 38);
      while (1)
      {
        v1642 = *(_QWORD *)(v1640 + 8 * v1639);
        v1643 = *(_QWORD *)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1639]
                          + ((unint64_t)*(unsigned int *)a4 >> 24));
        *(_QWORD *)&v2222 = v1643;
        v1644 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1642 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v1644 || (*(_DWORD *)(v1644 + 16) & 0xFF800FF) != 137887755)
          break;
        v1648 = sub_22E3E4B64(*(_QWORD *)(*(_QWORD *)(v1643 + 8) & 0xFFFFFFFFFFFFFFF0));
        if (!v1648
          || ((v1649 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1648 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
            ? (v1650 = (*(_DWORD *)(v1649 + 16) & 0xFF800FF) == 88080395)
            : (v1650 = 0),
              !v1650))
        {
          sub_22F0D5A50(v1643);
          sub_22E8FCA40((_QWORD *)v7, v1651, 0xEEEu, 0, (uint64_t)__p);
          *(_QWORD *)&v2218 = *(_QWORD *)(v1643 + 8);
          v1652 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
          v1653 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
          if ((*(_DWORD *)(v1653 + 28) & 0x7Eu) - 52 >= 6)
            v1654 = 0;
          else
            v1654 = v1653;
          __src = *(void **)(v1654 + 40);
          sub_22E894538(v1652, (uint64_t *)&__src);
          sub_22E903BEC((unsigned int *)__p);
LABEL_2441:
          v1646 = 1;
          goto LABEL_2445;
        }
        v1646 = 1;
        v1655 = sub_22EB1B954(v7, *(void **)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1639]+ ((unint64_t)*(unsigned int *)a4 >> 24)));
        if ((v1655 & 1) == 0)
        {
          v1646 = 0;
          v1647 = v1655 & 0xFFFFFFFFFFFFFFFELL;
          goto LABEL_2444;
        }
LABEL_2445:
        v1600 |= v1646;
        if (v1641 == ++v1639)
        {
LABEL_2446:
          v5 = v2158;
          v8 = v2190;
          if ((v1600 & 1) != 0)
            return 1;
          goto LABEL_2447;
        }
      }
      if ((sub_22E9969B8(v7, (unint64_t *)&v2222, v1642) & 1) == 0)
      {
        v1646 = 0;
        v1647 = v2222;
LABEL_2444:
        *(_QWORD *)((char *)&v1215[(((unint64_t)*(unsigned int *)a4 >> 18) & 1) + v1639]
                  + ((unint64_t)*(unsigned int *)a4 >> 24)) = v1647;
        goto LABEL_2445;
      }
      goto LABEL_2441;
    case 2023:
      LODWORD(__dst) = 0;
      v520 = sub_22EF72B64(*v8, 0x7E7u, &__dst, 0);
      if ((_DWORD)__dst)
        return 1;
      v521 = *(_QWORD *)(v520 & 0xFFFFFFFFFFFFFFF0);
      if (v521)
        v522 = *(_BYTE *)(v521 + 16) == 26;
      else
        v522 = 0;
      if (!v522)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v521 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
          v521 = sub_22F10CF48(*(_QWORD *)(v520 & 0xFFFFFFFFFFFFFFF0));
        else
          v521 = 0;
      }
      if (sub_22E979C64((_QWORD *)v7, (unsigned int *)a4, (unsigned __int16)(*(_QWORD *)(v521 + 16) >> 38)))
        return 1;
      v1656 = *(_QWORD *)(v521 + 16);
      if ((v1656 & 0x3FFFC000000000) == 0)
        goto LABEL_2550;
      v2160 = v5;
      v2191 = v8;
      v1657 = (_QWORD *)v7;
      v1658 = 0;
      v1659 = 0;
      v1660 = a4 + 8;
      v1661 = v521 + 40;
      v1662 = (unsigned __int16)(v1656 >> 38);
      break;
    default:
      goto LABEL_2936;
  }
  while (1)
  {
    v1663 = *(_QWORD *)(v1661 + 8 * v1658);
    v1664 = *(_QWORD *)(v1660
                      + ((unint64_t)*(unsigned int *)a4 >> 24)
                      + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                      + 8 * v1658);
    *(_QWORD *)&v2222 = v1664;
    v1665 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1663 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (!v1665 || (*(_DWORD *)(v1665 + 16) & 0xFF800FF) != 137887755)
      break;
    v1669 = *(_QWORD *)(*(_QWORD *)(v1664 + 8) & 0xFFFFFFFFFFFFFFF0);
    if ((!v1669 || *(_BYTE *)(v1669 + 16) != 56)
      && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1669 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
       || (v1669 = sub_22F10CF48(v1669)) == 0)
      || (*(_DWORD *)(v1669 + 20) - 2) >= 3)
    {
      sub_22F0D5A50(v1664);
      sub_22E8FCA40(v1657, v1671, 0xEEEu, 0, (uint64_t)__p);
      *(_QWORD *)&v2218 = *(_QWORD *)(v1664 + 8);
      v1672 = sub_22E8901B8((uint64_t)__p, (uint64_t *)&v2218);
      v1673 = sub_22EFFA604(*(unsigned __int8 **)(a4 + *(unsigned __int8 *)(a4 + 3)));
      if ((*(_DWORD *)(v1673 + 28) & 0x7Eu) - 52 >= 6)
        v1674 = 0;
      else
        v1674 = v1673;
      __src = *(void **)(v1674 + 40);
      sub_22E894538(v1672, (uint64_t *)&__src);
      sub_22E903BEC((unsigned int *)__p);
LABEL_2471:
      v1667 = 1;
      goto LABEL_2472;
    }
    v1667 = 1;
    v1670 = sub_22EB1B954((uint64_t)v1657, *(void **)(v1660+ ((unint64_t)*(unsigned int *)a4 >> 24)+ 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)+ 8 * v1658));
    if ((v1670 & 1) == 0)
    {
      v1667 = 0;
      v1668 = v1670 & 0xFFFFFFFFFFFFFFFELL;
LABEL_2466:
      *(_QWORD *)(v1660
                + ((unint64_t)*(unsigned int *)a4 >> 24)
                + 8 * (((unint64_t)*(unsigned int *)a4 >> 18) & 1)
                + 8 * v1658) = v1668;
    }
LABEL_2472:
    v1659 |= v1667;
    if (v1662 == ++v1658)
    {
LABEL_2549:
      v7 = (uint64_t)v1657;
      v5 = v2160;
      v8 = v2191;
      if ((v1659 & 1) != 0)
        return 1;
      goto LABEL_2550;
    }
  }
  if ((sub_22E9969B8((uint64_t)v1657, (unint64_t *)&v2222, v1663) & 1) != 0)
    goto LABEL_2471;
  v1667 = 0;
  v1668 = v2222;
  goto LABEL_2466;
}

uint64_t sub_22E978904(_QWORD *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[14];
  void *v17;
  __int128 v18;
  _QWORD v19[33];

  v19[32] = *MEMORY[0x24BDAC8D0];
  v3 = sub_22EFFBBCC(a2);
  v4 = (uint64_t)v3;
  if (*v3 == 225 && (*(_DWORD *)v3 & 0x1C0000) == 0)
  {
    v8 = *((_DWORD *)v3 + 4) * ((*(_DWORD *)v3 >> 21) & 7u);
    if ((_DWORD)v8)
    {
      v9 = *((unsigned int *)v3 + 1);
      v10 = (uint64_t)&v3[4 * v9 + 20];
      v11 = 4 * v9 + 20;
      v12 = *((_DWORD *)v3 + 4) * ((*(_DWORD *)v3 >> 21) & 7u);
      while ((char)v3[v11] > 0)
      {
        ++v11;
        if (!--v12)
          return 0;
      }
      v17 = v19;
      v18 = xmmword_22F44E310;
      sub_22E579B44(&v17, v8, 0);
      v16[12] = (uint64_t)v17;
      v16[13] = v10;
      if (llvm::ConvertUTF8toUTF16())
      {
        sub_22F0D5A50(v4);
        sub_22E8FCA40(a1, v13, 0x18C7u, 0, (uint64_t)v16);
        sub_22F0D4E74(v4);
        v15 = v14;
        sub_22E8906A0((uint64_t)v16, &v15);
        sub_22E903BEC((unsigned int *)v16);
      }
      if (v17 != v19)
        free(v17);
    }
    return 0;
  }
  else
  {
    sub_22F0D5A50((uint64_t)v3);
    sub_22E8FCA40(a1, v5, 0xBDBu, 0, (uint64_t)&v17);
    sub_22F0D4E74(v4);
    v16[0] = v6;
    sub_22E8906A0((uint64_t)&v17, v16);
    sub_22E903BEC((unsigned int *)&v17);
    return 1;
  }
}

uint64_t sub_22E978AC0(_QWORD *a1, int a2, unsigned int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  BOOL v15;
  BOOL v17;
  int v18;
  int v19;
  _QWORD *v20;
  unsigned int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned __int8 *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int v33;
  unint64_t v34;
  int v35;
  int v36;
  unsigned int *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  int v43;
  unsigned int v44;
  _BYTE v45[96];
  unint64_t v46;
  uint64_t v47;
  unsigned int v48[20];
  unsigned __int8 v49;

  v6 = *(_QWORD *)((char *)a3 + *((unsigned __int8 *)a3 + 3));
  v7 = *(_QWORD *)(a1[11] + 15088);
  v8 = *(_DWORD *)(v7 + 56);
  v15 = v8 > 0x2A;
  v9 = (1 << v8) & 0x40000000028;
  if (v15 || v9 == 0)
  {
    if (a2 == 1299)
    {
      sub_22F0D5A50(*(_QWORD *)((char *)a3 + *((unsigned __int8 *)a3 + 3)));
      v19 = v25;
      v20 = a1;
      v21 = 2986;
      goto LABEL_30;
    }
LABEL_32:
    if (sub_22E979C64(a1, a3, 2u) || (sub_22E98473C((uint64_t)a1, a3) & 1) != 0)
      return 1;
    v47 = 0;
    v26 = sub_22E9847E8(a1, v6, &v47);
    if ((v26 & 1) != 0)
      return v26;
    v28 = *(unsigned __int8 **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 4] + ((unint64_t)*a3 >> 24));
    v29 = sub_22EFFBBCC(v28);
    if (*v29 == 161)
    {
      v30 = (uint64_t)v29;
      v31 = *((_QWORD *)v29 + 2);
      if (v31)
      {
        if ((*(_DWORD *)(v31 + 28) & 0x7F) == 0x40)
        {
          v32 = *(_QWORD *)(v31 + 48);
          v46 = v32;
          v33 = *(_DWORD *)(v31 + 24);
          if ((*(_BYTE *)(v31 + 96) & 7) == 5)
          {
            if (v31 == v47)
            {
              if ((*(_BYTE *)(a1[9] + 1) & 1) == 0)
              {
                v34 = v32 & 0xFFFFFFFFFFFFFFF0;
                v35 = 1;
                goto LABEL_56;
              }
LABEL_48:
              v34 = v32 & 0xFFFFFFFFFFFFFFF0;
              v38 = *(_QWORD *)(v32 & 0xFFFFFFFFFFFFFFF0);
              if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v38 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
                && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v38 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFF800FF) != 110624779)
              {
                if (!sub_22F1124D8(v38))
                  goto LABEL_47;
                v40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v34 + 8) & 0xFFFFFFFFFFFFFFF0);
                if (*(_BYTE *)(v40 + 16) == 44)
                {
                  v41 = sub_22F114198(*(_QWORD *)(v40 + 24));
                  if (v41)
                  {
                    if (sub_22F36EDA0(a1[11], *(_QWORD *)(v41 + 136), v32, 0))
                      goto LABEL_47;
                  }
                }
              }
              v35 = 0;
LABEL_56:
              v44 = 0;
              if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v34 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
              {
                v42 = 1;
              }
              else
              {
                if (!v35)
                {
LABEL_61:
                  sub_22F0D5A50(v30);
                  sub_22E8FCA40(a1, v43, 0x1BEEu, 0, (uint64_t)v48);
                  sub_22E89519C((uint64_t)v48, &v44);
                  sub_22E903BEC(v48);
                  sub_22E8FCA40(a1, v33, 0x175Bu, 0, (uint64_t)v48);
                  sub_22E8901B8((uint64_t)v48, (uint64_t *)&v46);
                  v37 = v48;
                  goto LABEL_46;
                }
                v42 = 2;
              }
              v44 = v42;
              goto LABEL_61;
            }
          }
          else if (v31 == v47)
          {
            goto LABEL_48;
          }
        }
      }
    }
    sub_22F0D5A50((uint64_t)v28);
    sub_22E8FCA40(a1, v36, 0x1B3Bu, 0, (uint64_t)v45);
    v37 = (unsigned int *)v45;
LABEL_46:
    sub_22E903BEC(v37);
LABEL_47:
    *((_QWORD *)a3 + 1) = *(_QWORD *)(a1[11] + 16392);
    return v26;
  }
  v11 = *(_DWORD *)(v7 + 68);
  v12 = sub_22E903070((uint64_t)a1, 0);
  v13 = 0;
  if (v12 && (*(_WORD *)(v12 + 8) & 0x7Eu) - 58 >= 0xFFFFFFFA)
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v12 - 24) & 0xFFFFFFFFFFFFFFF0);
    if (v14)
      v15 = *(unsigned __int8 *)(v14 + 16) - 27 > 0xFFFFFFFD;
    else
      v15 = 0;
    if (!v15)
      v14 = sub_22F10CF48(v14);
    v13 = (*(_DWORD *)(v14 + 16) >> 19) & 0x1F;
  }
  if (a2 != 1299)
  {
    if (v11 == 15)
      v22 = 7;
    else
      v22 = 6;
    if (v13 == v22)
    {
      sub_22F0D5A50(v6);
      sub_22E8FCA40(a1, v23, 0x13FEu, 0, (uint64_t)v48);
      LOBYTE(v47) = v11 != 15;
      v24 = *(unsigned __int8 *)(sub_22E894E38((uint64_t)v48, (unsigned __int8 *)&v47) + 80);
      goto LABEL_31;
    }
    goto LABEL_32;
  }
  v17 = v11 == 15 || v13 == 6;
  if (v13 != 7 && v17)
    goto LABEL_32;
  sub_22F0D5A50(v6);
  v19 = v18;
  v20 = a1;
  v21 = 3956;
LABEL_30:
  sub_22E8FCA40(v20, v19, v21, 0, (uint64_t)v48);
  v24 = v49;
LABEL_31:
  sub_22E903BEC(v48);
  if (!v24)
    goto LABEL_32;
  return 1;
}

BOOL sub_22E978E88(_QWORD *a1, unsigned int *a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  unsigned int v14[24];

  if (a4)
  {
    v7 = 4 * a4;
    v8 = a3;
    while (*v8 != *(_DWORD *)(*(_QWORD *)(a1[11] + 15088) + 56))
    {
      ++v8;
      v7 -= 4;
      if (!v7)
      {
        v8 = &a3[a4];
        break;
      }
    }
  }
  else
  {
    v8 = a3;
  }
  v9 = v8 - a3;
  if (v9 == a4)
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v10, 0xBA8u, 0, (uint64_t)v14);
    sub_22F0D4E74((uint64_t)a2);
    v13 = v11;
    sub_22E8906A0((uint64_t)v14, &v13);
    sub_22E903BEC(v14);
  }
  return v9 == a4;
}

uint64_t sub_22E978F54(uint64_t *a1, unsigned int *a2, unsigned int a3)
{
  _BOOL8 v6;
  unint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  BOOL v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26[24];

  if (sub_22E979C64(a1, a2, a3))
    return 1;
  v8 = a2 + 2;
  v7 = *a2;
  v9 = a3 - 1;
  if (a3 == 1)
  {
    v9 = 0;
    v13 = v7 >> 24;
    v14 = (v7 >> 18) & 1;
LABEL_10:
    v15 = *(_BYTE **)((char *)&a2[2 * v14 + 2 + 2 * v9] + v13);
    if ((v15[1] & 0x80) != 0)
      return 0;
    v16 = (*(unsigned int (**)(_QWORD))(**(_QWORD **)(a1[11] + 15088) + 248))(*(_QWORD *)(a1[11] + 15088))
        ? sub_22EB1B998((uint64_t)a1, v15)
        : sub_22EB1B954((uint64_t)a1, v15);
    v17 = v16 & 0xFFFFFFFFFFFFFFFELL;
    *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2 + 2 * v9] + ((unint64_t)*a2 >> 24)) = v16 & 0xFFFFFFFFFFFFFFFELL;
    v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v19 = v18 && *(_DWORD *)(v18 + 16) == 11;
    if (v19 && ((*(_DWORD *)(v18 + 16) >> 19) & 0x1FEu) - 210 < 8)
    {
      return 0;
    }
    else
    {
      sub_22F0D5A50(v16 & 0xFFFFFFFFFFFFFFFELL);
      sub_22E8FCA40(a1, v20, 0x133Au, 0, (uint64_t)v26);
      v25 = *(_QWORD *)(v17 + 8);
      v21 = sub_22E8901B8((uint64_t)v26, &v25);
      sub_22F0D4E74(v17);
      v24 = v22;
      v6 = *(_BYTE *)(sub_22E8906A0(v21, &v24) + 80) != 0;
      sub_22E903BEC(v26);
    }
  }
  else
  {
    v10 = 0;
    while (1)
    {
      v11 = *(unsigned __int8 **)((char *)&v8[2 * ((v7 >> 18) & 1)] + BYTE3(v7) + v10);
      v6 = (*(_DWORD *)v11 & 0x8000) == 0;
      if ((*(_DWORD *)v11 & 0x8000) != 0)
        break;
      v12 = sub_22ECFABE8(a1, v11, *(_QWORD *)(a1[11] + 16480), 1, 0);
      if ((v12 & 1) != 0)
        break;
      v7 = *a2;
      v13 = v7 >> 24;
      v14 = (v7 >> 18) & 1;
      *(_QWORD *)((char *)&v8[2 * v14] + (v7 >> 24) + v10) = v12 & 0xFFFFFFFFFFFFFFFELL;
      v10 += 8;
      if (8 * v9 == v10)
        goto LABEL_10;
    }
  }
  return v6;
}

uint64_t sub_22E97915C(_QWORD *a1, unsigned int *a2)
{
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _DWORD *v31;
  int v32;
  unsigned int v33;
  unint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  _QWORD *v39;
  unsigned int v40;
  int v41;
  uint64_t *v42;
  int v43;
  uint64_t v44;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  int v49;
  int v50;
  int v51;
  _QWORD *v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t *v72;
  unsigned int v73;
  char v74;
  unsigned __int8 v75;
  uint64_t v76;
  unsigned int v77;
  int v78;
  void *v79;
  uint64_t v80;
  _BYTE v81[256];
  uint64_t v82;

  v82 = *MEMORY[0x24BDAC8D0];
  v4 = a2[4];
  if (v4 <= 1)
  {
    sub_22EFFAEF8(a2);
    sub_22E8FCA40(a1, v5, 0x133Eu, 0, (uint64_t)&v79);
    LODWORD(v76) = 0;
    v6 = sub_22E8900C4((uint64_t)&v79, (int *)&v76);
    v78 = 2;
    v7 = sub_22E8900C4(v6, &v78);
    v77 = a2[4];
    v8 = sub_22E89519C(v7, &v77);
    sub_22F0D4E74((uint64_t)a2);
    v72 = (uint64_t *)v9;
    v10 = (uint64_t *)&v72;
    goto LABEL_3;
  }
  v13 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1)] + ((unint64_t)*a2 >> 24);
  v15 = *(_QWORD *)(v13 + 8);
  v14 = v13 + 8;
  v16 = *(_QWORD *)(v15 + 8);
  if ((*(_BYTE *)(v15 + 1) & 0x80) != 0 || (v17 = *(_QWORD *)(v14 + 8), (*(_BYTE *)(v17 + 1) & 0x80) != 0))
  {
    v21 = 0;
LABEL_25:
    LODWORD(v28) = a2[4];
    if (v28 < 3)
    {
LABEL_60:
      v79 = v81;
      v80 = 0x2000000000;
      if ((_DWORD)v28)
      {
        v56 = 0;
        v57 = 0;
        v58 = a2 + 2;
        LODWORD(v59) = *a2;
        v60 = 8 * v28;
        do
        {
          v61 = *(_QWORD *)((char *)&v58[2 * ((v59 >> 18) & 1)] + BYTE3(v59) + v56);
          if (v57 >= HIDWORD(v80))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v57 = v80;
          }
          *((_QWORD *)v79 + v57) = v61;
          v57 = v80 + 1;
          LODWORD(v80) = v80 + 1;
          v59 = *a2;
          *(_QWORD *)((char *)&v58[2 * ((v59 >> 18) & 1)] + (v59 >> 24) + v56) = 0;
          v56 += 8;
        }
        while (v60 != v56);
      }
      v11 = sub_22E3CD3D4(a1[11] + 2032, 40, 3);
      v46 = a1[11];
      v47 = v79;
      v48 = v80;
      sub_22F0D5A50(*(_QWORD *)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
      sub_22F3C2348(v11, v46, (uint64_t)v47, v48, v16, v49, a2[5]);
      if (v79 != v81)
        free(v79);
      return v11;
    }
    v29 = (2 * v21);
    v30 = 3;
    while (1)
    {
      v31 = *(_DWORD **)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2 * v30] + ((unint64_t)*a2 >> 24));
      if ((*v31 & 0x18000) != 0)
        goto LABEL_58;
      LOBYTE(v72) = 0;
      v75 = 0;
      sub_22F00905C((uint64_t)v31, a1[11], 0, (uint64_t)&v79);
      sub_22E54C490((uint64_t)&v72, (uint64_t)&v79);
      v32 = v75;
      if (v81[0] && v80 >= 0x41 && v79)
        MEMORY[0x2348A0E84](v79, 0x1000C8000313F17);
      if (!v32)
      {
        sub_22EFFAE7C(a2);
        v38 = v37;
        v39 = a1;
        v40 = 4702;
LABEL_52:
        sub_22E8FCA40(v39, v38, v40, 0, (uint64_t)&v79);
        sub_22F0D4E74(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2 * v30]
                                + ((unint64_t)*a2 >> 24)));
        v76 = v44;
        sub_22E8906A0((uint64_t)&v79, &v76);
        sub_22E903BEC((unsigned int *)&v79);
        v41 = 1;
        goto LABEL_53;
      }
      v33 = v73;
      if (v74)
      {
        if (v73 <= 0x40)
        {
          v34 = (unint64_t)v72;
LABEL_36:
          v35 = v73 + __clz(v34) - 64;
          v36 = 1;
          goto LABEL_45;
        }
      }
      else
      {
        if (!v73)
          goto LABEL_43;
        if (v73 <= 0x40)
        {
          v34 = (unint64_t)v72;
          if (v72 == (uint64_t *)(0xFFFFFFFFFFFFFFFFLL >> -(char)v73))
            goto LABEL_43;
          goto LABEL_36;
        }
        if (llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)&v72) == v33)
        {
LABEL_43:
          v41 = 4;
          goto LABEL_53;
        }
      }
      v35 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v72);
      v36 = 0;
LABEL_45:
      if (v33 - v35 > 0x40 || (!v36 ? (v42 = v72) : (v42 = (uint64_t *)&v72), *v42 >= v29))
      {
        sub_22EFFAE7C(a2);
        v38 = v43;
        v39 = a1;
        v40 = 4701;
        goto LABEL_52;
      }
      v41 = 0;
LABEL_53:
      if (v75 && v73 >= 0x41 && v72)
        MEMORY[0x2348A0E84](v72, 0x1000C8000313F17);
      if ((v41 | 4) != 4)
        return 1;
LABEL_58:
      v28 = a2[4];
      if (v30++ >= v28)
        goto LABEL_60;
    }
  }
  v18 = v16 & 0xFFFFFFFFFFFFFFF0;
  v19 = *(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v19 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 55 > 1
    || (v20 = (uint64_t *)(*(_QWORD *)(v17 + 8) & 0xFFFFFFFFFFFFFFF0),
        *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v20 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 55 >= 2))
  {
    sub_22EFFAE7C(a2);
    v51 = v50;
    v52 = a1;
    v53 = 5132;
    goto LABEL_64;
  }
  if (*(unsigned __int8 *)(v19 + 16) - 57 <= 0xFFFFFFFD)
  {
    v19 = sub_22F10CF48(v19);
    v4 = a2[4];
  }
  v21 = *(_DWORD *)(v19 + 20);
  v22 = v4 - 2;
  if (v4 != 2)
  {
    if (*(_QWORD *)(*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(v20[1] & 0xFFFFFFFFFFFFFFF0))
    {
      if (v21 != (_DWORD)v22)
      {
        v67 = *(_QWORD *)v18;
        if (*(_QWORD *)v18)
          v68 = *(unsigned __int8 *)(*(_QWORD *)v18 + 16) - 57 > 0xFFFFFFFD;
        else
          v68 = 0;
        if (!v68)
          v67 = sub_22F10CF48(v67);
        v16 = sub_22F36B7E4(a1[11], *(_QWORD *)(v67 + 32), v22, 0);
      }
      goto LABEL_25;
    }
    sub_22EFFAE7C(a2);
    v51 = v66;
    v52 = a1;
    v53 = 5131;
LABEL_64:
    sub_22E8FCA40(v52, v51, v53, 0, (uint64_t)&v79);
    v54 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
    if (v54)
    {
      if ((*(_DWORD *)(v54 + 28) & 0x7Eu) - 52 >= 6)
        v55 = 0;
      else
        v55 = v54;
    }
    else
    {
      v55 = 0;
    }
    v72 = (uint64_t *)v55;
    v8 = sub_22E890024((uint64_t)&v79, (uint64_t *)&v72);
    v62 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1)] + ((unint64_t)*a2 >> 24);
    sub_22F0D5A50(*(_QWORD *)(v62 + 8));
    v64 = v63;
    sub_22F0D60E4(*(_QWORD *)(v62 + 16));
    LODWORD(v76) = v64;
    goto LABEL_75;
  }
  if (sub_22F1105F0(*v20))
  {
    v23 = *v20;
    if (*v20)
      v24 = *(unsigned __int8 *)(*v20 + 16) - 57 > 0xFFFFFFFD;
    else
      v24 = 0;
    if (!v24)
      v23 = sub_22F10CF48(v23);
    if (*(_DWORD *)(v23 + 20) == v21)
      goto LABEL_25;
  }
  sub_22EFFAE7C(a2);
  sub_22E8FCA40(a1, v25, 0x140Bu, 0, (uint64_t)&v79);
  v26 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
  if (v26)
  {
    if ((*(_DWORD *)(v26 + 28) & 0x7Eu) - 52 >= 6)
      v27 = 0;
    else
      v27 = v26;
  }
  else
  {
    v27 = 0;
  }
  v72 = (uint64_t *)v27;
  v8 = sub_22E890024((uint64_t)&v79, (uint64_t *)&v72);
  v69 = *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4] + ((unint64_t)*a2 >> 24));
  sub_22F0D5A50(v69);
  v71 = v70;
  sub_22F0D60E4(v69);
  LODWORD(v76) = v71;
LABEL_75:
  HIDWORD(v76) = v65;
  v10 = &v76;
LABEL_3:
  sub_22E8906A0(v8, v10);
  sub_22E903BEC((unsigned int *)&v79);
  return 1;
}

BOOL sub_22E9797E0(uint64_t a1, unsigned int *a2, unsigned int a3, int a4, int a5, int a6)
{
  _BOOL8 v7;
  _DWORD *v10;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  size_t v18;
  void *v19;
  void **p_dst;
  size_t v21;
  size_t v22;
  void **v23;
  size_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  _QWORD *v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  size_t v35;
  void *v36;
  void **v37;
  size_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void **__dst;
  size_t v45;
  int64_t v46;
  uint64_t *v47;
  unsigned int v48;
  char v49;
  int v50;
  int v51;
  void *__src;
  size_t __len[2];
  _BYTE v54[72];
  void *v55;
  size_t v56[2];
  _QWORD v57[6];

  v57[5] = *MEMORY[0x24BDAC8D0];
  v50 = a5;
  v51 = a4;
  if ((*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
    || *(_BYTE *)(a1 + 3209))
  {
    return 0;
  }
  v7 = 0;
  v48 = 1;
  v47 = 0;
  v49 = 0;
  v10 = *(_DWORD **)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2 + 2 * a3] + ((unint64_t)*a2 >> 24));
  if ((*v10 & 0x18000) == 0)
  {
    if (sub_22F30D0F4((_QWORD *)a1, a2, a3, (uint64_t)&v47))
    {
      v7 = 1;
      goto LABEL_6;
    }
    if (v48 > 0x40)
      v14 = *v47;
    else
      v14 = (uint64_t)((_QWORD)v47 << -(uint64_t)v48) >> -(uint64_t)v48;
    if (v14 >= a4 && v14 <= a5)
    {
LABEL_40:
      v7 = 0;
      goto LABEL_6;
    }
    if (!a6)
    {
      sub_22EFFAE7C(a2);
      v16 = v15;
      v17 = *(_QWORD *)(a1 + 88) + 2128;
      v55 = 0;
      v56[0] = v17;
      LODWORD(v56[1]) = 6209;
      __src = v54;
      *(_OWORD *)__len = xmmword_22F455490;
      llvm::APInt::toString();
      v18 = __len[0];
      if (__len[0] <= 0x7FFFFFFFFFFFFFF7)
      {
        v19 = __src;
        if (__len[0] >= 0x17)
        {
          v21 = (__len[0] & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((__len[0] | 7) != 0x17)
            v21 = __len[0] | 7;
          v22 = v21 + 1;
          p_dst = (void **)operator new(v21 + 1);
          v45 = v18;
          v46 = v22 | 0x8000000000000000;
          __dst = p_dst;
        }
        else
        {
          HIBYTE(v46) = __len[0];
          p_dst = (void **)&__dst;
          if (!__len[0])
            goto LABEL_25;
        }
        memmove(p_dst, v19, v18);
LABEL_25:
        *((_BYTE *)p_dst + v18) = 0;
        if (__src != v54)
          free(__src);
        if (v46 >= 0)
          v23 = (void **)&__dst;
        else
          v23 = __dst;
        if (v46 >= 0)
          v24 = HIBYTE(v46) & 0x7F;
        else
          v24 = v45;
        sub_22E3B89A8((unsigned __int8 **)&v55, v23, v24);
        v25 = v51;
        v26 = (unsigned __int8 *)v55;
        if (!v55)
        {
          v26 = (unsigned __int8 *)sub_22E3B8AAC(v56[0]);
          v55 = v26;
        }
        v26[*v26 + 1] = 2;
        v27 = v55;
        v28 = *(unsigned __int8 *)v55;
        v29 = v28 + 1;
        *(_BYTE *)v55 = v28 + 1;
        v27[v28 + 2] = v25;
        v30 = v50;
        *((_BYTE *)v27 + v29 + 1) = 2;
        v31 = v55;
        v32 = *(unsigned __int8 *)v55;
        *(_BYTE *)v55 = v32 + 1;
        v31[v32 + 2] = v30;
        sub_22F0D4E74((uint64_t)v10);
        sub_22E4D6448((uint64_t)(v31 + 42), v33, 1);
        __src = a2;
        sub_22EB52944(a1, v16, &__src, 1uLL, (uint64_t *)&v55);
        if (SHIBYTE(v46) < 0)
          operator delete(__dst);
        if (v55 && v56[0])
          sub_22E3BB10C(v56[0], (unint64_t)v55);
        goto LABEL_40;
      }
LABEL_54:
      abort();
    }
    sub_22EFFAE7C(a2);
    sub_22E8FCA40((_QWORD *)a1, v34, 0xA80u, 0, (uint64_t)&__src);
    v55 = v57;
    *(_OWORD *)v56 = xmmword_22F455490;
    llvm::APInt::toString();
    v35 = v56[0];
    if (v56[0] > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_54;
    v36 = v55;
    if (v56[0] >= 0x17)
    {
      v38 = (v56[0] & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v56[0] | 7) != 0x17)
        v38 = v56[0] | 7;
      v39 = v38 + 1;
      v37 = (void **)operator new(v38 + 1);
      v45 = v35;
      v46 = v39 | 0x8000000000000000;
      __dst = v37;
    }
    else
    {
      HIBYTE(v46) = v56[0];
      v37 = (void **)&__dst;
      if (!v56[0])
        goto LABEL_49;
    }
    memmove(v37, v36, v35);
LABEL_49:
    *((_BYTE *)v37 + v35) = 0;
    if (v55 != v57)
      free(v55);
    v40 = sub_22F2F3734((uint64_t)&__src, (void **)&__dst);
    v41 = sub_22E8900C4(v40, &v51);
    v42 = sub_22E8900C4(v41, &v50);
    sub_22F0D4E74((uint64_t)v10);
    v55 = v43;
    v7 = *(_BYTE *)(sub_22E8906A0(v42, (uint64_t *)&v55) + 80) != 0;
    if (SHIBYTE(v46) < 0)
      operator delete(__dst);
    sub_22E903BEC((unsigned int *)&__src);
  }
LABEL_6:
  if (v48 >= 0x41 && v47)
    MEMORY[0x2348A0E84](v47, 0x1000C8000313F17);
  return v7;
}

BOOL sub_22E979C64(_QWORD *a1, unsigned int *a2, unsigned int a3)
{
  unsigned int v3;
  _BOOL8 v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  unsigned int v19[24];
  unsigned int v20;
  unsigned int v21;

  v3 = a2[4];
  v20 = v3;
  v21 = a3;
  if (v3 == a3)
    return 0;
  if (v3 >= a3)
  {
    sub_22F0D5A50(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2 + 2 * a3]
                            + ((unint64_t)*a2 >> 24)));
    sub_22E8FCA40(a1, v12, 0x1343u, 0, (uint64_t)v19);
    v18 = 0;
    v13 = sub_22E8900C4((uint64_t)v19, &v18);
    v14 = sub_22E89519C(v13, &v21);
    v10 = sub_22E89519C(v14, &v20);
    v11 = *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4] + ((unint64_t)*a2 >> 24));
  }
  else
  {
    sub_22EFFAEF8(a2);
    sub_22E8FCA40(a1, v7, 0x133Du, 0, (uint64_t)v19);
    v18 = 0;
    v8 = sub_22E8900C4((uint64_t)v19, &v18);
    v9 = sub_22E89519C(v8, &v21);
    v10 = sub_22E89519C(v9, &v20);
    v11 = (uint64_t)a2;
  }
  sub_22F0D4E74(v11);
  v17 = v15;
  v4 = *(_BYTE *)(sub_22E8906A0(v10, &v17) + 80) != 0;
  sub_22E903BEC(v19);
  return v4;
}

unint64_t sub_22E979D8C(uint64_t a1, unsigned __int8 *a2, int a3)
{
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 **v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;

  result = sub_22E987CF8(a1, a2);
  if ((_DWORD)result)
  {
    v11 = *(_QWORD *)(a1 + 88) + 2128;
    v12 = 6796;
    sub_22F0D4E74((uint64_t)a2);
    v8 = v7;
    v10 = sub_22E3B8AAC(v11);
    sub_22E4D6448(v10 + 336, v8, 1);
    v13 = a2;
    if (a2)
      v9 = &v13;
    else
      v9 = 0;
    result = sub_22EB52944(a1, a3, v9, a2 != 0, (uint64_t *)&v10);
    if (v10)
    {
      result = v11;
      if (v11)
        return sub_22E3BB10C(v11, v10);
    }
  }
  return result;
}

uint64_t sub_22E979E44(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  uint64_t *v7;
  int v8;
  unsigned __int8 *v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15[24];

  if (*(_DWORD *)(a1 + 10680) > *(_DWORD *)(a1 + 11956))
    return 0;
  v7 = (uint64_t *)(a1 + 12888);
  while (1)
  {
    v7 = (uint64_t *)*v7;
    if (!v7)
      break;
    v8 = *((_DWORD *)v7 + 2);
    if ((v8 & 0x100000) != 0)
    {
      if ((v8 & a3) != 0)
        return 0;
      break;
    }
  }
  v10 = sub_22EFFBBCC(*(unsigned __int8 **)(a2 + *(unsigned __int8 *)(a2 + 3)));
  sub_22EFF605C(a2);
  sub_22E8FCA40((_QWORD *)a1, v11, a4, 0, (uint64_t)v15);
  v12 = *(_QWORD *)(*((_QWORD *)v10 + 2) + 40);
  if ((v12 & 7) != 0)
    v13 = 0;
  else
    v13 = v12 & 0xFFFFFFFFFFFFFFF8;
  v14 = v13;
  sub_22E8BAE44((uint64_t)v15, (uint64_t *)&v14);
  sub_22E903BEC(v15);
  return 1;
}

uint64_t sub_22E979F10(_QWORD *a1, unsigned int *a2, int a3, char a4)
{
  uint64_t result;
  char v9;
  char v10;
  char v11;

  if (sub_22E979C64(a1, a2, 3u) || sub_22E99645C(a1, (uint64_t)a2))
    return 1;
  v9 = sub_22E9964C0(a1, (uint64_t *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24)), a3, a4);
  v10 = sub_22E996958(a1, (unint64_t *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4] + ((unint64_t)*a2 >> 24)));
  v11 = sub_22E9964C0(a1, (uint64_t *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 6] + ((unint64_t)*a2 >> 24)), 4, a4);
  result = 1;
  if ((v9 & 1) == 0 && (v10 & 1) == 0 && (v11 & 1) == 0)
  {
    *((_QWORD *)a2 + 1) = *(_QWORD *)(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2]
                                                + ((unint64_t)*a2 >> 24))
                                    + 8);
    return (uint64_t)a2;
  }
  return result;
}

uint64_t sub_22E97A00C(_QWORD *a1, unsigned int *a2)
{
  uint64_t v4;
  int v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19[24];

  if (!sub_22E979C64(a1, a2, 2u) && (sub_22E996B28(a1, a2) & 1) == 0)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1)
                                                                               + 4]
                                                                   + ((unint64_t)*a2 >> 24))
                                                       + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 8) & 0xFFFFFFFFFFFFFFF0);
    v5 = *(_DWORD *)(v4 + 16);
    if (v4)
      v6 = v5 == 11;
    else
      v6 = 0;
    if (v6)
    {
      if (((*(_DWORD *)(v4 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
        goto LABEL_17;
    }
    else if (v4 && v5 == 44)
    {
      v7 = sub_22F114198(*(_QWORD *)(v4 + 24));
      if (((*(_BYTE *)(v7 + 74) & 1) != 0 || *(_QWORD *)(v7 + 128) > 7uLL)
        && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v4 + 24)) + 76) & 0x80) == 0)
      {
        goto LABEL_17;
      }
    }
    else if (v5 == 9)
    {
LABEL_17:
      result = 0;
      *((_QWORD *)a2 + 1) = *(_QWORD *)(a1[11] + 17240);
      return result;
    }
    if (sub_22F110B50(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4]
                                                         + ((unint64_t)*a2 >> 24))
                                             + 8) & 0xFFFFFFFFFFFFFFF0)))
      goto LABEL_17;
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v9, 0x1123u, 0, (uint64_t)v19);
    v10 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
    if (v10)
    {
      if ((*(_DWORD *)(v10 + 28) & 0x7Eu) - 52 >= 6)
        v11 = 0;
      else
        v11 = v10;
    }
    else
    {
      v11 = 0;
    }
    v18 = v11;
    v12 = sub_22E890024((uint64_t)v19, &v18);
    v13 = sub_22E8901B8(v12, (uint64_t *)(a1[11] + 16528));
    v17 = *(_QWORD *)(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4]
                                + ((unint64_t)*a2 >> 24))
                    + 8);
    v14 = sub_22E8901B8(v13, &v17);
    sub_22F0D4E74(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4] + ((unint64_t)*a2 >> 24)));
    v16 = v15;
    sub_22E8906A0(v14, &v16);
    sub_22E903BEC(v19);
  }
  return 1;
}

uint64_t sub_22E97A1F8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13[24];

  v4 = (uint64_t)(a1 + 3);
  if (sub_22F420778((uint64_t)(a1 + 3), (uint64_t)"cl_khr_subgroups", 16, a1[9])
    || sub_22F420778(v4, (uint64_t)"__opencl_c_subgroups", 20, a1[9]))
  {
    return 0;
  }
  sub_22EFFAE7C((unsigned int *)a2);
  sub_22E8FCA40(a1, v6, 0x1142u, 0, (uint64_t)v13);
  v12 = 1;
  v7 = sub_22E8900C4((uint64_t)v13, &v12);
  v8 = sub_22EFFA604(*(unsigned __int8 **)(a2 + *(unsigned __int8 *)(a2 + 3)));
  if (v8)
  {
    if ((*(_DWORD *)(v8 + 28) & 0x7Eu) - 52 >= 6)
      v9 = 0;
    else
      v9 = v8;
  }
  else
  {
    v9 = 0;
  }
  v11 = v9;
  v10 = sub_22E890024(v7, &v11);
  sub_22F311510(v10);
  sub_22E903BEC(v13);
  return 1;
}

uint64_t sub_22E97A2F0(_QWORD *a1, unsigned int *a2)
{
  uint64_t v4;
  BOOL v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17[24];

  if (!sub_22E979C64(a1, a2, 2u) && (sub_22E996B28(a1, a2) & 1) == 0)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1)
                                                                               + 4]
                                                                   + ((unint64_t)*a2 >> 24))
                                                       + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v4)
      v5 = (*(_DWORD *)(v4 + 16) & 0xFF800FF) == 118489099;
    else
      v5 = 0;
    if (v5)
      return 0;
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v6, 0x1123u, 0, (uint64_t)v17);
    v7 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
    if (v7)
    {
      if ((*(_DWORD *)(v7 + 28) & 0x7Eu) - 52 >= 6)
        v8 = 0;
      else
        v8 = v7;
    }
    else
    {
      v8 = 0;
    }
    v16 = v8;
    v10 = sub_22E890024((uint64_t)v17, &v16);
    v11 = sub_22E8901B8(v10, (uint64_t *)(a1[11] + 17240));
    v15 = *(_QWORD *)(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4]
                                + ((unint64_t)*a2 >> 24))
                    + 8);
    v12 = sub_22E8901B8(v11, &v15);
    sub_22F0D4E74(*(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4] + ((unint64_t)*a2 >> 24)));
    v14 = v13;
    sub_22E8906A0(v12, &v14);
    sub_22E903BEC(v17);
  }
  return 1;
}

uint64_t sub_22E97A450(uint64_t a1, unsigned int a2)
{
  int v4;

  v4 = 0;
  sub_22EF72B64(*(_QWORD *)(a1 + 88), a2, &v4, 0);
  if (!v4)
    __asm { BR              X10 }
  return 1;
}

uint64_t sub_22E97A810(_QWORD *a1, unsigned int a2, unsigned int *a3, int a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v11;

  v11 = 0;
  v7 = sub_22EF72B64(a1[11], a2, &v11, 0);
  if (v11)
    return 1;
  v8 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0);
  if (!v8 || *(_BYTE *)(v8 + 16) != 26)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v8 = sub_22F10CF48(*(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0));
    else
      v8 = 0;
  }
  if ((sub_22E99CD24(a1, a3, v8, (unsigned int (*)(uint64_t, uint64_t))sub_22E99CF1C) & 1) != 0
    || sub_22E99CFDC(a1, a3, a4)
    || sub_22E99D140(a1, a3, a4 != 0))
  {
    return 1;
  }
  result = 0;
  *((_QWORD *)a3 + 1) = *(_QWORD *)(*(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                              + ((unint64_t)*a3 >> 24))
                                  + 8);
  return result;
}

uint64_t sub_22E97A910(_QWORD *a1, unsigned int a2, unsigned int *a3, int a4)
{
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int v41;
  int v42;
  _QWORD *v43;
  unsigned int v44;
  uint64_t result;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  unsigned int v53[24];

  v48 = 0;
  v7 = sub_22EF72B64(a1[11], a2, &v48, 0);
  if (v48)
    return 1;
  v8 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0);
  if (v8)
    v9 = *(_BYTE *)(v8 + 16) == 26;
  else
    v9 = 0;
  if (!v9)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v8 = sub_22F10CF48(*(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0));
    else
      v8 = 0;
  }
  if (sub_22E979C64(a1, a3, (unsigned __int16)(*(_QWORD *)(v8 + 16) >> 38)))
    return 1;
  v10 = *(_QWORD *)(v8 + 16);
  if ((v10 & 0x3FFFC000000000) == 0)
    goto LABEL_31;
  v11 = 0;
  v12 = 0;
  v13 = a3 + 2;
  v14 = v8 + 40;
  v15 = (unsigned __int16)(v10 >> 38);
  do
  {
    v16 = *(_QWORD *)(v14 + 8 * v11);
    v17 = *(_QWORD *)((char *)&v13[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v11] + ((unint64_t)*a3 >> 24));
    v52 = v17;
    v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v18)
      v19 = (*(_DWORD *)(v18 + 16) & 0xFF800FF) == 137887755;
    else
      v19 = 0;
    if (!v19)
    {
      if ((sub_22E9969B8((uint64_t)a1, &v52, v16) & 1) != 0)
        goto LABEL_24;
      v20 = 0;
      v21 = v52;
      goto LABEL_28;
    }
    v22 = *(_QWORD *)(v17 + 8);
    if (v11)
    {
      if ((sub_22E99D404(v22, a4) & 1) != 0)
        goto LABEL_20;
    }
    else if (sub_22E99D404(v22, 1))
    {
LABEL_20:
      sub_22F0D5A50(v17);
      sub_22E8FCA40(a1, v23, 0xEEEu, 0, (uint64_t)v53);
      v50 = *(_QWORD *)(v17 + 8);
      v24 = sub_22E8901B8((uint64_t)v53, &v50);
      v25 = sub_22EFFA604(*(unsigned __int8 **)((char *)a3 + *((unsigned __int8 *)a3 + 3)));
      if ((*(_DWORD *)(v25 + 28) & 0x7Eu) - 52 >= 6)
        v26 = 0;
      else
        v26 = v25;
      v49 = *(_QWORD *)(v26 + 40);
      sub_22E894538(v24, &v49);
      sub_22E903BEC(v53);
LABEL_24:
      v20 = 1;
      goto LABEL_29;
    }
    v20 = 1;
    v27 = sub_22EB1B954((uint64_t)a1, *(void **)((char *)&v13[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v11] + ((unint64_t)*a3 >> 24)));
    if ((v27 & 1) == 0)
    {
      v20 = 0;
      v21 = v27 & 0xFFFFFFFFFFFFFFFELL;
LABEL_28:
      *(_QWORD *)((char *)&v13[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v11] + ((unint64_t)*a3 >> 24)) = v21;
    }
LABEL_29:
    v12 |= v20;
    ++v11;
  }
  while (v15 != v11);
  if ((v12 & 1) != 0)
    return 1;
LABEL_31:
  v28 = (unint64_t)&a3[2 * (((unint64_t)*a3 >> 18) & 1)] + ((unint64_t)*a3 >> 24);
  v29 = *(_QWORD *)(v28 + 8);
  v30 = *(_QWORD *)(v28 + 24);
  v31 = *(_QWORD *)(v30 + 8);
  v32 = *(_QWORD *)(*(_QWORD *)(v29 + 8) & 0xFFFFFFFFFFFFFFF0);
  if ((!v32 || *(_BYTE *)(v32 + 16) != 56)
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v32 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
     || (v32 = sub_22F10CF48(v32)) == 0))
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      goto LABEL_43;
    sub_22EFFAE7C(a3);
    v42 = v41;
    v43 = a1;
    v44 = 3824;
    goto LABEL_46;
  }
  v33 = *(_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF0);
  if ((!v33 || *(_BYTE *)(v33 + 16) != 56)
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v33 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
     || (v33 = sub_22F10CF48(v33)) == 0))
  {
    sub_22EFFAE7C(a3);
    v42 = v46;
    v43 = a1;
    v44 = 3823;
LABEL_46:
    sub_22E8FCA40(v43, v42, v44, 0, (uint64_t)v53);
    LODWORD(v50) = 2;
    v38 = sub_22E8900C4((uint64_t)v53, (int *)&v50);
    sub_22F0D4E74(v30);
    v52 = v47;
    v40 = (uint64_t *)&v52;
LABEL_47:
    sub_22E8906A0(v38, v40);
    sub_22E903BEC(v53);
    return 1;
  }
  if (*(_DWORD *)(v32 + 20) != *(_DWORD *)(v33 + 20))
  {
    sub_22EFFAE7C(a3);
    sub_22E8FCA40(a1, v34, 0xEEDu, 0, (uint64_t)v53);
    LODWORD(v49) = 0;
    v35 = sub_22E8900C4((uint64_t)v53, (int *)&v49);
    v51 = 2;
    v36 = sub_22E8900C4(v35, &v51);
    sub_22F0D4E74(v29);
    v52 = v37;
    v38 = sub_22E8906A0(v36, (uint64_t *)&v52);
    sub_22F0D4E74(v30);
    v50 = v39;
    v40 = &v50;
    goto LABEL_47;
  }
LABEL_43:
  if ((sub_22E99D2C8(a1, a3) & 1) == 0)
  {
    result = 0;
    *((_QWORD *)a3 + 1) = *(_QWORD *)(*(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 6]
                                                + ((unint64_t)*a3 >> 24))
                                    + 8);
    return result;
  }
  return 1;
}

uint64_t sub_22E97AD58(_QWORD *a1, unsigned int a2, unsigned int *a3)
{
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29[24];
  unint64_t v30;

  v26 = 0;
  v5 = sub_22EF72B64(a1[11], a2, &v26, 0);
  if (v26)
    return 1;
  v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_BYTE *)(v6 + 16) == 26;
  else
    v7 = 0;
  if (!v7)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v6 = sub_22F10CF48(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0));
    else
      v6 = 0;
  }
  if (sub_22E979C64(a1, a3, (unsigned __int16)(*(_QWORD *)(v6 + 16) >> 38)))
    return 1;
  v8 = *(_QWORD *)(v6 + 16);
  if ((v8 & 0x3FFFC000000000) == 0)
    goto LABEL_31;
  v9 = 0;
  v10 = 0;
  v11 = a3 + 2;
  v12 = v6 + 40;
  v13 = (unsigned __int16)(v8 >> 38);
  do
  {
    v14 = *(_QWORD *)(v12 + 8 * v9);
    v15 = *(_QWORD *)((char *)&v11[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v9] + ((unint64_t)*a3 >> 24));
    v30 = v15;
    v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v16)
      v17 = (*(_DWORD *)(v16 + 16) & 0xFF800FF) == 137887755;
    else
      v17 = 0;
    if (!v17)
    {
      if ((sub_22E9969B8((uint64_t)a1, &v30, v14) & 1) != 0)
        goto LABEL_23;
      v18 = 0;
      v19 = v30;
      goto LABEL_26;
    }
    if (sub_22E99CC7C(*(_QWORD *)(v15 + 8)))
    {
      sub_22F0D5A50(v15);
      sub_22E8FCA40(a1, v20, 0xEEEu, 0, (uint64_t)v29);
      v28 = *(_QWORD *)(v15 + 8);
      v21 = sub_22E8901B8((uint64_t)v29, &v28);
      v22 = sub_22EFFA604(*(unsigned __int8 **)((char *)a3 + *((unsigned __int8 *)a3 + 3)));
      if ((*(_DWORD *)(v22 + 28) & 0x7Eu) - 52 >= 6)
        v23 = 0;
      else
        v23 = v22;
      v27 = *(_QWORD *)(v23 + 40);
      sub_22E894538(v21, &v27);
      sub_22E903BEC(v29);
LABEL_23:
      v18 = 1;
      goto LABEL_27;
    }
    v18 = 1;
    v24 = sub_22EB1B954((uint64_t)a1, *(void **)((char *)&v11[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v9] + ((unint64_t)*a3 >> 24)));
    if ((v24 & 1) == 0)
    {
      v18 = 0;
      v19 = v24 & 0xFFFFFFFFFFFFFFFELL;
LABEL_26:
      *(_QWORD *)((char *)&v11[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v9] + ((unint64_t)*a3 >> 24)) = v19;
    }
LABEL_27:
    v10 |= v18;
    ++v9;
  }
  while (v13 != v9);
  if ((v10 & 1) != 0)
    return 1;
LABEL_31:
  result = 0;
  *((_QWORD *)a3 + 1) = *(_QWORD *)(*(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * a3[4]]
                                              + ((unint64_t)*a3 >> 24))
                                  + 8);
  return result;
}

uint64_t sub_22E97AFD0(_QWORD *a1, unsigned int a2, unsigned int *a3, unsigned int a4, int a5)
{
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t result;
  unint64_t v13;
  int v14;

  v14 = 0;
  v9 = sub_22EF72B64(a1[11], a2, &v14, 0);
  if (v14)
    return 1;
  v10 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
  if (v10)
    v11 = *(_BYTE *)(v10 + 16) == 26;
  else
    v11 = 0;
  if (!v11)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v10 = sub_22F10CF48(*(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0));
    else
      v10 = 0;
  }
  if ((sub_22E99CD24(a1, a3, v10, (unsigned int (*)(uint64_t, uint64_t))sub_22E99D4F4) & 1) != 0
    || (sub_22E99D5C0(a1, a3, a4) & 1) != 0)
  {
    return 1;
  }
  v13 = *(_QWORD *)(*(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2] + ((unint64_t)*a3 >> 24))
                  + 8);
  if (a5)
  {
    if (sub_22F110B20(*(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0)))
      v13 = sub_22EF67D20(a1[11], v13);
  }
  result = 0;
  *((_QWORD *)a3 + 1) = v13;
  return result;
}

uint64_t sub_22E97B0E0(_QWORD *a1, unsigned int a2, unsigned int *a3)
{
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29[24];
  unint64_t v30;

  v26 = 0;
  v5 = sub_22EF72B64(a1[11], a2, &v26, 0);
  if (v26)
    return 1;
  v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_BYTE *)(v6 + 16) == 26;
  else
    v7 = 0;
  if (!v7)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v6 = sub_22F10CF48(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0));
    else
      v6 = 0;
  }
  v8 = sub_22E979C64(a1, a3, (unsigned __int16)(*(_QWORD *)(v6 + 16) >> 38));
  if ((v8 & 1) != 0)
    return 1;
  v9 = *(_QWORD *)(v6 + 16);
  if ((v9 & 0x3FFFC000000000) == 0)
    goto LABEL_31;
  v10 = 0;
  v11 = 0;
  v12 = a3 + 2;
  v13 = v6 + 40;
  v14 = (unsigned __int16)(v9 >> 38);
  do
  {
    v15 = *(_QWORD *)(v13 + 8 * v10);
    v16 = *(_QWORD *)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24));
    v30 = v16;
    v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v17)
      v18 = (*(_DWORD *)(v17 + 16) & 0xFF800FF) == 137887755;
    else
      v18 = 0;
    if (!v18)
    {
      v8 = sub_22E9969B8((uint64_t)a1, &v30, v15);
      if ((v8 & 1) != 0)
        goto LABEL_24;
      v19 = 0;
      v20 = v30;
      goto LABEL_28;
    }
    if (v10)
    {
      if (sub_22E99DB48(*(_QWORD *)(v16 + 8)))
        goto LABEL_20;
    }
    else if (sub_22E99CF1C(v8, v16))
    {
LABEL_20:
      sub_22F0D5A50(v16);
      sub_22E8FCA40(a1, v21, 0xEEEu, 0, (uint64_t)v29);
      v28 = *(_QWORD *)(v16 + 8);
      v22 = sub_22E8901B8((uint64_t)v29, &v28);
      v23 = sub_22EFFA604(*(unsigned __int8 **)((char *)a3 + *((unsigned __int8 *)a3 + 3)));
      if ((*(_DWORD *)(v23 + 28) & 0x7Eu) - 52 >= 6)
        v24 = 0;
      else
        v24 = v23;
      v27 = *(_QWORD *)(v24 + 40);
      sub_22E894538(v22, &v27);
      v8 = (uint64_t)sub_22E903BEC(v29);
LABEL_24:
      v19 = 1;
      goto LABEL_29;
    }
    v19 = 1;
    v8 = sub_22EB1B954((uint64_t)a1, *(void **)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24)));
    if ((v8 & 1) == 0)
    {
      v19 = 0;
      v20 = v8 & 0xFFFFFFFFFFFFFFFELL;
LABEL_28:
      *(_QWORD *)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24)) = v20;
    }
LABEL_29:
    v11 |= v19;
    ++v10;
  }
  while (v14 != v10);
  if ((v11 & 1) != 0)
    return 1;
LABEL_31:
  if ((sub_22E99D860(a1, a3) & 1) != 0)
    return 1;
  result = 0;
  *((_QWORD *)a3 + 1) = *(_QWORD *)(*(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                              + ((unint64_t)*a3 >> 24))
                                  + 8);
  return result;
}

uint64_t sub_22E97B36C(_QWORD *a1, unsigned int a2, unsigned int *a3)
{
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  BOOL v24;
  int v25;
  uint64_t v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int v48;
  int v49;
  _QWORD *v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  unint64_t v58;
  unsigned int v59[24];

  v54 = 0;
  v5 = sub_22EF72B64(a1[11], a2, &v54, 0);
  if (v54)
    return 1;
  v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_BYTE *)(v6 + 16) == 26;
  else
    v7 = 0;
  if (!v7)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v6 = sub_22F10CF48(*(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF0));
    else
      v6 = 0;
  }
  v8 = sub_22E979C64(a1, a3, (unsigned __int16)(*(_QWORD *)(v6 + 16) >> 38));
  if ((v8 & 1) != 0)
    return 1;
  v9 = *(_QWORD *)(v6 + 16);
  if ((v9 & 0x3FFFC000000000) == 0)
    goto LABEL_45;
  v10 = 0;
  v11 = 0;
  v12 = a3 + 2;
  v13 = v6 + 40;
  v14 = (unsigned __int16)(v9 >> 38);
  do
  {
    v15 = *(_QWORD *)(v13 + 8 * v10);
    v16 = *(_QWORD *)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24));
    v58 = v16;
    v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v17)
      v18 = (*(_DWORD *)(v17 + 16) & 0xFF800FF) == 137887755;
    else
      v18 = 0;
    if (!v18)
    {
      v8 = sub_22E9969B8((uint64_t)a1, &v58, v15);
      if ((v8 & 1) != 0)
        goto LABEL_36;
      v19 = 0;
      v20 = v58;
      goto LABEL_40;
    }
    if (v10)
    {
      v21 = *(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0;
      v22 = *(_QWORD *)v21;
      if (*(_QWORD *)v21 && *(_BYTE *)(v22 + 16) == 56
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v22 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
        && (v22 = sub_22F10CF48(v22)) != 0)
      {
        v23 = *(_DWORD *)(v22 + 20);
        v24 = v23 > 0x10;
        v25 = (1 << v23) & 0x1011C;
        if (v24 || v25 == 0)
        {
LABEL_32:
          sub_22F0D5A50(v16);
          sub_22E8FCA40(a1, v29, 0xEEEu, 0, (uint64_t)v59);
          v56 = *(_QWORD *)(v16 + 8);
          v30 = sub_22E8901B8((uint64_t)v59, &v56);
          v31 = sub_22EFFA604(*(unsigned __int8 **)((char *)a3 + *((unsigned __int8 *)a3 + 3)));
          if ((*(_DWORD *)(v31 + 28) & 0x7Eu) - 52 >= 6)
            v32 = 0;
          else
            v32 = v31;
          v55 = *(_QWORD *)(v32 + 40);
          sub_22E894538(v30, &v55);
          v8 = (uint64_t)sub_22E903BEC(v59);
LABEL_36:
          v19 = 1;
          goto LABEL_41;
        }
        v21 = *(_QWORD *)(v22 + 32) & 0xFFFFFFFFFFFFFFF0;
      }
      v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v21 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v27)
        v28 = (*(_DWORD *)(v27 + 16) & 0xFF800FF) == 95420427;
      else
        v28 = 0;
      if (!v28)
        goto LABEL_32;
    }
    else if (sub_22E99CF1C(v8, v16))
    {
      goto LABEL_32;
    }
    v19 = 1;
    v8 = sub_22EB1B954((uint64_t)a1, *(void **)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24)));
    if ((v8 & 1) == 0)
    {
      v19 = 0;
      v20 = v8 & 0xFFFFFFFFFFFFFFFELL;
LABEL_40:
      *(_QWORD *)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24)) = v20;
    }
LABEL_41:
    v11 |= v19;
    ++v10;
  }
  while (v14 != v10);
  if ((v11 & 1) != 0)
    return 1;
LABEL_45:
  v35 = (unint64_t)&a3[2 * (((unint64_t)*a3 >> 18) & 1)] + ((unint64_t)*a3 >> 24);
  v37 = *(_QWORD *)(v35 + 8);
  v36 = *(_QWORD *)(v35 + 16);
  v38 = *(_QWORD *)(v36 + 8);
  v39 = *(_QWORD *)(*(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF0);
  if ((!v39 || *(_BYTE *)(v39 + 16) != 56)
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v39 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
     || (v39 = sub_22F10CF48(v39)) == 0))
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v38 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      goto LABEL_57;
    sub_22EFFAE7C(a3);
    v49 = v48;
    v50 = a1;
    v51 = 3825;
    goto LABEL_59;
  }
  v40 = *(_QWORD *)(v38 & 0xFFFFFFFFFFFFFFF0);
  if ((!v40 || *(_BYTE *)(v40 + 16) != 56)
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v40 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56
     || (v40 = sub_22F10CF48(v40)) == 0))
  {
    sub_22EFFAE7C(a3);
    v49 = v52;
    v50 = a1;
    v51 = 3823;
LABEL_59:
    sub_22E8FCA40(v50, v49, v51, 0, (uint64_t)v59);
    v33 = 1;
    LODWORD(v56) = 1;
    v45 = sub_22E8900C4((uint64_t)v59, (int *)&v56);
    sub_22F0D4E74(v36);
    v58 = v53;
    v47 = (uint64_t *)&v58;
LABEL_60:
    sub_22E8906A0(v45, v47);
    sub_22E903BEC(v59);
    return v33;
  }
  if (*(_DWORD *)(v39 + 20) != *(_DWORD *)(v40 + 20))
  {
    sub_22EFFAE7C(a3);
    sub_22E8FCA40(a1, v41, 0xEEDu, 0, (uint64_t)v59);
    LODWORD(v55) = 0;
    v42 = sub_22E8900C4((uint64_t)v59, (int *)&v55);
    v33 = 1;
    v57 = 1;
    v43 = sub_22E8900C4(v42, &v57);
    sub_22F0D4E74(v37);
    v58 = v44;
    v45 = sub_22E8906A0(v43, (uint64_t *)&v58);
    sub_22F0D4E74(v36);
    v56 = v46;
    v47 = &v56;
    goto LABEL_60;
  }
LABEL_57:
  v33 = 0;
  *((_QWORD *)a3 + 1) = *(_QWORD *)(*(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                              + ((unint64_t)*a3 >> 24))
                                  + 8);
  return v33;
}

uint64_t sub_22E97B834(_QWORD *a1, unsigned int a2, unsigned int *a3)
{
  unint64_t v6;
  uint64_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22;
  BOOL v23;
  int v24;
  uint64_t v26;
  BOOL v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38[24];
  unint64_t v39;

  v35 = 0;
  v6 = sub_22EF72B64(a1[11], a2, &v35, 0);
  if (v35)
    return 1;
  v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0);
  if (v7)
    v8 = *(_BYTE *)(v7 + 16) == 26;
  else
    v8 = 0;
  if (!v8)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      v7 = sub_22F10CF48(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0));
    else
      v7 = 0;
  }
  if (sub_22E979C64(a1, a3, (unsigned __int16)(*(_QWORD *)(v7 + 16) >> 38)))
    return 1;
  v9 = *(_QWORD *)(v7 + 16);
  if ((v9 & 0x3FFFC000000000) == 0)
    goto LABEL_50;
  v10 = 0;
  v11 = 0;
  v12 = a3 + 2;
  v13 = v7 + 40;
  v14 = (unsigned __int16)(v9 >> 38);
  do
  {
    v15 = *(_QWORD *)(v13 + 8 * v10);
    v16 = *(_QWORD *)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24));
    v39 = v16;
    v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v17)
      v18 = (*(_DWORD *)(v17 + 16) & 0xFF800FF) == 137887755;
    else
      v18 = 0;
    if (!v18)
    {
      if ((sub_22E9969B8((uint64_t)a1, &v39, v15) & 1) != 0)
      {
        v19 = 1;
        goto LABEL_41;
      }
      v19 = 0;
      v32 = v39;
LABEL_40:
      *(_QWORD *)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24)) = v32;
      goto LABEL_41;
    }
    v20 = *(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0;
    v21 = *(_QWORD *)v20;
    if (*(_QWORD *)v20 && *(_BYTE *)(v21 + 16) == 56
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v21 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
      && (v21 = sub_22F10CF48(v21)) != 0)
    {
      v22 = *(_DWORD *)(v21 + 20);
      v23 = v22 > 0x10;
      v24 = (1 << v22) & 0x1011C;
      if (v23 || v24 == 0)
        goto LABEL_31;
      v20 = *(_QWORD *)(v21 + 32) & 0xFFFFFFFFFFFFFFF0;
    }
    v26 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v20 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v26)
      v27 = *(_DWORD *)(v26 + 16) == 11;
    else
      v27 = 0;
    if (v27
      && ((*(_DWORD *)(v26 + 16) >> 19) & 0x1FFu) - 168 <= 0x2B
      && (((1 << ((*(_DWORD *)(v26 + 16) >> 19) + 88)) & 0x6C61) != 0
       || ((1 << ((*(_DWORD *)(v26 + 16) >> 19) + 88)) & 0xC0000000000) != 0
       && (a2 - 1731 > 0x1A || ((1 << (a2 + 61)) & 0x4000201) == 0)))
    {
      v19 = 1;
      v33 = sub_22EB1B954((uint64_t)a1, *(void **)((char *)&v12[2 * (((unint64_t)*a3 >> 18) & 1) + 2 * v10] + ((unint64_t)*a3 >> 24)));
      if ((v33 & 1) != 0)
        goto LABEL_41;
      v19 = 0;
      v32 = v33 & 0xFFFFFFFFFFFFFFFELL;
      goto LABEL_40;
    }
LABEL_31:
    sub_22F0D5A50(v16);
    sub_22E8FCA40(a1, v28, 0xEEEu, 0, (uint64_t)v38);
    v37 = *(_QWORD *)(v16 + 8);
    v29 = sub_22E8901B8((uint64_t)v38, &v37);
    v30 = sub_22EFFA604(*(unsigned __int8 **)((char *)a3 + *((unsigned __int8 *)a3 + 3)));
    if ((*(_DWORD *)(v30 + 28) & 0x7Eu) - 52 >= 6)
      v31 = 0;
    else
      v31 = v30;
    v36 = *(_QWORD *)(v31 + 40);
    sub_22E894538(v29, &v36);
    sub_22E903BEC(v38);
    v19 = 1;
LABEL_41:
    v11 |= v19;
    ++v10;
  }
  while (v14 != v10);
  if ((v11 & 1) != 0)
    return 1;
LABEL_50:
  result = 0;
  *((_QWORD *)a3 + 1) = *(_QWORD *)(*(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                              + ((unint64_t)*a3 >> 24))
                                  + 8);
  return result;
}

uint64_t sub_22E97BBA4(_QWORD *a1, uint64_t a2, int a3, unsigned int *a4)
{
  unsigned int v7;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _BOOL8 v19;
  unint64_t v20;
  int v21;
  uint64_t result;
  _QWORD *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  char v43;
  uint64_t v44;
  unsigned int v45[24];
  uint64_t **v46;
  unsigned int v47;
  char v48;

  LOBYTE(v7) = 0;
  v47 = 1;
  v46 = 0;
  v48 = 0;
  v9 = 0;
  v10 = 0;
  v11 = 2048;
  v12 = 0xFFFFFFFFLL;
  switch(a3)
  {
    case 2024:
      goto LABEL_101;
    case 2025:
    case 2262:
      v9 = 0;
      v10 = 0;
      v11 = 0x80000000000;
      goto LABEL_100;
    case 2026:
    case 2028:
    case 2347:
    case 2348:
    case 2763:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      goto LABEL_35;
    case 2027:
    case 2029:
    case 2353:
    case 2354:
      v9 = 0;
      v10 = 0;
      v15 = 0xF7F00000000;
      goto LABEL_99;
    case 2030:
    case 2378:
    case 2404:
      v9 = 0;
      v10 = 0;
      v11 = 460551;
      goto LABEL_100;
    case 2032:
    case 2386:
    case 2412:
    case 2462:
    case 2470:
      v9 = 0;
      v10 = 0;
      v14 = 0x70700000000;
      goto LABEL_54;
    case 2034:
      v9 = 0;
      v10 = 0;
      v11 = 1807;
      goto LABEL_100;
    case 2036:
      v9 = 0;
      v10 = 0;
      v11 = 0x70F00000000;
      goto LABEL_100;
    case 2037:
      v9 = 0;
      v10 = 0;
      v11 = 112;
      goto LABEL_100;
    case 2040:
    case 2152:
    case 2343:
    case 2345:
    case 2432:
    case 2514:
    case 2557:
    case 2594:
    case 2631:
    case 2645:
    case 2677:
    case 2691:
    case 2732:
    case 2788:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 458759;
      goto LABEL_101;
    case 2054:
      v9 = 0;
      v10 = 0;
      v11 = 0x7000000000;
      goto LABEL_100;
    case 2072:
    case 2073:
    case 2074:
    case 2075:
      v9 = 0;
      v10 = 0;
      v11 = 0x1000000000000;
      goto LABEL_100;
    case 2076:
    case 2306:
    case 2486:
      v9 = 0;
      v10 = 0;
      v15 = 0xF00000000;
      goto LABEL_99;
    case 2077:
    case 2167:
    case 2321:
    case 2322:
    case 2325:
    case 2326:
      v9 = 0;
      v10 = 0;
      v11 = 512;
      goto LABEL_100;
    case 2078:
    case 2079:
    case 2080:
    case 2081:
    case 2164:
    case 2323:
    case 2324:
    case 2327:
    case 2328:
      v9 = 0;
      v10 = 0;
      v11 = 0x20000000000;
      goto LABEL_100;
    case 2082:
    case 2307:
      v9 = 0;
      v10 = 0;
      v11 = 984959;
      goto LABEL_100;
    case 2083:
    case 2308:
      v9 = 0;
      v10 = 0;
      v15 = 0x77F00000000;
      goto LABEL_99;
    case 2084:
    case 2085:
    case 2458:
    case 2466:
      v9 = 0;
      v10 = 0;
      v11 = 768;
      goto LABEL_100;
    case 2086:
    case 2087:
    case 2158:
    case 2159:
    case 2160:
    case 2161:
    case 2316:
    case 2317:
    case 2318:
    case 2380:
    case 2406:
    case 2444:
    case 2459:
    case 2467:
      v9 = 0;
      v10 = 0;
      v11 = 0x70000000000;
      goto LABEL_100;
    case 2088:
    case 2092:
    case 2096:
    case 2100:
      v9 = 0;
      v10 = 0;
      v11 = 917504;
      goto LABEL_100;
    case 2090:
    case 2094:
    case 2098:
    case 2102:
      v9 = 0;
      v10 = 0;
      v11 = 0xE000000000000;
      goto LABEL_100;
    case 2108:
    case 2118:
    case 2127:
    case 2136:
    case 2147:
      v9 = 0;
      v10 = 0;
      v11 = 983040;
      goto LABEL_100;
    case 2112:
    case 2121:
    case 2130:
    case 2139:
    case 2150:
      v9 = 0;
      v10 = 0;
      v11 = 0xF000000000000;
      goto LABEL_100;
    case 2141:
      v9 = 0;
      v10 = 0;
      v11 = 7;
      goto LABEL_100;
    case 2142:
      v9 = 0;
      v10 = 0;
      v11 = 0x700000000;
      goto LABEL_100;
    case 2153:
    case 2344:
    case 2346:
      v9 = 0;
      v10 = 0;
      v14 = 0x700000000;
LABEL_54:
      v11 = v14 & 0xFFFFFFFFFFFFLL | 0x7000000000000;
      goto LABEL_100;
    case 2154:
    case 2155:
    case 2156:
    case 2157:
    case 2309:
    case 2310:
    case 2311:
    case 2379:
    case 2405:
    case 2440:
      v9 = 0;
      v10 = 0;
      v11 = 1792;
      goto LABEL_100;
    case 2162:
    case 2615:
    case 2617:
    case 2619:
    case 2621:
    case 2623:
    case 2625:
    case 2627:
    case 2629:
    case 2633:
    case 2789:
    case 2790:
    case 2791:
    case 2792:
    case 2793:
    case 2794:
    case 2795:
    case 2796:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 65553;
      goto LABEL_101;
    case 2163:
      v9 = 0;
      v10 = 0;
      v11 = 0x1001100000000;
      goto LABEL_100;
    case 2165:
    case 2171:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 131074;
      goto LABEL_101;
    case 2166:
      v9 = 0;
      v10 = 0;
      v11 = 256;
      goto LABEL_100;
    case 2168:
    case 2172:
    case 2288:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 262148;
      goto LABEL_101;
    case 2169:
    case 2286:
      v9 = 0;
      v10 = 0;
      v11 = 0x40000000000;
      goto LABEL_100;
    case 2170:
    case 2173:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 524296;
      goto LABEL_101;
    case 2174:
    case 2180:
    case 2186:
    case 2211:
    case 2227:
    case 2243:
      v9 = 0;
      v10 = 0;
      v11 = 2;
      goto LABEL_100;
    case 2175:
    case 2181:
    case 2187:
    case 2212:
    case 2228:
    case 2244:
      v9 = 0;
      v10 = 0;
      v11 = 4;
      goto LABEL_100;
    case 2176:
    case 2182:
    case 2188:
    case 2213:
    case 2229:
    case 2245:
      v9 = 0;
      v10 = 0;
      v11 = 8;
      goto LABEL_100;
    case 2177:
    case 2183:
    case 2189:
    case 2214:
    case 2230:
    case 2246:
      v9 = 0;
      v10 = 0;
      v11 = 0x20000;
      goto LABEL_100;
    case 2178:
    case 2184:
    case 2190:
    case 2215:
    case 2231:
    case 2247:
      v9 = 0;
      v10 = 0;
      v11 = 0x40000;
      goto LABEL_100;
    case 2179:
    case 2185:
    case 2191:
    case 2216:
    case 2232:
    case 2248:
      v9 = 0;
      v10 = 0;
      v11 = 0x80000;
      goto LABEL_100;
    case 2194:
    case 2219:
    case 2235:
    case 2251:
    case 2266:
    case 2272:
      v9 = 0;
      v10 = 0;
      v11 = 0x200000000;
      goto LABEL_100;
    case 2195:
    case 2220:
    case 2236:
    case 2252:
    case 2267:
    case 2273:
      v9 = 0;
      v10 = 0;
      v11 = 0x400000000;
      goto LABEL_100;
    case 2196:
    case 2221:
    case 2237:
    case 2253:
    case 2268:
    case 2274:
      v9 = 0;
      v10 = 0;
      v11 = 0x800000000;
      goto LABEL_100;
    case 2197:
    case 2222:
    case 2238:
    case 2254:
    case 2269:
    case 2275:
      v9 = 0;
      v10 = 0;
      v11 = 0x2000000000000;
      goto LABEL_100;
    case 2198:
    case 2223:
    case 2239:
    case 2255:
    case 2270:
    case 2276:
      v9 = 0;
      v10 = 0;
      v11 = 0x4000000000000;
      goto LABEL_100;
    case 2199:
    case 2224:
    case 2240:
    case 2256:
    case 2271:
    case 2277:
      v9 = 0;
      v10 = 0;
      v11 = 0x8000000000000;
      goto LABEL_100;
    case 2259:
    case 2263:
      v9 = 0;
      v10 = 0;
      v11 = 0x2000200000000;
      goto LABEL_100;
    case 2260:
    case 2264:
    case 2289:
    case 2430:
      v9 = 0;
      v10 = 0;
      v11 = 0x4000400000000;
      goto LABEL_100;
    case 2261:
    case 2265:
      v9 = 0;
      v10 = 0;
      v11 = 0x8000800000000;
      goto LABEL_100;
    case 2349:
      v12 = 0;
      v9 = 1;
      v11 = 987007;
      goto LABEL_169;
    case 2350:
    case 2351:
    case 2352:
    case 2359:
    case 2360:
    case 2361:
    case 2365:
    case 2366:
    case 2367:
    case 2371:
    case 2372:
    case 2373:
      v9 = 1;
      v11 = 987007;
      goto LABEL_9;
    case 2355:
      v12 = 0;
      v9 = 1;
      v11 = 0xF0F7F00000000;
LABEL_169:
      v10 = 1;
      goto LABEL_101;
    case 2356:
    case 2357:
    case 2358:
    case 2362:
    case 2363:
    case 2364:
    case 2368:
    case 2369:
    case 2370:
    case 2374:
    case 2375:
    case 2376:
      v9 = 1;
      v11 = 0xF0F7F00000000;
LABEL_9:
      v10 = 1;
      v12 = 1;
      goto LABEL_101;
    case 2431:
    case 2448:
    case 2454:
      v9 = 0;
      v10 = 0;
      v16 = 0xE00000000;
      goto LABEL_83;
    case 2433:
    case 2434:
      v9 = 0;
      v10 = 0;
      v11 = 1024;
      goto LABEL_100;
    case 2436:
      v9 = 0;
      v10 = 0;
      v11 = 16;
      goto LABEL_100;
    case 2438:
      v9 = 0;
      v10 = 0;
      v16 = 0x2E00000000;
LABEL_83:
      v11 = v16 & 0xFFFFFFFFFFFFLL | 0xE000000000000;
      goto LABEL_100;
    case 2439:
      v9 = 0;
      v10 = 0;
      v11 = 0x1000000000;
      goto LABEL_100;
    case 2447:
    case 2453:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 917518;
      goto LABEL_101;
    case 2449:
    case 2457:
    case 2465:
      v9 = 0;
      v10 = 0;
      v11 = 459527;
      goto LABEL_100;
    case 2455:
      v9 = 0;
      v10 = 0;
      v15 = 0x70F00000000;
LABEL_99:
      v11 = v15 & 0xFFFFFFFFFFFFLL | 0xF000000000000;
      goto LABEL_100;
    case 2473:
    case 2525:
      v9 = 0;
      v10 = 0;
      v11 = 15;
      goto LABEL_100;
    case 2477:
    case 2529:
      v9 = 0;
      v10 = 0;
      v11 = 0xF00000000;
      goto LABEL_100;
    case 2479:
    case 2547:
    case 2568:
    case 2569:
    case 2605:
    case 2670:
    case 2674:
    case 2687:
    case 2720:
    case 2721:
    case 2729:
    case 2755:
      v9 = 0;
      v10 = 0;
      v11 = 983055;
      goto LABEL_100;
    case 2489:
    case 2496:
    case 2511:
      v9 = 0;
      v10 = 0;
      v11 = 0xC00000000;
      goto LABEL_100;
    case 2503:
    case 2504:
    case 2505:
    case 2507:
    case 2531:
      v9 = 0;
      v10 = 0;
      v11 = 6;
      goto LABEL_100;
    case 2508:
    case 2509:
    case 2533:
      v9 = 0;
      v10 = 0;
      v11 = 0x600000000;
      goto LABEL_100;
    case 2521:
      v9 = 0;
      v10 = 0;
      v11 = 458752;
      goto LABEL_100;
    case 2535:
    case 2539:
    case 2540:
    case 2541:
    case 2543:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 6;
      goto LABEL_101;
    case 2537:
    case 2544:
    case 2545:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0x600000000;
      goto LABEL_101;
    case 2554:
    case 2582:
    case 2583:
    case 2612:
    case 2673:
    case 2678:
    case 2690:
    case 2727:
    case 2728:
    case 2733:
    case 2758:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v13 = 0xF00000000;
      goto LABEL_15;
    case 2564:
    case 2601:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 458752;
      goto LABEL_101;
    case 2588:
    case 2747:
    case 2799:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 983040;
      goto LABEL_101;
    case 2592:
    case 2751:
    case 2802:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0xF000000000000;
      goto LABEL_101;
    case 2616:
    case 2618:
    case 2620:
    case 2622:
    case 2624:
    case 2626:
    case 2628:
    case 2630:
    case 2634:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0x1001100000000;
      goto LABEL_101;
    case 2632:
    case 2716:
    case 2717:
    case 2718:
    case 2719:
    case 2814:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0x8000000000000;
      goto LABEL_101;
    case 2635:
    case 2679:
      v9 = 0;
      v10 = 0;
      v11 = 263936;
      goto LABEL_100;
    case 2637:
    case 2681:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0x4070000000000;
      goto LABEL_101;
    case 2639:
    case 2655:
    case 2656:
    case 2658:
    case 2660:
    case 2662:
    case 2665:
    case 2668:
    case 2683:
    case 2753:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 1792;
      goto LABEL_101;
    case 2641:
    case 2657:
    case 2659:
    case 2661:
    case 2663:
    case 2666:
    case 2667:
    case 2669:
    case 2685:
    case 2754:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0x70000000000;
      goto LABEL_101;
    case 2646:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v17 = 0x700000000;
      goto LABEL_91;
    case 2647:
    case 2649:
    case 2651:
    case 2653:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 512;
      goto LABEL_101;
    case 2648:
    case 2650:
    case 2652:
    case 2654:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0x20000000000;
      goto LABEL_101;
    case 2710:
    case 2711:
    case 2712:
    case 2713:
    case 2714:
    case 2715:
    case 2738:
    case 2739:
    case 2740:
    case 2741:
    case 2742:
    case 2743:
    case 2744:
    case 2745:
    case 2746:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0x4000000000000;
      goto LABEL_101;
    case 2726:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0xE000E00000000;
      goto LABEL_101;
    case 2734:
    case 2759:
      v9 = 0;
      v10 = 0;
      v11 = 983167;
      goto LABEL_100;
    case 2737:
    case 2762:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v13 = 0x7F00000000;
      goto LABEL_15;
    case 2764:
    case 2765:
    case 2766:
    case 2767:
    case 2773:
    case 2774:
    case 2777:
    case 2778:
    case 2781:
    case 2782:
      v9 = 0;
      v12 = 0;
      v10 = 1;
LABEL_35:
      v11 = 987007;
      goto LABEL_101;
    case 2768:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      goto LABEL_14;
    case 2769:
    case 2770:
    case 2771:
    case 2772:
    case 2775:
    case 2776:
    case 2779:
    case 2780:
    case 2783:
    case 2784:
      v9 = 0;
      v12 = 0;
      v10 = 1;
LABEL_14:
      v13 = 0xF7F00000000;
LABEL_15:
      v11 = v13 & 0xFFFFFFFFFFFFLL | 0xF000000000000;
      goto LABEL_101;
    case 2797:
    case 2812:
    case 2815:
      v9 = 0;
      v10 = 0;
      v11 = 459575;
LABEL_100:
      v12 = 0xFFFFFFFFLL;
      goto LABEL_101;
    case 2798:
    case 2813:
    case 2816:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v17 = 0x33700000000;
LABEL_91:
      v11 = v17 & 0xFFFFFFFFFFFFLL | 0x7000000000000;
      goto LABEL_101;
    case 2803:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 15;
      goto LABEL_101;
    case 2807:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0xF00000000;
      goto LABEL_101;
    case 2809:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 4;
      goto LABEL_101;
    case 2810:
    case 2811:
      v9 = 0;
      v10 = 0;
      v12 = 0xFFFFFFFFLL;
      v11 = 0x400000000;
LABEL_101:
      LODWORD(v18) = a4[4] - 1;
      if (sub_22F30D0F4(a1, a4, v18, (uint64_t)&v46))
      {
LABEL_102:
        v19 = 1;
        goto LABEL_108;
      }
      v7 = sub_22E5FA634(&v46, 0x40uLL);
      if (((v11 >> v7) & 1) == 0)
      {
LABEL_107:
        sub_22EFFAE7C(a4);
        sub_22E8FCA40(a1, v25, 0xE56u, 0, (uint64_t)v45);
        sub_22F0D4E74(*(_QWORD *)((char *)&a4[2 * (((unint64_t)*a4 >> 18) & 1) + 2 + 2 * v18]
                                + ((unint64_t)*a4 >> 24)));
        v44 = v26;
        v19 = *(_BYTE *)(sub_22E8906A0((uint64_t)v45, &v44) + 80) != 0;
        sub_22E903BEC(v45);
        goto LABEL_108;
      }
      if (v10)
      {
        v18 = sub_22EFFEB40(*(unsigned __int8 **)((char *)&a4[2 * (((unint64_t)*a4 >> 18) & 1) + 2 + 2 * v12]
                                                + ((unint64_t)*a4 >> 24)));
        *(_QWORD *)v45 = sub_22EB1B954((uint64_t)a1, v18);
        v20 = *(_QWORD *)((*(_QWORD *)v45 & 0xFFFFFFFFFFFFFFFELL) + 8);
        v21 = *(_DWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 - 24) + 144);
        result = a1[11];
        switch(v7)
        {
          case 0u:
            v23 = (_QWORD *)(result + 16512);
            v24 = 16464;
            goto LABEL_128;
          case 1u:
            v23 = (_QWORD *)(result + 16520);
            v24 = 16472;
            goto LABEL_128;
          case 2u:
            v23 = (_QWORD *)(result + 16528);
            v24 = 16480;
            goto LABEL_128;
          case 3u:
            if (v21 == 7)
            {
              v23 = (_QWORD *)(result + 16536);
              v24 = 16488;
            }
            else
            {
              v23 = (_QWORD *)(result + 16544);
              v24 = 16496;
            }
LABEL_128:
            v31 = (_QWORD *)(result + v24);
            if ((v7 & 0x10) == 0)
              v23 = v31;
            goto LABEL_133;
          case 4u:
            v28 = (_QWORD *)(result + 16512);
            v29 = 16464;
            goto LABEL_122;
          case 5u:
            v28 = (_QWORD *)(result + 16520);
            v29 = 16472;
LABEL_122:
            v30 = (_QWORD *)(result + v29);
            if ((*(_DWORD *)(a2 + 56) - 3) >= 3)
              v23 = v30;
            else
              v23 = v28;
            goto LABEL_133;
          case 6u:
            if (v21 == 7)
              v27 = 16536;
            else
              v27 = 16544;
            goto LABEL_132;
          case 7u:
            __break(1u);
            return result;
          case 8u:
            v27 = 16792;
            goto LABEL_132;
          case 9u:
            v27 = 16560;
            goto LABEL_132;
          case 0xAu:
            v27 = 16568;
            goto LABEL_132;
          case 0xBu:
            v27 = 16800;
LABEL_132:
            v23 = (_QWORD *)(result + v27);
LABEL_133:
            v32 = sub_22EF5B848(result, *v23 | v9, 0);
            v33 = sub_22EB392FC(a1, v32, v45, 1, 0, 1);
            v34 = *(_QWORD *)v45;
            if ((v45[0] & 1) == 0)
            {
              v35 = v33;
              sub_22F0D5A50((uint64_t)v18);
              if ((sub_22EB43580((uint64_t)a1, v35, v36, v32, v20, (unsigned __int8 *)(v34 & 0xFFFFFFFFFFFFFFFELL), 0, 0) & 1) == 0)break;
            }
            goto LABEL_102;
          default:
            goto LABEL_107;
        }
      }
LABEL_135:
      v19 = 0;
      v37 = 63;
      v38 = 1;
      if (a3 > 2489)
      {
        v39 = a3 - 2674;
        v41 = 1;
        switch(v39)
        {
          case 0:
          case 3:
          case 4:
          case 55:
          case 58:
          case 59:
            v37 = sub_22E97C90C(v7);
            goto LABEL_187;
          case 1:
          case 2:
          case 56:
          case 57:
            goto LABEL_187;
          case 13:
          case 16:
          case 81:
          case 84:
          case 85:
          case 88:
            v37 = sub_22E97C90C(v7);
            goto LABEL_184;
          case 14:
          case 15:
          case 82:
          case 83:
          case 86:
          case 87:
            goto LABEL_184;
          case 18:
          case 21:
          case 26:
          case 29:
            goto LABEL_178;
          case 19:
          case 22:
          case 27:
          case 30:
            v41 = 0;
            v37 = 1;
            goto LABEL_184;
          case 20:
          case 23:
            v41 = 0;
            v37 = 0;
            goto LABEL_184;
          case 24:
          case 25:
          case 28:
            goto LABEL_177;
          case 31:
            v41 = 0;
            v37 = 15;
            goto LABEL_184;
          case 46:
          case 52:
          case 53:
            v37 = sub_22E97C90C(v7);
            goto LABEL_166;
          case 48:
          case 49:
LABEL_166:
            v41 = 0;
            goto LABEL_187;
          case 60:
          case 63:
            v43 = v7;
            goto LABEL_159;
          case 61:
          case 62:
          case 140:
            goto LABEL_160;
          case 67:
          case 68:
          case 69:
          case 70:
          case 99:
          case 101:
            goto LABEL_146;
          case 89:
          case 94:
            goto LABEL_158;
          case 103:
          case 105:
            goto LABEL_162;
          case 107:
          case 109:
            goto LABEL_163;
          default:
            goto LABEL_108;
        }
      }
      if (a3 > 2262)
      {
        if (a3 <= 2432)
        {
          v40 = a3 - 2263;
          v41 = 1;
          switch(v40)
          {
            case 0:
            case 3:
            case 6:
              goto LABEL_153;
            case 1:
            case 4:
            case 7:
            case 17:
            case 18:
            case 19:
            case 20:
LABEL_174:
              v37 = 31;
              goto LABEL_187;
            case 2:
            case 5:
            case 8:
              goto LABEL_187;
            case 27:
            case 36:
            case 37:
            case 38:
            case 72:
            case 73:
            case 76:
              v41 = 0;
              v37 = 7;
              goto LABEL_187;
            case 28:
            case 79:
              v41 = 0;
LABEL_153:
              v37 = 15;
              goto LABEL_187;
            case 29:
            case 30:
            case 68:
            case 71:
              v41 = 0;
              v37 = 0;
              goto LABEL_187;
            case 31:
            case 32:
            case 39:
            case 40:
            case 67:
            case 70:
            case 75:
            case 78:
              v41 = 0;
              v37 = 1;
              goto LABEL_187;
            case 33:
            case 34:
            case 35:
            case 41:
            case 42:
            case 66:
            case 69:
            case 74:
            case 77:
              v41 = 0;
              goto LABEL_151;
            case 44:
            case 45:
            case 85:
            case 91:
              goto LABEL_158;
            case 46:
            case 53:
LABEL_146:
              v37 = sub_22E97C90C(v7);
              v41 = 0;
              goto LABEL_186;
            case 47:
            case 54:
              v41 = 0;
              v37 = dword_22F4690A8[v7 & 0xF];
              goto LABEL_186;
            case 49:
              v41 = 0;
              v37 = 0;
              goto LABEL_186;
            case 50:
            case 56:
              v41 = 0;
              v37 = 1;
              goto LABEL_186;
            case 51:
            case 57:
              v41 = 0;
              v38 = 3;
LABEL_151:
              v37 = 3;
              goto LABEL_187;
            case 52:
              v41 = 0;
              v37 = 7;
LABEL_186:
              v38 = 3;
              goto LABEL_187;
            case 97:
            case 100:
LABEL_162:
              v37 = sub_22E97C90C(v7);
              v41 = 0;
              v38 = 4;
              goto LABEL_187;
            case 103:
            case 106:
LABEL_163:
              v37 = sub_22E97C90C(v7);
              v41 = 0;
              v38 = 5;
              goto LABEL_187;
            case 109:
            case 112:
              v37 = sub_22E97C90C(v7);
              v41 = 0;
              v38 = 6;
              goto LABEL_187;
            default:
              goto LABEL_108;
          }
        }
        if (a3 > 2441)
        {
          if (a3 == 2442)
          {
LABEL_178:
            v41 = 0;
            v37 = 3;
          }
          else
          {
            if (a3 != 2443)
              goto LABEL_108;
LABEL_177:
            v41 = 0;
            v37 = 7;
          }
        }
        else if (a3 == 2433)
        {
LABEL_158:
          v43 = v7;
LABEL_159:
          v37 = sub_22E97C90C(v43);
LABEL_160:
          v41 = 0;
        }
        else
        {
          if (a3 != 2434)
            goto LABEL_108;
          v41 = 0;
          v37 = dword_22F4690A8[v7 & 0xF];
        }
LABEL_184:
        v38 = 2;
LABEL_187:
        v19 = (*(_BYTE *)(a1[9] + 237) & 4) == 0 && sub_22E9797E0((uint64_t)a1, a4, v38, v41, v37 + v41, 1);
      }
      else
      {
        v42 = a3 - 2171;
        v41 = 1;
        switch(v42)
        {
          case 0:
          case 3:
            goto LABEL_153;
          case 1:
          case 4:
            goto LABEL_174;
          case 2:
            goto LABEL_187;
          default:
            break;
        }
      }
LABEL_108:
      if (v47 >= 0x41)
      {
        if (v46)
          MEMORY[0x2348A0E84](v46, 0x1000C8000313F17);
      }
      return v19;
    default:
      goto LABEL_135;
  }
}

uint64_t sub_22E97C90C(char a1)
{
  return ((uint64_t (*)(void))((char *)sub_22E97C92C + 4 * byte_22F468078[a1 & 0xF]))();
}

uint64_t sub_22E97C92C@<X0>(char a1@<W8>)
{
  return ((4 << a1) - 1);
}

uint64_t sub_22E97C9BC@<X0>(char a1@<W8>)
{
  return ~(-1 << a1);
}

BOOL sub_22E97C9CC(uint64_t a1, uint64_t a2, _DWORD *a3, int a4)
{
  _BOOL8 v6;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  char v23;

  if ((*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
    || *(_BYTE *)(a1 + 3209)
    || (*a3 & 0x18000) != 0)
  {
    return 0;
  }
  sub_22F00905C((uint64_t)a3, *(_QWORD *)(a1 + 88), 0, (uint64_t)&v21);
  v10 = v22;
  v11 = v21;
  if (v23)
  {
    v12 = v21;
    if (v22 < 0x41)
      goto LABEL_12;
    goto LABEL_11;
  }
  if (v22 > 0x40)
  {
LABEL_11:
    v12 = *(_QWORD *)v21;
    goto LABEL_12;
  }
  v12 = v21 << -(char)v22 >> -(char)v22;
LABEL_12:
  v6 = 0;
  v13 = ((*(_DWORD *)(a2 + 288) >> 10) >> v12) & 1;
  if (v12 >= 8)
    v13 = 0;
  if (v13 != a4)
  {
    sub_22F0D5A50((uint64_t)a3);
    sub_22E8FCA40((_QWORD *)a1, v14, 0xA89u, 0, (uint64_t)&v21);
    v20 = v12;
    v15 = sub_22E8900C4((uint64_t)&v21, &v20);
    v19 = a4;
    v16 = sub_22E8900C4(v15, &v19);
    sub_22F0D4E74((uint64_t)a3);
    v18 = v17;
    v6 = *(_BYTE *)(sub_22E8906A0(v16, &v18) + 80) != 0;
    sub_22E903BEC((unsigned int *)&v21);
  }
  if (v10 >= 0x41 && v11)
    MEMORY[0x2348A0E84](v11, 0x1000C8000313F17);
  return v6;
}

uint64_t sub_22E97CB60(_QWORD *a1, int a2, unsigned int *a3, unsigned int a4)
{
  uint64_t v7;
  _BOOL4 v8;
  unsigned __int8 *v9;
  unsigned int v10;
  _BOOL8 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  BOOL v28;
  _BOOL4 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int v34;
  unsigned __int8 *v35;
  uint64_t *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  BOOL v53;
  uint64_t v54;
  BOOL v55;
  int v56;
  int v57;
  _QWORD *v58;
  unsigned int v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t *v75;
  unsigned __int8 *v76;
  unint64_t v77;
  uint64_t v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  int v85;
  uint64_t v86;

  v7 = 1;
  v8 = (a2 - 2986) < 2 || (a2 - 8979) < 2;
  v9 = sub_22EFFBBCC(*(unsigned __int8 **)((char *)a3 + *((unsigned __int8 *)a3 + 3)));
  if (v8)
    v10 = 1;
  else
    v10 = 2;
  if (!sub_22E979C64(a1, a3, v10))
  {
    v11 = !v8;
    v12 = sub_22EB1B954((uint64_t)a1, *(void **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2 + 2 * v11] + ((unint64_t)*a3 >> 24)));
    if ((v12 & 1) == 0)
    {
      v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      v14 = *(_QWORD *)(*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v14 && *(_BYTE *)(v14 + 16) == 39
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
        && (v14 = sub_22F10CF48(v14)) != 0)
      {
        v15 = *(_QWORD *)(v14 + 32);
        v82 = v15;
        v16 = v15 & 0xFFFFFFFFFFFFFFF0;
        v17 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0);
        v76 = v9;
        v77 = v15;
        v73 = a4;
        if ((*(_BYTE *)(v17 + 8) & 0xF) != 0)
          v17 = (unint64_t)sub_22F10D2BC(v15);
        v18 = v17 & 0xFFFFFFFFFFFFFFF0;
        if (v8)
          v19 = 5;
        else
          v19 = 4;
        v75 = (uint64_t *)v16;
        v20 = *(_QWORD *)(v16 + 8);
        if ((v20 & 8) != 0)
        {
          v22 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v21 = 0;
          v22 = 0;
        }
        v26 = *(_QWORD *)v18;
        v74 = v18 | v19;
        if ((*(_BYTE *)(*(_QWORD *)v18 + 8) & 0xF) != 0)
          v26 = (unint64_t)sub_22F10D2BC(v18 | v19);
        v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v27)
          v28 = *(_DWORD *)(v27 + 16) == 11;
        else
          v28 = 0;
        v29 = v28 && (*(_DWORD *)(v27 + 16) & 0xFF80000) == 86507520;
        v30 = *(_QWORD *)(v18 + 8);
        if ((v30 & 8) != 0)
        {
          v32 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFFF0) + 0x18);
          v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFFFFF00000000;
        }
        else
        {
          v31 = 0;
          v32 = 0;
        }
        if (v29)
          v33 = v22 & 0xFFFFFFFFFFFFFFF7 | (v20 | v77) & 7;
        else
          v33 = v22 | (v20 | v77) & 7;
        *(_QWORD *)&v83 = *(_QWORD *)(v18 + 8) & 3 | v31 | v32 | v19;
        if ((sub_22E95F24C((unsigned int *)&v83, v33 | v21) & 1) != 0)
        {
          v34 = 5;
          v36 = v75;
          v35 = v76;
          v37 = v74;
        }
        else
        {
          v35 = v76;
          if ((v76[2] & 4) != 0)
          {
            v83 = *((_OWORD *)v76 + 2);
            v38 = sub_22F0AB0EC((unint64_t *)&v83);
          }
          else
          {
            v38 = *((_DWORD *)v76 + 1);
          }
          sub_22E8FCA40(a1, v38, 0x1501u, 0, (uint64_t)&v83);
          v81 = *(_QWORD *)(v13 + 8);
          v39 = sub_22E8901B8((uint64_t)&v83, &v81);
          v80 = sub_22EF5B848(a1[11], v74, 0);
          v40 = sub_22E8901B8(v39, (uint64_t *)&v80);
          v34 = 1;
          v79 = 1;
          v41 = sub_22E8900C4(v40, &v79);
          sub_22F0D4E74(v13);
          v78 = v42;
          sub_22E8906A0(v41, &v78);
          sub_22E903BEC((unsigned int *)&v83);
          v37 = v74;
          v36 = v75;
        }
        v43 = sub_22EF5B848(a1[11], v37, 0);
        v7 = 1;
        v44 = sub_22E90092C((uint64_t)a1, v13, v43, v34, 0, 0);
        if ((v44 & 1) == 0)
        {
          v45 = v44 & 0xFFFFFFFFFFFFFFFELL;
          *(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2 + 2 * v11] + ((unint64_t)*a3 >> 24)) = v44 & 0xFFFFFFFFFFFFFFFELL;
          v46 = *v36;
          v47 = *(_QWORD *)(*(_QWORD *)(*v36 + 8) & 0xFFFFFFFFFFFFFFF0);
          v48 = *(_DWORD *)(v47 + 16);
          if (v47)
            v49 = v48 == 11;
          else
            v49 = 0;
          if (v49)
          {
            if (((*(_DWORD *)(v47 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
              goto LABEL_63;
          }
          else if (v47 && v48 == 44)
          {
            v50 = sub_22F114198(*(_QWORD *)(v47 + 24));
            if ((*(_BYTE *)(v50 + 74) & 1) != 0 || *(_QWORD *)(v50 + 128) > 7uLL)
            {
              v51 = sub_22F114198(*(_QWORD *)(v47 + 24));
              v46 = *v36;
              if ((*(_BYTE *)(v51 + 76) & 0x80) == 0)
                goto LABEL_63;
            }
            else
            {
              v46 = *v36;
            }
          }
          else if (v48 == 9)
          {
            goto LABEL_63;
          }
          v52 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v46 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
          v53 = v52 > 0x27;
          v54 = (1 << v52) & 0x8100000400;
          v55 = v53 || v54 == 0;
          if (v55 && !sub_22F10E0EC(v46))
          {
            if ((v35[2] & 4) != 0)
            {
              v83 = *((_OWORD *)v35 + 2);
              v72 = sub_22F0AB0EC((unint64_t *)&v83);
            }
            else
            {
              v72 = *((_DWORD *)v35 + 1);
            }
            v57 = v72;
            v58 = a1;
            v59 = 2756;
            goto LABEL_67;
          }
LABEL_63:
          if (sub_22EF5CDF0(a1[11], v46) <= (unint64_t)v73)
          {
            v63 = v36[1];
            if ((v63 & 8) == 0 || ((*(_DWORD *)((v63 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 6) & 7u) - 2 > 2)
            {
              if (v8)
              {
                v7 = 0;
                v66 = v77;
              }
              else
              {
                v67 = *(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                + ((unint64_t)*a3 >> 24));
                v68 = a1[11];
                v85 = 0;
                LODWORD(v83) = 1;
                v69 = sub_22EF60188(v68, v77);
                *((_QWORD *)&v83 + 1) = 0;
                v84 = v69;
                v86 = 0;
                v70 = sub_22EC45014(a1, &v83, 0, v67, 0, 0);
                v7 = v70 & 1;
                if ((v70 & 1) != 0)
                  return v7;
                *(_QWORD *)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2] + ((unint64_t)*a3 >> 24)) = v70 & 0xFFFFFFFFFFFFFFFELL;
                v66 = *(_QWORD *)(a1[11] + 16480);
              }
              *((_QWORD *)a3 + 1) = v66;
              return v7;
            }
            if ((v35[2] & 4) != 0)
            {
              v83 = *((_OWORD *)v35 + 2);
              v64 = sub_22F0AB0EC((unint64_t *)&v83);
            }
            else
            {
              v64 = *((_DWORD *)v35 + 1);
            }
            sub_22E8FCA40(a1, v64, 0xA59u, 0, (uint64_t)&v83);
            v60 = sub_22E8901B8((uint64_t)&v83, &v82);
            sub_22F0D4E74(v45);
            v81 = v65;
            v62 = &v81;
            goto LABEL_68;
          }
          if ((v35[2] & 4) != 0)
          {
            v83 = *((_OWORD *)v35 + 2);
            v56 = sub_22F0AB0EC((unint64_t *)&v83);
          }
          else
          {
            v56 = *((_DWORD *)v35 + 1);
          }
          v57 = v56;
          v58 = a1;
          v59 = 2759;
LABEL_67:
          sub_22E8FCA40(v58, v57, v59, 0, (uint64_t)&v83);
          v81 = *(_QWORD *)(v45 + 8);
          v60 = sub_22E8901B8((uint64_t)&v83, &v81);
          sub_22F0D4E74(v45);
          v80 = v61;
          v62 = (uint64_t *)&v80;
LABEL_68:
          sub_22E8906A0(v60, v62);
          sub_22E903BEC((unsigned int *)&v83);
          return 1;
        }
      }
      else
      {
        if ((v9[2] & 4) != 0)
        {
          v83 = *((_OWORD *)v9 + 2);
          v23 = sub_22F0AB0EC((unint64_t *)&v83);
        }
        else
        {
          v23 = *((_DWORD *)v9 + 1);
        }
        sub_22E8FCA40(a1, v23, 0xAC3u, 0, (uint64_t)&v83);
        v82 = *(_QWORD *)(v13 + 8);
        v24 = sub_22E8901B8((uint64_t)&v83, &v82);
        sub_22F0D4E74(v13);
        v81 = v25;
        sub_22E8906A0(v24, &v81);
        sub_22E903BEC((unsigned int *)&v83);
      }
    }
  }
  return v7;
}

BOOL sub_22E97D1B4(_QWORD *a1, uint64_t a2, unsigned int *a3, int a4)
{
  _DWORD *v4;
  BOOL v5;
  unsigned __int8 *v9;
  unint64_t v10;
  int v11;
  void *v12;
  int v13;
  void *v14;
  void *__p[14];
  void *v17;
  void *v18[2];
  _QWORD v19[13];

  v19[12] = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2] + ((unint64_t)*a3 >> 24));
  if ((*v4 & 0x18000) != 0)
  {
    return 0;
  }
  else
  {
    v9 = sub_22EFFA6B0(*(unsigned __int8 **)((char *)&a3[2 * (((unint64_t)*a3 >> 18) & 1) + 2]
                                           + ((unint64_t)*a3 >> 24)));
    if (*v9 == 225)
    {
      v10 = ((*(_DWORD *)v9 >> 21) & 7u) * *((_DWORD *)v9 + 4);
      __p[12] = &v9[4 * *((unsigned int *)v9 + 1) + 20];
      __p[13] = (void *)v10;
      v18[0] = v19;
      v18[1] = (void *)0x600000000;
      llvm::StringRef::split();
      if (a4)
      {
        sub_22EFFAE7C(a3);
        sub_22E8FCA40(a1, v11, 0xA8Cu, 0, (uint64_t)__p);
        sub_22F0D4E74((uint64_t)v4);
        v17 = v12;
        v5 = *(_BYTE *)(sub_22E8906A0((uint64_t)__p, (uint64_t *)&v17) + 80) != 0;
        sub_22E903BEC((unsigned int *)__p);
      }
      else
      {
        v5 = 0;
      }
      if (v18[0] != v19)
        free(v18[0]);
    }
    else
    {
      sub_22EFFAE7C(a3);
      sub_22E8FCA40(a1, v13, 0xD16u, 0, (uint64_t)v18);
      sub_22F0D4E74((uint64_t)v4);
      __p[0] = v14;
      v5 = *(_BYTE *)(sub_22E8906A0((uint64_t)v18, (uint64_t *)__p) + 80) != 0;
      sub_22E903BEC((unsigned int *)v18);
    }
  }
  return v5;
}

uint64_t sub_22E97D804(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _QWORD *v13;
  unsigned __int8 *v14;
  uint64_t v15;

  if (*(_BYTE *)(a1 + 80))
  {
    v4 = *a2;
    v5 = *(unsigned __int8 **)(a1 + 32);
    if (!v5)
    {
      v5 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(a1 + 40));
      *(_QWORD *)(a1 + 32) = v5;
    }
    v5[*v5 + 1] = 2;
    v6 = *(_BYTE **)(a1 + 32);
  }
  else
  {
    if (!*(_BYTE *)(a1 + 92))
      return a1;
    v9 = (uint64_t *)(*(_QWORD *)a1 + 12784);
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
    v15 = v10;
    v11 = sub_22F2F1D6C(v9, &v15)[1] + 32 * *(unsigned int *)(a1 + 88);
    v14 = *(unsigned __int8 **)(v11 + 8);
    v13 = (_QWORD *)(v11 + 8);
    v12 = v14;
    v4 = *a2;
    if (!v14)
    {
      v12 = (unsigned __int8 *)sub_22E3B8AAC(v13[1]);
      *v13 = v12;
    }
    v12[*v12 + 1] = 2;
    v6 = (_BYTE *)*v13;
  }
  v7 = *v6;
  *v6 = v7 + 1;
  *(_QWORD *)&v6[8 * v7 + 16] = v4;
  return a1;
}

uint64_t sub_22E97D8F8(_QWORD *a1, unsigned int a2, unsigned int *a3)
{
  unsigned __int8 v5;
  unint64_t v6;
  char **v7;
  unint64_t v8;
  _DWORD *v9;
  char **v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned __int8 *v14;
  char v15;
  int v16;
  int v17;
  unsigned __int8 v18;
  unsigned int v19;
  _BOOL4 v20;
  unsigned int v22;
  int v23;

  v5 = atomic_load((unsigned __int8 *)&qword_253E4C0B8);
  if ((v5 & 1) == 0)
  {
    v22 = a2;
    v23 = __cxa_guard_acquire(&qword_253E4C0B8);
    a2 = v22;
    if (v23)
    {
      sub_22E9B3384((uint64_t)&unk_255E04658, (unint64_t)off_255E04DD8, 14, 1);
      byte_253E4C0B0 = 1;
      __cxa_guard_release(&qword_253E4C0B8);
      a2 = v22;
    }
  }
  v6 = 160;
  v7 = (char **)&unk_255E04658;
  do
  {
    v8 = v6 >> 1;
    v9 = (_DWORD *)v7 + 3 * (v6 >> 1);
    v11 = *v9;
    v10 = (char **)(v9 + 3);
    v6 += ~(v6 >> 1);
    if (v11 < a2)
      v7 = v10;
    else
      v6 = v8;
  }
  while (v6);
  if (v7 == off_255E04DD8 || *(_DWORD *)v7 != a2)
  {
    LOBYTE(v13) = 0;
  }
  else
  {
    v12 = 0;
    v13 = 0;
    do
    {
      v14 = (unsigned __int8 *)v7 + v12;
      v15 = *((_BYTE *)v7 + v12 + 6);
      if (v15)
      {
        if (v14[5])
          v16 = -1 << (v15 - 1);
        else
          v16 = 0;
        if (v14[5])
          --v15;
        v17 = ~(-1 << v15);
        v18 = v14[7];
        if (v18)
        {
          v19 = 1 << v18;
          v20 = sub_22E9797E0((uint64_t)a1, a3, v14[4], v16 << v18, v17 << v18, 1);
          v13 |= sub_22F30E918(a1, a3, v14[4], v19) || v20;
        }
        else
        {
          v13 |= sub_22E9797E0((uint64_t)a1, a3, v14[4], v16, v17, 1);
        }
      }
      v12 += 4;
    }
    while (v12 != 8);
  }
  return v13 & 1;
}

BOOL sub_22E97DAA0(llvm::APInt *a1)
{
  int v3;
  int v4;
  int v5;

  if (*((_DWORD *)a1 + 2) > 0x40u)
  {
    v3 = *((_DWORD *)a1 + 2);
    v4 = llvm::APInt::countPopulationSlowCase(a1);
    v5 = llvm::APInt::countLeadingZerosSlowCase(a1) + v4;
    return v5 + llvm::APInt::countTrailingZerosSlowCase(a1) == v3;
  }
  else
  {
    return *(_QWORD *)a1
        && ((((*(_QWORD *)a1 - 1) | *(_QWORD *)a1) + 1) & ((*(_QWORD *)a1 - 1) | *(_QWORD *)a1)) == 0;
  }
}

uint64_t sub_22E97DB20(_QWORD *a1, unsigned int *a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7)
{
  int v11;
  int v12;
  uint64_t v13;
  unsigned int *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19[24];
  _QWORD v20[2];

  v20[0] = a6;
  v20[1] = a7;
  v11 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(a1[11] + 15088) + 568))(*(_QWORD *)(a1[11] + 15088), a3, a4);
  if ((v11 & 1) == 0)
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v12, a5, 0, (uint64_t)v19);
    if (a7)
    {
      v16 = sub_22F2F2210((uint64_t)v19, (uint64_t)v20);
      sub_22F0D4E74((uint64_t)a2);
      v18 = v17;
      v14 = (unsigned int *)v16;
    }
    else
    {
      sub_22F0D4E74((uint64_t)a2);
      v18 = v13;
      v14 = v19;
    }
    sub_22E8906A0((uint64_t)v14, &v18);
    sub_22E903BEC(v19);
  }
  return v11 ^ 1u;
}

BOOL sub_22E97DC14(_QWORD *a1, unsigned int *a2, int a3, char *a4)
{
  unsigned int v6;
  char v7;
  _BOOL8 v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v24;
  int v25;
  int v26;
  unsigned int v27[24];
  uint64_t v28;
  unint64_t v29;
  int v30;
  char *v31;

  v31 = a4;
  v6 = a3 & 0xFFFFFFFC;
  v7 = sub_22E97DB20(a1, a2, (uint64_t)"paired-vector-memops", 20, 0x11ABu, (uint64_t)"10", 2);
  if (v6 != 2632)
  {
    if ((v7 & 1) != 0)
      return 1;
    v7 = sub_22E97DB20(a1, a2, (uint64_t)"mma", 3, 0x11ABu, (uint64_t)"10", 2);
  }
  if ((v7 & 1) != 0)
    return 1;
  *((_QWORD *)a2 + 1) = sub_22E98505C(a1[11], &v31, &v30);
  if (*v31)
  {
    v9 = 0;
    while (1)
    {
      v30 = 0;
      v10 = sub_22E98505C(a1[11], &v31, &v30);
      v29 = v10;
      if (v9 >= a2[4])
        break;
      v11 = v10;
      v12 = *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2 + 2 * v9] + ((unint64_t)*a2 >> 24));
      v28 = *(_QWORD *)(v12 + 8);
      v13 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFF0) + 8);
      v14 = v13 | v28 & 7;
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8);
      if (v13 & 2 | v28 & 2
        || *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8) & 4 | v13 & 4 | v28 & 4 | *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0)
                                                                                             + 8) & 2)
      {
        v16 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v16 + 8) & 0xF) != 0)
          v16 = (unint64_t)sub_22F10D2BC(v15 | *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFFF0) + 8) & 7 | v28 & 7);
        v14 = v16 & 0xFFFFFFFFFFFFFFF0;
      }
      if (v14 != v11)
      {
        if (!sub_22F10DFD8(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0))
          || (v17 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                       + 16),
              v17 != 39)
          && (v17 & 0xFEu) - 2 >= 4)
        {
          sub_22F0D5A50(v12);
          sub_22E8FCA40(a1, v18, 0x1357u, 0, (uint64_t)v27);
          v19 = sub_22E8901B8((uint64_t)v27, &v28);
          v20 = sub_22E8901B8(v19, (uint64_t *)&v29);
          v26 = 1;
          v21 = sub_22E8900C4(v20, &v26);
          v25 = 0;
          v22 = sub_22E8900C4(v21, &v25);
          v24 = 0;
          v8 = *(_BYTE *)(sub_22E8900C4(v22, &v24) + 80) != 0;
          sub_22E903BEC(v27);
          return v8;
        }
      }
      if (v30)
      {
        v8 = 1;
        if (sub_22E9797E0((uint64_t)a1, a2, v9, 0, v30, 1))
          return v8;
      }
      ++v9;
      if (!*v31)
        return sub_22E979C64(a1, a2, v9);
    }
    for (LODWORD(v9) = v9 + 1; *v31; LODWORD(v9) = v9 + 1)
      sub_22E98505C(a1[11], &v31, &v30);
  }
  else
  {
    LODWORD(v9) = 0;
  }
  return sub_22E979C64(a1, a2, v9);
}

uint64_t sub_22E97DED0(_QWORD *a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned int v10[24];

  v3 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16);
  if (v3 == 39 || (v3 & 0xFEu) - 2 < 4)
    return 0;
  v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 8);
  v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v7 + 8) & 0xF) != 0)
    v7 = (unint64_t)sub_22F10D2BC(v6 | a2 & 7);
  v8 = a1[11];
  if ((v7 & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(v8 + 18024) && (v7 & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(v8 + 18032))
    return 0;
  sub_22E8FCA40(a1, a3, 0x11B0u, 0, (uint64_t)v10);
  sub_22E903BEC(v10);
  return 1;
}

uint64_t sub_22E97DF98(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  size_t v4;
  unint64_t v6;
  unint64_t v8;
  uint64_t v13;
  BOOL v14;

  v1 = *(uint64_t **)(*(_QWORD *)(a1 + 40) + 16);
  v3 = *v1;
  v2 = v1 + 2;
  v4 = v3;
  switch((int)v3)
  {
    case 5:
      if (*(_DWORD *)v2 != 1851876211 || *((_BYTE *)v2 + 4) != 102)
        goto LABEL_12;
      v6 = 0x100000000;
      goto LABEL_52;
    case 6:
      if (*(_DWORD *)v2 == 1852404336 && *((_WORD *)v2 + 2) == 26228)
        goto LABEL_46;
      goto LABEL_12;
    case 7:
      if (!memcmp(v2, "printf0", v4))
      {
LABEL_46:
        v6 = 0x100000001;
      }
      else
      {
        v6 = 0x100000005;
        if (!memcmp(v2, "strfmon", v4))
        {
          v6 = 0x100000004;
        }
        else if (memcmp(v2, "kprintf", v4) && memcmp(v2, "cmn_err", v4))
        {
          v6 = 0;
        }
      }
      goto LABEL_52;
    case 8:
      v6 = 0x100000002;
      if (*v2 == 0x676E69727453534ELL || *v2 == 0x676E697274534643)
        goto LABEL_52;
      if (*v2 == 0x656D697466727473)
      {
        v6 = 0x100000003;
        goto LABEL_52;
      }
      if (!memcmp(v2, "vcmn_err", v4))
      {
        v6 = 0x100000005;
        goto LABEL_52;
      }
      if (!memcmp(v2, "zcmn_err", v4))
        v6 = 0x100000005;
      else
        v6 = 0;
LABEL_13:
      v8 = HIDWORD(v6);
      if (v4 == 15 && v8 == 0)
      {
        if (!(*v2 ^ 0x5F64736265657266 | *(_QWORD *)((char *)v2 + 7) ^ 0x66746E6972706B5FLL))
          v6 = 0x100000006;
      }
      else
      {
        if (v4 == 8 && v8 == 0)
        {
          v13 = 0x100000007;
          v14 = *v2 == 0x65636172745F736FLL;
        }
        else if (v4 == 6 && v8 == 0)
        {
          v13 = 0x100000008;
          v14 = (*(_DWORD *)v2 ^ 0x6C5F736F | *((unsigned __int16 *)v2 + 2) ^ 0x676F) == 0;
        }
        else
        {
          if (v4 != 12 || v8 != 0)
            goto LABEL_52;
          v13 = 0x100000009;
          v14 = (*v2 ^ 0x736F5F6C6174656DLL | *((unsigned int *)v2 + 2) ^ 0x676F6C5FLL) == 0;
        }
        if (v14)
          v6 = v13;
      }
LABEL_52:
      if ((v6 & 0xFF00000000) != 0)
        return v6;
      else
        return 10;
    default:
LABEL_12:
      v6 = 0;
      goto LABEL_13;
  }
}

uint64_t sub_22E97E27C(_QWORD *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  unint64_t v7;
  uint64_t *v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  int v25;
  int v26;
  unsigned int v27[24];
  uint64_t v28;
  _QWORD v29[2];

  v7 = a6;
  v29[0] = a4;
  v29[1] = a5;
  v28 = a3;
  v11 = (uint64_t *)(a7 & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(a7 & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v13 == 39 || (v13 & 0xFE) == 0x28)
  {
    if (v13 == 39)
    {
      v7 = sub_22F10ACF8(*(_QWORD *)(a6 & 0xFFFFFFFFFFFFFFF0));
      result = *v11;
    }
    result = sub_22F10ACF8(result);
    if (v7 >= 0x10)
    {
      v14 = result;
      v15 = (uint64_t *)(result & 0xFFFFFFFFFFFFFFF0);
      result = sub_22F1110EC(*(_QWORD *)(result & 0xFFFFFFFFFFFFFFF0), 0);
      if ((result & 1) == 0)
      {
        result = sub_22F1110EC(*(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0), 0);
        if ((result & 1) == 0)
        {
          v16 = *v15;
          LOBYTE(v27[0]) = 0;
          result = sub_22F110500((uint64_t)v27, v16);
          if (!result || *(_QWORD *)(result + 24) > 0xFuLL || (*(_BYTE *)(result + 17) & 4) != 0)
          {
            v17 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0);
            LOBYTE(v27[0]) = 0;
            result = sub_22F110500((uint64_t)v27, v17);
            if (!result || *(_QWORD *)(result + 24) > 0xFuLL || (*(_BYTE *)(result + 17) & 4) != 0)
            {
              v18 = sub_22EF5D130(a1[11], v14);
              result = sub_22EF5D130(a1[11], v7);
              if (result < v18)
              {
                v19 = result;
                sub_22E8FCA40(a1, a2, 0x1AD8u, 0, (uint64_t)v27);
                v26 = v19;
                v20 = sub_22E8900C4((uint64_t)v27, &v26);
                v25 = v18;
                v21 = sub_22E8900C4(v20, &v25);
                v22 = sub_22F2F2210(v21, (uint64_t)v29);
                v24 = a3 != 0;
                v23 = sub_22E894E38(v22, (unsigned __int8 *)&v24);
                sub_22E890024(v23, &v28);
                return (uint64_t)sub_22E903BEC(v27);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22E97E434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, unint64_t a6, int a7, int a8, uint64_t a9, int a10)
{
  uint64_t result;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  BOOL v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _DWORD *v53;
  uint64_t v54;
  unint64_t v55;
  std::string::size_type v56;
  uint64_t v57;
  unsigned __int8 **v58;
  unsigned __int8 *v59;
  uint64_t *v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  unsigned int v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  std::string::size_type v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  int v76;
  BOOL v77;
  uint64_t v78;
  BOOL v79;
  unsigned int v80;
  uint64_t *v81;
  uint64_t v82;
  std::string::size_type v83;
  uint64_t i;
  uint64_t v85;
  int v86;
  std::string::size_type v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t **v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  unsigned __int8 *v103;
  unsigned __int8 *v104;
  unsigned __int8 *v105;
  unsigned __int8 **v106;
  unsigned int v107;
  uint64_t v108;
  int v109;
  unsigned __int8 **v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  unint64_t *v127;
  char v128;
  unsigned int v129;
  std::string *v130;
  unint64_t v131;
  unint64_t v132;
  unsigned __int8 *v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  int v146;
  unsigned int *v147;
  unsigned int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unsigned int v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  int v171;
  int v172;
  std::string *v173;
  uint64_t size;
  uint64_t **v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint8x8_t v184;
  int v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  int v191;
  uint64_t v192;
  void *v193;
  BOOL v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  unint64_t v201;
  uint64_t v202;
  unint64_t v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  std::string v208;
  uint64_t v209;
  _DWORD *v210;
  uint64_t v211;
  uint64_t v212;
  int8x8_t v213;
  unsigned int v214;
  uint64_t v215;

  v215 = *MEMORY[0x24BDAC8D0];
  result = sub_22EFC7ADC(*(_QWORD *)(a1 + 216));
  if ((result & 1) != 0)
    return result;
  v202 = (uint64_t)a5;
  v203 = 1;
  v201 = a6;
  v198 = a3;
  v199 = a2;
  v196 = a4;
  v197 = a8;
  if (a2)
  {
    v19 = (uint64_t *)sub_22E47E5E0(a2);
    v21 = v20;
    v200 = a8;
    while (1)
    {
      v22 = v19;
      a6 = v201;
      if (v19 >= v21)
      {
        if (v19 == v21)
          break;
        v23 = v21;
        while (*(_WORD *)(*v23 + 32) != 179)
        {
          if (++v23 == v19)
            goto LABEL_29;
        }
        v22 = v19;
      }
      else
      {
        while (*(_WORD *)(*v22 + 32) != 179)
        {
          if (++v22 == v21)
            goto LABEL_29;
        }
        v23 = v21;
      }
      if (v22 == v23)
        break;
      do
      {
        v25 = *v19++;
        v24 = v25;
      }
      while (*(_WORD *)(v25 + 32) != 179);
      sub_22E97F810(&v203, v201, 0);
      v27 = *(_DWORD *)(v24 + 48);
      v26 = *(_DWORD *)(v24 + 52);
      if (v26)
        v28 = a10 != 4;
      else
        v28 = 2;
      v29 = v27 - 1;
      if (v26)
        v30 = v26 - 1;
      else
        v30 = 0;
      if (a7)
      {
        if (v27 != 1)
        {
          v29 = v27 - 2;
          v31 = v26 >= 2;
          v32 = v26 - 2;
          if (v31)
            v30 = v32;
          else
            v30 = 0;
          goto LABEL_28;
        }
      }
      else
      {
LABEL_28:
        v33 = sub_22E97DF98(v24);
        sub_22E9849B0(a1, v202, v201, v28, v29, v30, v33, a10, v200, a9, (uint64_t)&v203);
      }
    }
LABEL_29:
    if ((*(_DWORD *)(v199 + 28) & 0x7Eu) - 52 >= 6)
      v34 = 0;
    else
      v34 = v199;
    if (a10 == 4)
    {
      v195 = v34;
      v194 = 1;
      a5 = (unint64_t *)v202;
      v35 = v199;
      goto LABEL_69;
    }
    a5 = (unint64_t *)v202;
    a8 = v197;
    if (v34 && sub_22EFC01DC(v34, 0) == 781)
    {
      v194 = 1;
      v35 = v199;
      v195 = v199;
      goto LABEL_69;
    }
    if (a3)
    {
      a4 = v196;
      goto LABEL_42;
    }
    v38 = *(_DWORD *)(v199 + 28);
    a4 = v196;
    if ((v38 & 0x7Eu) - 52 > 5)
    {
      if ((v38 & 0x7F) != 0x18)
        goto LABEL_55;
      v37 = *(_DWORD *)(v199 + 104);
    }
    else
    {
      v39 = *(_QWORD *)(*(_QWORD *)(v199 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (v39)
        v40 = *(_BYTE *)(v39 + 16) == 26;
      else
        v40 = 0;
      if (v40)
        goto LABEL_50;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v39 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
      {
        v39 = sub_22F10CF48(v39);
        a6 = v201;
        a5 = (unint64_t *)v202;
        a4 = v196;
        a8 = v197;
        if (!v39)
        {
LABEL_55:
          v37 = 0;
          goto LABEL_56;
        }
LABEL_50:
        v36 = *(_QWORD *)(v39 + 16);
LABEL_43:
        v37 = (unsigned __int16)(v36 >> 38);
        goto LABEL_56;
      }
      v37 = 0;
      a6 = v201;
      a5 = (unint64_t *)v202;
      a4 = v196;
      a8 = v197;
    }
LABEL_56:
    if (a6 > v37)
    {
      v41 = v37;
      do
      {
        v42 = (unsigned __int8 *)a5[v41];
        if (v42)
        {
          if ((v203 & 1) != 0)
          {
            if (v203 >> 58 && ((1 << v41) & (v203 >> 1) & ~(-1 << (v203 >> 58))) != 0)
              goto LABEL_66;
          }
          else if (*(_DWORD *)(v203 + 64) && (*(_QWORD *)(*(_QWORD *)v203 + 8 * (v37 >> 6)) & (1 << v37)) != 0)
          {
            goto LABEL_66;
          }
          sub_22EB1C0AC(a1, v42, a10);
        }
LABEL_66:
        v41 = ++v37;
      }
      while (a6 > v37);
    }
  }
  else
  {
    if (a10 != 4)
    {
      v34 = 0;
      if (!a3)
        goto LABEL_55;
LABEL_42:
      v36 = *(_QWORD *)(a3 + 16);
      goto LABEL_43;
    }
    v34 = 0;
  }
  v35 = v199;
  if (v199 | a3)
  {
    v194 = v199 != 0;
    v195 = v34;
    v200 = a8;
LABEL_69:
    if ((*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
      || *(_BYTE *)(a1 + 3209) != 0)
    {
LABEL_190:
      if (!v35)
        goto LABEL_302;
      if ((*(_BYTE *)(v35 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v35);
        v91 = *v90;
        if ((*(_BYTE *)(v35 + 29) & 1) != 0)
        {
          sub_22EFC8E88(v35);
          v93 = *(_QWORD *)v92 + 8 * *(unsigned int *)(v92 + 8);
          goto LABEL_196;
        }
      }
      else
      {
        v91 = 0;
      }
      v93 = 0;
LABEL_196:
      v94 = v91;
      if ((unint64_t)v91 >= v93)
      {
        v95 = (uint64_t *)v93;
        if (v91 == (uint64_t *)v93)
          goto LABEL_302;
        while (*(_WORD *)(*v95 + 32) != 106)
        {
          if (++v95 == v91)
            goto LABEL_302;
        }
        v94 = v91;
      }
      else
      {
        while (*(_WORD *)(*v94 + 32) != 106)
        {
          if (++v94 == (uint64_t *)v93)
            goto LABEL_302;
        }
        v95 = (uint64_t *)v93;
      }
      if (v94 != v95)
      {
        do
        {
          v97 = *v91++;
          v96 = v97;
        }
        while (*(_WORD *)(v97 + 32) != 106);
        v98 = *(_QWORD *)(v96 + 40);
        v209 = v98;
        v99 = (*(_DWORD *)(v96 + 52) & 0x3FFFFFFFu) + ((2 * *(_DWORD *)(v96 + 52)) >> 31) - 1;
        if (a6 <= v99)
        {
          sub_22E8FCA40((_QWORD *)a1, v200, 0x12A3u, 0, (uint64_t)&v208);
          LODWORD(v210) = 0;
          v101 = sub_22E8900C4((uint64_t)&v208, (int *)&v210);
          LODWORD(v207) = *(_DWORD *)(v96 + 52) & 0x3FFFFFFF;
          sub_22E89519C(v101, (unsigned int *)&v207);
LABEL_212:
          sub_22E903BEC((unsigned int *)&v208);
          goto LABEL_237;
        }
        v100 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
            || *(_BYTE *)(a1 + 3209) != 0;
        v193 = *(void **)(v202 + 8 * v99);
        if (!v193)
          goto LABEL_237;
        v191 = *(unsigned __int8 *)(v96 + 56);
        v102 = *(_QWORD *)(a1 + 88);
        v103 = *(unsigned __int8 **)(v202 + 8 * v99);
        v192 = *(_QWORD *)(a1 + 12856);
        while (1)
        {
          v104 = sub_22EFFA6B0(v103);
          v105 = sub_22EFFBBCC(v104);
          v106 = (unsigned __int8 **)v105;
          v107 = *v105;
          if (v107 <= 0x6F)
          {
            if (v107 - 102 >= 2)
              goto LABEL_237;
            v208.__r_.__value_.__s.__data_[0] = 0;
            v40 = v107 == 103;
            v108 = 32;
            if (v40)
              v108 = 24;
            if ((sub_22F005310(*(unsigned __int8 **)&v105[v108], (uint64_t)&v208, v102, v100) & 1) == 0)
              goto LABEL_237;
            v109 = *(unsigned __int8 *)v106;
            if (v208.__r_.__value_.__s.__data_[0])
            {
              if (v109 == 103)
                v110 = v106 + 4;
              else
                v110 = v106 + 5;
            }
            else
            {
              v40 = v109 == 103;
              v110 = v106 + 6;
              if (v40)
                v110 = v106 + 5;
            }
            v103 = *v110;
          }
          else if (*v105 > 0xB4u)
          {
            if (v107 != 233)
            {
              if (v107 == 181)
              {
                sub_22F257F94((uint64_t)(v105 + 16), (llvm::APInt *)&v208);
                v121 = v208.__r_.__value_.__r.__words[1];
                v122 = LODWORD(v208.__r_.__value_.__r.__words[1]) > 0x40
                     ? llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v208)
                     : LODWORD(v208.__r_.__value_.__r.__words[1])
                     + __clz(v208.__r_.__value_.__r.__words[0])
                     - 64;
                v129 = v121 - v122;
                if (v121 - v122 > 0x40)
                {
                  v117 = 0;
                }
                else
                {
                  v130 = (std::string *)v208.__r_.__value_.__r.__words[0];
                  if (v121 < 0x41)
                    v130 = &v208;
                  v117 = v130->__r_.__value_.__r.__words[0];
                }
                if (v121 >= 0x41 && v208.__r_.__value_.__r.__words[0])
                  MEMORY[0x2348A0E84](v208.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
                a3 = v198;
                if (v129 < 0x41)
                {
LABEL_247:
                  if (v192)
                  {
                    v208.__r_.__value_.__r.__words[0] = 0;
                    if (sub_22F311C14(*(_QWORD *)v192, *(_DWORD *)(v192 + 16), v98, v117, &v208))
                    {
                      v118 = v208.__r_.__value_.__r.__words[0];
                      v119 = *(_QWORD *)v192;
                      v120 = *(unsigned int *)(v192 + 16);
                    }
                    else
                    {
                      v119 = *(_QWORD *)v192;
                      v120 = *(unsigned int *)(v192 + 16);
                      v118 = *(_QWORD *)v192 + 32 * v120;
                    }
                    if (v118 != v119 + 32 * v120)
                    {
                      v127 = (unint64_t *)(v118 + 16);
                      v128 = *(_BYTE *)(v118 + 24);
                      goto LABEL_272;
                    }
                  }
                }
              }
LABEL_237:
              a5 = (unint64_t *)v202;
              v35 = v199;
              goto LABEL_196;
            }
            if ((*(_DWORD *)v105 & 0x780000) != 0x100000)
              goto LABEL_237;
            v103 = (unsigned __int8 *)*((_QWORD *)v105 + 2);
          }
          else
          {
            if (v107 != 112)
            {
              if (v107 != 161)
                goto LABEL_237;
              v111 = *((_QWORD *)v105 + 2);
              if (!v111)
              {
                v117 = 0;
                goto LABEL_247;
              }
              if ((*(_BYTE *)(v111 + 29) & 1) == 0)
                goto LABEL_237;
              sub_22EFC8E88(v111);
              v113 = *(uint64_t **)v112;
              v114 = *(unsigned int *)(v112 + 8);
              v115 = *(uint64_t **)v112;
              if ((_DWORD)v114)
              {
                v116 = 8 * v114;
                v115 = *(uint64_t **)v112;
                while (*(_WORD *)(*v115 + 32) != 334)
                {
                  ++v115;
                  v116 -= 8;
                  if (!v116)
                    goto LABEL_237;
                }
              }
              if (v115 == &v113[v114])
                goto LABEL_237;
              do
              {
                v124 = *v113++;
                v123 = v124;
              }
              while (*(_WORD *)(v124 + 32) != 334);
              if (*(_QWORD *)(v123 + 40) != v98)
              {
                sub_22EFF605C((uint64_t)v193);
                sub_22E8FCA40((_QWORD *)a1, v125, 0x1B99u, 0, (uint64_t)&v208);
                sub_22F0D4E74((uint64_t)v193);
                v210 = (_DWORD *)v126;
                sub_22E8906A0((uint64_t)&v208, (uint64_t *)&v210);
                goto LABEL_212;
              }
              v127 = *(unint64_t **)(v123 + 48);
              v128 = *(_BYTE *)(v123 + 56) | (2 * *(_BYTE *)(v123 + 57));
LABEL_272:
              v131 = (*(_DWORD *)(v96 + 48) & 0x3FFFFFFFu) + ((2 * *(_DWORD *)(v96 + 48)) >> 31) - 1;
              if (a6 > v131)
              {
                v132 = *v127;
                v133 = *(unsigned __int8 **)(v202 + 8 * v131);
                if (v191)
                {
                  if (*v133 == 153)
                  {
                    if (sub_22F10DFD8(*(_QWORD *)(*((_QWORD *)v133 + 1) & 0xFFFFFFFFFFFFFFF0))
                      && (*(_DWORD *)v133 & 0x1FC0000) == 0x40000)
                    {
                      v133 = (unsigned __int8 *)*((_QWORD *)v133 + 2);
                    }
                    a6 = v201;
                  }
                  v134 = *((_QWORD *)v133 + 1);
                  v207 = v134;
                  v135 = (uint64_t *)(v134 & 0xFFFFFFFFFFFFFFF0);
                  if ((sub_22F10DFD8(*(_QWORD *)(v134 & 0xFFFFFFFFFFFFFFF0)) & 1) == 0)
                  {
                    if ((v128 & 2) == 0)
                    {
                      v132 = sub_22EF5B848(*(_QWORD *)(a1 + 88), v132, 0);
                      v210 = (_DWORD *)v132;
                      if ((v128 & 1) != 0)
                      {
                        v136 = *(_QWORD *)(a1 + 88);
                        v137 = sub_22F10ACF8(*v135);
                        v138 = sub_22F10ACF8(*(_QWORD *)(v132 & 0xFFFFFFFFFFFFFFF0));
                        v139 = v136;
                        v140 = v137;
                        goto LABEL_294;
                      }
LABEL_288:
                      v142 = (uint64_t *)(v132 & 0xFFFFFFFFFFFFFFF0);
                      if ((v135[1] | v134 & 7) != (*(_QWORD *)((v132 & 0xFFFFFFFFFFFFFFF0) + 8) | v132 & 7))
                      {
                        if (v191)
                        {
                          v143 = sub_22F10ACF8(*v135);
                          v144 = sub_22F10ACF8(*v142);
                          v145 = v143;
                        }
                        else
                        {
                          v145 = v134;
                          v144 = v132;
                        }
                        if (!sub_22E9908E8(v145, v144))
                        {
                          v153 = 0;
LABEL_299:
                          sub_22EFF605C((uint64_t)v133);
                          sub_22E8FCA40((_QWORD *)a1, v154, 0x1B98u, 0, (uint64_t)&v208);
                          v155 = sub_22E8901B8((uint64_t)&v208, &v207);
                          v156 = sub_22E8BAE44(v155, &v209);
                          v204 = v153;
                          v157 = sub_22E89519C(v156, &v204);
                          v158 = sub_22E8901B8(v157, (uint64_t *)&v210);
                          sub_22F0D4E74((uint64_t)v133);
                          v206 = v159;
                          v160 = sub_22E8906A0(v158, &v206);
                          sub_22F0D4E74((uint64_t)v193);
                          v205 = v161;
                          sub_22E8906A0(v160, &v205);
                          sub_22E903BEC((unsigned int *)&v208);
                        }
                      }
                      goto LABEL_300;
                    }
LABEL_291:
                    a6 = v201;
                    if (!sub_22EFFBE1C((unint64_t)v133, *(_QWORD *)(a1 + 88), 2))
                    {
                      sub_22EFF605C((uint64_t)v133);
                      sub_22E8FCA40((_QWORD *)a1, v146, 0x1B97u, 0, (uint64_t)&v208);
                      v147 = *(unsigned int **)(v209 + 16);
                      v148 = *v147;
                      v210 = v147 + 4;
                      v211 = v148;
                      v149 = sub_22F2F2210((uint64_t)&v208, (uint64_t)&v210);
                      sub_22F0D4E74((uint64_t)v133);
                      v206 = v150;
                      v151 = sub_22E8906A0(v149, &v206);
                      sub_22F0D4E74((uint64_t)v193);
                      v205 = v152;
                      sub_22E8906A0(v151, &v205);
LABEL_284:
                      sub_22E903BEC((unsigned int *)&v208);
                    }
                  }
                }
                else
                {
                  v134 = *((_QWORD *)v133 + 1);
                  v207 = v134;
                  if ((v128 & 2) != 0)
                    goto LABEL_291;
                  v210 = (_DWORD *)v132;
                  if ((v128 & 1) == 0)
                  {
                    v135 = (uint64_t *)(v134 & 0xFFFFFFFFFFFFFFF0);
                    goto LABEL_288;
                  }
                  v139 = *(_QWORD *)(a1 + 88);
                  v140 = v134;
                  v138 = v132;
LABEL_294:
                  if (!sub_22E990994(v139, v140, v138))
                  {
                    v153 = 1;
                    goto LABEL_299;
                  }
LABEL_300:
                  a6 = v201;
                }
                a3 = v198;
                goto LABEL_237;
              }
              sub_22E8FCA40((_QWORD *)a1, v200, 0x12A3u, 0, (uint64_t)&v208);
              LODWORD(v210) = 1;
              v141 = sub_22E8900C4((uint64_t)&v208, (int *)&v210);
              LODWORD(v207) = *(_DWORD *)(v96 + 48) & 0x3FFFFFFF;
              sub_22E89519C(v141, (unsigned int *)&v207);
              goto LABEL_284;
            }
            if ((*(_DWORD *)v105 & 0xFC0000) != 0x800000)
              goto LABEL_237;
            v103 = (unsigned __int8 *)*((_QWORD *)v105 + 3);
          }
          if (!v103)
            goto LABEL_237;
        }
      }
LABEL_302:
      v162 = !v194;
      if (a3)
        v162 = 1;
      v34 = v195;
      if ((v162 & 1) == 0)
      {
        v163 = sub_22EFCB008(v35, 1);
        if (!v163 || *(_BYTE *)(v163 + 16) != 26)
          goto LABEL_326;
        a3 = sub_22EFCB008(v35, 1);
      }
      if (a3)
      {
        v164 = a3;
        v165 = (unsigned __int16)(*(_QWORD *)(a3 + 16) >> 38) >= v201
             ? v201
             : (unsigned __int16)(*(_QWORD *)(a3 + 16) >> 38);
        if ((_DWORD)v165)
        {
          v166 = 0;
          v167 = v164 + 40;
          do
          {
            v168 = a5[v166];
            if (v168 && (*(_BYTE *)(v168 + 2) & 2) == 0)
            {
              v169 = *(_QWORD *)(v167 + 8 * v166);
              v170 = *(_QWORD *)(v168 + 8);
              sub_22EFF605C(v168);
              v172 = v171;
              std::to_string(&v208, v166 + 1);
              if ((v208.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                v173 = &v208;
              else
                v173 = (std::string *)v208.__r_.__value_.__r.__words[0];
              if ((v208.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
                size = *((_BYTE *)&v208.__r_.__value_.__s + 23) & 0x7F;
              else
                size = v208.__r_.__value_.__l.__size_;
              sub_22E97E27C((_QWORD *)a1, v172, v35, (uint64_t)v173, size, v170, v169);
              if (SHIBYTE(v208.__r_.__value_.__r.__words[2]) < 0)
                operator delete(v208.__r_.__value_.__l.__data_);
              a5 = (unint64_t *)v202;
            }
            ++v166;
          }
          while (v165 != v166);
        }
      }
LABEL_326:
      if (!v35)
      {
        a6 = v201;
        a4 = v196;
        a8 = v197;
        goto LABEL_328;
      }
      a4 = v196;
      a8 = v197;
      if (!sub_22F310CD8(v35))
      {
        a6 = v201;
        goto LABEL_328;
      }
      sub_22EFC8E88(v35);
      v176 = *v175;
      v177 = *((unsigned int *)v175 + 2);
      if ((_DWORD)v177 && *(_WORD *)(*v176 + 32) != 99)
      {
        v178 = 8 * v177 - 8;
        v179 = *v175;
        do
        {
          v180 = v179[1];
          ++v179;
          v178 -= 8;
        }
        while (*(_WORD *)(v180 + 32) != 99);
      }
      a6 = v201;
      do
      {
        v182 = *v176++;
        v181 = v182;
      }
      while (*(_WORD *)(v182 + 32) != 99);
      v183 = a5[(*(_DWORD *)(v181 + 36) & 0x3FFFFFFFu) - 1 + ((2 * *(_DWORD *)(v181 + 36)) >> 31)];
      if ((*(_BYTE *)(v183 + 2) & 1) != 0)
        goto LABEL_328;
      LOWORD(v210) = 0;
      v211 = 0;
      LODWORD(v212) = 0;
      if (!sub_22F00554C(v183, (uint64_t)&v210, *(_QWORD *)(a1 + 88), 0, 0))
      {
LABEL_349:
        if (v212 >= 2)
          sub_22EF53BC0(&v212);
        goto LABEL_328;
      }
      if (v214 > 0x40)
      {
        if (llvm::APInt::countPopulationSlowCase((llvm::APInt *)&v213) == 1)
          goto LABEL_347;
      }
      else
      {
        v184 = (uint8x8_t)vcnt_s8(v213);
        v184.i16[0] = vaddlv_u8(v184);
        if (v184.u32[0] == 1)
        {
LABEL_347:
          a5 = (unint64_t *)v202;
          if (sub_22E42E8B8((uint64_t)&v213, 0x100000000))
          {
            sub_22EFF605C(v183);
            sub_22E8FCA40((_QWORD *)a1, v187, 0x184Fu, 0, (uint64_t)&v208);
            sub_22F0D4E74(v183);
            v209 = v188;
            v189 = sub_22E8906A0((uint64_t)&v208, &v209);
            sub_22E97FA2C(v189, &qword_22F463C60);
            sub_22E903BEC((unsigned int *)&v208);
          }
          goto LABEL_349;
        }
      }
      sub_22EFF605C(v183);
      sub_22E8FCA40((_QWORD *)a1, v185, 0x1831u, 0, (uint64_t)&v208);
      sub_22F0D4E74(v183);
      v209 = v186;
      sub_22E8906A0((uint64_t)&v208, &v209);
      sub_22E903BEC((unsigned int *)&v208);
      goto LABEL_347;
    }
    v208.__r_.__value_.__r.__words[0] = 1;
    if (v35)
    {
      v44 = (uint64_t *)sub_22E47E5E0(v35);
      v46 = v45;
      v47 = 8 * a6;
      while (1)
      {
        v48 = v44;
        a3 = v198;
        if (v44 >= v46)
        {
          if (v44 == v46)
            break;
          v49 = v46;
          while (*(_WORD *)(*v49 + 32) != 81)
          {
            if (++v49 == v44)
              goto LABEL_109;
          }
          v48 = v44;
        }
        else
        {
          while (*(_WORD *)(*v48 + 32) != 81)
          {
            if (++v48 == v46)
              goto LABEL_109;
          }
          v49 = v46;
        }
        if (v48 == v49)
          break;
        do
        {
          v51 = *v44++;
          v50 = v51;
        }
        while (*(_WORD *)(v51 + 32) != 81);
        v52 = *(unsigned int *)(v50 + 36);
        if ((_DWORD)v52)
        {
          v53 = *(_DWORD **)(v50 + 40);
          v54 = 4 * v52;
          while (1)
          {
            v55 = (*v53 & 0x3FFFFFFFu) + ((2 * *v53) >> 31) - 1;
            if (v201 > v55)
              break;
LABEL_100:
            ++v53;
            v54 -= 4;
            if (!v54)
              goto LABEL_107;
          }
          v56 = v208.__r_.__value_.__r.__words[0];
          if ((v208.__r_.__value_.__s.__data_[0] & 1) != 0)
          {
            if (!(v208.__r_.__value_.__r.__words[0] >> 58))
              goto LABEL_96;
          }
          else if (!*(_DWORD *)(v208.__r_.__value_.__r.__words[0] + 64))
          {
LABEL_96:
            sub_22E97F810((unint64_t *)&v208, v201, 0);
            v56 = v208.__r_.__value_.__r.__words[0];
          }
          if ((v56 & 1) != 0)
            v208.__r_.__value_.__r.__words[0] = v56 & 0xFC00000000000000 | (2
                                                                            * (((v56 >> 1) & ~(-1 << (v56 >> 58)) | (1 << v55)) & ~(-1 << (v56 >> 58)))) | 1;
          else
            *(_QWORD *)(*(_QWORD *)v56 + 8 * (v55 >> 6)) |= 1 << v55;
          goto LABEL_100;
        }
        if (a6)
        {
          v57 = v47;
          v58 = (unsigned __int8 **)v202;
          do
          {
            v59 = *v58;
            if (sub_22EA47450(a1, *((_QWORD *)*v58 + 1), 0))
              sub_22E979D8C(a1, v59, v200);
            ++v58;
            v57 -= 8;
          }
          while (v57);
LABEL_107:
          a6 = v201;
          if ((_DWORD)v52)
            continue;
        }
        goto LABEL_189;
      }
LABEL_109:
      v35 = v199;
      if ((*(_DWORD *)(v199 + 28) & 0x7F) == 0x18 || (*(_DWORD *)(v199 + 28) & 0x7Eu) - 52 <= 5)
      {
        if ((*(_DWORD *)(v199 + 28) & 0x7Eu) - 58 < 0xFFFFFFFA)
        {
          v61 = *(uint64_t **)(v199 + 96);
          v62 = *(_DWORD *)(v199 + 104);
          goto LABEL_161;
        }
        v61 = *(uint64_t **)(v199 + 120);
        v78 = *(_QWORD *)(*(_QWORD *)(v199 + 48) & 0xFFFFFFFFFFFFFFF0);
        if (v78)
          v79 = *(_BYTE *)(v78 + 16) == 26;
        else
          v79 = 0;
        if (v79
          || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v78 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
          && (v78 = sub_22F10CF48(v78)) != 0)
        {
          v62 = (unsigned __int16)(*(_QWORD *)(v78 + 16) >> 38);
LABEL_161:
          if (v62)
          {
            v80 = 0;
            v81 = &v61[v62];
            do
            {
              v82 = *v61;
              if (!sub_22E99E574(*v61))
              {
                for (i = *(_QWORD *)(*(_QWORD *)(v82 + 48) & 0xFFFFFFFFFFFFFFF0); ; i = *(_QWORD *)(v85 + 40))
                {
                  v85 = sub_22F10D774(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0));
                  if (!v85)
                    break;
                  v86 = *(_DWORD *)(v85 + 16) >> 19;
                  if ((v86 - 34) < 3)
                    break;
                  if (v86 == 33)
                    goto LABEL_164;
                }
                goto LABEL_177;
              }
LABEL_164:
              v83 = v208.__r_.__value_.__r.__words[0];
              if ((v208.__r_.__value_.__s.__data_[0] & 1) != 0)
              {
                if (v208.__r_.__value_.__r.__words[0] >> 58)
                  goto LABEL_174;
              }
              else if (*(_DWORD *)(v208.__r_.__value_.__r.__words[0] + 64))
              {
                goto LABEL_174;
              }
              sub_22E97F810((unint64_t *)&v208, a6, 0);
              v83 = v208.__r_.__value_.__r.__words[0];
LABEL_174:
              if ((v83 & 1) != 0)
                v208.__r_.__value_.__r.__words[0] = v83 & 0xFC00000000000000 | (2
                                                                                * (((v83 >> 1) & ~(-1 << (v83 >> 58)) | (1 << v80)) & ~(-1 << (v83 >> 58)))) | 1;
              else
                *(_QWORD *)(*(_QWORD *)v83 + 8 * (v80 >> 6)) |= 1 << v80;
LABEL_177:
              ++v61;
              ++v80;
            }
            while (v61 != v81);
          }
        }
LABEL_178:
        if ((v208.__r_.__value_.__s.__data_[0] & 1) != 0)
        {
          v87 = v208.__r_.__value_.__r.__words[0] >> 58;
          if (!(v208.__r_.__value_.__r.__words[0] >> 58))
          {
LABEL_189:
            sub_22E54C5D0((void ***)&v208);
            a5 = (unint64_t *)v202;
            a3 = v198;
            v35 = v199;
            goto LABEL_190;
          }
        }
        else
        {
          LODWORD(v87) = *(_DWORD *)(v208.__r_.__value_.__r.__words[0] + 64);
          if (!(_DWORD)v87)
            goto LABEL_189;
        }
        v88 = 0;
        v89 = v87;
        while ((v208.__r_.__value_.__s.__data_[0] & 1) != 0)
        {
          if (((1 << v88) & (v208.__r_.__value_.__r.__words[0] >> 1) & ~(-1 << (v208.__r_.__value_.__r.__words[0] >> 58))) != 0)
            goto LABEL_187;
LABEL_188:
          if (v89 == ++v88)
            goto LABEL_189;
        }
        if ((*(_QWORD *)(*(_QWORD *)v208.__r_.__value_.__l.__data_ + 8 * (v88 >> 6)) & (1 << v88)) == 0)
          goto LABEL_188;
LABEL_187:
        sub_22E979D8C(a1, *(unsigned __int8 **)(v202 + 8 * v88), v200);
        goto LABEL_188;
      }
    }
    v63 = a3;
    if (a3)
    {
LABEL_116:
      v64 = *(_QWORD *)(v63 + 16);
      if (!(unsigned __int16)(v64 >> 38))
        goto LABEL_178;
      v65 = 0;
      v66 = (_QWORD *)(v63 + 40);
      v67 = v63 + 40 + 8 * (unsigned __int16)(v64 >> 38);
      while (1)
      {
        v68 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(*v66 & 0xFFFFFFFFFFFFFFF0) & 0xFFFFFFFFFFFFFFF0));
        if (v68)
          break;
LABEL_119:
        ++v65;
        if (++v66 == (_QWORD *)v67)
          goto LABEL_178;
      }
      while (1)
      {
        v69 = *(_DWORD *)(v68 + 16) >> 19;
        if ((v69 - 34) < 3)
          goto LABEL_119;
        if (v69 == 33)
          break;
        v68 = sub_22F10D774(*(_QWORD *)(*(_QWORD *)(v68 + 40) & 0xFFFFFFFFFFFFFFF0));
        a6 = v201;
        if (!v68)
          goto LABEL_119;
      }
      v70 = v208.__r_.__value_.__r.__words[0];
      if ((v208.__r_.__value_.__s.__data_[0] & 1) != 0)
      {
        if (!(v208.__r_.__value_.__r.__words[0] >> 58))
        {
LABEL_129:
          sub_22E97F810((unint64_t *)&v208, v201, 0);
          v70 = v208.__r_.__value_.__r.__words[0];
        }
      }
      else if (!*(_DWORD *)(v208.__r_.__value_.__r.__words[0] + 64))
      {
        goto LABEL_129;
      }
      if ((v70 & 1) != 0)
        v208.__r_.__value_.__r.__words[0] = v70 & 0xFC00000000000000 | (2
                                                                        * (((v70 >> 1) & ~(-1 << (v70 >> 58)) | (1 << v65)) & ~(-1 << (v70 >> 58)))) | 1;
      else
        *(_QWORD *)(*(_QWORD *)v70 + 8 * (v65 >> 6)) |= 1 << v65;
      a6 = v201;
      goto LABEL_119;
    }
    if (!v35 || (*(_DWORD *)(v35 + 28) & 0x7Fu) - 75 < 0xFFFFFFE5)
      goto LABEL_178;
    v71 = *(_QWORD *)(v35 + 48);
    v72 = v71 & 0xFFFFFFFFFFFFFFF0;
    v73 = *(_QWORD *)(v71 & 0xFFFFFFFFFFFFFFF0);
    if (!v73 || (v74 = *(_DWORD *)(v73 + 16), (v74 & 0xFE) != 0x28))
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v73 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_139;
      v73 = sub_22F10CF48(v73);
      if (!v73)
      {
        a6 = v201;
        goto LABEL_139;
      }
      v74 = *(_DWORD *)(v73 + 16);
      a6 = v201;
    }
    if ((v74 & 0x100000) != 0)
    {
      a6 = v201;
      do
      {
        v73 = *(_QWORD *)(*(_QWORD *)(v73 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v73)
        {
          v190 = *(_DWORD *)(v73 + 16);
          if ((v190 & 0xFE) == 0x28)
            continue;
        }
        v73 = sub_22F10CF48(v73);
        v190 = *(_DWORD *)(v73 + 16);
      }
      while ((v190 & 0x100000) != 0);
    }
    v71 = *(_QWORD *)(v73 + 32);
    v72 = v71 & 0xFFFFFFFFFFFFFFF0;
LABEL_139:
    v75 = *(_QWORD *)v72;
    v76 = *(unsigned __int8 *)(*(_QWORD *)v72 + 16);
    if (!*(_QWORD *)v72 || v76 != 39)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v75 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
      {
LABEL_144:
        if (v76 != 10)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v75 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 10)
            goto LABEL_148;
          v75 = sub_22F10CF48(v75);
          if (!v75)
            goto LABEL_148;
        }
        goto LABEL_147;
      }
      v75 = sub_22F10CF48(v75);
      if (!v75)
      {
        v75 = *(_QWORD *)v72;
        v76 = *(unsigned __int8 *)(*(_QWORD *)v72 + 16);
        goto LABEL_144;
      }
    }
LABEL_147:
    v71 = *(_QWORD *)(v75 + 32);
LABEL_148:
    v63 = *(_QWORD *)(v71 & 0xFFFFFFFFFFFFFFF0);
    if (v63)
      v77 = *(_BYTE *)(v63 + 16) == 26;
    else
      v77 = 0;
    if (!v77)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v63 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
        goto LABEL_178;
      v63 = sub_22F10CF48(v63);
      if (!v63)
        goto LABEL_178;
    }
    goto LABEL_116;
  }
LABEL_328:
  if (v34)
    sub_22ED06E6C((_QWORD *)a1, v34, a4, a5, a6, a8);
  return (uint64_t)sub_22E54C5D0((void ***)&v203);
}

unint64_t *sub_22E97F810(unint64_t *result, uint64_t a2, uint64_t a3)
{
  int v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a2;
  v5 = *result;
  if ((*result & 1) != 0)
  {
    v6 = result;
    if (a2 > 0x39)
    {
      v18 = operator new();
      result = (unint64_t *)sub_22E99E4F0(v18, v4, a3);
      v19 = *v6 >> 58;
      if (v19)
      {
        v20 = 0;
        v21 = (*v6 >> 1) & ~(-1 << v19);
        v22 = *result;
        do
        {
          v23 = 1 << v20;
          v24 = v20 >> 6;
          if ((v21 & (1 << v20)) != 0)
            v25 = *(_QWORD *)(v22 + 8 * v24) | v23;
          else
            v25 = *(_QWORD *)(v22 + 8 * v24) & ~v23;
          *(_QWORD *)(v22 + 8 * v24) = v25;
          ++v20;
        }
        while (v19 != v20);
      }
      *v6 = result;
    }
    else
    {
      if ((_DWORD)a3)
        v7 = -1 << (v5 >> 58);
      else
        v7 = 0;
      v8 = v5 & (2 * ~(-1 << (v5 >> 58))) | (a2 << 58);
      *result = v8 & 0xFC00000000000000 | (2 * (((v8 >> 1) & ~(-1 << (v8 >> 58)) | v7) & ~(-1 << (v8 >> 58)))) | 1;
    }
  }
  else
  {
    if ((*(_DWORD *)(v5 + 64) & 0x3F) != 0)
    {
      v26 = -1 << (*(_DWORD *)(v5 + 64) & 0x3F);
      v9 = *(unsigned int *)(v5 + 8);
      v27 = *(_QWORD *)v5 + 8 * v9;
      if ((_DWORD)a3)
        v28 = *(_QWORD *)(v27 - 8) | v26;
      else
        v28 = *(_QWORD *)(v27 - 8) & ~v26;
      *(_QWORD *)(v27 - 8) = v28;
    }
    else
    {
      v9 = *(unsigned int *)(v5 + 8);
    }
    v10 = v9;
    *(_DWORD *)(v5 + 64) = a2;
    v11 = a2 + 63;
    if ((_DWORD)v9 != (a2 + 63) >> 6)
    {
      v12 = v11 >> 6;
      if (v9 > v12)
      {
        *(_DWORD *)(v5 + 8) = v12;
        v10 = v11 >> 6;
      }
      else
      {
        v13 = v12 - v9;
        v14 = v9;
        if (v12 > *(_DWORD *)(v5 + 12))
        {
          result = (unint64_t *)llvm::SmallVectorBase<unsigned int>::grow_pod();
          v14 = *(unsigned int *)(v5 + 8);
          v10 = *(_DWORD *)(v5 + 8);
        }
        if (v13)
        {
          v15 = (uint64_t *)(*(_QWORD *)v5 + 8 * v14);
          v16 = v9 - v12;
          do
            *v15++ = a3 << 63 >> 63;
          while (!__CFADD__(v16++, 1));
        }
        v10 += v13;
        *(_DWORD *)(v5 + 8) = v10;
        v4 = *(_DWORD *)(v5 + 64);
      }
    }
    if ((v4 & 0x3F) != 0)
      *(_QWORD *)(*(_QWORD *)v5 + 8 * v10 - 8) &= ~(-1 << (v4 & 0x3F));
  }
  return result;
}

uint64_t sub_22E97FA2C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (*(_BYTE *)(a1 + 80))
  {
    sub_22E9B3E3C((unsigned __int8 **)(a1 + 32), a2);
  }
  else if (*(_BYTE *)(a1 + 92))
  {
    v5 = (uint64_t *)(*(_QWORD *)a1 + 12784);
    v6 = *(_QWORD *)(a1 + 16);
    if (v6)
      v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
    v8 = v6;
    v7 = sub_22F2F1D6C(v5, &v8);
    sub_22E9B3E3C((unsigned __int8 **)(v7[1] + 32 * *(unsigned int *)(a1 + 88) + 8), a2);
  }
  return a1;
}

uint64_t sub_22E97FACC(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t a5, uint64_t a6, int a7)
{
  int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  if ((*(_QWORD *)(a6 + 16) & 0x800000000000000) != 0)
    v13 = 3;
  else
    v13 = 4;
  v14 = sub_22EF5B848(a1[11], a3, 0);
  v15 = a1[11];
  v16 = sub_22EFD7784(a2);
  v17 = sub_22EF5B848(v15, v16, 0);
  sub_22E97E27C(a1, a7, a2, (uint64_t)"'this'", 6, v14, v17);
  return sub_22E97E434((uint64_t)a1, a2, a6, 0, a4, a5, 1, a7, 0, v13);
}

uint64_t sub_22E97FBB8(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4)
{
  int v7;
  _BOOL4 v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned int v32;
  _BOOL4 v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  const char *v39;
  _QWORD *v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  _QWORD *v44;
  const char **v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  void *v50;
  unsigned int v51;
  BOOL v52;
  int v53;
  uint64_t v54;
  int v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  unsigned __int8 *v61;
  unsigned __int8 *v62;
  uint64_t v63;
  unsigned __int8 *v64;
  uint64_t v65;
  unsigned __int8 *v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  void *v70;
  unint64_t v71;
  void *v72;
  int v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  int v79;
  int v80;
  void *v81;
  uint64_t v82;
  int v83;
  int v84;
  _QWORD *v85;
  unsigned __int8 **v86;
  unsigned __int8 *v87;
  unsigned __int8 *v88;
  unsigned __int8 *v89;
  int v90;
  int v91;
  unsigned __int8 *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unsigned __int8 *v96;
  unsigned __int8 *v97;
  int v98;
  int v99;
  unsigned __int8 *v100;
  unint64_t v101;
  uint64_t v102;
  unsigned __int8 *v103;
  unsigned __int8 *v104;
  unsigned int v105;
  int v106;
  uint64_t v107;
  int v108;
  BOOL v109;
  int v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 *v114;
  int v115;
  uint64_t v116;
  unsigned __int8 *v117;
  unint64_t v118;
  unsigned __int8 *v119;
  int v120;
  int v121;
  unsigned int *v122;
  int v123;
  int v124;
  unsigned __int8 *v125;
  int v126;
  uint64_t v127;
  unsigned int v128;
  unsigned __int8 *v129;
  unsigned __int8 *v130;
  int *v131;
  int v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  int v137;
  void *v138;
  uint64_t v139;
  unsigned __int8 *v140;
  _DWORD *v141;
  uint64_t v142;
  int v143;
  size_t v144;
  const void *v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  _DWORD *v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t *v156;
  uint64_t *v157;
  uint64_t *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  unsigned __int8 *v162;
  unsigned __int8 *v163;
  unsigned __int8 *v164;
  uint64_t v165;
  unsigned __int8 *v166;
  unsigned __int8 *v167;
  int v168;
  unsigned __int8 *v169;
  unsigned __int8 *v170;
  unsigned int v171;
  uint64_t v172;
  unsigned __int8 **v173;
  uint64_t v174;
  uint64_t v175;
  unsigned __int8 *v176;
  unsigned __int8 *v177;
  unsigned int v178;
  unint64_t v179;
  uint64_t v180;
  int v181;
  unint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  BOOL v185;
  uint64_t v186;
  unsigned int v187;
  int v188;
  uint64_t v189;
  void *v190;
  int v191;
  char v192;
  int v193;
  unsigned int *v194;
  uint64_t v195;
  _QWORD *v196;
  int v197;
  int v198;
  unint64_t v199;
  unint64_t v200;
  unint64_t v201;
  _QWORD *v202;
  const char *v203;
  size_t v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  uint64_t v210;
  unsigned __int8 *v211;
  unsigned __int8 *v212;
  uint64_t v213;
  unsigned __int8 *v214;
  uint64_t v215;
  unsigned __int8 *v216;
  uint64_t v217;
  unsigned __int8 *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  int v224;
  _BYTE *v225;
  _BYTE *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unsigned __int8 *v233;
  unint64_t v234;
  uint64_t v235;
  _BOOL4 v237;
  uint64_t v238;
  unsigned int v239;
  uint64_t v240;
  int v241;
  _BYTE *v243;
  int v244;
  int v245;
  _BYTE *v246;
  _BYTE *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  int v252;
  uint64_t v253;
  int v254;
  int v255;
  _BYTE *v256;
  _BYTE *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  unsigned __int8 *v266;
  unsigned int v267;
  uint64_t v268;
  unsigned __int8 **v269;
  unsigned __int8 *v270;
  int v271;
  int v272;
  uint64_t *v273;
  uint64_t v274;
  unsigned int v275;
  BOOL v276;
  uint64_t v277;
  int v278;
  _QWORD *v279;
  unint64_t v280;
  unsigned int v281;
  int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  unsigned __int8 *v286;
  int v287;
  int v288;
  void *v289;
  unint64_t v290;
  _QWORD *v291;
  int v292;
  unsigned int v293;
  unint64_t v294;
  unsigned int v295;
  uint64_t v296;
  unsigned __int8 *v297;
  unsigned int v298;
  uint64_t v299;
  unsigned int v300;
  unsigned int v301;
  _DWORD *v302;
  int v303;
  int v304;
  uint64_t v305;
  _BYTE *v306;
  _BYTE *v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  int v318;
  uint64_t v319;
  void *v320;
  unsigned int v322;
  int v323;
  uint64_t v324;
  uint64_t v325;
  int v326;
  int v327;
  uint64_t v328;
  int v329;
  int v330;
  _BYTE *v331;
  _BYTE *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  int v337;
  int v338;
  uint64_t v339;
  _BYTE *v340;
  int v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  _BOOL4 v349;
  _BOOL4 v350;
  unsigned int v351;
  _DWORD *v352;
  _DWORD *v353;
  uint64_t v354;
  _DWORD *v355;
  uint64_t v356;
  _DWORD *v357;
  __int128 *p_dst;
  uint64_t v359;
  uint64_t v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  _DWORD *v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  unsigned int v368;
  _DWORD *v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  _DWORD *v373;
  unsigned int v374;
  int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  _DWORD *v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  _DWORD *v385;
  unsigned int v386;
  unsigned int v387;
  _DWORD *v388;
  unsigned int v389;
  int v390;
  int v391;
  const char *v392;
  uint64_t v393;
  BOOL v394;
  unsigned __int8 *v395;
  int v396;
  uint64_t v397;
  uint64_t *v398;
  uint64_t v399;
  unsigned int v400;
  uint64_t v401;
  int v402;
  uint64_t v403;
  int v404;
  unsigned int v405;
  char v406;
  size_t v407;
  char *v408;
  unint64_t v409;
  uint64_t v410;
  unint64_t v411;
  unint64_t v412;
  unint64_t v413;
  unsigned __int8 *v414;
  unint64_t v415;
  unint64_t v416;
  unsigned int v417;
  unsigned int v418;
  uint64_t *v419;
  uint64_t v420;
  void *v422;
  char v423;
  uint64_t v424;
  char v425;
  char v426;
  __int128 v427;
  unint64_t v428;
  char v429;
  void *v430;
  __int128 __dst;
  unint64_t v432;
  unsigned __int8 *v433;
  _BYTE v434[12];
  char v435;
  void *v436;
  _DWORD *v437;
  uint64_t v438;
  char v439;
  uint64_t v440;
  _BYTE v441[24];
  _BYTE v442[128];
  void *v443;
  _BYTE v444[24];
  _QWORD v445[4];
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  uint64_t v451;

  v451 = *MEMORY[0x24BDAC8D0];
  v7 = *a3;
  v8 = v7 == 141 && (*(_DWORD *)(a2 + 28) & 0x7Eu) - 54 < 4;
  v9 = v7 == 140 || v8;
  v10 = sub_22EB318F0(a1, a2, a4, *(_QWORD *)&a3[a3[3]]);
  v11 = *(unsigned int *)a3;
  v12 = v11 >> 24;
  v13 = (uint64_t *)&a3[8 * ((v11 >> 18) & 1) + 8 + (v11 >> 24)];
  v14 = *((_DWORD *)a3 + 4);
  if (!v8)
  {
    v419 = v13;
    if ((_DWORD)v9)
    {
      v15 = sub_22F060ED0((uint64_t)a3);
      if (v15)
        goto LABEL_12;
    }
    else
    {
      v15 = 0;
    }
LABEL_15:
    v17 = a1;
    goto LABEL_18;
  }
  v15 = *v13;
  v419 = v13 + 1;
  --v14;
  if (!*v13)
    goto LABEL_15;
LABEL_12:
  v16 = *(_QWORD *)(v15 + 8);
  v17 = a1;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
    v16 = sub_22EF5B848(*(_QWORD *)(a1 + 88), *(_QWORD *)(v15 + 8), 0);
  v18 = *(_QWORD *)(a1 + 88);
  v19 = sub_22EFD7784(a2);
  v20 = sub_22EF5B848(v18, v19, 0);
  sub_22E97E27C((_QWORD *)a1, *((_DWORD *)a3 + 5), a2, (uint64_t)"'this'", 6, v16, v20);
  v12 = a3[3];
LABEL_18:
  v21 = *((unsigned int *)a3 + 5);
  v22 = *(_QWORD *)&a3[v12];
  v417 = v14;
  v23 = v14;
  sub_22F0D4E74(v22);
  v24 = v419;
  sub_22E97E434(v17, a2, a4, v15, v419, v23, v9, v21, v25, v10);
  v26 = *(_QWORD *)(a2 + 40);
  if ((v26 & 7) != 0)
    return 0;
  v27 = v26 & 0xFFFFFFFFFFFFFFF8;
  if ((v26 & 0xFFFFFFFFFFFFFFF8) == 0)
    return 0;
  if (!sub_22EFC01DC(a2, 0))
  {
    sub_22EFF605C((uint64_t)a3);
    sub_22E982D28((_QWORD *)v17, v28, a2);
  }
  v433 = (unsigned __int8 *)a2;
  if (*((_DWORD *)a3 + 4) != 1)
    goto LABEL_57;
  v29 = 0;
  v30 = *(_QWORD *)(a2 + 40);
  if (v30 >= 8 && (v30 & 7) == 0)
  {
    v31 = sub_22EFC01DC(a2, 0);
    v29 = 0;
    if (v31 > 934)
    {
      if ((v31 - 935) <= 8 && ((1 << (v31 + 89)) & 0x1C7) != 0)
        goto LABEL_33;
      v32 = v31 - 1112;
    }
    else
    {
      if (v31 <= 0x28 && ((1 << v31) & 0x18000003820) != 0)
        goto LABEL_33;
      v32 = v31 - 280;
    }
    if (v32 < 3)
LABEL_33:
      v29 = sub_22EFC01DC(a2, 0);
  }
  v33 = sub_22E986ADC(a2, (unsigned __int16 *)"abs");
  v34 = v33;
  if ((_DWORD)v29 || v33)
  {
    v415 = v27;
    v35 = *(_QWORD *)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                       + 8
                       + ((unint64_t)*(unsigned int *)a3 >> 24)];
    v36 = *((_QWORD *)sub_22EFFA6B0((unsigned __int8 *)v35) + 1);
    v422 = (void *)v36;
    v37 = *(_QWORD *)(v35 + 8);
    *(_QWORD *)&__dst = v37;
    v38 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFF0);
    if (sub_22F110B50(*(_QWORD *)(v36 & 0xFFFFFFFFFFFFFFF0)))
    {
      if (v34)
      {
        v39 = "std::abs";
        v40 = (_QWORD *)a1;
      }
      else
      {
        if (v29 > 0x7E7)
        {
          v398 = *(uint64_t **)(*(_QWORD *)(a1 + 88) + 15208);
          v399 = v398[1];
          if (v399 + 2024 <= (unint64_t)v29)
          {
            v400 = v29 - v399 - 2024;
            v401 = v398[2];
          }
          else
          {
            v400 = v29 - 2024;
            v401 = *v398;
          }
          v45 = (const char **)(v401 + 48 * v400);
          v24 = v419;
          v40 = (_QWORD *)a1;
        }
        else
        {
          v45 = (const char **)&(&off_24FAC8C40)[6 * v29];
          v40 = (_QWORD *)a1;
        }
        v39 = *v45;
      }
      v430 = (void *)v39;
      sub_22EFF605C((uint64_t)a3);
      sub_22E8FCA40(v40, v46, 0x1BC7u, 0, (uint64_t)v441);
      v47 = sub_22E8901B8((uint64_t)v441, (uint64_t *)&v422);
      sub_22E8901B8(v47, (uint64_t *)&__dst);
      sub_22E903BEC((unsigned int *)v441);
      sub_22EFF605C((uint64_t)a3);
      sub_22E8FCA40(v40, v48, 0x17B4u, 0, (uint64_t)v441);
      v49 = sub_22E96133C((uint64_t)v441, (uint64_t *)&v430);
      sub_22F0D4E74(*(_QWORD *)&a3[a3[3]]);
      *(_QWORD *)&v444[4] = 0;
      v444[12] = 0;
      memset(v445, 0, 17);
      *(_QWORD *)&v444[16] = 0;
      v443 = v50;
      v444[0] = 1;
      sub_22E890748(v49, &v443);
      if (SHIBYTE(v445[1]) < 0)
        operator delete(*(void **)&v444[16]);
      goto LABEL_55;
    }
    v41 = *(_QWORD *)(*(_QWORD *)(*v38 + 8) & 0xFFFFFFFFFFFFFFF0);
    v42 = *(_DWORD *)(v41 + 16);
    v43 = (v42 & 0xFE) - 2;
    if (v42 == 39)
    {
      LODWORD(v443) = 0;
      goto LABEL_41;
    }
    v51 = v42 - 25;
    v52 = v51 >= 2 && v43 > 3;
    if (!v52)
    {
      LODWORD(v443) = 0;
      if (v51 <= 1)
      {
        LODWORD(v443) = 1;
        v44 = (_QWORD *)a1;
LABEL_54:
        sub_22EFF605C((uint64_t)a3);
        sub_22E8FCA40(v44, v53, 0x1AE1u, 0, (uint64_t)v441);
        v54 = sub_22E89519C((uint64_t)v441, (unsigned int *)&v443);
        sub_22E8901B8(v54, (uint64_t *)&v422);
LABEL_55:
        sub_22E903BEC((unsigned int *)v441);
        goto LABEL_56;
      }
LABEL_41:
      v44 = (_QWORD *)a1;
      if (v43 <= 3)
        LODWORD(v443) = 2;
      goto LABEL_54;
    }
    if (v34)
      goto LABEL_56;
    if (v42 != 9)
    {
      if (v42 == 44)
      {
        v78 = sub_22F114198(*(_QWORD *)(v41 + 24));
        if ((*(_BYTE *)(v78 + 74) & 1) == 0 && *(_QWORD *)(v78 + 128) <= 7uLL)
        {
          v42 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v38 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
          goto LABEL_407;
        }
      }
      else if (v42 != 11 || ((v42 >> 19) & 0x1FE) - 166 >= 0x14)
      {
LABEL_407:
        v271 = v42;
        if (((v42 >> 19) & 0x1FE) - 210 < 8)
          v272 = 1;
        else
          v272 = 2;
        if (v271 == 11)
          v79 = v272;
        else
          v79 = 2;
LABEL_413:
        LODWORD(v443) = v79;
        v273 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFF0);
        v274 = *(_QWORD *)(*(_QWORD *)(*v273 + 8) & 0xFFFFFFFFFFFFFFF0);
        v275 = *(_DWORD *)(v274 + 16);
        if (v274)
          v276 = v275 == 11;
        else
          v276 = 0;
        if (v276)
        {
          if (((v275 >> 19) & 0x1FE) - 166 < 0x14)
            goto LABEL_423;
        }
        else
        {
          if (v274 && v275 == 44)
          {
            v277 = sub_22F114198(*(_QWORD *)(v274 + 24));
            if ((*(_BYTE *)(v277 + 74) & 1) == 0 && *(_QWORD *)(v277 + 128) <= 7uLL)
            {
              v275 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v273 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
              goto LABEL_425;
            }
LABEL_423:
            v278 = 0;
LABEL_430:
            LODWORD(v430) = v278;
            if (v79 == v278)
            {
              v279 = (_QWORD *)a1;
              v280 = sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *v38);
              if (v280 <= sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *v273))
                goto LABEL_56;
              v281 = sub_22E986B4C(*(_QWORD *)(a1 + 88), v36, v29);
              sub_22EFF605C((uint64_t)a3);
              sub_22E8FCA40((_QWORD *)a1, v282, 0x1824u, 0, (uint64_t)v441);
              v283 = sub_22E890024((uint64_t)v441, (uint64_t *)&v433);
              v284 = sub_22E8901B8(v283, (uint64_t *)&v422);
              sub_22E8901B8(v284, (uint64_t *)&__dst);
              sub_22E903BEC((unsigned int *)v441);
              if (!v281)
                goto LABEL_56;
            }
            else
            {
              if (v79 == 2)
              {
                if (v29 <= 0x28 && ((1 << v29) & 0x18000003820) != 0)
                {
                  v285 = 281;
                }
                else
                {
                  v285 = 0;
                  if ((v29 - 935) <= 8 && ((1 << (v29 + 89)) & 0x1C7) != 0)
                    v285 = 1113;
                }
              }
              else if (v79 == 1)
              {
                v285 = 0;
                if ((int)v29 > 934)
                {
                  if ((v29 - 935) < 3 || (v29 - 1112) < 3)
                    v285 = 942;
                }
                else if (v29 <= 0x28 && ((1 << v29) & 0x18000000020) != 0
                       || (v29 - 280) < 3)
                {
                  v285 = 12;
                }
              }
              else
              {
                v285 = 0;
                if ((int)v29 > 940)
                {
                  if ((v29 - 941) < 3 || (v29 - 1112) < 3)
                    v285 = 935;
                }
                else if ((v29 - 11) < 3 || (v29 - 280) < 3)
                {
                  v285 = 5;
                }
              }
              v279 = (_QWORD *)a1;
              v322 = sub_22E986B4C(*(_QWORD *)(a1 + 88), v36, v285);
              if (!v322)
                goto LABEL_56;
              v281 = v322;
              sub_22EFF605C((uint64_t)a3);
              sub_22E8FCA40((_QWORD *)a1, v323, 0x1C04u, 0, (uint64_t)v441);
              v324 = sub_22E890024((uint64_t)v441, (uint64_t *)&v433);
              v325 = sub_22E8900C4(v324, (int *)&v430);
              sub_22E8900C4(v325, (int *)&v443);
              sub_22E903BEC((unsigned int *)v441);
            }
            sub_22EFF605C((uint64_t)a3);
            v327 = v326;
            sub_22F0D4E74(*(_QWORD *)&a3[a3[3]]);
            sub_22E986D88(v279, v327, v328, v281, (uint64_t)v422);
LABEL_56:
            v17 = a1;
            v27 = v415;
            goto LABEL_57;
          }
          if (v275 == 9)
            goto LABEL_423;
        }
LABEL_425:
        if (v275 == 11)
        {
          if (((v275 >> 19) & 0x1FE) - 210 < 8)
            v278 = 1;
          else
            v278 = 2;
        }
        else
        {
          v278 = 2;
        }
        goto LABEL_430;
      }
    }
    v79 = 0;
    goto LABEL_413;
  }
LABEL_57:
  if (*(_DWORD *)(v17 + 10680) > *(_DWORD *)(v17 + 11956))
    goto LABEL_99;
  sub_22EFF605C((uint64_t)a3);
  if (v55 < 0)
    goto LABEL_99;
  if (*((_DWORD *)a3 + 4) != 2)
    goto LABEL_99;
  if (!sub_22E986ADC(a2, (unsigned __int16 *)"max"))
    goto LABEL_99;
  if ((*(_QWORD *)(a2 + 144) & 6) != 4)
    goto LABEL_99;
  v56 = *(_QWORD *)(a2 + 144) & 0xFFFFFFFFFFFFFFF8;
  if (!v56)
    goto LABEL_99;
  v57 = *(uint64_t **)(v56 + 24);
  if (!v57)
    goto LABEL_99;
  if (*((_DWORD *)v57 + 2) != 1)
    goto LABEL_99;
  v58 = *v57;
  if (*(_DWORD *)v58 != 1 || !sub_22F110B50(*(_QWORD *)(*(_QWORD *)(v58 + 8) & 0xFFFFFFFFFFFFFFF0)))
    goto LABEL_99;
  v59 = 0;
  v60 = (unint64_t)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                            + ((unint64_t)*(unsigned int *)a3 >> 24)];
  v62 = *(unsigned __int8 **)(v60 + 8);
  v61 = *(unsigned __int8 **)(v60 + 16);
  LOBYTE(__dst) = 0;
  if (*v62 == 186)
  {
    v63 = *((_QWORD *)v62 + 2);
    v64 = (unsigned __int8 *)(v63 & 0xFFFFFFFFFFFFFFF8);
    if ((v63 & 4) != 0)
      v64 = (unsigned __int8 *)*((_QWORD *)v64 + 5);
    if (*v64 != 181)
    {
      v59 = 0;
      goto LABEL_72;
    }
    sub_22F257F94((uint64_t)(v64 + 16), (llvm::APInt *)v441);
    v337 = *(_DWORD *)&v441[8];
    if (*(_DWORD *)&v441[8] < 0x41u)
    {
      v59 = *(_QWORD *)v441 == 0;
LABEL_547:
      v24 = v419;
      goto LABEL_72;
    }
    if (v337 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)v441) > 0x40)
    {
      v349 = 0;
      v59 = 0;
      if (!*(_QWORD *)v441)
        goto LABEL_547;
    }
    else
    {
      v349 = **(_QWORD **)v441 == 0;
    }
    MEMORY[0x2348A0E84](*(_QWORD *)v441, 0x1000C8000313F17);
    v59 = v349;
    goto LABEL_547;
  }
LABEL_72:
  LOBYTE(__dst) = v59;
  if (*v61 == 186)
  {
    v65 = *((_QWORD *)v61 + 2);
    v66 = (unsigned __int8 *)(v65 & 0xFFFFFFFFFFFFFFF8);
    if ((v65 & 4) != 0)
      v66 = (unsigned __int8 *)*((_QWORD *)v66 + 5);
    if (*v66 == 181)
    {
      sub_22F257F94((uint64_t)(v66 + 16), (llvm::APInt *)v441);
      v338 = *(_DWORD *)&v441[8];
      if (*(_DWORD *)&v441[8] < 0x41u)
      {
        v67 = *(_QWORD *)v441 == 0;
LABEL_550:
        v59 = __dst;
        v24 = v419;
        goto LABEL_77;
      }
      if (v338 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)v441) > 0x40)
      {
        v350 = 0;
        v67 = 0;
        if (!*(_QWORD *)v441)
          goto LABEL_550;
      }
      else
      {
        v350 = **(_QWORD **)v441 == 0;
      }
      MEMORY[0x2348A0E84](*(_QWORD *)v441, 0x1000C8000313F17);
      v67 = v350;
      goto LABEL_550;
    }
  }
  v67 = 0;
LABEL_77:
  if (v59 != v67)
  {
    sub_22F0D4E74((uint64_t)v62);
    v69 = v68;
    sub_22F0D4E74((uint64_t)v61);
    v71 = (unint64_t)v70;
    if (v59)
      v72 = (void *)v69;
    else
      v72 = v70;
    v422 = v72;
    sub_22EFF605C((uint64_t)a3);
    sub_22E8FCA40((_QWORD *)a1, v73, 0x1A3Au, 0, (uint64_t)v441);
    v74 = sub_22E894E38((uint64_t)v441, (unsigned __int8 *)&__dst);
    sub_22F0D4E74(*(_QWORD *)&a3[a3[3]]);
    v443 = v75;
    v76 = sub_22E8906A0(v74, (uint64_t *)&v443);
    sub_22E8906A0(v76, (uint64_t *)&v422);
    sub_22E903BEC((unsigned int *)v441);
    if ((_BYTE)__dst)
    {
      LODWORD(v77) = v71 - 1;
    }
    else
    {
      LODWORD(v69) = sub_22F141A3C(HIDWORD(v69), 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
      v77 = HIDWORD(v71);
    }
    sub_22EFF605C((uint64_t)a3);
    sub_22E8FCA40((_QWORD *)a1, v80, 0x17B5u, 0, (uint64_t)v441);
    sub_22F0D4E74(*(_QWORD *)&a3[a3[3]]);
    *(_QWORD *)&v444[4] = 0;
    v444[12] = 0;
    memset(v445, 0, 17);
    *(_QWORD *)&v444[16] = 0;
    v443 = v81;
    v444[0] = 1;
    v82 = sub_22E890748((uint64_t)v441, &v443);
    v435 = 0;
    *(_QWORD *)&v434[4] = 0;
    v437 = 0;
    v438 = 0;
    v436 = 0;
    v439 = 0;
    v433 = (unsigned __int8 *)(v69 | ((unint64_t)v77 << 32));
    v434[0] = 1;
    sub_22E890748(v82, &v433);
    if (SHIBYTE(v438) < 0)
      operator delete(v436);
    if (SHIBYTE(v445[1]) < 0)
      operator delete(*(void **)&v444[16]);
    sub_22E903BEC((unsigned int *)v441);
  }
  v17 = a1;
LABEL_99:
  if ((*(_BYTE *)(*(_QWORD *)(v17 + 72) + 1) & 0x40) != 0)
  {
    if (sub_22F3ABDAC(a2) == 2)
    {
      v128 = 2;
LABEL_170:
      if (v128 < v417)
      {
        v129 = (unsigned __int8 *)v24[v128];
        if (*v129 == 144)
          v129 = (unsigned __int8 *)*((_QWORD *)v129 + 2);
        v130 = sub_22EFFA6B0(v129);
        v131 = (int *)v130;
        v132 = *v130;
        if (v132 == 225 || v132 == 204 && (v131 = (int *)*((_QWORD *)v130 + 2)) != 0)
        {
          if (sub_22E986A40(a1, v131))
          {
            sub_22EFF605C((uint64_t)v129);
            sub_22E8FCA40((_QWORD *)a1, v133, 0x1A98u, 0, (uint64_t)v441);
            v134 = sub_22F2F30F4((uint64_t)v441, (uint64_t)"%s");
            LODWORD(v443) = 1;
            v135 = sub_22E8900C4(v134, (int *)&v443);
            LODWORD(v433) = 1;
            sub_22E8900C4(v135, (int *)&v433);
            sub_22E903BEC((unsigned int *)v441);
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 24), 0x15C9u, 0, (uint64_t)v441);
            v443 = *(void **)(a2 + 40);
            sub_22E894538((uint64_t)v441, (uint64_t *)&v443);
            sub_22E903BEC((unsigned int *)v441);
          }
        }
      }
    }
    else
    {
      v155 = (uint64_t *)sub_22E47E5E0(a2);
      v157 = v156;
      while (1)
      {
        v158 = v155;
        if (v155 >= v157)
        {
          if (v155 == v157)
            break;
          v159 = v157;
          while (*(_WORD *)(*v159 + 32) != 179)
          {
            if (++v159 == v155)
              goto LABEL_100;
          }
          v158 = v155;
        }
        else
        {
          while (*(_WORD *)(*v158 + 32) != 179)
          {
            if (++v158 == v157)
              goto LABEL_100;
          }
          v159 = v157;
        }
        if (v158 == v159)
          break;
        do
        {
          v161 = *v155++;
          v160 = v161;
        }
        while (*(_WORD *)(v161 + 32) != 179);
        if (sub_22E97DF98(v160) == 2)
        {
          v128 = *(_DWORD *)(v160 + 48) - 1;
          goto LABEL_170;
        }
      }
    }
  }
LABEL_100:
  v83 = sub_22EFC2828(a2);
  v84 = v83;
  if (v83 > 905)
  {
    v85 = (_QWORD *)a1;
    if ((v83 - 906) <= 1)
    {
      v430 = (void *)v27;
      if ((*((_DWORD *)a3 + 4) - 5) >= 0xFFFFFFFE)
      {
        v95 = (unint64_t)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                  + ((unint64_t)*(unsigned int *)a3 >> 24)];
        v96 = sub_22E9879D8(*(unsigned __int8 **)(v95 + 16));
        v97 = sub_22E9879D8(*(unsigned __int8 **)(v95 + 24));
        sub_22EFFAE7C((unsigned int *)a3);
        if ((sub_22E98760C(a1, (uint64_t)v97, v27, v98, *((_DWORD *)a3 + 5)) & 1) == 0)
        {
          v99 = *v97;
          if (v99 == 232)
          {
            if ((v97[2] & 0x7C) != 0)
              return 0;
            v100 = sub_22EFFA6B0(*((unsigned __int8 **)v97 + 2));
            if (!v100)
              return 0;
          }
          else
          {
            if ((v99 + 113) < 0xFBu)
              return 0;
            if (sub_22EFFA8F0((uint64_t)v97) != 840)
              return 0;
            if (*((_DWORD *)v97 + 4) != 1)
              return 0;
            v100 = sub_22E9879D8(*(unsigned __int8 **)&v97[8 * (((unint64_t)*(unsigned int *)v97 >> 18) & 1)
                                                         + 8
                                                         + ((unint64_t)*(unsigned int *)v97 >> 24)]);
            if (!v100)
              return 0;
          }
          if (*v96 == 161 && *v100 == 161 && *((_QWORD *)v96 + 2) == *((_QWORD *)v100 + 2))
          {
            v136 = *(_QWORD *)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                + 24
                                + ((unint64_t)*(unsigned int *)a3 >> 24)];
            if ((v100[2] & 4) != 0)
            {
              *(_OWORD *)v441 = *((_OWORD *)v100 + 2);
              v137 = sub_22F0AB0EC((unint64_t *)v441);
            }
            else
            {
              v137 = *((_DWORD *)v100 + 1);
            }
            sub_22E8FCA40((_QWORD *)a1, v137, 0x1B60u, 0, (uint64_t)v441);
            sub_22F0D4E74(v136);
            v443 = v138;
            v139 = sub_22E8906A0((uint64_t)v441, (uint64_t *)&v443);
            sub_22E8BAE44(v139, (uint64_t *)&v430);
            sub_22E903BEC((unsigned int *)v441);
            v140 = sub_22EFFA6B0(*(unsigned __int8 **)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                                        + 8
                                                        + ((unint64_t)*(unsigned int *)a3 >> 24)]);
            if (sub_22E987A60(*((_QWORD *)v140 + 1), *(_QWORD *)(a1 + 88)))
            {
              *(_QWORD *)v441 = v442;
              *(_OWORD *)&v441[8] = xmmword_22F44E310;
              sub_22F242C48((uint64_t)&v433, (uint64_t)v441);
              v141 = v437;
              if ((unint64_t)((_BYTE *)v436 - (_BYTE *)v437) > 6)
              {
                *(_DWORD *)((char *)v437 + 3) = 677801829;
                *v141 = 1702521203;
                v437 = (_DWORD *)((char *)v437 + 7);
              }
              else
              {
                llvm::raw_ostream::write((llvm::raw_ostream *)&v433, "sizeof(");
              }
              v443 = (void *)sub_22E8FCD8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
              *(_QWORD *)v444 = v142;
              sub_22F0D9044(v140, (uint64_t)&v433, 0, (__int128 *)&v443, 0, "\n", 1uLL, 0);
              if (v436 == v437)
              {
                llvm::raw_ostream::write((llvm::raw_ostream *)&v433, ")");
              }
              else
              {
                *(_BYTE *)v437 = 41;
                v437 = (_DWORD *)((char *)v437 + 1);
              }
              sub_22F0D5A50(v136);
              sub_22E8FCA40((_QWORD *)a1, v143, 0x17C4u, 0, (uint64_t)&v443);
              sub_22F0D4E74(v136);
              v145 = *(const void **)v440;
              v144 = *(_QWORD *)(v440 + 8);
              v424 = 0;
              v425 = 0;
              v429 = 0;
              v422 = v146;
              goto LABEL_561;
            }
          }
        }
      }
      return 0;
    }
LABEL_128:
    v109 = v83 == 889 || v83 == 892;
    v110 = v109;
    if (v109)
      v111 = 2;
    else
      v111 = 3;
    if (*((_DWORD *)a3 + 4) < v111)
      return 0;
    if (v83 == 838 || v83 == 892 || v83 == 889)
      v112 = 1;
    else
      v112 = 2;
    v420 = v112;
    v109 = v110 == 0;
    v113 = 16;
    if (!v109)
      v113 = 8;
    v114 = sub_22EFFA6B0(*(unsigned __int8 **)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                                + 8
                                                + ((unint64_t)*(unsigned int *)a3 >> 24)
                                                + v113]);
    sub_22EFFAE7C((unsigned int *)a3);
    if ((sub_22E98760C((uint64_t)v85, (uint64_t)v114, v27, v115, *((_DWORD *)a3 + 5)) & 1) != 0)
      return 0;
    v416 = v27;
    if (v84 != 892 && v84 != 838)
      goto LABEL_156;
    v116 = 8;
    if (v84 == 838)
      v116 = 16;
    v117 = sub_22EFFEB40(*(unsigned __int8 **)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                                + 8
                                                + ((unint64_t)*(unsigned int *)a3 >> 24)
                                                + v116]);
    if (*v117 != 181)
    {
LABEL_150:
      v85 = (_QWORD *)a1;
      if (v84 == 838)
      {
        v118 = (unint64_t)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                   + ((unint64_t)*(unsigned int *)a3 >> 24)];
        v119 = *(unsigned __int8 **)(v118 + 16);
        if (sub_22E9A5A3C(v119) && !sub_22E9A5A3C(*(unsigned __int8 **)(v118 + 24)))
        {
          sub_22EFF605C((uint64_t)v119);
          v121 = v120;
          sub_22E8FCA40((_QWORD *)a1, v120, 0x1B6Eu, 0, (uint64_t)v441);
          LODWORD(v443) = 1;
          sub_22E8900C4((uint64_t)v441, (int *)&v443);
          sub_22E903BEC((unsigned int *)v441);
          sub_22E8FCA40((_QWORD *)a1, v121, 0x17CDu, 0, (uint64_t)v441);
          LODWORD(v443) = 1;
LABEL_154:
          sub_22E8900C4((uint64_t)v441, (int *)&v443);
          v122 = (unsigned int *)v441;
LABEL_155:
          sub_22E903BEC(v122);
        }
      }
LABEL_156:
      v403 = (uint64_t)v114;
      if (*v114 == 232)
      {
        v123 = *(_DWORD *)v114;
        if ((*(_DWORD *)v114 & 0x3C0000) != 0)
          v413 = 0;
        else
          v413 = *(_QWORD *)(*((_QWORD *)v114 + 2) + 8 * ((v123 & 0x400000) == 0));
        if ((v123 & 0x7C0000) == 0)
        {
          v414 = sub_22EFFA6B0(*((unsigned __int8 **)v114 + 2));
          goto LABEL_268;
        }
      }
      else
      {
        v413 = 0;
      }
      v414 = 0;
LABEL_268:
      *(_QWORD *)v441 = &v441[16];
      *(_QWORD *)&v441[8] = 0x2000000000;
      if (v84 == 892)
      {
        v174 = *(_QWORD *)(*((_QWORD *)sub_22EFFA6B0(*(unsigned __int8 **)&a3[8
                                                                            * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                                                            + 8
                                                                            + ((unint64_t)*(unsigned int *)a3 >> 24)])
                           + 1) & 0xFFFFFFFFFFFFFFF0);
        if ((!v174 || *(_BYTE *)(v174 + 16) != 39)
          && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v174 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39 || !sub_22F10CF48(v174)))
        {
          goto LABEL_497;
        }
      }
      v175 = 0;
      while (1)
      {
        v176 = *(unsigned __int8 **)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                      + 8
                                      + 8 * v175
                                      + ((unint64_t)*(unsigned int *)a3 >> 24)];
        v177 = sub_22EFFA6B0(v176);
        sub_22F0D4E74((uint64_t)v176);
        v418 = v178;
        v179 = *((_QWORD *)v177 + 1);
        v180 = *(_QWORD *)(v179 & 0xFFFFFFFFFFFFFFF0);
        if (v180)
        {
          if (*(_BYTE *)(v180 + 16) == 39)
            break;
        }
        v181 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v180 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v181 == 39)
        {
          v180 = sub_22F10CF48(v180);
          if (v180)
            break;
          v181 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v179 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                           + 16);
        }
        if ((v181 & 0xFEu) - 2 > 3 || !v179)
          goto LABEL_341;
LABEL_329:
        LOBYTE(__dst) = 0;
        v220 = sub_22E987880(v179, &__dst);
        if (v220)
        {
          v235 = v220;
          v237 = v84 == 821 || v84 == 893;
          if (!v175)
          {
            if (v237)
              v238 = 3;
            else
              v238 = 0;
            goto LABEL_486;
          }
          v238 = 0;
          if (v84 > 821)
          {
            if (v84 == 822)
            {
              v238 = 2;
            }
            else if (v84 == 893)
            {
              goto LABEL_383;
            }
          }
          else if (v84 == 820)
          {
            v238 = 1;
          }
          else
          {
            if (v84 != 821)
              goto LABEL_486;
LABEL_383:
            v238 = 3;
          }
LABEL_486:
          sub_22EFF605C((uint64_t)v177);
          v304 = v303;
          v305 = *(_QWORD *)(a1 + 88) + 2128;
          *(_QWORD *)v444 = v305;
          *(_DWORD *)&v444[8] = 6529;
          if (v237)
            LODWORD(v175) = v175 + 2;
          v306 = (_BYTE *)sub_22E3B8AAC(v305);
          v443 = v306;
          v307 = v306 + 1;
          v308 = *v306;
          v307[v308] = 3;
          *v306 = v308 + 5;
          *(_QWORD *)&v306[8 * v308 + 16] = v175;
          v309 = (v308 + 1);
          v307[v309] = 5;
          *(_QWORD *)&v306[8 * v309 + 16] = v416;
          v310 = __dst;
          v311 = (v308 + 2);
          v307[v311] = 2;
          *(_QWORD *)&v306[8 * v311 + 16] = v310;
          v312 = (v308 + 3);
          v307[v312] = 11;
          *(_QWORD *)&v306[8 * v312 + 16] = v235;
          v313 = (v308 + 4);
          v307[v313] = 3;
          *(_QWORD *)&v306[8 * v313 + 16] = v238;
          sub_22F0D4E74(*(_QWORD *)&a3[a3[3]]);
          v315 = v314;
          v316 = (uint64_t)(v306 + 336);
          v85 = (_QWORD *)a1;
          sub_22E4D6448(v316, v315, 1);
          v252 = v304;
          v433 = v177;
          v253 = a1;
LABEL_489:
          sub_22EB52944(v253, v252, &v433, 1uLL, (uint64_t *)&v443);
          if (v443 && *(_QWORD *)v444)
            sub_22E3BB10C(*(unint64_t *)v444, (unint64_t)v443);
LABEL_492:
          sub_22EFF605C((uint64_t)v177);
          v318 = v317;
          v319 = v85[11] + 2128;
          v433 = 0;
          *(_QWORD *)v434 = v319;
          *(_DWORD *)&v434[8] = 5462;
          v444[12] = 0;
          *(_QWORD *)&v444[4] = 0;
          v443 = (void *)(v418 | ((unint64_t)v418 << 32));
          v444[0] = 0;
          v445[0] = 0;
          *(_QWORD *)((char *)v445 + 7) = 0;
          strcpy(&v444[16], "(void*)");
          *(_WORD *)((char *)&v445[1] + 7) = 7;
          sub_22E6D82D0((uint64_t *)&v433, &v443);
          v422 = v177;
          sub_22EB52944((uint64_t)v85, v318, &v422, 1uLL, (uint64_t *)&v433);
          if (SHIBYTE(v445[1]) < 0)
            operator delete(*(void **)&v444[16]);
          v233 = v433;
          if (v433)
          {
            v234 = *(_QWORD *)v434;
            if (*(_QWORD *)v434)
              goto LABEL_496;
          }
LABEL_497:
          v320 = *(void **)v441;
          if (*(_BYTE **)v441 != &v441[16])
LABEL_498:
            free(v320);
          return 0;
        }
        v221 = *(_QWORD *)((v179 & 0xFFFFFFFFFFFFFFF0) + 8);
        if ((v221 & 8) != 0 && v84 != 838 && (*(_QWORD *)((v221 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x180) != 0)
        {
          sub_22EFF605C((uint64_t)v177);
          v245 = v244;
          *(_QWORD *)v444 = v85[11] + 2128;
          *(_DWORD *)&v444[8] = 6201;
          v246 = (_BYTE *)sub_22E3B8AAC(*(uint64_t *)v444);
          v443 = v246;
          v247 = v246 + 1;
          v248 = *v246;
          v247[v248] = 3;
          *v246 = v248 + 3;
          *(_QWORD *)&v246[8 * v248 + 16] = v175;
          v249 = (v248 + 1);
          v247[v249] = 5;
          *(_QWORD *)&v246[8 * v249 + 16] = v416;
          v250 = (v248 + 2);
          v247[v250] = 9;
          *(_QWORD *)&v246[8 * v250 + 16] = v179;
          sub_22F0D4E74(*(_QWORD *)&a3[a3[3]]);
          sub_22E4D6448((uint64_t)(v246 + 336), v251, 1);
          v252 = v245;
          v433 = v177;
          v253 = (uint64_t)v85;
          goto LABEL_489;
        }
        v222 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v179 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v222 && *(_BYTE *)(v222 + 16) == 45)
        {
          if (v84 == 892 || v84 == 838)
          {
            if ((*(_BYTE *)(sub_22F114198(*(_QWORD *)(v222 + 24)) + 75) & 0x10) != 0)
            {
              sub_22EFF605C((uint64_t)v177);
              v255 = v254;
              *(_QWORD *)v444 = v85[11] + 2128;
              *(_DWORD *)&v444[8] = 6383;
              v256 = (_BYTE *)sub_22E3B8AAC(*(uint64_t *)v444);
              v443 = v256;
              v257 = v256 + 1;
              v258 = *v256;
              v257[v258] = 3;
              *v256 = v258 + 4;
              v256 += 16;
              *(_QWORD *)&v256[8 * v258] = v175;
              v259 = (v258 + 1);
              v257[v259] = 5;
              *(_QWORD *)&v256[8 * v259] = v416;
              v260 = (v258 + 2);
              v257[v260] = 9;
              *(_QWORD *)&v256[8 * v260] = v179;
              v261 = (v258 + 3);
              v257[v261] = 2;
              *(_QWORD *)&v256[8 * v261] = 0;
              v433 = v177;
              sub_22EB52944((uint64_t)v85, v255, &v433, 1uLL, (uint64_t *)&v443);
              if (v443 && *(_QWORD *)v444)
                sub_22E3BB10C(*(unint64_t *)v444, (unint64_t)v443);
              v443 = v177;
              *(_QWORD *)v444 = v85;
              sub_22E9A5AB4((uint64_t)&v443, v179);
              goto LABEL_492;
            }
          }
          else if ((v84 & 0xFFFFFFFD) == 0x334 && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v222 + 24)) + 75) & 0x20) != 0)
          {
            sub_22EFF605C((uint64_t)v177);
            v330 = v329;
            *(_QWORD *)v444 = v85[11] + 2128;
            *(_DWORD *)&v444[8] = 6383;
            v331 = (_BYTE *)sub_22E3B8AAC(*(uint64_t *)v444);
            v443 = v331;
            v332 = v331 + 1;
            v333 = *v331;
            v332[v333] = 3;
            *v331 = v333 + 4;
            v331 += 16;
            *(_QWORD *)&v331[8 * v333] = v175;
            v334 = (v333 + 1);
            v332[v334] = 5;
            *(_QWORD *)&v331[8 * v334] = v416;
            v335 = (v333 + 2);
            v332[v335] = 9;
            *(_QWORD *)&v331[8 * v335] = v179;
            v336 = (v333 + 3);
            v332[v336] = 2;
            *(_QWORD *)&v331[8 * v336] = 1;
            v433 = v177;
            sub_22EB52944((uint64_t)v85, v330, &v433, 1uLL, (uint64_t *)&v443);
            if (v443 && *(_QWORD *)v444)
              sub_22E3BB10C(*(unint64_t *)v444, (unint64_t)v443);
            v443 = v177;
            *(_QWORD *)v444 = v85;
            sub_22E9A5C98((uint64_t)&v443, v179);
            goto LABEL_492;
          }
        }
LABEL_341:
        if (v420 == ++v175)
          goto LABEL_497;
      }
      v182 = *(_QWORD *)(v180 + 32);
      v183 = (uint64_t *)(v182 & 0xFFFFFFFFFFFFFFF0);
      v184 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v182 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v184)
        v185 = (*(_DWORD *)(v184 + 16) & 0xFF800FF) == 86507531;
      else
        v185 = 0;
      if (v185)
        goto LABEL_341;
      if (v414)
      {
        v186 = v85[13];
        sub_22EFF605C((uint64_t)v414);
        if (sub_22F1CF68C(*(_QWORD *)(v186 + 32), 0x1B4Fu, v187, v186) != 1)
        {
          v449 = 0u;
          v450 = 0u;
          v447 = 0u;
          v448 = 0u;
          v446 = 0u;
          *(_OWORD *)&v444[8] = 0u;
          memset(v445, 0, sizeof(v445));
          v443 = &v444[8];
          *(_QWORD *)v444 = 0x2000000000;
          v188 = llvm::FoldingSetNodeID::operator==();
          if (v443 != &v444[8])
            free(v443);
          if (v188)
          {
            v189 = v85[11];
            v444[8] = 1;
            *(_QWORD *)v444 = v441;
            v443 = &off_24FAC6E70;
            *(_QWORD *)&v444[16] = v189;
            sub_22F0E9FEC(&v443, v414);
          }
          v443 = &v444[8];
          *(_QWORD *)v444 = 0x2000000000;
          v190 = (void *)v85[11];
          v434[8] = 1;
          *(_QWORD *)v434 = &v443;
          v433 = (unsigned __int8 *)&off_24FAC6E70;
          v436 = v190;
          sub_22F0E9FEC(&v433, v177);
          v191 = llvm::FoldingSetNodeID::operator==();
          v192 = v191;
          if (v191)
          {
            v193 = *v177 == 233 && (*(_DWORD *)v177 & 0x7C0000) == 0x100000;
            v406 = v191;
            v194 = *(unsigned int **)(v416 + 16);
            v407 = *v194;
            v408 = (char *)(v194 + 4);
            v410 = (uint64_t)v177;
            if ((sub_22F1110EC(*v183, 0) & 1) == 0)
            {
              v195 = sub_22EF5CDF0(v85[11], *v183);
              if (v195 == sub_22EF5CDF0(v85[11], *(_QWORD *)(*(_QWORD *)(v85[11] + 16408) & 0xFFFFFFFFFFFFFFF0)))
                v193 = 2;
            }
            v405 = v193;
            v196 = v85;
            sub_22EFF605C((uint64_t)v414);
            v198 = v197;
            sub_22F0D4E74(v410);
            v200 = v199;
            v411 = HIDWORD(v199);
            sub_22F0D4E74((uint64_t)v414);
            v412 = v201;
            v409 = HIDWORD(v201);
            v202 = (_QWORD *)v196[14];
            if (sub_22F1E2440(v202, v198, 0))
            {
              v203 = sub_22F142460(v198, (uint64_t)v202, *(_DWORD **)(a1 + 72));
              v407 = v204;
              v408 = (char *)v203;
              v205 = v198;
              if (v198 < 0)
                v205 = sub_22F1E238C(v202, v198);
              v404 = v205;
              v206 = v200;
              if ((v200 & 0x80000000) != 0)
                v206 = sub_22F1E238C(v202, v200);
              v402 = v206;
              if ((v200 & 0x8000000000000000) != 0)
                LODWORD(v411) = sub_22F1E238C(v202, v411);
              v207 = v412;
              if ((v412 & 0x80000000) != 0)
                v207 = sub_22F1E238C(v202, v412);
              v208 = v409;
              if ((v412 & 0x8000000000000000) != 0)
                v208 = sub_22F1E238C(v202, v409);
              LODWORD(v200) = v402;
              LODWORD(v409) = v208;
              v209 = v207;
            }
            else
            {
              v404 = v198;
              v209 = v412;
            }
            v210 = *(_QWORD *)(a1 + 88) + 2128;
            v433 = 0;
            *(_QWORD *)v434 = v210;
            *(_DWORD *)&v434[8] = 6991;
            sub_22E3B89A8(&v433, v408, v407);
            v211 = v433;
            if (!v433)
            {
              v211 = (unsigned __int8 *)sub_22E3B8AAC(*(uint64_t *)v434);
              v433 = v211;
            }
            v211[*v211 + 1] = 9;
            v212 = v433;
            v213 = *v433;
            *v433 = v213 + 1;
            *(_QWORD *)&v212[8 * v213 + 16] = v182;
            v212[(v213 + 1) + 1] = 9;
            v214 = v433;
            v215 = *v433;
            *v433 = v215 + 1;
            *(_QWORD *)&v214[8 * v215 + 16] = v179;
            sub_22E4D6448((uint64_t)(v214 + 336), v200 | ((unint64_t)v411 << 32), 1);
            v216 = v433;
            if (!v433)
            {
              v216 = (unsigned __int8 *)sub_22E3B8AAC(*(uint64_t *)v434);
              v433 = v216;
            }
            sub_22E4D6448((uint64_t)(v216 + 336), v209 | ((unint64_t)v409 << 32), 1);
            v422 = v414;
            v85 = (_QWORD *)a1;
            sub_22EB52944(a1, v404, &v422, 1uLL, (uint64_t *)&v433);
            if (v433 && *(_QWORD *)v434)
              sub_22E3BB10C(*(unint64_t *)v434, (unint64_t)v433);
            v217 = *(_QWORD *)(a1 + 88) + 2128;
            v433 = 0;
            *(_QWORD *)v434 = v217;
            *(_DWORD *)&v434[8] = 6992;
            v433 = (unsigned __int8 *)sub_22E3B8AAC(v217);
            v433[*v433 + 1] = 3;
            v218 = v433;
            v219 = *v433;
            *v433 = v219 + 1;
            *(_QWORD *)&v218[8 * v219 + 16] = v405;
            sub_22E4D6448((uint64_t)(v218 + 336), v209 | ((unint64_t)v409 << 32), 1);
            v422 = v414;
            sub_22EB52944(a1, v404, &v422, 1uLL, (uint64_t *)&v433);
            v177 = (unsigned __int8 *)v410;
            if (v433 && *(_QWORD *)v434)
              sub_22E3BB10C(*(unint64_t *)v434, (unint64_t)v433);
            v192 = v406;
          }
          if (v443 != &v444[8])
            free(v443);
          if ((v192 & 1) != 0)
            goto LABEL_497;
        }
      }
      if (v413
        && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v183 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 45
        && sub_22F36EDA0(v85[11], v413, v179, 0))
      {
        sub_22EFF605C(v403);
        v224 = v223;
        *(_QWORD *)v444 = v85[11] + 2128;
        *(_DWORD *)&v444[8] = 6993;
        v225 = (_BYTE *)sub_22E3B8AAC(*(uint64_t *)v444);
        v443 = v225;
        v226 = v225 + 1;
        v227 = *v225;
        v226[v227] = 5;
        *v225 = v227 + 4;
        *(_QWORD *)&v225[8 * v227 + 16] = v416;
        v228 = (v227 + 1);
        v226[v228] = 9;
        *(_QWORD *)&v225[8 * v228 + 16] = v413;
        v229 = (v227 + 2);
        v226[v229] = 3;
        *(_QWORD *)&v225[8 * v229 + 16] = v175;
        v230 = (v227 + 3);
        v226[v230] = 9;
        *(_QWORD *)&v225[8 * v230 + 16] = v182;
        sub_22F0D4E74((uint64_t)v177);
        sub_22E4D6448((uint64_t)(v225 + 336), v231, 1);
        sub_22F0D4E74(v403);
        sub_22E4D6448((uint64_t)(v225 + 336), v232, 1);
        v433 = v177;
        sub_22EB52944((uint64_t)v85, v224, &v433, 1uLL, (uint64_t *)&v443);
        v233 = (unsigned __int8 *)v443;
        if (!v443)
          goto LABEL_497;
        v234 = *(_QWORD *)v444;
        if (!*(_QWORD *)v444)
          goto LABEL_497;
LABEL_496:
        sub_22E3BB10C(v234, (unint64_t)v233);
        goto LABEL_497;
      }
      v179 = v182;
      if (!v182)
        goto LABEL_341;
      goto LABEL_329;
    }
    v262 = (uint64_t)v117;
    v263 = *((unsigned int *)a3 + 5);
    v264 = *(_QWORD *)(a1 + 112);
    sub_22F257F94((uint64_t)(v117 + 16), (llvm::APInt *)v441);
    v265 = *(_DWORD *)&v441[8];
    if (*(_DWORD *)&v441[8] >= 0x41u)
    {
      if (v265 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)v441) >= 0x41)
      {
        if (*(_QWORD *)v441)
          MEMORY[0x2348A0E84](*(_QWORD *)v441, 0x1000C8000313F17);
        goto LABEL_150;
      }
      v296 = **(_QWORD **)v441;
      MEMORY[0x2348A0E84]();
      if (v296)
        goto LABEL_150;
    }
    else if (*(_QWORD *)v441)
    {
      goto LABEL_150;
    }
    v297 = v114;
    sub_22EFF605C(v262);
    v299 = v298;
    if ((v263 & 0x80000000) != 0)
    {
      v361 = sub_22F2AB344((_QWORD *)v264, v263) & 0x7FFFFFFF;
      v362 = *(_DWORD *)(v264 + 304);
      v363 = v362 + 1;
      if (v362 + 1 > 1)
      {
        if ((v362 & 0x80000000) != 0)
        {
          v377 = -2 - v362;
          if (((*(_QWORD *)(*(_QWORD *)(v264 + 224) + 8 * ((-2 - v362) >> 6)) >> (-2 - v362)) & 1) != 0)
            v364 = (_DWORD *)(*(_QWORD *)(v264 + 200) + 24 * v377);
          else
            v364 = (_DWORD *)sub_22F1E1134(v264, v377, 0);
        }
        else
        {
          v364 = (_DWORD *)(*(_QWORD *)(v264 + 184) + 24 * v362);
        }
      }
      else
      {
        v364 = *(_DWORD **)(v264 + 184);
      }
      if ((*v364 & 0x7FFFFFFFu) <= v361
        && (v362 == -2
         || (v363 != *(_DWORD *)(v264 + 192)
           ? ((v363 & 0x80000000) != 0
            ? ((v380 = -3 - v362,
                ((*(_QWORD *)(*(_QWORD *)(v264 + 224) + 8 * ((-3 - v362) >> 6)) >> (-3 - v362)) & 1) == 0)
             ? (v379 = (_DWORD *)sub_22F1E1134(v264, v380, 0))
             : (v379 = (_DWORD *)(*(_QWORD *)(v264 + 200) + 24 * v380)))
            : (v379 = (_DWORD *)(*(_QWORD *)(v264 + 184) + 24 * v363)),
              v378 = *v379 & 0x7FFFFFFF)
           : (v378 = *(_DWORD *)(v264 + 216)),
             v378 > v361)))
      {
        v381 = *(_DWORD *)(v264 + 304);
      }
      else
      {
        v381 = sub_22F1E1EE8(v264, v361);
      }
      v382 = sub_22F2AB344((_QWORD *)v264, v299) & 0x7FFFFFFF;
      v383 = *(_DWORD *)(v264 + 304);
      v384 = v383 + 1;
      if (v383 + 1 > 1)
      {
        if ((v383 & 0x80000000) != 0)
        {
          v386 = -2 - v383;
          if (((*(_QWORD *)(*(_QWORD *)(v264 + 224) + 8 * ((-2 - v383) >> 6)) >> (-2 - v383)) & 1) != 0)
            v385 = (_DWORD *)(*(_QWORD *)(v264 + 200) + 24 * v386);
          else
            v385 = (_DWORD *)sub_22F1E1134(v264, v386, 0);
        }
        else
        {
          v385 = (_DWORD *)(*(_QWORD *)(v264 + 184) + 24 * v383);
        }
      }
      else
      {
        v385 = *(_DWORD **)(v264 + 184);
      }
      if ((*v385 & 0x7FFFFFFFu) <= v382
        && (v383 == -2
         || (v384 != *(_DWORD *)(v264 + 192)
           ? ((v384 & 0x80000000) != 0
            ? ((v389 = -3 - v383,
                ((*(_QWORD *)(*(_QWORD *)(v264 + 224) + 8 * ((-3 - v383) >> 6)) >> (-3 - v383)) & 1) == 0)
             ? (v388 = (_DWORD *)sub_22F1E1134(v264, v389, 0))
             : (v388 = (_DWORD *)(*(_QWORD *)(v264 + 200) + 24 * v389)))
            : (v388 = (_DWORD *)(*(_QWORD *)(v264 + 184) + 24 * v384)),
              v387 = *v388 & 0x7FFFFFFF)
           : (v387 = *(_DWORD *)(v264 + 216)),
             v387 > v382)))
      {
        v390 = *(_DWORD *)(v264 + 304);
      }
      else
      {
        v390 = sub_22F1E1EE8(v264, v382);
      }
      v114 = v297;
      if (v381 != v390)
        goto LABEL_150;
      sub_22EFF605C(v262);
      v376 = v391;
      if (v84 == 892)
      {
        v114 = v297;
        goto LABEL_600;
      }
      v392 = sub_22F142460(v263, v264, *(_DWORD **)(a1 + 72));
      if (v393 == 5)
      {
        v394 = *(_DWORD *)v392 == 1919253090 && v392[4] == 111;
        v114 = v297;
        if (v394)
          goto LABEL_600;
      }
      else
      {
        v114 = v297;
      }
    }
    else
    {
      v300 = *(_DWORD *)(v264 + 304);
      v301 = v300 + 1;
      if (v300 + 1 > 1)
      {
        if ((v300 & 0x80000000) != 0)
        {
          v345 = -2 - v300;
          if (((*(_QWORD *)(*(_QWORD *)(v264 + 224) + 8 * ((-2 - v300) >> 6)) >> (-2 - v300)) & 1) != 0)
            v302 = (_DWORD *)(*(_QWORD *)(v264 + 200) + 24 * v345);
          else
            v302 = (_DWORD *)sub_22F1E1134(v264, v345, 0);
        }
        else
        {
          v302 = (_DWORD *)(*(_QWORD *)(v264 + 184) + 24 * v300);
        }
      }
      else
      {
        v302 = *(_DWORD **)(v264 + 184);
      }
      if ((*v302 & 0x7FFFFFFFu) <= v263
        && (v300 == -2
         || (v301 != *(_DWORD *)(v264 + 192)
           ? ((v301 & 0x80000000) != 0
            ? ((v365 = -3 - v300,
                ((*(_QWORD *)(*(_QWORD *)(v264 + 224) + 8 * ((-3 - v300) >> 6)) >> (-3 - v300)) & 1) == 0)
             ? (v352 = (_DWORD *)sub_22F1E1134(v264, v365, 0))
             : (v352 = (_DWORD *)(*(_QWORD *)(v264 + 200) + 24 * v365)))
            : (v352 = (_DWORD *)(*(_QWORD *)(v264 + 184) + 24 * v301)),
              v348 = *v352 & 0x7FFFFFFF)
           : (v348 = *(_DWORD *)(v264 + 216)),
             v348 > v263)))
      {
        v347 = *(_DWORD *)(v264 + 304);
        v346 = v347;
      }
      else
      {
        v346 = sub_22F1E1EE8(v264, v263);
        v347 = *(_DWORD *)(v264 + 304);
      }
      v366 = v299 & 0x7FFFFFFF;
      v367 = v347;
      v368 = v347 + 1;
      if (v347 + 1 > 1)
      {
        if ((v347 & 0x80000000) != 0)
        {
          v370 = -2 - v347;
          if (((*(_QWORD *)(*(_QWORD *)(v264 + 224) + 8 * ((-2 - v347) >> 6)) >> (-2 - v347)) & 1) != 0)
            v369 = (_DWORD *)(*(_QWORD *)(v264 + 200) + 24 * v370);
          else
            v369 = (_DWORD *)sub_22F1E1134(v264, v370, 0);
        }
        else
        {
          v369 = (_DWORD *)(*(_QWORD *)(v264 + 184) + 24 * v347);
        }
      }
      else
      {
        v369 = *(_DWORD **)(v264 + 184);
      }
      if ((*v369 & 0x7FFFFFFFu) <= v366
        && (v367 == -2
         || (v368 != *(_DWORD *)(v264 + 192)
           ? ((v368 & 0x80000000) != 0
            ? ((v374 = -3 - v367,
                ((*(_QWORD *)(*(_QWORD *)(v264 + 224) + 8 * ((-3 - v367) >> 6)) >> (-3 - v367)) & 1) == 0)
             ? (v373 = (_DWORD *)sub_22F1E1134(v264, v374, 0))
             : (v373 = (_DWORD *)(*(_QWORD *)(v264 + 200) + 24 * v374)))
            : (v373 = (_DWORD *)(*(_QWORD *)(v264 + 184) + 24 * v368)),
              v372 = *v373 & 0x7FFFFFFF)
           : (v372 = *(_DWORD *)(v264 + 216)),
             v372 > v366)))
      {
        v371 = *(_DWORD *)(v264 + 304);
      }
      else
      {
        v371 = sub_22F1E1EE8(v264, v366);
      }
      v114 = v297;
      if (v346 != v371)
        goto LABEL_150;
      sub_22EFF605C(v262);
      v376 = v375;
      if (v84 == 892)
      {
LABEL_600:
        v85 = (_QWORD *)a1;
        sub_22E8FCA40((_QWORD *)a1, v376, 0x1B6Du, 0, (uint64_t)v441);
        sub_22E903BEC((unsigned int *)v441);
        sub_22E8FCA40((_QWORD *)a1, v376, 0x17CCu, 0, (uint64_t)&v443);
        v122 = (unsigned int *)&v443;
        goto LABEL_155;
      }
    }
    v395 = sub_22EFFEB40(*(unsigned __int8 **)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                                                + 16
                                                + ((unint64_t)*(unsigned int *)a3 >> 24)]);
    v85 = (_QWORD *)a1;
    if (*v395 == 181)
    {
      sub_22F257F94((uint64_t)(v395 + 16), (llvm::APInt *)v441);
      v396 = *(_DWORD *)&v441[8];
      if (*(_DWORD *)&v441[8] >= 0x41u)
      {
        if (v396 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)v441) >= 0x41)
        {
          if (*(_QWORD *)v441)
            MEMORY[0x2348A0E84](*(_QWORD *)v441, 0x1000C8000313F17);
          v85 = (_QWORD *)a1;
          v114 = v297;
        }
        else
        {
          v397 = **(_QWORD **)v441;
          MEMORY[0x2348A0E84]();
          v85 = (_QWORD *)a1;
          v114 = v297;
          if (!v397)
            goto LABEL_156;
        }
      }
      else
      {
        v85 = (_QWORD *)a1;
        v114 = v297;
        if (!*(_QWORD *)v441)
          goto LABEL_156;
      }
    }
    sub_22E8FCA40(v85, v376, 0x1B6Eu, 0, (uint64_t)v441);
    LODWORD(v443) = 0;
    sub_22E8900C4((uint64_t)v441, (int *)&v443);
    sub_22E903BEC((unsigned int *)v441);
    sub_22E8FCA40(v85, v376, 0x17CDu, 0, (uint64_t)v441);
    LODWORD(v443) = 0;
    goto LABEL_154;
  }
  v85 = (_QWORD *)a1;
  if (!v83)
    return 0;
  if (v83 == 811)
  {
    v101 = sub_22EFFA604(*(unsigned __int8 **)&a3[a3[3]]);
    sub_22EFB9E74(v101, &v422);
    v102 = *(_QWORD *)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                        + 8
                        + ((unint64_t)*(unsigned int *)a3 >> 24)];
    v103 = sub_22EFFBBCC((unsigned __int8 *)v102);
    v104 = v103;
    v105 = *v103;
    if (v105 <= 0xA0)
    {
      if (v105 == 104)
      {
        sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v103 + 4), 0x19CAu, 0, (uint64_t)v441);
        v147 = sub_22E90749C((uint64_t)v441, &v422);
        LODWORD(v433) = 0;
        v148 = sub_22E8900C4(v147, (int *)&v433);
        v149 = *(_QWORD *)(*((_QWORD *)v104 + 3) + 40);
        if ((v149 & 7) != 0)
          v150 = 0;
        else
          v150 = (void *)(v149 & 0xFFFFFFFFFFFFFFF8);
        v443 = v150;
        sub_22E8BAE44(v148, (uint64_t *)&v443);
        goto LABEL_204;
      }
      if (v105 == 114)
      {
        sub_22F0D5A50((uint64_t)v103);
        sub_22E8FCA40((_QWORD *)a1, v106, 0x19CAu, 0, (uint64_t)v441);
        v107 = sub_22E90749C((uint64_t)v441, &v422);
        v108 = 1;
LABEL_127:
        LODWORD(v443) = v108;
        sub_22E8900C4(v107, (int *)&v443);
LABEL_204:
        sub_22E903BEC((unsigned int *)v441);
        goto LABEL_206;
      }
LABEL_205:
      if ((*(_BYTE *)v102 + 102) < 0xF5u)
        goto LABEL_206;
      *(_QWORD *)v441 = v442;
      *(_OWORD *)&v441[8] = xmmword_22F44E310;
      sub_22F242C48((uint64_t)&v433, (uint64_t)v441);
      v239 = (*(_DWORD *)v102 >> 18) & 0x7F;
      if (v239 == 22)
      {
        v266 = sub_22EFFA6B0(*(unsigned __int8 **)(v102 + 16));
        do
        {
          v267 = *v266;
          if (v267 > 0xD5)
          {
            if (v267 == 233)
            {
              if ((*(_DWORD *)v266 & 0x7C0000) != 0x300000)
                goto LABEL_528;
              v267 = *(_DWORD *)v266;
              v269 = (unsigned __int8 **)(v266 + 16);
            }
            else
            {
              if (v267 != 214)
                break;
              v269 = (unsigned __int8 **)(v266 + 24);
            }
          }
          else if (v267 == 155)
          {
            if ((**((_DWORD **)v266 + 2) & 0x18000) != 0)
              goto LABEL_528;
            v269 = (unsigned __int8 **)(v266 + 24);
            if (!v266[48])
              v269 = (unsigned __int8 **)(v266 + 32);
            v267 = 155;
          }
          else
          {
            if (v267 != 176)
              break;
            v268 = *((unsigned int *)v266 + 5);
            if ((_DWORD)v268 == -1)
              goto LABEL_528;
            v269 = (unsigned __int8 **)&v266[8 * v268 + 40];
            v267 = 176;
          }
          v270 = *v269;
          v109 = v270 == v266;
          v266 = v270;
        }
        while (!v109);
        if (v267 != 181)
          goto LABEL_528;
        goto LABEL_371;
      }
      if (v239 == 1)
      {
        v240 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v102 + 16) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (!v240 || *(_BYTE *)(v240 + 16) != 39)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v240 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
            goto LABEL_528;
          v240 = sub_22F10CF48(v240);
          if (!v240)
            goto LABEL_528;
        }
        if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v240 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                      + 8) & 0xFFFFFFFFFFFFFFF0)
                                              + 16)
           - 25 > 1)
          goto LABEL_528;
        v239 = (*(_DWORD *)v102 >> 18) & 0x7F;
      }
      v52 = v239 > 0x16;
      v241 = (1 << v239) & 0x402002;
      if (!v52 && v241 != 0)
      {
LABEL_371:
        v243 = v437;
        if (v437 >= v436)
        {
          llvm::raw_ostream::write((llvm::raw_ostream *)&v433);
        }
        else
        {
          v437 = (_DWORD *)((char *)v437 + 1);
          *v243 = 39;
        }
        v443 = (void *)sub_22E8FCD8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
        *(_QWORD *)v444 = v339;
        sub_22F0D9044((_DWORD *)v102, (uint64_t)&v433, 0, (__int128 *)&v443, 0, "\n", 1uLL, 0);
        v340 = v437;
        if (v437 >= v436)
        {
          llvm::raw_ostream::write((llvm::raw_ostream *)&v433);
        }
        else
        {
          v437 = (_DWORD *)((char *)v437 + 1);
          *v340 = 39;
        }
        sub_22F0D5A50(v102);
        sub_22E8FCA40((_QWORD *)a1, v341, 0x19CAu, 0, (uint64_t)&v443);
        v342 = sub_22E90749C((uint64_t)&v443, &v422);
        LODWORD(v430) = 0;
        v343 = sub_22E8900C4(v342, (int *)&v430);
        v344 = *(_QWORD *)(v440 + 8);
        *(_QWORD *)&__dst = *(_QWORD *)v440;
        *((_QWORD *)&__dst + 1) = v344;
        sub_22F2F2210(v343, (uint64_t)&__dst);
        sub_22E903BEC((unsigned int *)&v443);
      }
LABEL_528:
      llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v433);
      if (*(_BYTE **)v441 != v442)
        free(*(void **)v441);
      goto LABEL_206;
    }
    if (v105 == 161)
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v103 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) & 0xFEu)
         - 2 <= 3)
      {
        v151 = (_DWORD *)*((_QWORD *)v103 + 2);
        if ((v151[7] & 0x7Fu) - 60 >= 7)
          v151 = 0;
        v443 = v151;
        if (!v151)
          goto LABEL_206;
        if ((v103[2] & 4) != 0)
        {
          *(_OWORD *)v441 = *((_OWORD *)v103 + 2);
          v152 = sub_22F0AB0EC((unint64_t *)v441);
        }
        else
        {
          v152 = *((_DWORD *)v103 + 1);
        }
        sub_22E8FCA40((_QWORD *)a1, v152, 0x19CAu, 0, (uint64_t)v441);
        v153 = sub_22E90749C((uint64_t)v441, &v422);
        LODWORD(v433) = 0;
        v154 = sub_22E8900C4(v153, (int *)&v433);
        sub_22E890024(v154, (uint64_t *)&v443);
        goto LABEL_204;
      }
      goto LABEL_205;
    }
    if (v105 != 233)
      goto LABEL_205;
    v124 = (*(_DWORD *)v103 >> 18) & 0x1F;
    if (v124 == 6)
    {
      v169 = sub_22EFFEEC4(*((unsigned __int8 **)v103 + 2));
      do
      {
        v170 = v169;
        v171 = *v169;
        if (v171 > 0xD5)
        {
          if (v171 == 233)
          {
            if ((*(_DWORD *)v169 & 0x7C0000) != 0x300000)
              goto LABEL_206;
            v171 = *(_DWORD *)v169;
            v173 = (unsigned __int8 **)(v169 + 16);
          }
          else
          {
            if (v171 != 214)
              break;
            v173 = (unsigned __int8 **)(v169 + 24);
          }
        }
        else if (v171 == 155)
        {
          if ((**((_DWORD **)v169 + 2) & 0x18000) != 0)
            goto LABEL_206;
          v173 = (unsigned __int8 **)(v169 + 24);
          if (!v169[48])
            v173 = (unsigned __int8 **)(v169 + 32);
          v171 = 155;
        }
        else
        {
          if (v171 != 176)
            break;
          v172 = *((unsigned int *)v169 + 5);
          if ((_DWORD)v172 == -1)
            goto LABEL_206;
          v173 = (unsigned __int8 **)&v169[8 * v172 + 40];
          v171 = 176;
        }
        v169 = *v173;
      }
      while (*v173 != v170);
      if (v171 == 182)
      {
        sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v170 + 4), 0x19CAu, 0, (uint64_t)v441);
        v107 = sub_22E90749C((uint64_t)v441, &v422);
        v108 = 2;
        goto LABEL_127;
      }
    }
    else
    {
      if (v124 != 4)
        goto LABEL_205;
      v125 = (unsigned __int8 *)*((_QWORD *)v103 + 2);
      v126 = *v125;
      if (v126 == 188)
      {
        v127 = *((_QWORD *)v125 + 3);
LABEL_360:
        sub_22E9A5E78((unsigned int *)a1, &v422, (uint64_t)v103, v127);
        goto LABEL_206;
      }
      if (v126 == 161)
      {
        v127 = *((_QWORD *)v125 + 2);
        if ((*(_DWORD *)(v127 + 28) & 0x7Fu) - 49 <= 0x11
          && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v127 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFE) != 0x28)
        {
          goto LABEL_360;
        }
      }
    }
LABEL_206:
    if (v426 < 0)
      operator delete(v422);
    return 0;
  }
  if (v83 != 828)
    goto LABEL_128;
  if (*((_DWORD *)a3 + 4) < 3u)
    return 0;
  v86 = (unsigned __int8 **)&a3[8 * (((unint64_t)*(unsigned int *)a3 >> 18) & 1)
                              + ((unint64_t)*(unsigned int *)a3 >> 24)];
  v87 = sub_22EFFBBCC(v86[1]);
  v88 = sub_22EFFBBCC(v86[2]);
  v89 = sub_22EFFBBCC(v86[3]);
  sub_22EFFAE7C((unsigned int *)a3);
  if ((sub_22E98760C(a1, (uint64_t)v89, v27, v90, *((_DWORD *)a3 + 5)) & 1) != 0)
    return 0;
  v91 = *v89;
  if (v91 == 232)
  {
    if ((v89[2] & 0x7C) != 0)
      return 0;
    v92 = sub_22EFFA6B0(*((unsigned __int8 **)v89 + 2));
    if (!v92 || *v92 != 161)
      return 0;
    if (!v87 || *v87 != 161 || *((_QWORD *)v92 + 2) != *((_QWORD *)v87 + 2))
    {
      if (!v88 || *v88 != 161)
        return 0;
      v93 = *((_QWORD *)v92 + 2);
      v94 = *((_QWORD *)v88 + 2);
      goto LABEL_464;
    }
LABEL_244:
    v168 = 1;
LABEL_466:
    sub_22F0D5A50((uint64_t)v89);
    v288 = v287;
    sub_22F0D4E74((uint64_t)v89);
    v290 = (unint64_t)v289;
    v430 = v289;
    v291 = *(_QWORD **)(a1 + 112);
    v292 = v288;
    if (sub_22F1E2440(v291, v288, 0))
    {
      v293 = v290;
      if (v288 < 0)
        v288 = sub_22F1E238C(v291, v288);
      v294 = HIDWORD(v290);
      if ((v290 & 0x80000000) != 0)
        v293 = sub_22F1E238C(v291, v290);
      if ((v290 & 0x8000000000000000) != 0)
        v294 = sub_22F1E238C(v291, SHIDWORD(v290));
      v430 = (void *)(v293 | (v294 << 32));
      v292 = v288;
      v85 = (_QWORD *)a1;
    }
    if (!sub_22E987A60(*((_QWORD *)v87 + 1), v85[11]))
    {
      if (v168)
        v295 = 7011;
      else
        v295 = 7010;
      sub_22E8FCA40(v85, v292, v295, 0, (uint64_t)v441);
      sub_22E8906A0((uint64_t)v441, (uint64_t *)&v430);
      sub_22E903BEC((unsigned int *)v441);
      return 0;
    }
    if (v168)
      v351 = 7009;
    else
      v351 = 7010;
    sub_22E8FCA40((_QWORD *)a1, v292, v351, 0, (uint64_t)v441);
    sub_22E8906A0((uint64_t)v441, (uint64_t *)&v430);
    sub_22E903BEC((unsigned int *)v441);
    *(_QWORD *)v441 = v442;
    *(_OWORD *)&v441[8] = xmmword_22F44E310;
    sub_22F242C48((uint64_t)&v433, (uint64_t)v441);
    v353 = v437;
    if ((unint64_t)((_BYTE *)v436 - (_BYTE *)v437) > 6)
    {
      *(_DWORD *)((char *)v437 + 3) = 677801829;
      *v353 = 1702521203;
      v437 = (_DWORD *)((char *)v437 + 7);
    }
    else
    {
      llvm::raw_ostream::write((llvm::raw_ostream *)&v433, "sizeof(");
    }
    v443 = (void *)sub_22E8FCD8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
    *(_QWORD *)v444 = v354;
    sub_22F0D9044(v87, (uint64_t)&v433, 0, (__int128 *)&v443, 0, "\n", 1uLL, 0);
    if ((unint64_t)((_BYTE *)v436 - (_BYTE *)v437) > 3)
    {
      *v437 = 539828265;
      v355 = ++v437;
    }
    else
    {
      llvm::raw_ostream::write((llvm::raw_ostream *)&v433, ") - ");
      v355 = v437;
    }
    if ((unint64_t)((_BYTE *)v436 - (_BYTE *)v355) > 6)
    {
      *(_DWORD *)((char *)v355 + 3) = 678323564;
      *v355 = 1819440243;
      v437 = (_DWORD *)((char *)v437 + 7);
    }
    else
    {
      llvm::raw_ostream::write((llvm::raw_ostream *)&v433, "strlen(");
    }
    v443 = (void *)sub_22E8FCD8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
    *(_QWORD *)v444 = v356;
    sub_22F0D9044(v87, (uint64_t)&v433, 0, (__int128 *)&v443, 0, "\n", 1uLL, 0);
    v357 = v437;
    if ((unint64_t)((_BYTE *)v436 - (_BYTE *)v437) > 4)
    {
      *((_BYTE *)v437 + 4) = 49;
      *v357 = 539828265;
      v437 = (_DWORD *)((char *)v437 + 5);
    }
    else
    {
      llvm::raw_ostream::write((llvm::raw_ostream *)&v433, ") - 1");
    }
    sub_22E8FCA40((_QWORD *)a1, v292, 0x17C5u, 0, (uint64_t)&v443);
    v145 = *(const void **)v440;
    v144 = *(_QWORD *)(v440 + 8);
    v424 = 0;
    v425 = 0;
    v429 = 0;
    v422 = v430;
LABEL_561:
    v423 = 1;
    if (v144 > 0x7FFFFFFFFFFFFFF7)
      abort();
    if (v144 >= 0x17)
    {
      v359 = (v144 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v144 | 7) != 0x17)
        v359 = v144 | 7;
      v360 = v359 + 1;
      p_dst = (__int128 *)operator new(v359 + 1);
      *((_QWORD *)&__dst + 1) = v144;
      v432 = v360 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v432) = v144;
      p_dst = &__dst;
      if (!v144)
      {
LABEL_569:
        *((_BYTE *)p_dst + v144) = 0;
        v427 = __dst;
        v428 = v432;
        sub_22E890748((uint64_t)&v443, &v422);
        if (SHIBYTE(v428) < 0)
          operator delete((void *)v427);
        sub_22E903BEC((unsigned int *)&v443);
        llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v433);
        v320 = *(void **)v441;
        if (*(_BYTE **)v441 != v442)
          goto LABEL_498;
        return 0;
      }
    }
    memmove(p_dst, v145, v144);
    goto LABEL_569;
  }
  if ((v91 & 0xFE) != 0x70 || (*(_DWORD *)v89 & 0xFC0000) != 0x180000)
    return 0;
  v162 = sub_22EFFBBCC(*((unsigned __int8 **)v89 + 2));
  v163 = sub_22EFFBBCC(*((unsigned __int8 **)v89 + 3));
  if (*v162 == 232 && (v162[2] & 0x7C) == 0)
  {
    v164 = sub_22EFFA6B0(*((unsigned __int8 **)v162 + 2));
    if (v87)
    {
LABEL_229:
      if (*v87 == 161)
      {
        if (v164)
        {
          if (*v164 == 161 && *((_QWORD *)v87 + 2) == *((_QWORD *)v164 + 2) && (*v163 + 113) >= 0xFBu)
          {
            v165 = sub_22EFFA604(*(unsigned __int8 **)&v163[v163[3]]);
            if (v165)
            {
              if ((*(_DWORD *)(v165 + 28) & 0x7Eu) - 52 <= 5 && sub_22EFC2828(v165) == 840)
              {
                v166 = sub_22EFFBBCC(*(unsigned __int8 **)&v163[8
                                                              * (((unint64_t)*(unsigned int *)v163 >> 18) & 1)
                                                              + 8
                                                              + ((unint64_t)*(unsigned int *)v163 >> 24)]);
                v167 = *v87 == 161 ? v87 : 0;
                if (v167 && v166 && *v166 == 161 && *((_QWORD *)v167 + 2) == *((_QWORD *)v166 + 2))
                  goto LABEL_244;
              }
            }
          }
        }
      }
    }
  }
  else
  {
    v164 = 0;
    if (v87)
      goto LABEL_229;
  }
  if (*v162 == 232 && (v162[2] & 0x7C) == 0)
  {
    v286 = sub_22EFFA6B0(*((unsigned __int8 **)v162 + 2));
    if (!v88)
      return 0;
  }
  else
  {
    v286 = 0;
    if (!v88)
      return 0;
  }
  if (*v88 == 161 && v286 && *v286 == 161)
  {
    v93 = *((_QWORD *)v88 + 2);
    v94 = *((_QWORD *)v286 + 2);
LABEL_464:
    if (v93 != v94)
      return 0;
    v168 = 0;
    goto LABEL_466;
  }
  return 0;
}

void sub_22E982D28(_QWORD *a1, int a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int Key;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41[24];
  _QWORD v42[2];

  v40 = a3;
  v6 = sub_22E903398((uint64_t)a1);
  if (v6)
  {
    v7 = v6;
    if ((*(_BYTE *)(v6 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v6);
      v9 = *((unsigned int *)v8 + 2);
      if ((_DWORD)v9)
      {
        v10 = 8 * v9;
        for (i = *v8; *(_WORD *)(*(_QWORD *)i + 32) != 168; i += 8)
        {
          v10 -= 8;
          if (!v10)
            return;
        }
      }
      else
      {
        i = *v8;
      }
      if (i != *v8 + 8 * v9)
      {
        v37 = 0;
        v38 = 0;
        v39 = 0x800000000;
        v12 = (uint64_t *)sub_22F255ABC(a3);
        v14 = v13;
        while (1)
        {
          v15 = v12;
          if (v12 >= v14)
          {
            if (v12 == v14)
              break;
            v16 = v14;
            while (*(_WORD *)(*v16 + 32) != 168)
            {
              if (++v16 == v12)
                goto LABEL_26;
            }
            v15 = v12;
          }
          else
          {
            while (*(_WORD *)(*v15 + 32) != 168)
            {
              if (++v15 == v14)
                goto LABEL_26;
            }
            v16 = v14;
          }
          if (v15 == v16)
            break;
          do
          {
            v18 = *v12++;
            v17 = v18;
          }
          while (*(_WORD *)(v18 + 32) != 168);
          sub_22E3B39D4((llvm::StringMapImpl *)&v37, *(const void **)(v17 + 40), *(unsigned int *)(v17 + 36));
        }
LABEL_26:
        v19 = (uint64_t *)sub_22F255ABC(a3);
        v21 = v20;
        while (1)
        {
          v22 = v19;
          if (v19 >= v21)
          {
            if (v19 == v21)
              break;
            v23 = v21;
            while (*(_WORD *)(*v23 + 32) != 169)
            {
              if (++v23 == v19)
                goto LABEL_41;
            }
            v22 = v19;
          }
          else
          {
            while (*(_WORD *)(*v22 + 32) != 169)
            {
              if (++v22 == v21)
                goto LABEL_41;
            }
            v23 = v21;
          }
          if (v22 == v23)
            break;
          do
          {
            v25 = *v19++;
            v24 = v25;
          }
          while (*(_WORD *)(v25 + 32) != 169);
          sub_22E3B39D4((llvm::StringMapImpl *)&v37, *(const void **)(v24 + 40), *(unsigned int *)(v24 + 36));
        }
LABEL_41:
        v26 = (uint64_t *)sub_22F255ABC(v7);
        v28 = v27;
        while (1)
        {
          v29 = v26;
          if (v26 >= v28)
          {
            if (v26 == v28)
              break;
            v30 = v28;
            while (*(_WORD *)(*v30 + 32) != 168)
            {
              if (++v30 == v26)
                goto LABEL_61;
            }
            v29 = v26;
          }
          else
          {
            while (*(_WORD *)(*v29 + 32) != 168)
            {
              if (++v29 == v28)
                goto LABEL_61;
            }
            v30 = v28;
          }
          if (v29 == v30)
            break;
          do
          {
            v32 = *v26++;
            v31 = v32;
          }
          while (*(_WORD *)(v32 + 32) != 168);
          v33 = *(unsigned int *)(v31 + 36);
          v42[0] = *(_QWORD *)(v31 + 40);
          v42[1] = v33;
          Key = llvm::StringMapImpl::FindKey();
          if (Key == -1 || Key == (unint64_t)v38)
          {
            sub_22E8FCA40(a1, a2, 0x1B7Du, 0, (uint64_t)v41);
            v36 = sub_22E890024((uint64_t)v41, &v40);
            sub_22F2F2210(v36, (uint64_t)v42);
            sub_22E903BEC(v41);
          }
        }
LABEL_61:
        sub_22E3B3AD0((uint64_t)&v37);
      }
    }
  }
}

uint64_t sub_22E983004(uint64_t a1, uint64_t a2, unsigned int *a3, uint64_t a4)
{
  int v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  int v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v25;

  v8 = *(_DWORD *)(a2 + 28) & 0x7F;
  if (a2 && (v8 - 67) >= 0xFFFFFFF9)
  {
    v9 = *(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0;
    v10 = *(_QWORD *)v9;
    if (*(_QWORD *)v9 && (v11 = *(_DWORD *)(v10 + 16), (v11 & 0xFE) == 0x28))
    {
      do
      {
LABEL_42:
        if ((v11 & 0x100000) == 0)
          goto LABEL_35;
        v10 = *(_QWORD *)(*(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (!v10)
          break;
        v11 = *(_DWORD *)(v10 + 16);
      }
      while ((v11 & 0xFE) == 0x28);
      v10 = sub_22F10CF48(v10);
    }
    else
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_13;
      v10 = sub_22F10CF48(v10);
      if (!v10)
        goto LABEL_13;
    }
    v11 = *(_DWORD *)(v10 + 16);
    goto LABEL_42;
  }
  if (!a2 || (v8 - 52) < 0xFFFFFFFD)
    return 0;
  v9 = *(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0;
  v10 = *(_QWORD *)v9;
  if (*(_QWORD *)v9)
  {
    v12 = *(_DWORD *)(v10 + 16);
    if ((v12 & 0xFE) == 0x28)
    {
LABEL_34:
      if ((v12 & 0x100000) != 0)
      {
        do
        {
          v10 = *(_QWORD *)(*(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v10)
          {
            v25 = *(_DWORD *)(v10 + 16);
            if ((v25 & 0xFE) == 0x28)
              continue;
          }
          v10 = sub_22F10CF48(v10);
          v25 = *(_DWORD *)(v10 + 16);
        }
        while ((v25 & 0x100000) != 0);
      }
LABEL_35:
      v9 = *(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0;
      goto LABEL_13;
    }
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) == 0x28)
  {
    v10 = sub_22F10CF48(v10);
    if (v10)
    {
      v12 = *(_DWORD *)(v10 + 16);
      goto LABEL_34;
    }
  }
LABEL_13:
  v13 = *(_QWORD *)v9;
  v14 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v14 == 10
    || (*(_BYTE *)(v13 + 16) == 39 || v14 == 39 && (v13 = sub_22F10CF48(v13)) != 0)
    && *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 32) & 0xFFFFFFFFFFFFFFF0)
                                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                                        + 16)
     - 25 < 2
    || ((v15 = *(_QWORD *)v9) != 0 ? (v16 = *(_BYTE *)(*(_QWORD *)v9 + 16) == 26) : (v16 = 0),
        v16 || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26 && sub_22F10CF48(v15)))
  {
    if (a4 && (*(_BYTE *)(a4 + 23) & 8) != 0)
      v17 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 10;
    else
      v17 = 4;
    v18 = *a3;
    v19 = (uint64_t *)((char *)a3 + (v18 >> 24));
    v20 = (uint64_t)&v19[((v18 >> 18) & 1) + 1];
    v22 = a3[4];
    v21 = a3[5];
    sub_22F0D4E74(*v19);
    sub_22E97E434(a1, a2, a4, 0, v20, v22, 0, v21, v23, v17);
  }
  return 0;
}

uint64_t sub_22E983290(_QWORD *a1, unint64_t a2, uint64_t a3, int a4, void **a5, unint64_t a6, unsigned int a7, int a8)
{
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  BOOL v13;
  int v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  char v23;
  int v24;
  unsigned int v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  int v29;
  unint64_t v30;
  _QWORD *v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  void **v43;
  int v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  _QWORD *v54;
  unsigned int v55;
  uint64_t v56;
  void **v57;
  _BOOL4 v58;
  _QWORD *v59;
  uint64_t v60;
  char v61;
  int v62;
  int v63;
  BOOL v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t v68;
  unsigned int v69;
  BOOL v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  BOOL v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  unint64_t v87;
  _BOOL8 v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  _QWORD *v92;
  unsigned int v93;
  uint64_t v94;
  unint64_t v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  unsigned int v99;
  char v100;
  unint64_t v101;
  char v102;
  unint64_t v103;
  uint64_t v104;
  void **v105;
  unint64_t v106;
  int v107;
  char v108;
  unint64_t *v109;
  unint64_t v110;
  unsigned int v111;
  unint64_t v112;
  BOOL v114;
  char v115;
  unint64_t *v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void **v122;
  uint64_t v123;
  int v124;
  unsigned int v125;
  uint64_t v126;
  unsigned int v127;
  uint64_t v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v132;
  unsigned int v133;
  unsigned int v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 *v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  void *v146;
  void *v147;
  uint64_t v148;
  char v149;
  int v150;
  uint64_t v151;
  int v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  _BOOL4 v156;
  int v157;
  unint64_t *v158;
  unint64_t v159;
  int v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  _QWORD *v164;
  unint64_t *v165;
  uint64_t v166;
  char v167;
  int v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  int v173;
  void **v174;
  int v175;
  unint64_t v176;
  int v178;
  int v179;
  int v180;
  char v181;
  char v183;
  unsigned int v185;
  int v186;
  unsigned int v188[24];
  uint64_t v189;
  uint64_t v190;
  unint64_t *v191;
  unsigned int v192;
  char v193;
  unint64_t v194;
  unint64_t v195;
  void *v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  unsigned int v201;
  unsigned __int8 v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  void *v207;
  void *v208;
  void *v209;
  void *v210;
  void **v211;
  uint64_t v212;
  void *v213;
  void *v214;
  __int128 v215;
  void *v216;
  uint64_t v217;

  v9 = a6;
  v10 = a3;
  v11 = 0;
  v217 = *MEMORY[0x24BDAC8D0];
  v203 = a3;
  v12 = a7 - 36;
  v13 = a7 >= 0xE && v12 >= 0xD;
  v14 = !v13;
  v202 = v14;
  v15 = 1;
  v185 = a7 - 51;
  v16 = 2;
  v17 = 0;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 1;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  switch(a7)
  {
    case 1u:
    case 0xFu:
    case 0x25u:
    case 0x33u:
      v11 = 0;
      v15 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v24 = 0;
      v23 = 1;
      v25 = 1;
      goto LABEL_12;
    case 2u:
    case 0x10u:
    case 0x11u:
    case 0x26u:
    case 0x34u:
      v11 = 0;
      v19 = 0;
      v21 = 0;
      v22 = 0;
      v24 = 0;
      v25 = 3;
      v20 = 1;
      goto LABEL_11;
    case 3u:
    case 0x13u:
    case 0x27u:
    case 0x37u:
      v11 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v25 = 5;
      v23 = 1;
      v24 = 1;
      goto LABEL_12;
    case 4u:
    case 5u:
    case 0x28u:
    case 0x29u:
    case 0x35u:
    case 0x36u:
      v11 = 0;
      v19 = 0;
      v20 = 0;
      v21 = 0;
      v24 = 0;
      v25 = 7;
      v22 = 1;
      goto LABEL_11;
    case 6u:
    case 7u:
    case 0x16u:
    case 0x17u:
    case 0x1Cu:
    case 0x1Du:
    case 0x2Au:
    case 0x2Bu:
    case 0x38u:
    case 0x3Cu:
    case 0x3Du:
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v24 = 0;
      v25 = 4;
      v11 = 1;
      goto LABEL_10;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0x18u:
    case 0x19u:
    case 0x1Au:
    case 0x1Bu:
    case 0x1Eu:
    case 0x1Fu:
    case 0x20u:
    case 0x21u:
    case 0x22u:
    case 0x23u:
    case 0x2Cu:
    case 0x2Du:
    case 0x2Eu:
    case 0x2Fu:
    case 0x30u:
    case 0x31u:
    case 0x32u:
    case 0x39u:
    case 0x3Au:
    case 0x3Bu:
      v11 = 0;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v24 = 0;
      v25 = 4;
LABEL_10:
      v19 = 1;
LABEL_11:
      v23 = 1;
      goto LABEL_12;
    case 0xEu:
      goto LABEL_52;
    case 0x12u:
      v15 = 0;
      v18 = 0;
      v16 = 6;
      v11 = 1;
      v17 = 1;
      goto LABEL_52;
    case 0x14u:
    case 0x15u:
      v15 = 0;
      v17 = 0;
      v16 = 8;
      v11 = 1;
      v18 = 1;
LABEL_52:
      v24 = 0;
      v22 = 0;
      v21 = 0;
      v20 = 0;
      v186 = 0;
      v26 = v16;
      v27 = dword_22F468CC8[v16];
      v201 = v27;
      v23 = 1;
      v25 = v16;
      v28 = v15;
      v29 = v11;
      v15 = 1;
      v11 = 0;
      goto LABEL_18;
    case 0x24u:
      goto LABEL_12;
    default:
      v19 = 0;
      v20 = 0;
      v21 = 1;
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
LABEL_12:
      v26 = v25;
      v27 = dword_22F468CC8[v25];
      v201 = v27;
      v186 = v19;
      if (v12 >= 0xD)
      {
        if (a7 - 51 < 0xB)
          goto LABEL_14;
      }
      else if (a7 != 36)
      {
LABEL_14:
        v18 = 0;
        v17 = 0;
        v28 = 0;
        v201 = ++v27;
        goto LABEL_17;
      }
      v18 = 0;
      v17 = 0;
      v28 = 0;
LABEL_17:
      v29 = 1;
LABEL_18:
      if (a6 < v27)
      {
        v30 = HIDWORD(a2);
        v31 = a1;
        v32 = 4925;
LABEL_22:
        sub_22E8FCA40(v31, v30, v32, 0, (uint64_t)&v196);
        LODWORD(v211) = 0;
        v34 = sub_22E8900C4((uint64_t)&v196, (int *)&v211);
        v35 = sub_22E89519C(v34, &v201);
        LODWORD(v204) = v9;
        v36 = sub_22E89519C(v35, (unsigned int *)&v204);
        sub_22E8906A0(v36, &v203);
LABEL_23:
        sub_22E903BEC((unsigned int *)&v196);
        return 1;
      }
      if (a6 > v27)
      {
        sub_22F0D5A50((uint64_t)a5[v27]);
        LODWORD(v30) = v33;
        v31 = a1;
        v32 = 4931;
        goto LABEL_22;
      }
      v175 = v28;
      v169 = v22;
      v171 = v26;
      v180 = v21;
      v173 = v24;
      v178 = v20;
      v167 = v23;
      v37 = 1;
      v39 = sub_22EB1B954((uint64_t)a1, *a5);
      if ((v39 & 1) != 0)
        return v37;
      v40 = v39 & 0xFFFFFFFFFFFFFFFELL;
      v41 = (_QWORD *)((v39 & 0xFFFFFFFFFFFFFFFELL) + 8);
      v42 = *(_QWORD *)(*v41 & 0xFFFFFFFFFFFFFFF0);
      if (v42 && *(_BYTE *)(v42 + 16) == 39)
      {
        v43 = a5;
        v44 = a8;
      }
      else if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v42 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
             || (v164 = v41, v42 = sub_22F10CF48(v42), v41 = v164, v44 = a8, v43 = a5, !v42))
      {
        sub_22E8FCA40(a1, v10, 0xAC3u, 0, (uint64_t)&v196);
        v211 = *(void ***)(v40 + 8);
        v50 = &v196;
LABEL_42:
        v51 = sub_22E8901B8((uint64_t)v50, (uint64_t *)&v211);
        v52 = v40;
LABEL_71:
        sub_22F0D4E74(v52);
        v204 = v65;
        v66 = (uint64_t *)&v204;
LABEL_72:
        sub_22E8906A0(v51, v66);
        goto LABEL_23;
      }
      v45 = *(_QWORD *)(v42 + 32);
      v194 = v45;
      v195 = v45;
      v166 = v40;
      if (v14)
      {
        v46 = v45 & 0xFFFFFFFFFFFFFFF0;
        v47 = *(_QWORD *)(v45 & 0xFFFFFFFFFFFFFFF0);
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v47 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 6)
        {
          v53 = v10;
          v54 = a1;
          v55 = 2762;
          goto LABEL_49;
        }
        if ((v29 & v15 & 1) != 0)
        {
          v48 = v186;
          if ((v45 & 1) != 0)
            goto LABEL_56;
          v49 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFFF0) + 8);
          if ((v49 & 1) != 0)
            goto LABEL_56;
        }
        else
        {
          v49 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFFF0) + 8);
          v48 = v186;
        }
        if ((v49 & 8) != 0 && (*(_QWORD *)((v49 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x1800)
        {
LABEL_56:
          sub_22E8FCA40(a1, v10, 0xACFu, 0, (uint64_t)&v196);
          v58 = 0;
          if ((v195 & 1) == 0)
            v58 = (*(_BYTE *)((v195 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0;
          LODWORD(v191) = v58;
          goto LABEL_69;
        }
        if (*(_BYTE *)(v47 + 16) != 6)
        {
          v59 = v41;
          v47 = sub_22F10CF48(v47);
          v41 = v59;
          v44 = a8;
          v43 = a5;
        }
        v45 = *(_QWORD *)(v47 + 32);
        v194 = v45;
      }
      else if ((v29 & v15 & 1) != 0)
      {
        v48 = v186;
        if ((v45 & 1) != 0
          || (v46 = v45 & 0xFFFFFFFFFFFFFFF0, (*(_BYTE *)((v45 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) != 0))
        {
          v53 = v10;
          v54 = a1;
          v55 = 2768;
          goto LABEL_49;
        }
      }
      else
      {
        v46 = v45 & 0xFFFFFFFFFFFFFFF0;
        v48 = v186;
      }
      v60 = *(_QWORD *)(v46 + 8);
      if ((v60 & 8) != 0)
      {
        v61 = *(_DWORD *)((v60 & 0xFFFFFFFFFFFFFFF0) + 0x1C);
        v62 = v61 & 0xC;
        v63 = v61 & 2;
        v64 = !v62 || v63 == 0;
        if (!v64 && (*(_BYTE *)(a1[9] + 238) & 0x20) == 0)
        {
          sub_22E8FCA40(a1, v10, 0xACEu, 0, (uint64_t)&v196);
          LODWORD(v191) = 0;
LABEL_69:
          v57 = (void **)sub_22E8900C4((uint64_t)&v196, (int *)&v191);
          v56 = v166;
          v211 = *(void ***)(v166 + 8);
          goto LABEL_70;
        }
      }
      v40 = v166;
      v165 = v41;
      LODWORD(v163) = (a7 - 15) & 0xFFFFFFF9;
      if (!v48)
      {
        if (((a7 - 15) & 0xFFFFFFF9) != 0)
          goto LABEL_89;
        v79 = v45 & 0xFFFFFFFFFFFFFFF0;
        v80 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v45 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v81 = *(_DWORD *)(v80 + 16);
        if (v80)
          v82 = v81 == 11;
        else
          v82 = 0;
        if (v82)
        {
          if (((*(_DWORD *)(v80 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
            goto LABEL_89;
        }
        else if (v80 && v81 == 44)
        {
          v83 = v45;
          v84 = sub_22F114198(*(_QWORD *)(v80 + 24));
          v44 = a8;
          v43 = a5;
          if ((*(_BYTE *)(v84 + 74) & 1) != 0 || (v45 = v83, *(_QWORD *)(v84 + 128) > 7uLL))
          {
            v85 = sub_22F114198(*(_QWORD *)(v80 + 24));
            v45 = v83;
            v44 = a8;
            v43 = a5;
            if ((*(_BYTE *)(v85 + 76) & 0x80) == 0)
              goto LABEL_89;
          }
        }
        else if (v81 == 9)
        {
          goto LABEL_89;
        }
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v79 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
        {
          v91 = v10;
          v92 = a1;
          v93 = 2764;
          goto LABEL_172;
        }
LABEL_89:
        v75 = a1;
        if ((v14 & 1) != 0)
          goto LABEL_127;
        goto LABEL_126;
      }
      v67 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFF0);
      v68 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v45 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v69 = *(_DWORD *)(v68 + 16);
      if (v68)
        v70 = v69 == 11;
      else
        v70 = 0;
      v71 = !v70;
      if (v11)
      {
        if ((v71 & 1) != 0)
        {
          if (v68 && v69 == 44)
          {
            v72 = v45;
            v73 = sub_22F114198(*(_QWORD *)(v68 + 24));
            v44 = a8;
            if ((*(_BYTE *)(v73 + 74) & 1) != 0 || (v45 = v72, *(_QWORD *)(v73 + 128) > 7uLL))
            {
              v74 = sub_22F114198(*(_QWORD *)(v68 + 24));
              v45 = v72;
              v44 = a8;
              if ((*(_BYTE *)(v74 + 76) & 0x80) == 0)
                goto LABEL_122;
            }
          }
          else if (v69 == 9)
          {
            goto LABEL_122;
          }
        }
        else if (((v69 >> 19) & 0x1FE) - 166 < 0x14)
        {
          goto LABEL_122;
        }
        v86 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v67 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v86 == 39)
          goto LABEL_122;
        v87 = v45;
        v88 = sub_22F10E0EC(*v67);
        v44 = a8;
        if (v88)
        {
          v45 = v87;
          if ((v86 & 0xFF800FF) != 0x6A8000B)
            goto LABEL_122;
          v89 = *(_QWORD *)(*(_QWORD *)(a1[11] + 15088) + *(_QWORD *)(**(_QWORD **)(a1[11] + 15088) - 24) + 88);
          v90 = llvm::APFloatBase::x87DoubleExtended((llvm::APFloatBase *)v88);
          v45 = v87;
          v44 = a8;
          if (v89 != v90)
            goto LABEL_122;
        }
        v91 = v10;
        v92 = a1;
        v93 = 2765;
        goto LABEL_172;
      }
      if ((v71 & 1) == 0)
      {
        if (((v69 >> 19) & 0x1FE) - 166 < 0x14)
          goto LABEL_122;
        goto LABEL_157;
      }
      if (!v68 || v69 != 44)
      {
        if (v69 == 9)
          goto LABEL_122;
        goto LABEL_157;
      }
      v76 = v45;
      v77 = sub_22F114198(*(_QWORD *)(v68 + 24));
      if ((*(_BYTE *)(v77 + 74) & 1) == 0 && *(_QWORD *)(v77 + 128) <= 7uLL
        || (v78 = sub_22F114198(*(_QWORD *)(v68 + 24)), v45 = v76, v44 = a8, (*(_BYTE *)(v78 + 76) & 0x80) != 0))
      {
LABEL_157:
        v91 = v10;
        v92 = a1;
        v93 = 2763;
LABEL_172:
        sub_22E8FCA40(v92, v91, v93, 0, (uint64_t)&v196);
        v50 = (void **)sub_22E894E38((uint64_t)&v196, &v202);
        v211 = *(void ***)(v166 + 8);
        goto LABEL_42;
      }
LABEL_122:
      v75 = a1;
      v43 = a5;
      if (!v14)
      {
LABEL_126:
        v101 = v45;
        v102 = sub_22F111968(&v195, v75[11]);
        v45 = v101;
        v44 = a8;
        v43 = a5;
        if ((v102 & 1) != 0)
          goto LABEL_127;
        v126 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v195 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v127 = *(_DWORD *)(v126 + 16);
        if (v126 && v127 == 11)
        {
          if (((v127 >> 19) & 0x1FF) - 166 < 0x35)
            goto LABEL_127;
        }
        else if (v126 && v127 == 44)
        {
          v128 = sub_22F114198(*(_QWORD *)(v126 + 24));
          v45 = v101;
          v44 = a8;
          v43 = a5;
          if ((*(_BYTE *)(v128 + 74) & 1) != 0 || *(_QWORD *)(v128 + 128) > 7uLL)
            goto LABEL_127;
        }
        else
        {
          v129 = v127 > 0x27u;
          v130 = (1 << v127) & 0x8180001600;
          if (!v129 && v130 != 0)
            goto LABEL_127;
        }
        v53 = v203;
        v54 = v75;
        v55 = 2769;
LABEL_49:
        sub_22E8FCA40(v54, v53, v55, 0, (uint64_t)&v196);
        v56 = v166;
        v211 = *(void ***)(v166 + 8);
        v57 = &v196;
LABEL_70:
        v51 = sub_22E8901B8((uint64_t)v57, (uint64_t *)&v211);
        v52 = v56;
        goto LABEL_71;
      }
      v94 = *v67;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v67 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      {
        v95 = v45;
        sub_22F0D5A50(v166);
        v97 = v96;
        v98 = sub_22F10ACF8(v94);
        v99 = v97;
        v196 = &unk_24FAB6EF8;
        LODWORD(v197) = 3591;
        v37 = 1;
        v100 = sub_22EE8B0B0((uint64_t)a1, v99, v98);
        v45 = v95;
        v44 = a8;
        v43 = a5;
        if ((v100 & 1) != 0)
          return v37;
      }
LABEL_127:
      v103 = v45 & 0xFFFFFFFFFFFFFFF0;
      v104 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v104 & 8) != 0 && ((*(_DWORD *)((v104 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 6) & 7u) - 2 <= 2)
      {
        sub_22E8FCA40(v75, v203, 0xA59u, 0, (uint64_t)&v196);
        v51 = sub_22E8901B8((uint64_t)&v196, (uint64_t *)&v194);
        sub_22F0D4E74(v166);
        v211 = v105;
        v66 = (uint64_t *)&v211;
        goto LABEL_72;
      }
      v106 = v45 & 0xFFFFFFFFFFFFFFFALL;
      v194 = v45 & 0xFFFFFFFFFFFFFFFALL;
      v107 = v178;
      v108 = v180;
      if ((v180 | v178 | v17 | v175) == 1)
      {
        v109 = (unint64_t *)(v75[11] + 16392);
        v110 = a6;
        v111 = v185;
      }
      else
      {
        v112 = v45 & 0xFFFFFFFFFFFFFFFALL;
        v110 = a6;
        v111 = v185;
        if ((v18 | v169) != 1)
          goto LABEL_135;
        v109 = (unint64_t *)(v75[11] + 16400);
      }
      v112 = *v109;
LABEL_135:
      v170 = v106;
      v162 = v112;
      v114 = v111 < 0xB || v202 != 0 || (_DWORD)v163 == 0;
      v115 = v114;
      v183 = v115;
      v116 = &v194;
      if (!v114)
        v116 = v165;
      v176 = *v116;
      v211 = &v213;
      v212 = 0x500000000;
      if (v44 == 1)
      {
        v213 = *v43;
        v117 = 1;
        LODWORD(v212) = 1;
        v118 = 3;
        v119 = 2;
        v120 = 32;
        v121 = 24;
        switch(v25)
        {
          case 0u:
          case 1u:
            goto LABEL_176;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
            goto LABEL_175;
          case 6u:
            v118 = 4;
            v120 = 40;
            v122 = (void **)v43[2];
            v117 = 1;
            v121 = 32;
            v119 = 3;
            v123 = 3;
            goto LABEL_174;
          case 7u:
            v118 = 5;
            v120 = 48;
            v122 = (void **)v43[4];
            v214 = v43[2];
            v117 = 3;
            v121 = 40;
            v119 = 1;
            v123 = 4;
LABEL_174:
            (&v211)[v123] = v122;
LABEL_175:
            *(void ***)((char *)&v211 + v121) = (void **)v43[v119];
            v121 = v120;
            LODWORD(v119) = v118;
LABEL_176:
            *(void ***)((char *)&v211 + v121) = (void **)v43[v117];
            LODWORD(v212) = v119;
            goto LABEL_177;
          case 8u:
            v214 = v43[2];
            v215 = *((_OWORD *)v43 + 2);
            v216 = v43[1];
            LODWORD(v212) = 5;
            v146 = v43[3];
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v211[v212] = v146;
            v124 = v212 + 1;
            LODWORD(v212) = v212 + 1;
            goto LABEL_150;
          default:
            goto LABEL_177;
        }
      }
      sub_22E5223E0((uint64_t)&v211, v43, &v43[v110]);
      v124 = v212;
LABEL_150:
      v107 = v178;
      v108 = v180;
      if (v124)
      {
LABEL_177:
        v132 = 0;
        v133 = 0;
        v134 = dword_22F468CEC[v171] + 1;
        v181 = v108 | v186;
        v179 = v173 | v107;
        v174 = &v196;
        while (1)
        {
          if (v133 >= v134)
          {
            v135 = *(_QWORD *)(v75[11] + 16480);
          }
          else
          {
            switch(v133)
            {
              case 0u:
                sub_22E979D8C((uint64_t)v75, (unsigned __int8 *)v211[v132], v203);
                goto LABEL_184;
              case 1u:
                if (v186)
                {
                  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v103 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
                  {
                    v135 = sub_22EF5B0AC(v75[11], *(_DWORD *)(*(_QWORD *)(v75[11] + 15088)+ *(_QWORD *)(**(_QWORD **)(v75[11] + 15088) - 24)+ 120));
                    break;
                  }
LABEL_192:
                  v135 = v170;
                  break;
                }
                if ((v181 & 1) != 0)
                  goto LABEL_192;
                if (v179)
                {
LABEL_194:
                  if ((v183 & 1) == 0)
                    sub_22E979D8C((uint64_t)v75, (unsigned __int8 *)v211[v132], v203);
                  v135 = v176;
                }
                else
                {
                  v172 = v103;
                  v139 = (unsigned __int8 *)v211[v132];
                  sub_22E979D8C((uint64_t)v75, v139, v203);
                  v140 = *(_QWORD *)(*((_QWORD *)v139 + 1) & 0xFFFFFFFFFFFFFFF0);
                  if ((v140 && *(_BYTE *)(v140 + 16) == 39
                     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v140 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
                     && (v140 = sub_22F10CF48(v140)) != 0)
                    && (v141 = *(_QWORD *)((*(_QWORD *)(v140 + 32) & 0xFFFFFFFFFFFFFFF0) + 8), (v141 & 8) != 0))
                  {
                    v142 = *(_DWORD *)((v141 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
                  }
                  else
                  {
                    v142 = 0;
                  }
                  v143 = v75[11];
                  v144 = *(_QWORD *)v172;
                  if ((*(_BYTE *)(*(_QWORD *)v172 + 8) & 0xF) != 0)
                    v144 = (unint64_t)sub_22F10D2BC(v170);
                  v145 = sub_22EF5DD84(v143, v144 & 0xFFFFFFFFFFFFFFF0, v142);
                  v163 = v163 & 0xFFFFFFFF00000000 | v174 & 0xE0;
                  v135 = sub_22EF5B848(v143, v145, v174 & 0xE0);
                  LODWORD(v174) = v174 & 0xFFFFFFE0;
                  v75 = a1;
                  v103 = v172;
                }
                break;
              case 2u:
                goto LABEL_194;
              case 3u:
                v135 = *(_QWORD *)(v75[11] + 16400);
                break;
              default:
                v135 = 0;
                break;
            }
          }
          v136 = v75[11];
          v197 = 0;
          v198 = 0;
          v199 = 0;
          LODWORD(v196) = 1;
          v137 = sub_22EF60188(v136, v135);
          v197 = 0;
          v198 = v137;
          v200 = 0;
          v138 = sub_22EC45014(v75, &v196, 0, v211[v132], 0, 0);
          if ((v138 & 1) != 0)
            break;
          v211[v132] = (void *)(v138 & 0xFFFFFFFFFFFFFFFELL);
LABEL_184:
          v132 = v133 + 1;
          v133 = v132;
          if ((_DWORD)v132 == (_DWORD)v212)
            goto LABEL_151;
        }
        v37 = 1;
        goto LABEL_208;
      }
LABEL_151:
      v204 = &v206;
      v206 = v166;
      v205 = 0x500000001;
      switch(v25)
      {
        case 0u:
        case 1u:
          v207 = v211[1];
          v125 = 2;
          goto LABEL_215;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          v207 = v211[2];
          v208 = v211[1];
          v125 = 3;
          goto LABEL_215;
        case 6u:
          v207 = v211[3];
          v208 = v211[1];
          v209 = v211[2];
          v125 = 4;
          goto LABEL_215;
        case 7u:
          v207 = v211[3];
          v208 = v211[1];
          v209 = v211[4];
          v210 = v211[2];
          v125 = 5;
          goto LABEL_215;
        case 8u:
          v147 = v211[5];
          v207 = v211[4];
          v208 = v211[1];
          v209 = v147;
          v210 = v211[2];
          LODWORD(v205) = 5;
          v148 = (uint64_t)v211[3];
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v204[v205] = v148;
          v75 = a1;
          v125 = v205 + 1;
LABEL_215:
          LODWORD(v205) = v125;
          v13 = v125 >= 2;
          v149 = v167 ^ 1;
          if (!v13)
            v149 = 1;
          if ((v149 & 1) != 0)
            goto LABEL_219;
          sub_22F00905C(v204[1], v75[11], 0, (uint64_t)&v191);
          if (!v193)
            goto LABEL_219;
          v158 = v191;
          if (v192 > 0x40)
            v159 = *v191;
          else
            v159 = (uint64_t)((_QWORD)v191 << -(char)v192) >> -(char)v192;
          if (v159 > 5)
            goto LABEL_254;
          if (a7 > 0x34)
            goto LABEL_258;
          if (((1 << a7) & 0x800200000C002) != 0)
          {
            if ((v159 - 5) >= 0xFFFFFFFE)
              goto LABEL_254;
LABEL_258:
            if (v192 < 0x41)
              goto LABEL_219;
            goto LABEL_259;
          }
          if (((1 << a7) & 0x10004000030004) == 0 || v159 > 4 || ((1 << v159) & 0x16) == 0)
            goto LABEL_258;
LABEL_254:
          sub_22F0D5A50(v204[1]);
          sub_22E8FCA40(v75, v160, 0x1857u, 0, (uint64_t)&v196);
          sub_22F0D4E74(v204[1]);
          v190 = v161;
          sub_22E8906A0((uint64_t)&v196, &v190);
          sub_22E903BEC((unsigned int *)&v196);
          if (!v193 || v192 < 0x41)
            goto LABEL_219;
          v158 = v191;
LABEL_259:
          if (v158)
            MEMORY[0x2348A0E84](v158, 0x1000C8000313F17);
LABEL_219:
          if (a7 - 37 < 0xC)
            v150 = 1;
          else
            v150 = 2 * (v185 < 0xB);
          sub_22F245688(v150, &v190);
          if (v190)
          {
            v151 = (uint64_t)a5[a6 - 1];
            sub_22F00905C(v151, v75[11], 0, (uint64_t)&v191);
            if (v193)
            {
              if (((*(uint64_t (**)(void))(*(_QWORD *)v190 + 24))() & 1) == 0)
              {
                sub_22F0D5A50(v151);
                sub_22E8FCA40(a1, v152, 0xAC9u, 0, (uint64_t)&v196);
                sub_22F0D4E74(v151);
                v189 = v153;
                sub_22E8906A0((uint64_t)&v196, &v189);
                sub_22E903BEC((unsigned int *)&v196);
              }
              if (v193 && v192 >= 0x41 && v191)
                MEMORY[0x2348A0E84](v191, 0x1000C8000313F17);
            }
            v154 = v205;
            if (v205 >= HIDWORD(v205))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v154 = v205;
            }
            v204[v154] = v151;
            LODWORD(v205) = v205 + 1;
            v155 = v190;
            v190 = 0;
            v75 = a1;
            if (v155)
              (*(void (**)(uint64_t))(*(_QWORD *)v155 + 8))(v155);
          }
          v37 = sub_22E3CD3D4(v75[11] + 2032, 88, 3);
          sub_22F3C3184(v37, v203, (uint64_t)v204, v205, v162, a7, a4);
          if (a7 <= 0x34 && ((1 << a7) & 0x18006000000006) != 0 && sub_22F36F6E0(v75[11], v37))
          {
            sub_22E8FCA40(v75, *(_DWORD *)(v37 + 76), 0xAC8u, 0, (uint64_t)&v196);
            v156 = 0;
            if (a7 != 1 && a7 != 37)
              v156 = a7 != 51;
            LODWORD(v191) = v156;
            sub_22E8900C4((uint64_t)&v196, (int *)&v191);
            sub_22E903BEC((unsigned int *)&v196);
          }
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v103 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 9)
          {
            sub_22EFF605C(v166);
            sub_22E8FCA40(v75, v157, 0xAC0u, 0, (uint64_t)v188);
            sub_22E903BEC(v188);
            v37 = 1;
          }
          if (v204 != &v206)
            free(v204);
LABEL_208:
          if (v211 != &v213)
            free(v211);
          return v37;
        default:
          goto LABEL_219;
      }
  }
}

uint64_t sub_22E984638(_QWORD *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v3;
  uint64_t v4;
  int v5;
  unsigned __int8 *v6;
  unint64_t v7;
  uint64_t v8;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v3 = sub_22EFFBBCC(a2);
  v4 = (uint64_t)v3;
  v5 = *v3;
  v6 = v3;
  if ((v5 == 225 || v5 == 204 && (v6 = (unsigned __int8 *)*((_QWORD *)v3 + 2)) != 0)
    && (*(_DWORD *)v6 & 0x140000 | 0x80000) == 0x80000)
  {
    v7 = sub_22EF5B848(a1[11], *(_QWORD *)(a1[11] + 16408) | 1, 0);
    v8 = a1[11];
    v16 = 0;
    v13 = 1;
    v14 = 0;
    v15 = sub_22EF60188(v8, v7);
    v17 = 0;
    return sub_22EC45014(a1, &v13, 0, v6, 0, 0);
  }
  else
  {
    sub_22F0D5A50((uint64_t)v3);
    sub_22E8FCA40(a1, v10, 0x1165u, 0, (uint64_t)&v13);
    sub_22F0D4E74(v4);
    v12 = v11;
    sub_22E8906A0((uint64_t)&v13, &v12);
    sub_22E903BEC(&v13);
    return 1;
  }
}

uint64_t sub_22E98473C(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[48];

  v4 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
  if ((*(_DWORD *)(v4 + 28) & 0x7Eu) - 52 >= 6)
    v5 = 0;
  else
    v5 = v4;
  sub_22E99E5D4(*(_QWORD *)(a1 + 88), **(_QWORD **)(v5 + 120), *(_QWORD *)(**(_QWORD **)(v5 + 120) + 48), (uint64_t)v8);
  v6 = sub_22EC45014(a1, v8, 0, *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24)), 0, 0);
  if ((v6 & 1) == 0)
    *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24)) = v6 & 0xFFFFFFFFFFFFFFFELL;
  return v6 & 1;
}

uint64_t sub_22E9847E8(_QWORD *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  __int16 v7;
  int v8;
  BOOL v9;
  unsigned int v10;
  BOOL v11;
  BOOL v12;
  int v13;
  unsigned int *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  uint64_t result;
  uint64_t v22;
  char v23;
  _BYTE v24[96];
  _BYTE v25[96];
  _BYTE v26[96];

  v6 = a1[27];
  v7 = *(_WORD *)(v6 + 8);
  v8 = v7 & 0x7F;
  if (v6)
    v9 = v8 == 1;
  else
    v9 = 0;
  if (v9)
  {
    if ((*(_BYTE *)(v6 + 9) & 0x20) == 0)
      goto LABEL_29;
    v15 = *(_QWORD *)(v6 + 32);
    LODWORD(v16) = *(_DWORD *)(v6 + 40);
    if (a3)
      goto LABEL_26;
    return 0;
  }
  v10 = (v7 & 0x7E) - 58;
  if (v6)
    v11 = v10 >= 0xFFFFFFFA;
  else
    v11 = 0;
  if (v11)
  {
    v17 = sub_22EFBF68C(v6 - 72);
    v15 = *(_QWORD *)(v6 + 48);
    v16 = *(_QWORD *)(*(_QWORD *)(v6 - 24) & 0xFFFFFFFFFFFFFFF0);
    if (v16)
      v18 = *(_BYTE *)(v16 + 16) == 26;
    else
      v18 = 0;
    if (!v18)
    {
      v22 = *(_QWORD *)(v6 + 48);
      v23 = v17;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
      {
        LODWORD(v16) = 0;
        v15 = v22;
        goto LABEL_24;
      }
      v16 = sub_22F10CF48(v16);
      v17 = v23;
      v15 = v22;
      if (!v16)
      {
LABEL_24:
        if ((v17 & 1) == 0)
          goto LABEL_29;
        if (a3)
          goto LABEL_26;
        return 0;
      }
    }
    LODWORD(v16) = (unsigned __int16)(*(_QWORD *)(v16 + 16) >> 38);
    goto LABEL_24;
  }
  if (v6)
    v12 = v8 == 24;
  else
    v12 = 0;
  if (!v12)
  {
    sub_22F0D5A50(a2);
    if (v8 == 2)
    {
      sub_22E8FCA40(a1, v13, 0x13FBu, 0, (uint64_t)v26);
      v14 = (unsigned int *)v26;
    }
    else
    {
      sub_22E8FCA40(a1, v13, 0x13FDu, 0, (uint64_t)v25);
      v14 = (unsigned int *)v25;
    }
    goto LABEL_30;
  }
  if ((*(_BYTE *)(v6 + 10) & 4) == 0)
  {
LABEL_29:
    sub_22F0D5A50(a2);
    sub_22E8FCA40(a1, v20, 0x13FCu, 0, (uint64_t)v24);
    v14 = (unsigned int *)v24;
LABEL_30:
    sub_22E903BEC(v14);
    return 1;
  }
  v15 = *(_QWORD *)(v6 + 48);
  LODWORD(v16) = *(_DWORD *)(v6 + 56);
  if (!a3)
    return 0;
LABEL_26:
  if ((_DWORD)v16)
    v19 = *(_QWORD *)(v15 + 8 * v16 - 8);
  else
    v19 = 0;
  result = 0;
  *a3 = v19;
  return result;
}

BOOL sub_22E9849B0(uint64_t a1, uint64_t a2, unint64_t a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, int a8, int a9, uint64_t a10, uint64_t a11)
{
  int v19;
  uint64_t *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  void *__p;
  _BYTE v54[17];
  uint64_t v55;
  unsigned int v56;
  char v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  int v61;
  uint64_t *v62;
  uint64_t v63;
  _QWORD v64[6];

  v19 = a10;
  v64[4] = *MEMORY[0x24BDAC8D0];
  v20 = *(uint64_t **)(a1 + 104);
  if (a7 == 9)
  {
    sub_22F41A4A0(*(_QWORD *)(a1 + 104));
    sub_22F1CCBD0((uint64_t)v20, 0x19BCu, 4, v19);
    sub_22F1CCCF4((uint64_t)v20, 0, "format", 6uLL, 4, 0);
  }
  if (a3 <= a5)
  {
    sub_22E8FCA40((_QWORD *)a1, a9, 0x1A5Bu, 0, (uint64_t)&v58);
    sub_22E8906A0((uint64_t)&v58, &a10);
    sub_22E903BEC((unsigned int *)&v58);
    v36 = 0;
    goto LABEL_40;
  }
  v48 = a6;
  v21 = a11;
  v47 = a5;
  v22 = sub_22EFFBBCC(*(unsigned __int8 **)(a2 + 8 * a5));
  v61 = -1;
  v62 = v64;
  v63 = 0x400000000;
  v56 = 64;
  v55 = 0;
  v57 = 0;
  v42 = v21;
  v23 = v48;
  v46 = (uint64_t)v22;
  v24 = sub_22E9851AC(a1, v22, a2, a3, a4, a5, v48, a7, a8, 1u, v42, (uint64_t)&v61, (uint64_t)&v55, 0);
  if (v56 >= 0x41 && v55)
    MEMORY[0x2348A0E84](v55, 0x1000C8000313F17);
  if ((v61 & 0x80000000) == 0)
  {
    v25 = *(_QWORD *)(a2 + 8 * (v61 + v48));
    if (v25)
    {
      sub_22F0D5A50(v25);
      v27 = v26;
      if (!sub_22E90086C(*(_QWORD **)(a1 + 112), v26))
      {
        v45 = v27;
        v28 = *(_QWORD *)(a1 + 88) + 2128;
        v58 = 0;
        v59 = v28;
        v60 = 6907;
        v29 = v62;
        if ((_DWORD)v63)
        {
          v43 = v20;
          v44 = v19;
          v30 = 0;
          v31 = 8 * v63;
          do
          {
            sub_22F0D4E74(*v29);
            v33 = v32;
            if (!v30)
            {
              v30 = sub_22E3B8AAC(v28);
              v58 = v30;
            }
            sub_22E4D6448(v30 + 336, v33, 1);
            ++v29;
            v31 -= 8;
          }
          while (v31);
          v29 = v62;
          v20 = v43;
          v19 = v44;
          v23 = v48;
        }
        v34 = *v29;
        sub_22F0D4E74(*v29);
        sub_22E99EA90((_QWORD *)a1, 1, v34, (uint64_t)&v58, v45, 0, v35);
        if (v58 && v59)
          sub_22E3BB10C(v59, v58);
      }
    }
  }
  if (v24)
  {
    v36 = v24 == 2;
    goto LABEL_38;
  }
  if (a7 == 3)
    goto LABEL_37;
  sub_22F0D5A50(*(_QWORD *)(a2 + 8 * v47));
  if (a7 == 2)
  {
    v38 = v37;
    if (sub_22E90086C(*(_QWORD **)(a1 + 112), v37))
      goto LABEL_37;
  }
  else
  {
    v38 = v37;
  }
  if (a3 == v23)
  {
    sub_22E8FCA40((_QWORD *)a1, v38, 0x19BDu, 0, (uint64_t)&v58);
    sub_22F0D4E74(v46);
    v49 = v39;
    sub_22E8906A0((uint64_t)&v58, &v49);
    sub_22E903BEC((unsigned int *)&v58);
    if (a7 - 5 >= 2)
    {
      if (a7 == 2)
      {
        sub_22E8FCA40((_QWORD *)a1, v38, 0x1607u, 0, (uint64_t)&v58);
        v52 = 0;
        v51 = 0;
        v49 = v38 | (v38 << 32);
        v50 = 0;
        *(_QWORD *)v54 = 0;
        *(_QWORD *)&v54[7] = 0;
        strcpy((char *)&__p, "@\"%@\", ");
        *(_WORD *)&v54[15] = 7;
LABEL_34:
        sub_22E890748((uint64_t)&v58, &v49);
        if ((v54[15] & 0x80000000) != 0)
          operator delete(__p);
        goto LABEL_36;
      }
      v36 = 0;
      if (a7 != 1)
        goto LABEL_38;
    }
    sub_22E8FCA40((_QWORD *)a1, v38, 0x1607u, 0, (uint64_t)&v58);
    v52 = 0;
    v51 = 0;
    v49 = v38 | (v38 << 32);
    v50 = 0;
    *(_WORD *)&v54[14] = 1536;
    *(_QWORD *)&v54[6] = 0;
    HIBYTE(__p) = 0;
    *(_WORD *)v54 = 0;
    *(_DWORD *)&v54[2] = 0;
    strcpy((char *)&__p, "\"%s\", ");
    v54[16] = 0;
    goto LABEL_34;
  }
  sub_22E8FCA40((_QWORD *)a1, v38, 0x19BCu, 0, (uint64_t)&v58);
  sub_22F0D4E74(v46);
  v49 = v40;
  sub_22E8906A0((uint64_t)&v58, &v49);
LABEL_36:
  sub_22E903BEC((unsigned int *)&v58);
LABEL_37:
  v36 = 0;
LABEL_38:
  if (v62 != v64)
    free(v62);
LABEL_40:
  if (a7 == 9)
    sub_22F1CBE18(v20, v19);
  return v36;
}

uint64_t sub_22E984E5C(uint64_t a1)
{
  unsigned int v1;
  BOOL v2;
  unsigned int v3;
  _QWORD *v4;
  int v6;

  v1 = *(_DWORD *)(a1 + 8);
  if (!*(_BYTE *)(a1 + 12))
  {
    v3 = v1 - 1;
    v4 = (_QWORD *)a1;
    if (v1 >= 0x41)
      v4 = (_QWORD *)(*(_QWORD *)a1 + 8 * (v3 >> 6));
    if (((*v4 >> v3) & 1) != 0)
      return 0;
  }
  if (v1 > 0x40)
    v2 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)a1) == v1;
  else
    v2 = *(_QWORD *)a1 == 0;
  v6 = v2;
  return v6 ^ 1u;
}

uint64_t sub_22E984ED4(uint64_t a1)
{
  unsigned __int8 *v3;
  uint64_t v4;
  _QWORD *v5;
  llvm::APInt *v6;
  unsigned int v7;
  BOOL v8;
  unsigned int v9;
  unsigned int v10;
  _QWORD *v11;
  _QWORD *v12;
  unsigned int v13;
  _QWORD *v14;
  unsigned int v15;

  if (*(_BYTE *)(a1 + 12))
    goto LABEL_2;
  v9 = *(_DWORD *)(a1 + 8);
  v10 = v9 - 1;
  v11 = (_QWORD *)a1;
  if (v9 >= 0x41)
    v11 = (_QWORD *)(*(_QWORD *)a1 + 8 * (v10 >> 6));
  if (((*v11 >> v10) & 1) == 0)
  {
LABEL_2:
    if ((sub_22E8BAD7C(a1, 256) & 1) != 0)
      return 1;
    while (1)
    {
      v13 = *(_DWORD *)(a1 + 8);
      v3 = (unsigned __int8 *)a1;
      if (v13 < 0x41)
        break;
      v3 = (unsigned __int8 *)&v12;
      llvm::APInt::initSlowCase((llvm::APInt *)&v12, (const llvm::APInt *)a1);
      v4 = v13;
      if (v13 <= 0x40)
        break;
      *v12 = *(unsigned __int8 *)v12;
      v5 = v12;
      bzero(v12 + 1, (((unint64_t)(v4 + 63) >> 3) - 8) & 0xFFFFFFF8);
      v7 = v13;
      v15 = v13;
      v14 = v5;
      v13 = 0;
      if (v15 < 0x41)
        goto LABEL_7;
      if (v7 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v14) > 0x40)
      {
        if (!v5)
          return 0;
        v8 = 1;
      }
      else
      {
        v8 = *v5 != 0;
      }
      MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
      if (v13 >= 0x41)
      {
        if (v12)
          MEMORY[0x2348A0E84](v12, 0x1000C8000313F17);
      }
      if (v8)
        return 0;
LABEL_8:
      v6 = sub_22F311890((llvm::APInt *)a1);
      if (sub_22E8BAD7C((uint64_t)v6, 256))
        return 1;
    }
    v5 = (_QWORD *)*v3;
    v12 = v5;
    v13 = 0;
LABEL_7:
    if (v5)
      return 0;
    goto LABEL_8;
  }
  return 0;
}

unint64_t sub_22E98505C(uint64_t a1, char **a2, _DWORD *a3)
{
  char *v5;
  const char *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char *v11;
  unint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  int v18;
  char *v20;
  int v21;
  char v22;

  v22 = 0;
  v21 = 0;
  v5 = *a2;
  v6 = *a2 + 1;
  *a2 = (char *)v6;
  v7 = *v5;
  if (v7 == 87)
  {
    v20 = 0;
    v10 = strtoul(v6, &v20, 10);
    v11 = v20;
    *a2 = v20;
    v12 = (unint64_t *)(a1 + 18032);
    if (v10 == 512)
      v12 = (unint64_t *)(a1 + 18024);
    v13 = *v12;
    while (1)
    {
      v14 = v13 | 1;
      v15 = v11 + 1;
      do
      {
        v9 = v13;
        *a2 = v15;
        v16 = *(v15++ - 1);
        v13 = v14;
      }
      while (v16 == 67);
      if (v16 != 42)
        break;
      v13 = sub_22EF5B848(a1, v9, 0);
      v11 = *a2;
    }
    *a2 = v15 - 2;
    return v9;
  }
  if (v7 == 105)
  {
    v20 = 0;
    v18 = strtoul(v6, &v20, 10);
    *a2 = v20;
    *a3 = v18;
    return *(_QWORD *)(a1 + 16480);
  }
  if (v7 != 86)
  {
    *a2 = v5;
    sub_22EF723E4(a2, a1, (uint64_t)&v21, &v22);
    return v8;
  }
  return sub_22F36B7E4(a1, *(_QWORD *)(a1 + 16512), 16, 2);
}

uint64_t sub_22E9851AC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, unsigned int a7, unsigned int a8, int a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14)
{
  uint64_t v14;
  unsigned __int8 *v16;
  unsigned int v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  _BOOL4 v22;
  unsigned __int8 **v23;
  char v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 **v30;
  char v32;
  _BOOL4 v33;
  BOOL v34;
  char v35;
  uint64_t v36;
  int v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  int v44;
  __n128 v45;
  char v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  unsigned __int8 *v59;
  __n128 v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  __n128 v66;
  uint64_t *v67;
  uint64_t *v68;
  char j;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t *i;
  uint64_t v82;
  unsigned int v83;
  unsigned int v84;
  _QWORD *v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  unint64_t v90;
  unint64_t v91;
  unsigned __int8 *v92;
  size_t v93;
  unint64_t v94;
  unint64_t v95;
  size_t *v96;
  size_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  _BYTE *v101;
  BOOL v102;
  uint64_t v103;
  unsigned __int8 **v104;
  uint64_t v105;
  int v106;
  unsigned __int8 *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  __n128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unsigned int v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  _BOOL4 v140;
  uint64_t v141;
  _BOOL4 v142;
  __int16 v143;
  int v144;
  int v145;
  int v146;
  char v147;
  int v148;
  int v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  unsigned int v154;
  uint64_t v155;
  unsigned int v156;
  BOOL v157;
  uint64_t v158;
  __int16 v159;
  unsigned int v160;
  uint64_t v161;
  int v162;
  int v164;
  uint64_t v170;
  unsigned int v171;
  char v172;
  uint64_t v173;
  unsigned int v174;
  char v175;
  uint64_t v176;
  unsigned int v177;
  char v178;
  uint64_t v179;
  unsigned int v180;
  char v181;
  uint64_t v182;
  unsigned int v183;
  char v184;
  uint64_t v185;
  unsigned int v186;
  char v187;
  uint64_t v188;
  unsigned int v189;
  char v190;
  uint64_t v191;
  unsigned int v192;
  char v193;
  uint64_t v194;
  unsigned int v195;
  char v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unsigned int v201;
  char v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  void **v206[7];

  v206[4] = *(void ***)MEMORY[0x24BDAC8D0];
  if ((*(_DWORD *)a2 & 0x18000) != 0)
    return 0;
  v16 = a2;
  LOBYTE(v164) = a14;
  while (1)
  {
    v16 = sub_22EFFBBCC(v16);
    if (sub_22EFFBE1C((unint64_t)v16, *(_QWORD *)(a1 + 88), 2))
      return 1;
    v18 = *v16;
    if (v18 <= 0xC7)
      break;
    if (*v16 <= 0xD7u)
    {
      if (v18 == 210)
      {
        v16 = (unsigned __int8 *)*((_QWORD *)v16 + 2);
        if (!v16)
          return 0;
        goto LABEL_89;
      }
      if (v18 != 200)
      {
        v50 = a13;
        if (v18 != 204)
          return 0;
        v51 = *((_QWORD *)v16 + 2);
        if (!v51)
          return 0;
LABEL_132:
        if (!*(_BYTE *)(v50 + 12))
        {
          v83 = *(_DWORD *)(v50 + 8);
          v84 = v83 - 1;
          v85 = (_QWORD *)v50;
          if (v83 >= 0x41)
            v85 = (_QWORD *)(*(_QWORD *)v50 + 8 * (v84 >> 6));
          if (((*v85 >> v84) & 1) != 0)
            return 0;
        }
        if (sub_22E42E8B8(v50, *(unsigned int *)(v51 + 16)))
          return 0;
        llvm::APInt::sextOrTrunc((llvm::APInt *)v50);
        if (DWORD2(v203) > 0x40)
        {
          v62 = *(_QWORD *)v203;
          v197 = v51;
          v198 = v62;
          MEMORY[0x2348A0E84]();
        }
        else
        {
          v62 = (uint64_t)((_QWORD)v203 << -BYTE8(v203)) >> -BYTE8(v203);
          v197 = v51;
          v198 = v62;
        }
        if ((*(_DWORD *)v51 & 0x140000 | 0x80000) == 0x80000)
        {
          v90 = *(_DWORD *)(v51 + 16) * ((*(_DWORD *)v51 >> 21) & 7u);
          if (v90 >= v62)
            v91 = v62;
          else
            v91 = *(_DWORD *)(v51 + 16) * ((*(_DWORD *)v51 >> 21) & 7u);
          v92 = (unsigned __int8 *)(v51 + 4 * *(unsigned int *)(v51 + 4) + v91 + 20);
          v93 = v90 - v91;
          v94 = sub_22EF5C728(*(_QWORD *)(a1 + 88), *(_QWORD *)(v51 + 8));
          if (*(_BYTE *)(v94 + 16) == 2)
            v95 = v94;
          else
            v95 = 0;
          v96 = (size_t *)(v95 + 40);
          if (*(_DWORD *)(v95 + 48) >= 0x41u)
            v96 = (size_t *)*v96;
          v97 = *v96;
          if (*v96 <= 1)
            v98 = 1;
          else
            v98 = *v96;
          v99 = v98 - 1;
          if (v93 >= v99)
            v100 = v99;
          else
            v100 = v93;
          if (a14 && !sub_22F3EFE7C(v92, &v92[v100], *(_QWORD *)(a1 + 72), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088)))
            return 2;
          if (v97 > v93 || v97 && (v101 = memchr(v92, 0, v97)) != 0 && v101 - v92 != -1)
          {
            if (v100)
              v102 = 1;
            else
              v102 = (_DWORD)a4 == a7;
            if (!v102)
            {
              v111 = *(_QWORD *)(a3 + 8 * a6);
              v112 = *(_QWORD *)(a1 + 88) + 2128;
              *(_QWORD *)&v203 = 0;
              *((_QWORD *)&v203 + 1) = v112;
              v113 = 6531;
              goto LABEL_235;
            }
            if (a8 <= 9)
            {
              v103 = a4 - a7;
              if (((1 << a8) & 0x3C6) != 0)
              {
                v104 = (unsigned __int8 **)sub_22E99EDC0((uint64_t)&v203, a1, (uint64_t)&v197, (uint64_t)v16, a8, a7, v103, (uint64_t)v92, a5, a3, a4, a6, a10, a9, a11, a12);
                *(_QWORD *)&v203 = &off_24FAB7090;
                if ((sub_22F0C5938(v104, v92, &v92[v100], *(_QWORD *)(a1 + 72), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088), a8 == 6) & 1) == 0)sub_22E99EBAC((unint64_t)&v203);
                *(_QWORD *)&v203 = &off_24FAB7130;
                goto LABEL_225;
              }
              if (!a8)
              {
                v126 = sub_22E99EDC0((uint64_t)&v203, a1, (uint64_t)&v197, (uint64_t)v16, 0, a7, v103, (uint64_t)v92, a5, a3, a4, a6, a10, a9, a11, a12);
                *(_QWORD *)&v203 = &off_24FAB71D0;
                if ((sub_22F0D2E10(v126, v92, &v92[v100], *(_QWORD *)(a1 + 72), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088)) & 1) == 0)sub_22E99EBAC((unint64_t)&v203);
                *(_QWORD *)&v203 = &off_24FAB7130;
LABEL_225:
                sub_22E54C5D0(v206);
              }
            }
            return 2;
          }
          v111 = *(_QWORD *)(a3 + 8 * a6);
          v110 = *(_QWORD *)(a1 + 88) + 2128;
          *(_QWORD *)&v203 = 0;
          *((_QWORD *)&v203 + 1) = v110;
          v113 = 6910;
LABEL_235:
          LODWORD(v204) = v113;
          v106 = *(_DWORD *)(v197 + 20) + v198;
        }
        else
        {
          v111 = *(_QWORD *)(a3 + 8 * a6);
          v105 = *(_QWORD *)(a1 + 88) + 2128;
          *(_QWORD *)&v203 = 0;
          *((_QWORD *)&v203 + 1) = v105;
          LODWORD(v204) = 6591;
          v106 = *(_DWORD *)(v51 + 20) + v62;
        }
        sub_22F0D4E74((uint64_t)v16);
        sub_22E99EA90((_QWORD *)a1, a10, v111, (uint64_t)&v203, v106, 1, v114);
        if ((_QWORD)v203 && *((_QWORD *)&v203 + 1))
          sub_22E3BB10C(*((unint64_t *)&v203 + 1), v203);
        return 2;
      }
      if ((v16[27] & 1) == 0)
        return 0;
      v76 = *((_QWORD *)v16 + 2);
      if (!v76 || (*(_BYTE *)(v76 + 29) & 1) == 0)
        return 0;
      v78.n128_f64[0] = sub_22EFC8E88(*((_QWORD *)v16 + 2));
      v79 = *(uint64_t **)v77;
      v80 = *(unsigned int *)(v77 + 8);
      i = *(uint64_t **)v77;
      if ((_DWORD)v80)
      {
        v82 = 8 * v80;
        for (i = *(uint64_t **)v77; *(_WORD *)(*i + 32) != 180; ++i)
        {
          v14 = 0;
          v82 -= 8;
          if (!v82)
            return v14;
        }
      }
      if (i == &v79[v80])
        return 0;
      do
      {
        v116 = *v79++;
        v115 = v116;
      }
      while (*(_WORD *)(v116 + 32) != 180);
      if ((*(_QWORD *)(v76 + 56) & 0x20000) != 0)
      {
        v117 = sub_22EFDC9F0(v76);
        if (v117)
        {
          v118 = *(_QWORD *)(v117 + 40);
          v119 = (v118 & 7) != 0 ? 0 : v118 & 0xFFFFFFFFFFFFFFF8;
          v120 = *(_QWORD *)(v119 + 16);
          if (*(_DWORD *)v120 == 8 && *(_QWORD *)(v120 + 16) == 0x656C646E7542534ELL)
          {
            v197 = *(_QWORD *)(v76 + 40);
            v203 = xmmword_24FAB7050;
            v204 = *(_OWORD *)&off_24FAB7060;
            v205 = xmmword_24FAB7070;
            v164 = sub_22F1D3958(&v197, (uint64_t)&v203, 3) | a14;
          }
        }
      }
      v121 = *(_QWORD *)&v16[8 * (*(_DWORD *)(v115 + 36) & 0x3FFFFFFF) + 40 + 8 * ((2 * *(_DWORD *)(v115 + 36)) >> 31)];
      v180 = *(_DWORD *)(a13 + 8);
      if (v180 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v179, (const llvm::APInt *)a13);
      else
        v179 = *(_QWORD *)a13;
      v181 = *(_BYTE *)(a13 + 12);
      BYTE4(v161) = a10;
      LODWORD(v161) = a9;
      v14 = sub_22E9851AC(a1, v121, a3, a4, a5, a6, a7, a8, v78, v161, a11, a12, &v179, (_BYTE)v164);
      if (v180 < 0x41)
        return v14;
      v122 = v179;
      if (!v179)
        return v14;
LABEL_269:
      MEMORY[0x2348A0E84](v122, 0x1000C8000313F17);
      return v14;
    }
    if (v18 != 233)
    {
      if (v18 == 216)
        return 1;
      v50 = a13;
      if (v18 == 225)
      {
        v51 = (uint64_t)v16;
        goto LABEL_132;
      }
      return 0;
    }
    v14 = 0;
    v27 = **((unsigned __int8 **)v16 + 2);
    if (v27 == 107)
      v28 = *((_QWORD *)v16 + 2);
    else
      v28 = 0;
    if ((*(_DWORD *)v16 & 0x7C0000) != 0x100000 || v27 != 107)
      return v14;
    LOWORD(v203) = 0;
    *((_QWORD *)&v203 + 1) = 0;
    v30 = (unsigned __int8 **)(v28 + 24);
    v29 = *(_QWORD *)(v28 + 24);
    LODWORD(v204) = 0;
    v32 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
       || *(_BYTE *)(a1 + 3209) != 0;
    v33 = sub_22F00554C(v29, (uint64_t)&v203, *(_QWORD *)(a1 + 88), 0, v32);
    v34 = v33;
    if (!v33)
      goto LABEL_68;
    v171 = v205;
    if (v205 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v170, (const llvm::APInt *)((char *)&v204 + 8));
    else
      v170 = *((_QWORD *)&v204 + 1);
    v172 = BYTE4(v205);
    sub_22E99E778((_QWORD *)a13, &v170, 5);
    if (v171 >= 0x41 && v170)
      MEMORY[0x2348A0E84](v170, 0x1000C8000313F17);
    v36 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)*v30 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v37 = *(_DWORD *)(v36 + 16);
    if (v36)
      v38 = v37 == 11;
    else
      v38 = 0;
    if (!v38)
    {
      if (v36 && v37 == 44)
      {
        v39 = sub_22F114198(*(_QWORD *)(v36 + 24));
        if ((*(_BYTE *)(v39 + 74) & 1) == 0 && *(_QWORD *)(v39 + 128) <= 7uLL
          || (*(_QWORD *)(sub_22F114198(*(_QWORD *)(v36 + 24)) + 72) & 0x8000000000) != 0)
        {
          goto LABEL_67;
        }
      }
      else if (v37 != 9)
      {
        goto LABEL_67;
      }
LABEL_66:
      v30 = (unsigned __int8 **)(v28 + 16);
      goto LABEL_67;
    }
    if (((*(_DWORD *)(v36 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
      goto LABEL_66;
LABEL_67:
    v16 = *v30;
LABEL_68:
    if (v204 >= 2)
      sub_22EF53BC0((uint64_t *)&v204);
    if (!v34)
      return 0;
LABEL_89:
    if ((*(_DWORD *)v16 & 0x18000) != 0)
      return 0;
  }
  if (*v16 <= 0x8Bu)
  {
    if (v18 != 112)
    {
      if (v18 - 102 < 2)
      {
        LOBYTE(v203) = 0;
        v20 = v18 == 103;
        v41 = 32;
        if (v20)
          v41 = 24;
        v43 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
           || *(_BYTE *)(a1 + 3209) != 0;
        v44 = sub_22F005310(*(unsigned __int8 **)&v16[v41], (uint64_t)&v203, *(_QWORD *)(a1 + 88), v43);
        if ((_BYTE)v203)
          v46 = v44;
        else
          v46 = 0;
        if ((_BYTE)v203)
          v47 = 1;
        else
          v47 = v44 ^ 1;
        if (v47 == 1)
        {
          v48 = 40;
          if (*v16 == 103)
            v48 = 32;
          v49 = *(_QWORD *)&v16[v48];
          v195 = *(_DWORD *)(a13 + 8);
          if (v195 > 0x40)
            llvm::APInt::initSlowCase((llvm::APInt *)&v194, (const llvm::APInt *)a13);
          else
            v194 = *(_QWORD *)a13;
          v196 = *(_BYTE *)(a13 + 12);
          BYTE4(v161) = a10;
          LODWORD(v161) = a9;
          v14 = sub_22E9851AC(a1, v49, a3, a4, a5, a6, a7, a8, v45, v161, a11, a12, &v194, a14);
          if (v195 >= 0x41 && v194)
            MEMORY[0x2348A0E84](v194, 0x1000C8000313F17);
          if ((_DWORD)v14)
            v86 = v46;
          else
            v86 = 1;
          if ((v86 & 1) != 0)
            return v14;
        }
        else
        {
          LODWORD(v14) = 1;
        }
        v87 = 48;
        if (*v16 == 103)
          v87 = 40;
        v88 = *(_QWORD *)&v16[v87];
        v192 = *(_DWORD *)(a13 + 8);
        if (v192 > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v191, (const llvm::APInt *)a13);
        else
          v191 = *(_QWORD *)a13;
        v193 = *(_BYTE *)(a13 + 12);
        LOBYTE(v162) = a14;
        BYTE4(v161) = a10;
        LODWORD(v161) = a9;
        v89 = sub_22E9851AC(a1, v88, a3, a4, a5, a6, a7, a8, v45, v161, a11, a12, &v191, v162);
        if (v192 >= 0x41 && v191)
          MEMORY[0x2348A0E84](v191, 0x1000C8000313F17);
        if ((v47 & (v14 < v89)) != 0)
          return v14;
        else
          return v89;
      }
      if (v18 != 138)
        return 0;
LABEL_137:
      v63 = sub_22EFFA604(*(unsigned __int8 **)&v16[v16[3]]);
      if (!v63)
        return 0;
      v64 = v63;
      if ((*(_DWORD *)(v63 + 28) & 0x7Fu) - 13 > 0x3D)
        return 0;
      v65 = (uint64_t *)sub_22F255ABC(v63);
      v68 = v67;
      v14 = 0;
      for (j = 1; ; j = 0)
      {
        v70 = v65;
        if (v65 >= v68)
        {
          if (v65 == v68)
            break;
          v71 = v68;
          while (*(_WORD *)(*v71 + 32) != 180)
          {
            if (++v71 == v65)
              goto LABEL_261;
          }
          v70 = v65;
        }
        else
        {
          while (*(_WORD *)(*v70 + 32) != 180)
          {
            if (++v70 == v68)
              goto LABEL_261;
          }
          v71 = v68;
        }
        if (v70 == v71)
          break;
        do
        {
          v73 = *v65++;
          v72 = v73;
        }
        while (*(_WORD *)(v73 + 32) != 180);
        v74 = *(_QWORD *)&v16[8 * (((unint64_t)*(unsigned int *)v16 >> 18) & 1)
                            + 8 * (*(_DWORD *)(v72 + 36) & 0x3FFFFFFFu)
                            + 8 * ((2 * *(_DWORD *)(v72 + 36)) >> 31)
                            + ((unint64_t)*(unsigned int *)v16 >> 24)];
        v186 = *(_DWORD *)(a13 + 8);
        if (v186 > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v185, (const llvm::APInt *)a13);
        else
          v185 = *(_QWORD *)a13;
        v187 = *(_BYTE *)(a13 + 12);
        LOBYTE(v162) = a14;
        BYTE4(v161) = a10;
        LODWORD(v161) = a9;
        v75 = sub_22E9851AC(a1, v74, a3, a4, a5, a6, a7, a8, v66, v161, a11, a12, &v185, v162);
        if (v186 >= 0x41 && v185)
          MEMORY[0x2348A0E84](v185, 0x1000C8000313F17);
        v20 = (j & 1) == 0;
        if (v20)
          v14 = v14;
        else
          v14 = v75;
      }
LABEL_261:
      if ((j & 1) == 0)
        return v14;
      if ((*(_DWORD *)(v64 + 28) & 0x7Eu) - 58 < 0xFFFFFFFA)
        return 0;
      v14 = 0;
      if ((sub_22EFC01DC(v64, 0) & 0xFFFFFFFE) != 0x194)
        return v14;
      v125 = *(_QWORD *)&v16[8 * (((unint64_t)*(unsigned int *)v16 >> 18) & 1)
                           + 8
                           + ((unint64_t)*(unsigned int *)v16 >> 24)];
      v183 = *(_DWORD *)(a13 + 8);
      if (v183 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v182, (const llvm::APInt *)a13);
      else
        v182 = *(_QWORD *)a13;
      v184 = *(_BYTE *)(a13 + 12);
      LOBYTE(v162) = a14;
      BYTE4(v161) = a10;
      LODWORD(v161) = a9;
      v14 = sub_22E9851AC(a1, v125, a3, a4, a5, a6, a7, a8, v124, v161, a11, a12, &v182, v162);
      if (v183 < 0x41)
        return v14;
      v122 = v182;
      if (!v182)
        return v14;
      goto LABEL_269;
    }
    if (((*(_DWORD *)v16 >> 18) & 0x3Fu) - 5 > 1)
      return 0;
    LOWORD(v203) = 0;
    *((_QWORD *)&v203 + 1) = 0;
    LODWORD(v204) = 0;
    LOWORD(v197) = 0;
    LODWORD(v199) = 0;
    v19 = *((_QWORD *)v16 + 2);
    v198 = 0;
    v20 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) != 4
       && *(_BYTE *)(a1 + 3209) == 0;
    v21 = !v20;
    v22 = sub_22F00554C(v19, (uint64_t)&v203, *(_QWORD *)(a1 + 88), 0, v21);
    v23 = (unsigned __int8 **)(v16 + 24);
    v25 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
       || *(_BYTE *)(a1 + 3209) != 0;
    if (v22 == sub_22F00554C(*((_QWORD *)v16 + 3), (uint64_t)&v197, *(_QWORD *)(a1 + 88), 0, v25))
      goto LABEL_48;
    v26 = (*(_DWORD *)v16 >> 18) & 0x3F;
    if (v22)
    {
      if ((_DWORD)v26 == 5)
      {
        v177 = v205;
        if (v205 > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v176, (const llvm::APInt *)((char *)&v204 + 8));
        else
          v176 = *((_QWORD *)&v204 + 1);
        v178 = BYTE4(v205);
        sub_22E99E778((_QWORD *)a13, &v176, 5);
        if (v177 >= 0x41)
        {
          v40 = v176;
          if (v176)
LABEL_81:
            MEMORY[0x2348A0E84](v40, 0x1000C8000313F17);
        }
        goto LABEL_83;
      }
LABEL_48:
      v35 = 0;
    }
    else
    {
      v174 = v201;
      if (v201 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v173, (const llvm::APInt *)&v200);
      else
        v173 = v200;
      v175 = v202;
      sub_22E99E778((_QWORD *)a13, &v173, v26);
      if (v174 < 0x41)
      {
        v23 = (unsigned __int8 **)(v16 + 16);
      }
      else
      {
        v40 = v173;
        v23 = (unsigned __int8 **)(v16 + 16);
        if (v173)
          goto LABEL_81;
      }
LABEL_83:
      v16 = *v23;
      v35 = 1;
    }
    if (v199 >= 2)
      sub_22EF53BC0(&v199);
    if (v204 >= 2)
      sub_22EF53BC0((uint64_t *)&v204);
    if ((v35 & 1) == 0)
      return 0;
    goto LABEL_89;
  }
  if (v18 == 153)
  {
    v16 = (unsigned __int8 *)*((_QWORD *)v16 + 2);
    goto LABEL_89;
  }
  if (v18 == 140)
    goto LABEL_137;
  if (v18 != 161)
    return 0;
  v14 = 0;
  v52 = *((_QWORD *)v16 + 2);
  if (!v52)
    return v14;
  v53 = *((_QWORD *)v16 + 2);
  if ((*(_DWORD *)(v52 + 28) & 0x7Fu) - 67 < 0xFFFFFFF9)
    return v14;
  v54 = *((_QWORD *)v16 + 1);
  v55 = sub_22EF5C728(*(_QWORD *)(a1 + 88), v54);
  if (!v55)
  {
    v109 = *(_QWORD *)(v54 & 0xFFFFFFFFFFFFFFF0);
    if (v109 && *(_BYTE *)(v109 + 16) == 39)
    {
      v56 = v53;
LABEL_258:
      if (sub_22F10AFE4(v54, *(_QWORD *)(a1 + 88)) && sub_22F10AFE4(*(_QWORD *)(v109 + 32), *(_QWORD *)(a1 + 88)))
        goto LABEL_121;
      goto LABEL_279;
    }
    v123 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v109 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    v56 = v53;
    if (v123 == 39)
    {
      v109 = sub_22F10CF48(*(_QWORD *)(v54 & 0xFFFFFFFFFFFFFFF0));
      if (v109)
        goto LABEL_258;
      v123 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v54 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                                + 16);
    }
    if (v123 == 32 && sub_22F10AFE4(v54, *(_QWORD *)(a1 + 88)))
      goto LABEL_121;
    goto LABEL_279;
  }
  v56 = v53;
  if (sub_22F10AFE4(*(_QWORD *)(v55 + 32), *(_QWORD *)(a1 + 88)))
  {
LABEL_121:
    v57 = 0;
    v58 = v56;
    while (1)
    {
      v59 = (unsigned __int8 *)sub_22EFBC5B4(v58);
      if (v59)
        break;
      if ((*(_BYTE *)(v58 + 72) & 3) != 0)
      {
        v56 = v53;
        if (v57)
          goto LABEL_279;
        v57 = 1;
      }
      v61 = sub_22E3CD31C((uint64_t *)(v58 + 72), v58);
      v56 = v53;
      if (v61 != v53)
      {
        v58 = v61;
        if (v61)
          continue;
      }
      goto LABEL_279;
    }
    v107 = v59;
    if (*v59 == 180)
    {
      v108 = a5;
      if (sub_22F3C2220(v59))
        v107 = sub_22EFFA6B0(**((unsigned __int8 ***)v107 + 2));
    }
    else
    {
      v108 = a5;
    }
    v189 = *(_DWORD *)(a13 + 8);
    if (v189 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v188, (const llvm::APInt *)a13);
    else
      v188 = *(_QWORD *)a13;
    v190 = *(_BYTE *)(a13 + 12);
    BYTE4(v161) = 0;
    LODWORD(v161) = a9;
    v14 = sub_22E9851AC(a1, v107, a3, a4, v108, a6, a7, a8, v60, v161, a11, a12, &v188, 0);
    if (v189 < 0x41)
      return v14;
    v122 = v188;
    if (!v188)
      return v14;
    goto LABEL_269;
  }
LABEL_279:
  if ((*(_DWORD *)(v56 + 28) & 0x7F) != 0x40)
    return 0;
  v127 = *(_QWORD *)(v56 + 16);
  v128 = v127 & 0xFFFFFFFFFFFFFFF8;
  if ((v127 & 4) != 0)
    v128 = *(_QWORD *)v128;
  v129 = *(_WORD *)(v128 + 8) & 0x7F;
  v130 = -40;
  if (v129 > 0x46)
  {
    if (v129 != 83)
    {
      if (v129 == 71)
      {
        v130 = -56;
      }
      else if (v129 != 81)
      {
LABEL_293:
        if (v129 - 52 < 6)
        {
          v130 = -72;
        }
        else
        {
          v130 = -48;
          if (v129 - 33 < 5)
            v130 = -64;
        }
      }
    }
  }
  else
  {
    if (v129 > 0x18)
      goto LABEL_292;
    if (v129 == 16)
      goto LABEL_285;
    if (((1 << v129) & 0x1066) == 0)
    {
      if (v129 == 24)
      {
LABEL_285:
        v130 = -48;
      }
      else
      {
LABEL_292:
        if (v129 != 70)
          goto LABEL_293;
        v130 = -64;
      }
    }
  }
  v131 = v128 + v130;
  v132 = (uint64_t *)sub_22E47E5E0(v128 + v130);
  v134 = v133;
  while (2)
  {
    while (2)
    {
      while (2)
      {
        v135 = v132;
        if (v132 >= v134)
        {
          if (v132 == v134)
            return 0;
          v136 = v134;
          while (*(_WORD *)(*v136 + 32) != 179)
          {
            v14 = 0;
            if (++v136 == v132)
              return v14;
          }
          v135 = v132;
        }
        else
        {
          while (*(_WORD *)(*v135 + 32) != 179)
          {
            v14 = 0;
            if (++v135 == v134)
              return v14;
          }
          v136 = v134;
        }
        if (v135 == v136)
          return 0;
        do
        {
          v138 = *v132++;
          v137 = v138;
        }
        while (*(_WORD *)(v138 + 32) != 179);
        if ((*(_DWORD *)(v131 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFC)
        {
          if ((*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)v131 + 32))(v131) + 80) & 0xE000) == 0x4000)
            v140 = 1;
          else
            v140 = (*(_QWORD *)(v131 + 40) & 7) == 6
                && (*(_DWORD *)(*(_QWORD *)(v131 + 40) & 0xFFFFFFFFFFFFFFF8) - 1) < 4;
          v139 = !v140;
        }
        else
        {
          v139 = 0;
        }
        v141 = sub_22EFCB008(v131, 1);
        if (!v141)
        {
          if ((*(_DWORD *)(v131 + 28) & 0x7F) == 0x18)
          {
            v142 = *(_DWORD *)(v137 + 52) == 0;
            if ((*(_QWORD *)(v131 + 56) & 0x40000) != 0)
              goto LABEL_326;
          }
          else
          {
            if ((*(_DWORD *)(v131 + 28) & 0x7F) != 1)
            {
              v143 = 0;
              v142 = *(_DWORD *)(v137 + 52) == 0;
              goto LABEL_330;
            }
            v142 = *(_DWORD *)(v137 + 52) == 0;
            if ((*(_DWORD *)(v131 + 48) & 0x2000) != 0)
              goto LABEL_326;
          }
LABEL_322:
          v143 = 0;
          goto LABEL_330;
        }
        v142 = *(_DWORD *)(v137 + 52) == 0;
        if ((*(_QWORD *)(v141 + 16) & 0x800000000000000) == 0)
          goto LABEL_322;
LABEL_326:
        v143 = 256;
LABEL_330:
        v144 = *(_DWORD *)(v137 + 48);
        v145 = v144 - 1;
        v20 = v144 == 1;
        v146 = v144 - 2;
        if (v20)
        {
          v146 = 0;
          v147 = v139;
        }
        else
        {
          v147 = 0;
        }
        if (v139)
          v148 = v146;
        else
          v148 = v145;
        if ((v147 & 1) != 0)
          continue;
        break;
      }
      v149 = (*(_DWORD *)(v53 + 96) >> 20);
      if (v149 != 255)
        goto LABEL_364;
      v150 = v53;
      v151 = v53;
      if ((*(_DWORD *)(v53 + 28) & 0x7F) == 0x53)
        goto LABEL_363;
      v152 = *(_QWORD *)(v53 + 16);
      while (2)
      {
        v153 = v152 & 0xFFFFFFFFFFFFFFF8;
        if ((v152 & 4) != 0)
          v153 = *(_QWORD *)v153;
        v154 = *(_WORD *)(v153 + 8) & 0x7F;
        if (v154 != 83)
        {
          v155 = -40;
          if ((*(_WORD *)(v153 + 8) & 0x7Fu) > 0x46)
          {
            if (v154 == 71)
            {
              v155 = -56;
            }
            else if (v154 != 81)
            {
              goto LABEL_353;
            }
          }
          else
          {
            if (v154 > 0x18)
              goto LABEL_352;
            if (v154 == 16)
              goto LABEL_346;
            if (((1 << v154) & 0x1066) == 0)
            {
              if (v154 == 24)
              {
LABEL_346:
                v155 = -48;
              }
              else
              {
LABEL_352:
                if (v154 == 70)
                {
                  v155 = -64;
                }
                else
                {
LABEL_353:
                  v156 = v154 - 52;
                  v157 = v154 - 33 >= 5;
                  v158 = -64;
                  if (v157)
                    v158 = -48;
                  v157 = v156 >= 6;
                  v155 = -72;
                  if (v157)
                    v155 = v158;
                }
              }
            }
          }
          v152 = *(_QWORD *)(v153 + v155 + 16);
          continue;
        }
        break;
      }
      v151 = v153 - 40;
      v150 = v53;
LABEL_363:
      v149 = sub_22F36F2CC(*(_QWORD *)(v151 + 88), v150);
LABEL_364:
      if (v149 != v148 || sub_22E97DF98(v137) != a8)
        continue;
      break;
    }
    v159 = v142 ? 512 : v143;
    v160 = (unsigned __int16)(v159 | a5);
    v14 = 1;
    if (v160 >= 2 && v160 != 258 && v160 != 514)
      continue;
    return v14;
  }
}

BOOL sub_22E9866D4(_QWORD *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  unsigned int *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *i;
  _BOOL8 v10;
  char *v12;
  char *v13;
  uint64_t v14;

  sub_22E9867C8("c_str", 5uLL, a1, *(_QWORD *)(a2 + 8), (uint64_t)&v12);
  v3 = v12;
  v2 = v13;
  v4 = (unsigned int *)&v14 + 1;
  if (v13 != v12)
    v4 = (unsigned int *)&v14;
  v5 = *v4;
  v6 = (uint64_t *)v13;
  if ((_DWORD)v5)
  {
    v7 = 0;
    while (*(_QWORD *)&v13[v7] >= 0xFFFFFFFFFFFFFFFELL)
    {
      v7 += 8;
      if (8 * v5 == v7)
        goto LABEL_16;
    }
    v6 = (uint64_t *)&v13[v7];
  }
  v8 = (uint64_t *)&v13[8 * v5];
  if (v6 == v8)
  {
LABEL_16:
    v10 = 0;
  }
  else
  {
    if (sub_22EFC0EB8(*v6))
    {
      for (i = v6 + 1; ; ++i)
      {
        v10 = i != v8;
        if (i == v8 || (unint64_t)*i < 0xFFFFFFFFFFFFFFFELL && !sub_22EFC0EB8(*i))
          break;
      }
    }
    else
    {
      v10 = 1;
    }
    v3 = v12;
    v2 = v13;
  }
  if (v2 != v3)
    free(v2);
  return v10;
}

void sub_22E9867C8(const void *a1@<X0>, size_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  int v7;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _DWORD *v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _BYTE v27[64];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  _BYTE v34[24];
  int v35;
  __int16 v36;
  char v37;
  uint64_t v38;

  v38 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(unsigned __int8 *)(v6 + 16);
  *(_QWORD *)a5 = a5 + 32;
  *(_QWORD *)(a5 + 8) = a5 + 32;
  *(_QWORD *)(a5 + 16) = 1;
  *(_DWORD *)(a5 + 24) = 0;
  if (v6 && v7 == 45)
  {
    v11 = sub_22F114198(*(_QWORD *)(v6 + 24));
    if (v11 && (*(_DWORD *)(v11 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
    {
      v13 = v11;
      v14 = *(_QWORD *)(v11 + 128);
      if (v14
        || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v11 + 104) + 96), *(_QWORD *)(v11 + 104)),
            (v14 = *(_QWORD *)(v13 + 128)) != 0))
      {
        if (*(_QWORD *)(v14 + 88))
        {
          v15 = sub_22E3CB704(*(llvm::StringMapImpl **)(a3[11] + 15192), a1, a2);
          v24 = 0;
          v25 = v27;
          v26 = 0x800000000;
          v28 = 0;
          v29 = 0;
          v30 = 0;
          v31 = a3;
          v32 = v15;
          v33 = 0;
          sub_22EFC6D6C((uint64_t)v34, v15);
          *(_OWORD *)&v34[8] = xmmword_22F463A40;
          v35 = 16842752;
          v36 = 0;
          v37 = 0;
          sub_22EC56024((uint64_t)&v24);
          HIBYTE(v35) = 0;
          v16 = sub_22F114198(*(_QWORD *)(v6 + 24));
          if (v16)
            v17 = v16 + 64;
          else
            v17 = 0;
          if (sub_22EC611AC((uint64_t)a3, (uint64_t)&v24, v17, 0) && (_DWORD)v26)
          {
            v18 = v25;
            v19 = 8 * v26;
            do
            {
              v20 = (_DWORD *)(*v18 & 0xFFFFFFFFFFFFFFFCLL);
              v21 = v20[7];
              if ((v21 & 0x7Fu) <= 0x2F && ((1 << (v21 & 0x7F)) & 0xC00000060000) != 0)
              {
                v20 = (_DWORD *)sub_22EFBAEA4(*v18 & 0xFFFFFFFFFFFFFFFCLL);
                v21 = v20[7];
              }
              if ((v21 & 0x7Eu) - 58 >= 0xFFFFFFFC)
                sub_22E3BA850(a5, v20);
              ++v18;
              v19 -= 8;
            }
            while (v19);
          }
          if (HIBYTE(v35))
          {
            if ((_DWORD)v24 == 5)
            {
              sub_22EC64D18(v31, (uint64_t)&v24);
            }
            else if (v29 && (*(_DWORD *)(v31[9] + 52) & 0x400000) != 0)
            {
              sub_22E90B5FC((unint64_t)v31, (uint64_t)&v24);
            }
          }
          if (v28)
          {
            v23 = sub_22EC6CBD0(v28);
            MEMORY[0x2348A0E9C](v23, 0x10E0C409F09D3C3);
          }
          if (v25 != v27)
            free(v25);
        }
      }
    }
  }
}

uint64_t sub_22E986A40(uint64_t a1, int *a2)
{
  uint64_t v4;
  unsigned int v5;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;

  v5 = *a2;
  v4 = a2[1];
  v6 = a2[4];
  v7 = sub_22EF5C728(*(_QWORD *)(a1 + 88), *((_QWORD *)a2 + 1));
  if (*(_BYTE *)(v7 + 16) == 2)
    v8 = v7;
  else
    v8 = 0;
  v9 = (unint64_t *)(v8 + 40);
  if (*(_DWORD *)(v8 + 48) >= 0x41u)
    v9 = (unint64_t *)*v9;
  v10 = *v9;
  if (v10 <= 1)
    v10 = 1;
  v11 = v10 - 1;
  if (v11 >= ((v5 >> 21) & 7) * v6)
    v11 = ((v5 >> 21) & 7) * v6;
  return sub_22F3EFDA4((unsigned __int8 *)&a2[v4 + 5], (unsigned __int8 *)&a2[v4 + 5] + v11, *(_QWORD *)(a1 + 72), *(_QWORD *)(*(_QWORD *)(a1 + 88) + 15088));
}

BOOL sub_22E986ADC(uint64_t a1, unsigned __int16 *a2)
{
  unint64_t v2;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v9;
  _QWORD *v10;

  if (!a1)
    return 0;
  v2 = *(_QWORD *)(a1 + 40) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_QWORD *)(a1 + 40) & 7) != 0 || v2 == 0)
    return 0;
  v4 = *(_QWORD *)(v2 + 16);
  if (*(_DWORD *)v4 != 3)
    return 0;
  v5 = *(unsigned __int16 *)(v4 + 16);
  v6 = *(unsigned __int8 *)(v4 + 18);
  if (v5 != *a2 || v6 != *((unsigned __int8 *)a2 + 2))
    return 0;
  v9 = *(_QWORD *)(a1 + 16);
  v10 = (_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  if ((v9 & 4) != 0)
  {
    v10 = (_QWORD *)*v10;
    if (v10)
      return sub_22EFC84D4((unint64_t)v10);
    return 0;
  }
  if (!v10)
    return 0;
  return sub_22EFC84D4((unint64_t)v10);
}

uint64_t sub_22E986B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t result;
  int v17;

  v4 = a2;
  v6 = a2 & 0xFFFFFFFFFFFFFFF0;
  v7 = sub_22EF5CDF0(a1, *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
  if ((_DWORD)a3)
  {
    v8 = v7;
    v9 = 0;
    v10 = v4 & 7;
    while (1)
    {
      v11 = a3;
      v17 = 0;
      v12 = sub_22EF72B64(a1, a3, &v17, 0);
      v13 = 0;
      if (!v17)
      {
        v14 = *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF0);
        if (v14)
          v15 = *(_BYTE *)(v14 + 16) == 26;
        else
          v15 = 0;
        if ((v15
           || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
           && (v14 = sub_22F10CF48(v14)) != 0)
          && (*(_QWORD *)(v14 + 16) & 0x3FFFC000000000) == 0x4000000000)
        {
          v13 = *(_QWORD *)(v14 + 40);
        }
        else
        {
          v13 = 0;
        }
      }
      if (sub_22EF5CDF0(a1, *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0)) >= v8)
      {
        result = v11;
        if ((_DWORD)v9)
        {
          result = v9;
          if ((*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8) | v13 & 7) == (*(_QWORD *)(v6 + 8) | v10))
            return v11;
        }
      }
      else
      {
        result = v9;
      }
      if ((int)v11 > 934)
      {
        switch((int)v11)
        {
          case 935:
            a3 = 936;
            v9 = result;
            continue;
          case 936:
            a3 = 937;
            v9 = result;
            continue;
          case 937:
          case 938:
          case 939:
          case 940:
            return result;
          case 941:
            a3 = 943;
            v9 = result;
            continue;
          case 942:
            a3 = 941;
            v9 = result;
            continue;
          default:
            if ((_DWORD)v11 == 1112)
            {
              a3 = 1114;
              v9 = result;
            }
            else
            {
              if ((_DWORD)v11 != 1113)
                return result;
              a3 = 1112;
              v9 = result;
            }
            break;
        }
      }
      else if ((int)v11 > 38)
      {
        switch((_DWORD)v11)
        {
          case 0x27:
            a3 = 40;
            v9 = result;
            break;
          case 0x118:
            a3 = 282;
            v9 = result;
            break;
          case 0x119:
            a3 = 280;
            v9 = result;
            break;
          default:
            return result;
        }
      }
      else
      {
        a3 = 39;
        v9 = result;
        if ((_DWORD)v11 != 5)
        {
          if ((_DWORD)v11 == 11)
          {
            a3 = 13;
            v9 = result;
          }
          else
          {
            if ((_DWORD)v11 != 12)
              return result;
            a3 = 11;
            v9 = result;
          }
        }
      }
    }
  }
  return 0;
}

void sub_22E986D88(_QWORD *a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  uint64_t *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char **v13;
  char *v14;
  llvm::StringMapImpl *v15;
  size_t v16;
  BOOL v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  const char *v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  int v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  BOOL v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  BOOL v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  int v46;
  BOOL v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unsigned int v51;
  BOOL v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  size_t v56;
  size_t v57;
  __int128 *p_dst;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  __int128 __p;
  unint64_t v73;
  char v74;
  char *__s;
  const char *v76;
  __int128 __dst;
  unint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  _BYTE v82[64];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  __int128 v90;
  int v91;
  __int16 v92;
  char v93;
  uint64_t v94;

  v94 = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a1[9] + 1) & 1) != 0)
  {
    v9 = (uint64_t *)(a5 & 0xFFFFFFFFFFFFFFF0);
    v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a5 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v11 = *(_DWORD *)(v10 + 16);
    if (v11 != 12)
    {
      __s = "std::abs";
      if (v11 != 9)
      {
        if (v11 == 44)
        {
          v22 = sub_22F114198(*(_QWORD *)(v10 + 24));
          if ((*(_BYTE *)(v22 + 74) & 1) == 0 && *(_QWORD *)(v22 + 128) <= 7uLL)
            goto LABEL_40;
        }
        else if (v11 != 11 || ((v11 >> 19) & 0x1FE) - 166 >= 0x14)
        {
LABEL_40:
          v23 = "cmath";
LABEL_41:
          v76 = v23;
          v24 = a1[419];
          if ((v24 & 1) != 0)
          {
            v24 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(a1[11] + 16048) + 16))(*(_QWORD *)(a1[11] + 16048), v24 >> 1);
            a1[419] = v24;
            if (v24)
              goto LABEL_43;
          }
          else if (v24)
          {
LABEL_43:
            v25 = sub_22E3CB704(*(llvm::StringMapImpl **)(a1[11] + 15192), "abs", 3uLL);
            v79 = 0;
            v80 = v82;
            v81 = 0x800000000;
            v83 = 0;
            v84 = 0;
            v85 = 0;
            v86 = a1;
            v87 = v25;
            v88 = a2;
            sub_22EFC6D6C((uint64_t)&v89, v25);
            v90 = xmmword_22F4658C0;
            v91 = 16842752;
            v92 = 0;
            v93 = 0;
            sub_22EC56024((uint64_t)&v79);
            HIBYTE(v91) = 0;
            sub_22EC611AC(a1, &v79, v24 + 48, 0);
            v26 = 1;
            if (!(_DWORD)v81)
              goto LABEL_104;
            v27 = v80;
            v28 = 8 * v81;
            while (1)
            {
              v29 = *v27 & 0xFFFFFFFFFFFFFFFCLL;
              v30 = *(_DWORD *)(v29 + 28) & 0x7E;
              if (v29 && v30 == 46)
              {
                v29 = *(_QWORD *)(v29 + 64);
                if ((*(_DWORD *)(v29 + 28) & 0x7Eu) - 52 >= 6)
                  goto LABEL_99;
              }
              else if ((v30 - 52) > 5)
              {
                goto LABEL_99;
              }
              v31 = *(_QWORD *)(*(_QWORD *)(v29 + 48) & 0xFFFFFFFFFFFFFFF0);
              if (v31)
                v32 = *(_BYTE *)(v31 + 16) == 26;
              else
                v32 = 0;
              if (!v32)
              {
                if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v31 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
                  goto LABEL_99;
                v31 = sub_22F10CF48(v31);
                if (!v31)
                  goto LABEL_99;
              }
              if ((*(_QWORD *)(v31 + 16) & 0x3FFFC000000000) != 0x4000000000)
                goto LABEL_99;
              v33 = *(_QWORD *)(**(_QWORD **)(v29 + 120) + 48);
              v34 = *(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0;
              v35 = *(_QWORD *)v34;
              v36 = *(_DWORD *)(*(_QWORD *)v34 + 16);
              if (*(_QWORD *)v34)
                v37 = v36 == 11;
              else
                v37 = 0;
              if (v37)
              {
                if (((*(_DWORD *)(*(_QWORD *)v34 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
                  goto LABEL_66;
              }
              else if (v35 && v36 == 44)
              {
                v38 = sub_22F114198(*(_QWORD *)(v35 + 24));
                if ((*(_BYTE *)(v38 + 74) & 1) != 0 || *(_QWORD *)(v38 + 128) > 7uLL)
                {
LABEL_66:
                  v39 = 0;
                  goto LABEL_77;
                }
                v34 = *(_QWORD *)(*v9 + 8) & 0xFFFFFFFFFFFFFFF0;
              }
              else if (v36 == 9)
              {
                goto LABEL_66;
              }
              v40 = *(_QWORD *)v34;
              if (((*(_DWORD *)(v40 + 16) >> 19) & 0x1FEu) - 210 < 8)
                v41 = 1;
              else
                v41 = 2;
              if (v40)
                v42 = *(_DWORD *)(v40 + 16) == 11;
              else
                v42 = 0;
              if (v42)
                v39 = v41;
              else
                v39 = 2;
LABEL_77:
              v43 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFF0);
              v44 = *(_QWORD *)(*v43 + 8) & 0xFFFFFFFFFFFFFFF0;
              v45 = *(_QWORD *)v44;
              v46 = *(_DWORD *)(*(_QWORD *)v44 + 16);
              if (*(_QWORD *)v44)
                v47 = v46 == 11;
              else
                v47 = 0;
              if (v47)
              {
                if (((*(_DWORD *)(*(_QWORD *)v44 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
                  goto LABEL_87;
              }
              else if (v45 && v46 == 44)
              {
                v48 = sub_22F114198(*(_QWORD *)(v45 + 24));
                if ((*(_BYTE *)(v48 + 74) & 1) != 0 || *(_QWORD *)(v48 + 128) > 7uLL)
                {
LABEL_87:
                  v49 = 0;
                  goto LABEL_97;
                }
                v44 = *(_QWORD *)(*v43 + 8) & 0xFFFFFFFFFFFFFFF0;
              }
              else if (v46 == 9)
              {
                goto LABEL_87;
              }
              v50 = *(_QWORD *)v44;
              v51 = *(_DWORD *)(*(_QWORD *)v44 + 16);
              if (v50)
                v52 = v51 == 11;
              else
                v52 = 0;
              if (v52)
              {
                if (((v51 >> 19) & 0x1FE) - 210 < 8)
                  v49 = 1;
                else
                  v49 = 2;
              }
              else
              {
                v49 = 2;
              }
LABEL_97:
              if (v39 == v49)
              {
                v53 = sub_22EF5CDF0(a1[11], *v9);
                if (v53 <= sub_22EF5CDF0(a1[11], *v43))
                {
                  v26 = 0;
LABEL_104:
                  if (HIBYTE(v91))
                  {
                    if ((_DWORD)v79 == 5)
                    {
                      sub_22EC64D18(v86, (uint64_t)&v79);
                    }
                    else if (v84 && (*(_DWORD *)(v86[9] + 52) & 0x400000) != 0)
                    {
                      sub_22E90B5FC((unint64_t)v86, (uint64_t)&v79);
                    }
                  }
                  if (v83)
                  {
                    v67 = sub_22EC6CBD0(v83);
                    MEMORY[0x2348A0E9C](v67, 0x10E0C409F09D3C3);
                  }
                  if (v80 != v82)
                    free(v80);
LABEL_115:
                  v17 = v26 != 0;
LABEL_116:
                  sub_22E8FCA40(a1, a2, 0x17B8u, 0, (uint64_t)&v79);
                  v54 = sub_22E96133C((uint64_t)&v79, (uint64_t *)&__s);
                  v55 = __s;
                  if (!__s)
                  {
                    v57 = 0;
                    v71 = 0;
                    v70 = 0;
                    v74 = 0;
                    v68 = a3;
                    v69 = 1;
                    p_dst = &__dst;
                    HIBYTE(v78) = 0;
                    goto LABEL_126;
                  }
                  v56 = strlen(__s);
                  v70 = 0;
                  v71 = 0;
                  v74 = 0;
                  v68 = a3;
                  v69 = 1;
                  if (v56 >= 0x7FFFFFFFFFFFFFF8)
                    abort();
                  v57 = v56;
                  if (v56 >= 0x17)
                  {
                    v59 = (v56 & 0xFFFFFFFFFFFFFFF8) + 8;
                    if ((v56 | 7) != 0x17)
                      v59 = v56 | 7;
                    v60 = v59 + 1;
                    p_dst = (__int128 *)operator new(v59 + 1);
                    *((_QWORD *)&__dst + 1) = v57;
                    v78 = v60 | 0x8000000000000000;
                    *(_QWORD *)&__dst = p_dst;
                  }
                  else
                  {
                    HIBYTE(v78) = v56;
                    p_dst = &__dst;
                    if (!v56)
                    {
LABEL_126:
                      *((_BYTE *)p_dst + v57) = 0;
                      __p = __dst;
                      v73 = v78;
                      sub_22E890748(v54, &v68);
                      if (SHIBYTE(v73) < 0)
                        operator delete((void *)__p);
                      sub_22E903BEC((unsigned int *)&v79);
                      v61 = !v17;
                      if (!v76)
                        v61 = 1;
                      if ((v61 & 1) == 0)
                      {
                        sub_22E8FCA40(a1, a2, 0x162Cu, 0, (uint64_t)&v79);
                        v62 = sub_22E96133C((uint64_t)&v79, (uint64_t *)&v76);
                        sub_22E96133C(v62, (uint64_t *)&__s);
                        sub_22E903BEC((unsigned int *)&v79);
                      }
                      return;
                    }
                  }
                  memmove(p_dst, v55, v57);
                  goto LABEL_126;
                }
              }
LABEL_99:
              ++v27;
              v28 -= 8;
              if (!v28)
              {
                v26 = 1;
                goto LABEL_104;
              }
            }
          }
          v26 = 1;
          goto LABEL_115;
        }
      }
      v23 = "cstdlib";
      goto LABEL_41;
    }
  }
  v12 = a1[11];
  if (a4 < 0x7E8)
  {
    v13 = &(&off_24FAC8C40)[6 * a4];
LABEL_5:
    v14 = *v13;
    __s = *v13;
    goto LABEL_6;
  }
  v63 = *(_QWORD **)(v12 + 15208);
  v64 = v63[1];
  if (v64 + 2024 <= (unint64_t)a4)
  {
    v13 = (char **)(v63[2] + 48 * (a4 - v64 - 2024));
    goto LABEL_5;
  }
  v65 = 48 * (a4 - 2024);
  v14 = *(char **)(*v63 + v65);
  __s = v14;
  v13 = (char **)(*v63 + v65);
LABEL_6:
  v76 = v13[3];
  if (!v76)
  {
    v17 = 1;
    goto LABEL_116;
  }
  v15 = *(llvm::StringMapImpl **)(v12 + 15192);
  if (v14)
    v16 = strlen(v14);
  else
    v16 = 0;
  v79 = 0;
  v80 = v82;
  v81 = 0x800000000;
  v83 = 0;
  v84 = 0;
  v85 = 0;
  v86 = a1;
  v87 = sub_22E3CB704(v15, v14, v16);
  v88 = a2;
  sub_22EFC6D6C((uint64_t)&v89, v87);
  v90 = xmmword_22F4658C0;
  v91 = 16842752;
  v92 = 0;
  v93 = 0;
  sub_22EC56024((uint64_t)&v79);
  HIBYTE(v91) = 0;
  sub_22EC63520(a1, &v79, a1[1611], 0, 0);
  if ((_DWORD)v79 == 2)
  {
    v18 = *(_QWORD *)v80 & 0xFFFFFFFFFFFFFFFCLL;
    v19 = *(_DWORD *)(v18 + 28);
    if ((v19 & 0x7Fu) <= 0x2F && ((1 << (v19 & 0x7F)) & 0xC00000060000) != 0)
    {
      v18 = sub_22EFBAEA4(v18);
      v19 = *(_DWORD *)(v18 + 28);
    }
    if ((v19 & 0x7Eu) - 58 < 0xFFFFFFFA || (v20 = 0, sub_22EFC01DC(v18, 0) != a4))
    {
      v21 = 0;
      v20 = 1;
      goto LABEL_26;
    }
  }
  else
  {
    v20 = 1;
    if ((_DWORD)v81)
    {
      v21 = 0;
      goto LABEL_26;
    }
  }
  v21 = 1;
LABEL_26:
  if (HIBYTE(v91))
  {
    if ((_DWORD)v79 == 5)
    {
      sub_22EC64D18(v86, (uint64_t)&v79);
    }
    else if (v84 && (*(_DWORD *)(v86[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v86, (uint64_t)&v79);
    }
  }
  if (v83)
  {
    v66 = sub_22EC6CBD0(v83);
    MEMORY[0x2348A0E9C](v66, 0x10E0C409F09D3C3);
  }
  if (v80 != v82)
    free(v80);
  v17 = v20 != 0;
  if (v21)
    goto LABEL_116;
}

uint64_t sub_22E98760C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  void *__p;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  void *v31[4];
  unsigned int v32[24];
  uint64_t v33;
  uint64_t v34;

  v34 = a3;
  if ((*(_BYTE *)a2 & 0xFE) != 0x70)
    return 0;
  v9 = (*(_DWORD *)a2 >> 18) & 0x3F;
  if ((v9 - 9) >= 7 && (v9 - 19) > 1)
    return 0;
  sub_22F0D4E74(a2);
  v33 = v10;
  sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(a2 + 4), 0x1A44u, 0, (uint64_t)v32);
  v11 = sub_22E8906A0((uint64_t)v32, &v33);
  sub_22E8BAE44(v11, &v34);
  sub_22E903BEC(v32);
  sub_22E8FCA40((_QWORD *)a1, a4, 0x1659u, 0, (uint64_t)v32);
  v12 = sub_22E8BAE44((uint64_t)v32, &v34);
  sub_22F0D60E4(*(_QWORD *)(a2 + 16));
  v14 = sub_22F141A3C(v13, 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
  v29 = 0;
  v30 = 0;
  v31[1] = 0;
  v31[2] = (void *)0x100000000000000;
  v27 = v14 | ((unint64_t)v14 << 32);
  v28 = 0;
  v31[0] = (void *)41;
  LOBYTE(v31[3]) = 0;
  v15 = sub_22E890748(v12, &v27);
  v22 = 0;
  v21 = 0;
  v24 = 0;
  v25 = 0;
  __p = 0;
  v26 = 0;
  v19 = a5 | ((unint64_t)a5 << 32);
  v20 = 1;
  sub_22E890748(v15, &v19);
  if (SHIBYTE(v25) < 0)
    operator delete(__p);
  if (SHIBYTE(v31[2]) < 0)
    operator delete(v31[0]);
  sub_22E903BEC(v32);
  sub_22E8FCA40((_QWORD *)a1, v33, 0x1658u, 0, (uint64_t)v32);
  v29 = 0;
  v30 = 0;
  v27 = v33 | ((unint64_t)v33 << 32);
  v28 = 0;
  *(void **)((char *)&v31[1] + 2) = 0;
  *(void **)((char *)&v31[1] + 7) = 0;
  strcpy((char *)v31, "(size_t)(");
  strcpy((char *)&v31[2] + 7, "\t");
  v16 = sub_22E890748((uint64_t)v32, &v27);
  v17 = sub_22F141A3C(HIDWORD(v33), 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
  v21 = 0;
  v22 = 0;
  v24 = 0;
  v25 = 0x100000000000000;
  v19 = v17 | ((unint64_t)v17 << 32);
  v20 = 0;
  __p = (void *)41;
  v26 = 0;
  sub_22E890748(v16, &v19);
  if (SHIBYTE(v25) < 0)
    operator delete(__p);
  if (SHIBYTE(v31[2]) < 0)
    operator delete(v31[0]);
  sub_22E903BEC(v32);
  return 1;
}

uint64_t sub_22E987880(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v13;

  while (1)
  {
    v3 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
    if (v3)
      v4 = (*(_DWORD *)(v3 + 16) & 0xFEu) - 6 > 0xFFFFFFFB;
    else
      v4 = 0;
    if (v4)
    {
      v5 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
      goto LABEL_9;
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
      break;
    v5 = sub_22F10CF48(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0));
    if (!v5)
      break;
LABEL_9:
    a1 = *(_QWORD *)(v5 + 32);
  }
  *a2 = 0;
  v6 = sub_22F10C2A4(v3);
  v7 = v6;
  if (v6)
  {
    if ((*(_DWORD *)(v6 + 28) & 0x7Fu) - 35 > 2)
      return 0;
    v8 = *(_QWORD *)(v6 + 128);
    if (!v8)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v6 + 104) + 96), *(_QWORD *)(v6 + 104));
      v8 = *(_QWORD *)(v7 + 128);
      if (!v8)
        return 0;
    }
    v7 = *(_QWORD *)(v8 + 88);
    if (v7)
    {
      if ((*(_BYTE *)(v7 + 28) & 0x80) != 0)
        return 0;
      if (!sub_22E463414(v7))
      {
        v9 = sub_22EFC3B90(v7);
        if (v9)
        {
          v10 = v9;
          v7 = sub_22E987880(*(_QWORD *)(v9 + 48), &v13);
          if (v7)
          {
LABEL_19:
            *a2 = 1;
            return v7;
          }
          while (1)
          {
            v10 = *(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF8;
            if (!v10)
              break;
            if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 49 <= 2)
            {
              v11 = sub_22E987880(*(_QWORD *)(v10 + 48), &v13);
              if (v11)
              {
                v7 = v11;
                goto LABEL_19;
              }
            }
          }
        }
        return 0;
      }
    }
  }
  return v7;
}

unsigned __int8 *sub_22E9879D8(unsigned __int8 *a1)
{
  unsigned __int8 *v1;
  int v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;

  v1 = sub_22EFFBBCC(a1);
  v2 = *v1 & 0xFE;
  while (v2 == 112)
  {
    if (((*(_DWORD *)v1 >> 18) & 0x3Fu) - 5 > 1)
      break;
    v3 = sub_22EFFBBCC(*((unsigned __int8 **)v1 + 3));
    v4 = sub_22EFFBBCC(*((unsigned __int8 **)v1 + 2));
    if (*v3 != 181)
    {
      v5 = *v4;
      v4 = v3;
      if (v5 != 181)
        break;
    }
    v2 = *v4 & 0xFE;
    v1 = v4;
  }
  return v1;
}

BOOL sub_22E987A60(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v3 = sub_22EF5C728(a2, a1);
  if (v3 && *(_BYTE *)(v3 + 16) == 2)
  {
    v4 = *(_DWORD *)(v3 + 48);
    if (v4 > 0x40)
      v5 = **(_QWORD **)(v3 + 40);
    else
      v5 = (uint64_t)(*(_QWORD *)(v3 + 40) << -(char)v4) >> -(char)v4;
    return v5 >= 2;
  }
  return *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 5;
}

uint64_t sub_22E987AF4(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned int v24[24];
  uint64_t v25;

  v11 = result;
  v25 = a7;
  if (!a6)
    goto LABEL_6;
  v12 = *((unsigned int *)a6 + 2);
  if ((_DWORD)v12)
  {
    v13 = 8 * v12;
    v14 = *a6;
    while (*(_WORD *)(*(_QWORD *)v14 + 32) != 300)
    {
      v14 += 8;
      v13 -= 8;
      if (!v13)
        goto LABEL_6;
    }
  }
  else
  {
    v14 = *a6;
  }
  if (v14 == *a6 + 8 * v12)
  {
LABEL_6:
    if ((a5 & 1) == 0)
    {
      for (i = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0); ; i = *(_QWORD *)(result + 40))
      {
        result = sub_22F10D774(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0));
        if (!result)
          break;
        v16 = *(_DWORD *)(result + 16) >> 19;
        if ((v16 - 34) < 3)
          break;
        if (v16 == 33)
          goto LABEL_20;
      }
    }
  }
  else
  {
LABEL_20:
    result = sub_22E987CF8(v11, (unsigned __int8 *)a2);
    if ((_DWORD)result)
    {
      sub_22E8FCA40((_QWORD *)v11, a4, 0x1A91u, 0, (uint64_t)v24);
      v23 = a5;
      v17 = sub_22E8900C4((uint64_t)v24, &v23);
      sub_22F0D4E74(a2);
      v22 = v18;
      sub_22E8906A0(v17, &v22);
      result = (uint64_t)sub_22E903BEC(v24);
    }
  }
  if (a7
    && (*(_QWORD *)(a7 + 40) & 7) == 6
    && (*(_DWORD *)(*(_QWORD *)(a7 + 40) & 0xFFFFFFFFFFFFFFF8) & 0xFFFFFFFD) == 1)
  {
    v19 = *(_QWORD *)(*(_QWORD *)(a7 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (v19)
      v20 = *(_BYTE *)(v19 + 16) == 26;
    else
      v20 = 0;
    if (!v20)
      v19 = sub_22F10CF48(v19);
    result = sub_22F113A44(v19);
    if ((_DWORD)result == 2)
    {
      result = sub_22E987CF8(v11, (unsigned __int8 *)a2);
      if ((_DWORD)result)
      {
        sub_22E8FCA40((_QWORD *)v11, a4, 0x1AD1u, 0, (uint64_t)v24);
        v21 = sub_22E890024((uint64_t)v24, &v25);
        LODWORD(v22) = (**(_DWORD **)(v11 + 72) >> 9) & 1;
        sub_22E89519C(v21, (unsigned int *)&v22);
        result = (uint64_t)sub_22E903BEC(v24);
      }
    }
  }
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 88) + 15088) + 56) - 23) <= 1)
    return sub_22E97DED0((_QWORD *)v11, *(_QWORD *)(a2 + 8), a4);
  return result;
}

BOOL sub_22E987CF8(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 *v2;
  uint64_t i;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  _BOOL8 result;
  int v11;
  char v12;

  v2 = a2;
  for (i = *(_QWORD *)(*((_QWORD *)sub_22EFFED0C(a2) + 1) & 0xFFFFFFFFFFFFFFF0); ; i = *(_QWORD *)(v6 + 40))
  {
    v6 = sub_22F10D774(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0));
    if (!v6)
      break;
    v5 = *(_DWORD *)(v6 + 16) >> 19;
    if ((v5 - 34) < 3)
      break;
    if (v5 == 33)
      return 0;
  }
  v7 = sub_22F10E2FC(*(_QWORD *)(*((_QWORD *)v2 + 1) & 0xFFFFFFFFFFFFFFF0));
  if (v7)
  {
    v8 = sub_22F114198(*(_QWORD *)(v7 + 24));
    if (sub_22E69BDA8(v8) && *v2 == 156)
    {
      v9 = (unsigned __int8 *)*((_QWORD *)v2 + 4);
      if (*v9 == 180)
        v2 = (unsigned __int8 *)**((_QWORD **)v9 + 2);
    }
  }
  result = 0;
  v12 = 0;
  if ((v2[2] & 1) == 0)
  {
    v11 = sub_22F005310(v2, (uint64_t)&v12, *(_QWORD *)(a1 + 88), 0);
    result = 0;
    if (v11)
      return v12 == 0;
  }
  return result;
}

void sub_22E987DF4(_QWORD *a1, int a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned __int8 **v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  llvm::APFloatBase *v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33[25];
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];

  v37[2] = *MEMORY[0x24BDAC8D0];
  v8 = a3;
  while (1)
  {
    v9 = v8;
    LODWORD(v10) = *v8;
    if (v10 > 0xD5)
    {
      if ((_DWORD)v10 == 233)
      {
        LODWORD(v10) = *(_DWORD *)v8;
        if ((*(_DWORD *)v8 & 0x7C0000) != 0x300000)
          goto LABEL_20;
        v11 = (unsigned __int8 **)(v8 + 16);
      }
      else
      {
        if ((_DWORD)v10 != 214)
          goto LABEL_20;
        v11 = (unsigned __int8 **)(v8 + 24);
      }
      goto LABEL_16;
    }
    if ((_DWORD)v10 != 155)
      break;
    if ((**((_DWORD **)v8 + 2) & 0x18000) != 0)
    {
      LOBYTE(v10) = -101;
      goto LABEL_20;
    }
    v11 = (unsigned __int8 **)(v8 + 24);
    if (!v9[48])
      v11 = (unsigned __int8 **)(v9 + 32);
    LOBYTE(v10) = -101;
LABEL_16:
    v8 = *v11;
    if (v8 == v9)
      goto LABEL_20;
  }
  if ((_DWORD)v10 != 176)
    goto LABEL_20;
  v10 = *((unsigned int *)v8 + 5);
  if ((_DWORD)v10 != -1)
  {
    v11 = (unsigned __int8 **)&v8[8 * v10 + 40];
    LOBYTE(v10) = -80;
    goto LABEL_16;
  }
  LOBYTE(v10) = -80;
LABEL_20:
  v12 = a4;
  do
  {
    v13 = v12;
    LODWORD(v14) = *v12;
    if (v14 > 0xD5)
    {
      if ((_DWORD)v14 == 233)
      {
        LODWORD(v14) = *(_DWORD *)v12;
        if ((*(_DWORD *)v12 & 0x7C0000) != 0x300000)
          break;
        v15 = v12 + 16;
      }
      else
      {
        if ((_DWORD)v14 != 214)
          break;
        v15 = v12 + 24;
      }
    }
    else if ((_DWORD)v14 == 155)
    {
      if ((**((_DWORD **)v12 + 2) & 0x18000) != 0)
        goto LABEL_54;
      v15 = v12 + 24;
      if (!v13[48])
        v15 = v13 + 32;
      LOBYTE(v14) = -101;
    }
    else
    {
      if ((_DWORD)v14 != 176)
        break;
      v14 = *((unsigned int *)v12 + 5);
      if ((_DWORD)v14 == -1)
        goto LABEL_54;
      v15 = &v12[8 * v14 + 40];
      LOBYTE(v14) = -80;
    }
    v12 = *(unsigned __int8 **)v15;
  }
  while (v12 != v13);
  if (v10 == 170 && (v14 + 102) > 0xF4u)
  {
    v16 = v9;
    v9 = v13;
LABEL_41:
    v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v9 + 2) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(v17 + 16) == 11)
      v18 = v17;
    else
      v18 = 0;
    v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v16 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (*(_BYTE *)(v19 + 16) != 11)
      v19 = 0;
    if (v18)
      v20 = v19 == 0;
    else
      v20 = 1;
    if (!v20
      && ((*(_DWORD *)(v18 + 16) >> 19) & 0x1FEu) - 210 <= 7
      && ((*(_DWORD *)(v19 + 16) >> 19) & 0x1FEu) - 210 <= 7)
    {
      v34 = 0;
      v21 = llvm::APFloatBase::EnumToSemantics();
      sub_22E4F00CC((uint64_t)(v16 + 16), v21, (uint64_t)&v35);
      sub_22EF5B2E0(a1[11], v18 & 0xFFFFFFFFFFFFFFF0);
      v22 = (llvm::APFloatBase *)llvm::APFloat::convert();
      v23 = v36;
      if (llvm::APFloatBase::PPCDoubleDouble(v22) == v23)
        sub_22E463170((llvm::APFloatBase *)v37);
      else
        llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v36);
    }
  }
  else if ((v10 + 102) >= 0xF5u)
  {
    v16 = v13;
    if (v14 == 170)
      goto LABEL_41;
  }
LABEL_54:
  v24 = sub_22EFFA6B0(a3);
  v25 = sub_22EFFA6B0(a4);
  v26 = v25;
  v27 = *v24;
  if (v27 == 161)
  {
    v28 = *v25;
    if (v28 == 161)
    {
      if (*((_QWORD *)v24 + 2) != *((_QWORD *)v25 + 2))
        goto LABEL_66;
      return;
    }
    goto LABEL_62;
  }
  if (v27 != 170)
  {
    v28 = *v25;
LABEL_62:
    if ((v28 != 170 || (v25[2] & 0x40) == 0)
      && ((v27 + 113) < 0xFBu || !sub_22EFFA8F0((uint64_t)v24)))
    {
      goto LABEL_66;
    }
    return;
  }
  if ((v24[2] & 0x40) != 0)
    return;
LABEL_66:
  if ((*v26 + 113) < 0xFBu || !sub_22EFFA8F0((uint64_t)v26))
  {
    sub_22E8FCA40(a1, a2, 0x19A9u, 0, (uint64_t)v33);
    sub_22F0D4E74((uint64_t)a3);
    v35 = v29;
    v30 = sub_22E8906A0((uint64_t)v33, &v35);
    sub_22F0D4E74((uint64_t)a4);
    v32 = v31;
    sub_22E8906A0(v30, &v32);
    sub_22E903BEC(v33);
  }
}

void sub_22E9882C0(uint64_t a1, unsigned __int8 *a2, int a3, unsigned int a4, uint64_t a5)
{
  unsigned int v10;
  _QWORD *v11;
  int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  void *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t i;
  unsigned __int8 *v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  char v41;
  uint64_t v42;
  void *v43;
  unsigned __int8 *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  _DWORD *v66;
  uint64_t v67;
  unsigned int v68;
  unsigned int v69;
  uint64_t v70;
  int v71;
  unsigned __int8 *v72;
  unsigned __int8 *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int v82;
  int v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  BOOL v95;
  _BOOL4 v96;
  uint64_t v97;
  _QWORD *v99;
  uint64_t v100;
  BOOL v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t *v108;
  _QWORD *v109;
  uint64_t v110;
  unsigned __int8 *v111;
  unsigned __int8 **v112;
  unsigned __int8 *v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  unint64_t v119;
  uint64_t *v120;
  uint64_t *v121;
  uint64_t *v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _DWORD *v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  _BYTE v131[12];
  char v132;
  void *__p;
  uint64_t v134;
  uint64_t v135;
  char v136;
  void *v137[2];
  uint64_t v138;
  _QWORD v139[5];
  BOOL v140;
  unsigned __int8 v141;
  void *v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  int v151;
  void **v152;
  __int128 v153;
  uint64_t v154;
  unsigned __int8 *v155;
  uint64_t v156;
  char v157;
  unsigned int v158;
  char v159;
  void *v160[2];
  _QWORD v161[5];

  v161[4] = *MEMORY[0x24BDAC8D0];
  v143 = a5;
  v141 = a4;
  if (!a2)
    return;
  sub_22EFF605C((uint64_t)a2);
  if ((v10 & 0x80000000) != 0)
  {
    v18 = *(_QWORD **)(a1 + 112);
    while (1)
    {
      v19 = v10;
      if (sub_22F1E28D4(v18, v10))
        return;
      v10 = sub_22F2AB344(v18, v19);
      if ((v10 & 0x80000000) == 0)
      {
        if ((a5 & 0x80000000) == 0)
          break;
        v20 = a5;
        while (1)
        {
          v21 = v20;
          if (sub_22F1E28D4(v18, v20))
            return;
          v20 = sub_22F2AB344(v18, v21);
          if ((v20 & 0x80000000) == 0)
            goto LABEL_3;
        }
      }
    }
  }
LABEL_3:
  v11 = sub_22EFFEB40(a2);
  v142 = v11;
  v140 = a3 != 0;
  v12 = *(unsigned __int8 *)v11;
  if (v12 == 233)
  {
    if ((*(_DWORD *)v11 & 0x7C0000) != 0x100000)
      return;
    v22 = (void *)v11[2];
    v142 = v22;
    if (a3)
      v23 = 6190;
    else
      v23 = 6189;
    v24 = *(_QWORD *)(a1 + 88) + 2128;
    sub_22F0D4E74((uint64_t)v22);
    v26 = v25;
    v27 = (unsigned __int8 *)sub_22E3B8AAC(v24);
    sub_22E4D6448((uint64_t)(v27 + 336), v26, 1);
    if (!v27)
      v27 = (unsigned __int8 *)sub_22E3B8AAC(v24);
    sub_22E4D6448((uint64_t)(v27 + 336), a5, 1);
    if (!v27)
      v27 = (unsigned __int8 *)sub_22E3B8AAC(v24);
    v28 = *v27;
    v27[v28 + 1] = 2;
    *v27 = v28 + 1;
    *(_QWORD *)&v27[8 * v28 + 16] = a4;
    *(_DWORD *)&v131[8] = v23;
    *(_QWORD *)v131 = v24;
    v29 = (_OWORD *)sub_22E3B8AAC(v24);
    v130 = (unint64_t)v29;
    v30 = *((_OWORD *)v27 + 5);
    v32 = *((_OWORD *)v27 + 2);
    v31 = *((_OWORD *)v27 + 3);
    v29[4] = *((_OWORD *)v27 + 4);
    v29[5] = v30;
    v29[2] = v32;
    v29[3] = v31;
    v33 = *((_OWORD *)v27 + 1);
    *v29 = *(_OWORD *)v27;
    v29[1] = v33;
    for (i = 96; i != 336; i += 24)
      std::string::operator=((std::string *)((char *)v29 + i), (const std::string *)&v27[i]);
    sub_22E78D560((uint64_t)(v29 + 21), (uint64_t)(v27 + 336));
    sub_22E78D658((uint64_t)(v29 + 28), (uint64_t *)v27 + 56);
    sub_22E3BB10C(v24, (unint64_t)v27);
    v35 = sub_22EFFA6B0((unsigned __int8 *)v142);
    v36 = (uint64_t)v35;
    v160[0] = 0;
    v37 = *v35;
    if (v37 == 188)
    {
      v38 = *((_QWORD *)v35 + 3);
    }
    else
    {
      if (v37 != 161)
      {
        if ((v37 + 113) >= 0xFBu
          && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22EFFA9C0((uint64_t)v35, *(_QWORD *)(a1 + 88)) & 0xFFFFFFFFFFFFFFF0)
                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFE) == 0x28)
        {
          v42 = sub_22EFFA604(*(unsigned __int8 **)(v36 + *(unsigned __int8 *)(v36 + 3)));
          if (v42)
          {
            if ((*(_DWORD *)(v42 + 28) & 0x7Eu) - 52 >= 6)
              v43 = 0;
            else
              v43 = (void *)v42;
          }
          else
          {
            v43 = 0;
          }
          v160[0] = v43;
          goto LABEL_33;
        }
LABEL_42:
        v41 = 0;
LABEL_43:
        if (v130 && *(_QWORD *)v131)
          sub_22E3BB10C(*(unint64_t *)v131, v130);
        if ((v41 & 1) != 0)
          return;
        v39 = 1;
        v11 = v142;
        goto LABEL_48;
      }
      v38 = *((_QWORD *)v35 + 2);
    }
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v38 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) & 0xFE) == 0x28)
    {
LABEL_33:
      sub_22EFF605C(v36);
      sub_22E90379C((_QWORD *)a1, v40, (uint64_t)&v130, 0, (uint64_t)&v153);
      sub_22E903BEC((unsigned int *)&v153);
      if (v160[0])
      {
        sub_22E8FCA40((_QWORD *)a1, *((_DWORD *)v160[0] + 6), 0x17ADu, 0, (uint64_t)&v144);
        sub_22E890024((uint64_t)&v144, (uint64_t *)v160);
        sub_22E903BEC((unsigned int *)&v144);
      }
      v41 = 1;
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  if (v12 == 133)
  {
    if (a3)
      v13 = 7046;
    else
      v13 = 7045;
    sub_22EFF605C((uint64_t)v11);
    sub_22E8FCA40((_QWORD *)a1, v14, v13, 0, (uint64_t)&v153);
    sub_22F0D4E74((uint64_t)v142);
    v144 = v15;
    v16 = sub_22E8906A0((uint64_t)&v153, &v144);
    v17 = sub_22E8906A0(v16, &v143);
    sub_22E894E38(v17, &v141);
    sub_22E903BEC((unsigned int *)&v153);
    return;
  }
  v39 = 0;
LABEL_48:
  v139[0] = &v142;
  v139[1] = a1;
  v139[2] = &v140;
  v139[3] = &v143;
  v139[4] = &v141;
  v44 = sub_22EFFA6B0((unsigned __int8 *)v11);
  if ((*v44 + 113) >= 0xFBu)
  {
    v45 = sub_22EFFA604(*(unsigned __int8 **)&v44[v44[3]]);
    if (v45)
    {
      if ((*(_DWORD *)(v45 + 28) & 0x100) != 0 && (*(_DWORD *)(v45 + 28) & 0x7Eu) - 58 >= 0xFFFFFFFA)
      {
        sub_22EFC8E88(v45);
        v47 = *(uint64_t **)v46;
        v48 = *(unsigned int *)(v46 + 8);
        v49 = *(uint64_t **)v46;
        if ((_DWORD)v48)
        {
          v50 = 8 * v48;
          v49 = *(uint64_t **)v46;
          while (*(_WORD *)(*v49 + 32) != 300)
          {
            ++v49;
            v50 -= 8;
            if (!v50)
              goto LABEL_60;
          }
        }
        if (v49 != &v47[v48])
        {
          do
          {
            v52 = *v47++;
            v51 = v52;
          }
          while (*(_WORD *)(v52 + 32) != 300);
          goto LABEL_59;
        }
      }
    }
  }
LABEL_60:
  v53 = *(unsigned __int8 *)v142;
  if (v53 == 188)
  {
    v54 = (unint64_t *)((char *)v142 + 24);
  }
  else
  {
    if (v53 != 161)
      return;
    v54 = (unint64_t *)((char *)v142 + 16);
  }
  v55 = *v54;
  if (*v54 && (sub_22EFBCB70(*v54) & 1) == 0)
  {
    if ((*(_DWORD *)(v55 + 28) & 0x7F) == 0x40)
    {
      v56 = *(unsigned int *)(a1 + 1904);
      if ((_DWORD)v56)
      {
        v57 = *(_QWORD *)(*(_QWORD *)(a1 + 1896) + 8 * v56 - 8);
        if (v57)
        {
          v58 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)(v57 + 608), (void *)v55);
          v59 = *(_QWORD *)(v57 + 616);
          v60 = 624;
          if (v59 == *(_QWORD *)(v57 + 608))
            v60 = 628;
          if (v58 == (void **)(v59 + 8 * *(unsigned int *)(v57 + v60)))
          {
            if ((*(_BYTE *)(v55 + 29) & 1) != 0)
            {
              sub_22EFC8E88(v55);
              v85 = *(uint64_t **)v84;
              v86 = *(unsigned int *)(v84 + 8);
              v87 = *(uint64_t **)v84;
              if ((_DWORD)v86)
              {
                v88 = 8 * v86;
                v87 = *(uint64_t **)v84;
                while (*(_WORD *)(*v87 + 32) != 81)
                {
                  ++v87;
                  v88 -= 8;
                  if (!v88)
                    goto LABEL_132;
                }
              }
              if (v87 != &v85[v86])
              {
                do
                {
                  v92 = *v85++;
                  v51 = v92;
                }
                while (*(_WORD *)(v92 + 32) != 81);
LABEL_59:
                sub_22E988E90((uint64_t)v139, v51);
                return;
              }
            }
LABEL_132:
            v93 = *(_QWORD *)(v55 + 16);
            v94 = v93 & 0xFFFFFFFFFFFFFFF8;
            if ((v93 & 4) != 0)
              v94 = *(_QWORD *)v94;
            v95 = v94 && (*(_WORD *)(v94 + 8) & 0x7Eu) - 58 >= 0xFFFFFFFA;
            v96 = !v95;
            v97 = v96 ? 0 : v94 - 72;
            if (!v96)
            {
              if (*(_QWORD *)(v94 + 72) >= 8uLL && (*(_QWORD *)(v94 + 72) & 6) == 0)
                return;
              v99 = *(_QWORD **)(v94 + 48);
              v100 = *(_QWORD *)(*(_QWORD *)(v94 - 24) & 0xFFFFFFFFFFFFFFF0);
              if (v100)
                v101 = *(_BYTE *)(v100 + 16) == 26;
              else
                v101 = 0;
              if ((v101
                 || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v100 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
                 && (v100 = sub_22F10CF48(v100)) != 0)
                && (v102 = *(_QWORD *)(v100 + 16), (v102 & 0x3FFFC000000000) != 0))
              {
                v103 = v102 >> 38;
                v104 = 8 * (unsigned __int16)(v102 >> 38);
                v105 = v99;
                v106 = &v99[(unsigned __int16)v103];
                while (*v105 != v55)
                {
                  ++v105;
                  v104 -= 8;
                  if (!v104)
                  {
                    v105 = v106;
                    break;
                  }
                }
              }
              else
              {
                v105 = v99;
              }
              v115 = v105;
              v116 = *(_QWORD *)(v94 + 48);
              v117 = *(_QWORD *)(*(_QWORD *)(v97 + 48) & 0xFFFFFFFFFFFFFFF0);
              if (v117)
                v118 = *(_BYTE *)(v117 + 16) == 26;
              else
                v118 = 0;
              if (!v118 && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v117 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26)
                sub_22F10CF48(v117);
              v119 = ((unint64_t)v115 - v116) >> 3;
              v120 = (uint64_t *)sub_22E47E5E0(v97);
LABEL_176:
              v122 = v120;
              if (v120 >= v121)
              {
                if (v120 == v121)
                  goto LABEL_72;
                v123 = v121;
                while (*(_WORD *)(*v123 + 32) != 81)
                {
                  if (++v123 == v120)
                    goto LABEL_72;
                }
                v122 = v120;
              }
              else
              {
                while (*(_WORD *)(*v122 + 32) != 81)
                {
                  if (++v122 == v121)
                    goto LABEL_72;
                }
                v123 = v121;
              }
              if (v122 != v123)
              {
                do
                {
                  v125 = *v120++;
                  v124 = v125;
                }
                while (*(_WORD *)(v125 + 32) != 81);
                v126 = *(unsigned int *)(v124 + 36);
                if ((_DWORD)v126)
                {
                  v127 = *(_DWORD **)(v124 + 40);
                  v128 = 4 * v126;
                  while ((*v127 & 0x3FFFFFFF) + ((2 * *v127) >> 31) - 1 != (_DWORD)v119)
                  {
                    ++v127;
                    v128 -= 4;
                    if (!v128)
                      goto LABEL_176;
                  }
                }
                v51 = v124;
                goto LABEL_59;
              }
            }
          }
        }
      }
    }
LABEL_72:
    v61 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v55 + 48) & 0xFFFFFFFFFFFFFFF0)
                                                             + 8) & 0xFFFFFFFFFFFFFFF0)
                                     + 16)
        - 25;
    if (v61 < 2)
      v62 = v39;
    else
      v62 = 0;
    if (v61 < 2)
      v63 = 1;
    else
      v63 = v39;
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v55 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) & 0xFEu)
       - 2 < 4)
      v64 = 1;
    else
      v64 = v63;
    if (v62 == 1 || v64 == 0)
      return;
    v137[0] = 0;
    v137[1] = 0;
    v138 = 0;
    v145 = 0;
    v149 = 0;
    v150 = 0;
    v151 = 1;
    v147 = 0;
    v148 = 0;
    v146 = 0;
    v144 = MEMORY[0x24BED83D8] + 16;
    v152 = v137;
    llvm::raw_ostream::SetBufferAndMode();
    v66 = v142;
    *(_QWORD *)&v153 = sub_22E8FCD8C(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 80));
    *((_QWORD *)&v153 + 1) = v67;
    sub_22F0D9044(v66, (uint64_t)&v144, 0, &v153, 0, "\n", 1uLL, 0);
    if (v140)
      v68 = 6799;
    else
      v68 = 6655;
    if (v61 < 2)
      v69 = 1;
    else
      v69 = 2;
    if (v39)
      v70 = 0;
    else
      v70 = v69;
    sub_22EFF605C((uint64_t)v142);
    sub_22E8FCA40((_QWORD *)a1, v71, v68, 0, (uint64_t)&v153);
    if (v157)
    {
      v72 = v155;
      if (!v155)
      {
        v72 = (unsigned __int8 *)sub_22E3B8AAC(v156);
        v155 = v72;
      }
      v72[*v72 + 1] = 2;
      v73 = v155;
    }
    else
    {
      if (!v159)
      {
LABEL_100:
        v75 = sub_22E90749C((uint64_t)&v153, v152);
        sub_22F0D4E74((uint64_t)v142);
        v130 = v76;
        v77 = sub_22E8906A0(v75, (uint64_t *)&v130);
        v78 = sub_22E8906A0(v77, &v143);
        sub_22E894E38(v78, &v141);
        sub_22E903BEC((unsigned int *)&v153);
        if (v61 > 1)
        {
LABEL_126:
          llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v144);
          if (SHIBYTE(v138) < 0)
            operator delete(v137[0]);
          return;
        }
        sub_22EFF605C((uint64_t)v142);
        sub_22E8FCA40((_QWORD *)a1, v79, 0x1615u, 0, (uint64_t)&v153);
        sub_22F0D5A50((uint64_t)v142);
        *(_QWORD *)&v131[4] = 0;
        v132 = 0;
        v134 = 0;
        v135 = 0x100000000000000;
        v130 = v80 | ((unint64_t)v80 << 32);
        v131[0] = 0;
        __p = (void *)38;
        v136 = 0;
        sub_22E890748((uint64_t)&v153, &v130);
        if (SHIBYTE(v135) < 0)
          operator delete(__p);
        sub_22E903BEC((unsigned int *)&v153);
        v129 = 0;
        v160[0] = v161;
        v160[1] = (void *)0x400000000;
        sub_22E905328(a1, v142, &v129, v160);
        if (v129 >= 0x10)
        {
          v81 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v129 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          v82 = *(_DWORD *)(v81 + 16);
          if (!v140)
          {
            if ((v82 & 0xFF800FF) != 0x530000B)
              goto LABEL_124;
            goto LABEL_121;
          }
          if (*(_DWORD *)(v81 + 16) == 39)
            goto LABEL_121;
          if ((a3 - 1) > 1)
            goto LABEL_124;
          v83 = *(_DWORD *)(v81 + 16);
          if (v83 == 9)
            goto LABEL_121;
          if (v83 != 44)
          {
            if (v83 != 11 || ((v82 >> 19) & 0x1FE) - 166 >= 0x14)
              goto LABEL_124;
LABEL_121:
            sub_22EFF605C((uint64_t)v142);
            sub_22E8FCA40((_QWORD *)a1, v89, 0x1614u, 0, (uint64_t)&v153);
            sub_22F0D60E4((uint64_t)v142);
            v91 = sub_22F141A3C(v90, 0, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
            *(_QWORD *)&v131[4] = 0;
            v132 = 0;
            v134 = 0;
            v135 = 0x200000000000000;
            v130 = v91 | ((unint64_t)v91 << 32);
            v131[0] = 0;
            __p = (void *)10536;
            v136 = 0;
            sub_22E890748((uint64_t)&v153, &v130);
            if (SHIBYTE(v135) < 0)
              operator delete(__p);
            sub_22E903BEC((unsigned int *)&v153);
            goto LABEL_124;
          }
          v114 = sub_22F114198(*(_QWORD *)(v81 + 24));
          if (((*(_BYTE *)(v114 + 74) & 1) != 0 || *(_QWORD *)(v114 + 128) >= 8uLL)
            && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v81 + 24)) + 76) & 0x80) == 0)
          {
            goto LABEL_121;
          }
        }
LABEL_124:
        if (v160[0] != v161)
          free(v160[0]);
        goto LABEL_126;
      }
      v107 = v154;
      v108 = (uint64_t *)(v153 + 12784);
      if (v154)
        v107 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v154 + 32))(v154);
      v130 = v107;
      v109 = sub_22F2F1D6C(v108, (uint64_t *)&v130);
      v110 = v109[1] + 32 * v158;
      v113 = *(unsigned __int8 **)(v110 + 8);
      v112 = (unsigned __int8 **)(v110 + 8);
      v111 = v113;
      if (!v113)
      {
        v111 = (unsigned __int8 *)sub_22E3B8AAC((uint64_t)v112[1]);
        *v112 = v111;
      }
      v111[*v111 + 1] = 2;
      v73 = *v112;
    }
    v74 = *v73;
    *v73 = v74 + 1;
    *(_QWORD *)&v73[8 * v74 + 16] = v70;
    goto LABEL_100;
  }
}

void sub_22E988E90(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15[6];
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int v23;
  void **v24;
  void *v25[2];
  uint64_t v26;
  BOOL v27;

  v4 = *(_QWORD **)(a1 + 8);
  v27 = *(unsigned __int16 *)(a2 + 32) == 81;
  v25[0] = 0;
  v25[1] = 0;
  v26 = 0;
  v17 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 1;
  v19 = 0;
  v20 = 0;
  v18 = 0;
  v16 = MEMORY[0x24BED83D8] + 16;
  v24 = v25;
  llvm::raw_ostream::SetBufferAndMode();
  v5 = **(_DWORD ***)a1;
  *(_QWORD *)&v15[0] = sub_22E8FCD8C(v4[11], v4[10]);
  *((_QWORD *)&v15[0] + 1) = v6;
  sub_22F0D9044(v5, (uint64_t)&v16, 0, v15, 0, "\n", 1uLL, 0);
  if (**(_BYTE **)(a1 + 16))
    v7 = 6781;
  else
    v7 = 6335;
  sub_22EFF605C(**(_QWORD **)a1);
  sub_22E8FCA40(v4, v8, v7, 0, (uint64_t)v15);
  v9 = sub_22E894E38((uint64_t)v15, (unsigned __int8 *)&v27);
  v10 = sub_22E90749C(v9, v24);
  sub_22F0D4E74(**(_QWORD **)a1);
  v14 = v11;
  v12 = sub_22E8906A0(v10, &v14);
  v13 = sub_22E8906A0(v12, *(uint64_t **)(a1 + 24));
  sub_22E894E38(v13, *(unsigned __int8 **)(a1 + 32));
  sub_22E903BEC((unsigned int *)v15);
  sub_22E8FCA40(v4, *(_DWORD *)(a2 + 16), 0x1590u, 0, (uint64_t)v15);
  sub_22E894E38((uint64_t)v15, (unsigned __int8 *)&v27);
  sub_22E903BEC((unsigned int *)v15);
  llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v16);
  if (SHIBYTE(v26) < 0)
    operator delete(v25[0]);
}

void sub_22E989034(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  unsigned int v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576);
  if ((v3 > 3 || v3 == 2) && (*(_DWORD *)a2 & 0x18000) == 0)
  {
    sub_22E9890B4(a1, a2);
    sub_22E98941C((_QWORD *)a1, (uint64_t)a2, a3);
  }
}

void sub_22E9890B4(uint64_t a1, unsigned __int8 *a2)
{
  int v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 **v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 **v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v21;
  unsigned __int8 **v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;

  while (2)
  {
    if (!a2)
      return;
    v3 = 0;
    while (1)
    {
      v4 = sub_22EFFA6B0(a2);
      v5 = (uint64_t)v4;
      v6 = *v4;
      if (v6 <= 0xBB)
        break;
      if (v6 == 233)
      {
        a2 = (unsigned __int8 *)*((_QWORD *)v4 + 2);
        v7 = (*(_DWORD *)v4 >> 18) & 0x1F;
        if (v7 == 5)
        {
          --v3;
        }
        else
        {
          if (v7 != 4)
            return;
          ++v3;
        }
      }
      else
      {
        if (v6 != 188)
        {
          if (v6 == 191)
          {
            v32 = (unsigned __int8 *)*((_QWORD *)v4 + 3);
            if (v32)
              sub_22E98D734(a1, *((_QWORD *)v4 + 2), v32, 0, v3 > 0, 0);
          }
          return;
        }
        a2 = (unsigned __int8 *)*((_QWORD *)v4 + 2);
      }
LABEL_59:
      if (!a2)
        return;
    }
    if (v6 == 107)
    {
      v9 = (unsigned __int8 **)(v4 + 24);
      v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v4 + 3) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v11 = *(_DWORD *)(v10 + 16);
      if (v10)
        v12 = v11 == 11;
      else
        v12 = 0;
      if (v12)
      {
        v15 = (unsigned __int8 **)(v4 + 16);
        v16 = (uint64_t *)(v4 + 24);
        if (((*(_DWORD *)(v10 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
          goto LABEL_34;
      }
      else if (v10 && v11 == 44)
      {
        v13 = sub_22F114198(*(_QWORD *)(v10 + 24));
        if ((*(_BYTE *)(v13 + 74) & 1) == 0 && *(_QWORD *)(v13 + 128) <= 7uLL)
        {
          v15 = (unsigned __int8 **)(v5 + 16);
          v16 = (uint64_t *)(v5 + 24);
          goto LABEL_34;
        }
        v14 = sub_22F114198(*(_QWORD *)(v10 + 24));
        v15 = (unsigned __int8 **)(v5 + 16);
        v16 = (uint64_t *)(v5 + 24);
        if ((*(_QWORD *)(v14 + 72) & 0x8000000000) != 0)
        {
LABEL_34:
          v17 = *v16;
          v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)*v9 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          v19 = *(_DWORD *)(v18 + 16);
          if (v18)
            v20 = v19 == 11;
          else
            v20 = 0;
          if (v20)
          {
            v22 = v15;
            if (((*(_DWORD *)(v18 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
              goto LABEL_46;
          }
          else if (v18 && v19 == 44)
          {
            v21 = sub_22F114198(*(_QWORD *)(v18 + 24));
            if ((*(_BYTE *)(v21 + 74) & 1) == 0 && (v22 = v15, *(_QWORD *)(v21 + 128) <= 7uLL)
              || (v23 = sub_22F114198(*(_QWORD *)(v18 + 24)), v22 = v15, (*(_QWORD *)(v23 + 72) & 0x8000000000) != 0))
            {
LABEL_46:
              sub_22E98D734(a1, v17, *v22, v5, v3 > 0, 0);
              v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 24) + 8) & 0xFFFFFFFFFFFFFFF0)
                                          + 8) & 0xFFFFFFFFFFFFFFF0);
              v25 = *(_DWORD *)(v24 + 16);
              if (v24)
                v26 = v25 == 11;
              else
                v26 = 0;
              if (v26)
              {
                if (((*(_DWORD *)(v24 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
                {
LABEL_58:
                  a2 = *v9;
                  goto LABEL_59;
                }
              }
              else if (v24 && v25 == 44)
              {
                v27 = sub_22F114198(*(_QWORD *)(v24 + 24));
                if ((*(_BYTE *)(v27 + 74) & 1) == 0 && *(_QWORD *)(v27 + 128) <= 7uLL
                  || (*(_QWORD *)(sub_22F114198(*(_QWORD *)(v24 + 24)) + 72) & 0x8000000000) != 0)
                {
                  goto LABEL_58;
                }
              }
              else if (v25 != 9)
              {
                goto LABEL_58;
              }
              v9 = v15;
              goto LABEL_58;
            }
          }
          else
          {
            v22 = v15;
            if (v19 != 9)
              goto LABEL_46;
          }
          v22 = (unsigned __int8 **)(v5 + 24);
          goto LABEL_46;
        }
      }
      else
      {
        v15 = (unsigned __int8 **)(v4 + 16);
        v16 = (uint64_t *)(v4 + 24);
        if (v11 != 9)
          goto LABEL_34;
      }
      v16 = (uint64_t *)v15;
      goto LABEL_34;
    }
    if (v6 != 141)
    {
      if (v6 != 103)
        return;
      v8 = *((_QWORD *)v4 + 4);
      if (v8)
        sub_22E9890B4(a1, v8);
      a2 = *(unsigned __int8 **)(v5 + 40);
      if (!a2)
        return;
      continue;
    }
    break;
  }
  v28 = *((unsigned int *)v4 + 4);
  if ((_DWORD)v28)
  {
    v29 = &v4[8 * (((unint64_t)*(unsigned int *)v4 >> 18) & 1)
            + 8
            + ((unint64_t)*(unsigned int *)v4 >> 24)];
    v30 = 8 * v28;
    do
    {
      v31 = *(_QWORD *)v29;
      v29 += 8;
      sub_22E9890B4(a1, v31);
      v30 -= 8;
    }
    while (v30);
  }
}

void sub_22E98941C(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  unsigned int v4;
  char *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unsigned __int8 *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BOOL4 v39;
  _BOOL4 v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  int v58;
  int v59;
  unsigned __int8 *v60;
  unsigned __int8 *v61;
  unsigned __int8 *v62;
  uint64_t v63;
  BOOL v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 **v68;
  unsigned __int8 *v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  _QWORD *v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned __int8 **v90;
  _BOOL4 v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t *v95;
  unint64_t v96;
  unsigned __int8 *v97;
  unsigned __int8 *v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 **v101;
  unsigned __int8 *v102;
  uint64_t v103;
  unsigned __int8 **v104;
  int v105;
  int v106;
  unsigned __int8 *v107;
  uint64_t *v108;
  unsigned __int8 *v109;
  unsigned __int8 *v110;
  unsigned __int8 *v111;
  unsigned __int8 *v112;
  uint64_t v113;
  int v114;
  const char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  unint64_t v120;
  char v121;
  int v122;
  uint64_t v123;
  char v125;
  unsigned __int8 *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  llvm::APInt *v131;
  unint64_t v132;
  unint64_t v133;
  _BOOL4 v134;
  uint64_t v135;
  uint64_t *v136;
  int v137;
  int v138;
  unsigned __int8 *v139;
  int v140;
  const char *v141;
  uint64_t v142;
  int v143;
  int v144;
  _BOOL4 v145;
  uint64_t v146;
  int v147;
  int v148;
  BOOL v149;
  int v150;
  unsigned __int8 *v151;
  unsigned __int8 *v152;
  uint64_t v153;
  uint64_t v154;
  unsigned __int8 *v155;
  unsigned __int8 *v156;
  uint64_t v157;
  char v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unsigned __int8 *v163;
  unsigned int v164;
  uint64_t v165;
  BOOL v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int v170;
  int v171;
  unsigned __int8 *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unsigned __int8 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unsigned __int8 *v186;
  BOOL v187;
  char v188;
  uint64_t v189;
  _BYTE *v190;
  unsigned __int8 *v191;
  unsigned __int8 *v192;
  const char *v193;
  size_t v194;
  uint64_t v195;
  BOOL v196;
  _BYTE *v197;
  _BOOL4 v198;
  unsigned __int8 *v199;
  int v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  unsigned __int8 *v205;
  uint64_t v206;
  uint64_t v207;
  unsigned __int8 v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  unsigned __int8 *v238;
  int v239;
  unsigned int v241;
  uint64_t v242;
  int v243;
  BOOL v244;
  _BOOL4 v245;
  _BOOL4 v246;
  unsigned __int8 *v247;
  void *v248;
  unsigned __int8 *v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  uint64_t v253;
  unsigned __int8 *v254;
  unint64_t v256;
  char v257;
  uint64_t v258;
  char v259;
  void *__p;
  uint64_t v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  unsigned int v265;
  unsigned __int8 v266;
  uint64_t v267;
  unsigned int v268;
  unsigned __int8 v269;
  uint64_t v270;
  uint64_t v271;
  _QWORD v272[2];
  _QWORD v273[2];
  __int128 v274;
  uint64_t v275;
  __int128 v276;
  unsigned __int8 v277[24];
  unint64_t v278;
  char *v279;
  uint64_t v280;
  __int128 v281;
  uint64_t v282;
  uint64_t v283;
  unsigned int v284;
  uint64_t v285;
  unsigned int v286;
  unint64_t v287;
  unint64_t v288;
  unsigned __int8 v289;
  void *v290;
  uint64_t v291;
  _QWORD v292[32];
  _BYTE v293[24];
  _QWORD v294[11];

  v3 = (uint64_t)a1;
  v294[8] = *MEMORY[0x24BDAC8D0];
  v290 = v292;
  v292[0] = a2;
  v292[1] = a3;
  v291 = 0x1000000001;
  v4 = 1;
  do
  {
    while (1)
    {
      v5 = (char *)v290 + 16 * v4;
      v7 = (unsigned __int8 *)*((_QWORD *)v5 - 2);
      v6 = *((_QWORD *)v5 - 1);
      LODWORD(v291) = v4 - 1;
      v8 = *((_QWORD *)v7 + 1);
      v9 = sub_22EFFA6B0(v7);
      if ((v6 & 0x100000000) != 0)
      {
        v10 = 1;
      }
      else if (*v7 == 180)
      {
        v10 = *(_BYTE *)(*(_QWORD *)(v3 + 72) + 1) & 1;
      }
      else
      {
        v10 = 0;
      }
      if ((*(_DWORD *)v9 & 0x18000) != 0)
        goto LABEL_43;
      v11 = *(_DWORD *)v9;
      v12 = v11 == 210 && (*(_QWORD *)(*(_QWORD *)(v3 + 72) + 232) & 0x400000000000) == 0;
      v13 = v9;
      if (v12)
      {
        if (*((_QWORD *)v9 + 2))
          v13 = (unsigned __int8 *)*((_QWORD *)v9 + 2);
        else
          v13 = v9;
        v11 = *v13;
      }
      v254 = v9;
      if (v11 == 233 && (*(_DWORD *)v13 & 0x7C0000) == 0x200000 && sub_22EFF5C90(*((unsigned __int8 **)v13 + 2), 1))
      {
        if ((v13[2] & 0x78) != 0)
          v14 = *((_DWORD *)v13 + 1);
        else
          sub_22F0D5A50(*((_QWORD *)v13 + 2));
        sub_22E8FCA40((_QWORD *)v3, v14, 0x18A9u, 0, (uint64_t)&v274);
        sub_22F0D4E74((uint64_t)v7);
        *(_QWORD *)v293 = v15;
        v16 = sub_22E8906A0((uint64_t)&v274, (uint64_t *)v293);
        v17 = 0;
        v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v18)
          v19 = *(_DWORD *)(v18 + 16) == 11;
        else
          v19 = 0;
        if (v19)
          v17 = (*(_DWORD *)(v18 + 16) & 0xFF80000) == 87031808;
        v277[0] = v17;
        v20 = sub_22E894E38(v16, v277);
        if ((v13[2] & 0x78) != 0)
          v21 = *((_DWORD *)v13 + 1);
        else
          sub_22F0D5A50(*((_QWORD *)v13 + 2));
        v259 = 0;
        v258 = 0;
        v261 = 0;
        v262 = 0x100000000000000;
        __p = (void *)33;
        v263 = 0;
        v256 = v21 | ((unint64_t)v21 << 32);
        v257 = 1;
        sub_22E890748(v20, &v256);
        if (SHIBYTE(v262) < 0)
          operator delete(__p);
        sub_22E903BEC((unsigned int *)&v274);
      }
      if ((*v13 & 0xFE) == 0x70
        && ((*(_DWORD *)v13 >> 18) & 0x3D | 2) == 0x12
        && sub_22EFF5C90(*((unsigned __int8 **)v13 + 2), 1)
        && sub_22EFF5C90(*((unsigned __int8 **)v13 + 3), 1)
        && sub_22F0005B0(*((_QWORD *)v13 + 2), *(_QWORD *)(v3 + 88), 1, v22, v23, v24, v25, v26)
        && sub_22F0005B0(*((_QWORD *)v13 + 3), *(_QWORD *)(v3 + 88), 1, v27, v28, v29, v30, v31))
      {
        sub_22F0D5A50(*((_QWORD *)v13 + 2));
        sub_22E8FCA40((_QWORD *)v3, v114, 0x18A8u, 0, (uint64_t)&v274);
        if ((*(_DWORD *)v13 & 0xFC0000) == 0x400000)
          v115 = "&";
        else
          v115 = "|";
        v116 = sub_22F311B00((uint64_t)&v274, (uint64_t)v115);
        sub_22F0D4E74((uint64_t)v7);
        *(_QWORD *)v293 = v117;
        v118 = sub_22E8906A0(v116, (uint64_t *)v293);
        v119 = *(_DWORD *)v13;
        v120 = *((unsigned int *)v13 + 1) | ((unint64_t)*((unsigned int *)v13 + 1) << 32);
        v259 = 0;
        v258 = 0;
        v261 = 0;
        v262 = 0;
        __p = 0;
        v263 = 0;
        v256 = v120;
        v257 = 1;
        if ((v119 & 0xFC0000) == 0x400000)
          v121 = 38;
        else
          v121 = 124;
        LOBYTE(__p) = v121;
        BYTE1(__p) = v121;
        HIBYTE(v262) = 2;
        sub_22E890748(v118, &v256);
        if (SHIBYTE(v262) < 0)
          operator delete(__p);
        sub_22E903BEC((unsigned int *)&v274);
        sub_22F0D5A50(*((_QWORD *)v13 + 2));
        sub_22E8FCA40((_QWORD *)v3, v122, 0x1560u, 0, (uint64_t)&v256);
        sub_22E903BEC((unsigned int *)&v256);
      }
      if ((*v13 & 0xFE) == 0x66)
      {
        sub_22E9A5F38((_QWORD *)v3, v13, v6, v8);
        goto LABEL_43;
      }
      v248 = (void *)v8;
      v252 = v6;
      v250 = v10;
      if ((*v13 + 113) >= 0xFBu)
      {
        v32 = *((unsigned int *)v13 + 4);
        if ((_DWORD)v32)
        {
          v33 = 0;
          v34 = v13;
          do
          {
            v35 = *(unsigned int *)v13;
            v36 = v35 >> 24;
            v37 = (v35 >> 18) & 1;
            v38 = *(_QWORD *)&v34[8 * v37 + 8 + (v35 >> 24)];
            if (sub_22E9A61A0((unsigned __int8 *)v38, 1))
            {
              v39 = v33 && sub_22E9A61A0(*(unsigned __int8 **)&v34[8 * v37 + v36], 0);
              v40 = v33 < (v32 - 1) && sub_22E9A61A0(*(unsigned __int8 **)&v34[8 * v37 + 16 + v36], 0);
              if (v39 || v40)
              {
                v41 = sub_22EFFA6B0((unsigned __int8 *)v38);
                sub_22E99B090(a1, (uint64_t)v41, *((_QWORD *)v41 + 1), *(_QWORD *)(v38 + 8), v252, 0x19F0u, 0);
              }
            }
            ++v33;
            v34 += 8;
          }
          while (v32 != v33);
        }
      }
      v3 = (uint64_t)a1;
      if (*((void **)v13 + 1) != v248)
        sub_22E9972C0(a1, v13, v248, v252, 0, v250);
      v42 = v254;
      LODWORD(v43) = *v254;
      if ((_DWORD)v43 == 217)
      {
        v43 = *(unsigned int *)v254;
        v44 = 8 * (v43 >> 18);
        v45 = v44 - 8;
        if (v44 != 8)
        {
          v46 = 0;
          if (v250)
            v47 = 0x100000000;
          else
            v47 = 0;
          v48 = v47 & 0xFFFFFFFF00000000 | v252;
          do
          {
            v49 = *(unsigned __int8 **)&v42[v46 + 24];
            if (*v49 == 210)
            {
              v50 = *((_QWORD *)v49 + 2);
              v51 = v291;
              if (v291 >= (unint64_t)HIDWORD(v291))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v42 = v254;
                v51 = v291;
              }
              v52 = (char *)v290 + 16 * v51;
              *v52 = v50;
              v52[1] = v48;
              LODWORD(v291) = v291 + 1;
            }
            v46 += 8;
          }
          while (v45 != v46);
          LOBYTE(v43) = *v42;
          v3 = (uint64_t)a1;
        }
      }
      if ((v43 + 103) >= 0xF6u)
        break;
      if ((v43 & 0xFE) != 0x70)
        goto LABEL_123;
      v53 = (*(_DWORD *)v42 >> 18) & 0x3F;
      if ((v53 - 9) <= 6)
      {
        v55 = *((_QWORD *)v42 + 2);
        v54 = *((_QWORD *)v42 + 3);
        v56 = *(_QWORD *)(v55 + 8);
        v57 = (uint64_t *)(v56 & 0xFFFFFFFFFFFFFFF0);
        if (*(_QWORD *)(*(_QWORD *)((v56 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v54 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
          || (*(_DWORD *)v42 & 0x10000) != 0)
        {
          v72 = *((unsigned int *)v42 + 1);
          v69 = v42;
          v73 = v3;
          v74 = *((_QWORD *)v42 + 2);
LABEL_106:
          sub_22E98941C(v73, v74, v72);
          v71 = (unsigned __int8 *)*((_QWORD *)v69 + 3);
          goto LABEL_107;
        }
        if (!sub_22F110744(*v57, *(_QWORD *)(v3 + 88)))
        {
LABEL_258:
          if (sub_22F110D38(*v57))
          {
            v151 = sub_22EFFA6B0((unsigned __int8 *)v55);
            v152 = sub_22EFFA6B0((unsigned __int8 *)v54);
            if ((*(_BYTE *)(*(_QWORD *)(v3 + 72) + 1) & 1) == 0)
            {
              v153 = *(_QWORD *)(*((_QWORD *)v151 + 1) & 0xFFFFFFFFFFFFFFF0);
              if (v153 && *(_BYTE *)(v153 + 16) == 48)
                v151 = sub_22EFFA6B0(*(unsigned __int8 **)(v153 + 24));
              v154 = *(_QWORD *)(*((_QWORD *)v152 + 1) & 0xFFFFFFFFFFFFFFF0);
              if (v154 && *(_BYTE *)(v154 + 16) == 48)
                v152 = sub_22EFFA6B0(*(unsigned __int8 **)(v154 + 24));
            }
            v155 = v152;
            v156 = v151;
            if (sub_22F110B20(*(_QWORD *)(*((_QWORD *)v151 + 1) & 0xFFFFFFFFFFFFFFF0))
              || (v155 = v151, v156 = v152, sub_22F110B20(*(_QWORD *)(*((_QWORD *)v152 + 1) & 0xFFFFFFFFFFFFFFF0))))
            {
              v157 = *(_QWORD *)(v3 + 88);
              v159 = (*(_DWORD *)(*(_QWORD *)(v3 + 3688) + 576 * *(unsigned int *)(v3 + 3696) - 576) & 0xFFFFFFFE) == 4
                  || *(_BYTE *)(v3 + 3209) != 0;
              v160 = sub_22E99BE54(*((_QWORD *)v156 + 1));
              v161 = sub_22EF6A330(v157, v160);
              v162 = sub_22E99B4C0(v157, v156, v161, v159, 1);
              sub_22E98941C(v3, v151, *((unsigned int *)v254 + 1));
              sub_22E98941C(v3, v152, *((unsigned int *)v254 + 1));
              if ((v162 & 0x100000000) == 0)
              {
                v163 = v254;
                if ((*(_DWORD *)v254 & 0xF80000) != 0x380000)
                  goto LABEL_283;
                v164 = sub_22EF6A330(*(_QWORD *)(v3 + 88), v56);
                v165 = *(_QWORD *)(v3 + 88);
                v166 = (*(_DWORD *)(*(_QWORD *)(v3 + 3688) + 576 * *(unsigned int *)(v3 + 3696) - 576) & 0xFFFFFFFE) != 4
                    && *(_BYTE *)(v3 + 3209) == 0;
                v167 = !v166;
                v168 = sub_22E99BE54(*((_QWORD *)v155 + 1));
                v169 = sub_22EF6A330(v165, v168);
                v170 = sub_22E99B4C0(v165, v155, v169, v167, 1);
                v163 = v254;
                if (v164 <= v170)
                {
LABEL_283:
                  v171 = *((_DWORD *)v163 + 1);
                  v172 = v163;
                  v173 = *(_QWORD *)(v3 + 88) + 2128;
                  *(_QWORD *)&v274 = 0;
                  *((_QWORD *)&v274 + 1) = v173;
                  LODWORD(v275) = 6754;
                  v174 = *((_QWORD *)v151 + 1);
                  *(_QWORD *)&v274 = sub_22E3B8AAC(v173);
                  *(_BYTE *)(v274 + *(unsigned __int8 *)v274 + 1) = 9;
                  v175 = v274;
                  v176 = *(unsigned __int8 *)v274;
                  v177 = v176 + 1;
                  *(_BYTE *)v274 = v176 + 1;
                  *(_QWORD *)(v175 + 8 * v176 + 16) = v174;
                  v178 = *((_QWORD *)v152 + 1);
                  *(_BYTE *)(v175 + v177 + 1) = 9;
                  v179 = v274;
                  v180 = *(unsigned __int8 *)v274;
                  *(_BYTE *)v274 = v180 + 1;
                  *(_QWORD *)(v179 + 8 * v180 + 16) = v178;
                  sub_22F0D4E74((uint64_t)v151);
                  sub_22E4D6448(v179 + 336, v181, 1);
                  sub_22F0D4E74((uint64_t)v152);
                  v183 = v182;
                  v184 = v274;
                  if (!(_QWORD)v274)
                  {
                    v184 = sub_22E3B8AAC(*((uint64_t *)&v274 + 1));
                    *(_QWORD *)&v274 = v184;
                  }
                  sub_22E4D6448(v184 + 336, v183, 1);
                  *(_QWORD *)v293 = v172;
                  sub_22EB52944(v3, v171, v293, 1uLL, (uint64_t *)&v274);
                  if ((_QWORD)v274 && *((_QWORD *)&v274 + 1))
                    sub_22E3BB10C(*((unint64_t *)&v274 + 1), v274);
                }
              }
              goto LABEL_43;
            }
          }
          v69 = v254;
          v74 = *((_QWORD *)v254 + 2);
          v72 = *((unsigned int *)v254 + 1);
          v73 = v3;
          goto LABEL_106;
        }
        sub_22F00905C(v54, *(_QWORD *)(v3 + 88), 0, (uint64_t)&v267);
        sub_22F00905C(v55, *(_QWORD *)(v3 + 88), 0, (uint64_t)&v264);
        v58 = v269;
        v59 = v266;
        if (v269 && v266)
          goto LABEL_80;
        if ((v269 != 0) == (v266 != 0))
          goto LABEL_250;
        if (v269)
          v107 = (unsigned __int8 *)v55;
        else
          v107 = (unsigned __int8 *)v54;
        v108 = &v267;
        if (!v269)
          v108 = &v264;
        v253 = (uint64_t)v108;
        v289 = v269;
        if (*(_DWORD *)(v3 + 10680) > *(_DWORD *)(v3 + 11956))
        {
LABEL_250:
          if (v59 && v265 >= 0x41 && v264)
            MEMORY[0x2348A0E84](v264, 0x1000C8000313F17);
          if (v269 && v268 >= 0x41 && v267)
            MEMORY[0x2348A0E84](v267, 0x1000C8000313F17);
          goto LABEL_258;
        }
        if (v269)
          v109 = (unsigned __int8 *)v54;
        else
          v109 = (unsigned __int8 *)v55;
        v110 = sub_22EFFA6B0(v109);
        v111 = sub_22EFFA6B0(v107);
        v112 = v111;
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v110 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                      + 16) == 44)
        {
          v113 = *((_QWORD *)v111 + 1);
          if (*(_QWORD *)(*(_QWORD *)((*((_QWORD *)v110 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((v113 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
            goto LABEL_250;
        }
        else
        {
          v113 = *((_QWORD *)v111 + 1);
        }
        v249 = v110;
        v123 = *(_QWORD *)(v3 + 88);
        v125 = (*(_DWORD *)(*(_QWORD *)(v3 + 3688) + 576 * *(unsigned int *)(v3 + 3696) - 576) & 0xFFFFFFFE) == 4
            || *(_BYTE *)(v3 + 3209) != 0;
        v126 = v112;
        v127 = sub_22E99BE54(v113);
        v128 = sub_22EF6A330(v123, v127);
        v288 = sub_22E99B4C0(v123, v126, v128, v125, 0);
        v247 = v126;
        v129 = *((_QWORD *)v126 + 1);
        v287 = v129;
        v130 = *(_QWORD *)(v129 & 0xFFFFFFFFFFFFFFF0);
        if (v130 && *(_BYTE *)(v130 + 16) == 6)
        {
          v131 = (llvm::APInt *)v253;
        }
        else
        {
          v131 = (llvm::APInt *)v253;
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v130 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 6)
          {
LABEL_207:
            v132 = sub_22E99C018(*(_QWORD *)(v3 + 88), v129);
            v133 = v287;
            if ((*(_BYTE *)(*(_QWORD *)(v3 + 72) + 1) & 0x40) != 0
              && (v145 = sub_22F3E9660(*(_QWORD *)(v3 + 3440), v287, "BOOL", 4uLL, (uint64_t *)(*(_QWORD *)(v3 + 3440) + 672)), v133 = v287, v145))
            {
              v134 = 0;
              v146 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v287 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
              if (v146)
              {
                v147 = *(_DWORD *)(v146 + 16);
                if (v147 == 11)
                  v134 = (v147 & 0xFF80000) == 93847552;
              }
            }
            else
            {
              v134 = 0;
            }
            v135 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v133 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
            v246 = v134;
            if (v135 && (*(_DWORD *)(v135 + 16) & 0xFF800FF) == 0x530000B)
            {
              v245 = 0;
              if (!v134)
                goto LABEL_215;
            }
            else
            {
              v245 = sub_22EFF5C90(v247, 1);
              if (!v134 && !v245)
              {
LABEL_215:
                if (v58)
                  v136 = &v267;
                else
                  v136 = &v264;
                sub_22E9A6268((llvm::APInt *)&v283, v288, *((_DWORD *)v136 + 2), *((_BYTE *)v136 + 12));
                v251 = sub_22E9A6674((llvm::APInt *)&v283, (uint64_t)v131);
                sub_22E9A6808((uint64_t)&v281, (*(_DWORD *)v254 >> 18) & 0x3F, v251, v289);
                if ((_BYTE)v282)
                {
                  sub_22E9A6268((llvm::APInt *)&v274, v132, *((_DWORD *)v136 + 2), *((_BYTE *)v136 + 12));
                  v137 = sub_22E9A6674((llvm::APInt *)&v274, (uint64_t)v131);
                  sub_22E9A6808((uint64_t)v293, (*(_DWORD *)v254 >> 18) & 0x3F, v137, v289);
                  v138 = v293[16];
                  v244 = v293[16] != 0;
                  if (v293[16])
                  {
                    v281 = *(_OWORD *)v293;
                    v282 = *(_QWORD *)&v293[16];
                    v251 = v137;
                  }
                  if (v276 >= 0x41 && v275)
                    MEMORY[0x2348A0E84](v275, 0x1000C8000313F17);
                  if (DWORD2(v274) >= 0x41 && (_QWORD)v274)
                    MEMORY[0x2348A0E84](v274, 0x1000C8000313F17);
                  if (v138 || (_DWORD)v288)
                  {
                    if (v251 < 0x40)
                      goto LABEL_301;
                    v139 = sub_22EFFA6B0(v249);
                    if (*v139 != 161 || (*(_DWORD *)(*((_QWORD *)v139 + 2) + 28) & 0x7F) != 0x43)
                    {
                      sub_22F0D5A50((uint64_t)v249);
                      if (v140 < 0)
                      {
                        v141 = sub_22F142460(v140, *(_QWORD *)(v3 + 112), *(_DWORD **)(v3 + 72));
                        switch(v142)
                        {
                          case 2:
                            v143 = *(unsigned __int16 *)v141;
                            v144 = 20302;
                            goto LABEL_242;
                          case 3:
                            v148 = *((unsigned __int8 *)v141 + 2);
                            v149 = *(unsigned __int16 *)v141 == 17753;
                            v150 = 83;
                            goto LABEL_290;
                          case 4:
                            v143 = *(_DWORD *)v141;
                            v144 = 1702195828;
LABEL_242:
                            if (v143 != v144)
                              goto LABEL_243;
                            break;
                          case 5:
                            v148 = *((unsigned __int8 *)v141 + 4);
                            v149 = *(_DWORD *)v141 == 1936482662;
                            v150 = 101;
LABEL_290:
                            if (!v149 || v148 != v150)
                              goto LABEL_243;
                            break;
                          default:
                            goto LABEL_243;
                        }
                      }
                      if ((*(_DWORD *)v247 & 0x1C00) == 0x400)
                      {
                        v186 = v249;
                        if (sub_22E42E5EC((uint64_t)v131, 0))
                        {
                          v187 = sub_22F110C5C(*(_QWORD *)(*((_QWORD *)v247 + 1) & 0xFFFFFFFFFFFFFFF0));
                          if (v138)
                            v188 = 1;
                          else
                            v188 = v187;
                          v244 = v188;
                        }
                      }
                      else
                      {
LABEL_301:
                        v186 = v249;
                      }
                      if (*v186 == 161)
                      {
                        if ((*(_DWORD *)(*((_QWORD *)v186 + 2) + 28) & 0x7F) == 0x43)
                          v189 = *((_QWORD *)v186 + 2);
                        else
                          v189 = 0;
                      }
                      else
                      {
                        v189 = 0;
                      }
                      *(_QWORD *)v293 = v294;
                      *(_OWORD *)&v293[8] = xmmword_22F44E300;
                      sub_22F242C48((uint64_t)v277, (uint64_t)v293);
                      if (v189)
                      {
                        v190 = v279;
                        if ((unint64_t)v279 >= v278)
                        {
                          v191 = (unsigned __int8 *)llvm::raw_ostream::write((llvm::raw_ostream *)v277);
                        }
                        else
                        {
                          ++v279;
                          *v190 = 39;
                          v191 = v277;
                        }
                        (*(void (**)(uint64_t, unsigned __int8 *))(*(_QWORD *)v189 + 88))(v189, v191);
                        v195 = *((_QWORD *)v191 + 4);
                        if ((unint64_t)(*((_QWORD *)v191 + 3) - v195) > 2)
                        {
                          *(_BYTE *)(v195 + 2) = 40;
                          *(_WORD *)v195 = 8231;
                          *((_QWORD *)v191 + 4) += 3;
                        }
                        else
                        {
                          v191 = (unsigned __int8 *)llvm::raw_ostream::write((llvm::raw_ostream *)v191, "' (");
                        }
                        v196 = v244;
                        llvm::APInt::print(v131, (llvm::raw_ostream *)v191);
                        v197 = (_BYTE *)*((_QWORD *)v191 + 4);
                        if (*((_BYTE **)v191 + 3) == v197)
                        {
                          llvm::raw_ostream::write((llvm::raw_ostream *)v191, ")");
                        }
                        else
                        {
                          *v197 = 41;
                          ++*((_QWORD *)v191 + 4);
                        }
                        v198 = v246;
                      }
                      else
                      {
                        v192 = sub_22EFFA6B0(v186);
                        if (*v192 == 195)
                        {
                          if (v192[16])
                            v193 = "YES";
                          else
                            v193 = "NO";
                          if (v192[16])
                            v194 = 3;
                          else
                            v194 = 2;
                          if (v194 <= v278 - (unint64_t)v279)
                          {
                            memcpy(v279, v193, v194);
                            v279 += v194;
                          }
                          else
                          {
                            llvm::raw_ostream::write((llvm::raw_ostream *)v277, v193);
                          }
                          v3 = (uint64_t)a1;
                        }
                        else
                        {
                          llvm::APInt::print(v131, (llvm::raw_ostream *)v277);
                        }
                        v198 = v246;
                        v196 = v244;
                      }
                      v199 = v254;
                      if (v196)
                      {
                        if (v198)
                        {
                          v200 = *((_DWORD *)v254 + 1);
                          v201 = *(_QWORD *)(v3 + 88) + 2128;
                          *(_QWORD *)&v274 = 0;
                          *((_QWORD *)&v274 + 1) = v201;
                          LODWORD(v275) = 7033;
                          sub_22E3B89A8((unsigned __int8 **)&v274, *(void **)v280, *(_QWORD *)(v280 + 8));
                          sub_22E3B89A8((unsigned __int8 **)&v274, (void *)v281, *((size_t *)&v281 + 1));
                          v273[0] = v254;
                          goto LABEL_346;
                        }
                        if (v251 < 0x40)
                        {
                          v202 = 6867;
LABEL_335:
                          v200 = *((_DWORD *)v199 + 1);
                          v203 = *(_QWORD *)(v3 + 88) + 2128;
                          *(_QWORD *)&v274 = 0;
                          *((_QWORD *)&v274 + 1) = v203;
                          LODWORD(v275) = v202;
                          sub_22E3B89A8((unsigned __int8 **)&v274, *(void **)v280, *(_QWORD *)(v280 + 8));
                          v204 = 0;
                          if (*v249 == 117)
                          {
                            if ((v249[2] & 4) != 0)
                              v204 = 1;
                            else
                              v204 = 2;
                          }
                          v205 = (unsigned __int8 *)v274;
                          if (!(_QWORD)v274)
                          {
                            v205 = (unsigned __int8 *)sub_22E3B8AAC(*((uint64_t *)&v274 + 1));
                            *(_QWORD *)&v274 = v205;
                          }
                          v205[*v205 + 1] = 2;
                          v206 = v274;
                          v207 = *(unsigned __int8 *)v274;
                          v208 = v207 + 1;
                          *(_BYTE *)v274 = v207 + 1;
                          *(_QWORD *)(v206 + 8 * v207 + 16) = v204;
                          v209 = v287;
                          *(_BYTE *)(v206 + v208 + 1) = 9;
                          v210 = v274;
                          v211 = *(unsigned __int8 *)v274;
                          *(_BYTE *)v274 = v211 + 1;
                          *(_QWORD *)(v210 + 8 * v211 + 16) = v209;
                          *(_BYTE *)(v210 + (v211 + 1) + 1) = 2;
                          v212 = v274;
                          v213 = *(unsigned __int8 *)v274;
                          *(_BYTE *)v274 = v213 + 1;
                          *(_QWORD *)(v212 + 8 * v213 + 16) = v245;
                          sub_22E3B89A8((unsigned __int8 **)&v274, (void *)v281, *((size_t *)&v281 + 1));
                          sub_22F0D4E74(*((_QWORD *)v254 + 2));
                          v215 = v214;
                          v216 = v274;
                          if (!(_QWORD)v274)
                          {
                            v216 = sub_22E3B8AAC(*((uint64_t *)&v274 + 1));
                            *(_QWORD *)&v274 = v216;
                          }
                          sub_22E4D6448(v216 + 336, v215, 1);
                          sub_22F0D4E74(*((_QWORD *)v254 + 3));
                          v218 = v217;
                          v219 = v274;
                          if (!(_QWORD)v274)
                          {
                            v219 = sub_22E3B8AAC(*((uint64_t *)&v274 + 1));
                            *(_QWORD *)&v274 = v219;
                          }
                          sub_22E4D6448(v219 + 336, v218, 1);
                          v273[0] = v254;
LABEL_346:
                          sub_22EB52944(v3, v200, v273, 1uLL, (uint64_t *)&v274);
                          if ((_QWORD)v274 && *((_QWORD *)&v274 + 1))
                            sub_22E3BB10C(*((unint64_t *)&v274 + 1), v274);
LABEL_349:
                          llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v277);
                          if (*(_QWORD **)v293 != v294)
                            free(*(void **)v293);
                          if (v286 >= 0x41 && v285)
                            MEMORY[0x2348A0E84](v285, 0x1000C8000313F17);
                          if (v284 >= 0x41 && v283)
                            MEMORY[0x2348A0E84](v283, 0x1000C8000313F17);
LABEL_80:
                          sub_22E98941C(v3, *((_QWORD *)v254 + 2), *((unsigned int *)v254 + 1));
                          sub_22E98941C(v3, *((_QWORD *)v254 + 3), *((unsigned int *)v254 + 1));
                          if (v266 && v265 >= 0x41 && v264)
                            MEMORY[0x2348A0E84](v264, 0x1000C8000313F17);
                          if (v269 && v268 >= 0x41 && v267)
                            MEMORY[0x2348A0E84](v267, 0x1000C8000313F17);
                          goto LABEL_43;
                        }
                        if (sub_22EFF5C90(v247, 1))
                        {
                          v202 = 7032;
                          v199 = v254;
                          goto LABEL_335;
                        }
                        v232 = v287;
                        v233 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + 16408);
                        v234 = *(_QWORD *)(*((_QWORD *)v107 + 1) & 0xFFFFFFFFFFFFFFF0);
                        v235 = *(_QWORD *)(*(_QWORD *)(v234 + 8) & 0xFFFFFFFFFFFFFFF0);
                        v236 = *(_DWORD *)(v235 + 16);
                        if (v235 && v236 == 11)
                        {
                          if (((*(_DWORD *)(v235 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
                            goto LABEL_383;
LABEL_373:
                          if (!sub_22F110930(v234)
                            || (v238 = sub_22EFFA6B0(v107),
                                !sub_22F110930(*(_QWORD *)(*((_QWORD *)v238 + 1) & 0xFFFFFFFFFFFFFFF0))))
                          {
                            if (sub_22E42E5EC(v253, 0))
                            {
                              while (*v107 == 153)
                              {
                                v239 = (*(_DWORD *)v107 >> 18) & 0x7F;
                                if (v239 != 30 && v239 != 5)
                                  break;
                                v107 = (unsigned __int8 *)*((_QWORD *)v107 + 2);
                              }
                              if ((v232 & 0xFFFFFFFFFFFFFFF8) == v233)
                                v243 = 7114;
                              else
                                v243 = 7112;
                              if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v107 + 1) & 0xFFFFFFFFFFFFFFF0)
                                                                    + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 16) == 44)
                                v241 = 7115;
                              else
                                v241 = v243;
LABEL_384:
                              v199 = v254;
                              v3 = (uint64_t)a1;
                              sub_22E8FCA40(a1, *((_DWORD *)v254 + 1), v241, 0, (uint64_t)&v274);
                              v242 = sub_22E894E38((uint64_t)&v274, &v289);
                              v222 = sub_22E8901B8(v242, (uint64_t *)&v287);
LABEL_358:
                              v223 = v222;
                              v273[0] = sub_22EFFBA38((*(_DWORD *)v199 >> 18) & 0x3F);
                              v273[1] = v224;
                              v225 = sub_22F2F2210(v223, (uint64_t)v273);
                              v226 = *(_QWORD *)(v280 + 8);
                              v272[0] = *(_QWORD *)v280;
                              v272[1] = v226;
                              v227 = sub_22F2F2210(v225, (uint64_t)v272);
                              v228 = sub_22F2F2210(v227, (uint64_t)&v281);
                              sub_22F0D4E74(*((_QWORD *)v199 + 2));
                              v271 = v229;
                              v230 = sub_22E8906A0(v228, &v271);
                              sub_22F0D4E74(*((_QWORD *)v199 + 3));
                              v270 = v231;
                              sub_22E8906A0(v230, &v270);
                              sub_22E903BEC((unsigned int *)&v274);
                              goto LABEL_349;
                            }
                          }
                        }
                        else
                        {
                          if (!v235 || v236 != 44)
                          {
                            if (v236 != 9)
                              goto LABEL_383;
                            goto LABEL_373;
                          }
                          v237 = sub_22F114198(*(_QWORD *)(v235 + 24));
                          if (((*(_BYTE *)(v237 + 74) & 1) != 0 || *(_QWORD *)(v237 + 128) > 7uLL)
                            && (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v235 + 24)) + 76) & 0x80) == 0)
                          {
                            v234 = *(_QWORD *)(*((_QWORD *)v107 + 1) & 0xFFFFFFFFFFFFFFF0);
                            goto LABEL_373;
                          }
                        }
LABEL_383:
                        v241 = 7035;
                        goto LABEL_384;
                      }
                      sub_22E8FCA40((_QWORD *)v3, *((_DWORD *)v254 + 1), 0x1B7Au, 0, (uint64_t)&v274);
                      v220 = sub_22E894E38((uint64_t)&v274, &v289);
                      v221 = sub_22E89519C(v220, (unsigned int *)&v288);
                      v222 = sub_22E894E38(v221, (unsigned __int8 *)&v288 + 4);
                      goto LABEL_358;
                    }
                  }
                }
LABEL_243:
                if (v286 >= 0x41 && v285)
                  MEMORY[0x2348A0E84](v285, 0x1000C8000313F17);
                if (v284 >= 0x41 && v283)
                  MEMORY[0x2348A0E84](v283, 0x1000C8000313F17);
                v59 = v266;
                goto LABEL_250;
              }
            }
            BYTE4(v288) = 1;
            LODWORD(v288) = 1;
            v132 = 0x100000001;
            goto LABEL_215;
          }
          v130 = sub_22F10CF48(v130);
          if (!v130)
          {
            v129 = v287;
            goto LABEL_207;
          }
        }
        v129 = *(_QWORD *)(v130 + 32);
        v287 = v129;
        goto LABEL_207;
      }
      if (v53 != 21)
      {
        if ((v53 - 21) <= 0xA)
        {
          sub_22E98941C(v3, *((_QWORD *)v42 + 2), *((unsigned int *)v42 + 1));
          sub_22E98941C(v3, *((_QWORD *)v254 + 3), *((unsigned int *)v254 + 1));
          v75 = v254;
          v76 = *(_QWORD *)(*((_QWORD *)v254 + 2) + 8);
          v77 = *(_QWORD *)(*(_QWORD *)(v76 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
          if (*(_BYTE *)(*(_QWORD *)v77 + 16) == 6)
          {
            sub_22E8FCA40((_QWORD *)v3, *((_DWORD *)v254 + 1), 0x1855u, 0, (uint64_t)&v274);
            sub_22E903BEC((unsigned int *)&v274);
            v75 = v254;
            v76 = *(_QWORD *)(*((_QWORD *)v254 + 2) + 8);
            v77 = *(_QWORD *)(*(_QWORD *)(v76 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
          }
          v78 = *(_QWORD *)v77;
          if (*(_BYTE *)(v78 + 16) != 11)
            v78 = 0;
          v79 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v75 + 5) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
          if (*(_BYTE *)(v79 + 16) != 11)
            v79 = 0;
          if (v78)
            v80 = v79 == 0;
          else
            v80 = 1;
          if (v80 || ((*(_DWORD *)(v79 + 16) >> 19) & 0x1FEu) - 210 > 7)
            goto LABEL_43;
          v81 = (*(_DWORD *)(v78 + 16) >> 19) & 0x1FE;
          if ((v81 - 166) > 0x13)
          {
            if ((v81 - 210) > 7
              || sub_22EF6A204(*(_QWORD *)(v3 + 88), v78 & 0xFFFFFFFFFFFFFFF0, v79 & 0xFFFFFFFFFFFFFFF0) != -1|| sub_22E90086C(*(_QWORD **)(v3 + 112), *((_DWORD *)v254 + 1)))
            {
              goto LABEL_43;
            }
            v82 = *((_QWORD *)v254 + 3);
            v76 = *(_QWORD *)(*((_QWORD *)v254 + 2) + 8);
            v84 = *((_DWORD *)v254 + 1);
            v83 = *(_QWORD *)(v82 + 8);
            v85 = (_QWORD *)v3;
            v86 = 6635;
          }
          else
          {
            v82 = (uint64_t)v254;
            v83 = *(_QWORD *)(*((_QWORD *)v254 + 3) + 8);
            v84 = *((_DWORD *)v254 + 1);
            v85 = (_QWORD *)v3;
            v86 = 6633;
          }
          sub_22E99B090(v85, v82, v83, v76, v84, v86, 0);
          goto LABEL_43;
        }
LABEL_123:
        if ((v43 | 8) == 0xE8)
          goto LABEL_43;
        v87 = v43 & 0xFE;
        sub_22EFF605C((uint64_t)v254);
        v89 = v88;
        if (v87 == 112)
          v90 = (unsigned __int8 **)v254;
        else
          v90 = 0;
        if (v90)
          v91 = (*(_DWORD *)v90 & 0xFC0000) == 4980736;
        else
          v91 = 0;
        sub_22F0D492C((uint64_t)v254);
        *(_OWORD *)v293 = v274;
        v93 = v276;
        *(_QWORD *)&v293[16] = v275;
        v94 = *((_QWORD *)&v276 + 1);
        v96 = *((_QWORD *)&v274 + 1);
        v95 = (uint64_t *)v274;
        if (v274 != v276)
        {
          v99 = 0x100000000;
          if (!v250)
            v99 = 0;
          v100 = v99 | v89;
          do
          {
            v101 = (unsigned __int8 **)v95;
            if ((v96 & 3) != 0)
            {
              if ((v96 & 0xFFFFFFFFFFFFFFFCLL) != 0)
                v101 = (unsigned __int8 **)((v96 & 0xFFFFFFFFFFFFFFFCLL) + 40);
              else
                v101 = (unsigned __int8 **)sub_22F3AC1A8(*v95);
            }
            v102 = *v101;
            if (*v101 && *v102 - 102 <= 0x84 && (!v91 || *sub_22EFFA6B0(*v101) != 225))
            {
              v103 = v291;
              if (v291 >= (unint64_t)HIDWORD(v291))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v103 = v291;
              }
              v104 = (unsigned __int8 **)((char *)v290 + 16 * v103);
              *v104 = v102;
              v104[1] = (unsigned __int8 *)v100;
              LODWORD(v291) = v291 + 1;
            }
            if ((v96 & 3) != 0)
            {
              if (v96 < 4)
                sub_22F3F2FE0((uint64_t)v293, 1);
              else
                sub_22F0D8720((uint64_t)v293);
            }
            else
            {
              *(_QWORD *)v293 = v95 + 1;
            }
            v96 = *(_QWORD *)&v293[8];
            v95 = *(uint64_t **)v293;
          }
          while (*(_OWORD *)v293 != __PAIR128__(v94, v93));
        }
        v3 = (uint64_t)a1;
        if (v90 && ((*(_DWORD *)v90 >> 18) & 0x3Fu) - 19 <= 1)
        {
          v97 = sub_22EFFA6B0(v90[2]);
          if (v91 && *v97 == 225)
          {
            v98 = sub_22EFFA6B0(v90[3]);
            goto LABEL_160;
          }
          sub_22E98AF9C((int)a1, v97);
          v98 = sub_22EFFA6B0(v90[3]);
          if (v91)
          {
LABEL_160:
            if (*v98 != 225)
              goto LABEL_161;
          }
          else
          {
LABEL_161:
            sub_22E98AF9C((int)a1, v98);
          }
        }
        if (*v254 != 233)
          goto LABEL_43;
        v105 = (*(_DWORD *)v254 >> 18) & 0x1F;
        if (v105 == 4)
          goto LABEL_43;
        if (v105 == 9)
        {
          sub_22E98AF9C((int)a1, *((void **)v254 + 2));
        }
        else
        {
          v92 = *((_QWORD *)v254 + 2);
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v92 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) == 6)
            goto LABEL_167;
        }
        goto LABEL_43;
      }
      v69 = v42;
      sub_22E98941C(v3, *((_QWORD *)v42 + 2), *((unsigned int *)v42 + 1));
      v70 = sub_22F0018D8(*((unsigned __int8 **)v69 + 2));
      if (v70
        && sub_22E98B43C((_QWORD *)v3, (uint64_t)v70, *((unsigned __int8 **)v69 + 3), *((_DWORD *)v69 + 1)))
      {
        v71 = sub_22EFFA6B0(*((unsigned __int8 **)v69 + 3));
LABEL_107:
        sub_22E98941C(v3, v71, *((unsigned int *)v69 + 1));
        goto LABEL_43;
      }
      sub_22E98941C(v3, *((_QWORD *)v69 + 3), *((unsigned int *)v69 + 1));
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v69 + 2) + 8) & 0xFFFFFFFFFFFFFFF0)
                                            + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) == 6)
      {
        v92 = *((_QWORD *)v69 + 3);
LABEL_167:
        sub_22F0D5A50(v92);
        sub_22E8FCA40((_QWORD *)v3, v106, 0x1855u, 0, (uint64_t)&v274);
        sub_22E903BEC((unsigned int *)&v274);
      }
LABEL_43:
      v4 = v291;
      if (!(_DWORD)v291)
        goto LABEL_391;
    }
    v60 = v42;
    v61 = sub_22EFFA6B0(*((unsigned __int8 **)v42 + 2));
    v62 = v61;
    v63 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v60 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v63)
      v64 = (*(_DWORD *)(v63 + 16) & 0xFF800FF) == 86507531;
    else
      v64 = 0;
    if (!v64
      && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v61 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 6)
    {
      sub_22F0D5A50((uint64_t)v61);
      sub_22E8FCA40((_QWORD *)v3, v65, 0x1855u, 0, (uint64_t)&v274);
      sub_22E903BEC((unsigned int *)&v274);
    }
    if (v250)
      v66 = 0x100000000;
    else
      v66 = 0;
    v67 = v291;
    if (v291 >= (unint64_t)HIDWORD(v291))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v67 = v291;
    }
    v68 = (unsigned __int8 **)((char *)v290 + 16 * v67);
    *v68 = v62;
    v68[1] = (unsigned __int8 *)(v66 & 0xFFFFFFFF00000000 | v252);
    v4 = v291 + 1;
    LODWORD(v291) = v4;
  }
  while (v4);
LABEL_391:
  if (v290 != v292)
    free(v290);
}

void sub_22E98AF9C(uint64_t a1, unsigned __int8 *a2, unsigned int a3)
{
  unsigned __int8 *v5;

  if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 2) & 0x80) == 0)
  {
    v5 = sub_22EFFA6B0(a2);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v5 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) != 6)
      sub_22E9972C0(a1, v5, *(_QWORD *)(*(_QWORD *)(a1 + 88) + 16400), a3, 0, 0);
  }
}

void sub_22E98B01C(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[3];

  v12[2] = *MEMORY[0x24BDAC8D0];
  v10 = v12;
  v11 = 0x200000000;
  sub_22E4639CC((uint64_t)&v10, 1uLL, a2);
  v3 = v11;
  do
  {
    v4 = (unsigned __int8 *)*((_QWORD *)v10 + v3 - 1);
    LODWORD(v11) = v3 - 1;
    v5 = sub_22EFFBBCC(v4);
    v6 = *v5;
    if ((v6 & 0xFE) == 0x70 || (v7 = *v4, v7 == 202))
    {
      sub_22F0080CC(v5, *(_QWORD *)(a1 + 88));
    }
    else if (v7 == 180)
    {
      sub_22E3D0148((uint64_t)&v10, *((_BYTE **)v4 + 2), (_BYTE *)(*((_QWORD *)v4 + 2) + ((*((_QWORD *)v4 + 3) - *((_QWORD *)v4 + 2)) & 0x7FFFFFFF8)));
    }
    else
    {
      if ((v6 + 113) >= 0xFBu)
      {
        v8 = (char *)&v5[8 * (((unint64_t)*(unsigned int *)v5 >> 18) & 1)
                       + 8
                       + ((unint64_t)*(unsigned int *)v5 >> 24)];
        v9 = *((unsigned int *)v5 + 4);
      }
      else
      {
        if (v6 != 200)
          goto LABEL_9;
        v8 = (char *)(v5 + 48);
        v9 = *((unsigned __int16 *)v5 + 12);
      }
      sub_22F246808((uint64_t)&v10, v8, &v8[8 * v9]);
    }
LABEL_9:
    v3 = v11;
  }
  while ((_DWORD)v11);
  if (v10 != v12)
    free(v10);
}

void sub_22E98B16C(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  unsigned __int8 *v4;
  uint64_t i;
  uint64_t v6[2];
  void *v7;
  uint64_t v8;
  _DWORD v9[8];
  uint64_t v10;
  llvm *v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  _QWORD *v17;
  unsigned int v18;
  int v19;
  _QWORD v20[9];

  v20[8] = *MEMORY[0x24BDAC8D0];
  v17 = v20;
  v19 = 8;
  v20[0] = a2;
  v3 = 1;
  do
  {
    v4 = (unsigned __int8 *)v17[v3 - 1];
    v18 = v3 - 1;
    v6[0] = *(_QWORD *)(a1 + 88);
    v6[1] = a1;
    v7 = v9;
    v9[0] = 0;
    v8 = 0x800000001;
    v10 = 1;
    for (i = 9; i != 137; i += 8)
      v6[i] = -4096;
    v13 = 0;
    v14 = 0;
    v15 = (void **)&v17;
    v16 = 0;
    sub_22E9A6910((uint64_t)v6, v4);
    if ((v10 & 1) == 0)
      llvm::deallocate_buffer(v11, (void *)((unint64_t)v12 << 6));
    if (v7 != v9)
      free(v7);
    v3 = v18;
  }
  while (v18);
  if (v17 != v20)
    free(v17);
}

_QWORD *sub_22E98B2B0(uint64_t a1, unsigned __int8 *a2, unsigned int a3, char a4)
{
  BOOL v7;
  char v8;
  _QWORD *result;

  v7 = (a4 & 1) != 0 || *a2 == 172;
  v8 = *(_BYTE *)(a1 + 3209);
  *(_BYTE *)(a1 + 3209) = v7;
  sub_22E989034(a1, a2, a3);
  if ((a2[1] & 0x40) == 0)
    sub_22E98B16C(a1, (uint64_t)a2);
  if ((a4 & 1) == 0 && (a2[2] & 1) == 0)
    sub_22E98B01C(a1, (uint64_t)a2);
  result = sub_22E98B348((_QWORD *)a1);
  *(_BYTE *)(a1 + 3209) = v8;
  return result;
}

_QWORD *sub_22E98B348(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  BOOL v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15[24];
  unint64_t v16;

  v1 = *((unsigned int *)result + 3270);
  if ((_DWORD)v1)
  {
    v2 = 32 * v1;
    v3 = (uint64_t *)(result[1634] + 16);
    do
    {
      v4 = result;
      v5 = *(v3 - 1);
      v16 = v5;
      v6 = *(_QWORD *)(v5 + 40) & 0xFFFFFFFFFFFFFFF8;
      v7 = (*(_QWORD *)(v5 + 40) & 7) != 0 || v6 == 0;
      if (v7 || !**(_DWORD **)(v6 + 16))
      {
        v8 = *(_QWORD *)(v5 + 120);
        if ((v8 & 4) == 0)
        {
          v9 = v8 & 0xFFFFFFFFFFFFFFF8;
          if (v9)
            v16 = v9;
        }
      }
      sub_22F0D5A50(*(v3 - 2));
      sub_22E8FCA40(v4, v10, 0x1B75u, 0, (uint64_t)v15);
      v11 = sub_22E890024((uint64_t)v15, v3);
      v12 = sub_22E890024(v11, (uint64_t *)&v16);
      sub_22F0D4E74(*(v3 - 2));
      v14 = v13;
      sub_22E8906A0(v12, &v14);
      sub_22E903BEC(v15);
      result = v4;
      v3 += 4;
      v2 -= 32;
    }
    while (v2);
  }
  *((_DWORD *)result + 3270) = 0;
  return result;
}

uint64_t sub_22E98B43C(_QWORD *a1, uint64_t a2, unsigned __int8 *a3, int a4)
{
  uint64_t *v5;
  unint64_t v6;
  uint64_t v11;
  uint64_t v14;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t i;
  uint64_t v36;
  void *v37;
  const void *v38;
  void **v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  unint64_t v56;
  unsigned int v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *__p[2];
  unint64_t v68;
  void *__dst[2];
  unint64_t v70;
  void *v71;
  unsigned int v72;
  char v73;
  uint64_t v74;
  unsigned int v75;
  char v76;
  uint64_t v77;
  uint64_t v78[2];
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  char v82;
  _QWORD *v83;
  __int128 v84;
  _QWORD v85[11];

  v85[9] = *MEMORY[0x24BDAC8D0];
  v77 = a2;
  if ((*(_BYTE *)(a2 + 28) & 0x80) != 0)
    return 0;
  v5 = (uint64_t *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(*v5 + 8) & 0xFFFFFFFFFFFFFFF0;
  if (*(_QWORD *)v6 && (*(_DWORD *)(*(_QWORD *)v6 + 16) & 0xFF800FF) == 87031819)
    return 0;
  if (*(_DWORD *)(*(_QWORD *)v6 + 16) == 44)
  {
    v78[0] = 0;
    v11 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 24));
    v78[0] = v11;
    if ((*(_BYTE *)(a1[9] + 1) & 2) != 0
      && (*(_QWORD *)(v11 + 128) < 8uLL || (*(_QWORD *)(v11 + 128) & 4) == 0)
      && (*(_QWORD *)(v11 + 72) & 0x7F800000) != 0
      && (*(_QWORD *)(v11 + 72) & 0x7F80000000) == 0)
    {
      sub_22E8FCA40(a1, a4, 0x1A70u, 0, (uint64_t)&v83);
      sub_22E890024((uint64_t)&v83, v78);
      sub_22E903BEC((unsigned int *)&v83);
    }
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0;
  }
  v14 = *(_QWORD *)v6;
  if (v14 && (*(_DWORD *)(v14 + 16) & 0xFF800FF) == 87031819)
    return 0;
  v16 = *(_QWORD *)(a2 + 72) & 0xFFFFFFFFFFFFFFFCLL;
  v17 = v16;
  v18 = *(_QWORD *)(a2 + 72) & 3;
  if ((*(_DWORD *)(a2 + 72) & 3) != 0 && (_DWORD)v18 != 3)
    v17 = *(_QWORD *)(v16 + 8);
  if ((*(_BYTE *)(v17 + 2) & 1) != 0)
    return 0;
  if ((_DWORD)v18 && (_DWORD)v18 != 3)
    v16 = *(_QWORD *)(v16 + 8);
  if ((*(_BYTE *)(v16 + 1) & 0x80) != 0 || (*(_DWORD *)a3 & 0x18000) != 0)
    return 0;
  v21 = sub_22EFFA6B0(a3);
  v22 = sub_22EFC2EF4(a2, a1[11]);
  LOWORD(v78[0]) = 0;
  v78[1] = 0;
  LODWORD(v79) = 0;
  if (sub_22F00554C((uint64_t)v21, (uint64_t)v78, a1[11], 2, 0))
  {
    v23 = v81;
    v75 = v81;
    if (v81 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v74, (const llvm::APInt *)&v80);
      v23 = v75;
    }
    else
    {
      v74 = v80;
    }
    v76 = v82;
    if (v82)
      goto LABEL_50;
    v29 = (uint64_t *)(v74 + 8 * ((v23 - 1) >> 6));
    if (v23 < 0x41)
      v29 = &v74;
    if ((((unint64_t)*v29 >> (v23 - 1)) & 1) != 0)
    {
LABEL_50:
      if (*v21 == 233 && ((*(_DWORD *)v21 >> 18) & 0x1Fu) - 7 <= 1)
        v23 = v23 - sub_22E99C40C((llvm::APInt *)&v74) + 1;
    }
    if (v23 <= v22)
    {
      v19 = 0;
LABEL_106:
      if (v75 >= 0x41 && v74)
        MEMORY[0x2348A0E84](v74, 0x1000C8000313F17);
      goto LABEL_124;
    }
    llvm::APInt::trunc((llvm::APInt *)&v74);
    v72 = v84;
    v71 = v83;
    v73 = v76;
    v73 = !sub_22F110930(*v5);
    sub_22E46361C((llvm::APInt *)&v71, (uint64_t)&v83);
    if (v72 >= 0x41 && v71)
      MEMORY[0x2348A0E84](v71, 0x1000C8000313F17);
    v71 = v83;
    v72 = v84;
    v73 = BYTE4(v84);
    if (!sub_22E4634B4((uint64_t)&v74, (uint64_t)&v71) || v22 == 1 && sub_22E42E5EC((uint64_t)&v74, 1))
    {
      v19 = 0;
LABEL_103:
      if (v72 >= 0x41 && v71)
        MEMORY[0x2348A0E84](v71, 0x1000C8000313F17);
      goto LABEL_106;
    }
    v83 = v85;
    v84 = xmmword_22F455490;
    llvm::APInt::toString();
    v37 = (void *)v84;
    if ((unint64_t)v84 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_126;
    v38 = v83;
    if ((unint64_t)v84 >= 0x17)
    {
      v40 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
      if (((unint64_t)v84 | 7) != 0x17)
        v40 = v84 | 7;
      v41 = v40 + 1;
      v39 = (void **)operator new(v40 + 1);
      __dst[1] = v37;
      v70 = v41 | 0x8000000000000000;
      __dst[0] = v39;
    }
    else
    {
      HIBYTE(v70) = v84;
      v39 = __dst;
      if (!(_QWORD)v84)
      {
LABEL_86:
        *((_BYTE *)v37 + (_QWORD)v39) = 0;
        if (v83 != v85)
          free(v83);
        v83 = v85;
        v84 = xmmword_22F455490;
        llvm::APInt::toString();
        v42 = (void *)v84;
        if ((unint64_t)v84 <= 0x7FFFFFFFFFFFFFF7)
        {
          v43 = v83;
          if ((unint64_t)v84 >= 0x17)
          {
            v45 = (v84 & 0xFFFFFFFFFFFFFFF8) + 8;
            if (((unint64_t)v84 | 7) != 0x17)
              v45 = v84 | 7;
            v46 = v45 + 1;
            v44 = operator new(v45 + 1);
            __p[1] = v42;
            v68 = v46 | 0x8000000000000000;
            __p[0] = v44;
          }
          else
          {
            HIBYTE(v68) = v84;
            v44 = __p;
            if (!(_QWORD)v84)
              goto LABEL_96;
          }
          memmove(v44, v43, (size_t)v42);
LABEL_96:
          *((_BYTE *)v42 + (_QWORD)v44) = 0;
          if (v83 != v85)
            free(v83);
          sub_22E8FCA40(a1, a4, 0x19E2u, 0, (uint64_t)&v83);
          v47 = sub_22E90749C((uint64_t)&v83, __dst);
          v48 = sub_22E90749C(v47, __p);
          v66 = *((_QWORD *)v21 + 1);
          v49 = sub_22E8901B8(v48, &v66);
          sub_22F0D4E74((uint64_t)a3);
          v65 = v50;
          sub_22E8906A0(v49, &v65);
          sub_22E903BEC((unsigned int *)&v83);
          if (SHIBYTE(v68) < 0)
            operator delete(__p[0]);
          if (SHIBYTE(v70) < 0)
            operator delete(__dst[0]);
          v19 = 1;
          goto LABEL_103;
        }
LABEL_126:
        abort();
      }
    }
    memmove(v39, v38, (size_t)v37);
    goto LABEL_86;
  }
  v19 = 0;
  v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v21 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v24 || *(_BYTE *)(v24 + 16) != 44)
    goto LABEL_124;
  __dst[0] = (void *)sub_22F114198(*(_QWORD *)(v24 + 24));
  v25 = sub_22F110930(*v5);
  v26 = *((_QWORD *)__dst[0] + 9);
  v27 = v26 & 0x7F80000000;
  LOBYTE(v71) = (v26 & 0x7F80000000) != 0;
  if (v25)
  {
    if (v27)
      goto LABEL_113;
    if (v22 != (v26 >> 23))
      goto LABEL_115;
    v28 = 6988;
  }
  else
  {
    if (!v27)
      goto LABEL_115;
    v28 = 7113;
  }
  sub_22E8FCA40(a1, a4, v28, 0, (uint64_t)&v83);
  v30 = sub_22E890024((uint64_t)&v83, &v77);
  sub_22E890024(v30, (uint64_t *)__dst);
  sub_22E903BEC((unsigned int *)&v83);
  v31 = v77;
  v32 = *(_QWORD *)(v77 + 56);
  v33 = v32 & 0xFFFFFFFFFFFFFFF8;
  if ((v32 & 4) != 0)
    v33 = *(_QWORD *)(v33 + 32);
  if (!v33)
  {
    __p[0] = 0;
    goto LABEL_112;
  }
  v34 = *(_QWORD **)v33;
  v83 = v34;
  *(_QWORD *)&v84 = v33 + 8;
  for (i = (uint64_t)v34; ; i = sub_22F115B7C(i))
  {
    while (1)
    {
      if ((i & 0xF) != 0)
        goto LABEL_77;
      v36 = *(unsigned __int8 *)(*(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v36 <= 0x39)
        break;
LABEL_72:
      if (sub_22F115668(i))
        v34 = (_QWORD *)i;
      i = sub_22F115B7C(i);
      if (!i)
        goto LABEL_111;
    }
    if (v36 == 24)
      goto LABEL_110;
    if (v36 == 26)
      break;
    if (((1 << v36) & 0x20000000200003CLL) == 0)
      goto LABEL_72;
LABEL_77:
    ;
  }
  if ((*(_BYTE *)(i + 23) & 0x10) == 0)
    goto LABEL_77;
LABEL_110:
  v34 = (_QWORD *)i;
LABEL_111:
  v51 = sub_22F115668((uint64_t)v34);
  __p[0] = (void *)(v51 | ((unint64_t)sub_22F1167E8((uint64_t *)&v83) << 32));
  v31 = v77;
LABEL_112:
  v52 = sub_22EFBAFDC(v31);
  sub_22E8FCA40(a1, v52, 0x1563u, 0, (uint64_t)&v83);
  v53 = sub_22E894E38((uint64_t)&v83, (unsigned __int8 *)&v71);
  sub_22E8906A0(v53, (uint64_t *)__p);
  sub_22E903BEC((unsigned int *)&v83);
  if (!(_BYTE)v71)
  {
LABEL_115:
    v57 = (*((_DWORD *)__dst[0] + 18) >> 23);
    goto LABEL_116;
  }
LABEL_113:
  v54 = *((_QWORD *)__dst[0] + 9);
  v55 = (v54 >> 23);
  v56 = v54 >> 31;
  v57 = (v54 >> 31);
  if (v55 + 1 > v56)
    v57 = v55 + 1;
LABEL_116:
  LODWORD(v74) = v57;
  if (v57 > v22)
  {
    if ((*(_BYTE *)(v77 + 68) & 1) != 0)
    {
      v58 = *(_QWORD *)(v77 + 72) & 0xFFFFFFFFFFFFFFFCLL;
      v59 = *(_QWORD *)(v77 + 72) & 3;
      if ((_DWORD)v59 && (_DWORD)v59 != 3)
        v58 = *(_QWORD *)(v58 + 8);
    }
    else
    {
      v58 = 0;
    }
    sub_22E8FCA40(a1, a4, 0x18A6u, 0, (uint64_t)&v83);
    v60 = sub_22E890024((uint64_t)&v83, &v77);
    sub_22E890024(v60, (uint64_t *)__dst);
    sub_22E903BEC((unsigned int *)&v83);
    sub_22EFF605C(v58);
    sub_22E8FCA40(a1, v61, 0x181Fu, 0, (uint64_t)&v83);
    v62 = sub_22E89519C((uint64_t)&v83, (unsigned int *)&v74);
    v63 = sub_22E890024(v62, (uint64_t *)__dst);
    sub_22F0D4E74(v58);
    __p[0] = v64;
    sub_22E8906A0(v63, (uint64_t *)__p);
    sub_22E903BEC((unsigned int *)&v83);
  }
  v19 = 0;
LABEL_124:
  if (v79 >= 2)
    sub_22EF53BC0(&v79);
  return v19;
}

uint64_t sub_22E98BD04(uint64_t a1, uint64_t *a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t *v7;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  BOOL v39;
  char v40;
  int v41;
  int v42;
  int v43;
  char v44;
  int v45;
  uint64_t v46;
  unsigned int v47;
  _DWORD *v48;
  uint64_t v49;
  int v50;
  _DWORD *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t i;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  unint64_t v77;
  int v78;
  _BOOL4 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  unsigned int v129;
  uint64_t v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned int v139[25];
  unsigned int v140;
  uint64_t v141[3];
  char *v142;
  __int128 v143;
  uint64_t *v144;
  __int128 v145;
  _QWORD *v146;
  uint64_t v147;
  int v148;
  _QWORD v149[8];

  v149[6] = *MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v7 = a2;
    v9 = 0;
    v10 = &a2[a3];
    while (1)
    {
      v11 = *v7;
      if ((*(_BYTE *)(*v7 + 28) & 0x80) == 0)
      {
        v12 = *(_DWORD *)(v11 + 24);
        v13 = *(_QWORD *)(v11 + 48);
        v144 = (uint64_t *)&unk_24FAB6EF8;
        LODWORD(v145) = 4962;
        if (sub_22EE8B0B0(a1, v12, v13))
        {
          v9 = 1;
          sub_22EFC77E8(v11, 1);
        }
      }
      if (a4)
      {
        v14 = *(_QWORD *)(v11 + 40) >= 8uLL && (*(_QWORD *)(v11 + 40) & 7) == 0;
        if (!v14 && (*(_BYTE *)(v11 + 29) & 2) == 0 && (**(_WORD **)(a1 + 72) & 0x108) == 0)
        {
          sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v11 + 24), 0x14D2u, 0, (uint64_t)v139);
          sub_22E903BEC(v139);
        }
      }
      v15 = sub_22EFBF144(v11);
      v16 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0);
      v17 = *(_DWORD *)(v16 + 16);
      if ((v17 & 0x800) != 0)
        break;
LABEL_15:
      if ((*(_BYTE *)(v11 + 28) & 0x80) == 0)
      {
        v18 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v11 + 48) & 0xFFFFFFFFFFFFFFF0));
        if (v18)
        {
          v19 = v18;
          if ((*(_DWORD *)(v18 + 28) & 0x7Fu) - 35 <= 2 && (*(_DWORD *)(v18 + 28) & 0x80) == 0)
          {
            sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v18 + 104) + 96), *(_QWORD *)(v18 + 104));
            if ((**(_QWORD **)(v19 + 128) & 0x8000000000000000) == 0
              && (sub_22EFC7ADC(v19 + 64) & 1) == 0
              && (*(_BYTE *)(v19 + 76) & 4) != 0)
            {
              v21 = sub_22EC6602C(a1, v19) & 0xFFFFFFFFFFFFFFF8;
              sub_22EB4E494(a1, *(unsigned int *)(v11 + 24), v21, 1);
              LODWORD(v144) = *(_DWORD *)(v11 + 24);
              sub_22EB17F48(a1, v21, &v144, 1, 0, 0, 0, 0);
            }
          }
        }
      }
      if ((*(_BYTE *)(v11 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v11);
        v23 = *(uint64_t **)v22;
        v24 = *(unsigned int *)(v22 + 8);
        v25 = *(uint64_t **)v22;
        if ((_DWORD)v24)
        {
          v26 = 8 * v24;
          v25 = *(uint64_t **)v22;
          while (*(_WORD *)(*v25 + 32) != 83)
          {
            ++v25;
            v26 -= 8;
            if (!v26)
              goto LABEL_54;
          }
        }
        if (v25 != &v23[v24])
        {
          do
          {
            v30 = *v23++;
            v29 = v30;
          }
          while (*(_WORD *)(v30 + 32) != 83);
          v31 = *(_QWORD *)(v11 + 48);
          if ((v31 & 1) == 0 && (*(_BYTE *)((v31 & 0xFFFFFFFFFFFFFFF0) + 8) & 1) == 0)
          {
            sub_22E8FCA40((_QWORD *)a1, *(_DWORD *)(v11 + 24), 0xB18u, 0, (uint64_t)&v144);
            v142 = sub_22F39BDE0(v29);
            v49 = sub_22E8AECC4((uint64_t)&v144, (uint64_t *)&v142);
            LODWORD(v141[0]) = 1;
            sub_22E8900C4(v49, (int *)v141);
            sub_22E903BEC((unsigned int *)&v144);
          }
        }
      }
LABEL_54:
      v32 = *(_QWORD *)(a1 + 72);
      if ((*(_BYTE *)(v32 + 1) & 1) == 0 || (*(_BYTE *)(v11 + 28) & 0x80) != 0)
        goto LABEL_75;
      v33 = *(_QWORD *)(v11 + 16);
      v34 = v33 & 0xFFFFFFFFFFFFFFF8;
      if ((v33 & 4) != 0)
        v34 = *(_QWORD *)v34;
      if (!v34)
        goto LABEL_75;
      v35 = *(_WORD *)(v34 + 8) & 0x7F;
      if (v35 - 1 < 2)
      {
        v36 = -40;
LABEL_67:
        v37 = *(_QWORD *)(v34 + v36 + 16);
        v38 = v37 & 0xFFFFFFFFFFFFFFF8;
        if ((v37 & 4) != 0)
          v38 = *(_QWORD *)v38;
        if (v38)
          v39 = (*(_WORD *)(v38 + 8) & 0x7Fu) - 38 >= 0xFFFFFFFD;
        else
          v39 = 0;
        if (v39)
        {
          LODWORD(v144) = *(_DWORD *)(v11 + 24);
          sub_22EAAC6B4((_QWORD *)a1, (int *)&v144, *(_QWORD *)(v11 + 40), v38 - 64, 0);
          v32 = *(_QWORD *)(a1 + 72);
        }
        goto LABEL_75;
      }
      if (v35 == 24)
        goto LABEL_66;
      if (v35 - 52 <= 5)
      {
        v36 = -40;
        if ((*(_WORD *)(v34 + 8) & 0x7Fu) > 0x46)
        {
          switch(v35)
          {
            case 'S':
              goto LABEL_67;
            case 'G':
              v36 = -56;
              goto LABEL_67;
            case 'Q':
              goto LABEL_67;
          }
        }
        else
        {
          if (v35 <= 0x18)
          {
            if (v35 == 16)
            {
LABEL_66:
              v36 = -48;
              goto LABEL_67;
            }
            if (((1 << v35) & 0x1066) != 0)
              goto LABEL_67;
          }
          if (v35 == 70)
          {
            v36 = -64;
            goto LABEL_67;
          }
        }
        if (v35 - 52 < 6)
        {
          v36 = -72;
        }
        else
        {
          v36 = -64;
          if (v35 - 33 >= 5)
            v36 = -48;
        }
        goto LABEL_67;
      }
LABEL_75:
      if (!a5 || (*(_QWORD *)(v32 + 100) & 0x2000000000) == 0)
        goto LABEL_81;
      if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v11 + 48) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) != 0
        || sub_22EFC1F80(a5)
        || !sub_22E9A9E30(a5) && !sub_22EFC18B0(a5))
      {
        goto LABEL_79;
      }
      v41 = sub_22EFC18B0(a5);
      v42 = *(_DWORD *)(v11 + 28);
      if (v41)
      {
        if ((v42 & 0x80) == 0)
        {
          v43 = *(_DWORD *)(v11 + 24);
          v144 = (uint64_t *)a1;
          LODWORD(v145) = v43;
          *((_QWORD *)&v145 + 1) = v149;
          v146 = v149;
          v147 = 4;
          v148 = 0;
          sub_22E991D20((uint64_t)&v144, *(_QWORD *)(v11 + 48));
          v40 = v44;
          if (v146 != *((_QWORD **)&v145 + 1))
            free(v146);
          goto LABEL_80;
        }
        goto LABEL_97;
      }
      if ((v42 & 0x80) != 0)
      {
        if ((*(_DWORD *)(v11 + 28) & 0x7F) == 0x40)
        {
          v48 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
          v144 = (uint64_t *)v11;
          *(_QWORD *)&v145 = 0;
          sub_22EF757BC(v48, &v144, &v145, (uint64_t)&v142);
        }
LABEL_97:
        v40 = 0;
        goto LABEL_80;
      }
      v40 = 1;
      switch(sub_22EA4DA58((_QWORD *)a1, v11, a5, 0, 0, 0))
      {
        case 0u:
          v45 = sub_22EA55C38((_QWORD *)a1, v11, a5, 0, 0, 0);
          if (v45 > 10)
          {
            if (v45 == 11)
            {
              v46 = *(_QWORD *)(a1 + 88);
              v47 = 11;
            }
            else
            {
              if (v45 != 12)
                goto LABEL_80;
              v46 = *(_QWORD *)(a1 + 88);
              v47 = 12;
            }
            goto LABEL_129;
          }
          if (v45)
          {
            if (v45 == 10)
            {
              v46 = *(_QWORD *)(a1 + 88);
              v47 = 10;
LABEL_129:
              sub_22EF594DC(v46, v47, v11);
            }
          }
          else
          {
            v50 = sub_22EA54A84((_QWORD *)a1, v11, a5, 0, 0, 0);
            if (v50 > 13)
            {
              if (v50 == 14)
              {
                v46 = *(_QWORD *)(a1 + 88);
                v47 = 14;
              }
              else
              {
                if (v50 != 15)
                  goto LABEL_80;
                v46 = *(_QWORD *)(a1 + 88);
                v47 = 15;
              }
              goto LABEL_129;
            }
            if (v50)
            {
              if (v50 != 13)
                goto LABEL_80;
              v46 = *(_QWORD *)(a1 + 88);
              v47 = 13;
              goto LABEL_129;
            }
            if (!sub_22EA532D4((_QWORD *)a1, v11, a5, 0))
            {
              v53 = sub_22EA55860((_QWORD *)a1, v11, a5, 0);
              if (v53 > 31)
              {
                if (v53 == 32)
                {
                  if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                    goto LABEL_80;
                  v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                  v144 = (uint64_t *)v11;
                  v52 = 32;
                }
                else
                {
                  if (v53 != 33 || (*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                    goto LABEL_80;
                  v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                  v144 = (uint64_t *)v11;
                  v52 = 33;
                }
                goto LABEL_144;
              }
              if (!v53)
              {
                if (sub_22EA4FA18((_QWORD *)a1, v11, a5, 0))
                {
LABEL_153:
                  if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                    goto LABEL_80;
                  v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                  v144 = (uint64_t *)v11;
                  v52 = 28;
                }
                else
                {
                  v78 = sub_22EA552EC((_QWORD *)a1, v11, a5, 0, 0);
                  switch(v78)
                  {
                    case 28:
                      goto LABEL_153;
                    case 29:
                      if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                        goto LABEL_80;
                      v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                      v144 = (uint64_t *)v11;
                      v52 = 29;
                      goto LABEL_144;
                    case 30:
                      goto LABEL_142;
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 37:
                    case 38:
                    case 40:
                      goto LABEL_80;
                    case 36:
                      if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                        goto LABEL_80;
                      v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                      v144 = (uint64_t *)v11;
                      v52 = 36;
                      goto LABEL_144;
                    case 39:
                      goto LABEL_236;
                    case 41:
                      if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                        goto LABEL_80;
                      v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                      v144 = (uint64_t *)v11;
                      v52 = 41;
                      goto LABEL_144;
                    default:
                      if (v78)
                        goto LABEL_80;
                      if (sub_22EA52ABC((_QWORD *)a1, (int *)v11, a5, 0))
                      {
                        if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                          goto LABEL_80;
                        v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                        v144 = (uint64_t *)v11;
                        v52 = 34;
                      }
                      else if (sub_22EA527F0((_QWORD *)a1, v11, a5, 0))
                      {
                        if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                          goto LABEL_80;
                        v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                        v144 = (uint64_t *)v11;
                        v52 = 35;
                      }
                      else if (sub_22EA53FF4((_QWORD *)a1, v11, a5, 0, 0))
                      {
LABEL_236:
                        if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                          goto LABEL_80;
                        v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                        v144 = (uint64_t *)v11;
                        v52 = 39;
                      }
                      else if (sub_22EA54288((_QWORD *)a1, v11, a5, 0, 0))
                      {
                        if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                          goto LABEL_80;
                        v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                        v144 = (uint64_t *)v11;
                        v52 = 40;
                      }
                      else if (sub_22F320D9C((_QWORD *)a1, (int *)v11, a5, 0))
                      {
                        if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                          goto LABEL_80;
                        v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
                        v144 = (uint64_t *)v11;
                        v52 = 37;
                      }
                      else
                      {
                        v79 = sub_22EA53ED4((_QWORD *)a1, (int *)v11, a5, 0);
                        v80 = *(_QWORD *)(a1 + 88);
                        if (!v79)
                        {
                          if ((*(_DWORD *)(v11 + 28) & 0x7F) == 0x40)
                          {
                            v144 = (uint64_t *)v11;
                            *(_QWORD *)&v145 = 0;
                            sub_22EF757BC((_DWORD *)(v80 + 15144), &v144, &v145, (uint64_t)&v142);
                          }
                          v81 = *(_QWORD *)(v11 + 48);
                          if (!sub_22E991ED0(v11) && (sub_22E54299C(v11) || sub_22F311404(v11)))
                          {
                            sub_22EA4FA18((_QWORD *)a1, v11, a5, 1);
                            goto LABEL_260;
                          }
                          if (sub_22E991ED0(v11))
                          {
                            sub_22EA552EC((_QWORD *)a1, v11, a5, 0, 1);
LABEL_260:
                            sub_22EFC77E8(v11, 1);
                            goto LABEL_97;
                          }
                          if (sub_22E53B49C(v11))
                          {
                            sub_22EA527F0((_QWORD *)a1, v11, a5, 1);
                            goto LABEL_260;
                          }
                          if (sub_22E475248(v11))
                          {
                            sub_22EA54288((_QWORD *)a1, v11, a5, 0, 1);
                            goto LABEL_260;
                          }
                          v82 = (uint64_t *)(v81 & 0xFFFFFFFFFFFFFFF0);
                          if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v82 + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                + 16)
                             - 39 >= 2)
                          {
                            if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 122) & 4) == 0
                              || (v83 = sub_22E5453EC(*v82)) == 0
                              || ((v84 = sub_22F10C2A4(v83), (*(_DWORD *)(v84 + 28) & 0x7Fu) - 35 >= 3)
                                ? (v85 = 0)
                                : (v85 = v84),
                                  !sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v85 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))))
                            {
                              if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 122) & 0x20) == 0
                                || (v86 = sub_22E5457C4(*v82)) == 0
                                || ((v87 = sub_22F10C2A4(v86), (*(_DWORD *)(v87 + 28) & 0x7Fu) - 35 >= 3)
                                  ? (v88 = 0)
                                  : (v88 = v87),
                                    !sub_22E475308(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v88 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))))
                              {
                                v89 = *(_QWORD *)(a1 + 72);
                                v90 = *(_QWORD *)(v89 + 132);
                                if ((v90 & 0x2000) == 0)
                                {
LABEL_276:
                                  if (!(~*(_QWORD *)(v89 + 116) & 0x4000000000000 | ~(_WORD)v90 & 0x2000))
                                  {
                                    v91 = sub_22E5453EC(*v82);
                                    if (v91)
                                    {
                                      v92 = sub_22F10C2A4(v91);
                                      v93 = (*(_DWORD *)(v92 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v92;
                                      if ((sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v93 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                                        goto LABEL_259;
                                    }
                                  }
                                  if (!(~*(_QWORD *)(*(_QWORD *)(a1 + 72) + 116) & 0x20000000000000 | ~(unsigned __int16)*(_DWORD *)(*(_QWORD *)(a1 + 72) + 132) & 0x2000))
                                  {
                                    v94 = sub_22E5457C4(*v82);
                                    if (v94)
                                    {
                                      v95 = sub_22F10C2A4(v94);
                                      v96 = (*(_DWORD *)(v95 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v95;
                                      if ((sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v96 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                                        goto LABEL_259;
                                    }
                                  }
                                  v97 = *(_QWORD *)(a1 + 72);
                                  v98 = *(_QWORD *)(v97 + 124);
                                  if ((v98 & 0x1000000000) != 0)
                                  {
                                    if ((sub_22F10C510(*v82) & 1) != 0)
                                      goto LABEL_259;
                                    v97 = *(_QWORD *)(a1 + 72);
                                    v98 = *(_QWORD *)(v97 + 124);
                                  }
                                  if (!(~v98 & 0x1000000000 | ~*(_QWORD *)(v97 + 116) & 0x4000000000000))
                                  {
                                    v99 = sub_22E5453EC(*v82);
                                    if (v99)
                                    {
                                      v100 = sub_22F10C2A4(v99);
                                      v101 = (*(_DWORD *)(v100 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v100;
                                      if ((sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v101 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                                        goto LABEL_259;
                                    }
                                  }
                                  if (!(~*(_QWORD *)(*(_QWORD *)(a1 + 72) + 124) & 0x1000000000 | ~*(_QWORD *)(*(_QWORD *)(a1 + 72) + 116) & 0x20000000000000))
                                  {
                                    v102 = sub_22E5457C4(*v82);
                                    if (v102)
                                    {
                                      v103 = sub_22F10C2A4(v102);
                                      v104 = (*(_DWORD *)(v103 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v103;
                                      if ((sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v104 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                                        goto LABEL_259;
                                    }
                                  }
                                  v105 = *(_QWORD *)(a1 + 72);
                                  v106 = *(_QWORD *)(v105 + 124);
                                  if ((v106 & 0x1000000000) != 0)
                                  {
                                    if ((sub_22F10C1B4(*v82) & 1) != 0)
                                      goto LABEL_259;
                                    v105 = *(_QWORD *)(a1 + 72);
                                    v106 = *(_QWORD *)(v105 + 124);
                                  }
                                  if (~v106 & 0x1000000000 | ~*(_QWORD *)(v105 + 116) & 0x4000000000000
                                    || (v107 = sub_22E5453EC(*v82)) == 0
                                    || ((v108 = sub_22F10C2A4(v107), (*(_DWORD *)(v108 + 28) & 0x7Fu) - 35 >= 3)
                                      ? (v109 = 0)
                                      : (v109 = v108),
                                        (sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v109 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
                                  {
                                    if (~*(_QWORD *)(*(_QWORD *)(a1 + 72) + 124) & 0x1000000000 | ~*(_QWORD *)(*(_QWORD *)(a1 + 72) + 116) & 0x20000000000000
                                      || (v110 = sub_22E5457C4(*v82)) == 0
                                      || ((v111 = sub_22F10C2A4(v110), (*(_DWORD *)(v111 + 28) & 0x7Fu) - 35 >= 3)
                                        ? (v112 = 0)
                                        : (v112 = v111),
                                          !sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v112 + 168)
                                                                                             + 8) & 0xFFFFFFFFFFFFFFF0))))
                                    {
                                      if ((sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*v82 + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0
                                        || (v113 = sub_22E5453EC(*v82)) != 0
                                        && ((v114 = sub_22F10C2A4(v113), (*(_DWORD *)(v114 + 28) & 0x7Fu) - 35 >= 3)
                                          ? (v115 = 0)
                                          : (v115 = v114),
                                            (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v115 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                                 + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
                                        || (v116 = sub_22E5457C4(*v82)) != 0
                                        && ((v117 = sub_22F10C2A4(v116), (*(_DWORD *)(v117 + 28) & 0x7Fu) - 35 >= 3)
                                          ? (v118 = 0)
                                          : (v118 = v117),
                                            sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v118 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                                              + 8) & 0xFFFFFFFFFFFFFFF0))
                                         && (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 122) & 0x80) != 0))
                                      {
                                        sub_22EA55C38((_QWORD *)a1, v11, a5, 0, 1, 0);
                                      }
                                      else if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v82 + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) != 0|| (v119 = sub_22E5453EC(*v82)) != 0&& ((v120 = sub_22F10C2A4(v119), (*(_DWORD *)(v120 + 28) & 0x7Fu) - 35 >= 3)? (v121 = 0): (v121 = v120), (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v121 + 168)+ 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) != 0)|| (v122 = sub_22E5457C4(*v82)) != 0&& ((v123 = sub_22F10C2A4(v122), (*(_DWORD *)(v123 + 28) & 0x7Fu) - 35 >= 3)
                                               ? (v124 = 0)
                                               : (v124 = v123),
                                                 sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v124 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0)&& (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 122) & 0x40) != 0))
                                      {
                                        sub_22EA54A84((_QWORD *)a1, v11, a5, 0, 1, 0);
                                      }
                                      else if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v82 + 8) & 0xFFFFFFFFFFFFFFF0), "patch_control_point", 19, 1, 3))
                                      {
                                        sub_22EA53FF4((_QWORD *)a1, v11, a5, 1, 0);
                                      }
                                      else if (sub_22F10C780(*v82))
                                      {
                                        sub_22F320D9C((_QWORD *)a1, (int *)v11, a5, 1);
                                      }
                                      else if (sub_22F10B8E0(*v82, "mesh_grid_properties", 20, 0, 0))
                                      {
                                        sub_22EA53ED4((_QWORD *)a1, (int *)v11, a5, 1);
                                      }
                                      else if (sub_22F10DF70(*v82))
                                      {
                                        sub_22EA55860((_QWORD *)a1, v11, a5, 1);
                                      }
                                      else
                                      {
                                        if (!sub_22E88FFC4(a5) || (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 120) & 1) == 0)
                                          goto LABEL_367;
                                        v125 = *v82;
                                        v126 = sub_22E3E4B64(v125);
                                        if (v126
                                          && (*(_DWORD *)(v126 + 20) - 2) <= 2
                                          && (*(_DWORD *)(v126 + 16) & 0x780000) != 0x80000)
                                        {
                                          v125 = *(_QWORD *)(*(_QWORD *)(v126 + 32) & 0xFFFFFFFFFFFFFFF0);
                                        }
                                        v127 = *(_QWORD *)(*(_QWORD *)(v125 + 8) & 0xFFFFFFFFFFFFFFF0);
                                        if (v127
                                          && (v128 = *(_DWORD *)(v127 + 16), v128 == 11)
                                          && (v129 = ((v128 >> 19) & 0x1FF) - 173, v129 <= 0x26)
                                          && ((1 << v129) & 0x6000000303) != 0)
                                        {
                                          sub_22EA532D4((_QWORD *)a1, v11, a5, 1);
                                        }
                                        else
                                        {
LABEL_367:
                                          v130 = *(_QWORD *)(v11 + 56);
                                          if ((v130 & 4) != 0
                                            && (v134 = v130 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v134 + 16)))
                                          {
                                            v131 = **(int ***)(v134 + 24);
                                          }
                                          else
                                          {
                                            v131 = (int *)(v11 + 64);
                                          }
                                          sub_22E8FCA40((_QWORD *)a1, *v131, 0xF17u, 0, (uint64_t)&v144);
                                          v142 = *(char **)(v11 + 48);
                                          v132 = sub_22E8901B8((uint64_t)&v144, (uint64_t *)&v142);
                                          v140 = sub_22F3AC79C(a5);
                                          v133 = sub_22E89519C(v132, &v140);
                                          v141[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 16))(v11);
                                          sub_22E8906A0(v133, v141);
                                          sub_22E903BEC((unsigned int *)&v144);
                                        }
                                      }
                                      goto LABEL_260;
                                    }
                                  }
                                  goto LABEL_259;
                                }
                                if ((sub_22F10CDF4(*v82) & 1) == 0)
                                {
                                  v89 = *(_QWORD *)(a1 + 72);
                                  v90 = *(_QWORD *)(v89 + 132);
                                  goto LABEL_276;
                                }
                              }
                            }
                          }
LABEL_259:
                          sub_22EA4DA58((_QWORD *)a1, v11, a5, 0, 1, 0);
                          goto LABEL_260;
                        }
                        if ((*(_DWORD *)(v11 + 28) & 0x7F) != 0x40)
                          goto LABEL_80;
                        v51 = (_DWORD *)(v80 + 15144);
                        v144 = (uint64_t *)v11;
                        v52 = 38;
                      }
                      break;
                  }
                }
                goto LABEL_144;
              }
              if (v53 != 31)
                goto LABEL_80;
              sub_22F3681B0(*(_QWORD *)(a1 + 88), v11);
              v136 = v54;
              v55 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v11 + 48) & 0xFFFFFFFFFFFFFFF0));
              if ((*(_DWORD *)(v55 + 28) & 0x7Fu) - 35 >= 3)
                v55 = 0;
              v56 = sub_22EFC3B90(v55);
              v144 = (uint64_t *)&v145 + 1;
              *(_QWORD *)&v145 = 0x800000000;
              sub_22F271D38((uint64_t)&v144, v56, 0);
              for (i = v145; (_DWORD)v145; i = v145)
              {
                v138 = *v144;
                if (i != 1)
                {
                  memmove(v144, v144 + 1, 8 * i - 8);
                  LODWORD(i) = v145;
                }
                LODWORD(v145) = i - 1;
                v11 &= 0xFFFFFFFF00000000;
                v58 = *(_QWORD *)(v138 + 48);
                switch(sub_22EA4DA58((_QWORD *)a1, v138, 0, 0, 0, 0))
                {
                  case 0u:
                    v59 = (uint64_t *)(v58 & 0xFFFFFFFFFFFFFFF0);
                    if (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*v59 + 8) & 0xFFFFFFFFFFFFFFF0)))
                    {
                      v60 = *(_QWORD *)(a1 + 88);
                      v61 = 10;
                      goto LABEL_187;
                    }
                    v63 = sub_22E5453EC(*v59);
                    if (v63)
                    {
                      v64 = sub_22F10C2A4(v63);
                      v65 = (*(_DWORD *)(v64 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v64;
                      if (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v65 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                             + 8) & 0xFFFFFFFFFFFFFFF0)))
                      {
                        v60 = *(_QWORD *)(a1 + 88);
                        v61 = 11;
                        goto LABEL_187;
                      }
                    }
                    v66 = sub_22E5457C4(*v59);
                    if (v66)
                    {
                      v67 = sub_22F10C2A4(v66);
                      v68 = (*(_DWORD *)(v67 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v67;
                      if (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v68 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                                             + 8) & 0xFFFFFFFFFFFFFFF0)))
                      {
                        v60 = *(_QWORD *)(a1 + 88);
                        v61 = 12;
                        goto LABEL_187;
                      }
                    }
                    if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v59 + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0))
                    {
                      v60 = *(_QWORD *)(a1 + 88);
                      v61 = 13;
                      goto LABEL_187;
                    }
                    v69 = sub_22E5453EC(*v59);
                    if (v69)
                    {
                      v70 = sub_22F10C2A4(v69);
                      v71 = (*(_DWORD *)(v70 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v70;
                      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v71 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0))
                      {
                        v60 = *(_QWORD *)(a1 + 88);
                        v61 = 14;
                        goto LABEL_187;
                      }
                    }
                    v72 = sub_22E5457C4(*v59);
                    if (v72)
                    {
                      v73 = sub_22F10C2A4(v72);
                      v74 = (*(_DWORD *)(v73 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v73;
                      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v74 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0))
                      {
                        v60 = *(_QWORD *)(a1 + 88);
                        v61 = 15;
                        goto LABEL_187;
                      }
                    }
                    v75 = sub_22F10C2A4(*v59);
                    if (v75 && (*(_DWORD *)(v75 + 28) & 0x7Fu) - 35 <= 2)
                    {
                      v76 = v144;
                      v77 = sub_22EFC3B90(v75);
                      sub_22E9A9EA4((uint64_t)&v144, (uint64_t)v76, v77, 0);
                    }
                    break;
                  case 1u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 1;
                    goto LABEL_187;
                  case 2u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 2;
                    goto LABEL_187;
                  case 3u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 3;
                    goto LABEL_187;
                  case 4u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 4;
                    goto LABEL_187;
                  case 5u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 5;
                    goto LABEL_187;
                  case 6u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 6;
                    goto LABEL_187;
                  case 7u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 7;
                    goto LABEL_187;
                  case 8u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 8;
                    goto LABEL_187;
                  case 9u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 9;
                    goto LABEL_187;
                  case 0x10u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 16;
                    goto LABEL_187;
                  case 0x11u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 17;
                    goto LABEL_187;
                  case 0x12u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 18;
                    goto LABEL_187;
                  case 0x13u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 19;
                    goto LABEL_187;
                  case 0x14u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 20;
                    goto LABEL_187;
                  case 0x15u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 21;
                    goto LABEL_187;
                  case 0x16u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 22;
                    goto LABEL_187;
                  case 0x17u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 23;
                    goto LABEL_187;
                  case 0x18u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 24;
                    goto LABEL_187;
                  case 0x19u:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 25;
                    goto LABEL_187;
                  case 0x1Au:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 26;
                    goto LABEL_187;
                  case 0x1Bu:
                    v60 = *(_QWORD *)(a1 + 88);
                    v61 = 27;
LABEL_187:
                    v11 = sub_22EF594DC(v60, v61, v138);
                    v137 = v62;
                    break;
                  default:
                    break;
                }
                v142 = (char *)v138;
                *(_QWORD *)&v143 = v11;
                *((_QWORD *)&v143 + 1) = v137;
                sub_22F311D00((uint64_t)v141, v136, &v142, &v143);
              }
              if (v144 != (uint64_t *)((char *)&v145 + 8))
                free(v144);
LABEL_79:
              v40 = 1;
              goto LABEL_80;
            }
LABEL_142:
            if ((*(_DWORD *)(v11 + 28) & 0x7F) == 0x40)
            {
              v51 = (_DWORD *)(*(_QWORD *)(a1 + 88) + 15144);
              v144 = (uint64_t *)v11;
              v52 = 30;
LABEL_144:
              *(_QWORD *)&v145 = v52;
              sub_22EF757BC(v51, &v144, &v145, (uint64_t)&v142);
            }
          }
LABEL_80:
          v9 |= v40 ^ 1;
LABEL_81:
          if (++v7 == v10)
            return v9 & 1;
          break;
        case 1u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 1;
          goto LABEL_129;
        case 2u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 2;
          goto LABEL_129;
        case 3u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 3;
          goto LABEL_129;
        case 4u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 4;
          goto LABEL_129;
        case 5u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 5;
          goto LABEL_129;
        case 6u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 6;
          goto LABEL_129;
        case 7u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 7;
          goto LABEL_129;
        case 8u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 8;
          goto LABEL_129;
        case 9u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 9;
          goto LABEL_129;
        case 0x10u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 16;
          goto LABEL_129;
        case 0x11u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 17;
          goto LABEL_129;
        case 0x12u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 18;
          goto LABEL_129;
        case 0x13u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 19;
          goto LABEL_129;
        case 0x14u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 20;
          goto LABEL_129;
        case 0x15u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 21;
          goto LABEL_129;
        case 0x16u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 22;
          goto LABEL_129;
        case 0x17u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 23;
          goto LABEL_129;
        case 0x18u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 24;
          goto LABEL_129;
        case 0x19u:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 25;
          goto LABEL_129;
        case 0x1Au:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 26;
          goto LABEL_129;
        case 0x1Bu:
          v46 = *(_QWORD *)(a1 + 88);
          v47 = 27;
          goto LABEL_129;
        default:
          goto LABEL_80;
      }
    }
    v27 = *(_DWORD *)(v11 + 24);
    while (1)
    {
      if (v17 != 39)
      {
        if ((v17 & 0xFE) == 0x28)
        {
          if ((v17 & 0x100000) != 0)
          {
            do
            {
              while (1)
              {
                v16 = *(_QWORD *)(*(_QWORD *)(v16 + 32) & 0xFFFFFFFFFFFFFFF0);
                if (!v16)
                  break;
                v28 = *(_DWORD *)(v16 + 16);
                if ((v28 & 0xFE) != 0x28)
                  break;
                if ((v28 & 0x100000) == 0)
                  goto LABEL_42;
              }
              v16 = sub_22F10CF48(v16);
            }
            while ((*(_DWORD *)(v16 + 16) & 0x100000) != 0);
          }
LABEL_42:
          v15 = *(_QWORD *)(v16 + 32);
          goto LABEL_43;
        }
        if (v17 != 37)
        {
          v16 = sub_22EF5C728(*(_QWORD *)(a1 + 88), v15);
          if (!v16)
            goto LABEL_15;
          if ((*(_DWORD *)(v16 + 16) & 0x1C00000) == 0x800000)
          {
            sub_22E8FCA40((_QWORD *)a1, v27, 0xAA3u, 0, (uint64_t)&v144);
            sub_22E903BEC((unsigned int *)&v144);
            goto LABEL_15;
          }
        }
      }
      v15 = *(_QWORD *)(v16 + 32);
LABEL_43:
      v16 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0);
      v17 = *(_DWORD *)(v16 + 16);
      if ((v17 & 0x800) == 0)
        goto LABEL_15;
    }
  }
  v9 = 0;
  return v9 & 1;
}

void sub_22E98D52C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a4;
  v30 = a3;
  v7 = a4;
  if (sub_22F1CF68C(*(_QWORD *)(a1[13] + 32), 0x18BCu, a4, a1[13]) != 1)
  {
    v8 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
    if ((*(_DWORD *)(v8 + 16) & 0x400) == 0
      && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 17) & 4) == 0
      && (*(_DWORD *)(v8 + 16) == 39
       || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
       && (v8 = sub_22F10CF48(v8)) != 0))
    {
      v9 = *(_QWORD *)(v8 + 32);
      if ((sub_22F1110EC(*(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0), 0) & 1) == 0)
      {
        v10 = sub_22EF5D130(a1[11], v9);
        if (v10 != 1)
        {
          if ((v11 = v10, (v12 = *(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0)
            && *(_BYTE *)(v12 + 16) == 39
            || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
            && (v12 = sub_22F10CF48(v12)) != 0)
          {
            if ((sub_22F1110EC(*(_QWORD *)(*(_QWORD *)(v12 + 32) & 0xFFFFFFFFFFFFFFF0), 0) & 1) == 0)
            {
              sub_22E9A8DDC((uint64_t)&v26, (unsigned __int8 *)a2, a1[11]);
              if (v28)
              {
                v13 = (v26 | v27) & -(v26 | v27);
              }
              else
              {
                v14 = a1[11];
                v15 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0));
                v13 = sub_22EF5D130(v14, v15);
              }
              if (v13 < v11)
              {
                sub_22E8FCA40(a1, v7, 0x18BCu, 0, (uint64_t)&v26);
                v25 = *(_QWORD *)(a2 + 8);
                v16 = sub_22E8901B8((uint64_t)&v26, &v25);
                v17 = sub_22E8901B8(v16, &v30);
                v24 = v13;
                v18 = sub_22E89519C(v17, &v24);
                v23 = v11;
                v19 = sub_22E89519C(v18, &v23);
                v20 = sub_22E8906A0(v19, &v29);
                sub_22F0D4E74(a2);
                v22 = v21;
                sub_22E8906A0(v20, &v22);
                sub_22E903BEC((unsigned int *)&v26);
              }
            }
          }
        }
      }
    }
  }
}

void sub_22E98D734(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, int a5, int a6)
{
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  unint64_t *v21;
  unint64_t v22;
  const llvm::APInt *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  void **v31;
  uint64_t *v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  size_t v37;
  uint64_t **v38;
  uint64_t *v39;
  void **v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void **v48;
  size_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  unsigned int v53;
  void **v54;
  int v55;
  unsigned int v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t *v59;
  unint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  BOOL v65;
  unint64_t v66;
  unint64_t v67;
  char v68;
  int v69;
  unsigned int v70;
  unint64_t v71;
  unsigned __int8 *v72;
  unsigned int v73;
  int v74;
  uint64_t **v75;
  int v76;
  int v77;
  uint64_t v78;
  size_t v79;
  uint64_t **v80;
  void **p_dst;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  unint64_t v86;
  void **v87;
  size_t v88;
  unsigned __int8 *v89;
  unsigned __int8 *v90;
  uint64_t v91;
  unsigned int v92;
  unsigned __int8 *v93;
  unsigned __int8 *v94;
  uint64_t v95;
  size_t v96;
  uint64_t **v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  size_t v102;
  size_t v103;
  uint64_t **v104;
  void *p_p;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  size_t v109;
  unsigned int v110;
  unsigned __int8 *v111;
  unsigned __int8 *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  int v116;
  uint64_t **v117;
  uint64_t v118;
  int i;
  unsigned __int8 **v120;
  uint64_t v121;
  int v122;
  uint64_t v124;
  uint64_t **v125;
  void *v126;
  BOOL v127;
  unsigned __int8 *v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  BOOL v133;
  int v134;
  int v135;
  int v136;
  uint64_t v137;
  size_t v138;
  uint64_t **v139;
  void **v140;
  uint64_t v141;
  uint64_t v142;
  void **v143;
  size_t v144;
  size_t v145;
  uint64_t **v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  size_t v151;
  unsigned int v152;
  unsigned __int8 *v153;
  unsigned __int8 *v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t **v158;
  uint64_t v159;
  int j;
  unsigned __int8 **v161;
  uint64_t v162;
  int v163;
  BOOL v164;
  uint64_t v165;
  uint64_t **v166;
  int v167;
  uint64_t v168;
  unsigned int v169;
  int v170;
  int v171;
  unint64_t v172;
  uint64_t *v173;
  uint64_t **v174;
  unsigned int v175;
  void *__p;
  unsigned int v177[2];
  int64_t v178;
  void *v179;
  size_t v180;
  int64_t v181;
  void **__dst;
  size_t v183;
  int64_t v184;
  unsigned __int8 *v185;
  unint64_t v186;
  int v187;
  uint64_t **v188;
  unsigned int v189;
  void *v190;
  unsigned int v191;
  uint64_t **v192;
  unsigned int v193;
  uint64_t **v194;
  unsigned int v195;
  unsigned __int8 v196;
  __int16 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t **v200;
  unsigned int v201;
  unsigned __int8 v202;
  uint64_t **v203;
  __int128 v204;
  _QWORD v205[7];

  v205[5] = *MEMORY[0x24BDAC8D0];
  if ((*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4)
    return;
  if (*(_BYTE *)(a1 + 3209))
    return;
  v11 = sub_22EFFA6B0(a3);
  if ((v11[2] & 1) != 0)
    return;
  v12 = (uint64_t)v11;
  v13 = *(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v14 == 39 || v14 == 32)
  {
    v13 = *(_QWORD *)(sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0);
  }
  else if ((v14 & 0xFEu) - 2 <= 3)
  {
    while (1)
    {
      if (v13 && (*(_DWORD *)(v13 + 16) & 0xFEu) - 6 > 0xFFFFFFFB)
      {
        v168 = v13;
      }
      else
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFEu) - 2 > 3)
          break;
        v168 = sub_22F10CF48(v13);
        if (!v168)
          break;
      }
      v13 = *(_QWORD *)(*(_QWORD *)(v168 + 32) & 0xFFFFFFFFFFFFFFF0);
    }
  }
  v15 = (unint64_t *)sub_22EFFBBCC((unsigned __int8 *)a2);
  v16 = sub_22EF5C728(*(_QWORD *)(a1 + 88), v15[1]);
  v17 = v16;
  if (!v16)
    goto LABEL_10;
  if (*(_BYTE *)(v16 + 16) != 2)
  {
    v17 = 0;
LABEL_10:
    v18 = 0;
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v16 + 32) & 0xFFFFFFFFFFFFFFF0);
LABEL_11:
  if ((*(_BYTE *)(v13 + 17) & 4) != 0 || v18 && (*(_BYTE *)(v18 + 17) & 4) != 0)
    return;
  v197 = 0;
  v198 = 0;
  LODWORD(v199) = 0;
  if (!sub_22F00554C(v12, (uint64_t)&v197, *(_QWORD *)(a1 + 88), 2, 0))
    goto LABEL_370;
  v195 = v201;
  if (v201 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v194, (const llvm::APInt *)&v200);
  else
    v194 = v200;
  v19 = v202;
  v196 = v202;
  if (a6)
  {
    v196 = 0;
    sub_22F311024((llvm::APInt *)&v194, (uint64_t)&v203);
    if (v195 >= 0x41 && v194)
      MEMORY[0x2348A0E84](v194, 0x1000C8000313F17);
    v194 = v203;
    v195 = v204;
    v19 = BYTE4(v204);
    v196 = BYTE4(v204);
  }
  v20 = *(unsigned __int8 *)v15;
  if (v20 == 188)
  {
    v21 = v15 + 3;
    goto LABEL_26;
  }
  if (v20 == 161)
  {
    v21 = v15 + 2;
LABEL_26:
    v22 = *v21;
    goto LABEL_28;
  }
  v22 = 0;
LABEL_28:
  if (!v18)
  {
    v24 = *(_QWORD *)(v13 + 8);
    if (*(unsigned __int8 *)(*(_QWORD *)(v24 & 0xFFFFFFFFFFFFFFF0) + 16) - 25 < 2)
      goto LABEL_367;
    if (!v19)
    {
      v53 = v195 - 1;
      v54 = (void **)&v194;
      if (v195 >= 0x41)
        v54 = (void **)&v194[v53 >> 6];
      if ((((unint64_t)*v54 >> v53) & 1) != 0)
        goto LABEL_367;
    }
    v25 = *(_QWORD *)(a1 + 88);
    v26 = *(uint64_t **)(v25 + 15088);
    v27 = sub_22EF5CF80(v25, v24);
    v28 = *v26;
    if ((_DWORD)v27)
      v29 = (*(uint64_t (**)(uint64_t *, uint64_t))(v28 + 864))(v26, v27);
    else
      v29 = *((unsigned __int8 *)v26 + *(_QWORD *)(v28 - 24));
    if (v195 < v29)
    {
      llvm::APInt::zext((llvm::APInt *)&v194);
      if (v195 >= 0x41 && v194)
        MEMORY[0x2348A0E84](v194, 0x1000C8000313F17);
      v194 = v192;
      v195 = v193;
      v193 = 0;
    }
    v67 = sub_22E9A98F8(v25, v13 & 0xFFFFFFFFFFFFFFF0);
    if (!v68)
      goto LABEL_367;
    v69 = v67;
    v173 = (uint64_t *)v22;
    v70 = v195;
    v191 = v195;
    if (v195 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v190);
      v70 = v195;
      if (v195 > 0x40)
      {
        if (v70 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v194) > v29)
          goto LABEL_159;
        LOBYTE(__dst) = 0;
        LODWORD(v204) = v70;
        llvm::APInt::initSlowCase((llvm::APInt *)&v203, (const llvm::APInt *)&v194);
LABEL_144:
        llvm::APInt::operator+=();
        llvm::APInt::umul_ov((llvm::APInt *)&v203, (const llvm::APInt *)&v190, (BOOL *)&__dst);
        if (v204 >= 0x41 && v203)
          MEMORY[0x2348A0E84](v203, 0x1000C8000313F17);
        v72 = v185;
        v203 = (uint64_t **)v185;
        v73 = v186;
        LODWORD(v204) = v186;
        if (!(_BYTE)__dst)
        {
          v74 = v186 > 0x40
              ? llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v203)
              : v186 + __clz((unint64_t)v185) - 64;
          if (v73 - v74 <= v29)
          {
            if (v73 >= 0x41 && v72)
LABEL_266:
              MEMORY[0x2348A0E84]();
LABEL_267:
            if (v191 < 0x41)
              goto LABEL_367;
            v126 = v190;
            if (!v190)
              goto LABEL_367;
LABEL_366:
            MEMORY[0x2348A0E84](v126, 0x1000C8000313F17);
            goto LABEL_367;
          }
        }
        if (v73 >= 0x41 && v72)
          MEMORY[0x2348A0E84](v72, 0x1000C8000313F17);
LABEL_159:
        v189 = v29;
        if (v29 > 0x40)
        {
          llvm::APInt::initSlowCase((llvm::APInt *)&v188);
        }
        else
        {
          v75 = (uint64_t **)(0xFFFFFFFFFFFFFFFFLL >> -(char)v29);
          if (!v29)
            v75 = 0;
          v188 = v75;
        }
        llvm::APInt::zext((llvm::APInt *)&v188);
        if (v189 >= 0x41 && v188)
          MEMORY[0x2348A0E84](v188, 0x1000C8000313F17);
        v188 = v203;
        v189 = v204;
        llvm::APInt::operator+=();
        llvm::APInt::zextOrTrunc((llvm::APInt *)&v190);
        if (v191 >= 0x41 && v190)
          MEMORY[0x2348A0E84](v190, 0x1000C8000313F17);
        v190 = v203;
        v191 = v204;
        llvm::APInt::udiv((llvm::APInt *)&v188, (const llvm::APInt *)&v190);
        if (v189 >= 0x41 && v188)
          MEMORY[0x2348A0E84](v188, 0x1000C8000313F17);
        v188 = v203;
        v189 = v204;
        if (a4)
          v76 = 6219;
        else
          v76 = 6931;
        sub_22F0D5A50((uint64_t)v15);
        v170 = v77;
        v78 = *(_QWORD *)(a1 + 88) + 2128;
        v185 = 0;
        v186 = v78;
        v187 = v76;
        v203 = (uint64_t **)v205;
        v204 = xmmword_22F455490;
        llvm::APInt::toString();
        v79 = v204;
        if ((unint64_t)v204 > 0x7FFFFFFFFFFFFFF7)
          goto LABEL_379;
        v80 = v203;
        if ((unint64_t)v204 >= 0x17)
        {
          v82 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
          if (((unint64_t)v204 | 7) != 0x17)
            v82 = v204 | 7;
          v169 = v29;
          v83 = v25;
          v84 = v69;
          v85 = v82 + 1;
          p_dst = (void **)operator new(v82 + 1);
          v86 = v85 | 0x8000000000000000;
          v69 = v84;
          v25 = v83;
          v29 = v169;
          v183 = v79;
          v184 = v86;
          __dst = p_dst;
        }
        else
        {
          HIBYTE(v184) = v204;
          p_dst = (void **)&__dst;
          if (!(_QWORD)v204)
          {
LABEL_183:
            *((_BYTE *)p_dst + v79) = 0;
            if (v203 != v205)
              free(v203);
            if (v184 >= 0)
              v87 = (void **)&__dst;
            else
              v87 = __dst;
            if (v184 >= 0)
              v88 = HIBYTE(v184) & 0x7F;
            else
              v88 = v183;
            sub_22E3B89A8(&v185, v87, v88);
            v89 = v185;
            if (!v185)
            {
              v89 = (unsigned __int8 *)sub_22E3B8AAC(v186);
              v185 = v89;
            }
            v89[*v89 + 1] = 3;
            v90 = v185;
            v91 = *v185;
            *v185 = v91 + 1;
            *(_QWORD *)&v90[8 * v91 + 16] = v29;
            v92 = sub_22EF5CDF0(v25, *(_QWORD *)(*(_QWORD *)(v25 + 16408) & 0xFFFFFFFFFFFFFFF0)) * v69;
            v93 = v185;
            if (!v185)
            {
              v93 = (unsigned __int8 *)sub_22E3B8AAC(v186);
              v185 = v93;
            }
            v93[*v93 + 1] = 3;
            v94 = v185;
            v95 = *v185;
            *v185 = v95 + 1;
            *(_QWORD *)&v94[8 * v95 + 16] = v92;
            v203 = (uint64_t **)v205;
            v204 = xmmword_22F455490;
            llvm::APInt::toString();
            v96 = v204;
            if ((unint64_t)v204 > 0x7FFFFFFFFFFFFFF7)
              goto LABEL_379;
            v97 = v203;
            if ((unint64_t)v204 >= 0x17)
            {
              v99 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
              if (((unint64_t)v204 | 7) != 0x17)
                v99 = v204 | 7;
              v100 = v99 + 1;
              v98 = operator new(v99 + 1);
              v180 = v96;
              v181 = v100 | 0x8000000000000000;
              v179 = v98;
            }
            else
            {
              HIBYTE(v181) = v204;
              v98 = &v179;
              if (!(_QWORD)v204)
              {
LABEL_203:
                *((_BYTE *)v98 + v96) = 0;
                if (v203 != v205)
                  free(v203);
                if (v181 >= 0)
                  v101 = &v179;
                else
                  v101 = v179;
                if (v181 >= 0)
                  v102 = HIBYTE(v181) & 0x7F;
                else
                  v102 = v180;
                sub_22E3B89A8(&v185, v101, v102);
                v203 = (uint64_t **)v205;
                v204 = xmmword_22F455490;
                llvm::APInt::toString();
                v103 = v204;
                if ((unint64_t)v204 > 0x7FFFFFFFFFFFFFF7)
                  goto LABEL_379;
                v104 = v203;
                if ((unint64_t)v204 >= 0x17)
                {
                  v106 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
                  if (((unint64_t)v204 | 7) != 0x17)
                    v106 = v204 | 7;
                  v107 = v106 + 1;
                  p_p = operator new(v106 + 1);
                  *(_QWORD *)v177 = v103;
                  v178 = v107 | 0x8000000000000000;
                  __p = p_p;
                }
                else
                {
                  HIBYTE(v178) = v204;
                  p_p = &__p;
                  if (!(_QWORD)v204)
                    goto LABEL_219;
                }
                memmove(p_p, v104, v103);
LABEL_219:
                *((_BYTE *)p_p + v103) = 0;
                if (v203 != v205)
                  free(v203);
                if (v178 >= 0)
                  v108 = &__p;
                else
                  v108 = __p;
                if (v178 >= 0)
                  v109 = HIBYTE(v178) & 0x7F;
                else
                  v109 = *(_QWORD *)v177;
                sub_22E3B89A8(&v185, v108, v109);
                v110 = sub_22E5FA634(&v188, 0xFFFFFFFFuLL);
                v111 = v185;
                if (!v185)
                {
                  v111 = (unsigned __int8 *)sub_22E3B8AAC(v186);
                  v185 = v111;
                }
                v111[*v111 + 1] = 3;
                v112 = v185;
                v113 = *v185;
                *v185 = v113 + 1;
                *(_QWORD *)&v112[8 * v113 + 16] = v110;
                sub_22F0D4E74(v12);
                sub_22E4D6448((uint64_t)(v112 + 336), v114, 1);
                v203 = (uint64_t **)v15;
                sub_22EB52944(a1, v170, &v203, 1uLL, (uint64_t *)&v185);
                if (SHIBYTE(v178) < 0)
                  operator delete(__p);
                v115 = v173;
                if (SHIBYTE(v181) < 0)
                  operator delete(v179);
                if (SHIBYTE(v184) < 0)
                  operator delete(__dst);
                if (v185 && v186)
                  sub_22E3BB10C(v186, (unint64_t)v185);
                if (v173)
                  goto LABEL_239;
                for (i = *(unsigned __int8 *)v15; ; i = *(unsigned __int8 *)v15)
                {
                  if (i != 107)
                  {
                    if (i != 188)
                    {
                      if (i == 161)
                      {
                        v125 = (uint64_t **)(v15 + 2);
                        goto LABEL_263;
                      }
                      goto LABEL_264;
                    }
                    v125 = (uint64_t **)(v15 + 3);
LABEL_263:
                    v115 = *v125;
                    if (!*v125)
                    {
LABEL_264:
                      if (v189 >= 0x41 && v188)
                        goto LABEL_266;
                      goto LABEL_267;
                    }
LABEL_239:
                    v116 = (*(uint64_t (**)(uint64_t *))(*v115 + 16))(v115);
                    *(_QWORD *)&v204 = *(_QWORD *)(a1 + 88) + 2128;
                    DWORD2(v204) = 5443;
                    v117 = (uint64_t **)sub_22E3B8AAC(v204);
                    v203 = v117;
                    v118 = *(unsigned __int8 *)v117;
                    *((_BYTE *)v117 + v118 + 1) = 11;
                    *(_BYTE *)v117 = v118 + 1;
                    v117[v118 + 2] = v115;
                    v185 = (unsigned __int8 *)v15;
                    sub_22EB52944(a1, v116, &v185, 1uLL, (uint64_t *)&v203);
                    if (v203 && (_QWORD)v204)
                      sub_22E3BB10C(v204, (unint64_t)v203);
                    goto LABEL_264;
                  }
                  v120 = (unsigned __int8 **)(v15 + 3);
                  v121 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15[3] + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
                  v122 = *(_DWORD *)(v121 + 16);
                  if (v121 && v122 == 11)
                    break;
                  if (v121 && v122 == 44)
                  {
                    v124 = sub_22F114198(*(_QWORD *)(v121 + 24));
                    if (((*(_BYTE *)(v124 + 74) & 1) != 0 || *(_QWORD *)(v124 + 128) > 7uLL)
                      && (*(_QWORD *)(sub_22F114198(*(_QWORD *)(v121 + 24)) + 72) & 0x8000000000) == 0)
                    {
                      goto LABEL_255;
                    }
                  }
                  else if (v122 == 9)
                  {
                    goto LABEL_255;
                  }
LABEL_256:
                  v15 = (unint64_t *)sub_22EFFBBCC(*v120);
                }
                if (((*(_DWORD *)(v121 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
                  goto LABEL_256;
LABEL_255:
                v120 = (unsigned __int8 **)(v15 + 2);
                goto LABEL_256;
              }
            }
            memmove(v98, v97, v96);
            goto LABEL_203;
          }
        }
        memmove(p_dst, v80, v79);
        goto LABEL_183;
      }
    }
    else
    {
      if (v195)
        v71 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v195;
      else
        v71 = 0;
      v190 = (void *)(v71 & v67);
    }
    if (64 - __clz((unint64_t)v194) > v29)
      goto LABEL_159;
    LOBYTE(__dst) = 0;
    LODWORD(v204) = v70;
    v203 = v194;
    goto LABEL_144;
  }
  if (!v19)
  {
    v30 = v195 - 1;
    v31 = (void **)&v194;
    if (v195 >= 0x41)
      v31 = (void **)&v194[v30 >> 6];
    if ((((unint64_t)*v31 >> v30) & 1) != 0)
    {
      v32 = (uint64_t *)v22;
      if (a4)
      {
        v33 = 6220;
      }
      else
      {
        sub_22F311024((llvm::APInt *)&v194, (uint64_t)&v203);
        if (v195 >= 0x41 && v194)
          MEMORY[0x2348A0E84](v194, 0x1000C8000313F17);
        v194 = v203;
        v195 = v204;
        v196 = BYTE4(v204);
        v33 = 6932;
      }
      sub_22F0D5A50((uint64_t)v15);
      v35 = v34;
      v36 = *(_QWORD *)(a1 + 88) + 2128;
      v185 = 0;
      v186 = v36;
      v187 = v33;
      v203 = (uint64_t **)v205;
      v204 = xmmword_22F455490;
      llvm::APInt::toString();
      v37 = v204;
      if ((unint64_t)v204 <= 0x7FFFFFFFFFFFFFF7)
      {
        v38 = v203;
        v39 = v32;
        if ((unint64_t)v204 >= 0x17)
        {
          v46 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
          if (((unint64_t)v204 | 7) != 0x17)
            v46 = v204 | 7;
          v47 = v46 + 1;
          v40 = (void **)operator new(v46 + 1);
          v183 = v37;
          v184 = v47 | 0x8000000000000000;
          __dst = v40;
        }
        else
        {
          HIBYTE(v184) = v204;
          v40 = (void **)&__dst;
          if (!(_QWORD)v204)
            goto LABEL_70;
        }
        memmove(v40, v38, v37);
LABEL_70:
        *((_BYTE *)v40 + v37) = 0;
        if (v203 != v205)
          free(v203);
        if (v184 >= 0)
          v48 = (void **)&__dst;
        else
          v48 = __dst;
        if (v184 >= 0)
          v49 = HIBYTE(v184) & 0x7F;
        else
          v49 = v183;
        sub_22E3B89A8(&v185, v48, v49);
        sub_22F0D4E74(v12);
        v51 = v50;
        v52 = v185;
        if (!v185)
        {
          v52 = (unsigned __int8 *)sub_22E3B8AAC(v186);
          v185 = v52;
        }
        sub_22E4D6448((uint64_t)(v52 + 336), v51, 1);
        v203 = (uint64_t **)v15;
        sub_22EB52944(a1, v35, &v203, 1uLL, (uint64_t *)&v185);
        if (SHIBYTE(v184) < 0)
          operator delete(__dst);
        if (v185 && v186)
          sub_22E3BB10C(v186, (unint64_t)v185);
        goto LABEL_334;
      }
LABEL_379:
      abort();
    }
  }
  if ((sub_22F1110EC(v18, 0) & 1) != 0)
    goto LABEL_367;
  v23 = (const llvm::APInt *)(v17 + 40);
  v177[0] = *(_DWORD *)(v17 + 48);
  if (v177[0] > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&__p, v23);
  else
    __p = *(void **)v23;
  if (!sub_22E98EDA0((llvm::APInt *)&__p))
    goto LABEL_364;
  if (v18 != v13)
  {
    v41 = sub_22EF5CDF0(*(_QWORD *)(a1 + 88), v13);
    v42 = sub_22EF5CDF0(*(_QWORD *)(a1 + 88), v18);
    v43 = v41 <= 1 ? 1 : v41;
    if (v43 != v42)
    {
      v44 = v42 / v43;
      if (v42 / v43 * v43 == v42)
      {
        LODWORD(v204) = v177[0];
        if (v177[0] > 0x40)
        {
          llvm::APInt::initSlowCase((llvm::APInt *)&v203);
        }
        else
        {
          v45 = v177[0] ? 0xFFFFFFFFFFFFFFFFLL >> -LOBYTE(v177[0]) : 0;
          v203 = (uint64_t **)(v45 & v44);
        }
        llvm::APInt::operator*=();
        if (v204 >= 0x41)
        {
          if (v203)
            MEMORY[0x2348A0E84](v203, 0x1000C8000313F17);
        }
      }
    }
  }
  if (v177[0] <= v195)
  {
    if (v177[0] < v195)
    {
      llvm::APInt::zext((llvm::APInt *)&__p);
      if (v177[0] >= 0x41 && __p)
        MEMORY[0x2348A0E84](__p, 0x1000C8000313F17);
      __p = v203;
      v177[0] = v204;
    }
  }
  else
  {
    llvm::APInt::zext((llvm::APInt *)&v194);
    if (v195 >= 0x41 && v194)
      MEMORY[0x2348A0E84](v194, 0x1000C8000313F17);
    v194 = v174;
    v195 = v175;
  }
  v55 = llvm::APInt::compare((llvm::APInt *)&v194, (const llvm::APInt *)&__p);
  if (a5)
  {
    if (v55 < 1)
      goto LABEL_364;
  }
  else if (v55 < 0)
  {
    goto LABEL_364;
  }
  v172 = v22;
  v56 = v177[0];
  if (v177[0] < 0x41 || v56 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&__p) <= 0x40)
  {
    v57 = __p;
    if (v56 < 0x41)
      v57 = &__p;
    if (v172 && *v57 == 1 && (*(_DWORD *)(v172 + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD)
    {
      v58 = *(_QWORD *)(v172 + 56);
      v59 = (unint64_t *)(v58 & 0xFFFFFFFFFFFFFFF8);
      if ((v58 & 4) != 0)
        v59 = (unint64_t *)v59[4];
      while (1)
      {
        if (!v59)
          goto LABEL_113;
        v60 = *v59;
        if ((*v59 & 0xF) != 0)
          goto LABEL_113;
        v61 = *(unsigned __int8 *)(*(_QWORD *)(v60 & 0xFFFFFFFFFFFFFFF0) + 16);
        if (!v60 || v61 != 50)
          break;
        v62 = *(_QWORD *)(*(_QWORD *)(v60 + 24) + 80);
        v59 = (unint64_t *)(v62 & 0xFFFFFFFFFFFFFFF8);
        if ((v62 & 4) != 0)
          v59 = (unint64_t *)*v59;
      }
      v127 = v60 && v61 == 2;
      if (!v127
        || (v128 = (unsigned __int8 *)v59[2], *v128 == 181) && (sub_22EFF605C((uint64_t)v128), (v129 & 0x80000000) == 0))
      {
LABEL_113:
        v63 = *(_QWORD *)(v172 + 16);
        v64 = v63 & 0xFFFFFFFFFFFFFFF8;
        if ((v63 & 4) != 0)
          v64 = *(_QWORD *)v64;
        if (v64)
          v65 = (*(_WORD *)(v64 + 8) & 0x7Eu) - 38 >= 0xFFFFFFFC;
        else
          v65 = 0;
        if (v65 && (*(_DWORD *)(v64 + 8) & 0xE000) != 0x4000)
        {
          if ((*(_DWORD *)(v64 - 36) & 0x7Fu) - 38 < 0xFFFFFFFD
            || (sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v64 + 40) + 96), *(_QWORD *)(v64 + 40)),
                (**(_QWORD **)(v64 + 64) & 0x1000) != 0))
          {
            v66 = v172;
            do
            {
              v66 = *(_QWORD *)(v66 + 8) & 0xFFFFFFFFFFFFFFF8;
              if (!v66)
                goto LABEL_364;
            }
            while ((*(_DWORD *)(v66 + 28) & 0x7Fu) - 49 > 2);
          }
        }
      }
    }
  }
  if (a4)
  {
    v130 = *(_DWORD *)(a4 + 4);
    if (v130 < 0)
      v130 = sub_22F1E238C(*(_QWORD **)(a1 + 112), v130);
    v131 = v130;
    v132 = sub_22F1E361C(*(_QWORD **)(a1 + 112), v130);
    if (v132)
      v133 = v132 == 3;
    else
      v133 = 1;
    if (!v133)
    {
      sub_22F0D5A50(v12);
      if (v167 < 0)
        v167 = sub_22F1E238C(*(_QWORD **)(a1 + 112), v167);
      if (sub_22E670F58(*(_QWORD *)(a1 + 112), v131, v167))
      {
LABEL_364:
        if (v177[0] < 0x41)
          goto LABEL_367;
        v126 = __p;
        if (!__p)
          goto LABEL_367;
        goto LABEL_366;
      }
    }
    v134 = 6218;
  }
  else
  {
    v134 = 6930;
  }
  sub_22F0D5A50((uint64_t)v15);
  v136 = v135;
  v137 = *(_QWORD *)(a1 + 88) + 2128;
  v185 = 0;
  v186 = v137;
  v187 = v134;
  v203 = (uint64_t **)v205;
  v204 = xmmword_22F455490;
  llvm::APInt::toString();
  v138 = v204;
  if ((unint64_t)v204 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_379;
  v171 = v136;
  v139 = v203;
  if ((unint64_t)v204 >= 0x17)
  {
    v141 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
    if (((unint64_t)v204 | 7) != 0x17)
      v141 = v204 | 7;
    v142 = v141 + 1;
    v140 = (void **)operator new(v141 + 1);
    v183 = v138;
    v184 = v142 | 0x8000000000000000;
    __dst = v140;
    goto LABEL_297;
  }
  HIBYTE(v184) = v204;
  v140 = (void **)&__dst;
  if ((_QWORD)v204)
LABEL_297:
    memmove(v140, v139, v138);
  *((_BYTE *)v140 + v138) = 0;
  if (v203 != v205)
    free(v203);
  if (v184 >= 0)
    v143 = (void **)&__dst;
  else
    v143 = __dst;
  if (v184 >= 0)
    v144 = HIBYTE(v184) & 0x7F;
  else
    v144 = v183;
  sub_22E3B89A8(&v185, v143, v144);
  v203 = (uint64_t **)v205;
  v204 = xmmword_22F455490;
  llvm::APInt::toString();
  v145 = v204;
  if ((unint64_t)v204 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_379;
  v146 = v203;
  if ((unint64_t)v204 >= 0x17)
  {
    v148 = (v204 & 0xFFFFFFFFFFFFFFF8) + 8;
    if (((unint64_t)v204 | 7) != 0x17)
      v148 = v204 | 7;
    v149 = v148 + 1;
    v147 = operator new(v148 + 1);
    v180 = v145;
    v181 = v149 | 0x8000000000000000;
    v179 = v147;
  }
  else
  {
    HIBYTE(v181) = v204;
    v147 = &v179;
    if (!(_QWORD)v204)
      goto LABEL_314;
  }
  memmove(v147, v146, v145);
LABEL_314:
  *((_BYTE *)v147 + v145) = 0;
  if (v203 != v205)
    free(v203);
  if (v181 >= 0)
    v150 = &v179;
  else
    v150 = v179;
  if (v181 >= 0)
    v151 = HIBYTE(v181) & 0x7F;
  else
    v151 = v180;
  sub_22E3B89A8(&v185, v150, v151);
  v152 = sub_22E5FA634((uint64_t ***)&__p, 0xFFFFFFFFuLL);
  v153 = v185;
  if (!v185)
  {
    v153 = (unsigned __int8 *)sub_22E3B8AAC(v186);
    v185 = v153;
  }
  v153[*v153 + 1] = 3;
  v154 = v185;
  v155 = *v185;
  *v185 = v155 + 1;
  *(_QWORD *)&v154[8 * v155 + 16] = v152;
  sub_22F0D4E74(v12);
  sub_22E4D6448((uint64_t)(v154 + 336), v156, 1);
  v203 = (uint64_t **)v15;
  sub_22EB52944(a1, v171, &v203, 1uLL, (uint64_t *)&v185);
  if (SHIBYTE(v181) < 0)
    operator delete(v179);
  v39 = (uint64_t *)v172;
  if (SHIBYTE(v184) < 0)
    operator delete(__dst);
  if (v185 && v186)
    sub_22E3BB10C(v186, (unint64_t)v185);
  if (v177[0] >= 0x41 && __p)
    MEMORY[0x2348A0E84](__p, 0x1000C8000313F17);
LABEL_334:
  if (v39)
    goto LABEL_335;
  for (j = *(unsigned __int8 *)v15; j == 107; j = *(unsigned __int8 *)v15)
  {
    v161 = (unsigned __int8 **)(v15 + 3);
    v162 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15[3] + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v163 = *(_DWORD *)(v162 + 16);
    if (v162)
      v164 = v163 == 11;
    else
      v164 = 0;
    if (v164)
    {
      if (((*(_DWORD *)(v162 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
        goto LABEL_352;
LABEL_351:
      v161 = (unsigned __int8 **)(v15 + 2);
      goto LABEL_352;
    }
    if (v162 && v163 == 44)
    {
      v165 = sub_22F114198(*(_QWORD *)(v162 + 24));
      if (((*(_BYTE *)(v165 + 74) & 1) != 0 || *(_QWORD *)(v165 + 128) > 7uLL)
        && (*(_QWORD *)(sub_22F114198(*(_QWORD *)(v162 + 24)) + 72) & 0x8000000000) == 0)
      {
        goto LABEL_351;
      }
    }
    else if (v163 == 9)
    {
      goto LABEL_351;
    }
LABEL_352:
    v15 = (unint64_t *)sub_22EFFBBCC(*v161);
  }
  if (j != 188)
  {
    if (j == 161)
    {
      v166 = (uint64_t **)(v15 + 2);
      goto LABEL_359;
    }
    goto LABEL_367;
  }
  v166 = (uint64_t **)(v15 + 3);
LABEL_359:
  v39 = *v166;
  if (*v166)
  {
LABEL_335:
    v157 = (*(uint64_t (**)(uint64_t *))(*v39 + 16))(v39);
    *(_QWORD *)&v204 = *(_QWORD *)(a1 + 88) + 2128;
    DWORD2(v204) = 5443;
    v158 = (uint64_t **)sub_22E3B8AAC(v204);
    v203 = v158;
    v159 = *(unsigned __int8 *)v158;
    *((_BYTE *)v158 + v159 + 1) = 11;
    *(_BYTE *)v158 = v159 + 1;
    v158[v159 + 2] = v39;
    v185 = (unsigned __int8 *)v15;
    sub_22EB52944(a1, v157, &v185, 1uLL, (uint64_t *)&v203);
    if (v203 && (_QWORD)v204)
      sub_22E3BB10C(v204, (unint64_t)v203);
  }
LABEL_367:
  if (v195 >= 0x41 && v194)
    MEMORY[0x2348A0E84](v194, 0x1000C8000313F17);
LABEL_370:
  if (v199 >= 2)
    sub_22EF53BC0(&v199);
}

uint64_t sub_22E98EDA0(llvm::APInt *a1)
{
  unsigned int v1;
  unsigned int v2;
  BOOL v3;
  int v5;

  v1 = *((_DWORD *)a1 + 2);
  v2 = v1 - 1;
  if (v1 > 0x40)
  {
    if (((*(_QWORD *)(*(_QWORD *)a1 + 8 * (v2 >> 6)) >> v2) & 1) == 0)
    {
      v3 = llvm::APInt::countLeadingZerosSlowCase(a1) == v1;
      goto LABEL_7;
    }
    return 0;
  }
  if (((*(_QWORD *)a1 >> v2) & 1) != 0)
    return 0;
  v3 = *(_QWORD *)a1 == 0;
LABEL_7:
  v5 = v3;
  return v5 ^ 1u;
}

uint64_t sub_22E98EE08(uint64_t a1, unint64_t a2, char a3)
{
  char i;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v16;
  uint64_t v17;
  int v19;
  unint64_t v20;
  uint64_t v22;

  for (i = a3 ^ 1; ; i = 1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (uint64_t *)(a2 & 0xFFFFFFFFFFFFFFF0);
        v7 = sub_22F10D628(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
        if (!v7)
          break;
        v8 = v7;
        if ((*(_BYTE *)(v7 + 18) & 8) == 0)
          break;
        v22 = *(_QWORD *)(v7 + 32);
        v9 = sub_22F0F08CC(&v22);
        if (v9)
        {
          v10 = *(_QWORD *)(v9 + 40) & 0xFFFFFFFFFFFFFFF8;
          if ((*(_QWORD *)(v9 + 40) & 7) == 0 && v10 != 0)
          {
            v12 = *(_QWORD *)(v10 + 16);
            if (*(_DWORD *)v12 == 11)
            {
              v16 = *(_QWORD *)(v12 + 16);
              v17 = *(_QWORD *)(v12 + 19);
              if (v16 == 0x646567676154534FLL && v17 == 0x7274506465676761)
                return i & 1;
            }
            else if (*(_DWORD *)v12 == 5)
            {
              v13 = *(_DWORD *)(v12 + 16);
              v14 = *(unsigned __int8 *)(v12 + 20);
              if (v13 == 1951421263 && v14 == 114)
                return i & 1;
            }
          }
        }
        a2 = *(_QWORD *)(v8 + 24 * *(unsigned int *)(v8 + 20) + 40);
      }
      v19 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v6 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
      if (v19 != 39 && (v19 & 0xFE) != 0x28)
        break;
      a2 = sub_22F10ACF8(*v6);
      i = 1;
    }
    v20 = sub_22EF5C728(*(_QWORD *)(a1 + 88), a2);
    if (!v20)
      break;
    a2 = *(_QWORD *)(v20 + 32);
  }
  i = 0;
  return i & 1;
}

uint64_t sub_22E98EF80(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _DWORD *v3;
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18[2];

  v2 = *(_QWORD *)(a2 + 56);
  if ((v2 & 4) != 0 && (v4 = v2 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v4 + 16)))
    v3 = **(_DWORD ***)(v4 + 24);
  else
    v3 = (_DWORD *)(a2 + 64);
  if ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 88) + 2000) + 8) & 0x2000000000) != 0
    && (*v3 & 0x80000000) == 0
    && (*(_DWORD *)(a2 + 28) & 0x7F) != 0x40)
  {
    v17 = result;
    v6 = *(_QWORD *)(a2 + 48);
    if (*(_BYTE *)(*(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF0) + 16) != 14 || *(_QWORD *)(a2 + 88) < 8uLL)
    {
      result = sub_22E98EE08(result, v6, 0);
      if (!(_DWORD)result)
        return result;
      v12 = *(_QWORD *)(a2 + 56);
      goto LABEL_22;
    }
    v7 = *(_QWORD *)(sub_22EFBC5B4(a2) + 8);
    result = sub_22E98EE08(v17, v7, 0);
    if ((_DWORD)result)
    {
      if (!sub_22E3CB5E0(a2))
      {
        v8 = a2;
        if ((*(_BYTE *)(a2 + 96) & 7) != 2)
          goto LABEL_19;
      }
      v9 = sub_22E98EE08(v17, v7, 1);
      v8 = a2;
      if ((v9 & 1) != 0
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) != 39)
      {
        goto LABEL_19;
      }
      v10 = *(_QWORD *)(a2 + 56);
      if ((v10 & 4) != 0 && (v16 = v10 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v16 + 16)))
        v11 = **(int ***)(v16 + 24);
      else
        v11 = (int *)(a2 + 64);
      result = (uint64_t)sub_22F1E3734(*(_QWORD **)(*(_QWORD *)(v17 + 88) + 1992), *v11);
      v8 = a2;
      if ((result & 1) == 0)
      {
LABEL_19:
        v12 = *(_QWORD *)(v8 + 56);
LABEL_22:
        v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFF8);
        if ((v12 & 4) != 0)
          v13 = (uint64_t *)v13[4];
        v18[0] = *v13;
        v18[1] = (uint64_t)(v13 + 1);
        v14 = sub_22F116708(v18);
        v15 = sub_22F1167E8(v18);
        return (uint64_t)sub_22F31109C((unsigned int *)v17, v14 | (v15 << 32));
      }
    }
  }
  return result;
}

uint64_t sub_22E98F134(uint64_t result, _QWORD *a2)
{
  uint64_t v2;
  _DWORD *v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unsigned int v19;
  unsigned int *v21;
  uint64_t v22;
  uint64_t *v23;

  v2 = a2[7];
  if ((v2 & 4) != 0 && (v4 = v2 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v4 + 16)))
    v3 = **(_DWORD ***)(v4 + 24);
  else
    v3 = a2 + 8;
  if ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 88) + 2000) + 8) & 0x2000000000) != 0
    && (*v3 & 0x80000000) == 0)
  {
    v21 = (unsigned int *)result;
    v5 = *(_QWORD *)(a2[6] & 0xFFFFFFFFFFFFFFF0);
    if (v5)
      v6 = *(unsigned __int8 *)(v5 + 16) - 27 > 0xFFFFFFFD;
    else
      v6 = 0;
    if (!v6)
      v5 = sub_22F10CF48(v5);
    if (sub_22E98EE08((uint64_t)v21, *(_QWORD *)(v5 + 24), 1))
    {
      v15 = sub_22F3AC46C((unint64_t)a2);
      if (!HIDWORD(v15) || (v16 = v15, !(_DWORD)v15))
      {
        v17 = a2[7];
        v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFF8);
        if ((v17 & 4) != 0)
          v18 = (uint64_t *)v18[4];
        v22 = *v18;
        v23 = v18 + 1;
        v19 = sub_22F116708(&v22);
        v16 = v19 | (sub_22F1167E8(&v22) << 32);
      }
      sub_22F31109C(v21, v16);
    }
    v7 = (uint64_t *)a2[15];
    result = sub_22EFBAACC((uint64_t)a2);
    v8 = (uint64_t)v21;
    if ((_DWORD)result)
    {
      v9 = 8 * result;
      do
      {
        v10 = *v7;
        result = sub_22E98EE08(v8, *(_QWORD *)(*v7 + 48), 0);
        if ((_DWORD)result)
        {
          v11 = *(_QWORD *)(v10 + 56);
          v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFF8);
          if ((v11 & 4) != 0)
            v12 = (uint64_t *)v12[4];
          v22 = *v12;
          v23 = v12 + 1;
          v13 = sub_22F116708(&v22);
          v14 = sub_22F1167E8(&v22);
          result = (uint64_t)sub_22F31109C(v21, v13 | (v14 << 32));
        }
        ++v7;
        v9 -= 8;
        v8 = (uint64_t)v21;
      }
      while (v9);
    }
  }
  return result;
}

uint64_t sub_22E98F2BC(uint64_t result, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t *i;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  int v14;
  uint64_t v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[2];
  uint64_t v38;
  unsigned int v39[24];

  if ((*(_DWORD *)(a2 + 24) & 0xFD0000) != 0x10000)
    return result;
  v3 = (_QWORD *)result;
  v4 = *(_QWORD *)(result + 3440);
  v5 = sub_22F3C7A68(a2);
  if (sub_22F3E9714(v4, v5, 3u))
  {
    v6 = (_QWORD *)(a2 + 16);
    if ((*(_BYTE *)(a2 + 27) & 1) != 0)
      v6 = (_QWORD *)(*v6 + 40);
    v7 = 0;
    v8 = *v6;
    i = &qword_22F469098;
    v10 = v3[430];
    while (sub_22F3E8F74(v10, v7) != v8)
    {
      ++v7;
      ++i;
      if (v7 == 12)
        goto LABEL_33;
    }
    if (v7 - 8 < 4)
      goto LABEL_11;
  }
LABEL_33:
  v22 = v3[430];
  v23 = sub_22F3C7A68(a2);
  if (sub_22F3E9714(v22, v23, 5u))
  {
    v24 = (_QWORD *)(a2 + 16);
    if ((*(_BYTE *)(a2 + 27) & 1) != 0)
      v24 = (_QWORD *)(*v24 + 40);
    v25 = *v24;
    v26 = v3[430];
    v27 = -13;
    while (sub_22F3E91B4(v26, v27 + 13) != v25)
    {
      if (__CFADD__(v27++, 1))
        goto LABEL_43;
    }
    if (v27 > 0xFFFFFFFC)
    {
      v11 = 0;
LABEL_12:
      result = (uint64_t)sub_22EFFEB40(*(unsigned __int8 **)(a2 + 8 * v11 + 48));
      v12 = (unsigned __int8 *)result;
      if (*(unsigned __int8 *)result == 210)
      {
        result = (uint64_t)sub_22EFFEB40(*(unsigned __int8 **)(result + 16));
        v12 = (unsigned __int8 *)result;
      }
      v13 = *(unsigned __int8 *)(a2 + 26) << 16;
      if (v13 == 0x10000)
      {
        v16 = *(unsigned __int8 **)(a2 + 40);
      }
      else
      {
        if (v13 == 196608)
        {
          if (*v12 != 161)
            return result;
          result = sub_22F00175C(v12);
          if (!(_DWORD)result)
            return result;
          sub_22F0D4E74(a2);
          sub_22E8FCA40(v3, v14, 0x1A99u, 0, (uint64_t)v39);
          v38 = *((_QWORD *)v12 + 2);
          v15 = sub_22E890024((uint64_t)v39, &v38);
          v37[0] = (uint64_t)"'super'";
          v37[1] = 7;
          sub_22F2F2210(v15, (uint64_t)v37);
          return (uint64_t)sub_22E903BEC(v39);
        }
        v16 = 0;
      }
      result = (uint64_t)sub_22EFFEB40(v16);
      v17 = *(unsigned __int8 *)result;
      if (v17 == 210)
      {
        result = (uint64_t)sub_22EFFEB40(*(unsigned __int8 **)(result + 16));
        v17 = *(unsigned __int8 *)result;
      }
      if (v17 == 199)
      {
        if (*v12 != 199 || *(_QWORD *)(result + 16) != *((_QWORD *)v12 + 2))
          return result;
        v37[0] = *(_QWORD *)(result + 16);
        sub_22F0D4E74(a2);
        sub_22E8FCA40(v3, v20, 0x1A99u, 0, (uint64_t)v39);
        v21 = sub_22E890024((uint64_t)v39, v37);
        sub_22E890024(v21, v37);
        sub_22E903BEC(v39);
        sub_22E8FCA40(v3, *(_DWORD *)(v37[0] + 24), 0x16EDu, 0, (uint64_t)v39);
        sub_22E890024((uint64_t)v39, v37);
      }
      else
      {
        if (v17 != 161)
          return result;
        if (*v12 != 161)
          return result;
        if (*(_QWORD *)(result + 16) != *((_QWORD *)v12 + 2))
          return result;
        v37[0] = *(_QWORD *)(result + 16);
        sub_22F0D4E74(a2);
        sub_22E8FCA40(v3, v18, 0x1A99u, 0, (uint64_t)v39);
        v19 = sub_22E890024((uint64_t)v39, v37);
        sub_22E890024(v19, v37);
        sub_22E903BEC(v39);
        result = sub_22F00175C(v12);
        if ((result & 1) != 0)
          return result;
        sub_22E8FCA40(v3, *(_DWORD *)(v37[0] + 24), 0x16EDu, 0, (uint64_t)v39);
        sub_22E890024((uint64_t)v39, v37);
      }
      return (uint64_t)sub_22E903BEC(v39);
    }
  }
LABEL_43:
  v29 = v3[430];
  v30 = sub_22F3C7A68(a2);
  LOBYTE(v29) = sub_22F3E9714(v29, v30, 7u);
  v31 = v3[430];
  v32 = sub_22F3C7A68(a2);
  result = sub_22F3E9714(v31, v32, 8u);
  if ((v29 & 1) != 0 || (_DWORD)result)
  {
    v33 = (_QWORD *)(a2 + 16);
    if ((*(_BYTE *)(a2 + 27) & 1) != 0)
      v33 = (_QWORD *)(*v33 + 40);
    v34 = 0;
    v35 = *v33;
    v36 = v3[430];
    for (i = &qword_22F4690F8; ; ++i)
    {
      result = sub_22F3E9448(v36, v34);
      if (result == v35)
        break;
      if (++v34 == 5)
        return result;
    }
    if (v34 <= 4)
    {
LABEL_11:
      v11 = *i;
      goto LABEL_12;
    }
  }
  return result;
}

uint64_t sub_22E98F6A0(uint64_t result, uint64_t a2)
{
  int v2;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  unint64_t v12;
  _DWORD *i;
  unsigned int v16;
  BOOL v17;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];

  v2 = *(_DWORD *)(a2 + 24);
  if ((v2 & 0xFD0000) != 0x10000)
    return result;
  v4 = (_QWORD *)result;
  v5 = (_QWORD *)(a2 + 16);
  v6 = (uint64_t *)(a2 + 16);
  if ((v2 & 0x1000000) != 0)
    v6 = (uint64_t *)(*v5 + 40);
  v7 = *v6;
  v8 = *v6 & 7;
  if (v8 == 1)
    return result;
  v9 = v7 & 0xFFFFFFFFFFFFFFF8;
  v10 = v7 & 0xFFFFFFFFFFFFFFF8;
  if (v8 == 7)
    v10 = *(_QWORD *)(v9 + 16);
  if (!v10)
    return result;
  v11 = *(_DWORD **)(v10 + 16);
  v12 = *v11;
  if (!*v11)
    return result;
  for (i = v11 + 4; *(_BYTE *)i == 95; i = (_DWORD *)((char *)i + 1))
  {
    if (!--v12)
      return result;
  }
  if (v12 < 3)
    return result;
  if (*(_WORD *)i != 25971 || *((_BYTE *)i + 2) != 116)
  {
    if (*(_WORD *)i != 25697 || *((_BYTE *)i + 2) != 100)
      return result;
    v16 = v7 & 7;
    if (v16 >= 2)
    {
      v17 = v16 != 2 && *(_DWORD *)v9 != 4;
      if (v12 >= 0x15 && !v17)
      {
        if (*(_QWORD *)i == 0x617265704F646461
          && *((_QWORD *)i + 1) == 0x687469576E6F6974
          && *(_QWORD *)((char *)i + 13) == 0x6B636F6C42687469)
        {
          return result;
        }
        goto LABEL_39;
      }
    }
  }
  if (v12 != 3)
  {
LABEL_39:
    if ((word_22F4ADB24[*((unsigned __int8 *)i + 3)] & 0x40) != 0)
      return result;
  }
  memset(v28, 0, 21);
  if ((v2 & 0xFF0000) == 0x10000)
  {
    result = sub_22E98F908(result, *(unsigned __int8 **)(a2 + 40), (uint64_t)v28);
    if (!(_DWORD)result)
      return result;
    v20 = *(_DWORD *)(a2 + 24);
  }
  else
  {
    result = sub_22E90328C(result);
    v28[0] = *(_QWORD *)(result + 120);
    v20 = *(_DWORD *)(a2 + 24);
    if ((v20 & 0xFE0000) == 0x20000)
    {
      v21 = *(unsigned int *)(a2 + 28);
      v22 = v21 | (v21 << 32);
    }
    else
    {
      LODWORD(v21) = 0;
      v22 = 0;
    }
    LODWORD(v28[2]) = v21;
    v28[1] = v22;
  }
  if ((v20 & 0x1000000) != 0)
    v23 = *v5;
  else
    v23 = 0;
  if ((_WORD)v20)
  {
    v24 = 0;
    v25 = a2 + 48;
    v26 = 8 * (unsigned __int16)v20;
    while (1)
    {
      result = (uint64_t)sub_22E98FC60((uint64_t)v4, *(unsigned __int8 **)(v25 + v24), v28);
      if (result)
      {
        v27 = result;
        if (!v23)
          break;
        result = sub_22F24DBE4(*(_QWORD *)(*(_QWORD *)(v23 + 96) + v24));
        if ((result & 1) == 0)
          break;
      }
      v24 += 8;
      if (v26 == v24)
        return result;
    }
    return (uint64_t)sub_22E98FE4C(v4, v27, (uint64_t)v28);
  }
  return result;
}

uint64_t sub_22E98F908(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 **v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v25;

  while (1)
  {
    do
    {
      v4 = (uint64_t)a2;
      LODWORD(v5) = *a2;
      if (v5 > 0xD5)
      {
        if ((_DWORD)v5 == 233)
        {
          LODWORD(v5) = *(_DWORD *)a2;
          if ((*(_DWORD *)a2 & 0x7C0000) != 0x300000)
            return 0;
          v6 = a2 + 16;
        }
        else
        {
          if ((_DWORD)v5 != 214)
            break;
          v6 = a2 + 24;
        }
      }
      else if ((_DWORD)v5 == 155)
      {
        if ((**((_DWORD **)a2 + 2) & 0x18000) != 0)
          return 0;
        v6 = a2 + 24;
        if (!a2[48])
          v6 = a2 + 32;
        LOBYTE(v5) = -101;
      }
      else
      {
        if ((_DWORD)v5 != 176)
          break;
        v5 = *((unsigned int *)a2 + 5);
        if ((_DWORD)v5 == -1)
          return 0;
        v6 = &a2[8 * v5 + 40];
        LOBYTE(v5) = -80;
      }
      a2 = *(unsigned __int8 **)v6;
    }
    while (*(_QWORD *)v6 != v4);
    if ((v5 + 102) >= 0xF5u)
    {
      v8 = 0;
      v9 = (*(_DWORD *)v4 >> 18) & 0x7F;
      if (v9 > 0x3B || ((1 << v9) & 0x800000000000016) == 0)
        return v8;
LABEL_23:
      v10 = (unsigned __int8 **)(v4 + 16);
      goto LABEL_24;
    }
    v7 = v5;
    if (v5 <= 0xC6u)
    {
      if (v5 == 188)
      {
        if ((*(_BYTE *)(v4 + 2) & 4) != 0)
          return 0;
        goto LABEL_23;
      }
      v8 = 0;
      if (v7 != 161)
        return v8;
      v8 = 0;
      v21 = *(_QWORD *)(v4 + 16);
      if (!v21 || (*(_DWORD *)(v21 + 28) & 0x7Fu) - 67 < 0xFFFFFFF9)
        return v8;
      v22 = *(_QWORD *)((*(_QWORD *)(v21 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v22 & 8) != 0 && (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) == 0x80)
      {
        *(_QWORD *)a3 = v21;
        sub_22EFF605C(v4);
        *(_DWORD *)(a3 + 16) = v23;
        goto LABEL_69;
      }
      return 0;
    }
    if (v5 != 217)
    {
      v8 = 0;
      if (v7 != 199)
        return v8;
      v18 = *(_QWORD *)((*(_QWORD *)(*(_QWORD *)(v4 + 16) + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v18 & 8) != 0
        && (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) == 0x80
        && sub_22E98F908(a1, *(_QWORD *)(v4 + 24), a3))
      {
        if ((*(_BYTE *)(v4 + 40) & 2) != 0)
        {
          sub_22EFF605C(v4);
          *(_DWORD *)(a3 + 16) = v19;
          sub_22F0D4E74(v4);
          *(_QWORD *)(a3 + 8) = v20;
        }
        v8 = 1;
        *(_BYTE *)(a3 + 20) = 1;
        return v8;
      }
      return 0;
    }
    v11 = *(unsigned __int8 **)(v4 + 16);
    if (v11)
    {
      do
      {
        v4 = (uint64_t)v11;
        v12 = *v11;
        if (v12 > 0xD5)
        {
          if (v12 == 233)
          {
            if ((*(_DWORD *)v11 & 0x7C0000) != 0x300000)
              return 0;
            v12 = *(_DWORD *)v11;
            v14 = v11 + 16;
          }
          else
          {
            if (v12 != 214)
              break;
            v14 = v11 + 24;
          }
        }
        else if (v12 == 155)
        {
          if ((**((_DWORD **)v11 + 2) & 0x18000) != 0)
            return 0;
          v14 = v11 + 24;
          if (!*(_BYTE *)(v4 + 48))
            v14 = (unsigned __int8 *)(v4 + 32);
          v12 = 155;
        }
        else
        {
          if (v12 != 176)
            break;
          v13 = *((unsigned int *)v11 + 5);
          if ((_DWORD)v13 == -1)
            return 0;
          v14 = &v11[8 * v13 + 40];
          v12 = 176;
        }
        v11 = *(unsigned __int8 **)v14;
      }
      while (v11 != (unsigned __int8 *)v4);
      if (v12 != 205)
        return 0;
    }
    else
    {
      v4 = 0;
    }
    v15 = *(_QWORD *)(v4 + 16);
    if ((v15 & 4) != 0)
      return 0;
    v16 = v15 & 0xFFFFFFFFFFFFFFF8;
    if ((*(_WORD *)(v16 + 72) & 0x430) == 0)
    {
      v8 = *(_QWORD *)(v16 + 120);
      if (!v8)
        return v8;
      v17 = *(_QWORD *)((*(_QWORD *)(v8 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v17 & 8) == 0 || (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) != 0x80)
        return 0;
    }
    *(_BYTE *)(a3 + 20) = 1;
    if ((*(_QWORD *)(v4 + 40) & 6) == 2)
      break;
    v10 = (unsigned __int8 **)((*(_QWORD *)(v4 + 40) & 0xFFFFFFFFFFFFFFF8) + 16);
LABEL_24:
    a2 = *v10;
  }
  v8 = *(_QWORD *)(sub_22E90328C(a1) + 120);
  *(_QWORD *)a3 = v8;
  if (v8)
  {
    *(_DWORD *)(a3 + 16) = *(_DWORD *)(v4 + 32);
LABEL_69:
    sub_22F0D4E74(v4);
    *(_QWORD *)(a3 + 8) = v25;
    return 1;
  }
  return v8;
}

unsigned __int8 *sub_22E98FC60(uint64_t a1, unsigned __int8 *a2, uint64_t *a3)
{
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  _DWORD *v13;
  unsigned __int8 *result;
  unint64_t v15;
  unsigned __int8 **v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _DWORD *v29;
  _QWORD v30[3];
  uint64_t v31;
  char v32;

  v5 = sub_22EFFBBCC(a2);
  v6 = v5;
  v7 = *v5;
  if (v7 == 200)
  {
    v8 = *((_DWORD *)v5 + 6);
    v9 = v5 + 16;
    if ((v8 & 0x1000000) != 0)
      v9 = (_QWORD *)(*v9 + 40);
    v10 = *v9;
    v12 = (v10 & 7) == 1;
    v11 = v10 & 0xFFFFFFFFFFFFFFF8;
    v12 = !v12 || v11 == 0;
    if (v12)
      goto LABEL_29;
    v13 = *(_DWORD **)(v11 + 16);
    if (*v13 != 4 || v13[4] != 2037411683)
      goto LABEL_29;
    if ((v8 & 0xFF0000) != 0x10000)
      return 0;
    result = (unsigned __int8 *)*((_QWORD *)v5 + 5);
    if (!result)
      return result;
    goto LABEL_28;
  }
  if ((v7 + 113) >= 0xFBu)
  {
    if (*((_DWORD *)v5 + 4) != 1)
      goto LABEL_29;
    v15 = *(unsigned int *)v5;
    v16 = (unsigned __int8 **)&v5[v15 >> 24];
    v17 = sub_22EFFA604(*v16);
    if (!v17 || (*(_DWORD *)(v17 + 28) & 0x7Eu) - 52 > 5)
      goto LABEL_29;
    v18 = *(_QWORD *)(v17 + 40) & 0xFFFFFFFFFFFFFFF8;
    if ((*(_QWORD *)(v17 + 40) & 7) != 0 || v18 == 0)
      goto LABEL_29;
    v20 = *(_QWORD *)(v18 + 16);
    if (*(_DWORD *)v20 != 11)
      goto LABEL_29;
    v21 = *(_QWORD *)(v20 + 16);
    v22 = *(_QWORD *)(v20 + 19);
    if (v21 != 0x635F6B636F6C425FLL || v22 != 0x79706F635F6B636FLL)
      goto LABEL_29;
    result = v16[((v15 >> 18) & 1) + 1];
LABEL_28:
    v6 = sub_22EFFBBCC(result);
LABEL_29:
    v7 = *v6;
  }
  if (v7 != 114)
    return 0;
  v24 = *((_QWORD *)v6 + 2);
  v25 = *(unsigned int *)(v24 + 112);
  if (!(_DWORD)v25)
    return 0;
  v26 = *a3;
  v27 = *(_QWORD **)(v24 + 104);
  v28 = 16 * v25;
  while (v26 != (*v27 & 0xFFFFFFFFFFFFFFF8))
  {
    v27 += 2;
    v28 -= 16;
    if (!v28)
      return 0;
  }
  v30[0] = *(_QWORD *)(a1 + 88);
  v30[1] = v30[0];
  v30[2] = v26;
  v31 = 0;
  v32 = 0;
  v29 = (_DWORD *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v24 + 64))(v24);
  sub_22E9A996C((uint64_t)v30, v29);
  if (v32)
    return 0;
  else
    return (unsigned __int8 *)v31;
}

unsigned int *sub_22E98FE4C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unsigned int v12[24];

  sub_22EFF605C(a2);
  sub_22E8FCA40(a1, v6, 0x183Du, 0, (uint64_t)v12);
  v7 = sub_22E890024((uint64_t)v12, (uint64_t *)a3);
  sub_22F0D4E74(a2);
  v11 = v8;
  sub_22E8906A0(v7, &v11);
  sub_22E903BEC(v12);
  sub_22E8FCA40(a1, *(_DWORD *)(a3 + 16), 0x153Fu, 0, (uint64_t)v12);
  v9 = sub_22E894E38((uint64_t)v12, (unsigned __int8 *)(a3 + 20));
  sub_22E8906A0(v9, (uint64_t *)(a3 + 8));
  return sub_22E903BEC(v12);
}

unsigned __int8 *sub_22E98FF04(unsigned __int8 *result, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v3;
  unsigned __int8 *v5;
  uint64_t v6[2];
  int v7;
  char v8;

  v8 = 0;
  v7 = 0;
  v3 = *(_QWORD *)((*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v3 & 8) != 0 && (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0x1C0) == 0x80)
  {
    v5 = result;
    v6[0] = a2;
    v7 = *(_DWORD *)(a2 + 24);
    v6[1] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    result = sub_22E98FC60((uint64_t)v5, a3, v6);
    if (result)
      return (unsigned __int8 *)sub_22E98FE4C(v5, (uint64_t)result, (uint64_t)v6);
  }
  return result;
}

uint64_t sub_22E98FF9C(_QWORD *a1, int a2, uint64_t a3, unsigned __int8 *a4)
{
  uint64_t v4;
  unsigned int v6;

  v4 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v4 & 8) != 0 && (v6 = *(_DWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 0x18), (v6 & 0x140) == 0x40))
    return sub_22E98FFD8(a1, a2, (v6 >> 6) & 7, a4, 0);
  else
    return 0;
}

uint64_t sub_22E98FFD8(_QWORD *a1, int a2, int a3, unsigned __int8 *a4, int a5)
{
  unsigned __int8 *v6;
  int i;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21[24];

  v6 = a4;
  for (i = *a4; i == 153; i = *v6)
  {
    if ((*(_DWORD *)v6 & 0x1FC0000) == 0xE80000)
    {
      sub_22E8FCA40(a1, a2, 0x183Eu, 0, (uint64_t)v21);
      LOBYTE(v19) = a3 == 1;
      v12 = sub_22E894E38((uint64_t)v21, (unsigned __int8 *)&v19);
      v20 = a5 ^ 1;
      v13 = &v20;
      goto LABEL_8;
    }
    v6 = (unsigned __int8 *)*((_QWORD *)v6 + 2);
  }
  if (a3 != 3)
    return 0;
  v6 = sub_22EFFA6B0(v6);
  v16 = sub_22F32F390((int)a1, v6);
  if ((v16 & 0xFFFFFFFD) == 4)
    return 0;
  v17 = v16;
  sub_22E8FCA40(a1, a2, 0x1838u, 0, (uint64_t)v21);
  v20 = v17;
  v12 = sub_22E89519C((uint64_t)v21, (unsigned int *)&v20);
  v19 = a5 ^ 1;
  v13 = &v19;
LABEL_8:
  v14 = sub_22E8900C4(v12, v13);
  sub_22F0D4E74((uint64_t)v6);
  v18 = v15;
  sub_22E8906A0(v14, &v18);
  sub_22E903BEC(v21);
  return 1;
}

uint64_t sub_22E99011C(uint64_t result, unsigned int a2, unint64_t a3, unsigned __int8 *a4)
{
  uint64_t v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31[24];

  v6 = result;
  if (a3)
  {
    v7 = (unsigned __int8 *)a3;
    do
    {
      v8 = v7;
      v9 = *v7;
      if (v9 > 0xD5)
      {
        if (v9 == 233)
        {
          if ((*(_DWORD *)v7 & 0x7C0000) != 0x300000)
            goto LABEL_19;
          v9 = *(_DWORD *)v7;
          v11 = v7 + 16;
        }
        else
        {
          if (v9 != 214)
            break;
          v11 = v7 + 24;
        }
      }
      else if (v9 == 155)
      {
        if ((**((_DWORD **)v7 + 2) & 0x18000) != 0)
          goto LABEL_19;
        v11 = v7 + 24;
        if (!v8[48])
          v11 = v8 + 32;
        v9 = 155;
      }
      else
      {
        if (v9 != 176)
          break;
        v10 = *((unsigned int *)v7 + 5);
        if ((_DWORD)v10 == -1)
          goto LABEL_19;
        v11 = &v7[8 * v10 + 40];
        v9 = 176;
      }
      v7 = *(unsigned __int8 **)v11;
    }
    while (v7 != v8);
    if (v9 == 205)
      goto LABEL_21;
LABEL_19:
    v8 = 0;
    v12 = 0;
    goto LABEL_26;
  }
  v8 = 0;
LABEL_21:
  v13 = *((_QWORD *)v8 + 2);
  if ((v13 & 4) != 0 || (v14 = v13 & 0xFFFFFFFFFFFFFFF8) == 0)
  {
    v12 = 1;
    goto LABEL_26;
  }
  v15 = *(_QWORD *)(v14 + 56);
  v12 = 1;
  if (v15 <= 0xF)
LABEL_26:
    v15 = *(_QWORD *)(a3 + 8);
  v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v17 & 8) != 0)
  {
    v20 = v17 & 0xFFFFFFFFFFFFFFF0;
    v18 = (*(_DWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 6) & 7;
    if (v18 == 3)
    {
      v19 = a2;
      result = sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(result + 104) + 32), 0x183Cu, a2, *(_QWORD *)(result + 104));
      if ((_DWORD)result != 1)
      {
        v21 = *(unsigned int *)(v6 + 1904);
        if ((_DWORD)v21)
          v22 = *(_QWORD *)(*(_QWORD *)(v6 + 1896) + 8 * v21 - 8);
        else
          v22 = 0;
        result = (uint64_t)sub_22E8FBEA0(v22, a3);
        v23 = v16[1];
        if ((v23 & 8) == 0)
          return result;
        v20 = v23 & 0xFFFFFFFFFFFFFFF0;
      }
    }
    else
    {
      v19 = a2;
    }
    if ((*(_DWORD *)(v20 + 24) & 0x140) == 0x40)
    {
      result = sub_22E98FFD8((_QWORD *)v6, v19, (*(_DWORD *)(v20 + 24) >> 6) & 7, a4, 0);
      v24 = result ^ 1;
      goto LABEL_40;
    }
  }
  else
  {
    v18 = 0;
    v19 = a2;
  }
  v24 = 1;
LABEL_40:
  if (v18)
    v24 = 0;
  if ((v12 & v24) == 1)
  {
    v25 = *((_QWORD *)v8 + 2);
    if ((v25 & 4) == 0)
    {
      v26 = v25 & 0xFFFFFFFFFFFFFFF8;
      if (v26)
      {
        v27 = *(_DWORD *)(v26 + 72);
        if ((v27 & 4) != 0)
        {
          if ((*(_BYTE *)(v26 + 76) & 4) != 0
            || (result = *v16,
                v28 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16),
                v28 != 10)
            && v28 != 32
            && (result = sub_22F115064(result), (result & 1) == 0))
          {
            while (*a4 == 153)
            {
              if ((*(_DWORD *)a4 & 0x1FC0000) == 0xE80000)
              {
                sub_22E8FCA40((_QWORD *)v6, v19, 0x183Fu, 0, (uint64_t)v31);
                sub_22F0D4E74((uint64_t)a4);
                v30 = v29;
                sub_22E8906A0((uint64_t)v31, &v30);
                return (uint64_t)sub_22E903BEC(v31);
              }
              a4 = (unsigned __int8 *)*((_QWORD *)a4 + 2);
            }
          }
        }
        else if ((v27 & 0x200) != 0)
        {
          return sub_22E98FFD8((_QWORD *)v6, v19, 3, a4, 1);
        }
      }
    }
  }
  return result;
}

unsigned int *sub_22E99040C(unsigned int *result, int a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v6;
  unsigned int v7[24];
  unsigned int v8[24];

  if (!*((_QWORD *)result + 1503) && *(_BYTE *)a3 == 19)
  {
    v6 = result;
    result = (unsigned int *)sub_22E9904A8(*((_QWORD *)result + 14), a2, a3);
    if ((_DWORD)result)
    {
      sub_22E8FCA40(v6, *(_DWORD *)(a3 + 4), a4, 0, (uint64_t)v8);
      sub_22E903BEC(v8);
      sub_22E8FCA40(v6, *(_DWORD *)(a3 + 4), 0x15BEu, 0, (uint64_t)v7);
      return sub_22E903BEC(v7);
    }
  }
  return result;
}

BOOL sub_22E9904A8(uint64_t a1, int a2, uint64_t a3)
{
  int v6;
  int v7;
  BOOL v9[12];
  int v10;

  if ((*(_WORD *)a3 & 0x100) != 0)
    return 0;
  sub_22F1E2F68(a1, a2, 1, (uint64_t)v9);
  if (!*(_QWORD *)v9)
    return 0;
  v6 = v10;
  v9[0] = 0;
  v7 = sub_22F423C68(a1, *(_DWORD *)(a3 + 4), v9);
  return !v9[0] && v6 == v7;
}

void sub_22E990528(_QWORD *a1, unsigned __int8 *a2, _BYTE *a3)
{
  int v6;
  unint64_t v7;
  unsigned __int8 *v8;
  unsigned int v9;
  unint64_t v10;
  unint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  unsigned int v18[24];
  unsigned int v19[24];
  _QWORD v20[2];
  unsigned int v21;

  v6 = *a2;
  if (v6 == 236)
  {
    v10 = ((unint64_t)*(unsigned __int16 *)a2 >> 8) & 1;
    sub_22F0D4E74(*(_QWORD *)&a2[8 * v10 + 16]);
    v7 = HIDWORD(v11);
    v8 = &a2[8 * (v10 + 1) + 16];
    v9 = 6536;
  }
  else
  {
    if (v6 != 14)
      return;
    LODWORD(v7) = *((_DWORD *)a2 + 13);
    v8 = a2 + 40;
    v9 = 6530;
  }
  v12 = *(_BYTE **)v8;
  if (**(_BYTE **)v8 == 19
    && sub_22F1CF68C(*(_QWORD *)(a1[13] + 32), v9, *((_DWORD *)v12 + 1), a1[13]) != 1
    && sub_22E9904A8(a1[14], v7, (uint64_t)v12))
  {
    if (*a3 == 8
      || (v13 = a1[14], sub_22F0D5A50((uint64_t)a3), sub_22F1E2F68(v13, v14, 1, (uint64_t)v20), v20[0])
      && (v15 = v21, v16 = a1[14], sub_22F0D5A50((uint64_t)a2), sub_22F1E2F68(v16, v17, 1, (uint64_t)v20), v20[0])
      && v15 > v21)
    {
      sub_22E8FCA40(a1, *((_DWORD *)v12 + 1), v9, 0, (uint64_t)v19);
      sub_22E903BEC(v19);
      sub_22E8FCA40(a1, *((_DWORD *)v12 + 1), 0x15BEu, 0, (uint64_t)v18);
      sub_22E903BEC(v18);
    }
  }
}

unsigned int *sub_22E9906A8(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, unsigned int a4)
{
  unsigned int *result;
  unsigned __int8 *v9;
  unsigned int *v10;
  unsigned __int8 *v11;
  int v12;
  int v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30[24];

  result = (unsigned int *)sub_22F1CF68C(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 32), 0x1B4Fu, a4, *(_QWORD *)(a1 + 104));
  if ((_DWORD)result != 1 && *(_DWORD *)(a1 + 10680) <= *(_DWORD *)(a1 + 11956))
  {
    v9 = sub_22EFFA6B0(a2);
    result = (unsigned int *)sub_22EFFA6B0(a3);
    if ((*(_BYTE *)result + 113) >= 0xFBu)
    {
      v10 = result;
      if (result[4] == 1)
      {
        result = (unsigned int *)sub_22EFFA8F0((uint64_t)result);
        if ((_DWORD)result == 1192)
        {
          v11 = *(unsigned __int8 **)((char *)&v10[2 * (((unint64_t)*v10 >> 18) & 1) + 2]
                                    + ((unint64_t)*v10 >> 24));
          v12 = *v9;
          v13 = *v11;
          if (v13 == 161)
            v14 = v11;
          else
            v14 = 0;
          if (v12 == 161 && v13 == 161)
          {
            result = (unsigned int *)*((_QWORD *)v9 + 2);
            if (result)
            {
LABEL_12:
              if (*((_QWORD *)v14 + 2))
              {
                v15 = (*(uint64_t (**)(unsigned int *))(*(_QWORD *)result + 32))(result);
                result = (unsigned int *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v14 + 2) + 32))(*((_QWORD *)v14 + 2));
                if ((unsigned int *)v15 == result)
                {
LABEL_36:
                  sub_22E8FCA40((_QWORD *)a1, a4, 0x1B41u, 0, (uint64_t)v30);
                  v29 = *((_QWORD *)v9 + 1);
                  v23 = sub_22E8901B8((uint64_t)v30, &v29);
                  sub_22F0D4E74((uint64_t)v9);
                  v28 = v24;
                  v25 = sub_22E8906A0(v23, &v28);
                  sub_22F0D4E74((uint64_t)v11);
                  v27 = v26;
                  sub_22E8906A0(v25, &v27);
                  return sub_22E903BEC(v30);
                }
              }
            }
          }
          else if (v12 == 188 && v13 == 188)
          {
            v16 = v11;
            v17 = v9;
            while (1)
            {
              v18 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)v17 + 3) + 32))(*((_QWORD *)v17 + 3));
              result = (unsigned int *)(*(uint64_t (**)(_QWORD))(**((_QWORD **)v16 + 3) + 32))(*((_QWORD *)v16 + 3));
              if ((unsigned int *)v18 != result)
                break;
              v19 = (unsigned __int8 *)*((_QWORD *)v17 + 2);
              v20 = (unsigned __int8 *)*((_QWORD *)v16 + 2);
              v21 = *v19;
              v22 = *v20;
              if (v22 == 188)
                v16 = (unsigned __int8 *)*((_QWORD *)v16 + 2);
              else
                v16 = 0;
              if (v21 == 188)
                v17 = (unsigned __int8 *)*((_QWORD *)v17 + 2);
              else
                v17 = 0;
              if (v21 != 188 || v22 != 188)
              {
                if (v22 == 161)
                  v14 = v20;
                else
                  v14 = 0;
                if (v21 == 161 && v22 == 161)
                {
                  result = (unsigned int *)*((_QWORD *)v19 + 2);
                  if (result)
                    goto LABEL_12;
                  return result;
                }
                if (v21 != 133 || v22 != 133)
                  return result;
                goto LABEL_36;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_22E9908E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  unsigned int v6;
  int v9;
  int v10;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_DWORD *)(v2 + 16);
  if (v2)
    v4 = *(_DWORD *)(v2 + 16) == 11;
  else
    v4 = 0;
  if (!v4)
    return 0;
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_DWORD *)(v5 + 16);
  if (!v5 || *(_DWORD *)(v5 + 16) != 11)
    return 0;
  v9 = (v3 >> 19) & 0x1FF;
  v10 = (v6 >> 19) & 0x1FF;
  if (v9 == 179 && v10 == 178 || v9 == 168 && v10 == 167 || v9 == 167 && v10 == 168)
    return 1;
  return v9 == 178 && v10 == 179;
}

BOOL sub_22E990994(uint64_t a1, unint64_t a2, unint64_t a3)
{
  _BOOL8 v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  int v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  void **v36;
  void **v37;
  void *v38;
  void **v39;
  uint64_t *v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t **v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void **v50;
  void **v51;
  uint64_t v52;
  int v53;
  _BYTE v54[64];

  v3 = 0;
  if (a2 < 0x10 || a3 < 0x10)
    return v3;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF0) + 8);
  v5 = v4 | a2 & 7;
  v6 = a3 & 0xFFFFFFFFFFFFFFF0;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8);
  v8 = a3 & 7;
  if (v5 == (v7 | v8))
    return 1;
  v10 = *(_QWORD *)(v4 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v10 + 8) & 0xF) != 0)
  {
    v10 = (unint64_t)sub_22F10D2BC(v5);
    v7 = *(_QWORD *)(v6 + 8);
  }
  v11 = v10 & 0xFFFFFFFFFFFFFFF0;
  v12 = *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v12 + 8) & 0xF) != 0)
    v12 = (unint64_t)sub_22F10D2BC(v7 | v8);
  v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)v11;
  if (*(_BYTE *)(*v13 + 16) != *(_DWORD *)(*(_QWORD *)v11 + 16))
    return 0;
  v16 = *(_DWORD *)(*(_QWORD *)v11 + 16);
  if (v16 != 45)
  {
    if (v16 == 44)
    {
      v17 = sub_22F114198(*(_QWORD *)(v14 + 24));
      v18 = sub_22F114198(*(_QWORD *)(*v13 + 24));
      v19 = v18;
      if (((*(_BYTE *)(v17 + 74) & 1) != 0 || *(_QWORD *)(v17 + 128) >= 8uLL)
        && ((*(_BYTE *)(v18 + 74) & 1) != 0 || *(_QWORD *)(v18 + 128) >= 8uLL))
      {
        v20 = sub_22E496830(v17);
        v21 = sub_22E496830(v19);
        return (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF0) + 8) | v20 & 7) == (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF0) + 8) | v21 & 7);
      }
    }
    return 0;
  }
  if (!sub_22F1120D0(v14))
    return 0;
  if (!sub_22F1120D0(*v13))
    return 0;
  v22 = sub_22F114198(*(_QWORD *)(*(_QWORD *)v11 + 24));
  v23 = sub_22F114198(*(_QWORD *)(*v13 + 24));
  if (((*(_DWORD *)(v22 + 72) & 0xE000) == 0x4000) != ((*(_DWORD *)(v23 + 72) & 0xE000) == 0x4000))
    return 0;
  v24 = v23;
  if ((*(_DWORD *)(v22 + 72) & 0xE000) != 0x4000)
  {
    if ((*(_DWORD *)(v22 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v22 + 104) + 96), *(_QWORD *)(v22 + 104));
      v41 = *(_DWORD *)(*(_QWORD *)(v22 + 128) + 16);
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v24 + 104) + 96), *(_QWORD *)(v24 + 104));
      if (v41 != *(_DWORD *)(*(_QWORD *)(v24 + 128) + 16))
        return 0;
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v22 + 104) + 96), *(_QWORD *)(v22 + 104));
      v42 = *(_QWORD *)(v22 + 128);
      v43 = *(_QWORD *)(v42 + 24);
      if ((v43 & 1) != 0)
        v43 = sub_22EFCF510(v42);
      v44 = sub_22F24CD30(v22);
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v24 + 104) + 96), *(_QWORD *)(v24 + 104));
      v45 = *(_QWORD *)(*(_QWORD *)(v24 + 128) + 24);
      if ((v45 & 1) != 0)
        v45 = sub_22EFCF510(*(_QWORD *)(v24 + 128));
      if (v43 != v44)
      {
        v46 = (uint64_t **)(v45 + 16);
        do
        {
          v47 = **(_QWORD **)(v43 + 16);
          v48 = *(_QWORD *)(v47 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v48 + 8) & 0xF) != 0)
            v48 = (unint64_t)sub_22F10D2BC(v47);
          v49 = *(_QWORD *)(**v46 & 0xFFFFFFFFFFFFFFF0);
          if ((*(_BYTE *)(v49 + 8) & 0xF) != 0)
            v49 = (unint64_t)sub_22F10D2BC(**v46);
          if (!sub_22E990994(a1, v48 & 0xFFFFFFFFFFFFFFF0, v49 & 0xFFFFFFFFFFFFFFF0))
            return 0;
          v43 += 24;
          v46 += 3;
        }
        while (v43 != v44);
      }
    }
    else if ((*(_DWORD *)(v23 + 28) & 0x7Fu) - 38 >= 0xFFFFFFFD)
    {
      sub_22E3CD31C((uint64_t *)(*(_QWORD *)(v23 + 104) + 96), *(_QWORD *)(v23 + 104));
      if (*(_DWORD *)(*(_QWORD *)(v24 + 128) + 16))
        return 0;
    }
    v27 = sub_22EFC3B90(v24);
    v28 = sub_22EFC3B90(v22);
    v29 = v28 != 0;
    if (!v28 || !v27)
      return (v27 == 0) & ~v29;
    v30 = v28;
LABEL_35:
    if (sub_22E9A9DB0(a1, v30, v27))
    {
      do
      {
        v30 = *(_QWORD *)(v30 + 8) & 0xFFFFFFFFFFFFFFF8;
        v29 = v30 != 0;
      }
      while (v30 && (*(_DWORD *)(v30 + 28) & 0x7Fu) - 49 > 2);
      while (1)
      {
        v27 = *(_QWORD *)(v27 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v27)
          return (v27 == 0) & ~v29;
        if ((*(_DWORD *)(v27 + 28) & 0x7Fu) - 49 <= 2)
        {
          v29 = 0;
          if (v30)
            goto LABEL_35;
          return (v27 == 0) & ~v29;
        }
      }
    }
    return 0;
  }
  v50 = (void **)v54;
  v51 = (void **)v54;
  v52 = 8;
  v53 = 0;
  v25 = sub_22EFC3B90(v23);
  if (v25)
  {
    v26 = v25;
LABEL_25:
    sub_22E3BA850((uint64_t)&v50, (const void *)v26);
    while (1)
    {
      v26 = *(_QWORD *)(v26 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v26)
        break;
      if ((*(_DWORD *)(v26 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_25;
    }
  }
  v31 = sub_22EFC3B90(v22);
  if (!v31)
    goto LABEL_67;
  v32 = v31;
LABEL_44:
  if (v51 == v50)
    v33 = (uint64_t *)((char *)&v52 + 4);
  else
    v33 = &v52;
  v34 = *(unsigned int *)v33;
  if ((_DWORD)v34)
  {
    v35 = 8 * v34;
    v36 = v51;
    while ((unint64_t)*v36 >= 0xFFFFFFFFFFFFFFFELL)
    {
      ++v36;
      v35 -= 8;
      if (!v35)
        goto LABEL_82;
    }
  }
  else
  {
    v36 = v51;
  }
  v37 = &v51[v34];
  if (v36 == v37)
    goto LABEL_82;
  v38 = *v36;
LABEL_55:
  if ((sub_22E9A9DB0(a1, v32, (uint64_t)v38) & 1) != 0)
  {
    v39 = sub_22E3BA914((llvm::SmallPtrSetImplBase *)&v50, *v36);
    if (v51 == v50)
      v40 = (uint64_t *)((char *)&v52 + 4);
    else
      v40 = &v52;
    if (v39 != &v51[*(unsigned int *)v40])
    {
      *v39 = (void *)-2;
      ++v53;
    }
    while (1)
    {
      v32 = *(_QWORD *)(v32 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v32)
        break;
      if ((*(_DWORD *)(v32 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_44;
    }
LABEL_67:
    v3 = HIDWORD(v52) == v53;
    goto LABEL_83;
  }
  while (++v36 != v37)
  {
    v38 = *v36;
    if ((unint64_t)*v36 < 0xFFFFFFFFFFFFFFFELL)
      goto LABEL_55;
  }
LABEL_82:
  v3 = 0;
LABEL_83:
  if (v51 != v50)
    free(v51);
  return v3;
}

int64_t sub_22E990EC8(int64_t result, uint64_t a2, unsigned __int8 *a3)
{
  int64_t v4;
  unsigned __int8 *v5;
  unsigned int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unsigned int v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *__dst;

  v4 = result;
  if (a3)
  {
    while (1)
    {
      v5 = a3;
      v6 = *a3;
      if (v6 > 0xD5)
      {
        if (v6 == 233)
        {
          if ((*(_DWORD *)a3 & 0x7C0000) != 0x300000)
            goto LABEL_19;
          v8 = a3 + 16;
        }
        else
        {
          if (v6 != 214)
            goto LABEL_19;
          v8 = a3 + 24;
        }
      }
      else if (v6 == 155)
      {
        if ((**((_DWORD **)a3 + 2) & 0x18000) != 0)
          goto LABEL_19;
        if (a3[48])
          v8 = a3 + 24;
        else
          v8 = a3 + 32;
      }
      else
      {
        if (v6 != 176)
          goto LABEL_19;
        v7 = *((unsigned int *)a3 + 5);
        if ((_DWORD)v7 == -1)
          goto LABEL_19;
        v8 = &a3[8 * v7 + 40];
      }
      a3 = *(unsigned __int8 **)v8;
      if (*(unsigned __int8 **)v8 == v5)
        goto LABEL_19;
    }
  }
  v5 = 0;
LABEL_19:
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_DWORD *)(v9 + 16);
  if (v10 > 0x26)
  {
    if (v10 != 39)
    {
      if (v10 != 44)
        return result;
      result = sub_22F114198(*(_QWORD *)(v9 + 24));
      if ((*(_BYTE *)(result + 74) & 1) == 0 && *(_QWORD *)(result + 128) < 8uLL)
        return result;
      result = sub_22F114198(*(_QWORD *)(v9 + 24));
      if ((*(_BYTE *)(result + 76) & 0x80) != 0)
        return result;
    }
  }
  else if (v10 == 11)
  {
    if (((*(_DWORD *)(v9 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
      return result;
  }
  else if (v10 != 9)
  {
    return result;
  }
  if (*v5 != 233 || (*(_DWORD *)v5 & 0x7C0000) != 0x100000)
    return result;
  v11 = (unsigned __int8 *)*((_QWORD *)v5 + 2);
  if (!v11)
  {
    v12 = 0;
LABEL_53:
    v16 = *(_QWORD *)(v4 + 13072);
    v17 = *(unsigned int *)(v4 + 13080);
    if ((_DWORD)v17)
    {
      v24 = 32 * v17;
      v25 = *(char **)(v4 + 13072);
      v18 = (char *)(v16 + 32 * v17);
      while (*(unsigned __int8 **)v25 != v12)
      {
        v25 += 32;
        v24 -= 32;
        if (!v24)
          goto LABEL_55;
      }
      v18 = v25;
    }
    else
    {
      v18 = *(char **)(v4 + 13072);
    }
LABEL_55:
    v19 = (uint64_t)&v18[-v16] >> 5;
    if (v19 != v17)
    {
      __dst = v18;
      result = sub_22E479BE0(a2);
      v20 = __dst;
      if ((result & 1) != 0)
        goto LABEL_57;
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
      {
        v26 = sub_22F10ACF8(a2);
        result = sub_22F1110EC(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0), 0);
        v20 = __dst;
        if ((result & 1) != 0
          || (v27 = v16,
              v28 = *(_QWORD *)(v4 + 88),
              v29 = sub_22F10ACF8(a2),
              result = sub_22EF5D130(v28, v29),
              v20 = __dst,
              result <= *(_QWORD *)(v27 + 32 * v19 + 24)))
        {
LABEL_57:
          v21 = v20 + 32;
          v22 = *(unsigned int *)(v4 + 13080);
          v23 = *(_QWORD *)(v4 + 13072) + 32 * v22;
          if ((const void *)v23 != v21)
          {
            result = (int64_t)memmove(__dst, v21, v23 - (_QWORD)v21);
            LODWORD(v22) = *(_DWORD *)(v4 + 13080);
          }
          *(_DWORD *)(v4 + 13080) = v22 - 1;
        }
      }
    }
    return result;
  }
  do
  {
    v12 = v11;
    v13 = *v11;
    if (v13 > 0xD5)
    {
      if (v13 == 233)
      {
        if ((*(_DWORD *)v11 & 0x7C0000) != 0x300000)
          return result;
        v13 = *(_DWORD *)v11;
        v15 = v11 + 16;
      }
      else
      {
        if (v13 != 214)
          break;
        v15 = v11 + 24;
      }
    }
    else if (v13 == 155)
    {
      if ((**((_DWORD **)v11 + 2) & 0x18000) != 0)
        return result;
      v15 = v11 + 24;
      if (!v12[48])
        v15 = v12 + 32;
      v13 = 155;
    }
    else
    {
      if (v13 != 176)
        break;
      v14 = *((unsigned int *)v11 + 5);
      if ((_DWORD)v14 == -1)
        return result;
      v15 = &v11[8 * v14 + 40];
      v13 = 176;
    }
    v11 = *(unsigned __int8 **)v15;
  }
  while (v11 != v12);
  if (v13 == 188)
    goto LABEL_53;
  return result;
}

void sub_22E99120C(uint64_t a1, unsigned __int8 *a2, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t v8;
  _BOOL4 v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  int v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unsigned int v33;
  unint64_t v34;
  unsigned int v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unsigned int v53;
  unint64_t v54;
  unsigned int v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unsigned int v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  void (*v64)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  unsigned __int8 *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[5];

  v68[4] = *MEMORY[0x24BDAC8D0];
  if (*a2 == 188)
  {
    v8 = *(_QWORD *)((*((_QWORD *)a2 + 1) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((v8 & 8) == 0 || (*(_BYTE *)((v8 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 8) == 0)
    {
      LOBYTE(v9) = 0;
      v67 = 0x400000000;
      v10 = a2;
      while (1)
      {
        v11 = v10;
        v12 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)v10 + 2) + 8) & 0xFFFFFFFFFFFFFFF0);
        if ((*(_BYTE *)(v12 + 17) & 4) != 0)
          break;
        if ((v10[2] & 4) != 0)
          v12 = *(_QWORD *)(sub_22F10ACF8(v12) & 0xFFFFFFFFFFFFFFF0);
        v13 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 24));
        if ((*(_BYTE *)(v13 + 28) & 0x80) != 0)
          break;
        v14 = *((_QWORD *)v11 + 3);
        if ((*(_DWORD *)(v14 + 28) & 0x80) != 0 || !v14 || (*(_DWORD *)(v14 + 28) & 0x7Fu) - 49 > 2)
          break;
        v9 = v9 || sub_22E6A4B04(v13) || sub_22E6A4B04(v14);
        v15 = v67;
        if (v67 >= (unint64_t)HIDWORD(v67))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v15 = v67;
        }
        v68[v15] = v14;
        LODWORD(v67) = v67 + 1;
        v16 = (unsigned __int8 *)*((_QWORD *)v11 + 2);
        if (v16)
        {
          v17 = (unsigned __int8 *)*((_QWORD *)v11 + 2);
          while (1)
          {
            v10 = v17;
            v18 = *v17;
            if (v18 > 0xD5)
            {
              if (v18 == 233)
              {
                if ((*(_DWORD *)v17 & 0x7C0000) != 0x300000)
                  goto LABEL_38;
                v18 = *(_DWORD *)v17;
                v20 = v17 + 16;
              }
              else
              {
                if (v18 != 214)
                  goto LABEL_37;
                v20 = v17 + 24;
              }
            }
            else if (v18 == 155)
            {
              if ((**((_DWORD **)v17 + 2) & 0x18000) != 0)
                goto LABEL_38;
              v20 = v17 + 24;
              if (!v10[48])
                v20 = v10 + 32;
              v18 = 155;
            }
            else
            {
              if (v18 != 176)
                goto LABEL_37;
              v19 = *((unsigned int *)v17 + 5);
              if ((_DWORD)v19 == -1)
                goto LABEL_38;
              v20 = &v17[8 * v19 + 40];
              v18 = 176;
            }
            v17 = *(unsigned __int8 **)v20;
            if (v17 == v10)
              goto LABEL_37;
          }
        }
        v18 = 0;
        v10 = 0;
LABEL_37:
        if (v18 != 188)
        {
LABEL_38:
          if (v9)
          {
            v21 = sub_22EFFA6B0(v16);
            v22 = *v21;
            if (v22 == 161 || v22 == 133)
            {
              v23 = sub_22EF5D130(*(_QWORD *)(a1 + 88), *((_QWORD *)a2 + 1));
              if (v23 != 1)
              {
                v24 = v23;
                v65 = v21;
                v66 = a4;
                if ((_DWORD)v67)
                {
                  v63 = v23;
                  v64 = a3;
                  v25 = 0;
                  v26 = v67;
                  do
                  {
                    v27 = *(_QWORD *)(a1 + 88);
                    v28 = sub_22F0CBBE4(v27, v68[v26 - 1]);
                    v25 += v28 / sub_22EF5CDF0(v27, *(_QWORD *)(*(_QWORD *)(v27 + 16408) & 0xFFFFFFFFFFFFFFF0));
                    --v26;
                  }
                  while (v26 * 8);
                  v29 = v67;
                  v24 = v63;
                  a3 = v64;
                }
                else
                {
                  v29 = 0;
                  v25 = 0;
                }
                v30 = *(_QWORD *)(a1 + 88);
                v31 = *(_QWORD *)(v68[v29 - 1] + 16);
                v32 = v31 & 0xFFFFFFFFFFFFFFF8;
                if ((v31 & 4) != 0)
                  v32 = *(_QWORD *)v32;
                v33 = (*(_WORD *)(v32 + 8) & 0x7E) - 34;
                if (v32)
                  v34 = v32 - 64;
                else
                  v34 = 0;
                if (v33 >= 4)
                  v34 = 0;
                sub_22EF5CDF0(*(_QWORD *)(a1 + 88), *(_QWORD *)(v34 + 48));
                v36 = v35
                    / (unint64_t)sub_22EF5CDF0(v30, *(_QWORD *)(*(_QWORD *)(v30 + 16408) & 0xFFFFFFFFFFFFFFF0));
                if (v22 == 161 && (v11[2] & 4) == 0)
                {
                  v37 = *((_QWORD *)v65 + 2);
                  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v37 + 48) & 0xFFFFFFFFFFFFFFF0)
                                                          + 8) & 0xFFFFFFFFFFFFFFF0)
                                  + 16) & 0xFE) != 0x28)
                  {
                    v38 = sub_22EF5B404(*(_QWORD *)(a1 + 88), v37, 0);
                    if (v36 <= v38)
                      v36 = v38;
                  }
                }
                if (v25 % v24 || v36 < v24)
                {
                  if ((_DWORD)v67)
                  {
                    v40 = v68;
                    v41 = 8 * v67;
                    while (1)
                    {
                      v42 = *v40;
                      if (sub_22E6A4B04(*v40))
                        break;
                      v43 = *(_QWORD *)(v42 + 16);
                      v44 = v43 & 0xFFFFFFFFFFFFFFF8;
                      if ((v43 & 4) != 0)
                        v44 = *(_QWORD *)v44;
                      v45 = (*(_WORD *)(v44 + 8) & 0x7E) - 34;
                      v46 = v44 ? v44 - 64 : 0;
                      v47 = v45 >= 4 ? 0 : v46;
                      if (sub_22E6A4B04(v47))
                        break;
                      ++v40;
                      v41 -= 8;
                      if (!v41)
                        goto LABEL_77;
                    }
                    v49 = sub_22EF5D130(*(_QWORD *)(a1 + 88), *(_QWORD *)(v42 + 48));
                    v50 = *(_QWORD *)(a1 + 88);
                    v51 = *(_QWORD *)(v42 + 16);
                    v52 = v51 & 0xFFFFFFFFFFFFFFF8;
                    if ((v51 & 4) != 0)
                      v52 = *(_QWORD *)v52;
                    v53 = (*(_WORD *)(v52 + 8) & 0x7E) - 34;
                    if (v52)
                      v54 = v52 - 64;
                    else
                      v54 = 0;
                    if (v53 >= 4)
                      v54 = 0;
                    sub_22EF5CDF0(v50, *(_QWORD *)(v54 + 48));
                    v56 = v55;
                    v57 = sub_22EF5CDF0(v50, *(_QWORD *)(*(_QWORD *)(v50 + 16408) & 0xFFFFFFFFFFFFFFF0));
                    if ((uint64_t)(v56 / v57) >= v49)
                      v48 = v49;
                    else
                      v48 = v56 / v57;
                  }
                  else
                  {
LABEL_77:
                    v48 = 0;
                    v42 = 0;
                  }
                  v58 = *(_QWORD *)(v42 + 16);
                  v59 = v58 & 0xFFFFFFFFFFFFFFF8;
                  if ((v58 & 4) != 0)
                    v59 = *(_QWORD *)v59;
                  v60 = (*(_WORD *)(v59 + 8) & 0x7E) - 34;
                  if (v59)
                    v61 = v59 - 64;
                  else
                    v61 = 0;
                  if (v60 >= 4)
                    v62 = 0;
                  else
                    v62 = v61;
                  a3(v66, a2, v62, v42, v48);
                }
              }
            }
          }
          return;
        }
      }
    }
  }
}

uint64_t sub_22E99170C(_QWORD *a1, uint64_t a2, _BYTE *a3, uint64_t a4, unsigned int a5, unsigned __int8 a6)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  unsigned __int8 *v21;
  BOOL v22;
  unsigned int *v23;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _DWORD **v31;
  unsigned int v32;
  _DWORD *v33;
  unsigned int *v34;
  uint64_t v35;
  unsigned int *v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  unint64_t v40;
  uint64_t v41;
  unsigned int *v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  int v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unsigned int *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  int *v61;
  unsigned int v62;
  int *v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  int v70;
  uint64_t v71;
  _QWORD *v72;
  _BYTE v73[96];
  unsigned int v74[24];
  _BYTE v75[96];
  unsigned int v76[24];
  _BYTE v77[96];
  _BYTE v78[100];
  _BOOL4 v79;
  int v80[24];
  _BYTE v81[96];
  _BYTE v82[96];
  __int16 v83;
  uint64_t v84;
  uint64_t v85[2];
  unsigned int v86;
  uint64_t *v87;
  uint64_t v88;
  _QWORD v89[5];

  v89[4] = *MEMORY[0x24BDAC8D0];
  v80[0] = 0;
  v12 = 0;
  if ((sub_22EFD8088(a2, v80) & 1) != 0)
    return v12;
  if (!a4)
  {
LABEL_6:
    v15 = &a3[8 * a4];
    v16 = sub_22EFD7558(a2);
    v17 = sub_22F10ACF8(*(_QWORD *)(v16 & 0xFFFFFFFFFFFFFFF0));
    v18 = sub_22EF579A8(a1[11], v17, 0);
    v87 = v89;
    v88 = 0x400000000;
    sub_22E3D0148((uint64_t)&v87, a3, v15);
    sub_22EB4E494(a1, a5, a2, 1);
    v19 = v87;
    LODWORD(v15) = v88;
    v20 = sub_22E3CD3D4(a1[11] + 2032, (8 * v88) + 48, 3);
    v21 = (unsigned __int8 *)sub_22F0615F0(v20, a2, v17, v18, v19, v15, 0, 0, a6, 0, 0);
    v83 = 0;
    v84 = 0;
    LODWORD(v85[0]) = 0;
    if (sub_22F005120(v21, (uint64_t)&v83, a1[11], 0))
      v22 = v83 == 0;
    else
      v22 = 0;
    if (!v22)
    {
      sub_22E8FCA40(a1, a5, 0xF1Du, 0, (uint64_t)v82);
      v23 = (unsigned int *)v82;
LABEL_76:
      sub_22E903BEC(v23);
      v12 = 1;
LABEL_77:
      if (LODWORD(v85[0]) >= 2)
        sub_22EF53BC0(v85);
      if (v87 != v89)
        free(v87);
      return v12;
    }
    v25 = v85[1] + 72 * v86;
    v26 = *(_QWORD *)(v25 + 8);
    v27 = *(_DWORD *)(v25 + 16);
    v28 = v26 + 72 * (v27 + 6);
    v29 = (_QWORD *)(v28 + 8);
    if (*(_DWORD *)(v28 + 16) >= 0x41u)
      v29 = (_QWORD *)*v29;
    if (*(_DWORD *)v29)
    {
      v30 = v26 + 72 * (v27 + 5);
      v31 = (_DWORD **)(v30 + 8);
      v32 = *(_DWORD *)(v30 + 16);
      v33 = v31;
      if (v32 >= 0x41)
        v33 = *v31;
      if (*v33)
      {
        sub_22E8FCA40(a1, a5, 0xF1Cu, 0, (uint64_t)v81);
        v34 = (unsigned int *)v81;
LABEL_42:
        sub_22E903BEC(v34);
        sub_22E8FCA40(a1, a5, 0x1691u, 0, (uint64_t)v80);
        v79 = (*(_QWORD *)(a1[9] + 116) & 0x800000000000000) != 0;
        sub_22E89519C((uint64_t)v80, (unsigned int *)&v79);
        v23 = (unsigned int *)v80;
        goto LABEL_76;
      }
      v35 = v26 + 72 * v27;
      v36 = (unsigned int *)(v35 + 8);
      if (*(_DWORD *)(v35 + 16) > 0x40u)
        v36 = *(unsigned int **)v36;
      v37 = *v36;
      if (v37 >= 2 && v37 != 4)
        goto LABEL_41;
      v38 = v26 + 72 * (v27 + 1);
      v39 = (unsigned int *)(v38 + 8);
      if (*(_DWORD *)(v38 + 16) > 0x40u)
        v39 = *(unsigned int **)v39;
      v40 = *v39;
      if (v40 >= 2 && v40 != 4)
        goto LABEL_41;
      v41 = v26 + 72 * (v27 + 2);
      v42 = (unsigned int *)(v41 + 8);
      if (*(_DWORD *)(v41 + 16) > 0x40u)
        v42 = *(unsigned int **)v42;
      v43 = *v42;
      if (v43 >= 2 && v43 != 4)
      {
LABEL_41:
        sub_22E8FCA40(a1, a5, 0xF1Cu, 0, (uint64_t)v78);
        v34 = (unsigned int *)v78;
        goto LABEL_42;
      }
      v44 = v26 + 72 * (v27 + 4);
      v45 = (_QWORD *)(v44 + 8);
      if (*(_DWORD *)(v44 + 16) >= 0x41u)
        v45 = (_QWORD *)*v45;
      v46 = *(_DWORD *)v45;
      v47 = v26 + 72 * (v27 + 3);
      v48 = (_QWORD *)(v47 + 8);
      if (*(_DWORD *)(v47 + 16) >= 0x41u)
        v48 = (_QWORD *)*v48;
      if (v46 != *(_DWORD *)v48)
        goto LABEL_40;
      if (v32 >= 0x41)
        v31 = (_DWORD **)*v31;
      if (*(_DWORD *)v31)
        goto LABEL_40;
      v49 = v26 + 72 * (v27 + 7);
      v50 = (unsigned int *)(v49 + 8);
      if (*(_DWORD *)(v49 + 16) > 0x40u)
        v50 = *(unsigned int **)v50;
      v51 = *v50;
      if (v51)
      {
        if (v51 != 8)
        {
LABEL_40:
          sub_22E8FCA40(a1, a5, 0xF1Cu, 0, (uint64_t)v77);
          v34 = (unsigned int *)v77;
          goto LABEL_42;
        }
      }
    }
    v52 = v26 + 72 * (v27 + 11);
    v53 = (_QWORD *)(v52 + 8);
    if (*(_DWORD *)(v52 + 16) >= 0x41u)
      v53 = (_QWORD *)*v53;
    if (*(_DWORD *)v53)
    {
      v54 = v26 + 72 * v27;
      v55 = (_QWORD *)(v54 + 8);
      if (*(_DWORD *)(v54 + 16) >= 0x41u)
        v55 = (_QWORD *)*v55;
      if (!*(_DWORD *)v55)
        goto LABEL_63;
      v56 = v26 + 72 * (v27 + 1);
      v57 = (_QWORD *)(v56 + 8);
      if (*(_DWORD *)(v56 + 16) >= 0x41u)
        v57 = (_QWORD *)*v57;
      if (!*(_DWORD *)v57)
        goto LABEL_63;
      v58 = v26 + 72 * (v27 + 2);
      v59 = (_QWORD *)(v58 + 8);
      if (*(_DWORD *)(v58 + 16) >= 0x41u)
        v59 = (_QWORD *)*v59;
      if (!*(_DWORD *)v59)
      {
LABEL_63:
        sub_22E8FCA40(a1, a5, 0xF1Cu, 0, (uint64_t)v76);
        sub_22E903BEC(v76);
        sub_22E8FCA40(a1, a5, 0x1690u, 0, (uint64_t)v75);
        v23 = (unsigned int *)v75;
        goto LABEL_76;
      }
    }
    v60 = v26 + 72 * (v27 + 3);
    v61 = (int *)(v60 + 8);
    v62 = *(_DWORD *)(v60 + 16);
    v63 = v61;
    if (v62 >= 0x41)
      v63 = *(int **)v61;
    v64 = *v63;
    v65 = v27 + 4;
    if (v64 == 2)
    {
      v66 = *(_DWORD *)(v26 + 72 * v65 + 16);
    }
    else
    {
      v67 = v26 + 72 * v65;
      v68 = (_QWORD *)(v67 + 8);
      v66 = *(_DWORD *)(v67 + 16);
      if (v66 >= 0x41)
        v68 = (_QWORD *)*v68;
      if (*(_DWORD *)v68 != 2)
        goto LABEL_81;
    }
    v69 = (_QWORD *)(v26 + 72 * v65 + 8);
    if (v66 >= 0x41)
      v69 = (_QWORD *)*v69;
    v70 = *(_DWORD *)v69;
    if (v62 >= 0x41)
      v61 = *(int **)v61;
    if (v70 != *v61)
      goto LABEL_75;
    v71 = v26 + 72 * (v27 + 5);
    v72 = (_QWORD *)(v71 + 8);
    if (*(_DWORD *)(v71 + 16) >= 0x41u)
      v72 = (_QWORD *)*v72;
    if (*(_DWORD *)v72)
    {
LABEL_75:
      sub_22E8FCA40(a1, a5, 0xF1Cu, 0, (uint64_t)v74);
      sub_22E903BEC(v74);
      sub_22E8FCA40(a1, a5, 0x168Fu, 0, (uint64_t)v73);
      v23 = (unsigned int *)v73;
      goto LABEL_76;
    }
LABEL_81:
    v12 = 0;
    goto LABEL_77;
  }
  v13 = 8 * a4;
  v14 = a3;
  while ((*(_BYTE *)(*(_QWORD *)v14 + 2) & 1) == 0)
  {
    v14 += 8;
    v13 -= 8;
    if (!v13)
      goto LABEL_6;
  }
  return 0;
}

void sub_22E991D20(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

void sub_22E991D64()
{
  uint64_t v0;

  sub_22F10ACF8(v0);
  JUMPOUT(0x22E991D40);
}

uint64_t sub_22E991D74()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BOOL8 v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  char v7;

  sub_22E3BA850(v0 + 16, (const void *)v1);
  if (!v2)
    return 1;
  if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0), "matrix", 6, 1, 0) & 1) != 0
    || (sub_22F10B8E0(v1, "texture2d", 9, 1, 0) & 1) != 0
    || sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0))
  {
    return sub_22EE8B0B0(*(_QWORD *)v0, *(_DWORD *)(v0 + 8), v1 & 0xFFFFFFFFFFFFFFF0) ^ 1;
  }
  v4 = sub_22F10C2A4(v1);
  if (v4 && (*(_DWORD *)(v4 + 28) & 0x7Fu) - 35 >= 3)
    v4 = 0;
  v5 = sub_22EFC3B90(v4);
  sub_22F10C2A4(v1);
  if (!v5)
    return 1;
  sub_22E991D20(v0, *(_QWORD *)(v5 + 48));
  if (!v6)
    return 0;
  while (1)
  {
    v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
    v3 = v5 == 0;
    if (!v5)
      break;
    if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 <= 2)
    {
      sub_22E991D20(v0, *(_QWORD *)(v5 + 48));
      if ((v7 & 1) == 0)
        break;
    }
  }
  return v3;
}

BOOL sub_22E991ED0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v2 = *(_QWORD *)v1;
  v3 = *(unsigned int *)(v1 + 8);
  v4 = *(_QWORD *)v1 + 8 * v3;
  if ((_DWORD)v3)
  {
    v5 = 8 * v3;
    while (*(_WORD *)(*(_QWORD *)v2 + 32) != 449)
    {
      v2 += 8;
      v5 -= 8;
      if (!v5)
      {
        v2 = v4;
        return v2 != v4;
      }
    }
  }
  return v2 != v4;
}

uint64_t sub_22E991F30(_QWORD *a1, uint64_t a2)
{
  char *v4;
  _DWORD *v5;
  _BYTE v7[24];
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if ((*(_DWORD *)(a2 + 28) & 0x80) == 0)
  {
    sub_22E992248((uint64_t)&v8, (uint64_t)a1);
    v4 = (char *)&loc_22E991FB4 + 4 * byte_22F468745[sub_22EA4DA58(a1, a2, 0, 0, 0, 0)];
    __asm { BR              X10 }
  }
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
  {
    v5 = (_DWORD *)(a1[11] + 15144);
    v8 = a2;
    *(_QWORD *)&v9 = 0;
    sub_22EF757BC(v5, &v8, &v9, (uint64_t)v7);
  }
  return 0;
}

double sub_22E992248(uint64_t a1, uint64_t a2)
{
  double result;
  uint64_t v3;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = *(unsigned int *)(*(_QWORD *)(a2 + 64) + 8);
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 40) = a1 + 56;
  *(_QWORD *)(a1 + 48) = 0x400000000;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 88) = a1 + 104;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 112) = 1;
  result = 0.0;
  *(_QWORD *)(a1 + 312) = 0;
  *(_QWORD *)(a1 + 320) = a1 + 16;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  *(_OWORD *)(a1 + 296) = 0u;
  v3 = *(unsigned int *)(*(_QWORD *)(a2 + 64) + 52);
  *(_QWORD *)(a1 + 344) = 0;
  *(_QWORD *)(a1 + 352) = 0;
  *(_QWORD *)(a1 + 328) = v3;
  *(_QWORD *)(a1 + 336) = 0;
  *(_QWORD *)(a1 + 360) = a1 + 376;
  *(_QWORD *)(a1 + 368) = 0x400000000;
  *(_QWORD *)(a1 + 408) = a1 + 424;
  *(_QWORD *)(a1 + 416) = 0;
  *(_QWORD *)(a1 + 424) = 0;
  *(_QWORD *)(a1 + 432) = 1;
  *(_QWORD *)(a1 + 632) = 0;
  *(_QWORD *)(a1 + 640) = a1 + 336;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_QWORD *)(a1 + 648) = *(unsigned int *)(*(_QWORD *)(a2 + 64) + 48);
  *(_QWORD *)(a1 + 672) = 0;
  *(_QWORD *)(a1 + 664) = 0;
  *(_QWORD *)(a1 + 656) = 0;
  *(_QWORD *)(a1 + 680) = a1 + 696;
  *(_QWORD *)(a1 + 688) = 0x400000000;
  *(_QWORD *)(a1 + 728) = a1 + 744;
  *(_QWORD *)(a1 + 744) = 0;
  *(_QWORD *)(a1 + 736) = 0;
  *(_QWORD *)(a1 + 752) = 1;
  *(_QWORD *)(a1 + 952) = 0;
  *(_QWORD *)(a1 + 960) = a1 + 656;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(_OWORD *)(a1 + 840) = 0u;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 872) = 0u;
  *(_OWORD *)(a1 + 888) = 0u;
  *(_OWORD *)(a1 + 904) = 0u;
  *(_OWORD *)(a1 + 920) = 0u;
  *(_OWORD *)(a1 + 936) = 0u;
  *(_QWORD *)(a1 + 968) = *(unsigned int *)(*(_QWORD *)(a2 + 64) + 40);
  *(_QWORD *)(a1 + 976) = 0;
  *(_QWORD *)(a1 + 992) = 0;
  *(_QWORD *)(a1 + 984) = 0;
  *(_QWORD *)(a1 + 1000) = a1 + 1016;
  *(_QWORD *)(a1 + 1008) = 0x400000000;
  *(_QWORD *)(a1 + 1048) = a1 + 1064;
  *(_QWORD *)(a1 + 1064) = 0;
  *(_QWORD *)(a1 + 1056) = 0;
  *(_QWORD *)(a1 + 1072) = 1;
  *(_QWORD *)(a1 + 1272) = 0;
  *(_QWORD *)(a1 + 1280) = a1 + 976;
  *(_OWORD *)(a1 + 1080) = 0u;
  *(_OWORD *)(a1 + 1096) = 0u;
  *(_OWORD *)(a1 + 1112) = 0u;
  *(_OWORD *)(a1 + 1128) = 0u;
  *(_OWORD *)(a1 + 1144) = 0u;
  *(_OWORD *)(a1 + 1160) = 0u;
  *(_OWORD *)(a1 + 1176) = 0u;
  *(_OWORD *)(a1 + 1192) = 0u;
  *(_OWORD *)(a1 + 1208) = 0u;
  *(_OWORD *)(a1 + 1224) = 0u;
  *(_OWORD *)(a1 + 1240) = 0u;
  *(_OWORD *)(a1 + 1256) = 0u;
  return result;
}

uint64_t sub_22E9923DC(_QWORD **a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_22E54B75C((*a1)[11] + 15144, a2);
  v5 = *(_QWORD *)(result + 8);
  v6 = *(_QWORD *)(result + 16);
  switch((int)v5)
  {
    case 1:
    case 2:
    case 16:
    case 17:
    case 19:
    case 20:
    case 22:
    case 23:
    case 25:
    case 26:
      result = sub_22E9AA08C(a1, a2, v5, v6);
      break;
    case 4:
    case 5:
      result = sub_22E9AA2F0(a1, a2, v5, v6);
      break;
    case 7:
    case 8:
      result = sub_22E9AA8C0(a1, a2, v5, v6);
      break;
    case 10:
    case 11:
      result = sub_22E9AAA60(a1, a2, v5, v6);
      break;
    case 13:
    case 14:
      result = sub_22E9AACC4(a1, a2, v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_22E9924A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char *v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  int v9;
  _BOOL8 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t **v22;
  uint64_t v23;
  unsigned int v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  void (**v34)(uint64_t *);
  uint64_t (***v35)();
  void (**v36)(uint64_t (***)());
  _QWORD *v37;
  void (**v38)(_QWORD *);
  uint64_t *v39;
  void (**v40)(uint64_t *);
  uint64_t *v41;
  void (**v42)(uint64_t *);
  _QWORD *v43;
  void (**v44)(_QWORD *);
  _QWORD *v45;
  void (**v46)(_QWORD *);
  _QWORD *v47;
  void (**v48)(_QWORD *);
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  uint64_t **v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t **v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  int v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  void ***v83;
  uint64_t **v84;
  unint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  void ***v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int v100;
  unint64_t v101;
  uint64_t (***v102)();
  void (**v103)(uint64_t (***)());
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 *v108;
  _QWORD *v109;
  unsigned __int8 *v110;
  _BYTE *v111;
  unsigned __int8 *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 *v125;
  _QWORD *v126;
  unsigned __int8 *v127;
  _BYTE *v128;
  unsigned __int8 *v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  _BOOL4 v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t *v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _DWORD *v150;
  uint64_t v151;
  uint64_t (***v152)();
  void (**v153)(uint64_t (***)());
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  int v167;
  unint64_t v169;
  char *v170;
  _BYTE *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  __int128 v176;
  uint64_t v177;
  BOOL v178;
  char v179;
  char v180;
  uint64_t v181;
  uint64_t v182;
  BOOL v183;
  unint64_t v184;
  uint64_t v185;
  unsigned int v186;
  _DWORD *v187;
  char *v188;
  char v189;
  void **v190;
  int v191;
  unsigned int v192;
  __int128 v193;
  uint64_t *v194;
  void (**v195)(uint64_t *);
  uint64_t *v196;
  void (**v197)(uint64_t *);
  BOOL v198;
  unsigned int v199;
  _QWORD *v200;
  llvm::raw_ostream *v201;
  uint64_t v202;
  uint64_t *v203;
  _BYTE *v204;
  _BOOL4 v205;
  _BYTE *v206;
  unint64_t v207;
  const char *v208;
  uint64_t v209;
  uint64_t *v210;
  _QWORD *v211;
  uint64_t v212;
  unsigned __int8 *v213;
  _QWORD *v214;
  unsigned __int8 *v215;
  _BYTE *v216;
  unsigned __int8 *v217;
  uint64_t v218;
  uint64_t v219;
  BOOL v220;
  int v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  BOOL v229;
  uint64_t v230;
  BOOL v231;
  BOOL v232;
  _QWORD *v233;
  unsigned int v234;
  uint64_t *v235;
  char *v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t **v240;
  uint64_t *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  _DWORD *v248;
  int v250;
  uint64_t v251;
  int *v252;
  int v253;
  int v254;
  int v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t *v259;
  uint64_t v260;
  BOOL v261;
  uint64_t v262;
  int v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  _QWORD *v267;
  int v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int *v273;
  int v274;
  uint64_t v275;
  int *v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t *v284;
  uint64_t *v285;
  int v286;
  int v287;
  int v288;
  int v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t *v298;
  uint64_t v299;
  BOOL v300;
  unint64_t v301;
  uint64_t *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t *v312;
  uint64_t v313;
  uint64_t v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  int v319;
  unsigned int v320;
  uint64_t v321;
  uint64_t v322;
  unint64_t v323;
  uint64_t v324;
  int v325;
  unint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  unsigned int v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  uint64_t v337;
  unint64_t v338;
  _QWORD *v339;
  uint64_t v340;
  unint64_t v341;
  uint64_t v342;
  unint64_t v343;
  int i;
  uint64_t v345;
  unsigned int v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  int v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  int v360;
  unsigned __int8 *v361;
  unsigned __int8 *v362;
  int v363;
  uint64_t (***v364)();
  void (**v365)(uint64_t (***)());
  _QWORD *v366;
  llvm::raw_ostream *v367;
  uint64_t v368;
  uint64_t *v369;
  _BYTE *v370;
  _BOOL4 v371;
  _BYTE *v372;
  unint64_t v373;
  uint64_t *v374;
  void *v375;
  const char *v376;
  uint64_t *v377;
  void (**v378)(uint64_t *);
  uint64_t v379;
  uint64_t v380;
  uint64_t *v381;
  uint64_t v382;
  uint64_t *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t *v388;
  int v389;
  uint64_t v390;
  const char *v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  _BYTE *v396;
  int v397;
  uint64_t v398;
  uint64_t v399;
  void *v400;
  uint64_t v401;
  int v402;
  int v403;
  uint64_t v404;
  __int128 v405;
  _QWORD *v406;
  uint64_t v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  _BYTE __src[24];
  __int128 v412;
  __int128 v413;
  __int128 v414;
  int v415;
  char v416;
  unsigned int v417;
  char v418;
  uint64_t v419[3];
  _BYTE *v420;
  _BYTE *v421;
  uint64_t v422;
  _QWORD *v423;
  char *v424;
  unint64_t v425;
  char *v426;
  __int128 v427;
  char *v428;
  uint64_t v429;
  _BYTE v430[96];
  _BYTE v431[160];
  __int128 v432;
  __int128 v433;
  int v434;
  int v435;
  uint64_t v436;
  uint64_t v437;
  _BYTE v438[192];
  int v439;
  int v440;
  uint64_t v441;
  uint64_t v442;
  _BYTE v443[192];
  int v444;
  int v445;
  uint64_t v446;
  uint64_t v447;
  _BYTE v448[192];
  int v449;
  int v450;
  __int128 v451;
  unsigned int v452;
  __int128 v453;
  unsigned int v454;
  __int128 v455;
  unsigned int v456;
  __int128 v457;
  unsigned int v458;
  __int128 v459;
  unsigned int v460;
  __int128 v461;
  unsigned int v462;
  __int128 v463;
  unsigned int v464;
  uint64_t *v465;
  _QWORD *v466[4];
  __int128 v467;
  unsigned int v468;
  char v469;
  char v470;
  __int128 v471;
  uint64_t *v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t *v475;
  uint64_t v476;
  _BYTE v477[32];
  _BYTE *v478;
  uint64_t v479;
  _BYTE v480[32];
  uint64_t *v481;
  uint64_t v482;
  _BYTE v483[32];
  uint64_t *v484;
  uint64_t v485;
  _BYTE v486[32];
  _BYTE *v487;
  uint64_t v488;
  _BYTE v489[16];
  _BYTE *v490;
  uint64_t v491;
  _BYTE v492[16];
  uint64_t *v493;
  uint64_t v494;
  _BYTE v495[16];
  uint64_t *v496;
  uint64_t v497;
  _BYTE v498[16];
  uint64_t *v499;
  uint64_t v500;
  _BYTE v501[16];
  uint64_t *v502;
  uint64_t v503;
  _BYTE v504[16];
  uint64_t *v505;
  uint64_t v506;
  _BYTE v507[16];
  uint64_t *v508;
  uint64_t v509;
  _BYTE v510[16];
  uint64_t *v511;
  uint64_t v512;
  _BYTE v513[16];
  _BYTE *v514;
  uint64_t v515;
  _BYTE v516[16];
  uint64_t *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524[3];
  uint64_t *v525;
  _QWORD v526[3];
  _QWORD *v527;
  _QWORD v528[3];
  _QWORD *v529;
  _QWORD v530[3];
  _QWORD *v531;
  uint64_t v532[3];
  uint64_t *v533;
  uint64_t v534[3];
  uint64_t *v535;
  _QWORD v536[3];
  _QWORD *v537;
  uint64_t (**v538)();
  _QWORD **v539;
  uint64_t (***v540)();
  void **v541;
  __int128 v542;
  _QWORD *v543;
  unsigned int v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  _QWORD *v548;
  uint64_t v549;
  int v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  __int16 v554;
  char v555;
  int v556;
  uint64_t v557;

  v557 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(a2 + 144) < 8uLL || (*(_QWORD *)(a2 + 144) & 6) == 4;
  if (!v2)
    return 1;
  v3 = (char *)a2;
  if (sub_22EA1DB60(a2)
    || sub_22E6A2F54((uint64_t)v3)
    || sub_22E88FFC4((uint64_t)v3)
    || sub_22EFC1D94((uint64_t)v3)
    || sub_22E4752A8((uint64_t)v3)
    || sub_22EA1DBC0((uint64_t)v3))
  {
    v423 = (_QWORD *)a1;
    v424 = v3;
    v11 = *(_QWORD *)(a1 + 72);
    v12 = (char *)(*(_QWORD *)(v11 + 116) & 0x7FFFFFFFLL | 0x80000000);
    v425 = *(_QWORD *)(v11 + 108) | 0x8000000000000000;
    v426 = v12;
    LOBYTE(v427) = 0;
    v3 = (char *)&v427 + 8;
    sub_22E992248((uint64_t)&v427 + 8, a1);
    v452 = 0;
    v451 = 0u;
    v453 = 0u;
    v454 = 0;
    v455 = 0u;
    v456 = 0;
    v457 = 0u;
    v458 = 0;
    v459 = 0u;
    v460 = 0;
    v461 = 0u;
    v462 = 0;
    v464 = 0;
    v463 = 0u;
    memset(v466, 0, sizeof(v466));
    v465 = (uint64_t *)v466;
    v469 = 0;
    v470 = 0;
    LOBYTE(v468) = 0;
    v467 = 0u;
    v471 = 0u;
    v472 = &v474;
    v473 = 0x100000000;
    v475 = (uint64_t *)v477;
    v476 = 0x400000000;
    v478 = v480;
    v479 = 0x400000000;
    v481 = (uint64_t *)v483;
    v482 = 0x400000000;
    v484 = (uint64_t *)v486;
    v485 = 0x400000000;
    v487 = v489;
    v488 = 0x200000000;
    v490 = v492;
    v491 = 0x200000000;
    v493 = (uint64_t *)v495;
    v494 = 0x200000000;
    v496 = (uint64_t *)v498;
    v497 = 0x200000000;
    v499 = (uint64_t *)v501;
    v500 = 0x200000000;
    v502 = (uint64_t *)v504;
    v503 = 0x200000000;
    v505 = (uint64_t *)v507;
    v506 = 0x200000000;
    v508 = (uint64_t *)v510;
    v509 = 0x200000000;
    v511 = (uint64_t *)v513;
    v512 = 0x200000000;
    v514 = v516;
    v515 = 0x200000000;
    v517 = &v519;
    v518 = 0x100000000;
    v520 = &v522;
    v521 = 0x100000000;
    v523 = -1;
    v13 = *(_QWORD *)(*((_QWORD *)v424 + 6) & 0xFFFFFFFFFFFFFFF0);
    if (v13)
      v14 = *(unsigned __int8 *)(v13 + 16) - 27 > 0xFFFFFFFD;
    else
      v14 = 0;
    if (!v14)
      v13 = sub_22F10CF48(v13);
    v15 = (uint64_t *)(*(_QWORD *)(v13 + 24) & 0xFFFFFFFFFFFFFFF0);
    v16 = sub_22F10C2A4(*v15);
    if (!v16 || (*(_DWORD *)(v16 + 28) & 0x7Fu) - 35 >= 3)
    {
      if (sub_22E88FFC4((uint64_t)v424))
      {
        v17 = *v15;
        v18 = sub_22E3E4B64(v17);
        if (v18 && (*(_DWORD *)(v18 + 20) - 2) <= 2 && (*(_DWORD *)(v18 + 16) & 0x780000) != 0x80000)
          v17 = *(_QWORD *)(*(_QWORD *)(v18 + 32) & 0xFFFFFFFFFFFFFFF0);
        v19 = *(_QWORD *)(*(_QWORD *)(v17 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v19)
          v20 = *(_DWORD *)(v19 + 16) == 11;
        else
          v20 = 0;
        if (v20
          && ((*(_DWORD *)(v19 + 16) >> 19) & 0x1FFu) - 173 <= 0x26
          && ((1 << ((*(_DWORD *)(v19 + 16) >> 19) + 83)) & 0x6000000303) != 0)
        {
          *(_QWORD *)__src = 0;
          *(_QWORD *)&__src[8] = v424;
          sub_22F31216C((uint64_t)&v541, (uint64_t)&v455, (int *)__src, &__src[8]);
          LODWORD(v541) = 0;
          v22 = sub_22E9AF238(&v465, 0, &v541);
          v23 = (uint64_t)v424;
          v24 = *((_DWORD *)v22 + 12);
          if (v24 >= *((_DWORD *)v22 + 13))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v24 = *((_DWORD *)v22 + 12);
          }
          v22[5][v24] = v23;
          ++*((_DWORD *)v22 + 12);
        }
      }
      goto LABEL_48;
    }
    v58 = sub_22EFC3B90(v16);
    if (!v58)
      goto LABEL_48;
    v59 = v58;
    v60 = *(_DWORD *)(v58 + 28);
LABEL_120:
    if ((v60 & 0x100) != 0)
    {
      sub_22EFC8E88(v59);
      v62 = *v61;
      if ((*(_BYTE *)(v59 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v59);
        v64 = *(_QWORD *)v63 + 8 * *(unsigned int *)(v63 + 8);
      }
      else
      {
        v64 = 0;
      }
      while (v62 != (uint64_t *)v64)
      {
        v65 = *v62;
        if ((*(unsigned __int16 *)(*v62 + 32) | 0x40) == 0x1C4 && sub_22F26E8A8((uint64_t)v424))
        {
          v66 = v423;
          v67 = sub_22EFBAFDC((uint64_t)v424);
          sub_22E8FCA40(v66, v67, 0xF2Du, 0, (uint64_t)&v541);
          sub_22EF97918(v65);
          *(_QWORD *)__src = v68;
          sub_22E8AECC4((uint64_t)&v541, (uint64_t *)__src);
          sub_22E903BEC((unsigned int *)&v541);
          sub_22E8FCA40(v423, *(_DWORD *)(v65 + 16), 0x1673u, 0, (uint64_t)&v541);
          sub_22EF97918(v65);
          *(_QWORD *)__src = v69;
          sub_22E8AECC4((uint64_t)&v541, (uint64_t *)__src);
          sub_22E903BEC((unsigned int *)&v541);
          LOBYTE(v427) = 1;
        }
        ++v62;
      }
    }
    if (sub_22E54AA28(v59) || (*(_BYTE *)(v59 + 29) & 1) == 0)
    {
LABEL_123:
      while (1)
      {
        v59 = *(_QWORD *)(v59 + 8) & 0xFFFFFFFFFFFFFFF8;
        if (!v59)
          break;
        v60 = *(_DWORD *)(v59 + 28);
        if ((v60 & 0x7Fu) - 49 < 3)
          goto LABEL_120;
      }
LABEL_48:
      *((_QWORD *)&v467 + 1) = 0;
      if (v469)
        v469 = 0;
      v470 = 0;
      if (*((_QWORD *)&v461 + 1))
      {
        if (v462 <= 4 * DWORD2(v461) || v462 < 0x41)
        {
          if (v462)
          {
            v25 = (_DWORD *)v461;
            v26 = 8 * v462;
            do
            {
              *v25 = -1;
              v25 += 2;
              v26 -= 8;
            }
            while (v26);
          }
          *((_QWORD *)&v461 + 1) = 0;
        }
        else
        {
          sub_22E9AF078((uint64_t)&v461);
        }
      }
      v27 = (uint64_t *)*((_QWORD *)v424 + 15);
      v28 = *(_QWORD *)(*((_QWORD *)v424 + 6) & 0xFFFFFFFFFFFFFFF0);
      if (v28)
        v29 = *(_BYTE *)(v28 + 16) == 26;
      else
        v29 = 0;
      if (v29
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
        && (v28 = sub_22F10CF48(v28)) != 0)
      {
        v30 = *(_QWORD *)(v28 + 16);
        if ((v30 & 0x3FFFC000000000) != 0)
        {
          v31 = 8 * (unsigned __int16)(v30 >> 38);
          do
          {
            v32 = *v27++;
            sub_22E9AC93C(&v423, v32);
            v31 -= 8;
          }
          while (v31);
        }
      }
      if (sub_22EA1DB60((uint64_t)v424) || sub_22E4752A8((uint64_t)v424) || sub_22EA1DBC0((uint64_t)v424))
      {
        v524[0] = (uint64_t)&off_24FAB7270;
        v525 = v524;
        sub_22E9AEA44((uint64_t)&v423, v493, v494, (uint64_t)v524, 0);
        v33 = v525;
        if (v525 == v524)
        {
          v34 = (void (**)(uint64_t *))(v524[0] + 32);
          v33 = v524;
        }
        else
        {
          if (!v525)
            goto LABEL_74;
          v34 = (void (**)(uint64_t *))(*v525 + 40);
        }
        (*v34)(v33);
LABEL_74:
        v538 = &off_24FAB72B8;
        v539 = &v423;
        v540 = &v538;
        sub_22E9AEA44((uint64_t)&v423, v496, v497, (uint64_t)&v538, 1u);
        v35 = v540;
        if (v540 == &v538)
        {
          v36 = (void (**)(uint64_t (***)()))(v538 + 4);
          v35 = &v538;
        }
        else
        {
          if (!v540)
            goto LABEL_79;
          v36 = (void (**)(uint64_t (***)()))(*v540 + 5);
        }
        (*v36)(v35);
LABEL_79:
        v536[0] = &off_24FAB72B8;
        v536[1] = &v423;
        v537 = v536;
        sub_22E9AEA44((uint64_t)&v423, v499, v500, (uint64_t)v536, 1u);
        v37 = v537;
        if (v537 == v536)
        {
          v38 = (void (**)(_QWORD *))(v536[0] + 32);
          v37 = v536;
        }
        else
        {
          if (!v537)
            goto LABEL_84;
          v38 = (void (**)(_QWORD *))(*v537 + 40);
        }
        (*v38)(v37);
LABEL_84:
        v534[0] = (uint64_t)&off_24FAB72B8;
        v534[1] = (uint64_t)&v423;
        v535 = v534;
        sub_22E9AEA44((uint64_t)&v423, v505, v506, (uint64_t)v534, 1u);
        v39 = v535;
        if (v535 == v534)
        {
          v40 = (void (**)(uint64_t *))(v534[0] + 32);
          v39 = v534;
        }
        else
        {
          if (!v535)
            goto LABEL_89;
          v40 = (void (**)(uint64_t *))(*v535 + 40);
        }
        (*v40)(v39);
LABEL_89:
        v532[0] = (uint64_t)&off_24FAB72B8;
        v532[1] = (uint64_t)&v423;
        v533 = v532;
        sub_22E9AEA44((uint64_t)&v423, v502, v503, (uint64_t)v532, 1u);
        v41 = v533;
        if (v533 == v532)
        {
          v42 = (void (**)(uint64_t *))(v532[0] + 32);
          v41 = v532;
        }
        else
        {
          if (!v533)
            goto LABEL_94;
          v42 = (void (**)(uint64_t *))(*v533 + 40);
        }
        (*v42)(v41);
LABEL_94:
        v530[0] = &off_24FAB7300;
        v531 = v530;
        v528[0] = &off_24FAB7348;
        v529 = v528;
        sub_22E9AEBC4((uint64_t)&v423, v508, v509, 461, 457, (uint64_t)v530, (uint64_t)v528);
        v43 = v529;
        if (v529 == v528)
        {
          v44 = (void (**)(_QWORD *))(v528[0] + 32);
          v43 = v528;
        }
        else
        {
          if (!v529)
            goto LABEL_99;
          v44 = (void (**)(_QWORD *))(*v529 + 40);
        }
        (*v44)(v43);
LABEL_99:
        v45 = v531;
        if (v531 == v530)
        {
          v46 = (void (**)(_QWORD *))(v530[0] + 32);
          v45 = v530;
        }
        else
        {
          if (!v531)
            goto LABEL_104;
          v46 = (void (**)(_QWORD *))(*v531 + 40);
        }
        (*v46)(v45);
LABEL_104:
        v526[0] = &off_24FAB72B8;
        v526[1] = &v423;
        v527 = v526;
        sub_22E9AEA44((uint64_t)&v423, v511, v512, (uint64_t)v526, 1u);
        v47 = v527;
        if (v527 == v526)
        {
          v48 = (void (**)(_QWORD *))(v526[0] + 32);
          v47 = v526;
        }
        else
        {
          if (!v527)
          {
LABEL_109:
            if ((*(_BYTE *)(v423[9] + 130) & 0x80) != 0 && (_DWORD)v523 != -1 && HIDWORD(v523) != -1)
            {
              sub_22E8FCA40(v423, *((_DWORD *)v424 + 6), 0xEFDu, 0, (uint64_t)&v541);
              LODWORD(v419[0]) = sub_22F3AC79C((uint64_t)v424);
              v49 = sub_22E89519C((uint64_t)&v541, (unsigned int *)v419);
              v51 = v520[v523];
              if ((*(_BYTE *)(v51 + 29) & 1) == 0)
                goto LABEL_208;
              v50.n128_f64[0] = sub_22EFC8E88(v51);
              v53 = *(uint64_t **)v52;
              v54 = *(unsigned int *)(v52 + 8);
              v55 = *(uint64_t **)v52;
              if ((_DWORD)v54)
              {
                v104 = 8 * v54;
                v55 = *(uint64_t **)v52;
                while (*(_WORD *)(*v55 + 32) != 454)
                {
                  ++v55;
                  v104 -= 8;
                  if (!v104)
                    goto LABEL_208;
                }
              }
              if (v55 == &v53[v54])
              {
LABEL_208:
                v56 = 0;
              }
              else
              {
                do
                {
                  v57 = *v53++;
                  v56 = v57;
                }
                while (*(_WORD *)(v57 + 32) != 454);
              }
              if (*(_BYTE *)(v49 + 80))
              {
                v112 = *(unsigned __int8 **)(v49 + 32);
                if (!v112)
                {
                  v112 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v49 + 40));
                  *(_QWORD *)(v49 + 32) = v112;
                }
                v112[*v112 + 1] = 15;
                v111 = *(_BYTE **)(v49 + 32);
              }
              else
              {
                if (!*(_BYTE *)(v49 + 92))
                {
LABEL_220:
                  v114 = v520[HIDWORD(v523)];
                  if ((*(_BYTE *)(v114 + 29) & 1) == 0)
                    goto LABEL_228;
                  v50.n128_f64[0] = sub_22EFC8E88(v114);
                  v116 = *(uint64_t **)v115;
                  v117 = *(unsigned int *)(v115 + 8);
                  v118 = *(uint64_t **)v115;
                  if ((_DWORD)v117)
                  {
                    v121 = 8 * v117;
                    v118 = *(uint64_t **)v115;
                    while (*(_WORD *)(*v118 + 32) != 464)
                    {
                      ++v118;
                      v121 -= 8;
                      if (!v121)
                        goto LABEL_228;
                    }
                  }
                  if (v118 == &v116[v117])
                  {
LABEL_228:
                    v119 = 0;
                  }
                  else
                  {
                    do
                    {
                      v120 = *v116++;
                      v119 = v120;
                    }
                    while (*(_WORD *)(v120 + 32) != 464);
                  }
                  if (*(_BYTE *)(v49 + 80))
                  {
                    v129 = *(unsigned __int8 **)(v49 + 32);
                    if (!v129)
                    {
                      v129 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(v49 + 40));
                      *(_QWORD *)(v49 + 32) = v129;
                    }
                    v129[*v129 + 1] = 15;
                    v128 = *(_BYTE **)(v49 + 32);
                  }
                  else
                  {
                    if (!*(_BYTE *)(v49 + 92))
                      goto LABEL_240;
                    v122 = (uint64_t *)(*(_QWORD *)v49 + 12784);
                    v123 = *(_QWORD *)(v49 + 16);
                    if (v123)
                      v123 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v123 + 32))(v123, v50);
                    *(_QWORD *)__src = v123;
                    v124 = sub_22F2F1D6C(v122, (uint64_t *)__src)[1] + 32 * *(unsigned int *)(v49 + 88);
                    v127 = *(unsigned __int8 **)(v124 + 8);
                    v126 = (_QWORD *)(v124 + 8);
                    v125 = v127;
                    if (!v127)
                    {
                      v125 = (unsigned __int8 *)sub_22E3B8AAC(v126[1]);
                      *v126 = v125;
                    }
                    v125[*v125 + 1] = 15;
                    v128 = (_BYTE *)*v126;
                  }
                  v130 = *v128;
                  *v128 = v130 + 1;
                  *(_QWORD *)&v128[8 * v130 + 16] = v119;
LABEL_240:
                  sub_22E903BEC((unsigned int *)&v541);
                  if ((_DWORD)v521)
                  {
                    v131 = v520;
                    v132 = 8 * v521;
                    do
                    {
                      v133 = *v131++;
                      sub_22E8FCA40(v423, *(_DWORD *)(v133 + 24), 0x166Au, 0, (uint64_t)&v541);
                      *(_QWORD *)__src = sub_22E9AEF2C(v133);
                      sub_22E9AEE38((uint64_t)&v541, (uint64_t *)__src);
                      sub_22E903BEC((unsigned int *)&v541);
                      v132 -= 8;
                    }
                    while (v132);
                  }
LABEL_243:
                  LOBYTE(v427) = 1;
                  goto LABEL_244;
                }
                v105 = (uint64_t *)(*(_QWORD *)v49 + 12784);
                v106 = *(_QWORD *)(v49 + 16);
                if (v106)
                  v106 = (*(uint64_t (**)(uint64_t, __n128))(*(_QWORD *)v106 + 32))(v106, v50);
                *(_QWORD *)__src = v106;
                v107 = sub_22F2F1D6C(v105, (uint64_t *)__src)[1] + 32 * *(unsigned int *)(v49 + 88);
                v110 = *(unsigned __int8 **)(v107 + 8);
                v109 = (_QWORD *)(v107 + 8);
                v108 = v110;
                if (!v110)
                {
                  v108 = (unsigned __int8 *)sub_22E3B8AAC(v109[1]);
                  *v109 = v108;
                }
                v108[*v108 + 1] = 15;
                v111 = (_BYTE *)*v109;
              }
              v113 = *v111;
              *v111 = v113 + 1;
              *(_QWORD *)&v111[8 * v113 + 16] = v56;
              goto LABEL_220;
            }
LABEL_244:
            v541 = (void **)&v543;
            v542 = xmmword_22F44E320;
            v134 = sub_22EA1DB60((uint64_t)v424);
            v135 = 193;
            if (v134)
              v135 = 191;
            v136 = (&v423)[v135];
            if (!v136 || (*((_BYTE *)v136 + 29) & 1) == 0)
              goto LABEL_397;
            sub_22EFC8E88((uint64_t)v136);
            v138 = *(uint64_t **)v137;
            v139 = *(unsigned int *)(v137 + 8);
            v140 = *(uint64_t **)v137;
            if ((_DWORD)v139)
            {
              v146 = 8 * v139;
              v140 = *(uint64_t **)v137;
              while (*(_WORD *)(*v140 + 32) != 403)
              {
                ++v140;
                v146 -= 8;
                if (!v146)
                  goto LABEL_397;
              }
            }
            if (v140 == &v138[v139])
              goto LABEL_397;
            v141 = &v421;
            do
            {
              v143 = *v138++;
              v142 = v143;
            }
            while (*(_WORD *)(v143 + 32) != 403);
            sub_22F242C48((uint64_t)v419, (uint64_t)&v541);
            if (!v469)
              goto LABEL_396;
            v144 = *(unsigned __int8 *)(v142 + 30);
            if ((~(v144 << 16) & 0x780000) != 0)
              v145 = ((*(unsigned __int16 *)(v142 + 28) | (v144 << 16)) >> 19) & 0xF;
            else
              v145 = sub_22F1BFAD0(v142);
            if (v145)
              v198 = 1;
            else
              v198 = v470 == 0;
            if (v198)
            {
              v199 = v468;
              if (v468 || !v470)
              {
                v315 = *(_DWORD *)(v423[8] + 12) - 1;
                if (v468 > v315)
                  goto LABEL_396;
                v316 = v458 - 1;
                while (1)
                {
                  if (v458)
                  {
                    v317 = (37 * v199) & v316;
                    v318 = *(_DWORD *)(v457 + 16 * v317);
                    if (v199 == v318)
                    {
LABEL_651:
                      v366 = v421;
                      if ((unint64_t)(v420 - v421) > 9)
                      {
                        *((_WORD *)v421 + 4) = 8312;
                        *v366 = *(_QWORD *)"has index ";
                        v421 += 10;
                      }
                      else
                      {
                        llvm::raw_ostream::write((llvm::raw_ostream *)v419, "has index ");
                      }
                      v367 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
                      v368 = *((_QWORD *)v367 + 4);
                      if ((unint64_t)(*((_QWORD *)v367 + 3) - v368) > 4)
                      {
                        *(_BYTE *)(v368 + 4) = 32;
                        *(_DWORD *)v368 = 1953849888;
                        *((_QWORD *)v367 + 4) += 5;
                      }
                      else
                      {
                        llvm::raw_ostream::write(v367, " but ");
                      }
                      if (v420 == v421)
                      {
                        v369 = (uint64_t *)llvm::raw_ostream::write((llvm::raw_ostream *)v419, "'");
                      }
                      else
                      {
                        *v421++ = 39;
                        v369 = v419;
                      }
                      (*(void (**)(char *, uint64_t *))(*(_QWORD *)v424 + 88))(v424, v369);
                      v370 = (_BYTE *)v369[4];
                      if ((_BYTE *)v369[3] == v370)
                      {
                        llvm::raw_ostream::write((llvm::raw_ostream *)v369, "'");
                      }
                      else
                      {
                        *v370 = 39;
                        ++v369[4];
                      }
                      v371 = sub_22EA1DB60((uint64_t)v424);
                      v372 = v421;
                      v373 = v420 - v421;
                      if (v371)
                      {
                        if (v373 > 0x32)
                        {
                          *(_DWORD *)(v421 + 47) = 1752459639;
                          qmemcpy(v372, " has imageblock with implicit layout parameter w", 48);
                          v375 = v421 + 51;
                          v421 += 51;
                          v374 = v419;
                        }
                        else
                        {
                          v374 = (uint64_t *)llvm::raw_ostream::write((llvm::raw_ostream *)v419, " has imageblock with implicit layout parameter with");
                          v141 = v374 + 4;
                          v375 = (void *)v374[4];
                        }
                        if ((unint64_t)(v374[3] - (_QWORD)v375) <= 0x17)
                        {
                          v376 = " color attachment index ";
                          goto LABEL_666;
                        }
                        qmemcpy(v375, " color attachment index ", 24);
                        *v141 += 24;
                      }
                      else if (v373 > 0x2A)
                      {
                        *(_OWORD *)v421 = *(_OWORD *)" has color attachment parameter with index ";
                        qmemcpy(v372 + 16, "hment parameter with index ", 27);
                        v421 += 43;
                      }
                      else
                      {
                        v376 = " has color attachment parameter with index ";
                        v374 = v419;
LABEL_666:
                        llvm::raw_ostream::write((llvm::raw_ostream *)v374, v376);
                      }
                      llvm::raw_ostream::operator<<();
LABEL_384:
                      sub_22E8FCA40(v423, *(_DWORD *)(v142 + 16), 0xF30u, 0, (uint64_t)__src);
                      if (v416)
                      {
                        v217 = (unsigned __int8 *)*((_QWORD *)&v412 + 1);
                        if (!*((_QWORD *)&v412 + 1))
                        {
                          v217 = (unsigned __int8 *)sub_22E3B8AAC(v413);
                          *((_QWORD *)&v412 + 1) = v217;
                        }
                        v217[*v217 + 1] = 15;
                        v216 = (_BYTE *)*((_QWORD *)&v412 + 1);
LABEL_394:
                        v218 = *v216;
                        *v216 = v218 + 1;
                        *(_QWORD *)&v216[8 * v218 + 16] = v142;
                      }
                      else if (v418)
                      {
                        v209 = *(_QWORD *)&__src[16];
                        v210 = (uint64_t *)(*(_QWORD *)__src + 12784);
                        if (*(_QWORD *)&__src[16])
                          v209 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)&__src[16] + 32))(*(_QWORD *)&__src[16]);
                        v422 = v209;
                        v211 = sub_22F2F1D6C(v210, &v422);
                        v212 = v211[1] + 32 * v417;
                        v215 = *(unsigned __int8 **)(v212 + 8);
                        v214 = (_QWORD *)(v212 + 8);
                        v213 = v215;
                        if (!v215)
                        {
                          v213 = (unsigned __int8 *)sub_22E3B8AAC(v214[1]);
                          *v214 = v213;
                        }
                        v213[*v213 + 1] = 15;
                        v216 = (_BYTE *)*v214;
                        goto LABEL_394;
                      }
                      sub_22F2F2210((uint64_t)__src, (uint64_t)&v541);
                      sub_22E903BEC((unsigned int *)__src);
                      LOBYTE(v427) = 1;
LABEL_396:
                      llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)v419);
LABEL_397:
                      if (v541 != (void **)&v543)
                        free(v541);
                      v219 = *(_QWORD *)(*((_QWORD *)v424 + 6) & 0xFFFFFFFFFFFFFFF0);
                      if (v219)
                        v220 = *(unsigned __int8 *)(v219 + 16) - 27 > 0xFFFFFFFD;
                      else
                        v220 = 0;
                      if (!v220)
                        v219 = sub_22F10CF48(v219);
                      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v219 + 24) & 0xFFFFFFFFFFFFFFF0)
                                                            + 8) & 0xFFFFFFFFFFFFFFF0)
                                    + 16) == 45)
                        v221 = 0;
                      else
                        v221 = (*(unsigned __int8 *)(v423[9] + 120) >> 4) & 1;
                      v222 = v465;
                      if (v465 == (uint64_t *)v466)
                      {
LABEL_408:
                        v223 = (uint64_t)v424;
                        LODWORD(v419[0]) = *(_QWORD *)(v423[8] + 16);
                        if (v476 > (unint64_t)LODWORD(v419[0]))
                        {
                          sub_22E8FCA40(v423, *((_DWORD *)v424 + 6), 0xF23u, 0, (uint64_t)&v541);
                          sub_22E89519C((uint64_t)&v541, (unsigned int *)v419);
                          sub_22E903BEC((unsigned int *)&v541);
                          if ((_DWORD)v476)
                          {
                            v224 = v475;
                            v225 = 8 * v476;
                            do
                            {
                              v226 = *v224++;
                              *(_QWORD *)__src = v226;
                              sub_22E8FCA40(v423, *(_DWORD *)(v226 + 24), 0x15A7u, 0, (uint64_t)&v541);
                              v227 = sub_22F2F30F4((uint64_t)&v541, (uint64_t)"constant buffer");
                              sub_22E9AEF84(v227, (uint64_t *)__src);
                              sub_22E903BEC((unsigned int *)&v541);
                              v225 -= 8;
                            }
                            while (v225);
                          }
                          LOBYTE(v427) = 1;
                          v223 = (uint64_t)v424;
                        }
                        if (!sub_22E6A2F54(v223))
                          goto LABEL_427;
                        v228 = *(_QWORD *)(*((_QWORD *)v424 + 6) & 0xFFFFFFFFFFFFFFF0);
                        if (v228)
                          v229 = *(unsigned __int8 *)(v228 + 16) - 27 > 0xFFFFFFFD;
                        else
                          v229 = 0;
                        if (!v229)
                          v228 = sub_22F10CF48(v228);
                        v230 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v228 + 24) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
                        v231 = (*(_DWORD *)(v230 + 16) & 0xFF800FF) != 0x528000B || v230 == 0;
                        v232 = !v231 || (_DWORD)v479 == 0;
                        if (v232
                          || (sub_22E8FCA40(v423, *((_DWORD *)v424 + 6), 0x1A4Cu, 0, (uint64_t)&v541),
                              *(_DWORD *)__src = sub_22F3AC79C((uint64_t)v424),
                              sub_22E89519C((uint64_t)&v541, (unsigned int *)__src),
                              sub_22E903BEC((unsigned int *)&v541),
                              !(_DWORD)v479))
                        {
LABEL_427:
                          v233 = v423;
                          LODWORD(v422) = *(_DWORD *)(v423[8] + 36);
                          if ((_DWORD)v482)
                          {
                            v234 = 0;
                            v235 = v481;
                            v236 = (char *)&v481[v482];
                            do
                            {
                              v237 = *v235;
                              v238 = (uint64_t *)(*(_QWORD *)(*v235 + 48) & 0xFFFFFFFFFFFFFFF0);
                              if (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*v238 + 8) & 0xFFFFFFFFFFFFFFF0)))
                              {
                                ++v234;
                              }
                              else
                              {
                                v239 = sub_22E5453EC(*v238);
                                if (v239)
                                {
                                  v234 += sub_22F409218(v239);
                                }
                                else
                                {
                                  sub_22EFC8E88(v237);
                                  v241 = *v240;
                                  v242 = *((unsigned int *)v240 + 2);
                                  if ((_DWORD)v242 && *(_WORD *)(*v241 + 32) != 373)
                                  {
                                    v243 = 8 * v242 - 8;
                                    v244 = *v240;
                                    do
                                    {
                                      v245 = v244[1];
                                      ++v244;
                                      v243 -= 8;
                                    }
                                    while (*(_WORD *)(v245 + 32) != 373);
                                  }
                                  do
                                  {
                                    v247 = *v241++;
                                    v246 = v247;
                                  }
                                  while (*(_WORD *)(v247 + 32) != 373);
                                  sub_22F00905C(*(_QWORD *)(v246 + 40), v423[11], 0, (uint64_t)&v541);
                                  if (BYTE8(v542))
                                  {
                                    v248 = v542 >= 0x41 ? v541 : &v541;
                                    v234 += *v248;
                                    if (v542 >= 0x41 && v541 != 0)
                                      MEMORY[0x2348A0E84]();
                                  }
                                }
                              }
                              ++v235;
                            }
                            while (v235 != (uint64_t *)v236);
                            v233 = v423;
                            if (v234 > v422)
                            {
                              sub_22E8FCA40(v423, *((_DWORD *)v424 + 6), 0xF26u, 0, (uint64_t)&v541);
                              sub_22E89519C((uint64_t)&v541, (unsigned int *)&v422);
                              sub_22E903BEC((unsigned int *)&v541);
                              if ((_DWORD)v482)
                              {
                                v290 = v481;
                                v291 = 8 * v482;
                                do
                                {
                                  v292 = *v290++;
                                  *(_QWORD *)__src = v292;
                                  sub_22E8FCA40(v423, *(_DWORD *)(v292 + 24), 0x15A7u, 0, (uint64_t)&v541);
                                  v293 = sub_22F2F30F4((uint64_t)&v541, (uint64_t)"read_write texture");
                                  sub_22E9AEF84(v293, (uint64_t *)__src);
                                  sub_22E903BEC((unsigned int *)&v541);
                                  v291 -= 8;
                                }
                                while (v291);
                              }
                              LOBYTE(v427) = 1;
                              v233 = v423;
                            }
                          }
                          v410 = *(_QWORD *)(v233[8] + 32);
                          if (v485 <= (unint64_t)v410)
                          {
                            if ((_BYTE)v427)
                            {
                              v10 = 0;
                            }
                            else
                            {
                              v298 = (uint64_t *)*((_QWORD *)v424 + 15);
                              v299 = *(_QWORD *)(*((_QWORD *)v424 + 6) & 0xFFFFFFFFFFFFFFF0);
                              if (v299)
                                v300 = *(_BYTE *)(v299 + 16) == 26;
                              else
                                v300 = 0;
                              if (v300
                                || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v299 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
                                && (v299 = sub_22F10CF48(v299)) != 0)
                              {
                                v301 = *(_QWORD *)(v299 + 16);
                                if ((v301 & 0x3FFFC000000000) != 0)
                                {
                                  v307 = 8 * (unsigned __int16)(v301 >> 38);
                                  do
                                  {
                                    v308 = *v298;
                                    v309 = sub_22E54B75C(*(_QWORD *)(*((_QWORD *)&v427 + 1) + 88) + 15144, *v298);
                                    v310 = *(_QWORD *)(v309 + 8);
                                    v311 = *(_QWORD *)(v309 + 16);
                                    switch((int)v310)
                                    {
                                      case 1:
                                      case 2:
                                      case 3:
                                      case 16:
                                      case 17:
                                      case 18:
                                      case 19:
                                      case 20:
                                      case 21:
                                      case 22:
                                      case 23:
                                      case 24:
                                      case 25:
                                      case 26:
                                      case 27:
                                        if (!sub_22E9AA08C((_QWORD **)&v427 + 1, v308, v310, v311))
                                          goto LABEL_575;
                                        break;
                                      case 4:
                                      case 5:
                                      case 6:
                                        if ((sub_22E9AA2F0((_QWORD **)&v427 + 1, v308, v310, v311) & 1) == 0)
                                          goto LABEL_575;
                                        break;
                                      case 7:
                                      case 8:
                                      case 9:
                                        if (!sub_22E9AA8C0((_QWORD **)&v427 + 1, v308, v310, v311))
                                          goto LABEL_575;
                                        break;
                                      case 10:
                                      case 11:
                                      case 12:
                                        if (!sub_22E9AAA60((_QWORD **)&v427 + 1, v308, v310, v311))
                                          goto LABEL_575;
                                        break;
                                      case 13:
                                      case 14:
                                      case 15:
                                        if (!sub_22E9AACC4((_QWORD **)&v427 + 1, v308, v310, v311))
                                          goto LABEL_575;
                                        break;
                                      case 31:
                                        if ((sub_22E9AFE44((_QWORD **)&v427 + 1, v308, v310, v311) & 1) == 0)
LABEL_575:
                                          LOBYTE(v427) = 1;
                                        break;
                                      default:
                                        break;
                                    }
                                    ++v298;
                                    v307 -= 8;
                                  }
                                  while (v307);
                                }
                              }
                              v10 = (_BYTE)v427 == 0;
                            }
                          }
                          else
                          {
                            sub_22E8FCA40(v233, *((_DWORD *)v424 + 6), 0xF25u, 0, (uint64_t)&v541);
                            sub_22E89519C((uint64_t)&v541, &v410);
                            sub_22E903BEC((unsigned int *)&v541);
                            if ((_DWORD)v485)
                            {
                              v294 = v484;
                              v295 = 8 * v485;
                              do
                              {
                                v296 = *v294++;
                                *(_QWORD *)__src = v296;
                                sub_22E8FCA40(v423, *(_DWORD *)(v296 + 24), 0x15A7u, 0, (uint64_t)&v541);
                                v297 = sub_22F2F30F4((uint64_t)&v541, (uint64_t)"patch-data attribute");
                                sub_22E9AEF84(v297, (uint64_t *)__src);
                                sub_22E903BEC((unsigned int *)&v541);
                                v295 -= 8;
                              }
                              while (v295);
                            }
                            v10 = 0;
                            LOBYTE(v427) = 1;
                          }
                          if (v520 != &v522)
                            free(v520);
                          if (v517 != &v519)
                            free(v517);
                          if (v514 != v516)
                            free(v514);
                          if (v511 != (uint64_t *)v513)
                            free(v511);
                          if (v508 != (uint64_t *)v510)
                            free(v508);
                          if (v505 != (uint64_t *)v507)
                            free(v505);
                          if (v502 != (uint64_t *)v504)
                            free(v502);
                          if (v499 != (uint64_t *)v501)
                            free(v499);
                          if (v496 != (uint64_t *)v498)
                            free(v496);
                          if (v493 != (uint64_t *)v495)
                            free(v493);
                          if (v490 != v492)
                            free(v490);
                          if (v487 != v489)
                            free(v487);
                          if (v484 != (uint64_t *)v486)
                            free(v484);
                          if (v481 != (uint64_t *)v483)
                            free(v481);
                          if (v478 != v480)
                            free(v478);
                          if (v475 != (uint64_t *)v477)
                            free(v475);
                          if (v472 != &v474)
                            free(v472);
                          sub_22F31259C(v466[0]);
                          llvm::deallocate_buffer((llvm *)v463, (void *)(8 * v464));
                          llvm::deallocate_buffer((llvm *)v461, (void *)(8 * v462));
                          llvm::deallocate_buffer((llvm *)v459, (void *)(16 * v460));
                          llvm::deallocate_buffer((llvm *)v457, (void *)(16 * v458));
                          llvm::deallocate_buffer((llvm *)v455, (void *)(16 * v456));
                          llvm::deallocate_buffer((llvm *)v453, (void *)(16 * v454));
                          llvm::deallocate_buffer((llvm *)v451, (void *)(16 * v452));
                          if (v449)
                          {
                            sub_22F311EF0((uint64_t)v448, (void (*)(_QWORD *, _QWORD, uint64_t))sub_22F312154, 0);
                            v449 = 0;
                            memset(v448, 0, sizeof(v448));
                          }
                          v450 = 0;
                          v446 = 0;
                          sub_22E3B4EF4((uint64_t)&v447);
                          if (v444)
                          {
                            sub_22F311EF0((uint64_t)v443, (void (*)(_QWORD *, _QWORD, uint64_t))sub_22F312154, 0);
                            v444 = 0;
                            memset(v443, 0, sizeof(v443));
                          }
                          v445 = 0;
                          v441 = 0;
                          sub_22E3B4EF4((uint64_t)&v442);
                          if (v439)
                          {
                            sub_22F311EF0((uint64_t)v438, (void (*)(_QWORD *, _QWORD, uint64_t))sub_22F312154, 0);
                            v439 = 0;
                            memset(v438, 0, sizeof(v438));
                          }
                          v440 = 0;
                          v436 = 0;
                          sub_22E3B4EF4((uint64_t)&v437);
                          if (v434)
                          {
                            sub_22F311EF0((uint64_t)v431, (void (*)(_QWORD *, _QWORD, uint64_t))sub_22F312154, 0);
                            v434 = 0;
                            v432 = 0u;
                            v433 = 0u;
                            memset(v431, 0, sizeof(v431));
                          }
                          v435 = 0;
                          v429 = 0;
                          sub_22E3B4EF4((uint64_t)v430);
                          return v10;
                        }
                        v303 = (uint64_t *)v478;
                        v304 = 8 * v479;
                        while (2)
                        {
                          v305 = *v303;
                          *(_QWORD *)__src = v305;
                          if (sub_22E475308(*(_QWORD *)(*(_QWORD *)(v305 + 48) & 0xFFFFFFFFFFFFFFF0)))
                          {
                            sub_22E8FCA40(v423, *(_DWORD *)(v305 + 24), 0x15A7u, 0, (uint64_t)&v541);
                            v306 = sub_22F2F30F4((uint64_t)&v541, (uint64_t)"writable buffer");
                          }
                          else
                          {
                            if (!sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v305 + 48) & 0xFFFFFFFFFFFFFFF0)
                                                                                    + 8) & 0xFFFFFFFFFFFFFFF0)))
                              goto LABEL_567;
                            sub_22E8FCA40(v423, *(_DWORD *)(v305 + 24), 0x15A7u, 0, (uint64_t)&v541);
                            v306 = sub_22F2F30F4((uint64_t)&v541, (uint64_t)"writable texture");
                          }
                          sub_22E9AEF84(v306, (uint64_t *)__src);
                          sub_22E903BEC((unsigned int *)&v541);
LABEL_567:
                          ++v303;
                          v304 -= 8;
                          if (!v304)
                            goto LABEL_427;
                          continue;
                        }
                      }
                      while (2)
                      {
                        v250 = *((_DWORD *)v222 + 8);
                        LODWORD(v422) = v250;
                        if (v458)
                        {
                          LODWORD(v251) = (v458 - 1) & (37 * v250);
                          v252 = (int *)(v457 + 16 * v251);
                          v253 = *v252;
                          if (*v252 != v250)
                          {
                            v254 = 1;
                            do
                            {
                              if (v253 == -1)
                                goto LABEL_455;
                              v255 = v251 + v254++;
                              v251 = v255 & (v458 - 1);
                              v253 = *(_DWORD *)(v457 + 16 * v251);
                            }
                            while (v253 != v250);
                            v252 = (int *)(v457 + 16 * v251);
                          }
                        }
                        else
                        {
LABEL_455:
                          v252 = (int *)(v457 + 16 * v458);
                        }
                        if ((int *)(v457 + 16 * v458) != v252)
                        {
                          v256 = *((_QWORD *)v252 + 1);
                          v257 = *(_QWORD *)(v256 + 48);
                          *(_QWORD *)__src = v257;
                          v258 = *(_QWORD *)v222[5];
                          v259 = (uint64_t *)(v258 + 48);
                          if ((char *)v258 == v424)
                          {
                            v260 = *(_QWORD *)(*v259 & 0xFFFFFFFFFFFFFFF0);
                            if (v260)
                              v261 = *(unsigned __int8 *)(v260 + 16) - 27 > 0xFFFFFFFD;
                            else
                              v261 = 0;
                            if (!v261)
                            {
                              v260 = sub_22F10CF48(v260);
                              v257 = *(_QWORD *)__src;
                              v250 = v422;
                            }
                            v259 = (uint64_t *)(v260 + 24);
                          }
                          v262 = *v259;
                          v419[0] = v262;
                          if (v250)
                            v263 = 0;
                          else
                            v263 = v221;
                          v264 = *(_QWORD *)(*(_QWORD *)(v257 & 0xFFFFFFFFFFFFFFF0) + 8);
                          v265 = *(_QWORD *)(*(_QWORD *)(v262 & 0xFFFFFFFFFFFFFFF0) + 8);
                          if (v263 != 1 || v264 == v265)
                          {
                            if (v264 == v265)
                              goto LABEL_473;
                          }
                          else
                          {
                            v266 = sub_22F1105F0(*(_QWORD *)(v264 & 0xFFFFFFFFFFFFFFF0));
                            if (v266 == sub_22F1105F0(*(_QWORD *)(v265 & 0xFFFFFFFFFFFFFFF0)))
                            {
LABEL_473:
                              if (v464)
                              {
                                LODWORD(v272) = (37 * v422) & (v464 - 1);
                                v273 = (int *)(v463 + 8 * v272);
                                v274 = *v273;
                                if ((_DWORD)v422 != *v273)
                                {
                                  v286 = 1;
                                  do
                                  {
                                    if (v274 == -1)
                                      goto LABEL_495;
                                    v287 = v272 + v286++;
                                    v272 = v287 & (v464 - 1);
                                    v274 = *(_DWORD *)(v463 + 8 * v272);
                                  }
                                  while ((_DWORD)v422 != v274);
                                  v273 = (int *)(v463 + 8 * v272);
                                }
                              }
                              else
                              {
LABEL_495:
                                v273 = (int *)(v463 + 8 * v464);
                              }
                              if (v462)
                              {
                                LODWORD(v275) = (37 * v422) & (v462 - 1);
                                v276 = (int *)(v461 + 8 * v275);
                                v277 = *v276;
                                if ((_DWORD)v422 != *v276)
                                {
                                  v288 = 1;
                                  do
                                  {
                                    if (v277 == -1)
                                      goto LABEL_500;
                                    v289 = v275 + v288++;
                                    v275 = v289 & (v462 - 1);
                                    v277 = *(_DWORD *)(v461 + 8 * v275);
                                  }
                                  while ((_DWORD)v422 != v277);
                                  v276 = (int *)(v461 + 8 * v275);
                                }
                              }
                              else
                              {
LABEL_500:
                                v276 = (int *)(v461 + 8 * v462);
                              }
                              if ((int *)(v463 + 8 * v464) != v273 && (int *)(v461 + 8 * v462) != v276)
                              {
                                v278 = v276[1];
                                v279 = v273[1];
                                v409 = v279;
                                v410 = v278;
                                if (*v273 != *v276 || v279 != v278)
                                {
                                  sub_22E8FCA40(v423, *((_DWORD *)v424 + 6), 0xBE4u, 0, (uint64_t)&v541);
                                  v281 = sub_22E89519C((uint64_t)&v541, (unsigned int *)&v422);
                                  v282 = sub_22E89519C(v281, &v410);
                                  v283 = sub_22E89519C(v282, &v409);
                                  v408 = 1;
                                  sub_22E8900C4(v283, &v408);
                                  sub_22E903BEC((unsigned int *)&v541);
                                  LOBYTE(v427) = 1;
                                }
                              }
                              goto LABEL_484;
                            }
                          }
                          v267 = v423;
                          v268 = sub_22EFBAFDC(v256);
                          sub_22E8FCA40(v267, v268, 0xBE4u, 0, (uint64_t)&v541);
                          v269 = sub_22E89519C((uint64_t)&v541, (unsigned int *)&v422);
                          v270 = sub_22E8901B8(v269, (uint64_t *)__src);
                          v271 = sub_22E8901B8(v270, v419);
                          v410 = 0;
                          sub_22E8900C4(v271, (int *)&v410);
                          sub_22E903BEC((unsigned int *)&v541);
                          LOBYTE(v427) = 1;
                          goto LABEL_473;
                        }
LABEL_484:
                        v284 = (uint64_t *)v222[1];
                        if (v284)
                        {
                          do
                          {
                            v285 = v284;
                            v284 = (uint64_t *)*v284;
                          }
                          while (v284);
                        }
                        else
                        {
                          do
                          {
                            v285 = (uint64_t *)v222[2];
                            v2 = *v285 == (_QWORD)v222;
                            v222 = v285;
                          }
                          while (!v2);
                        }
                        v222 = v285;
                        if (v285 == (uint64_t *)v466)
                          goto LABEL_408;
                        continue;
                      }
                    }
                    v319 = 1;
                    while (v318 != -1)
                    {
                      v320 = v317 + v319++;
                      v317 = v320 & v316;
                      v318 = *(_DWORD *)(v457 + 16 * v317);
                      if (v199 == v318)
                        goto LABEL_651;
                    }
                  }
                  if (++v199 > v315)
                    goto LABEL_396;
                }
              }
              v200 = v421;
              if ((unint64_t)(v420 - v421) > 9)
              {
                *((_WORD *)v421 + 4) = 8312;
                *v200 = *(_QWORD *)"has index ";
                v421 += 10;
              }
              else
              {
                llvm::raw_ostream::write((llvm::raw_ostream *)v419, "has index ");
              }
              v201 = (llvm::raw_ostream *)llvm::raw_ostream::operator<<();
              v202 = *((_QWORD *)v201 + 4);
              if ((unint64_t)(*((_QWORD *)v201 + 3) - v202) > 4)
              {
                *(_BYTE *)(v202 + 4) = 32;
                *(_DWORD *)v202 = 1953849888;
                *((_QWORD *)v201 + 4) += 5;
              }
              else
              {
                llvm::raw_ostream::write(v201, " but ");
              }
            }
            if (v420 == v421)
            {
              v203 = (uint64_t *)llvm::raw_ostream::write((llvm::raw_ostream *)v419, "'");
            }
            else
            {
              *v421++ = 39;
              v203 = v419;
            }
            (*(void (**)(char *, uint64_t *))(*(_QWORD *)v424 + 88))(v424, v203);
            v204 = (_BYTE *)v203[4];
            if ((_BYTE *)v203[3] == v204)
            {
              llvm::raw_ostream::write((llvm::raw_ostream *)v203, "'");
            }
            else
            {
              *v204 = 39;
              ++v203[4];
            }
            v205 = sub_22EA1DB60((uint64_t)v424);
            v206 = v421;
            v207 = v420 - v421;
            if (v205)
            {
              if (v207 <= 0x2D)
              {
                v208 = " has imageblock parameter with implicit layout";
LABEL_383:
                llvm::raw_ostream::write((llvm::raw_ostream *)v419, v208);
                goto LABEL_384;
              }
              *(_OWORD *)v421 = *(_OWORD *)" has imageblock parameter with implicit layout";
              qmemcpy(v206 + 16, "parameter with implicit layout", 30);
              v396 = v421 + 46;
            }
            else
            {
              if (v207 <= 0x1F)
              {
                v208 = " has color attachment parameters";
                goto LABEL_383;
              }
              *(_OWORD *)v421 = *(_OWORD *)" has color attachment parameters";
              *((_OWORD *)v206 + 1) = *(_OWORD *)"hment parameters";
              v396 = v421 + 32;
            }
            v421 = v396;
            goto LABEL_384;
          }
          v48 = (void (**)(_QWORD *))(*v527 + 40);
        }
        (*v48)(v47);
        goto LABEL_109;
      }
      if (sub_22F3AC76C((uint64_t)v424))
      {
        v524[0] = (uint64_t)&off_24FAB7348;
        v525 = v524;
        v538 = &off_24FAB7300;
        v540 = &v538;
        sub_22E9AEBC4((uint64_t)&v423, (uint64_t *)v490, v491, 470, 377, (uint64_t)v524, (uint64_t)&v538);
        v102 = v540;
        if (v540 == &v538)
        {
          v103 = (void (**)(uint64_t (***)()))(v538 + 4);
          v102 = &v538;
        }
        else
        {
          if (!v540)
            goto LABEL_347;
          v103 = (void (**)(uint64_t (***)()))(*v540 + 5);
        }
        (*v103)(v102);
LABEL_347:
        v194 = v525;
        if (v525 == v524)
        {
          v195 = (void (**)(uint64_t *))(v524[0] + 32);
          v194 = v524;
        }
        else
        {
          if (!v525)
            goto LABEL_352;
          v195 = (void (**)(uint64_t *))(*v525 + 40);
        }
        (*v195)(v194);
LABEL_352:
        v536[0] = &off_24FAB7348;
        v537 = v536;
        v534[0] = (uint64_t)&off_24FAB7300;
        v535 = v534;
        sub_22E9AEBC4((uint64_t)&v423, (uint64_t *)v487, v488, 405, 376, (uint64_t)v536, (uint64_t)v534);
        v196 = v535;
        if (v535 == v534)
        {
          v197 = (void (**)(uint64_t *))(v534[0] + 32);
          v196 = v534;
        }
        else
        {
          if (!v535)
            goto LABEL_357;
          v197 = (void (**)(uint64_t *))(*v535 + 40);
        }
        (*v197)(v196);
LABEL_357:
        if (v537 == v536)
        {
          (*(void (**)(_QWORD *))(v536[0] + 32))(v536);
        }
        else if (v537)
        {
          (*(void (**)(_QWORD *))(*v537 + 40))(v537);
        }
        goto LABEL_244;
      }
      v151 = (uint64_t)v424;
      if (sub_22E6A2F54((uint64_t)v424) && sub_22EAA34D4(v151))
      {
        v524[0] = (uint64_t)&off_24FAB7348;
        v525 = v524;
        v538 = &off_24FAB7300;
        v540 = &v538;
        sub_22E9AEBC4((uint64_t)&v423, (uint64_t *)v487, v488, 405, 376, (uint64_t)v524, (uint64_t)&v538);
        v364 = v540;
        if (v540 == &v538)
        {
          v365 = (void (**)(uint64_t (***)()))(v538 + 4);
          v364 = &v538;
        }
        else
        {
          if (!v540)
            goto LABEL_671;
          v365 = (void (**)(uint64_t (***)()))(*v540 + 5);
        }
        (*v365)(v364);
LABEL_671:
        v377 = v525;
        if (v525 == v524)
        {
          v378 = (void (**)(uint64_t *))(v524[0] + 32);
          v377 = v524;
        }
        else
        {
          if (!v525)
          {
LABEL_676:
            v379 = 0;
            v163 = (unint64_t)v517;
            a1 = v518;
            v536[0] = &off_24FAB7390;
            v537 = v536;
            *(_QWORD *)__src = 0;
            if ((v424[29] & 1) != 0)
            {
              sub_22EFC8E88((uint64_t)v424);
              v381 = *(uint64_t **)v380;
              v382 = *(unsigned int *)(v380 + 8);
              v383 = *(uint64_t **)v380;
              if ((_DWORD)v382)
              {
                v385 = 8 * v382;
                v383 = *(uint64_t **)v380;
                while (*(_WORD *)(*v383 + 32) != 424)
                {
                  ++v383;
                  v385 -= 8;
                  if (!v385)
                    goto LABEL_684;
                }
              }
              if (v383 == &v381[v382])
              {
LABEL_684:
                v379 = 0;
              }
              else
              {
                do
                {
                  v384 = *v381++;
                  v379 = v384;
                }
                while (*(_WORD *)(v384 + 32) != 424);
              }
            }
            *(_QWORD *)__src = v379;
            if ((_DWORD)a1)
            {
              v386 = 8 * a1;
              v387 = 8 * a1;
              v388 = (uint64_t *)v163;
              while (1)
              {
                v389 = *(_DWORD *)(*(_QWORD *)__src + 36);
                v541 = *(void ***)(*v388 + 48);
                LODWORD(v419[0]) = v389;
                if (!v537)
                  goto LABEL_742;
                if (((*(uint64_t (**)(_QWORD *, void ***, uint64_t *))(*v537 + 48))(v537, &v541, v419) & 1) != 0)
                  break;
                ++v388;
                v387 -= 8;
                if (!v387)
                  goto LABEL_357;
              }
              sub_22E8FCA40(v423, *((_DWORD *)v424 + 6), 0xF15u, 0, (uint64_t)&v541);
              v419[0] = sub_22E9AEF2C(*v388);
              sub_22E9AEE38((uint64_t)&v541, v419);
              LODWORD(v532[0]) = a1;
              v390 = sub_22E89519C((uint64_t)&v541, (unsigned int *)v532);
              if (*(_DWORD *)(*(_QWORD *)__src + 36))
                v391 = "triangle";
              else
                v391 = "quad";
              v534[0] = (uint64_t)v391;
              sub_22E8AECC4(v390, v534);
              sub_22E903BEC((unsigned int *)&v541);
              sub_22E8FCA40(v423, *(_DWORD *)(*(_QWORD *)__src + 16), 0x15A7u, 0, (uint64_t)&v541);
              v419[0] = *(_QWORD *)(*(_QWORD *)__src + 16);
              v392 = sub_22E8906A0((uint64_t)&v541, v419);
              sub_22E8FB3C4(v392, (uint64_t *)__src);
              sub_22E903BEC((unsigned int *)&v541);
              do
              {
                v393 = *(_QWORD *)v163;
                v163 += 8;
                v419[0] = 0;
                v419[0] = sub_22E9AEF2C(v393);
                sub_22E8FCA40(v423, *(_DWORD *)(v393 + 24), 0x165Cu, 0, (uint64_t)&v541);
                v534[0] = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v393 + 16))(v393);
                v394 = sub_22E8906A0((uint64_t)&v541, v534);
                v395 = sub_22E8FB3C4(v394, v419);
                v532[0] = *(_QWORD *)(v393 + 48);
                sub_22E8901B8(v395, v532);
                sub_22E903BEC((unsigned int *)&v541);
                v386 -= 8;
              }
              while (v386);
            }
            goto LABEL_357;
          }
          v378 = (void (**)(uint64_t *))(*v525 + 40);
        }
        (*v378)(v377);
        goto LABEL_676;
      }
      if (!sub_22E88FFC4((uint64_t)v424))
      {
        sub_22EFC1D94((uint64_t)v424);
        goto LABEL_244;
      }
      v538 = &off_24FAB72B8;
      v539 = &v423;
      v540 = &v538;
      sub_22E9AEA44((uint64_t)&v423, (uint64_t *)v514, v515, (uint64_t)&v538, 1u);
      v152 = v540;
      if (v540 == &v538)
      {
        v153 = (void (**)(uint64_t (***)()))(v538 + 4);
        v152 = &v538;
      }
      else
      {
        if (!v540)
        {
LABEL_591:
          if (v473 > 1 || (_DWORD)v473 && DWORD2(v457))
          {
            sub_22E8FCA40(v423, *((_DWORD *)v424 + 6), 0xF14u, 0, (uint64_t)&v541);
            *(_DWORD *)__src = v473;
            sub_22E89519C((uint64_t)&v541, (unsigned int *)__src);
            sub_22E903BEC((unsigned int *)&v541);
            if ((_DWORD)v473)
            {
              v312 = v472;
              v313 = 8 * v473;
              do
              {
                v314 = *v312++;
                sub_22E8FCA40(v423, *(_DWORD *)(v314 + 24), 0x1669u, 0, (uint64_t)v524);
                sub_22E903BEC((unsigned int *)v524);
                v313 -= 8;
              }
              while (v313);
            }
            goto LABEL_243;
          }
          goto LABEL_244;
        }
        v153 = (void (**)(uint64_t (***)()))(*v540 + 5);
      }
      (*v153)(v152);
      goto LABEL_591;
    }
    sub_22EFC8E88(v59);
    v71 = *v70;
    if ((*(_BYTE *)(v59 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v59);
      v73 = *(_QWORD *)v72 + 8 * *(unsigned int *)(v72 + 8);
    }
    else
    {
      v73 = 0;
    }
    while (1)
    {
      if (v71 == (uint64_t *)v73)
        goto LABEL_123;
      v74 = *v71;
      v75 = *(unsigned __int16 *)(*v71 + 32);
      if (v75 > 0x193)
      {
        if (v75 == 404)
        {
          *((_QWORD *)&v467 + 1) = v59;
          goto LABEL_168;
        }
        if (v75 == 439 && (*(_BYTE *)(v59 + 29) & 1) != 0)
        {
          sub_22EFC8E88(v59);
          v79 = *(uint64_t **)v78;
          v80 = *(unsigned int *)(v78 + 8);
          v81 = *(uint64_t **)v78;
          if ((_DWORD)v80)
          {
            v82 = 8 * v80;
            v81 = *(uint64_t **)v78;
            while (*(_WORD *)(*v81 + 32) != 385)
            {
              ++v81;
              v82 -= 8;
              if (!v82)
                goto LABEL_168;
            }
          }
          if (v81 != &v79[v80])
          {
            do
            {
              v88 = *v79++;
              v87 = v88;
            }
            while (*(_WORD *)(v88 + 32) != 385);
            v89 = *(_QWORD *)(v74 + 40);
            sub_22F00905C(*(_QWORD *)(v87 + 40), v423[11], 0, (uint64_t)&v541);
            sub_22F00905C(v89, v423[11], 0, (uint64_t)__src);
            v86 = BYTE8(v542);
            if (BYTE8(v542) && __src[16])
            {
              v90 = *(uint64_t **)__src;
              if (*(_DWORD *)&__src[8] < 0x41u)
                v90 = (uint64_t *)__src;
              v91 = *v90;
              v92 = &v541;
              if (v542 >= 0x41)
                v92 = (void ***)v541;
              LODWORD(v524[0]) = *v92;
              sub_22E9AF314((uint64_t)&v463, v524)[1] = v91;
              if (!__src[16])
                goto LABEL_162;
              if (*(_DWORD *)&__src[8] < 0x41u)
                goto LABEL_162;
              v93 = *(_QWORD *)__src;
              if (!*(_QWORD *)__src)
                goto LABEL_162;
LABEL_187:
              MEMORY[0x2348A0E84](v93, 0x1000C8000313F17);
              goto LABEL_162;
            }
            if (__src[16])
            {
              if (*(_DWORD *)&__src[8] >= 0x41u)
              {
                v93 = *(_QWORD *)__src;
                if (*(_QWORD *)__src)
                  goto LABEL_187;
              }
            }
LABEL_163:
            if (v86 && v542 >= 0x41 && v541)
              MEMORY[0x2348A0E84](v541, 0x1000C8000313F17);
          }
        }
      }
      else
      {
        if (v75 == 385)
        {
          v470 = 1;
          sub_22F00905C(*(_QWORD *)(v74 + 40), v423[11], 0, (uint64_t)&v541);
          if (!BYTE8(v542))
            goto LABEL_168;
          v83 = &v541;
          if (v542 >= 0x41)
            v83 = (void ***)v541;
          *(_DWORD *)__src = *(_DWORD *)v83;
          v84 = sub_22E9AF238(&v465, *(unsigned int *)__src, __src);
          v85 = *((unsigned int *)v84 + 12);
          if (v85 >= *((unsigned int *)v84 + 13))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod();
            v85 = *((unsigned int *)v84 + 12);
          }
          v84[5][v85] = v59;
          ++*((_DWORD *)v84 + 12);
LABEL_162:
          v86 = BYTE8(v542);
          goto LABEL_163;
        }
        if (v75 != 403)
          goto LABEL_168;
        v76 = *(unsigned __int8 *)(v74 + 30);
        if ((~(v76 << 16) & 0x780000) != 0)
        {
          if ((((*(unsigned __int16 *)(v74 + 28) | (v76 << 16)) >> 19) & 0xF) != 0)
          {
LABEL_141:
            LOWORD(v541) = 0;
            *(_QWORD *)&v542 = 0;
            DWORD2(v542) = 0;
            if (sub_22F00554C(*(_QWORD *)(v74 + 40), (uint64_t)&v541, v423[11], 0, 0))
            {
              v77 = &v543;
              if (v544 >= 0x41)
                v77 = v543;
              v468 = *v77;
              if (!v469)
                v469 = 1;
            }
            if (DWORD2(v542) >= 2)
              sub_22EF53BC0((uint64_t *)&v542 + 1);
            goto LABEL_168;
          }
        }
        else if (sub_22F1BFAD0(*v71))
        {
          goto LABEL_141;
        }
        v468 = 0;
        if (!v469)
          v469 = 1;
      }
LABEL_168:
      ++v71;
    }
  }
  if (!sub_22EFC1F80((uint64_t)v3))
  {
    if (sub_22E9A9E30((uint64_t)v3) || sub_22EFC18B0((uint64_t)v3))
      sub_22EFC18B0((uint64_t)v3);
    return 1;
  }
  if ((v3[29] & 1) == 0)
    return 1;
  sub_22EFC8E88((uint64_t)v3);
  v6 = *(uint64_t **)v5;
  if (sub_22E54EB3C(*(uint64_t **)v5, (uint64_t *)(*(_QWORD *)v5 + 8 * *(unsigned int *)(v5 + 8))))
    return 1;
  while (1)
  {
    v7 = *v6;
    if (*(_WORD *)(*v6 + 32) == 11)
    {
      v8 = *(unsigned __int8 *)(v7 + 30);
      v9 = (~(v8 << 16) & 0x780000) != 0
         ? ((*(unsigned __int16 *)(v7 + 28) | (v8 << 16)) >> 19) & 0xF
         : sub_22F1BFAD0(v7);
      if (v9 == 1)
        break;
    }
    ++v6;
  }
  if (!*v6)
    return 1;
  v94 = *(_QWORD *)(*v6 + 16);
  v423 = (_QWORD *)a1;
  v424 = v3;
  LODWORD(v425) = v94;
  BYTE4(v425) = 1;
  v426 = 0;
  v427 = 0uLL;
  v428 = v430;
  v429 = 0x800000000;
  v432 = 0uLL;
  v95 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(a1 + 88) + 15192), "_stitching_traits_impl", 0x16uLL);
  v541 = 0;
  *(_QWORD *)&v542 = &v543;
  *((_QWORD *)&v542 + 1) = 0x800000000;
  v545 = 0;
  v546 = 0;
  v547 = 0;
  v548 = (_QWORD *)a1;
  v549 = v95;
  v550 = v425;
  sub_22EFC6D6C((uint64_t)&v551, v95);
  v552 = 0;
  v553 = 0;
  v554 = 0;
  v555 = 1;
  v556 = 1;
  sub_22EC56024((uint64_t)&v541);
  LOBYTE(v556) = 0;
  v96 = sub_22EAC20DC((_QWORD *)a1);
  v97 = v96 + 48;
  if (v96)
    v98 = v96 + 48;
  else
    v98 = 0;
  if (sub_22EC611AC(v423, &v541, v98, 0))
  {
    if ((_DWORD)v541 == 2)
    {
      v99 = *(_QWORD *)v542 & 0xFFFFFFFFFFFFFFFCLL;
      v100 = *(_DWORD *)(v99 + 28) & 0x7F;
      if (v100 <= 0x2F && ((1 << v100) & 0xC00000060000) != 0)
      {
        v99 = sub_22EFBAEA4(v99);
        v100 = *(_DWORD *)(v99 + 28) & 0x7F;
      }
      if (v100 == 28)
        v101 = v99;
      else
        v101 = 0;
    }
    else
    {
      v101 = 0;
    }
  }
  else
  {
    v147 = sub_22EFCF6C0(v423[11], 0, v98, v425, v425, v95, 0, 1);
    v148 = sub_22EFEAF4C(v423[11], v98, v425, v425, 0, 0, 0, 1, 0, 0, 0);
    v149 = v423[11];
    *(_QWORD *)__src = v148;
    v150 = sub_22EFE8F48(v149, v425, v425, (uint64_t)__src, 1, v425, 0);
    v101 = sub_22EFE9D6C(v423[11], v98, v425, v95, (uint64_t)v150, v147);
    *(_DWORD *)(v101 + 28) |= 0x200u;
    sub_22EFCCFA0(v97, v101);
  }
  *(_QWORD *)&v432 = v101;
  if ((_BYTE)v556)
  {
    if ((_DWORD)v541 == 5)
    {
      sub_22EC64D18(v548, (uint64_t)&v541);
    }
    else if (v546 && (*(_DWORD *)(v548[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v548, (uint64_t)&v541);
    }
  }
  if (v545)
  {
    v398 = sub_22EC6CBD0(v545);
    MEMORY[0x2348A0E9C](v398, 0x10E0C409F09D3C3);
  }
  if ((_QWORD **)v542 != &v543)
    free((void *)v542);
  v154 = sub_22E3CB704(*(llvm::StringMapImpl **)(v423[11] + 15192), "_stitching_placement_new", 0x18uLL);
  v541 = 0;
  *(_QWORD *)&v542 = &v543;
  *((_QWORD *)&v542 + 1) = 0x800000000;
  v545 = 0;
  v546 = 0;
  v547 = 0;
  v548 = v423;
  v549 = v154;
  v550 = v425;
  sub_22EFC6D6C((uint64_t)&v551, v154);
  v552 = 0;
  v553 = 0;
  v554 = 0;
  v555 = 1;
  v556 = 1;
  sub_22EC56024((uint64_t)&v541);
  LOBYTE(v556) = 0;
  v155 = sub_22EAC20DC(v423);
  v156 = v155 + 48;
  if (v155)
    v157 = v155 + 48;
  else
    v157 = 0;
  if (!sub_22EC611AC(v423, &v541, v157, 0))
  {
    v401 = v156;
    v321 = v423[11];
    v322 = *(_QWORD *)(v321 + 16816);
    v524[0] = sub_22EF67C8C(v321);
    v524[1] = v322;
    *(_WORD *)__src = 0;
    __src[2] &= 0xFCu;
    *(_OWORD *)&__src[4] = 0uLL;
    v412 = 0u;
    v413 = 0u;
    v414 = 0u;
    v415 = 0;
    v323 = sub_22EF63D8C(v321, v322, v524, 2uLL, (__int128 *)__src, 0);
    v324 = v423[11];
    v325 = v425;
    v406 = sub_22EF579A8(v324, v323, v425);
    *(_QWORD *)__src = v154;
    *(_DWORD *)&__src[8] = v325;
    sub_22EFC6D6C((uint64_t)&__src[16], v154);
    v326 = sub_22EFC4400(v324, v157, v325, (uint64_t *)__src, v323, (uint64_t)v406, 0, 0, 0, 1, 0, 0);
    *(_QWORD *)(v326 + 80) |= 0x30000uLL;
    *(_DWORD *)(v326 + 28) |= 0x200u;
    v327 = v423[11];
    memset(__src, 0, sizeof(__src));
    LODWORD(v412) = 0;
    BYTE6(v412) = 0;
    WORD2(v412) = 478;
    v328 = sub_22F37D4D8(v327, __src);
    sub_22EFCA95C(v326, v328);
    v329 = v423[11];
    memset(__src, 0, sizeof(__src));
    LODWORD(v412) = 0;
    BYTE6(v412) = 120;
    WORD2(v412) = 0;
    v330 = sub_22F3A5E00(v329, 1, __src);
    sub_22EFCA95C(v326, v330);
    v331 = v423[11];
    if (v326)
      v332 = v326 + 72;
    else
      v332 = 0;
    v333 = v425;
    v334 = sub_22EF67C8C(v423[11]);
    v335 = sub_22EF579A8(v331, v334, v333);
    v336 = sub_22EFBF080(v331, v332, v333, v333, 0, v334, (uint64_t)v335, 0, 0);
    *(_DWORD *)(v336 + 96) &= 0xF0001FFF;
    v337 = v423[11];
    LODWORD(v334) = v425;
    v338 = *(_QWORD *)(v337 + 16816);
    v339 = sub_22EF579A8(v337, v338, v425);
    v340 = sub_22EFBF080(v337, v332, v334, v334, 0, v338, (uint64_t)v339, 0, 0);
    *(_DWORD *)(v340 + 96) = *(_DWORD *)(v340 + 96) & 0xF0001FFF | 0x100000;
    if (!v326 || (v341 = v326, (*(_DWORD *)(v326 + 28) & 0x7F) != 0x53))
    {
      v342 = *(_QWORD *)(v326 + 16);
      v343 = v342 & 0xFFFFFFFFFFFFFFF8;
      if ((v342 & 4) != 0)
        v343 = *(_QWORD *)v343;
      for (i = *(_WORD *)(v343 + 8) & 0x7F; i != 83; i = *(_WORD *)(v343 + 8) & 0x7F)
      {
        v345 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v345 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_626;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_625;
          if (i == 16)
            goto LABEL_619;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_632;
          if (i == 24)
          {
LABEL_619:
            v345 = -48;
          }
          else
          {
LABEL_625:
            if (i != 70)
            {
LABEL_626:
              v346 = i - 52;
              if ((i - 33) >= 5)
                v347 = -48;
              else
                v347 = -64;
              if (v346 >= 6)
                v345 = v347;
              else
                v345 = -72;
              goto LABEL_632;
            }
            v345 = -64;
          }
        }
LABEL_632:
        v348 = *(_QWORD *)(v343 + v345 + 16);
        v343 = v348 & 0xFFFFFFFFFFFFFFF8;
        if ((v348 & 4) != 0)
          v343 = *(_QWORD *)v343;
      }
      v341 = v343 - 40;
    }
    v349 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v341 + 88) + 2032, 16, 3);
    *(_QWORD *)(v326 + 120) = v349;
    *v349 = v336;
    v349[1] = v340;
    v350 = v423;
    v351 = v423[27];
    v352 = v423[400];
    v423[400] = 0;
    v404 = v350[1286];
    v407 = v352;
    v403 = *((_DWORD *)v350 + 486);
    v402 = *((_DWORD *)v350 + 548);
    v350[27] = v332;
    v350[1286] = 0;
    *((_DWORD *)v350 + 486) = *((_DWORD *)v350 + 476);
    *((_DWORD *)v350 + 548) = *((_DWORD *)v350 + 490);
    v353 = *(_QWORD *)(v340 + 48);
    v354 = *(_QWORD *)(v353 & 0xFFFFFFFFFFFFFFF0);
    if (!v354 || (v355 = *(_DWORD *)(v354 + 16), (v355 & 0xFE) != 0x28))
    {
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v354 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
        || (v354 = sub_22F10CF48(v354)) == 0)
      {
LABEL_642:
        v356 = sub_22F32D524((uint64_t)v350, v340, v353, 1, v425, 0);
        if ((v356 & 1) == 0)
        {
          v357 = sub_22EB1A358(v423, v356 & 0xFFFFFFFFFFFFFFFELL, 0);
          if ((v357 & 1) == 0)
          {
            v358 = sub_22ED358AC((uint64_t)v423, v425, v357 & 0xFFFFFFFFFFFFFFFELL, 0);
            if ((v358 & 1) == 0)
            {
              v359 = v423[11];
              *(_QWORD *)__src = v358 & 0xFFFFFFFFFFFFFFFELL;
              v360 = v425;
              v361 = (unsigned __int8 *)sub_22E3CD3D4(v359 + 2032, 24, 3);
              v362 = sub_22F0D6590(v361, __src, 1, v360, v360);
              *(_QWORD *)(v326 + 80) &= ~0x8000000uLL;
              *(_QWORD *)(v326 + 128) = v362;
              sub_22F0D60E4((uint64_t)v362);
              *(_DWORD *)(v326 + 140) = v363;
              sub_22EFCCFA0(v401, v326);
              (*(void (**)(_QWORD, unint64_t))(*(_QWORD *)v423[12] + 24))(v423[12], v326);
              *((_QWORD *)&v432 + 1) = v326;
            }
          }
        }
        if (v351)
        {
          v350[27] = v351;
          v350[400] = v407;
          v350[1286] = v404;
          *((_DWORD *)v350 + 486) = v403;
          *((_DWORD *)v350 + 548) = v402;
        }
        goto LABEL_287;
      }
      v355 = *(_DWORD *)(v354 + 16);
    }
    if ((v355 & 0x100000) != 0)
    {
      do
      {
        v354 = *(_QWORD *)(*(_QWORD *)(v354 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v354)
        {
          v397 = *(_DWORD *)(v354 + 16);
          if ((v397 & 0xFE) == 0x28)
            continue;
        }
        v354 = sub_22F10CF48(v354);
        v397 = *(_DWORD *)(v354 + 16);
      }
      while ((v397 & 0x100000) != 0);
    }
    v353 = *(_QWORD *)(v354 + 32);
    goto LABEL_642;
  }
  if ((_DWORD)v541 == 2)
  {
    v158 = *(_QWORD *)v542 & 0xFFFFFFFFFFFFFFFCLL;
    v159 = *(_DWORD *)(v158 + 28);
    if ((v159 & 0x7Fu) <= 0x2F && ((1 << (v159 & 0x7F)) & 0xC00000060000) != 0)
    {
      v158 = sub_22EFBAEA4(v158);
      v159 = *(_DWORD *)(v158 + 28);
    }
    if ((v159 & 0x7Eu) - 52 >= 6)
      v160 = 0;
    else
      v160 = v158;
  }
  else
  {
    v160 = 0;
  }
  *((_QWORD *)&v432 + 1) = v160;
LABEL_287:
  if ((_BYTE)v556)
  {
    if ((_DWORD)v541 == 5)
    {
      sub_22EC64D18(v548, (uint64_t)&v541);
    }
    else if (v546 && (*(_DWORD *)(v548[9] + 52) & 0x400000) != 0)
    {
      sub_22E90B5FC((unint64_t)v548, (uint64_t)&v541);
    }
  }
  if (v545)
  {
    v399 = sub_22EC6CBD0(v545);
    MEMORY[0x2348A0E9C](v399, 0x10E0C409F09D3C3);
  }
  if ((_QWORD **)v542 != &v543)
    free((void *)v542);
  v161 = (uint64_t *)(*((_QWORD *)v3 + 6) & 0xFFFFFFFFFFFFFFF0);
  v162 = *v161;
  if (!*v161 || *(unsigned __int8 *)(v162 + 16) - 27 <= 0xFFFFFFFD)
  {
    v162 = sub_22F10CF48(v162);
    v161 = (uint64_t *)(*((_QWORD *)v3 + 6) & 0xFFFFFFFFFFFFFFF0);
  }
  v163 = *(_QWORD *)(v162 + 24);
  v164 = *v161;
  if (*v161 && *(_BYTE *)(v164 + 16) == 26)
    goto LABEL_301;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v164 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
    goto LABEL_743;
  v164 = sub_22F10CF48(v164);
  if (v164)
LABEL_301:
    v165 = (unsigned __int16)(*(_QWORD *)(v164 + 16) >> 38);
  else
    v165 = 0;
  while (1)
  {
    v166 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v163 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v2 = v166 == 0;
    v167 = *(_DWORD *)(v166 + 16) & 0xFF800FF;
    if (!v2 && v167 == 86507531)
      v169 = v165;
    else
      v169 = v165 + 1;
    v170 = v426;
    if (v169 > (uint64_t)(*((_QWORD *)&v427 + 1) - (_QWORD)v426) >> 5)
    {
      v171 = (_BYTE *)v427;
      v172 = (char *)operator new(32 * v169);
      v173 = &v172[(v171 - v170) & 0xFFFFFFFFFFFFFFE0];
      v174 = v173;
      if (v171 != v170)
      {
        v175 = &v172[(v171 - v170) & 0xFFFFFFFFFFFFFFE0];
        do
        {
          v176 = *((_OWORD *)v171 - 1);
          v174 = v175 - 32;
          *((_OWORD *)v175 - 2) = *((_OWORD *)v171 - 2);
          *((_OWORD *)v175 - 1) = v176;
          v171 -= 32;
          v175 -= 32;
        }
        while (v171 != v170);
      }
      v426 = v174;
      *(_QWORD *)&v427 = v173;
      *((_QWORD *)&v427 + 1) = &v172[32 * v169];
      if (v170)
        operator delete(v170);
    }
    v177 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v163 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v177)
      v178 = (*(_DWORD *)(v177 + 16) & 0xFF800FF) == 86507531;
    else
      v178 = 0;
    if (!v178)
    {
      v179 = sub_22E9B002C();
      if (BYTE4(v425))
        v180 = v179;
      else
        v180 = 0;
      BYTE4(v425) = v180;
    }
    v181 = *((_QWORD *)v3 + 15);
    v182 = *(_QWORD *)(*((_QWORD *)v3 + 6) & 0xFFFFFFFFFFFFFFF0);
    v183 = v182 && *(_BYTE *)(v182 + 16) == 26;
    if (v183
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v182 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 26
      && (v182 = sub_22F10CF48(v182)) != 0)
    {
      v184 = *(_QWORD *)(v182 + 16);
      if ((v184 & 0x3FFFC000000000) != 0)
        break;
    }
    v163 = BYTE4(v425);
    if (BYTE4(v425))
      goto LABEL_337;
LABEL_734:
    sub_22E8FCA40(v423, *((_DWORD *)v424 + 6), 0xF3Au, 0, (uint64_t)&v541);
    sub_22E890024((uint64_t)&v541, (uint64_t *)&v424);
    sub_22E903BEC((unsigned int *)&v541);
    if (!(_DWORD)v429)
      goto LABEL_738;
    v3 = (char *)(32 * v429);
    a1 = (uint64_t)(v428 + 24);
    while (*(_QWORD *)a1)
    {
      (*(void (**)(_QWORD))(**(_QWORD **)a1 + 48))(*(_QWORD *)a1);
      a1 += 32;
      v3 -= 32;
      if (!v3)
        goto LABEL_738;
    }
LABEL_742:
    sub_22E4A06C4();
LABEL_743:
    v165 = 0;
  }
  v185 = 8 * (unsigned __int16)(v184 >> 38);
  do
  {
    if ((*(_BYTE *)(*(_QWORD *)v181 + 28) & 0x80) != 0)
      v186 = 0;
    else
      v186 = sub_22E9B002C();
    if (BYTE4(v425))
      v163 = v186;
    else
      v163 = 0;
    BYTE4(v425) = v163;
    v181 += 8;
    v185 -= 8;
  }
  while (v185);
  if (!(_DWORD)v163)
    goto LABEL_734;
LABEL_337:
  v187 = *(_DWORD **)(a1 + 88);
  v188 = v426;
  v405 = v427;
  v427 = 0uLL;
  v426 = 0;
  *(_QWORD *)__src = v3;
  v541 = 0;
  v189 = sub_22E54D320((uint64_t)(v187 + 3792), __src, &v541);
  v190 = v541;
  if ((v189 & 1) != 0)
  {
    v400 = v541[1];
    if (v400)
    {
      v541[2] = v400;
      operator delete(v400);
    }
    v193 = v405;
  }
  else
  {
    v191 = v187[3794];
    v192 = v187[3796];
    if (4 * v191 + 4 >= 3 * v192)
    {
      v192 *= 2;
    }
    else if (v192 + ~v191 - v187[3795] > v192 >> 3)
    {
      goto LABEL_340;
    }
    sub_22E9B2F88((uint64_t)(v187 + 3792), v192);
    v541 = 0;
    sub_22E54D320((uint64_t)(v187 + 3792), __src, &v541);
    v190 = v541;
LABEL_340:
    ++v187[3794];
    v193 = v405;
    if (*v190 != (void *)-4096)
      --v187[3795];
    *v190 = *(void **)__src;
    v190[1] = 0;
    v190[2] = 0;
    v190[3] = 0;
  }
  v190[1] = v188;
  *((_OWORD *)v190 + 1) = v193;
LABEL_738:
  sub_22F244794((void **)&v428);
  if (v426)
  {
    *(_QWORD *)&v427 = v426;
    operator delete(v426);
  }
  return (_DWORD)v163 != 0;
}

void sub_22E995A44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  uint64_t v15;
  int v16;
  int v18;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  BOOL v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  BOOL v40;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t i;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50[24];
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53[3];
  uint64_t v54;
  llvm *v55;
  unsigned int v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  int v60;
  _QWORD v61[5];
  void *v62;
  uint64_t v63;
  _DWORD v64[26];
  uint64_t v65;
  __int16 v66;
  char v67;
  uint64_t v68;

  v68 = *MEMORY[0x24BDAC8D0];
  if ((*(_QWORD *)(*(_QWORD *)(a1[11] + 2000) + 8) & 0x2000000000) != 0
    && sub_22F1CF68C(*(_QWORD *)(a1[13] + 32), 0x1B2Fu, 0, a1[13]) != 1)
  {
    v6 = *(_QWORD *)(a3 + 40);
    if ((v6 & 7) == 0)
    {
      v7 = v6 & 0xFFFFFFFFFFFFFFF8;
      if (v7)
      {
        v8 = *(uint64_t **)(v7 + 16);
        v10 = *v8;
        v9 = v8 + 2;
        v51[0] = v9;
        v51[1] = v10;
        switch((int)v10)
        {
          case 6:
            v11 = *(_DWORD *)v9;
            v12 = *((unsigned __int16 *)v9 + 2);
            v13 = v11 == 1635018098;
            v14 = 28265;
            goto LABEL_15;
          case 7:
            v18 = *(_DWORD *)v9;
            v12 = *(_DWORD *)((char *)v9 + 3);
            v13 = v18 == 1701602674;
            v14 = 1702060389;
LABEL_15:
            if (v13 && v12 == v14)
            {
              v20 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
              if (!v20 || *(_BYTE *)(v20 + 16) != 26)
              {
                if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v20 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
                  goto LABEL_38;
                v20 = sub_22F10CF48(v20);
                if (!v20)
                  goto LABEL_38;
              }
              if ((*(_DWORD *)(v20 + 20) & 0x3FFFC0) == 0)
                goto LABEL_38;
            }
            return;
          case 12:
            v15 = *v9;
            v16 = *((_DWORD *)v9 + 2);
            if (v15 != 0x6552646567676174 || v16 != 1852399988)
              return;
            goto LABEL_32;
          case 13:
            v22 = *v9;
            v23 = *(_QWORD *)((char *)v9 + 5);
            if (v22 != 0x6552646567676174 || v23 != 0x657361656C655264)
              return;
LABEL_32:
            v25 = *(_QWORD *)(*(_QWORD *)(a3 + 48) & 0xFFFFFFFFFFFFFFF0);
            if (v25)
              v26 = *(_BYTE *)(v25 + 16) == 26;
            else
              v26 = 0;
            if (!v26)
            {
              if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 26)
                return;
              v25 = sub_22F10CF48(v25);
              if (!v25)
                return;
            }
            if ((*(_QWORD *)(v25 + 16) & 0x3FFFC000000000) != 0x4000000000)
              return;
LABEL_38:
            if (*(unsigned __int8 *)a2 != 141)
              return;
            if ((*a2 & 0x3F00000000) != 0x2900000000)
              return;
            v27 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + BYTE3(*a2)));
            if (!v27 || (*(_DWORD *)(v27 + 28) & 0x7Eu) - 54 > 3)
              return;
            v28 = *(_WORD *)(v27 + 80) & 0x7F;
            v29 = -40;
            if (v28 > 0x46)
            {
              switch(v28)
              {
                case 'S':
                  goto LABEL_57;
                case 'G':
                  v29 = -56;
                  goto LABEL_57;
                case 'Q':
                  goto LABEL_57;
              }
            }
            else
            {
              if (v28 <= 0x18)
              {
                if (v28 == 16)
                {
LABEL_45:
                  v29 = -48;
                  goto LABEL_57;
                }
                if (((1 << v28) & 0x1066) != 0)
                  goto LABEL_57;
                if (v28 == 24)
                  goto LABEL_45;
              }
              if (v28 == 70)
              {
LABEL_55:
                v29 = -64;
                goto LABEL_57;
              }
            }
            if (v28 - 52 >= 6)
            {
              if (v28 - 33 >= 5)
                goto LABEL_45;
              goto LABEL_55;
            }
            v29 = -72;
LABEL_57:
            v30 = *(_QWORD *)(v27 + 72 + v29 + 16);
            v31 = (_QWORD *)(v30 & 0xFFFFFFFFFFFFFFF8);
            if ((v30 & 4) != 0)
              v31 = (_QWORD *)*v31;
            v32 = v31 - 8;
            if (!v31)
              v32 = 0;
            v33 = (*((_DWORD *)v32 + 7) & 0x7E) == 36;
            if ((*((_DWORD *)v32 + 7) & 0x7E) != 0x24)
              v32 = 0;
            if (v31 && v33)
            {
              v34 = v32[5] & 0xFFFFFFFFFFFFFFF8;
              if ((v32[5] & 7) == 0 && v34 != 0)
              {
                v36 = *(_QWORD *)(v34 + 16);
                if (*(_DWORD *)v36 == 20)
                {
                  v37 = *(_QWORD *)(v36 + 16);
                  v38 = *(_QWORD *)(v36 + 24);
                  v39 = *(_DWORD *)(v36 + 32);
                  v40 = v37 == 0x7669737572746E69 && v38 == 0x6465726168735F65;
                  if (v40 && v39 == 1920233567)
                  {
                    v42 = (uint64_t *)v32[21];
                    if (*((_DWORD *)v42 + 2))
                    {
                      v43 = *v42;
                      if (*(_DWORD *)v43 == 1)
                      {
                        v44 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(v43 + 8) & 0xFFFFFFFFFFFFFFF0));
                        if (v44)
                        {
                          if ((*(_DWORD *)(v44 + 28) & 0x7Fu) - 35 <= 2)
                          {
                            v52 = 0;
                            v53[0] = (uint64_t)v53;
                            v53[1] = (uint64_t)v53;
                            v53[2] = 0;
                            v54 = 1;
                            for (i = 5; i != 21; i += 2)
                              v53[i - 1] = 0;
                            v57 = v61;
                            v58 = v61;
                            v59 = 4;
                            v60 = 0;
                            v61[4] = 0;
                            v62 = v64;
                            v63 = 0x400000000;
                            v64[24] = 0;
                            v66 = 257;
                            v67 = 1;
                            v65 = 0;
                            if (sub_22EFB3774(v44, (unsigned int (*)(uint64_t, unint64_t, uint64_t))sub_22E9B4074, (uint64_t)v50, (uint64_t)&v52, 0))
                            {
                              sub_22EFF605C((uint64_t)a2);
                              sub_22E8FCA40(a1, v46, 0x1B2Fu, 0, (uint64_t)v50);
                              v47 = sub_22F2F2210((uint64_t)v50, (uint64_t)v51);
                              sub_22F0D4E74((uint64_t)a2);
                              v49 = v48;
                              sub_22E8906A0(v47, &v49);
                              sub_22E903BEC(v50);
                            }
                            if (v62 != v64)
                              free(v62);
                            if (v58 != v57)
                              free(v58);
                            if ((v54 & 1) == 0)
                              llvm::deallocate_buffer(v55, (void *)(16 * v56));
                            sub_22E687D9C(v53);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            break;
          default:
            return;
        }
      }
    }
  }
}

uint64_t sub_22E995F64(_QWORD *a1, int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  int v11;
  unsigned int v12[24];
  uint64_t v13;

  v13 = a3;
  if (sub_22E3E4B64(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0)) || sub_22E99600C(a3))
    return 0;
  sub_22E8FCA40(a1, a2, 0xB99u, 0, (uint64_t)v12);
  v6 = 1;
  v11 = 1;
  v7 = sub_22E8900C4((uint64_t)v12, &v11);
  v10 = 0;
  v8 = sub_22E8900C4(v7, &v10);
  sub_22E8901B8(v8, &v13);
  sub_22E903BEC(v12);
  return v6;
}

BOOL sub_22E99600C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  BOOL v5;

  v1 = a1 & 0xFFFFFFFFFFFFFFF0;
  v2 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + 17) & 4) != 0)
    return 1;
  result = sub_22F110E00(v2);
  if (result)
  {
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v4)
      v5 = (*(_DWORD *)(v4 + 16) & 0xFF800FF) == 87031819;
    else
      v5 = 0;
    return !v5 && *(_DWORD *)(v4 + 16) != 44;
  }
  return result;
}

uint64_t sub_22E996088(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16[24];
  uint64_t *v17;
  unsigned int v18;
  char v19;
  int v20;
  _QWORD v21[2];

  v21[0] = a2;
  v21[1] = a3;
  v20 = 0;
  sub_22F00905C(a1, a4[11], &v20, (uint64_t)&v17);
  if (!v19)
  {
    sub_22F0D5A50(a1);
    sub_22E8FCA40(a4, v12, 0xBA0u, 0, (uint64_t)v16);
    sub_22F2F2210((uint64_t)v16, (uint64_t)v21);
LABEL_14:
    sub_22E903BEC(v16);
    v9 = 0;
    v10 = 0;
    v8 = 0;
    goto LABEL_7;
  }
  if (v18 >= 0x41)
    v6 = v17;
  else
    v6 = (uint64_t *)&v17;
  v7 = *v6;
  if ((unint64_t)(v7 - 1) >= 0xFFFFF)
  {
    sub_22F0D5A50(a1);
    sub_22E8FCA40(a4, v13, 0xB9Eu, 0, (uint64_t)v16);
    v14 = sub_22F2F2210((uint64_t)v16, (uint64_t)v21);
    v15 = 0xFFFFF;
    sub_22E89519C(v14, &v15);
    goto LABEL_14;
  }
  v8 = v7 & 0xFFFFFF00;
  v9 = v7;
  v10 = 0x100000000;
LABEL_7:
  if (v19 && v18 >= 0x41 && v17)
    MEMORY[0x2348A0E84](v17, 0x1000C8000313F17);
  return v10 | v9 | v8;
}

void sub_22E9961CC()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22E9961E0(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  BOOL v3;
  int v7;
  int v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  unsigned int v12;
  char v13;

  v2 = *(_DWORD *)(a2 + 64);
  v3 = v2 > 0x20 || ((1 << v2) & 0x100400001) == 0;
  if (v3 && !*(_BYTE *)(a2 + 120))
  {
    if (v2 == 1)
    {
      v7 = 0;
    }
    else
    {
      if (v2 != 33 && v2 != 19)
        return 1;
      v7 = 1;
    }
    if (*(_DWORD *)(a2 + 28) == 1)
    {
      v8 = *(_DWORD *)(a2 + 32);
      (*(void (**)(_DWORD **__return_ptr, _QWORD, _QWORD))(a1 + 8))(&v11, *(_QWORD *)(a1 + 16), *(unsigned int *)(a2 + 100));
      if (v13)
      {
        v9 = v11;
        if (v12 >= 0x41)
          v10 = v11;
        else
          v10 = &v11;
        if ((v8 + v7) <= *v10)
        {
          if (v12 < 0x41)
            return 1;
        }
        else
        {
          (*(void (**)(_QWORD, _QWORD))(a1 + 24))(*(_QWORD *)(a1 + 32), *(unsigned int *)(a2 + 100));
          if (!v13 || v12 < 0x41)
            return 1;
          v9 = v11;
        }
        if (v9)
          MEMORY[0x2348A0E84](v9, 0x1000C8000313F17);
      }
    }
  }
  return 1;
}

void sub_22E996304()
{
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22E996318(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  if (*(_DWORD *)(a2 + 28) == 1)
    v4 = *(unsigned int *)(a2 + 32);
  else
    v4 = 0;
  v5 = *(_DWORD *)(a2 + 356);
  if (v5 == 1)
  {
    v7 = *(unsigned int *)(a2 + 360);
  }
  else if (v5 || (v6 = *(_DWORD *)(a2 + 64) - 2, v6 >= 0x13))
  {
    v7 = 0;
  }
  else
  {
    v7 = qword_22F469120[v6];
  }
  v8 = *(_DWORD *)(a2 + 64);
  switch(v8)
  {
    case 1:
    case 23:
      if (!(_DWORD)v4)
        v4 = 1;
      goto LABEL_28;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      if (v7 > v4)
        v4 = v7;
      goto LABEL_28;
    case 11:
    case 12:
    case 15:
    case 16:
      v9 = v7 + 2;
      if (!v7)
        v9 = 1;
      goto LABEL_26;
    case 13:
    case 14:
      v9 = v7 + 5;
      v10 = v7 == 0;
      v11 = 4;
      goto LABEL_22;
    case 17:
    case 18:
      v9 = v7 + 7;
      v10 = v7 == 0;
      v11 = 6;
LABEL_22:
      if (v10)
        v9 = v11;
      goto LABEL_26;
    case 19:
    case 24:
      goto LABEL_28;
    case 20:
      v9 = v7 + 2;
LABEL_26:
      if (v9 > v4)
        v4 = v9;
LABEL_28:
      v12 = *(_QWORD *)(a1 + 8) + v4;
      goto LABEL_29;
    case 22:
      v12 = *(_QWORD *)(a1 + 8) + 1;
LABEL_29:
      *(_QWORD *)(a1 + 8) = v12;
      break;
    default:
      v12 = *(_QWORD *)(a1 + 8);
      break;
  }
  if (*(_BYTE *)(a2 + 168))
    v13 = 1;
  else
    v13 = *(_BYTE *)(a2 + 192);
  v14 = v12 + v13;
  v15 = v8 - 11;
  if (v7)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = v8 - 9;
  if (v8 == 5)
    v18 = v14 + 1;
  else
    v18 = v14;
  if (v17 < 2)
    v18 = v14 + 2;
  if (v15 >= 8)
    v16 = v18;
  if (!*(_BYTE *)(a2 + 216))
    v16 = v14;
  *(_QWORD *)(a1 + 8) = v16 - a4;
  return 1;
}

BOOL sub_22E99645C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  int v6;
  int v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1[9] + 8);
  if ((v2 & 0x4000000000000000) == 0)
  {
    sub_22EFF605C(a2);
    v7 = v6;
    sub_22F0D4E74(a2);
    sub_22F30C83C(a1, v7, v8);
  }
  return (v2 & 0x4000000000000000) == 0;
}

uint64_t sub_22E9964C0(_QWORD *a1, uint64_t *a2, int a3, char a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  uint64_t result;
  unsigned __int8 *v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  int v31;
  unsigned int *v32;
  uint64_t v33;
  unsigned __int8 *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unsigned int v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  _BOOL4 v43;
  _BOOL4 v44;
  int v45;
  _BYTE v46[96];
  _BYTE v47[96];
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52[24];

  v8 = *a2;
  v9 = *(_QWORD *)(v8 + 8);
  v10 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)(v11 + 16) & 0xFE00000u) >= 0x8180001 && v11 != 0 && *(_DWORD *)(v11 + 16) == 11)
  {
    v14 = sub_22EB19A28(a1);
    if ((v14 & 1) != 0)
      return 1;
    v8 = v14 & 0xFFFFFFFFFFFFFFFELL;
    *a2 = v14 & 0xFFFFFFFFFFFFFFFELL;
    v9 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8);
    v10 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFF0);
  }
  v15 = *v10;
  if (a3 != 6)
  {
    v18 = *(_QWORD *)(v15 + 8);
    if (*(_DWORD *)(*(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF0) + 16) == 39)
    {
      if ((v18 & 0xF) != 0)
        v15 = (uint64_t)sub_22F10D2BC(v9);
      v19 = v15 & 0xFFFFFFFFFFFFFFF0;
      goto LABEL_37;
    }
    if ((*(_DWORD *)(*(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFF800FF) == 0x6D0000B)
    {
      v19 = *(_QWORD *)(a1[11] + 16816);
      goto LABEL_37;
    }
    if ((a3 - 3) > 1)
    {
LABEL_14:
      sub_22EFF605C(v8);
      sub_22E8FCA40(a1, v16, 0x1200u, 0, (uint64_t)v52);
      if (a3 == 5)
      {
        v51 = 2;
        v17 = sub_22E89519C((uint64_t)v52, &v51);
        v20 = 0;
      }
      else
      {
        if (a3 == 4)
        {
          v51 = 1;
          v17 = sub_22E89519C((uint64_t)v52, &v51);
        }
        else
        {
          if (a3 == 6)
            v21 = 3;
          else
            v21 = 0;
          v51 = v21;
          v17 = sub_22E89519C((uint64_t)v52, &v51);
          if (a3 != 6)
          {
            v20 = 0;
            if (a3 != 3)
              goto LABEL_32;
          }
        }
        if (a3 == 6)
          v20 = 1;
        else
          v20 = 2;
      }
LABEL_32:
      v50 = v20;
      v22 = sub_22E89519C(v17, &v50);
      v49 = *(_QWORD *)(*a2 + 8);
      v23 = sub_22E8901B8(v22, &v49);
      sub_22F0D4E74(*a2);
      v48 = v24;
      sub_22E8906A0(v23, &v48);
      v25 = v52;
LABEL_33:
      sub_22E903BEC(v25);
      return 1;
    }
  }
  if ((sub_22F1107D8(v15) & 1) == 0)
  {
    v8 = *a2;
    goto LABEL_14;
  }
  v19 = sub_22F36D7FC(a1[11]);
LABEL_37:
  if ((sub_22E9969B8((uint64_t)a1, (unint64_t *)a2, v19) & 1) != 0)
    return 1;
  if ((a4 & 1) == 0)
  {
    if ((a3 - 1) > 1)
      return 0;
    result = sub_22EFFBE1C(*a2, a1[11], 1);
    if ((_DWORD)result)
    {
      sub_22EFF605C(*a2);
      if (a3 == 1)
        v39 = 6935;
      else
        v39 = 6934;
      sub_22E8FCA40(a1, v38, v39, 0, (uint64_t)v52);
      sub_22F0D4E74(*a2);
      v49 = v40;
      sub_22E8906A0((uint64_t)v52, &v49);
      sub_22E903BEC(v52);
      return 0;
    }
    return result;
  }
  v27 = (unsigned __int8 *)*a2;
  if (a3 == 1)
  {
    v28 = sub_22E996A44(a1[11], v27);
    if (!v28 || ((*(_DWORD *)(v28 + 28) & 0x7Eu) - 52 <= 5 ? (v30 = v29 == 0) : (v30 = 1), !v30))
    {
      sub_22EFF605C(*a2);
      sub_22E8FCA40(a1, v31, 0x11E9u, 0, (uint64_t)v47);
      v25 = (unsigned int *)v47;
      goto LABEL_33;
    }
    return 0;
  }
  do
  {
    v32 = (unsigned int *)v27;
    LODWORD(v33) = *v27;
    if (v33 > 0xD5)
    {
      if ((_DWORD)v33 == 233)
      {
        LODWORD(v33) = *(_DWORD *)v27;
        if ((*(_DWORD *)v27 & 0x7C0000) != 0x300000)
          break;
        v34 = v27 + 16;
      }
      else
      {
        if ((_DWORD)v33 != 214)
          break;
        v34 = v27 + 24;
      }
    }
    else if ((_DWORD)v33 == 155)
    {
      if ((**((_DWORD **)v27 + 2) & 0x18000) != 0)
        goto LABEL_73;
      v34 = v27 + 24;
      if (!v27[48])
        v34 = v27 + 32;
      LOBYTE(v33) = -101;
    }
    else
    {
      if ((_DWORD)v33 != 176)
        break;
      v33 = *((unsigned int *)v27 + 5);
      if ((_DWORD)v33 == -1)
        goto LABEL_73;
      v34 = &v27[8 * v33 + 40];
      LOBYTE(v33) = -80;
    }
    v27 = *(unsigned __int8 **)v34;
  }
  while (*(unsigned int **)v34 != v32);
  if ((v33 + 113) >= 0xFBu && sub_22EFFA8F0((uint64_t)v32) == 1257)
  {
    v35 = (unint64_t)&v32[2 * (((unint64_t)*v32 >> 18) & 1)] + ((unint64_t)*v32 >> 24);
    v36 = *(_QWORD *)(v35 + 8);
    v37 = *(_QWORD *)(v35 + 16);
    goto LABEL_74;
  }
LABEL_73:
  v36 = 0;
  v37 = 0;
LABEL_74:
  if (!(v36 | v37))
  {
    v36 = *a2;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*a2 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) != 39)
    {
      v42 = 0;
      goto LABEL_86;
    }
    v37 = 0;
    goto LABEL_79;
  }
  if (v36)
  {
LABEL_79:
    v41 = sub_22E996A44(a1[11], (unsigned __int8 *)v36);
    if (!v41 || (*(_DWORD *)(v41 + 28) & 0x7Fu) - 60 > 6)
    {
      if (!v37)
      {
LABEL_88:
        sub_22EFF605C(*a2);
        sub_22E8FCA40(a1, v45, 0x11E8u, 0, (uint64_t)v46);
        v25 = (unsigned int *)v46;
        goto LABEL_33;
      }
      v42 = 1;
      v36 = v37;
      goto LABEL_86;
    }
  }
  v42 = 0;
  result = 0;
  v36 = v37;
  if (!v37)
    return result;
LABEL_86:
  v43 = sub_22F007CB0((unsigned __int8 *)v36, a1[11], 0);
  if ((v42 & 1) != 0)
    goto LABEL_88;
  v44 = v43;
  result = 0;
  if (!v44)
    goto LABEL_88;
  return result;
}

uint64_t sub_22E996958(_QWORD *a1, unint64_t *a2)
{
  int v5;

  if ((sub_22E9969B8((uint64_t)a1, a2, *(_QWORD *)(a1[11] + 16480)) & 1) != 0)
    return 1;
  if ((*(_BYTE *)(*a2 + 2) & 1) != 0)
    return 0;
  return sub_22F30C8B4(a1, *a2, &v5);
}

uint64_t sub_22E9969B8(uint64_t a1, unint64_t *a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  if ((*(_BYTE *)(*a2 + 1) & 0x80) != 0)
    return 0;
  v5 = *(_QWORD *)(a1 + 88);
  v11 = 0;
  v8 = 1;
  v9 = 0;
  v10 = sub_22EF60188(v5, a3);
  v12 = 0;
  v6 = sub_22EC45014(a1, &v8, 0, *a2, 0, 0);
  result = v6 & 1;
  if ((v6 & 1) == 0)
    *a2 = v6 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

unint64_t sub_22E996A44(uint64_t a1, unsigned __int8 *a2)
{
  int v2;
  unint64_t v3;
  unsigned int v4;
  BOOL v5;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v7 = 0;
  v8 = 0;
  LODWORD(v9) = 0;
  v2 = sub_22F005120(a2, (uint64_t)&v7, a1, 0);
  v3 = 0;
  v4 = v9;
  if (v2 && (_DWORD)v9 == 7)
  {
    v3 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    v5 = (v10 & 3) != 0 || v3 == 0;
    if (v5 || sub_22E4E9AA8(v10 & 0xFFFFFFFFFFFFFFFCLL))
      v3 = 0;
    v4 = v9;
  }
  if (v4 >= 2)
    sub_22EF53BC0(&v9);
  return v3;
}

uint64_t sub_22E996B28(_QWORD *a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28[24];

  v4 = *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24));
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                + 16) != 38)
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v11, 0x1121u, 0, (uint64_t)v28);
    v12 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
    if (v12)
    {
      if ((*(_DWORD *)(v12 + 28) & 0x7Eu) - 52 >= 6)
        v13 = 0;
      else
        v13 = v12;
    }
    else
    {
      v13 = 0;
    }
    v27 = v13;
    v14 = sub_22E890024((uint64_t)v28, &v27);
    sub_22F0D4E74(v4);
    v26 = v15;
    v16 = &v26;
    goto LABEL_14;
  }
  v5 = *(_QWORD *)(v4 + 16);
  if ((*(_BYTE *)(v5 + 29) & 1) == 0)
    goto LABEL_18;
  sub_22EFC8E88(v5);
  v7 = *(uint64_t **)v6;
  v8 = *(unsigned int *)(v6 + 8);
  v9 = *(uint64_t **)v6;
  if ((_DWORD)v8)
  {
    v10 = 8 * v8;
    v9 = *(uint64_t **)v6;
    while (*(_WORD *)(*v9 + 32) != 491)
    {
      ++v9;
      v10 -= 8;
      if (!v10)
        goto LABEL_18;
    }
  }
  if (v9 == &v7[v8])
  {
LABEL_18:
    v18 = 0;
  }
  else
  {
    do
    {
      v19 = *v7++;
      v18 = v19;
    }
    while (*(_WORD *)(v19 + 32) != 491);
  }
  v20 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
  if (v20 && (*(_DWORD *)(v20 + 28) & 0x7Eu) - 52 >= 6)
    v20 = 0;
  v21 = sub_22EFC01DC(v20, 0) - 1266;
  if (v21 <= 0xD)
  {
    if (((1 << v21) & 0x1565) != 0)
    {
      if (v18 && !sub_22F311490(v18))
      {
        sub_22F0D5A50(v4);
        sub_22E8FCA40(a1, v25, 0x1122u, 0, (uint64_t)v28);
        v23 = sub_22F2F30F4((uint64_t)v28, (uint64_t)"read_only");
        goto LABEL_28;
      }
    }
    else if (!v18 || !sub_22F27A238(v18))
    {
      sub_22F0D5A50(v4);
      sub_22E8FCA40(a1, v22, 0x1122u, 0, (uint64_t)v28);
      v23 = sub_22F2F30F4((uint64_t)v28, (uint64_t)"write_only");
LABEL_28:
      v14 = v23;
      sub_22F0D4E74(v4);
      v27 = v24;
      v16 = &v27;
LABEL_14:
      sub_22E8906A0(v14, v16);
      sub_22E903BEC(v28);
      return 1;
    }
  }
  return 0;
}

uint64_t sub_22E996D74(_QWORD *a1, unsigned int *a2, unsigned int a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22[24];

  v5 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1)] + ((unint64_t)*a2 >> 24);
  v6 = *(_QWORD *)(v5 + 8 + 8 * a3);
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) + 8) & 0xFFFFFFFFFFFFFFF0) + 32);
  v8 = *(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v8 && *(_BYTE *)(v8 + 16) == 39
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39 && (v8 = sub_22F10CF48(v8)) != 0)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
    if ((*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF0) + 8) | v7 & 7) == (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 8) | v9 & 7))
      return 0;
  }
  sub_22EFFAE7C(a2);
  sub_22E8FCA40(a1, v10, 0x1123u, 0, (uint64_t)v22);
  v11 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
  if (v11)
  {
    if ((*(_DWORD *)(v11 + 28) & 0x7Eu) - 52 >= 6)
      v12 = 0;
    else
      v12 = v11;
  }
  else
  {
    v12 = 0;
  }
  v21 = v12;
  v13 = sub_22E890024((uint64_t)v22, &v21);
  v20 = sub_22EF5B848(a1[11], v7, 0);
  v14 = sub_22E8901B8(v13, (uint64_t *)&v20);
  v19 = *(_QWORD *)(v6 + 8);
  v15 = sub_22E8901B8(v14, &v19);
  sub_22F0D4E74(v6);
  v18 = v16;
  sub_22E8906A0(v15, &v18);
  sub_22E903BEC(v22);
  return 1;
}

uint64_t sub_22E996F00(_QWORD *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  int v18;
  unint64_t v19;
  unsigned int v21[24];
  __int128 v22;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((*((_QWORD *)a2 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                             + 32) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
    v5 = *(_BYTE *)(v4 + 16) == 26;
  else
    v5 = 0;
  if (!v5)
    v4 = sub_22F10CF48(v4);
  if ((unsigned __int16)(*(_QWORD *)(v4 + 16) >> 38))
  {
    v6 = 0;
    v7 = 0;
    v8 = v4 + 40;
    v9 = 8 * (unsigned __int16)(*(_QWORD *)(v4 + 16) >> 38);
    do
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v8 + v6) & 0xFFFFFFFFFFFFFFF0);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39
        || ((v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22F10ACF8(v10) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
          ? (v12 = (*(_DWORD *)(v11 + 16) & 0xFF800FF) == 86507531)
          : (v12 = 0),
            !v12
         || (v13 = *(_QWORD *)((sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v8 + v6) & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0)
                             + 8),
             (v13 & 8) == 0)
         || (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0x1000))
      {
        v14 = *a2;
        if (v14 == 161)
        {
          if ((a2[2] & 4) != 0)
          {
            v22 = *((_OWORD *)a2 + 2);
            v18 = sub_22F0AB0EC((unint64_t *)&v22);
          }
          else
          {
            v18 = *((_DWORD *)a2 + 1);
          }
        }
        else if (v14 == 114)
        {
          v15 = *(_QWORD *)(*(_QWORD *)(*((_QWORD *)a2 + 2) + 72) + v6);
          v16 = *(_QWORD *)(v15 + 56);
          if ((v16 & 4) != 0 && (v19 = v16 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v19 + 16)))
            v17 = **(int ***)(v19 + 24);
          else
            v17 = (int *)(v15 + 64);
          v18 = *v17;
        }
        else
        {
          v18 = 0;
        }
        sub_22E8FCA40(a1, v18, 0x1129u, 0, (uint64_t)v21);
        sub_22E903BEC(v21);
        v7 = 1;
      }
      v6 += 8;
    }
    while (v9 != v6);
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_22E9970D0(_QWORD *a1, unsigned int *a2, uint64_t a3, unsigned int a4)
{
  uint64_t v7;
  BOOL v8;
  unsigned int v9;
  unsigned int v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  unsigned int v19;
  char v20;
  int v21;
  unsigned int v23[24];
  unsigned int v24[24];

  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) + 32) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
    v8 = *(_BYTE *)(v7 + 16) == 26;
  else
    v8 = 0;
  if (!v8)
    v7 = sub_22F10CF48(v7);
  v9 = a2[4];
  if (v9 != a4 + (unsigned __int16)(*(_QWORD *)(v7 + 16) >> 38))
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v12, 0x112Cu, 0, (uint64_t)v23);
    sub_22E903BEC(v23);
    v11 = 1;
    return v11 & 1;
  }
  v10 = v9 - 1;
  if (v9 - 1 >= a4)
  {
    v11 = 0;
    while (1)
    {
      v13 = *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2 + 2 * a4] + ((unint64_t)*a2 >> 24));
      v14 = sub_22EF67C8C(a1[11]);
      v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v16 = *(_DWORD *)(v15 + 16);
      if (v15)
        v17 = v16 == 11;
      else
        v17 = 0;
      if (v17)
      {
        if (((*(_DWORD *)(v15 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
          goto LABEL_24;
      }
      else if (v15 && v16 == 44)
      {
        v18 = sub_22F114198(*(_QWORD *)(v15 + 24));
        if ((*(_BYTE *)(v18 + 74) & 1) == 0 && *(_QWORD *)(v18 + 128) <= 7uLL
          || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v15 + 24)) + 76) & 0x80) != 0)
        {
LABEL_24:
          sub_22F0D5A50(v13);
          sub_22E8FCA40(a1, v21, 0x112Bu, 0, (uint64_t)v24);
          sub_22E903BEC(v24);
          v20 = 1;
          goto LABEL_25;
        }
      }
      else if (v16 != 9)
      {
        goto LABEL_24;
      }
      sub_22F0D5A50(v13);
      sub_22E9972C0(a1, v13, v14, v19, 0, 0);
      v20 = 0;
LABEL_25:
      v11 |= v20;
      if (++a4 > v10)
        return v11 & 1;
    }
  }
  v11 = 0;
  return v11 & 1;
}

void sub_22E9972C0(uint64_t a1, unsigned __int8 *a2, unint64_t a3, uint64_t a4, _BYTE *a5, char a6)
{
  uint64_t v8;
  uint64_t v9;
  int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  BOOL v28;
  int v29;
  uint64_t v30;
  BOOL v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  BOOL v47;
  uint64_t v48;
  unsigned int v49;
  BOOL v50;
  char v52;
  uint64_t v53;
  BOOL v54;
  int v55;
  uint64_t v56;
  char v58;
  _BOOL4 v59;
  uint64_t v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned __int8 *v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BOOL4 v73;
  llvm::APFloatBase *v74;
  uint64_t v75;
  unsigned int v76;
  BOOL v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  llvm::APFloatBase *v81;
  std::string::size_type v82;
  const void *v83;
  std::string *v84;
  int v85;
  int v86;
  std::string::size_type v87;
  size_t v88;
  void *v89;
  void *p_p;
  _BOOL8 v91;
  char v92;
  unsigned int v93;
  std::string::size_type v94;
  uint64_t v95;
  std::string *v96;
  int v97;
  const char *v98;
  size_t v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  unsigned int v103;
  int v104;
  int v105;
  uint64_t v106;
  unsigned int v107;
  uint64_t v108;
  int v109;
  BOOL v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  char v115;
  unsigned int v116;
  unint64_t v117;
  unsigned int v118;
  uint64_t v119;
  llvm::APFloatBase *v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  unsigned __int8 *v124;
  _QWORD *v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  BOOL v137;
  uint64_t v138;
  uint64_t v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  char v147;
  unint64_t v148;
  unint64_t v149;
  unint64_t v150;
  char v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  uint64_t v160;
  size_t v161;
  uint64_t v162;
  void *v163;
  _BYTE *v164;
  uint64_t v165;
  uint64_t v166;
  void *v167;
  size_t v168;
  unsigned __int8 *v169;
  std::string::size_type v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  int v181;
  std::string::size_type v182;
  _BYTE *v183;
  size_t v184;
  void *p_src;
  size_t v186;
  uint64_t v187;
  unsigned __int8 *v188;
  std::string::size_type v189;
  uint64_t v190;
  std::string::size_type v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unsigned int v195;
  const char *v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int v199;
  _DWORD *v200;
  unsigned int v201;
  std::string::size_type v202;
  std::string *v203;
  int v204;
  int v205;
  uint64_t v206;
  unsigned __int8 *v207;
  uint64_t v208;
  unsigned __int8 v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned __int8 *v213;
  unsigned __int8 *v214;
  BOOL v215;
  _BOOL4 v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  unint64_t v221;
  uint64_t v222;
  unsigned __int8 *v223;
  uint64_t v224;
  unsigned int v225;
  unsigned int v226;
  size_t v227;
  void *v228;
  _BYTE *v229;
  int v230;
  int v231;
  uint64_t v232;
  std::string *v233;
  size_t v234;
  unsigned __int8 *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  uint64_t v244;
  uint64_t v245;
  int v246;
  int v247;
  std::string::size_type v248;
  _BYTE *v249;
  size_t v250;
  void *v251;
  size_t v252;
  uint64_t v253;
  unsigned __int8 *v254;
  std::string::size_type v255;
  uint64_t v256;
  std::string::size_type v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  _DWORD *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  unint64_t v265;
  uint64_t v266;
  BOOL v267;
  int v268;
  int v269;
  uint64_t v270;
  std::string *v271;
  size_t size;
  unsigned __int8 *v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  void *v277;
  unsigned int v278;
  uint64_t v279;
  unsigned int v280;
  _DWORD *v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  _DWORD *v286;
  unsigned int v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  std::string *v291;
  size_t v292;
  _BYTE *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  std::string::size_type v297;
  uint64_t v298;
  BOOL v299;
  int v300;
  unsigned __int8 *v301;
  uint64_t v302;
  int v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  unsigned int __dst;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  std::string *v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  int v321;
  unsigned int v322[2];
  unsigned int v323[2];
  unsigned int v324[2];
  unsigned int v325[2];
  unsigned int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t *v329;
  uint64_t v330;
  std::string v331;
  void *__p;
  unint64_t v333;
  int64_t v334;
  unsigned int v335[24];
  uint64_t v336;
  uint64_t v337;
  char v338;
  BOOL v339[8];
  void *__src;
  __int128 __len;
  __int128 v342;
  uint64_t v343;
  char v344;
  _BYTE v345[24];
  _BYTE v346[40];
  std::string v347;
  void **v348;
  __int128 v349;
  void *v350;
  unsigned int v351;
  std::string::value_type v352;
  int v353;
  uint64_t v354;

  v354 = *MEMORY[0x24BDAC8D0];
  if ((*(_DWORD *)a2 & 0x18000) != 0)
    return;
  v8 = *(_QWORD *)(*(_QWORD *)((*((_QWORD *)a2 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*(_QWORD *)((a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v8 == v9)
    return;
  if ((*(_BYTE *)(v9 + 17) & 4) != 0)
    return;
  v330 = a4;
  if (!(_DWORD)a4)
    return;
  v329 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 6)
  {
    sub_22EFF605C((uint64_t)a2);
    sub_22E8FCA40((_QWORD *)a1, v14, 0x1855u, 0, (uint64_t)v335);
    sub_22E903BEC(v335);
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v15)
    v16 = (*(_DWORD *)(v15 + 16) & 0xFF800FF) == 87031819;
  else
    v16 = 0;
  if (v16)
  {
    v18 = *a2;
    if ((v18 - 201) < 4)
    {
      v19 = *((_QWORD *)a2 + 1);
      v20 = (_QWORD *)a1;
      v21 = (uint64_t)a2;
      v22 = a3;
      v23 = v330;
      v24 = 6654;
      goto LABEL_118;
    }
    if (v18 == 225)
    {
      v19 = *((_QWORD *)a2 + 1);
      v20 = (_QWORD *)a1;
      v21 = (uint64_t)a2;
      v22 = a3;
      v23 = v330;
      v24 = 6656;
      goto LABEL_118;
    }
    v25 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    if (v25 == 39 || ((v26 = v25 - 25, v27 = (v25 & 0xFE) - 2, v26 >= 2) ? (v28 = v27 > 3) : (v28 = 0), !v28))
      sub_22E9882C0(a1, a2, 0, 0, v330 | (a4 << 32));
  }
  if (sub_22E99A19C(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 3440), a3) && sub_22F110744(v8, *(_QWORD *)(a1 + 88)))
  {
    LOWORD(__src) = 0;
    *(_QWORD *)&__len = 0;
    DWORD2(__len) = 0;
    if (sub_22F00554C((uint64_t)a2, (uint64_t)&__src, *(_QWORD *)(a1 + 88), 2, 0))
    {
      if (!sub_22E508590((uint64_t)&v342, 1) || !sub_22E508590((uint64_t)&v342, 0))
        goto LABEL_17;
      sub_22E8FCA40((_QWORD *)a1, v330, 0x19E5u, 0, (uint64_t)&v348);
      *(_QWORD *)v345 = v346;
      *(_OWORD *)&v345[8] = xmmword_22F455490;
      llvm::APInt::toString();
      v82 = *(_QWORD *)&v345[8];
      if (*(_QWORD *)&v345[8] <= 0x7FFFFFFFFFFFFFF7uLL)
      {
        v83 = *(const void **)v345;
        if (*(_QWORD *)&v345[8] >= 0x17uLL)
        {
          v175 = (*(_QWORD *)&v345[8] & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((*(_QWORD *)&v345[8] | 7) != 0x17)
            v175 = *(_QWORD *)&v345[8] | 7;
          v176 = v175 + 1;
          v84 = (std::string *)operator new(v175 + 1);
          v347.__r_.__value_.__l.__size_ = v82;
          v347.__r_.__value_.__r.__words[2] = v176 | 0x8000000000000000;
          v347.__r_.__value_.__r.__words[0] = (std::string::size_type)v84;
        }
        else
        {
          *((_BYTE *)&v347.__r_.__value_.__s + 23) = v345[8];
          v84 = &v347;
          if (!*(_QWORD *)&v345[8])
            goto LABEL_379;
        }
        memmove(v84, v83, v82);
LABEL_379:
        v84->__r_.__value_.__s.__data_[v82] = 0;
        if (*(_BYTE **)v345 != v346)
          free(*(void **)v345);
        v177 = sub_22F2F3734((uint64_t)&v348, (void **)&v347.__r_.__value_.__l.__data_);
        sub_22E99A200(*(_DWORD **)(a1 + 72), *(_QWORD **)(a1 + 112), a2, v177);
        if (SHIBYTE(v347.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v347.__r_.__value_.__l.__data_);
        sub_22E903BEC((unsigned int *)&v348);
LABEL_17:
        if (DWORD2(__len) >= 2)
        {
          v17 = (uint64_t *)&__len + 1;
LABEL_19:
          sub_22EF53BC0(v17);
          return;
        }
        return;
      }
LABEL_707:
      abort();
    }
    if (DWORD2(__len) >= 2)
      sub_22EF53BC0((uint64_t *)&__len + 1);
  }
  v29 = *a2;
  if (v29 == 203)
  {
    sub_22E99A48C(a1, v9 & 0xFFFFFFFFFFFFFFF0, (uint64_t)a2);
  }
  else if (v29 == 201)
  {
    sub_22E99A3A0(a1, v9 & 0xFFFFFFFFFFFFFFF0, (uint64_t)a2);
  }
  if (*(unsigned __int8 *)(v8 + 16) - 55 <= 1)
  {
    v30 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v30)
      v31 = *(_DWORD *)(v30 + 16) == 11;
    else
      v31 = 0;
    if (v31)
    {
      v32 = ((*(_DWORD *)(v30 + 16) >> 19) & 0x1FF) - 48;
      v28 = v32 > 0x30;
      v33 = (1 << v32) & 0x1000000000FFFLL;
      if (!v28 && v33 != 0)
      {
        v58 = sub_22F36E9C0(*(_QWORD *)(a1 + 88), v9 & 0xFFFFFFFFFFFFFFF0, v8 & 0xFFFFFFFFFFFFFFF0);
        if ((v58 & 1) != 0
          || (sub_22F36EA10(*(_QWORD *)(a1 + 88), v9 & 0xFFFFFFFFFFFFFFF0, v8 & 0xFFFFFFFFFFFFFFF0) & 1) != 0)
        {
          return;
        }
      }
    }
    if (*(unsigned __int8 *)(v9 + 16) - 55 >= 2)
    {
      if (sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
        return;
      v19 = *((_QWORD *)a2 + 1);
      v20 = (_QWORD *)a1;
      v21 = (uint64_t)a2;
      v22 = a3;
      v23 = v330;
      v24 = 6657;
      goto LABEL_118;
    }
    v35 = sub_22EF5CDF0(*(_QWORD *)(a1 + 88), v8);
    if (v35 == sub_22EF5CDF0(*(_QWORD *)(a1 + 88), v9))
      return;
    v8 = *(_QWORD *)(*(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFFFF0);
    v9 = *(_QWORD *)(*(_QWORD *)(v9 + 32) & 0xFFFFFFFFFFFFFFF0);
  }
  if (v9 && *(unsigned __int8 *)(v9 + 16) - 57 >= 0xFFFFFFFE)
    v9 = *(_QWORD *)(*(_QWORD *)(v9 + 32) & 0xFFFFFFFFFFFFFFF0);
  v36 = *(unsigned __int8 *)(v8 + 16);
  if (v36 == 12)
  {
    if (*(_BYTE *)(v9 + 16) != 12)
    {
      if (sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
        return;
      v56 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v56 && (*(_DWORD *)(v56 + 16) & 0xFF800FF) == 87031819)
        return;
      if ((**(_QWORD **)(a1 + 72) & 0x100) != 0)
        v24 = 3563;
      else
        v24 = 6628;
      goto LABEL_117;
    }
    v8 = *(_QWORD *)(*(_QWORD *)(v8 + 32) & 0xFFFFFFFFFFFFFFF0);
    v9 = *(_QWORD *)(*(_QWORD *)(v9 + 32) & 0xFFFFFFFFFFFFFFF0);
    v36 = *(unsigned __int8 *)(v8 + 16);
  }
  if (v36 == 11)
    v37 = v8;
  else
    v37 = 0;
  if (*(_BYTE *)(v9 + 16) == 11)
    v38 = v9;
  else
    v38 = 0;
  if (!v37 || ((*(_DWORD *)(v37 + 16) >> 19) & 0x1FEu) - 210 > 7)
  {
    v45 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
    v46 = *(_DWORD *)(v45 + 16);
    if (v45)
      v47 = *(_DWORD *)(v45 + 16) == 11;
    else
      v47 = 0;
    if (v47 && ((v46 >> 19) & 0x1FE) - 186 <= 0x17)
    {
      v48 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
      v49 = *(_DWORD *)(v48 + 16);
      if (v48)
        v50 = v49 == 11;
      else
        v50 = 0;
      if (v50 && ((v49 >> 19) & 0x1FE) - 186 <= 0xB)
      {
        *(_QWORD *)v322 = v38;
        LOWORD(v348) = 0;
        *(_QWORD *)&v349 = 0;
        DWORD2(v349) = 0;
        v52 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
           || *(_BYTE *)(a1 + 3209) != 0;
        if (sub_22F0057E4((unint64_t)a2, (uint64_t)&v348, *(_QWORD *)(a1 + 88), 2, v52))
        {
          LODWORD(__len) = v351;
          if (v351 > 0x40)
            llvm::APInt::initSlowCase((llvm::APInt *)&__src, (const llvm::APInt *)&v350);
          else
            __src = v350;
          BYTE4(__len) = v352;
          DWORD2(__len) = v353;
          sub_22F36F9F4(*(_QWORD *)(a1 + 88), a3);
          sub_22F36FA2C(*(_QWORD *)(a1 + 88), a3);
          if ((int)llvm::APFixedPoint::compare((llvm::APFixedPoint *)&__src, (const llvm::APFixedPoint *)v345) > 0
            || (llvm::APFixedPoint::compare((llvm::APFixedPoint *)&__src, (const llvm::APFixedPoint *)&v347) & 0x80000000) != 0)
          {
            sub_22EFF605C((uint64_t)a2);
            v269 = v268;
            v270 = *(_QWORD *)(a1 + 88) + 2128;
            __p = 0;
            v333 = v270;
            LODWORD(v334) = 6632;
            sub_22F3116D8(&v331);
            if ((v331.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v271 = &v331;
            else
              v271 = (std::string *)v331.__r_.__value_.__r.__words[0];
            if ((v331.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              size = *((_BYTE *)&v331.__r_.__value_.__s + 23) & 0x7F;
            else
              size = v331.__r_.__value_.__l.__size_;
            sub_22E3B89A8((unsigned __int8 **)&__p, v271, size);
            v273 = (unsigned __int8 *)__p;
            if (!__p)
            {
              v273 = (unsigned __int8 *)sub_22E3B8AAC(v333);
              __p = v273;
            }
            v273[*v273 + 1] = 9;
            v274 = __p;
            v275 = *(unsigned __int8 *)__p;
            *(_BYTE *)__p = v275 + 1;
            v274[v275 + 2] = a3;
            sub_22F0D4E74((uint64_t)a2);
            sub_22E4D6448((uint64_t)(v274 + 42), v276, 1);
            v277 = __p;
            if (!__p)
            {
              v277 = (void *)sub_22E3B8AAC(v333);
              __p = v277;
            }
            sub_22E4D6448((uint64_t)v277 + 336, v330 | (a4 << 32), 1);
            *(_QWORD *)v339 = a2;
            sub_22EB52944(a1, v269, v339, 1uLL, (uint64_t *)&__p);
            if (SHIBYTE(v331.__r_.__value_.__r.__words[2]) < 0)
              operator delete(v331.__r_.__value_.__l.__data_);
            if (__p && v333)
              sub_22E3BB10C(v333, (unint64_t)__p);
            if (LODWORD(v347.__r_.__value_.__r.__words[1]) >= 0x41 && v347.__r_.__value_.__r.__words[0])
              MEMORY[0x2348A0E84](v347.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
            if (*(_DWORD *)&v345[8] >= 0x41u && *(_QWORD *)v345)
              MEMORY[0x2348A0E84](*(_QWORD *)v345, 0x1000C8000313F17);
            if (__len >= 0x41 && __src)
              MEMORY[0x2348A0E84](__src, 0x1000C8000313F17);
            if (DWORD2(v349) >= 2)
            {
              v17 = (uint64_t *)&v349 + 1;
              goto LABEL_19;
            }
            return;
          }
          if (LODWORD(v347.__r_.__value_.__r.__words[1]) >= 0x41 && v347.__r_.__value_.__r.__words[0])
            MEMORY[0x2348A0E84](v347.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
          if (*(_DWORD *)&v345[8] >= 0x41u && *(_QWORD *)v345)
            MEMORY[0x2348A0E84](*(_QWORD *)v345, 0x1000C8000313F17);
          if (__len >= 0x41 && __src)
            MEMORY[0x2348A0E84](__src, 0x1000C8000313F17);
        }
        if (DWORD2(v349) >= 2)
          sub_22EF53BC0((uint64_t *)&v349 + 1);
        v38 = *(_QWORD *)v322;
LABEL_214:
        if (v37)
          v101 = v38 == 0;
        else
          v101 = 1;
        if (!v101)
        {
          v108 = *(_QWORD *)(*(_QWORD *)(v37 + 8) & 0xFFFFFFFFFFFFFFF0);
          v109 = *(_DWORD *)(v108 + 16);
          if (v108)
            v110 = v109 == 11;
          else
            v110 = 0;
          if (v110)
          {
            if (((*(_DWORD *)(v108 + 16) >> 19) & 0x1FEu) - 166 < 0x14)
              goto LABEL_240;
          }
          else if (v108 && v109 == 44)
          {
            *(_QWORD *)v325 = v38;
            v111 = sub_22F114198(*(_QWORD *)(v108 + 24));
            if ((*(_BYTE *)(v111 + 74) & 1) != 0 || *(_QWORD *)(v111 + 128) > 7uLL)
            {
              v112 = sub_22F114198(*(_QWORD *)(v108 + 24));
              v38 = *(_QWORD *)v325;
              if ((*(_BYTE *)(v112 + 76) & 0x80) == 0)
              {
LABEL_240:
                v113 = v38;
                if (sub_22F10E0EC(v38) && (a6 & 1) == 0)
                {
                  v114 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) != 4
                      && *(_BYTE *)(a1 + 3209) == 0;
                  v115 = !v114;
                  v116 = sub_22E99A668(*(_QWORD *)(a1 + 88), (uint64_t)a2, v115);
                  v117 = v113 & 0xFFFFFFFFFFFFFFF0;
                  sub_22EF5B2E0(*(_QWORD *)(a1 + 88), v117);
                  v118 = llvm::APFloatBase::semanticsPrecision();
                  if (v116)
                  {
                    if (v118 && v118 < v116)
                    {
                      sub_22F00905C((uint64_t)a2, *(_QWORD *)(a1 + 88), 0, (uint64_t)&v347);
                      if (v347.__r_.__value_.__s.__data_[16])
                      {
                        v119 = sub_22EF5B2E0(*(_QWORD *)(a1 + 88), v117);
                        sub_22E99C474((llvm::APFloatBase *)&v345[8], v119);
                        v120 = (llvm::APFloatBase *)sub_22E51FB5C((llvm::APFloatBase *)v345);
                        if ((_DWORD)v120)
                        {
                          v348 = &v350;
                          v349 = xmmword_22F44E330;
                          llvm::APInt::toString();
                          __src = &v342;
                          __len = xmmword_22F44E330;
                          sub_22E99A6BC((llvm::APFloatBase *)v345);
                          sub_22EFF605C((uint64_t)a2);
                          v320 = v121;
                          v122 = *(_QWORD *)(a1 + 88) + 2128;
                          __p = 0;
                          v333 = v122;
                          LODWORD(v334) = 6645;
                          sub_22E3B89A8((unsigned __int8 **)&__p, v348, v349);
                          sub_22E3B89A8((unsigned __int8 **)&__p, __src, __len);
                          v123 = *((_QWORD *)a2 + 1);
                          v124 = (unsigned __int8 *)__p;
                          if (!__p)
                          {
                            v124 = (unsigned __int8 *)sub_22E3B8AAC(v333);
                            __p = v124;
                          }
                          v124[*v124 + 1] = 9;
                          v125 = __p;
                          v126 = *(unsigned __int8 *)__p;
                          *(_BYTE *)__p = v126 + 1;
                          v125[v126 + 2] = v123;
                          *((_BYTE *)v125 + (v126 + 1) + 1) = 9;
                          v127 = __p;
                          v128 = *(unsigned __int8 *)__p;
                          *(_BYTE *)__p = v128 + 1;
                          v127[v128 + 2] = a3;
                          sub_22F0D4E74((uint64_t)a2);
                          sub_22E4D6448((uint64_t)(v127 + 42), v129, 1);
                          v130 = __p;
                          if (!__p)
                          {
                            v130 = (void *)sub_22E3B8AAC(v333);
                            __p = v130;
                          }
                          sub_22E4D6448((uint64_t)v130 + 336, v330 | (a4 << 32), 1);
                          v331.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
                          sub_22EB52944(a1, v320, &v331, 1uLL, (uint64_t *)&__p);
                          if (__p && v333)
                            sub_22E3BB10C(v333, (unint64_t)__p);
                          if (__src != &v342)
                            free(__src);
                          v120 = (llvm::APFloatBase *)v348;
                          if (v348 != &v350)
                            free(v348);
                        }
                        v131 = *(_QWORD *)&v345[8];
                        if (llvm::APFloatBase::PPCDoubleDouble(v120) == v131)
                          sub_22E463170((llvm::APFloatBase *)&v345[16]);
                        else
                          llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v345[8]);
                      }
                      else
                      {
                        sub_22E99B090((_QWORD *)a1, (uint64_t)a2, *((_QWORD *)a2 + 1), a3, v330, 0x19F4u, 0);
                      }
                      if (v347.__r_.__value_.__s.__data_[16]
                        && LODWORD(v347.__r_.__value_.__r.__words[1]) >= 0x41
                        && v347.__r_.__value_.__r.__words[0])
                      {
                        MEMORY[0x2348A0E84](v347.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
                      }
                    }
                  }
                }
              }
            }
          }
          else if (v109 == 9)
          {
            goto LABEL_240;
          }
        }
        __p = (void *)a3;
        v102 = *(_QWORD *)(a1 + 104);
        sub_22EFF605C((uint64_t)a2);
        if (sub_22F1CF68C(*(_QWORD *)(v102 + 32), 0x19FDu, v103, v102) == 1)
          goto LABEL_272;
        if ((*a2 + 118) < 5u)
          goto LABEL_272;
        v104 = sub_22EFFBE1C((unint64_t)a2, *(_QWORD *)(a1 + 88), 2);
        if ((v104 - 5) < 0xFFFFFFFE)
          goto LABEL_272;
        v105 = v104;
        v106 = *(_QWORD *)(*(_QWORD *)(*v329 + 8) & 0xFFFFFFFFFFFFFFF0);
        v107 = *(_DWORD *)(v106 + 16);
        if (v107 > 0xB)
        {
          if (v107 != 12)
          {
            if (v107 != 44)
              goto LABEL_272;
            v132 = sub_22F114198(*(_QWORD *)(v106 + 24));
            if ((*(_BYTE *)(v132 + 74) & 1) == 0 && *(_QWORD *)(v132 + 128) < 8uLL)
              goto LABEL_272;
          }
        }
        else if (v107 != 9 && (v107 != 11 || ((*(_DWORD *)(v106 + 16) >> 19) & 0x1FFu) - 166 >= 0x35))
        {
          goto LABEL_272;
        }
        v133 = *(_QWORD *)(*(_QWORD *)(*v329 + 8) & 0xFFFFFFFFFFFFFFF0);
        if (v133)
        {
          if ((*(_DWORD *)(v133 + 16) & 0xFF800FF) == 0x6D0000B)
            goto LABEL_272;
        }
        sub_22F0D4E74((uint64_t)a2);
        v326 = sub_22F423B3C(*(_QWORD **)(a1 + 112), v195);
        v321 = sub_22F423B3C(*(_QWORD **)(a1 + 112), v330);
        if (v105 == 4 && (v326 & 0x80000000) != 0)
        {
          v196 = sub_22F142898(v326, *(_QWORD **)(a1 + 112), *(_DWORD **)(a1 + 72));
          if (v197 == 4 && *(_DWORD *)v196 == 1280070990)
            v326 = sub_22F1E25A4(*(_QWORD **)(a1 + 112), v326);
        }
        v198 = *(_QWORD *)(a1 + 112);
        v315 = v326 & 0x7FFFFFFF;
        v199 = *(_DWORD *)(v198 + 304);
        v313 = v199 + 1;
        if (v199 + 1 > 1)
        {
          if ((v199 & 0x80000000) != 0)
          {
            v240 = -2 - v199;
            v200 = (_DWORD *)(((*(_QWORD *)(*(_QWORD *)(v198 + 224) + 8 * ((-2 - v199) >> 6)) >> (-2
                                                                                                  - v199)) & 1) != 0
                            ? *(_QWORD *)(v198 + 200) + 24 * v240
                            : sub_22F1E1134(v198, v240, 0));
          }
          else
          {
            v200 = (_DWORD *)(*(_QWORD *)(v198 + 184) + 24 * v199);
          }
        }
        else
        {
          v200 = *(_DWORD **)(v198 + 184);
        }
        v241 = v326 & 0x7FFFFFFF;
        if ((*v200 & 0x7FFFFFFFu) > v315)
          goto LABEL_538;
        if (v199 == -2
          || (v313 != *(_DWORD *)(v198 + 192)
            ? ((v313 & 0x80000000) != 0
             ? ((v278 = -3 - v199,
                 ((*(_QWORD *)(*(_QWORD *)(v198 + 224) + 8 * ((-3 - v199) >> 6)) >> (-3 - v199)) & 1) == 0)
              ? (v261 = (_DWORD *)sub_22F1E1134(v198, v278, 0))
              : (v261 = (_DWORD *)(*(_QWORD *)(v198 + 200) + 24 * v278)))
             : (v261 = (_DWORD *)(*(_QWORD *)(v198 + 184) + 24 * v313)),
               v242 = *v261 & 0x7FFFFFFF)
            : (v242 = *(_DWORD *)(v198 + 216)),
              v241 = v326 & 0x7FFFFFFF,
              v242 > v315))
        {
          v314 = *(_DWORD *)(v198 + 304);
        }
        else
        {
LABEL_538:
          v314 = sub_22F1E1EE8(v198, v241);
        }
        v279 = *(_QWORD *)(a1 + 112);
        v316 = v321 & 0x7FFFFFFF;
        v280 = *(_DWORD *)(v279 + 304);
        __dst = v280 + 1;
        if (v280 + 1 > 1)
        {
          if ((v280 & 0x80000000) != 0)
          {
            v282 = -2 - v280;
            v281 = (_DWORD *)(((*(_QWORD *)(*(_QWORD *)(v279 + 224) + 8 * ((-2 - v280) >> 6)) >> (-2
                                                                                                  - v280)) & 1) != 0
                            ? *(_QWORD *)(v279 + 200) + 24 * v282
                            : sub_22F1E1134(v279, v282, 0));
          }
          else
          {
            v281 = (_DWORD *)(*(_QWORD *)(v279 + 184) + 24 * v280);
          }
        }
        else
        {
          v281 = *(_DWORD **)(v279 + 184);
        }
        v283 = v321 & 0x7FFFFFFF;
        if ((*v281 & 0x7FFFFFFFu) > v316)
          goto LABEL_643;
        if (v280 == -2
          || (__dst != *(_DWORD *)(v279 + 192)
            ? ((__dst & 0x80000000) != 0
             ? ((v287 = -3 - v280,
                 ((*(_QWORD *)(*(_QWORD *)(v279 + 224) + 8 * ((-3 - v280) >> 6)) >> (-3 - v280)) & 1) == 0)
              ? (v286 = (_DWORD *)sub_22F1E1134(v279, v287, 0))
              : (v286 = (_DWORD *)(*(_QWORD *)(v279 + 200) + 24 * v287)))
             : (v286 = (_DWORD *)(*(_QWORD *)(v279 + 184) + 24 * __dst)),
               v285 = *v286 & 0x7FFFFFFF)
            : (v285 = *(_DWORD *)(v279 + 216)),
              v283 = v321 & 0x7FFFFFFF,
              v285 > v316))
        {
          v284 = *(_DWORD *)(v279 + 304);
        }
        else
        {
LABEL_643:
          v284 = sub_22F1E1EE8(v279, v283);
        }
        if (v314 != v284)
        {
LABEL_272:
          sub_22E990EC8(a1, v9, a2);
          v134 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
          if (v134 && (*(_DWORD *)(v134 + 16) & 0xFF800FF) == 0x530000B)
            sub_22E99A744((_QWORD *)a1, a2);
          v135 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
          v136 = *(_DWORD *)(v135 + 16);
          if (v135)
            v137 = v136 == 11;
          else
            v137 = 0;
          if (v137)
          {
            if (((*(_DWORD *)(v135 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
              return;
          }
          else if (v135 && v136 == 44)
          {
            v138 = sub_22F114198(*(_QWORD *)(v135 + 24));
            if ((*(_BYTE *)(v138 + 74) & 1) == 0 && *(_QWORD *)(v138 + 128) <= 7uLL
              || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v135 + 24)) + 76) & 0x80) != 0)
            {
              return;
            }
          }
          else if (v136 != 9)
          {
            return;
          }
          v139 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
          v140 = *(_DWORD *)(v139 + 16);
          if (v139 && v140 == 11)
          {
            if (((v140 >> 19) & 0x1FE) - 166 >= 0x14)
              return;
          }
          else if (v139 && v140 == 44)
          {
            v141 = sub_22F114198(*(_QWORD *)(v139 + 24));
            if ((*(_BYTE *)(v141 + 74) & 1) == 0 && *(_QWORD *)(v141 + 128) <= 7uLL
              || (*(_BYTE *)(sub_22F114198(*(_QWORD *)(v139 + 24)) + 76) & 0x80) != 0)
            {
              return;
            }
            v140 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
          }
          else if (v140 != 9)
          {
            return;
          }
          if ((v140 & 0xFF800FF) == 0x530000B)
            return;
          if (sub_22E99A19C(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 3440), a3))
          {
            v142 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
            if (!v142
              || (v143 = *(_DWORD *)(v142 + 16), v143 != 11)
              || (v144 = ((v143 >> 19) & 0x1FF) - 167, v144 > 0xC)
              || ((1 << v144) & 0x1803) == 0)
            {
              if (!sub_22EFF5C90(a2, 0))
              {
                sub_22E8FCA40((_QWORD *)a1, v330, 0x19F2u, 0, (uint64_t)&v348);
                __src = (void *)*((_QWORD *)a2 + 1);
                v160 = sub_22E8901B8((uint64_t)&v348, (uint64_t *)&__src);
                sub_22E99A200(*(_DWORD **)(a1 + 72), *(_QWORD **)(a1 + 112), a2, v160);
                sub_22E903BEC((unsigned int *)&v348);
                return;
              }
            }
          }
          v145 = sub_22E99ADD8(*(_QWORD *)(a1 + 88), v8);
          v147 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
              || *(_BYTE *)(a1 + 3209) != 0;
          v148 = sub_22E99A668(*(_QWORD *)(a1 + 88), (uint64_t)a2, v147);
          v149 = sub_22E99ADD8(*(_QWORD *)(a1 + 88), v9);
          v150 = v149;
          if (v148 > v149)
          {
            LOWORD(v348) = 0;
            *(_QWORD *)&v349 = 0;
            DWORD2(v349) = 0;
            v152 = (*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4
                || *(_BYTE *)(a1 + 3209) != 0;
            if (!sub_22F00554C((uint64_t)a2, (uint64_t)&v348, *(_QWORD *)(a1 + 88), 2, v152))
            {
              if (!sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
              {
                if ((_DWORD)v150 == 32 && sub_22EF6A330(*(_QWORD *)(a1 + 88), *((_QWORD *)a2 + 1)) == 64)
                {
                  v153 = *((_QWORD *)a2 + 1);
                  v154 = (_QWORD *)a1;
                  v155 = (uint64_t)a2;
                  v156 = a3;
                  v157 = v330;
                  v158 = 6643;
                  v159 = 1;
                }
                else
                {
                  v153 = *((_QWORD *)a2 + 1);
                  v154 = (_QWORD *)a1;
                  v155 = (uint64_t)a2;
                  v156 = a3;
                  v157 = v330;
                  v158 = 6646;
                  v159 = 0;
                }
                sub_22E99B090(v154, v155, v153, v156, v157, v158, v159);
              }
LABEL_416:
              if (DWORD2(v349) >= 2)
              {
                v17 = (uint64_t *)&v349 + 1;
                goto LABEL_19;
              }
              return;
            }
            LODWORD(v333) = 32;
            __p = 0;
            BYTE4(v333) = 1;
            if (v351 > 0x40)
            {
              llvm::APInt::assignSlowCase((llvm::APInt *)&__p, (const llvm::APInt *)&v350);
            }
            else
            {
              __p = v350;
              LODWORD(v333) = v351;
            }
            BYTE4(v333) = v352;
            if (sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
            {
LABEL_413:
              if (v333 >= 0x41 && __p)
                MEMORY[0x2348A0E84](__p, 0x1000C8000313F17);
              goto LABEL_416;
            }
            __src = &v342;
            __len = xmmword_22F455490;
            llvm::APInt::toString();
            v161 = __len;
            if ((unint64_t)__len > 0x7FFFFFFFFFFFFFF7)
              goto LABEL_707;
            v162 = v150;
            v163 = __src;
            if ((unint64_t)__len >= 0x17)
            {
              v178 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
              if (((unint64_t)__len | 7) != 0x17)
                v178 = __len | 7;
              v179 = v178 + 1;
              v164 = operator new(v178 + 1);
              *(_QWORD *)&v345[8] = v161;
              *(_QWORD *)&v345[16] = v179 | 0x8000000000000000;
              *(_QWORD *)v345 = v164;
            }
            else
            {
              v345[23] = __len;
              v164 = v345;
              if (!(_QWORD)__len)
                goto LABEL_388;
            }
            memmove(v164, v163, v161);
LABEL_388:
            v164[v161] = 0;
            if (__src != &v342)
              free(__src);
            sub_22E99AEB8(&__src, (const llvm::APInt *)&__p, v162);
            sub_22EFF605C((uint64_t)a2);
            v181 = v180;
            v182 = *(_QWORD *)(a1 + 88) + 2128;
            v347.__r_.__value_.__r.__words[0] = 0;
            v347.__r_.__value_.__l.__size_ = v182;
            LODWORD(v347.__r_.__value_.__r.__words[2]) = 6647;
            if (v345[23] >= 0)
              v183 = v345;
            else
              v183 = *(_BYTE **)v345;
            if (v345[23] >= 0)
              v184 = v345[23] & 0x7F;
            else
              v184 = *(_QWORD *)&v345[8];
            sub_22E3B89A8((unsigned __int8 **)&v347, v183, v184);
            if (__len >= 0)
              p_src = &__src;
            else
              p_src = __src;
            if (__len >= 0)
              v186 = HIBYTE(__len) & 0x7F;
            else
              v186 = __len;
            sub_22E3B89A8((unsigned __int8 **)&v347, p_src, v186);
            v187 = *((_QWORD *)a2 + 1);
            v188 = (unsigned __int8 *)v347.__r_.__value_.__r.__words[0];
            if (!v347.__r_.__value_.__r.__words[0])
            {
              v188 = (unsigned __int8 *)sub_22E3B8AAC(v347.__r_.__value_.__l.__size_);
              v347.__r_.__value_.__r.__words[0] = (std::string::size_type)v188;
            }
            v188[*v188 + 1] = 9;
            v189 = v347.__r_.__value_.__r.__words[0];
            v190 = *v347.__r_.__value_.__l.__data_;
            *v347.__r_.__value_.__l.__data_ = v190 + 1;
            *(_QWORD *)(v189 + 8 * v190 + 16) = v187;
            *(_BYTE *)(v189 + (v190 + 1) + 1) = 9;
            v191 = v347.__r_.__value_.__r.__words[0];
            v192 = *v347.__r_.__value_.__l.__data_;
            *v347.__r_.__value_.__l.__data_ = v192 + 1;
            *(_QWORD *)(v191 + 8 * v192 + 16) = a3;
            sub_22F0D4E74((uint64_t)a2);
            sub_22E4D6448(v191 + 336, v193, 1);
            v194 = v347.__r_.__value_.__r.__words[0];
            if (!v347.__r_.__value_.__r.__words[0])
            {
              v194 = sub_22E3B8AAC(v347.__r_.__value_.__l.__size_);
              v347.__r_.__value_.__r.__words[0] = v194;
            }
            sub_22E4D6448(v194 + 336, v330 | (a4 << 32), 1);
            v331.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
            sub_22EB52944(a1, v181, &v331, 1uLL, (uint64_t *)&v347);
            if (v347.__r_.__value_.__r.__words[0] && v347.__r_.__value_.__l.__size_)
              sub_22E3BB10C(v347.__r_.__value_.__l.__size_, v347.__r_.__value_.__r.__words[0]);
            if (SHIBYTE(__len) < 0)
              operator delete(__src);
            if ((v345[23] & 0x80000000) != 0)
              operator delete(*(void **)v345);
            goto LABEL_413;
          }
          if (v149 > v145 && *a2 == 233 && (*(_DWORD *)a2 & 0x7C0000) == 0x1C0000 && sub_22F110B50(v8))
          {
            if (sub_22F110B50(v9))
            {
              v19 = *((_QWORD *)a2 + 1);
              v20 = (_QWORD *)a1;
              v21 = (uint64_t)a2;
              v22 = a3;
              v23 = v330;
              v24 = 6641;
              goto LABEL_118;
            }
            if (sub_22F110930(v9))
            {
              v19 = *((_QWORD *)a2 + 1);
              v20 = (_QWORD *)a1;
              v21 = (uint64_t)a2;
              v22 = a3;
              v23 = v330;
              v24 = 6652;
              goto LABEL_118;
            }
          }
          if (HIDWORD(v150) || (_DWORD)v150 != (_DWORD)v148 || (v148 & 0x100000000) == 0)
          {
            v215 = HIDWORD(v150) != 0;
            v216 = (v148 & 0x100000000) == 0 && HIDWORD(v150) != 0;
            if ((v148 & 0x100000000) == 0)
              v215 = 1;
            if ((_DWORD)v150 != (_DWORD)v148)
              v215 = 1;
            if (!v216 && v215)
            {
              v217 = *((_QWORD *)a2 + 1);
              if ((*(_BYTE *)(*(_QWORD *)(a1 + 72) + 1) & 1) == 0 && *a2 == 161)
              {
                v218 = *((_QWORD *)a2 + 2);
                if (v218)
                {
                  if ((*(_DWORD *)(v218 + 28) & 0x7F) == 0x43)
                  {
                    v219 = *(_QWORD *)(v218 + 16);
                    v220 = (_QWORD *)(v219 & 0xFFFFFFFFFFFFFFF8);
                    if ((v219 & 4) != 0)
                      v220 = (_QWORD *)*v220;
                    if (v220)
                      v221 = (unint64_t)(v220 - 8);
                    else
                      v221 = 0;
                    v222 = *(_QWORD *)(v221 + 48);
                    if (v222)
                      v217 = v222 & 0xFFFFFFFFFFFFFFF0;
                    else
                      v217 = sub_22EF6462C(*(_QWORD *)(a1 + 88), v221);
                    v8 = *(_QWORD *)(*(_QWORD *)((v217 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
                  }
                }
              }
              v262 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
              if (!v262)
                return;
              if (*(_BYTE *)(v262 + 16) != 44)
                return;
              v263 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
              if (!v263)
                return;
              if (*(_BYTE *)(v263 + 16) != 44)
                return;
              v264 = sub_22F114198(*(_QWORD *)(v262 + 24));
              if (!*(_QWORD *)(v264 + 40))
              {
                v265 = *(_QWORD *)(v264 + 120);
                if (v265 < 8 || (v265 & 4) != 0)
                  return;
              }
              v266 = sub_22F114198(*(_QWORD *)(v263 + 24));
              if (*(_QWORD *)(v266 + 40))
                v267 = 0;
              else
                v267 = *(_QWORD *)(v266 + 120) < 8uLL || (*(_QWORD *)(v266 + 120) & 4) != 0;
              if (v262 == v263 || v267 || sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
                return;
              v20 = (_QWORD *)a1;
              v21 = (uint64_t)a2;
              v19 = v217;
              v22 = a3;
              v23 = v330;
              v24 = 6630;
LABEL_118:
              sub_22E99B090(v20, v21, v19, v22, v23, v24, 0);
              return;
            }
            goto LABEL_493;
          }
          if (!sub_22F110930(v8))
          {
LABEL_493:
            if (sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
              return;
            if (a5)
            {
              *a5 = 1;
              v24 = 6649;
            }
            else
            {
              v24 = 6648;
            }
LABEL_117:
            v19 = *((_QWORD *)a2 + 1);
            v20 = (_QWORD *)a1;
            v21 = (uint64_t)a2;
            v22 = a3;
            v23 = v330;
            goto LABEL_118;
          }
          LOWORD(v348) = 0;
          *(_QWORD *)&v349 = 0;
          DWORD2(v349) = 0;
          if (!sub_22F00554C((uint64_t)a2, (uint64_t)&v348, *(_QWORD *)(a1 + 88), 2, 0)
            || sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
          {
LABEL_471:
            if (DWORD2(v349) >= 2)
              sub_22EF53BC0((uint64_t *)&v349 + 1);
            goto LABEL_493;
          }
          v327 = v150;
          LODWORD(v333) = v351;
          if (v351 > 0x40)
            llvm::APInt::initSlowCase((llvm::APInt *)&__p, (const llvm::APInt *)&v350);
          else
            __p = v350;
          BYTE4(v333) = v352;
          v223 = sub_22EFFA6B0(a2);
          if (*v223 == 181 && *sub_22F1E2D38(*(uint64_t **)(a1 + 112), *((_DWORD *)v223 + 7), 0) == 48
            || (v224 = *(_QWORD *)(*(_QWORD *)(*v329 + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
            && (v225 = *(_DWORD *)(v224 + 16), v225 == 11)
            && (v226 = ((v225 >> 19) & 0x1FF) - 167, v226 <= 0xC)
            && ((1 << v226) & 0x1803) != 0
            && *sub_22F1E2D38(*(uint64_t **)(a1 + 112), v330, 0) == 123)
          {
            if (v333 >= 0x41 && __p)
              MEMORY[0x2348A0E84](__p, 0x1000C8000313F17);
            goto LABEL_471;
          }
          __src = &v342;
          __len = xmmword_22F455490;
          llvm::APInt::toString();
          v227 = __len;
          if ((unint64_t)__len > 0x7FFFFFFFFFFFFFF7)
            goto LABEL_707;
          v228 = __src;
          if ((unint64_t)__len >= 0x17)
          {
            v244 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
            if (((unint64_t)__len | 7) != 0x17)
              v244 = __len | 7;
            v245 = v244 + 1;
            v229 = operator new(v244 + 1);
            *(_QWORD *)&v345[8] = v227;
            *(_QWORD *)&v345[16] = v245 | 0x8000000000000000;
            *(_QWORD *)v345 = v229;
          }
          else
          {
            v345[23] = __len;
            v229 = v345;
            if (!(_QWORD)__len)
            {
LABEL_551:
              v229[v227] = 0;
              if (__src != &v342)
                free(__src);
              sub_22E99AEB8(&__src, (const llvm::APInt *)&__p, v327);
              sub_22EFF605C((uint64_t)a2);
              v247 = v246;
              v248 = *(_QWORD *)(a1 + 88) + 2128;
              v347.__r_.__value_.__r.__words[0] = 0;
              v347.__r_.__value_.__l.__size_ = v248;
              LODWORD(v347.__r_.__value_.__r.__words[2]) = 6647;
              if (v345[23] >= 0)
                v249 = v345;
              else
                v249 = *(_BYTE **)v345;
              if (v345[23] >= 0)
                v250 = v345[23] & 0x7F;
              else
                v250 = *(_QWORD *)&v345[8];
              sub_22E3B89A8((unsigned __int8 **)&v347, v249, v250);
              if (__len >= 0)
                v251 = &__src;
              else
                v251 = __src;
              if (__len >= 0)
                v252 = HIBYTE(__len) & 0x7F;
              else
                v252 = __len;
              sub_22E3B89A8((unsigned __int8 **)&v347, v251, v252);
              v253 = *((_QWORD *)a2 + 1);
              v254 = (unsigned __int8 *)v347.__r_.__value_.__r.__words[0];
              if (!v347.__r_.__value_.__r.__words[0])
              {
                v254 = (unsigned __int8 *)sub_22E3B8AAC(v347.__r_.__value_.__l.__size_);
                v347.__r_.__value_.__r.__words[0] = (std::string::size_type)v254;
              }
              v254[*v254 + 1] = 9;
              v255 = v347.__r_.__value_.__r.__words[0];
              v256 = *v347.__r_.__value_.__l.__data_;
              *v347.__r_.__value_.__l.__data_ = v256 + 1;
              *(_QWORD *)(v255 + 8 * v256 + 16) = v253;
              *(_BYTE *)(v255 + (v256 + 1) + 1) = 9;
              v257 = v347.__r_.__value_.__r.__words[0];
              v258 = *v347.__r_.__value_.__l.__data_;
              *v347.__r_.__value_.__l.__data_ = v258 + 1;
              *(_QWORD *)(v257 + 8 * v258 + 16) = a3;
              sub_22F0D4E74((uint64_t)a2);
              sub_22E4D6448(v257 + 336, v259, 1);
              v260 = v347.__r_.__value_.__r.__words[0];
              if (!v347.__r_.__value_.__r.__words[0])
              {
                v260 = sub_22E3B8AAC(v347.__r_.__value_.__l.__size_);
                v347.__r_.__value_.__r.__words[0] = v260;
              }
              sub_22E4D6448(v260 + 336, v330 | (a4 << 32), 1);
              v331.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
              sub_22EB52944(a1, v247, &v331, 1uLL, (uint64_t *)&v347);
              if (v347.__r_.__value_.__r.__words[0] && v347.__r_.__value_.__l.__size_)
                sub_22E3BB10C(v347.__r_.__value_.__l.__size_, v347.__r_.__value_.__r.__words[0]);
              if (SHIBYTE(__len) < 0)
                operator delete(__src);
              if ((v345[23] & 0x80000000) != 0)
                operator delete(*(void **)v345);
              if (v333 >= 0x41 && __p)
                MEMORY[0x2348A0E84](__p, 0x1000C8000313F17);
              if (DWORD2(v349) >= 2)
              {
                v17 = (uint64_t *)&v349 + 1;
                goto LABEL_19;
              }
              return;
            }
          }
          memmove(v229, v228, v227);
          goto LABEL_551;
        }
        v288 = v326;
        sub_22E8FCA40((_QWORD *)a1, v326, 0x19FDu, 0, (uint64_t)&v348);
        v339[0] = v105 == 3;
        v289 = sub_22E894E38((uint64_t)&v348, (unsigned __int8 *)v339);
        v290 = sub_22E8901B8(v289, (uint64_t *)&__p);
        LODWORD(v331.__r_.__value_.__l.__data_) = v321;
        HIDWORD(v331.__r_.__value_.__r.__words[0]) = v321;
        v328 = sub_22E8906A0(v290, (uint64_t *)&v331);
        sub_22EC371E8(*(_QWORD *)((unint64_t)__p & 0xFFFFFFFFFFFFFFF0), v288, (_QWORD *)a1, (uint64_t)&v347);
        v291 = (std::string *)v347.__r_.__value_.__r.__words[0];
        if ((v347.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v291 = &v347;
        v317 = v291;
        if ((v347.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v292 = *((_BYTE *)&v347.__r_.__value_.__s + 23) & 0x7F;
        else
          v292 = v347.__r_.__value_.__l.__size_;
        *(_QWORD *)((char *)&__len + 4) = 0;
        BYTE12(__len) = 0;
        v344 = 0;
        __src = (void *)(v288 | (v288 << 32));
        LOBYTE(__len) = 1;
        if (v292 > 0x7FFFFFFFFFFFFFF7)
          goto LABEL_707;
        if (v292 >= 0x17)
        {
          v294 = (v292 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v292 | 7) != 0x17)
            v294 = v292 | 7;
          v295 = v294 + 1;
          v293 = operator new(v294 + 1);
          *(_QWORD *)&v345[8] = v292;
          *(_QWORD *)&v345[16] = v295 | 0x8000000000000000;
          *(_QWORD *)v345 = v293;
        }
        else
        {
          v345[23] = v292;
          v293 = v345;
          if (!v292)
            goto LABEL_668;
        }
        memmove(v293, v317, v292);
LABEL_668:
        v293[v292] = 0;
        v342 = *(_OWORD *)v345;
        v343 = *(_QWORD *)&v345[16];
        sub_22E890748(v328, &__src);
        if (SHIBYTE(v343) < 0)
          operator delete((void *)v342);
        if (SHIBYTE(v347.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v347.__r_.__value_.__l.__data_);
        sub_22E903BEC((unsigned int *)&v348);
        goto LABEL_272;
      }
      if (v49 != 9)
      {
        if (v49 == 44)
        {
          *(_QWORD *)v324 = v38;
          v70 = sub_22F114198(*(_QWORD *)(v48 + 24));
          v38 = *(_QWORD *)v324;
          if ((*(_BYTE *)(v70 + 74) & 1) == 0 && *(_QWORD *)(v70 + 128) < 8uLL)
            goto LABEL_214;
          v71 = sub_22F114198(*(_QWORD *)(v48 + 24));
          v38 = *(_QWORD *)v324;
          if ((*(_BYTE *)(v71 + 76) & 0x80) != 0)
            goto LABEL_214;
        }
        else if (v49 != 11 || ((v49 >> 19) & 0x1FE) - 166 >= 0x14)
        {
          goto LABEL_214;
        }
      }
      LOWORD(v348) = 0;
      *(_QWORD *)&v349 = 0;
      DWORD2(v349) = 0;
      if ((*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) == 4)
        goto LABEL_186;
      if (*(_BYTE *)(a1 + 3209))
        goto LABEL_186;
      v72 = v38;
      v73 = sub_22F0057E4((unint64_t)a2, (uint64_t)&v348, *(_QWORD *)(a1 + 88), 2, 0);
      v38 = v72;
      if (!v73)
        goto LABEL_186;
      LODWORD(__len) = v351;
      if (v351 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&__src, (const llvm::APInt *)&v350);
      else
        __src = v350;
      BYTE4(__len) = v352;
      DWORD2(__len) = v353;
      v339[0] = 0;
      v319 = sub_22EF6A330(*(_QWORD *)(a1 + 88), a3);
      v91 = sub_22F110A40(v9);
      llvm::APFixedPoint::convertToInt((llvm::APFixedPoint *)&__src, v319, v91, v339);
      if (!v339[0])
      {
        v38 = v72;
        if (v333 >= 0x41 && __p)
        {
          MEMORY[0x2348A0E84](__p, 0x1000C8000313F17);
          v38 = v72;
        }
        if (__len >= 0x41 && __src)
        {
          MEMORY[0x2348A0E84](__src, 0x1000C8000313F17);
          v38 = v72;
        }
LABEL_186:
        if (DWORD2(v349) < 2)
          goto LABEL_214;
LABEL_213:
        v100 = v38;
        sub_22EF53BC0((uint64_t *)&v349 + 1);
        v38 = v100;
        goto LABEL_214;
      }
      sub_22EFF605C((uint64_t)a2);
      v231 = v230;
      v232 = *(_QWORD *)(a1 + 88) + 2128;
      *(_QWORD *)v345 = 0;
      *(_QWORD *)&v345[8] = v232;
      *(_DWORD *)&v345[16] = 6632;
      sub_22F3116D8(&v347);
      if ((v347.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v233 = &v347;
      else
        v233 = (std::string *)v347.__r_.__value_.__r.__words[0];
      if ((v347.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v234 = *((_BYTE *)&v347.__r_.__value_.__s + 23) & 0x7F;
      else
        v234 = v347.__r_.__value_.__l.__size_;
      sub_22E3B89A8((unsigned __int8 **)v345, v233, v234);
      v235 = *(unsigned __int8 **)v345;
      if (!*(_QWORD *)v345)
      {
        v235 = (unsigned __int8 *)sub_22E3B8AAC(*(uint64_t *)&v345[8]);
        *(_QWORD *)v345 = v235;
      }
      v235[*v235 + 1] = 9;
      v236 = *(_QWORD *)v345;
      v237 = **(_BYTE **)v345;
      **(_BYTE **)v345 = v237 + 1;
      *(_QWORD *)(v236 + 8 * v237 + 16) = a3;
      sub_22F0D4E74((uint64_t)a2);
      sub_22E4D6448(v236 + 336, v238, 1);
      v239 = *(_QWORD *)v345;
      if (!*(_QWORD *)v345)
      {
        v239 = sub_22E3B8AAC(*(uint64_t *)&v345[8]);
        *(_QWORD *)v345 = v239;
      }
      sub_22E4D6448(v239 + 336, v330 | (a4 << 32), 1);
      v331.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      sub_22EB52944(a1, v231, &v331, 1uLL, (uint64_t *)v345);
      if (SHIBYTE(v347.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v347.__r_.__value_.__l.__data_);
      if (*(_QWORD *)v345 && *(_QWORD *)&v345[8])
        sub_22E3BB10C(*(unint64_t *)&v345[8], *(unint64_t *)v345);
      if (v333 >= 0x41 && __p)
        MEMORY[0x2348A0E84](__p, 0x1000C8000313F17);
      if (__len < 0x41 || (v174 = __src) == 0)
      {
LABEL_373:
        if (DWORD2(v349) >= 2)
        {
          v17 = (uint64_t *)&v349 + 1;
          goto LABEL_19;
        }
        return;
      }
LABEL_372:
      MEMORY[0x2348A0E84](v174, 0x1000C8000313F17);
      goto LABEL_373;
    }
    v53 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v53)
      v54 = *(_DWORD *)(v53 + 16) == 11;
    else
      v54 = 0;
    if (!v54 || ((*(_DWORD *)(v53 + 16) >> 19) & 0x1FEu) - 186 > 0xB)
      goto LABEL_214;
    v55 = *(_DWORD *)(v45 + 16);
    if (v55 != 9)
    {
      if (v55 == 44)
      {
        *(_QWORD *)v323 = v38;
        v66 = sub_22F114198(*(_QWORD *)(v45 + 24));
        v38 = *(_QWORD *)v323;
        if ((*(_BYTE *)(v66 + 74) & 1) == 0 && *(_QWORD *)(v66 + 128) < 8uLL)
          goto LABEL_214;
        v67 = sub_22F114198(*(_QWORD *)(v45 + 24));
        v38 = *(_QWORD *)v323;
        if ((*(_BYTE *)(v67 + 76) & 0x80) != 0)
          goto LABEL_214;
      }
      else if (v55 != 11 || ((v46 >> 19) & 0x1FE) - 166 >= 0x14)
      {
        goto LABEL_214;
      }
    }
    LOWORD(v348) = 0;
    *(_QWORD *)&v349 = 0;
    DWORD2(v349) = 0;
    if ((*(_DWORD *)(*(_QWORD *)(a1 + 3688) + 576 * *(unsigned int *)(a1 + 3696) - 576) & 0xFFFFFFFE) != 4
      && !*(_BYTE *)(a1 + 3209))
    {
      v68 = v38;
      v69 = sub_22F00554C((uint64_t)a2, (uint64_t)&v348, *(_QWORD *)(a1 + 88), 2, 0);
      v38 = v68;
      if (v69)
      {
        LODWORD(v331.__r_.__value_.__r.__words[1]) = v351;
        if (v351 > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v331, (const llvm::APInt *)&v350);
        else
          v331.__r_.__value_.__r.__words[0] = (std::string::size_type)v350;
        v331.__r_.__value_.__s.__data_[12] = v352;
        v339[0] = 0;
        LODWORD(__src) = sub_22EF74318(*(_QWORD *)(a1 + 88), a3);
        llvm::APFixedPoint::getFromIntValue();
        if (v339[0])
        {
          sub_22EFF605C((uint64_t)a2);
          v86 = v85;
          v87 = *(_QWORD *)(a1 + 88) + 2128;
          v347.__r_.__value_.__r.__words[0] = 0;
          v347.__r_.__value_.__l.__size_ = v87;
          LODWORD(v347.__r_.__value_.__r.__words[2]) = 6632;
          __src = &v342;
          __len = xmmword_22F455490;
          llvm::APInt::toString();
          v88 = __len;
          if ((unint64_t)__len > 0x7FFFFFFFFFFFFFF7)
            goto LABEL_707;
          v89 = __src;
          if ((unint64_t)__len >= 0x17)
          {
            v165 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
            if (((unint64_t)__len | 7) != 0x17)
              v165 = __len | 7;
            v166 = v165 + 1;
            p_p = operator new(v165 + 1);
            v333 = v88;
            v334 = v166 | 0x8000000000000000;
            __p = p_p;
          }
          else
          {
            HIBYTE(v334) = __len;
            p_p = &__p;
            if (!(_QWORD)__len)
            {
LABEL_350:
              *((_BYTE *)p_p + v88) = 0;
              if (__src != &v342)
                free(__src);
              if (v334 >= 0)
                v167 = &__p;
              else
                v167 = __p;
              if (v334 >= 0)
                v168 = HIBYTE(v334) & 0x7F;
              else
                v168 = v333;
              sub_22E3B89A8((unsigned __int8 **)&v347, v167, v168);
              v169 = (unsigned __int8 *)v347.__r_.__value_.__r.__words[0];
              if (!v347.__r_.__value_.__r.__words[0])
              {
                v169 = (unsigned __int8 *)sub_22E3B8AAC(v347.__r_.__value_.__l.__size_);
                v347.__r_.__value_.__r.__words[0] = (std::string::size_type)v169;
              }
              v169[*v169 + 1] = 9;
              v170 = v347.__r_.__value_.__r.__words[0];
              v171 = *v347.__r_.__value_.__l.__data_;
              *v347.__r_.__value_.__l.__data_ = v171 + 1;
              *(_QWORD *)(v170 + 8 * v171 + 16) = a3;
              sub_22F0D4E74((uint64_t)a2);
              sub_22E4D6448(v170 + 336, v172, 1);
              v173 = v347.__r_.__value_.__r.__words[0];
              if (!v347.__r_.__value_.__r.__words[0])
              {
                v173 = sub_22E3B8AAC(v347.__r_.__value_.__l.__size_);
                v347.__r_.__value_.__r.__words[0] = v173;
              }
              sub_22E4D6448(v173 + 336, v330 | (a4 << 32), 1);
              __src = a2;
              sub_22EB52944(a1, v86, &__src, 1uLL, (uint64_t *)&v347);
              if (SHIBYTE(v334) < 0)
                operator delete(__p);
              if (v347.__r_.__value_.__r.__words[0] && v347.__r_.__value_.__l.__size_)
                sub_22E3BB10C(v347.__r_.__value_.__l.__size_, v347.__r_.__value_.__r.__words[0]);
              if (*(_DWORD *)&v345[8] >= 0x41u && *(_QWORD *)v345)
                MEMORY[0x2348A0E84](*(_QWORD *)v345, 0x1000C8000313F17);
              if (LODWORD(v331.__r_.__value_.__r.__words[1]) < 0x41)
                goto LABEL_373;
              v174 = (void *)v331.__r_.__value_.__r.__words[0];
              if (!v331.__r_.__value_.__r.__words[0])
                goto LABEL_373;
              goto LABEL_372;
            }
          }
          memmove(p_p, v89, v88);
          goto LABEL_350;
        }
        if (*(_DWORD *)&v345[8] >= 0x41u && *(_QWORD *)v345)
          MEMORY[0x2348A0E84](*(_QWORD *)v345, 0x1000C8000313F17);
        if (LODWORD(v331.__r_.__value_.__r.__words[1]) >= 0x41 && v331.__r_.__value_.__r.__words[0])
          MEMORY[0x2348A0E84](v331.__r_.__value_.__r.__words[0], 0x1000C8000313F17);
        v38 = v68;
      }
    }
    if (DWORD2(v349) < 2)
      goto LABEL_214;
    goto LABEL_213;
  }
  if (!v38)
    goto LABEL_685;
  v39 = (*(_DWORD *)(v38 + 16) >> 19) & 0x1FE;
  if ((v39 - 210) > 7)
  {
    if ((v39 - 166) > 0x13)
      goto LABEL_685;
    if (sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
      return;
    v59 = 0;
    v60 = *(_QWORD *)(*(_QWORD *)(*v329 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v60)
    {
      v61 = *(_DWORD *)(v60 + 16);
      if (v61 == 11)
        v59 = (v61 & 0xFF80000) == 87031808;
    }
    v62 = *(_DWORD *)(a1 + 10680);
    v63 = *(_DWORD *)(a1 + 11956);
    v64 = sub_22EFFA6B0(a2);
    if (*v64 == 233 && (*(_DWORD *)v64 & 0x780000) == 0x180000)
      v64 = sub_22EFFA6B0(*((unsigned __int8 **)v64 + 2));
    v65 = *a2 == 170 || *v64 == 170;
    v74 = (llvm::APFloatBase *)llvm::detail::IEEEFloat::IEEEFloat((llvm::detail::IEEEFloat *)&v348, 0.0);
    v75 = llvm::APFloatBase::IEEEdouble(v74);
    MEMORY[0x23489F4E0](&v347.__r_.__value_.__r.__words[1], &v348, v75);
    llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v348);
    if ((sub_22F0059FC((uint64_t)a2, (uint64_t)&v347, *(_QWORD *)(a1 + 88), 2, 0) & 1) == 0)
    {
      if (sub_22E99A19C(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 3440), a3))
      {
        sub_22E8FCA40((_QWORD *)a1, v330, 0x19EFu, 0, (uint64_t)&v348);
        __src = (void *)*((_QWORD *)a2 + 1);
        v80 = sub_22E8901B8((uint64_t)&v348, (uint64_t *)&__src);
        sub_22E99A200(*(_DWORD **)(a1 + 72), *(_QWORD **)(a1 + 112), a2, v80);
        v81 = (llvm::APFloatBase *)sub_22E903BEC((unsigned int *)&v348);
      }
      else
      {
        v81 = (llvm::APFloatBase *)sub_22E99B090((_QWORD *)a1, (uint64_t)a2, *((_QWORD *)a2 + 1), a3, v330, 0x19E9u, v62 > v63);
      }
LABEL_683:
      v297 = v347.__r_.__value_.__l.__size_;
      if (llvm::APFloatBase::PPCDoubleDouble(v81) == v297)
        sub_22E463170((llvm::APFloatBase *)&v347.__r_.__value_.__r.__words[2]);
      else
        llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v347.__r_.__value_.__r.__words[1]);
LABEL_685:
      v298 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v298)
        v299 = (*(_DWORD *)(v298 + 16) & 0xFF800FF) == 87031819;
      else
        v299 = 0;
      if (!v299)
        return;
      if ((*a2 + 118) > 4u)
        return;
      v300 = *((_DWORD *)a2 + 4);
      if (!v300)
        return;
      v301 = *(unsigned __int8 **)&a2[8 * (((unint64_t)*(unsigned int *)a2 >> 18) & 1)
                                    + 8
                                    + 8 * (v300 - 1)
                                    + ((unint64_t)*(unsigned int *)a2 >> 24)];
      if (*v301 != 153)
        return;
      v302 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)sub_22EFFA6B0(v301) + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (!v302 || (*(_DWORD *)(v302 + 16) & 0xFF800FF) != 87031819)
        return;
      v19 = *((_QWORD *)a2 + 1);
      v20 = (_QWORD *)a1;
      v21 = (uint64_t)a2;
      v22 = a3;
      v23 = v330;
      v24 = 6640;
      goto LABEL_118;
    }
    v318 = v62;
    v338 = 0;
    v76 = sub_22EF6A330(*(_QWORD *)(a1 + 88), a3);
    v77 = sub_22F110D38(*v329);
    LODWORD(v333) = v76;
    if (v76 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&__p);
    else
      __p = 0;
    BYTE4(v333) = v77;
    v78 = llvm::APFloat::convertToInteger();
    __src = &v342;
    __len = xmmword_22F44E350;
    llvm::APFloatBase::semanticsPrecision();
    sub_22E99A6BC((llvm::APFloatBase *)&v347);
    v79 = sub_22E99A19C(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 3440), a3);
    if ((_DWORD)v79)
    {
      v79 = sub_22E508590((uint64_t)&__p, 0);
      if ((_DWORD)v79)
      {
        v79 = sub_22E508590((uint64_t)&__p, 1);
        if ((_DWORD)v79)
        {
          sub_22E8FCA40((_QWORD *)a1, v330, 0x19E5u, 0, (uint64_t)&v348);
          v296 = sub_22F2F2210((uint64_t)&v348, (uint64_t)&__src);
          sub_22E99A200(*(_DWORD **)(a1 + 72), *(_QWORD **)(a1 + 112), a2, v296);
          sub_22E903BEC((unsigned int *)&v348);
          goto LABEL_678;
        }
      }
    }
    if (!v78 && v338)
    {
      if (!v65)
        goto LABEL_677;
LABEL_678:
      v81 = (llvm::APFloatBase *)__src;
      if (__src != &v342)
        free(__src);
      if (v333 >= 0x41)
      {
        v81 = (llvm::APFloatBase *)__p;
        if (__p)
          v81 = (llvm::APFloatBase *)MEMORY[0x2348A0E84](__p, 0x1000C8000313F17);
      }
      goto LABEL_683;
    }
    v92 = v78 != 1 || v59;
    if ((v92 & 1) == 0)
    {
      if (v65)
        v201 = 6651;
      else
        v201 = 6637;
      sub_22E99B090((_QWORD *)a1, (uint64_t)a2, *((_QWORD *)a2 + 1), a3, v330, v201, v318 > v63);
      goto LABEL_678;
    }
    if (v65)
    {
      v93 = 6650;
      goto LABEL_195;
    }
    v79 = sub_22E42E5EC((uint64_t)&__p, 0);
    if ((_DWORD)v79)
    {
      v202 = v347.__r_.__value_.__l.__size_;
      v79 = llvm::APFloatBase::PPCDoubleDouble((llvm::APFloatBase *)v79);
      v203 = (std::string *)v347.__r_.__value_.__r.__words[2];
      if (v79 != v202)
        v203 = &v347;
      if ((v203[1].__r_.__value_.__s.__data_[4] & 7) == 3)
        goto LABEL_677;
      v93 = 6638;
      goto LABEL_195;
    }
    v243 = v333;
    if (BYTE4(v333))
    {
      if (!(_DWORD)v333)
      {
LABEL_676:
        v93 = 6636;
        goto LABEL_195;
      }
      if (v333 <= 0x40)
      {
        if (__p != (void *)(0xFFFFFFFFFFFFFFFFLL >> -(char)v333))
          goto LABEL_677;
        goto LABEL_676;
      }
    }
    else
    {
      if (v333 <= 0x40)
      {
        v93 = 6636;
        if (__p != (void *)~(-1 << (v333 - 1))
          && __p != (void *)(1 << (v333 - 1)))
        {
          goto LABEL_677;
        }
LABEL_195:
        *(_QWORD *)v345 = v346;
        *(_OWORD *)&v345[8] = xmmword_22F44E350;
        if (v59)
        {
          v94 = v347.__r_.__value_.__l.__size_;
          v95 = llvm::APFloatBase::PPCDoubleDouble((llvm::APFloatBase *)v79);
          v96 = (std::string *)v347.__r_.__value_.__r.__words[2];
          if (v95 != v94)
            v96 = &v347;
          v97 = v96[1].__r_.__value_.__s.__data_[4] & 7;
          if (v97 == 3)
            v98 = "false";
          else
            v98 = "true";
          if (v97 == 3)
            v99 = 5;
          else
            v99 = 4;
          memcpy(v346, v98, v99);
          *(_QWORD *)&v345[8] = v99;
        }
        else
        {
          llvm::APInt::toString();
        }
        if (v318 <= v63)
        {
          sub_22EFF605C((uint64_t)a2);
          sub_22E8FCA40((_QWORD *)a1, v304, v93, 0, (uint64_t)&v348);
          v331.__r_.__value_.__r.__words[0] = *((_QWORD *)a2 + 1);
          v305 = sub_22E8901B8((uint64_t)&v348, (uint64_t *)&v331);
          v306 = *v329;
          if ((*(_BYTE *)(*v329 + 8) & 0xF) != 0)
            v306 = (uint64_t)sub_22F10D2BC(a3);
          *(_QWORD *)v339 = v306 & 0xFFFFFFFFFFFFFFF0;
          v307 = sub_22E8901B8(v305, (uint64_t *)v339);
          v308 = sub_22F2F2210(v307, (uint64_t)&__src);
          v309 = sub_22F2F2210(v308, (uint64_t)v345);
          sub_22F0D4E74((uint64_t)a2);
          v337 = v310;
          v311 = sub_22E8906A0(v309, &v337);
          LODWORD(v336) = a4;
          HIDWORD(v336) = a4;
          sub_22E8906A0(v311, &v336);
          sub_22E903BEC((unsigned int *)&v348);
        }
        else
        {
          sub_22EFF605C((uint64_t)a2);
          v205 = v204;
          *(_QWORD *)&v349 = *(_QWORD *)(a1 + 88) + 2128;
          DWORD2(v349) = v93;
          v206 = *((_QWORD *)a2 + 1);
          v207 = (unsigned __int8 *)sub_22E3B8AAC(v349);
          v348 = (void **)v207;
          v208 = *v207;
          v207[v208 + 1] = 9;
          v209 = v208 + 1;
          *v207 = v208 + 1;
          *(_QWORD *)&v207[8 * v208 + 16] = v206;
          v210 = *v329;
          if ((*(_BYTE *)(*v329 + 8) & 0xF) != 0)
          {
            v210 = (uint64_t)sub_22F10D2BC(a3);
            v209 = *v207;
          }
          v207[v209 + 1] = 9;
          *v207 = v209 + 1;
          *(_QWORD *)&v207[8 * v209 + 16] = v210 & 0xFFFFFFFFFFFFFFF0;
          sub_22E3B89A8((unsigned __int8 **)&v348, __src, __len);
          sub_22E3B89A8((unsigned __int8 **)&v348, *(void **)v345, *(size_t *)&v345[8]);
          sub_22F0D4E74((uint64_t)a2);
          v212 = v211;
          v213 = (unsigned __int8 *)v348;
          if (!v348)
          {
            v213 = (unsigned __int8 *)sub_22E3B8AAC(v349);
            v348 = (void **)v213;
          }
          sub_22E4D6448((uint64_t)(v213 + 336), v212, 1);
          v214 = (unsigned __int8 *)v348;
          if (!v348)
          {
            v214 = (unsigned __int8 *)sub_22E3B8AAC(v349);
            v348 = (void **)v214;
          }
          sub_22E4D6448((uint64_t)(v214 + 336), v330 | (v330 << 32), 1);
          v331.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
          sub_22EB52944(a1, v205, &v331, 1uLL, (uint64_t *)&v348);
          if (v348 && (_QWORD)v349)
            sub_22E3BB10C(v349, (unint64_t)v348);
        }
        if (*(_BYTE **)v345 != v346)
          free(*(void **)v345);
        goto LABEL_678;
      }
      v243 = v333 - 1;
      if (((*((_QWORD *)__p + (v243 >> 6)) >> v243) & 1) != 0)
      {
        v79 = llvm::APInt::countTrailingZerosSlowCase((llvm::APInt *)&__p);
LABEL_675:
        if ((_DWORD)v79 != v243)
        {
LABEL_677:
          sub_22E99B090((_QWORD *)a1, (uint64_t)a2, *((_QWORD *)a2 + 1), a3, v330, 0x19E9u, v318 > v63);
          goto LABEL_678;
        }
        goto LABEL_676;
      }
    }
    v79 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)&__p);
    goto LABEL_675;
  }
  v40 = v37 & 0xFFFFFFFFFFFFFFF0;
  v41 = v38 & 0xFFFFFFFFFFFFFFF0;
  v42 = sub_22EF6A204(*(_QWORD *)(a1 + 88), v37 & 0xFFFFFFFFFFFFFFF0, v38 & 0xFFFFFFFFFFFFFFF0);
  if (v42 == -1)
  {
    if (sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
      return;
    v19 = *((_QWORD *)a2 + 1);
    v20 = (_QWORD *)a1;
    v21 = (uint64_t)a2;
    v22 = a3;
    v23 = v330;
    v24 = 6631;
    goto LABEL_118;
  }
  if (v42 == 1)
  {
    LOWORD(v348) = 0;
    *(_QWORD *)&v349 = 0;
    DWORD2(v349) = 0;
    if (!sub_22F005120(a2, (uint64_t)&v348, *(_QWORD *)(a1 + 88), 0)
      || (v43 = sub_22EF5B2E0(*(_QWORD *)(a1 + 88), v41),
          v44 = sub_22EF5B2E0(*(_QWORD *)(a1 + 88), v40),
          (sub_22E99A5A0((uint64_t)&v349 + 8, v43, v44) & 1) == 0))
    {
      if (!sub_22E90086C(*(_QWORD **)(a1 + 112), v330))
        sub_22E99B090((_QWORD *)a1, (uint64_t)a2, *((_QWORD *)a2 + 1), a3, v330, 0x19EAu, 0);
    }
    if (DWORD2(v349) >= 2)
    {
      v17 = (uint64_t *)&v349 + 1;
      goto LABEL_19;
    }
  }
}

BOOL sub_22E99A19C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  BOOL v4;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v3)
    v4 = (*(_DWORD *)(v3 + 16) & 0xFF800FF) == 93847563;
  else
    v4 = 0;
  return v4 && (*(_BYTE *)(a1 + 1) & 0x40) != 0 && sub_22F3E9660(a2, a3, "BOOL", 4uLL, (uint64_t *)(a2 + 672));
}

void sub_22E99A200(_DWORD *a1, _QWORD *a2, unsigned __int8 *a3, uint64_t a4)
{
  unsigned __int8 *v8;
  int v9;
  int v10;
  BOOL v11;
  char v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  void *__p;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  _BYTE v31[25];

  v8 = sub_22EFFED0C(a3);
  v9 = *v8;
  if (v9 == 210)
    v9 = **((unsigned __int8 **)v8 + 2);
  v10 = v9 & 0xFE;
  v11 = v9 == 141;
  if (v10 == 112)
    v11 = 1;
  v12 = v10 == 102 || v11;
  sub_22F0D60E4((uint64_t)a3);
  v14 = sub_22F141A3C(v13, 0, a2, a1);
  v15 = v14;
  if ((v12 & 1) != 0)
  {
    sub_22F0D5A50((uint64_t)a3);
    v29 = 0;
    v30 = 0;
    *(_QWORD *)&v31[8] = 0;
    *(_QWORD *)&v31[16] = 0x100000000000000;
    v27 = v16 | ((unint64_t)v16 << 32);
    v28 = 0;
    *(_QWORD *)v31 = 40;
    v31[24] = 0;
    v17 = sub_22E890748(a4, &v27);
    v22 = 0;
    v21 = 0;
    v24 = 0;
    v25 = 0x100000000000000;
    v18 = v15 | ((unint64_t)v15 << 32);
    v19 = v18;
    v20 = 0;
    __p = (void *)41;
    v26 = 0;
    sub_22E890748(v17, &v19);
    if (SHIBYTE(v25) < 0)
      operator delete(__p);
    if ((v31[23] & 0x80000000) != 0)
      operator delete(*(void **)v31);
  }
  else
  {
    v18 = v14 | ((unint64_t)v14 << 32);
  }
  v30 = 0;
  v29 = 0;
  v27 = v18;
  v28 = 0;
  *(_QWORD *)&v31[12] = 0;
  *(_DWORD *)&v31[19] = 0;
  strcpy(v31, " ? YES : NO");
  *(_WORD *)&v31[23] = 11;
  sub_22E890748(a4, &v27);
  if ((v31[23] & 0x80000000) != 0)
    operator delete(*(void **)v31);
}

uint64_t sub_22E99A3A0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 **v11;
  unsigned __int8 *v12;

  if (*(_QWORD *)(result + 3632))
  {
    v4 = result;
    v5 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    if (!v5 || *(_BYTE *)(v5 + 16) != 32)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32)
        return result;
      result = sub_22F10CF48(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
      if (!result)
        return result;
      v5 = result;
    }
    result = sub_22F311764(*(_QWORD *)(v5 + 32));
    if ((result & 1) == 0)
    {
      v6 = sub_22F31179C(v5);
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 3632) + 32))(*(_QWORD *)(v4 + 3632));
      if (v7 == result)
      {
        result = sub_22F3117D0(*(_QWORD *)(v5 + 32));
        if (v8 == 1)
        {
          v9 = *(unsigned int *)(a3 + 16);
          if ((_DWORD)v9)
          {
            v10 = *(_QWORD *)result;
            v11 = (unsigned __int8 **)(a3 + 40);
            do
            {
              v12 = *v11++;
              result = sub_22E99B210((uint64_t *)v4, v10, v12, 0);
              --v9;
            }
            while (v9);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22E99A48C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(result + 3648))
  {
    v4 = result;
    v5 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
    if (!v5 || *(_BYTE *)(v5 + 16) != 32)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 32)
        return result;
      result = sub_22F10CF48(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
      if (!result)
        return result;
      v5 = result;
    }
    result = sub_22F311764(*(_QWORD *)(v5 + 32));
    if ((result & 1) == 0)
    {
      v6 = sub_22F31179C(v5);
      v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      result = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v4 + 3648) + 32))(*(_QWORD *)(v4 + 3648));
      if (v7 == result)
      {
        result = sub_22F3117D0(*(_QWORD *)(v5 + 32));
        if (v8 == 2)
        {
          v9 = *(_DWORD *)(a3 + 16);
          v10 = v9 & 0x7FFFFFFF;
          if ((v9 & 0x7FFFFFFF) != 0)
          {
            v11 = *(_QWORD *)result;
            v12 = (uint64_t *)(a3 + 48);
            v13 = *(_QWORD *)(result + 8);
            do
            {
              v14 = *v12;
              sub_22E99B210(v4, v11, *(v12 - 1), 1);
              result = sub_22E99B210(v4, v13, v14, 2);
              v12 += 2;
              --v10;
            }
            while (v10);
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_22E99A5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  BOOL v11;

  if (*(_DWORD *)a1 == 8)
  {
    v7 = *(_DWORD *)(a1 + 16);
    if (v7)
    {
      v8 = 0;
      v9 = 72 * v7 - 72;
      do
      {
        result = sub_22E99A5A0(*(_QWORD *)(a1 + 8) + v8, a2, a3);
        if ((_DWORD)result)
          v11 = v9 == v8;
        else
          v11 = 1;
        v8 += 72;
      }
      while (!v11);
    }
    else
    {
      return 1;
    }
  }
  else
  {
    if (*(_DWORD *)a1 == 3)
    {
      v6 = (_QWORD *)(a1 + 8);
    }
    else
    {
      result = sub_22E99B3AC((_QWORD *)(a1 + 8));
      if (!(_DWORD)result)
        return result;
      v6 = (_QWORD *)(a1 + 40);
    }
    return sub_22E99B3AC(v6);
  }
  return result;
}

unint64_t sub_22E99A668(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_22E99BE54(*(_QWORD *)(a2 + 8));
  v7 = sub_22EF6A330(a1, v6);
  return sub_22E99B4C0(a1, (unsigned __int8 *)a2, v7, a3, 1);
}

uint64_t sub_22E99A6BC(llvm::APFloatBase *a1)
{
  uint64_t v1;

  v1 = *((_QWORD *)a1 + 1);
  if (llvm::APFloatBase::PPCDoubleDouble(a1) == v1)
    return llvm::detail::DoubleAPFloat::toString();
  else
    return llvm::detail::IEEEFloat::toString();
}

void sub_22E99A744(_QWORD *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned __int8 *v8;
  int v9;
  unsigned __int8 *v10;
  int v11;
  unsigned __int8 *v12;
  int v13;
  unsigned __int8 *v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  _QWORD *v19;
  int v20;
  unsigned int v21;
  _QWORD *v22;
  BOOL v23;
  unsigned int v24;
  _QWORD *v25;
  uint64_t v26;
  unsigned int v27;
  _QWORD *v28;
  BOOL v29;
  unsigned int v30;
  _QWORD *v31;
  _BOOL4 v32;
  unsigned int v33;
  BOOL v34;
  unsigned int v35;
  unsigned int v36[24];
  _QWORD *v37;
  unsigned int v38;
  _QWORD *v39;
  unsigned int v40;
  _QWORD *v41;
  unsigned int v42;
  unsigned __int8 *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[9];

  v47[8] = *MEMORY[0x24BDAC8D0];
  v3 = sub_22EFFA6B0(a2);
  v43 = v3;
  sub_22EFF605C((uint64_t)v3);
  v5 = v4;
  v6 = *v3;
  if ((v6 & 0xFE) == 0x70)
  {
    v7 = *(_DWORD *)v3;
    LOWORD(v44) = 0;
    v45 = 0;
    LODWORD(v46) = 0;
    if ((v7 & 0xFC0000) != 0x1C0000)
    {
LABEL_21:
      v3 = v43;
      v6 = *v43;
      goto LABEL_22;
    }
    v8 = (unsigned __int8 *)*((_QWORD *)v3 + 2);
    v9 = *v8;
    if (v9 != 181)
    {
      if (v9 == 233 && (*(_DWORD *)v8 & 0x7C0000) == 0x1C0000)
      {
        v8 = (unsigned __int8 *)*((_QWORD *)v8 + 2);
        if (*v8 != 181)
          v8 = 0;
      }
      else
      {
        v8 = 0;
      }
    }
    v10 = (unsigned __int8 *)*((_QWORD *)v3 + 3);
    v11 = *v10;
    if (v11 != 181)
    {
      if (v11 == 233 && (*(_DWORD *)v10 & 0x7C0000) == 0x1C0000)
      {
        if (**((unsigned __int8 **)v10 + 2) == 181)
          v10 = (unsigned __int8 *)*((_QWORD *)v10 + 2);
        else
          v10 = 0;
      }
      else
      {
        v10 = 0;
      }
    }
    if (!v8)
    {
LABEL_18:
      if (!sub_22F110930(*(_QWORD *)(*((_QWORD *)v3 + 1) & 0xFFFFFFFFFFFFFFF0)))
        goto LABEL_19;
      sub_22E8FCA40(a1, v5, 0x1A2Du, 0, (uint64_t)&v41);
      sub_22F2F37E0((uint64_t)&v41, (uint64_t *)&v43);
LABEL_71:
      sub_22E903BEC((unsigned int *)&v41);
LABEL_19:
      if (v46 >= 2)
        sub_22EF53BC0(&v46);
      goto LABEL_21;
    }
    sub_22F257F94((uint64_t)(v8 + 16), (llvm::APInt *)&v41);
    v16 = v42;
    if (v42 >= 0x41)
    {
      if (v16 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v41) >= 0x41)
      {
        if (v41)
          MEMORY[0x2348A0E84](v41, 0x1000C8000313F17);
      }
      else
      {
        v26 = *v41;
        MEMORY[0x2348A0E84]();
        if (!v26)
        {
LABEL_70:
          sub_22E8FCA40(a1, v5, 0x1A2Cu, 0, (uint64_t)&v41);
          LODWORD(v39) = 0;
          sub_22E8900C4((uint64_t)&v41, (int *)&v39);
          goto LABEL_71;
        }
      }
    }
    else if (!v41)
    {
      goto LABEL_70;
    }
    v3 = v43;
    if ((v43[2] & 1) == 0 && v10)
    {
      sub_22F257F94((uint64_t)(v10 + 16), (llvm::APInt *)&v41);
      v27 = v42;
      v28 = &v41[(v42 - 1) >> 6];
      if (v42 < 0x41)
        v28 = &v41;
      if (((*v28 >> (v42 - 1)) & 1) != 0)
      {
        v29 = 0;
      }
      else
      {
        v29 = sub_22F00554C((uint64_t)v43, (uint64_t)&v44, a1[11], 2, 0);
        v27 = v42;
      }
      if (v27 >= 0x41 && v41)
        MEMORY[0x2348A0E84](v41, 0x1000C8000313F17);
      if (v29)
      {
        sub_22E8FCA40(a1, v5, 0x1A2Cu, 0, (uint64_t)&v41);
        LOBYTE(v39) = sub_22E508590((uint64_t)v47, 0);
        sub_22E894E38((uint64_t)&v41, (unsigned __int8 *)&v39);
        goto LABEL_71;
      }
      v3 = v43;
    }
    goto LABEL_18;
  }
LABEL_22:
  if (v6 != 103)
    return;
  v12 = (unsigned __int8 *)*((_QWORD *)v3 + 4);
  v13 = *v12;
  if (v13 != 181)
  {
    if (v13 == 233 && (*(_DWORD *)v12 & 0x7C0000) == 0x1C0000)
    {
      v12 = (unsigned __int8 *)*((_QWORD *)v12 + 2);
      if (*v12 != 181)
        v12 = 0;
    }
    else
    {
      v12 = 0;
    }
  }
  v14 = (unsigned __int8 *)*((_QWORD *)v3 + 5);
  v15 = *v14;
  if (v15 != 181)
  {
    if (v15 != 233 || (*(_DWORD *)v14 & 0x7C0000) != 0x1C0000)
      return;
    if (**((unsigned __int8 **)v14 + 2) == 181)
      v14 = (unsigned __int8 *)*((_QWORD *)v14 + 2);
    else
      v14 = 0;
  }
  if (!v12 || !v14)
    return;
  v17 = (uint64_t)(v12 + 16);
  sub_22F257F94((uint64_t)(v12 + 16), (llvm::APInt *)&v41);
  v18 = v42;
  if (v42 >= 0x41 && v18 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v41) > 0x40)
    goto LABEL_60;
  v19 = v41;
  if (v18 < 0x41)
    v19 = &v41;
  if (*v19)
  {
LABEL_60:
    sub_22F257F94(v17, (llvm::APInt *)&v44);
    v24 = v45;
    if (v45 >= 0x41
      && v24 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v44) > 0x40)
    {
      v23 = 0;
LABEL_81:
      if (v44)
        MEMORY[0x2348A0E84](v44, 0x1000C8000313F17);
      goto LABEL_83;
    }
    v25 = v44;
    if (v24 < 0x41)
      v25 = &v44;
    if (*v25 != 1)
    {
      v23 = 0;
LABEL_66:
      if (v24 < 0x41)
        goto LABEL_83;
      goto LABEL_81;
    }
    v20 = 1;
  }
  else
  {
    v20 = 0;
  }
  sub_22F257F94((uint64_t)(v14 + 16), (llvm::APInt *)&v39);
  v21 = v40;
  if (v40 >= 0x41 && v21 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v39) > 0x40)
    goto LABEL_98;
  v22 = v39;
  if (v21 < 0x41)
    v22 = &v39;
  if (*v22)
  {
LABEL_98:
    sub_22F257F94((uint64_t)(v14 + 16), (llvm::APInt *)&v37);
    v33 = v38;
    if (v38 < 0x41)
    {
      v23 = v37 == (_QWORD *)1;
LABEL_112:
      v21 = v40;
      goto LABEL_54;
    }
    if (v33 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v37) > 0x40)
    {
      v34 = 0;
      v23 = 0;
      if (!v37)
        goto LABEL_112;
    }
    else
    {
      v34 = *v37 == 1;
    }
    MEMORY[0x2348A0E84](v37, 0x1000C8000313F17);
    v23 = v34;
    goto LABEL_112;
  }
  v23 = 1;
LABEL_54:
  if (v21 >= 0x41 && v39)
    MEMORY[0x2348A0E84](v39, 0x1000C8000313F17);
  if (v20)
  {
    v24 = v45;
    goto LABEL_66;
  }
LABEL_83:
  if (v42 >= 0x41 && v41)
    MEMORY[0x2348A0E84](v41, 0x1000C8000313F17);
  if (!v23)
  {
    sub_22F257F94(v17, (llvm::APInt *)&v41);
    v30 = v42;
    if (v42 < 0x41 || v30 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v41) <= 0x40)
    {
      v31 = v41;
      if (v30 < 0x41)
        v31 = &v41;
      if (!*v31)
      {
        v32 = 0;
        goto LABEL_93;
      }
    }
    sub_22F257F94((uint64_t)(v14 + 16), (llvm::APInt *)&v39);
    v35 = v40;
    if (v40 < 0x41)
    {
      v32 = v39 != 0;
LABEL_119:
      v30 = v42;
LABEL_93:
      if (v30 >= 0x41 && v41)
        MEMORY[0x2348A0E84](v41, 0x1000C8000313F17);
      if (v32)
      {
        sub_22E8FCA40(a1, v5, 0x1A22u, 0, (uint64_t)v36);
        sub_22E903BEC(v36);
      }
      return;
    }
    if (v35 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v39) > 0x40)
    {
      v32 = 1;
      if (!v39)
        goto LABEL_119;
    }
    else
    {
      v32 = *v39 != 0;
    }
    MEMORY[0x2348A0E84](v39, 0x1000C8000313F17);
    goto LABEL_119;
  }
}

unint64_t sub_22E99ADD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  v2 = a2;
  v4 = *(unsigned __int8 *)(a2 + 16);
  if (a2 && (v4 - 57) >= 0xFFFFFFFE)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(a2 + 32) & 0xFFFFFFFFFFFFFFF0);
    v4 = *(unsigned __int8 *)(v2 + 16);
  }
  if (v4 == 12)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v2 + 32) & 0xFFFFFFFFFFFFFFF0);
    v4 = *(unsigned __int8 *)(v2 + 16);
  }
  if (v4 == 6)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v2 + 32) & 0xFFFFFFFFFFFFFFF0);
    v4 = *(unsigned __int8 *)(v2 + 16);
  }
  if (v4 == 44)
  {
    v5 = sub_22F114198(*(_QWORD *)(v2 + 24));
    v2 = *(_QWORD *)(*(_QWORD *)((sub_22E496830(v5) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v4 = *(unsigned __int8 *)(v2 + 16);
  }
  if (v4 == 9)
  {
    v6 = *(_DWORD *)(v2 + 32);
    v7 = (v6 >> 1) & 0xFFFFFF;
    v8 = v6 & 1;
  }
  else
  {
    v7 = sub_22EF6A330(a1, v2 & 0xFFFFFFFFFFFFFFF0);
    v8 = ((*(_DWORD *)(v2 + 16) >> 19) & 0x1FEu) - 166 < 0xC;
  }
  return v7 | (unint64_t)(v8 << 32);
}

void sub_22E99AEB8(_BYTE *a1, const llvm::APInt *a2, uint64_t a3)
{
  char v3;
  _QWORD *v4;
  char v5;
  unsigned int v6;
  void *v7;
  size_t v8;
  void *v9;
  size_t v10;
  size_t v11;
  _QWORD *v12;
  void *v13;
  unsigned int v14;
  char v15;
  void *__src;
  size_t __len[2];
  _QWORD v18[6];

  v3 = BYTE4(a3);
  v4 = a1;
  v18[5] = *MEMORY[0x24BDAC8D0];
  if (!(_DWORD)a3)
  {
    a1[23] = 1;
    *(_WORD *)a1 = 48;
    return;
  }
  v14 = *((_DWORD *)a2 + 2);
  if (v14 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v13, a2);
  else
    v13 = *(void **)a2;
  v15 = v3 & 1;
  llvm::APInt::trunc((llvm::APInt *)&v13);
  v5 = v15;
  v6 = __len[0];
  v7 = __src;
  if (v14 >= 0x41 && v13)
    MEMORY[0x2348A0E84](v13, 0x1000C8000313F17);
  v13 = v7;
  v14 = v6;
  v15 = v5;
  __src = v18;
  *(_OWORD *)__len = xmmword_22F455490;
  llvm::APInt::toString();
  v8 = __len[0];
  if (__len[0] >= 0x7FFFFFFFFFFFFFF8)
    abort();
  v9 = __src;
  if (__len[0] >= 0x17)
  {
    v10 = (__len[0] & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len[0] | 7) != 0x17)
      v10 = __len[0] | 7;
    v11 = v10 + 1;
    v12 = operator new(v10 + 1);
    v4[1] = v8;
    v4[2] = v11 | 0x8000000000000000;
    *v4 = v12;
    v4 = v12;
  }
  else
  {
    *((_BYTE *)v4 + 23) = __len[0];
    if (!v8)
      goto LABEL_17;
  }
  memmove(v4, v9, v8);
LABEL_17:
  *((_BYTE *)v4 + v8) = 0;
  if (__src != v18)
    free(__src);
  if (v14 >= 0x41)
  {
    if (v13)
      MEMORY[0x2348A0E84](v13, 0x1000C8000313F17);
  }
}

unsigned int *sub_22E99B090(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, unsigned int a6, int a7)
{
  int v13;
  int v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unsigned int *result;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a4;
  v32 = a3;
  if (a7)
  {
    sub_22EFF605C(a2);
    v14 = v13;
    v29 = (unsigned int *)(a1[11] + 2128);
    v30 = a6;
    v15 = (_BYTE *)sub_22E3B8AAC((uint64_t)v29);
    v28 = (unint64_t)v15;
    v16 = v15 + 1;
    v17 = *v15;
    v16[v17] = 9;
    *v15 = v17 + 2;
    *(_QWORD *)&v15[8 * v17 + 16] = a3;
    v18 = (v17 + 1);
    v16[v18] = 9;
    *(_QWORD *)&v15[8 * v18 + 16] = a4;
    sub_22F0D4E74(a2);
    sub_22E4D6448((uint64_t)(v15 + 336), v19, 1);
    sub_22E4D6448((uint64_t)(v15 + 336), a5 | ((unint64_t)a5 << 32), 1);
    v33 = a2;
    if (a2)
      v20 = &v33;
    else
      v20 = 0;
    result = (unsigned int *)sub_22EB52944((uint64_t)a1, v14, v20, a2 != 0, (uint64_t *)&v28);
    if (v28)
    {
      result = v29;
      if (v29)
        return (unsigned int *)sub_22E3BB10C((unint64_t)v29, v28);
    }
  }
  else
  {
    sub_22EFF605C(a2);
    sub_22E8FCA40(a1, v22, a6, 0, (uint64_t)&v28);
    v23 = sub_22E8901B8((uint64_t)&v28, &v32);
    v24 = sub_22E8901B8(v23, &v31);
    sub_22F0D4E74(a2);
    v33 = v25;
    v26 = sub_22E8906A0(v24, &v33);
    LODWORD(v27) = a5;
    HIDWORD(v27) = a5;
    sub_22E8906A0(v26, &v27);
    return sub_22E903BEC((unsigned int *)&v28);
  }
  return result;
}

uint64_t sub_22E99B210(uint64_t *a1, uint64_t a2, unsigned __int8 *a3, unsigned int a4)
{
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18[24];
  unsigned __int8 *v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;

  v22 = a2;
  v21 = a4;
  if (*a3 != 153 || (*(_DWORD *)a3 & 0x1FC0000) != 0x40000)
    goto LABEL_8;
  v7 = (unsigned __int8 *)*((_QWORD *)a3 + 2);
  v8 = *(_QWORD *)(*((_QWORD *)v7 + 1) & 0xFFFFFFFFFFFFFFF0);
  if (v8 && *(_BYTE *)(v8 + 16) == 32)
    goto LABEL_9;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32 && sub_22F10CF48(v8))
    v7 = (unsigned __int8 *)*((_QWORD *)a3 + 2);
  else
LABEL_8:
    v7 = a3;
LABEL_9:
  v9 = *((_QWORD *)v7 + 1);
  v19 = v7;
  v20 = v9;
  result = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF0);
  if (result && *(_BYTE *)(result + 16) == 32
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 32
    && (result = sub_22F10CF48(result)) != 0)
  {
    result = sub_22EB392FC(a1, a2, (uint64_t *)&v19, 0, 0, 1);
    if ((_DWORD)result)
    {
      sub_22F0D5A50((uint64_t)v7);
      sub_22E8FCA40(a1, v11, 0x1A9Au, 0, (uint64_t)v18);
      v12 = sub_22E8901B8((uint64_t)v18, &v20);
      v13 = sub_22E89519C(v12, &v21);
      v14 = sub_22E8901B8(v13, &v22);
      sub_22F0D4E74((uint64_t)v7);
      v17 = v15;
      sub_22E8906A0(v14, &v17);
      result = (uint64_t)sub_22E903BEC(v18);
    }
  }
  v16 = *v7;
  if (v16 == 203)
    return sub_22E99A48C((uint64_t)a1, v22, (uint64_t)v7);
  if (v16 == 201)
    return sub_22E99A3A0(a1, v22, v7);
  return result;
}

uint64_t sub_22E99B3AC(_QWORD *a1)
{
  const llvm::detail::IEEEFloat *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[3];

  v9[2] = *MEMORY[0x24BDAC8D0];
  v2 = (const llvm::detail::IEEEFloat *)(a1 + 1);
  v3 = a1[1];
  v4 = llvm::APFloatBase::PPCDoubleDouble((llvm::APFloatBase *)a1);
  if (v4 == v3)
    MEMORY[0x23489F2A0](&v8, v2);
  else
    llvm::detail::IEEEFloat::IEEEFloat((llvm::detail::IEEEFloat *)&v8, v2);
  llvm::APFloat::convert();
  llvm::APFloat::convert();
  v5 = sub_22E582FD4(&v7, (uint64_t)a1);
  if (v4 == v8)
    sub_22E463170((llvm::APFloatBase *)v9);
  else
    llvm::detail::IEEEFloat::~IEEEFloat((llvm::detail::IEEEFloat *)&v8);
  return v5;
}

unint64_t sub_22E99B4C0(uint64_t a1, unsigned __int8 *a2, uint64_t a3, char a4, int a5)
{
  unsigned __int8 *v8;
  unsigned int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  int v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  _BOOL4 v37;
  BOOL v38;
  unsigned int v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  unsigned int *v42;
  unsigned int *v43;
  unsigned int v44;
  BOOL v45;
  int v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  unsigned __int8 *v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t);
  uint64_t (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  unsigned int *v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int *v71;
  unsigned int v72;
  char v73;
  char v74;
  __int16 v75;
  uint64_t v76;
  uint64_t v77[10];

  v77[9] = *MEMORY[0x24BDAC8D0];
  if (a2)
  {
    while (1)
    {
      v8 = a2;
      v9 = *a2;
      if (v9 > 0xD5)
      {
        if (v9 == 233)
        {
          if ((*(_DWORD *)a2 & 0x7C0000) != 0x300000)
            goto LABEL_19;
          v11 = a2 + 16;
        }
        else
        {
          if (v9 != 214)
            goto LABEL_19;
          v11 = a2 + 24;
        }
      }
      else if (v9 == 155)
      {
        if ((**((_DWORD **)a2 + 2) & 0x18000) != 0)
          goto LABEL_19;
        if (a2[48])
          v11 = a2 + 24;
        else
          v11 = a2 + 32;
      }
      else
      {
        if (v9 != 176)
          goto LABEL_19;
        v10 = *((unsigned int *)a2 + 5);
        if ((_DWORD)v10 == -1)
          goto LABEL_19;
        v11 = &a2[8 * v10 + 40];
      }
      a2 = *(unsigned __int8 **)v11;
      if (*(unsigned __int8 **)v11 == v8)
        goto LABEL_19;
    }
  }
  v8 = 0;
LABEL_19:
  v75 = 0;
  v76 = 0;
  LODWORD(v77[0]) = 0;
  if (sub_22F005120(v8, (uint64_t)&v75, a1, a4))
  {
    v12 = sub_22E99BE54(*((_QWORD *)v8 + 1));
    v13 = sub_22E99BEB0(v77, v12, a3);
LABEL_21:
    v14 = 0;
    v15 = HIDWORD(v13);
LABEL_22:
    LODWORD(v16) = v13;
    goto LABEL_23;
  }
  v18 = *v8;
  if (v18 == 103)
  {
    LOBYTE(v71) = 0;
    if (sub_22F005310(*((unsigned __int8 **)v8 + 3), (uint64_t)&v71, a1, 0))
    {
      v21 = sub_22E99B4C0(a1);
      v14 = v21 >> 40;
      LODWORD(v16) = v21;
    }
    else
    {
      v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v8 + 4) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v24)
        v25 = (*(_DWORD *)(v24 + 16) & 0xFF800FF) == 86507531;
      else
        v25 = 0;
      if (v25)
      {
        v27 = 0;
        v28 = 1;
      }
      else
      {
        v26 = sub_22E99B4C0(a1);
        v27 = v26;
        v28 = BYTE4(v26);
      }
      v34 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v8 + 5) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v34)
        v35 = (*(_DWORD *)(v34 + 16) & 0xFF800FF) == 86507531;
      else
        v35 = 0;
      v36 = 0x100000000;
      if (!v35)
        v36 = sub_22E99B4C0(a1);
      v14 = 0;
      v37 = v28 == 0;
      if (BYTE4(v36))
      {
        v38 = v28 == 0;
      }
      else
      {
        v37 = 1;
        v38 = 1;
      }
      if (v38)
        v21 = 0;
      else
        v21 = 0x100000000;
      v39 = (__PAIR64__(v36, BYTE4(v36)) - 1) >> 32;
      if ((__PAIR64__(v27, v28) - 1) >> 32 > v39)
        v39 = (__PAIR64__(v27, v28) - 1) >> 32;
      LODWORD(v16) = v39 + v37;
    }
    v15 = HIDWORD(v21);
    goto LABEL_23;
  }
  if (v18 != 153)
  {
    if ((v18 & 0xFE) == 0x70)
    {
      v22 = (*(_DWORD *)v8 >> 18) & 0x3F;
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 2000) + 238) & 0x80) == 0)
      {
        v23 = sub_22E99C184;
        v14 = 0;
        LOBYTE(v15) = 1;
        LODWORD(v16) = 1;
        switch(v22)
        {
          case 0:
          case 1:
          case 22:
          case 23:
          case 24:
          case 25:
          case 26:
          case 27:
          case 30:
          case 31:
            goto LABEL_116;
          case 2:
            v54 = sub_22E99C288;
            goto LABEL_104;
          case 3:
            goto LABEL_88;
          case 4:
            v23 = (uint64_t (*)(uint64_t, uint64_t))sub_22E99C2DC;
            goto LABEL_106;
          case 5:
            v54 = sub_22E99C1FC;
            goto LABEL_104;
          case 6:
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v8 + 2) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                  + 8) & 0xFFFFFFFFFFFFFFF0)
                          + 16) == 39)
              goto LABEL_116;
            v54 = sub_22E99C240;
LABEL_104:
            if (!a5)
              v23 = v54;
            goto LABEL_106;
          case 7:
            goto LABEL_91;
          case 8:
          case 28:
            goto LABEL_80;
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
          case 19:
          case 20:
            goto LABEL_23;
          case 16:
          case 29:
            v23 = (uint64_t (*)(uint64_t, uint64_t))sub_22E99C1C8;
            goto LABEL_106;
          case 21:
          case 32:
            goto LABEL_49;
          default:
            goto LABEL_106;
        }
      }
      v23 = sub_22E99C184;
      v14 = 0;
      LOBYTE(v15) = 1;
      LODWORD(v16) = 1;
      switch(v22)
      {
        case 0:
        case 1:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 30:
        case 31:
          break;
        case 2:
        case 5:
          v30 = sub_22E99B4C0(a1);
          v31 = sub_22E99B4C0(a1);
          v14 = 0;
          if (v30 <= v31)
            LODWORD(v16) = v31;
          else
            LODWORD(v16) = v30;
          v32 = (v30 & 0xFF00000000) == 0;
          goto LABEL_56;
        case 3:
LABEL_88:
          v47 = sub_22E99BE54(*((_QWORD *)v8 + 1));
          sub_22EF6A330(a1, v47);
          v16 = sub_22E99B4C0(a1);
          v15 = HIDWORD(v16);
          v14 = v16 >> 40;
          sub_22F00905C(*((_QWORD *)v8 + 3), a1, 0, (uint64_t)&v71);
          if (!v74)
          {
            LOBYTE(v15) = BYTE4(v16) & ((unint64_t)sub_22E99B4C0(a1) >> 32) & 1;
            goto LABEL_23;
          }
          v48 = v72;
          if (v72 > 0x40)
            v49 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v71);
          else
            v49 = v72 + __clz((unint64_t)v71) - 64;
          v66 = v48 + ~v49;
          v67 = v16 - v66;
          if (v16 - v66 >= a3)
            v67 = a3;
          if (v16 <= v66)
            LODWORD(v16) = (v16 & 0x100000000) == 0;
          else
            LODWORD(v16) = v67;
          if (v48 >= 0x41)
          {
            v42 = v71;
            if (v71)
              goto LABEL_133;
          }
          goto LABEL_23;
        case 4:
          v60 = sub_22E99BE54(*((_QWORD *)v8 + 1));
          sub_22EF6A330(a1, v60);
          v61 = sub_22E99B4C0(a1);
          v62 = sub_22E99B4C0(a1);
          v14 = 0;
          if (v62 >= v61)
            v63 = v61;
          else
            v63 = v62;
          LOBYTE(v15) = ((v61 | v62) & 0xFF00000000) != 0;
          if (v63 >= a3)
            LODWORD(v16) = a3;
          else
            LODWORD(v16) = v63;
          goto LABEL_23;
        case 6:
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v8 + 2) + 8) & 0xFFFFFFFFFFFFFFF0)
                                                + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) == 39)
            break;
          v68 = sub_22E99B4C0(a1);
          v31 = sub_22E99B4C0(a1);
          v14 = 0;
          if (v68 <= v31)
            LODWORD(v16) = v31;
          else
            LODWORD(v16) = v68;
          v32 = (v68 & 0xFF00000000) == 0;
LABEL_56:
          v33 = !v32;
          if ((v31 & 0xFF00000000) != 0)
            LOBYTE(v15) = v33;
          else
            LOBYTE(v15) = 0;
          goto LABEL_23;
        case 7:
LABEL_91:
          v50 = sub_22EFFBBCC(*((unsigned __int8 **)v8 + 2));
          if (*v50 != 181)
            break;
          sub_22F257F94((uint64_t)(v50 + 16), (llvm::APInt *)&v71);
          v51 = v72;
          if (v72 < 0x41)
          {
            if (v71 != (unsigned int *)1)
              break;
LABEL_140:
            v70 = sub_22E99BE54(*((_QWORD *)v8 + 1));
            LODWORD(v13) = sub_22E99C018(a1, v70);
            v14 = 0;
            LOBYTE(v15) = 1;
            goto LABEL_22;
          }
          if (v51 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)&v71) < 0x41)
          {
            v69 = *(_QWORD *)v71;
            MEMORY[0x2348A0E84]();
            if (v69 != 1)
              break;
            goto LABEL_140;
          }
          if (v71)
            MEMORY[0x2348A0E84](v71, 0x1000C8000313F17);
          break;
        case 8:
        case 28:
LABEL_80:
          v16 = sub_22E99B4C0(a1);
          v15 = HIDWORD(v16);
          v14 = v16 >> 40;
          sub_22F00905C(*((_QWORD *)v8 + 3), a1, 0, (uint64_t)&v71);
          if (!v74)
            goto LABEL_23;
          if (v73)
          {
            v42 = v71;
          }
          else
          {
            v42 = v71;
            v65 = &v71[2 * ((v72 - 1) >> 6)];
            if (v72 < 0x41)
              v65 = (unsigned int *)&v71;
            if (((*(_QWORD *)v65 >> (v72 - 1)) & 1) != 0)
            {
LABEL_120:
              if (v72 >= 0x41 && v42)
LABEL_133:
                MEMORY[0x2348A0E84](v42, 0x1000C8000313F17);
              goto LABEL_23;
            }
          }
          v43 = (unsigned int *)&v71;
          if (v72 >= 0x41)
            v43 = v42;
          v44 = *v43;
          v45 = v16 >= v44;
          v46 = v16 - v44;
          if (v46 != 0 && v45)
            LODWORD(v16) = v46;
          else
            LODWORD(v16) = (v16 & 0xFF00000000) == 0;
          goto LABEL_120;
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 19:
        case 20:
          goto LABEL_23;
        case 16:
        case 29:
          v52 = sub_22E99B4C0(a1);
          v53 = sub_22E99B4C0(a1);
          v14 = 0;
          if (v53 >= v52)
            LODWORD(v16) = v52;
          else
            LODWORD(v16) = v53;
          LOBYTE(v15) = ((v52 | v53) & 0xFF00000000) != 0;
          goto LABEL_23;
        case 21:
        case 32:
          goto LABEL_49;
        default:
LABEL_106:
          v55 = v23;
          v56 = sub_22E99BE54(*((_QWORD *)v8 + 1));
          sub_22EF6A330(a1, v56);
          v57 = sub_22E99B4C0(a1);
          v58 = sub_22E99B4C0(a1);
          v59 = v55(v57, v58);
          v14 = v59 >> 40;
          v15 = sub_22F110C5C(*(_QWORD *)(v56 & 0xFFFFFFFFFFFFFFF0)) | HIDWORD(v59);
          if (v59 >= a3)
            LODWORD(v16) = a3;
          else
            LODWORD(v16) = v59;
          goto LABEL_23;
      }
    }
    else
    {
      if (v18 == 210)
        goto LABEL_49;
      if (v18 == 233)
      {
        v29 = (*(_DWORD *)v8 >> 18) & 0x1F;
        if ((v29 - 4) >= 2)
        {
          if (v29 == 9)
          {
            v14 = 0;
            LOBYTE(v15) = 1;
            LODWORD(v16) = 1;
            goto LABEL_23;
          }
LABEL_49:
          v13 = sub_22E99B4C0(a1);
          v15 = HIDWORD(v13);
          v14 = v13 >> 40;
          goto LABEL_22;
        }
      }
      else
      {
        v40 = sub_22F0018D8(v8);
        if (v40)
        {
          v41 = v40;
          LODWORD(v16) = sub_22EFC2EF4((uint64_t)v40, a1);
          v14 = 0;
          LOBYTE(v15) = sub_22F110C5C(*(_QWORD *)(*((_QWORD *)v41 + 6) & 0xFFFFFFFFFFFFFFF0));
          goto LABEL_23;
        }
      }
    }
LABEL_116:
    v64 = sub_22E99BE54(*((_QWORD *)v8 + 1));
    v13 = sub_22E99C018(a1, v64);
    goto LABEL_21;
  }
  if ((*(_DWORD *)v8 & 0x1F80000) == 0x100000)
    goto LABEL_49;
  v19 = sub_22E99BE54(*((_QWORD *)v8 + 1));
  v16 = sub_22E99C018(a1, v19);
  v15 = HIDWORD(v16);
  v20 = (*(_DWORD *)v8 >> 18) & 0x7F;
  if (v20 == 41 || v20 == 30)
  {
    v13 = sub_22E99B4C0(a1);
    if (v16 > v13)
    {
      v14 = 0;
      LOBYTE(v15) = (v13 & 0x100000000 | HIDWORD(v16)) != 0;
      goto LABEL_22;
    }
  }
  v14 = 0;
LABEL_23:
  if (LODWORD(v77[0]) >= 2)
    sub_22EF53BC0(v77);
  return ((unint64_t)v15 << 32) | (v14 << 40) | v16;
}

uint64_t sub_22E99BE54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v1 = a1;
  v2 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (v2)
    v3 = *(_BYTE *)(v2 + 16) == 6;
  else
    v3 = 0;
  if (v3)
    return *(_QWORD *)(v2 + 32);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 6)
  {
    v2 = sub_22F10CF48(v2);
    if (v2)
      return *(_QWORD *)(v2 + 32);
  }
  return v1;
}

unint64_t sub_22E99BEB0(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  int v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _BOOL4 v19;
  unsigned int v20;
  unsigned int v21;

  v6 = *a1;
  if (*a1 == 8)
  {
    v14 = sub_22E99BEB0(*((_QWORD *)a1 + 1), a2, a3);
    v9 = v14;
    v8 = HIDWORD(v14);
    v15 = a1[4];
    v16 = v15 - 1;
    if (v15 != 1)
    {
      v17 = 72;
      do
      {
        v18 = sub_22E99BEB0(*((_QWORD *)a1 + 1) + v17, a2, a3);
        v19 = v8 == 0;
        v20 = (__PAIR64__(v9, v8) - 1) >> 32;
        if (BYTE4(v18))
        {
          LOBYTE(v8) = v8 != 0;
        }
        else
        {
          v19 = 1;
          LOBYTE(v8) = 0;
        }
        v21 = (__PAIR64__(v18, BYTE4(v18)) - 1) >> 32;
        if (v20 > v21)
          v21 = v20;
        v9 = v21 + v19;
        v17 += 72;
        --v16;
      }
      while (v16);
    }
  }
  else if (v6 == 5)
  {
    v10 = sub_22E99C310((llvm::APInt *)(a1 + 2), a3);
    v11 = sub_22E99C310((llvm::APInt *)(a1 + 6), a3);
    v12 = BYTE4(v10) == 0;
    if (BYTE4(v11))
    {
      LOBYTE(v8) = BYTE4(v10) != 0;
    }
    else
    {
      v12 = 1;
      LOBYTE(v8) = 0;
    }
    v13 = (__PAIR64__(v11, BYTE4(v11)) - 1) >> 32;
    if ((__PAIR64__(v10, BYTE4(v10)) - 1) >> 32 > v13)
      v13 = (__PAIR64__(v10, BYTE4(v10)) - 1) >> 32;
    v9 = v13 + v12;
  }
  else if (v6 == 2)
  {
    v7 = sub_22E99C310((llvm::APInt *)(a1 + 2), a3);
    v8 = HIDWORD(v7);
    v9 = v7;
  }
  else
  {
    LOBYTE(v8) = sub_22F110C5C(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
    v9 = a3;
  }
  return v9 | ((unint64_t)v8 << 32);
}

unint64_t sub_22E99C018(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  BOOL v5;
  int v6;
  BOOL v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v14;
  unsigned int v15;
  unint64_t v16;
  unsigned int v17;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(unsigned __int8 *)(v3 + 16);
  if (v3)
    v5 = (v4 - 57) >= 0xFFFFFFFE;
  else
    v5 = 0;
  if (v5)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0);
    v4 = *(unsigned __int8 *)(v3 + 16);
  }
  if (v4 == 12)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0);
    v4 = *(unsigned __int8 *)(v3 + 16);
  }
  if (v4 == 6)
    v3 = *(_QWORD *)(*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v3 + 16);
  if (v3)
    v7 = v6 == 44;
  else
    v7 = 0;
  v8 = !v7;
  if ((*(_BYTE *)(*(_QWORD *)(a1 + 2000) + 1) & 1) == 0)
  {
    if ((v8 & 1) == 0)
    {
      v9 = sub_22F114198(*(_QWORD *)(v3 + 24));
      v10 = sub_22E496830(v9);
      v3 = *(_QWORD *)(sub_22F40989C(v10, a1) & 0xFFFFFFFFFFFFFFF0);
      v6 = *(unsigned __int8 *)(v3 + 16);
    }
    goto LABEL_21;
  }
  if ((v8 & 1) != 0)
  {
LABEL_21:
    if (v6 == 9)
    {
      v11 = *(_DWORD *)(v3 + 32);
      v12 = (v11 >> 1) & 0xFFFFFF;
      v13 = v11 & 1;
    }
    else
    {
      v12 = sub_22EF6A330(a1, v3 & 0xFFFFFFFFFFFFFFF0);
      v13 = ((*(_DWORD *)(v3 + 16) >> 19) & 0x1FEu) - 166 < 0xC;
    }
    return v12 | (unint64_t)(v13 << 32);
  }
  v14 = *(_QWORD *)(sub_22F114198(*(_QWORD *)(v3 + 24)) + 72);
  if ((v14 & 0x20000000000) != 0)
  {
    v12 = sub_22EF6A330(a1, v3 & 0xFFFFFFFFFFFFFFF0);
    v13 = !sub_22F110A40(v3);
  }
  else
  {
    v15 = (v14 >> 23);
    v16 = v14 >> 31;
    if (v15 + 1 > v16)
      v17 = v15 + 1;
    else
      v17 = v16;
    v7 = v16 == 0;
    v13 = v7;
    if (v7)
      v12 = v15;
    else
      v12 = v17;
  }
  return v12 | (unint64_t)(v13 << 32);
}

uint64_t sub_22E99C184(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;
  BOOL v3;
  uint64_t v4;
  unsigned int v5;

  v2 = BYTE4(a1) == 0;
  if (BYTE4(a2))
  {
    v3 = BYTE4(a1) == 0;
  }
  else
  {
    v2 = 1;
    v3 = 1;
  }
  v4 = 0x100000000;
  if (v3)
    v4 = 0;
  v5 = (__PAIR64__(a2, BYTE4(a2)) - 1) >> 32;
  if ((__PAIR64__(a1, BYTE4(a1)) - 1) >> 32 > v5)
    v5 = (__PAIR64__(a1, BYTE4(a1)) - 1) >> 32;
  return v4 | (v5 + v2);
}

unint64_t sub_22E99C1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;

  if (a1 <= a2)
    LODWORD(v2) = a2;
  else
    LODWORD(v2) = a1;
  if ((a1 & 0xFF00000000) != 0)
    LODWORD(v2) = a1;
  if (v2 >= a2)
    v3 = a2;
  else
    v3 = v2;
  if ((a2 & 0xFF00000000) != 0)
    v2 = v3;
  else
    v2 = v2;
  return v2 | ((unint64_t)((a2 & 0xFF00000000 | a1 & 0xFF00000000) != 0) << 32);
}

uint64_t sub_22E99C1FC(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (a2 & 0xFF00000000) == 0 || (a1 & 0xFF00000000) == 0;
  v3 = a1 - ((a1 & 0xFF00000000) == 0);
  if (v3 <= a2 - ((a2 & 0xFF00000000) == 0))
    v3 = a2 - ((a2 & 0xFF00000000) == 0);
  if (v2)
    v4 = 2;
  else
    v4 = 1;
  v5 = v3 + v4;
  v6 = 0x100000000;
  if (v2)
    v6 = 0;
  return v6 | v5;
}

uint64_t sub_22E99C240(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;
  _BOOL4 v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (a2 & 0xFF00000000) == 0 || (a1 & 0xFF00000000) == 0;
  if ((_DWORD)a2)
    v3 = 1;
  else
    v3 = (a1 & 0xFF00000000) == 0;
  v4 = a1 - ((a1 & 0xFF00000000) == 0);
  if (v4 <= a2 - ((a2 & 0xFF00000000) == 0))
    v4 = a2 - ((a2 & 0xFF00000000) == 0);
  v5 = v3 + v2 + v4;
  v6 = 0x100000000;
  if (v3)
    v6 = 0;
  return v6 | v5;
}

uint64_t sub_22E99C288(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;

  v2 = BYTE4(a2) != 0;
  if (BYTE4(a1) | BYTE4(a2))
    v3 = (__PAIR64__((__PAIR64__((int)a2 + (int)a1, BYTE4(a1)) - 1) >> 32, BYTE4(a2)) - 1) >> 32;
  else
    v3 = ((__PAIR64__((__PAIR64__((int)a2 + (int)a1, BYTE4(a1)) - 1) >> 32, BYTE4(a2)) - 1) >> 32) + 1;
  v4 = BYTE4(a1) == 0 || !v2;
  v5 = v3 + (BYTE4(a1) == 0 || !v2);
  v6 = 0x100000000;
  if (v4)
    v6 = 0;
  return v5 | v6;
}

unint64_t sub_22E99C2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  LODWORD(v2) = a1 - ((a1 & 0xFF00000000) == 0);
  if (a2 - ((a2 & 0xFF00000000) == 0) < v2)
    LODWORD(v2) = a2 - ((a2 & 0xFF00000000) == 0);
  if ((a1 & 0xFF00000000) != 0)
    v2 = v2;
  else
    v2 = (v2 + 1);
  return v2 | ((unint64_t)((a1 & 0xFF00000000) != 0) << 32);
}

uint64_t sub_22E99C310(llvm::APInt *this, unsigned int a2)
{
  unsigned int v3;
  char v4;
  int v5;
  llvm::APInt *v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v11;
  unsigned int v12;

  v3 = *((_DWORD *)this + 2);
  if (*((_BYTE *)this + 12))
    goto LABEL_2;
  v6 = (llvm::APInt *)(*(_QWORD *)this + 8 * ((v3 - 1) >> 6));
  if (v3 < 0x41)
    v6 = this;
  if (((*(_QWORD *)v6 >> (v3 - 1)) & 1) == 0)
  {
LABEL_2:
    if (v3 > a2)
    {
      llvm::APInt::trunc(this);
      v4 = *((_BYTE *)this + 12);
      v3 = v12;
      if (*((_DWORD *)this + 2) >= 0x41u && *(_QWORD *)this)
        MEMORY[0x2348A0E84](*(_QWORD *)this, 0x1000C8000313F17);
      *(_QWORD *)this = v11;
      *((_DWORD *)this + 2) = v12;
      *((_BYTE *)this + 12) = v4;
    }
    if (v3 > 0x40)
      v5 = llvm::APInt::countLeadingZerosSlowCase(this);
    else
      v5 = v3 + __clz(*(_QWORD *)this) - 64;
    v9 = v3 - v5;
    v8 = 0x100000000;
  }
  else
  {
    v7 = sub_22E99C40C(this);
    v8 = 0;
    v9 = v3 - v7 + 1;
  }
  return v8 | v9;
}

unint64_t sub_22E99C40C(llvm::APInt *a1)
{
  unsigned int v1;
  unsigned int v2;
  unint64_t v3;

  v1 = *((_DWORD *)a1 + 2);
  v2 = v1 - 1;
  if (v1 > 0x40)
  {
    if (((*(_QWORD *)(*(_QWORD *)a1 + 8 * (v2 >> 6)) >> v2) & 1) != 0)
      return llvm::APInt::countLeadingOnesSlowCase(a1);
    else
      return llvm::APInt::countLeadingZerosSlowCase(a1);
  }
  else
  {
    v3 = *(_QWORD *)a1;
    if (((*(_QWORD *)a1 >> v2) & 1) != 0)
    {
      if (v1)
        return __clz(~(v3 << -(char)v1));
      else
        return 0;
    }
    else
    {
      return v1 + __clz(v3) - 64;
    }
  }
}

llvm::APFloatBase *sub_22E99C474(llvm::APFloatBase *a1, uint64_t a2)
{
  if (llvm::APFloatBase::PPCDoubleDouble(a1) == a2)
    llvm::detail::DoubleAPFloat::DoubleAPFloat();
  else
    llvm::detail::IEEEFloat::IEEEFloat();
  return a1;
}

uint64_t sub_22E99C4C0(_QWORD *a1, unsigned int *a2, unsigned int a3, unsigned int a4)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned int v31[24];
  unsigned int v32;
  unsigned int v33;

  v32 = a4;
  v33 = a3;
  v6 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1)] + ((unint64_t)*a2 >> 24);
  v9 = *(_QWORD *)(v6 + 8);
  v7 = v6 + 8;
  v8 = v9;
  if (a3 == -1)
    v10 = 0;
  else
    v10 = *(_QWORD *)(v7 + 8 * a3);
  v11 = *(_QWORD *)(v7 + 8 * a4);
  v12 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0));
  v13 = v12;
  if (v10)
  {
    v14 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0));
    v15 = (_QWORD *)(*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (*v15 != *(_QWORD *)(*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
    {
      sub_22EFFAE7C(a2);
      sub_22E8FCA40(a1, v16, 0xEE8u, 0, (uint64_t)v31);
      v17 = sub_22E89519C((uint64_t)v31, &v33);
      v30 = 0;
      v18 = sub_22E8900C4(v17, &v30);
      sub_22F0D4E74(v8);
      v29 = v19;
      v20 = sub_22E8906A0(v18, &v29);
      v21 = v10;
LABEL_10:
      sub_22F0D4E74(v21);
      v28 = v26;
      sub_22E8906A0(v20, &v28);
      sub_22E903BEC(v31);
      return 1;
    }
  }
  else
  {
    v15 = (_QWORD *)(*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  }
  if (*v15 != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v22, 0xEE7u, 0, (uint64_t)v31);
    v23 = sub_22E89519C((uint64_t)v31, &v32);
    v30 = 0;
    v24 = sub_22E8900C4(v23, &v30);
    sub_22F0D4E74(v8);
    v29 = v25;
    v20 = sub_22E8906A0(v24, &v29);
    v21 = v11;
    goto LABEL_10;
  }
  return 0;
}

BOOL sub_22E99C688(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if ((v1 && *(_BYTE *)(v1 + 16) == 39
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39
     && (v1 = sub_22F10CF48(v1)) != 0)
    && (v2 = *(_QWORD *)((*(_QWORD *)(v1 + 32) & 0xFFFFFFFFFFFFFFF0) + 8), (v2 & 8) != 0))
  {
    return ((*(_DWORD *)((v2 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11) - 13) < 0xFFFFFFFE;
  }
  else
  {
    return 1;
  }
}

uint64_t sub_22E99C700(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v4;
  int v6;
  uint64_t v7;
  _DWORD *v8;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v3)
    v4 = *(_DWORD *)(v3 + 16) == 11;
  else
    v4 = 0;
  if (!v4)
    return 1;
  if (a3)
  {
    v6 = (*(_DWORD *)(v3 + 16) >> 19) & 0x1FF;
    v7 = 4 * a3;
    v8 = a2;
    while (*v8 != v6)
    {
      ++v8;
      v7 -= 4;
      if (!v7)
      {
        v8 = &a2[a3];
        return a3 == v8 - a2;
      }
    }
  }
  else
  {
    v8 = a2;
  }
  return a3 == v8 - a2;
}

uint64_t sub_22E99C778(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (v1 && *(_BYTE *)(v1 + 16) == 39)
    return sub_22E99C7D0(*(_QWORD *)(v1 + 32));
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39 && (v1 = sub_22F10CF48(v1)) != 0)
    return sub_22E99C7D0(*(_QWORD *)(v1 + 32));
  else
    return 1;
}

uint64_t sub_22E99C7D0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  BOOL v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t result;

  v1 = a1 & 0xFFFFFFFFFFFFFFF0;
  v2 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_DWORD *)(v3 + 16);
  v5 = v4;
  if (v3)
    v6 = v4 == 11;
  else
    v6 = 0;
  if (v6)
  {
    if (((v4 >> 19) & 0x1FF) - 166 >= 0x35)
      return 1;
  }
  else
  {
    if (v3 && v4 == 44)
    {
      v7 = sub_22F114198(*(_QWORD *)(v3 + 24));
      if ((*(_BYTE *)(v7 + 74) & 1) != 0 || *(_QWORD *)(v7 + 128) > 7uLL)
        return 0;
      v2 = *(_QWORD *)v1;
      v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
    }
    else
    {
      v8 = v4 - 9;
      if (v8 < 0x1Fu && ((0x40C0000Bu >> v8) & 1) != 0)
        return 0;
    }
    if ((v5 - 55) > 1)
      return 1;
    result = sub_22E3E4B64(v2);
    if (!result)
      return result;
    if ((*(_DWORD *)(result + 16) & 0x780000) == 0x80000)
      return 1;
  }
  return 0;
}

uint64_t sub_22E99C8B4(_QWORD *a1, unsigned int *a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34[24];
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;

  v37 = a4;
  v38 = a3;
  v35 = a6;
  v36 = a5;
  v8 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24);
  if (a4 == -1)
    v9 = 0;
  else
    v9 = *(_QWORD *)(v8 + 8 * a4);
  v10 = *(_QWORD *)(v8 + 8 * a3);
  if (a5 == -1)
    v11 = 0;
  else
    v11 = *(_QWORD *)(v8 + 8 * a5);
  if (a6 == -1)
    v12 = 0;
  else
    v12 = *(_QWORD *)(v8 + 8 * a6);
  v13 = *(_QWORD *)(v10 + 8);
  v14 = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFFFF0);
  if (v14 && *(_BYTE *)(v14 + 16) == 56
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
    && (v14 = sub_22F10CF48(v14)) != 0)
  {
    v13 = *(_QWORD *)(v14 + 32);
  }
  if (v12
    && *(_QWORD *)(*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                  + 16) == 56)
      v15 = 3819;
    else
      v15 = 3818;
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v16, v15, 0, (uint64_t)v34);
    v17 = sub_22E89519C((uint64_t)v34, &v38);
    v18 = sub_22E89519C(v17, &v35);
    sub_22F0D4E74(v10);
    v33 = v19;
    v20 = sub_22E8906A0(v18, &v33);
    v21 = v12;
    goto LABEL_27;
  }
  if (v9
    && *(_QWORD *)(*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v22, 0xEEAu, 0, (uint64_t)v34);
    v23 = sub_22E89519C((uint64_t)v34, &v38);
    v24 = sub_22E89519C(v23, &v37);
    sub_22F0D4E74(v10);
    v33 = v25;
    v20 = sub_22E8906A0(v24, &v33);
    v21 = v9;
LABEL_27:
    sub_22F0D4E74(v21);
    v32 = v30;
    sub_22E8906A0(v20, &v32);
    sub_22E903BEC(v34);
    return 1;
  }
  if (v11
    && *(_QWORD *)(*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v26, 0xEEAu, 0, (uint64_t)v34);
    v27 = sub_22E89519C((uint64_t)v34, &v38);
    v28 = sub_22E89519C(v27, &v36);
    sub_22F0D4E74(v10);
    v33 = v29;
    v20 = sub_22E8906A0(v28, &v33);
    v21 = v11;
    goto LABEL_27;
  }
  return 0;
}

BOOL sub_22E99CB80(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;

  v2 = 2;
  v3 = 1 << ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) >> 19)
           + 29);
  if ((v3 & 0xFDEC) == 0)
  {
    if ((v3 & 0x203) != 0)
    {
      v5 = (_QWORD *)(a1 + 8);
      goto LABEL_10;
    }
    v2 = 3;
  }
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v4 || *(_BYTE *)(v4 + 16) != 56)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      return 1;
    v4 = sub_22F10CF48(v4);
    if (!v4)
      return 1;
  }
  if (*(_DWORD *)(v4 + 20) != v2)
    return 1;
  v5 = (_QWORD *)(v4 + 32);
LABEL_10:
  v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v5 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v6)
    v7 = *(_DWORD *)(v6 + 16) == 11;
  else
    v7 = 0;
  if (!v7)
    return 1;
  return ((*(_DWORD *)(v6 + 16) >> 19) & 0x1FFu) - 175 < 0xFFFFFFFE;
}

unint64_t sub_22E99CC7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if ((v1 && *(_BYTE *)(v1 + 16) == 56
     || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
     && (v1 = sub_22F10CF48(v1)) != 0)
    && *(_DWORD *)(v1 + 20) == 4
    && ((v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)) != 0
      ? (v3 = *(_DWORD *)(v2 + 16) == 11)
      : (v3 = 0),
        v3 && ((*(_DWORD *)(v2 + 16) >> 19) & 0x1FFu) - 173 <= 0x26))
  {
    return (0x1FFFFFFCF8uLL >> ((*(_DWORD *)(v2 + 16) >> 19) + 83)) & 1;
  }
  else
  {
    return 1;
  }
}

uint64_t sub_22E99CD24(_QWORD *a1, unsigned int *a2, uint64_t a3, unsigned int (*a4)(uint64_t, uint64_t))
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  unint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28[24];
  unint64_t v29;

  if (!sub_22E979C64(a1, a2, (unsigned __int16)(*(_QWORD *)(a3 + 16) >> 38)))
  {
    v9 = *(_QWORD *)(a3 + 16);
    if ((v9 & 0x3FFFC000000000) == 0)
    {
      v8 = 0;
      return v8 & 1;
    }
    v10 = 0;
    v8 = 0;
    v11 = a2 + 2;
    v12 = a3 + 40;
    v13 = (unsigned __int16)(v9 >> 38);
    while (1)
    {
      v14 = *(_QWORD *)(v12 + 8 * v10);
      v15 = *(_QWORD *)((char *)&v11[2 * (((unint64_t)*a2 >> 18) & 1) + 2 * v10] + ((unint64_t)*a2 >> 24));
      v29 = v15;
      v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      if (!v16 || (*(_DWORD *)(v16 + 16) & 0xFF800FF) != 137887755)
        break;
      if (a4(v10, v15))
      {
        sub_22F0D5A50(v15);
        sub_22E8FCA40(a1, v20, 0xEEEu, 0, (uint64_t)v28);
        v27 = *(_QWORD *)(v15 + 8);
        v21 = sub_22E8901B8((uint64_t)v28, &v27);
        v22 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
        if ((*(_DWORD *)(v22 + 28) & 0x7Eu) - 52 >= 6)
          v23 = 0;
        else
          v23 = v22;
        v26 = *(_QWORD *)(v23 + 40);
        sub_22E894538(v21, &v26);
        sub_22E903BEC(v28);
LABEL_16:
        v18 = 1;
        goto LABEL_20;
      }
      v18 = 1;
      v24 = sub_22EB1B954((uint64_t)a1, *(void **)((char *)&v11[2 * (((unint64_t)*a2 >> 18) & 1) + 2 * v10] + ((unint64_t)*a2 >> 24)));
      if ((v24 & 1) == 0)
      {
        v18 = 0;
        v19 = v24 & 0xFFFFFFFFFFFFFFFELL;
        goto LABEL_19;
      }
LABEL_20:
      v8 |= v18;
      if (v13 == ++v10)
        return v8 & 1;
    }
    if ((sub_22E9969B8((uint64_t)a1, &v29, v14) & 1) == 0)
    {
      v18 = 0;
      v19 = v29;
LABEL_19:
      *(_QWORD *)((char *)&v11[2 * (((unint64_t)*a2 >> 18) & 1) + 2 * v10] + ((unint64_t)*a2 >> 24)) = v19;
      goto LABEL_20;
    }
    goto LABEL_16;
  }
  v8 = 1;
  return v8 & 1;
}

BOOL sub_22E99CF1C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  BOOL v6;
  int v7;
  uint64_t v9;
  BOOL v10;

  v2 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0;
  v3 = *(_QWORD *)v2;
  if (!*(_QWORD *)v2 || *(_BYTE *)(v3 + 16) != 56)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      goto LABEL_10;
    v3 = sub_22F10CF48(v3);
    if (!v3)
      goto LABEL_10;
  }
  v4 = *(_DWORD *)(v3 + 20);
  v5 = 1;
  v6 = v4 > 0x10;
  v7 = (1 << v4) & 0x1011C;
  if (!v6 && v7 != 0)
  {
    v2 = *(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0;
LABEL_10:
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v9)
      v10 = *(_DWORD *)(v9 + 16) == 11;
    else
      v10 = 0;
    return !v10 || ((*(_DWORD *)(v9 + 16) >> 19) & 0x1FFu) - 213 < 0xFFFFFFFD;
  }
  return v5;
}

BOOL sub_22E99CFDC(_QWORD *a1, unsigned int *a2, int a3)
{
  unint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _BOOL8 v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned int v25[25];
  unsigned int v26;

  v3 = a2[4] - a3;
  if (v3 < 2)
    return 0;
  v5 = *a2;
  v6 = (v5 >> 18) & 1;
  v7 = (uint64_t)&a2[2 * v6] + (v5 >> 24);
  v8 = *(_QWORD *)(v7 + 8);
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v10 == *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
  {
    v13 = 0;
    v14 = (uint64_t)&a2[2 * v6 + 6] + (v5 >> 24);
    while (v3 - 2 != v13)
    {
      v9 = *(_QWORD *)(v14 + 8 * v13++);
      if (v10 != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
      {
        v11 = v13 + 1;
        v12 = v13 + 1 < v3;
        goto LABEL_8;
      }
    }
    return 0;
  }
  v11 = 1;
  v12 = 1;
LABEL_8:
  v26 = v11;
  sub_22EFFAE7C(a2);
  sub_22E8FCA40(a1, v15, 0xEEAu, 0, (uint64_t)v25);
  v24 = 0;
  v16 = sub_22E8900C4((uint64_t)v25, &v24);
  v17 = sub_22E89519C(v16, &v26);
  sub_22F0D4E74(v8);
  v23 = v18;
  v19 = sub_22E8906A0(v17, &v23);
  sub_22F0D4E74(v9);
  v22 = v20;
  sub_22E8906A0(v19, &v22);
  sub_22E903BEC(v25);
  return v12;
}

BOOL sub_22E99D140(_QWORD *a1, unsigned int *a2, int a3)
{
  _BOOL8 v3;
  uint64_t v4;
  _QWORD *v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  char v17;
  _QWORD *v18;
  unsigned int v19;
  char v20;

  v3 = 0;
  v4 = *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2 * a2[4]] + ((unint64_t)*a2 >> 24));
  LOBYTE(v18) = 0;
  v20 = 0;
  if (a3)
  {
    sub_22F00905C(v4, a1[11], 0, (uint64_t)&v15);
    sub_22E54C490((uint64_t)&v18, (uint64_t)&v15);
    if (v20)
    {
      if (v19 >= 0x41)
        v7 = v18;
      else
        v7 = &v18;
      v3 = *v7 > 3uLL;
    }
    else
    {
      v3 = 0;
    }
    if (v17 && v16 >= 0x41 && v15)
      MEMORY[0x2348A0E84](v15, 0x1000C8000313F17);
    if (v3)
    {
      sub_22EFFAE7C(a2);
      sub_22E8FCA40(a1, v8, 0xEE6u, 0, (uint64_t)&v15);
      v9 = &v18;
      if (v19 >= 0x41)
        v9 = v18;
      v14 = *v9;
      v10 = sub_22E8900C4((uint64_t)&v15, &v14);
      sub_22F0D4E74(v4);
      v13 = v11;
      sub_22E8906A0(v10, &v13);
      sub_22E903BEC((unsigned int *)&v15);
    }
    if (v20 && v19 >= 0x41 && v18)
      MEMORY[0x2348A0E84](v18, 0x1000C8000313F17);
  }
  return v3;
}

uint64_t sub_22E99D2C8(_QWORD *a1, unsigned int *a2)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t *v6;
  unint64_t v7;
  _BOOL8 v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  unsigned int v16[24];
  unint64_t *v17;
  unsigned int v18;
  char v19;

  v4 = *(_QWORD *)((char *)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 4] + ((unint64_t)*a2 >> 24));
  sub_22F00905C(v4, a1[11], 0, (uint64_t)&v17);
  if (!v19)
    return 0;
  v5 = v18;
  v6 = v17;
  if (v18 < 0x41)
    v6 = (unint64_t *)&v17;
  v7 = *v6;
  v8 = v7 > 3;
  if (v7 >= 4)
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v9, 0xEE6u, 0, (uint64_t)v16);
    v10 = &v17;
    if (v18 >= 0x41)
      v10 = v17;
    v15 = *v10;
    v11 = sub_22E8900C4((uint64_t)v16, &v15);
    sub_22F0D4E74(v4);
    v14 = v12;
    sub_22E8906A0(v11, &v14);
    sub_22E903BEC(v16);
    if (!v19)
      return 1;
    v5 = v18;
  }
  if (v5 >= 0x41 && v17)
    MEMORY[0x2348A0E84](v17, 0x1000C8000313F17);
  return v8;
}

uint64_t sub_22E99D404(uint64_t a1, int a2)
{
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  uint64_t v10;
  BOOL v11;

  v3 = a1 & 0xFFFFFFFFFFFFFFF0;
  v4 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (v4 && *(_BYTE *)(v4 + 16) == 56
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56 && (v4 = sub_22F10CF48(v4)) != 0)
  {
    v5 = *(_DWORD *)(v4 + 20);
    v6 = 1;
    v7 = v5 > 0x10;
    v8 = (1 << v5) & 0x1011C;
    if (v7 || v8 == 0)
      return v6;
    v3 = *(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v10)
    v11 = *(_DWORD *)(v10 + 16) == 11;
  else
    v11 = 0;
  if (v11 && ((*(_DWORD *)(v10 + 16) >> 19) & 0x1FFu) - 168 <= 0x2C)
  {
    if (((1 << ((*(_DWORD *)(v10 + 16) >> 19) + 88)) & 0xECE1) != 0)
      return 0;
    if (((1 << ((*(_DWORD *)(v10 + 16) >> 19) + 88)) & 0x1C0000000000) != 0)
      return a2 ^ 1u;
  }
  return 1;
}

uint64_t sub_22E99D4F4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  BOOL v6;
  int v7;
  uint64_t v9;
  BOOL v10;

  v2 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0;
  v3 = *(_QWORD *)v2;
  if (!*(_QWORD *)v2 || *(_BYTE *)(v3 + 16) != 56)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      goto LABEL_10;
    v3 = sub_22F10CF48(v3);
    if (!v3)
      goto LABEL_10;
  }
  v4 = *(_DWORD *)(v3 + 20);
  v5 = 1;
  v6 = v4 > 0x10;
  v7 = (1 << v4) & 0x1011C;
  if (!v6 && v7 != 0)
  {
    v2 = *(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0;
LABEL_10:
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v9)
      v10 = *(_DWORD *)(v9 + 16) == 11;
    else
      v10 = 0;
    if (v10 && ((*(_DWORD *)(v9 + 16) >> 19) & 0x1FFu) - 168 <= 0xF)
      return (0x131Eu >> ((*(_DWORD *)(v9 + 16) >> 19) + 88)) & 1;
    else
      return 1;
  }
  return v5;
}

uint64_t sub_22E99D5C0(_QWORD *a1, unsigned int *a2, unsigned int a3)
{
  unsigned int v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int v22[25];
  unsigned int v23;

  v3 = a2[4];
  if (v3 >= a3)
    v3 = a3;
  if (v3 == 1)
    return 0;
  v5 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1)] + ((unint64_t)*a2 >> 24);
  v8 = *(_QWORD *)(v5 + 8);
  v6 = v5 + 8;
  v7 = v8;
  v9 = *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v10 = 1;
  while (1)
  {
    v11 = *(_QWORD *)(v6 + 8 * v10);
    if (v9 != *(_QWORD *)(*(_QWORD *)((*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0))
      break;
    if (v3 == ++v10)
      return 0;
  }
  v23 = v10;
  sub_22EFFAE7C(a2);
  sub_22E8FCA40(a1, v13, 0xEEAu, 0, (uint64_t)v22);
  v21 = 0;
  v14 = sub_22E8900C4((uint64_t)v22, &v21);
  v15 = sub_22E89519C(v14, &v23);
  sub_22F0D4E74(v7);
  v20 = v16;
  v17 = sub_22E8906A0(v15, &v20);
  sub_22F0D4E74(v11);
  v19 = v18;
  sub_22E8906A0(v17, &v19);
  sub_22E903BEC(v22);
  return 1;
}

BOOL sub_22E99D6E0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  BOOL v6;
  int v7;
  uint64_t v9;
  BOOL v10;

  v2 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0;
  v3 = *(_QWORD *)v2;
  if (!*(_QWORD *)v2 || *(_BYTE *)(v3 + 16) != 56)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      goto LABEL_10;
    v3 = sub_22F10CF48(v3);
    if (!v3)
      goto LABEL_10;
  }
  v4 = *(_DWORD *)(v3 + 20);
  v5 = 1;
  v6 = v4 > 0x10;
  v7 = (1 << v4) & 0x1011C;
  if (!v6 && v7 != 0)
  {
    v2 = *(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0;
LABEL_10:
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v9)
      v10 = *(_DWORD *)(v9 + 16) == 11;
    else
      v10 = 0;
    return !v10 || ((((*(_DWORD *)(v9 + 16) >> 19) & 0x1FF) - 174) & 0xFFFFFFF7) != 0;
  }
  return v5;
}

BOOL sub_22E99D7A0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  BOOL v6;
  int v7;
  uint64_t v9;
  BOOL v10;

  v2 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0;
  v3 = *(_QWORD *)v2;
  if (!*(_QWORD *)v2 || *(_BYTE *)(v3 + 16) != 56)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      goto LABEL_10;
    v3 = sub_22F10CF48(v3);
    if (!v3)
      goto LABEL_10;
  }
  v4 = *(_DWORD *)(v3 + 20);
  v5 = 1;
  v6 = v4 > 0x10;
  v7 = (1 << v4) & 0x1011C;
  if (!v6 && v7 != 0)
  {
    v2 = *(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0;
LABEL_10:
    v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v9)
      v10 = *(_DWORD *)(v9 + 16) == 11;
    else
      v10 = 0;
    return !v10 || ((*(_DWORD *)(v9 + 16) >> 19) & 0x1FFu) - 213 < 0xFFFFFFFD;
  }
  return v5;
}

uint64_t sub_22E99D860(_QWORD *a1, unsigned int *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  _QWORD *v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  int v36;
  int v37;
  uint64_t v38;
  unsigned int v39[24];
  uint64_t v40;

  v4 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1)] + ((unint64_t)*a2 >> 24);
  v5 = *(_QWORD *)(v4 + 8);
  v6 = *(_QWORD *)(v4 + 8 + 8 * (a2[4] - 1));
  v7 = *(_QWORD *)(v5 + 8);
  v8 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0));
  v9 = a2[4];
  if (v9 == 2)
  {
    v10 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFF0);
LABEL_6:
    v15 = *v10;
    if (*v10 && *(_BYTE *)(v15 + 16) == 56
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
      && (v15 = sub_22F10CF48(*v10)) != 0)
    {
      v16 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0);
      if (v16 && *(_BYTE *)(v16 + 16) == 56
        || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v16 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
        && (v16 = sub_22F10CF48(v16)) != 0)
      {
        if (*(_DWORD *)(v15 + 20) != *(_DWORD *)(v16 + 20))
        {
          sub_22EFFAE7C(a2);
          sub_22E8FCA40(a1, v17, 0xEE9u, 0, (uint64_t)v39);
          v37 = 0;
          v18 = sub_22E8900C4((uint64_t)v39, &v37);
          v19 = 1;
          v36 = 1;
          v20 = sub_22E8900C4(v18, &v36);
          sub_22F0D4E74(v5);
          v40 = v21;
          v22 = sub_22E8906A0(v20, &v40);
          sub_22F0D4E74(v6);
          v38 = v23;
          v24 = &v38;
LABEL_25:
          sub_22E8906A0(v22, v24);
          sub_22E903BEC(v39);
          return v19;
        }
        return 0;
      }
      sub_22EFFAE7C(a2);
      v30 = v33;
      v31 = a1;
      v32 = 3826;
    }
    else
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) != 56)
        return 0;
      sub_22EFFAE7C(a2);
      v30 = v29;
      v31 = a1;
      v32 = 3827;
    }
    sub_22E8FCA40(v31, v30, v32, 0, (uint64_t)v39);
    v19 = 1;
    LODWORD(v38) = 1;
    v22 = sub_22E8900C4((uint64_t)v39, (int *)&v38);
    sub_22F0D4E74(v6);
    v40 = v34;
    v24 = &v40;
    goto LABEL_25;
  }
  v11 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24);
  v10 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(*(_QWORD *)((v7 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v13 = 2;
  while (1)
  {
    v14 = *(_QWORD *)(v11 + 8 * (v13 - 1));
    v40 = *(_QWORD *)(v14 + 8);
    if (*(_QWORD *)(*(_QWORD *)((v40 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) != v12)
      break;
    if (v9 == ++v13)
      goto LABEL_6;
  }
  sub_22F0D5A50(v14);
  sub_22E8FCA40(a1, v25, 0xEEEu, 0, (uint64_t)v39);
  v26 = sub_22E8901B8((uint64_t)v39, &v40);
  v27 = sub_22EFFA604(*(unsigned __int8 **)((char *)a2 + *((unsigned __int8 *)a2 + 3)));
  if ((*(_DWORD *)(v27 + 28) & 0x7Eu) - 52 >= 6)
    v28 = 0;
  else
    v28 = v27;
  v38 = *(_QWORD *)(v28 + 40);
  sub_22E894538(v26, &v38);
  sub_22E903BEC(v39);
  return 1;
}

BOOL sub_22E99DB48(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  uint64_t v10;
  BOOL v11;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (!v1 || *(_BYTE *)(v1 + 16) != 39)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
      return 1;
    v1 = sub_22F10CF48(v1);
    if (!v1)
      return 1;
  }
  v2 = (uint64_t *)(*(_QWORD *)(v1 + 32) & 0xFFFFFFFFFFFFFFF0);
  v3 = v2[1];
  if ((v3 & 8) != 0 && (*(_DWORD *)((v3 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0)
    return 1;
  v4 = *v2;
  if ((!*v2 || *(_BYTE *)(v4 + 16) != 56)
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56 || (v4 = sub_22F10CF48(v4)) == 0))
  {
LABEL_16:
    v10 = *(_QWORD *)(*(_QWORD *)(*v2 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v10)
      v11 = *(_DWORD *)(v10 + 16) == 11;
    else
      v11 = 0;
    if (v11)
      return (*(_DWORD *)(v10 + 16) & 0xFF80000) != 95420416;
    return 1;
  }
  v5 = *(_DWORD *)(v4 + 20);
  v6 = 1;
  v7 = v5 > 0x10;
  v8 = (1 << v5) & 0x1011C;
  if (!v7 && v8 != 0)
  {
    v2 = (uint64_t *)(*(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0);
    goto LABEL_16;
  }
  return v6;
}

BOOL sub_22E99DC58(int a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;
  int v9;
  uint64_t v11;
  BOOL v12;

  v2 = (uint64_t *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 1)
  {
    v3 = *v2;
    if (!*v2 || *(_BYTE *)(v3 + 16) != 39)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
        return 1;
      v3 = sub_22F10CF48(v3);
      if (!v3)
        return 1;
    }
    v2 = (uint64_t *)(*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0);
    v4 = v2[1];
    if ((v4 & 8) != 0 && (*(_DWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0)
      return 1;
  }
  v5 = *v2;
  if ((!*v2 || *(_BYTE *)(v5 + 16) != 56)
    && (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56 || (v5 = sub_22F10CF48(v5)) == 0))
  {
LABEL_17:
    v11 = *(_QWORD *)(*(_QWORD *)(*v2 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v11)
      v12 = *(_DWORD *)(v11 + 16) == 11;
    else
      v12 = 0;
    if (v12)
      return ((*(_DWORD *)(v11 + 16) >> 19) & 0x1FFu) - 213 < 0xFFFFFFFD;
    return 1;
  }
  v6 = *(_DWORD *)(v5 + 20);
  v7 = 1;
  v8 = v6 > 0x10;
  v9 = (1 << v6) & 0x1011C;
  if (!v8 && v9 != 0)
  {
    v2 = (uint64_t *)(*(_QWORD *)(v5 + 32) & 0xFFFFFFFFFFFFFFF0);
    goto LABEL_17;
  }
  return v7;
}

uint64_t sub_22E99DD74(uint64_t result, int a2)
{
  int v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v2 = 2;
  switch(a2)
  {
    case 1712:
    case 1713:
      v4 = (_QWORD *)(result + 8);
      goto LABEL_12;
    case 1714:
    case 1715:
    case 1723:
    case 1724:
      __break(1u);
      return result;
    case 1716:
    case 1717:
    case 1718:
    case 1719:
      goto LABEL_5;
    case 1720:
    case 1721:
    case 1722:
    case 1726:
      v2 = 4;
      goto LABEL_5;
    case 1725:
    case 1727:
    case 1728:
      v2 = 3;
LABEL_5:
      v3 = *(_QWORD *)(*(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFF0);
      if (!v3 || *(_BYTE *)(v3 + 16) != 56)
      {
        if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
          return 1;
        v3 = sub_22F10CF48(v3);
        if (!v3)
          return 1;
      }
      if (*(_DWORD *)(v3 + 20) != v2)
        return 1;
      v4 = (_QWORD *)(v3 + 32);
LABEL_12:
      v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      return !v5 || *(_DWORD *)(v5 + 16) != 11 || (*(_DWORD *)(v5 + 16) & 0xFF00000) != 110100480;
    default:
      __asm { BR              X10 }
      return result;
  }
}

BOOL sub_22E99DE78(_QWORD *a1, unsigned int *a2, unsigned int a3, unsigned int a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24[24];
  unsigned int v25;
  unsigned int v26;

  v25 = a4;
  v26 = a3;
  v6 = (unint64_t)&a2[2 * (((unint64_t)*a2 >> 18) & 1) + 2] + ((unint64_t)*a2 >> 24);
  v7 = *(_QWORD *)(v6 + 8 * a3);
  v8 = *(_QWORD *)(v6 + 8 * a4);
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(_QWORD *)(*(_QWORD *)(v8 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v10 || *(_BYTE *)(v10 + 16) != 56)
    v10 = sub_22F10CF48(v10);
  v11 = (uint64_t *)(*(_QWORD *)((v9 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v11;
  v13 = (uint64_t *)(*(_QWORD *)((*(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v13;
  if (*v11 != *v13)
  {
    sub_22EFFAE7C(a2);
    sub_22E8FCA40(a1, v15, 0xEEBu, 0, (uint64_t)v24);
    v16 = sub_22E8900C4((uint64_t)v24, (int *)&v25);
    v17 = sub_22E8900C4(v16, (int *)&v26);
    sub_22F0D4E74(v8);
    v23 = v18;
    v19 = sub_22E8906A0(v17, &v23);
    sub_22F0D4E74(v7);
    v22 = v20;
    sub_22E8906A0(v19, &v22);
    sub_22E903BEC(v24);
  }
  return v12 != v14;
}

uint64_t sub_22E99DF9C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  BOOL v6;
  int v7;
  unsigned int v8;
  BOOL v9;
  unsigned int v10;

  v2 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (v2 && *(_BYTE *)(v2 + 16) == 39
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 39 && (v2 = sub_22F10CF48(v2)) != 0)
  {
    v3 = 0;
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v5 = *(_DWORD *)(v4 + 16);
    if (v4)
      v6 = *(_DWORD *)(v4 + 16) == 11;
    else
      v6 = 0;
    v7 = v6;
    v8 = ((v5 >> 19) & 0x1FF) - 210;
    v9 = v8 > 5;
    v10 = (0x27u >> v8) & 1;
    if (v9)
      v10 = 0;
    if (v7 != 1)
      v10 = 0;
    v1 = v7 & v10 ^ 1;
  }
  else
  {
    v3 = 1;
  }
  return (v3 | v1) & 1;
}

BOOL sub_22E99E050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v2)
    v3 = *(_DWORD *)(v2 + 16) == 11;
  else
    v3 = 0;
  if (!v3)
    return 1;
  v4 = (*(_DWORD *)(v2 + 16) >> 19) & 0x1FF;
  if (v4 != 175)
  {
    if (v4 == 174)
      return (*(_BYTE *)(a1 + 130) & 0x40) == 0;
    return 1;
  }
  return 0;
}

BOOL sub_22E99E0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v6;

  v3 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (!v3 || *(_BYTE *)(v3 + 16) != 56)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      return 1;
    v3 = sub_22F10CF48(v3);
    if (!v3)
      return 1;
  }
  if (*(_DWORD *)(v3 + 20) != 2)
    return 1;
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v4 || *(_DWORD *)(v4 + 16) != 11)
    return 1;
  v6 = (*(_DWORD *)(v4 + 16) >> 19) & 0x1FF;
  if (v6 != 175)
  {
    if (v6 == 174)
      return (*(_BYTE *)(*(_QWORD *)(a1 + 72) + 130) & 0x40) == 0;
    return 1;
  }
  return 0;
}

unint64_t sub_22E99E16C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  uint64_t v7;
  BOOL v8;

  v3 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (!v3 || *(_BYTE *)(v3 + 16) != 39)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
      return 1;
    v3 = sub_22F10CF48(v3);
    if (!v3)
      return 1;
  }
  v4 = *(_QWORD *)((*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
  if ((v4 & 8) != 0)
  {
    v5 = *(_DWORD *)((v4 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
    v6 = (v5 - 11) < 2 || v5 == 0;
    if (!v6 && (v5 != 13 || !a2))
      return 1;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v7)
    v8 = *(_DWORD *)(v7 + 16) == 11;
  else
    v8 = 0;
  if (!v8)
    return 0;
  if (((*(_DWORD *)(v7 + 16) >> 19) & 0x1FFu) - 168 <= 0x2C)
    return (0x3FFFFFF131EuLL >> ((*(_DWORD *)(v7 + 16) >> 19) + 88)) & 1;
  else
    return 1;
}

unint64_t sub_22E99E24C(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  BOOL v4;
  int v5;
  uint64_t v7;
  BOOL v8;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (!v1 || *(_BYTE *)(v1 + 16) != 56)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 56)
      return 1;
    v1 = sub_22F10CF48(v1);
    if (!v1)
      return 1;
  }
  v2 = *(_DWORD *)(v1 + 20);
  v3 = 1;
  v4 = v2 > 0x10;
  v5 = (1 << v2) & 0x1011C;
  if (!v4 && v5 != 0)
  {
    v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 32) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v7)
      v8 = *(_DWORD *)(v7 + 16) == 11;
    else
      v8 = 0;
    if (v8 && ((*(_DWORD *)(v7 + 16) >> 19) & 0x1FFu) - 168 <= 0x2C)
      return (0x3FFFFFF131EuLL >> ((*(_DWORD *)(v7 + 16) >> 19) + 88)) & 1;
    return 1;
  }
  return v3;
}

BOOL sub_22E99E310(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unsigned int v4;
  _BOOL8 result;
  BOOL v6;
  int v7;
  BOOL v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (!v1 || *(_BYTE *)(v1 + 16) != 39)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 39)
      return 1;
    v1 = sub_22F10CF48(v1);
    if (!v1)
      return 1;
  }
  v2 = (_QWORD *)(*(_QWORD *)(v1 + 32) & 0xFFFFFFFFFFFFFFF0);
  v3 = v2[1];
  if ((v3 & 8) == 0
    || ((v4 = *(_DWORD *)((v3 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11,
         result = 1,
         v6 = v4 > 0xD,
         v7 = (1 << v4) & 0x3801,
         !v6)
      ? (v8 = v7 == 0)
      : (v8 = 1),
        !v8))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(*v2 + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v9)
      v10 = *(_BYTE *)(v9 + 16) == 11;
    else
      v10 = 0;
    if (v10)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v9 + 8) & 0xFFFFFFFFFFFFFFF0);
      if (v11 && *(_DWORD *)(v11 + 16) == 11)
        return (*(_DWORD *)(v11 + 16) & 0xFF80000) != 110100480;
    }
    return 1;
  }
  return result;
}

uint64_t sub_22E99E3E8(uint64_t a1, int a2)
{
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  BOOL v7;
  int v8;
  uint64_t v10;
  BOOL v11;
  int v12;

  v3 = a1 & 0xFFFFFFFFFFFFFFF0;
  v4 = *(_QWORD *)(a1 & 0xFFFFFFFFFFFFFFF0);
  if (v4 && *(_BYTE *)(v4 + 16) == 56
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v4 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56 && (v4 = sub_22F10CF48(v4)) != 0)
  {
    v5 = *(_DWORD *)(v4 + 20);
    v6 = 1;
    v7 = v5 > 0x10;
    v8 = (1 << v5) & 0x1011C;
    if (v7 || v8 == 0)
      return v6;
    v3 = *(_QWORD *)(v4 + 32) & 0xFFFFFFFFFFFFFFF0;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v3 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v10)
    v11 = *(_DWORD *)(v10 + 16) == 11;
  else
    v11 = 0;
  if (!v11)
    return 1;
  v12 = (*(_DWORD *)(v10 + 16) >> 19) & 0x1FF;
  if (v12 == 211)
    return 0;
  if (v12 == 212)
    return a2 ^ 1u;
  else
    return 1;
}

llvm::APInt *sub_22E99E4B8(llvm::APInt *this)
{
  unsigned int v1;
  unint64_t v2;

  v1 = *((_DWORD *)this + 2);
  if (v1 > 0x40)
    return (llvm::APInt *)llvm::APInt::flipAllBitsSlowCase(this);
  if (v1)
    v2 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v1;
  else
    v2 = 0;
  *(_QWORD *)this = v2 & ~*(_QWORD *)this;
  return this;
}

uint64_t sub_22E99E4F0(uint64_t a1, int a2, uint64_t a3)
{
  int v3;
  uint64_t v6;

  v3 = a3;
  *(_QWORD *)a1 = a1 + 16;
  *(_QWORD *)(a1 + 8) = 0x600000000;
  sub_22E47EDD0(a1, (a2 + 63) >> 6, a3 << 63 >> 63);
  *(_DWORD *)(a1 + 64) = a2;
  if (v3 && (a2 & 0x3F) != 0)
  {
    v6 = *(_QWORD *)a1 + 8 * *(unsigned int *)(a1 + 8);
    *(_QWORD *)(v6 - 8) &= ~(-1 << (a2 & 0x3F));
  }
  return a1;
}

BOOL sub_22E99E574(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 81)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

uint64_t sub_22E99E5D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t result;

  if ((*(_WORD *)(*(_QWORD *)(a1 + 2000) + 148) & 2) != 0)
  {
    if (sub_22F24EBE4(a2))
      v8 = 4;
    else
      v8 = 0;
  }
  else
  {
    v8 = 0;
  }
  *(_DWORD *)(a4 + 24) = 0;
  *(_DWORD *)a4 = 1;
  v9 = *(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v9 + 8) & 0xF) != 0)
    v9 = (unint64_t)sub_22F10D2BC(a3);
  result = sub_22EF60188(a1, v9 & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = result;
  *(_QWORD *)(a4 + 32) = v8 | a2 & 0xFFFFFFFFFFFFFFFBLL;
  return result;
}

unint64_t *sub_22E99E680(unint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  *a1 = 1;
  if (a2 > 0x39)
  {
    v9 = operator new();
    v7 = sub_22E99E4F0(v9, a2, a3);
  }
  else
  {
    v6 = 2 * ~(-1 << a2);
    if (!(_DWORD)a3)
      v6 = 0;
    v7 = v6 | ((unint64_t)a2 << 58) | 1;
  }
  *a1 = v7;
  return a1;
}

llvm::APInt *sub_22E99E710(llvm::APInt *this, int a2)
{
  unsigned int v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  char v8;
  unint64_t v9;

  v2 = *((_DWORD *)this + 2);
  if (v2 > 0x40)
    return (llvm::APInt *)llvm::APInt::ashrSlowCase(this);
  v3 = (uint64_t)(*(_QWORD *)this << -(char)v2) >> -(char)v2;
  if (v2 == a2)
    v4 = 63;
  else
    v4 = a2;
  v5 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v2;
  if (!v2)
    v5 = 0;
  v6 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v2;
  if (v2)
    v7 = v2 == a2;
  else
    v7 = 1;
  if (v7)
    v8 = v4;
  else
    v8 = a2;
  if (v7)
    v9 = v5;
  else
    v9 = v6;
  *(_QWORD *)this = v9 & (v3 >> v8);
  return this;
}

uint64_t sub_22E99E778(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;
  uint64_t v20;
  unsigned int v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  int v29;

  v6 = *((_DWORD *)a1 + 2);
  v7 = *((_DWORD *)a2 + 2);
  if (*((_BYTE *)a2 + 12))
  {
    ++v7;
    llvm::APInt::zext((llvm::APInt *)a2);
    if (*((_DWORD *)a2 + 2) >= 0x41u && *a2)
      MEMORY[0x2348A0E84](*a2, 0x1000C8000313F17);
    *a2 = v28;
    *((_DWORD *)a2 + 2) = v29;
    v29 = 0;
    *((_BYTE *)a2 + 12) = 0;
  }
  if (v7 <= v6)
  {
    if (v6 > v7)
    {
      llvm::APInt::sext((llvm::APInt *)a2);
      if (*((_DWORD *)a2 + 2) >= 0x41u && *a2)
        MEMORY[0x2348A0E84](*a2, 0x1000C8000313F17);
      *a2 = v24;
      *((_DWORD *)a2 + 2) = v25;
      v25 = 0;
    }
    v8 = *((_DWORD *)a1 + 2);
  }
  else
  {
    llvm::APInt::sext((llvm::APInt *)a1);
    if (*((_DWORD *)a1 + 2) >= 0x41u && *a1)
      MEMORY[0x2348A0E84](*a1, 0x1000C8000313F17);
    *a1 = v26;
    v8 = v27;
    *((_DWORD *)a1 + 2) = v27;
    v27 = 0;
  }
  v23 = 0;
  v21 = v8;
  if (v8 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v20, (const llvm::APInt *)a1);
  else
    v20 = *a1;
  v22 = *((_BYTE *)a1 + 12);
  if ((_DWORD)a3 == 5)
  {
    v9 = &v19;
    result = llvm::APInt::sadd_ov((llvm::APInt *)a1, (const llvm::APInt *)a2, &v23);
  }
  else
  {
    v9 = &v18;
    result = llvm::APInt::ssub_ov((llvm::APInt *)a1, (const llvm::APInt *)a2, &v23);
  }
  if (v21 >= 0x41)
  {
    result = v20;
    if (v20)
      result = MEMORY[0x2348A0E84](v20, 0x1000C8000313F17);
  }
  v11 = *(_QWORD *)v9;
  v20 = *(_QWORD *)v9;
  v12 = *((_DWORD *)v9 + 2);
  v21 = v12;
  *((_DWORD *)v9 + 2) = 0;
  if (v23)
  {
    llvm::APInt::sext((llvm::APInt *)a1);
    if (*((_DWORD *)a1 + 2) >= 0x41u && *a1)
      MEMORY[0x2348A0E84](*a1, 0x1000C8000313F17);
    *a1 = v16;
    *((_DWORD *)a1 + 2) = v17;
    v17 = 0;
    v14 = *((_DWORD *)a2 + 2);
    if (v14 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v13, (const llvm::APInt *)a2);
    else
      v13 = *a2;
    v15 = *((_BYTE *)a2 + 12);
    result = sub_22E99E778(a1, &v13, a3);
    if (v14 >= 0x41)
    {
      result = v13;
      if (v13)
        result = MEMORY[0x2348A0E84](v13, 0x1000C8000313F17);
    }
  }
  else
  {
    if (*((_DWORD *)a1 + 2) > 0x40u || v12 > 0x40)
    {
      result = llvm::APInt::assignSlowCase((llvm::APInt *)a1, (const llvm::APInt *)&v20);
    }
    else
    {
      *a1 = v11;
      *((_DWORD *)a1 + 2) = v12;
    }
    *((_BYTE *)a1 + 12) = v22;
  }
  if (v21 >= 0x41)
  {
    result = v20;
    if (v20)
      return MEMORY[0x2348A0E84](v20, 0x1000C8000313F17);
  }
  return result;
}

unsigned int *sub_22E99EA90(_QWORD *a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  int v7;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unsigned int v16[24];
  _QWORD v17[2];
  uint64_t v18;

  v7 = a5;
  v17[1] = 0;
  v18 = a7;
  v17[0] = 0;
  if (a2)
  {
    sub_22E90379C(a1, a5, a4, 0, (uint64_t)v16);
  }
  else
  {
    if (a6)
    {
      sub_22EFF605C(a3);
      sub_22E90379C(a1, v11, a4, 0, (uint64_t)v16);
      sub_22F0D4E74(a3);
      v15 = v12;
      sub_22E8906A0((uint64_t)v16, &v15);
      sub_22E903BEC(v16);
    }
    else
    {
      sub_22E90379C(a1, a5, a4, 0, (uint64_t)v16);
      sub_22F0D4E74(a3);
      v15 = v13;
      sub_22E8906A0((uint64_t)v16, &v15);
      sub_22E903BEC(v16);
      v7 = v18;
    }
    sub_22E8FCA40(a1, v7, 0x1608u, 0, (uint64_t)v16);
  }
  sub_22E8906A0((uint64_t)v16, &v18);
  sub_22F311900((uint64_t)v16, (uint64_t)v17);
  return sub_22E903BEC(v16);
}

unint64_t sub_22E99EBAC(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_DWORD *)(result + 56) != 2)
  {
    v1 = result;
    v2 = *(_QWORD *)(result + 88);
    if ((v2 & 1) != 0)
    {
      *(_QWORD *)(result + 88) = v2 & 0xFC00000000000000 | (2 * ~((-1 << (v2 >> 58)) | (v2 >> 1))) | 1;
    }
    else
    {
      v3 = *(_QWORD **)v2;
      v4 = *(unsigned int *)(v2 + 8);
      if ((_DWORD)v4)
      {
        v5 = 8 * v4;
        v6 = *(_QWORD **)v2;
        do
        {
          *v6 = ~*v6;
          ++v6;
          v5 -= 8;
        }
        while (v5);
      }
      v7 = *(_DWORD *)(v2 + 64) & 0x3F;
      if (v7)
        v3[v4 - 1] &= ~(-1 << v7);
    }
    result = *(_QWORD *)(result + 88);
    if ((result & 1) != 0)
    {
      v8 = (result >> 1) & ~(-1 << (result >> 58));
      if (!v8)
      {
LABEL_19:
        v13 = *(_DWORD **)(v1 + 112);
        v13[4] = 0;
        *v13 = -2;
        return result;
      }
      result = __clz(__rbit64(v8));
    }
    else
    {
      result = sub_22E9A4F54(result);
      if ((result & 0x80000000) != 0)
        goto LABEL_19;
    }
    v9 = *(_QWORD *)(v1 + 112);
    v10 = *(_DWORD *)v9;
    if (*(_DWORD *)v9 != -2)
    {
      v11 = *(_QWORD *)(v1 + 24);
      if (v10 == (_DWORD)result)
      {
        v12 = *(_DWORD *)(v9 + 16);
        if (v12 >= *(_DWORD *)(v9 + 20))
        {
          v16 = v9;
          result = llvm::SmallVectorBase<unsigned int>::grow_pod();
          v9 = v16;
          v12 = *(_DWORD *)(v16 + 16);
        }
        *(_QWORD *)(*(_QWORD *)(v9 + 8) + 8 * v12) = v11;
        ++*(_DWORD *)(v9 + 16);
      }
      else if (v10 < (int)result)
      {
        *(_DWORD *)(v9 + 16) = 0;
        if (*(_DWORD *)(v9 + 20))
        {
          v14 = 0;
        }
        else
        {
          v15 = result;
          v17 = v9;
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          result = v15;
          v9 = v17;
          v14 = *(unsigned int *)(v17 + 16);
        }
        *(_QWORD *)(*(_QWORD *)(v9 + 8) + 8 * v14) = v11;
        ++*(_DWORD *)(v9 + 16);
        *(_DWORD *)v9 = result;
      }
    }
  }
  return result;
}

uint64_t sub_22E99ED60(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24FAB7130;
  sub_22E54C5D0((void ***)(a1 + 88));
  return a1;
}

uint64_t sub_22E99ED90(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24FAB7130;
  sub_22E54C5D0((void ***)(a1 + 88));
  return a1;
}

uint64_t sub_22E99EDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, int a12, char a13, int a14, uint64_t a15, uint64_t a16)
{
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = &off_24FAB7130;
  *(_QWORD *)(a1 + 8) = a2;
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = a4;
  *(_DWORD *)(a1 + 32) = a5;
  *(_DWORD *)(a1 + 36) = a6;
  *(_DWORD *)(a1 + 40) = a7;
  *(_QWORD *)(a1 + 48) = a8;
  *(_DWORD *)(a1 + 56) = a9;
  *(_QWORD *)(a1 + 64) = a10;
  *(_QWORD *)(a1 + 72) = a11;
  *(_DWORD *)(a1 + 80) = a12;
  *(_QWORD *)(a1 + 88) = 1;
  v17 = (unint64_t *)(a1 + 88);
  *(_WORD *)(a1 + 96) = 256;
  *(_BYTE *)(a1 + 98) = a13;
  *(_DWORD *)(a1 + 100) = a14;
  *(_QWORD *)(a1 + 104) = a15;
  *(_QWORD *)(a1 + 112) = a16;
  sub_22E97F810((unint64_t *)(a1 + 88), a7, 0);
  v18 = *v17;
  if ((*v17 & 1) != 0)
  {
    *v17 = v18 & 0xFC00000000000000 | 1;
  }
  else
  {
    v19 = *(unsigned int *)(v18 + 8);
    if ((_DWORD)v19)
      bzero(*(void **)v18, 8 * v19);
  }
  return a1;
}

void sub_22E99EE7C(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24FAB7130;
  sub_22E54C5D0((void ***)(a1 + 88));
  JUMPOUT(0x2348A0E9CLL);
}

unsigned int *sub_22E99EEBC(unsigned int *result, int a2)
{
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int *v9;
  int v10;

  if (**((unsigned __int8 **)result + 3) != 204)
  {
    v2 = result;
    v3 = *((_QWORD *)result + 1);
    v4 = *((_QWORD *)result + 2);
    v5 = *(_QWORD *)(v3 + 88);
    v8 = 0;
    v9 = (unsigned int *)(v5 + 2128);
    v10 = 6909;
    v6 = sub_22EFF9E30(*(_QWORD *)v4, *(_DWORD *)(v4 + 8) + a2 - result[12], *(uint64_t **)(v3 + 112), *(_DWORD **)(v3 + 72), *(_QWORD *)(v5 + 15088), 0, 0);
    sub_22F0D4E74(*((_QWORD *)v2 + 3));
    result = sub_22E99EA90(*((_QWORD **)v2 + 1), *((unsigned __int8 *)v2 + 98), *(_QWORD *)(*((_QWORD *)v2 + 8) + 8 * v2[20]), (uint64_t)&v8, v6, 1, v7);
    if (v8)
    {
      result = v9;
      if (v9)
        return (unsigned int *)sub_22E3BB10C((unint64_t)v9, v8);
    }
  }
  return result;
}

unsigned int *sub_22E99EF7C(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int *result;
  unint64_t v13;
  unsigned int *v14;
  int v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v6 + 88);
  v13 = 0;
  v14 = (unsigned int *)(v8 + 2128);
  v15 = 6587;
  v9 = sub_22EFF9E30(*(_QWORD *)v7, (*(_DWORD *)(v7 + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v6 + 112), *(_DWORD **)(v6 + 72), *(_QWORD *)(v8 + 15088), 0, 0);
  v10 = sub_22E9A0AAC(a1, a2, a3);
  result = sub_22E9A0988(a1, (uint64_t)&v13, v9, 1, v10, v11, 0, 0);
  if (v13)
  {
    result = v14;
    if (v14)
      return (unsigned int *)sub_22E3BB10C((unint64_t)v14, v13);
  }
  return result;
}

unsigned int *sub_22E99F040(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int *result;
  unint64_t v13;
  unsigned int *v14;
  int v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v6 + 88);
  v13 = 0;
  v14 = (unsigned int *)(v8 + 2128);
  v15 = 6593;
  v9 = sub_22EFF9E30(*(_QWORD *)v7, (*(_DWORD *)(v7 + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v6 + 112), *(_DWORD **)(v6 + 72), *(_QWORD *)(v8 + 15088), 0, 0);
  v10 = sub_22E9A0AAC(a1, a2, a3);
  result = sub_22E9A0988(a1, (uint64_t)&v13, v9, 1, v10, v11, 0, 0);
  if (v13)
  {
    result = v14;
    if (v14)
      return (unsigned int *)sub_22E3BB10C((unint64_t)v14, v13);
  }
  return result;
}

unint64_t sub_22E99F104(uint64_t a1, int a2, int a3, unsigned int a4)
{
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t i;
  int v17;
  unint64_t v18;
  int v19;
  _OWORD *v21;
  unint64_t v22;
  int v23;

  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v9 = (unsigned __int8 *)sub_22E3B8AAC(v8);
  v10 = *v9;
  v9[v10 + 1] = 3;
  *v9 = v10 + 1;
  *(_QWORD *)&v9[8 * v10 + 16] = a4;
  v23 = 6583;
  v22 = v8;
  v11 = (_OWORD *)sub_22E3B8AAC(v8);
  v21 = v11;
  v12 = *((_OWORD *)v9 + 5);
  v14 = *((_OWORD *)v9 + 2);
  v13 = *((_OWORD *)v9 + 3);
  v11[4] = *((_OWORD *)v9 + 4);
  v11[5] = v12;
  v11[2] = v14;
  v11[3] = v13;
  v15 = *((_OWORD *)v9 + 1);
  *v11 = *(_OWORD *)v9;
  v11[1] = v15;
  for (i = 96; i != 336; i += 24)
    std::string::operator=((std::string *)((char *)v11 + i), (const std::string *)&v9[i]);
  sub_22E78D560((uint64_t)(v11 + 21), (uint64_t)(v9 + 336));
  sub_22E78D658((uint64_t)(v11 + 28), (uint64_t *)v9 + 56);
  v17 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v18 = sub_22E9A0AAC(a1, a2, a3);
  sub_22E9A0988(a1, (uint64_t)&v21, v17, 1, v18, v19, 0, 0);
  if (v21 && v22)
  {
    sub_22E3BB10C(v22, (unint64_t)v21);
    v21 = 0;
  }
  return sub_22E3BB10C(v8, (unint64_t)v9);
}

unsigned int *sub_22E99F280(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int *result;
  unint64_t v13;
  unsigned int *v14;
  int v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v6 + 88);
  v13 = 0;
  v14 = (unsigned int *)(v8 + 2128);
  v15 = 6594;
  v9 = sub_22EFF9E30(*(_QWORD *)v7, (*(_DWORD *)(v7 + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v6 + 112), *(_DWORD **)(v6 + 72), *(_QWORD *)(v8 + 15088), 0, 0);
  v10 = sub_22E9A0AAC(a1, a2, a3);
  result = sub_22E9A0988(a1, (uint64_t)&v13, v9, 1, v10, v11, 0, 0);
  if (v13)
  {
    result = v14;
    if (v14)
      return (unsigned int *)sub_22E3BB10C((unint64_t)v14, v13);
  }
  return result;
}

unsigned int *sub_22E99F344(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int *result;
  unint64_t v13;
  unsigned int *v14;
  int v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v6 + 88);
  v13 = 0;
  v14 = (unsigned int *)(v8 + 2128);
  v15 = 6912;
  v9 = sub_22EFF9E30(*(_QWORD *)v7, (*(_DWORD *)(v7 + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v6 + 112), *(_DWORD **)(v6 + 72), *(_QWORD *)(v8 + 15088), 0, 0);
  v10 = sub_22E9A0AAC(a1, a2, a3);
  result = sub_22E9A0988(a1, (uint64_t)&v13, v9, 1, v10, v11, 0, 0);
  if (v13)
  {
    result = v14;
    if (v14)
      return (unsigned int *)sub_22E3BB10C((unint64_t)v14, v13);
  }
  return result;
}

unsigned int *sub_22E99F408(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int *result;
  unint64_t v13;
  unsigned int *v14;
  int v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v6 + 88);
  v13 = 0;
  v14 = (unsigned int *)(v8 + 2128);
  v15 = 6908;
  v9 = sub_22EFF9E30(*(_QWORD *)v7, (*(_DWORD *)(v7 + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v6 + 112), *(_DWORD **)(v6 + 72), *(_QWORD *)(v8 + 15088), 0, 0);
  v10 = sub_22E9A0AAC(a1, a2, a3);
  result = sub_22E9A0988(a1, (uint64_t)&v13, v9, 1, v10, v11, 0, 0);
  if (v13)
  {
    result = v14;
    if (v14)
      return (unsigned int *)sub_22E3BB10C((unint64_t)v14, v13);
  }
  return result;
}

void sub_22E99F4CC(uint64_t a1, void *a2, unsigned int a3)
{
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  void *__p;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned __int8 *v26;
  unint64_t v27;
  int v28;
  _OWORD *v29;
  unint64_t v30;
  int v31;

  v6 = sub_22E9A0AAC(a1, (int)a2, a3);
  v8 = v7;
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v26 = 0;
  v27 = v9;
  v28 = 6914;
  sub_22E3B89A8(&v26, a2, a3);
  v31 = v28;
  v29 = 0;
  v30 = v27;
  if (v26)
  {
    v10 = (_OWORD *)sub_22E3B8AAC(v27);
    v11 = 0;
    v29 = v10;
    v12 = v26;
    v13 = *((_OWORD *)v26 + 1);
    *v10 = *(_OWORD *)v26;
    v10[1] = v13;
    v14 = *((_OWORD *)v12 + 5);
    v16 = *((_OWORD *)v12 + 2);
    v15 = *((_OWORD *)v12 + 3);
    v10[4] = *((_OWORD *)v12 + 4);
    v10[5] = v14;
    v10[2] = v16;
    v10[3] = v15;
    do
    {
      std::string::operator=((std::string *)((char *)v10 + v11 + 96), (const std::string *)&v12[v11 + 96]);
      v11 += 24;
    }
    while (v11 != 240);
    sub_22E78D560((uint64_t)(v10 + 21), (uint64_t)(v12 + 336));
    sub_22E78D658((uint64_t)(v10 + 28), (uint64_t *)v12 + 56);
  }
  v17 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + (_DWORD)a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v21 = 0;
  v20 = 0;
  v23 = 0;
  v24 = 0;
  __p = 0;
  v25 = 0;
  v18 = v6;
  v19 = v8;
  sub_22E9A0988(a1, (uint64_t)&v29, v17, 1, v6, v8, (uint64_t)&v18, 1);
  if (SHIBYTE(v24) < 0)
    operator delete(__p);
  if (v29 && v30)
  {
    sub_22E3BB10C(v30, (unint64_t)v29);
    v29 = 0;
  }
  if (v26)
  {
    if (v27)
      sub_22E3BB10C(v27, (unint64_t)v26);
  }
}

void sub_22E99F674(uint64_t a1, int a2, int a3, void *a4)
{
  unint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  void *__p;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned __int8 *v26;
  unint64_t v27;
  int v28;
  _OWORD *v29;
  unint64_t v30;
  int v31;

  v6 = sub_22E9A0AAC(a1, a2, a3 - a2 + 1);
  v8 = v7;
  v9 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v26 = 0;
  v27 = v9;
  v28 = 6904;
  sub_22E3B89A8(&v26, a4, 1uLL);
  v31 = v28;
  v29 = 0;
  v30 = v27;
  if (v26)
  {
    v10 = (_OWORD *)sub_22E3B8AAC(v27);
    v11 = 0;
    v29 = v10;
    v12 = v26;
    v13 = *((_OWORD *)v26 + 1);
    *v10 = *(_OWORD *)v26;
    v10[1] = v13;
    v14 = *((_OWORD *)v12 + 5);
    v16 = *((_OWORD *)v12 + 2);
    v15 = *((_OWORD *)v12 + 3);
    v10[4] = *((_OWORD *)v12 + 4);
    v10[5] = v14;
    v10[2] = v16;
    v10[3] = v15;
    do
    {
      std::string::operator=((std::string *)((char *)v10 + v11 + 96), (const std::string *)&v12[v11 + 96]);
      v11 += 24;
    }
    while (v11 != 240);
    sub_22E78D560((uint64_t)(v10 + 21), (uint64_t)(v12 + 336));
    sub_22E78D658((uint64_t)(v10 + 28), (uint64_t *)v12 + 56);
  }
  v17 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + (_DWORD)a4 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v21 = 0;
  v20 = 0;
  v23 = 0;
  v24 = 0;
  __p = 0;
  v25 = 0;
  v18 = v6;
  v19 = v8;
  sub_22E9A0988(a1, (uint64_t)&v29, v17, 1, v6, v8, (uint64_t)&v18, 1);
  if (SHIBYTE(v24) < 0)
    operator delete(__p);
  if (v29 && v30)
  {
    sub_22E3BB10C(v30, (unint64_t)v29);
    v29 = 0;
  }
  if (v26)
  {
    if (v27)
      sub_22E3BB10C(v27, (unint64_t)v26);
  }
}

unsigned int *sub_22E99F820(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int *result;
  unint64_t v13;
  unsigned int *v14;
  int v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v6 + 88);
  v13 = 0;
  v14 = (unsigned int *)(v8 + 2128);
  v15 = 6592;
  v9 = sub_22EFF9E30(*(_QWORD *)v7, (*(_DWORD *)(v7 + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v6 + 112), *(_DWORD **)(v6 + 72), *(_QWORD *)(v8 + 15088), 0, 0);
  v10 = sub_22E9A0AAC(a1, a2, a3);
  result = sub_22E9A0988(a1, (uint64_t)&v13, v9, 1, v10, v11, 0, 0);
  if (v13)
  {
    result = v14;
    if (v14)
      return (unsigned int *)sub_22E3BB10C((unint64_t)v14, v13);
  }
  return result;
}

BOOL sub_22E99F8E4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v8;
  int v9;
  void **v10;
  uint64_t v11;
  int v12;

  v8 = *(_DWORD *)(a2 + 100);
  v9 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)(a2 + 48) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v10 = *(void ***)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  if (v11)
    v12 = v11 - (_DWORD)v10;
  else
    v12 = 1;
  return sub_22E9A0B5C(a1, v8, v9, a3, a4, v10, v12);
}

uint64_t sub_22E99F97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v10;
  BOOL v11;
  uint64_t v12;
  int v14;
  uint64_t result;
  int v16;
  unsigned int v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  int v31;
  unint64_t v32;
  std::string::size_type v33;
  uint64_t v34;
  _QWORD *v35;
  std::string *p_p;
  size_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  std::string::size_type v40;
  uint64_t v41;
  std::string::size_type v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  std::string::size_type v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  int v52;
  int v53;
  unint64_t v54;
  int v55;
  _QWORD *v56;
  std::string *v57;
  size_t size;
  uint64_t v59;
  unsigned __int8 *v60;
  unsigned __int8 *v61;
  uint64_t v62;
  unsigned __int8 *v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t v67;
  unsigned __int8 *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  int v73;
  int v74;
  unint64_t v75;
  int v76;
  uint64_t v77;
  unsigned __int8 *v78;
  uint64_t v79;
  _OWORD *v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t i;
  int v86;
  unint64_t v87;
  int v88;
  uint64_t v89;
  unsigned __int8 *v90;
  uint64_t v91;
  _OWORD *v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t j;
  int v98;
  unint64_t v99;
  int v100;
  uint64_t v101;
  int v102;
  unint64_t v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  unsigned __int8 *v121;
  uint64_t v122;
  int v123;
  unint64_t v124;
  int v125;
  unint64_t v126;
  unint64_t v127;
  unsigned int v128;
  unint64_t v129;
  unint64_t v130;
  int v131;
  unint64_t v132;
  unint64_t v133;
  int v134;
  _OWORD *v135;
  unint64_t v136;
  int v137;
  _OWORD *v138;
  unint64_t v139;
  int v140;
  unint64_t v141;
  std::string::size_type v142;
  int v143;
  std::string __p;
  _OWORD *v145;
  std::string::size_type v146;
  int v147;
  unsigned __int8 *v148;
  unint64_t v149;
  uint64_t v150;
  char v151;
  int v152;
  std::string v153;
  _OWORD *v154;
  unint64_t v155;
  int v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  int v161;

  v10 = *(_DWORD *)(a2 + 64);
  v11 = v10 > 0x20;
  v12 = (1 << v10) & 0x100400001;
  if (v11 || v12 == 0)
  {
    v16 = *(unsigned __int8 *)(a2 + 96);
    if (*(_DWORD *)(a1 + 32) == 9 && v16 != 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 32))(a1, a3, a4);
      return 1;
    }
    if (*(_BYTE *)(a1 + 97))
    {
      *(_BYTE *)(a1 + 97) = 0;
      *(_BYTE *)(a1 + 96) = v16;
    }
    else if (*(unsigned __int8 *)(a1 + 96) != v16)
    {
      v19 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)(a2 + 48) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
      sub_22E9A0F10(a1, v19, a3, a4);
      return 0;
    }
  }
  v14 = sub_22E9A0F94(a1, a2 + 16, 0, a3, a4);
  result = 0;
  if (!v14)
    return result;
  result = sub_22E9A0F94(a1, a2 + 344, 1u, a3, a4);
  if (!(_DWORD)result)
    return result;
  if (*(_DWORD *)(a1 + 32) == 9)
  {
    if (*(_BYTE *)(a2 + 384))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 88))(a1, a3, a4);
      return 0;
    }
    v18 = *(_DWORD *)(a2 + 64);
    if (v18 <= 0x20 && ((1 << v18) & 0x107A80148) != 0)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 96))(a1, a2, a3, a4);
  }
  else
  {
    v18 = *(_DWORD *)(a2 + 64);
  }
  if (v18 <= 0x20 && ((1 << v18) & 0x100400001) != 0)
    return 1;
  v20 = a2 + 40;
  v21 = *(_DWORD *)(a2 + 100);
  if (v21 < *(_DWORD *)(a1 + 40))
  {
    sub_22E54C570((unint64_t *)(a1 + 88), *(_DWORD *)(a2 + 100));
    v18 = *(_DWORD *)(a2 + 64);
  }
  if ((v18 & 0xFFFFFFFE) != 0x1C)
  {
    v27 = *(_DWORD *)(a1 + 32);
    if ((v27 > 8 || ((1 << v27) & 0x184) == 0) && v18 == 27 || v18 == 25 && v27 != 8)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 96))(a1, a2, a3, a4);
    if (v18 == 21 && v27 == 8)
    {
      v28 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
      v141 = 0;
      v142 = v28;
      v143 = 6866;
      v29 = sub_22E9A0954(a1, *(_QWORD *)(a2 + 48));
      v30 = sub_22E9A0AAC(a1, a3, a4);
      sub_22E9A0988(a1, (uint64_t)&v141, v29, 0, v30, v31, 0, 0);
      v32 = v141;
      if (!v141)
        return 1;
      v33 = v142;
      if (!v142)
        return 1;
      goto LABEL_65;
    }
    if (v27 == 7)
    {
      if (v18 <= 0x1B && ((1 << v18) & 0xA080000) != 0)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)a1 + 96))(a1, a2, a3, a4);
    }
    else if (v27 == 8)
    {
      goto LABEL_107;
    }
    v128 = v21;
    if (*(_BYTE *)(a2 + 312))
    {
      v77 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
      v78 = (unsigned __int8 *)sub_22E3B8AAC(v77);
      v79 = *v78;
      v78[v79 + 1] = 1;
      *v78 = v79 + 1;
      *(_QWORD *)&v78[8 * v79 + 16] = "public";
      v140 = 6581;
      v139 = v77;
      v126 = v77;
      v80 = (_OWORD *)sub_22E3B8AAC(v77);
      v138 = v80;
      v81 = *((_OWORD *)v78 + 5);
      v83 = *((_OWORD *)v78 + 2);
      v82 = *((_OWORD *)v78 + 3);
      v80[4] = *((_OWORD *)v78 + 4);
      v80[5] = v81;
      v80[2] = v83;
      v80[3] = v82;
      v84 = *((_OWORD *)v78 + 1);
      *v80 = *(_OWORD *)v78;
      v80[1] = v84;
      for (i = 96; i != 336; i += 24)
        std::string::operator=((std::string *)((char *)v80 + i), (const std::string *)&v78[i]);
      sub_22E78D560((uint64_t)(v80 + 21), (uint64_t)(v78 + 336));
      sub_22E78D658((uint64_t)(v80 + 28), (uint64_t *)v78 + 56);
      v86 = sub_22E9A0954(a1, *(_QWORD *)(a2 + 304));
      v87 = sub_22E9A0AAC(a1, a3, a4);
      sub_22E9A0988(a1, (uint64_t)&v138, v86, 0, v87, v88, 0, 0);
      if (v138 && v139)
      {
        sub_22E3BB10C(v139, (unint64_t)v138);
        v138 = 0;
      }
      sub_22E3BB10C(v126, (unint64_t)v78);
      v21 = v128;
      v20 = a2 + 40;
    }
    if (*(_BYTE *)(a2 + 288))
    {
      v89 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
      v90 = (unsigned __int8 *)sub_22E3B8AAC(v89);
      v91 = *v90;
      v90[v91 + 1] = 1;
      *v90 = v91 + 1;
      *(_QWORD *)&v90[8 * v91 + 16] = "private";
      v137 = 6581;
      v136 = v89;
      v127 = v89;
      v92 = (_OWORD *)sub_22E3B8AAC(v89);
      v135 = v92;
      v93 = *((_OWORD *)v90 + 5);
      v95 = *((_OWORD *)v90 + 2);
      v94 = *((_OWORD *)v90 + 3);
      v92[4] = *((_OWORD *)v90 + 4);
      v92[5] = v93;
      v92[2] = v95;
      v92[3] = v94;
      v96 = *((_OWORD *)v90 + 1);
      *v92 = *(_OWORD *)v90;
      v92[1] = v96;
      for (j = 96; j != 336; j += 24)
        std::string::operator=((std::string *)((char *)v92 + j), (const std::string *)&v90[j]);
      sub_22E78D560((uint64_t)(v92 + 21), (uint64_t)(v90 + 336));
      sub_22E78D658((uint64_t)(v92 + 28), (uint64_t *)v90 + 56);
      v98 = sub_22E9A0954(a1, *(_QWORD *)(a2 + 280));
      v99 = sub_22E9A0AAC(a1, a3, a4);
      sub_22E9A0988(a1, (uint64_t)&v135, v98, 0, v99, v100, 0, 0);
      if (v135 && v136)
      {
        sub_22E3BB10C(v136, (unint64_t)v135);
        v135 = 0;
      }
      sub_22E3BB10C(v127, (unint64_t)v90);
      v21 = v128;
      v20 = a2 + 40;
    }
LABEL_107:
    if (*(_DWORD *)(a2 + 64) == 21 && (*(_DWORD *)(a5 + 72) == 11 || *(_DWORD *)(a5 + 68) == 6))
    {
      v101 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
      v132 = 0;
      v133 = v101;
      v134 = 6915;
      v102 = sub_22E9A0954(a1, *(_QWORD *)(a2 + 48));
      v103 = sub_22E9A0AAC(a1, a3, a4);
      sub_22E9A0988(a1, (uint64_t)&v132, v102, 0, v103, v104, 0, 0);
      if (v132)
      {
        if (v133)
        {
          sub_22E3BB10C(v133, v132);
          v132 = 0;
        }
      }
    }
    v105 = *(_DWORD *)(a2 + 64);
    if (*(_DWORD *)(a2 + 28) && v105 == 21)
    {
      sub_22E9A1624(a1, a2, a2 + 16, 0, a3, a4);
      v105 = *(_DWORD *)(a2 + 64);
    }
    v106 = *(_DWORD *)(a2 + 356);
    if (v106)
    {
      if (v105 - 2 < 0x12 || v105 <= 0x1F && ((1 << v105) & 0xC2000000) != 0)
        goto LABEL_118;
      sub_22E9A1624(a1, a2, a2 + 344, 1u, a3, a4);
      v105 = *(_DWORD *)(a2 + 64);
      v106 = *(_DWORD *)(a2 + 356);
    }
    if (v105 == 25 && !v106)
    {
      v122 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
      v129 = 0;
      v130 = v122;
      v131 = 6574;
      v123 = sub_22E9A0954(a1, a3);
      v124 = sub_22E9A0AAC(a1, a3, a4);
      sub_22E9A0988(a1, (uint64_t)&v129, v123, 0, v124, v125, 0, 0);
      if (v129)
      {
        if (v130)
        {
          sub_22E3BB10C(v130, v129);
          v129 = 0;
        }
      }
    }
LABEL_118:
    v107 = *(_DWORD *)(a2 + 64);
    if (*(_BYTE *)(a2 + 120))
    {
      v108 = v107 - 2;
      if (v108 < 0xF && ((0x6667u >> v108) & 1) != 0)
      {
        v107 = dword_22F4691B8[v108];
      }
      else
      {
        sub_22E9A1844(a1, a2, (uint64_t *)(a2 + 104), a3, a4);
        v107 = *(_DWORD *)(a2 + 64);
      }
    }
    if (*(_BYTE *)(a2 + 240))
    {
      v109 = v107 - 2;
      if (v109 < 0x1E && ((0x3001FFFFu >> v109) & 1) != 0)
      {
        v107 = dword_22F4691F4[v109];
      }
      else
      {
        sub_22E9A1844(a1, a2, (uint64_t *)(a2 + 224), a3, a4);
        v107 = *(_DWORD *)(a2 + 64);
      }
    }
    if (*(_BYTE *)(a2 + 168))
    {
      v110 = v107 - 2;
      if (v110 < 0x1E && ((0x3001FE07u >> v110) & 1) != 0)
      {
        v107 = dword_22F46926C[v110];
      }
      else
      {
        sub_22E9A1844(a1, a2, (uint64_t *)(a2 + 152), a3, a4);
        v107 = *(_DWORD *)(a2 + 64);
      }
    }
    if (*(_BYTE *)(a2 + 192))
    {
      v111 = v107 - 2;
      if (v111 < 0x1E && ((0x3001FE07u >> v111) & 1) != 0)
      {
        v107 = dword_22F46926C[v111];
      }
      else
      {
        sub_22E9A1844(a1, a2, (uint64_t *)(a2 + 176), a3, a4);
        v107 = *(_DWORD *)(a2 + 64);
      }
    }
    if (*(_BYTE *)(a2 + 216))
    {
      v112 = v107 - 5;
      if (v112 < 0x1B && ((0x6003FF3u >> v112) & 1) != 0)
      {
        v107 = dword_22F4692E4[v112];
      }
      else
      {
        sub_22E9A1844(a1, a2, (uint64_t *)(a2 + 200), a3, a4);
        v107 = *(_DWORD *)(a2 + 64);
      }
    }
    if (*(_BYTE *)(a2 + 144) && v107 == 21)
      sub_22E9A1844(a1, a2, (uint64_t *)(a2 + 128), a3, a4);
    if (*(_BYTE *)(a2 + 192) && *(_BYTE *)(a2 + 168))
      sub_22E9A1A38(a1, (uint64_t *)(a2 + 176), (uint64_t *)(a2 + 152), a3, a4);
    if (*(_BYTE *)(a2 + 240) && *(_BYTE *)(a2 + 144))
      sub_22E9A1A38(a1, (uint64_t *)(a2 + 224), (uint64_t *)(a2 + 128), a3, a4);
    if ((sub_22F064030(a2) & 1) != 0)
    {
      v113 = 1 << *(_DWORD *)(a2 + 8);
      if ((v113 & 0x3B7) != 0)
      {
LABEL_158:
        v120 = *(_DWORD *)(a2 + 64);
        goto LABEL_159;
      }
      if ((v113 & 0x1DC48) != 0)
      {
        sub_22E9A2198(a1, a2, a3, a4);
        goto LABEL_158;
      }
      v120 = *(_DWORD *)(a2 + 64);
      if (v120 > 0xA || ((1 << v120) & 0x6B4) == 0)
      {
LABEL_159:
        if (((1 << v120) & 0x20A7FFEB6) == 0
          && (((1 << v120) & 0x1F4000149) != 0
           || (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 72) + 1) & 0x40) == 0))
        {
          sub_22E9A265C(a1, v20, a3, a4);
        }
        if (*(_DWORD *)(a1 + 56) == 2)
          return 1;
        result = sub_22E9A13B0(a1, *(_BYTE *)(a2 + 96), v20, a3, a4, v21);
        if ((_DWORD)result)
        {
          v121 = *(unsigned __int8 **)(*(_QWORD *)(a1 + 64) + 8 * (*(_DWORD *)(a1 + 36) + v21));
          if (v121)
            sub_22E9A2AEC(a1, (_DWORD *)a2, a3, a4, v121);
          return 1;
        }
        return result;
      }
      v114 = a1;
      v115 = a2;
      v116 = v20;
      v117 = a3;
      v118 = a4;
      v119 = 6586;
    }
    else
    {
      v114 = a1;
      v115 = a2;
      v116 = v20;
      v117 = a3;
      v118 = a4;
      v119 = 6590;
    }
    sub_22E9A1C14(v114, v115, v116, v117, v118, v119);
    goto LABEL_158;
  }
  v22 = v21 + 1;
  result = sub_22E9A13B0(a1, *(_BYTE *)(a2 + 96), a2 + 40, a3, a4, v21 + 1);
  if ((_DWORD)result)
  {
    sub_22E54C570((unint64_t *)(a1 + 88), v21 + 1);
    v23 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8 * (*(_DWORD *)(a1 + 36) + v21));
    v24 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88);
    if (*(_DWORD *)(a2 + 64) == 28)
    {
      v25 = *(_QWORD *)(v24 + 16480);
      v26 = 2;
    }
    else
    {
      v25 = 0;
      v26 = 4;
    }
    v157 = v26;
    v158 = v25;
    v159 = 0;
    v160 = 0;
    v161 = 0;
    if (!sub_22F063740((uint64_t)&v157, v24, *(_QWORD *)(v23 + 8)))
    {
      v56 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
      v148 = 0;
      v149 = (unint64_t)(v56 + 266);
      LODWORD(v150) = 6578;
      sub_22F063CE0((uint64_t)&v157, v56, &v153);
      if ((v153.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v57 = &v153;
      else
        v57 = (std::string *)v153.__r_.__value_.__r.__words[0];
      if ((v153.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = *((_BYTE *)&v153.__r_.__value_.__s + 23) & 0x7F;
      else
        size = v153.__r_.__value_.__l.__size_;
      sub_22E3B89A8(&v148, v57, size);
      v59 = *(_QWORD *)(v23 + 8);
      v60 = v148;
      if (!v148)
      {
        v60 = (unsigned __int8 *)sub_22E3B8AAC(v149);
        v148 = v60;
      }
      v60[*v60 + 1] = 9;
      v61 = v148;
      v62 = *v148;
      *v148 = v62 + 1;
      *(_QWORD *)&v61[8 * v62 + 16] = v59;
      v61[(v62 + 1) + 1] = 2;
      v63 = v148;
      v64 = *v148;
      *v148 = v64 + 1;
      *(_QWORD *)&v63[8 * v64 + 16] = 0;
      sub_22F0D4E74(v23);
      sub_22E4D6448((uint64_t)(v63 + 336), v65, 1);
      v156 = v150;
      v154 = 0;
      v155 = v149;
      if (v148)
      {
        v66 = (_OWORD *)sub_22E3B8AAC(v149);
        v67 = 0;
        v154 = v66;
        v68 = v148;
        v69 = *((_OWORD *)v148 + 1);
        *v66 = *(_OWORD *)v148;
        v66[1] = v69;
        v70 = *((_OWORD *)v68 + 5);
        v72 = *((_OWORD *)v68 + 2);
        v71 = *((_OWORD *)v68 + 3);
        v66[4] = *((_OWORD *)v68 + 4);
        v66[5] = v70;
        v66[2] = v72;
        v66[3] = v71;
        do
        {
          std::string::operator=((std::string *)((char *)v66 + v67 + 96), (const std::string *)&v68[v67 + 96]);
          v67 += 24;
        }
        while (v67 != 240);
        sub_22E78D560((uint64_t)(v66 + 21), (uint64_t)(v68 + 336));
        sub_22E78D658((uint64_t)(v66 + 28), (uint64_t *)v68 + 56);
      }
      sub_22F0D5A50(v23);
      v74 = v73;
      v75 = sub_22E9A0AAC(a1, a3, a4);
      sub_22E9A0988(a1, (uint64_t)&v154, v74, 0, v75, v76, 0, 0);
      if (v154 && v155)
      {
        sub_22E3BB10C(v155, (unint64_t)v154);
        v154 = 0;
      }
      if (SHIBYTE(v153.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v153.__r_.__value_.__l.__data_);
      if (v148 && v149)
        sub_22E3BB10C(v149, (unint64_t)v148);
    }
    v34 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8 * (*(_DWORD *)(a1 + 36) + v22));
    LODWORD(v148) = 6;
    v152 = 0;
    v149 = 0;
    v150 = 0;
    v151 = 0;
    if (sub_22F063740((uint64_t)&v148, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), *(_QWORD *)(v34 + 8)))
      return 1;
    v35 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
    v153.__r_.__value_.__r.__words[0] = 0;
    v153.__r_.__value_.__l.__size_ = (std::string::size_type)(v35 + 266);
    LODWORD(v153.__r_.__value_.__r.__words[2]) = 6578;
    sub_22F063CE0((uint64_t)&v148, v35, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v37 = *((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x7F;
    else
      v37 = __p.__r_.__value_.__l.__size_;
    sub_22E3B89A8((unsigned __int8 **)&v153, p_p, v37);
    v38 = *(_QWORD *)(v34 + 8);
    v39 = (unsigned __int8 *)v153.__r_.__value_.__r.__words[0];
    if (!v153.__r_.__value_.__r.__words[0])
    {
      v39 = (unsigned __int8 *)sub_22E3B8AAC(v153.__r_.__value_.__l.__size_);
      v153.__r_.__value_.__r.__words[0] = (std::string::size_type)v39;
    }
    v39[*v39 + 1] = 9;
    v40 = v153.__r_.__value_.__r.__words[0];
    v41 = *v153.__r_.__value_.__l.__data_;
    *v153.__r_.__value_.__l.__data_ = v41 + 1;
    *(_QWORD *)(v40 + 8 * v41 + 16) = v38;
    *(_BYTE *)(v40 + (v41 + 1) + 1) = 2;
    v42 = v153.__r_.__value_.__r.__words[0];
    v43 = *v153.__r_.__value_.__l.__data_;
    *v153.__r_.__value_.__l.__data_ = v43 + 1;
    *(_QWORD *)(v42 + 8 * v43 + 16) = 0;
    sub_22F0D4E74(v34);
    sub_22E4D6448(v42 + 336, v44, 1);
    v147 = v153.__r_.__value_.__r.__words[2];
    v145 = 0;
    v146 = v153.__r_.__value_.__l.__size_;
    if (v153.__r_.__value_.__r.__words[0])
    {
      v45 = (_OWORD *)sub_22E3B8AAC(v153.__r_.__value_.__l.__size_);
      v46 = 0;
      v145 = v45;
      v47 = v153.__r_.__value_.__r.__words[0];
      v48 = *(_OWORD *)(v153.__r_.__value_.__r.__words[0] + 16);
      *v45 = *(_OWORD *)v153.__r_.__value_.__l.__data_;
      v45[1] = v48;
      v49 = *(_OWORD *)(v47 + 80);
      v51 = *(_OWORD *)(v47 + 32);
      v50 = *(_OWORD *)(v47 + 48);
      v45[4] = *(_OWORD *)(v47 + 64);
      v45[5] = v49;
      v45[2] = v51;
      v45[3] = v50;
      do
      {
        std::string::operator=((std::string *)((char *)v45 + v46 + 96), (const std::string *)(v47 + 96 + v46));
        v46 += 24;
      }
      while (v46 != 240);
      sub_22E78D560((uint64_t)(v45 + 21), v47 + 336);
      sub_22E78D658((uint64_t)(v45 + 28), (uint64_t *)(v47 + 448));
    }
    sub_22F0D5A50(v34);
    v53 = v52;
    v54 = sub_22E9A0AAC(a1, a3, a4);
    sub_22E9A0988(a1, (uint64_t)&v145, v53, 0, v54, v55, 0, 0);
    if (v145 && v146)
    {
      sub_22E3BB10C(v146, (unint64_t)v145);
      v145 = 0;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v32 = v153.__r_.__value_.__r.__words[0];
    if (!v153.__r_.__value_.__r.__words[0])
      return 1;
    v33 = v153.__r_.__value_.__l.__size_;
    if (!v153.__r_.__value_.__l.__size_)
      return 1;
LABEL_65:
    sub_22E3BB10C(v33, v32);
    return 1;
  }
  return result;
}

unsigned int *sub_22E9A0870(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  unsigned int v5[24];

  v2 = *(_QWORD *)(a1 + 8);
  v3 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v2 + 112), *(_DWORD **)(v2 + 72), *(_QWORD *)(*(_QWORD *)(v2 + 88) + 15088), 0, 0);
  sub_22E8FCA40((_QWORD *)v2, v3, 0xE53u, 0, (uint64_t)v5);
  return sub_22E903BEC(v5);
}

uint64_t sub_22E9A08E4(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24FAB7130;
  sub_22E54C5D0((void ***)(a1 + 88));
  return a1;
}

void sub_22E9A0914(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24FAB7130;
  sub_22E54C5D0((void ***)(a1 + 88));
  JUMPOUT(0x2348A0E9CLL);
}

uint64_t sub_22E9A0954(uint64_t a1, int a2)
{
  return sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
}

unsigned int *sub_22E9A0988(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unsigned int v18[24];
  _QWORD v19[2];
  uint64_t v20;
  int v21;

  v9 = *(_QWORD **)(a1 + 8);
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8 * *(unsigned int *)(a1 + 80));
  v11 = *(unsigned __int8 *)(a1 + 98);
  v19[1] = a8;
  v20 = a5;
  v21 = a6;
  v19[0] = a7;
  if (v11)
  {
    sub_22E90379C(v9, a3, a2, 0, (uint64_t)v18);
  }
  else
  {
    if (a4)
    {
      v12 = a3;
      sub_22EFF605C(v10);
      sub_22E90379C(v9, v13, a2, 0, (uint64_t)v18);
      sub_22F0D4E74(v10);
      v17 = v14;
      sub_22E8906A0((uint64_t)v18, &v17);
      sub_22E903BEC(v18);
    }
    else
    {
      sub_22E90379C(v9, a3, a2, 0, (uint64_t)v18);
      sub_22F0D4E74(v10);
      v17 = v15;
      sub_22E8906A0((uint64_t)v18, &v17);
      sub_22E903BEC(v18);
      v12 = v20;
    }
    sub_22E8FCA40(v9, v12, 0x1608u, 0, (uint64_t)v18);
  }
  sub_22F3119E8((uint64_t)v18, (uint64_t)&v20);
  sub_22F311900((uint64_t)v18, (uint64_t)v19);
  return sub_22E903BEC(v18);
}

unint64_t sub_22E9A0AAC(uint64_t a1, int a2, int a3)
{
  unsigned int v6;

  v6 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  return v6 | ((unint64_t)(sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8)+ ~*(_DWORD *)(a1 + 48)+ a2+ a3), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0)+ 1) << 32);
}

BOOL sub_22E9A0B5C(uint64_t a1, unsigned int a2, int a3, int a4, int a5, void **a6, int a7)
{
  size_t v7;
  void **v8;
  unsigned int v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  int v24;
  _OWORD *v26;
  unint64_t v27;
  int v28;
  void *v29;
  const char *v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  int v39;
  void **v40;
  unsigned int v41;
  void **v42;
  size_t v43;
  uint64_t v44;
  void **v45;

  LODWORD(v7) = a7;
  v8 = a6;
  v45 = a6;
  v14 = *(_DWORD *)(a1 + 40);
  if (v14 > a2)
    sub_22E54C570((unint64_t *)(a1 + 88), a2);
  v7 = v7;
  v42 = 0;
  v43 = 0;
  v44 = 0;
  if ((llvm::sys::locale::isPrint((llvm::sys::locale *)*(char *)v8) & 1) == 0)
  {
    v41 = 0;
    if (sub_22F311A7C(&v45, (uint64_t)v8 + v7))
      v41 = *(unsigned __int8 *)v45;
    LODWORD(v33) = 0;
    v37 = 0;
    v38 = 0;
    v39 = 1;
    v35 = 0;
    v36 = 0;
    v34 = 0;
    v32 = (unsigned __int8 *)(MEMORY[0x24BED83D8] + 16);
    v40 = (void **)&v42;
    llvm::raw_ostream::SetBufferAndMode();
    llvm::raw_ostream::write((llvm::raw_ostream *)&v32, "\\x");
    v29 = &unk_24FA65F98;
    v30 = "%02x";
    v31 = v41;
    llvm::raw_ostream::operator<<();
    if (v36 != v34)
      llvm::raw_ostream::flush_nonempty((llvm::raw_ostream *)&v32);
    if (v44 >= 0)
      v8 = (void **)&v42;
    else
      v8 = v42;
    if (v44 >= 0)
      v7 = HIBYTE(v44) & 0x7F;
    else
      v7 = v43;
    llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v32);
  }
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v32 = 0;
  v33 = v15;
  LODWORD(v34) = 6582;
  sub_22E3B89A8(&v32, v8, v7);
  v28 = v34;
  v26 = 0;
  v27 = v33;
  if (v32)
  {
    v16 = (_OWORD *)sub_22E3B8AAC(v33);
    v17 = 0;
    v26 = v16;
    v18 = v32;
    v19 = *((_OWORD *)v32 + 1);
    *v16 = *(_OWORD *)v32;
    v16[1] = v19;
    v20 = *((_OWORD *)v18 + 5);
    v22 = *((_OWORD *)v18 + 2);
    v21 = *((_OWORD *)v18 + 3);
    v16[4] = *((_OWORD *)v18 + 4);
    v16[5] = v20;
    v16[2] = v22;
    v16[3] = v21;
    do
    {
      std::string::operator=((std::string *)((char *)v16 + v17 + 96), (const std::string *)&v18[v17 + 96]);
      v17 += 24;
    }
    while (v17 != 240);
    sub_22E78D560((uint64_t)(v16 + 21), (uint64_t)(v18 + 336));
    sub_22E78D658((uint64_t)(v16 + 28), (uint64_t *)v18 + 56);
  }
  v23 = sub_22E9A0AAC(a1, a4, a5);
  sub_22E9A0988(a1, (uint64_t)&v26, a3, 1, v23, v24, 0, 0);
  if (v26 && v27)
  {
    sub_22E3BB10C(v27, (unint64_t)v26);
    v26 = 0;
  }
  if (v32 && v33)
    sub_22E3BB10C(v33, (unint64_t)v32);
  if (SHIBYTE(v44) < 0)
    operator delete(v42);
  return v14 > a2;
}

unsigned int *sub_22E9A0F10(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v6;
  unint64_t v7;
  int v8;
  unsigned int *result;
  unint64_t v10;
  unsigned int *v11;
  int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v10 = 0;
  v11 = (unsigned int *)v6;
  v12 = 6584;
  v7 = sub_22E9A0AAC(a1, a3, a4);
  result = sub_22E9A0988(a1, (uint64_t)&v10, a2, 1, v7, v8, 0, 0);
  if (v10)
  {
    result = v11;
    if (v11)
      return (unsigned int *)sub_22E3BB10C((unint64_t)v11, v10);
  }
  return result;
}

uint64_t sub_22E9A0F94(uint64_t a1, uint64_t a2, unsigned int a3, int a4, int a5)
{
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  std::string *p_p;
  size_t size;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int v31;
  unint64_t v32;
  int v33;
  unsigned __int8 *v34;
  unint64_t v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  _OWORD *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t i;
  int v45;
  unint64_t v46;
  int v47;
  std::string __p;
  unsigned __int8 *v49;
  uint64_t v50;
  int v51;
  _OWORD *v52;
  unint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  int v59;
  _OWORD *v60;
  unint64_t v61;
  int v62;

  if (*(_DWORD *)(a2 + 12) != 2 || *(_DWORD *)(a1 + 56) == 2)
    return 1;
  v11 = *(_DWORD *)(a2 + 16);
  if (v11 >= *(_DWORD *)(a1 + 40))
  {
    v36 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
    v37 = (unsigned __int8 *)sub_22E3B8AAC(v36);
    v38 = *v37;
    v37[v38 + 1] = 3;
    *v37 = v38 + 1;
    *(_QWORD *)&v37[8 * v38 + 16] = a3;
    v62 = 6905;
    v61 = v36;
    v39 = (_OWORD *)sub_22E3B8AAC(v36);
    v60 = v39;
    v40 = *((_OWORD *)v37 + 5);
    v42 = *((_OWORD *)v37 + 2);
    v41 = *((_OWORD *)v37 + 3);
    v39[4] = *((_OWORD *)v37 + 4);
    v39[5] = v40;
    v39[2] = v42;
    v39[3] = v41;
    v43 = *((_OWORD *)v37 + 1);
    *v39 = *(_OWORD *)v37;
    v39[1] = v43;
    for (i = 96; i != 336; i += 24)
      std::string::operator=((std::string *)((char *)v39 + i), (const std::string *)&v37[i]);
    sub_22E78D560((uint64_t)(v39 + 21), (uint64_t)(v37 + 336));
    sub_22E78D658((uint64_t)(v39 + 28), (uint64_t *)v37 + 56);
    v45 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 8)+ *(_DWORD *)a2- *(unsigned __int8 *)(a2 + 21)- *(_DWORD *)(a1 + 48), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
    v46 = sub_22E9A0AAC(a1, a4, a5);
    sub_22E9A0988(a1, (uint64_t)&v60, v45, 1, v46, v47, 0, 0);
    if (v60 && v61)
    {
      sub_22E3BB10C(v61, (unint64_t)v60);
      v60 = 0;
    }
    v35 = v36;
    v34 = v37;
LABEL_33:
    sub_22E3BB10C(v35, (unint64_t)v34);
    return 0;
  }
  sub_22E54C570((unint64_t *)(a1 + 88), *(_DWORD *)(a2 + 16));
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8 * (*(_DWORD *)(a1 + 36) + v11));
  if (v12)
  {
    v13 = *(_QWORD *)(v12 + 8);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88);
    v15 = *(_QWORD *)(v14 + 16480);
    v55 = 2;
    v56 = v15;
    v57 = 0;
    v58 = 0;
    v59 = 0;
    if (sub_22F063740((uint64_t)&v55, v14, v13))
      return 1;
    v50 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
    v51 = 6906;
    v16 = (unsigned __int8 *)sub_22E3B8AAC(v50);
    v49 = v16;
    v17 = *v16;
    v16[v17 + 1] = 3;
    *v16 = v17 + 1;
    *(_QWORD *)&v16[8 * v17 + 16] = a3;
    sub_22F063CE0((uint64_t)&v55, *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88), &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      p_p = &__p;
    else
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = *((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x7F;
    else
      size = __p.__r_.__value_.__l.__size_;
    sub_22E3B89A8(&v49, p_p, size);
    v20 = v49;
    if (!v49)
    {
      v20 = (unsigned __int8 *)sub_22E3B8AAC(v50);
      v49 = v20;
    }
    v20[*v20 + 1] = 9;
    v21 = v49;
    v22 = *v49;
    *v49 = v22 + 1;
    *(_QWORD *)&v21[8 * v22 + 16] = v13;
    sub_22F0D4E74(v12);
    sub_22E4D6448((uint64_t)(v21 + 336), v23, 1);
    v54 = v51;
    v52 = 0;
    v53 = v50;
    if (v49)
    {
      v24 = (_OWORD *)sub_22E3B8AAC(v50);
      v25 = 0;
      v52 = v24;
      v26 = v49;
      v27 = *((_OWORD *)v49 + 1);
      *v24 = *(_OWORD *)v49;
      v24[1] = v27;
      v28 = *((_OWORD *)v26 + 5);
      v30 = *((_OWORD *)v26 + 2);
      v29 = *((_OWORD *)v26 + 3);
      v24[4] = *((_OWORD *)v26 + 4);
      v24[5] = v28;
      v24[2] = v30;
      v24[3] = v29;
      do
      {
        std::string::operator=((std::string *)((char *)v24 + v25 + 96), (const std::string *)&v26[v25 + 96]);
        v25 += 24;
      }
      while (v25 != 240);
      sub_22E78D560((uint64_t)(v24 + 21), (uint64_t)(v26 + 336));
      sub_22E78D658((uint64_t)(v24 + 28), (uint64_t *)v26 + 56);
    }
    v31 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 8)+ *(_DWORD *)a2- *(unsigned __int8 *)(a2 + 21)- *(_DWORD *)(a1 + 48), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
    v32 = sub_22E9A0AAC(a1, a4, a5);
    sub_22E9A0988(a1, (uint64_t)&v52, v31, 1, v32, v33, 0, 0);
    if (v52 && v53)
    {
      sub_22E3BB10C(v53, (unint64_t)v52);
      v52 = 0;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
    v34 = v49;
    if (v49)
    {
      v35 = v50;
      if (v50)
        goto LABEL_33;
    }
  }
  return 0;
}

BOOL sub_22E9A13B0(uint64_t a1, char a2, uint64_t a3, int a4, int a5, unsigned int a6)
{
  unsigned int v7;
  int v9;
  uint64_t v12;
  unint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t i;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t j;
  char v31;
  int v32;
  unint64_t v33;
  int v34;
  _DWORD *v35;
  int v37;
  _OWORD *v39;
  unint64_t v40;
  int v41;

  v7 = *(_DWORD *)(a1 + 40);
  if (v7 <= a6)
  {
    v9 = a4;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88);
    v13 = v12 + 2128;
    if (a2)
    {
      v14 = (unsigned __int8 *)sub_22E3B8AAC(v12 + 2128);
      v15 = *v14;
      v16 = v14 + 1;
      v16[v15] = 3;
      *(_QWORD *)&v14[8 * v15 + 16] = a6 + 1;
      v17 = *(unsigned int *)(a1 + 40);
      v18 = (v15 + 1);
      v16[v18] = 3;
      *v14 = v15 + 2;
      *(_QWORD *)&v14[8 * v18 + 16] = v17;
      v19 = sub_22E3B8AAC(v13);
      v20 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v14;
      *(_OWORD *)(v19 + 16) = v20;
      v21 = *((_OWORD *)v14 + 5);
      v23 = *((_OWORD *)v14 + 2);
      v22 = *((_OWORD *)v14 + 3);
      *(_OWORD *)(v19 + 64) = *((_OWORD *)v14 + 4);
      *(_OWORD *)(v19 + 80) = v21;
      *(_OWORD *)(v19 + 32) = v23;
      *(_OWORD *)(v19 + 48) = v22;
      for (i = 96; i != 336; i += 24)
        std::string::operator=((std::string *)(v19 + i), (const std::string *)&v14[i]);
      sub_22E78D560(v19 + 336, (uint64_t)(v14 + 336));
      sub_22E78D658(v19 + 448, (uint64_t *)v14 + 56);
      sub_22E3BB10C(v13, (unint64_t)v14);
      v41 = 6918;
      v39 = 0;
      v40 = v13;
      if (v19)
      {
        v37 = a5;
        v25 = (_OWORD *)sub_22E3B8AAC(v13);
        v39 = v25;
        v26 = *(_OWORD *)(v19 + 80);
        v28 = *(_OWORD *)(v19 + 32);
        v27 = *(_OWORD *)(v19 + 48);
        v25[4] = *(_OWORD *)(v19 + 64);
        v25[5] = v26;
        v25[2] = v28;
        v25[3] = v27;
        v29 = *(_OWORD *)(v19 + 16);
        *v25 = *(_OWORD *)v19;
        v25[1] = v29;
        for (j = 96; j != 336; j += 24)
          std::string::operator=((std::string *)((char *)v25 + j), (const std::string *)(v19 + j));
        sub_22E78D560((uint64_t)(v25 + 21), v19 + 336);
        sub_22E78D658((uint64_t)(v25 + 28), (uint64_t *)(v19 + 448));
        v31 = 0;
        a5 = v37;
      }
      else
      {
        v31 = 1;
      }
      v9 = a4;
    }
    else
    {
      v19 = 0;
      v41 = 6913;
      v39 = 0;
      v40 = v12 + 2128;
      v31 = 1;
    }
    v32 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)(a3 + 8) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
    v33 = sub_22E9A0AAC(a1, v9, a5);
    sub_22E9A0988(a1, (uint64_t)&v39, v32, 1, v33, v34, 0, 0);
    if (v39 && v40)
    {
      sub_22E3BB10C(v40, (unint64_t)v39);
      v39 = 0;
    }
    v35 = *(_DWORD **)(a1 + 112);
    v35[4] = 0;
    *v35 = -2;
    if ((v31 & 1) == 0)
      sub_22E3BB10C(v13, v19);
  }
  return v7 > a6;
}

void sub_22E9A1624(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5, int a6)
{
  uint64_t v9;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t i;
  int v25;
  unint64_t v26;
  int v27;
  _OWORD *v29;
  unint64_t v30;
  int v31;
  _OWORD v32[2];
  __int128 v33;
  uint64_t v34;

  v9 = a2 + 40;
  if (*(_DWORD *)(a3 + 12) == 1)
  {
    v11 = sub_22E9A0AAC(a1, *(_DWORD *)a3 - *(unsigned __int8 *)(a3 + 21), *(_DWORD *)(a3 + 8) + *(unsigned __int8 *)(a3 + 21));
    *(_QWORD *)((char *)v32 + 12) = 0;
    BYTE4(v32[1]) = 0;
    v33 = 0uLL;
    *((_QWORD *)&v32[1] + 1) = 0;
    LOBYTE(v34) = 0;
    *(_QWORD *)&v32[0] = v11;
    BYTE8(v32[0]) = v12;
  }
  else
  {
    v34 = 0;
    v33 = 0u;
    memset(v32, 0, sizeof(v32));
  }
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v14 = (unsigned __int8 *)sub_22E3B8AAC(v13);
  v15 = *v14;
  v14[v15 + 1] = 3;
  v16 = a4;
  v17 = v15 + 1;
  *v14 = v15 + 1;
  *(_QWORD *)&v14[8 * v15 + 16] = v16;
  v18 = sub_22F3C7D84(v9);
  v14[v17 + 1] = 1;
  *v14 = v15 + 2;
  *(_QWORD *)&v14[8 * v17 + 16] = v18;
  v31 = 6917;
  v30 = v13;
  v19 = (_OWORD *)sub_22E3B8AAC(v13);
  v29 = v19;
  v20 = *((_OWORD *)v14 + 5);
  v22 = *((_OWORD *)v14 + 2);
  v21 = *((_OWORD *)v14 + 3);
  v19[4] = *((_OWORD *)v14 + 4);
  v19[5] = v20;
  v19[2] = v22;
  v19[3] = v21;
  v23 = *((_OWORD *)v14 + 1);
  *v19 = *(_OWORD *)v14;
  v19[1] = v23;
  for (i = 96; i != 336; i += 24)
    std::string::operator=((std::string *)((char *)v19 + i), (const std::string *)&v14[i]);
  sub_22E78D560((uint64_t)(v19 + 21), (uint64_t)(v14 + 336));
  sub_22E78D658((uint64_t)(v19 + 28), (uint64_t *)v14 + 56);
  v25 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), *(_DWORD *)(*(_QWORD *)(a1 + 16) + 8)+ *(_DWORD *)a3- *(unsigned __int8 *)(a3 + 21)- *(_DWORD *)(a1 + 48), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v26 = sub_22E9A0AAC(a1, a5, a6);
  sub_22E9A0988(a1, (uint64_t)&v29, v25, 1, v26, v27, (uint64_t)v32, 1);
  if (v29 && v30)
  {
    sub_22E3BB10C(v30, (unint64_t)v29);
    v29 = 0;
  }
  sub_22E3BB10C(v13, (unint64_t)v14);
  if (SHIBYTE(v33) < 0)
    operator delete(*((void **)&v32[1] + 1));
}

unint64_t sub_22E9A1844(uint64_t a1, uint64_t a2, uint64_t *a3, int a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t i;
  int v19;
  unint64_t v20;
  int v21;
  int v22;
  unint64_t v23;
  char v24;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  void *__p;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _OWORD *v37;
  unint64_t v38;
  int v39;

  v6 = a2 + 40;
  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v8 = *a3;
  v9 = (unsigned __int8 *)sub_22E3B8AAC(v7);
  v10 = *v9;
  v9[v10 + 1] = 1;
  v11 = v10 + 1;
  *v9 = v10 + 1;
  *(_QWORD *)&v9[8 * v10 + 16] = v8;
  v12 = sub_22F3C7D84(v6);
  v9[v11 + 1] = 1;
  *v9 = v10 + 2;
  *(_QWORD *)&v9[8 * v11 + 16] = v12;
  v39 = 6916;
  v38 = v7;
  v13 = (_OWORD *)sub_22E3B8AAC(v7);
  v37 = v13;
  v14 = *((_OWORD *)v9 + 5);
  v16 = *((_OWORD *)v9 + 2);
  v15 = *((_OWORD *)v9 + 3);
  v13[4] = *((_OWORD *)v9 + 4);
  v13[5] = v14;
  v13[2] = v16;
  v13[3] = v15;
  v17 = *((_OWORD *)v9 + 1);
  *v13 = *(_OWORD *)v9;
  v13[1] = v17;
  for (i = 96; i != 336; i += 24)
    std::string::operator=((std::string *)((char *)v13 + i), (const std::string *)&v9[i]);
  sub_22E78D560((uint64_t)(v13 + 21), (uint64_t)(v9 + 336));
  sub_22E78D658((uint64_t)(v13 + 28), (uint64_t *)v9 + 56);
  v19 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *((_DWORD *)a3 + 2) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v20 = sub_22E9A0AAC(a1, a4, a5);
  v22 = v21;
  v23 = sub_22E9A0AAC(a1, a3[1], 1);
  v31 = 0;
  v32 = 0;
  v34 = 0;
  v35 = 0;
  __p = 0;
  v36 = 0;
  v29 = v23;
  v30 = v24;
  sub_22E9A0988(a1, (uint64_t)&v37, v19, 1, v20, v22, (uint64_t)&v29, 1);
  if (SHIBYTE(v35) < 0)
    operator delete(__p);
  if (v37 && v38)
  {
    sub_22E3BB10C(v38, (unint64_t)v37);
    v37 = 0;
  }
  return sub_22E3BB10C(v7, (unint64_t)v9);
}

unint64_t sub_22E9A1A38(uint64_t a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t i;
  int v23;
  unint64_t v24;
  int v25;
  int v26;
  unint64_t v27;
  char v28;
  unint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  void *__p;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _OWORD *v38;
  unint64_t v39;
  int v40;

  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v11 = *a2;
  v12 = (unsigned __int8 *)sub_22E3B8AAC(v10);
  v13 = *v12;
  v14 = v12 + 1;
  v14[v13] = 1;
  *(_QWORD *)&v12[8 * v13 + 16] = v11;
  v15 = *a3;
  v16 = (v13 + 1);
  v14[v16] = 1;
  *v12 = v13 + 2;
  *(_QWORD *)&v12[8 * v16 + 16] = v15;
  v40 = 6911;
  v39 = v10;
  v17 = (_OWORD *)sub_22E3B8AAC(v10);
  v38 = v17;
  v18 = *((_OWORD *)v12 + 5);
  v20 = *((_OWORD *)v12 + 2);
  v19 = *((_OWORD *)v12 + 3);
  v17[4] = *((_OWORD *)v12 + 4);
  v17[5] = v18;
  v17[2] = v20;
  v17[3] = v19;
  v21 = *((_OWORD *)v12 + 1);
  *v17 = *(_OWORD *)v12;
  v17[1] = v21;
  for (i = 96; i != 336; i += 24)
    std::string::operator=((std::string *)((char *)v17 + i), (const std::string *)&v12[i]);
  sub_22E78D560((uint64_t)(v17 + 21), (uint64_t)(v12 + 336));
  sub_22E78D658((uint64_t)(v17 + 28), (uint64_t *)v12 + 56);
  v23 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *((_DWORD *)a2 + 2) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v24 = sub_22E9A0AAC(a1, a4, a5);
  v26 = v25;
  v27 = sub_22E9A0AAC(a1, a2[1], 1);
  v32 = 0;
  v33 = 0;
  v35 = 0;
  v36 = 0;
  __p = 0;
  v37 = 0;
  v30 = v27;
  v31 = v28;
  sub_22E9A0988(a1, (uint64_t)&v38, v23, 1, v24, v26, (uint64_t)&v30, 1);
  if (SHIBYTE(v36) < 0)
    operator delete(__p);
  if (v38 && v39)
  {
    sub_22E3BB10C(v39, (unint64_t)v38);
    v38 = 0;
  }
  return sub_22E3BB10C(v10, (unint64_t)v12);
}

void sub_22E9A1C14(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  uint64_t v10;
  int v11;
  int v12;
  unint64_t v14;
  char v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t i;
  int v31;
  unint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  int v36;
  const char *v37;
  uint64_t v38;
  size_t v39;
  size_t v40;
  __int128 *p_dst;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  _OWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t j;
  int v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  _OWORD *v64;
  unint64_t v65;
  int v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  __int128 v71;
  unint64_t v72;
  char v73;
  const char *v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  void *__p;
  __int128 v80;
  char v81;
  _OWORD *v82;
  unint64_t v83;
  int v84;
  uint64_t v85;
  int v86;
  int v87;
  char v88;
  __int128 __dst;
  unint64_t v90;

  v10 = *(_QWORD *)a2;
  v11 = *(_DWORD *)(a2 + 8);
  v12 = 1;
  v61 = a3;
  if (v11 <= 4)
  {
    if (v11)
    {
      if (v11 == 1)
LABEL_12:
        v12 = 2;
    }
    else
    {
      v12 = 0;
    }
  }
  else
  {
    if (v11 == 12 || v11 == 10)
    {
      v12 = 3;
      goto LABEL_14;
    }
    if (v11 == 5)
      goto LABEL_12;
  }
LABEL_14:
  v14 = sub_22E9A0AAC(a1, v10, v12);
  v16 = *(_DWORD *)(a2 + 64);
  if (v16 == 21 || (v16 - 2) <= 8)
  {
    v17 = *(_DWORD *)(a2 + 8);
    if (v17 == 13 || v17 == 6)
    {
      v59 = v14;
      v60 = v15;
      v18 = *(_DWORD *)(a2 + 12);
      v85 = *(_QWORD *)a2;
      v86 = 5;
      v87 = v18;
      v88 = 1;
      v19 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
      v20 = sub_22F3C7D60(a2);
      v21 = (unsigned __int8 *)sub_22E3B8AAC(v19);
      v22 = *v21;
      v21[v22 + 1] = 1;
      v23 = v22 + 1;
      *v21 = v22 + 1;
      *(_QWORD *)&v21[8 * v22 + 16] = v20;
      v24 = sub_22F3C7D84(v61);
      v21[v23 + 1] = 1;
      *v21 = v22 + 2;
      *(_QWORD *)&v21[8 * v23 + 16] = v24;
      v84 = a6;
      v83 = v19;
      v25 = (_OWORD *)sub_22E3B8AAC(v19);
      v82 = v25;
      v26 = *((_OWORD *)v21 + 5);
      v28 = *((_OWORD *)v21 + 2);
      v27 = *((_OWORD *)v21 + 3);
      v25[4] = *((_OWORD *)v21 + 4);
      v25[5] = v26;
      v25[2] = v28;
      v25[3] = v27;
      v29 = *((_OWORD *)v21 + 1);
      *v25 = *(_OWORD *)v21;
      v25[1] = v29;
      for (i = 96; i != 336; i += 24)
        std::string::operator=((std::string *)((char *)v25 + i), (const std::string *)&v21[i]);
      sub_22E78D560((uint64_t)(v25 + 21), (uint64_t)(v21 + 336));
      sub_22E78D658((uint64_t)(v25 + 28), (uint64_t *)v21 + 56);
      v31 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
      v32 = sub_22E9A0AAC(a1, a4, a5);
      sub_22E9A0988(a1, (uint64_t)&v82, v31, 1, v32, v33, 0, 0);
      if (v82 && v83)
      {
        sub_22E3BB10C(v83, (unint64_t)v82);
        v82 = 0;
      }
      sub_22E3BB10C(v19, (unint64_t)v21);
      v34 = *(_DWORD *)a2;
      v35 = *(_QWORD *)(a1 + 8);
      v36 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + v34 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v35 + 112), *(_DWORD **)(v35 + 72), *(_QWORD *)(*(_QWORD *)(v35 + 88) + 15088), 0, 0);
      sub_22E8FCA40((_QWORD *)v35, v36, 0x1606u, 0, (uint64_t)&v75);
      v37 = (const char *)sub_22F3C7D60((uint64_t)&v85);
      v74 = v37;
      v38 = sub_22E8AECC4((uint64_t)&v75, (uint64_t *)&v74);
      if (v37)
      {
        v39 = strlen(v37);
        v69 = 0;
        v70 = 0;
        v73 = 0;
        v67 = v59;
        v68 = v60;
        if (v39 >= 0x7FFFFFFFFFFFFFF8)
          abort();
        v40 = v39;
        if (v39 >= 0x17)
        {
          v57 = (v39 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v39 | 7) != 0x17)
            v57 = v39 | 7;
          v58 = v57 + 1;
          p_dst = (__int128 *)operator new(v57 + 1);
          *((_QWORD *)&__dst + 1) = v40;
          v90 = v58 | 0x8000000000000000;
          *(_QWORD *)&__dst = p_dst;
        }
        else
        {
          HIBYTE(v90) = v39;
          p_dst = &__dst;
          if (!v39)
            goto LABEL_42;
        }
        memmove(p_dst, v37, v40);
      }
      else
      {
        v40 = 0;
        v70 = 0;
        v69 = 0;
        v73 = 0;
        v67 = v59;
        v68 = v60;
        p_dst = &__dst;
        HIBYTE(v90) = 0;
      }
LABEL_42:
      *((_BYTE *)p_dst + v40) = 0;
      v71 = __dst;
      v72 = v90;
      sub_22E890748(v38, &v67);
      if (SHIBYTE(v72) < 0)
        operator delete((void *)v71);
      sub_22E903BEC((unsigned int *)&v75);
      return;
    }
  }
  v76 = 0;
  v75 = 0;
  v77 = 0;
  v78 = 0;
  v80 = 0uLL;
  __p = 0;
  v81 = 0;
  if (a6 == 6590)
  {
    *(_QWORD *)((char *)&v80 + 7) = 0;
    *(_QWORD *)&v80 = 0;
    v75 = v14;
    v76 = v15;
    v77 = 0;
    v78 = 0;
    v81 = 0;
  }
  v42 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v43 = sub_22F3C7D60(a2);
  v44 = (unsigned __int8 *)sub_22E3B8AAC(v42);
  v45 = *v44;
  v44[v45 + 1] = 1;
  v46 = v45 + 1;
  *v44 = v45 + 1;
  *(_QWORD *)&v44[8 * v45 + 16] = v43;
  v47 = sub_22F3C7D84(v61);
  v44[v46 + 1] = 1;
  *v44 = v45 + 2;
  *(_QWORD *)&v44[8 * v46 + 16] = v47;
  v66 = a6;
  v65 = v42;
  v48 = (_OWORD *)sub_22E3B8AAC(v42);
  v64 = v48;
  v49 = *((_OWORD *)v44 + 5);
  v51 = *((_OWORD *)v44 + 2);
  v50 = *((_OWORD *)v44 + 3);
  v48[4] = *((_OWORD *)v44 + 4);
  v48[5] = v49;
  v48[2] = v51;
  v48[3] = v50;
  v52 = *((_OWORD *)v44 + 1);
  *v48 = *(_OWORD *)v44;
  v48[1] = v52;
  for (j = 96; j != 336; j += 24)
    std::string::operator=((std::string *)((char *)v48 + j), (const std::string *)&v44[j]);
  sub_22E78D560((uint64_t)(v48 + 21), (uint64_t)(v44 + 336));
  sub_22E78D658((uint64_t)(v48 + 28), (uint64_t *)v44 + 56);
  v54 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v55 = sub_22E9A0AAC(a1, a4, a5);
  sub_22E9A0988(a1, (uint64_t)&v64, v54, 1, v55, v56, (uint64_t)&v75, 1);
  if (v64 && v65)
  {
    sub_22E3BB10C(v65, (unint64_t)v64);
    v64 = 0;
  }
  sub_22E3BB10C(v42, (unint64_t)v44);
  if (SHIBYTE(v80) < 0)
    operator delete(__p);
}

unsigned int *sub_22E9A2198(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v8;
  int v9;
  int v10;
  unint64_t v12;
  char v13;
  char v14;
  int v15;
  int v16;
  char v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t i;
  int v32;
  unint64_t v33;
  int v34;
  _OWORD *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t j;
  int v42;
  unint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  const char *v48;
  uint64_t v49;
  size_t v50;
  size_t v51;
  __int128 *p_dst;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  unint64_t v56;
  int v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  __int128 __p;
  unint64_t v63;
  char v64;
  const char *v65;
  unsigned int v66[24];
  _OWORD *v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  int v72;
  char v73;
  __int128 __dst;
  unint64_t v75;

  v8 = *(_QWORD *)a2;
  v9 = *(_DWORD *)(a2 + 8);
  v10 = 1;
  if (v9 <= 4)
  {
    if (v9)
    {
      if (v9 == 1)
LABEL_12:
        v10 = 2;
    }
    else
    {
      v10 = 0;
    }
  }
  else
  {
    if (v9 == 12 || v9 == 10)
    {
      v10 = 3;
      goto LABEL_14;
    }
    if (v9 == 5)
      goto LABEL_12;
  }
LABEL_14:
  v12 = sub_22E9A0AAC(a1, v8, v10);
  v14 = v13;
  v15 = *(_DWORD *)(a2 + 64);
  if ((v15 == 21 || (v15 - 2) <= 8) && ((v16 = *(_DWORD *)(a2 + 8), v16 == 13) || v16 == 6))
  {
    v17 = 0;
    v18 = *(_DWORD *)(a2 + 12);
    v70 = *(_QWORD *)a2;
    v71 = 5;
    v72 = v18;
    v19 = 1;
  }
  else
  {
    v19 = 0;
    LOBYTE(v70) = 0;
    v17 = 1;
  }
  v73 = v19;
  v20 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v21 = sub_22F3C7D60(a2);
  v22 = (unsigned __int8 *)sub_22E3B8AAC(v20);
  v23 = v22 + 1;
  v24 = *v22;
  v23[v24] = 1;
  *v22 = v24 + 2;
  *(_QWORD *)&v22[8 * v24 + 16] = v21;
  v25 = (v24 + 1);
  v23[v25] = 2;
  *(_QWORD *)&v22[8 * v25 + 16] = 0;
  if ((v17 & 1) != 0)
  {
    v57 = 6585;
    v56 = v20;
    v26 = (_OWORD *)sub_22E3B8AAC(v20);
    v55 = v26;
    v27 = *((_OWORD *)v22 + 5);
    v29 = *((_OWORD *)v22 + 2);
    v28 = *((_OWORD *)v22 + 3);
    v26[4] = *((_OWORD *)v22 + 4);
    v26[5] = v27;
    v26[2] = v29;
    v26[3] = v28;
    v30 = *((_OWORD *)v22 + 1);
    *v26 = *(_OWORD *)v22;
    v26[1] = v30;
    for (i = 96; i != 336; i += 24)
      std::string::operator=((std::string *)((char *)v26 + i), (const std::string *)&v22[i]);
    sub_22E78D560((uint64_t)(v26 + 21), (uint64_t)(v22 + 336));
    sub_22E78D658((uint64_t)(v26 + 28), (uint64_t *)v22 + 56);
    v32 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
    v33 = sub_22E9A0AAC(a1, a3, a4);
    sub_22E9A0988(a1, (uint64_t)&v55, v32, 1, v33, v34, 0, 0);
    if (v55)
    {
      if (v56)
      {
        sub_22E3BB10C(v56, (unint64_t)v55);
        v55 = 0;
      }
    }
    return (unsigned int *)sub_22E3BB10C(v20, (unint64_t)v22);
  }
  v69 = 6585;
  v68 = v20;
  v36 = (_OWORD *)sub_22E3B8AAC(v20);
  v67 = v36;
  v37 = *((_OWORD *)v22 + 5);
  v39 = *((_OWORD *)v22 + 2);
  v38 = *((_OWORD *)v22 + 3);
  v36[4] = *((_OWORD *)v22 + 4);
  v36[5] = v37;
  v36[2] = v39;
  v36[3] = v38;
  v40 = *((_OWORD *)v22 + 1);
  *v36 = *(_OWORD *)v22;
  v36[1] = v40;
  for (j = 96; j != 336; j += 24)
    std::string::operator=((std::string *)((char *)v36 + j), (const std::string *)&v22[j]);
  sub_22E78D560((uint64_t)(v36 + 21), (uint64_t)(v22 + 336));
  sub_22E78D658((uint64_t)(v36 + 28), (uint64_t *)v22 + 56);
  v42 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)a2 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v43 = sub_22E9A0AAC(a1, a3, a4);
  sub_22E9A0988(a1, (uint64_t)&v67, v42, 1, v43, v44, 0, 0);
  if (v67 && v68)
  {
    sub_22E3BB10C(v68, (unint64_t)v67);
    v67 = 0;
  }
  sub_22E3BB10C(v20, (unint64_t)v22);
  v45 = *(_DWORD *)a2;
  v46 = *(_QWORD *)(a1 + 8);
  v47 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + v45 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v46 + 112), *(_DWORD **)(v46 + 72), *(_QWORD *)(*(_QWORD *)(v46 + 88) + 15088), 0, 0);
  sub_22E8FCA40((_QWORD *)v46, v47, 0x1606u, 0, (uint64_t)v66);
  v48 = (const char *)sub_22F3C7D60((uint64_t)&v70);
  v65 = v48;
  v49 = sub_22E8AECC4((uint64_t)v66, (uint64_t *)&v65);
  if (v48)
  {
    v50 = strlen(v48);
    v60 = 0;
    v61 = 0;
    v64 = 0;
    v58 = v12;
    v59 = v14;
    if (v50 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v51 = v50;
    if (v50 >= 0x17)
    {
      v53 = (v50 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v50 | 7) != 0x17)
        v53 = v50 | 7;
      v54 = v53 + 1;
      p_dst = (__int128 *)operator new(v53 + 1);
      *((_QWORD *)&__dst + 1) = v51;
      v75 = v54 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v75) = v50;
      p_dst = &__dst;
      if (!v50)
        goto LABEL_42;
    }
    memmove(p_dst, v48, v51);
  }
  else
  {
    v51 = 0;
    v61 = 0;
    v60 = 0;
    v64 = 0;
    v58 = v12;
    v59 = v14;
    p_dst = &__dst;
    HIBYTE(v75) = 0;
  }
LABEL_42:
  *((_BYTE *)p_dst + v51) = 0;
  __p = __dst;
  v63 = v75;
  sub_22E890748(v49, &v58);
  if (SHIBYTE(v63) < 0)
    operator delete((void *)__p);
  return sub_22E903BEC(v66);
}

unsigned int *sub_22E9A265C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v8;
  int v9;
  char v10;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t i;
  int v25;
  unint64_t v26;
  int v27;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t j;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  unint64_t v41;
  char v42;
  char v43;
  int v44;
  uint64_t v45;
  int v46;
  const char *v47;
  uint64_t v48;
  size_t v49;
  size_t v50;
  __int128 *p_dst;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  unint64_t v55;
  int v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char v60;
  __int128 __p;
  unint64_t v62;
  char v63;
  const char *v64;
  unsigned int v65[24];
  _OWORD *v66;
  unint64_t v67;
  int v68;
  __int128 v69;
  uint64_t v70;
  int v71;
  int v72;
  char v73;
  __int128 __dst;
  unint64_t v75;

  v8 = *(_DWORD *)(a2 + 24);
  switch(v8)
  {
    case 3:
      v9 = 2;
      goto LABEL_7;
    case 6:
      v9 = 5;
      goto LABEL_7;
    case 8:
      v9 = 7;
LABEL_7:
      v10 = 0;
      v69 = *(_OWORD *)a2;
      v70 = *(_QWORD *)(a2 + 16);
      v11 = *(_DWORD *)(a2 + 28);
      v71 = v9;
      v72 = v11;
      v12 = 1;
      goto LABEL_9;
  }
  v12 = 0;
  LOBYTE(v69) = 0;
  v10 = 1;
LABEL_9:
  v73 = v12;
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
  v14 = sub_22F3C7D84(a2);
  v15 = (unsigned __int8 *)sub_22E3B8AAC(v13);
  v16 = v15 + 1;
  v17 = *v15;
  v16[v17] = 1;
  *v15 = v17 + 2;
  *(_QWORD *)&v15[8 * v17 + 16] = v14;
  v18 = (v17 + 1);
  v16[v18] = 2;
  *(_QWORD *)&v15[8 * v18 + 16] = 1;
  if ((v10 & 1) != 0)
  {
    v56 = 6585;
    v55 = v13;
    v19 = (_OWORD *)sub_22E3B8AAC(v13);
    v54 = v19;
    v20 = *((_OWORD *)v15 + 5);
    v22 = *((_OWORD *)v15 + 2);
    v21 = *((_OWORD *)v15 + 3);
    v19[4] = *((_OWORD *)v15 + 4);
    v19[5] = v20;
    v19[2] = v22;
    v19[3] = v21;
    v23 = *((_OWORD *)v15 + 1);
    *v19 = *(_OWORD *)v15;
    v19[1] = v23;
    for (i = 96; i != 336; i += 24)
      std::string::operator=((std::string *)((char *)v19 + i), (const std::string *)&v15[i]);
    sub_22E78D560((uint64_t)(v19 + 21), (uint64_t)(v15 + 336));
    sub_22E78D658((uint64_t)(v19 + 28), (uint64_t *)v15 + 56);
    v25 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)(a2 + 8) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
    v26 = sub_22E9A0AAC(a1, a3, a4);
    sub_22E9A0988(a1, (uint64_t)&v54, v25, 1, v26, v27, 0, 0);
    if (v54)
    {
      if (v55)
      {
        sub_22E3BB10C(v55, (unint64_t)v54);
        v54 = 0;
      }
    }
    return (unsigned int *)sub_22E3BB10C(v13, (unint64_t)v15);
  }
  v68 = 6585;
  v67 = v13;
  v29 = (_OWORD *)sub_22E3B8AAC(v13);
  v66 = v29;
  v30 = *((_OWORD *)v15 + 5);
  v32 = *((_OWORD *)v15 + 2);
  v31 = *((_OWORD *)v15 + 3);
  v29[4] = *((_OWORD *)v15 + 4);
  v29[5] = v30;
  v29[2] = v32;
  v29[3] = v31;
  v33 = *((_OWORD *)v15 + 1);
  *v29 = *(_OWORD *)v15;
  v29[1] = v33;
  for (j = 96; j != 336; j += 24)
    std::string::operator=((std::string *)((char *)v29 + j), (const std::string *)&v15[j]);
  sub_22E78D560((uint64_t)(v29 + 21), (uint64_t)(v15 + 336));
  sub_22E78D658((uint64_t)(v29 + 28), (uint64_t *)v15 + 56);
  v35 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)(a2 + 8) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v36 = sub_22E9A0AAC(a1, a3, a4);
  sub_22E9A0988(a1, (uint64_t)&v66, v35, 1, v36, v37, 0, 0);
  if (v66 && v67)
  {
    sub_22E3BB10C(v67, (unint64_t)v66);
    v66 = 0;
  }
  sub_22E3BB10C(v13, (unint64_t)v15);
  v38 = *(_QWORD *)(a2 + 8);
  v39 = *(_QWORD *)(a2 + 16);
  if (v39)
    v40 = v39 - v38;
  else
    v40 = 1;
  v41 = sub_22E9A0AAC(a1, v38, v40);
  v43 = v42;
  v44 = *(_DWORD *)(a2 + 8);
  v45 = *(_QWORD *)(a1 + 8);
  v46 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + v44 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v45 + 112), *(_DWORD **)(v45 + 72), *(_QWORD *)(*(_QWORD *)(v45 + 88) + 15088), 0, 0);
  sub_22E8FCA40((_QWORD *)v45, v46, 0x1606u, 0, (uint64_t)v65);
  v47 = (const char *)sub_22F3C7D84((uint64_t)&v69);
  v64 = v47;
  v48 = sub_22E8AECC4((uint64_t)v65, (uint64_t *)&v64);
  if (v47)
  {
    v49 = strlen(v47);
    v59 = 0;
    v60 = 0;
    v63 = 0;
    v57 = v41;
    v58 = v43;
    if (v49 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    v50 = v49;
    if (v49 >= 0x17)
    {
      v52 = (v49 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v49 | 7) != 0x17)
        v52 = v49 | 7;
      v53 = v52 + 1;
      p_dst = (__int128 *)operator new(v52 + 1);
      *((_QWORD *)&__dst + 1) = v50;
      v75 = v53 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v75) = v49;
      p_dst = &__dst;
      if (!v49)
        goto LABEL_34;
    }
    memmove(p_dst, v47, v50);
  }
  else
  {
    v50 = 0;
    v60 = 0;
    v59 = 0;
    v63 = 0;
    v57 = v41;
    v58 = v43;
    p_dst = &__dst;
    HIBYTE(v75) = 0;
  }
LABEL_34:
  *((_BYTE *)p_dst + v50) = 0;
  __p = __dst;
  v62 = v75;
  sub_22E890748(v48, &v57);
  if (SHIBYTE(v62) < 0)
    operator delete((void *)__p);
  return sub_22E903BEC(v65);
}

void sub_22E9A2AEC(uint64_t a1, _DWORD *a2, int a3, int a4, unsigned __int8 *a5)
{
  unint64_t i;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned int v13;
  unsigned int v14;
  BOOL v15;
  _BOOL4 v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  int v20;
  std::string::size_type v21;
  _OWORD *v22;
  uint64_t v23;
  std::string::size_type v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  int v29;
  void *v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  int v47;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  BOOL v61;
  _QWORD *v62;
  unsigned int v63;
  uint64_t v64;
  BOOL v65;
  unsigned __int8 *v66;
  unint64_t v67;
  char *v68;
  size_t v69;
  int v70;
  BOOL v71;
  int v72;
  BOOL v73;
  unint64_t v74;
  int v75;
  int v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  unsigned __int8 v84;
  unint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  std::string *v91;
  size_t v92;
  void *v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  _OWORD *v98;
  uint64_t v99;
  char *v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  int v105;
  unint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  int v110;
  _QWORD *v111;
  std::string *v112;
  size_t v113;
  unint64_t v114;
  unsigned __int8 *v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  _OWORD *v121;
  uint64_t v122;
  char *v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  int v128;
  _QWORD *v129;
  std::string *p_p;
  size_t v131;
  unint64_t v132;
  unsigned __int8 *v133;
  _QWORD *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  _OWORD *v142;
  uint64_t v143;
  char *v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE *v152;
  _BYTE *v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  std::string *v159;
  size_t v160;
  void *v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  _OWORD *v166;
  uint64_t v167;
  char *v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  BOOL v178;
  unint64_t *v179;
  unint64_t v180;
  void *v181;
  int v182;
  int v183;
  char v184;
  int v185;
  _QWORD *v186;
  std::string *v187;
  size_t v188;
  unsigned __int8 *v189;
  unsigned __int8 *v190;
  uint64_t v191;
  unsigned __int8 *v192;
  uint64_t v193;
  uint64_t v194;
  _OWORD *v195;
  uint64_t v196;
  unsigned __int8 *v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  int v202;
  size_t v203;
  const void *v204;
  int v205;
  __int128 *v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  int v210;
  _QWORD *v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  unint64_t v219;
  uint64_t v220;
  uint64_t v221;
  const void *v222;
  std::string::size_type v223;
  std::string *v224;
  uint64_t v225;
  uint64_t v226;
  const void *v227;
  std::string *v228;
  unint64_t v229;
  char *v230;
  __int128 v231;
  uint64_t v232;
  unsigned __int8 *v233;
  const void *v234;
  std::string::size_type v235;
  std::string *v236;
  unsigned __int8 *v237;
  int v238;
  unsigned int v239;
  uint64_t v240;
  unsigned int v241;
  unint64_t v242;
  char *v243;
  __int128 v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  const void *v249;
  std::string *v250;
  unint64_t v251;
  unint64_t v252;
  char *v253;
  __int128 v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  _DWORD *v259;
  unsigned int v260;
  int v261;
  uint64_t v262;
  uint64_t v263;
  unsigned __int8 *v264;
  unsigned __int8 *v265;
  uint64_t v266;
  unsigned __int8 *v267;
  uint64_t v268;
  uint64_t v269;
  _OWORD *v270;
  uint64_t v271;
  unsigned __int8 *v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  int v277;
  unsigned __int8 *v278;
  uint64_t v279;
  unsigned int v280;
  _QWORD *v281;
  int v282;
  uint64_t v283;
  unsigned int v284;
  unint64_t v285;
  char *v286;
  __int128 v287;
  uint64_t v288;
  uint64_t v289;
  unsigned int v290;
  unsigned int v291;
  unint64_t v292;
  char *v293;
  __int128 v294;
  uint64_t v295;
  _QWORD *v296;
  std::string *v297;
  size_t v298;
  unint64_t v299;
  unsigned __int8 *v300;
  unsigned __int8 *v301;
  uint64_t v302;
  unsigned __int8 *v303;
  uint64_t v304;
  uint64_t v305;
  _OWORD *v306;
  uint64_t v307;
  unsigned __int8 *v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  int v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  int v318;
  uint64_t v319;
  _OWORD *v320;
  unint64_t v321;
  int v322;
  _OWORD *v323;
  unint64_t v324;
  int v325;
  _OWORD *v326;
  unint64_t v327;
  int v328;
  _OWORD *v329;
  unint64_t v330;
  int v331;
  _OWORD *v332;
  unint64_t v333;
  int v334;
  _OWORD *v335;
  unint64_t v336;
  int v337;
  unsigned __int8 *v338;
  _BYTE v339[12];
  char v340;
  std::string v341;
  char v342;
  __int128 v343;
  unint64_t v344;
  _BYTE *v345;
  _BYTE *v346;
  uint64_t v347;
  _OWORD *v348;
  unint64_t v349;
  int v350;
  std::string __p;
  void *v352;
  uint64_t v353;
  uint64_t v354;
  char v355;
  uint64_t v356;
  unint64_t v357;
  _OWORD *v358;
  std::string::size_type size;
  int v360;
  unint64_t v361;
  _DWORD v362[8];
  std::string v363;
  void *__src;
  __int128 __len;
  __int128 v366;
  unint64_t v367;
  char v368;
  std::string v369;
  _BYTE v370[16];
  void *v371;
  __int128 v372;
  _BYTE v373[16];
  unint64_t __dst[51];

  __dst[49] = *MEMORY[0x24BDAC8D0];
  sub_22F3F045C(a2, *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88), *(_DWORD *)(a1 + 32) == 2, (uint64_t)v362);
  if (v362[0] == 1)
    return;
  for (i = *((_QWORD *)a5 + 1); ; i = *(_QWORD *)(*(_QWORD *)(v11 + 24) + 8))
  {
    v361 = i;
    v11 = *(_QWORD *)(i & 0xFFFFFFFFFFFFFFF0);
    if (!v11 || *(_BYTE *)(v11 + 16) != 48)
      break;
  }
  v12 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  v13 = v12 - 25;
  v14 = (v12 & 0xFE) - 2;
  v15 = v13 >= 2 && v14 > 3;
  if (!v15)
    v361 = sub_22F36A2BC(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), i);
  if (a2[16] == 1)
  {
    v16 = sub_22EFF5C90(a5, 1);
    v17 = *(_QWORD *)(a1 + 8);
    if (v16 && (*(_BYTE *)(*(_QWORD *)(v17 + 72) + 236) & 0x80) == 0)
    {
      v18 = sub_22E9A0AAC(a1, a3, a4);
      v20 = v19;
      __src = &v366;
      __len = xmmword_22F4559B0;
      sub_22F242C48((uint64_t)__dst, (uint64_t)&__src);
      sub_22F3F0508((uint64_t)a2, (llvm::raw_ostream *)__dst);
      v21 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
      __p.__r_.__value_.__r.__words[0] = 0;
      __p.__r_.__value_.__l.__size_ = v21;
      LODWORD(__p.__r_.__value_.__r.__words[2]) = 6577;
      sub_22E3B89A8((unsigned __int8 **)&__p, __src, __len);
      v360 = __p.__r_.__value_.__r.__words[2];
      v358 = 0;
      size = __p.__r_.__value_.__l.__size_;
      if (__p.__r_.__value_.__r.__words[0])
      {
        v22 = (_OWORD *)sub_22E3B8AAC(__p.__r_.__value_.__l.__size_);
        v23 = 0;
        v358 = v22;
        v24 = __p.__r_.__value_.__r.__words[0];
        v25 = *(_OWORD *)(__p.__r_.__value_.__r.__words[0] + 16);
        *v22 = *(_OWORD *)__p.__r_.__value_.__l.__data_;
        v22[1] = v25;
        v26 = *(_OWORD *)(v24 + 80);
        v28 = *(_OWORD *)(v24 + 32);
        v27 = *(_OWORD *)(v24 + 48);
        v22[4] = *(_OWORD *)(v24 + 64);
        v22[5] = v26;
        v22[2] = v28;
        v22[3] = v27;
        do
        {
          std::string::operator=((std::string *)((char *)v22 + v23 + 96), (const std::string *)(v24 + 96 + v23));
          v23 += 24;
        }
        while (v23 != 240);
        sub_22E78D560((uint64_t)(v22 + 21), v24 + 336);
        sub_22E78D658((uint64_t)(v22 + 28), (uint64_t *)(v24 + 448));
      }
      sub_22EFF605C((uint64_t)a5);
      sub_22E9A0988(a1, (uint64_t)&v358, v29, 0, v18, v20, 0, 0);
      if (v358 && size)
      {
        sub_22E3BB10C(size, (unint64_t)v358);
        v358 = 0;
      }
      if (__p.__r_.__value_.__r.__words[0])
      {
        if (__p.__r_.__value_.__l.__size_)
          sub_22E3BB10C(__p.__r_.__value_.__l.__size_, __p.__r_.__value_.__r.__words[0]);
      }
      llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)__dst);
      v30 = __src;
      if (__src == &v366)
        return;
LABEL_259:
      free(v30);
      return;
    }
  }
  else
  {
    v17 = *(_QWORD *)(a1 + 8);
  }
  v31 = sub_22F063740((uint64_t)v362, *(_QWORD *)(v17 + 88), v361);
  if (v31 == 1)
    return;
  v32 = v31;
  v33 = *a5;
  if (v33 == 154)
  {
    v45 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88);
    if (v361 == *(_QWORD *)(v45 + 16480) && a2[2] != 1)
    {
      v47 = sub_22EF5CDF0(v45, *(_QWORD *)(*(_QWORD *)(v45 + 16408) & 0xFFFFFFFFFFFFFFF0));
      if ((v47 & 0xFFFFFFC0) != 0 || 0xFFFFFFFFFFFFFFFFLL >> -(char)v47 >= *((unsigned int *)a5 + 4))
        v361 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 16408);
    }
    goto LABEL_61;
  }
  if (v33 != 153)
    goto LABEL_61;
  v34 = *(_QWORD *)(a1 + 8);
  v35 = *((_QWORD *)a5 + 1);
  v36 = *(_QWORD *)(*((_QWORD *)a5 + 2) + 8);
  v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFF0);
  if ((*(_DWORD *)a5 & 0x1FC0000) != 0x780000
    || !sub_22F1124D8(*v37)
    || sub_22EF6A4D4(*(uint64_t **)(v34 + 88), v36) != v35)
  {
    v38 = *v37;
    if (*v37 && *(_BYTE *)(v38 + 16) == 56
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v38 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
      && (v38 = sub_22F10CF48(v38)) != 0)
    {
      v36 = *(_QWORD *)(v38 + 32);
    }
    v39 = *(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF0);
    if (v39 && *(_BYTE *)(v39 + 16) == 56
      || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v39 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 56
      && (v39 = sub_22F10CF48(v39)) != 0)
    {
      v35 = *(_QWORD *)(v39 + 32);
    }
    if ((*(_DWORD *)a5 & 0x1FC0000) != 0xA80000 || sub_22EF6A108(*(_QWORD *)(v34 + 88), v36, v35) != -1)
    {
LABEL_61:
      v41 = a5;
      goto LABEL_62;
    }
  }
  v40 = *((_QWORD *)a5 + 1);
  v41 = (unsigned __int8 *)*((_QWORD *)a5 + 2);
  v42 = *((_QWORD *)v41 + 1);
  v361 = v42;
  v43 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88);
  if (v40 != *(_QWORD *)(v43 + 16480) && v40 != *(_QWORD *)(v43 + 16528))
    goto LABEL_62;
  v44 = sub_22F063740((uint64_t)v362, v43, v42);
  if ((v44 & 0xFFFFFFFE) == 2)
    v32 = v44;
  if (v44 != 1)
  {
LABEL_62:
    v49 = 0;
    v50 = v361;
    v51 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v361 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    if (v51 && *(_BYTE *)(v51 + 16) == 44)
    {
      v52 = sub_22F114198(*(_QWORD *)(v51 + 24));
      v50 = sub_22E496830(v52);
      v361 = v50;
      v49 = 1;
    }
    v357 = v50;
    v319 = v49;
    if (*(_DWORD *)(a1 + 32) == 2
      && a2[16] == 23
      && sub_22F1107D8(*(_QWORD *)(v50 & 0xFFFFFFFFFFFFFFF0)))
    {
      v53 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v361 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
      v54 = v53 && *(_DWORD *)(v53 + 16) == 11;
      if (!v54
        || (((*(_DWORD *)(v53 + 16) >> 19) & 0x1FFu) - 167 <= 0xC
          ? (v61 = ((1 << ((*(_DWORD *)(v53 + 16) >> 19) + 89)) & 0x1803) == 0)
          : (v61 = 1),
            v61))
      {
        v55 = *(_QWORD *)(a1 + 8);
        v56 = *(_QWORD *)(v55 + 88);
        v50 = *(_QWORD *)(v56 + 16520);
        v357 = v50;
        if (*v41 == 181)
        {
          sub_22F257F94((uint64_t)(v41 + 16), (llvm::APInt *)__dst);
          v209 = __dst[1];
          if (LODWORD(__dst[1]) > 0x40)
            v210 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)__dst);
          else
            v210 = LODWORD(__dst[1]) + __clz(__dst[0]) - 64;
          v218 = (v209 - v210);
          v50 = v357;
          v219 = sub_22EF5CDF0(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), *(_QWORD *)(v357 & 0xFFFFFFFFFFFFFFF0));
          if (LODWORD(__dst[1]) >= 0x41 && __dst[0])
            MEMORY[0x2348A0E84](__dst[0], 0x1000C8000313F17);
          if (v219 >= v218)
            return;
          v55 = *(_QWORD *)(a1 + 8);
          v56 = *(_QWORD *)(v55 + 88);
        }
        v57 = sub_22E3CB704(*(llvm::StringMapImpl **)(v56 + 15192), "unichar", 7uLL);
        sub_22F0D5A50((uint64_t)v41);
        __dst[0] = 0;
        __dst[1] = (unint64_t)&__dst[3];
        __dst[2] = 0x800000000;
        memset(&__dst[11], 0, 24);
        __dst[14] = v55;
        __dst[15] = v57;
        LODWORD(__dst[16]) = v58;
        sub_22EFC6D6C((uint64_t)&__dst[17], v57);
        memset(&__dst[18], 0, 18);
        *(_DWORD *)((char *)&__dst[20] + 2) = 257;
        BYTE6(__dst[20]) = 0;
        sub_22EC56024((uint64_t)__dst);
        if (sub_22EC63520(*(_QWORD *)(a1 + 8), (uint64_t)__dst, *(_QWORD **)(*(_QWORD *)(a1 + 8) + 12888), 0, 0))
        {
          v59 = *(_QWORD *)__dst[1] & 0xFFFFFFFFFFFFFFFCLL;
          v60 = *(_DWORD *)(v59 + 28) & 0x7F;
          if (v60 <= 0x2F && ((1 << v60) & 0xC00000060000) != 0)
          {
            v59 = sub_22EFBAEA4(*(_QWORD *)__dst[1] & 0xFFFFFFFFFFFFFFFCLL);
            v60 = *(_DWORD *)(v59 + 28) & 0x7F;
          }
          if (v60 - 42 >= 0xFFFFFFFD
            && *(_QWORD *)((*(_QWORD *)(v59 + 80) & 0xFFFFFFFFFFFFFFF8)
                         + ((2 * *(_QWORD *)(v59 + 80)) & 8)) == v50)
          {
            v50 = sub_22EF64680(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), v59, 0);
            v357 = v50;
          }
        }
        if (BYTE3(__dst[20]))
        {
          if (LODWORD(__dst[0]) == 5)
          {
            sub_22EC64D18((_QWORD *)__dst[14], (uint64_t)__dst);
          }
          else if (__dst[12] && (*(_DWORD *)(*(_QWORD *)(__dst[14] + 72) + 52) & 0x400000) != 0)
          {
            sub_22E90B5FC(__dst[14], (uint64_t)__dst);
          }
        }
        if (__dst[11])
        {
          v316 = sub_22EC6CBD0(__dst[11]);
          MEMORY[0x2348A0E9C](v316, 0x10E0C409F09D3C3);
        }
        if ((unint64_t *)__dst[1] != &__dst[3])
          free((void *)__dst[1]);
      }
    }
    v62 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
    v63 = *(_DWORD *)(v62[1886] + 68);
    v15 = v63 > 0x21;
    v64 = (1 << v63) & 0x3F0000888;
    v65 = v15 || v64 == 0;
    v66 = v41;
    if (v65)
    {
      v69 = 0;
      v68 = 0;
    }
    else
    {
      sub_22E9A4B54(__dst, v62, v50, v41);
      v67 = __dst[0];
      v68 = (char *)__dst[1];
      v69 = __dst[2];
      if (__dst[0] >= 0x10)
      {
        if (__dst[2] == 10)
        {
          v70 = *(unsigned __int16 *)(__dst[1] + 8);
          v71 = *(_QWORD *)__dst[1] == 0x6765746E4955534ELL;
          v72 = 29285;
        }
        else
        {
          if (__dst[2] != 9)
          {
LABEL_110:
            v357 = v67;
            v318 = 1;
            goto LABEL_113;
          }
          v70 = *(unsigned __int8 *)(__dst[1] + 8);
          v71 = *(_QWORD *)__dst[1] == 0x656765746E49534ELL;
          v72 = 114;
        }
        v73 = v71 && v70 == v72;
        if (v73
          && (v362[7] - 1) <= 1
          && sub_22F063740((uint64_t)v362, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), __dst[0]))
        {
          v32 = 2;
        }
        goto LABEL_110;
      }
    }
    v318 = 0;
    v67 = v50;
LABEL_113:
    memcpy(__dst, a2, 0x188uLL);
    if (!sub_22F0C67EC((uint64_t)__dst, v67, *(_WORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88), *(_DWORD *)(a1 + 32) == 2))
    {
      v74 = sub_22E9A0AAC(a1, a3, a4);
      v76 = v75;
      v77 = sub_22EB1BEA4(*(_QWORD *)(a1 + 8), &v361);
      v78 = (uint64_t)v66;
      if (v77 < 2)
      {
        if (v32 > 3)
          v110 = 0;
        else
          v110 = dword_22F4658E0[v32];
        v129 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
        __src = 0;
        *(_QWORD *)&__len = v129 + 266;
        DWORD2(__len) = v110;
        sub_22F063CE0((uint64_t)v362, v129, &__p);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          p_p = &__p;
        else
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v131 = *((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x7F;
        else
          v131 = __p.__r_.__value_.__l.__size_;
        sub_22E3B89A8((unsigned __int8 **)&__src, p_p, v131);
        v132 = v361;
        v133 = (unsigned __int8 *)__src;
        if (!__src)
        {
          v133 = (unsigned __int8 *)sub_22E3B8AAC(__len);
          __src = v133;
        }
        v133[*v133 + 1] = 9;
        v134 = __src;
        v135 = *(unsigned __int8 *)__src;
        *(_BYTE *)__src = v135 + 1;
        v134[v135 + 2] = v132;
        *((_BYTE *)v134 + (v135 + 1) + 1) = 2;
        v136 = __src;
        v137 = *(unsigned __int8 *)__src;
        *(_BYTE *)__src = v137 + 1;
        v136[v137 + 2] = v319;
        v138 = v76;
        sub_22E4D6448((uint64_t)(v136 + 42), v74, v76);
        sub_22F0D4E74((uint64_t)v66);
        v140 = v139;
        v141 = __src;
        if (!__src)
        {
          v141 = (void *)sub_22E3B8AAC(__len);
          __src = v141;
        }
        sub_22E4D6448((uint64_t)v141 + 336, v140, 1);
        v331 = DWORD2(__len);
        v329 = 0;
        v330 = __len;
        if (__src)
        {
          v142 = (_OWORD *)sub_22E3B8AAC(__len);
          v143 = 0;
          v329 = v142;
          v144 = (char *)__src;
          v145 = *((_OWORD *)__src + 1);
          *v142 = *(_OWORD *)__src;
          v142[1] = v145;
          v146 = *((_OWORD *)v144 + 5);
          v148 = *((_OWORD *)v144 + 2);
          v147 = *((_OWORD *)v144 + 3);
          v142[4] = *((_OWORD *)v144 + 4);
          v142[5] = v146;
          v142[2] = v148;
          v142[3] = v147;
          do
          {
            std::string::operator=((std::string *)((char *)v142 + v143 + 96), (const std::string *)&v144[v143 + 96]);
            v143 += 24;
          }
          while (v143 != 240);
          sub_22E78D560((uint64_t)(v142 + 21), (uint64_t)(v144 + 336));
          sub_22E78D658((uint64_t)(v142 + 28), (uint64_t *)v144 + 56);
        }
        sub_22F0D5A50(v78);
        sub_22E9A0988(a1, (uint64_t)&v329, v149, 0, v74, v138, 0, 0);
        if (v329 && v330)
        {
          sub_22E3BB10C(v330, (unint64_t)v329);
          v329 = 0;
        }
      }
      else
      {
        if (v77 - 2 >= 2)
        {
          if (v77 != 4)
          {
LABEL_333:
            sub_22E54C570(*(unint64_t **)(a1 + 104), a2[25] + *(_DWORD *)(a1 + 36));
            return;
          }
          if (*(_DWORD *)(a1 + 100) != 4)
          {
            if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v361 & 0xFFFFFFFFFFFFFFF0)
                                                                          + 8) & 0xFFFFFFFFFFFFFFF0)
                                                  + 16)
               - 33 > 1)
            {
              v211 = *(_QWORD **)(a1 + 8);
              sub_22F0D5A50((uint64_t)v66);
              sub_22E8FCA40(v211, v212, 0xBBDu, 0, (uint64_t)&__src);
              LOBYTE(v338) = *v66 == 180;
              v213 = sub_22E894E38((uint64_t)&__src, (unsigned __int8 *)&v338);
              v214 = sub_22E8901B8(v213, (uint64_t *)&v361);
              v215 = sub_22E8900C4(v214, (int *)(a1 + 100));
              sub_22F063CE0((uint64_t)v362, *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88), &__p);
              v216 = sub_22F2F3734(v215, (void **)&__p.__r_.__value_.__l.__data_);
              sub_22F0D4E74((uint64_t)v66);
              *(_QWORD *)&v343 = v217;
              sub_22E8906A0(v216, (uint64_t *)&v343);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                operator delete(__p.__r_.__value_.__l.__data_);
              sub_22E903BEC((unsigned int *)&__src);
              goto LABEL_333;
            }
            v150 = *(_QWORD *)(a1 + 8);
            *(_QWORD *)&__len = *(_QWORD *)(v150 + 88) + 2128;
            DWORD2(__len) = 3003;
            v151 = (**(_QWORD **)(v150 + 72) >> 9) & 1;
            v152 = (_BYTE *)sub_22E3B8AAC(__len);
            __src = v152;
            v153 = v152 + 1;
            v154 = *v152;
            v153[v154] = 3;
            *v152 = v154 + 3;
            v152 += 16;
            *(_QWORD *)&v152[8 * v154] = v151;
            v155 = v361;
            v156 = (v154 + 1);
            v153[v156] = 9;
            *(_QWORD *)&v152[8 * v156] = v155;
            v157 = *(int *)(a1 + 100);
            v158 = (v154 + 2);
            v153[v158] = 2;
            *(_QWORD *)&v152[8 * v158] = v157;
            sub_22F063CE0((uint64_t)v362, *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88), &__p);
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v159 = &__p;
            else
              v159 = (std::string *)__p.__r_.__value_.__r.__words[0];
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
              v160 = *((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x7F;
            else
              v160 = __p.__r_.__value_.__l.__size_;
            sub_22E3B89A8((unsigned __int8 **)&__src, v159, v160);
            v161 = __src;
            if (!__src)
            {
              v161 = (void *)sub_22E3B8AAC(__len);
              __src = v161;
            }
            v162 = v76;
            sub_22E4D6448((uint64_t)v161 + 336, v74, v76);
            sub_22F0D4E74((uint64_t)v66);
            v164 = v163;
            v165 = __src;
            if (!__src)
            {
              v165 = (void *)sub_22E3B8AAC(__len);
              __src = v165;
            }
            sub_22E4D6448((uint64_t)v165 + 336, v164, 1);
            v325 = DWORD2(__len);
            v323 = 0;
            v324 = __len;
            if (__src)
            {
              v166 = (_OWORD *)sub_22E3B8AAC(__len);
              v167 = 0;
              v323 = v166;
              v168 = (char *)__src;
              v169 = *((_OWORD *)__src + 1);
              *v166 = *(_OWORD *)__src;
              v166[1] = v169;
              v170 = *((_OWORD *)v168 + 5);
              v172 = *((_OWORD *)v168 + 2);
              v171 = *((_OWORD *)v168 + 3);
              v166[4] = *((_OWORD *)v168 + 4);
              v166[5] = v170;
              v166[2] = v172;
              v166[3] = v171;
              do
              {
                std::string::operator=((std::string *)((char *)v166 + v167 + 96), (const std::string *)&v168[v167 + 96]);
                v167 += 24;
              }
              while (v167 != 240);
              sub_22E78D560((uint64_t)(v166 + 21), (uint64_t)(v168 + 336));
              sub_22E78D658((uint64_t)(v166 + 28), (uint64_t *)v168 + 56);
            }
            sub_22F0D5A50(v78);
            sub_22E9A0988(a1, (uint64_t)&v323, v173, 0, v74, v162, 0, 0);
            if (v323 && v324)
            {
              sub_22E3BB10C(v324, (unint64_t)v323);
              v323 = 0;
            }
            goto LABEL_184;
          }
        }
        else if (*(_DWORD *)(a1 + 100) != 4)
        {
          v79 = *(_QWORD *)(a1 + 8);
          v80 = *(_QWORD *)(v79 + 88) + 2128;
          __src = 0;
          *(_QWORD *)&__len = v80;
          DWORD2(__len) = 6778;
          v81 = (**(_QWORD **)(v79 + 72) >> 9) & 1;
          __src = (void *)sub_22E3B8AAC(v80);
          *((_BYTE *)__src + *(unsigned __int8 *)__src + 1) = 3;
          v82 = __src;
          v83 = *(unsigned __int8 *)__src;
          v84 = v83 + 1;
          *(_BYTE *)__src = v83 + 1;
          v82[v83 + 2] = v81;
          v85 = v361;
          *((_BYTE *)v82 + v84 + 1) = 9;
          v86 = __src;
          v87 = *(unsigned __int8 *)__src;
          *(_BYTE *)__src = v87 + 1;
          v86[v87 + 2] = v85;
          v88 = *(int *)(a1 + 100);
          *((_BYTE *)v86 + (v87 + 1) + 1) = 2;
          v89 = __src;
          v90 = *(unsigned __int8 *)__src;
          *(_BYTE *)__src = v90 + 1;
          v89[v90 + 2] = v88;
          sub_22F063CE0((uint64_t)v362, *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88), &__p);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v91 = &__p;
          else
            v91 = (std::string *)__p.__r_.__value_.__r.__words[0];
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
            v92 = *((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x7F;
          else
            v92 = __p.__r_.__value_.__l.__size_;
          sub_22E3B89A8((unsigned __int8 **)&__src, v91, v92);
          v93 = __src;
          if (!__src)
          {
            v93 = (void *)sub_22E3B8AAC(__len);
            __src = v93;
          }
          v94 = v76;
          sub_22E4D6448((uint64_t)v93 + 336, v74, v76);
          sub_22F0D4E74((uint64_t)v66);
          v96 = v95;
          v97 = __src;
          if (!__src)
          {
            v97 = (void *)sub_22E3B8AAC(__len);
            __src = v97;
          }
          sub_22E4D6448((uint64_t)v97 + 336, v96, 1);
          v328 = DWORD2(__len);
          v326 = 0;
          v327 = __len;
          if (__src)
          {
            v98 = (_OWORD *)sub_22E3B8AAC(__len);
            v99 = 0;
            v326 = v98;
            v100 = (char *)__src;
            v101 = *((_OWORD *)__src + 1);
            *v98 = *(_OWORD *)__src;
            v98[1] = v101;
            v102 = *((_OWORD *)v100 + 5);
            v104 = *((_OWORD *)v100 + 2);
            v103 = *((_OWORD *)v100 + 3);
            v98[4] = *((_OWORD *)v100 + 4);
            v98[5] = v102;
            v98[2] = v104;
            v98[3] = v103;
            do
            {
              std::string::operator=((std::string *)((char *)v98 + v99 + 96), (const std::string *)&v100[v99 + 96]);
              v99 += 24;
            }
            while (v99 != 240);
            sub_22E78D560((uint64_t)(v98 + 21), (uint64_t)(v100 + 336));
            sub_22E78D658((uint64_t)(v98 + 28), (uint64_t *)v100 + 56);
          }
          sub_22F0D5A50(v78);
          sub_22E9A0988(a1, (uint64_t)&v326, v105, 0, v74, v94, 0, 0);
          if (v326 && v327)
          {
            sub_22E3BB10C(v327, (unint64_t)v326);
            v326 = 0;
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
            operator delete(__p.__r_.__value_.__l.__data_);
          if (__src && (_QWORD)__len)
            sub_22E3BB10C(__len, (unint64_t)__src);
          sub_22E9867C8("c_str", 5uLL, *(_QWORD **)(a1 + 8), *(_QWORD *)(v78 + 8), (uint64_t)&v343);
          if (*((_QWORD *)&v343 + 1) == (_QWORD)v343)
            v106 = (unint64_t *)((char *)&v344 + 4);
          else
            v106 = &v344;
          v107 = *(unsigned int *)v106;
          if ((_DWORD)v107)
          {
            v108 = 8 * v107;
            v109 = (uint64_t *)*((_QWORD *)&v343 + 1);
            while ((unint64_t)*v109 >= 0xFFFFFFFFFFFFFFFELL)
            {
              ++v109;
              v108 -= 8;
              if (!v108)
                goto LABEL_331;
            }
          }
          else
          {
            v109 = (uint64_t *)*((_QWORD *)&v343 + 1);
          }
          v174 = *((_QWORD *)&v343 + 1) + 8 * v107;
          if (v109 != (uint64_t *)v174)
          {
            v175 = *v109;
            if (sub_22EFC0EB8(v175))
              goto LABEL_217;
LABEL_210:
            v176 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88);
            v177 = *(_QWORD *)(*(_QWORD *)(v175 + 48) & 0xFFFFFFFFFFFFFFF0);
            if (v177)
              v178 = *(unsigned __int8 *)(v177 + 16) - 27 > 0xFFFFFFFD;
            else
              v178 = 0;
            if (!v178)
              v177 = sub_22F10CF48(v177);
            if (sub_22F063740((uint64_t)v362, v176, *(_QWORD *)(v177 + 24)))
            {
              v279 = *(_QWORD *)(a1 + 8);
              sub_22F0D60E4(v78);
              LODWORD(v279) = sub_22F141A3C(v280, 0, *(_QWORD **)(v279 + 112), *(_DWORD **)(v279 + 72));
              v281 = *(_QWORD **)(a1 + 8);
              sub_22F0D5A50(v78);
              sub_22E8FCA40(v281, v282, 0x177Bu, 0, (uint64_t)&__src);
              v283 = sub_22F2F30F4((uint64_t)&__src, (uint64_t)"c_str()");
              __p.__r_.__value_.__s.__data_[20] = 0;
              *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 4) = 0;
              v353 = 0;
              v354 = 0x800000000000000;
              LODWORD(__p.__r_.__value_.__l.__data_) = v279;
              HIDWORD(__p.__r_.__value_.__r.__words[0]) = v279;
              __p.__r_.__value_.__s.__data_[8] = 0;
              v352 = (void *)0x29287274735F632ELL;
              v355 = 0;
              sub_22E890748(v283, &__p);
              if (SHIBYTE(v354) < 0)
                operator delete(v352);
              sub_22E903BEC((unsigned int *)&__src);
            }
            else
            {
LABEL_217:
              v179 = (unint64_t *)(v109 + 1);
              while (v179 != (unint64_t *)v174)
              {
                v180 = *v179++;
                v175 = v180;
                if (v180 <= 0xFFFFFFFFFFFFFFFDLL)
                {
                  v109 = (uint64_t *)(v179 - 1);
                  goto LABEL_210;
                }
              }
            }
          }
LABEL_331:
          if (*((_QWORD *)&v343 + 1) != (_QWORD)v343)
            free(*((void **)&v343 + 1));
          goto LABEL_333;
        }
        v111 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
        __src = 0;
        *(_QWORD *)&__len = v111 + 266;
        DWORD2(__len) = 6578;
        sub_22F063CE0((uint64_t)v362, v111, &__p);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v112 = &__p;
        else
          v112 = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
          v113 = *((_BYTE *)&__p.__r_.__value_.__s + 23) & 0x7F;
        else
          v113 = __p.__r_.__value_.__l.__size_;
        sub_22E3B89A8((unsigned __int8 **)&__src, v112, v113);
        v114 = v361;
        v115 = (unsigned __int8 *)__src;
        if (!__src)
        {
          v115 = (unsigned __int8 *)sub_22E3B8AAC(__len);
          __src = v115;
        }
        v115[*v115 + 1] = 9;
        v116 = __src;
        v117 = *(unsigned __int8 *)__src;
        *(_BYTE *)__src = v117 + 1;
        v116[v117 + 2] = v114;
        *((_BYTE *)v116 + (v117 + 1) + 1) = 2;
        v118 = __src;
        v119 = *(unsigned __int8 *)__src;
        *(_BYTE *)__src = v119 + 1;
        v118[v119 + 2] = 0;
        sub_22F0D4E74((uint64_t)v66);
        sub_22E4D6448((uint64_t)(v118 + 42), v120, 1);
        v322 = DWORD2(__len);
        v320 = 0;
        v321 = __len;
        if (__src)
        {
          v121 = (_OWORD *)sub_22E3B8AAC(__len);
          v122 = 0;
          v320 = v121;
          v123 = (char *)__src;
          v124 = *((_OWORD *)__src + 1);
          *v121 = *(_OWORD *)__src;
          v121[1] = v124;
          v125 = *((_OWORD *)v123 + 5);
          v127 = *((_OWORD *)v123 + 2);
          v126 = *((_OWORD *)v123 + 3);
          v121[4] = *((_OWORD *)v123 + 4);
          v121[5] = v125;
          v121[2] = v127;
          v121[3] = v126;
          do
          {
            std::string::operator=((std::string *)((char *)v121 + v122 + 96), (const std::string *)&v123[v122 + 96]);
            v122 += 24;
          }
          while (v122 != 240);
          sub_22E78D560((uint64_t)(v121 + 21), (uint64_t)(v123 + 336));
          sub_22E78D658((uint64_t)(v121 + 28), (uint64_t *)v123 + 56);
        }
        sub_22F0D5A50(v78);
        sub_22E9A0988(a1, (uint64_t)&v320, v128, 0, v74, v76, 0, 0);
        if (v320 && v321)
        {
          sub_22E3BB10C(v321, (unint64_t)v320);
          v320 = 0;
        }
      }
LABEL_184:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p.__r_.__value_.__l.__data_);
      if (__src && (_QWORD)__len)
        sub_22E3BB10C(__len, (unint64_t)__src);
      goto LABEL_333;
    }
    v371 = v373;
    v372 = xmmword_22F44E350;
    sub_22F242C48((uint64_t)&__p, (uint64_t)&v371);
    sub_22F3F0508((uint64_t)__dst, (llvm::raw_ostream *)&__p);
    v181 = (void *)sub_22E9A0AAC(a1, a3, a4);
    v317 = v182;
    v183 = v318;
    if (v67 == v361)
      v184 = v318;
    else
      v184 = 1;
    if ((v184 & 1) == 0)
    {
      if (v32 > 3)
        v185 = 0;
      else
        v185 = dword_22F4658E0[v32];
      v186 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
      v338 = 0;
      *(_QWORD *)v339 = v186 + 266;
      *(_DWORD *)&v339[8] = v185;
      sub_22F063CE0((uint64_t)v362, v186, &v369);
      if ((v369.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v187 = &v369;
      else
        v187 = (std::string *)v369.__r_.__value_.__r.__words[0];
      if ((v369.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v188 = *((_BYTE *)&v369.__r_.__value_.__s + 23) & 0x7F;
      else
        v188 = v369.__r_.__value_.__l.__size_;
      sub_22E3B89A8(&v338, v187, v188);
      v189 = v338;
      if (!v338)
      {
        v189 = (unsigned __int8 *)sub_22E3B8AAC(*(uint64_t *)v339);
        v338 = v189;
      }
      v189[*v189 + 1] = 9;
      v190 = v338;
      v191 = *v338;
      *v338 = v191 + 1;
      *(_QWORD *)&v190[8 * v191 + 16] = v67;
      v190[(v191 + 1) + 1] = 2;
      v192 = v338;
      v193 = *v338;
      *v338 = v193 + 1;
      *(_QWORD *)&v192[8 * v193 + 16] = v319;
      sub_22F0D4E74((uint64_t)v66);
      sub_22E4D6448((uint64_t)(v192 + 336), v194, 1);
      v350 = *(_DWORD *)&v339[8];
      v348 = 0;
      v349 = *(_QWORD *)v339;
      if (v338)
      {
        v195 = (_OWORD *)sub_22E3B8AAC(*(uint64_t *)v339);
        v196 = 0;
        v348 = v195;
        v197 = v338;
        v198 = *((_OWORD *)v338 + 1);
        *v195 = *(_OWORD *)v338;
        v195[1] = v198;
        v199 = *((_OWORD *)v197 + 5);
        v201 = *((_OWORD *)v197 + 2);
        v200 = *((_OWORD *)v197 + 3);
        v195[4] = *((_OWORD *)v197 + 4);
        v195[5] = v199;
        v195[2] = v201;
        v195[3] = v200;
        do
        {
          std::string::operator=((std::string *)((char *)v195 + v196 + 96), (const std::string *)&v197[v196 + 96]);
          v196 += 24;
        }
        while (v196 != 240);
        sub_22E78D560((uint64_t)(v195 + 21), (uint64_t)(v197 + 336));
        sub_22E78D658((uint64_t)(v195 + 28), (uint64_t *)v197 + 56);
      }
      sub_22F0D5A50((uint64_t)v66);
      v204 = *(const void **)v356;
      v203 = *(_QWORD *)(v356 + 8);
      *(_QWORD *)((char *)&__len + 4) = 0;
      BYTE12(__len) = 0;
      v368 = 0;
      __src = v181;
      LOBYTE(__len) = v317;
      if (v203 <= 0x7FFFFFFFFFFFFFF7)
      {
        v205 = v202;
        if (v203 >= 0x17)
        {
          v207 = (v203 & 0xFFFFFFFFFFFFFFF8) + 8;
          if ((v203 | 7) != 0x17)
            v207 = v203 | 7;
          v208 = v207 + 1;
          v206 = (__int128 *)operator new(v207 + 1);
          *((_QWORD *)&v343 + 1) = v203;
          v344 = v208 | 0x8000000000000000;
          *(_QWORD *)&v343 = v206;
        }
        else
        {
          HIBYTE(v344) = v203;
          v206 = &v343;
          if (!v203)
            goto LABEL_248;
        }
        memmove(v206, v204, v203);
LABEL_248:
        *((_BYTE *)v206 + v203) = 0;
        v366 = v343;
        v367 = v344;
        sub_22E9A0988(a1, (uint64_t)&v348, v205, 0, (uint64_t)v181, v317, (uint64_t)&__src, 1);
        if (SHIBYTE(v367) < 0)
          operator delete((void *)v366);
        if (v348 && v349)
        {
          sub_22E3BB10C(v349, (unint64_t)v348);
          v348 = 0;
        }
        if (SHIBYTE(v369.__r_.__value_.__r.__words[2]) < 0)
          operator delete(v369.__r_.__value_.__l.__data_);
        if (v338 && *(_QWORD *)v339)
          sub_22E3BB10C(*(unint64_t *)v339, (unint64_t)v338);
        goto LABEL_258;
      }
LABEL_375:
      abort();
    }
    v369.__r_.__value_.__r.__words[0] = (std::string::size_type)v370;
    *(_OWORD *)&v369.__r_.__value_.__r.__words[1] = xmmword_22F44E350;
    sub_22F242C48((uint64_t)&v343, (uint64_t)&v369);
    if (v345 == v346)
      llvm::raw_ostream::write((llvm::raw_ostream *)&v343, "(");
    else
      *v346++ = 40;
    v220 = (uint64_t)v181;
    v221 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15104;
    WORD4(v366) = 257;
    sub_22F119558((uint64_t *)&v357, (uint64_t **)&v343, v221, (const void ***)&__src, 0);
    if (v345 == v346)
      llvm::raw_ostream::write((llvm::raw_ostream *)&v343, ")");
    else
      *v346++ = 41;
    __src = (char *)&__len + 8;
    *(_QWORD *)&__len = 0x400000000;
    if (((sub_22F063740((uint64_t)v362, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), v67) != 0) & ~v318) != 0)
    {
LABEL_287:
      if (*v66 != 144)
      {
        v237 = sub_22EFFEB40(v66);
        v238 = *v237;
        if (v238 == 217)
          v238 = *sub_22EFFEB40(*((unsigned __int8 **)v237 + 2));
        if ((v238 - 181) <= 0x34 && ((1 << (v238 + 75)) & 0x10100209FCC081) != 0
          || (v239 = v238 - 107, v239 <= 0x3F) && ((1 << v239) & 0x8040800080000401) != 0)
        {
          v240 = (uint64_t)v66;
          sub_22F0D5A50((uint64_t)v66);
          sub_22E729148(*(void **)v347, *(_QWORD *)(v347 + 8), v241, 0, (uint64_t)&v338);
          v242 = sub_22E6C9D38((uint64_t)&__src, (unint64_t)&v338, 1);
          v243 = (char *)__src + 56 * __len;
          v244 = *(_OWORD *)v242;
          *(_QWORD *)(v243 + 13) = *(_QWORD *)(v242 + 13);
          *(_OWORD *)v243 = v244;
          v245 = *(_QWORD *)(v242 + 40);
          *(_OWORD *)(v243 + 24) = *(_OWORD *)(v242 + 24);
          *((_QWORD *)v243 + 5) = v245;
          *(_QWORD *)(v242 + 32) = 0;
          *(_QWORD *)(v242 + 40) = 0;
          *(_QWORD *)(v242 + 24) = 0;
          v243[48] = *(_BYTE *)(v242 + 48);
          LODWORD(__len) = __len + 1;
          if ((SHIBYTE(v341.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            goto LABEL_308;
          operator delete(v341.__r_.__value_.__l.__data_);
          if (!v183)
            goto LABEL_342;
        }
        else
        {
          if (v345 == v346)
            llvm::raw_ostream::write((llvm::raw_ostream *)&v343, "(");
          else
            *v346++ = 40;
          sub_22F0D5A50((uint64_t)v66);
          sub_22E729148(*(void **)v347, *(_QWORD *)(v347 + 8), v284, 0, (uint64_t)&v338);
          v285 = sub_22E6C9D38((uint64_t)&__src, (unint64_t)&v338, 1);
          v286 = (char *)__src + 56 * __len;
          v287 = *(_OWORD *)v285;
          *(_QWORD *)(v286 + 13) = *(_QWORD *)(v285 + 13);
          *(_OWORD *)v286 = v287;
          v288 = *(_QWORD *)(v285 + 40);
          *(_OWORD *)(v286 + 24) = *(_OWORD *)(v285 + 24);
          *((_QWORD *)v286 + 5) = v288;
          *(_QWORD *)(v285 + 32) = 0;
          *(_QWORD *)(v285 + 40) = 0;
          *(_QWORD *)(v285 + 24) = 0;
          v286[48] = *(_BYTE *)(v285 + 48);
          LODWORD(__len) = __len + 1;
          if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v341.__r_.__value_.__l.__data_);
          v289 = *(_QWORD *)(a1 + 8);
          sub_22F0D60E4((uint64_t)v66);
          v291 = sub_22F141A3C(v290, 0, *(_QWORD **)(v289 + 112), *(_DWORD **)(v289 + 72));
          v340 = 0;
          *(_QWORD *)&v339[4] = 0;
          v341.__r_.__value_.__r.__words[2] = 0x100000000000000;
          v338 = (unsigned __int8 *)(v291 | ((unint64_t)v291 << 32));
          v339[0] = 0;
          *(_OWORD *)&v341.__r_.__value_.__l.__data_ = 0x29uLL;
          v342 = 0;
          v292 = sub_22E6C9D38((uint64_t)&__src, (unint64_t)&v338, 1);
          v293 = (char *)__src + 56 * __len;
          v294 = *(_OWORD *)v292;
          *(_QWORD *)(v293 + 13) = *(_QWORD *)(v292 + 13);
          *(_OWORD *)v293 = v294;
          v295 = *(_QWORD *)(v292 + 40);
          *(_OWORD *)(v293 + 24) = *(_OWORD *)(v292 + 24);
          *((_QWORD *)v293 + 5) = v295;
          *(_QWORD *)(v292 + 32) = 0;
          *(_QWORD *)(v292 + 40) = 0;
          *(_QWORD *)(v292 + 24) = 0;
          v293[48] = *(_BYTE *)(v292 + 48);
          LODWORD(__len) = __len + 1;
          if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
            operator delete(v341.__r_.__value_.__l.__data_);
          v240 = (uint64_t)v66;
          v220 = (uint64_t)v181;
          if (!v318)
            goto LABEL_342;
        }
LABEL_309:
        v256 = *(_QWORD *)(v361 & 0xFFFFFFFFFFFFFFF0);
        if (v256)
        {
          if (*(_BYTE *)(v256 + 16) == 50)
          {
            v69 = 0;
            v257 = *(_QWORD *)(*(_QWORD *)(v256 + 24) + 40);
            v68 = "";
            if ((v257 & 7) == 0)
            {
              v258 = v257 & 0xFFFFFFFFFFFFFFF8;
              if (v258)
              {
                v259 = *(_DWORD **)(v258 + 16);
                v260 = *v259;
                v68 = (char *)(v259 + 4);
                v69 = v260;
              }
            }
          }
        }
        if (v32 == 2)
          v261 = 6576;
        else
          v261 = 6575;
        v262 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 2128;
        v338 = 0;
        *(_QWORD *)v339 = v262;
        *(_DWORD *)&v339[8] = v261;
        sub_22E3B89A8(&v338, v68, v69);
        v263 = v357;
        v264 = v338;
        if (!v338)
        {
          v264 = (unsigned __int8 *)sub_22E3B8AAC(*(uint64_t *)v339);
          v338 = v264;
        }
        v264[*v264 + 1] = 9;
        v265 = v338;
        v266 = *v338;
        *v338 = v266 + 1;
        *(_QWORD *)&v265[8 * v266 + 16] = v263;
        v265[(v266 + 1) + 1] = 2;
        v267 = v338;
        v268 = *v338;
        *v338 = v268 + 1;
        *(_QWORD *)&v267[8 * v268 + 16] = v319;
        sub_22F0D4E74(v240);
        sub_22E4D6448((uint64_t)(v267 + 336), v269, 1);
        v337 = *(_DWORD *)&v339[8];
        v335 = 0;
        v336 = *(_QWORD *)v339;
        if (v338)
        {
          v270 = (_OWORD *)sub_22E3B8AAC(*(uint64_t *)v339);
          v271 = 0;
          v335 = v270;
          v272 = v338;
          v273 = *((_OWORD *)v338 + 1);
          *v270 = *(_OWORD *)v338;
          v270[1] = v273;
          v274 = *((_OWORD *)v272 + 5);
          v276 = *((_OWORD *)v272 + 2);
          v275 = *((_OWORD *)v272 + 3);
          v270[4] = *((_OWORD *)v272 + 4);
          v270[5] = v274;
          v270[2] = v276;
          v270[3] = v275;
          do
          {
            std::string::operator=((std::string *)((char *)v270 + v271 + 96), (const std::string *)&v272[v271 + 96]);
            v271 += 24;
          }
          while (v271 != 240);
          sub_22E78D560((uint64_t)(v270 + 21), (uint64_t)(v272 + 336));
          sub_22E78D658((uint64_t)(v270 + 28), (uint64_t *)v272 + 56);
        }
        sub_22F0D5A50(v240);
        sub_22E9A0988(a1, (uint64_t)&v335, v277, 0, v220, v317, (uint64_t)__src, __len);
        if (v335 && v336)
        {
          sub_22E3BB10C(v336, (unint64_t)v335);
          v335 = 0;
        }
        v278 = v338;
        if (!v338)
          goto LABEL_362;
        goto LABEL_360;
      }
      v233 = (unsigned __int8 *)*((_QWORD *)v66 + 4);
      v234 = *(const void **)v347;
      v235 = *(_QWORD *)(v347 + 8);
      *(_QWORD *)&v339[4] = 0;
      v340 = 0;
      memset(&v341, 0, sizeof(v341));
      v342 = 0;
      v338 = v233;
      v339[0] = 1;
      if (v235 > 0x7FFFFFFFFFFFFFF7)
        goto LABEL_375;
      if (v235 >= 0x17)
      {
        v246 = (v235 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v235 | 7) != 0x17)
          v246 = v235 | 7;
        v247 = v220;
        v248 = v246 + 1;
        v249 = v234;
        v250 = (std::string *)operator new(v246 + 1);
        v234 = v249;
        v236 = v250;
        v251 = v248 | 0x8000000000000000;
        v220 = v247;
        v363.__r_.__value_.__r.__words[2] = v251;
        v363.__r_.__value_.__r.__words[0] = (std::string::size_type)v250;
        v363.__r_.__value_.__l.__size_ = v235;
      }
      else
      {
        *((_BYTE *)&v363.__r_.__value_.__s + 23) = v235;
        v236 = &v363;
        if (!v235)
          goto LABEL_305;
      }
      memmove(v236, v234, v235);
LABEL_305:
      v236->__r_.__value_.__s.__data_[v235] = 0;
      v341 = v363;
      v252 = sub_22E6C9D38((uint64_t)&__src, (unint64_t)&v338, 1);
      v253 = (char *)__src + 56 * __len;
      v254 = *(_OWORD *)v252;
      *(_QWORD *)(v253 + 13) = *(_QWORD *)(v252 + 13);
      *(_OWORD *)v253 = v254;
      v255 = *(_QWORD *)(v252 + 40);
      *(_OWORD *)(v253 + 24) = *(_OWORD *)(v252 + 24);
      *((_QWORD *)v253 + 5) = v255;
      *(_QWORD *)(v252 + 32) = 0;
      *(_QWORD *)(v252 + 40) = 0;
      *(_QWORD *)(v252 + 24) = 0;
      v253[48] = *(_BYTE *)(v252 + 48);
      LODWORD(__len) = __len + 1;
      if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v341.__r_.__value_.__l.__data_);
      v183 = v318;
      v240 = (uint64_t)v66;
LABEL_308:
      if (v183)
        goto LABEL_309;
LABEL_342:
      v296 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
      v338 = 0;
      *(_QWORD *)v339 = v296 + 266;
      *(_DWORD *)&v339[8] = 6578;
      sub_22F063CE0((uint64_t)v362, v296, &v363);
      if ((v363.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v297 = &v363;
      else
        v297 = (std::string *)v363.__r_.__value_.__r.__words[0];
      if ((v363.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v298 = *((_BYTE *)&v363.__r_.__value_.__s + 23) & 0x7F;
      else
        v298 = v363.__r_.__value_.__l.__size_;
      sub_22E3B89A8(&v338, v297, v298);
      v299 = v361;
      v300 = v338;
      if (!v338)
      {
        v300 = (unsigned __int8 *)sub_22E3B8AAC(*(uint64_t *)v339);
        v338 = v300;
      }
      v300[*v300 + 1] = 9;
      v301 = v338;
      v302 = *v338;
      *v338 = v302 + 1;
      *(_QWORD *)&v301[8 * v302 + 16] = v299;
      v301[(v302 + 1) + 1] = 2;
      v303 = v338;
      v304 = *v338;
      *v338 = v304 + 1;
      *(_QWORD *)&v303[8 * v304 + 16] = v319;
      sub_22F0D4E74(v240);
      sub_22E4D6448((uint64_t)(v303 + 336), v305, 1);
      v334 = *(_DWORD *)&v339[8];
      v332 = 0;
      v333 = *(_QWORD *)v339;
      if (v338)
      {
        v306 = (_OWORD *)sub_22E3B8AAC(*(uint64_t *)v339);
        v307 = 0;
        v332 = v306;
        v308 = v338;
        v309 = *((_OWORD *)v338 + 1);
        *v306 = *(_OWORD *)v338;
        v306[1] = v309;
        v310 = *((_OWORD *)v308 + 5);
        v312 = *((_OWORD *)v308 + 2);
        v311 = *((_OWORD *)v308 + 3);
        v306[4] = *((_OWORD *)v308 + 4);
        v306[5] = v310;
        v306[2] = v312;
        v306[3] = v311;
        do
        {
          std::string::operator=((std::string *)((char *)v306 + v307 + 96), (const std::string *)&v308[v307 + 96]);
          v307 += 24;
        }
        while (v307 != 240);
        sub_22E78D560((uint64_t)(v306 + 21), (uint64_t)(v308 + 336));
        sub_22E78D658((uint64_t)(v306 + 28), (uint64_t *)v308 + 56);
      }
      sub_22F0D5A50(v240);
      sub_22E9A0988(a1, (uint64_t)&v332, v313, 0, v220, v317, (uint64_t)__src, __len);
      if (v332 && v333)
      {
        sub_22E3BB10C(v333, (unint64_t)v332);
        v332 = 0;
      }
      if (SHIBYTE(v363.__r_.__value_.__r.__words[2]) < 0)
        operator delete(v363.__r_.__value_.__l.__data_);
      v278 = v338;
      if (!v338)
        goto LABEL_362;
LABEL_360:
      if (*(_QWORD *)v339)
        sub_22E3BB10C(*(unint64_t *)v339, (unint64_t)v278);
LABEL_362:
      v314 = (char *)__src;
      if ((_DWORD)__len)
      {
        v315 = 56 * __len;
        do
        {
          if (v314[v315 - 9] < 0)
            operator delete(*(void **)&v314[v315 - 32]);
          v315 -= 56;
        }
        while (v315);
        v314 = (char *)__src;
      }
      if (v314 != (char *)&__len + 8)
        free(v314);
      llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&v343);
      if (v369.__r_.__value_.__l.__data_ != v370)
        free(v369.__r_.__value_.__l.__data_);
LABEL_258:
      llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)&__p);
      v30 = v371;
      if (v371 == v373)
        return;
      goto LABEL_259;
    }
    v222 = *(const void **)v356;
    v223 = *(_QWORD *)(v356 + 8);
    *(_QWORD *)&v339[4] = 0;
    v340 = 0;
    memset(&v341, 0, sizeof(v341));
    v342 = 0;
    v338 = (unsigned __int8 *)v181;
    v339[0] = v317;
    if (v223 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_375;
    if (v223 >= 0x17)
    {
      v225 = (v223 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v223 | 7) != 0x17)
        v225 = v223 | 7;
      v226 = v225 + 1;
      v227 = v222;
      v228 = (std::string *)operator new(v225 + 1);
      v222 = v227;
      v224 = v228;
      v363.__r_.__value_.__r.__words[2] = v226 | 0x8000000000000000;
      v363.__r_.__value_.__r.__words[0] = (std::string::size_type)v228;
      v363.__r_.__value_.__l.__size_ = v223;
    }
    else
    {
      *((_BYTE *)&v363.__r_.__value_.__s + 23) = v223;
      v224 = &v363;
      if (!v223)
        goto LABEL_284;
    }
    memmove(v224, v222, v223);
LABEL_284:
    v224->__r_.__value_.__s.__data_[v223] = 0;
    v341 = v363;
    v229 = sub_22E6C9D38((uint64_t)&__src, (unint64_t)&v338, 1);
    v230 = (char *)__src + 56 * __len;
    v231 = *(_OWORD *)v229;
    *(_QWORD *)(v230 + 13) = *(_QWORD *)(v229 + 13);
    *(_OWORD *)v230 = v231;
    v232 = *(_QWORD *)(v229 + 40);
    *(_OWORD *)(v230 + 24) = *(_OWORD *)(v229 + 24);
    *((_QWORD *)v230 + 5) = v232;
    *(_QWORD *)(v229 + 32) = 0;
    *(_QWORD *)(v229 + 40) = 0;
    *(_QWORD *)(v229 + 24) = 0;
    v230[48] = *(_BYTE *)(v229 + 48);
    LODWORD(__len) = __len + 1;
    if (SHIBYTE(v341.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v341.__r_.__value_.__l.__data_);
    v183 = v318;
    v220 = (uint64_t)v181;
    goto LABEL_287;
  }
}

uint64_t sub_22E9A4B54(unint64_t *a1, _QWORD *a2, uint64_t a3, _QWORD *a4)
{
  unint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  unint64_t v15;
  unsigned __int8 v16;
  const char *v17;
  _DWORD *v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t *v27;
  unint64_t v28;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  unint64_t v34;
  int v35;
  _BOOL4 v36;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  unint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t *v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v5 = a2 + 2061;
  v50 = a2 + 2062;
  v6 = a2 + 2067;
  v7 = a2 + 2068;
  while (1)
  {
    result = sub_22F10D4DC(*(_QWORD *)(a3 & 0xFFFFFFFFFFFFFFF0));
    if (result)
    {
      v9 = result;
      while (1)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v9 + 24) + 40) & 0xFFFFFFFFFFFFFFF8;
        if ((*(_QWORD *)(*(_QWORD *)(v9 + 24) + 40) & 7) != 0 || v10 == 0)
          break;
        v18 = *(_DWORD **)(v10 + 16);
        v19 = *v18;
        v17 = (const char *)(v18 + 4);
        v13 = v19;
        v20 = a2[1886];
        if (*(_DWORD *)(v20 + 68) != 15
          || (result = llvm::Triple::isArch64Bit((llvm::Triple *)(v20 + 32)), v21 = v50, (result & 1) == 0))
        {
          v21 = v5;
        }
        if (v13 == 7)
        {
          v22 = *v21;
          v24 = *(_DWORD *)v17 != 1850295875 || *(_DWORD *)(v17 + 3) != 2019910766;
          v13 = 7;
          v14 = !v24;
          if (v24)
            v15 = 0;
          else
            v15 = v22 >> 8;
          if (v24)
            v16 = 0;
          else
            v16 = v22;
LABEL_28:
          v25 = a2[1886];
          if (*(_DWORD *)(v25 + 68) == 15)
            result = llvm::Triple::isArch64Bit((llvm::Triple *)(v25 + 32));
          goto LABEL_47;
        }
        v26 = a2[1886];
        if (*(_DWORD *)(v26 + 68) != 15
          || (result = llvm::Triple::isArch64Bit((llvm::Triple *)(v26 + 32)), v27 = v50, (result & 1) == 0))
        {
          v27 = v5;
        }
        if (v13 == 9)
        {
          v28 = *v27;
          v30 = *(_QWORD *)v17 != 0x656765746E49534ELL || v17[8] != 114;
          v13 = 9;
          v14 = !v30;
          if (v30)
            v15 = 0;
          else
            v15 = v28 >> 8;
          if (v30)
            v16 = 0;
          else
            v16 = v28;
        }
        else
        {
          v14 = 0;
          v15 = 0;
          v16 = 0;
        }
LABEL_47:
        v31 = a2[1886];
        if (*(_DWORD *)(v31 + 68) != 15
          || (result = llvm::Triple::isArch64Bit((llvm::Triple *)(v31 + 32)), v32 = v7, (result & 1) == 0))
        {
          v32 = v6;
        }
        if (!v14 && v13 == 10)
        {
          v33 = bswap64(*(_QWORD *)v17);
          v34 = 0x4E5355496E746567;
          if (v33 == 0x4E5355496E746567)
          {
            v33 = bswap32(*((unsigned __int16 *)v17 + 4)) >> 16;
            if ((_DWORD)v33 == 25970)
            {
              v35 = 0;
              goto LABEL_76;
            }
            v34 = 25970;
          }
          if (v33 < v34)
            v35 = -1;
          else
            v35 = 1;
LABEL_76:
          v40 = *v32;
          v41 = (unint64_t)*v32 >> 8;
          if (v35)
            v41 = v15;
          else
            v16 = v40;
          if (v35)
            goto LABEL_83;
          v39 = v16 | (v41 << 8);
          goto LABEL_82;
        }
        v36 = v13 == 6;
        if (!v14 && v13 == 6)
        {
          if (*(_DWORD *)v17 == 1953384787 && *((_WORD *)v17 + 2) == 12851)
          {
            v39 = a2[2060];
            goto LABEL_82;
          }
          v36 = 1;
        }
        if (v14 || !v36)
        {
          if (!v14)
            goto LABEL_83;
          v39 = v16 | (v15 << 8);
        }
        else
        {
          if (*(_DWORD *)v17 != 1953384789 || *((_WORD *)v17 + 2) != 12851)
            goto LABEL_83;
          v39 = a2[2066];
        }
LABEL_82:
        if (v39 >= 0x10)
        {
          v43 = a1;
          *a1 = v39;
          a1[1] = (unint64_t)v17;
          goto LABEL_87;
        }
LABEL_83:
        result = sub_22F10D4DC(*(_QWORD *)(*(_QWORD *)((*(_QWORD *)(*(_QWORD *)(v9 + 24) + 80) & 0xFFFFFFFFFFFFFFF8)
                                                     + ((2 * *(_QWORD *)(*(_QWORD *)(v9 + 24) + 80)) & 8)) & 0xFFFFFFFFFFFFFFF0));
        v9 = result;
        if (!result)
          goto LABEL_84;
      }
      v12 = a2[1886];
      if (*(_DWORD *)(v12 + 68) == 15)
        result = llvm::Triple::isArch64Bit((llvm::Triple *)(v12 + 32));
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      v17 = "";
      goto LABEL_28;
    }
LABEL_84:
    v42 = *(unsigned __int8 *)a4;
    if (v42 != 214)
      break;
    a4 = (_QWORD *)a4[3];
    a3 = a4[1];
  }
  if (v42 != 103)
    goto LABEL_94;
  sub_22E9A4B54(&v51, a2, *(_QWORD *)(a4[4] + 8));
  v44 = v51;
  v45 = v52;
  v13 = v53;
  result = sub_22E9A4B54(&v51, a2, *(_QWORD *)(a4[5] + 8));
  if (v44 == v51)
    goto LABEL_93;
  if (v44 <= 0xF)
  {
    v46 = v52;
    v47 = v53;
    *a1 = v51;
    a1[1] = v46;
    a1[2] = v47;
    return result;
  }
  if (v51 <= 0xF)
  {
LABEL_93:
    v43 = a1;
    *a1 = v44;
    a1[1] = v45;
LABEL_87:
    v43[2] = v13;
  }
  else
  {
LABEL_94:
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  return result;
}

uint64_t sub_22E9A4F54(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_DWORD *)(a1 + 64);
  if (!v1)
    return 0xFFFFFFFFLL;
  v2 = 0;
  v3 = -v1;
  v4 = v1 - 1;
  v5 = *(uint64_t **)a1;
  v6 = 0xFFFFFFFFFFFFFFFFLL >> v3;
  v7 = v4 & 0xFFFFFFC0;
  while (1)
  {
    v9 = *v5++;
    v8 = v9;
    v10 = v7 == v2 ? v6 : -1;
    v11 = v10 & v8;
    if (v11)
      break;
    v2 += 64;
    if (v7 + 64 == v2)
      return 0xFFFFFFFFLL;
  }
  return __clz(__rbit64(v11)) + v2;
}

void sub_22E9A4FB4(uint64_t a1)
{
  *(_QWORD *)a1 = &off_24FAB7130;
  sub_22E54C5D0((void ***)(a1 + 88));
  JUMPOUT(0x2348A0E9CLL);
}

BOOL sub_22E9A4FF4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v8;
  int v9;
  void **v10;
  uint64_t v11;
  int v12;

  v8 = *(_DWORD *)(a2 + 100);
  v9 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)(a2 + 48) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
  v10 = *(void ***)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  if (v11)
    v12 = v11 - (_DWORD)v10;
  else
    v12 = 1;
  return sub_22E9A0B5C(a1, v8, v9, a3, a4, v10, v12);
}

BOOL sub_22E9A508C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  BOOL v11;
  unsigned __int8 *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  _BOOL8 result;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  unsigned __int8 *v39;
  int v40;
  int v41;
  _QWORD *v42;
  std::string *v43;
  size_t size;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  uint64_t v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  uint64_t v53;
  unsigned __int8 *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  int v59;
  int v60;
  unint64_t v61;
  int v62;
  int v63;
  _QWORD *v64;
  std::string *v65;
  size_t v66;
  uint64_t v67;
  unsigned __int8 *v68;
  unsigned __int8 *v69;
  uint64_t v70;
  unsigned __int8 *v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD *v74;
  uint64_t v75;
  unsigned __int8 *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int v81;
  int v82;
  unint64_t v83;
  int v84;
  int v85;
  unint64_t v86;
  size_t v87;
  const void *v88;
  char v89;
  __int128 *p_dst;
  uint64_t v91;
  uint64_t v92;
  _OWORD *v93;
  unint64_t v94;
  int v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  char v99;
  __int128 v100;
  unint64_t v101;
  char v102;
  std::string v103;
  unsigned __int8 *v104;
  unint64_t v105;
  int v106;
  _OWORD *v107;
  unint64_t v108;
  int v109;
  std::string __p[2];
  uint64_t v111;
  _OWORD v112[8];
  _DWORD v113[8];
  unint64_t v114;
  unint64_t v115;
  int v116;
  __int128 __dst;
  unint64_t v118;
  void **v119;
  __int128 v120;
  void *v121[2];
  uint64_t v122;
  char v123;
  uint64_t v124;

  v124 = *MEMORY[0x24BDAC8D0];
  v8 = *(_DWORD *)(a2 + 64);
  v9 = v8 > 0x20;
  v10 = (1 << v8) & 0x100400001;
  v11 = v9 || v10 == 0;
  if (v11 && !*(_BYTE *)(a2 + 120))
  {
    if (*(_BYTE *)(a1 + 97))
    {
      *(_BYTE *)(a1 + 97) = 0;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    }
    else if (*(unsigned __int8 *)(a1 + 96) != *(unsigned __int8 *)(a2 + 96))
    {
      v63 = sub_22EFF9E30(**(_QWORD **)(a1 + 16), (*(_DWORD *)(*(_QWORD *)(a1 + 16) + 8) + *(_DWORD *)(a2 + 48) - *(_DWORD *)(a1 + 48)), *(uint64_t **)(*(_QWORD *)(a1 + 8) + 112), *(_DWORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88) + 15088), 0, 0);
      sub_22E9A0F10(a1, v63, a3, a4);
      return 0;
    }
  }
  if (*(_DWORD *)(a2 + 28) == 1 && *(_DWORD *)(a2 + 32) == 0)
  {
    v13 = (unsigned __int8 *)sub_22E9A0AAC(a1, *(_DWORD *)(a2 + 16) - *(unsigned __int8 *)(a2 + 37), *(_DWORD *)(a2 + 24) + *(unsigned __int8 *)(a2 + 37));
    v15 = v14;
    v16 = *(_QWORD *)(a1 + 8);
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_QWORD *)(v16 + 88);
    v114 = 0;
    v115 = v18 + 2128;
    v116 = 6969;
    v19 = sub_22EFF9E30(*(_QWORD *)v17, *(_DWORD *)(v17 + 8)+ *(_DWORD *)(a2 + 16)- *(unsigned __int8 *)(a2 + 37)- *(_DWORD *)(a1 + 48), *(uint64_t **)(v16 + 112), *(_DWORD **)(v16 + 72), *(_QWORD *)(v18 + 15088), 0, 0);
    BYTE12(v120) = 0;
    *(_QWORD *)((char *)&v120 + 4) = 0;
    v121[1] = 0;
    v122 = 0;
    v121[0] = 0;
    v123 = 0;
    v119 = (void **)v13;
    LOBYTE(v120) = v15;
    sub_22E9A0988(a1, (uint64_t)&v114, v19, 1, (uint64_t)v13, v15, (uint64_t)&v119, 1);
    if (SHIBYTE(v122) < 0)
      operator delete(v121[0]);
    if (v114 && v115)
    {
      sub_22E3BB10C(v115, v114);
      v114 = 0;
    }
  }
  v20 = *(_DWORD *)(a2 + 64);
  if (v20 <= 0x20 && ((1 << v20) & 0x100400001) != 0 || *(_BYTE *)(a2 + 120))
    return 1;
  v22 = *(_DWORD *)(a2 + 100);
  if (v22 < *(_DWORD *)(a1 + 40))
    sub_22E54C570((unint64_t *)(a1 + 88), *(_DWORD *)(a2 + 100));
  if ((sub_22F064030(a2) & 1) == 0)
  {
    v24 = a1;
    v25 = a2;
    v26 = a2 + 40;
    v27 = a3;
    v28 = a4;
    v29 = 6590;
LABEL_30:
    sub_22E9A1C14(v24, v25, v26, v27, v28, v29);
    goto LABEL_31;
  }
  v23 = 1 << *(_DWORD *)(a2 + 8);
  if ((v23 & 0x3B7) != 0)
  {
LABEL_31:
    v30 = *(_DWORD *)(a2 + 64);
    goto LABEL_32;
  }
  if ((v23 & 0x1DC48) != 0)
  {
    sub_22E9A2198(a1, a2, a3, a4);
    goto LABEL_31;
  }
  v30 = *(_DWORD *)(a2 + 64);
  if (v30 <= 0xA && ((1 << v30) & 0x6B4) != 0)
  {
    v24 = a1;
    v25 = a2;
    v26 = a2 + 40;
    v27 = a3;
    v28 = a4;
    v29 = 6586;
    goto LABEL_30;
  }
LABEL_32:
  if (((1 << v30) & 0x20A7FFEB6) == 0
    && (((1 << v30) & 0x1F4000149) != 0 || (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 72) + 1) & 0x40) == 0))
  {
    sub_22E9A265C(a1, a2 + 40, a3, a4);
  }
  if (*(_DWORD *)(a1 + 56) == 2)
    return 1;
  result = sub_22E9A13B0(a1, *(_BYTE *)(a2 + 96), a2 + 40, a3, a4, v22);
  if (result)
  {
    v31 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8 * (*(_DWORD *)(a1 + 36) + v22));
    if (!v31)
      return 1;
    sub_22F3F1044(a2, *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88), (uint64_t)v113);
    if (v113[0] == 1)
      return 1;
    v32 = sub_22F063740((uint64_t)v113, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), *(_QWORD *)(v31 + 8));
    if (v32 == 1)
      return 1;
    v33 = v32;
    v34 = *(_OWORD *)(a2 + 80);
    v112[4] = *(_OWORD *)(a2 + 64);
    v112[5] = v34;
    v35 = *(_OWORD *)(a2 + 112);
    v112[6] = *(_OWORD *)(a2 + 96);
    v112[7] = v35;
    v36 = *(_OWORD *)(a2 + 16);
    v112[0] = *(_OWORD *)a2;
    v112[1] = v36;
    v37 = *(_OWORD *)(a2 + 48);
    v112[2] = *(_OWORD *)(a2 + 32);
    v112[3] = v37;
    v38 = *(_QWORD *)(v31 + 8);
    v39 = sub_22EFFEB40((unsigned __int8 *)v31);
    v40 = sub_22F0D2B48((uint64_t)v112, v38, *((_QWORD *)v39 + 1), *(_WORD **)(*(_QWORD *)(a1 + 8) + 72), *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88));
    if (v33 == 2)
      v41 = 6580;
    else
      v41 = 6578;
    if (!v40)
    {
      v42 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
      v119 = 0;
      *(_QWORD *)&v120 = v42 + 266;
      DWORD2(v120) = v41;
      sub_22F063CE0((uint64_t)v113, v42, __p);
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        v43 = __p;
      else
        v43 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
        size = *((_BYTE *)&__p[0].__r_.__value_.__s + 23) & 0x7F;
      else
        size = __p[0].__r_.__value_.__l.__size_;
      sub_22E3B89A8((unsigned __int8 **)&v119, v43, size);
      v45 = *(_QWORD *)(v31 + 8);
      v46 = (unsigned __int8 *)v119;
      if (!v119)
      {
        v46 = (unsigned __int8 *)sub_22E3B8AAC(v120);
        v119 = (void **)v46;
      }
      v46[*v46 + 1] = 9;
      v47 = (unsigned __int8 *)v119;
      v48 = *(unsigned __int8 *)v119;
      *(_BYTE *)v119 = v48 + 1;
      *(_QWORD *)&v47[8 * v48 + 16] = v45;
      v47[(v48 + 1) + 1] = 2;
      v49 = (unsigned __int8 *)v119;
      v50 = *(unsigned __int8 *)v119;
      *(_BYTE *)v119 = v50 + 1;
      *(_QWORD *)&v49[8 * v50 + 16] = 0;
      sub_22F0D4E74(v31);
      sub_22E4D6448((uint64_t)(v49 + 336), v51, 1);
      v95 = DWORD2(v120);
      v93 = 0;
      v94 = v120;
      if (v119)
      {
        v52 = (_OWORD *)sub_22E3B8AAC(v120);
        v53 = 0;
        v93 = v52;
        v54 = (unsigned __int8 *)v119;
        v55 = *((_OWORD *)v119 + 1);
        *v52 = *(_OWORD *)v119;
        v52[1] = v55;
        v56 = *((_OWORD *)v54 + 5);
        v58 = *((_OWORD *)v54 + 2);
        v57 = *((_OWORD *)v54 + 3);
        v52[4] = *((_OWORD *)v54 + 4);
        v52[5] = v56;
        v52[2] = v58;
        v52[3] = v57;
        do
        {
          std::string::operator=((std::string *)((char *)v52 + v53 + 96), (const std::string *)&v54[v53 + 96]);
          v53 += 24;
        }
        while (v53 != 240);
        sub_22E78D560((uint64_t)(v52 + 21), (uint64_t)(v54 + 336));
        sub_22E78D658((uint64_t)(v52 + 28), (uint64_t *)v54 + 56);
      }
      sub_22F0D5A50(v31);
      v60 = v59;
      v61 = sub_22E9A0AAC(a1, a3, a4);
      sub_22E9A0988(a1, (uint64_t)&v93, v60, 0, v61, v62, 0, 0);
      if (v93 && v94)
      {
        sub_22E3BB10C(v94, (unint64_t)v93);
        v93 = 0;
      }
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
        operator delete(__p[0].__r_.__value_.__l.__data_);
      if (v119)
      {
        if ((_QWORD)v120)
          sub_22E3BB10C(v120, (unint64_t)v119);
      }
      return 1;
    }
    v119 = v121;
    v120 = xmmword_22F44E310;
    sub_22F242C48((uint64_t)__p, (uint64_t)&v119);
    sub_22F3F1348(v112, (llvm::raw_ostream *)__p);
    v64 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 88);
    v104 = 0;
    v105 = (unint64_t)(v64 + 266);
    v106 = v41;
    sub_22F063CE0((uint64_t)v113, v64, &v103);
    if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v65 = &v103;
    else
      v65 = (std::string *)v103.__r_.__value_.__r.__words[0];
    if ((v103.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v66 = *((_BYTE *)&v103.__r_.__value_.__s + 23) & 0x7F;
    else
      v66 = v103.__r_.__value_.__l.__size_;
    sub_22E3B89A8(&v104, v65, v66);
    v67 = *(_QWORD *)(v31 + 8);
    v68 = v104;
    if (!v104)
    {
      v68 = (unsigned __int8 *)sub_22E3B8AAC(v105);
      v104 = v68;
    }
    v68[*v68 + 1] = 9;
    v69 = v104;
    v70 = *v104;
    *v104 = v70 + 1;
    *(_QWORD *)&v69[8 * v70 + 16] = v67;
    v69[(v70 + 1) + 1] = 2;
    v71 = v104;
    v72 = *v104;
    *v104 = v72 + 1;
    *(_QWORD *)&v71[8 * v72 + 16] = 0;
    sub_22F0D4E74(v31);
    sub_22E4D6448((uint64_t)(v71 + 336), v73, 1);
    v109 = v106;
    v107 = 0;
    v108 = v105;
    if (v104)
    {
      v74 = (_OWORD *)sub_22E3B8AAC(v105);
      v75 = 0;
      v107 = v74;
      v76 = v104;
      v77 = *((_OWORD *)v104 + 1);
      *v74 = *(_OWORD *)v104;
      v74[1] = v77;
      v78 = *((_OWORD *)v76 + 5);
      v80 = *((_OWORD *)v76 + 2);
      v79 = *((_OWORD *)v76 + 3);
      v74[4] = *((_OWORD *)v76 + 4);
      v74[5] = v78;
      v74[2] = v80;
      v74[3] = v79;
      do
      {
        std::string::operator=((std::string *)((char *)v74 + v75 + 96), (const std::string *)&v76[v75 + 96]);
        v75 += 24;
      }
      while (v75 != 240);
      sub_22E78D560((uint64_t)(v74 + 21), (uint64_t)(v76 + 336));
      sub_22E78D658((uint64_t)(v74 + 28), (uint64_t *)v76 + 56);
    }
    sub_22F0D5A50(v31);
    v82 = v81;
    v83 = sub_22E9A0AAC(a1, a3, a4);
    v85 = v84;
    v86 = sub_22E9A0AAC(a1, a3, a4);
    v88 = *(const void **)v111;
    v87 = *(_QWORD *)(v111 + 8);
    v98 = 0;
    v99 = 0;
    v102 = 0;
    v96 = v86;
    v97 = v89;
    if (v87 >= 0x7FFFFFFFFFFFFFF8)
      abort();
    if (v87 >= 0x17)
    {
      v91 = (v87 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v87 | 7) != 0x17)
        v91 = v87 | 7;
      v92 = v91 + 1;
      p_dst = (__int128 *)operator new(v91 + 1);
      *((_QWORD *)&__dst + 1) = v87;
      v118 = v92 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v118) = v87;
      p_dst = &__dst;
      if (!v87)
        goto LABEL_91;
    }
    memmove(p_dst, v88, v87);
LABEL_91:
    *((_BYTE *)p_dst + v87) = 0;
    v100 = __dst;
    v101 = v118;
    sub_22E9A0988(a1, (uint64_t)&v107, v82, 0, v83, v85, (uint64_t)&v96, 1);
    if (SHIBYTE(v101) < 0)
      operator delete((void *)v100);
    if (v107 && v108)
    {
      sub_22E3BB10C(v108, (unint64_t)v107);
      v107 = 0;
    }
    if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v103.__r_.__value_.__l.__data_);
    if (v104 && v105)
      sub_22E3BB10C(v105, (unint64_t)v104);
    llvm::raw_ostream::~raw_ostream((llvm::raw_ostream *)__p);
    if (v119 != v121)
      free(v119);
    return 1;
  }
  return result;
}

unsigned int *sub_22E9A5978(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  unsigned int *result;
  unint64_t v13;
  unsigned int *v14;
  int v15;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v6 + 88);
  v13 = 0;
  v14 = (unsigned int *)(v8 + 2128);
  v15 = 6970;
  v9 = sub_22EFF9E30(*(_QWORD *)v7, (*(_DWORD *)(v7 + 8) + a3 - *(_DWORD *)(a1 + 48)), *(uint64_t **)(v6 + 112), *(_DWORD **)(v6 + 72), *(_QWORD *)(v8 + 15088), 0, 0);
  v10 = sub_22E9A0AAC(a1, a2, a3 - a2);
  result = sub_22E9A0988(a1, (uint64_t)&v13, v9, 1, v10, v11, 0, 0);
  if (v13)
  {
    result = v14;
    if (v14)
      return (unsigned int *)sub_22E3BB10C((unint64_t)v14, v13);
  }
  return result;
}

BOOL sub_22E9A5A3C(unsigned __int8 *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  int v3;
  int v4;

  while (1)
  {
    v1 = sub_22EFFA6B0(a1);
    v2 = v1;
    v3 = *v1;
    if ((v3 & 0xFE) != 0x70)
      break;
    v4 = (*(_DWORD *)v1 >> 18) & 0x3F;
    if (v4 != 5 && v4 != 2)
      return 0;
    if ((sub_22E9A5A3C(*((_QWORD *)v1 + 2)) & 1) != 0)
      return 1;
    a1 = (unsigned __int8 *)*((_QWORD *)v2 + 3);
  }
  return v3 == 232 && (v1[2] & 0x3C) == 0;
}

void sub_22E9A5AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;

  v3 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 24));
  v4 = sub_22EFC3B90(v3);
  if (v4)
  {
    v5 = v4;
LABEL_3:
    v8 = *(_QWORD *)(v5 + 48);
    v6 = v8;
    v7 = sub_22F111C54(&v8);
    sub_22E9A5B54(a1, v7, v6);
    while (1)
    {
      v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v5)
        break;
      if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
}

void sub_22E9A5B54(uint64_t a1, int a2, unint64_t a3)
{
  unint64_t i;
  unint64_t v6;
  unint64_t v7[4];

  for (i = sub_22EF5C728(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), a3);
        i;
        i = sub_22EF5C728(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), v6))
  {
    v6 = sub_22EF5BA38(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), *(_QWORD *)(i + 32));
    v7[0] = v6;
    a2 = sub_22F111C54(v7);
  }
  __asm { BR              X10 }
}

unint64_t sub_22E9A5BE8()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t result;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v4 = v0;
  v2 = *v0;
  v3 = v4[1];
  v10 = *(_QWORD *)(v3 + 88) + 2128;
  v11 = 5849;
  v5 = (_BYTE *)sub_22E3B8AAC(v10);
  v9 = (unint64_t)v5;
  v6 = *v5;
  v5[v6 + 1] = 2;
  *v5 = v6 + 1;
  *(_QWORD *)&v5[8 * v6 + 16] = 1;
  v12 = v2;
  if (v2)
    v7 = &v12;
  else
    v7 = 0;
  result = sub_22EB52944(v3, v1, v7, v2 != 0, (uint64_t *)&v9);
  if (v9)
  {
    result = v10;
    if (v10)
      return sub_22E3BB10C(v10, v9);
  }
  return result;
}

void sub_22E9A5C7C()
{
  uint64_t v0;
  uint64_t v1;

  sub_22E9A5AB4(v0, v1);
}

void sub_22E9A5C98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unint64_t v8;

  v3 = sub_22F114198(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                               + 24));
  v4 = sub_22EFC3B90(v3);
  if (v4)
  {
    v5 = v4;
LABEL_3:
    v8 = *(_QWORD *)(v5 + 48);
    v6 = v8;
    v7 = sub_22F111B38(&v8);
    sub_22E9A5D38(a1, v7, v6);
    while (1)
    {
      v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v5)
        break;
      if ((*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
}

void sub_22E9A5D38(uint64_t a1, int a2, unint64_t a3)
{
  unint64_t i;
  unint64_t v6;
  unint64_t v7[4];

  for (i = sub_22EF5C728(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), a3);
        i;
        i = sub_22EF5C728(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), v6))
  {
    v6 = sub_22EF5BA38(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 88), *(_QWORD *)(i + 32));
    v7[0] = v6;
    a2 = sub_22F111B38(v7);
  }
  __asm { BR              X10 }
}

unint64_t sub_22E9A5DCC()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t result;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v4 = v0;
  v2 = *v0;
  v3 = v4[1];
  v10 = *(_QWORD *)(v3 + 88) + 2128;
  v11 = 5849;
  v5 = (_BYTE *)sub_22E3B8AAC(v10);
  v9 = (unint64_t)v5;
  v6 = *v5;
  v5[v6 + 1] = 2;
  *v5 = v6 + 1;
  *(_QWORD *)&v5[8 * v6 + 16] = 0;
  v12 = v2;
  if (v2)
    v7 = &v12;
  else
    v7 = 0;
  result = sub_22EB52944(v3, v1, v7, v2 != 0, (uint64_t *)&v9);
  if (v9)
  {
    result = v10;
    if (v10)
      return sub_22E3BB10C(v10, v9);
  }
  return result;
}

void sub_22E9A5E5C()
{
  uint64_t v0;
  uint64_t v1;

  sub_22E9A5C98(v0, v1);
}

unsigned int *sub_22E9A5E78(unsigned int *result, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  unsigned int *v6;
  int v7;
  BOOL v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14[24];

  v6 = result;
  v7 = *(_DWORD *)(a4 + 28);
  if ((v7 & 0x7Fu) - 49 < 3 || ((v7 & 0x7Eu) - 52 >= 6 ? (v8 = (v7 & 0x7Fu) - 60 > 6) : (v8 = 0), !v8))
  {
    if ((*(_BYTE *)(a3 + 2) & 0x78) != 0)
      v9 = *(_DWORD *)(a3 + 4);
    else
      sub_22F0D5A50(*(_QWORD *)(a3 + 16));
    sub_22E8FCA40(v6, v9, 0x19CAu, 0, (uint64_t)v14);
    v10 = sub_22E90749C((uint64_t)v14, a2);
    v13 = 0;
    v11 = sub_22E8900C4(v10, &v13);
    v12 = a4;
    sub_22E890024(v11, &v12);
    return sub_22E903BEC(v14);
  }
  return result;
}

void sub_22E9A5F38(_QWORD *a1, unsigned __int8 *a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  unsigned __int8 *v19;
  char v20;

  if (*a2 == 103)
    v8 = 24;
  else
    v8 = 32;
  sub_22E98941C(a1, *(_QWORD *)&a2[v8], *((unsigned int *)a2 + 4));
  v9 = *a2;
  if (v9 == 102)
    v10 = 24;
  else
    v10 = 40;
  if (v9 == 103)
    v11 = 32;
  else
    v11 = v10;
  v12 = *(unsigned __int8 **)&a2[v11];
  v20 = 0;
  sub_22E9A60DC((uint64_t)a1, v12, a4, a3, (uint64_t)&v20);
  v13 = 48;
  if (*a2 == 103)
    v13 = 40;
  sub_22E9A60DC((uint64_t)a1, *(unsigned __int8 **)&a2[v13], a4, a3, (uint64_t)&v20);
  v14 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v14)
    v15 = (*(_DWORD *)(v14 + 16) & 0xFF800FF) == 87031819;
  else
    v15 = 0;
  if (v15)
    sub_22E99A744(a1, a2);
  if (v20)
  {
    if (sub_22F1CF68C(*(_QWORD *)(a1[13] + 32), 0x19F9u, a3, a1[13]) == 1)
    {
      v16 = *((_QWORD *)a2 + 1);
      if (v16 != a4)
      {
        v20 = 0;
        v17 = sub_22EFFA6B0(v12);
        sub_22E9972C0(a1, v17, v16, a3, &v20, 0);
        if (!v20)
        {
          v18 = 48;
          if (*a2 == 103)
            v18 = 40;
          v19 = sub_22EFFA6B0(*(unsigned __int8 **)&a2[v18]);
          sub_22E9972C0(a1, v19, *((_QWORD *)a2 + 1), a3, &v20, 0);
        }
      }
    }
  }
}

uint64_t sub_22E9A60DC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, unsigned int a4, uint64_t a5)
{
  unsigned __int8 *v9;
  uint64_t result;

  v9 = sub_22EFFA6B0(a2);
  if ((*v9 & 0xFE) == 0x66)
    return sub_22E9A5F38(a1, v9, a4, a3);
  result = sub_22E98941C(a1, v9, a4);
  if (*((_QWORD *)v9 + 1) != a3)
    return sub_22E9972C0(a1, v9, a3, a4, a5, 0);
  return result;
}

BOOL sub_22E9A61A0(unsigned __int8 *a1, int a2)
{
  uint64_t v2;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*a1 != 153)
    return 0;
  v2 = *(_QWORD *)(*(_QWORD *)((*((_QWORD *)a1 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + 17) & 4) != 0)
    return 0;
  v4 = sub_22EFFA6B0(a1);
  v5 = a2 ? *(_QWORD *)(*(_QWORD *)((*((_QWORD *)v4 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) : v2;
  v6 = a2 ? v2 : *(_QWORD *)(*(_QWORD *)((*((_QWORD *)v4 + 1) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_BYTE *)(v5 + 16) == 11 ? v5 : 0;
  v8 = *(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (!v8 || *(_DWORD *)(v8 + 16) != 11)
    return 0;
  return (*(_DWORD *)(v8 + 16) & 0xFF80000) == 0x5300000 && v7 != 0 && ((*(_DWORD *)(v7 + 16) >> 19) & 0x1FEu) - 210 < 8;
}

llvm::APInt *sub_22E9A6268(llvm::APInt *this, uint64_t a2, unsigned int a3, char a4)
{
  char v4;
  const llvm::APInt *v8;
  unsigned int v9;
  unint64_t *v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unsigned int v15;
  unint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  char v20;
  unint64_t v21;
  unsigned int v22;
  char v23;
  unint64_t v24;
  unsigned int v25;
  unsigned int v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned int v32;
  char v33;

  v4 = a4;
  *((_DWORD *)this + 2) = 1;
  *(_QWORD *)this = 0;
  *((_BYTE *)this + 12) = 0;
  *((_QWORD *)this + 2) = 0;
  v8 = (llvm::APInt *)((char *)this + 16);
  *((_DWORD *)this + 6) = 1;
  *((_BYTE *)this + 28) = 0;
  if ((_DWORD)a2)
  {
    if (a2 < a3 || (a4 & 1) != 0)
    {
      sub_22E51FAEC(a2, BYTE4(a2) & 1, (uint64_t)&v28);
      if (v30)
        llvm::APInt::zextOrTrunc((llvm::APInt *)&v28);
      else
        llvm::APInt::sextOrTrunc((llvm::APInt *)&v28);
      v19 = v32;
      v20 = v30;
      v21 = v31;
      if (*((_DWORD *)this + 2) >= 0x41u && *(_QWORD *)this)
        MEMORY[0x2348A0E84](*(_QWORD *)this, 0x1000C8000313F17);
      *(_QWORD *)this = v21;
      *((_DWORD *)this + 2) = v19;
      *((_BYTE *)this + 12) = v20;
      if (v29 >= 0x41 && v28)
        MEMORY[0x2348A0E84](v28, 0x1000C8000313F17);
      *((_BYTE *)this + 12) = v4;
      sub_22E51FC38(a2, BYTE4(a2) & 1, (uint64_t)&v28);
      if (v30)
        llvm::APInt::zextOrTrunc((llvm::APInt *)&v28);
      else
        llvm::APInt::sextOrTrunc((llvm::APInt *)&v28);
      v22 = v32;
      v23 = v30;
      v24 = v31;
      if (*((_DWORD *)this + 6) >= 0x41u && *(_QWORD *)v8)
        MEMORY[0x2348A0E84](*(_QWORD *)v8, 0x1000C8000313F17);
      *((_QWORD *)this + 2) = v24;
      *((_DWORD *)this + 6) = v22;
      *((_BYTE *)this + 28) = v23;
      if (v29 >= 0x41 && v28)
        MEMORY[0x2348A0E84](v28, 0x1000C8000313F17);
      *((_BYTE *)this + 28) = v4;
    }
    else
    {
      v32 = a3;
      if (a3 > 0x40)
      {
        v10 = &v31;
        llvm::APInt::initSlowCase((llvm::APInt *)&v31);
        v9 = a3 - 1;
        if (v32 >= 0x41)
          v10 = (unint64_t *)(v31 + 8 * (v9 >> 6));
      }
      else
      {
        v31 = 0;
        LOBYTE(v9) = a3 - 1;
        v10 = &v31;
      }
      *v10 |= 1 << v9;
      v11 = v32;
      v12 = v31;
      if (*((_DWORD *)this + 2) >= 0x41u && *(_QWORD *)this)
        MEMORY[0x2348A0E84](*(_QWORD *)this, 0x1000C8000313F17);
      *(_QWORD *)this = v12;
      *((_DWORD *)this + 2) = v11;
      *((_BYTE *)this + 12) = 0;
      v32 = a3;
      if (a3 > 0x40)
      {
        v14 = &v31;
        llvm::APInt::initSlowCase((llvm::APInt *)&v31);
        LODWORD(v13) = a3 - 1;
        if (v32 >= 0x41)
          v14 = (unint64_t *)(v31 + 8 * (v13 >> 6));
      }
      else
      {
        v13 = 0xFFFFFFFFFFFFFFFFLL >> -(char)a3;
        if (!a3)
          v13 = 0;
        v31 = v13;
        LOBYTE(v13) = a3 - 1;
        v14 = &v31;
      }
      *v14 &= ~(1 << v13);
      v15 = v32;
      v16 = v31;
      if (*((_DWORD *)this + 6) >= 0x41u && *(_QWORD *)v8)
        MEMORY[0x2348A0E84](*(_QWORD *)v8, 0x1000C8000313F17);
      *((_QWORD *)this + 2) = v16;
      *((_DWORD *)this + 6) = v15;
      *((_BYTE *)this + 28) = 0;
    }
  }
  else
  {
    v32 = a3;
    if (a3 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v31);
      v27 = *((_DWORD *)this + 6);
      v33 = v4;
      if (v27 >= 0x41 && *(_QWORD *)v8)
      {
        MEMORY[0x2348A0E84](*(_QWORD *)v8, 0x1000C8000313F17);
        v4 = v33;
      }
    }
    else
    {
      v31 = 0;
      v33 = a4;
    }
    v17 = v31;
    *((_QWORD *)this + 2) = v31;
    v18 = v32;
    *((_DWORD *)this + 6) = v32;
    v32 = 0;
    *((_BYTE *)this + 28) = v4;
    if (*((_DWORD *)this + 2) > 0x40u || v18 > 0x40)
    {
      llvm::APInt::assignSlowCase(this, v8);
      v25 = v32;
      *((_BYTE *)this + 12) = *((_BYTE *)this + 28);
      if (v25 >= 0x41 && v31)
        MEMORY[0x2348A0E84](v31, 0x1000C8000313F17);
    }
    else
    {
      *(_QWORD *)this = v17;
      *((_DWORD *)this + 2) = v18;
      *((_BYTE *)this + 12) = v4;
    }
  }
  return this;
}

uint64_t sub_22E9A6674(llvm::APInt *this, uint64_t a2)
{
  const llvm::APInt *v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  int v10;

  v4 = (llvm::APInt *)((char *)this + 16);
  if (*((_BYTE *)this + 12))
    v5 = llvm::APInt::compare(this, (llvm::APInt *)((char *)this + 16));
  else
    v5 = llvm::APInt::compareSigned(this, (llvm::APInt *)((char *)this + 16));
  if (v5 >= 1)
  {
    v6 = *(_DWORD *)(a2 + 8);
    if (v6 > 0x40)
    {
      if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)a2) != v6)
      {
        if (llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)a2) != v6)
          goto LABEL_9;
        return 72;
      }
    }
    else if (*(_QWORD *)a2)
    {
      if (v6 && *(_QWORD *)a2 != 0xFFFFFFFFFFFFFFFFLL >> -(char)v6)
      {
LABEL_9:
        if (*(_BYTE *)(a2 + 12))
        {
          if ((llvm::APInt::compare((llvm::APInt *)a2, this) & 0x80000000) != 0)
          {
            v7 = llvm::APInt::compare((llvm::APInt *)a2, v4);
            goto LABEL_29;
          }
        }
        else if ((llvm::APInt::compareSigned((llvm::APInt *)a2, this) & 0x80000000) != 0)
        {
          v7 = llvm::APInt::compareSigned((llvm::APInt *)a2, v4);
LABEL_29:
          if (v7 >= 1)
            return 32;
          else
            return 64;
        }
        return 64;
      }
      return 72;
    }
    return 66;
  }
  v8 = sub_22E4634B4(a2, (uint64_t)this);
  if (v8 == -1)
    return 35;
  if (v8 == 1)
    return dword_22F469350[(int)sub_22E4634B4(a2, (uint64_t)v4) + 1];
  if (*((_DWORD *)this + 2) > 0x40u)
    v10 = llvm::APInt::equalSlowCase(this, v4);
  else
    v10 = *(_QWORD *)this == *((_QWORD *)this + 2);
  if (v10)
    return 90;
  else
    return 66;
}

uint64_t sub_22E9A6808(uint64_t result, int a2, int a3, int a4)
{
  int v4;
  int v5;
  const char *v6;
  uint64_t v7;
  int v8;
  int v9;
  int v11;
  int v12;
  char v13;

  if (a2 == 15)
  {
    v8 = 32;
    v9 = 16;
LABEL_32:
    if ((v8 & a3) != 0)
    {
      v6 = "true";
      v7 = 4;
      goto LABEL_37;
    }
    if ((v9 & a3) != 0)
    {
      v6 = "false";
      v7 = 5;
      goto LABEL_37;
    }
LABEL_41:
    v13 = 0;
    *(_BYTE *)result = 0;
    goto LABEL_38;
  }
  if (a2 == 14)
  {
    v8 = 16;
    v9 = 32;
    goto LABEL_32;
  }
  if (a2 != 9)
  {
    v11 = a2 == 10 || a2 == 13;
    if (v11 != a4)
      v8 = 1;
    else
      v8 = 4;
    if (v11 != a4)
      v12 = 8;
    else
      v12 = 2;
    if ((a2 & 0xFFFFFFFE) == 0xC)
      v9 = v8;
    else
      v9 = v12;
    if ((a2 & 0xFFFFFFFE) == 0xC)
      v8 = v12;
    goto LABEL_32;
  }
  if (a4)
    v4 = 1;
  else
    v4 = 4;
  if ((a3 & 0x10) != 0)
  {
    v6 = "'std::strong_ordering::equal'";
    v7 = 29;
    goto LABEL_37;
  }
  if (a4)
    v5 = 4;
  else
    v5 = 1;
  if ((v5 & a3) == 0)
  {
    if ((v4 & a3) != 0)
    {
      v6 = "'std::strong_ordering::greater'";
      v7 = 31;
      goto LABEL_37;
    }
    goto LABEL_41;
  }
  v6 = "'std::strong_ordering::less'";
  v7 = 28;
LABEL_37:
  *(_QWORD *)result = v6;
  *(_QWORD *)(result + 8) = v7;
  v13 = 1;
LABEL_38:
  *(_BYTE *)(result + 16) = v13;
  return result;
}

void sub_22E9A6910(uint64_t a1, unsigned __int8 *a2)
{
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE v27[96];
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v4 = *a2;
  if (a2 && (v4 & 0xFE) == 0x70)
  {
    switch((*(_DWORD *)a2 >> 18) & 0x3F)
    {
      case 0:
      case 1:
      case 7:
      case 8:
        sub_22E9A7824(a1, (uint64_t)a2);
        return;
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
LABEL_7:
        sub_22E9A8548(a1, (uint64_t)a2);
        return;
      case 0x13:
        v14 = *(_DWORD *)(a1 + 1096);
        v15 = *(_DWORD *)(a1 + 24);
        if (v15 >= *(_DWORD *)(a1 + 28))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v15 = *(_DWORD *)(a1 + 24);
        }
        *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v15) = v14 & 0x7FFFFFFF;
        v8 = *(unsigned int *)(a1 + 24);
        v16 = *(_DWORD *)(a1 + 28);
        v17 = v8 + 1;
        *(_DWORD *)(a1 + 24) = v8 + 1;
        v18 = *(_DWORD *)(a1 + 1096);
        if ((int)v8 + 1 >= v16)
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v17 = *(_DWORD *)(a1 + 24);
        }
        *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v17) = v18 & 0x7FFFFFFF;
        v11 = *(unsigned int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v11 + 1;
        v12 = *(_DWORD *)(a1 + 1096);
        v19 = *(_QWORD *)(a1 + 1120);
        v21 = a1;
        v22 = v19;
        v23 = 1;
        *(_QWORD *)(a1 + 1120) = &v21;
        v24 = a1;
        v25 = v27;
        v26 = 0x400000000;
        v28 = *(_QWORD *)(a1 + 1104);
        *(_QWORD *)(a1 + 1104) = &v25;
        *(_DWORD *)(a1 + 1096) = v8;
        sub_22E9A6910(a1, *((_QWORD *)a2 + 2));
        sub_22E9A79E4((uint64_t)&v24);
        LOBYTE(v24) = 0;
        if (!sub_22E9A804C(&v21, *((unsigned __int8 **)a2 + 2), (uint64_t)&v24) || (_BYTE)v24)
          goto LABEL_26;
        goto LABEL_27;
      case 0x14:
        v5 = *(_DWORD *)(a1 + 1096);
        v6 = *(_DWORD *)(a1 + 24);
        if (v6 >= *(_DWORD *)(a1 + 28))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v6 = *(_DWORD *)(a1 + 24);
        }
        *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v6) = v5 & 0x7FFFFFFF;
        v8 = *(unsigned int *)(a1 + 24);
        v7 = *(_DWORD *)(a1 + 28);
        v9 = v8 + 1;
        *(_DWORD *)(a1 + 24) = v8 + 1;
        v10 = *(_DWORD *)(a1 + 1096);
        if ((int)v8 + 1 >= v7)
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v9 = *(_DWORD *)(a1 + 24);
        }
        *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v9) = v10 & 0x7FFFFFFF;
        v11 = *(unsigned int *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v11 + 1;
        v12 = *(_DWORD *)(a1 + 1096);
        v13 = *(_QWORD *)(a1 + 1120);
        v21 = a1;
        v22 = v13;
        v23 = 1;
        *(_QWORD *)(a1 + 1120) = &v21;
        v24 = a1;
        v25 = v27;
        v26 = 0x400000000;
        v28 = *(_QWORD *)(a1 + 1104);
        *(_QWORD *)(a1 + 1104) = &v25;
        *(_DWORD *)(a1 + 1096) = v8;
        sub_22E9A6910(a1, *((_QWORD *)a2 + 2));
        sub_22E9A79E4((uint64_t)&v24);
        LOBYTE(v24) = 0;
        if (!sub_22E9A804C(&v21, *((unsigned __int8 **)a2 + 2), (uint64_t)&v24) || !(_BYTE)v24)
        {
LABEL_26:
          *(_DWORD *)(a1 + 1096) = v11;
          sub_22E9A6910(a1, *((_QWORD *)a2 + 3));
        }
LABEL_27:
        *(_DWORD *)(a1 + 1096) = v12;
        *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v8) |= 0x80000000;
        *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v11) |= 0x80000000;
        v20 = v22;
        *(_QWORD *)(v21 + 1120) = v22;
        if (v20)
          *(_BYTE *)(v20 + 16) &= v23;
        return;
      case 0x15:
      case 0x16:
      case 0x17:
      case 0x18:
      case 0x19:
      case 0x1A:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
        sub_22E9A72C8(a1, (uint64_t)a2);
        return;
      case 0x20:
        sub_22E9A787C(a1, *((_QWORD *)a2 + 2), *((_QWORD *)a2 + 3));
        return;
      default:
        goto LABEL_5;
    }
  }
  if (!a2 || v4 != 233)
LABEL_5:
    __asm { BR              X9 }
  switch((*(_DWORD *)a2 >> 18) & 0x1F)
  {
    case 0:
    case 1:
      sub_22E9A84C8(a1, (uint64_t)a2);
      break;
    case 2:
    case 3:
      sub_22E9A8624(a1, (uint64_t)a2);
      break;
    default:
      goto LABEL_7;
  }
}

uint64_t sub_22E9A72C8(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  uint64_t result;
  unsigned int v14;
  int v15[2];
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 72) + 1) & 8) != 0)
  {
    v7 = *(_DWORD *)(a1 + 1096);
    v8 = *(_DWORD *)(a1 + 24);
    if (v8 >= *(_DWORD *)(a1 + 28))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v8 = *(_DWORD *)(a1 + 24);
    }
    *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v8) = v7 & 0x7FFFFFFF;
    v5 = *(_DWORD *)(a1 + 24);
    v9 = *(_DWORD *)(a1 + 28);
    v10 = v5 + 1;
    *(_DWORD *)(a1 + 24) = v5 + 1;
    v11 = *(_DWORD *)(a1 + 1096);
    if (v5 + 1 >= v9)
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v10 = *(_DWORD *)(a1 + 24);
    }
    *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v10) = v11 & 0x7FFFFFFF;
    v6 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 24) = v6 + 1;
    v4 = *(_DWORD *)(a1 + 1096);
  }
  else
  {
    v4 = *(_DWORD *)(a1 + 1096);
    v5 = v4;
    v6 = v4;
  }
  v12 = sub_22E9A80D8(*(unsigned __int8 **)(a2 + 16), 1);
  if (v12)
    sub_22E9A81A8(a1, v12, a2);
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 72) + 1) & 8) != 0)
  {
    *(_QWORD *)v15 = a1;
    v16[0] = &v17;
    v16[1] = 0x400000000;
    v18 = *(_QWORD *)(a1 + 1104);
    *(_QWORD *)(a1 + 1104) = v16;
    *(_DWORD *)(a1 + 1096) = v5;
    sub_22E9A6910(a1, *(_QWORD *)(a2 + 24));
    sub_22E9A79E4((uint64_t)v15);
    *(_DWORD *)(a1 + 1096) = v6;
    result = sub_22E9A6910(a1, *(_QWORD *)(a2 + 16));
    if (v12)
    {
      if (*(_BYTE *)a2 == 113)
        sub_22E9A8224(a1, v12, a2);
      goto LABEL_18;
    }
LABEL_23:
    *(_DWORD *)(a1 + 1096) = v4;
    goto LABEL_24;
  }
  *(_DWORD *)(a1 + 1096) = v6;
  sub_22E9A6910(a1, *(_QWORD *)(a2 + 16));
  if (!v12)
  {
    *(_DWORD *)(a1 + 1096) = v5;
    result = sub_22E9A6910(a1, *(_QWORD *)(a2 + 24));
    goto LABEL_23;
  }
  if (*(_BYTE *)a2 == 113)
    sub_22E9A8224(a1, v12, a2);
  *(_DWORD *)(a1 + 1096) = v5;
  sub_22E9A6910(a1, *(_QWORD *)(a2 + 24));
LABEL_18:
  *(_DWORD *)(a1 + 1096) = v4;
  if ((**(_QWORD **)(*(_QWORD *)(a1 + 8) + 72) & 0x100) != 0)
    v14 = 1;
  else
    v14 = 2;
  result = sub_22E9A829C(a1, v12, a2, v14);
LABEL_24:
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 72) + 1) & 8) != 0)
  {
    *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v5) |= 0x80000000;
    *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v6) |= 0x80000000;
  }
  return result;
}

uint64_t sub_22E9A7534(uint64_t a1, _DWORD *a2)
{
  int v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t i;
  unsigned int v18;
  _DWORD v19[32];
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v20 = a1;
  v21[0] = &v22;
  v21[1] = 0x400000000;
  v23 = *(_QWORD *)(a1 + 1104);
  *(_QWORD *)(a1 + 1104) = v21;
  if ((*a2 & 0x100000) != 0)
  {
    v18 = 0;
    v3 = *a2;
    v4 = v3 == 119;
    if (v3 == 119)
      v5 = a2;
    else
      v5 = 0;
    v6 = (uint64_t *)(v5 + 12);
    if (v4)
      v7 = v6;
    else
      v7 = (uint64_t *)(a2 + 10);
    v8 = a2[8];
    if ((_DWORD)v8)
    {
      v9 = *(_DWORD *)(a1 + 1096);
      v10 = (_QWORD *)(a1 + 16);
      v11 = 8 * v8;
      do
      {
        v12 = *(unsigned int *)(a1 + 24);
        if (v12 >= *(unsigned int *)(a1 + 28))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v12 = *(unsigned int *)(a1 + 24);
        }
        *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v12) = v9 & 0x7FFFFFFF;
        v13 = *(_DWORD *)(a1 + 24);
        *(_DWORD *)(a1 + 24) = v13 + 1;
        *(_DWORD *)(a1 + 1096) = v13;
        v14 = v18;
        if (v18 >= 0x20uLL)
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v14 = v18;
        }
        v19[v14] = v13;
        ++v18;
        v15 = *v7++;
        sub_22E9A6910(a1, v15);
        v11 -= 8;
      }
      while (v11);
      *(_DWORD *)(a1 + 1096) = v9;
      if (v18)
      {
        for (i = 0; i < v18; *(_DWORD *)(*v10 + 4 * v19[i++]) |= 0x80000000)
          ;
      }
    }
  }
  else
  {
    sub_22E9A8548(a1, (uint64_t)a2);
  }
  return sub_22E9A79E4((uint64_t)&v20);
}

uint64_t sub_22E9A7710(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9[2];
  uint64_t v10;
  _QWORD v11[2];
  int v12;
  uint64_t *v13;
  _QWORD v14[2];
  _QWORD v15[14];
  uint64_t vars0;

  v15[13] = *MEMORY[0x24BDAC8D0];
  v10 = a2;
  result = sub_22EFFA934(a2, *a1);
  if ((result & 1) == 0)
  {
    v13 = a1;
    v14[0] = v15;
    v14[1] = 0x400000000;
    v15[12] = a1[138];
    a1[138] = (uint64_t)v14;
    v5 = a1[1];
    sub_22EFF605C(a2);
    v9[0] = (uint64_t)a1;
    v9[1] = (uint64_t)&v10;
    v12 = v6;
    v11[0] = v5;
    v11[1] = &v12;
    v7 = *(_QWORD *)off_255E04E38();
    if (!v7)
      goto LABEL_6;
    v8 = (uint64_t)&vars0 - v7;
    if (v8 < 0)
      v8 = -v8;
    if ((unint64_t)(v8 - 8126464) <= 0x40000)
      sub_22F4247F4((uint64_t)sub_22E907F64, (uint64_t)v11, (uint64_t)sub_22E9A892C, (uint64_t)v9);
    else
LABEL_6:
      sub_22E9A892C(v9);
    return sub_22E9A79E4((uint64_t)&v13);
  }
  return result;
}

uint64_t sub_22E9A7824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 72) + 1) & 8) != 0)
    return sub_22E9A787C(a1, v4, *(_QWORD *)(a2 + 24));
  sub_22E9A6910(a1, v4);
  return sub_22E9A6910(a1, *(_QWORD *)(a2 + 24));
}

uint64_t sub_22E9A787C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  int v15[2];
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v6 = *(_DWORD *)(a1 + 1096);
  v7 = *(_DWORD *)(a1 + 24);
  if (v7 >= *(_DWORD *)(a1 + 28))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v7 = *(_DWORD *)(a1 + 24);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v7) = v6 & 0x7FFFFFFF;
  v9 = *(unsigned int *)(a1 + 24);
  v8 = *(_DWORD *)(a1 + 28);
  v10 = v9 + 1;
  *(_DWORD *)(a1 + 24) = v9 + 1;
  v11 = *(_DWORD *)(a1 + 1096);
  if ((int)v9 + 1 >= v8)
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v10 = *(_DWORD *)(a1 + 24);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v10) = v11 & 0x7FFFFFFF;
  v12 = *(unsigned int *)(a1 + 24);
  *(_DWORD *)(a1 + 24) = v12 + 1;
  v13 = *(_DWORD *)(a1 + 1096);
  *(_QWORD *)v15 = a1;
  v16[0] = &v17;
  v16[1] = 0x400000000;
  v18 = *(_QWORD *)(a1 + 1104);
  *(_QWORD *)(a1 + 1104) = v16;
  *(_DWORD *)(a1 + 1096) = v9;
  sub_22E9A6910(a1, a2);
  sub_22E9A79E4((uint64_t)v15);
  *(_DWORD *)(a1 + 1096) = v12;
  result = sub_22E9A6910(a1, a3);
  *(_DWORD *)(a1 + 1096) = v13;
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v9) |= 0x80000000;
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v12) |= 0x80000000;
  return result;
}

uint64_t sub_22E9A79E4(uint64_t a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(char **)(a1 + 8);
  v3 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v3)
  {
    v4 = 24 * v3;
    do
    {
      v5 = sub_22E9A7A94(*(_QWORD *)a1 + 64, (uint64_t *)&v2[v4 - 24]);
      sub_22E9A7CF4(*(_QWORD *)a1, *(_QWORD *)&v2[v4 - 24], v5, *(_QWORD *)(v5 + 32), 1u);
      v6 = *(_QWORD *)&v2[v4 - 16];
      *(_DWORD *)(v5 + 40) = *(_DWORD *)&v2[v4 - 8];
      *(_QWORD *)(v5 + 32) = v6;
      v4 -= 24;
    }
    while (v4);
    v2 = *(char **)(a1 + 8);
  }
  *(_QWORD *)(*(_QWORD *)a1 + 1104) = *(_QWORD *)(a1 + 120);
  if (v2 != (char *)(a1 + 24))
    free(v2);
  return a1;
}

uint64_t sub_22E9A7A94(uint64_t a1, uint64_t *a2)
{
  char v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t v14;
  int v15;
  llvm *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[1024];
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v32 = 0;
  v4 = sub_22E9A7E7C(a1, *a2, &v32);
  v5 = v32;
  if ((v4 & 1) != 0)
    return v5 + 8;
  v33 = v32;
  v6 = *(_DWORD *)a1;
  v7 = *(_DWORD *)a1 >> 1;
  v8 = *(_DWORD *)a1 & 1;
  if (v8)
    v9 = 16;
  else
    v9 = *(_DWORD *)(a1 + 16);
  if (4 * v7 + 4 >= 3 * v9)
  {
    v9 *= 2;
    goto LABEL_14;
  }
  if (v9 + ~v7 - *(_DWORD *)(a1 + 4) <= v9 >> 3)
  {
LABEL_14:
    if (v9 >= 0x11)
    {
      v13 = (v9 - 1) | ((unint64_t)(v9 - 1) >> 1);
      v14 = v13 | (v13 >> 2) | ((v13 | (v13 >> 2)) >> 4);
      v15 = ((v14 | (v14 >> 8)) >> 16) | v14 | (v14 >> 8);
      if ((v15 + 1) > 0x40)
        v9 = v15 + 1;
      else
        v9 = 64;
    }
    if (v8)
    {
      v18 = 0;
      v19 = v34;
      do
      {
        v20 = a1 + v18;
        v21 = *(_QWORD *)(a1 + v18 + 8);
        if ((v21 | 0x1000) != 0xFFFFFFFFFFFFF000)
        {
          *(_QWORD *)v19 = v21;
          v22 = *(_OWORD *)(v20 + 16);
          v23 = *(_OWORD *)(v20 + 32);
          v24 = *(_OWORD *)(v20 + 48);
          *((_QWORD *)v19 + 7) = *(_QWORD *)(v20 + 64);
          *(_OWORD *)(v19 + 40) = v24;
          *(_OWORD *)(v19 + 24) = v23;
          *(_OWORD *)(v19 + 8) = v22;
          v19 += 64;
        }
        v18 += 64;
      }
      while (v18 != 1024);
      if (v9 > 0x10)
      {
        *(_DWORD *)a1 &= ~1u;
        v25 = v9;
        v26 = v19;
        v27 = MEMORY[0x23489D23C]((unint64_t)v9 << 6, 8);
        v19 = v26;
        *(_QWORD *)(a1 + 8) = v27;
        *(_QWORD *)(a1 + 16) = v25;
      }
      sub_22E9A7F28(a1, (uint64_t)v34, (uint64_t)v19);
    }
    else
    {
      v16 = *(llvm **)(a1 + 8);
      v17 = *(unsigned int *)(a1 + 16);
      if (v9 > 0x10)
      {
        v28 = v9;
        v29 = *(unsigned int *)(a1 + 16);
        v30 = MEMORY[0x23489D23C]((unint64_t)v9 << 6, 8);
        v17 = v29;
        *(_QWORD *)(a1 + 8) = v30;
        *(_QWORD *)(a1 + 16) = v28;
      }
      else
      {
        *(_DWORD *)a1 = v6 | 1;
      }
      v31 = (void *)(v17 << 6);
      sub_22E9A7F28(a1, (uint64_t)v16, (uint64_t)v16 + 64 * v17);
      llvm::deallocate_buffer(v16, v31);
    }
    sub_22E9A7E7C(a1, *a2, &v33);
    v6 = *(_DWORD *)a1;
    v5 = v33;
    v8 = *(_DWORD *)a1 & 1;
  }
  *(_DWORD *)a1 = (v6 & 0xFFFFFFFE | v8) + 2;
  if (*(_QWORD *)v5 != -4096)
    --*(_DWORD *)(a1 + 4);
  v10 = 0;
  *(_QWORD *)v5 = *a2;
  do
  {
    v11 = v5 + v10;
    *(_QWORD *)(v11 + 8) = 0;
    *(_DWORD *)(v11 + 16) = 0;
    v10 += 16;
  }
  while (v10 != 48);
  *(_BYTE *)(v5 + 56) = 0;
  return v5 + 8;
}

uint64_t sub_22E9A7CF4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t *v15;
  unsigned int v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  BOOL v21;
  unint64_t *v22;
  char *v23;
  unint64_t *v24;
  uint64_t v25;
  __int128 v26;

  v9 = result;
  v10 = a5;
  v11 = (_QWORD *)(a3 + 16 * a5);
  if (!*v11)
    goto LABEL_17;
  v12 = (_QWORD *)(result + 16);
  v13 = *(unsigned int *)(a3 + 16 * a5 + 8);
  v14 = sub_22E9A8000((_QWORD *)(result + 16), *(unsigned int *)(result + 1096));
  for (result = sub_22E9A8000((_QWORD *)(v9 + 16), v13);
        v14 > result;
  if (v14 < result)
  {
LABEL_17:
    if (a5 == 2)
    {
      v15 = *(unint64_t **)(v9 + 1104);
      if (v15)
      {
        v25 = a2;
        v26 = *(_OWORD *)v11;
        v16 = *((_DWORD *)v15 + 2);
        v17 = *v15;
        v18 = (char *)&v25;
        if (v16 >= *((_DWORD *)v15 + 3))
        {
          v21 = v17 + 24 * v16 > (unint64_t)&v25;
          if (v17 <= (unint64_t)&v25 && v21)
          {
            v23 = (char *)&v25 - v17;
            v24 = v15;
            result = llvm::SmallVectorBase<unsigned int>::grow_pod();
            v15 = v24;
            v17 = *v24;
            v18 = &v23[*v24];
          }
          else
          {
            v22 = v15;
            result = llvm::SmallVectorBase<unsigned int>::grow_pod();
            v15 = v22;
            v17 = *v22;
            v18 = (char *)&v25;
          }
        }
        v19 = v17 + 24 * *((unsigned int *)v15 + 2);
        v20 = *(_OWORD *)v18;
        *(_QWORD *)(v19 + 16) = *((_QWORD *)v18 + 2);
        *(_OWORD *)v19 = v20;
        ++*((_DWORD *)v15 + 2);
      }
    }
    *v11 = a4;
    *(_DWORD *)(a3 + 16 * v10 + 8) = *(_DWORD *)(v9 + 1096);
  }
  return result;
}

uint64_t sub_22E9A7E7C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  int v11;
  BOOL v12;
  int v13;

  v3 = a1 + 8;
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    v4 = 16;
  }
  else
  {
    v4 = *(_DWORD *)(a1 + 16);
    if (!v4)
    {
      v7 = 0;
      result = 0;
      goto LABEL_7;
    }
    v3 = *(_QWORD *)(a1 + 8);
  }
  v5 = v4 - 1;
  v6 = (v4 - 1) & ((a2 >> 4) ^ (a2 >> 9));
  v7 = (_QWORD *)(v3 + (v6 << 6));
  v8 = *v7;
  if (*v7 == a2)
  {
    result = 1;
  }
  else
  {
    v10 = 0;
    v11 = 1;
    result = 1;
    while (v8 != -4096)
    {
      if (v10)
        v12 = 0;
      else
        v12 = v8 == -8192;
      if (v12)
        v10 = v7;
      v13 = v6 + v11++;
      v6 = v13 & v5;
      v7 = (_QWORD *)(v3 + (v6 << 6));
      v8 = *v7;
      if (*v7 == a2)
        goto LABEL_7;
    }
    result = 0;
    if (v10)
      v7 = v10;
  }
LABEL_7:
  *a3 = v7;
  return result;
}

uint64_t sub_22E9A7F28(uint64_t result, uint64_t a2, uint64_t a3)
{
  _DWORD *v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  _QWORD *v15;

  v5 = (_DWORD *)result;
  v6 = *(_DWORD *)result;
  *(_QWORD *)result = *(_DWORD *)result & 1;
  if ((v6 & 1) != 0)
  {
    v8 = (_QWORD *)(result + 8);
    v9 = (_QWORD *)(result + 1032);
  }
  else
  {
    v7 = *(unsigned int *)(result + 16);
    if (!(_DWORD)v7)
      goto LABEL_10;
    v8 = *(_QWORD **)(result + 8);
    v9 = &v8[8 * v7];
  }
  do
  {
    *v8 = -4096;
    v8 += 8;
  }
  while (v8 != v9);
LABEL_10:
  while (a2 != a3)
  {
    v10 = *(_QWORD *)a2;
    if ((*(_QWORD *)a2 | 0x1000) != 0xFFFFFFFFFFFFF000)
    {
      v15 = 0;
      result = sub_22E9A7E7C((uint64_t)v5, v10, &v15);
      v11 = v15;
      *v15 = *(_QWORD *)a2;
      v12 = *(_QWORD *)(a2 + 56);
      v13 = *(_OWORD *)(a2 + 40);
      v14 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(v11 + 1) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(v11 + 3) = v14;
      *(_OWORD *)(v11 + 5) = v13;
      v11[7] = v12;
      *v5 += 2;
    }
    a2 += 64;
  }
  return result;
}

uint64_t sub_22E9A8000(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  int v4;

  if ((*(_DWORD *)(*a1 + 4 * a2) & 0x80000000) != 0)
  {
    v3 = a2;
    v4 = sub_22E9A8000();
    a2 = v4 & 0x7FFFFFFF;
    *(_DWORD *)(*a1 + 4 * v3) = *(_DWORD *)(*a1 + 4 * v3) & 0x80000000 | v4 & 0x7FFFFFFF;
  }
  return a2;
}

uint64_t sub_22E9A804C(_BYTE *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4;
  char v5;
  uint64_t result;

  if (!a1[16] || (a2[2] & 1) != 0)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v5 = (*(_DWORD *)(*(_QWORD *)(v4 + 3688) + 576 * *(unsigned int *)(v4 + 3696) - 576) & 0xFFFFFFFE) == 4
    || *(_BYTE *)(v4 + 3209) != 0;
  result = sub_22F005310(a2, a3, *(_QWORD *)(v4 + 88), v5);
  a1[16] = result;
  return result;
}

uint64_t sub_22E9A80D8(unsigned __int8 *a1, char a2)
{
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  int v5;
  int v6;
  unsigned __int8 *v7;

  while (1)
  {
    while (1)
    {
      v3 = sub_22EFFBBCC(a1);
      v4 = v3;
      v5 = *v3;
      if (v5 != 233)
        break;
      if ((a2 & 1) == 0 || (*(_DWORD *)v3 & 0x780000) != 0x80000)
        return 0;
LABEL_9:
      a1 = (unsigned __int8 *)*((_QWORD *)v3 + 2);
      a2 = 1;
    }
    if ((v5 & 0xFE) != 0x70)
      break;
    v6 = (*(_DWORD *)v3 >> 18) & 0x3F;
    if (v6 != 32)
    {
      if ((a2 & ((v6 - 21) < 0xB)) != 1)
        return 0;
      goto LABEL_9;
    }
    a1 = (unsigned __int8 *)*((_QWORD *)v3 + 3);
  }
  if (v5 == 161)
  {
    v7 = v3 + 16;
  }
  else
  {
    if (v5 != 188 || *sub_22EFFBBCC(*((unsigned __int8 **)v3 + 2)) != 133)
      return 0;
    v7 = v4 + 24;
  }
  return *(_QWORD *)v7;
}

uint64_t sub_22E9A81A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  v8 = a2;
  v6 = sub_22E9A7A94(a1 + 64, &v8);
  sub_22E9A8320(a1, a2, v6, a3, 1u, 1);
  return sub_22E9A8320(a1, a2, v6, a3, 0, 0);
}

uint64_t sub_22E9A8224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v8;

  v8 = a2;
  v6 = sub_22E9A7A94(a1 + 64, &v8);
  sub_22E9A8320(a1, a2, v6, a3, 2u, 0);
  return sub_22E9A7CF4(a1, a2, v6, a3, 0);
}

uint64_t sub_22E9A829C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v8;
  uint64_t v10;

  v10 = a2;
  v8 = sub_22E9A7A94(a1 + 64, &v10);
  sub_22E9A8320(a1, a2, v8, a3, 2u, 1);
  return sub_22E9A7CF4(a1, a2, v8, a3, a4);
}

uint64_t sub_22E9A8320(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6)
{
  uint64_t *v8;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unsigned int v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  unsigned int v25;
  unint64_t v26;
  uint64_t v27;
  int v28;
  _QWORD v29[3];

  v29[2] = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a3 + 48))
  {
    v8 = (uint64_t *)(a3 + 16 * a5);
    if (*v8)
    {
      v12 = result;
      v13 = (_QWORD *)(result + 16);
      v14 = *(unsigned int *)(a3 + 16 * a5 + 8);
      v15 = sub_22E9A8000((_QWORD *)(result + 16), *(unsigned int *)(result + 1096));
      for (result = sub_22E9A8000(v13, v14); v15 > result; v15 = *(_DWORD *)(*v13 + 4 * v15) & 0x7FFFFFFF)
        ;
      if (v15 >= result)
      {
        v16 = a5 == 0;
        if (a5)
          v17 = a4;
        else
          v17 = *v8;
        if (v16)
          v18 = a4;
        else
          v18 = *v8;
        v19 = *(_QWORD *)(v12 + 8);
        sub_22EFF605C(v18);
        v21 = v20;
        v29[0] = v18;
        v29[1] = v17;
        if (a6)
          v22 = 7109;
        else
          v22 = 7110;
        v27 = *(_QWORD *)(v19 + 88) + 2128;
        v28 = v22;
        v23 = (_BYTE *)sub_22E3B8AAC(v27);
        v26 = (unint64_t)v23;
        v24 = *v23;
        v23[v24 + 1] = 11;
        *v23 = v24 + 1;
        *(_QWORD *)&v23[8 * v24 + 16] = a2;
        sub_22EFF605C(v17);
        sub_22E4D6448((uint64_t)(v23 + 336), v25 | ((unint64_t)v25 << 32), 1);
        result = sub_22EB52944(v19, v21, v29, 2uLL, (uint64_t *)&v26);
        if (v26)
        {
          result = v27;
          if (v27)
            result = sub_22E3BB10C(v27, v26);
        }
        *(_BYTE *)(a3 + 48) = 1;
      }
    }
  }
  return result;
}

void sub_22E9A84C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_22E9A80D8(*(unsigned __int8 **)(a2 + 16), 1);
  if (v4)
  {
    v5 = v4;
    sub_22E9A81A8(a1, v4, a2);
    sub_22E9A6910(a1, *(_QWORD *)(a2 + 16));
    sub_22E9A829C(a1, v5, a2, 2u);
  }
  else
  {
    sub_22E9A8548(a1, a2);
  }
}

void sub_22E9A8548(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  _QWORD *v8;
  uint64_t v9[2];
  uint64_t v10;
  uint64_t v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_22F0D492C(a2);
  *(_OWORD *)v9 = *(_OWORD *)v11;
  v3 = v13;
  v10 = v12;
  v4 = v14;
  v6 = v11[1];
  v5 = (uint64_t *)v11[0];
  if (v11[0] != v13 || v11[1] != v14)
  {
    do
    {
      v8 = v5;
      if ((v6 & 3) != 0)
      {
        if ((v6 & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v8 = (_QWORD *)((v6 & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v8 = (_QWORD *)sub_22F3AC1A8(*v5);
      }
      if (*v8)
        sub_22E9A6910(a1, *v8);
      if ((v6 & 3) != 0)
      {
        if (v6 >= 4)
          sub_22F0D8720((uint64_t)v9);
        else
          sub_22F3F2FE0((uint64_t)v9, 1);
      }
      else
      {
        v9[0] = (uint64_t)(v5 + 1);
      }
      v5 = (uint64_t *)v9[0];
      v6 = v9[1];
    }
    while (v9[0] != v3 || v9[1] != v4);
  }
}

void sub_22E9A8624(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v4 = sub_22E9A80D8(*(unsigned __int8 **)(a2 + 16), 1);
  if (v4)
  {
    v5 = v4;
    sub_22E9A81A8(a1, v4, a2);
    sub_22E9A6910(a1, *(_QWORD *)(a2 + 16));
    if ((**(_QWORD **)(*(_QWORD *)(a1 + 8) + 72) & 0x100) != 0)
      v6 = 1;
    else
      v6 = 2;
    sub_22E9A829C(a1, v5, a2, v6);
  }
  else
  {
    sub_22E9A8548(a1, a2);
  }
}

uint64_t sub_22E9A86B8(uint64_t a1, _BYTE *a2)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v4 = *(_DWORD *)(a1 + 1096);
  v5 = *(_DWORD *)(a1 + 24);
  if (v5 >= *(_DWORD *)(a1 + 28))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v5 = *(_DWORD *)(a1 + 24);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v5) = v4 & 0x7FFFFFFF;
  v7 = *(unsigned int *)(a1 + 24);
  v6 = *(_DWORD *)(a1 + 28);
  v8 = v7 + 1;
  *(_DWORD *)(a1 + 24) = v7 + 1;
  v9 = *(_DWORD *)(a1 + 1096);
  if ((int)v7 + 1 >= v6)
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v8 = *(_DWORD *)(a1 + 24);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v8) = v9 & 0x7FFFFFFF;
  v11 = *(unsigned int *)(a1 + 24);
  v10 = *(_DWORD *)(a1 + 28);
  v12 = v11 + 1;
  *(_DWORD *)(a1 + 24) = v11 + 1;
  v13 = *(_DWORD *)(a1 + 1096);
  if ((int)v11 + 1 >= v10)
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod();
    v12 = *(_DWORD *)(a1 + 24);
  }
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v12) = v13 & 0x7FFFFFFF;
  v14 = *(unsigned int *)(a1 + 24);
  *(_DWORD *)(a1 + 24) = v14 + 1;
  v15 = *(_DWORD *)(a1 + 1096);
  v16 = *(_QWORD *)(a1 + 1120);
  v24 = a1;
  v25 = v16;
  LOBYTE(v26) = 1;
  *(_QWORD *)(a1 + 1120) = &v24;
  v27 = a1;
  v28[0] = &v29;
  v28[1] = 0x400000000;
  v30 = *(_QWORD *)(a1 + 1104);
  *(_QWORD *)(a1 + 1104) = v28;
  *(_DWORD *)(a1 + 1096) = v7;
  if (*a2 == 103)
    v17 = 24;
  else
    v17 = 32;
  sub_22E9A6910(a1, *(_QWORD *)&a2[v17]);
  sub_22E9A79E4((uint64_t)&v27);
  LOBYTE(v27) = 0;
  if (*a2 == 103)
    v18 = 24;
  else
    v18 = 32;
  result = sub_22E9A804C(&v24, *(unsigned __int8 **)&a2[v18], (uint64_t)&v27);
  if ((_BYTE)v27)
    v20 = result;
  else
    v20 = 0;
  if (!(_DWORD)result || (_BYTE)v27)
  {
    *(_DWORD *)(a1 + 1096) = v11;
    v21 = 40;
    if (*a2 == 103)
      v21 = 32;
    result = sub_22E9A6910(a1, *(_QWORD *)&a2[v21]);
  }
  if ((v20 & 1) == 0)
  {
    *(_DWORD *)(a1 + 1096) = v14;
    v22 = 48;
    if (*a2 == 103)
      v22 = 40;
    result = sub_22E9A6910(a1, *(_QWORD *)&a2[v22]);
  }
  *(_DWORD *)(a1 + 1096) = v15;
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v7) |= 0x80000000;
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v11) |= 0x80000000;
  *(_DWORD *)(*(_QWORD *)(a1 + 16) + 4 * v14) |= 0x80000000;
  v23 = v25;
  *(_QWORD *)(v24 + 1120) = v25;
  if (v23)
    *(_BYTE *)(v23 + 16) &= v26;
  return result;
}

uint64_t sub_22E9A892C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  uint64_t result;
  unsigned int *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  int v18[2];
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  v3 = *(_QWORD *)(*(_QWORD *)(*a1 + 8) + 72);
  if ((*(_BYTE *)(v3 + 1) & 8) != 0)
  {
    v7 = *(_DWORD *)(v2 + 1096);
    v8 = *(_DWORD *)(v2 + 24);
    if (v8 >= *(_DWORD *)(v2 + 28))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v8 = *(_DWORD *)(v2 + 24);
    }
    *(_DWORD *)(*(_QWORD *)(v2 + 16) + 4 * v8) = v7 & 0x7FFFFFFF;
    v5 = *(_DWORD *)(v2 + 24);
    v9 = *(_DWORD *)(v2 + 28);
    v10 = v5 + 1;
    *(_DWORD *)(v2 + 24) = v5 + 1;
    v11 = *(_DWORD *)(v2 + 1096);
    if (v5 + 1 >= v9)
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v10 = *(_DWORD *)(v2 + 24);
    }
    *(_DWORD *)(*(_QWORD *)(v2 + 16) + 4 * v10) = v11 & 0x7FFFFFFF;
    v6 = *(_DWORD *)(v2 + 24);
    *(_DWORD *)(v2 + 24) = v6 + 1;
    v4 = *(_DWORD *)(v2 + 1096);
    v3 = *(_QWORD *)(*(_QWORD *)(v2 + 8) + 72);
  }
  else
  {
    v4 = *(_DWORD *)(v2 + 1096);
    v5 = v4;
    v6 = v4;
  }
  *(_DWORD *)(v2 + 1096) = v5;
  if ((*(_BYTE *)(v3 + 1) & 8) != 0)
  {
    *(_QWORD *)v18 = v2;
    v19[0] = &v20;
    v19[1] = 0x400000000;
    v21 = *(_QWORD *)(v2 + 1104);
    *(_QWORD *)(v2 + 1104) = v19;
    sub_22E9A6910(v2, *(_QWORD *)(*(_QWORD *)a1[1] + *(unsigned __int8 *)(*(_QWORD *)a1[1] + 3)));
    result = sub_22E9A79E4((uint64_t)v18);
  }
  else
  {
    result = sub_22E9A6910(v2, *(_QWORD *)(*(_QWORD *)a1[1] + *(unsigned __int8 *)(*(_QWORD *)a1[1] + 3)));
  }
  *(_DWORD *)(v2 + 1096) = v6;
  v13 = *(unsigned int **)a1[1];
  v14 = v13[4];
  if ((_DWORD)v14)
  {
    v15 = (uint64_t *)((char *)&v13[2 * (((unint64_t)*v13 >> 18) & 1) + 2] + ((unint64_t)*v13 >> 24));
    v16 = 8 * v14;
    do
    {
      v17 = *v15++;
      result = sub_22E9A6910(v2, v17);
      v16 -= 8;
    }
    while (v16);
  }
  *(_DWORD *)(v2 + 1096) = v4;
  if ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 72) + 1) & 8) != 0)
  {
    *(_DWORD *)(*(_QWORD *)(v2 + 16) + 4 * v5) |= 0x80000000;
    *(_DWORD *)(*(_QWORD *)(v2 + 16) + 4 * v6) |= 0x80000000;
  }
  return result;
}

uint64_t sub_22E9A8B28(int **a1)
{
  int *v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26[2];
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v2 = a1[1];
  v3 = **a1;
  if (v3 == 3)
  {
    v4 = v2[274];
    v5 = v2[6];
    if (v5 >= v2[7])
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v5 = v2[6];
    }
    *(_DWORD *)(*((_QWORD *)v2 + 2) + 4 * v5) = v4 & 0x7FFFFFFF;
    v7 = v2[6];
    v6 = v2[7];
    v8 = v7 + 1;
    v2[6] = v7 + 1;
    v9 = v2[274];
    if ((int)v7 + 1 >= v6)
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v8 = v2[6];
    }
    *(_DWORD *)(*((_QWORD *)v2 + 2) + 4 * v8) = v9 & 0x7FFFFFFF;
    v10 = v2[6];
    v2[6] = v10 + 1;
    v11 = v2[274];
    v12 = *(unsigned int **)a1[2];
    v13 = (unint64_t)&v12[2 * (((unint64_t)*v12 >> 18) & 1)] + ((unint64_t)*v12 >> 24);
    v15 = *(_QWORD *)(v13 + 8);
    v14 = v13 + 8;
    v16 = v12[4] - 1;
    v2[274] = v7;
    *(_QWORD *)v26 = v2;
    v27[0] = &v28;
    v27[1] = 0x400000000;
    v29 = *((_QWORD *)v2 + 138);
    *((_QWORD *)v2 + 138) = v27;
    sub_22E9A6910(v2, v15);
    result = sub_22E9A79E4((uint64_t)v26);
    v2[274] = v10;
    if ((_DWORD)v16)
    {
      v18 = (uint64_t *)(v14 + 8);
      v19 = 8 * v16;
      do
      {
        v20 = *v18++;
        result = sub_22E9A6910(v2, v20);
        v19 -= 8;
      }
      while (v19);
    }
    v2[274] = v11;
    *(_DWORD *)(*((_QWORD *)v2 + 2) + 4 * v7) |= 0x80000000;
    *(_DWORD *)(*((_QWORD *)v2 + 2) + 4 * v10) |= 0x80000000;
  }
  else
  {
    v21 = *(_QWORD *)a1[2]
        + ((unint64_t)**(unsigned int **)a1[2] >> 24)
        + 8 * (((unint64_t)**(unsigned int **)a1[2] >> 18) & 1);
    v23 = *(_QWORD *)(v21 + 8);
    v22 = *(_QWORD *)(v21 + 16);
    if (v3 == 2)
      v24 = v22;
    else
      v24 = v23;
    if (v3 == 2)
      v25 = v23;
    else
      v25 = v22;
    return sub_22E9A787C((uint64_t)a1[1], v24, v25);
  }
  return result;
}

void sub_22E9A8D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((*(_DWORD *)a2 & 0x1FC0000) == 0x100000 && (v4 = sub_22E9A80D8(*(unsigned __int8 **)(a2 + 16), 0)) != 0)
  {
    v5 = v4;
    v7 = v4;
    v6 = sub_22E9A7A94(a1 + 64, &v7);
    sub_22E9A8320(a1, v5, v6, a2, 1u, 0);
    sub_22E9A8548(a1, a2);
    sub_22E9A8224(a1, v5, a2);
  }
  else
  {
    sub_22E9A8548(a1, a2);
  }
}

void sub_22E9A8DDC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24[2];
  char v25;

  while (1)
  {
    while (1)
    {
      do
      {
        v6 = (uint64_t)a2;
        LODWORD(v7) = *a2;
        if (v7 > 0xD5)
        {
          if ((_DWORD)v7 == 233)
          {
            LODWORD(v7) = *(_DWORD *)a2;
            if ((*(_DWORD *)a2 & 0x7C0000) != 0x300000)
              goto LABEL_47;
            v8 = a2 + 16;
          }
          else
          {
            if ((_DWORD)v7 != 214)
              break;
            v8 = a2 + 24;
          }
        }
        else if ((_DWORD)v7 == 155)
        {
          if ((**((_DWORD **)a2 + 2) & 0x18000) != 0)
            goto LABEL_50;
          v8 = a2 + 24;
          if (!a2[48])
            v8 = a2 + 32;
          LOBYTE(v7) = -101;
        }
        else
        {
          if ((_DWORD)v7 != 176)
            break;
          v7 = *((unsigned int *)a2 + 5);
          if ((_DWORD)v7 == -1)
            goto LABEL_50;
          v8 = &a2[8 * v7 + 40];
          LOBYTE(v7) = -80;
        }
        a2 = *(unsigned __int8 **)v8;
      }
      while (*(_QWORD *)v8 != v6);
      if (v7 > 0x95u)
      {
        if (v7 != 150 && v7 != 153)
        {
          if (v7 == 233)
          {
            LODWORD(v7) = *(_DWORD *)v6;
LABEL_47:
            if ((v7 & 0x7C0000) == 0x100000)
            {
              v13 = *(unsigned __int8 **)(v6 + 16);
              goto LABEL_49;
            }
          }
          goto LABEL_50;
        }
        goto LABEL_22;
      }
      if (v7 == 112)
        break;
      if (v7 != 144)
      {
        if (v7 == 133)
        {
          v20 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFF0));
          v21 = sub_22F10C2A4(*(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF0));
          if (v21)
          {
            if ((*(_DWORD *)(v21 + 28) & 0x7Fu) - 35 >= 3)
              v22 = 0;
            else
              v22 = v21;
          }
          else
          {
            v22 = 0;
          }
          *(_QWORD *)a1 = *(_QWORD *)(*(_QWORD *)(sub_22F0C975C(a3, v22) + 72) + 8);
          *(_QWORD *)(a1 + 8) = 0;
          goto LABEL_57;
        }
        goto LABEL_50;
      }
LABEL_22:
      a2 = *(unsigned __int8 **)(v6 + 16);
      v9 = (*(_DWORD *)v6 >> 18) & 0x7F;
      if (v9 != 5)
      {
        if ((v9 - 7) >= 2)
        {
          if (v9 == 12)
          {
            v13 = *(unsigned __int8 **)(v6 + 16);
LABEL_49:
            sub_22E9A90EC(a1, v13, a3);
            return;
          }
        }
        else
        {
          sub_22E9A8DDC(v24, *(_QWORD *)(v6 + 16), a3);
          if (v25)
          {
            v11 = sub_22F10ACF8(*(_QWORD *)(*((_QWORD *)a2 + 1) & 0xFFFFFFFFFFFFFFF0));
            *(_QWORD *)a1 = sub_22E9A961C(v6, v11, v24[0], v24[1], a3);
            *(_QWORD *)(a1 + 8) = v12;
LABEL_57:
            *(_BYTE *)(a1 + 16) = 1;
            return;
          }
        }
LABEL_50:
        *(_BYTE *)a1 = 0;
        *(_BYTE *)(a1 + 16) = 0;
        return;
      }
    }
    v10 = (*(_DWORD *)v6 >> 18) & 0x3F;
    if (v10 != 32)
      break;
    a2 = *(unsigned __int8 **)(v6 + 24);
  }
  if ((v10 - 5) > 1)
    goto LABEL_50;
  v15 = *(_QWORD *)(v6 + 16);
  v14 = *(_QWORD *)(v6 + 24);
  if (v10 != 5)
    goto LABEL_52;
  v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_DWORD *)(v16 + 16);
  if (v16)
    v18 = v17 == 11;
  else
    v18 = 0;
  if (v18)
  {
    if (((*(_DWORD *)(v16 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
      goto LABEL_59;
    goto LABEL_52;
  }
  if (!v16 || v17 != 44)
  {
    if (v17 != 9)
      goto LABEL_59;
    goto LABEL_52;
  }
  v19 = sub_22F114198(*(_QWORD *)(v16 + 24));
  if ((*(_BYTE *)(v19 + 74) & 1) != 0 || *(_QWORD *)(v19 + 128) >= 8uLL)
  {
LABEL_52:
    v23 = v14;
    goto LABEL_60;
  }
LABEL_59:
  v23 = v15;
  v15 = v14;
LABEL_60:
  sub_22E9A976C(a1, v15, v23, v10 == 6, a3);
}

void sub_22E9A90EC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  unint64_t v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  unint64_t v31;
  int v32;
  unsigned __int8 v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;

  if (!a2)
  {
LABEL_38:
    v7 = 0;
LABEL_39:
    v12 = (uint64_t *)(v7 + 24);
    v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 24) + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
    v14 = *(_DWORD *)(v13 + 16);
    if (v13)
      v15 = v14 == 11;
    else
      v15 = 0;
    if (v15)
    {
      v20 = ((*(_DWORD *)(v13 + 16) >> 19) & 0x1FE) - 166;
      v18 = (uint64_t *)(v7 + 16);
      v19 = (uint64_t *)(v7 + 24);
      if (v20 >= 0x14)
        goto LABEL_53;
    }
    else if (v13 && v14 == 44)
    {
      v16 = sub_22F114198(*(_QWORD *)(v13 + 24));
      if ((*(_BYTE *)(v16 + 74) & 1) == 0 && *(_QWORD *)(v16 + 128) <= 7uLL)
      {
        v18 = (uint64_t *)(v7 + 16);
        v19 = (uint64_t *)(v7 + 24);
        goto LABEL_53;
      }
      v17 = sub_22F114198(*(_QWORD *)(v13 + 24));
      v18 = (uint64_t *)(v7 + 16);
      v19 = (uint64_t *)(v7 + 24);
      if ((*(_QWORD *)(v17 + 72) & 0x8000000000) != 0)
      {
LABEL_53:
        v21 = *v19;
        v22 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*v12 + 8) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
        v23 = *(_DWORD *)(v22 + 16);
        if (v22)
          v24 = v23 == 11;
        else
          v24 = 0;
        if (v24)
        {
          if (((*(_DWORD *)(v22 + 16) >> 19) & 0x1FEu) - 166 >= 0x14)
          {
LABEL_65:
            sub_22E9A976C(a1, v21, *v18, 0, a3);
            return;
          }
        }
        else if (v22 && v23 == 44)
        {
          v25 = sub_22F114198(*(_QWORD *)(v22 + 24));
          if ((*(_BYTE *)(v25 + 74) & 1) == 0 && *(_QWORD *)(v25 + 128) <= 7uLL
            || (*(_QWORD *)(sub_22F114198(*(_QWORD *)(v22 + 24)) + 72) & 0x8000000000) != 0)
          {
            goto LABEL_65;
          }
        }
        else if (v23 != 9)
        {
          goto LABEL_65;
        }
        v18 = v12;
        goto LABEL_65;
      }
    }
    else
    {
      v18 = (uint64_t *)(v7 + 16);
      v19 = (uint64_t *)(v7 + 24);
      if (v14 != 9)
        goto LABEL_53;
    }
    v19 = v18;
    goto LABEL_53;
  }
  v6 = a2;
  while (1)
  {
    do
    {
      v7 = (uint64_t)v6;
      LODWORD(v8) = *v6;
      if (v8 > 0xD5)
      {
        if ((_DWORD)v8 == 233)
        {
          LODWORD(v8) = *(_DWORD *)v6;
          if ((*(_DWORD *)v6 & 0x7C0000) != 0x300000)
            goto LABEL_75;
          v9 = v6 + 16;
        }
        else
        {
          if ((_DWORD)v8 != 214)
            break;
          v9 = v6 + 24;
        }
      }
      else if ((_DWORD)v8 == 155)
      {
        if ((**((_DWORD **)v6 + 2) & 0x18000) != 0)
          goto LABEL_108;
        v9 = v6 + 24;
        if (!v6[48])
          v9 = v6 + 32;
        LOBYTE(v8) = -101;
      }
      else
      {
        if ((_DWORD)v8 != 176)
          break;
        v8 = *((unsigned int *)v6 + 5);
        if ((_DWORD)v8 == -1)
          goto LABEL_108;
        v9 = &v6[8 * v8 + 40];
        LOBYTE(v8) = -80;
      }
      v6 = *(unsigned __int8 **)v9;
    }
    while (*(_QWORD *)v9 != v7);
    if (v8 <= 0x98u)
      break;
    if (v8 <= 0xA0u)
    {
      if (v8 != 153)
        goto LABEL_108;
      goto LABEL_36;
    }
    if (v8 != 161)
    {
      if (v8 == 188)
      {
        v27 = *(_QWORD *)(v7 + 24);
        if (v27
          && (*(_DWORD *)(v27 + 28) & 0x7Fu) - 52 >= 0xFFFFFFFD
          && (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v27 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                        + 16) & 0xFE) != 0x28)
        {
          v28 = *(_QWORD *)(v27 + 16);
          v29 = v28 & 0xFFFFFFFFFFFFFFF8;
          if ((v28 & 4) != 0)
            v29 = *(_QWORD *)v29;
          v30 = (*(_WORD *)(v29 + 8) & 0x7E) - 34;
          if (v29)
            v31 = v29 - 64;
          else
            v31 = 0;
          if (v30 >= 4)
            v31 = 0;
          if ((*(_BYTE *)(v31 + 28) & 0x80) == 0)
          {
            if ((*(_BYTE *)(v7 + 2) & 4) != 0)
              sub_22E9A8DDC(&v42, *(_QWORD *)(v7 + 16), a3);
            else
              sub_22E9A90EC(&v42, *(_QWORD *)(v7 + 16), a3);
            v32 = v44;
            if (v44)
            {
              v33 = v42;
              v3 = v43;
              v34 = v42 & 0xFFFFFFFFFFFFFF00;
              v32 = 1;
            }
            else
            {
              v34 = 0;
              v33 = 0;
            }
            if (v32)
            {
              v35 = *(_QWORD *)(v27 + 16);
              v36 = v35 & 0xFFFFFFFFFFFFFFF8;
              if ((v35 & 4) != 0)
                v36 = *(_QWORD *)v36;
              v37 = (*(_WORD *)(v36 + 8) & 0x7E) - 34;
              if (v36)
                v38 = v36 - 64;
              else
                v38 = 0;
              if (v37 >= 4)
                v39 = 0;
              else
                v39 = v38;
              v40 = sub_22F0C975C(a3, v39);
              v41 = *(_QWORD *)(*(_QWORD *)(v40 + 48) + 8 * sub_22EFC306C(v27)) + v3;
              *(_QWORD *)a1 = v34 | v33;
              *(_QWORD *)(a1 + 8) = v41;
              goto LABEL_93;
            }
          }
        }
      }
      else if (v8 == 233)
      {
        LODWORD(v8) = *(_DWORD *)v7;
LABEL_75:
        if ((v8 & 0x7C0000) == 0x140000)
        {
          sub_22E9A8DDC(a1, *(_QWORD *)(v7 + 16), a3);
          return;
        }
      }
      goto LABEL_108;
    }
    v10 = *(_QWORD *)(v7 + 16);
    if (!v10 || (*(_DWORD *)(v10 + 28) & 0x7Fu) - 67 < 0xFFFFFFF9)
      goto LABEL_108;
    if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 48) & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0)
                    + 16) & 0xFE) != 0x28)
    {
      *(_QWORD *)a1 = sub_22EF5B404(a3, v10, 0);
      *(_QWORD *)(a1 + 8) = 0;
      goto LABEL_93;
    }
    if ((*(_DWORD *)(v10 + 28) & 0x7F) == 0x40 && (*(_DWORD *)(v10 + 96) & 0x600u) - 1536 > 0xFFFFFBFF
      || *(_QWORD *)(v10 + 88) < 8uLL)
    {
      goto LABEL_108;
    }
    v6 = (unsigned __int8 *)sub_22EFBC5B4(*(_QWORD *)(v7 + 16));
LABEL_37:
    if (!v6)
      goto LABEL_38;
  }
  if (v8 <= 0x8Fu)
  {
    if (v8 != 112)
    {
      if (v8 == 107)
        goto LABEL_39;
      goto LABEL_108;
    }
    if ((*(_DWORD *)v7 & 0xFC0000) != 0x800000)
      goto LABEL_108;
    v6 = *(unsigned __int8 **)(v7 + 24);
    goto LABEL_37;
  }
  if (v8 != 144 && v8 != 150)
    goto LABEL_108;
LABEL_36:
  v6 = *(unsigned __int8 **)(v7 + 16);
  v11 = (*(_DWORD *)v7 >> 18) & 0x7F;
  if (v11 == 5)
    goto LABEL_37;
  if ((v11 - 7) <= 1)
  {
    sub_22E9A90EC(&v42, *(_QWORD *)(v7 + 16), a3);
    if (v44)
    {
      *(_QWORD *)a1 = sub_22E9A961C(v7, *((_QWORD *)v6 + 1), v42, v43, a3);
      *(_QWORD *)(a1 + 8) = v26;
LABEL_93:
      *(_BYTE *)(a1 + 16) = 1;
      return;
    }
  }
LABEL_108:
  *(_BYTE *)a1 = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

uint64_t sub_22E9A961C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v10 = sub_22EFFB554((unsigned __int8 *)a1);
  v11 = *(unsigned int *)(a1 + 4);
  if ((_DWORD)v11)
  {
    v12 = v10;
    v13 = 8 * v11;
    do
    {
      v14 = *(_QWORD *)v12;
      v15 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)v12 + 16) & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(v15 + 8) & 0xF) != 0)
        v15 = (unint64_t)sub_22F10D2BC(**(_QWORD **)(*(_QWORD *)v12 + 16));
      v16 = sub_22F10C2A4(*(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF0));
      if (v16)
      {
        if ((*(_DWORD *)(v16 + 28) & 0x7Fu) - 35 >= 3)
          v17 = 0;
        else
          v17 = v16;
      }
      else
      {
        v17 = 0;
      }
      if ((*(_BYTE *)(v14 + 12) & 1) != 0)
      {
        v20 = sub_22F0C975C(a5, v17);
        a4 = 0;
        if (*(_QWORD *)(*(_QWORD *)(v20 + 72) + 8) < a3)
          a3 = *(_QWORD *)(*(_QWORD *)(v20 + 72) + 8);
      }
      else
      {
        v18 = sub_22F10C2A4(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0));
        if (v18)
        {
          if ((*(_DWORD *)(v18 + 28) & 0x7Fu) - 35 >= 3)
            v19 = 0;
          else
            v19 = v18;
        }
        else
        {
          v19 = 0;
        }
        v21 = sub_22F0C975C(a5, v19);
        a4 += sub_22E46A3EC(v21, v17);
      }
      v22 = **(_QWORD **)(v14 + 16);
      a2 = *(_QWORD *)(v22 & 0xFFFFFFFFFFFFFFF0);
      if ((*(_BYTE *)(a2 + 8) & 0xF) != 0)
        a2 = (unint64_t)sub_22F10D2BC(v22);
      v12 += 8;
      v13 -= 8;
    }
    while (v13);
  }
  return a3;
}

void sub_22E9A976C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t *v10;
  unint64_t v11;
  BOOL v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unsigned int v23;
  char v24;
  char v25;

  v10 = (uint64_t *)(sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) == 5
    || (sub_22E9A8DDC(&v19, a2, a5), !v21))
  {
    *(_BYTE *)a1 = 0;
    *(_BYTE *)(a1 + 16) = 0;
  }
  else
  {
    sub_22EF5CCD0(a5, *v10, (uint64_t)&v22);
    v11 = v22;
    sub_22F00905C(a3, a5, 0, (uint64_t)&v22);
    if (v25)
    {
      v12 = v23 < 0x41uLL;
      if (v24)
      {
        v13 = (uint64_t *)v22;
        v14 = (uint64_t *)&v22;
        if (v23 >= 0x41)
          v14 = (uint64_t *)v22;
        v15 = *v14;
      }
      else if (v23 > 0x40)
      {
        v12 = 0;
        v13 = (uint64_t *)v22;
        v15 = *(_QWORD *)v22;
      }
      else
      {
        v13 = (uint64_t *)v22;
        v15 = (uint64_t)(v22 << -(char)v23) >> -(char)v23;
        v12 = 1;
      }
      v17 = v15 * v11;
      if (a4)
        v17 = -v17;
      v18 = v17 + v20;
      *(_QWORD *)a1 = v19;
      *(_QWORD *)(a1 + 8) = v18;
      *(_BYTE *)(a1 + 16) = 1;
      if (!v12)
      {
        if (v13)
          MEMORY[0x2348A0E84](v13, 0x1000C8000313F17);
      }
    }
    else
    {
      v16 = (v19 | v20) & -(v19 | v20) | v11;
      *(_QWORD *)a1 = v16 & -(uint64_t)v16;
      *(_QWORD *)(a1 + 8) = 0;
      *(_BYTE *)(a1 + 16) = 1;
    }
  }
}

unint64_t sub_22E9A98F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[3];

  v3 = (_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if ((sub_22F1110EC(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0), 0) & 1) != 0 || (*(_BYTE *)(*v3 + 17) & 4) != 0)
  {
    v5 = 0;
    v4 = 0;
  }
  else
  {
    sub_22EF5CCD0(v7, a1, *v3);
    v4 = v7[0] & 0xFFFFFFFFFFFFFF00;
    v5 = LOBYTE(v7[0]);
  }
  return v4 | v5;
}

void sub_22E9A996C(uint64_t a1, _DWORD *a2)
{
  int v2;

  v2 = *(unsigned __int8 *)a2;
  if (a2 && (v2 & 0xFE) == 0x70)
  {
    switch((*a2 >> 18) & 0x3F)
    {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
      case 0x15:
      case 0x16:
      case 0x17:
      case 0x18:
      case 0x19:
      case 0x1A:
      case 0x1B:
      case 0x1C:
      case 0x1D:
      case 0x1E:
      case 0x1F:
      case 0x20:
        sub_22E9A9BAC(a1, (uint64_t)a2);
        return;
      default:
        goto LABEL_5;
    }
  }
  if (!a2 || v2 != 233)
LABEL_5:
    __asm { BR              X9 }
  sub_22E9A9CD4(a1, (uint64_t)a2);
}

void sub_22E9A9B34()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_QWORD *)(v0 + 16) == *(_QWORD *)(v1 + 16) && !*(_QWORD *)(v1 + 24))
    *(_QWORD *)(v1 + 24) = v0;
  JUMPOUT(0x22E9A9B0CLL);
}

uint64_t sub_22E9A9BAC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  unsigned int v9;
  char v10;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = result;
    if (!*(_BYTE *)(result + 32) && (*(_DWORD *)a2 & 0xFC0000) == 0x540000)
    {
      v4 = *(unsigned __int8 **)(a2 + 16);
      if (v4)
      {
        if (*v4 == 161 && *((_QWORD *)v4 + 2) == v2)
        {
          result = *(_QWORD *)(a2 + 24);
          if (result)
          {
            result = (uint64_t)sub_22EFFBBCC((unsigned __int8 *)result);
            LOBYTE(v8) = 0;
            v10 = 0;
            if (result)
            {
              sub_22F00905C(result, *(_QWORD *)(v3 + 8), 0, (uint64_t)&v5);
              sub_22E54C490((uint64_t)&v8, (uint64_t)&v5);
              if (v10)
                result = sub_22E42E5EC((uint64_t)&v8, 0);
              else
                result = 0;
              *(_BYTE *)(v3 + 32) = result;
              if (v7)
              {
                if (v6 >= 0x41)
                {
                  result = v5;
                  if (v5)
                    result = MEMORY[0x2348A0E84](v5, 0x1000C8000313F17);
                }
              }
              if (v10 && v9 >= 0x41)
              {
                result = v8;
                if (v8)
                  return MEMORY[0x2348A0E84](v8, 0x1000C8000313F17);
              }
            }
            else
            {
              *(_BYTE *)(v3 + 32) = 0;
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_22E9A9CD4(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  _QWORD *v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  sub_22F0D492C(a2);
  v9 = v11;
  v3 = v13;
  v10 = v12;
  v4 = v14;
  v6 = *((_QWORD *)&v11 + 1);
  v5 = (uint64_t *)v11;
  if ((_QWORD)v11 != v13 || *((_QWORD *)&v11 + 1) != v14)
  {
    do
    {
      v8 = v5;
      if ((v6 & 3) != 0)
      {
        if ((v6 & 0xFFFFFFFFFFFFFFFCLL) != 0)
          v8 = (_QWORD *)((v6 & 0xFFFFFFFFFFFFFFFCLL) + 40);
        else
          v8 = (_QWORD *)sub_22F3AC1A8(*v5);
      }
      if (*v8)
        sub_22E9A996C(a1);
      if ((v6 & 3) != 0)
      {
        if (v6 < 4)
          sub_22F3F2FE0((uint64_t)&v9, 1);
        else
          sub_22F0D8720((uint64_t)&v9);
      }
      else
      {
        *(_QWORD *)&v9 = v5 + 1;
      }
      v6 = *((_QWORD *)&v9 + 1);
      v5 = (uint64_t *)v9;
    }
    while (v9 != __PAIR128__(v4, v3));
  }
}

uint64_t sub_22E9A9DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int v7;
  int v8;

  result = sub_22E990994(a1, *(_QWORD *)(a2 + 48), *(_QWORD *)(a3 + 48));
  if ((_DWORD)result)
  {
    v7 = *(_DWORD *)(a2 + 68);
    result = 0;
    if (((v7 ^ *(unsigned __int8 *)(a3 + 68)) & 1) == 0)
    {
      if ((v7 & 1) == 0)
        return 1;
      v8 = sub_22EFC2EF4(a2, a1);
      if (v8 == sub_22EFC2EF4(a3, a1))
        return 1;
    }
  }
  return result;
}

BOOL sub_22E9A9E30(uint64_t a1)
{
  return sub_22E88FFC4(a1)
      || sub_22EFC1D94(a1)
      || sub_22EA1DB60(a1)
      || sub_22E4752A8(a1)
      || sub_22EA1DBC0(a1)
      || sub_22E6A2F54(a1)
      || sub_22EFC1F80(a1);
}

uint64_t sub_22E9A9EA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t *v17;

  v5 = a3;
  v7 = *(_QWORD *)a1;
  v8 = (a2 - *(_QWORD *)a1) >> 3;
  v9 = *(unsigned int *)(a1 + 8);
  if (*(_QWORD *)a1 + 8 * v9 == a2)
  {
    sub_22F271D38(a1, a3, a4);
    return *(_QWORD *)a1 + 8 * v8;
  }
  else
  {
    if (a3 == a4)
    {
      v10 = 0;
    }
    else
    {
      v10 = 0;
      v11 = a3;
      do
      {
        ++v10;
        do
          v11 = *(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v11 && (*(_DWORD *)(v11 + 28) & 0x7Fu) - 49 > 2);
      }
      while (v11 != a4);
    }
    if (v10 + v9 > *(unsigned int *)(a1 + 12))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v7 = *(_QWORD *)a1;
      v9 = *(unsigned int *)(a1 + 8);
    }
    v12 = (unint64_t *)(v7 + 8 * v8);
    v13 = (unint64_t *)(v7 + 8 * v9);
    v14 = v13 - v12;
    if (v14 >= v10)
    {
      sub_22F246808(a1, (char *)&v13[-v10], (char *)(v7 + 8 * v9));
      if (&v13[-v10] != v12)
        memmove(&v12[v10], v12, (char *)&v13[-v10] - (char *)v12);
      if (v5 != a4)
      {
        v17 = v12;
        do
        {
          *v17 = v5;
          do
            v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v5 && (*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 > 2);
          ++v17;
        }
        while (v5 != a4);
      }
    }
    else
    {
      *(_DWORD *)(a1 + 8) = v9 + v10;
      if (v8 != v9)
      {
        memcpy((void *)(v7 + 8 * (v9 + v10) - 8 * v14), v12, (char *)v13 - (char *)v12);
        v15 = v12;
        do
        {
          *v15++ = v5;
          do
            v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
          while (v5 && (*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 > 2);
          --v14;
        }
        while (v14);
      }
      while (v5 != a4)
      {
        *v13 = v5;
        do
          v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFF8;
        while (v5 && (*(_DWORD *)(v5 + 28) & 0x7Fu) - 49 > 2);
        ++v13;
      }
    }
  }
  return (uint64_t)v12;
}

BOOL sub_22E9AA08C(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_10;
  sub_22EFC8E88(a2);
  v8 = *(uint64_t **)v7;
  v9 = *(unsigned int *)(v7 + 8);
  v10 = *(uint64_t **)v7;
  if ((_DWORD)v9)
  {
    v11 = 8 * v9;
    v10 = *(uint64_t **)v7;
    while (*(_WORD *)(*v10 + 32) != 379)
    {
      ++v10;
      v11 -= 8;
      if (!v11)
        goto LABEL_10;
    }
  }
  if (v10 == &v8[v9])
  {
LABEL_10:
    if ((*(_BYTE *)((*a1)[9] + 127) & 0x40) != 0)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v16 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)
        && *v16)
      {
        sub_22F409218(*v16);
      }
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v18 = *(uint64_t **)v17;
        v19 = *(unsigned int *)(v17 + 8);
        v20 = *(uint64_t **)v17;
        if ((_DWORD)v19)
        {
          v21 = 8 * v19;
          v20 = *(uint64_t **)v17;
          while (*(_WORD *)(*v20 + 32) != 373)
          {
            ++v20;
            v21 -= 8;
            if (!v21)
              goto LABEL_29;
          }
        }
        if (v20 != &v18[v19])
        {
          do
          {
            v23 = *v18++;
            v22 = v23;
          }
          while (*(_WORD *)(v23 + 32) != 373);
          sub_22F00905C(*(_QWORD *)(v22 + 40), (*a1)[11], 0, (uint64_t)&v28);
          if (v30)
          {
            if (v29 >= 0x41 && v28 != 0)
              MEMORY[0x2348A0E84]();
          }
        }
      }
LABEL_29:
      v25 = llvm::air::ResourceTracker::get((llvm::air::ResourceTracker *)(a1 + 1));
      v26 = *MEMORY[0x24BE38B98];
      if (v25 == *MEMORY[0x24BE38B98])
      {
        sub_22E9AAF28(*a1, a2, (uint64_t)"buffer", 6);
      }
      else
      {
        v27 = sub_22E9AAFB4((uint64_t)a1, v25);
        v31 = a2;
        v32 = v27;
        sub_22E9AB09C((uint64_t)&v28, a4, &v31, &v32);
      }
      return v25 != v26;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    do
    {
      v13 = *v8++;
      v12 = v13;
    }
    while (*(_WORD *)(v13 + 32) != 379);
    v14 = *(_QWORD *)(v12 + 40);
    v31 = a2;
    v32 = v14;
    sub_22E9AB09C((uint64_t)&v28, a4, &v31, &v32);
    return 1;
  }
}

uint64_t sub_22E9AA2F0(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  __int128 *v44;
  _OWORD *v45;
  _OWORD *v46;
  __int128 v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  int64_t *v51;
  int64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t **v55;
  uint64_t **v56;
  int64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  void **v60;
  void **v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void *v65;
  void *__p[2];
  __int128 v67;
  __int128 v68;
  uint64_t *v69;
  _QWORD *v70[2];
  void *v71;
  uint64_t *v72;
  uint64_t *v73;
  __int128 v74;
  char *v75;
  _QWORD v76[3];

  v76[2] = *MEMORY[0x24BDAC8D0];
  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_8;
  sub_22EFC8E88(a2);
  v9 = *(uint64_t **)v8;
  v10 = *(unsigned int *)(v8 + 8);
  v11 = *(uint64_t **)v8;
  if ((_DWORD)v10)
  {
    v12 = 8 * v10;
    v11 = *(uint64_t **)v8;
    while (*(_WORD *)(*v11 + 32) != 379)
    {
      ++v11;
      v12 -= 8;
      if (!v12)
        goto LABEL_8;
    }
  }
  if (v11 != &v9[v10])
  {
    do
    {
      v20 = *v9++;
      v19 = v20;
    }
    while (*(_WORD *)(v20 + 32) != 379);
    v21 = *(uint64_t **)(v19 + 40);
    v72 = (uint64_t *)a2;
    v73 = v21;
  }
  else
  {
LABEL_8:
    v13 = (uint64_t *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
    if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v13 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)
      && *v13)
    {
      sub_22F409218(*v13);
    }
    if ((*(_BYTE *)(a2 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a2);
      v15 = *(uint64_t **)v14;
      v16 = *(unsigned int *)(v14 + 8);
      v17 = *(uint64_t **)v14;
      if ((_DWORD)v16)
      {
        v18 = 8 * v16;
        v17 = *(uint64_t **)v14;
        while (*(_WORD *)(*v17 + 32) != 373)
        {
          ++v17;
          v18 -= 8;
          if (!v18)
            goto LABEL_27;
        }
      }
      if (v17 != &v15[v16])
      {
        do
        {
          v23 = *v15++;
          v22 = v23;
        }
        while (*(_WORD *)(v23 + 32) != 373);
        sub_22F00905C(*(_QWORD *)(v22 + 40), (*a1)[11], 0, (uint64_t)__p);
        if ((_BYTE)v67)
        {
          if (LODWORD(__p[1]) >= 0x41 && __p[0] != 0)
            MEMORY[0x2348A0E84]();
        }
      }
    }
LABEL_27:
    v25 = llvm::air::ResourceTracker::get((llvm::air::ResourceTracker *)(a1 + 1));
    if (v25 == *MEMORY[0x24BE38B98])
    {
      sub_22E9AAF28(*a1, a2, (uint64_t)"buffer", 6);
      return 0;
    }
    v28 = (uint64_t *)sub_22E9AAFB4((uint64_t)a1, v25);
    v72 = (uint64_t *)a2;
    v73 = v28;
  }
  sub_22E9AB09C((uint64_t)__p, a4, &v72, &v73);
  v70[0] = 0;
  v70[1] = 0;
  v69 = (uint64_t *)v70;
  v29 = sub_22F10BBF4(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0));
  v76[0] = sub_22F10ACF8(v29);
  v76[1] = a2;
  *(_OWORD *)__p = 0u;
  v67 = 0u;
  v68 = 0u;
  v75 = (char *)&v67 + 8;
  v72 = (uint64_t *)operator new(8uLL);
  v73 = v72;
  *(_QWORD *)&v74 = v72;
  *((_QWORD *)&v74 + 1) = v72 + 1;
  v71 = operator new(0x1000uLL);
  sub_22F2D2D80((uint64_t)&v72, &v71);
  v30 = __p[1];
  v31 = (_QWORD *)v67;
  while (v31 != v30)
  {
    sub_22F2D2EA4((void **)&v72, --v31);
    v30 = __p[1];
  }
  v32 = __p[0];
  v33 = v73;
  __p[0] = v72;
  __p[1] = v73;
  v67 = v74;
  if (v32)
  {
    operator delete(v32);
    v33 = (uint64_t *)__p[1];
    v34 = (uint64_t *)v67;
  }
  else
  {
    v34 = (uint64_t *)v74;
  }
  v35 = *((_QWORD *)&v68 + 1);
  v36 = &v33[((_QWORD)v68 + *((_QWORD *)&v68 + 1)) >> 8];
  v37 = *v36;
  if (v34 == v33)
    v38 = 0;
  else
    v38 = *v36 + 16 * (v68 + BYTE8(v68));
  v39 = (v38 - v37) >> 4;
  if (v38 - v37 < -15)
  {
    v42 = 254 - v39;
    v40 = ~(_BYTE)v42;
    v41 = &v36[-(v42 >> 8)];
  }
  else
  {
    v40 = v39 + 1;
    v41 = &v36[(unint64_t)(v39 + 1) >> 8];
  }
  v43 = *v41 + 16 * v40;
  if (v38 != v43)
  {
    v44 = (__int128 *)v76;
    do
    {
      v45 = (_OWORD *)(v37 + 4096);
      if (v36 == v41)
        v45 = (_OWORD *)v43;
      if ((_OWORD *)v38 == v45)
      {
        v45 = (_OWORD *)v38;
      }
      else
      {
        v46 = (_OWORD *)v38;
        do
        {
          v47 = *v44++;
          *v46++ = v47;
        }
        while (v46 != v45);
        v35 = *((_QWORD *)&v68 + 1);
      }
      v35 += ((uint64_t)v45 - v38) >> 4;
      *((_QWORD *)&v68 + 1) = v35;
      if (v36 == v41)
        break;
      v48 = v36[1];
      ++v36;
      v37 = v48;
      v38 = v48;
    }
    while (v48 != v43);
  }
  v73 = 0;
  *(_QWORD *)&v74 = 0;
  v72 = (uint64_t *)&v73;
  if (!v35)
  {
    v49 = 0;
    v26 = 1;
    goto LABEL_75;
  }
  v50 = v68;
  while (1)
  {
    v51 = (int64_t *)(*(_QWORD *)((char *)__p[1] + ((v50 >> 5) & 0x7FFFFFFFFFFFFF8))
                           + 16 * v50);
    v52 = *v51;
    v53 = v51[1];
    v54 = v73;
    v55 = &v73;
    v56 = &v73;
    if (v73)
    {
      while (1)
      {
        while (1)
        {
          v56 = (uint64_t **)v54;
          v57 = v54[4];
          if (v57 <= v52)
            break;
          v54 = *v56;
          v55 = v56;
          if (!*v56)
            goto LABEL_64;
        }
        if (v57 >= v52)
          goto LABEL_69;
        v54 = v56[1];
        if (!v54)
        {
          v55 = v56 + 1;
          break;
        }
      }
    }
LABEL_64:
    v58 = (uint64_t *)operator new(0x28uLL);
    v58[4] = v52;
    *v58 = 0;
    v58[1] = 0;
    v58[2] = (uint64_t)v56;
    *v55 = v58;
    if (*v72)
    {
      v72 = (uint64_t *)*v72;
      v59 = *v55;
    }
    else
    {
      v59 = v58;
    }
    sub_22E49FD00(v73, v59);
    *(_QWORD *)&v74 = v74 + 1;
    if (!sub_22E9AB264(a1, v52, v53, a3, a4, &v69, (uint64_t)__p))
      break;
    v35 = *((_QWORD *)&v68 + 1);
    v50 = v68;
LABEL_69:
    --v35;
    *(_QWORD *)&v68 = ++v50;
    *((_QWORD *)&v68 + 1) = v35;
    if (v50 >= 0x200)
    {
      operator delete(*(void **)__p[1]);
      v50 = v68 - 256;
      __p[1] = (char *)__p[1] + 8;
      *(_QWORD *)&v68 = v68 - 256;
      v35 = *((_QWORD *)&v68 + 1);
    }
    if (!v35)
    {
      v26 = 1;
      goto LABEL_74;
    }
  }
  v26 = 0;
LABEL_74:
  v49 = v73;
LABEL_75:
  sub_22F258024(v49);
  v60 = (void **)__p[1];
  v61 = (void **)v67;
  *((_QWORD *)&v68 + 1) = 0;
  v62 = v67 - (unint64_t)__p[1];
  if ((unint64_t)v67 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v60);
      v61 = (void **)v67;
      v60 = (void **)((char *)__p[1] + 8);
      __p[1] = v60;
      v62 = v67 - (_QWORD)v60;
    }
    while ((_QWORD)v67 - (_QWORD)v60 > 0x10uLL);
  }
  v63 = v62 >> 3;
  if (v63 == 1)
  {
    v64 = 128;
LABEL_81:
    *(_QWORD *)&v68 = v64;
  }
  else if (v63 == 2)
  {
    v64 = 256;
    goto LABEL_81;
  }
  if (v60 != v61)
  {
    do
    {
      v65 = *v60++;
      operator delete(v65);
    }
    while (v60 != v61);
    if ((void *)v67 != __p[1])
      *(_QWORD *)&v67 = v67 + (((unint64_t)__p[1] - v67 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (__p[0])
    operator delete(__p[0]);
  sub_22F258024(v70[0]);
  return v26;
}

BOOL sub_22E9AA8C0(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];
  uint64_t v20;
  uint64_t v21;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_10;
  sub_22EFC8E88(a2);
  v8 = *(uint64_t **)v7;
  v9 = *(unsigned int *)(v7 + 8);
  v10 = *(uint64_t **)v7;
  if ((_DWORD)v9)
  {
    v11 = 8 * v9;
    v10 = *(uint64_t **)v7;
    while (*(_WORD *)(*v10 + 32) != 411)
    {
      ++v10;
      v11 -= 8;
      if (!v11)
        goto LABEL_10;
    }
  }
  if (v10 == &v8[v9])
  {
LABEL_10:
    if ((*(_BYTE *)((*a1)[9] + 127) & 0x40) != 0)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v16 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)
        && *v16)
      {
        sub_22F409218(*v16);
      }
      v17 = llvm::air::ResourceTracker::get((llvm::air::ResourceTracker *)(a1 + 41));
      v18 = *MEMORY[0x24BE38B98];
      if (v17 == *MEMORY[0x24BE38B98])
      {
        sub_22E9AAF28(*a1, a2, (uint64_t)"threadgroup", 11);
      }
      else
      {
        v20 = a2;
        v21 = sub_22E9AAFB4((uint64_t)a1, v17);
        sub_22E9AB09C((uint64_t)v19, a4, &v20, &v21);
      }
      return v17 != v18;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    do
    {
      v13 = *v8++;
      v12 = v13;
    }
    while (*(_WORD *)(v13 + 32) != 411);
    v14 = *(_QWORD *)(v12 + 40);
    v20 = a2;
    v21 = v14;
    sub_22E9AB09C((uint64_t)v19, a4, &v20, &v21);
    return 1;
  }
}

BOOL sub_22E9AAA60(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_10;
  sub_22EFC8E88(a2);
  v8 = *(uint64_t **)v7;
  v9 = *(unsigned int *)(v7 + 8);
  v10 = *(uint64_t **)v7;
  if ((_DWORD)v9)
  {
    v11 = 8 * v9;
    v10 = *(uint64_t **)v7;
    while (*(_WORD *)(*v10 + 32) != 453)
    {
      ++v10;
      v11 -= 8;
      if (!v11)
        goto LABEL_10;
    }
  }
  if (v10 == &v8[v9])
  {
LABEL_10:
    if ((*(_BYTE *)((*a1)[9] + 127) & 0x40) != 0)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v16 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)
        && *v16)
      {
        sub_22F409218(*v16);
      }
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v18 = *(uint64_t **)v17;
        v19 = *(unsigned int *)(v17 + 8);
        v20 = *(uint64_t **)v17;
        if ((_DWORD)v19)
        {
          v21 = 8 * v19;
          v20 = *(uint64_t **)v17;
          while (*(_WORD *)(*v20 + 32) != 373)
          {
            ++v20;
            v21 -= 8;
            if (!v21)
              goto LABEL_29;
          }
        }
        if (v20 != &v18[v19])
        {
          do
          {
            v23 = *v18++;
            v22 = v23;
          }
          while (*(_WORD *)(v23 + 32) != 373);
          sub_22F00905C(*(_QWORD *)(v22 + 40), (*a1)[11], 0, (uint64_t)&v28);
          if (v30)
          {
            if (v29 >= 0x41 && v28 != 0)
              MEMORY[0x2348A0E84]();
          }
        }
      }
LABEL_29:
      v25 = llvm::air::ResourceTracker::get((llvm::air::ResourceTracker *)(a1 + 81));
      v26 = *MEMORY[0x24BE38B98];
      if (v25 == *MEMORY[0x24BE38B98])
      {
        sub_22E9AAF28(*a1, a2, (uint64_t)"texture", 7);
      }
      else
      {
        v27 = sub_22E9AAFB4((uint64_t)a1, v25);
        v31 = a2;
        v32 = v27;
        sub_22E9AB09C((uint64_t)&v28, a4, &v31, &v32);
      }
      return v25 != v26;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    do
    {
      v13 = *v8++;
      v12 = v13;
    }
    while (*(_WORD *)(v13 + 32) != 453);
    v14 = *(_QWORD *)(v12 + 40);
    v31 = a2;
    v32 = v14;
    sub_22E9AB09C((uint64_t)&v28, a4, &v31, &v32);
    return 1;
  }
}

BOOL sub_22E9AACC4(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;

  if ((*(_BYTE *)(a2 + 29) & 1) == 0)
    goto LABEL_10;
  sub_22EFC8E88(a2);
  v8 = *(uint64_t **)v7;
  v9 = *(unsigned int *)(v7 + 8);
  v10 = *(uint64_t **)v7;
  if ((_DWORD)v9)
  {
    v11 = 8 * v9;
    v10 = *(uint64_t **)v7;
    while (*(_WORD *)(*v10 + 32) != 447)
    {
      ++v10;
      v11 -= 8;
      if (!v11)
        goto LABEL_10;
    }
  }
  if (v10 == &v8[v9])
  {
LABEL_10:
    if ((*(_BYTE *)((*a1)[9] + 127) & 0x40) != 0)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0);
      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v16 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)
        && *v16)
      {
        sub_22F409218(*v16);
      }
      if ((*(_BYTE *)(a2 + 29) & 1) != 0)
      {
        sub_22EFC8E88(a2);
        v18 = *(uint64_t **)v17;
        v19 = *(unsigned int *)(v17 + 8);
        v20 = *(uint64_t **)v17;
        if ((_DWORD)v19)
        {
          v21 = 8 * v19;
          v20 = *(uint64_t **)v17;
          while (*(_WORD *)(*v20 + 32) != 373)
          {
            ++v20;
            v21 -= 8;
            if (!v21)
              goto LABEL_29;
          }
        }
        if (v20 != &v18[v19])
        {
          do
          {
            v23 = *v18++;
            v22 = v23;
          }
          while (*(_WORD *)(v23 + 32) != 373);
          sub_22F00905C(*(_QWORD *)(v22 + 40), (*a1)[11], 0, (uint64_t)&v28);
          if (v30)
          {
            if (v29 >= 0x41 && v28 != 0)
              MEMORY[0x2348A0E84]();
          }
        }
      }
LABEL_29:
      v25 = llvm::air::ResourceTracker::get((llvm::air::ResourceTracker *)(a1 + 121));
      v26 = *MEMORY[0x24BE38B98];
      if (v25 == *MEMORY[0x24BE38B98])
      {
        sub_22E9AAF28(*a1, a2, (uint64_t)"sampler", 7);
      }
      else
      {
        v27 = sub_22E9AAFB4((uint64_t)a1, v25);
        v31 = a2;
        v32 = v27;
        sub_22E9AB09C((uint64_t)&v28, a4, &v31, &v32);
      }
      return v25 != v26;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    do
    {
      v13 = *v8++;
      v12 = v13;
    }
    while (*(_WORD *)(v13 + 32) != 447);
    v14 = *(_QWORD *)(v12 + 40);
    v31 = a2;
    v32 = v14;
    sub_22E9AB09C((uint64_t)&v28, a4, &v31, &v32);
    return 1;
  }
}

unsigned int *sub_22E9AAF28(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  _DWORD *v8;
  const char *v9;
  uint64_t v10;
  unsigned int v11;
  _QWORD v13[2];
  unsigned int v14[24];
  _QWORD v15[2];

  v15[0] = a3;
  v15[1] = a4;
  sub_22E8FCA40(a1, *(_DWORD *)(a2 + 24), 0xF2Cu, 0, (uint64_t)v14);
  v5 = sub_22F2F2210((uint64_t)v14, (uint64_t)v15);
  v6 = *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_QWORD *)(a2 + 40) & 7) != 0 || v6 == 0)
  {
    v10 = 0;
    v9 = "";
  }
  else
  {
    v8 = *(_DWORD **)(v6 + 16);
    v11 = *v8;
    v9 = (const char *)(v8 + 4);
    v10 = v11;
  }
  v13[0] = v9;
  v13[1] = v10;
  sub_22F2F2210(v5, (uint64_t)v13);
  return sub_22E903BEC(v14);
}

uint64_t sub_22E9AAFB4(uint64_t a1, int a2)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unsigned int v11;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v5 = sub_22EF5CDF0(v4, *(_QWORD *)(*(_QWORD *)(v4 + 16528) & 0xFFFFFFFFFFFFFFF0));
  v11 = v5;
  if (v5 > 0x40)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v10);
  }
  else
  {
    v6 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v5;
    if (!v5)
      LODWORD(v6) = 0;
    v10 = v6 & a2;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16528);
  v8 = sub_22E3CD3D4(v4 + 2032, 32, 3);
  sub_22EFF8F1C(v8, v4, (uint64_t)&v10, v7, 0);
  if (v11 >= 0x41 && v10)
    MEMORY[0x2348A0E84](v10, 0x1000C8000313F17);
  return v8;
}

uint64_t sub_22E9AB09C(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t result;
  _QWORD *v9;
  int v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;

  v14 = 0;
  result = sub_22E54D014((uint64_t *)a2, a3, &v14);
  v9 = v14;
  if ((result & 1) != 0)
  {
    v12 = 0;
    goto LABEL_8;
  }
  v10 = *(_DWORD *)(a2 + 8);
  v11 = *(_DWORD *)(a2 + 16);
  if (4 * v10 + 4 < 3 * v11)
  {
    if (v11 + ~v10 - *(_DWORD *)(a2 + 12) > v11 >> 3)
      goto LABEL_5;
  }
  else
  {
    v11 *= 2;
  }
  sub_22E9AB1A4(a2, v11);
  v14 = 0;
  result = sub_22E54D014((uint64_t *)a2, a3, &v14);
  v9 = v14;
LABEL_5:
  ++*(_DWORD *)(a2 + 8);
  if (*v9 != -4096)
    --*(_DWORD *)(a2 + 12);
  *v9 = *a3;
  v9[1] = *a4;
  v12 = 1;
LABEL_8:
  v13 = *(_QWORD *)a2 + 16 * *(unsigned int *)(a2 + 16);
  *(_QWORD *)a1 = v9;
  *(_QWORD *)(a1 + 8) = v13;
  *(_BYTE *)(a1 + 16) = v12;
  return result;
}

_QWORD *sub_22E9AB1A4(uint64_t a1, int a2)
{
  uint64_t v3;
  llvm *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(llvm **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = (_QWORD *)MEMORY[0x23489D23C](16 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F311E44(a1, v4, (_QWORD *)v4 + 2 * v3);
    return (_QWORD *)llvm::deallocate_buffer(v4, (void *)(16 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 16 * v10;
      do
      {
        *result = -4096;
        result += 2;
        v11 -= 16;
      }
      while (v11);
    }
  }
  return result;
}

uint64_t sub_22E9AB264(_QWORD **a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t **a6, uint64_t a7)
{
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  _DWORD *v43;
  int **v44;
  int *v45;
  uint64_t v46;
  _DWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t **v78;
  uint64_t **v79;
  unint64_t v80;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t *v98;
  unint64_t v99;
  unint64_t v100;
  int v101;
  _BOOL4 v102;
  int v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int *v115;
  unsigned int *v116;
  unsigned int v117;
  unsigned int v118;
  uint64_t v119;
  _DWORD *v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  _DWORD *v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  const char *v139;
  unint64_t v140;
  _DWORD *v141;
  unsigned int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint64_t v148;
  int *v149;
  uint64_t v150;
  BOOL v151;
  int *v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t *v162;
  unsigned int v163;
  char v164;
  char v165;
  uint64_t *v166;
  unsigned int v167;
  char v168;
  char v169;
  unint64_t v170;
  unsigned int v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int v175;
  char v176;
  unsigned int v177;
  unsigned int v178;
  uint64_t v179;

  v173 = a3;
  v14 = (uint64_t *)(a2 & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1
    && (v16 = *(_QWORD *)((sub_22F10ACF8(*(_QWORD *)(a2 & 0xFFFFFFFFFFFFFFF0)) & 0xFFFFFFFFFFFFFFF0) + 8),
        (v16 & 8) != 0)
    && (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x5800
    || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v15 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1
    && (v17 = *(_QWORD *)((sub_22F10ACF8(v15) & 0xFFFFFFFFFFFFFFF0) + 8), (v17 & 8) != 0)
    && (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x6800)
  {
    v18 = sub_22F10ACF8(v15);
    sub_22F10BAEC(*(_QWORD *)(*(_QWORD *)(v18 & 0xFFFFFFFFFFFFFFF0) + 8));
    if (v19)
      return sub_22E9AAFB4((uint64_t)a1, 0);
  }
  if ((*(_BYTE *)((*a1)[9] + 122) & 4) != 0)
  {
    if (getenv("AIR_ENABLE_ARRAYS_OF_BUFFERS_AB"))
    {
      v20 = sub_22E5453EC(*v14);
      if (v20)
      {
        v21 = sub_22F10C2A4(v20);
        v22 = (*(_DWORD *)(v21 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v21;
        if ((v23 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v22 + 168) + 8) & 0xFFFFFFFFFFFFFFF0),
              *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1)
          && (v24 = *(_QWORD *)((sub_22F10ACF8(v23) & 0xFFFFFFFFFFFFFFF0) + 8), (v24 & 8) != 0)
          && (*(_QWORD *)((v24 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x5800
          || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v23 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1
          && (v25 = *(_QWORD *)((sub_22F10ACF8(v23) & 0xFFFFFFFFFFFFFFF0) + 8), (v25 & 8) != 0)
          && (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x6800)
        {
          v26 = sub_22F10ACF8(v23);
          sub_22F10BAEC(*(_QWORD *)(*(_QWORD *)(v26 & 0xFFFFFFFFFFFFFFF0) + 8));
          if (v27)
          {
LABEL_114:
            v91 = sub_22E5453EC(*v14);
LABEL_119:
            v95 = sub_22F409218(v91) - 1;
            return sub_22E9AAFB4((uint64_t)a1, v95);
          }
        }
      }
    }
  }
  v28 = *v14;
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1
    && (v29 = *(_QWORD *)((sub_22F10ACF8(*v14) & 0xFFFFFFFFFFFFFFF0) + 8), (v29 & 8) != 0)
    && (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x5800
    || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v28 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1
    && (v30 = *(_QWORD *)((sub_22F10ACF8(v28) & 0xFFFFFFFFFFFFFFF0) + 8), (v30 & 8) != 0)
    && (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x6800)
  {
    v31 = sub_22F10ACF8(v28);
    sub_22F10BAEC(*(_QWORD *)(*(_QWORD *)(v31 & 0xFFFFFFFFFFFFFFF0) + 8));
    if ((v32 & 1) == 0)
    {
      v174 = sub_22F10ACF8(*v14);
      sub_22E9AC4DC(a7, &v174, &v173);
      return sub_22E9AAFB4((uint64_t)a1, 0);
    }
  }
  if ((*(_BYTE *)((*a1)[9] + 122) & 4) != 0)
  {
    if (getenv("AIR_ENABLE_ARRAYS_OF_BUFFERS_AB"))
    {
      v33 = sub_22E5453EC(*v14);
      if (v33)
      {
        v34 = sub_22F10C2A4(v33);
        v35 = (*(_DWORD *)(v34 + 28) & 0x7Fu) - 35 >= 3 ? 0 : v34;
        if ((v36 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v35 + 168) + 8) & 0xFFFFFFFFFFFFFFF0),
              *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v36 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1)
          && (v37 = *(_QWORD *)((sub_22F10ACF8(v36) & 0xFFFFFFFFFFFFFFF0) + 8), (v37 & 8) != 0)
          && (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x5800
          || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v36 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1
          && (v38 = *(_QWORD *)((sub_22F10ACF8(v36) & 0xFFFFFFFFFFFFFFF0) + 8), (v38 & 8) != 0)
          && (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x6800)
        {
          v39 = sub_22F10ACF8(v36);
          sub_22F10BAEC(*(_QWORD *)(*(_QWORD *)(v39 & 0xFFFFFFFFFFFFFFF0) + 8));
          if ((v40 & 1) == 0)
          {
            v92 = sub_22E5453EC(*v14);
            v93 = sub_22F10C2A4(v92);
            if ((*(_DWORD *)(v93 + 28) & 0x7Fu) - 35 >= 3)
              v94 = 0;
            else
              v94 = v93;
            v174 = sub_22F10ACF8(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v94 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
            sub_22E9AC4DC(a7, &v174, &v173);
            v91 = v92;
            goto LABEL_119;
          }
        }
      }
    }
  }
  v41 = sub_22EF5C728((*a1)[11], a2);
  if (!v41 || (v42 = v41, *(_BYTE *)(v41 + 16) != 2))
  {
    if ((sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) != 0)
      return sub_22E9AAFB4((uint64_t)a1, 0);
    if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) != 0)
      return sub_22E9AAFB4((uint64_t)a1, 0);
    if ((sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0), "matrix", 6, 1, 0) & 1) != 0)
      return sub_22E9AAFB4((uint64_t)a1, 0);
    if ((sub_22F10C8DC(*v14) & 1) != 0)
      return sub_22E9AAFB4((uint64_t)a1, 0);
    if ((sub_22F10B8E0(*v14, "command_buffer", 14, 0, 0) & 1) != 0)
      return sub_22E9AAFB4((uint64_t)a1, 0);
    v52 = *v14;
    if ((sub_22F10B8E0(*v14, "render_pipeline_state", 21, 0, 0) & 1) != 0
      || (sub_22F10B8E0(v52, "compute_pipeline_state", 22, 0, 0) & 1) != 0
      || (sub_22F10CDF4(*v14) & 1) != 0
      || (sub_22F10C510(*v14) & 1) != 0
      || sub_22F10C1B4(*v14))
    {
      return sub_22E9AAFB4((uint64_t)a1, 0);
    }
    v53 = sub_22E5453EC(*v14);
    if (!v53
      || ((v54 = sub_22F10C2A4(v53), (*(_DWORD *)(v54 + 28) & 0x7Fu) - 35 >= 3) ? (v55 = 0) : (v55 = v54),
          (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v55 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)
                                               + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
    {
      v56 = sub_22E5453EC(*v14);
      if (!v56
        || ((v57 = sub_22F10C2A4(v56), (*(_DWORD *)(v57 + 28) & 0x7Fu) - 35 >= 3) ? (v58 = 0) : (v58 = v57),
            (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v58 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)+ 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0) & 1) == 0))
      {
        v59 = sub_22E5453EC(*v14);
        if (!v59
          || ((v60 = sub_22F10C2A4(v59), (*(_DWORD *)(v60 + 28) & 0x7Fu) - 35 >= 3) ? (v61 = 0) : (v61 = v60),
              (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v61 + 168) + 8) & 0xFFFFFFFFFFFFFFF0), "command_buffer", 14, 0, 0) & 1) == 0))
        {
          v62 = sub_22E5453EC(*v14);
          if (!v62
            || ((v63 = sub_22F10C2A4(v62), (*(_DWORD *)(v63 + 28) & 0x7Fu) - 35 >= 3) ? (v64 = 0) : (v64 = v63),
                (v65 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v64 + 168) + 8) & 0xFFFFFFFFFFFFFFF0),
                 (sub_22F10B8E0(v65, "render_pipeline_state", 21, 0, 0) & 1) == 0)
             && (sub_22F10B8E0(v65, "compute_pipeline_state", 22, 0, 0) & 1) == 0))
          {
            v66 = sub_22E5453EC(*v14);
            if (!v66
              || ((v67 = sub_22F10C2A4(v66), (*(_DWORD *)(v67 + 28) & 0x7Fu) - 35 >= 3) ? (v68 = 0) : (v68 = v67),
                  (sub_22F10CDF4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v68 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
            {
              v69 = sub_22E5453EC(*v14);
              if (!v69
                || ((v70 = sub_22F10C2A4(v69), (*(_DWORD *)(v70 + 28) & 0x7Fu) - 35 >= 3) ? (v71 = 0) : (v71 = v70),
                    (sub_22F10C510(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v71 + 168) + 8) & 0xFFFFFFFFFFFFFFF0)) & 1) == 0))
              {
                v72 = sub_22E5453EC(*v14);
                if (!v72
                  || ((v73 = sub_22F10C2A4(v72), (*(_DWORD *)(v73 + 28) & 0x7Fu) - 35 >= 3) ? (v74 = 0) : (v74 = v73),
                      !sub_22F10C1B4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v74 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))))
                {
                  v75 = sub_22F10C2A4(*v14);
                  if (v75)
                  {
                    v76 = v75;
                    if ((*(_DWORD *)(v75 + 28) & 0x7Fu) - 35 < 3)
                    {
                      v78 = a6 + 1;
                      v77 = a6[1];
                      if (v77)
                      {
                        while (1)
                        {
                          while (1)
                          {
                            v79 = (uint64_t **)v77;
                            v80 = v77[4];
                            if (v80 <= v75)
                              break;
                            v77 = *v79;
                            v78 = v79;
                            if (!*v79)
                              goto LABEL_121;
                          }
                          if (v80 >= v75)
                            break;
                          v77 = v79[1];
                          if (!v77)
                          {
                            v78 = v79 + 1;
                            goto LABEL_121;
                          }
                        }
                        v146 = sub_22EFC3B90(v75);
                        if (v146)
                        {
LABEL_231:
                          v147 = v146;
                          while (1)
                          {
                            v146 = *(_QWORD *)(v146 + 8) & 0xFFFFFFFFFFFFFFF8;
                            if (!v146)
                              break;
                            if ((*(_DWORD *)(v146 + 28) & 0x7Fu) - 49 < 3)
                              goto LABEL_231;
                          }
                        }
                        else
                        {
                          v147 = 0;
                        }
                        v170 = v147;
                        v174 = 0;
                        if ((sub_22E54D014((uint64_t *)a5, &v170, &v174) & 1) != 0)
                          v148 = v174;
                        else
                          v148 = *(_QWORD *)a5 + 16 * *(unsigned int *)(a5 + 16);
                        v149 = *(int **)(v148 + 8);
                        v150 = sub_22E9AB264(a1, *(_QWORD *)(v147 + 48), v147, a4, a5, a6, a7);
                        if (v149)
                          v151 = v150 == 0;
                        else
                          v151 = 1;
                        if (!v151)
                        {
                          v152 = (int *)v150;
                          v153 = (*a1)[11];
                          v154 = *(_QWORD *)(v153 + 16528);
                          v155 = (_BYTE *)sub_22E3CD3D4(v153 + 2032, 32, 3);
                          v86 = (uint64_t)v155;
                          *v155 = 112;
                          if (byte_255E04EB3)
                            sub_22F3F189C(112);
                          v156 = *(_DWORD *)v86;
                          *(_QWORD *)(v86 + 8) = v154;
                          *(_QWORD *)(v86 + 16) = v149;
                          *(_QWORD *)(v86 + 24) = v152;
                          v88 = v156 & 0xFE0000FF | 0x140000;
                          *(_QWORD *)v86 = v88;
                          v89 = *v149;
                          v90 = *v152;
                          goto LABEL_113;
                        }
                        return 0;
                      }
                      v79 = a6 + 1;
LABEL_121:
                      v96 = (uint64_t *)operator new(0x28uLL);
                      v96[4] = v76;
                      *v96 = 0;
                      v96[1] = 0;
                      v96[2] = (uint64_t)v79;
                      *v78 = v96;
                      v97 = (uint64_t *)**a6;
                      if (v97)
                      {
                        *a6 = v97;
                        v98 = *v78;
                      }
                      else
                      {
                        v98 = v96;
                      }
                      sub_22E49FD00(a6[1], v98);
                      a6[2] = (uint64_t *)((char *)a6[2] + 1);
                      v158 = sub_22E9AAFB4((uint64_t)a1, 0);
                      v99 = sub_22EFC3B90(v76);
                      if (!v99)
                        return 0;
                      v100 = v99;
                      v86 = 0;
LABEL_126:
                      LOBYTE(v170) = 0;
                      v172 = 0;
                      LOBYTE(v166) = 0;
                      v169 = 0;
                      v157 = v86;
                      if (!v86)
                        goto LABEL_151;
                      sub_22F00905C(v86, (*a1)[11], 0, (uint64_t)&v174);
                      sub_22E54C490((uint64_t)&v170, (uint64_t)&v174);
                      if (v172)
                      {
                        sub_22F00905C(v158, (*a1)[11], 0, (uint64_t)&v162);
                        sub_22E54C490((uint64_t)&v166, (uint64_t)&v162);
                        if (v169)
                        {
                          if (v168)
                            v101 = llvm::APInt::compare((llvm::APInt *)&v166, (const llvm::APInt *)&v170);
                          else
                            v101 = llvm::APInt::compareSigned((llvm::APInt *)&v166, (const llvm::APInt *)&v170);
                          v102 = v101 < 1;
                        }
                        else
                        {
                          v102 = 0;
                        }
                        if (v165 && v163 >= 0x41 && v162)
                          MEMORY[0x2348A0E84](v162, 0x1000C8000313F17);
                      }
                      else
                      {
                        v102 = 0;
                      }
                      if (v176 && v175 >= 0x41 && v174)
                        MEMORY[0x2348A0E84](v174, 0x1000C8000313F17);
                      if (v102)
                      {
                        sub_22E9AC838(a1, v173, v100);
                        v103 = 1;
                      }
                      else
                      {
LABEL_151:
                        if ((*(_BYTE *)(v100 + 29) & 1) != 0)
                        {
                          sub_22EFC8E88(v100);
                          v105 = *(uint64_t **)v104;
                          v106 = *(unsigned int *)(v104 + 8);
                          v107 = *(uint64_t **)v104;
                          if ((_DWORD)v106)
                          {
                            v108 = 8 * v106;
                            v107 = *(uint64_t **)v104;
                            while (*(_WORD *)(*v107 + 32) != 402)
                            {
                              ++v107;
                              v108 -= 8;
                              if (!v108)
                                goto LABEL_180;
                            }
                          }
                          if (v107 != &v105[v106])
                          {
                            do
                            {
                              v110 = *v105++;
                              v109 = v110;
                            }
                            while (*(_WORD *)(v110 + 32) != 402);
                            v111 = *(_QWORD *)(v109 + 40);
                            v112 = *a1;
                            if (v111)
                            {
                              v113 = v112[11];
                              v114 = *(_QWORD *)(v113 + 16528);
                              if (*(_QWORD *)(v111 + 8) != v114)
                              {
                                v115 = (unsigned int *)sub_22E3CD3D4(v113 + 2032, 24, 3);
                                v116 = sub_22F003694(v115, v114, 30, v111, 0, 0, 0);
                                v112 = *a1;
                                v111 = (uint64_t)v116;
                              }
                            }
                            LOBYTE(v162) = 0;
                            v165 = 0;
                            sub_22F00905C(v111, v112[11], 0, (uint64_t)&v174);
                            sub_22E54C490((uint64_t)&v162, (uint64_t)&v174);
                            if (v165)
                            {
                              sub_22F00905C(v158, (*a1)[11], 0, (uint64_t)&v159);
                              sub_22E54C490((uint64_t)&v166, (uint64_t)&v159);
                              if (v169)
                              {
                                if (v164)
                                  v117 = llvm::APInt::compare((llvm::APInt *)&v162, (const llvm::APInt *)&v166);
                                else
                                  v117 = llvm::APInt::compareSigned((llvm::APInt *)&v162, (const llvm::APInt *)&v166);
                                v118 = v117 >> 31;
                              }
                              else
                              {
                                v118 = 0;
                              }
                              if (v161 && v160 >= 0x41 && v159)
                                MEMORY[0x2348A0E84](v159, 0x1000C8000313F17);
                            }
                            else
                            {
                              v118 = 0;
                            }
                            if (v176 && v175 >= 0x41 && v174)
                              MEMORY[0x2348A0E84](v174, 0x1000C8000313F17);
                            if (v118)
                            {
                              v132 = v173;
                              v133 = (uint64_t *)&v162;
                              if (v163 >= 0x41)
                                v133 = v162;
                              v134 = *v133;
                              v135 = (uint64_t *)&v166;
                              if (v167 >= 0x41)
                                v135 = v166;
                              v136 = *v135;
                              v179 = v109;
                              v177 = v136;
                              v178 = v134;
                              sub_22E8FCA40(*a1, *(_DWORD *)(v173 + 24), 0xEF7u, 0, (uint64_t)&v174);
                              v137 = 0;
                              v138 = *(_QWORD *)(v132 + 40);
                              v139 = "";
                              if ((v138 & 7) == 0)
                              {
                                v140 = v138 & 0xFFFFFFFFFFFFFFF8;
                                if (v140)
                                {
                                  v141 = *(_DWORD **)(v140 + 16);
                                  v142 = *v141;
                                  v139 = (const char *)(v141 + 4);
                                  v137 = v142;
                                }
                              }
                              v159 = (unint64_t)v139;
                              v160 = v137;
                              sub_22F2F2210((uint64_t)&v174, (uint64_t)&v159);
                              sub_22E903BEC((unsigned int *)&v174);
                              sub_22E8FCA40(*a1, *(_DWORD *)(v100 + 24), 0x169Bu, 0, (uint64_t)&v174);
                              v159 = *(_QWORD *)(v109 + 16);
                              v143 = sub_22E8906A0((uint64_t)&v174, (uint64_t *)&v159);
                              v144 = sub_22E8FB3C4(v143, &v179);
                              v145 = sub_22E89519C(v144, &v178);
                              sub_22E89519C(v145, &v177);
                              sub_22E903BEC((unsigned int *)&v174);
                              v111 = v158;
                            }
                            if (v165 && v163 >= 0x41 && v162)
                              MEMORY[0x2348A0E84](v162, 0x1000C8000313F17);
                            if ((v118 & 1) != 0)
                            {
                              v103 = 1;
                              v158 = v111;
                              goto LABEL_188;
                            }
                            v158 = v111;
                          }
                        }
LABEL_180:
                        v119 = sub_22E9AB264(a1, *(_QWORD *)(v100 + 48), v100, a4, a5, a6, a7);
                        v103 = 1;
                        if (v158)
                        {
                          v120 = (_DWORD *)v119;
                          if (v119)
                          {
                            v121 = (*a1)[11];
                            v122 = *(_QWORD *)(v121 + 16528);
                            v86 = sub_22E3CD3D4(v121 + 2032, 32, 3);
                            *(_BYTE *)v86 = 112;
                            if (byte_255E04EB3)
                              sub_22F3F189C(112);
                            v123 = *(_DWORD *)v86;
                            *(_QWORD *)(v86 + 8) = v122;
                            *(_QWORD *)(v86 + 16) = v158;
                            *(_QWORD *)(v86 + 24) = v120;
                            v124 = v123 & 0xFE0000FF | 0x140000;
                            *(_DWORD *)v86 = v124;
                            *(_DWORD *)(v86 + 4) = 0;
                            *(_DWORD *)v86 = (*v120 | *(_DWORD *)v158) & 0x3E000 | v124;
                            LOBYTE(v162) = 0;
                            v165 = 0;
                            sub_22F00905C(v158, (*a1)[11], 0, (uint64_t)&v174);
                            sub_22E54C490((uint64_t)&v166, (uint64_t)&v174);
                            if (v169)
                            {
                              sub_22F00905C(v86, (*a1)[11], 0, (uint64_t)&v159);
                              sub_22E54C490((uint64_t)&v162, (uint64_t)&v159);
                              if (v165)
                              {
                                if (v164)
                                  v125 = llvm::APInt::compare((llvm::APInt *)&v162, (const llvm::APInt *)&v166);
                                else
                                  v125 = llvm::APInt::compareSigned((llvm::APInt *)&v162, (const llvm::APInt *)&v166);
                                v126 = v125 >> 31;
                              }
                              else
                              {
                                v126 = 0;
                              }
                              if (v161 && v160 >= 0x41 && v159)
                                MEMORY[0x2348A0E84](v159, 0x1000C8000313F17);
                            }
                            else
                            {
                              v126 = 0;
                            }
                            if (v176 && v175 >= 0x41 && v174)
                              MEMORY[0x2348A0E84](v174, 0x1000C8000313F17);
                            if (v126)
                            {
                              sub_22E9AC838(a1, v173, v100);
                              v103 = 1;
                              v86 = v157;
                            }
                            else
                            {
                              v159 = v100;
                              v160 = v158;
                              sub_22E9AB09C((uint64_t)&v174, a5, &v159, &v160);
                              v127 = (_DWORD *)sub_22E9AAFB4((uint64_t)a1, 1);
                              v128 = (*a1)[11];
                              v129 = *(_QWORD *)(v128 + 16528);
                              v158 = sub_22E3CD3D4(v128 + 2032, 32, 3);
                              *(_BYTE *)v158 = 112;
                              if (byte_255E04EB3)
                                sub_22F3F189C(112);
                              v103 = 0;
                              v130 = *(_DWORD *)v158;
                              *(_QWORD *)(v158 + 8) = v129;
                              *(_QWORD *)(v158 + 16) = v86;
                              *(_QWORD *)(v158 + 24) = v127;
                              v131 = v130 & 0xFE0000FF | 0x140000;
                              *(_DWORD *)v158 = v131;
                              *(_DWORD *)(v158 + 4) = 0;
                              *(_DWORD *)v158 = (*v127 | *(_DWORD *)v86) & 0x3E000 | v131;
                            }
                            if (v165 && v163 >= 0x41 && v162)
                              MEMORY[0x2348A0E84](v162, 0x1000C8000313F17);
LABEL_189:
                            if (v169 && v167 >= 0x41 && v166)
                              MEMORY[0x2348A0E84](v166, 0x1000C8000313F17);
                            if (v172 && v171 >= 0x41 && v170)
                              MEMORY[0x2348A0E84](v170, 0x1000C8000313F17);
                            if (!v103)
                            {
                              while (1)
                              {
                                v100 = *(_QWORD *)(v100 + 8) & 0xFFFFFFFFFFFFFFF8;
                                if (!v100)
                                  return v86;
                                if ((*(_DWORD *)(v100 + 28) & 0x7Fu) - 49 < 3)
                                  goto LABEL_126;
                              }
                            }
                            return 0;
                          }
                        }
                      }
LABEL_188:
                      v86 = v157;
                      goto LABEL_189;
                    }
                  }
                  return sub_22E9AAFB4((uint64_t)a1, 0);
                }
              }
            }
          }
        }
      }
    }
    goto LABEL_114;
  }
  v43 = (_DWORD *)sub_22E9AB264(a1, *(_QWORD *)(v41 + 32), a3, a4, a5, a6, a7);
  v44 = (int **)(v42 + 40);
  v45 = (int *)(v42 + 40);
  if (*(_DWORD *)(v42 + 48) >= 0x41u)
    v45 = *v44;
  v46 = sub_22E9AAFB4((uint64_t)a1, *v45);
  if (v43)
  {
    v47 = (_DWORD *)v46;
    v48 = (*a1)[11];
    v49 = *(_QWORD *)(v48 + 16528);
    v50 = sub_22E3CD3D4(v48 + 2032, 32, 3);
    *(_BYTE *)v50 = 112;
    if (byte_255E04EB3)
      sub_22F3F189C(112);
    v51 = *(_DWORD *)v50 & 0xFE0000FF;
    *(_QWORD *)(v50 + 8) = v49;
    *(_QWORD *)(v50 + 16) = v43;
    *(_QWORD *)(v50 + 24) = v47;
    v51 |= 0x80000u;
    *(_DWORD *)v50 = v51;
    *(_DWORD *)(v50 + 4) = 0;
    *(_DWORD *)v50 = (*v47 | *v43) & 0x3E000 | v51;
  }
  else
  {
    v50 = 0;
  }
  if (*(_DWORD *)(v42 + 48) >= 0x41u)
    v44 = (int **)*v44;
  v82 = sub_22E9AAFB4((uint64_t)a1, *(_DWORD *)v44 - 1);
  if (!v50)
    return 0;
  v83 = (int *)v82;
  v84 = (*a1)[11];
  v85 = *(_QWORD *)(v84 + 16528);
  v86 = sub_22E3CD3D4(v84 + 2032, 32, 3);
  *(_BYTE *)v86 = 112;
  if (byte_255E04EB3)
    sub_22F3F189C(112);
  v87 = *(_DWORD *)v86;
  *(_QWORD *)(v86 + 8) = v85;
  *(_QWORD *)(v86 + 16) = v50;
  *(_QWORD *)(v86 + 24) = v83;
  v88 = v87 & 0xFE0000FF | 0x140000;
  *(_QWORD *)v86 = v88;
  v89 = *(_DWORD *)v50;
  v90 = *v83;
LABEL_113:
  *(_DWORD *)v86 = (v90 | v89) & 0x3E000 | v88;
  return v86;
}

void sub_22E9AC4DC(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  char *v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  char *v22;
  unint64_t v23;
  char *v24;
  char *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  size_t v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *i;
  char *v49;
  __int128 v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;

  v6 = *(char **)(a1 + 8);
  v7 = *(char **)(a1 + 16);
  v8 = v7 - v6;
  if (v7 == v6)
    v9 = 0;
  else
    v9 = 32 * (v7 - v6) - 1;
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40) + v10;
  if (v9 == v11)
  {
    if (v10 < 0x100)
    {
      v32 = *(char **)(a1 + 24);
      v33 = (uint64_t)&v32[-*(_QWORD *)a1];
      if (v8 < v33)
      {
        if (v32 != v7)
        {
          *(_QWORD *)&v59 = operator new(0x1000uLL);
          sub_22F2D2D80(a1, &v59);
          goto LABEL_25;
        }
        *(_QWORD *)&v59 = operator new(0x1000uLL);
        sub_22F2D2EA4((void **)a1, &v59);
        v34 = *(_QWORD **)(a1 + 8);
        v35 = *(char **)(a1 + 16);
        v38 = *v34;
        v36 = (char *)(v34 + 1);
        v37 = v38;
        *(_QWORD *)(a1 + 8) = v36;
        if (v35 == *(char **)(a1 + 24))
        {
          v39 = *(char **)a1;
          if ((unint64_t)v36 <= *(_QWORD *)a1)
          {
            if (v35 == v39)
              v51 = 1;
            else
              v51 = (v35 - v39) >> 2;
            if (v51 >> 61)
              goto LABEL_57;
            v52 = (char *)operator new(8 * v51);
            v53 = &v52[8 * (v51 >> 2)];
            v54 = v35 - v36;
            v26 = v35 == v36;
            v35 = v53;
            if (!v26)
            {
              v35 = &v53[v54 & 0xFFFFFFFFFFFFFFF8];
              v55 = 8 * (v54 >> 3);
              v56 = &v52[8 * (v51 >> 2)];
              do
              {
                v57 = *(_QWORD *)v36;
                v36 += 8;
                *(_QWORD *)v56 = v57;
                v56 += 8;
                v55 -= 8;
              }
              while (v55);
            }
            *(_QWORD *)a1 = v52;
            *(_QWORD *)(a1 + 8) = v53;
            *(_QWORD *)(a1 + 16) = v35;
            *(_QWORD *)(a1 + 24) = &v52[8 * v51];
            if (v39)
            {
              operator delete(v39);
              v35 = *(char **)(a1 + 16);
            }
          }
          else
          {
            v40 = (uint64_t)&v36[-*(_QWORD *)a1] >> 3;
            if (v40 >= -1)
              v41 = v40 + 1;
            else
              v41 = v40 + 2;
            v42 = -(v41 >> 1);
            v43 = v41 >> 1;
            v44 = &v36[-8 * v43];
            v45 = v35 - v36;
            if (v45)
            {
              memmove(&v36[-8 * v43], v36, v45);
              v36 = *(char **)(a1 + 8);
            }
            v35 = &v44[v45];
            *(_QWORD *)(a1 + 8) = &v36[8 * v42];
            *(_QWORD *)(a1 + 16) = v35;
          }
        }
        *(_QWORD *)v35 = v37;
        goto LABEL_24;
      }
      v46 = v33 >> 2;
      if (v32 == *(char **)a1)
        v47 = 1;
      else
        v47 = v46;
      v61 = a1 + 24;
      if (!(v47 >> 61))
      {
        *(_QWORD *)&v59 = operator new(8 * v47);
        *((_QWORD *)&v59 + 1) = v59 + v8;
        *(_QWORD *)&v60 = v59 + v8;
        *((_QWORD *)&v60 + 1) = v59 + 8 * v47;
        v58 = operator new(0x1000uLL);
        sub_22F2D2D80((uint64_t)&v59, &v58);
        for (i = *(_QWORD **)(a1 + 16); i != *(_QWORD **)(a1 + 8); sub_22F2D2EA4((void **)&v59, i))
          --i;
        v49 = *(char **)a1;
        v50 = v60;
        *(_OWORD *)a1 = v59;
        *(_OWORD *)(a1 + 16) = v50;
        if (v49)
          operator delete(v49);
        goto LABEL_25;
      }
    }
    else
    {
      *(_QWORD *)(a1 + 32) = v10 - 256;
      v14 = *(_QWORD *)v6;
      v12 = v6 + 8;
      v13 = v14;
      *(_QWORD *)(a1 + 8) = v12;
      if (v7 != *(char **)(a1 + 24))
      {
LABEL_23:
        *(_QWORD *)v7 = v13;
LABEL_24:
        *(_QWORD *)(a1 + 16) += 8;
LABEL_25:
        v6 = *(char **)(a1 + 8);
        v11 = *(_QWORD *)(a1 + 32) + *(_QWORD *)(a1 + 40);
        goto LABEL_26;
      }
      v15 = *(char **)a1;
      if ((unint64_t)v12 > *(_QWORD *)a1)
      {
        v16 = (uint64_t)&v12[-*(_QWORD *)a1] >> 3;
        if (v16 >= -1)
          v17 = v16 + 1;
        else
          v17 = v16 + 2;
        v18 = -(v17 >> 1);
        v19 = v17 >> 1;
        v20 = &v12[-8 * v19];
        v21 = v7 - v12;
        if (v7 != v12)
        {
          memmove(&v12[-8 * v19], v12, v7 - v12);
          v7 = *(char **)(a1 + 8);
        }
        v22 = &v7[8 * v18];
        v7 = &v20[v21];
        *(_QWORD *)(a1 + 8) = v22;
        *(_QWORD *)(a1 + 16) = &v20[v21];
        goto LABEL_23;
      }
      if (v7 == v15)
        v23 = 1;
      else
        v23 = (v7 - v15) >> 2;
      if (!(v23 >> 61))
      {
        v24 = (char *)operator new(8 * v23);
        v25 = &v24[8 * (v23 >> 2)];
        v27 = v7 - v12;
        v26 = v7 == v12;
        v7 = v25;
        if (!v26)
        {
          v7 = &v25[v27 & 0xFFFFFFFFFFFFFFF8];
          v28 = 8 * (v27 >> 3);
          v29 = &v24[8 * (v23 >> 2)];
          do
          {
            v30 = *(_QWORD *)v12;
            v12 += 8;
            *(_QWORD *)v29 = v30;
            v29 += 8;
            v28 -= 8;
          }
          while (v28);
        }
        *(_QWORD *)a1 = v24;
        *(_QWORD *)(a1 + 8) = v25;
        *(_QWORD *)(a1 + 16) = v7;
        *(_QWORD *)(a1 + 24) = &v24[8 * v23];
        if (v15)
        {
          operator delete(v15);
          v7 = *(char **)(a1 + 16);
        }
        goto LABEL_23;
      }
    }
LABEL_57:
    sub_22E3B3F8C();
  }
LABEL_26:
  v31 = (_QWORD *)(*(_QWORD *)&v6[(v11 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v11);
  *v31 = *a2;
  v31[1] = *a3;
  ++*(_QWORD *)(a1 + 40);
}

unsigned int *sub_22E9AC838(_QWORD **a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  _DWORD *v8;
  const char *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const char *v15;
  unint64_t v16;
  _DWORD *v17;
  unsigned int v18;
  const char *v20;
  uint64_t v21;
  unsigned int v22[24];
  _QWORD v23[2];

  v23[0] = "id";
  v23[1] = 2;
  sub_22E8FCA40(*a1, *(_DWORD *)(a2 + 24), 0xEF7u, 0, (uint64_t)v22);
  v6 = *(_QWORD *)(a2 + 40) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_QWORD *)(a2 + 40) & 7) != 0 || v6 == 0)
  {
    v10 = 0;
    v9 = "";
  }
  else
  {
    v8 = *(_DWORD **)(v6 + 16);
    v11 = *v8;
    v9 = (const char *)(v8 + 4);
    v10 = v11;
  }
  v20 = v9;
  v21 = v10;
  sub_22F2F2210((uint64_t)v22, (uint64_t)&v20);
  sub_22E903BEC(v22);
  sub_22E8FCA40(*a1, *(_DWORD *)(a3 + 24), 0x169Du, 0, (uint64_t)v22);
  v12 = sub_22F2F2210((uint64_t)v22, (uint64_t)v23);
  v13 = 0;
  v14 = *(_QWORD *)(a3 + 40);
  v15 = "";
  if ((v14 & 7) == 0)
  {
    v16 = v14 & 0xFFFFFFFFFFFFFFF8;
    if (v16)
    {
      v17 = *(_DWORD **)(v16 + 16);
      v18 = *v17;
      v15 = (const char *)(v17 + 4);
      v13 = v18;
    }
  }
  v20 = v15;
  v21 = v13;
  sub_22F2F2210(v12, (uint64_t)&v20);
  return sub_22E903BEC(v22);
}

void sub_22E9AC93C(_QWORD **a1, uint64_t a2)
{
  _QWORD **v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  unsigned int v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _DWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t *v36;
  int v37;
  uint64_t v38;
  int v39;
  int v41;
  _BOOL4 v42;
  unint64_t v43;
  uint64_t **v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  unint64_t v49;
  _DWORD *v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  int v62;
  _QWORD *v63;
  uint64_t v64;
  int *v65;
  _QWORD *v66;
  int v67;
  _QWORD *v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t **v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  _DWORD *v90;
  uint64_t v91;
  int v92;
  int v93;
  int v94;
  _QWORD *v95;
  int v96;
  int v97;
  _QWORD **v98;
  uint64_t *v99;
  int v100;
  uint64_t v101;
  uint64_t **v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t *v110;
  uint64_t *v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  _QWORD *v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  const char *v119;
  _QWORD **v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  int *v124;
  uint64_t **v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t *v133;
  uint64_t *v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t **v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t *v152;
  uint64_t *v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int *v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t **v165;
  uint64_t *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t *v173;
  uint64_t *v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t *v180;
  uint64_t v181;
  unint64_t **v182;
  uint64_t v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  int *v205;
  uint64_t v207;
  uint64_t v208;
  int *v209;
  uint64_t v211;
  uint64_t v212;
  int *v213;
  unsigned int v215;
  uint64_t v216;
  uint64_t v217;
  int *v218;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  unsigned int v225;
  unint64_t v226;
  unint64_t v227;
  _DWORD *v229;
  uint64_t v230;
  const char *v231;
  unsigned int v232;
  uint64_t v233;
  _QWORD *v234;
  int v235;
  _QWORD *v236;
  uint64_t v237;
  int *v238;
  const char *v239;
  _QWORD *v240;
  int v241;
  _QWORD *v242;
  uint64_t v243;
  int *v244;
  unint64_t v245;
  unint64_t v246;
  unint64_t v247;
  unint64_t v248;
  unint64_t v249;
  unint64_t v250;
  unsigned int v251;
  unint64_t v252;
  unsigned int v253;
  unint64_t v254;
  unsigned int v255;
  unint64_t v256;
  unsigned int v257;
  uint64_t *v258;
  uint64_t v259;
  _DWORD *v260;
  _QWORD *v261;
  _DWORD *v262;
  _QWORD *v263;
  llvm::air::ResourceTracker *v264;
  llvm::air::ResourceTracker *v265;
  llvm::air::ResourceTracker *v266;
  llvm::air::ResourceTracker *v267;
  uint64_t v268;
  uint64_t v269;
  unsigned int *v270;
  _QWORD *v271;
  _DWORD *v272;
  _QWORD *v273;
  _DWORD *v274;
  _QWORD *v275;
  _DWORD *v276;
  _QWORD *v277;
  _DWORD *v278;
  _QWORD *v279;
  unsigned int *v280;
  _QWORD *v281;
  _DWORD *v282;
  _QWORD *v283;
  _QWORD *v284;
  _DWORD *v285;
  _DWORD *v286;
  _QWORD *v287;
  _DWORD *v288;
  _QWORD *v289;
  _DWORD *v290;
  _QWORD *v291;
  _DWORD *v292;
  _QWORD *v293;
  uint64_t v294;
  _QWORD **v295;
  void **v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  unsigned int v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  void *v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  unint64_t *v309;
  uint64_t v310;
  uint64_t v311;
  _QWORD *v312;
  unsigned int v313;
  uint64_t v314;

  v3 = a1;
  v314 = *MEMORY[0x24BDAC8D0];
  v4 = *(unsigned int *)(sub_22E54B75C((*a1)[11] + 15144, a2) + 8);
  if ((_DWORD)v4)
  {
    v305 = &v307;
    v5 = (uint64_t *)(v3 + 1);
    v307 = a2;
    v278 = v3 + 258;
    v279 = v3 + 257;
    v308 = 0;
    v289 = v3 + 249;
    v306 = 0x2000000001;
    v285 = v3 + 269;
    v284 = v3 + 268;
    v296 = &v305;
    v287 = v3 + 245;
    v288 = v3 + 250;
    v286 = v3 + 246;
    v280 = (unsigned int *)(v3 + 234);
    v281 = v3 + 233;
    v270 = (unsigned int *)(v3 + 242);
    v271 = v3 + 241;
    v272 = v3 + 254;
    v273 = v3 + 253;
    v276 = v3 + 238;
    v277 = v3 + 237;
    v274 = v3 + 262;
    v275 = v3 + 261;
    v260 = v3 + 266;
    v261 = v3 + 265;
    v282 = v3 + 226;
    v283 = v3 + 225;
    v262 = v3 + 230;
    v263 = v3 + 229;
    v269 = (uint64_t)(v3 + 178);
    v259 = (uint64_t)(v3 + 181);
    v294 = (uint64_t)(v3 + 166);
    v6 = &v303;
    v267 = (llvm::air::ResourceTracker *)(v3 + 126);
    v268 = (uint64_t)(v3 + 175);
    v265 = (llvm::air::ResourceTracker *)(v3 + 46);
    v266 = (llvm::air::ResourceTracker *)(v3 + 86);
    v264 = (llvm::air::ResourceTracker *)(v3 + 6);
    v292 = v3 + 208;
    v293 = v3 + 207;
    v290 = v3 + 202;
    v291 = v3 + 201;
    v7 = 1;
    while (1)
    {
      v8 = (char *)v305 + 16 * v7;
      v9 = *((_QWORD *)v8 - 2);
      v10 = *((unsigned int *)v8 - 2);
      LODWORD(v306) = v7 - 1;
      v11 = *(_QWORD *)(v9 + 48);
      if ((*(_BYTE *)(v9 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v9);
        v45 = *v44;
        if ((*(_BYTE *)(v9 + 29) & 1) != 0)
        {
          sub_22EFC8E88(v9);
          v47 = *(_QWORD *)v46 + 8 * *(unsigned int *)(v46 + 8);
        }
        else
        {
          v47 = 0;
        }
        while (v45 != (uint64_t *)v47)
        {
          v302 = 0;
          v302 = *v45;
          if (*(_WORD *)(v302 + 32) == 433 && sub_22E88FFC4(*v5) && !sub_22F26E8A8(*v5))
          {
            *((_BYTE *)v3 + 32) = 1;
            sub_22E8FCA40(*v3, *((_DWORD *)v3[1] + 6), 0xEFFu, 0, (uint64_t)&v309);
            v297 = (*(uint64_t (**)(_QWORD *))(*v3[1] + 16))(v3[1]);
            v58 = sub_22E8906A0((uint64_t)&v309, &v297);
            v59 = sub_22E890024(v58, v5);
            sub_22E8FB3C4(v59, &v302);
            sub_22E903BEC((unsigned int *)&v309);
            sub_22E8FCA40(*v3, *(_DWORD *)(v302 + 16), 0x15A7u, 0, (uint64_t)&v309);
            v297 = *(_QWORD *)(v302 + 16);
            v60 = sub_22E8906A0((uint64_t)&v309, &v297);
            sub_22E8FB3C4(v60, &v302);
            sub_22E903BEC((unsigned int *)&v309);
          }
          v48 = *(unsigned __int16 *)(v302 + 32);
          if (v48 > 0x187)
          {
            switch(*(_WORD *)(v302 + 32))
            {
              case 0x1AB:
              case 0x1AC:
                if (!sub_22E88FFC4(*v5))
                  goto LABEL_151;
                v49 = *((unsigned int *)v3 + 524);
                if (v49 < *((unsigned int *)v3 + 525))
                {
                  v50 = v274;
                  v51 = v275;
                  goto LABEL_150;
                }
                v51 = v275;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v274;
                break;
              case 0x1AD:
              case 0x1AE:
              case 0x1AF:
              case 0x1B1:
              case 0x1B2:
              case 0x1B3:
              case 0x1B4:
              case 0x1B7:
              case 0x1B8:
              case 0x1BB:
              case 0x1BC:
              case 0x1BD:
              case 0x1BE:
              case 0x1BF:
              case 0x1C0:
              case 0x1C1:
              case 0x1C4:
              case 0x1C5:
              case 0x1D1:
              case 0x1D2:
              case 0x1D3:
              case 0x1D4:
              case 0x1D5:
                goto LABEL_151;
              case 0x1B0:
                v56 = *v5;
                if (!sub_22E6A2F54(*v5) || !sub_22EAA34D4(v56))
                  goto LABEL_151;
                v49 = *((unsigned int *)v3 + 532);
                if (v49 < *((unsigned int *)v3 + 533))
                {
                  v50 = v260;
                  v51 = v261;
                  goto LABEL_150;
                }
                v51 = v261;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v260;
                break;
              case 0x1B5:
              case 0x1B6:
                goto LABEL_94;
              case 0x1B9:
              case 0x1BA:
                goto LABEL_92;
              case 0x1C2:
              case 0x1C3:
                if (!sub_22EA1DB60(*v5))
                  goto LABEL_151;
                v49 = *((unsigned int *)v3 + 516);
                if (v49 < *((unsigned int *)v3 + 517))
                {
                  v50 = v278;
                  v51 = v279;
                  goto LABEL_150;
                }
                v51 = v279;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v278;
                break;
              case 0x1C6:
                v49 = *((unsigned int *)v3 + 538);
                if (*((_DWORD *)v3 + 542) == -1)
                  *((_DWORD *)v3 + 542) = v49;
                if (v49 < *((unsigned int *)v3 + 539))
                {
                  v51 = v284;
                  v50 = v285;
                  goto LABEL_150;
                }
                v51 = v284;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v285;
                break;
              case 0x1C7:
              case 0x1C8:
                if (!sub_22EA1DB60(*v5))
                  goto LABEL_151;
                v49 = *((unsigned int *)v3 + 468);
                if (v49 < *((unsigned int *)v3 + 469))
                {
                  v50 = v280;
                  v51 = v281;
                  goto LABEL_150;
                }
                v51 = v281;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v280;
                break;
              case 0x1C9:
                if (sub_22EA1DB60(*v5))
                  goto LABEL_126;
                goto LABEL_151;
              case 0x1CA:
                if (sub_22EA1DB60(*v5) || sub_22E88FFC4(*v5))
                  goto LABEL_144;
                goto LABEL_151;
              case 0x1CB:
                goto LABEL_138;
              case 0x1CC:
              case 0x1CE:
                if (!sub_22EA1DB60(*v5))
                  goto LABEL_151;
                v52 = *((unsigned int *)v3 + 468);
                if (v52 >= *((unsigned int *)v3 + 469))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v52 = *v280;
                }
                v3[233][v52] = v9;
                ++*((_DWORD *)v3 + 468);
                v49 = *((unsigned int *)v3 + 476);
                if (v49 < *((unsigned int *)v3 + 477))
                {
                  v50 = v276;
                  v51 = v277;
                  goto LABEL_150;
                }
                v51 = v277;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v276;
                break;
              case 0x1CD:
                if (!sub_22EA1DB60(*v5))
                  goto LABEL_151;
                v54 = *((unsigned int *)v3 + 468);
                if (v54 >= *((unsigned int *)v3 + 469))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v54 = *v280;
                }
                v3[233][v54] = v9;
                ++*((_DWORD *)v3 + 468);
                v55 = *((unsigned int *)v3 + 484);
                if (v55 >= *((unsigned int *)v3 + 485))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v55 = *v270;
                }
                v3[241][v55] = v9;
                ++*((_DWORD *)v3 + 484);
LABEL_126:
                v49 = *((unsigned int *)v3 + 508);
                if (v49 < *((unsigned int *)v3 + 509))
                {
                  v50 = v272;
                  v51 = v273;
                  goto LABEL_150;
                }
                v51 = v273;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v272;
                break;
              case 0x1CF:
                goto LABEL_114;
              case 0x1D0:
                if (sub_22EA1DB60(*v5))
                {
                  v57 = *((unsigned int *)v3 + 538);
                  if (*((_DWORD *)v3 + 543) == -1)
                    *((_DWORD *)v3 + 543) = v57;
                  if (v57 >= *((unsigned int *)v3 + 539))
                  {
                    llvm::SmallVectorBase<unsigned int>::grow_pod();
                    v57 = *v285;
                  }
                  *(_QWORD *)(*v284 + 8 * v57) = v9;
                  ++*v285;
                }
LABEL_138:
                if (sub_22EA1DB60(*v5) || sub_22E88FFC4(*v5))
                  goto LABEL_140;
                goto LABEL_151;
              case 0x1D6:
                goto LABEL_155;
              default:
                if (v48 != 392)
                {
                  if (v48 == 405)
                    goto LABEL_100;
                  goto LABEL_151;
                }
LABEL_114:
                if (!sub_22EA1DB60(*v5))
                  goto LABEL_151;
                v53 = *((unsigned int *)v3 + 468);
                if (v53 >= *((unsigned int *)v3 + 469))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v53 = *v280;
                }
                v3[233][v53] = v9;
                ++*((_DWORD *)v3 + 468);
                v49 = *((unsigned int *)v3 + 484);
                if (v49 < *((unsigned int *)v3 + 485))
                {
                  v50 = v270;
                  v51 = v271;
                  goto LABEL_150;
                }
                v51 = v271;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v270;
                break;
            }
LABEL_168:
            v49 = *v50;
            goto LABEL_150;
          }
          if (*(unsigned __int16 *)(v302 + 32) <= 0x185u)
          {
            if (v48 == 376)
            {
LABEL_100:
              if (sub_22E6A2F54(*v5))
              {
                v49 = *((unsigned int *)v3 + 452);
                if (v49 >= *((unsigned int *)v3 + 453))
                {
                  v51 = v283;
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v50 = v282;
                  goto LABEL_168;
                }
                v50 = v282;
                v51 = v283;
                goto LABEL_150;
              }
            }
            else if (v48 == 377)
            {
LABEL_155:
              if (sub_22F3AC76C(*v5))
              {
                v49 = *((unsigned int *)v3 + 460);
                if (v49 >= *((unsigned int *)v3 + 461))
                {
                  v51 = v263;
                  llvm::SmallVectorBase<unsigned int>::grow_pod();
                  v50 = v262;
                  goto LABEL_168;
                }
                v50 = v262;
                v51 = v263;
LABEL_150:
                *(_QWORD *)(*v51 + 8 * v49) = v9;
                ++*v50;
              }
            }
          }
          else if (v48 == 390)
          {
LABEL_94:
            if (sub_22EA1DB60(*v5))
            {
LABEL_144:
              v49 = *((unsigned int *)v3 + 492);
              if (v49 >= *((unsigned int *)v3 + 493))
              {
                v51 = v287;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v286;
                goto LABEL_168;
              }
              v50 = v286;
              v51 = v287;
              goto LABEL_150;
            }
          }
          else if (v48 == 391)
          {
LABEL_92:
            if (sub_22EA1DB60(*v5))
            {
LABEL_140:
              v49 = *((unsigned int *)v3 + 500);
              if (v49 >= *((unsigned int *)v3 + 501))
              {
                v51 = v289;
                llvm::SmallVectorBase<unsigned int>::grow_pod();
                v50 = v288;
                goto LABEL_168;
              }
              v50 = v288;
              v51 = v289;
              goto LABEL_150;
            }
          }
LABEL_151:
          ++v45;
          continue;
        }
      }
      if (!sub_22E54AA28(v9))
        break;
LABEL_35:
      v25 = sub_22E545730(*(_QWORD *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0));
      if (v25)
      {
        if ((*(_BYTE *)(v9 + 28) & 0x80) != 0)
          goto LABEL_423;
        if (v3[192] != (_QWORD *)v9)
          goto LABEL_423;
        v26 = v25;
        if (sub_22E54AA28(v9))
          goto LABEL_423;
        v27 = sub_22F10C2A4(v26);
        if ((*(_DWORD *)(v27 + 28) & 0x7Fu) - 35 >= 3)
          v28 = 0;
        else
          v28 = v27;
        v29 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v28 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
        v30 = 0;
        if (!v29)
          goto LABEL_421;
LABEL_418:
        if ((*(_DWORD *)(v29 + 28) & 0x7Fu) - 35 >= 3)
          v30 = 0;
        else
          v30 = v29;
        goto LABEL_421;
      }
      v31 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFF0);
      if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0), "patch_control_point", 19, 1, 3)&& *v31)
      {
        v32 = sub_22F10C2A4(*v31);
        if ((*(_DWORD *)(v32 + 28) & 0x7Fu) - 35 >= 3)
          v33 = 0;
        else
          v33 = v32;
        v34 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v33 + 168) + 8) & 0xFFFFFFFFFFFFFFF0));
        v30 = 0;
        if (v34)
        {
          if ((*(_DWORD *)(v34 + 28) & 0x7Fu) - 35 >= 3)
            v30 = 0;
          else
            v30 = v34;
        }
        v35 = v10 | 1;
        goto LABEL_422;
      }
      if ((*(_BYTE *)((*v3)[9] + 127) & 0x40) == 0 && v4 <= 0x1F && ((1 << v4) & 0x80006C92) != 0)
      {
        v36 = (uint64_t *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0);
        if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v36 + 8) & 0xFFFFFFFFFFFFFFF0), "sampler", 7, 0, 0)&& !sub_22F312474(v9))
        {
          v41 = 2;
LABEL_429:
          LODWORD(v297) = v41;
          sub_22E8FCA40(*v3, *(_DWORD *)(v9 + 24), 0xF55u, 0, (uint64_t)&v309);
          v227 = *(_QWORD *)(v9 + 40) & 0xFFFFFFFFFFFFFFF8;
          if ((*(_QWORD *)(v9 + 40) & 7) != 0 || v227 == 0)
          {
            v230 = 0;
            v231 = "";
          }
          else
          {
            v229 = *(_DWORD **)(v227 + 16);
            v232 = *v229;
            v231 = (const char *)(v229 + 4);
            v230 = v232;
          }
          v302 = (uint64_t)v231;
          v303 = v230;
          v233 = sub_22F2F2210((uint64_t)&v309, (uint64_t)&v302);
          sub_22E89519C(v233, (unsigned int *)&v297);
          sub_22E903BEC((unsigned int *)&v309);
          *((_BYTE *)v3 + 32) = 1;
          goto LABEL_413;
        }
        if (sub_22F10CA40(*(_QWORD *)(*(_QWORD *)(*v36 + 8) & 0xFFFFFFFFFFFFFFF0))
          && !sub_22F3124D8(v9))
        {
          v41 = 1;
          goto LABEL_429;
        }
        v37 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(*v36 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
        if (v37 == 39 || (v37 & 0xFE) == 0x28)
        {
          v38 = *(_QWORD *)((sub_22F10ACF8(*v36) & 0xFFFFFFFFFFFFFFF0) + 8);
          if ((v38 & 8) != 0)
          {
            v39 = *(_DWORD *)((v38 & 0xFFFFFFFFFFFFFFF0) + 0x18) >> 11;
            if (v39 == 11 || v39 == 13)
            {
              if (sub_22E9AFA3C(v9))
                goto LABEL_413;
              v41 = 0;
            }
            else
            {
              if (v39 != 12 || sub_22F31253C(v9))
                goto LABEL_413;
              v41 = 3;
            }
            goto LABEL_429;
          }
        }
      }
LABEL_413:
      if (!sub_22F10DF70(*v31) || v4 > 0x29 || ((1 << v4) & 0x28180000000) == 0)
        goto LABEL_423;
      v29 = sub_22F10C2A4(*v31);
      if (v29)
        goto LABEL_418;
      v30 = 0;
LABEL_421:
      v35 = v10;
LABEL_422:
      sub_22E9AF3CC((uint64_t *)&v296, v30, v35);
LABEL_423:
      v7 = v306;
      if (!(_DWORD)v306)
      {
        if (v305 != &v307)
          free(v305);
        return;
      }
    }
    v12 = sub_22E545730(*(_QWORD *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0));
    if (v12)
    {
      if (sub_22F40929C(v12, 0))
      {
        if (!v3[191])
        {
          v3[191] = (_QWORD *)v9;
          goto LABEL_6;
        }
        v234 = *v3;
        v235 = sub_22EFBAFDC(v9);
        sub_22E8FCA40(v234, v235, 0xF32u, 0, (uint64_t)&v309);
        sub_22F2F30F4((uint64_t)&v309, (uint64_t)"imageblock with explicit layout");
        sub_22E903BEC((unsigned int *)&v309);
        v236 = v3[191];
        v237 = v236[7];
        if ((v237 & 4) != 0 && (v247 = v237 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v247 + 16)))
          v238 = **(int ***)(v247 + 24);
        else
          v238 = (int *)(v236 + 8);
        sub_22E8FCA40(*v3, *v238, 0x1771u, 0, (uint64_t)&v309);
        v239 = "imageblock with explicit layout";
      }
      else
      {
        if (!v3[192])
        {
          v3[192] = (_QWORD *)v9;
          goto LABEL_6;
        }
        v240 = *v3;
        v241 = sub_22EFBAFDC(v9);
        sub_22E8FCA40(v240, v241, 0xF32u, 0, (uint64_t)&v309);
        sub_22F2F30F4((uint64_t)&v309, (uint64_t)"imageblock with implicit layout");
        sub_22E903BEC((unsigned int *)&v309);
        v242 = v3[192];
        v243 = v242[7];
        if ((v243 & 4) != 0 && (v248 = v243 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v248 + 16)))
          v244 = **(int ***)(v248 + 24);
        else
          v244 = (int *)(v242 + 8);
        sub_22E8FCA40(*v3, *v244, 0x1771u, 0, (uint64_t)&v309);
        v239 = "imageblock with implicit layout";
      }
      sub_22F2F30F4((uint64_t)&v309, (uint64_t)v239);
      sub_22E903BEC((unsigned int *)&v309);
      *((_BYTE *)v3 + 32) = 1;
    }
LABEL_6:
    if (sub_22F10C780(*(_QWORD *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0)))
    {
      if (v3[196])
      {
        v61 = *v3;
        v62 = sub_22EFBAFDC(v9);
        sub_22E8FCA40(v61, v62, 0xF32u, 0, (uint64_t)&v309);
        sub_22F2F30F4((uint64_t)&v309, (uint64_t)"mesh");
        sub_22E903BEC((unsigned int *)&v309);
        v63 = v3[196];
        v64 = v63[7];
        if ((v64 & 4) != 0 && (v245 = v64 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v245 + 16)))
          v65 = **(int ***)(v245 + 24);
        else
          v65 = (int *)(v63 + 8);
        sub_22E8FCA40(*v3, *v65, 0x1771u, 0, (uint64_t)&v309);
        sub_22F2F30F4((uint64_t)&v309, (uint64_t)"mesh");
        sub_22E903BEC((unsigned int *)&v309);
        *((_BYTE *)v3 + 32) = 1;
      }
      else
      {
        v3[196] = (_QWORD *)v9;
      }
    }
    if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0), "mesh_grid_properties", 20, 0, 0))
    {
      if (v3[197])
      {
        v66 = *v3;
        v67 = sub_22EFBAFDC(v9);
        sub_22E8FCA40(v66, v67, 0xF32u, 0, (uint64_t)&v309);
        sub_22F2F30F4((uint64_t)&v309, (uint64_t)"mesh_grid_properties");
        sub_22E903BEC((unsigned int *)&v309);
        v68 = v3[197];
        v69 = v68[7];
        if ((v69 & 4) != 0 && (v246 = v69 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v246 + 16)))
          v70 = **(int ***)(v246 + 24);
        else
          v70 = (int *)(v68 + 8);
        sub_22E8FCA40(*v3, *v70, 0x1771u, 0, (uint64_t)&v309);
        sub_22F2F30F4((uint64_t)&v309, (uint64_t)"mesh_grid_properties");
        sub_22E903BEC((unsigned int *)&v309);
        *((_BYTE *)v3 + 32) = 1;
      }
      else
      {
        v3[197] = (_QWORD *)v9;
      }
    }
    if ((*(_BYTE *)(v9 + 29) & 1) != 0)
    {
      sub_22EFC8E88(v9);
      v77 = *v76;
      if ((*(_BYTE *)(v9 + 29) & 1) != 0)
      {
        sub_22EFC8E88(v9);
        v79 = *(_QWORD *)v78 + 8 * *(unsigned int *)(v78 + 8);
      }
      else
      {
        v79 = 0;
      }
      v258 = v6;
      v295 = v3;
      if (v77 != (uint64_t *)v79)
      {
        while (2)
        {
          v80 = *v77;
          v299 = v80;
          switch(*(_WORD *)(v80 + 32))
          {
            case 0x173:
            case 0x174:
            case 0x177:
            case 0x178:
            case 0x179:
            case 0x180:
            case 0x183:
            case 0x184:
            case 0x185:
            case 0x186:
            case 0x187:
            case 0x188:
            case 0x189:
            case 0x18D:
            case 0x18F:
            case 0x190:
            case 0x195:
            case 0x196:
            case 0x19A:
            case 0x19C:
            case 0x1A0:
            case 0x1A1:
            case 0x1A2:
            case 0x1A5:
            case 0x1A6:
            case 0x1A7:
            case 0x1A9:
            case 0x1AA:
            case 0x1AB:
            case 0x1AC:
            case 0x1AD:
            case 0x1AE:
            case 0x1AF:
            case 0x1B0:
            case 0x1B2:
            case 0x1B3:
            case 0x1B4:
            case 0x1B5:
            case 0x1B6:
            case 0x1B8:
            case 0x1B9:
            case 0x1BA:
            case 0x1BB:
            case 0x1BC:
            case 0x1C2:
            case 0x1C3:
            case 0x1C4:
            case 0x1C6:
            case 0x1C7:
            case 0x1C8:
            case 0x1C9:
            case 0x1CA:
            case 0x1CB:
            case 0x1CC:
            case 0x1CD:
            case 0x1CE:
            case 0x1CF:
            case 0x1D0:
            case 0x1D1:
            case 0x1D2:
            case 0x1D4:
            case 0x1D6:
            case 0x1D7:
            case 0x1D8:
            case 0x1D9:
            case 0x1DA:
              LOWORD(v302) = *(_WORD *)(v80 + 32);
              LODWORD(v302) = (unsigned __int16)v302;
              v303 = v9;
              sub_22E9AF6BC((uint64_t)&v309, v294, &v302, v6);
              if (!(_BYTE)v311)
              {
                v81 = v77;
                v82 = v80;
                v83 = v11;
                v84 = v4;
                v85 = v10;
                v86 = v5;
                v87 = v79;
                v88 = v6;
                v89 = v299;
                LODWORD(v309) = *(unsigned __int16 *)(v299 + 32);
                v90 = sub_22E9AF92C(v294, &v309);
                v91 = v89;
                v6 = v88;
                v79 = v87;
                v5 = v86;
                v10 = v85;
                v4 = v84;
                v11 = v83;
                v80 = v82;
                v77 = v81;
                sub_22E9AF554(v295, (int *)v9, v91, *((_QWORD *)v90 + 1));
              }
              goto LABEL_197;
            case 0x176:
              v98 = v295;
              sub_22F00905C(*(_QWORD *)(v80 + 40), (*v295)[11], 0, (uint64_t)&v302);
              if (v304)
              {
                v99 = &v302;
                if (v303 >= 0x41)
                  v99 = (uint64_t *)v302;
                v100 = *(_DWORD *)v99;
                LODWORD(v297) = *(_DWORD *)v99;
                v298 = v9;
                sub_22E9AF6BC((uint64_t)&v309, v269, &v297, &v298);
                if (!(_BYTE)v311)
                {
                  LODWORD(v309) = v100;
                  v249 = *((_QWORD *)sub_22E9AF92C(v269, &v309) + 1);
                  sub_22E8FCA40(*v295, *(_DWORD *)(v299 + 16), 0x1410u, 0, (uint64_t)&v309);
                  v101 = sub_22E8FB3C4((uint64_t)&v309, &v299);
                  LODWORD(v297) = v100;
                  sub_22E89519C(v101, (unsigned int *)&v297);
                  sub_22E903BEC((unsigned int *)&v309);
                  sub_22E8FCA40(*v295, *(_DWORD *)(v249 + 24), 0x181Bu, 0, (uint64_t)&v309);
                  goto LABEL_391;
                }
                goto LABEL_393;
              }
              goto LABEL_197;
            case 0x17B:
              sub_22EFC8E88(v9);
              v145 = *v144;
              v146 = *((unsigned int *)v144 + 2);
              if ((_DWORD)v146 && *(_WORD *)(*v145 + 32) != 379)
              {
                v147 = 8 * v146 - 8;
                v148 = *v144;
                do
                {
                  v149 = v148[1];
                  ++v148;
                  v147 -= 8;
                }
                while (*(_WORD *)(v149 + 32) != 379);
              }
              do
              {
                v151 = *v145++;
                v150 = v151;
              }
              while (*(_WORD *)(v151 + 32) != 379);
              sub_22F00905C(*(_QWORD *)(v150 + 40), v295[5][11], 0, (uint64_t)&v309);
              if (!(_BYTE)v311)
                goto LABEL_197;
              v152 = (unint64_t *)&v309;
              if (v310 >= 0x41)
                v152 = v309;
              v254 = *v152;
              v153 = (uint64_t *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0);
              v154 = 1;
              if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v153 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)&& *v153)
              {
                v154 = sub_22F409218(*v153);
              }
              if ((*(_BYTE *)(v9 + 29) & 1) != 0)
              {
                sub_22EFC8E88(v9);
                v194 = *(uint64_t **)v193;
                v195 = *(unsigned int *)(v193 + 8);
                v196 = *(uint64_t **)v193;
                v155 = v254;
                v6 = v258;
                if ((_DWORD)v195)
                {
                  v197 = 8 * v195;
                  v196 = *(uint64_t **)v193;
                  while (*(_WORD *)(*v196 + 32) != 373)
                  {
                    ++v196;
                    v197 -= 8;
                    if (!v197)
                      goto LABEL_280;
                  }
                }
                if (v196 == &v194[v195])
                {
LABEL_280:
                  v255 = v154;
                  v156 = v155;
                  if ((llvm::air::ResourceTracker::set(v264) & 1) != 0)
                    goto LABEL_405;
                  v115 = v295[5];
                  v116 = *(_DWORD *)(v9 + 24);
                  v117 = v156;
                  v118 = v255;
                  v119 = "buffer";
                  v138 = 6;
                  goto LABEL_404;
                }
                do
                {
                  v212 = *v194++;
                  v211 = v212;
                }
                while (*(_WORD *)(v212 + 32) != 373);
                sub_22F00905C(*(_QWORD *)(v211 + 40), v295[5][11], 0, (uint64_t)&v302);
                if (v304)
                {
                  v213 = (int *)&v302;
                  if (v303 >= 0x41)
                    v213 = (int *)v302;
                  v154 = *v213;
                  if (v303 >= 0x41 && v302 != 0)
                    MEMORY[0x2348A0E84]();
                }
                else
                {
                  v154 = 0;
                }
              }
              else
              {
                v6 = v258;
              }
              v155 = v254;
              goto LABEL_280;
            case 0x181:
              v98 = v295;
              sub_22F00905C(*(_QWORD *)(v80 + 40), (*v295)[11], 0, (uint64_t)&v302);
              if (!v304)
                goto LABEL_197;
              v157 = (unsigned int *)&v302;
              if (v303 >= 0x41)
                v157 = (unsigned int *)v302;
              v158 = *v157;
              LODWORD(v297) = *v157;
              v298 = v9;
              sub_22E9AF6BC((uint64_t)&v309, v268, &v297, &v298);
              if ((_BYTE)v311)
                goto LABEL_393;
              LODWORD(v309) = v158;
              v159 = *((_QWORD *)sub_22E9AF92C(v268, &v309) + 1);
              if ((*(_BYTE *)(v159 + 29) & 1) == 0)
                goto LABEL_388;
              sub_22EFC8E88(v159);
              v161 = *(uint64_t **)v160;
              v162 = *(unsigned int *)(v160 + 8);
              v163 = *(uint64_t **)v160;
              if (!(_DWORD)v162)
                goto LABEL_385;
              v164 = 8 * v162;
              v163 = *(uint64_t **)v160;
              while (*(_WORD *)(*v163 + 32) != 385)
              {
                ++v163;
                v164 -= 8;
                if (!v164)
                  goto LABEL_388;
              }
LABEL_385:
              if (v163 == &v161[v162])
              {
LABEL_388:
                v220 = 0;
                goto LABEL_389;
              }
              do
              {
                v221 = *v161++;
                v220 = v221;
              }
              while (*(_WORD *)(v221 + 32) != 385);
LABEL_389:
              v297 = v80;
              v301 = v158;
              v300 = v220;
              sub_22E8FCA40(*v295, *(_DWORD *)(v80 + 16), 0x123Cu, 0, (uint64_t)&v309);
              v222 = sub_22E8FB3C4((uint64_t)&v309, &v297);
              sub_22E89519C(v222, &v301);
              sub_22E903BEC((unsigned int *)&v309);
              if (v300)
              {
                sub_22E8FCA40(*v295, *(_DWORD *)(v300 + 16), 0x17B9u, 0, (uint64_t)&v309);
                v223 = sub_22E8FB3C4((uint64_t)&v309, &v300);
                sub_22E89519C(v223, &v301);
LABEL_391:
                sub_22E903BEC((unsigned int *)&v309);
              }
              *((_BYTE *)v98 + 32) = 1;
LABEL_393:
              v6 = v258;
              if (!v304)
                goto LABEL_197;
              if (v303 < 0x41)
                goto LABEL_197;
              v224 = v302;
              if (!v302)
                goto LABEL_197;
              goto LABEL_409;
            case 0x194:
              v120 = v295;
              if (!v295[193])
              {
                v295[193] = (_QWORD *)v9;
                goto LABEL_197;
              }
              sub_22E8FCA40(*v295, *(_DWORD *)(v80 + 16), 0xF2Fu, 0, (uint64_t)&v309);
              sub_22E8FB3C4((uint64_t)&v309, &v299);
              sub_22E903BEC((unsigned int *)&v309);
              v122 = v295[193];
              v123 = v122[7];
              if ((v123 & 4) != 0 && (v226 = v123 & 0xFFFFFFFFFFFFFFF8, *(_DWORD *)(v226 + 16)))
                v124 = **(int ***)(v226 + 24);
              else
                v124 = (int *)(v122 + 8);
              sub_22E8FCA40(*v295, *v124, 0x1771u, 0, (uint64_t)&v309);
              sub_22E8FB3C4((uint64_t)&v309, &v299);
              goto LABEL_242;
            case 0x19B:
              sub_22EFC8E88(v9);
              v166 = *v165;
              v167 = *((unsigned int *)v165 + 2);
              if ((_DWORD)v167 && *(_WORD *)(*v166 + 32) != 411)
              {
                v168 = 8 * v167 - 8;
                v169 = *v165;
                do
                {
                  v170 = v169[1];
                  ++v169;
                  v168 -= 8;
                }
                while (*(_WORD *)(v170 + 32) != 411);
              }
              do
              {
                v172 = *v166++;
                v171 = v172;
              }
              while (*(_WORD *)(v172 + 32) != 411);
              sub_22F00905C(*(_QWORD *)(v171 + 40), v295[5][11], 0, (uint64_t)&v309);
              if (!(_BYTE)v311)
                goto LABEL_197;
              v173 = (unint64_t *)&v309;
              if (v310 >= 0x41)
                v173 = v309;
              v256 = *v173;
              v174 = (uint64_t *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0);
              v175 = 1;
              if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v174 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)&& *v174)
              {
                v175 = sub_22F409218(*v174);
              }
              if ((*(_BYTE *)(v9 + 29) & 1) == 0)
              {
                v6 = v258;
                goto LABEL_401;
              }
              sub_22EFC8E88(v9);
              v199 = *(uint64_t **)v198;
              v200 = *(unsigned int *)(v198 + 8);
              v201 = *(uint64_t **)v198;
              v6 = v258;
              if (!(_DWORD)v200)
                goto LABEL_371;
              v202 = 8 * v200;
              v201 = *(uint64_t **)v198;
              while (*(_WORD *)(*v201 + 32) != 373)
              {
                ++v201;
                v202 -= 8;
                if (!v202)
                  goto LABEL_401;
              }
LABEL_371:
              v215 = v256;
              if (v201 == &v199[v200])
                goto LABEL_402;
              do
              {
                v217 = *v199++;
                v216 = v217;
              }
              while (*(_WORD *)(v217 + 32) != 373);
              sub_22F00905C(*(_QWORD *)(v216 + 40), v295[5][11], 0, (uint64_t)&v302);
              if (v304)
              {
                v218 = (int *)&v302;
                if (v303 >= 0x41)
                  v218 = (int *)v302;
                v175 = *v218;
                if (v303 >= 0x41 && v302 != 0)
                  MEMORY[0x2348A0E84]();
              }
              else
              {
                v175 = 0;
              }
LABEL_401:
              v215 = v256;
LABEL_402:
              v257 = v175;
              v225 = v215;
              if ((llvm::air::ResourceTracker::set(v265) & 1) != 0)
                goto LABEL_405;
              v115 = v295[5];
              v116 = *(_DWORD *)(v9 + 24);
              v117 = v225;
              v118 = v257;
              v119 = "threadgroup";
              v138 = 11;
              goto LABEL_404;
            case 0x1B7:
              if ((*(_BYTE *)(v9 + 29) & 1) == 0)
                goto LABEL_197;
              sub_22EFC8E88(v9);
              v140 = *(uint64_t **)v139;
              v141 = *(unsigned int *)(v139 + 8);
              v142 = *(uint64_t **)v139;
              if (!(_DWORD)v141)
                goto LABEL_307;
              v143 = 8 * v141;
              v142 = *(uint64_t **)v139;
              while (*(_WORD *)(*v142 + 32) != 385)
              {
                ++v142;
                v143 -= 8;
                if (!v143)
                  goto LABEL_197;
              }
LABEL_307:
              if (v142 == &v140[v141])
                goto LABEL_197;
              do
              {
                v177 = *v140++;
                v176 = v177;
              }
              while (*(_WORD *)(v177 + 32) != 385);
              v178 = *(_QWORD *)(v299 + 40);
              sub_22F00905C(*(_QWORD *)(v176 + 40), (*v295)[11], 0, (uint64_t)&v309);
              sub_22F00905C(v178, (*v295)[11], 0, (uint64_t)&v302);
              v179 = v311;
              if ((_BYTE)v311 && v304)
              {
                v180 = (uint64_t *)v302;
                if (v303 < 0x41)
                  v180 = &v302;
                v181 = *v180;
                v182 = &v309;
                if (v310 >= 0x41)
                  v182 = (unint64_t **)v309;
                LODWORD(v297) = *v182;
                sub_22E9AF314(v259, &v297)[1] = v181;
                if (v304 && v303 >= 0x41 && v302)
                  MEMORY[0x2348A0E84](v302, 0x1000C8000313F17);
                v179 = v311;
LABEL_320:
                v6 = v258;
                goto LABEL_406;
              }
              if (!v304)
                goto LABEL_320;
              v6 = v258;
              if (v303 < 0x41 || !v302)
                goto LABEL_406;
              MEMORY[0x2348A0E84](v302, 0x1000C8000313F17);
              goto LABEL_405;
            case 0x1BF:
              sub_22EFC8E88(v9);
              v103 = *v102;
              v104 = *((unsigned int *)v102 + 2);
              if ((_DWORD)v104 && *(_WORD *)(*v103 + 32) != 447)
              {
                v105 = 8 * v104 - 8;
                v106 = *v102;
                do
                {
                  v107 = v106[1];
                  ++v106;
                  v105 -= 8;
                }
                while (*(_WORD *)(v107 + 32) != 447);
              }
              do
              {
                v109 = *v103++;
                v108 = v109;
              }
              while (*(_WORD *)(v109 + 32) != 447);
              sub_22F00905C(*(_QWORD *)(v108 + 40), v295[5][11], 0, (uint64_t)&v309);
              if (!(_BYTE)v311)
                goto LABEL_197;
              v110 = (unint64_t *)&v309;
              if (v310 >= 0x41)
                v110 = v309;
              v250 = *v110;
              v111 = (uint64_t *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0);
              v112 = 1;
              if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v111 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)&& *v111)
              {
                v112 = sub_22F409218(*v111);
              }
              if ((*(_BYTE *)(v9 + 29) & 1) == 0)
              {
                v6 = v258;
LABEL_233:
                v113 = v250;
                goto LABEL_234;
              }
              sub_22EFC8E88(v9);
              v184 = *(uint64_t **)v183;
              v185 = *(unsigned int *)(v183 + 8);
              v186 = *(uint64_t **)v183;
              v113 = v250;
              v6 = v258;
              if ((_DWORD)v185)
              {
                v187 = 8 * v185;
                v186 = *(uint64_t **)v183;
                while (*(_WORD *)(*v186 + 32) != 373)
                {
                  ++v186;
                  v187 -= 8;
                  if (!v187)
                    goto LABEL_234;
                }
              }
              if (v186 != &v184[v185])
              {
                do
                {
                  v204 = *v184++;
                  v203 = v204;
                }
                while (*(_WORD *)(v204 + 32) != 373);
                sub_22F00905C(*(_QWORD *)(v203 + 40), v295[5][11], 0, (uint64_t)&v302);
                if (v304)
                {
                  v205 = (int *)&v302;
                  if (v303 >= 0x41)
                    v205 = (int *)v302;
                  v112 = *v205;
                  if (v303 >= 0x41 && v302 != 0)
                    MEMORY[0x2348A0E84]();
                }
                else
                {
                  v112 = 0;
                }
                goto LABEL_233;
              }
LABEL_234:
              v251 = v112;
              v114 = v113;
              if ((llvm::air::ResourceTracker::set(v267) & 1) == 0)
              {
                v115 = v295[5];
                v116 = *(_DWORD *)(v9 + 24);
                v117 = v114;
                v118 = v251;
                v119 = "sampler";
LABEL_259:
                v138 = 7;
LABEL_404:
                sub_22E9AF9E4(v115, v116, v117, v118, (uint64_t)v119, v138);
              }
LABEL_405:
              v179 = v311;
LABEL_406:
              if (v179)
              {
                if (v310 >= 0x41)
                {
                  v224 = (uint64_t)v309;
                  if (v309)
LABEL_409:
                    MEMORY[0x2348A0E84](v224, 0x1000C8000313F17);
                }
              }
LABEL_197:
              v92 = *(unsigned __int16 *)(v80 + 32);
              if (v92 == 403)
              {
                v93 = *(unsigned __int8 *)(v80 + 30);
                if ((~(v93 << 16) & 0x780000) != 0)
                  v94 = ((*(unsigned __int16 *)(v80 + 28) | (v93 << 16)) >> 19) & 0xF;
                else
                  v94 = sub_22F1BFAD0(v80);
                v3 = v295;
                if (v94)
                {
                  LOWORD(v309) = 0;
                  v310 = 0;
                  LODWORD(v311) = 0;
                  if (sub_22F00554C(*(_QWORD *)(v80 + 40), (uint64_t)&v309, (*v295)[11], 0, 0))
                  {
                    v95 = &v312;
                    if (v313 >= 0x41)
                      v95 = v312;
                    v96 = *((unsigned __int8 *)v295 + 1556);
                    *((_DWORD *)v295 + 388) = *v95;
                    if (!v96)
                      *((_BYTE *)v295 + 1556) = 1;
                  }
                  if (v311 >= 2)
                    sub_22EF53BC0(&v311);
                }
                else
                {
                  v97 = *((unsigned __int8 *)v295 + 1556);
                  *((_DWORD *)v295 + 388) = 0;
                  if (!v97)
                    *((_BYTE *)v295 + 1556) = 1;
                }
              }
              else
              {
                v3 = v295;
                if (v92 == 385)
                  *((_BYTE *)v295 + 1560) = 1;
              }
              if (++v77 == (uint64_t *)v79)
                break;
              continue;
            case 0x1C1:
              v120 = v295;
              if (v295[190])
              {
                sub_22E8FCA40(*v295, *(_DWORD *)(v80 + 16), 0xF2Fu, 0, (uint64_t)&v309);
                sub_22EF97918(v299);
                v302 = v121;
                sub_22E8AECC4((uint64_t)&v309, &v302);
LABEL_242:
                sub_22E903BEC((unsigned int *)&v309);
                *((_BYTE *)v120 + 32) = 1;
              }
              else
              {
                v295[190] = (_QWORD *)v9;
              }
              goto LABEL_197;
            case 0x1C5:
              sub_22EFC8E88(v9);
              v126 = *v125;
              v127 = *((unsigned int *)v125 + 2);
              if ((_DWORD)v127 && *(_WORD *)(*v126 + 32) != 453)
              {
                v128 = 8 * v127 - 8;
                v129 = *v125;
                do
                {
                  v130 = v129[1];
                  ++v129;
                  v128 -= 8;
                }
                while (*(_WORD *)(v130 + 32) != 453);
              }
              do
              {
                v132 = *v126++;
                v131 = v132;
              }
              while (*(_WORD *)(v132 + 32) != 453);
              sub_22F00905C(*(_QWORD *)(v131 + 40), v295[5][11], 0, (uint64_t)&v309);
              if (!(_BYTE)v311)
                goto LABEL_197;
              v133 = (unint64_t *)&v309;
              if (v310 >= 0x41)
                v133 = v309;
              v252 = *v133;
              v134 = (uint64_t *)(*(_QWORD *)(v9 + 48) & 0xFFFFFFFFFFFFFFF0);
              v135 = 1;
              if (sub_22F10B8E0(*(_QWORD *)(*(_QWORD *)(*v134 + 8) & 0xFFFFFFFFFFFFFFF0), "array", 5, 1, 0)&& *v134)
              {
                v135 = sub_22F409218(*v134);
              }
              if ((*(_BYTE *)(v9 + 29) & 1) == 0)
              {
                v6 = v258;
LABEL_256:
                v136 = v252;
                goto LABEL_257;
              }
              sub_22EFC8E88(v9);
              v189 = *(uint64_t **)v188;
              v190 = *(unsigned int *)(v188 + 8);
              v191 = *(uint64_t **)v188;
              v136 = v252;
              v6 = v258;
              if ((_DWORD)v190)
              {
                v192 = 8 * v190;
                v191 = *(uint64_t **)v188;
                while (*(_WORD *)(*v191 + 32) != 373)
                {
                  ++v191;
                  v192 -= 8;
                  if (!v192)
                    goto LABEL_257;
                }
              }
              if (v191 != &v189[v190])
              {
                do
                {
                  v208 = *v189++;
                  v207 = v208;
                }
                while (*(_WORD *)(v208 + 32) != 373);
                sub_22F00905C(*(_QWORD *)(v207 + 40), v295[5][11], 0, (uint64_t)&v302);
                if (v304)
                {
                  v209 = (int *)&v302;
                  if (v303 >= 0x41)
                    v209 = (int *)v302;
                  v135 = *v209;
                  if (v303 >= 0x41 && v302 != 0)
                    MEMORY[0x2348A0E84]();
                }
                else
                {
                  v135 = 0;
                }
                goto LABEL_256;
              }
LABEL_257:
              v253 = v135;
              v137 = v136;
              if ((llvm::air::ResourceTracker::set(v266) & 1) != 0)
                goto LABEL_405;
              v115 = v295[5];
              v116 = *(_DWORD *)(v9 + 24);
              v117 = v137;
              v118 = v253;
              v119 = "texture";
              goto LABEL_259;
            default:
              goto LABEL_197;
          }
          break;
        }
      }
    }
    if (((_DWORD)v4 == 30 || (_DWORD)v4 == 32) && sub_22EA532D4(*v3, v9, (uint64_t)v3[1], 0))
    {
      v13 = *((unsigned int *)v3 + 398);
      if (v13 >= *((unsigned int *)v3 + 399))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v13 = *((unsigned int *)v3 + 398);
      }
      v3[198][v13] = v9;
      ++*((_DWORD *)v3 + 398);
    }
    v14 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFF0);
    v15 = *(_QWORD *)(v11 & 0xFFFFFFFFFFFFFFF0);
    v16 = sub_22E53C624(v15);
    if (v16
      || ((v17 = sub_22E5453EC(v15)) != 0 || (v17 = sub_22E5457C4(v15)) != 0)
      && ((v71 = sub_22F10C2A4(v17), (*(_DWORD *)(v71 + 28) & 0x7Fu) - 35 >= 3) ? (v72 = 0) : (v72 = v71),
          (v16 = sub_22E53C624(*(_QWORD *)(*(_QWORD *)(**(_QWORD **)(v72 + 168) + 8) & 0xFFFFFFFFFFFFFFF0))) != 0))
    {
      v73 = sub_22F10C9BC(v16);
      if (v73 != 2)
      {
        if (v73 != 3)
          goto LABEL_22;
        v74 = *((unsigned int *)v3 + 428);
        if (v74 >= *((unsigned int *)v3 + 429))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod();
          v74 = *((unsigned int *)v3 + 428);
        }
        v3[213][v74] = v9;
        ++*((_DWORD *)v3 + 428);
      }
      v75 = *((unsigned int *)v3 + 416);
      if (v75 >= *((unsigned int *)v3 + 417))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v75 = *v292;
      }
      *(_QWORD *)(*v293 + 8 * v75) = v9;
      ++*v292;
    }
LABEL_22:
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 <= 1
      && (v18 = *(_QWORD *)((sub_22F10ACF8(*v14) & 0xFFFFFFFFFFFFFFF0) + 8), (v18 & 8) != 0)
      && (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x5800
      && (v19 = sub_22F10ACF8(*v14), !sub_22F10AFE4(v19, (*v3)[11])))
    {
      v21 = *((unsigned int *)v3 + 416);
      if (v21 < *((unsigned int *)v3 + 417))
      {
        v22 = v292;
        v23 = v293;
        goto LABEL_33;
      }
      v23 = v293;
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v22 = v292;
    }
    else
    {
      if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v14 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) - 39 > 1
        || (v20 = *(_QWORD *)((sub_22F10ACF8(*v14) & 0xFFFFFFFFFFFFFFF0) + 8), (v20 & 8) == 0)
        || (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) != 0x6800)
      {
LABEL_34:
        v24 = *v5;
        if (sub_22E6A2F54(*v5))
        {
          v42 = sub_22EAA34D4(v24);
          if ((_DWORD)v4 == 41 && v42 && sub_22F270914(v9) && (v10 & 1) == 0)
          {
            v43 = *((unsigned int *)v3 + 440);
            if (v43 >= *((unsigned int *)v3 + 441))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod();
              v43 = *((unsigned int *)v3 + 440);
            }
            v3[219][v43] = v9;
            ++*((_DWORD *)v3 + 440);
          }
        }
        goto LABEL_35;
      }
      v21 = *((unsigned int *)v3 + 404);
      if (v21 < *((unsigned int *)v3 + 405))
      {
        v22 = v290;
        v23 = v291;
LABEL_33:
        *(_QWORD *)(*v23 + 8 * v21) = v9;
        ++*v22;
        goto LABEL_34;
      }
      v23 = v291;
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v22 = v290;
    }
    v21 = *v22;
    goto LABEL_33;
  }
}

uint64_t sub_22E9AEA44(uint64_t result, uint64_t *a2, unint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t *v6;
  _QWORD **v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21[25];
  unsigned int v22;
  uint64_t v23;

  v22 = a5;
  if (a3 >= 2)
  {
    v6 = a2;
    v7 = (_QWORD **)result;
    v8 = 0;
    v9 = &a2[a3];
    v10 = 8 * a3;
    v11 = 8 * a3 - 8;
    v12 = a2;
    while (2)
    {
      v13 = 0;
      while (1)
      {
        v14 = *(_QWORD *)(v12[v13 / 8] + 48);
        if (v8 < 0x10)
          break;
        *(_QWORD *)v21 = v8;
        v23 = v14;
        v15 = *(_QWORD *)(a4 + 24);
        if (!v15)
        {
          sub_22E4A06C4();
          return sub_22E9AEBC4();
        }
        result = (*(uint64_t (**)(uint64_t, unsigned int *, uint64_t *))(*(_QWORD *)v15 + 48))(v15, v21, &v23);
        if (v11 != v13)
        {
          v13 += 8;
          if ((result & 1) != 0)
            continue;
        }
        if ((result & 1) == 0)
        {
          *((_BYTE *)v7 + 32) = 1;
          sub_22E8FCA40(*v7, *((_DWORD *)v7[1] + 6), 0xF18u, 0, (uint64_t)v21);
          sub_22E89519C((uint64_t)v21, &v22);
          sub_22E903BEC(v21);
          do
          {
            v16 = *v6++;
            v23 = 0;
            v23 = sub_22E9AEF2C(v16);
            sub_22E8FCA40(*v7, *(_DWORD *)(v16 + 24), 0x165Cu, 0, (uint64_t)v21);
            v20 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 16))(v16);
            v17 = sub_22E8906A0((uint64_t)v21, &v20);
            v18 = sub_22E8FB3C4(v17, &v23);
            v19 = *(_QWORD *)(v16 + 48);
            sub_22E8901B8(v18, &v19);
            result = (uint64_t)sub_22E903BEC(v21);
            v10 -= 8;
          }
          while (v10);
        }
        return result;
      }
      ++v12;
      v11 -= 8;
      v8 = v14;
      if (v12 != v9)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_22E9AEBC4(uint64_t result, uint64_t *a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  int v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *i;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;
  uint64_t *v36;
  _QWORD **v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41[24];
  uint64_t v42;
  unsigned int v43;
  unsigned int v44[3];

  v37 = (_QWORD **)result;
  if (a3)
  {
    v11 = a3;
    v12 = a2;
    v36 = &a2[a3];
    v13 = 8 * a3;
    v14 = 8 * a3;
    v15 = a2;
    while (1)
    {
      v16 = *v15;
      if (*(unsigned __int16 *)(sub_22E9AEF2C(*v15) + 32) == a4)
      {
        *(_QWORD *)v41 = *(_QWORD *)(v16 + 48);
        v17 = *(_QWORD *)(a6 + 24);
        if (!v17)
        {
LABEL_25:
          sub_22E4A06C4();
          return sub_22E9AEE38(v33, v34);
        }
        if (((*(uint64_t (**)(uint64_t, unsigned int *))(*(_QWORD *)v17 + 48))(v17, v41) & 1) != 0)
          break;
      }
      ++v15;
      v14 -= 8;
      if (!v14)
      {
        v35 = 1;
        v15 = v36;
        goto LABEL_9;
      }
    }
    v35 = 0;
LABEL_9:
    v18 = v13;
    for (i = v12; ; ++i)
    {
      v20 = *i;
      result = sub_22E9AEF2C(*i);
      if (*(unsigned __int16 *)(result + 32) == a5)
      {
        *(_QWORD *)v41 = *(_QWORD *)(v20 + 48);
        v21 = *(_QWORD *)(a7 + 24);
        if (!v21)
          goto LABEL_25;
        result = (*(uint64_t (**)(uint64_t, unsigned int *))(*(_QWORD *)v21 + 48))(v21, v41);
        if ((result & 1) != 0)
          break;
      }
      v18 -= 8;
      if (!v18)
        return result;
    }
    if ((v35 & 1) == 0)
    {
      v22 = 0;
      *((_BYTE *)v37 + 32) = 1;
      v23 = v13;
      v24 = v12;
      do
      {
        v25 = *v24++;
        if (*(unsigned __int16 *)(sub_22E9AEF2C(v25) + 32) == a4)
          ++v22;
        v23 -= 8;
      }
      while (v23);
      v43 = v11 - v22;
      v44[0] = v22;
      v42 = *(_QWORD *)(*v15 + 48);
      v26 = sub_22E3E4B64(*(_QWORD *)(v42 & 0xFFFFFFFFFFFFFFF0));
      if (v26)
        v42 = *(_QWORD *)(v26 + 32);
      sub_22E8FCA40(*v37, *((_DWORD *)v37[1] + 6), 0xF16u, 0, (uint64_t)v41);
      v40 = sub_22E9AEF2C(*i);
      sub_22E9AEE38((uint64_t)v41, &v40);
      v27 = sub_22E8901B8((uint64_t)v41, &v42);
      v39 = sub_22E9AEF2C(*v15);
      v28 = sub_22E9AEE38(v27, &v39);
      v29 = sub_22E89519C(v28, &v43);
      sub_22E89519C(v29, v44);
      sub_22E903BEC(v41);
      do
      {
        v30 = *v12++;
        v40 = 0;
        v40 = sub_22E9AEF2C(v30);
        sub_22E8FCA40(*v37, *(_DWORD *)(v30 + 24), 0x165Cu, 0, (uint64_t)v41);
        v39 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v30 + 16))(v30);
        v31 = sub_22E8906A0((uint64_t)v41, &v39);
        v32 = sub_22E8FB3C4(v31, &v40);
        v38 = *(_QWORD *)(v30 + 48);
        sub_22E8901B8(v32, &v38);
        result = (uint64_t)sub_22E903BEC(v41);
        v13 -= 8;
      }
      while (v13);
    }
  }
  return result;
}

uint64_t sub_22E9AEE38(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _QWORD *v13;
  unsigned __int8 *v14;
  uint64_t v15;

  if (*(_BYTE *)(a1 + 80))
  {
    v4 = *a2;
    v5 = *(unsigned __int8 **)(a1 + 32);
    if (!v5)
    {
      v5 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(a1 + 40));
      *(_QWORD *)(a1 + 32) = v5;
    }
    v5[*v5 + 1] = 15;
    v6 = *(_BYTE **)(a1 + 32);
  }
  else
  {
    if (!*(_BYTE *)(a1 + 92))
      return a1;
    v9 = (uint64_t *)(*(_QWORD *)a1 + 12784);
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
    v15 = v10;
    v11 = sub_22F2F1D6C(v9, &v15)[1] + 32 * *(unsigned int *)(a1 + 88);
    v14 = *(unsigned __int8 **)(v11 + 8);
    v13 = (_QWORD *)(v11 + 8);
    v12 = v14;
    v4 = *a2;
    if (!v14)
    {
      v12 = (unsigned __int8 *)sub_22E3B8AAC(v13[1]);
      *v13 = v12;
    }
    v12[*v12 + 1] = 15;
    v6 = (_BYTE *)*v13;
  }
  v7 = *v6;
  *v6 = v7 + 1;
  *(_QWORD *)&v6[8 * v7 + 16] = v4;
  return a1;
}

uint64_t sub_22E9AEF2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v4 = *(uint64_t **)v3;
  if (sub_22E54E7E8(*(uint64_t **)v3, (uint64_t *)(*(_QWORD *)v3 + 8 * *(unsigned int *)(v3 + 8))))
    return 0;
  do
  {
    v5 = *v4++;
    v1 = v5;
  }
  while (!sub_22EFA555C(v5));
  return v1;
}

uint64_t sub_22E9AEF84(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  unsigned __int8 *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _QWORD *v13;
  unsigned __int8 *v14;
  uint64_t v15;

  if (*(_BYTE *)(a1 + 80))
  {
    v4 = *a2;
    v5 = *(unsigned __int8 **)(a1 + 32);
    if (!v5)
    {
      v5 = (unsigned __int8 *)sub_22E3B8AAC(*(_QWORD *)(a1 + 40));
      *(_QWORD *)(a1 + 32) = v5;
    }
    v5[*v5 + 1] = 11;
    v6 = *(_BYTE **)(a1 + 32);
  }
  else
  {
    if (!*(_BYTE *)(a1 + 92))
      return a1;
    v9 = (uint64_t *)(*(_QWORD *)a1 + 12784);
    v10 = *(_QWORD *)(a1 + 16);
    if (v10)
      v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
    v15 = v10;
    v11 = sub_22F2F1D6C(v9, &v15)[1] + 32 * *(unsigned int *)(a1 + 88);
    v14 = *(unsigned __int8 **)(v11 + 8);
    v13 = (_QWORD *)(v11 + 8);
    v12 = v14;
    v4 = *a2;
    if (!v14)
    {
      v12 = (unsigned __int8 *)sub_22E3B8AAC(v13[1]);
      *v13 = v12;
    }
    v12[*v12 + 1] = 11;
    v6 = (_BYTE *)*v13;
  }
  v7 = *v6;
  *v6 = v7 + 1;
  *(_QWORD *)&v6[8 * v7 + 16] = v4;
  return a1;
}

uint64_t sub_22E9AF078(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  llvm *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = result;
  v2 = *(unsigned int *)(result + 16);
  v3 = *(_DWORD *)(result + 8);
  v4 = 1 << (33 - __clz(v3 - 1));
  if (v4 <= 64)
    v4 = 64;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  if (v5 == (_DWORD)v2)
  {
    *(_QWORD *)(result + 8) = 0;
    if ((_DWORD)v2)
    {
      v6 = *(llvm **)result;
      v7 = 8 * v2;
      do
      {
        *(_DWORD *)v6 = -1;
        v6 = (llvm *)((char *)v6 + 8);
        v7 -= 8;
      }
      while (v7);
    }
  }
  else
  {
    result = llvm::deallocate_buffer(*(llvm **)result, (void *)(8 * v2));
    if (v5)
    {
      v8 = (4 * v5 / 3u + 1) | ((unint64_t)(4 * v5 / 3u + 1) >> 1);
      v9 = v8 | (v8 >> 2) | ((v8 | (v8 >> 2)) >> 4);
      LODWORD(v9) = (((v9 | (v9 >> 8)) >> 16) | v9 | (v9 >> 8)) + 1;
      *(_DWORD *)(v1 + 16) = v9;
      result = MEMORY[0x23489D23C](8 * v9, 4);
      *(_QWORD *)v1 = result;
      *(_QWORD *)(v1 + 8) = 0;
      v10 = *(unsigned int *)(v1 + 16);
      if ((_DWORD)v10)
      {
        v11 = 8 * v10;
        do
        {
          *(_DWORD *)result = -1;
          result += 8;
          v11 -= 8;
        }
        while (v11);
      }
    }
    else
    {
      *(_QWORD *)v1 = 0;
      *(_QWORD *)(v1 + 8) = 0;
      *(_DWORD *)(v1 + 16) = 0;
    }
  }
  return result;
}

_QWORD *sub_22E9AF178(uint64_t a1, int a2)
{
  uint64_t v3;
  llvm *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(llvm **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = (_QWORD *)MEMORY[0x23489D23C](16 * v8, 8);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_22F3123AC(a1, (uint64_t)v4, (uint64_t)v4 + 16 * v3);
    return (_QWORD *)llvm::deallocate_buffer(v4, (void *)(16 * v3));
  }
  else
  {
    *(_QWORD *)(a1 + 8) = 0;
    v10 = *(unsigned int *)(a1 + 16);
    if ((_DWORD)v10)
    {
      v11 = 16 * v10;
      do
      {
        *result = -1;
        result += 2;
        v11 -= 16;
      }
      while (v11);
    }
  }
  return result;
}

uint64_t **sub_22E9AF238(uint64_t **a1, unsigned int a2, _DWORD *a3)
{
  uint64_t *v5;
  uint64_t **v6;
  uint64_t **v7;
  unsigned int v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;

  v6 = a1 + 1;
  v5 = a1[1];
  if (v5)
  {
    while (1)
    {
      while (1)
      {
        v7 = (uint64_t **)v5;
        v8 = *((_DWORD *)v5 + 8);
        if (v8 <= a2)
          break;
        v5 = *v7;
        v6 = v7;
        if (!*v7)
          goto LABEL_9;
      }
      if (v8 >= a2)
        break;
      v5 = v7[1];
      if (!v5)
      {
        v6 = v7 + 1;
        goto LABEL_9;
      }
    }
  }
  else
  {
    v7 = a1 + 1;
LABEL_9:
    v9 = (uint64_t *)v7;
    v7 = (uint64_t **)operator new(0x48uLL);
    *((_DWORD *)v7 + 8) = *a3;
    v7[5] = (uint64_t *)(v7 + 7);
    v7[6] = (uint64_t *)0x200000000;
    *v7 = 0;
    v7[1] = 0;
    v7[2] = v9;
    *v6 = (uint64_t *)v7;
    v10 = (uint64_t *)**a1;
    v11 = (uint64_t *)v7;
    if (v10)
    {
      *a1 = v10;
      v11 = *v6;
    }
    sub_22E49FD00(a1[1], v11);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v7;
}

_DWORD *sub_22E9AF314(uint64_t a1, _DWORD *a2)
{
  int v3;
  int v4;
  unsigned int v5;
  _DWORD *v6;
  int v7;
  _DWORD *v8;
  int v9;
  _DWORD *v10;
  BOOL v12;
  unsigned int v13;

  v3 = *(_DWORD *)(a1 + 16);
  if (!v3)
  {
    v10 = 0;
LABEL_8:
    v6 = sub_22E742DA8(a1, (uint64_t)a2, a2, v10);
    *(_QWORD *)v6 = *a2;
    return v6;
  }
  v4 = v3 - 1;
  v5 = (37 * *a2) & (v3 - 1);
  v6 = (_DWORD *)(*(_QWORD *)a1 + 8 * v5);
  v7 = *v6;
  if (*a2 != *v6)
  {
    v8 = 0;
    v9 = 1;
    while (v7 != -1)
    {
      if (v8)
        v12 = 0;
      else
        v12 = v7 == -2;
      if (v12)
        v8 = v6;
      v13 = v5 + v9++;
      v5 = v13 & v4;
      v6 = (_DWORD *)(*(_QWORD *)a1 + 8 * (v13 & v4));
      v7 = *v6;
      if (*a2 == *v6)
        return v6;
    }
    if (v8)
      v10 = v8;
    else
      v10 = v6;
    goto LABEL_8;
  }
  return v6;
}

void sub_22E9AF3CC(uint64_t *a1, uint64_t a2, unsigned int a3)
{
  unint64_t v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[18];

  v13[17] = *MEMORY[0x24BDAC8D0];
  v13[0] = 0x1000000000;
  v5 = sub_22EFC3B90(a2);
  v6 = 0;
  if (v5)
  {
    v7 = v5;
LABEL_3:
    if (v6 >= HIDWORD(v13[0]))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod();
      v6 = v13[0];
    }
    v13[v6 + 1] = v7;
    v6 = ++LODWORD(v13[0]);
    while (1)
    {
      v7 = *(_QWORD *)(v7 + 8) & 0xFFFFFFFFFFFFFFF8;
      if (!v7)
        break;
      if ((*(_DWORD *)(v7 + 28) & 0x7Fu) - 49 < 3)
        goto LABEL_3;
    }
  }
  if (v6)
  {
    v8 = v6;
    do
    {
      v9 = *a1;
      v10 = *(unsigned int *)(*a1 + 8);
      if (v10 >= *(_DWORD *)(*a1 + 12))
      {
        v12 = v13[v8];
        llvm::SmallVectorBase<unsigned int>::grow_pod();
        v10 = *(_QWORD *)v9 + 16 * *(unsigned int *)(v9 + 8);
        *(_QWORD *)v10 = v12;
        *(_QWORD *)(v10 + 8) = a3;
        LODWORD(v10) = *(_DWORD *)(v9 + 8);
      }
      else
      {
        v11 = *(_QWORD *)v9 + 16 * v10;
        *(_QWORD *)v11 = v13[v8];
        *(_DWORD *)(v11 + 8) = a3;
      }
      *(_DWORD *)(v9 + 8) = v10 + 1;
      --v8;
    }
    while (v8 * 8);
  }
}

unsigned int *sub_22E9AF554(_QWORD **a1, int *a2, uint64_t a3, uint64_t a4)
{
  unsigned __int16 v7;
  int v8;
  char v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[13];
  uint64_t v19;

  v19 = a3;
  v7 = *(_WORD *)(a3 + 32);
  v18[0] = 0x8000000200000001;
  v18[1] = 0x80000000;
  v8 = sub_22E3B38EC((_DWORD *)a1 + 4, v18);
  v9 = v8;
  if (v8)
    v10 = 6726;
  else
    v10 = 3800;
  sub_22E8FCA40(*a1, a2[6], v10, 0, (uint64_t)v18);
  v17 = (*(uint64_t (**)(int *))(*(_QWORD *)a2 + 16))(a2);
  v11 = sub_22E8906A0((uint64_t)v18, &v17);
  sub_22E8FB3C4(v11, &v19);
  sub_22E903BEC((unsigned int *)v18);
  if ((v9 & 1) == 0)
    *((_BYTE *)a1 + 32) = 1;
  v17 = 0;
  if ((*(_BYTE *)(a4 + 29) & 1) != 0)
  {
    sub_22EFC8E88(a4);
    v14 = *v13;
    if ((*(_BYTE *)(a4 + 29) & 1) != 0)
    {
      sub_22EFC8E88(a4);
      v16 = *(_QWORD *)v15 + 8 * *(unsigned int *)(v15 + 8);
    }
    else
    {
      v16 = 0;
    }
    if (v14 != v16)
    {
      while (*(unsigned __int16 *)(*(_QWORD *)v14 + 32) != v7)
      {
        v14 += 8;
        if (v14 == v16)
          goto LABEL_7;
      }
      v17 = *(_QWORD *)v14;
    }
  }
LABEL_7:
  sub_22E8FCA40(*a1, *(_DWORD *)(a4 + 24), 0x16A9u, 0, (uint64_t)v18);
  sub_22E8FB3C4((uint64_t)v18, &v17);
  return sub_22E903BEC((unsigned int *)v18);
}

_DWORD *sub_22E9AF6BC(uint64_t a1, uint64_t a2, _DWORD *a3, _QWORD *a4)
{
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  _DWORD *result;
  int v12;
  char v13;
  _DWORD *v14;
  _DWORD *v15;
  int v16;
  BOOL v17;
  unsigned int v18;

  v8 = *(_DWORD *)(a2 + 16);
  if (!v8)
  {
    v14 = 0;
LABEL_5:
    result = sub_22E9AF7A8(a2, a3, v14);
    *result = *a3;
    *((_QWORD *)result + 1) = *a4;
    v9 = *(_QWORD *)a2;
    v8 = *(_DWORD *)(a2 + 16);
    v13 = 1;
    goto LABEL_6;
  }
  v9 = *(_QWORD *)a2;
  v10 = (37 * *a3) & (v8 - 1);
  result = (_DWORD *)(*(_QWORD *)a2 + 16 * v10);
  v12 = *result;
  if (*a3 != *result)
  {
    v15 = 0;
    v16 = 1;
    while (v12 != -1)
    {
      if (v15)
        v17 = 0;
      else
        v17 = v12 == -2;
      if (v17)
        v15 = result;
      v18 = v10 + v16++;
      v10 = v18 & (v8 - 1);
      result = (_DWORD *)(v9 + 16 * v10);
      v12 = *result;
      if (*a3 == *result)
        goto LABEL_3;
    }
    if (v15)
      v14 = v15;
    else
      v14 = result;
    goto LABEL_5;
  }
LABEL_3:
  v13 = 0;
LABEL_6:
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v9 + 16 * v8;
  *(_BYTE *)(a1 + 16) = v13;
  return result;
}

_DWORD *sub_22E9AF7A8(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  int v5;
  unsigned int v6;
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  _DWORD *v12;
  int v13;
  BOOL v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  BOOL v21;
  unsigned int v22;

  v5 = *(_DWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 16);
  if (4 * v5 + 4 < 3 * v6)
  {
    if (v6 + ~v5 - *(_DWORD *)(a1 + 12) > v6 >> 3)
      goto LABEL_3;
    sub_22E3C34FC(a1, v6);
    v16 = *(_DWORD *)(a1 + 16);
    if (v16)
    {
      v17 = v16 - 1;
      v18 = (37 * *a2) & v17;
      a3 = (_DWORD *)(*(_QWORD *)a1 + 16 * v18);
      v19 = *a3;
      if (*a2 == *a3)
        goto LABEL_3;
      v12 = 0;
      v20 = 1;
      while (v19 != -1)
      {
        if (v12)
          v21 = 0;
        else
          v21 = v19 == -2;
        if (v21)
          v12 = a3;
        v22 = v18 + v20++;
        v18 = v22 & v17;
        a3 = (_DWORD *)(*(_QWORD *)a1 + 16 * v18);
        v19 = *a3;
        if (*a2 == *a3)
          goto LABEL_3;
      }
      goto LABEL_29;
    }
LABEL_28:
    a3 = 0;
    goto LABEL_3;
  }
  sub_22E3C34FC(a1, 2 * v6);
  v8 = *(_DWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_28;
  v9 = v8 - 1;
  v10 = (37 * *a2) & v9;
  a3 = (_DWORD *)(*(_QWORD *)a1 + 16 * v10);
  v11 = *a3;
  if (*a2 == *a3)
    goto LABEL_3;
  v12 = 0;
  v13 = 1;
  while (v11 != -1)
  {
    if (v12)
      v14 = 0;
    else
      v14 = v11 == -2;
    if (v14)
      v12 = a3;
    v15 = v10 + v13++;
    v10 = v15 & v9;
    a3 = (_DWORD *)(*(_QWORD *)a1 + 16 * v10);
    v11 = *a3;
    if (*a2 == *a3)
      goto LABEL_3;
  }
LABEL_29:
  if (v12)
    a3 = v12;
LABEL_3:
  ++*(_DWORD *)(a1 + 8);
  if (*a3 != -1)
    --*(_DWORD *)(a1 + 12);
  return a3;
}

_DWORD *sub_22E9AF92C(uint64_t a1, _DWORD *a2)
{
  int v3;
  int v4;
  unsigned int v5;
  _DWORD *v6;
  int v7;
  _DWORD *v8;
  int v9;
  BOOL v10;
  unsigned int v11;
  _DWORD *v12;

  v3 = *(_DWORD *)(a1 + 16);
  if (!v3)
  {
    v12 = 0;
LABEL_13:
    v6 = sub_22E9AF7A8(a1, a2, v12);
    *v6 = *a2;
    *((_QWORD *)v6 + 1) = 0;
    return v6;
  }
  v4 = v3 - 1;
  v5 = (37 * *a2) & (v3 - 1);
  v6 = (_DWORD *)(*(_QWORD *)a1 + 16 * v5);
  v7 = *v6;
  if (*a2 != *v6)
  {
    v8 = 0;
    v9 = 1;
    while (v7 != -1)
    {
      if (v8)
        v10 = 0;
      else
        v10 = v7 == -2;
      if (v10)
        v8 = v6;
      v11 = v5 + v9++;
      v5 = v11 & v4;
      v6 = (_DWORD *)(*(_QWORD *)a1 + 16 * (v11 & v4));
      v7 = *v6;
      if (*a2 == *v6)
        return v6;
    }
    if (v8)
      v12 = v8;
    else
      v12 = v6;
    goto LABEL_13;
  }
  return v6;
}

unsigned int *sub_22E9AF9E4(_QWORD *a1, int a2, unsigned int a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9[24];
  unsigned int v10;
  unsigned int v11;
  _QWORD v12[2];

  v12[0] = a5;
  v12[1] = a6;
  v10 = a4;
  v11 = a3;
  sub_22E8FCA40(a1, a2, 0xEF8u, 0, (uint64_t)v9);
  v6 = sub_22F2F2210((uint64_t)v9, (uint64_t)v12);
  v7 = sub_22E89519C(v6, &v11);
  sub_22E89519C(v7, &v10);
  return sub_22E903BEC(v9);
}

BOOL sub_22E9AFA3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 29) & 1) == 0)
    return 0;
  sub_22EFC8E88(a1);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned int *)(v2 + 8);
  v5 = *(_QWORD *)v2 + 8 * v4;
  if ((_DWORD)v4)
  {
    v6 = 8 * v4;
    while (*(_WORD *)(*(_QWORD *)v3 + 32) != 379)
    {
      v3 += 8;
      v6 -= 8;
      if (!v6)
      {
        v3 = v5;
        return v3 != v5;
      }
    }
  }
  return v3 != v5;
}

void sub_22E9AFAA4()
{
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22E9AFAB8()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_24FAB7270;
  return result;
}

void sub_22E9AFADC(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24FAB7270;
}

BOOL sub_22E9AFAF4(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  int v4;
  uint64_t *v5;
  int v6;
  uint64_t v8;

  v3 = *(_QWORD *)(*a2 & 0xFFFFFFFFFFFFFFF0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v3 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  v5 = (uint64_t *)(*a3 & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*v5 + 8) & 0xFFFFFFFFFFFFFFF0) + 16);
  if (v4 == 11 || v6 == 11)
    return (v4 == 11) == (v6 == 11);
  v8 = sub_22E3E4B64(v3);
  return *(_DWORD *)(v8 + 20) == *(_DWORD *)(sub_22E3E4B64(*v5) + 20);
}

void sub_22E9AFB8C()
{
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22E9AFBA0(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_24FAB72B8;
  result[1] = v3;
  return result;
}

uint64_t sub_22E9AFBD4(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_24FAB72B8;
  a2[1] = v2;
  return result;
}

BOOL sub_22E9AFBF0(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  return *(_QWORD *)(*(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0) == *(_QWORD *)(*(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFFF0) + 8) & 0xFFFFFFFFFFFFFFF0);
}

void sub_22E9AFC28()
{
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22E9AFC3C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_24FAB7300;
  return result;
}

void sub_22E9AFC60(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24FAB7300;
}

BOOL sub_22E9AFC78(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v2 = (uint64_t *)(*a2 & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22E3E4B64(*v2);
  if (v3)
    v2 = (uint64_t *)(*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(*(_QWORD *)(*v2 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
    v5 = *(_DWORD *)(v4 + 16) == 11;
  else
    v5 = 0;
  return v5 && (*(_DWORD *)(v4 + 16) & 0xFF80000) == 91226112;
}

void sub_22E9AFCEC()
{
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22E9AFD00()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_24FAB7348;
  return result;
}

void sub_22E9AFD24(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24FAB7348;
}

BOOL sub_22E9AFD3C(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;

  v2 = (uint64_t *)(*a2 & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_22E3E4B64(*v2);
  if (v3)
    v2 = (uint64_t *)(*(_QWORD *)(v3 + 32) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(*(_QWORD *)(*v2 + 8) & 0xFFFFFFFFFFFFFFF0);
  if (v4)
    v5 = *(_DWORD *)(v4 + 16) == 11;
  else
    v5 = 0;
  return v5 && (*(_DWORD *)(v4 + 16) & 0xFF80000) == 90701824;
}

void sub_22E9AFDB0()
{
  JUMPOUT(0x2348A0E9CLL);
}

_QWORD *sub_22E9AFDC4()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_24FAB7390;
  return result;
}

void sub_22E9AFDE8(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_24FAB7390;
}

BOOL sub_22E9AFE00(uint64_t a1, _QWORD *a2, int *a3)
{
  int v3;
  int v4;
  int v5;

  v3 = *a3;
  v4 = *(_DWORD *)(sub_22E3E4B64(*(_QWORD *)(*a2 & 0xFFFFFFFFFFFFFFF0)) + 20);
  if (v3)
    v5 = 3;
  else
    v5 = 2;
  return v4 != v5;
}

uint64_t sub_22E9AFE44(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  unint64_t v21;
  _DWORD *v22;
  unsigned int v23;
  _QWORD v24[2];
  unsigned int v25[24];

  v8 = sub_22F10C2A4(*(_QWORD *)(*(_QWORD *)(a2 + 48) & 0xFFFFFFFFFFFFFFF0));
  if (v8 && (*(_DWORD *)(v8 + 28) & 0x7Fu) - 35 >= 3)
    v8 = 0;
  v9 = sub_22EFC3B90(v8);
  if (!v9)
    return 1;
  v10 = v9;
  v11 = 1;
LABEL_6:
  v24[0] = v10;
  *(_QWORD *)v25 = 0;
  v12 = sub_22F251EFC((uint64_t *)a4, v24, v25);
  v13 = *(_QWORD *)a4 + 24 * *(unsigned int *)(a4 + 16);
  if (v12)
    v13 = *(_QWORD *)v25;
  v14 = *(_QWORD *)(v13 + 8);
  v15 = *(_QWORD *)(v13 + 16);
  switch((int)v14)
  {
    case 1:
    case 2:
    case 3:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      v16 = sub_22E9AA08C(a1, v10, v14, v15);
      break;
    case 4:
    case 5:
    case 6:
      v16 = sub_22E9AA2F0(a1, v10, v14, v15);
      break;
    case 7:
    case 8:
    case 9:
      v16 = sub_22E9AA8C0(a1, v10, v14, v15);
      break;
    case 10:
    case 11:
    case 12:
      v16 = sub_22E9AAA60(a1, v10, v14, v15);
      break;
    case 13:
    case 14:
    case 15:
      v16 = sub_22E9AACC4(a1, v10, v14, v15);
      break;
    default:
      v16 = sub_22E9AFE44(a1, v10, a3, a4);
      break;
  }
  v11 &= v16;
  while (1)
  {
    v10 = *(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF8;
    if (!v10)
      break;
    if ((*(_DWORD *)(v10 + 28) & 0x7Fu) - 49 < 3)
      goto LABEL_6;
  }
  if ((v11 & 1) != 0)
    return 1;
  if ((*(_DWORD *)(a2 + 28) & 0x7F) == 0x40)
  {
    sub_22E8FCA40(*a1, *(_DWORD *)(a2 + 24), 0x1687u, 0, (uint64_t)v25);
    v18 = 0;
    v19 = *(_QWORD *)(a2 + 40);
    v20 = "";
    if ((v19 & 7) == 0)
    {
      v21 = v19 & 0xFFFFFFFFFFFFFFF8;
      if (v21)
      {
        v22 = *(_DWORD **)(v21 + 16);
        v23 = *v22;
        v20 = (const char *)(v22 + 4);
        v18 = v23;
      }
    }
    v24[0] = v20;
    v24[1] = v18;
    sub_22F2F2210((uint64_t)v25, (uint64_t)v24);
    sub_22E903BEC(v25);
  }
  return 0;
}

uint64_t sub_22E9B002C()
{
  int *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int i;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD *v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  unsigned __int8 *v74;
  unsigned __int8 *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  int j;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  int v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unsigned int *v154;
  uint64_t v155;
  unsigned __int8 *v156;
  unsigned __int8 *v157;
  int v158;
  uint64_t v159;
  int v160;
  uint64_t v161;
  int v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  unsigned int v168;
  uint64_t v169;
  _QWORD *v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  _QWORD *v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  unint64_t v186;
  int k;
  uint64_t v188;
  unsigned int v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  _DWORD *v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unsigned int v209;
  uint64_t v210;
  char v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  unsigned __int8 *v215;
  unsigned __int8 *v216;
  int v217;
  unint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  _QWORD *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unint64_t v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  unint64_t v252;
  int m;
  uint64_t v254;
  unsigned int v255;
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  int v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  BOOL v271;
  BOOL v272;
  uint64_t v273;
  uint64_t v274;
  _QWORD *v275;
  uint64_t v276;
  int v277;
  unint64_t v278;
  unint64_t v279;
  _QWORD *v280;
  uint64_t v281;
  BOOL v282;
  uint64_t v283;
  uint64_t v284;
  unint64_t v285;
  uint64_t *v286;
  _QWORD *v287;
  uint64_t *v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  unint64_t v292;
  char *v293;
  int v294;
  unsigned __int8 *v295;
  char *v296;
  int v297;
  uint64_t *v298;
  __int128 v299;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  int v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  unint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  _QWORD *v323;
  uint64_t v324;
  unsigned int *v325;
  uint64_t v326;
  unsigned __int8 *v327;
  unsigned __int8 *v328;
  int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  uint64_t v335;
  int v336;
  int v337;
  uint64_t v338;
  uint64_t v339;
  int v340;
  int v341;
  uint64_t v342;
  _QWORD *v343;
  _QWORD *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  int v349;
  int v350;
  int v351;
  int v352;
  unint64_t v353;
  int v354;
  int v355;
  uint64_t v356;
  _QWORD *v357;
  unint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  unint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  _QWORD *v367;
  int v368;
  uint64_t *v369;
  uint64_t v370;
  unint64_t v371;
  unint64_t v372;
  unint64_t v373;
  uint64_t v374;
  __int128 v375;
  unint64_t v376;
  unsigned __int8 *v377;
  unint64_t v378;
  unint64_t v379;
  uint64_t v380;
  int v381;
  _QWORD *v382;
  _BYTE __src[40];
  __int128 v384;
  __int128 v385;
  int v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  _QWORD *v390;
  uint64_t v391;
  int v392;
  _QWORD v393[3];
  __int16 v394;
  char v395;
  int v396;
  int *v397;
  _QWORD *v398;
  unint64_t v399;
  int v400;
  int v401;
  char v402;
  uint64_t v403;

  v0 = (int *)MEMORY[0x24BDAC7A8]();
  v403 = *MEMORY[0x24BDAC8D0];
  v373 = 0;
  v2 = sub_22EF64498(*(_QWORD *)(*(_QWORD *)v0 + 88), v1);
  LODWORD(v375) = 1;
  *((_QWORD *)&v375 + 1) = v2;
  v374 = 0;
  v3 = sub_22EFE9F28(*((_QWORD *)v0 + 40), (uint64_t)&v375, 1, (uint64_t)&v374);
  if (v3)
    goto LABEL_253;
  v4 = *(_QWORD *)v0;
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 3352);
  if ((v5 & 1) != 0)
  {
    v5 = (*(uint64_t (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)(v4 + 88) + 16048) + 16))(*(_QWORD *)(*(_QWORD *)(v4 + 88) + 16048), v5 >> 1);
    *(_QWORD *)(v4 + 3352) = v5;
    v4 = *(_QWORD *)v0;
  }
  v6 = v5 + 48;
  if (v5)
    v7 = v5 + 48;
  else
    v7 = 0;
  v3 = sub_22EFEB760(*(_QWORD *)(v4 + 88), 0, v7, v0[4], v0[4], *((_QWORD *)v0 + 40), &v375, 1, 0);
  *(_DWORD *)(v3 + 28) |= 0x200u;
  *(_BYTE *)(v3 + 180) = *(_BYTE *)(v3 + 180) & 0xF8 | 2;
  sub_22EFCCFA0(v6, v3);
  sub_22EFEA2C8(*((_QWORD *)v0 + 40), v3, v374);
  sub_22EFC3340(v3);
  v8 = (uint64_t *)(v2 & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22F10C2A4(*(_QWORD *)(v2 & 0xFFFFFFFFFFFFFFF0));
  if (!v9
    || (v15 = v9, (*(_DWORD *)(v9 + 28) & 0x7Fu) - 35 > 2)
    || ((v16 = sub_22E9B28C8(v0, v9, 1), v17 = sub_22E9B28C8(v0, v15, 5), v16) ? (v18 = v17 == 0) : (v18 = 1), !v18))
  {
    v10 = *v8;
    if (!*v8 || (v11 = *(_DWORD *)(v10 + 16), (v11 & 0xFE) != 0x28))
    {
      v14 = v2;
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_25;
      v10 = sub_22F10CF48(v10);
      v14 = v2;
      if (!v10)
        goto LABEL_25;
      v11 = *(_DWORD *)(v10 + 16);
    }
    v12 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    if ((v11 & 0x100000) != 0)
    {
      do
      {
        while (1)
        {
          v10 = *(_QWORD *)(*(_QWORD *)(v10 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (!v10)
            break;
          v13 = *(_DWORD *)(v10 + 16);
          if ((v13 & 0xFE) != 0x28)
            break;
          if ((v13 & 0x100000) == 0)
            goto LABEL_16;
        }
        v10 = sub_22F10CF48(v10);
      }
      while ((*(_DWORD *)(v10 + 16) & 0x100000) != 0);
    }
LABEL_16:
    v14 = sub_22EF5B848(v12, *(_QWORD *)(v10 + 32), 0);
LABEL_25:
    v369 = (uint64_t *)(v2 & 0xFFFFFFFFFFFFFFF0);
    v19 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    v397 = *(int **)(v19 + 16816);
    *(_WORD *)__src = 0;
    __src[2] &= 0xFCu;
    *(_OWORD *)&__src[4] = 0uLL;
    *(_OWORD *)&__src[24] = 0u;
    v384 = 0u;
    v385 = 0u;
    v386 = 0;
    v371 = v2;
    v20 = sub_22EF63D8C(v19, v2, (uint64_t *)&v397, 1uLL, (__int128 *)__src, 0);
    v21 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(*(_QWORD *)v0 + 88) + 15192), "load_argument", 0xDuLL);
    v22 = v0[4];
    v397 = (int *)v21;
    LODWORD(v398) = v22;
    sub_22EFC6D6C((uint64_t)&v399, v21);
    v23 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    v24 = sub_22EF579A8(v23, v20, v22);
    v25 = sub_22EFD6AD8(v23, v3, v22, (uint64_t *)&v397, v20, (uint64_t)v24, 2, 0, 1, 0, v0[4], 0);
    *(_DWORD *)(v25 + 28) &= 0xFFFF9FFF;
    v26 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    memset(__src, 0, 28);
    __src[30] = 0;
    *(_WORD *)&__src[28] = 478;
    v27 = sub_22F37D4D8(v26, __src);
    sub_22EFCA95C(v25, v27);
    v28 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    memset(__src, 0, 30);
    __src[30] = 120;
    v29 = sub_22F3A5E00(v28, 1, __src);
    sub_22EFCA95C(v25, v29);
    v30 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    if (v25)
      v31 = v25 + 72;
    else
      v31 = 0;
    v32 = v0[4];
    v33 = sub_22E3CB704(*(llvm::StringMapImpl **)(v30 + 15192), "ptr", 3uLL);
    v34 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    v35 = *(_QWORD *)(v34 + 16816);
    v36 = sub_22EF579A8(v34, v35, v0[4]);
    v37 = sub_22EFBF080(v30, v31, v32, v32, v33, v35, (uint64_t)v36, 0, 0);
    *(_DWORD *)(v37 + 96) &= 0xF0001FFF;
    if (!v25 || (v38 = v25, (*(_DWORD *)(v25 + 28) & 0x7F) != 0x53))
    {
      v39 = *(_QWORD *)(v25 + 16);
      v40 = v39 & 0xFFFFFFFFFFFFFFF8;
      if ((v39 & 4) != 0)
        v40 = *(_QWORD *)v40;
      for (i = *(_WORD *)(v40 + 8) & 0x7F; i != 83; i = *(_WORD *)(v40 + 8) & 0x7F)
      {
        v42 = -40;
        if (i > 70)
        {
          if (i == 71)
          {
            v42 = -56;
          }
          else if (i != 81)
          {
            goto LABEL_43;
          }
        }
        else
        {
          if (i > 0x18)
            goto LABEL_42;
          if (i == 16)
            goto LABEL_36;
          if (((1 << i) & 0x1066) != 0)
            goto LABEL_49;
          if (i == 24)
          {
LABEL_36:
            v42 = -48;
          }
          else
          {
LABEL_42:
            if (i != 70)
            {
LABEL_43:
              v43 = i - 52;
              if ((i - 33) >= 5)
                v44 = -48;
              else
                v44 = -64;
              if (v43 >= 6)
                v42 = v44;
              else
                v42 = -72;
              goto LABEL_49;
            }
            v42 = -64;
          }
        }
LABEL_49:
        v45 = *(_QWORD *)(v40 + v42 + 16);
        v40 = v45 & 0xFFFFFFFFFFFFFFF8;
        if ((v45 & 4) != 0)
          v40 = *(_QWORD *)v40;
      }
      v38 = v40 - 40;
    }
    v46 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v38 + 88) + 2032, 8, 3);
    *(_QWORD *)(v25 + 120) = v46;
    *v46 = v37;
    v47 = *(_QWORD *)v0;
    v48 = *(_QWORD *)(*(_QWORD *)v0 + 216);
    v49 = *(_QWORD *)(*(_QWORD *)v0 + 3200);
    *(_QWORD *)(v47 + 3200) = 0;
    v359 = *(_QWORD *)(v47 + 10288);
    v365 = v49;
    v354 = *(_DWORD *)(v47 + 1944);
    v350 = *(_DWORD *)(v47 + 2192);
    *(_QWORD *)(v47 + 216) = v31;
    *(_QWORD *)(v47 + 10288) = 0;
    *(_DWORD *)(v47 + 1944) = *(_DWORD *)(v47 + 1904);
    *(_DWORD *)(v47 + 2192) = *(_DWORD *)(v47 + 1960);
    v50 = *(_QWORD *)(v37 + 48);
    v51 = *(_QWORD *)(v50 & 0xFFFFFFFFFFFFFFF0);
    if (v51 && (v52 = *(_DWORD *)(v51 + 16), (v52 & 0xFE) == 0x28))
    {
      v53 = v371;
      if ((v52 & 0x100000) != 0)
      {
LABEL_341:
        v53 = v371;
        do
        {
          v51 = *(_QWORD *)(*(_QWORD *)(v51 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v51)
          {
            v330 = *(_DWORD *)(v51 + 16);
            if ((v330 & 0xFE) == 0x28)
              continue;
          }
          v51 = sub_22F10CF48(v51);
          v330 = *(_DWORD *)(v51 + 16);
        }
        while ((v330 & 0x100000) != 0);
      }
    }
    else
    {
      v53 = v371;
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v51 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
        goto LABEL_59;
      v51 = sub_22F10CF48(v51);
      if (!v51)
        goto LABEL_59;
      if ((*(_DWORD *)(v51 + 16) & 0x100000) != 0)
        goto LABEL_341;
    }
    v50 = *(_QWORD *)(v51 + 32);
LABEL_59:
    v54 = sub_22F32D524(v47, v37, v50, 1, v0[4], 0);
    if ((v54 & 1) != 0)
      goto LABEL_74;
    v55 = sub_22EB1A358(*(_QWORD *)v0, v54 & 0xFFFFFFFFFFFFFFFELL, 0);
    if ((v55 & 1) != 0)
      goto LABEL_74;
    v347 = v48;
    v56 = (_DWORD *)(v55 & 0xFFFFFFFFFFFFFFFELL);
    if (*(unsigned __int8 *)(v55 & 0xFFFFFFFFFFFFFFFELL) == 153)
      *v56 |= 0x2000000u;
    v57 = sub_22EF5B848(*(_QWORD *)(*(_QWORD *)v0 + 88), v14, 0);
    v58 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    v344 = sub_22EF579A8(v58, v57, v0[4]);
    v59 = v14;
    v60 = v0[4];
    v61 = sub_22E3CD3D4(v58 + 2032, 48, 3);
    v341 = v60;
    v342 = v60 | (v60 << 32);
    v339 = v60;
    v62 = v59;
    v63 = sub_22F062704(v61, v57, 0, 1, (uint64_t)v56, 0, (uint64_t)v344, 0, v339, SHIDWORD(v339), v341, v342);
    v64 = sub_22EB2941C(*(_QWORD **)v0, 0, v0[4], 5, v63 & 0xFFFFFFFFFFFFFFFELL);
    v53 = v371;
    v48 = v347;
    if ((v64 & 1) != 0
      || v62 != v371
      && (v64 = sub_22EB2941C(*(_QWORD **)v0, 0, v0[4], 5, v64 & 0xFFFFFFFFFFFFFFFELL), (v64 & 1) != 0))
    {
LABEL_74:
      if (v48)
      {
        *(_QWORD *)(v47 + 216) = v48;
        *(_QWORD *)(v47 + 3200) = v365;
        *(_QWORD *)(v47 + 10288) = v359;
        *(_DWORD *)(v47 + 1944) = v354;
        *(_DWORD *)(v47 + 2192) = v350;
      }
      v77 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v78 = *(_QWORD *)(v77 + 16392);
      v397 = *(int **)(v77 + 16816);
      v398 = (_QWORD *)v53;
      *(_WORD *)__src = 0;
      __src[2] &= 0xFCu;
      *(_OWORD *)&__src[4] = 0uLL;
      *(_OWORD *)&__src[24] = 0u;
      v384 = 0u;
      v385 = 0u;
      v386 = 0;
      v79 = sub_22EF63D8C(v77, v78, (uint64_t *)&v397, 2uLL, (__int128 *)__src, 0);
      v80 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(*(_QWORD *)v0 + 88) + 15192), "store_return_value", 0x12uLL);
      v81 = v0[4];
      v380 = v80;
      v381 = v81;
      sub_22EFC6D6C((uint64_t)&v382, v80);
      v82 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v83 = sub_22EF579A8(v82, v79, v81);
      v84 = sub_22EFD6AD8(v82, v3, v81, &v380, v79, (uint64_t)v83, 2, 0, 1, 0, v0[4], 0);
      *(_DWORD *)(v84 + 28) &= 0xFFFF9FFF;
      v85 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      memset(__src, 0, 28);
      __src[30] = 0;
      *(_WORD *)&__src[28] = 478;
      v86 = sub_22F37D4D8(v85, __src);
      sub_22EFCA95C(v84, v86);
      v87 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      memset(__src, 0, 30);
      __src[30] = ((((__src[30] >> 7) & 1) << 23) | 0x780000u) >> 16;
      v88 = sub_22F3A5E00(v87, 1, __src);
      sub_22EFCA95C(v84, v88);
      v89 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      if (v84)
        v90 = v84 + 72;
      else
        v90 = 0;
      v91 = v0[4];
      v92 = sub_22E3CB704(*(llvm::StringMapImpl **)(v89 + 15192), "ptr", 3uLL);
      v93 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v94 = *(_QWORD *)(v93 + 16816);
      v95 = sub_22EF579A8(v93, v94, v0[4]);
      v96 = sub_22EFBF080(v89, v90, v91, v91, v92, v94, (uint64_t)v95, 0, 0);
      *(_DWORD *)(v96 + 96) &= 0xF0001FFF;
      v97 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      LODWORD(v92) = v0[4];
      v98 = sub_22E3CB704(*(llvm::StringMapImpl **)(v97 + 15192), "arg", 3uLL);
      v99 = sub_22EF579A8(*(_QWORD *)(*(_QWORD *)v0 + 88), v53, v0[4]);
      v100 = sub_22EFBF080(v97, v90, v92, v92, v98, v53, (uint64_t)v99, 0, 0);
      *(_DWORD *)(v100 + 96) = *(_DWORD *)(v100 + 96) & 0xF0001FFF | 0x100000;
      if (!v84 || (v101 = v84, (*(_DWORD *)(v84 + 28) & 0x7F) != 0x53))
      {
        v102 = *(_QWORD *)(v84 + 16);
        v103 = v102 & 0xFFFFFFFFFFFFFFF8;
        if ((v102 & 4) != 0)
          v103 = *(_QWORD *)v103;
        for (j = *(_WORD *)(v103 + 8) & 0x7F; j != 83; j = *(_WORD *)(v103 + 8) & 0x7F)
        {
          v105 = -40;
          if (j > 70)
          {
            if (j == 71)
            {
              v105 = -56;
            }
            else if (j != 81)
            {
              goto LABEL_94;
            }
          }
          else
          {
            if (j > 0x18)
              goto LABEL_93;
            if (j == 16)
              goto LABEL_87;
            if (((1 << j) & 0x1066) != 0)
              goto LABEL_100;
            if (j == 24)
            {
LABEL_87:
              v105 = -48;
            }
            else
            {
LABEL_93:
              if (j != 70)
              {
LABEL_94:
                v106 = j - 52;
                if ((j - 33) >= 5)
                  v107 = -48;
                else
                  v107 = -64;
                if (v106 >= 6)
                  v105 = v107;
                else
                  v105 = -72;
                goto LABEL_100;
              }
              v105 = -64;
            }
          }
LABEL_100:
          v108 = *(_QWORD *)(v103 + v105 + 16);
          v103 = v108 & 0xFFFFFFFFFFFFFFF8;
          if ((v108 & 4) != 0)
            v103 = *(_QWORD *)v103;
        }
        v101 = v103 - 40;
      }
      v109 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v101 + 88) + 2032, 16, 3);
      *(_QWORD *)(v84 + 120) = v109;
      *v109 = v96;
      v109[1] = v100;
      v110 = *(_QWORD *)v0;
      v111 = *(_QWORD *)(*(_QWORD *)v0 + 216);
      v112 = *(_QWORD *)(*(_QWORD *)v0 + 3200);
      *(_QWORD *)(v110 + 3200) = 0;
      v360 = *(_QWORD *)(v110 + 10288);
      v366 = v112;
      v355 = *(_DWORD *)(v110 + 1944);
      v351 = *(_DWORD *)(v110 + 2192);
      *(_QWORD *)(v110 + 216) = v90;
      *(_QWORD *)(v110 + 10288) = 0;
      *(_DWORD *)(v110 + 1944) = *(_DWORD *)(v110 + 1904);
      *(_DWORD *)(v110 + 2192) = *(_DWORD *)(v110 + 1960);
      v113 = *(_QWORD *)(v96 + 48);
      v114 = *(_QWORD *)(v113 & 0xFFFFFFFFFFFFFFF0);
      if (!v114 || (v115 = *(_DWORD *)(v114 + 16), (v115 & 0xFE) != 0x28))
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v114 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
          goto LABEL_110;
        v114 = sub_22F10CF48(v114);
        if (!v114)
          goto LABEL_110;
        v115 = *(_DWORD *)(v114 + 16);
      }
      if ((v115 & 0x100000) != 0)
      {
        v53 = v371;
        do
        {
          v114 = *(_QWORD *)(*(_QWORD *)(v114 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v114)
          {
            v332 = *(_DWORD *)(v114 + 16);
            if ((v332 & 0xFE) == 0x28)
              continue;
          }
          v114 = sub_22F10CF48(v114);
          v332 = *(_DWORD *)(v114 + 16);
        }
        while ((v332 & 0x100000) != 0);
      }
      v113 = *(_QWORD *)(v114 + 32);
LABEL_110:
      v116 = sub_22F32D524(v110, v96, v113, 1, v0[4], 0);
      if ((v116 & 1) != 0)
        goto LABEL_145;
      v117 = sub_22EB1A358(*(_QWORD *)v0, v116 & 0xFFFFFFFFFFFFFFFELL, 0);
      if ((v117 & 1) != 0)
        goto LABEL_145;
      v348 = v111;
      v118 = *(_QWORD *)v0;
      v119 = *(_QWORD *)(v100 + 48);
      v120 = *(_QWORD *)(v119 & 0xFFFFFFFFFFFFFFF0);
      if (!v120 || (v121 = *(_DWORD *)(v120 + 16), (v121 & 0xFE) != 0x28))
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v120 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
          goto LABEL_115;
        v120 = sub_22F10CF48(v120);
        if (!v120)
          goto LABEL_115;
        v121 = *(_DWORD *)(v120 + 16);
      }
      if ((v121 & 0x100000) != 0)
      {
        v53 = v371;
        do
        {
          v120 = *(_QWORD *)(*(_QWORD *)(v120 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v120)
          {
            v334 = *(_DWORD *)(v120 + 16);
            if ((v334 & 0xFE) == 0x28)
              continue;
          }
          v120 = sub_22F10CF48(v120);
          v334 = *(_DWORD *)(v120 + 16);
        }
        while ((v334 & 0x100000) != 0);
      }
      v119 = *(_QWORD *)(v120 + 32);
LABEL_115:
      v122 = sub_22F32D524(v118, v100, v119, 1, v0[4], 0);
      v111 = v348;
      if ((v122 & 1) != 0)
        goto LABEL_145;
      v123 = *(_QWORD *)(v100 + 48);
      v124 = *(_QWORD *)(v123 & 0xFFFFFFFFFFFFFFF0);
      if (v124 && (v125 = *(_DWORD *)(v124 + 16), (v125 & 0xFE) == 0x28))
      {
        if ((v125 & 0x100000) != 0)
        {
          do
          {
LABEL_119:
            while (1)
            {
              v124 = *(_QWORD *)(*(_QWORD *)(v124 + 32) & 0xFFFFFFFFFFFFFFF0);
              if (!v124)
                break;
              v126 = *(_DWORD *)(v124 + 16);
              if ((v126 & 0xFE) != 0x28)
                break;
              if ((v126 & 0x100000) == 0)
                goto LABEL_129;
            }
            v124 = sub_22F10CF48(v124);
          }
          while ((*(_DWORD *)(v124 + 16) & 0x100000) != 0);
        }
      }
      else
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v124 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
          goto LABEL_137;
        v124 = sub_22F10CF48(v124);
        if (!v124)
          goto LABEL_137;
        if ((*(_DWORD *)(v124 + 16) & 0x100000) != 0)
          goto LABEL_119;
      }
LABEL_129:
      v127 = *(_QWORD *)(v124 + 32);
      v128 = *(_QWORD *)((v127 & 0xFFFFFFFFFFFFFFF0) + 8);
      if ((v128 & 8) != 0)
        v129 = *(_QWORD *)((v128 & 0xFFFFFFFFFFFFFFF0) + 0x18) | v127 & 7 | v128 & 7;
      else
        v129 = v127 & 7 | v128 & 7;
      v130 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v131 = *(_QWORD *)(v130 + 16408);
      if ((v129 & 0xCFFFFFFF8) != 0)
      {
        *(_QWORD *)__src = v129;
        v132 = sub_22E491354((unsigned int *)__src, v131);
        v133 = sub_22EF5DBC4(v130, v132, *(uint64_t *)__src);
        v130 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      }
      else
      {
        v133 = v131 | v129 & 7;
      }
      v134 = sub_22EF5F8C4(v130, v133, 1);
      v135 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v136 = sub_22EF579A8(v135, v134, v0[4]);
      v137 = sub_22F3C5A2C(v135, v133, 1, 2, v122 & 0xFFFFFFFFFFFFFFFELL, 0, (uint64_t)v136, v0[4], v0[4], v0[4] | ((unint64_t)v0[4] << 32));
      v138 = sub_22EB2941C(*(_QWORD **)v0, 0, v0[4], 4, v137 & 0xFFFFFFFFFFFFFFFELL);
      v53 = v371;
      v111 = v348;
      if ((v138 & 1) != 0)
        goto LABEL_145;
      v123 = sub_22EF5B848(*(_QWORD *)(*(_QWORD *)v0 + 88), v127, 0);
      v139 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v140 = sub_22EF579A8(v139, v123, v0[4]);
      v141 = v139;
      v111 = v348;
      v122 = sub_22F3C5A2C(v141, v123, 0, 1, v138 & 0xFFFFFFFFFFFFFFFELL, 0, (uint64_t)v140, v0[4], v0[4], v0[4] | ((unint64_t)v0[4] << 32));
LABEL_137:
      v142 = v0[4];
      v400 = 0;
      v401 = v142;
      v378 = v142 << 32;
      v379 = v142 | ((unint64_t)v142 << 32);
      LODWORD(v397) = 8;
      v398 = 0;
      v399 = v123;
      v402 = 0;
      v377 = (unsigned __int8 *)(v122 & 0xFFFFFFFFFFFFFFFELL);
      sub_22EC395BC(__src, *(_QWORD *)v0, &v397, &v378, &v377, 1, 0, 1);
      if (*(_DWORD *)__src)
      {
        v144 = sub_22EC3DF80((uint64_t)__src, *(_QWORD *)v0, (uint64_t)&v397, (unsigned __int16 *)&v378, &v377, 1, 0, v143);
        v145 = v144;
        if ((v144 & 1) == 0)
        {
          v146 = v144 & 0xFFFFFFFFFFFFFFFELL;
          if ((v144 & 0xFFFFFFFFFFFFFFFELL) != 0 && *(_BYTE *)v146 == 116)
            v145 = *(_QWORD *)(v146 + 24);
          v147 = *((_QWORD *)v0 + 41);
          if (v147)
          {
            sub_22EB4E494(*(_QWORD *)v0, v0[4], v147, 1);
            v148 = *(_QWORD *)(*(_QWORD *)v0 + 88);
            v149 = *((_QWORD *)v0 + 41);
            v376 = v117 & 0xFFFFFFFFFFFFFFFELL;
            v150 = sub_22EF5B848(v148, v123, 0);
            v343 = sub_22EF579A8(*(_QWORD *)(*(_QWORD *)v0 + 88), v123, v0[4]);
            v151 = v148;
            v111 = v348;
            v152 = v149;
            v53 = v371;
            v154 = sub_22F3C554C(v151, 0, v152, 0, 0, 0, 0, v153, (uint64_t)&v376, 1, 0, 0, 0, 0, 1, v145 & 0xFFFFFFFFFFFFFFFELL, v150, (uint64_t)v343, 0,
                     0);
            v155 = *(_QWORD *)(*(_QWORD *)v0 + 88);
            v376 = (unint64_t)v154;
            LODWORD(v150) = v0[4];
            v156 = (unsigned __int8 *)sub_22E3CD3D4(v155 + 2032, 24, 3);
            v157 = sub_22F0D6590(v156, &v376, 1, v150, v150);
            *(_QWORD *)(v84 + 80) &= ~0x8000000uLL;
            *(_QWORD *)(v84 + 128) = v157;
            sub_22F0D60E4((uint64_t)v157);
            *(_DWORD *)(v84 + 140) = v158;
            sub_22EFCCFA0(v3 + 64, v84);
            (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)v0 + 96) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 96), v84);
          }
        }
      }
      sub_22EC3CE2C((uint64_t)__src);
LABEL_145:
      if (v111)
      {
        *(_QWORD *)(v110 + 216) = v111;
        *(_QWORD *)(v110 + 3200) = v366;
        *(_QWORD *)(v110 + 10288) = v360;
        *(_DWORD *)(v110 + 1944) = v355;
        *(_DWORD *)(v110 + 2192) = v351;
      }
      v159 = *v369;
      if (!*v369 || (v160 = *(_DWORD *)(v159 + 16), (v160 & 0xFE) != 0x28))
      {
        v367 = v369;
        v163 = v53;
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v159 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
          goto LABEL_158;
        v159 = sub_22F10CF48(v159);
        v367 = v369;
        v163 = v53;
        if (!v159)
          goto LABEL_158;
        v160 = *(_DWORD *)(v159 + 16);
      }
      v161 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      if ((v160 & 0x100000) != 0)
      {
        do
        {
          while (1)
          {
            v159 = *(_QWORD *)(*(_QWORD *)(v159 + 32) & 0xFFFFFFFFFFFFFFF0);
            if (!v159)
              break;
            v162 = *(_DWORD *)(v159 + 16);
            if ((v162 & 0xFE) != 0x28)
              break;
            if ((v162 & 0x100000) == 0)
              goto LABEL_155;
          }
          v159 = sub_22F10CF48(v159);
        }
        while ((*(_DWORD *)(v159 + 16) & 0x100000) != 0);
      }
LABEL_155:
      v163 = sub_22EF5B848(v161, *(_QWORD *)(v159 + 32), 0);
      v367 = (_QWORD *)(v163 & 0xFFFFFFFFFFFFFFF0);
LABEL_158:
      v164 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v165 = *(_QWORD *)(v164 + 16392);
      v397 = *(int **)(v164 + 16816);
      *(_WORD *)__src = 0;
      __src[2] &= 0xFCu;
      *(_OWORD *)&__src[4] = 0uLL;
      *(_OWORD *)&__src[24] = 0u;
      v384 = 0u;
      v385 = 0u;
      v386 = 0;
      v166 = sub_22EF63D8C(v164, v165, (uint64_t *)&v397, 1uLL, (__int128 *)__src, 0);
      v167 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(*(_QWORD *)v0 + 88) + 15192), "destroy", 7uLL);
      v168 = v0[4];
      v397 = (int *)v167;
      LODWORD(v398) = v168;
      sub_22EFC6D6C((uint64_t)&v399, v167);
      v169 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v170 = sub_22EF579A8(v169, v166, v168);
      v171 = sub_22EFD6AD8(v169, v3, v168, (uint64_t *)&v397, v166, (uint64_t)v170, 2, 0, 1, 0, v0[4], 0);
      *(_DWORD *)(v171 + 28) &= 0xFFFF9FFF;
      v172 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      memset(__src, 0, 28);
      __src[30] = 0;
      *(_WORD *)&__src[28] = 478;
      v173 = sub_22F37D4D8(v172, __src);
      sub_22EFCA95C(v171, v173);
      v174 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      memset(__src, 0, 30);
      __src[30] = ((((__src[30] >> 7) & 1) << 23) | 0x780000u) >> 16;
      v175 = sub_22F3A5E00(v174, 1, __src);
      sub_22EFCA95C(v171, v175);
      v176 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      if (v171)
        v177 = v171 + 72;
      else
        v177 = 0;
      v178 = v0[4];
      v179 = sub_22E3CB704(*(llvm::StringMapImpl **)(v176 + 15192), "ptr", 3uLL);
      v180 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v181 = *(_QWORD *)(v180 + 16816);
      v182 = sub_22EF579A8(v180, v181, v0[4]);
      v183 = sub_22EFBF080(v176, v177, v178, v178, v179, v181, (uint64_t)v182, 0, 0);
      *(_DWORD *)(v183 + 96) &= 0xF0001FFF;
      if (!v171 || (v184 = v171, (*(_DWORD *)(v171 + 28) & 0x7F) != 0x53))
      {
        v185 = *(_QWORD *)(v171 + 16);
        v186 = v185 & 0xFFFFFFFFFFFFFFF8;
        if ((v185 & 4) != 0)
          v186 = *(_QWORD *)v186;
        for (k = *(_WORD *)(v186 + 8) & 0x7F; k != 83; k = *(_WORD *)(v186 + 8) & 0x7F)
        {
          v188 = -40;
          if (k > 70)
          {
            if (k == 71)
            {
              v188 = -56;
            }
            else if (k != 81)
            {
              goto LABEL_176;
            }
          }
          else
          {
            if (k > 0x18)
              goto LABEL_175;
            if (k == 16)
              goto LABEL_169;
            if (((1 << k) & 0x1066) != 0)
              goto LABEL_182;
            if (k == 24)
            {
LABEL_169:
              v188 = -48;
            }
            else
            {
LABEL_175:
              if (k != 70)
              {
LABEL_176:
                v189 = k - 52;
                if ((k - 33) >= 5)
                  v190 = -48;
                else
                  v190 = -64;
                if (v189 >= 6)
                  v188 = v190;
                else
                  v188 = -72;
                goto LABEL_182;
              }
              v188 = -64;
            }
          }
LABEL_182:
          v191 = *(_QWORD *)(v186 + v188 + 16);
          v186 = v191 & 0xFFFFFFFFFFFFFFF8;
          if ((v191 & 4) != 0)
            v186 = *(_QWORD *)v186;
        }
        v184 = v186 - 40;
      }
      v192 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v184 + 88) + 2032, 8, 3);
      *(_QWORD *)(v171 + 120) = v192;
      *v192 = v183;
      v193 = *(_QWORD *)v0;
      v194 = *(_QWORD *)(*(_QWORD *)v0 + 216);
      v195 = *(_QWORD *)(*(_QWORD *)v0 + 3200);
      *(_QWORD *)(v193 + 3200) = 0;
      v356 = *(_QWORD *)(v193 + 10288);
      v361 = v195;
      v352 = *(_DWORD *)(v193 + 1944);
      v349 = *(_DWORD *)(v193 + 2192);
      *(_QWORD *)(v193 + 216) = v177;
      *(_QWORD *)(v193 + 10288) = 0;
      *(_DWORD *)(v193 + 1944) = *(_DWORD *)(v193 + 1904);
      *(_DWORD *)(v193 + 2192) = *(_DWORD *)(v193 + 1960);
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v367 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 45)
      {
        v294 = v0[4];
        v295 = (unsigned __int8 *)sub_22E3CD3D4(*(_QWORD *)(v193 + 88) + 2032, 16, 3);
        *v295 = 8;
        v218 = v371;
        if (byte_255E04EB3)
        {
          v296 = sub_22F0D3748(8);
          ++*((_DWORD *)v296 + 2);
        }
        *((_DWORD *)v295 + 1) = v294;
        *((_DWORD *)v295 + 2) = v294;
        *(_DWORD *)v295 = *v295;
        *(_QWORD *)(v171 + 80) &= ~0x8000000uLL;
        *(_QWORD *)(v171 + 128) = v295;
        sub_22F0D60E4((uint64_t)v295);
        *(_DWORD *)(v171 + 140) = v297;
        goto LABEL_306;
      }
      v196 = *(_QWORD *)(v183 + 48);
      v197 = *(_QWORD *)(v196 & 0xFFFFFFFFFFFFFFF0);
      if (!v197 || (v198 = *(_DWORD *)(v197 + 16), (v198 & 0xFE) != 0x28))
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v197 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
          goto LABEL_193;
        v197 = sub_22F10CF48(v197);
        if (!v197)
          goto LABEL_193;
        v198 = *(_DWORD *)(v197 + 16);
      }
      if ((v198 & 0x100000) != 0)
      {
        do
        {
          v197 = *(_QWORD *)(*(_QWORD *)(v197 + 32) & 0xFFFFFFFFFFFFFFF0);
          if (v197)
          {
            v333 = *(_DWORD *)(v197 + 16);
            if ((v333 & 0xFE) == 0x28)
              continue;
          }
          v197 = sub_22F10CF48(v197);
          v333 = *(_DWORD *)(v197 + 16);
        }
        while ((v333 & 0x100000) != 0);
      }
      v196 = *(_QWORD *)(v197 + 32);
LABEL_193:
      v346 = v194;
      v199 = sub_22F32D524(v193, v183, v196, 1, v0[4], 0);
      v200 = (_DWORD *)(sub_22EB1A358(*(_QWORD *)v0, v199, 0) & 0xFFFFFFFFFFFFFFFELL);
      if (*(unsigned __int8 *)v200 == 153)
        *v200 |= 0x2000000u;
      v201 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v202 = sub_22EF5B848(v201, v163, 0);
      v203 = *(_QWORD *)(*(_QWORD *)v0 + 88);
      v204 = sub_22EF5B848(v203, v163, 0);
      v205 = sub_22EF579A8(v203, v204, v0[4]);
      v206 = v0[4];
      v207 = sub_22E3CD3D4(v201 + 2032, 48, 3);
      sub_22F062704(v207, v202, 0, 1, (uint64_t)v200, 0, (uint64_t)v205, 0, v206, SHIDWORD(v206), v206, v206 | (v206 << 32));
      v208 = sub_22EFC6B40((_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) + 15224), v367[1] | v163 & 7);
      v209 = v0[4];
      v380 = v208;
      v381 = v209;
      sub_22EFC6D6C((uint64_t)&v382, v208);
      v382 = sub_22EF579A8(*(_QWORD *)(*(_QWORD *)v0 + 88), v163, v209);
      memset(__src, 0, 32);
      v210 = sub_22EC225CC(*(_QWORD **)v0, v207, *(_QWORD *)(v207 + 8), v0[4], 1, (uint64_t)__src, 0, 0, (uint64_t)&v380, 0, 0, 0);
      v211 = 0;
      if ((v210 & 1) == 0)
      {
        LOWORD(v340) = 0;
        v212 = sub_22ED199E0(*(_QWORD *)v0, 0, v210 & 0xFFFFFFFFFFFFFFFELL, v0[4], 0, 0, v0[4], 0, v340);
        v211 = 0;
        if ((v212 & 1) == 0)
        {
          v213 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          v378 = v212 & 0xFFFFFFFFFFFFFFFELL;
          v214 = v0[4];
          v215 = (unsigned __int8 *)sub_22E3CD3D4(v213 + 2032, 24, 3);
          v211 = 1;
          v216 = sub_22F0D6590(v215, &v378, 1, v214, v214);
          *(_QWORD *)(v171 + 80) &= ~0x8000000uLL;
          *(_QWORD *)(v171 + 128) = v216;
          sub_22F0D60E4((uint64_t)v216);
          *(_DWORD *)(v171 + 140) = v217;
        }
      }
      v218 = v371;
      v194 = v346;
      if (*(_DWORD *)&__src[28])
        free(*(void **)&__src[16]);
      if ((v211 & 1) == 0)
      {
        if (!v346)
        {
LABEL_203:
          v219 = *v369;
          if (!*v369 || (v220 = *(_DWORD *)(v219 + 16), (v220 & 0xFE) != 0x28))
          {
            if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v219 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
              goto LABEL_214;
            v219 = sub_22F10CF48(v219);
            if (!v219)
              goto LABEL_214;
            v220 = *(_DWORD *)(v219 + 16);
          }
          v221 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          if ((v220 & 0x100000) != 0)
          {
            do
            {
              while (1)
              {
                v219 = *(_QWORD *)(*(_QWORD *)(v219 + 32) & 0xFFFFFFFFFFFFFFF0);
                if (!v219)
                  break;
                v222 = *(_DWORD *)(v219 + 16);
                if ((v222 & 0xFE) != 0x28)
                  break;
                if ((v222 & 0x100000) == 0)
                  goto LABEL_211;
              }
              v219 = sub_22F10CF48(v219);
            }
            while ((*(_DWORD *)(v219 + 16) & 0x100000) != 0);
          }
LABEL_211:
          v218 = sub_22EF5B848(v221, *(_QWORD *)(v219 + 32), 0);
LABEL_214:
          v372 = v218;
          v223 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          v224 = *(_QWORD *)(v223 + 16392);
          v397 = *(int **)(v223 + 16816);
          v225 = sub_22EF5DD84(v223, v224, 13);
          v398 = (_QWORD *)sub_22EF5B848(v223, v225, 0);
          *(_WORD *)__src = 0;
          __src[2] &= 0xFCu;
          *(_OWORD *)&__src[4] = 0uLL;
          *(_OWORD *)&__src[24] = 0u;
          v384 = 0u;
          v385 = 0u;
          v386 = 0;
          v226 = sub_22EF63D8C(v223, v224, (uint64_t *)&v397, 2uLL, (__int128 *)__src, 0);
          v227 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(*(_QWORD *)v0 + 88) + 15192), "copy_from_buffer", 0x10uLL);
          LODWORD(v224) = v0[4];
          v380 = v227;
          v381 = v224;
          sub_22EFC6D6C((uint64_t)&v382, v227);
          v228 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          v229 = sub_22EF579A8(v228, v226, v224);
          v230 = sub_22EFD6AD8(v228, v3, v224, &v380, v226, (uint64_t)v229, 2, 0, 1, 0, v0[4], 0);
          *(_DWORD *)(v230 + 28) &= 0xFFFF9FFF;
          v231 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          memset(__src, 0, 28);
          __src[30] = 0;
          *(_WORD *)&__src[28] = 478;
          v232 = sub_22F37D4D8(v231, __src);
          sub_22EFCA95C(v230, v232);
          v233 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          memset(__src, 0, 30);
          __src[30] = ((((__src[30] >> 7) & 1) << 23) | 0x780000u) >> 16;
          v234 = sub_22F3A5E00(v233, 1, __src);
          sub_22EFCA95C(v230, v234);
          v235 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          if (v230)
            v236 = v230 + 72;
          else
            v236 = 0;
          v237 = v0[4];
          v238 = sub_22E3CB704(*(llvm::StringMapImpl **)(v235 + 15192), "ptr", 3uLL);
          v239 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          v240 = *(_QWORD *)(v239 + 16816);
          v241 = sub_22EF579A8(v239, v240, v0[4]);
          v242 = sub_22EFBF080(v235, v236, v237, v237, v238, v240, (uint64_t)v241, 0, 0);
          *(_DWORD *)(v242 + 96) &= 0xF0001FFF;
          v243 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          v244 = sub_22EF5DD84(v243, *(_QWORD *)(v243 + 16392), 13);
          v245 = sub_22EF5B848(v243, v244, 0);
          v246 = *(_QWORD *)(*(_QWORD *)v0 + 88);
          LODWORD(v240) = v0[4];
          v247 = sub_22E3CB704(*(llvm::StringMapImpl **)(v246 + 15192), "buffer_ptr", 0xAuLL);
          v248 = sub_22EF579A8(*(_QWORD *)(*(_QWORD *)v0 + 88), v245, v0[4]);
          v249 = sub_22EFBF080(v246, v236, v240, v240, v247, v245, (uint64_t)v248, 0, 0);
          *(_DWORD *)(v249 + 96) = *(_DWORD *)(v249 + 96) & 0xF0001FFF | 0x100000;
          if (!v230 || (v250 = v230, (*(_DWORD *)(v230 + 28) & 0x7F) != 0x53))
          {
            v251 = *(_QWORD *)(v230 + 16);
            v252 = v251 & 0xFFFFFFFFFFFFFFF8;
            if ((v251 & 4) != 0)
              v252 = *(_QWORD *)v252;
            for (m = *(_WORD *)(v252 + 8) & 0x7F; m != 83; m = *(_WORD *)(v252 + 8) & 0x7F)
            {
              v254 = -40;
              if (m > 70)
              {
                if (m == 71)
                {
                  v254 = -56;
                }
                else if (m != 81)
                {
                  goto LABEL_232;
                }
              }
              else
              {
                if (m > 0x18)
                  goto LABEL_231;
                if (m == 16)
                  goto LABEL_225;
                if (((1 << m) & 0x1066) != 0)
                  goto LABEL_238;
                if (m == 24)
                {
LABEL_225:
                  v254 = -48;
                }
                else
                {
LABEL_231:
                  if (m != 70)
                  {
LABEL_232:
                    v255 = m - 52;
                    if ((m - 33) >= 5)
                      v256 = -48;
                    else
                      v256 = -64;
                    if (v255 >= 6)
                      v254 = v256;
                    else
                      v254 = -72;
                    goto LABEL_238;
                  }
                  v254 = -64;
                }
              }
LABEL_238:
              v257 = *(_QWORD *)(v252 + v254 + 16);
              v252 = v257 & 0xFFFFFFFFFFFFFFF8;
              if ((v257 & 4) != 0)
                v252 = *(_QWORD *)v252;
            }
            v250 = v252 - 40;
          }
          v258 = (_QWORD *)sub_22E3CD3D4(*(_QWORD *)(v250 + 88) + 2032, 16, 3);
          *(_QWORD *)(v230 + 120) = v258;
          *v258 = v242;
          v258[1] = v249;
          v259 = *(_QWORD *)v0;
          v260 = *(_QWORD *)(*(_QWORD *)v0 + 216);
          v370 = *(_QWORD *)(*(_QWORD *)v0 + 3200);
          *(_QWORD *)(v259 + 3200) = 0;
          v261 = *(_QWORD *)(v259 + 10288);
          v262 = *(_DWORD *)(v259 + 1944);
          v368 = *(_DWORD *)(v259 + 2192);
          *(_QWORD *)(v259 + 216) = v236;
          *(_QWORD *)(v259 + 10288) = 0;
          *(_DWORD *)(v259 + 1944) = *(_DWORD *)(v259 + 1904);
          *(_DWORD *)(v259 + 2192) = *(_DWORD *)(v259 + 1960);
          v263 = *(_QWORD *)(v242 + 48);
          v264 = *(_QWORD *)(v263 & 0xFFFFFFFFFFFFFFF0);
          if (!v264 || (v265 = *(_DWORD *)(v264 + 16), (v265 & 0xFE) != 0x28))
          {
            if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v264 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28)
              goto LABEL_248;
            v264 = sub_22F10CF48(v264);
            if (!v264)
              goto LABEL_248;
            v265 = *(_DWORD *)(v264 + 16);
          }
          if ((v265 & 0x100000) != 0)
          {
            do
            {
              v264 = *(_QWORD *)(*(_QWORD *)(v264 + 32) & 0xFFFFFFFFFFFFFFF0);
              if (v264)
              {
                v331 = *(_DWORD *)(v264 + 16);
                if ((v331 & 0xFE) == 0x28)
                  continue;
              }
              v264 = sub_22F10CF48(v264);
              v331 = *(_DWORD *)(v264 + 16);
            }
            while ((v331 & 0x100000) != 0);
          }
          v263 = *(_QWORD *)(v264 + 32);
LABEL_248:
          v266 = sub_22F32D524(v259, v242, v263, 1, v0[4], 0);
          if ((v266 & 1) != 0
            || (v267 = sub_22EB1A358(*(_QWORD *)v0, v266 & 0xFFFFFFFFFFFFFFFELL, 0), (v267 & 1) != 0))
          {
LABEL_250:
            if (v260)
            {
              *(_QWORD *)(v259 + 216) = v260;
              *(_QWORD *)(v259 + 3200) = v370;
              *(_QWORD *)(v259 + 10288) = v261;
              *(_DWORD *)(v259 + 1944) = v262;
              *(_DWORD *)(v259 + 2192) = v368;
            }
            goto LABEL_252;
          }
          v301 = *(_QWORD *)v0;
          v302 = *(_QWORD *)(v249 + 48);
          v303 = *(_QWORD *)(v302 & 0xFFFFFFFFFFFFFFF0);
          if (!v303 || (v304 = *(_DWORD *)(v303 + 16), (v304 & 0xFE) != 0x28))
          {
            if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v303 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
              || (v364 = *(_QWORD *)v0, v303 = sub_22F10CF48(v303), v301 = v364, !v303))
            {
LABEL_322:
              v305 = sub_22F32D524(v301, v249, v302, 1, v0[4], 0);
              if ((v305 & 1) == 0)
              {
                v306 = sub_22EB1A358(*(_QWORD *)v0, v305 & 0xFFFFFFFFFFFFFFFELL, 0);
                if ((v306 & 1) == 0)
                {
                  if (*(unsigned __int8 *)(v306 & 0xFFFFFFFFFFFFFFFELL) == 153)
                    *(_DWORD *)(v306 & 0xFFFFFFFFFFFFFFFELL) |= 0x2000000u;
                  v307 = *(_QWORD *)(*(_QWORD *)v0 + 88);
                  v362 = v306 & 0xFFFFFFFFFFFFFFFELL;
                  v308 = sub_22EF5DD84(v307, v372, 13);
                  v353 = sub_22EF5B848(v307, v308, 0);
                  v309 = *(_QWORD *)(*(_QWORD *)v0 + 88);
                  v357 = sub_22EF579A8(v309, v353, v0[4]);
                  v310 = v0[4];
                  v311 = sub_22E3CD3D4(v309 + 2032, 48, 3);
                  v312 = sub_22F062704(v311, v353, 0, 1, v362, 0, (uint64_t)v357, 0, v310, SHIDWORD(v310), v310, v310 | (v310 << 32));
                  v313 = sub_22EB2941C(*(_QWORD **)v0, 0, v0[4], 5, v312 & 0xFFFFFFFFFFFFFFFELL);
                  if ((v313 & 1) == 0)
                  {
                    v314 = v0[4];
                    v400 = 0;
                    v401 = v314;
                    v378 = v314 << 32;
                    v379 = v314 | ((unint64_t)v314 << 32);
                    LODWORD(v397) = 8;
                    v398 = 0;
                    v399 = v372;
                    v402 = 0;
                    v377 = (unsigned __int8 *)(v313 & 0xFFFFFFFFFFFFFFFELL);
                    sub_22EC395BC(__src, *(_QWORD *)v0, &v397, &v378, &v377, 1, 0, 1);
                    if (*(_DWORD *)__src)
                    {
                      v316 = sub_22EC3DF80((uint64_t)__src, *(_QWORD *)v0, (uint64_t)&v397, (unsigned __int16 *)&v378, &v377, 1, 0, v315);
                      v317 = v316;
                      if ((v316 & 1) == 0)
                      {
                        v318 = v316 & 0xFFFFFFFFFFFFFFFELL;
                        if ((v316 & 0xFFFFFFFFFFFFFFFELL) != 0 && *(_BYTE *)v318 == 116)
                          v317 = *(_QWORD *)(v318 + 24);
                        v319 = *((_QWORD *)v0 + 41);
                        if (v319)
                        {
                          sub_22EB4E494(*(_QWORD *)v0, v0[4], v319, 1);
                          v320 = *(_QWORD *)(*(_QWORD *)v0 + 88);
                          v321 = *((_QWORD *)v0 + 41);
                          v376 = v267 & 0xFFFFFFFFFFFFFFFELL;
                          v358 = v317 & 0xFFFFFFFFFFFFFFFELL;
                          v363 = v321;
                          v322 = sub_22EF5B848(v320, v372, 0);
                          v323 = sub_22EF579A8(*(_QWORD *)(*(_QWORD *)v0 + 88), v372, v0[4]);
                          v325 = sub_22F3C554C(v320, 0, v363, 0, 0, 0, 0, v324, (uint64_t)&v376, 1, 0, 0, 0, 0, 1, v358, v322, (uint64_t)v323, 0,
                                   0);
                          v326 = *(_QWORD *)(*(_QWORD *)v0 + 88);
                          v376 = (unint64_t)v325;
                          LODWORD(v322) = v0[4];
                          v327 = (unsigned __int8 *)sub_22E3CD3D4(v326 + 2032, 24, 3);
                          v328 = sub_22F0D6590(v327, &v376, 1, v322, v322);
                          *(_QWORD *)(v230 + 80) &= ~0x8000000uLL;
                          *(_QWORD *)(v230 + 128) = v328;
                          sub_22F0D60E4((uint64_t)v328);
                          *(_DWORD *)(v230 + 140) = v329;
                          sub_22EFCCFA0(v3 + 64, v230);
                          (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)v0 + 96) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 96), v230);
                        }
                      }
                    }
                    sub_22EC3CE2C((uint64_t)__src);
                  }
                }
              }
              goto LABEL_250;
            }
            v304 = *(_DWORD *)(v303 + 16);
          }
          if ((v304 & 0x100000) != 0)
          {
            do
            {
              v335 = v301;
              v303 = *(_QWORD *)(*(_QWORD *)(v303 + 32) & 0xFFFFFFFFFFFFFFF0);
              if (!v303 || (v336 = *(_DWORD *)(v303 + 16), (v336 & 0xFE) != 0x28))
              {
                v303 = sub_22F10CF48(v303);
                v336 = *(_DWORD *)(v303 + 16);
              }
              v301 = v335;
            }
            while ((v336 & 0x100000) != 0);
          }
          v302 = *(_QWORD *)(v303 + 32);
          goto LABEL_322;
        }
LABEL_202:
        *(_QWORD *)(v193 + 216) = v194;
        *(_QWORD *)(v193 + 3200) = v361;
        *(_QWORD *)(v193 + 10288) = v356;
        *(_DWORD *)(v193 + 1944) = v352;
        *(_DWORD *)(v193 + 2192) = v349;
        goto LABEL_203;
      }
LABEL_306:
      sub_22EFCCFA0(v3 + 64, v171);
      (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)v0 + 96) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 96), v171);
      if (!v194)
        goto LABEL_203;
      goto LABEL_202;
    }
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*v369 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) != 41
      || *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(sub_22F10ACF8(*v369) & 0xFFFFFFFFFFFFFFF0)
                                                                  + 8) & 0xFFFFFFFFFFFFFFF0)
                                          + 16)
       - 25 < 2)
    {
LABEL_72:
      v71 = sub_22ED358AC(*(_QWORD *)v0, v0[4], v64 & 0xFFFFFFFFFFFFFFFELL, 0);
      if ((v71 & 1) == 0)
      {
        v72 = *(_QWORD *)(*(_QWORD *)v0 + 88);
        *(_QWORD *)__src = v71 & 0xFFFFFFFFFFFFFFFELL;
        v73 = v0[4];
        v74 = (unsigned __int8 *)sub_22E3CD3D4(v72 + 2032, 24, 3);
        v75 = sub_22F0D6590(v74, __src, 1, v73, v73);
        *(_QWORD *)(v25 + 80) &= ~0x8000000uLL;
        *(_QWORD *)(v25 + 128) = v75;
        sub_22F0D60E4((uint64_t)v75);
        *(_DWORD *)(v25 + 140) = v76;
        sub_22EFCCFA0(v3 + 64, v25);
        (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)v0 + 96) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 96), v25);
      }
      goto LABEL_74;
    }
    v345 = *(_QWORD *)(*(_QWORD *)v0 + 88);
    v65 = *v369;
    if (!*v369 || (v66 = *(_DWORD *)(v65 + 16), (v66 & 0xFE) != 0x28))
    {
      v67 = v371;
      if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v65 + 8) & 0xFFFFFFFFFFFFFFF0) + 16) & 0xFE) != 0x28
        || (v65 = sub_22F10CF48(v65), v67 = v371, !v65))
      {
LABEL_71:
        v68 = v64 & 0xFFFFFFFFFFFFFFFELL;
        v69 = sub_22EF579A8(*(_QWORD *)(*(_QWORD *)v0 + 88), v53, v0[4]);
        v70 = v0[4];
        v64 = sub_22E3CD3D4(v345 + 2032, 48, 3);
        v53 = v371;
        sub_22F062704(v64, v67, 2, 5, v68, 0, (uint64_t)v69, 0, v70, SHIDWORD(v70), v70, v70 | (v70 << 32));
        v48 = v347;
        goto LABEL_72;
      }
      v66 = *(_DWORD *)(v65 + 16);
    }
    if ((v66 & 0x100000) != 0)
    {
      v53 = v371;
      do
      {
        v65 = *(_QWORD *)(*(_QWORD *)(v65 + 32) & 0xFFFFFFFFFFFFFFF0);
        if (v65)
        {
          v337 = *(_DWORD *)(v65 + 16);
          if ((v337 & 0xFE) == 0x28)
            continue;
        }
        v65 = sub_22F10CF48(v65);
        v337 = *(_DWORD *)(v65 + 16);
      }
      while ((v337 & 0x100000) != 0);
    }
    v67 = *(_QWORD *)(v65 + 32);
    goto LABEL_71;
  }
LABEL_252:
  (*(void (**)(unint64_t))(*(_QWORD *)v3 + 104))(v3);
  (*(void (**)(_QWORD, unint64_t))(**(_QWORD **)(*(_QWORD *)v0 + 96) + 24))(*(_QWORD *)(*(_QWORD *)v0 + 96), v3);
LABEL_253:
  v373 = v3;
  v397 = v0;
  v398 = &v373;
  v268 = sub_22E9B26E4((uint64_t)&v397, "load_argument", 0xDuLL);
  v269 = sub_22E9B26E4((uint64_t)&v397, "store_return_value", 0x12uLL);
  v270 = sub_22E9B26E4((uint64_t)&v397, "destroy", 7uLL);
  if (v268)
    v271 = v269 == 0;
  else
    v271 = 1;
  v272 = v271 || v270 == 0;
  v273 = !v272;
  if (!v272)
  {
    v274 = v270;
    v275 = *(_QWORD **)v0;
    v276 = sub_22E3CB704(*(llvm::StringMapImpl **)(*(_QWORD *)(*(_QWORD *)v0 + 88) + 15192), "copy_from_buffer", 0x10uLL);
    v277 = v0[4];
    *(_QWORD *)__src = 0;
    *(_QWORD *)&__src[8] = &__src[24];
    *(_QWORD *)&__src[16] = 0x800000000;
    v387 = 0;
    v388 = 0;
    v389 = 0;
    v390 = v275;
    v391 = v276;
    v392 = v277;
    sub_22EFC6D6C((uint64_t)v393, v276);
    v393[1] = 0;
    v393[2] = 0;
    v394 = 0;
    v395 = 1;
    v396 = 1;
    sub_22EC56024((uint64_t)__src);
    LOBYTE(v396) = 0;
    if (v373)
      v278 = v373 + 64;
    else
      v278 = 0;
    v279 = 0;
    if (sub_22EC611AC(*(_QWORD *)v0, __src, v278, 0))
    {
      if ((*(_DWORD *)__src & 0xFFFFFFFE) == 2 && *(_DWORD *)&__src[16])
      {
        v280 = *(_QWORD **)&__src[8];
        v281 = 8 * *(unsigned int *)&__src[16];
        while (1)
        {
          v279 = *v280 & 0xFFFFFFFFFFFFFFFCLL;
          v282 = v279 && (*(_DWORD *)(v279 + 28) & 0x7Eu) - 58 > 0xFFFFFFF9;
          if (v282 || (*(_DWORD *)(v279 + 28) & 0x7F) == 0x1D && (v279 = *(_QWORD *)(v279 + 48)) != 0)
          {
            v283 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v279 + 120) + 8) + 48) & 0xFFFFFFFFFFFFFFF0);
            if (!v283 || *(_BYTE *)(v283 + 16) != 39)
              v283 = sub_22F10CF48(v283);
            v284 = *(_QWORD *)((*(_QWORD *)(v283 + 32) & 0xFFFFFFFFFFFFFFF0) + 8);
            if ((v284 & 8) != 0 && (*(_QWORD *)((v284 & 0xFFFFFFFFFFFFFFF0) + 0x18) & 0xFFFFF800) == 0x6800)
              break;
          }
          ++v280;
          v281 -= 8;
          if (!v281)
            goto LABEL_282;
        }
        sub_22EB4E494(*(_QWORD *)v0, v0[4], v279, 1);
      }
      else
      {
LABEL_282:
        v279 = 0;
      }
    }
    if ((_BYTE)v396)
    {
      if (*(_DWORD *)__src == 5)
      {
        sub_22EC64D18(v390, (uint64_t)__src);
      }
      else if (v388 && (*(_DWORD *)(v390[9] + 52) & 0x400000) != 0)
      {
        sub_22E90B5FC((unint64_t)v390, (uint64_t)__src);
      }
    }
    if (v387)
    {
      v338 = sub_22EC6CBD0(v387);
      MEMORY[0x2348A0E9C](v338, 0x10E0C409F09D3C3);
    }
    if (*(_BYTE **)&__src[8] != &__src[24])
      free(*(void **)&__src[8]);
    v286 = (uint64_t *)*((_QWORD *)v0 + 4);
    v285 = *((_QWORD *)v0 + 5);
    if ((unint64_t)v286 >= v285)
    {
      v288 = (uint64_t *)*((_QWORD *)v0 + 3);
      v289 = ((char *)v286 - (char *)v288) >> 5;
      v290 = v289 + 1;
      if ((unint64_t)(v289 + 1) >> 59)
        abort();
      v291 = v285 - (_QWORD)v288;
      if (v291 >> 4 > v290)
        v290 = v291 >> 4;
      if ((unint64_t)v291 >= 0x7FFFFFFFFFFFFFE0)
        v292 = 0x7FFFFFFFFFFFFFFLL;
      else
        v292 = v290;
      if (v292)
      {
        if (v292 >> 59)
          sub_22E3B3F8C();
        v293 = (char *)operator new(32 * v292);
      }
      else
      {
        v293 = 0;
      }
      v298 = (uint64_t *)&v293[32 * v289];
      *v298 = v268;
      v298[1] = v269;
      v298[2] = v274;
      v298[3] = v279;
      v287 = v298 + 4;
      if (v286 != v288)
      {
        do
        {
          v299 = *((_OWORD *)v286 - 1);
          *((_OWORD *)v298 - 2) = *((_OWORD *)v286 - 2);
          *((_OWORD *)v298 - 1) = v299;
          v298 -= 4;
          v286 -= 4;
        }
        while (v286 != v288);
        v286 = (uint64_t *)*((_QWORD *)v0 + 3);
      }
      *((_QWORD *)v0 + 3) = v298;
      *((_QWORD *)v0 + 4) = v287;
      *((_QWORD *)v0 + 5) = &v293[32 * v292];
      if (v286)
        operator delete(v286);
    }
    else
    {
      *v286 = v268;
      v286[1] = v269;
      v287 = v286 + 4;
      v286[2] = v274;
      v286[3] = v279;
    }
    *((_QWORD *)v0 + 4) = v287;
  }
  return v273;
}

